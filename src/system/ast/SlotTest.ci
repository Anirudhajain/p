
#define SLOT_SLOT_TEST_SETUP \
    Slot_Slot instvariable = new_Slot_Slot(0, L"aVar"); \
    Object result;

/* ========================================================================= */

NEW_TEST(Slot_Slot_eval)
    SLOT_SLOT_TEST_SETUP;

    Type_Class cls = new_Class_named(Type_Object_Class, 
                                     L"TestClass",
                                     create_layout(3, OBJECT, L"aVar", L"bVar", L"cVar"));
    Object o = instantiate(cls);
    ((Type_Object)o)->ivals[0] = (Object)True;
    ((Type_Object)o)->ivals[1] = (Object)False;
    current_env()->home_context->self = o;
    result = Eval((Object)instvariable);
    assert0(result == (Object)True);
}

NEW_TEST(Slot_Slot_assign)
    SLOT_SLOT_TEST_SETUP;

    Type_Class cls = new_Class_named(Type_Object_Class, 
                                     L"TestClass",
                                     create_layout(3, OBJECT, L"aVar", L"bVar", L"cVar"));
    Object o = instantiate(cls);
    ((Type_Object)o)->ivals[0] = (Object)True;
    ((Type_Object)o)->ivals[1] = (Object)False;
    Object i = (Object)new_Number_SmallInt(42);
    current_env()->home_context->self = o;
    Object assign = (Object)new_AST_Assign((Object)instvariable,
                                           (Object)new_AST_Constant(i));
    result = Eval(assign);
    assert0(result == (Object)i);
    assert0(((Type_Object)o)->ivals[0] == i);
    assert0(((Type_Object)o)->ivals[1] == (Object)False);
}

/* ========================================================================= */

TEST_SUITE(Slot_Slot,
{
    RUN_TEST(Slot_Slot_eval);
    RUN_TEST(Slot_Slot_assign);
})

