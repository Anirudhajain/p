// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class BridgeTest_TestCase_Class;
Object BridgeTest_test_Class_Instance;
// Test Method symbol
Type_Symbol BridgeTest_SMB_runTestCase;
Object instancevariable10094;
Object method21543;
Object symbol12334;
Object methodclosure21476;
Object instancevariable10095;
Object method21544;
Object symbol12331;
Object methodclosure21477;
Object send71069;
Object symbol12398;
Object send71070;
Object method21545;
Object symbol12332;
Object methodclosure21478;
Object localvariable11862;
Object array10866;
Object send71071;
Object send71072;
Object method21546;
Object symbol12333;
Object methodclosure21479;
Object classreference9177;
Object classreference9178;
Object instancevariable10096;
Object method21547;
Object symbol12335;
Object methodclosure21480;
Object instancevariable10097;
Object method21548;
Object methodclosure21481;
Object classreference9179;
Object method21549;
Object methodclosure21482;
Object method21550;
Object symbol12330;
Object methodclosure21483;
Object classreference9180;
Object method21551;
Object methodclosure21484;
Object method21552;
Object methodclosure21485;
Object objectlayout4504;
Object instancevariable10098;
Object instancevariable10099;
Object instancevariable10100;
Object instancevariable10101;
Object instancevariable10102;
Object instancevariable10103;
Object instancevariable10104;
Object symbol12386;
Object objectlayout4505;
Object instancevariable10105;
Object class3534;
Object metaclass2736;
Object method21553;
Object symbol12387;
Object methodclosure21486;
Object localvariable11863;
Object array10867;
Object assign8788;
Object method21554;
Object symbol12388;
Object methodclosure21487;
Object method21555;
Object symbol12389;
Object methodclosure21488;
Object localvariable11864;
Object array10868;
Object assign8789;
Object method21556;
Object symbol12390;
Object methodclosure21489;
Object localvariable11865;
Object array10869;
Object assign8790;
Object method21557;
Object methodclosure21490;
Object method21558;
Object methodclosure21491;
Object smallint6402;
Object constant14622;
Object method21559;
Object symbol12391;
Object methodclosure21492;
Object objectlayout4506;
Object instancevariable10106;
Object symbol12342;
Object objectlayout4507;
Object instancevariable10107;
Object class3535;
Object metaclass2737;
Object localvariable11866;
Object array10870;
Object assign8791;
Object method21560;
Object symbol12393;
Object methodclosure21493;
Object method21561;
Object symbol12392;
Object methodclosure21494;
Object method21562;
Object methodclosure21495;
Object smallint6403;
Object constant14623;
Object super997;
Object send71073;
Object method21563;
Object methodclosure21496;
Object localvariable11867;
Object array10871;
Object assign8792;
Object method21564;
Object methodclosure21497;
Object classreference9181;
Object method21565;
Object methodclosure21498;
Object method21566;
Object methodclosure21499;
Object objectlayout4508;
Object instancevariable10108;
Object instancevariable10109;
Object instancevariable10110;
Object instancevariable10111;
Object instancevariable10112;
Object instancevariable10113;
Object instancevariable10114;
Object symbol12344;
Object objectlayout4509;
Object instancevariable10115;
Object instancevariable10116;
Object instancevariable10117;
Object class3536;
Object metaclass2738;
Object smallint6404;
Object constant14624;
Object assign8793;
Object method21567;
Object symbol12395;
Object methodclosure21500;
Object method21568;
Object symbol12396;
Object methodclosure21501;
Object localvariable11868;
Object array10872;
Object assign8794;
Object method21569;
Object symbol12397;
Object methodclosure21502;
Object string7045;
Object constant14625;
Object method21570;
Object symbol12394;
Object methodclosure21503;
Object method21571;
Object methodclosure21504;
Object method21572;
Object methodclosure21505;
Object localvariable11869;
Object array10873;
Object assign8795;
Object method21573;
Object methodclosure21506;
Object localvariable11870;
Object array10874;
Object assign8796;
Object method21574;
Object methodclosure21507;
Object method21575;
Object methodclosure21508;
Object localvariable11871;
Object array10875;
Object assign8797;
Object method21576;
Object methodclosure21509;
Object classreference9182;
Object classreference9183;
Object method21577;
Object methodclosure21510;
Object method21578;
Object methodclosure21511;
Object objectlayout4510;
Object instancevariable10118;
Object instancevariable10119;
Object instancevariable10120;
Object instancevariable10121;
Object instancevariable10122;
Object symbol12341;
Object class3537;
Object metaclass2739;
Object method21579;
Object symbol12360;
Object methodclosure21512;
Object symbol12399;
Object send71074;
Object method21580;
Object symbol12380;
Object methodclosure21513;
Object localvariable11872;
Object localvariable11873;
Object localvariable11874;
Object array10876;
Object send71075;
Object send71076;
Object method21581;
Object symbol12349;
Object methodclosure21514;
Object localvariable11875;
Object array10877;
Object smallint6405;
Object constant14626;
Object send71077;
Object method21582;
Object symbol12377;
Object methodclosure21515;
Object smallint6406;
Object constant14627;
Object smallint6407;
Object constant14628;
Object send71078;
Object method21583;
Object symbol12369;
Object methodclosure21516;
Object localvariable11876;
Object array10878;
Object send71079;
Object assign8798;
Object smallint6408;
Object constant14629;
Object send71080;
Object symbol12367;
Object send71081;
Object smallint6409;
Object constant14630;
Object send71082;
Object send71083;
Object send71084;
Object send71085;
Object send71086;
Object smallint6410;
Object constant14631;
Object send71087;
Object send71088;
Object smallint6411;
Object constant14632;
Object send71089;
Object send71090;
Object send71091;
Object smallint6412;
Object constant14633;
Object send71092;
Object send71093;
Object method21584;
Object symbol12350;
Object methodclosure21517;
Object smallint6413;
Object constant14634;
Object smallint6414;
Object constant14635;
Object send71094;
Object method21585;
Object symbol12370;
Object methodclosure21518;
Object send71095;
Object method21586;
Object symbol12362;
Object methodclosure21519;
Object character294;
Object constant14636;
Object character295;
Object constant14637;
Object send71096;
Object method21587;
Object symbol12354;
Object methodclosure21520;
Object smallint6415;
Object constant14638;
Object method21588;
Object symbol12382;
Object methodclosure21521;
Object method21589;
Object symbol12379;
Object methodclosure21522;
Object symbol12400;
Object constant14639;
Object method21590;
Object symbol12352;
Object methodclosure21523;
Object symbol12401;
Object constant14640;
Object send71097;
Object method21591;
Object symbol12372;
Object methodclosure21524;
Object smallint6416;
Object constant14641;
Object method21592;
Object symbol12364;
Object methodclosure21525;
Object string7046;
Object constant14642;
Object method21593;
Object symbol12356;
Object methodclosure21526;
Object send71098;
Object send71099;
Object send71100;
Object send71101;
Object send71102;
Object method21594;
Object symbol12384;
Object methodclosure21527;
Object variable773;
Object array10879;
Object smallint6417;
Object constant14643;
Object smallint6418;
Object constant14644;
Object send71103;
Object smallint6419;
Object constant14645;
Object send71104;
Object block4602;
Object smallint6420;
Object constant14646;
Object send71105;
Object block4603;
Object send71106;
Object block4604;
Object send71107;
Object method21595;
Object symbol12346;
Object methodclosure21528;
Object send71108;
Object method21596;
Object symbol12374;
Object methodclosure21529;
Object method21597;
Object symbol12366;
Object methodclosure21530;
Object character296;
Object constant14647;
Object method21598;
Object symbol12358;
Object methodclosure21531;
Object localvariable11877;
Object array10880;
Object method21599;
Object methodclosure21532;
Object method21600;
Object methodclosure21533;
Object objectlayout4511;
Object instancevariable10123;
Object instancevariable10124;
Object instancevariable10125;
Object instancevariable10126;
Object instancevariable10127;
Object symbol12347;
Object arraylayout53;
Object instancevariable10128;
Object instancevariable10129;
Object instancevariable10130;
Object class3538;
Object metaclass2740;
Object method21601;
Object methodclosure21534;
Object method21602;
Object methodclosure21535;
Object localvariable11878;
Object array10881;
Object assign8799;
Object method21603;
Object methodclosure21536;
Object localvariable11879;
Object array10882;
Object assign8800;
Object method21604;
Object methodclosure21537;
Object method21605;
Object methodclosure21538;
Object localvariable11880;
Object array10883;
Object assign8801;
Object method21606;
Object methodclosure21539;
Object classreference9184;
Object smallint6421;
Object constant14648;
Object send71109;
Object assign8802;
Object smallint6422;
Object constant14649;
Object smallint6423;
Object constant14650;
Object send71110;
Object smallint6424;
Object constant14651;
Object smallint6425;
Object constant14652;
Object send71111;
Object smallint6426;
Object constant14653;
Object send71112;
Object smallint6427;
Object constant14654;
Object send71113;
Object send71114;
Object smallint6428;
Object constant14655;
Object send71115;
Object smallint6429;
Object constant14656;
Object send71116;
Object send71117;
Object localvariable11881;
Object array10884;
Object smallint6430;
Object constant14657;
Object send71118;
Object smallint6431;
Object constant14658;
Object send71119;
Object smallint6432;
Object constant14659;
Object send71120;
Object block4605;
Object send71121;
Object send71122;
Object smallint6433;
Object constant14660;
Object send71123;
Object send71124;
Object send71125;
Object smallint6434;
Object constant14661;
Object send71126;
Object send71127;
Object send71128;
Object smallint6435;
Object constant14662;
Object send71129;
Object send71130;
Object send71131;
Object send71132;
Object send71133;
Object smallint6436;
Object constant14663;
Object send71134;
Object send71135;
Object send71136;
Object send71137;
Object smallint6437;
Object constant14664;
Object send71138;
Object send71139;
Object method21607;
Object symbol12348;
Object methodclosure21540;
Object string7047;
Object constant14665;
Object string7048;
Object constant14666;
Object send71140;
Object method21608;
Object symbol12376;
Object methodclosure21541;
Object localvariable11882;
Object array10885;
Object send71141;
Object assign8803;
Object localvariable11883;
Object array10886;
Object smallint6438;
Object constant14667;
Object send71142;
Object smallint6439;
Object constant14668;
Object send71143;
Object smallint6440;
Object constant14669;
Object send71144;
Object block4606;
Object send71145;
Object send71146;
Object smallint6441;
Object constant14670;
Object send71147;
Object send71148;
Object send71149;
Object smallint6442;
Object constant14671;
Object send71150;
Object send71151;
Object send71152;
Object smallint6443;
Object constant14672;
Object send71153;
Object send71154;
Object send71155;
Object send71156;
Object send71157;
Object send71158;
Object send71159;
Object method21609;
Object symbol12368;
Object methodclosure21542;
Object string7049;
Object constant14673;
Object string7050;
Object constant14674;
Object send71160;
Object method21610;
Object symbol12361;
Object methodclosure21543;
Object constant14675;
Object constant14676;
Object send71161;
Object method21611;
Object symbol12353;
Object methodclosure21544;
Object send71162;
Object send71163;
Object send71164;
Object send71165;
Object send71166;
Object send71167;
Object send71168;
Object send71169;
Object send71170;
Object send71171;
Object send71172;
Object send71173;
Object smallint6444;
Object constant14677;
Object send71174;
Object smallint6445;
Object constant14678;
Object send71175;
Object smallint6446;
Object constant14679;
Object send71176;
Object send71177;
Object smallint6447;
Object constant14680;
Object send71178;
Object send71179;
Object send71180;
Object smallint6448;
Object constant14681;
Object send71181;
Object send71182;
Object send71183;
Object smallint6449;
Object constant14682;
Object send71184;
Object send71185;
Object method21612;
Object symbol12381;
Object methodclosure21545;
Object smallint6450;
Object constant14683;
Object smallint6451;
Object constant14684;
Object send71186;
Object method21613;
Object symbol12378;
Object methodclosure21546;
Object method21614;
Object symbol12351;
Object methodclosure21547;
Object localvariable11884;
Object array10887;
Object send71187;
Object assign8804;
Object send71188;
Object smallint6452;
Object constant14685;
Object send71189;
Object send71190;
Object method21615;
Object symbol12343;
Object methodclosure21548;
Object smallint6453;
Object constant14686;
Object smallint6454;
Object constant14687;
Object send71191;
Object method21616;
Object symbol12371;
Object methodclosure21549;
Object constant14688;
Object symbol12402;
Object constant14689;
Object send71192;
Object method21617;
Object symbol12363;
Object methodclosure21550;
Object symbol12403;
Object constant14690;
Object character297;
Object constant14691;
Object send71193;
Object method21618;
Object symbol12355;
Object methodclosure21551;
Object localvariable11885;
Object array10888;
Object send71194;
Object assign8805;
Object localvariable11886;
Object array10889;
Object smallint6455;
Object constant14692;
Object send71195;
Object smallint6456;
Object constant14693;
Object send71196;
Object smallint6457;
Object constant14694;
Object send71197;
Object block4607;
Object send71198;
Object send71199;
Object smallint6458;
Object constant14695;
Object send71200;
Object send71201;
Object send71202;
Object smallint6459;
Object constant14696;
Object send71203;
Object send71204;
Object send71205;
Object smallint6460;
Object constant14697;
Object send71206;
Object send71207;
Object send71208;
Object send71209;
Object send71210;
Object send71211;
Object send71212;
Object method21619;
Object symbol12383;
Object methodclosure21552;
Object smallint6461;
Object constant14698;
Object send71213;
Object send71214;
Object smallint6462;
Object constant14699;
Object send71215;
Object send71216;
Object method21620;
Object symbol12345;
Object methodclosure21553;
Object smallint6463;
Object constant14700;
Object smallint6464;
Object constant14701;
Object send71217;
Object method21621;
Object symbol12373;
Object methodclosure21554;
Object send71218;
Object method21622;
Object symbol12365;
Object methodclosure21555;
Object localvariable11887;
Object array10890;
Object smallint6465;
Object constant14702;
Object assign8806;
Object method21623;
Object symbol12357;
Object methodclosure21556;
Object smallint6466;
Object constant14703;
Object smallint6467;
Object constant14704;
Object send71219;
Object method21624;
Object symbol12385;
Object methodclosure21557;
Object character298;
Object constant14705;
Object string7051;
Object constant14706;
Object send71220;
Object method21625;
Object symbol12375;
Object methodclosure21558;
Object localvariable11888;
Object array10891;
Object symbol12404;
Object send71221;
Object block4608;
Object send71222;
Object method21626;
Object methodclosure21559;
Object smallint6468;
Object constant14707;
Object smallint6469;
Object constant14708;
Object send71223;
Object smallint6470;
Object constant14709;
Object send71224;
Object smallint6471;
Object constant14710;
Object send71225;
Object method21627;
Object symbol12359;
Object methodclosure21560;
Object classreference9185;

void BridgeTest_create_ast() {

// Behavior>>type
instancevariable10094 = (Object)new_AST_InstVariable(0, L"type");
method21543 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10094);
symbol12334 = (Object)new_Type_Symbol_cached(L"type");
methodclosure21476 = (Object)new_Runtime_MethodClosure(method21543);
store_method((Type_Class)Behavior, (Type_Symbol)symbol12334, (Runtime_MethodClosure)methodclosure21476);


// Behavior>>methods
instancevariable10095 = (Object)new_AST_InstVariable(2, L"methods");
method21544 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10095);
symbol12331 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure21477 = (Object)new_Runtime_MethodClosure(method21544);
store_method((Type_Class)Behavior, (Type_Symbol)symbol12331, (Runtime_MethodClosure)methodclosure21477);


// Behavior>>new
send71069 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
symbol12398 = (Object)new_Type_Symbol_cached(L"initialize");
send71070 = (Object)new_AST_Send((Object)send71069, (Object)symbol12398, 0);
method21545 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71070);
symbol12332 = (Object)new_Type_Symbol_cached(L"new");
methodclosure21478 = (Object)new_Runtime_MethodClosure(method21545);
store_method((Type_Class)Behavior, (Type_Symbol)symbol12332, (Runtime_MethodClosure)methodclosure21478);


// Behavior>>new:
localvariable11862 = (Object)new_AST_Variable_named(L"sizeRequested");
array10866 = (Object)new_Type_Array_with(1, (Object)localvariable11862);
send71071 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable11862);
send71072 = (Object)new_AST_Send((Object)send71071, (Object)symbol12398, 0);
method21546 = (Object)new_AST_Method_with((Type_Array)array10866, (Type_Array)empty_Type_Array, 1, send71072);
symbol12333 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure21479 = (Object)new_Runtime_MethodClosure(method21546);
store_method((Type_Class)Behavior, (Type_Symbol)symbol12333, (Runtime_MethodClosure)methodclosure21479);

classreference9177 = (Object)new_Organization_ClassReference((Type_Class)Behavior);
classreference9178 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Class>>package
instancevariable10096 = (Object)new_AST_InstVariable(4, L"package");
method21547 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10096);
symbol12335 = (Object)new_Type_Symbol_cached(L"package");
methodclosure21480 = (Object)new_Runtime_MethodClosure(method21547);
store_method((Type_Class)Class, (Type_Symbol)symbol12335, (Runtime_MethodClosure)methodclosure21480);


// Class>>name
instancevariable10097 = (Object)new_AST_InstVariable(3, L"name");
method21548 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10097);
methodclosure21481 = (Object)new_Runtime_MethodClosure(method21548);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure21481);

classreference9179 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Object>>isNil
method21549 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure21482 = (Object)new_Runtime_MethodClosure(method21549);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure21482);


// Object>>yourself
method21550 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol12330 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure21483 = (Object)new_Runtime_MethodClosure(method21550);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol12330, (Runtime_MethodClosure)methodclosure21483);

classreference9180 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Object>>isNil
method21551 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure21484 = (Object)new_Runtime_MethodClosure(method21551);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure21484);


// Object>>yourself
method21552 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure21485 = (Object)new_Runtime_MethodClosure(method21552);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol12330, (Runtime_MethodClosure)methodclosure21485);

objectlayout4504 = (Object)create_type_with_vars(Type_ObjectLayout, 7);
instancevariable10098 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout4504)->values[0] = instancevariable10098;
instancevariable10099 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout4504)->values[1] = instancevariable10099;
instancevariable10100 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout4504)->values[2] = instancevariable10100;
instancevariable10101 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout4504)->values[3] = instancevariable10101;
instancevariable10102 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout4504)->values[4] = instancevariable10102;
instancevariable10103 = (Object)new_AST_InstVariable(5, L"a");
((Type_Array)objectlayout4504)->values[5] = instancevariable10103;
instancevariable10104 = (Object)new_AST_InstVariable(6, L"b");
((Type_Array)objectlayout4504)->values[6] = instancevariable10104;
symbol12386 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout4505 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable10105 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout4505)->values[0] = instancevariable10105;
class3534 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout4505, objectlayout4504);
((Type_Class)class3534)->name = (Type_Symbol)symbol12386;
metaclass2736 = (Object)HEADER(class3534);

// a PMetaclass P#SuperClassTestClass>>a
method21553 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10103);
symbol12387 = (Object)new_Type_Symbol_cached(L"a");
methodclosure21486 = (Object)new_Runtime_MethodClosure(method21553);
store_method((Type_Class)metaclass2736, (Type_Symbol)symbol12387, (Runtime_MethodClosure)methodclosure21486);


// a PMetaclass P#SuperClassTestClass>>a:
localvariable11863 = (Object)new_AST_Variable_named(L"anObject");
array10867 = (Object)new_Type_Array_with(1, (Object)localvariable11863);
assign8788 = (Object)new_AST_Assign((Object)instancevariable10103, (Object)localvariable11863);
method21554 = (Object)new_AST_Method_with((Type_Array)array10867, (Type_Array)empty_Type_Array, 2, assign8788, Self);
symbol12388 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure21487 = (Object)new_Runtime_MethodClosure(method21554);
store_method((Type_Class)metaclass2736, (Type_Symbol)symbol12388, (Runtime_MethodClosure)methodclosure21487);


// a PMetaclass P#SuperClassTestClass>>b
method21555 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10104);
symbol12389 = (Object)new_Type_Symbol_cached(L"b");
methodclosure21488 = (Object)new_Runtime_MethodClosure(method21555);
store_method((Type_Class)metaclass2736, (Type_Symbol)symbol12389, (Runtime_MethodClosure)methodclosure21488);


// a PMetaclass P#SuperClassTestClass>>b:
localvariable11864 = (Object)new_AST_Variable_named(L"anObject");
array10868 = (Object)new_Type_Array_with(1, (Object)localvariable11864);
assign8789 = (Object)new_AST_Assign((Object)instancevariable10104, (Object)localvariable11864);
method21556 = (Object)new_AST_Method_with((Type_Array)array10868, (Type_Array)empty_Type_Array, 2, assign8789, Self);
symbol12390 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure21489 = (Object)new_Runtime_MethodClosure(method21556);
store_method((Type_Class)metaclass2736, (Type_Symbol)symbol12390, (Runtime_MethodClosure)methodclosure21489);


// SuperClassTestClass>>a:
localvariable11865 = (Object)new_AST_Variable_named(L"anObject");
array10869 = (Object)new_Type_Array_with(1, (Object)localvariable11865);
assign8790 = (Object)new_AST_Assign((Object)instancevariable10105, (Object)localvariable11865);
method21557 = (Object)new_AST_Method_with((Type_Array)array10869, (Type_Array)empty_Type_Array, 2, assign8790, Self);
methodclosure21490 = (Object)new_Runtime_MethodClosure(method21557);
store_method((Type_Class)class3534, (Type_Symbol)symbol12388, (Runtime_MethodClosure)methodclosure21490);


// SuperClassTestClass>>a
method21558 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10105);
methodclosure21491 = (Object)new_Runtime_MethodClosure(method21558);
store_method((Type_Class)class3534, (Type_Symbol)symbol12387, (Runtime_MethodClosure)methodclosure21491);


// SuperClassTestClass>>test
smallint6402 = (Object)new_Type_SmallInt(10);
constant14622 = (Object)new_AST_Constant((Object)smallint6402);
method21559 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14622);
symbol12391 = (Object)new_Type_Symbol_cached(L"test");
methodclosure21492 = (Object)new_Runtime_MethodClosure(method21559);
store_method((Type_Class)class3534, (Type_Symbol)symbol12391, (Runtime_MethodClosure)methodclosure21492);

objectlayout4506 = (Object)create_type_with_vars(Type_ObjectLayout, 8);
((Type_Array)objectlayout4506)->values[0] = instancevariable10098;
((Type_Array)objectlayout4506)->values[1] = instancevariable10099;
((Type_Array)objectlayout4506)->values[2] = instancevariable10100;
((Type_Array)objectlayout4506)->values[3] = instancevariable10101;
((Type_Array)objectlayout4506)->values[4] = instancevariable10102;
((Type_Array)objectlayout4506)->values[5] = instancevariable10103;
((Type_Array)objectlayout4506)->values[6] = instancevariable10104;
instancevariable10106 = (Object)new_AST_InstVariable(7, L"c");
((Type_Array)objectlayout4506)->values[7] = instancevariable10106;
symbol12342 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout4507 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout4507)->values[0] = instancevariable10105;
instancevariable10107 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout4507)->values[1] = instancevariable10107;
class3535 = (Object)new_Class_withMeta((Object)class3534, objectlayout4507, objectlayout4506);
((Type_Class)class3535)->name = (Type_Symbol)symbol12342;
metaclass2737 = (Object)HEADER(class3535);

// a PMetaclass P#ChildClassTestClass>>c:
localvariable11866 = (Object)new_AST_Variable_named(L"anObject");
array10870 = (Object)new_Type_Array_with(1, (Object)localvariable11866);
assign8791 = (Object)new_AST_Assign((Object)instancevariable10106, (Object)localvariable11866);
method21560 = (Object)new_AST_Method_with((Type_Array)array10870, (Type_Array)empty_Type_Array, 2, assign8791, Self);
symbol12393 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure21493 = (Object)new_Runtime_MethodClosure(method21560);
store_method((Type_Class)metaclass2737, (Type_Symbol)symbol12393, (Runtime_MethodClosure)methodclosure21493);


// a PMetaclass P#ChildClassTestClass>>c
method21561 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10106);
symbol12392 = (Object)new_Type_Symbol_cached(L"c");
methodclosure21494 = (Object)new_Runtime_MethodClosure(method21561);
store_method((Type_Class)metaclass2737, (Type_Symbol)symbol12392, (Runtime_MethodClosure)methodclosure21494);


// ChildClassTestClass>>b
method21562 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10107);
methodclosure21495 = (Object)new_Runtime_MethodClosure(method21562);
store_method((Type_Class)class3535, (Type_Symbol)symbol12389, (Runtime_MethodClosure)methodclosure21495);


// ChildClassTestClass>>test
smallint6403 = (Object)new_Type_SmallInt(10);
constant14623 = (Object)new_AST_Constant((Object)smallint6403);
super997 = (Object)new_AST_Super((Object)symbol12391, 0);
send71073 = (Object)new_AST_Send((Object)constant14623, (Object)SMB__times, 1, (Object)super997);
method21563 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71073);
methodclosure21496 = (Object)new_Runtime_MethodClosure(method21563);
store_method((Type_Class)class3535, (Type_Symbol)symbol12391, (Runtime_MethodClosure)methodclosure21496);


// ChildClassTestClass>>b:
localvariable11867 = (Object)new_AST_Variable_named(L"anObject");
array10871 = (Object)new_Type_Array_with(1, (Object)localvariable11867);
assign8792 = (Object)new_AST_Assign((Object)instancevariable10107, (Object)localvariable11867);
method21564 = (Object)new_AST_Method_with((Type_Array)array10871, (Type_Array)empty_Type_Array, 2, assign8792, Self);
methodclosure21497 = (Object)new_Runtime_MethodClosure(method21564);
store_method((Type_Class)class3535, (Type_Symbol)symbol12390, (Runtime_MethodClosure)methodclosure21497);

classreference9181 = (Object)new_Organization_ClassReference((Type_Class)class3535);

// Object>>isNil
method21565 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure21498 = (Object)new_Runtime_MethodClosure(method21565);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure21498);


// Object>>yourself
method21566 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure21499 = (Object)new_Runtime_MethodClosure(method21566);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol12330, (Runtime_MethodClosure)methodclosure21499);

objectlayout4508 = (Object)create_type_with_vars(Type_ObjectLayout, 7);
instancevariable10108 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout4508)->values[0] = instancevariable10108;
instancevariable10109 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout4508)->values[1] = instancevariable10109;
instancevariable10110 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout4508)->values[2] = instancevariable10110;
instancevariable10111 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout4508)->values[3] = instancevariable10111;
instancevariable10112 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout4508)->values[4] = instancevariable10112;
instancevariable10113 = (Object)new_AST_InstVariable(5, L"classInstVar");
((Type_Array)objectlayout4508)->values[5] = instancevariable10113;
instancevariable10114 = (Object)new_AST_InstVariable(6, L"instVar");
((Type_Array)objectlayout4508)->values[6] = instancevariable10114;
symbol12344 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout4509 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable10115 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout4509)->values[0] = instancevariable10115;
instancevariable10116 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout4509)->values[1] = instancevariable10116;
instancevariable10117 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout4509)->values[2] = instancevariable10117;
class3536 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout4509, objectlayout4508);
((Type_Class)class3536)->name = (Type_Symbol)symbol12344;
metaclass2738 = (Object)HEADER(class3536);

// a PMetaclass P#StandardTestClass>>aClassSideMethodWithInstanceVariables
smallint6404 = (Object)new_Type_SmallInt(100);
constant14624 = (Object)new_AST_Constant((Object)smallint6404);
assign8793 = (Object)new_AST_Assign((Object)instancevariable10113, (Object)constant14624);
method21567 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign8793, instancevariable10113);
symbol12395 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure21500 = (Object)new_Runtime_MethodClosure(method21567);
store_method((Type_Class)metaclass2738, (Type_Symbol)symbol12395, (Runtime_MethodClosure)methodclosure21500);


// a PMetaclass P#StandardTestClass>>instVar
method21568 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10114);
symbol12396 = (Object)new_Type_Symbol_cached(L"instVar");
methodclosure21501 = (Object)new_Runtime_MethodClosure(method21568);
store_method((Type_Class)metaclass2738, (Type_Symbol)symbol12396, (Runtime_MethodClosure)methodclosure21501);


// a PMetaclass P#StandardTestClass>>instVar:
localvariable11868 = (Object)new_AST_Variable_named(L"anObject");
array10872 = (Object)new_Type_Array_with(1, (Object)localvariable11868);
assign8794 = (Object)new_AST_Assign((Object)instancevariable10114, (Object)localvariable11868);
method21569 = (Object)new_AST_Method_with((Type_Array)array10872, (Type_Array)empty_Type_Array, 2, assign8794, Self);
symbol12397 = (Object)new_Type_Symbol_cached(L"instVar:");
methodclosure21502 = (Object)new_Runtime_MethodClosure(method21569);
store_method((Type_Class)metaclass2738, (Type_Symbol)symbol12397, (Runtime_MethodClosure)methodclosure21502);


// a PMetaclass P#StandardTestClass>>aClassSideMethod
string7045 = (Object)new_Type_String(L"a");
constant14625 = (Object)new_AST_Constant((Object)string7045);
method21570 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14625);
symbol12394 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure21503 = (Object)new_Runtime_MethodClosure(method21570);
store_method((Type_Class)metaclass2738, (Type_Symbol)symbol12394, (Runtime_MethodClosure)methodclosure21503);


// StandardTestClass>>b
method21571 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10116);
methodclosure21504 = (Object)new_Runtime_MethodClosure(method21571);
store_method((Type_Class)class3536, (Type_Symbol)symbol12389, (Runtime_MethodClosure)methodclosure21504);


// StandardTestClass>>a
method21572 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10115);
methodclosure21505 = (Object)new_Runtime_MethodClosure(method21572);
store_method((Type_Class)class3536, (Type_Symbol)symbol12387, (Runtime_MethodClosure)methodclosure21505);


// StandardTestClass>>b:
localvariable11869 = (Object)new_AST_Variable_named(L"anObject");
array10873 = (Object)new_Type_Array_with(1, (Object)localvariable11869);
assign8795 = (Object)new_AST_Assign((Object)instancevariable10116, (Object)localvariable11869);
method21573 = (Object)new_AST_Method_with((Type_Array)array10873, (Type_Array)empty_Type_Array, 2, assign8795, Self);
methodclosure21506 = (Object)new_Runtime_MethodClosure(method21573);
store_method((Type_Class)class3536, (Type_Symbol)symbol12390, (Runtime_MethodClosure)methodclosure21506);


// StandardTestClass>>a:
localvariable11870 = (Object)new_AST_Variable_named(L"anObject");
array10874 = (Object)new_Type_Array_with(1, (Object)localvariable11870);
assign8796 = (Object)new_AST_Assign((Object)instancevariable10115, (Object)localvariable11870);
method21574 = (Object)new_AST_Method_with((Type_Array)array10874, (Type_Array)empty_Type_Array, 2, assign8796, Self);
methodclosure21507 = (Object)new_Runtime_MethodClosure(method21574);
store_method((Type_Class)class3536, (Type_Symbol)symbol12388, (Runtime_MethodClosure)methodclosure21507);


// StandardTestClass>>c
method21575 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10117);
methodclosure21508 = (Object)new_Runtime_MethodClosure(method21575);
store_method((Type_Class)class3536, (Type_Symbol)symbol12392, (Runtime_MethodClosure)methodclosure21508);


// StandardTestClass>>c:
localvariable11871 = (Object)new_AST_Variable_named(L"anObject");
array10875 = (Object)new_Type_Array_with(1, (Object)localvariable11871);
assign8797 = (Object)new_AST_Assign((Object)instancevariable10117, (Object)localvariable11871);
method21576 = (Object)new_AST_Method_with((Type_Array)array10875, (Type_Array)empty_Type_Array, 2, assign8797, Self);
methodclosure21509 = (Object)new_Runtime_MethodClosure(method21576);
store_method((Type_Class)class3536, (Type_Symbol)symbol12393, (Runtime_MethodClosure)methodclosure21509);

classreference9182 = (Object)new_Organization_ClassReference((Type_Class)class3536);
classreference9183 = (Object)new_Organization_ClassReference((Type_Class)class3534);

// Object>>isNil
method21577 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure21510 = (Object)new_Runtime_MethodClosure(method21577);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure21510);


// Object>>yourself
method21578 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure21511 = (Object)new_Runtime_MethodClosure(method21578);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol12330, (Runtime_MethodClosure)methodclosure21511);

objectlayout4510 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable10118 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout4510)->values[0] = instancevariable10118;
instancevariable10119 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout4510)->values[1] = instancevariable10119;
instancevariable10120 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout4510)->values[2] = instancevariable10120;
instancevariable10121 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout4510)->values[3] = instancevariable10121;
instancevariable10122 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout4510)->values[4] = instancevariable10122;
symbol12341 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class3537 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout4510);
((Type_Class)class3537)->name = (Type_Symbol)symbol12341;
metaclass2739 = (Object)HEADER(class3537);

// BridgeTest>>tmBooleanFalse
method21579 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol12360 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure21512 = (Object)new_Runtime_MethodClosure(method21579);
store_method((Type_Class)class3537, (Type_Symbol)symbol12360, (Runtime_MethodClosure)methodclosure21512);


// BridgeTest>>tmBooleanNotEquals
symbol12399 = (Object)new_Type_Symbol_cached(L"~=");
send71074 = (Object)new_AST_Send((Object)True_Const, (Object)symbol12399, 1, (Object)False_Const);
method21580 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71074);
symbol12380 = (Object)new_Type_Symbol_cached(L"tmBooleanNotEquals");
methodclosure21513 = (Object)new_Runtime_MethodClosure(method21580);
store_method((Type_Class)class3537, (Type_Symbol)symbol12380, (Runtime_MethodClosure)methodclosure21513);


// BridgeTest>>tmMethodArguments:with:with:
localvariable11872 = (Object)new_AST_Variable_named(L"arg1");
localvariable11873 = (Object)new_AST_Variable_named(L"arg2");
localvariable11874 = (Object)new_AST_Variable_named(L"arg3");
array10876 = (Object)new_Type_Array_with(3, (Object)localvariable11872, (Object)localvariable11873, (Object)localvariable11874);
send71075 = (Object)new_AST_Send((Object)localvariable11872, (Object)SMB__concat, 1, (Object)localvariable11873);
send71076 = (Object)new_AST_Send((Object)send71075, (Object)SMB__concat, 1, (Object)localvariable11874);
method21581 = (Object)new_AST_Method_with((Type_Array)array10876, (Type_Array)empty_Type_Array, 1, send71076);
symbol12349 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure21514 = (Object)new_Runtime_MethodClosure(method21581);
store_method((Type_Class)class3537, (Type_Symbol)symbol12349, (Runtime_MethodClosure)methodclosure21514);


// BridgeTest>>tmMethodArgument:
localvariable11875 = (Object)new_AST_Variable_named(L"arg");
array10877 = (Object)new_Type_Array_with(1, (Object)localvariable11875);
smallint6405 = (Object)new_Type_SmallInt(1);
constant14626 = (Object)new_AST_Constant((Object)smallint6405);
send71077 = (Object)new_AST_Send((Object)localvariable11875, (Object)SMB__plus, 1, (Object)constant14626);
method21582 = (Object)new_AST_Method_with((Type_Array)array10877, (Type_Array)empty_Type_Array, 1, send71077);
symbol12377 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure21515 = (Object)new_Runtime_MethodClosure(method21582);
store_method((Type_Class)class3537, (Type_Symbol)symbol12377, (Runtime_MethodClosure)methodclosure21515);


// BridgeTest>>tmNumberSubtract
smallint6406 = (Object)new_Type_SmallInt(2);
constant14627 = (Object)new_AST_Constant((Object)smallint6406);
smallint6407 = (Object)new_Type_SmallInt(1);
constant14628 = (Object)new_AST_Constant((Object)smallint6407);
send71078 = (Object)new_AST_Send((Object)constant14627, (Object)SMB__minus, 1, (Object)constant14628);
method21583 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71078);
symbol12369 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure21516 = (Object)new_Runtime_MethodClosure(method21583);
store_method((Type_Class)class3537, (Type_Symbol)symbol12369, (Runtime_MethodClosure)methodclosure21516);


// BridgeTest>>tmSuperClass
localvariable11876 = (Object)new_AST_Variable_named(L"instance");
array10878 = (Object)new_Type_Array_with(1, (Object)localvariable11876);
send71079 = (Object)new_AST_Send((Object)classreference9181, (Object)SMB_basicNew, 0);
assign8798 = (Object)new_AST_Assign((Object)localvariable11876, (Object)send71079);
smallint6408 = (Object)new_Type_SmallInt(1);
constant14629 = (Object)new_AST_Constant((Object)smallint6408);
send71080 = (Object)new_AST_Send((Object)localvariable11876, (Object)symbol12388, 1, (Object)constant14629);
symbol12367 = (Object)new_Type_Symbol_cached(L"assert:");
send71081 = (Object)new_AST_Send((Object)localvariable11876, (Object)symbol12387, 0);
smallint6409 = (Object)new_Type_SmallInt(1);
constant14630 = (Object)new_AST_Constant((Object)smallint6409);
send71082 = (Object)new_AST_Send((Object)send71081, (Object)SMB__equal, 1, (Object)constant14630);
send71083 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71082);
send71084 = (Object)new_AST_Send((Object)localvariable11876, (Object)symbol12389, 0);
send71085 = (Object)new_AST_Send((Object)send71084, (Object)SMB__equal, 1, (Object)Nil_Const);
send71086 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71085);
smallint6410 = (Object)new_Type_SmallInt(2);
constant14631 = (Object)new_AST_Constant((Object)smallint6410);
send71087 = (Object)new_AST_Send((Object)localvariable11876, (Object)symbol12390, 1, (Object)constant14631);
send71088 = (Object)new_AST_Send((Object)localvariable11876, (Object)symbol12387, 0);
smallint6411 = (Object)new_Type_SmallInt(1);
constant14632 = (Object)new_AST_Constant((Object)smallint6411);
send71089 = (Object)new_AST_Send((Object)send71088, (Object)SMB__equal, 1, (Object)constant14632);
send71090 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71089);
send71091 = (Object)new_AST_Send((Object)localvariable11876, (Object)symbol12389, 0);
smallint6412 = (Object)new_Type_SmallInt(2);
constant14633 = (Object)new_AST_Constant((Object)smallint6412);
send71092 = (Object)new_AST_Send((Object)send71091, (Object)SMB__equal, 1, (Object)constant14633);
send71093 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71092);
method21584 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array10878, 8, assign8798, send71080, send71083, send71086, send71087, send71090, send71093, Self);
symbol12350 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure21517 = (Object)new_Runtime_MethodClosure(method21584);
store_method((Type_Class)class3537, (Type_Symbol)symbol12350, (Runtime_MethodClosure)methodclosure21517);


// BridgeTest>>tmNumberMult
smallint6413 = (Object)new_Type_SmallInt(2);
constant14634 = (Object)new_AST_Constant((Object)smallint6413);
smallint6414 = (Object)new_Type_SmallInt(3);
constant14635 = (Object)new_AST_Constant((Object)smallint6414);
send71094 = (Object)new_AST_Send((Object)constant14634, (Object)SMB__times, 1, (Object)constant14635);
method21585 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71094);
symbol12370 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure21518 = (Object)new_Runtime_MethodClosure(method21585);
store_method((Type_Class)class3537, (Type_Symbol)symbol12370, (Runtime_MethodClosure)methodclosure21518);


// BridgeTest>>tmBooleanEquals
send71095 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method21586 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71095);
symbol12362 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure21519 = (Object)new_Runtime_MethodClosure(method21586);
store_method((Type_Class)class3537, (Type_Symbol)symbol12362, (Runtime_MethodClosure)methodclosure21519);


// BridgeTest>>tmCharacterEquals
character294 = (Object)new_Type_Character(L'C');
constant14636 = (Object)new_AST_Constant((Object)character294);
character295 = (Object)new_Type_Character(L'C');
constant14637 = (Object)new_AST_Constant((Object)character295);
send71096 = (Object)new_AST_Send((Object)constant14636, (Object)SMB__equal, 1, (Object)constant14637);
method21587 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71096);
symbol12354 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure21520 = (Object)new_Runtime_MethodClosure(method21587);
store_method((Type_Class)class3537, (Type_Symbol)symbol12354, (Runtime_MethodClosure)methodclosure21520);


// BridgeTest>>tmSimpleReturn
smallint6415 = (Object)new_Type_SmallInt(1);
constant14638 = (Object)new_AST_Constant((Object)smallint6415);
method21588 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14638);
symbol12382 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure21521 = (Object)new_Runtime_MethodClosure(method21588);
store_method((Type_Class)class3537, (Type_Symbol)symbol12382, (Runtime_MethodClosure)methodclosure21521);


// BridgeTest>>tmClassSideSuper
method21589 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol12379 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure21522 = (Object)new_Runtime_MethodClosure(method21589);
store_method((Type_Class)class3537, (Type_Symbol)symbol12379, (Runtime_MethodClosure)methodclosure21522);


// BridgeTest>>tmSymbol
symbol12400 = (Object)new_Type_Symbol_cached(L"Symbol");
constant14639 = (Object)new_AST_Constant((Object)symbol12400);
method21590 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14639);
symbol12352 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure21523 = (Object)new_Runtime_MethodClosure(method21590);
store_method((Type_Class)class3537, (Type_Symbol)symbol12352, (Runtime_MethodClosure)methodclosure21523);


// BridgeTest>>tmBooleanSymbolEquals
symbol12401 = (Object)new_Type_Symbol_cached(L"true");
constant14640 = (Object)new_AST_Constant((Object)symbol12401);
send71097 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant14640);
method21591 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71097);
symbol12372 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure21524 = (Object)new_Runtime_MethodClosure(method21591);
store_method((Type_Class)class3537, (Type_Symbol)symbol12372, (Runtime_MethodClosure)methodclosure21524);


// BridgeTest>>tmNumber
smallint6416 = (Object)new_Type_SmallInt(1);
constant14641 = (Object)new_AST_Constant((Object)smallint6416);
method21592 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14641);
symbol12364 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure21525 = (Object)new_Runtime_MethodClosure(method21592);
store_method((Type_Class)class3537, (Type_Symbol)symbol12364, (Runtime_MethodClosure)methodclosure21525);


// BridgeTest>>tmString
string7046 = (Object)new_Type_String(L"String");
constant14642 = (Object)new_AST_Constant((Object)string7046);
method21593 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14642);
symbol12356 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure21526 = (Object)new_Runtime_MethodClosure(method21593);
store_method((Type_Class)class3537, (Type_Symbol)symbol12356, (Runtime_MethodClosure)methodclosure21526);


// BridgeTest>>tmClassSide
send71098 = (Object)new_AST_Send((Object)classreference9180, (Object)SMB_class, 0);
send71099 = (Object)new_AST_Send((Object)send71098, (Object)SMB_class, 0);
send71100 = (Object)new_AST_Send((Object)send71099, (Object)SMB__equal, 1, (Object)classreference9178);
send71101 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71100);
send71102 = (Object)new_AST_Send((Object)classreference9182, (Object)symbol12394, 0);
method21594 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send71101, send71102);
symbol12384 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure21527 = (Object)new_Runtime_MethodClosure(method21594);
store_method((Type_Class)class3537, (Type_Symbol)symbol12384, (Runtime_MethodClosure)methodclosure21527);


// BridgeTest>>tmExtendedReturn
variable773 = (Object)new_AST_Variable_named(L"return");
array10879 = (Object)new_Type_Array_with(1, (Object)variable773);
smallint6417 = (Object)new_Type_SmallInt(1);
constant14643 = (Object)new_AST_Constant((Object)smallint6417);
smallint6418 = (Object)new_Type_SmallInt(2);
constant14644 = (Object)new_AST_Constant((Object)smallint6418);
send71103 = (Object)new_AST_Send((Object)constant14643, (Object)SMB__gt, 1, (Object)constant14644);
smallint6419 = (Object)new_Type_SmallInt(1);
constant14645 = (Object)new_AST_Constant((Object)smallint6419);
send71104 = (Object)new_AST_Send((Object)variable773, (Object)SMB_escape_, 1, (Object)constant14645);
block4602 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send71104);
smallint6420 = (Object)new_Type_SmallInt(2);
constant14646 = (Object)new_AST_Constant((Object)smallint6420);
send71105 = (Object)new_AST_Send((Object)variable773, (Object)SMB_escape_, 1, (Object)constant14646);
block4603 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send71105);
send71106 = (Object)new_AST_Send((Object)send71103, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block4602, (Object)block4603);
block4604 = (Object)new_AST_Block_with((Type_Array)array10879, (Type_Array)empty_Type_Array, 1, 2, send71106, Self);
send71107 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block4604);
method21595 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71107);
symbol12346 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure21528 = (Object)new_Runtime_MethodClosure(method21595);
store_method((Type_Class)class3537, (Type_Symbol)symbol12346, (Runtime_MethodClosure)methodclosure21528);


// BridgeTest>>tmClassInstVar
send71108 = (Object)new_AST_Send((Object)classreference9182, (Object)symbol12395, 0);
method21596 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71108);
symbol12374 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure21529 = (Object)new_Runtime_MethodClosure(method21596);
store_method((Type_Class)class3537, (Type_Symbol)symbol12374, (Runtime_MethodClosure)methodclosure21529);


// BridgeTest>>tmFibonacci
method21597 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol12366 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure21530 = (Object)new_Runtime_MethodClosure(method21597);
store_method((Type_Class)class3537, (Type_Symbol)symbol12366, (Runtime_MethodClosure)methodclosure21530);


// BridgeTest>>tmCharacter
character296 = (Object)new_Type_Character(L'C');
constant14647 = (Object)new_AST_Constant((Object)character296);
method21598 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant14647);
symbol12358 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure21531 = (Object)new_Runtime_MethodClosure(method21598);
store_method((Type_Class)class3537, (Type_Symbol)symbol12358, (Runtime_MethodClosure)methodclosure21531);


// BridgeTest>>tmVariableInstanceCreationSized
localvariable11877 = (Object)new_AST_Variable_named(L"instance");
array10880 = (Object)new_Type_Array_with(1, (Object)localvariable11877);

// Object>>isNil
method21599 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure21532 = (Object)new_Runtime_MethodClosure(method21599);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure21532);


// Object>>yourself
method21600 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure21533 = (Object)new_Runtime_MethodClosure(method21600);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol12330, (Runtime_MethodClosure)methodclosure21533);

objectlayout4511 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable10123 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout4511)->values[0] = instancevariable10123;
instancevariable10124 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout4511)->values[1] = instancevariable10124;
instancevariable10125 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout4511)->values[2] = instancevariable10125;
instancevariable10126 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout4511)->values[3] = instancevariable10126;
instancevariable10127 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout4511)->values[4] = instancevariable10127;
symbol12347 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout53 = (Object)create_type_with_vars(Type_ArrayLayout, 3);
instancevariable10128 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout53)->values[0] = instancevariable10128;
instancevariable10129 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout53)->values[1] = instancevariable10129;
instancevariable10130 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout53)->values[2] = instancevariable10130;
class3538 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout53, objectlayout4511);
((Type_Class)class3538)->name = (Type_Symbol)symbol12347;
metaclass2740 = (Object)HEADER(class3538);

// StandardVariableTestClass>>b
method21601 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10129);
methodclosure21534 = (Object)new_Runtime_MethodClosure(method21601);
store_method((Type_Class)class3538, (Type_Symbol)symbol12389, (Runtime_MethodClosure)methodclosure21534);


// StandardVariableTestClass>>a
method21602 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10128);
methodclosure21535 = (Object)new_Runtime_MethodClosure(method21602);
store_method((Type_Class)class3538, (Type_Symbol)symbol12387, (Runtime_MethodClosure)methodclosure21535);


// StandardVariableTestClass>>b:
localvariable11878 = (Object)new_AST_Variable_named(L"anObject");
array10881 = (Object)new_Type_Array_with(1, (Object)localvariable11878);
assign8799 = (Object)new_AST_Assign((Object)instancevariable10129, (Object)localvariable11878);
method21603 = (Object)new_AST_Method_with((Type_Array)array10881, (Type_Array)empty_Type_Array, 2, assign8799, Self);
methodclosure21536 = (Object)new_Runtime_MethodClosure(method21603);
store_method((Type_Class)class3538, (Type_Symbol)symbol12390, (Runtime_MethodClosure)methodclosure21536);


// StandardVariableTestClass>>a:
localvariable11879 = (Object)new_AST_Variable_named(L"anObject");
array10882 = (Object)new_Type_Array_with(1, (Object)localvariable11879);
assign8800 = (Object)new_AST_Assign((Object)instancevariable10128, (Object)localvariable11879);
method21604 = (Object)new_AST_Method_with((Type_Array)array10882, (Type_Array)empty_Type_Array, 2, assign8800, Self);
methodclosure21537 = (Object)new_Runtime_MethodClosure(method21604);
store_method((Type_Class)class3538, (Type_Symbol)symbol12388, (Runtime_MethodClosure)methodclosure21537);


// StandardVariableTestClass>>c
method21605 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable10130);
methodclosure21538 = (Object)new_Runtime_MethodClosure(method21605);
store_method((Type_Class)class3538, (Type_Symbol)symbol12392, (Runtime_MethodClosure)methodclosure21538);


// StandardVariableTestClass>>c:
localvariable11880 = (Object)new_AST_Variable_named(L"anObject");
array10883 = (Object)new_Type_Array_with(1, (Object)localvariable11880);
assign8801 = (Object)new_AST_Assign((Object)instancevariable10130, (Object)localvariable11880);
method21606 = (Object)new_AST_Method_with((Type_Array)array10883, (Type_Array)empty_Type_Array, 2, assign8801, Self);
methodclosure21539 = (Object)new_Runtime_MethodClosure(method21606);
store_method((Type_Class)class3538, (Type_Symbol)symbol12393, (Runtime_MethodClosure)methodclosure21539);

classreference9184 = (Object)new_Organization_ClassReference((Type_Class)class3538);
smallint6421 = (Object)new_Type_SmallInt(100);
constant14648 = (Object)new_AST_Constant((Object)smallint6421);
send71109 = (Object)new_AST_Send((Object)classreference9184, (Object)SMB_basicNew_, 1, (Object)constant14648);
assign8802 = (Object)new_AST_Assign((Object)localvariable11877, (Object)send71109);
smallint6422 = (Object)new_Type_SmallInt(1);
constant14649 = (Object)new_AST_Constant((Object)smallint6422);
smallint6423 = (Object)new_Type_SmallInt(1);
constant14650 = (Object)new_AST_Constant((Object)smallint6423);
send71110 = (Object)new_AST_Send((Object)localvariable11877, (Object)SMB_at_put_, 2, (Object)constant14649, (Object)constant14650);
smallint6424 = (Object)new_Type_SmallInt(100);
constant14651 = (Object)new_AST_Constant((Object)smallint6424);
smallint6425 = (Object)new_Type_SmallInt(100);
constant14652 = (Object)new_AST_Constant((Object)smallint6425);
send71111 = (Object)new_AST_Send((Object)localvariable11877, (Object)SMB_at_put_, 2, (Object)constant14651, (Object)constant14652);
smallint6426 = (Object)new_Type_SmallInt(1);
constant14653 = (Object)new_AST_Constant((Object)smallint6426);
send71112 = (Object)new_AST_Send((Object)localvariable11877, (Object)SMB_at_, 1, (Object)constant14653);
smallint6427 = (Object)new_Type_SmallInt(1);
constant14654 = (Object)new_AST_Constant((Object)smallint6427);
send71113 = (Object)new_AST_Send((Object)send71112, (Object)SMB__equal, 1, (Object)constant14654);
send71114 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71113);
smallint6428 = (Object)new_Type_SmallInt(100);
constant14655 = (Object)new_AST_Constant((Object)smallint6428);
send71115 = (Object)new_AST_Send((Object)localvariable11877, (Object)SMB_at_, 1, (Object)constant14655);
smallint6429 = (Object)new_Type_SmallInt(100);
constant14656 = (Object)new_AST_Constant((Object)smallint6429);
send71116 = (Object)new_AST_Send((Object)send71115, (Object)SMB__equal, 1, (Object)constant14656);
send71117 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71116);
localvariable11881 = (Object)new_AST_Variable_named(L"receiver");
array10884 = (Object)new_Type_Array_with(1, (Object)localvariable11881);
smallint6430 = (Object)new_Type_SmallInt(1);
constant14657 = (Object)new_AST_Constant((Object)smallint6430);
send71118 = (Object)new_AST_Send((Object)localvariable11881, (Object)symbol12388, 1, (Object)constant14657);
smallint6431 = (Object)new_Type_SmallInt(2);
constant14658 = (Object)new_AST_Constant((Object)smallint6431);
send71119 = (Object)new_AST_Send((Object)localvariable11881, (Object)symbol12390, 1, (Object)constant14658);
smallint6432 = (Object)new_Type_SmallInt(3);
constant14659 = (Object)new_AST_Constant((Object)smallint6432);
send71120 = (Object)new_AST_Send((Object)localvariable11881, (Object)symbol12393, 1, (Object)constant14659);
block4605 = (Object)new_AST_Block_with((Type_Array)array10884, (Type_Array)empty_Type_Array, 1, 3, send71118, send71119, send71120);
send71121 = (Object)new_AST_Send((Object)block4605, (Object)SMB_value_, 1, (Object)localvariable11877);
send71122 = (Object)new_AST_Send((Object)localvariable11877, (Object)symbol12387, 0);
smallint6433 = (Object)new_Type_SmallInt(1);
constant14660 = (Object)new_AST_Constant((Object)smallint6433);
send71123 = (Object)new_AST_Send((Object)send71122, (Object)SMB__equal, 1, (Object)constant14660);
send71124 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71123);
send71125 = (Object)new_AST_Send((Object)localvariable11877, (Object)symbol12389, 0);
smallint6434 = (Object)new_Type_SmallInt(2);
constant14661 = (Object)new_AST_Constant((Object)smallint6434);
send71126 = (Object)new_AST_Send((Object)send71125, (Object)SMB__equal, 1, (Object)constant14661);
send71127 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71126);
send71128 = (Object)new_AST_Send((Object)localvariable11877, (Object)symbol12392, 0);
smallint6435 = (Object)new_Type_SmallInt(3);
constant14662 = (Object)new_AST_Constant((Object)smallint6435);
send71129 = (Object)new_AST_Send((Object)send71128, (Object)SMB__equal, 1, (Object)constant14662);
send71130 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71129);
send71131 = (Object)new_AST_Send((Object)localvariable11877, (Object)symbol12387, 0);
send71132 = (Object)new_AST_Send((Object)localvariable11877, (Object)symbol12389, 0);
send71133 = (Object)new_AST_Send((Object)localvariable11877, (Object)symbol12392, 0);
smallint6436 = (Object)new_Type_SmallInt(1);
constant14663 = (Object)new_AST_Constant((Object)smallint6436);
send71134 = (Object)new_AST_Send((Object)localvariable11877, (Object)SMB_at_, 1, (Object)constant14663);
send71135 = (Object)new_AST_Send((Object)send71133, (Object)SMB__plus, 1, (Object)send71134);
send71136 = (Object)new_AST_Send((Object)send71132, (Object)SMB__plus, 1, (Object)send71135);
send71137 = (Object)new_AST_Send((Object)send71131, (Object)SMB__plus, 1, (Object)send71136);
smallint6437 = (Object)new_Type_SmallInt(100);
constant14664 = (Object)new_AST_Constant((Object)smallint6437);
send71138 = (Object)new_AST_Send((Object)localvariable11877, (Object)SMB_at_, 1, (Object)constant14664);
send71139 = (Object)new_AST_Send((Object)send71137, (Object)SMB__plus, 1, (Object)send71138);
method21607 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array10880, 10, assign8802, send71110, send71111, send71114, send71117, send71121, send71124, send71127, send71130, send71139);
symbol12348 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure21540 = (Object)new_Runtime_MethodClosure(method21607);
store_method((Type_Class)class3537, (Type_Symbol)symbol12348, (Runtime_MethodClosure)methodclosure21540);


// BridgeTest>>tmStringEquals
string7047 = (Object)new_Type_String(L"String");
constant14665 = (Object)new_AST_Constant((Object)string7047);
string7048 = (Object)new_Type_String(L"String");
constant14666 = (Object)new_AST_Constant((Object)string7048);
send71140 = (Object)new_AST_Send((Object)constant14665, (Object)SMB__equal, 1, (Object)constant14666);
method21608 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71140);
symbol12376 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure21541 = (Object)new_Runtime_MethodClosure(method21608);
store_method((Type_Class)class3537, (Type_Symbol)symbol12376, (Runtime_MethodClosure)methodclosure21541);


// BridgeTest>>tmSimpleInstanceCreation
localvariable11882 = (Object)new_AST_Variable_named(L"instance");
array10885 = (Object)new_Type_Array_with(1, (Object)localvariable11882);
send71141 = (Object)new_AST_Send((Object)classreference9182, (Object)SMB_basicNew, 0);
assign8803 = (Object)new_AST_Assign((Object)localvariable11882, (Object)send71141);
localvariable11883 = (Object)new_AST_Variable_named(L"receiver");
array10886 = (Object)new_Type_Array_with(1, (Object)localvariable11883);
smallint6438 = (Object)new_Type_SmallInt(1);
constant14667 = (Object)new_AST_Constant((Object)smallint6438);
send71142 = (Object)new_AST_Send((Object)localvariable11883, (Object)symbol12388, 1, (Object)constant14667);
smallint6439 = (Object)new_Type_SmallInt(2);
constant14668 = (Object)new_AST_Constant((Object)smallint6439);
send71143 = (Object)new_AST_Send((Object)localvariable11883, (Object)symbol12390, 1, (Object)constant14668);
smallint6440 = (Object)new_Type_SmallInt(3);
constant14669 = (Object)new_AST_Constant((Object)smallint6440);
send71144 = (Object)new_AST_Send((Object)localvariable11883, (Object)symbol12393, 1, (Object)constant14669);
block4606 = (Object)new_AST_Block_with((Type_Array)array10886, (Type_Array)empty_Type_Array, 1, 3, send71142, send71143, send71144);
send71145 = (Object)new_AST_Send((Object)block4606, (Object)SMB_value_, 1, (Object)localvariable11882);
send71146 = (Object)new_AST_Send((Object)localvariable11882, (Object)symbol12387, 0);
smallint6441 = (Object)new_Type_SmallInt(1);
constant14670 = (Object)new_AST_Constant((Object)smallint6441);
send71147 = (Object)new_AST_Send((Object)send71146, (Object)SMB__equal, 1, (Object)constant14670);
send71148 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71147);
send71149 = (Object)new_AST_Send((Object)localvariable11882, (Object)symbol12389, 0);
smallint6442 = (Object)new_Type_SmallInt(2);
constant14671 = (Object)new_AST_Constant((Object)smallint6442);
send71150 = (Object)new_AST_Send((Object)send71149, (Object)SMB__equal, 1, (Object)constant14671);
send71151 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71150);
send71152 = (Object)new_AST_Send((Object)localvariable11882, (Object)symbol12392, 0);
smallint6443 = (Object)new_Type_SmallInt(3);
constant14672 = (Object)new_AST_Constant((Object)smallint6443);
send71153 = (Object)new_AST_Send((Object)send71152, (Object)SMB__equal, 1, (Object)constant14672);
send71154 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71153);
send71155 = (Object)new_AST_Send((Object)localvariable11882, (Object)symbol12387, 0);
send71156 = (Object)new_AST_Send((Object)localvariable11882, (Object)symbol12389, 0);
send71157 = (Object)new_AST_Send((Object)send71155, (Object)SMB__plus, 1, (Object)send71156);
send71158 = (Object)new_AST_Send((Object)localvariable11882, (Object)symbol12392, 0);
send71159 = (Object)new_AST_Send((Object)send71157, (Object)SMB__plus, 1, (Object)send71158);
method21609 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array10885, 6, assign8803, send71145, send71148, send71151, send71154, send71159);
symbol12368 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure21542 = (Object)new_Runtime_MethodClosure(method21609);
store_method((Type_Class)class3537, (Type_Symbol)symbol12368, (Runtime_MethodClosure)methodclosure21542);


// BridgeTest>>tmStringNotEquals
string7049 = (Object)new_Type_String(L"String");
constant14673 = (Object)new_AST_Constant((Object)string7049);
string7050 = (Object)new_Type_String(L"gnirtS");
constant14674 = (Object)new_AST_Constant((Object)string7050);
send71160 = (Object)new_AST_Send((Object)constant14673, (Object)symbol12399, 1, (Object)constant14674);
method21610 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71160);
symbol12361 = (Object)new_Type_Symbol_cached(L"tmStringNotEquals");
methodclosure21543 = (Object)new_Runtime_MethodClosure(method21610);
store_method((Type_Class)class3537, (Type_Symbol)symbol12361, (Runtime_MethodClosure)methodclosure21543);


// BridgeTest>>tmSymbolEquals
constant14675 = (Object)new_AST_Constant((Object)symbol12400);
constant14676 = (Object)new_AST_Constant((Object)symbol12400);
send71161 = (Object)new_AST_Send((Object)constant14675, (Object)SMB__equal, 1, (Object)constant14676);
method21611 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71161);
symbol12353 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure21544 = (Object)new_Runtime_MethodClosure(method21611);
store_method((Type_Class)class3537, (Type_Symbol)symbol12353, (Runtime_MethodClosure)methodclosure21544);


// BridgeTest>>tmClassSideSuperSend
send71162 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12388, 1, (Object)Nil_Const);
send71163 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12390, 1, (Object)Nil_Const);
send71164 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12393, 1, (Object)Nil_Const);
send71165 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12387, 0);
send71166 = (Object)new_AST_Send((Object)send71165, (Object)SMB__equal, 1, (Object)Nil_Const);
send71167 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71166);
send71168 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12389, 0);
send71169 = (Object)new_AST_Send((Object)send71168, (Object)SMB__equal, 1, (Object)Nil_Const);
send71170 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71169);
send71171 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12392, 0);
send71172 = (Object)new_AST_Send((Object)send71171, (Object)SMB__equal, 1, (Object)Nil_Const);
send71173 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71172);
smallint6444 = (Object)new_Type_SmallInt(1);
constant14677 = (Object)new_AST_Constant((Object)smallint6444);
send71174 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12388, 1, (Object)constant14677);
smallint6445 = (Object)new_Type_SmallInt(2);
constant14678 = (Object)new_AST_Constant((Object)smallint6445);
send71175 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12390, 1, (Object)constant14678);
smallint6446 = (Object)new_Type_SmallInt(3);
constant14679 = (Object)new_AST_Constant((Object)smallint6446);
send71176 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12393, 1, (Object)constant14679);
send71177 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12387, 0);
smallint6447 = (Object)new_Type_SmallInt(1);
constant14680 = (Object)new_AST_Constant((Object)smallint6447);
send71178 = (Object)new_AST_Send((Object)send71177, (Object)SMB__equal, 1, (Object)constant14680);
send71179 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71178);
send71180 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12389, 0);
smallint6448 = (Object)new_Type_SmallInt(2);
constant14681 = (Object)new_AST_Constant((Object)smallint6448);
send71181 = (Object)new_AST_Send((Object)send71180, (Object)SMB__equal, 1, (Object)constant14681);
send71182 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71181);
send71183 = (Object)new_AST_Send((Object)classreference9181, (Object)symbol12392, 0);
smallint6449 = (Object)new_Type_SmallInt(3);
constant14682 = (Object)new_AST_Constant((Object)smallint6449);
send71184 = (Object)new_AST_Send((Object)send71183, (Object)SMB__equal, 1, (Object)constant14682);
send71185 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71184);
method21612 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send71162, send71163, send71164, send71167, send71170, send71173, send71174, send71175, send71176, send71179, send71182, send71185, Self);
symbol12381 = (Object)new_Type_Symbol_cached(L"tmClassSideSuperSend");
methodclosure21545 = (Object)new_Runtime_MethodClosure(method21612);
store_method((Type_Class)class3537, (Type_Symbol)symbol12381, (Runtime_MethodClosure)methodclosure21545);


// BridgeTest>>tmNumberNotEquals
smallint6450 = (Object)new_Type_SmallInt(1);
constant14683 = (Object)new_AST_Constant((Object)smallint6450);
smallint6451 = (Object)new_Type_SmallInt(2);
constant14684 = (Object)new_AST_Constant((Object)smallint6451);
send71186 = (Object)new_AST_Send((Object)constant14683, (Object)symbol12399, 1, (Object)constant14684);
method21613 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71186);
symbol12378 = (Object)new_Type_Symbol_cached(L"tmNumberNotEquals");
methodclosure21546 = (Object)new_Runtime_MethodClosure(method21613);
store_method((Type_Class)class3537, (Type_Symbol)symbol12378, (Runtime_MethodClosure)methodclosure21546);


// BridgeTest>>tmBooleanTrue
method21614 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol12351 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure21547 = (Object)new_Runtime_MethodClosure(method21614);
store_method((Type_Class)class3537, (Type_Symbol)symbol12351, (Runtime_MethodClosure)methodclosure21547);


// BridgeTest>>tmSuperClassSuperSend
localvariable11884 = (Object)new_AST_Variable_named(L"instance");
array10887 = (Object)new_Type_Array_with(1, (Object)localvariable11884);
send71187 = (Object)new_AST_Send((Object)classreference9181, (Object)SMB_basicNew, 0);
assign8804 = (Object)new_AST_Assign((Object)localvariable11884, (Object)send71187);
send71188 = (Object)new_AST_Send((Object)localvariable11884, (Object)symbol12391, 0);
smallint6452 = (Object)new_Type_SmallInt(100);
constant14685 = (Object)new_AST_Constant((Object)smallint6452);
send71189 = (Object)new_AST_Send((Object)send71188, (Object)SMB__equal, 1, (Object)constant14685);
send71190 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71189);
method21615 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array10887, 3, assign8804, send71190, Self);
symbol12343 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure21548 = (Object)new_Runtime_MethodClosure(method21615);
store_method((Type_Class)class3537, (Type_Symbol)symbol12343, (Runtime_MethodClosure)methodclosure21548);


// BridgeTest>>tmNumberDiv
smallint6453 = (Object)new_Type_SmallInt(4);
constant14686 = (Object)new_AST_Constant((Object)smallint6453);
smallint6454 = (Object)new_Type_SmallInt(2);
constant14687 = (Object)new_AST_Constant((Object)smallint6454);
send71191 = (Object)new_AST_Send((Object)constant14686, (Object)SMB__divide, 1, (Object)constant14687);
method21616 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71191);
symbol12371 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure21549 = (Object)new_Runtime_MethodClosure(method21616);
store_method((Type_Class)class3537, (Type_Symbol)symbol12371, (Runtime_MethodClosure)methodclosure21549);


// BridgeTest>>tmSymbolNotEquals
constant14688 = (Object)new_AST_Constant((Object)symbol12400);
symbol12402 = (Object)new_Type_Symbol_cached(L"lobmyS");
constant14689 = (Object)new_AST_Constant((Object)symbol12402);
send71192 = (Object)new_AST_Send((Object)constant14688, (Object)SMB__equal, 1, (Object)constant14689);
method21617 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71192);
symbol12363 = (Object)new_Type_Symbol_cached(L"tmSymbolNotEquals");
methodclosure21550 = (Object)new_Runtime_MethodClosure(method21617);
store_method((Type_Class)class3537, (Type_Symbol)symbol12363, (Runtime_MethodClosure)methodclosure21550);


// BridgeTest>>tmSymbolCharacterEquals
symbol12403 = (Object)new_Type_Symbol_cached(L"S");
constant14690 = (Object)new_AST_Constant((Object)symbol12403);
character297 = (Object)new_Type_Character(L'S');
constant14691 = (Object)new_AST_Constant((Object)character297);
send71193 = (Object)new_AST_Send((Object)constant14690, (Object)SMB__equal, 1, (Object)constant14691);
method21618 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71193);
symbol12355 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure21551 = (Object)new_Runtime_MethodClosure(method21618);
store_method((Type_Class)class3537, (Type_Symbol)symbol12355, (Runtime_MethodClosure)methodclosure21551);


// BridgeTest>>tmVariableInstanceCreation
localvariable11885 = (Object)new_AST_Variable_named(L"instance");
array10888 = (Object)new_Type_Array_with(1, (Object)localvariable11885);
send71194 = (Object)new_AST_Send((Object)classreference9184, (Object)SMB_basicNew, 0);
assign8805 = (Object)new_AST_Assign((Object)localvariable11885, (Object)send71194);
localvariable11886 = (Object)new_AST_Variable_named(L"receiver");
array10889 = (Object)new_Type_Array_with(1, (Object)localvariable11886);
smallint6455 = (Object)new_Type_SmallInt(1);
constant14692 = (Object)new_AST_Constant((Object)smallint6455);
send71195 = (Object)new_AST_Send((Object)localvariable11886, (Object)symbol12388, 1, (Object)constant14692);
smallint6456 = (Object)new_Type_SmallInt(2);
constant14693 = (Object)new_AST_Constant((Object)smallint6456);
send71196 = (Object)new_AST_Send((Object)localvariable11886, (Object)symbol12390, 1, (Object)constant14693);
smallint6457 = (Object)new_Type_SmallInt(3);
constant14694 = (Object)new_AST_Constant((Object)smallint6457);
send71197 = (Object)new_AST_Send((Object)localvariable11886, (Object)symbol12393, 1, (Object)constant14694);
block4607 = (Object)new_AST_Block_with((Type_Array)array10889, (Type_Array)empty_Type_Array, 1, 3, send71195, send71196, send71197);
send71198 = (Object)new_AST_Send((Object)block4607, (Object)SMB_value_, 1, (Object)localvariable11885);
send71199 = (Object)new_AST_Send((Object)localvariable11885, (Object)symbol12387, 0);
smallint6458 = (Object)new_Type_SmallInt(1);
constant14695 = (Object)new_AST_Constant((Object)smallint6458);
send71200 = (Object)new_AST_Send((Object)send71199, (Object)SMB__equal, 1, (Object)constant14695);
send71201 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71200);
send71202 = (Object)new_AST_Send((Object)localvariable11885, (Object)symbol12389, 0);
smallint6459 = (Object)new_Type_SmallInt(2);
constant14696 = (Object)new_AST_Constant((Object)smallint6459);
send71203 = (Object)new_AST_Send((Object)send71202, (Object)SMB__equal, 1, (Object)constant14696);
send71204 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71203);
send71205 = (Object)new_AST_Send((Object)localvariable11885, (Object)symbol12392, 0);
smallint6460 = (Object)new_Type_SmallInt(3);
constant14697 = (Object)new_AST_Constant((Object)smallint6460);
send71206 = (Object)new_AST_Send((Object)send71205, (Object)SMB__equal, 1, (Object)constant14697);
send71207 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71206);
send71208 = (Object)new_AST_Send((Object)localvariable11885, (Object)symbol12387, 0);
send71209 = (Object)new_AST_Send((Object)localvariable11885, (Object)symbol12389, 0);
send71210 = (Object)new_AST_Send((Object)send71208, (Object)SMB__plus, 1, (Object)send71209);
send71211 = (Object)new_AST_Send((Object)localvariable11885, (Object)symbol12392, 0);
send71212 = (Object)new_AST_Send((Object)send71210, (Object)SMB__plus, 1, (Object)send71211);
method21619 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array10888, 6, assign8805, send71198, send71201, send71204, send71207, send71212);
symbol12383 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure21552 = (Object)new_Runtime_MethodClosure(method21619);
store_method((Type_Class)class3537, (Type_Symbol)symbol12383, (Runtime_MethodClosure)methodclosure21552);


// BridgeTest>>tmClassInstVarAssignment
smallint6461 = (Object)new_Type_SmallInt(10);
constant14698 = (Object)new_AST_Constant((Object)smallint6461);
send71213 = (Object)new_AST_Send((Object)classreference9182, (Object)symbol12397, 1, (Object)constant14698);
send71214 = (Object)new_AST_Send((Object)classreference9182, (Object)symbol12396, 0);
smallint6462 = (Object)new_Type_SmallInt(10);
constant14699 = (Object)new_AST_Constant((Object)smallint6462);
send71215 = (Object)new_AST_Send((Object)send71214, (Object)SMB__equal, 1, (Object)constant14699);
send71216 = (Object)new_AST_Send((Object)Self, (Object)symbol12367, 1, (Object)send71215);
method21620 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send71213, send71216, Self);
symbol12345 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure21553 = (Object)new_Runtime_MethodClosure(method21620);
store_method((Type_Class)class3537, (Type_Symbol)symbol12345, (Runtime_MethodClosure)methodclosure21553);


// BridgeTest>>tmNumberAdd
smallint6463 = (Object)new_Type_SmallInt(1);
constant14700 = (Object)new_AST_Constant((Object)smallint6463);
smallint6464 = (Object)new_Type_SmallInt(1);
constant14701 = (Object)new_AST_Constant((Object)smallint6464);
send71217 = (Object)new_AST_Send((Object)constant14700, (Object)SMB__plus, 1, (Object)constant14701);
method21621 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71217);
symbol12373 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure21554 = (Object)new_Runtime_MethodClosure(method21621);
store_method((Type_Class)class3537, (Type_Symbol)symbol12373, (Runtime_MethodClosure)methodclosure21554);


// BridgeTest>>tmClassReferenceReturn
send71218 = (Object)new_AST_Send((Object)classreference9178, (Object)SMB_name, 0);
method21622 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71218);
symbol12365 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure21555 = (Object)new_Runtime_MethodClosure(method21622);
store_method((Type_Class)class3537, (Type_Symbol)symbol12365, (Runtime_MethodClosure)methodclosure21555);


// BridgeTest>>tmLocalVariable
localvariable11887 = (Object)new_AST_Variable_named(L"a");
array10890 = (Object)new_Type_Array_with(1, (Object)localvariable11887);
smallint6465 = (Object)new_Type_SmallInt(1);
constant14702 = (Object)new_AST_Constant((Object)smallint6465);
assign8806 = (Object)new_AST_Assign((Object)localvariable11887, (Object)constant14702);
method21623 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array10890, 2, assign8806, localvariable11887);
symbol12357 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure21556 = (Object)new_Runtime_MethodClosure(method21623);
store_method((Type_Class)class3537, (Type_Symbol)symbol12357, (Runtime_MethodClosure)methodclosure21556);


// BridgeTest>>tmNumberEquals
smallint6466 = (Object)new_Type_SmallInt(1);
constant14703 = (Object)new_AST_Constant((Object)smallint6466);
smallint6467 = (Object)new_Type_SmallInt(1);
constant14704 = (Object)new_AST_Constant((Object)smallint6467);
send71219 = (Object)new_AST_Send((Object)constant14703, (Object)SMB__equal, 1, (Object)constant14704);
method21624 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71219);
symbol12385 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure21557 = (Object)new_Runtime_MethodClosure(method21624);
store_method((Type_Class)class3537, (Type_Symbol)symbol12385, (Runtime_MethodClosure)methodclosure21557);


// BridgeTest>>tmCharacterStringEquals
character298 = (Object)new_Type_Character(L'C');
constant14705 = (Object)new_AST_Constant((Object)character298);
string7051 = (Object)new_Type_String(L"C");
constant14706 = (Object)new_AST_Constant((Object)string7051);
send71220 = (Object)new_AST_Send((Object)constant14705, (Object)SMB__equal, 1, (Object)constant14706);
method21625 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71220);
symbol12375 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure21558 = (Object)new_Runtime_MethodClosure(method21625);
store_method((Type_Class)class3537, (Type_Symbol)symbol12375, (Runtime_MethodClosure)methodclosure21558);


// BridgeTest>>assert:
localvariable11888 = (Object)new_AST_Variable_named(L"bool");
array10891 = (Object)new_Type_Array_with(1, (Object)localvariable11888);
symbol12404 = (Object)new_Type_Symbol_cached(L"fail");
send71221 = (Object)new_AST_Send((Object)Self, (Object)symbol12404, 0);
block4608 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send71221);
send71222 = (Object)new_AST_Send((Object)localvariable11888, (Object)SMB_ifFalse_, 1, (Object)block4608);
method21626 = (Object)new_AST_Method_with((Type_Array)array10891, (Type_Array)empty_Type_Array, 1, send71222);
methodclosure21559 = (Object)new_Runtime_MethodClosure(method21626);
store_method((Type_Class)class3537, (Type_Symbol)symbol12367, (Runtime_MethodClosure)methodclosure21559);


// BridgeTest>>tmSimpleBasicArithmetik
smallint6468 = (Object)new_Type_SmallInt(1);
constant14707 = (Object)new_AST_Constant((Object)smallint6468);
smallint6469 = (Object)new_Type_SmallInt(2);
constant14708 = (Object)new_AST_Constant((Object)smallint6469);
send71223 = (Object)new_AST_Send((Object)constant14707, (Object)SMB__plus, 1, (Object)constant14708);
smallint6470 = (Object)new_Type_SmallInt(2);
constant14709 = (Object)new_AST_Constant((Object)smallint6470);
send71224 = (Object)new_AST_Send((Object)send71223, (Object)SMB__plus, 1, (Object)constant14709);
smallint6471 = (Object)new_Type_SmallInt(5);
constant14710 = (Object)new_AST_Constant((Object)smallint6471);
send71225 = (Object)new_AST_Send((Object)send71224, (Object)SMB__times, 1, (Object)constant14710);
method21627 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send71225);
symbol12359 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure21560 = (Object)new_Runtime_MethodClosure(method21627);
store_method((Type_Class)class3537, (Type_Symbol)symbol12359, (Runtime_MethodClosure)methodclosure21560);

classreference9185 = (Object)new_Organization_ClassReference((Type_Class)class3537);
}


/* ========================================================================= */

NEW_TEST(BridgeTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object send71226 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12367, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send71226);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object send71227 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12366, 0);
Object result = (Object)Eval((Object)send71227);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object send71228 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12362, 0);
Object result = (Object)Eval((Object)send71228);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object send71229 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12360, 0);
Object result = (Object)Eval((Object)send71229);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanNotEquals)
/*
tmBooleanNotEquals
	^ true ~= false
*/
Object send71230 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12380, 0);
Object result = (Object)Eval((Object)send71230);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
Object send71231 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12372, 0);
Object result = (Object)Eval((Object)send71231);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object send71232 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12351, 0);
Object result = (Object)Eval((Object)send71232);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object send71233 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12358, 0);
Object result = (Object)Eval((Object)send71233);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object send71234 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12354, 0);
Object result = (Object)Eval((Object)send71234);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
Object send71235 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12375, 0);
Object result = (Object)Eval((Object)send71235);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object send71236 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12365, 0);
Object result = (Object)Eval((Object)send71236);
ASSERT_EMPTY_STACK
Object symbol12336 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol12336);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object send71237 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12346, 0);
Object result = (Object)Eval((Object)send71237);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object send71238 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12357, 0);
Object result = (Object)Eval((Object)send71238);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object smallint6472 = (Object)new_Type_SmallInt(1);
Object constant14711 = (Object)new_AST_Constant((Object)smallint6472);
Object send71239 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12377, 1, (Object)constant14711);
Object result = (Object)Eval((Object)send71239);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object string7052 = (Object)new_Type_String(L"asdf");
Object constant14712 = (Object)new_AST_Constant((Object)string7052);
Object string7053 = (Object)new_Type_String(L"asdf");
Object constant14713 = (Object)new_AST_Constant((Object)string7053);
Object string7054 = (Object)new_Type_String(L"df");
Object constant14714 = (Object)new_AST_Constant((Object)string7054);
Object send71240 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12349, 3, (Object)constant14712, (Object)constant14713, (Object)constant14714);
Object result = (Object)Eval((Object)send71240);
ASSERT_EMPTY_STACK
Object string7055 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string7055);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object send71241 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12364, 0);
Object result = (Object)Eval((Object)send71241);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object send71242 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12373, 0);
Object result = (Object)Eval((Object)send71242);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object send71243 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12371, 0);
Object result = (Object)Eval((Object)send71243);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object send71244 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12385, 0);
Object result = (Object)Eval((Object)send71244);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object send71245 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12370, 0);
Object result = (Object)Eval((Object)send71245);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberNotEquals)
/*
tmNumberNotEquals
	^ 1 ~= 2
*/
Object send71246 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12378, 0);
Object result = (Object)Eval((Object)send71246);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object send71247 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12369, 0);
Object result = (Object)Eval((Object)send71247);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
Object send71248 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12359, 0);
Object result = (Object)Eval((Object)send71248);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object send71249 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12382, 0);
Object result = (Object)Eval((Object)send71249);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmString)
/*
tmString
	^ 'String'
*/
Object send71250 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12356, 0);
Object result = (Object)Eval((Object)send71250);
ASSERT_EMPTY_STACK
Object string7056 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string7056);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object send71251 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12376, 0);
Object result = (Object)Eval((Object)send71251);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringNotEquals)
/*
tmStringNotEquals
	^ 'String' ~= 'gnirtS'
*/
Object send71252 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12361, 0);
Object result = (Object)Eval((Object)send71252);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object send71253 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12352, 0);
Object result = (Object)Eval((Object)send71253);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol12400);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
Object send71254 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12355, 0);
Object result = (Object)Eval((Object)send71254);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object send71255 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12353, 0);
Object result = (Object)Eval((Object)send71255);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolNotEquals)
/*
tmSymbolNotEquals
	^ #Symbol = #lobmyS
*/
Object send71256 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12363, 0);
Object result = (Object)Eval((Object)send71256);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVar)
/*
tmClassInstVar
	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
Object send71257 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12374, 0);
Object result = (Object)Eval((Object)send71257);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
	StandardTestClass instVar: 10.
	self assert: StandardTestClass instVar = 10.
*/
Object send71258 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12345, 0);
Object result = (Object)Eval((Object)send71258);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSide)
/*
tmClassSide
	self assert: Object class class = Metaclass.
	^ StandardTestClass aClassSideMethod
*/
Object send71259 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12384, 0);
Object result = (Object)Eval((Object)send71259);
ASSERT_EMPTY_STACK
Object string7057 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string7057);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuper)
/*
tmClassSideSuper
	"TODO create accerssort in: everywhere"
	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
*/
Object send71260 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12379, 0);
Object result = (Object)Eval((Object)send71260);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuperSend)
/*
tmClassSideSuperSend
	ChildClassTestClass a: nil.
	ChildClassTestClass b: nil.
	ChildClassTestClass c: nil.
	
	self assert: ChildClassTestClass a = nil.
	self assert: ChildClassTestClass b = nil.
	self assert: ChildClassTestClass c = nil.
	
	ChildClassTestClass a: 1.
	ChildClassTestClass b: 2.
	ChildClassTestClass c: 3.
	
	self assert: ChildClassTestClass a = 1.
	self assert: ChildClassTestClass b = 2.
	self assert: ChildClassTestClass c = 3.
*/
Object send71261 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12381, 0);
Object result = (Object)Eval((Object)send71261);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send71262 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12368, 0);
Object result = (Object)Eval((Object)send71262);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2
*/
Object send71263 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12350, 0);
Object result = (Object)Eval((Object)send71263);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
	self assert: instance test = 100
*/
Object send71264 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12343, 0);
Object result = (Object)Eval((Object)send71264);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send71265 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12383, 0);
Object result = (Object)Eval((Object)send71265);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 100 put: 100.
	self assert: (instance at: 1) = 1.	"sample"
	self assert: (instance at: 100) = 100.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
Object send71266 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol12348, 0);
Object result = (Object)Eval((Object)send71266);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(BridgeTest,
{
    BridgeTest_create_ast();
    BridgeTest_TestCase_Class =(Type_Class)class3537;
    BridgeTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)BridgeTest_TestCase_Class));

    RUN_TEST(BridgeTest_tmSimpleReturn);
    RUN_TEST(BridgeTest_tmNumberMult);
    RUN_TEST(BridgeTest_tmBooleanSymbolEquals);
    RUN_TEST(BridgeTest_tmString);
    RUN_TEST(BridgeTest_tmSymbolCharacterEquals);
    RUN_TEST(BridgeTest_tmMethodArgument_);
    RUN_TEST(BridgeTest_tmNumberEquals);
    RUN_TEST(BridgeTest_tmClassReferenceReturn);
    RUN_TEST(BridgeTest_tmVariableInstanceCreation);
    RUN_TEST(BridgeTest_tmNumberSubtract);
    RUN_TEST(BridgeTest_tmFibonacci);
    RUN_TEST(BridgeTest_tmBooleanEquals);
    RUN_TEST(BridgeTest_tmBooleanNotEquals);
    RUN_TEST(BridgeTest_tmMethodArguments_with_with_);
    RUN_TEST(BridgeTest_tmNumberAdd);
    RUN_TEST(BridgeTest_tmSimpleBasicArithmetik);
    RUN_TEST(BridgeTest_assert_);
    RUN_TEST(BridgeTest_tmNumberDiv);
    RUN_TEST(BridgeTest_tmStringEquals);
    RUN_TEST(BridgeTest_tmClassSide);
    RUN_TEST(BridgeTest_tmClassSideSuper);
    RUN_TEST(BridgeTest_tmExtendedReturn);
    RUN_TEST(BridgeTest_tmSuperClassSuperSend);
    RUN_TEST(BridgeTest_tmClassInstVar);
    RUN_TEST(BridgeTest_tmSymbol);
    RUN_TEST(BridgeTest_tmNumber);
    RUN_TEST(BridgeTest_tmClassInstVarAssignment);
    RUN_TEST(BridgeTest_tmBooleanFalse);
    RUN_TEST(BridgeTest_tmSimpleInstanceCreation);
    RUN_TEST(BridgeTest_tmLocalVariable);
    RUN_TEST(BridgeTest_tmStringNotEquals);
    RUN_TEST(BridgeTest_tmClassSideSuperSend);
    RUN_TEST(BridgeTest_tmCharacterEquals);
    RUN_TEST(BridgeTest_tmCharacter);
    RUN_TEST(BridgeTest_tmSymbolNotEquals);
    RUN_TEST(BridgeTest_tmBooleanTrue);
    RUN_TEST(BridgeTest_tmCharacterStringEquals);
    RUN_TEST(BridgeTest_tmSymbolEquals);
    RUN_TEST(BridgeTest_tmSuperClass);
    RUN_TEST(BridgeTest_tmVariableInstanceCreationSized);
    RUN_TEST(BridgeTest_tmNumberNotEquals);
})