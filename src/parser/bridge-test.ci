// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class BridgeTest_TestCase_Class;
Object BridgeTest_test_Class_Instance;
// Test Method symbol
Type_Symbol BridgeTest_SMB_runTestCase;
Object send109971;
Object symbol30856;
Object send109972;
Object method31403;
Object symbol30859;
Object methodclosure31309;
Object localvariable18405;
Object array16638;
Object localvariable18406;
Object array16639;
Object variable1229;
Object array16640;
Object symbol30962;
Object send109973;
Object symbol30963;
Object constant23942;
Object send109974;
Object super1730;
Object send109975;
Object block7432;
Object send109976;
Object string11058;
Object constant23943;
Object send109977;
Object send109978;
Object string11059;
Object constant23944;
Object send109979;
Object send109980;
Object assign13888;
Object symbol30964;
Object send109981;
Object symbol30965;
Object send109982;
Object block7433;
Object send109983;
Object method31404;
Object methodclosure31310;
Object localvariable18407;
Object array16641;
Object send109984;
Object send109985;
Object method31405;
Object symbol30861;
Object methodclosure31311;
Object method31406;
Object symbol30858;
Object methodclosure31312;
Object method31407;
Object methodclosure31313;
Object method31408;
Object symbol30860;
Object methodclosure31314;
Object symbol30966;
Object send109986;
Object send109987;
Object method31409;
Object methodclosure31315;
Object classreference11550;
Object localvariable18408;
Object array16642;
Object symbol30881;
Object super1731;
Object symbol30967;
Object string11060;
Object constant23945;
Object send109988;
Object send109989;
Object send109990;
Object method31410;
Object methodclosure31316;
Object instancevariable13988;
Object method31411;
Object symbol30882;
Object methodclosure31317;
Object instancevariable13989;
Object method31412;
Object methodclosure31318;
Object classreference11551;
Object symbol30867;
Object send109991;
Object objectlayout7472;
Object instancevariable13990;
Object instancevariable13991;
Object instancevariable13992;
Object instancevariable13993;
Object instancevariable13994;
Object symbol30888;
Object class5270;
Object metaclass4472;
Object smallint10938;
Object constant23946;
Object smallint10939;
Object constant23947;
Object send109992;
Object method31413;
Object symbol30927;
Object methodclosure31319;
Object smallint10940;
Object constant23948;
Object smallint10941;
Object constant23949;
Object send109993;
Object method31414;
Object symbol30919;
Object methodclosure31320;
Object symbol30968;
Object constant23950;
Object constant23951;
Object send109994;
Object method31415;
Object symbol30900;
Object methodclosure31321;
Object constant23952;
Object method31416;
Object symbol30899;
Object methodclosure31322;
Object symbol30969;
Object constant23953;
Object send109995;
Object method31417;
Object symbol30920;
Object methodclosure31323;
Object localvariable18409;
Object array16643;
Object super1732;
Object symbol30970;
Object send109996;
Object send109997;
Object send109998;
Object method31418;
Object methodclosure31324;
Object classreference11552;
Object send109999;
Object method31419;
Object symbol30912;
Object methodclosure31325;
Object send110000;
Object method31420;
Object symbol30909;
Object methodclosure31326;
Object objectlayout7473;
Object instancevariable13995;
Object instancevariable13996;
Object symbol30891;
Object objectlayout7474;
Object instancevariable13997;
Object instancevariable13998;
Object instancevariable13999;
Object class5271;
Object metaclass4473;
Object localvariable18410;
Object array16644;
Object assign13889;
Object method31421;
Object symbol30961;
Object methodclosure31327;
Object string11061;
Object constant23954;
Object method31422;
Object symbol30958;
Object methodclosure31328;
Object smallint10942;
Object constant23955;
Object assign13890;
Object method31423;
Object symbol30959;
Object methodclosure31329;
Object method31424;
Object symbol30960;
Object methodclosure31330;
Object method31425;
Object symbol30951;
Object methodclosure31331;
Object method31426;
Object symbol30953;
Object methodclosure31332;
Object localvariable18411;
Object array16645;
Object assign13891;
Object method31427;
Object symbol30957;
Object methodclosure31333;
Object localvariable18412;
Object array16646;
Object assign13892;
Object method31428;
Object symbol30952;
Object methodclosure31334;
Object localvariable18413;
Object array16647;
Object assign13893;
Object method31429;
Object symbol30954;
Object methodclosure31335;
Object method31430;
Object symbol30956;
Object methodclosure31336;
Object classreference11553;
Object smallint10943;
Object constant23956;
Object send110001;
Object symbol30914;
Object send110002;
Object smallint10944;
Object constant23957;
Object send110003;
Object send110004;
Object method31431;
Object symbol30892;
Object methodclosure31337;
Object send110005;
Object method31432;
Object symbol30929;
Object methodclosure31338;
Object symbol30971;
Object constant23958;
Object character542;
Object constant23959;
Object send110006;
Object method31433;
Object symbol30902;
Object methodclosure31339;
Object objectlayout7475;
Object instancevariable14000;
Object instancevariable14001;
Object symbol30950;
Object objectlayout7476;
Object instancevariable14002;
Object class5272;
Object metaclass4474;
Object method31434;
Object methodclosure31340;
Object localvariable18414;
Object array16648;
Object assign13894;
Object method31435;
Object methodclosure31341;
Object method31436;
Object methodclosure31342;
Object localvariable18415;
Object array16649;
Object assign13895;
Object method31437;
Object methodclosure31343;
Object method31438;
Object methodclosure31344;
Object localvariable18416;
Object array16650;
Object assign13896;
Object method31439;
Object methodclosure31345;
Object smallint10945;
Object constant23960;
Object method31440;
Object symbol30955;
Object methodclosure31346;
Object objectlayout7477;
Object instancevariable14003;
Object symbol30889;
Object objectlayout7478;
Object instancevariable14004;
Object class5273;
Object metaclass4475;
Object method31441;
Object methodclosure31347;
Object localvariable18417;
Object array16651;
Object assign13897;
Object method31442;
Object methodclosure31348;
Object localvariable18418;
Object array16652;
Object assign13898;
Object method31443;
Object methodclosure31349;
Object smallint10946;
Object constant23961;
Object super1733;
Object send110007;
Object method31444;
Object methodclosure31350;
Object method31445;
Object methodclosure31351;
Object classreference11554;
Object send110008;
Object send110009;
Object send110010;
Object send110011;
Object send110012;
Object send110013;
Object send110014;
Object send110015;
Object send110016;
Object send110017;
Object send110018;
Object send110019;
Object smallint10947;
Object constant23962;
Object send110020;
Object smallint10948;
Object constant23963;
Object send110021;
Object smallint10949;
Object constant23964;
Object send110022;
Object send110023;
Object smallint10950;
Object constant23965;
Object send110024;
Object send110025;
Object send110026;
Object smallint10951;
Object constant23966;
Object send110027;
Object send110028;
Object send110029;
Object smallint10952;
Object constant23967;
Object send110030;
Object send110031;
Object method31446;
Object symbol30930;
Object methodclosure31352;
Object send110032;
Object method31447;
Object symbol30922;
Object methodclosure31353;
Object localvariable18419;
Object array16653;
Object symbol30972;
Object send110033;
Object block7434;
Object send110034;
Object method31448;
Object methodclosure31354;
Object localvariable18420;
Object array16654;
Object smallint10953;
Object constant23968;
Object assign13899;
Object method31449;
Object symbol30904;
Object methodclosure31355;
Object localvariable18421;
Object array16655;
Object objectlayout7479;
Object symbol30894;
Object arraylayout95;
Object instancevariable14005;
Object instancevariable14006;
Object instancevariable14007;
Object class5274;
Object metaclass4476;
Object method31450;
Object methodclosure31356;
Object method31451;
Object methodclosure31357;
Object localvariable18422;
Object array16656;
Object assign13900;
Object method31452;
Object methodclosure31358;
Object localvariable18423;
Object array16657;
Object assign13901;
Object method31453;
Object methodclosure31359;
Object localvariable18424;
Object array16658;
Object assign13902;
Object method31454;
Object methodclosure31360;
Object method31455;
Object methodclosure31361;
Object classreference11555;
Object send110035;
Object assign13903;
Object localvariable18425;
Object array16659;
Object smallint10954;
Object constant23969;
Object send110036;
Object smallint10955;
Object constant23970;
Object send110037;
Object smallint10956;
Object constant23971;
Object send110038;
Object block7435;
Object send110039;
Object send110040;
Object smallint10957;
Object constant23972;
Object send110041;
Object send110042;
Object send110043;
Object smallint10958;
Object constant23973;
Object send110044;
Object send110045;
Object send110046;
Object smallint10959;
Object constant23974;
Object send110047;
Object send110048;
Object send110049;
Object send110050;
Object send110051;
Object send110052;
Object send110053;
Object method31456;
Object symbol30932;
Object methodclosure31362;
Object character543;
Object constant23975;
Object string11062;
Object constant23976;
Object send110054;
Object method31457;
Object symbol30924;
Object methodclosure31363;
Object smallint10960;
Object constant23977;
Object smallint10961;
Object constant23978;
Object send110055;
Object method31458;
Object symbol30916;
Object methodclosure31364;
Object localvariable18426;
Object localvariable18427;
Object localvariable18428;
Object array16660;
Object send110056;
Object send110057;
Object method31459;
Object symbol30896;
Object methodclosure31365;
Object smallint10962;
Object constant23979;
Object smallint10963;
Object constant23980;
Object send110058;
Object smallint10964;
Object constant23981;
Object send110059;
Object smallint10965;
Object constant23982;
Object send110060;
Object method31460;
Object symbol30906;
Object methodclosure31366;
Object smallint10966;
Object constant23983;
Object smallint10967;
Object constant23984;
Object send110061;
Object method31461;
Object symbol30934;
Object methodclosure31367;
Object localvariable18429;
Object array16661;
Object smallint10968;
Object constant23985;
Object send110062;
Object method31462;
Object symbol30926;
Object methodclosure31368;
Object method31463;
Object symbol30918;
Object methodclosure31369;
Object method31464;
Object symbol30898;
Object methodclosure31370;
Object smallint10969;
Object constant23986;
Object method31465;
Object symbol30911;
Object methodclosure31371;
Object string11063;
Object constant23987;
Object string11064;
Object constant23988;
Object send110063;
Object method31466;
Object symbol30908;
Object methodclosure31372;
Object method31467;
Object symbol30928;
Object methodclosure31373;
Object character544;
Object constant23989;
Object character545;
Object constant23990;
Object send110064;
Object method31468;
Object symbol30901;
Object methodclosure31374;
Object smallint10970;
Object constant23991;
Object smallint10971;
Object constant23992;
Object send110065;
Object method31469;
Object symbol30921;
Object methodclosure31375;
Object method31470;
Object symbol30913;
Object methodclosure31376;
Object variable1230;
Object array16662;
Object smallint10972;
Object constant23993;
Object smallint10973;
Object constant23994;
Object send110066;
Object smallint10974;
Object constant23995;
Object send110067;
Object block7436;
Object smallint10975;
Object constant23996;
Object send110068;
Object block7437;
Object send110069;
Object block7438;
Object send110070;
Object method31471;
Object symbol30893;
Object methodclosure31377;
Object string11065;
Object constant23997;
Object method31472;
Object symbol30903;
Object methodclosure31378;
Object smallint10976;
Object constant23998;
Object method31473;
Object symbol30931;
Object methodclosure31379;
Object method31474;
Object symbol30923;
Object methodclosure31380;
Object localvariable18430;
Object array16663;
Object send110071;
Object assign13904;
Object localvariable18431;
Object array16664;
Object smallint10977;
Object constant23999;
Object send110072;
Object smallint10978;
Object constant24000;
Object send110073;
Object smallint10979;
Object constant24001;
Object send110074;
Object block7439;
Object send110075;
Object send110076;
Object smallint10980;
Object constant24002;
Object send110077;
Object send110078;
Object send110079;
Object smallint10981;
Object constant24003;
Object send110080;
Object send110081;
Object send110082;
Object smallint10982;
Object constant24004;
Object send110083;
Object send110084;
Object send110085;
Object send110086;
Object send110087;
Object send110088;
Object send110089;
Object method31475;
Object symbol30915;
Object methodclosure31381;
Object localvariable18432;
Object array16665;
Object smallint10983;
Object constant24005;
Object send110090;
Object assign13905;
Object smallint10984;
Object constant24006;
Object smallint10985;
Object constant24007;
Object send110091;
Object smallint10986;
Object constant24008;
Object smallint10987;
Object constant24009;
Object send110092;
Object smallint10988;
Object constant24010;
Object send110093;
Object smallint10989;
Object constant24011;
Object send110094;
Object send110095;
Object smallint10990;
Object constant24012;
Object send110096;
Object smallint10991;
Object constant24013;
Object send110097;
Object send110098;
Object localvariable18433;
Object array16666;
Object smallint10992;
Object constant24014;
Object send110099;
Object smallint10993;
Object constant24015;
Object send110100;
Object smallint10994;
Object constant24016;
Object send110101;
Object block7440;
Object send110102;
Object send110103;
Object smallint10995;
Object constant24017;
Object send110104;
Object send110105;
Object send110106;
Object smallint10996;
Object constant24018;
Object send110107;
Object send110108;
Object send110109;
Object smallint10997;
Object constant24019;
Object send110110;
Object send110111;
Object send110112;
Object send110113;
Object send110114;
Object smallint10998;
Object constant24020;
Object send110115;
Object send110116;
Object send110117;
Object send110118;
Object smallint10999;
Object constant24021;
Object send110119;
Object send110120;
Object method31476;
Object symbol30895;
Object methodclosure31382;
Object character546;
Object constant24022;
Object method31477;
Object symbol30905;
Object methodclosure31383;
Object send110121;
Object send110122;
Object send110123;
Object send110124;
Object send110125;
Object method31478;
Object symbol30933;
Object methodclosure31384;
Object string11066;
Object constant24023;
Object string11067;
Object constant24024;
Object send110126;
Object method31479;
Object symbol30925;
Object methodclosure31385;
Object smallint11000;
Object constant24025;
Object smallint11001;
Object constant24026;
Object send110127;
Object method31480;
Object symbol30917;
Object methodclosure31386;
Object localvariable18434;
Object array16667;
Object send110128;
Object assign13906;
Object smallint11002;
Object constant24027;
Object send110129;
Object send110130;
Object smallint11003;
Object constant24028;
Object send110131;
Object send110132;
Object send110133;
Object send110134;
Object send110135;
Object smallint11004;
Object constant24029;
Object send110136;
Object send110137;
Object smallint11005;
Object constant24030;
Object send110138;
Object send110139;
Object send110140;
Object smallint11006;
Object constant24031;
Object send110141;
Object send110142;
Object method31481;
Object symbol30897;
Object methodclosure31387;
Object constant24032;
Object symbol30973;
Object constant24033;
Object send110143;
Object method31482;
Object symbol30910;
Object methodclosure31388;
Object method31483;
Object symbol30907;
Object methodclosure31389;
Object localvariable18435;
Object array16668;
Object send110144;
Object assign13907;
Object send110145;
Object smallint11007;
Object constant24034;
Object send110146;
Object send110147;
Object method31484;
Object symbol30890;
Object methodclosure31390;
Object classreference11556;
Object classreference11557;
Object objectlayout7480;
Object symbol30936;
Object objectlayout7481;
Object instancevariable14008;
Object class5275;
Object metaclass4477;
Object method31485;
Object symbol30939;
Object methodclosure31391;
Object symbol30937;
Object super1734;
Object method31486;
Object methodclosure31392;
Object localvariable18436;
Object array16669;
Object assign13908;
Object method31487;
Object symbol30938;
Object methodclosure31393;
Object classreference11558;
Object objectlayout7482;
Object symbol30935;
Object objectlayout7483;
Object instancevariable14009;
Object instancevariable14010;
Object instancevariable14011;
Object class5276;
Object metaclass4478;
Object localvariable18437;
Object array16670;
Object symbol30866;
Object send110148;
Object symbol30942;
Object send110149;
Object send110150;
Object method31488;
Object symbol30940;
Object methodclosure31394;
Object method31489;
Object symbol30946;
Object methodclosure31395;
Object localvariable18438;
Object array16671;
Object assign13909;
Object method31490;
Object symbol30941;
Object methodclosure31396;
Object method31491;
Object symbol30943;
Object methodclosure31397;
Object localvariable18439;
Object array16672;
Object assign13910;
Object method31492;
Object symbol30945;
Object methodclosure31398;
Object localvariable18440;
Object array16673;
Object super1735;
Object string11068;
Object constant24035;
Object send110151;
Object send110152;
Object send110153;
Object string11069;
Object constant24036;
Object send110154;
Object symbol30944;
Object send110155;
Object send110156;
Object string11070;
Object constant24037;
Object send110157;
Object send110158;
Object send110159;
Object method31493;
Object methodclosure31399;
Object method31494;
Object methodclosure31400;
Object localvariable18441;
Object array16674;
Object assign13911;
Object method31495;
Object methodclosure31401;
Object method31496;
Object methodclosure31402;
Object objectlayout7484;
Object symbol30871;
Object objectlayout7485;
Object class5277;
Object metaclass4479;
Object classreference11559;
Object classreference11560;
Object objectlayout7486;
Object symbol30873;
Object class5278;
Object metaclass4480;
Object localvariable18442;
Object array16675;
Object localvariable18443;
Object array16676;
Object variable1231;
Object array16677;
Object send110160;
Object constant24038;
Object send110161;
Object super1736;
Object send110162;
Object block7441;
Object send110163;
Object string11071;
Object constant24039;
Object send110164;
Object send110165;
Object string11072;
Object constant24040;
Object send110166;
Object send110167;
Object assign13912;
Object send110168;
Object send110169;
Object block7442;
Object send110170;
Object method31497;
Object methodclosure31403;
Object classreference11561;
Object objectlayout7487;
Object instancevariable14012;
Object symbol30874;
Object class5279;
Object metaclass4481;
Object method31498;
Object methodclosure31404;
Object classreference11562;
Object symbol30974;
Object send110171;
Object send110172;
Object method31499;
Object symbol30875;
Object methodclosure31405;
Object instancevariable14013;
Object method31500;
Object methodclosure31406;
Object localvariable18444;
Object array16678;
Object send110173;
Object send110174;
Object method31501;
Object symbol30863;
Object methodclosure31407;
Object objectlayout7488;
Object symbol30949;
Object class5280;
Object metaclass4482;
Object objectlayout7489;
Object symbol30948;
Object class5281;
Object metaclass4483;
Object classreference11563;
Object classreference11564;
Object objectlayout7490;
Object symbol30878;
Object objectlayout7491;
Object instancevariable14014;
Object instancevariable14015;
Object instancevariable14016;
Object class5282;
Object metaclass4484;
Object classreference11565;
Object send110175;
Object method31502;
Object symbol30879;
Object methodclosure31408;
Object localvariable18445;
Object localvariable18446;
Object localvariable18447;
Object array16679;
Object symbol30880;
Object send110176;
Object assign13913;
Object send110177;
Object symbol30975;
Object localvariable18448;
Object array16680;
Object localvariable18449;
Object array16681;
Object send110178;
Object send110179;
Object symbol30976;
Object string11073;
Object constant24041;
Object send110180;
Object string11074;
Object constant24042;
Object send110181;
Object send110182;
Object block7443;
Object send110183;
Object block7444;
Object send110184;
Object send110185;
Object assign13914;
Object send110186;
Object send110187;
Object symbol30977;
Object send110188;
Object block7445;
Object send110189;
Object method31503;
Object symbol30872;
Object methodclosure31409;
Object instancevariable14017;
Object method31504;
Object symbol30864;
Object methodclosure31410;
Object localvariable18450;
Object array16682;
Object send110190;
Object assign13915;
Object send110191;
Object symbol30978;
Object send110192;
Object symbol30865;
Object send110193;
Object send110194;
Object block7446;
Object block7447;
Object send110195;
Object method31505;
Object methodclosure31411;
Object instancevariable14018;
Object method31506;
Object methodclosure31412;
Object send110196;
Object send110197;
Object method31507;
Object methodclosure31413;
Object classreference11566;

void BridgeTest_create_ast() {

// Object>>objectName
//// class
send109971 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol30856 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send109972 = (Object)new_AST_Send((Object)send109971, (Object)symbol30856, 0);
method31403 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109972);
symbol30859 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure31309 = (Object)new_Runtime_MethodClosure(method31403);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30859, (Runtime_MethodClosure)methodclosure31309);


// Object>>doesNotUnderstand:
//doesNotUnderstand: aMessage 
// 	 "Handle the fact that there was an attempt to send the given message to the receiver but the receiver does not understand this message (typically sent from the machine when a message is sent to the receiver and no method is defined for that selector)."
// 	"Testing: (3 activeProcess)"
// 	"fixed suggested by Eliot miranda to make sure 
// 	
// 	[Object new blah + 1]
//  		on: MessageNotUnderstood
//  		do: [:e | e resume: 1] does not loop indefinitively"
// 		
// 	| exception resumeValue |
// 	(exception := MessageNotUnderstood new)
// 		message: aMessage;
// 		receiver: self.
// 	resumeValue := exception signal.
// 	^exception reachedDefaultHandler
// 		ifTrue: [aMessage sentTo: self]
// 		ifFalse: [resumeValue]
localvariable18405 = (Object)new_AST_Variable_named(L"aMessage");
array16638 = (Object)new_Type_Array_with(1, (Object)localvariable18405);
localvariable18406 = (Object)new_AST_Variable_named(L"selector");
array16639 = (Object)new_Type_Array_with(1, (Object)localvariable18406);
variable1229 = (Object)new_AST_Variable_named(L"return");
array16640 = (Object)new_Type_Array_with(1, (Object)variable1229);
symbol30962 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send109973 = (Object)new_AST_Send((Object)localvariable18405, (Object)symbol30962, 0);
symbol30963 = (Object)new_Type_Symbol_cached(L"accept:");
constant23942 = (Object)new_AST_Constant((Object)symbol30963);
// =
send109974 = (Object)new_AST_Send((Object)send109973, (Object)SMB__equal, 1, (Object)constant23942);
super1730 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable18405);
// escape:
send109975 = (Object)new_AST_Send((Object)variable1229, (Object)SMB_escape_, 1, (Object)super1730);
block7432 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send109975);
// ifFalse:
send109976 = (Object)new_AST_Send((Object)send109974, (Object)SMB_ifFalse_, 1, (Object)block7432);
string11058 = (Object)new_Type_String(L"visit");
constant23943 = (Object)new_AST_Constant((Object)string11058);
// objectName
send109977 = (Object)new_AST_Send((Object)Self, (Object)symbol30859, 0);
// ,
send109978 = (Object)new_AST_Send((Object)constant23943, (Object)SMB__concat, 1, (Object)send109977);
string11059 = (Object)new_Type_String(L":");
constant23944 = (Object)new_AST_Constant((Object)string11059);
// ,
send109979 = (Object)new_AST_Send((Object)send109978, (Object)SMB__concat, 1, (Object)constant23944);
// asSymbol
send109980 = (Object)new_AST_Send((Object)send109979, (Object)SMB_asSymbol, 0);
assign13888 = (Object)new_AST_Assign((Object)localvariable18406, (Object)send109980);
symbol30964 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send109981 = (Object)new_AST_Send((Object)localvariable18405, (Object)symbol30964, 0);
symbol30965 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send109982 = (Object)new_AST_Send((Object)send109981, (Object)symbol30965, 2, (Object)localvariable18406, (Object)Self);
block7433 = (Object)new_AST_Block_with((Type_Array)array16640, (Type_Array)empty_Type_Array, 1, 3, send109976, assign13888, send109982);
// on:
send109983 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7433);
method31404 = (Object)new_AST_Method_with((Type_Array)array16638, (Type_Array)array16639, 1, send109983);
methodclosure31310 = (Object)new_Runtime_MethodClosure(method31404);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure31310);


// Object>>~=
//~= anObject 
// 	"Answer whether the receiver and the argument do not represent the 
// 	same object."
// 
// 	^self = anObject == false
localvariable18407 = (Object)new_AST_Variable_named(L"anObject");
array16641 = (Object)new_Type_Array_with(1, (Object)localvariable18407);
// =
send109984 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable18407);
// not
send109985 = (Object)new_AST_Send((Object)send109984, (Object)SMB_not, 0);
method31405 = (Object)new_AST_Method_with((Type_Array)array16641, (Type_Array)empty_Type_Array, 1, send109985);
symbol30861 = (Object)new_Type_Symbol_cached(L"~=");
methodclosure31311 = (Object)new_Runtime_MethodClosure(method31405);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30861, (Runtime_MethodClosure)methodclosure31311);


// Object>>isReturnExpression
//method31406 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol30858 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure31312 = (Object)new_Runtime_MethodClosure(method31406);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30858, (Runtime_MethodClosure)methodclosure31312);


// Object>>isNil
//isNil
// 	"Coerces nil to true and everything else to false."
// 
// 	^false
method31407 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure31313 = (Object)new_Runtime_MethodClosure(method31407);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure31313);


// Object>>yourself
//yourself
// 	"Answer self."
// 	^self
method31408 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30860 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure31314 = (Object)new_Runtime_MethodClosure(method31408);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30860, (Runtime_MethodClosure)methodclosure31314);


// Object>>hash
//hash
// 	"Answer a SmallInteger whose value is related to the receiver's identity.
// 	May be overridden, and should be overridden in any classes that define = "
// 
// 	^ self identityHash
symbol30966 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send109986 = (Object)new_AST_Send((Object)Self, (Object)symbol30966, 0);
// hash
send109987 = (Object)new_AST_Send((Object)send109986, (Object)SMB_hash, 0);
method31409 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109987);
methodclosure31315 = (Object)new_Runtime_MethodClosure(method31409);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure31315);

classreference11550 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Class>>printOn:
//printOn: aStream 
// 	aStream nextPutAll: self name
localvariable18408 = (Object)new_AST_Variable_named(L"aStream");
array16642 = (Object)new_Type_Array_with(1, (Object)localvariable18408);
symbol30881 = (Object)new_Type_Symbol_cached(L"printOn:");
super1731 = (Object)new_AST_Super((Object)symbol30881, 1, (Object)localvariable18408);
symbol30967 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string11060 = (Object)new_Type_String(L" ");
constant23945 = (Object)new_AST_Constant((Object)string11060);
// nextPutAll:
send109988 = (Object)new_AST_Send((Object)localvariable18408, (Object)symbol30967, 1, (Object)constant23945);
// name
send109989 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send109990 = (Object)new_AST_Send((Object)send109989, (Object)symbol30881, 1, (Object)localvariable18408);
method31410 = (Object)new_AST_Method_with((Type_Array)array16642, (Type_Array)empty_Type_Array, 4, super1731, send109988, send109990, Self);
methodclosure31316 = (Object)new_Runtime_MethodClosure(method31410);
store_method((Type_Class)Class, (Type_Symbol)symbol30881, (Runtime_MethodClosure)methodclosure31316);


// Class>>package
//package
//    	^ PackageOrganizer default packageOfClass: self ifNone: [ nil ]
instancevariable13988 = (Object)new_AST_InstVariable(4, L"package");
method31411 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13988);
symbol30882 = (Object)new_Type_Symbol_cached(L"package");
methodclosure31317 = (Object)new_Runtime_MethodClosure(method31411);
store_method((Type_Class)Class, (Type_Symbol)symbol30882, (Runtime_MethodClosure)methodclosure31317);


// Class>>name
//name
// 	"Answer the name of the receiver."
// 
// 	name == nil
// 		ifTrue: [^super name]
// 		ifFalse: [^name]
instancevariable13989 = (Object)new_AST_InstVariable(3, L"name");
method31412 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13989);
methodclosure31318 = (Object)new_Runtime_MethodClosure(method31412);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure31318);

classreference11551 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Behavior>>hasSuperclass
//symbol30867 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send109991 = (Object)new_AST_Send((Object)Self, (Object)symbol30867, 0);
objectlayout7472 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable13990 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout7472)->values[0] = instancevariable13990;
instancevariable13991 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout7472)->values[1] = instancevariable13991;
instancevariable13992 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout7472)->values[2] = instancevariable13992;
instancevariable13993 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout7472)->values[3] = instancevariable13993;
instancevariable13994 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout7472)->values[4] = instancevariable13994;
symbol30888 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class5270 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7472);
((Type_Class)class5270)->name = (Type_Symbol)symbol30888;
metaclass4472 = (Object)HEADER(class5270);

// BridgeTest>>tmNumberNotEquals
//tmNumberNotEquals
// 	^ 1 ~= 2
smallint10938 = (Object)new_Type_SmallInt(1);
constant23946 = (Object)new_AST_Constant((Object)smallint10938);
smallint10939 = (Object)new_Type_SmallInt(2);
constant23947 = (Object)new_AST_Constant((Object)smallint10939);
// ~=
send109992 = (Object)new_AST_Send((Object)constant23946, (Object)symbol30861, 1, (Object)constant23947);
method31413 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109992);
symbol30927 = (Object)new_Type_Symbol_cached(L"tmNumberNotEquals");
methodclosure31319 = (Object)new_Runtime_MethodClosure(method31413);
store_method((Type_Class)class5270, (Type_Symbol)symbol30927, (Runtime_MethodClosure)methodclosure31319);


// BridgeTest>>tmNumberDiv
//tmNumberDiv
// 	^ 4 / 2
smallint10940 = (Object)new_Type_SmallInt(4);
constant23948 = (Object)new_AST_Constant((Object)smallint10940);
smallint10941 = (Object)new_Type_SmallInt(2);
constant23949 = (Object)new_AST_Constant((Object)smallint10941);
// /
send109993 = (Object)new_AST_Send((Object)constant23948, (Object)SMB__divide, 1, (Object)constant23949);
method31414 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109993);
symbol30919 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure31320 = (Object)new_Runtime_MethodClosure(method31414);
store_method((Type_Class)class5270, (Type_Symbol)symbol30919, (Runtime_MethodClosure)methodclosure31320);


// BridgeTest>>tmSymbolEquals
//tmSymbolEquals
// 	^ #Symbol = #Symbol
symbol30968 = (Object)new_Type_Symbol_cached(L"Symbol");
constant23950 = (Object)new_AST_Constant((Object)symbol30968);
constant23951 = (Object)new_AST_Constant((Object)symbol30968);
// =
send109994 = (Object)new_AST_Send((Object)constant23950, (Object)SMB__equal, 1, (Object)constant23951);
method31415 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109994);
symbol30900 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure31321 = (Object)new_Runtime_MethodClosure(method31415);
store_method((Type_Class)class5270, (Type_Symbol)symbol30900, (Runtime_MethodClosure)methodclosure31321);


// BridgeTest>>tmSymbol
//tmSymbol
// 	^ #Symbol
constant23952 = (Object)new_AST_Constant((Object)symbol30968);
method31416 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant23952);
symbol30899 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure31322 = (Object)new_Runtime_MethodClosure(method31416);
store_method((Type_Class)class5270, (Type_Symbol)symbol30899, (Runtime_MethodClosure)methodclosure31322);


// BridgeTest>>tmBooleanSymbolEquals
//tmBooleanSymbolEquals
// 	^ true = #true
symbol30969 = (Object)new_Type_Symbol_cached(L"true");
constant23953 = (Object)new_AST_Constant((Object)symbol30969);
// =
send109995 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant23953);
method31417 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109995);
symbol30920 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure31323 = (Object)new_Runtime_MethodClosure(method31417);
store_method((Type_Class)class5270, (Type_Symbol)symbol30920, (Runtime_MethodClosure)methodclosure31323);


// BridgeTest>>tmClassReferenceReturn
//tmClassReferenceReturn
// 	^ Metaclass name.

// Metaclass>>printOn:
//printOn: aStream 
// 	aStream nextPutAll: self name
localvariable18409 = (Object)new_AST_Variable_named(L"aStream");
array16643 = (Object)new_Type_Array_with(1, (Object)localvariable18409);
super1732 = (Object)new_AST_Super((Object)symbol30881, 1, (Object)localvariable18409);
symbol30970 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send109996 = (Object)new_AST_Send((Object)Self, (Object)symbol30970, 0);
// name
send109997 = (Object)new_AST_Send((Object)send109996, (Object)SMB_name, 0);
// printOn:
send109998 = (Object)new_AST_Send((Object)send109997, (Object)symbol30881, 1, (Object)localvariable18409);
method31418 = (Object)new_AST_Method_with((Type_Array)array16643, (Type_Array)empty_Type_Array, 3, super1732, send109998, Self);
methodclosure31324 = (Object)new_Runtime_MethodClosure(method31418);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol30881, (Runtime_MethodClosure)methodclosure31324);

classreference11552 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);
// name
send109999 = (Object)new_AST_Send((Object)classreference11552, (Object)SMB_name, 0);
method31419 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109999);
symbol30912 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure31325 = (Object)new_Runtime_MethodClosure(method31419);
store_method((Type_Class)class5270, (Type_Symbol)symbol30912, (Runtime_MethodClosure)methodclosure31325);


// BridgeTest>>tmBooleanEquals
//tmBooleanEquals
// 	^ true = true
// =
send110000 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method31420 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110000);
symbol30909 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure31326 = (Object)new_Runtime_MethodClosure(method31420);
store_method((Type_Class)class5270, (Type_Symbol)symbol30909, (Runtime_MethodClosure)methodclosure31326);


// BridgeTest>>tmClassInstVarAssignment
//tmClassInstVarAssignment
// 	StandardTestClass instVar: 10.
// 	self assert: StandardTestClass instVar = 10.
objectlayout7473 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout7473)->values[0] = instancevariable13990;
((Type_Array)objectlayout7473)->values[1] = instancevariable13991;
((Type_Array)objectlayout7473)->values[2] = instancevariable13992;
((Type_Array)objectlayout7473)->values[3] = instancevariable13993;
((Type_Array)objectlayout7473)->values[4] = instancevariable13994;
instancevariable13995 = (Object)new_AST_InstVariable(5, L"classInstVar");
((Type_Array)objectlayout7473)->values[5] = instancevariable13995;
instancevariable13996 = (Object)new_AST_InstVariable(6, L"instVar");
((Type_Array)objectlayout7473)->values[6] = instancevariable13996;
symbol30891 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout7474 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable13997 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout7474)->values[0] = instancevariable13997;
instancevariable13998 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout7474)->values[1] = instancevariable13998;
instancevariable13999 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout7474)->values[2] = instancevariable13999;
class5271 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7474, objectlayout7473);
((Type_Class)class5271)->name = (Type_Symbol)symbol30891;
metaclass4473 = (Object)HEADER(class5271);

// a PMetaclass P#StandardTestClass>>instVar:
localvariable18410 = (Object)new_AST_Variable_named(L"anObject");
array16644 = (Object)new_Type_Array_with(1, (Object)localvariable18410);
assign13889 = (Object)new_AST_Assign((Object)instancevariable13996, (Object)localvariable18410);
method31421 = (Object)new_AST_Method_with((Type_Array)array16644, (Type_Array)empty_Type_Array, 2, assign13889, Self);
symbol30961 = (Object)new_Type_Symbol_cached(L"instVar:");
methodclosure31327 = (Object)new_Runtime_MethodClosure(method31421);
store_method((Type_Class)metaclass4473, (Type_Symbol)symbol30961, (Runtime_MethodClosure)methodclosure31327);


// a PMetaclass P#StandardTestClass>>aClassSideMethod
string11061 = (Object)new_Type_String(L"a");
constant23954 = (Object)new_AST_Constant((Object)string11061);
method31422 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant23954);
symbol30958 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure31328 = (Object)new_Runtime_MethodClosure(method31422);
store_method((Type_Class)metaclass4473, (Type_Symbol)symbol30958, (Runtime_MethodClosure)methodclosure31328);


// a PMetaclass P#StandardTestClass>>aClassSideMethodWithInstanceVariables
smallint10942 = (Object)new_Type_SmallInt(100);
constant23955 = (Object)new_AST_Constant((Object)smallint10942);
assign13890 = (Object)new_AST_Assign((Object)instancevariable13995, (Object)constant23955);
method31423 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign13890, instancevariable13995);
symbol30959 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure31329 = (Object)new_Runtime_MethodClosure(method31423);
store_method((Type_Class)metaclass4473, (Type_Symbol)symbol30959, (Runtime_MethodClosure)methodclosure31329);


// a PMetaclass P#StandardTestClass>>instVar
method31424 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13996);
symbol30960 = (Object)new_Type_Symbol_cached(L"instVar");
methodclosure31330 = (Object)new_Runtime_MethodClosure(method31424);
store_method((Type_Class)metaclass4473, (Type_Symbol)symbol30960, (Runtime_MethodClosure)methodclosure31330);


// StandardTestClass>>a
//a
// 	^ a
method31425 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13997);
symbol30951 = (Object)new_Type_Symbol_cached(L"a");
methodclosure31331 = (Object)new_Runtime_MethodClosure(method31425);
store_method((Type_Class)class5271, (Type_Symbol)symbol30951, (Runtime_MethodClosure)methodclosure31331);


// StandardTestClass>>b
//b
// 	^ b
method31426 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13998);
symbol30953 = (Object)new_Type_Symbol_cached(L"b");
methodclosure31332 = (Object)new_Runtime_MethodClosure(method31426);
store_method((Type_Class)class5271, (Type_Symbol)symbol30953, (Runtime_MethodClosure)methodclosure31332);


// StandardTestClass>>c:
//c: anObject
// 	c := anObject
localvariable18411 = (Object)new_AST_Variable_named(L"anObject");
array16645 = (Object)new_Type_Array_with(1, (Object)localvariable18411);
assign13891 = (Object)new_AST_Assign((Object)instancevariable13999, (Object)localvariable18411);
method31427 = (Object)new_AST_Method_with((Type_Array)array16645, (Type_Array)empty_Type_Array, 2, assign13891, Self);
symbol30957 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure31333 = (Object)new_Runtime_MethodClosure(method31427);
store_method((Type_Class)class5271, (Type_Symbol)symbol30957, (Runtime_MethodClosure)methodclosure31333);


// StandardTestClass>>a:
//a: anObject
// 	a := anObject
localvariable18412 = (Object)new_AST_Variable_named(L"anObject");
array16646 = (Object)new_Type_Array_with(1, (Object)localvariable18412);
assign13892 = (Object)new_AST_Assign((Object)instancevariable13997, (Object)localvariable18412);
method31428 = (Object)new_AST_Method_with((Type_Array)array16646, (Type_Array)empty_Type_Array, 2, assign13892, Self);
symbol30952 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure31334 = (Object)new_Runtime_MethodClosure(method31428);
store_method((Type_Class)class5271, (Type_Symbol)symbol30952, (Runtime_MethodClosure)methodclosure31334);


// StandardTestClass>>b:
//b: anObject
// 	b := anObject
localvariable18413 = (Object)new_AST_Variable_named(L"anObject");
array16647 = (Object)new_Type_Array_with(1, (Object)localvariable18413);
assign13893 = (Object)new_AST_Assign((Object)instancevariable13998, (Object)localvariable18413);
method31429 = (Object)new_AST_Method_with((Type_Array)array16647, (Type_Array)empty_Type_Array, 2, assign13893, Self);
symbol30954 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure31335 = (Object)new_Runtime_MethodClosure(method31429);
store_method((Type_Class)class5271, (Type_Symbol)symbol30954, (Runtime_MethodClosure)methodclosure31335);


// StandardTestClass>>c
//c
// 	^ c
method31430 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13999);
symbol30956 = (Object)new_Type_Symbol_cached(L"c");
methodclosure31336 = (Object)new_Runtime_MethodClosure(method31430);
store_method((Type_Class)class5271, (Type_Symbol)symbol30956, (Runtime_MethodClosure)methodclosure31336);

classreference11553 = (Object)new_Organization_ClassReference((Type_Class)class5271);
smallint10943 = (Object)new_Type_SmallInt(10);
constant23956 = (Object)new_AST_Constant((Object)smallint10943);
// instVar:
send110001 = (Object)new_AST_Send((Object)classreference11553, (Object)symbol30961, 1, (Object)constant23956);
symbol30914 = (Object)new_Type_Symbol_cached(L"assert:");
// instVar
send110002 = (Object)new_AST_Send((Object)classreference11553, (Object)symbol30960, 0);
smallint10944 = (Object)new_Type_SmallInt(10);
constant23957 = (Object)new_AST_Constant((Object)smallint10944);
// =
send110003 = (Object)new_AST_Send((Object)send110002, (Object)SMB__equal, 1, (Object)constant23957);
// assert:
send110004 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110003);
method31431 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send110001, send110004, Self);
symbol30892 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure31337 = (Object)new_Runtime_MethodClosure(method31431);
store_method((Type_Class)class5270, (Type_Symbol)symbol30892, (Runtime_MethodClosure)methodclosure31337);


// BridgeTest>>tmBooleanNotEquals
//tmBooleanNotEquals
// 	^ true ~= false
// ~=
send110005 = (Object)new_AST_Send((Object)True_Const, (Object)symbol30861, 1, (Object)False_Const);
method31432 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110005);
symbol30929 = (Object)new_Type_Symbol_cached(L"tmBooleanNotEquals");
methodclosure31338 = (Object)new_Runtime_MethodClosure(method31432);
store_method((Type_Class)class5270, (Type_Symbol)symbol30929, (Runtime_MethodClosure)methodclosure31338);


// BridgeTest>>tmSymbolCharacterEquals
//tmSymbolCharacterEquals
// 	^ #S = $S
symbol30971 = (Object)new_Type_Symbol_cached(L"S");
constant23958 = (Object)new_AST_Constant((Object)symbol30971);
character542 = (Object)new_Type_Character(L'S');
constant23959 = (Object)new_AST_Constant((Object)character542);
// =
send110006 = (Object)new_AST_Send((Object)constant23958, (Object)SMB__equal, 1, (Object)constant23959);
method31433 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110006);
symbol30902 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure31339 = (Object)new_Runtime_MethodClosure(method31433);
store_method((Type_Class)class5270, (Type_Symbol)symbol30902, (Runtime_MethodClosure)methodclosure31339);


// BridgeTest>>tmClassSideSuperSend
//tmClassSideSuperSend
// 	ChildClassTestClass a: nil.
// 	ChildClassTestClass b: nil.
// 	ChildClassTestClass c: nil.
// 	
// 	self assert: ChildClassTestClass a = nil.
// 	self assert: ChildClassTestClass b = nil.
// 	self assert: ChildClassTestClass c = nil.
// 	
// 	ChildClassTestClass a: 1.
// 	ChildClassTestClass b: 2.
// 	ChildClassTestClass c: 3.
// 	
// 	self assert: ChildClassTestClass a = 1.
// 	self assert: ChildClassTestClass b = 2.
// 	self assert: ChildClassTestClass c = 3.
objectlayout7475 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout7475)->values[0] = instancevariable13990;
((Type_Array)objectlayout7475)->values[1] = instancevariable13991;
((Type_Array)objectlayout7475)->values[2] = instancevariable13992;
((Type_Array)objectlayout7475)->values[3] = instancevariable13993;
((Type_Array)objectlayout7475)->values[4] = instancevariable13994;
instancevariable14000 = (Object)new_AST_InstVariable(5, L"a");
((Type_Array)objectlayout7475)->values[5] = instancevariable14000;
instancevariable14001 = (Object)new_AST_InstVariable(6, L"b");
((Type_Array)objectlayout7475)->values[6] = instancevariable14001;
symbol30950 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout7476 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable14002 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout7476)->values[0] = instancevariable14002;
class5272 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7476, objectlayout7475);
((Type_Class)class5272)->name = (Type_Symbol)symbol30950;
metaclass4474 = (Object)HEADER(class5272);

// a PMetaclass P#SuperClassTestClass>>a
method31434 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14000);
methodclosure31340 = (Object)new_Runtime_MethodClosure(method31434);
store_method((Type_Class)metaclass4474, (Type_Symbol)symbol30951, (Runtime_MethodClosure)methodclosure31340);


// a PMetaclass P#SuperClassTestClass>>a:
localvariable18414 = (Object)new_AST_Variable_named(L"anObject");
array16648 = (Object)new_Type_Array_with(1, (Object)localvariable18414);
assign13894 = (Object)new_AST_Assign((Object)instancevariable14000, (Object)localvariable18414);
method31435 = (Object)new_AST_Method_with((Type_Array)array16648, (Type_Array)empty_Type_Array, 2, assign13894, Self);
methodclosure31341 = (Object)new_Runtime_MethodClosure(method31435);
store_method((Type_Class)metaclass4474, (Type_Symbol)symbol30952, (Runtime_MethodClosure)methodclosure31341);


// a PMetaclass P#SuperClassTestClass>>b
method31436 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14001);
methodclosure31342 = (Object)new_Runtime_MethodClosure(method31436);
store_method((Type_Class)metaclass4474, (Type_Symbol)symbol30953, (Runtime_MethodClosure)methodclosure31342);


// a PMetaclass P#SuperClassTestClass>>b:
localvariable18415 = (Object)new_AST_Variable_named(L"anObject");
array16649 = (Object)new_Type_Array_with(1, (Object)localvariable18415);
assign13895 = (Object)new_AST_Assign((Object)instancevariable14001, (Object)localvariable18415);
method31437 = (Object)new_AST_Method_with((Type_Array)array16649, (Type_Array)empty_Type_Array, 2, assign13895, Self);
methodclosure31343 = (Object)new_Runtime_MethodClosure(method31437);
store_method((Type_Class)metaclass4474, (Type_Symbol)symbol30954, (Runtime_MethodClosure)methodclosure31343);


// SuperClassTestClass>>a
//a
// 	^ a
method31438 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14002);
methodclosure31344 = (Object)new_Runtime_MethodClosure(method31438);
store_method((Type_Class)class5272, (Type_Symbol)symbol30951, (Runtime_MethodClosure)methodclosure31344);


// SuperClassTestClass>>a:
//a: anObject
// 	a := anObject
localvariable18416 = (Object)new_AST_Variable_named(L"anObject");
array16650 = (Object)new_Type_Array_with(1, (Object)localvariable18416);
assign13896 = (Object)new_AST_Assign((Object)instancevariable14002, (Object)localvariable18416);
method31439 = (Object)new_AST_Method_with((Type_Array)array16650, (Type_Array)empty_Type_Array, 2, assign13896, Self);
methodclosure31345 = (Object)new_Runtime_MethodClosure(method31439);
store_method((Type_Class)class5272, (Type_Symbol)symbol30952, (Runtime_MethodClosure)methodclosure31345);


// SuperClassTestClass>>test
//test
// 	^ 10
smallint10945 = (Object)new_Type_SmallInt(10);
constant23960 = (Object)new_AST_Constant((Object)smallint10945);
method31440 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant23960);
symbol30955 = (Object)new_Type_Symbol_cached(L"test");
methodclosure31346 = (Object)new_Runtime_MethodClosure(method31440);
store_method((Type_Class)class5272, (Type_Symbol)symbol30955, (Runtime_MethodClosure)methodclosure31346);

objectlayout7477 = (Object)create_layout_with_vars(Type_ObjectLayout, 8);
((Type_Array)objectlayout7477)->values[0] = instancevariable13990;
((Type_Array)objectlayout7477)->values[1] = instancevariable13991;
((Type_Array)objectlayout7477)->values[2] = instancevariable13992;
((Type_Array)objectlayout7477)->values[3] = instancevariable13993;
((Type_Array)objectlayout7477)->values[4] = instancevariable13994;
((Type_Array)objectlayout7477)->values[5] = instancevariable14000;
((Type_Array)objectlayout7477)->values[6] = instancevariable14001;
instancevariable14003 = (Object)new_AST_InstVariable(7, L"c");
((Type_Array)objectlayout7477)->values[7] = instancevariable14003;
symbol30889 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout7478 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7478)->values[0] = instancevariable14002;
instancevariable14004 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout7478)->values[1] = instancevariable14004;
class5273 = (Object)new_Class_withMeta((Object)class5272, objectlayout7478, objectlayout7477);
((Type_Class)class5273)->name = (Type_Symbol)symbol30889;
metaclass4475 = (Object)HEADER(class5273);

// a PMetaclass P#ChildClassTestClass>>c
method31441 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14003);
methodclosure31347 = (Object)new_Runtime_MethodClosure(method31441);
store_method((Type_Class)metaclass4475, (Type_Symbol)symbol30956, (Runtime_MethodClosure)methodclosure31347);


// a PMetaclass P#ChildClassTestClass>>c:
localvariable18417 = (Object)new_AST_Variable_named(L"anObject");
array16651 = (Object)new_Type_Array_with(1, (Object)localvariable18417);
assign13897 = (Object)new_AST_Assign((Object)instancevariable14003, (Object)localvariable18417);
method31442 = (Object)new_AST_Method_with((Type_Array)array16651, (Type_Array)empty_Type_Array, 2, assign13897, Self);
methodclosure31348 = (Object)new_Runtime_MethodClosure(method31442);
store_method((Type_Class)metaclass4475, (Type_Symbol)symbol30957, (Runtime_MethodClosure)methodclosure31348);


// ChildClassTestClass>>b:
//b: anObject
// 	b := anObject
localvariable18418 = (Object)new_AST_Variable_named(L"anObject");
array16652 = (Object)new_Type_Array_with(1, (Object)localvariable18418);
assign13898 = (Object)new_AST_Assign((Object)instancevariable14004, (Object)localvariable18418);
method31443 = (Object)new_AST_Method_with((Type_Array)array16652, (Type_Array)empty_Type_Array, 2, assign13898, Self);
methodclosure31349 = (Object)new_Runtime_MethodClosure(method31443);
store_method((Type_Class)class5273, (Type_Symbol)symbol30954, (Runtime_MethodClosure)methodclosure31349);


// ChildClassTestClass>>test
//test
// 	^ 10 * super test
smallint10946 = (Object)new_Type_SmallInt(10);
constant23961 = (Object)new_AST_Constant((Object)smallint10946);
super1733 = (Object)new_AST_Super((Object)symbol30955, 0);
// *
send110007 = (Object)new_AST_Send((Object)constant23961, (Object)SMB__times, 1, (Object)super1733);
method31444 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110007);
methodclosure31350 = (Object)new_Runtime_MethodClosure(method31444);
store_method((Type_Class)class5273, (Type_Symbol)symbol30955, (Runtime_MethodClosure)methodclosure31350);


// ChildClassTestClass>>b
//b
// 	^ b
method31445 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14004);
methodclosure31351 = (Object)new_Runtime_MethodClosure(method31445);
store_method((Type_Class)class5273, (Type_Symbol)symbol30953, (Runtime_MethodClosure)methodclosure31351);

classreference11554 = (Object)new_Organization_ClassReference((Type_Class)class5273);
// a:
send110008 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30952, 1, (Object)Nil_Const);
// b:
send110009 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30954, 1, (Object)Nil_Const);
// c:
send110010 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30957, 1, (Object)Nil_Const);
// a
send110011 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30951, 0);
// =
send110012 = (Object)new_AST_Send((Object)send110011, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send110013 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110012);
// b
send110014 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30953, 0);
// =
send110015 = (Object)new_AST_Send((Object)send110014, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send110016 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110015);
// c
send110017 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30956, 0);
// =
send110018 = (Object)new_AST_Send((Object)send110017, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send110019 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110018);
smallint10947 = (Object)new_Type_SmallInt(1);
constant23962 = (Object)new_AST_Constant((Object)smallint10947);
// a:
send110020 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30952, 1, (Object)constant23962);
smallint10948 = (Object)new_Type_SmallInt(2);
constant23963 = (Object)new_AST_Constant((Object)smallint10948);
// b:
send110021 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30954, 1, (Object)constant23963);
smallint10949 = (Object)new_Type_SmallInt(3);
constant23964 = (Object)new_AST_Constant((Object)smallint10949);
// c:
send110022 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30957, 1, (Object)constant23964);
// a
send110023 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30951, 0);
smallint10950 = (Object)new_Type_SmallInt(1);
constant23965 = (Object)new_AST_Constant((Object)smallint10950);
// =
send110024 = (Object)new_AST_Send((Object)send110023, (Object)SMB__equal, 1, (Object)constant23965);
// assert:
send110025 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110024);
// b
send110026 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30953, 0);
smallint10951 = (Object)new_Type_SmallInt(2);
constant23966 = (Object)new_AST_Constant((Object)smallint10951);
// =
send110027 = (Object)new_AST_Send((Object)send110026, (Object)SMB__equal, 1, (Object)constant23966);
// assert:
send110028 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110027);
// c
send110029 = (Object)new_AST_Send((Object)classreference11554, (Object)symbol30956, 0);
smallint10952 = (Object)new_Type_SmallInt(3);
constant23967 = (Object)new_AST_Constant((Object)smallint10952);
// =
send110030 = (Object)new_AST_Send((Object)send110029, (Object)SMB__equal, 1, (Object)constant23967);
// assert:
send110031 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110030);
method31446 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send110008, send110009, send110010, send110013, send110016, send110019, send110020, send110021, send110022, send110025, send110028, send110031, Self);
symbol30930 = (Object)new_Type_Symbol_cached(L"tmClassSideSuperSend");
methodclosure31352 = (Object)new_Runtime_MethodClosure(method31446);
store_method((Type_Class)class5270, (Type_Symbol)symbol30930, (Runtime_MethodClosure)methodclosure31352);


// BridgeTest>>tmClassInstVar
//tmClassInstVar
// 	^ StandardTestClass aClassSideMethodWithInstanceVariables.
// aClassSideMethodWithInstanceVariables
send110032 = (Object)new_AST_Send((Object)classreference11553, (Object)symbol30959, 0);
method31447 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110032);
symbol30922 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure31353 = (Object)new_Runtime_MethodClosure(method31447);
store_method((Type_Class)class5270, (Type_Symbol)symbol30922, (Runtime_MethodClosure)methodclosure31353);


// BridgeTest>>assert:
//assert: bool
// 	<arg: true>
// 	^ bool ifFalse: [ self fail. ]
// 	
localvariable18419 = (Object)new_AST_Variable_named(L"bool");
array16653 = (Object)new_Type_Array_with(1, (Object)localvariable18419);
symbol30972 = (Object)new_Type_Symbol_cached(L"fail");
// fail
send110033 = (Object)new_AST_Send((Object)Self, (Object)symbol30972, 0);
block7434 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send110033);
// ifFalse:
send110034 = (Object)new_AST_Send((Object)localvariable18419, (Object)SMB_ifFalse_, 1, (Object)block7434);
method31448 = (Object)new_AST_Method_with((Type_Array)array16653, (Type_Array)empty_Type_Array, 1, send110034);
methodclosure31354 = (Object)new_Runtime_MethodClosure(method31448);
store_method((Type_Class)class5270, (Type_Symbol)symbol30914, (Runtime_MethodClosure)methodclosure31354);


// BridgeTest>>tmLocalVariable
//tmLocalVariable
// 	|a|
// 	a := 1.
// 	^ a
localvariable18420 = (Object)new_AST_Variable_named(L"a");
array16654 = (Object)new_Type_Array_with(1, (Object)localvariable18420);
smallint10953 = (Object)new_Type_SmallInt(1);
constant23968 = (Object)new_AST_Constant((Object)smallint10953);
assign13899 = (Object)new_AST_Assign((Object)localvariable18420, (Object)constant23968);
method31449 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16654, 2, assign13899, localvariable18420);
symbol30904 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure31355 = (Object)new_Runtime_MethodClosure(method31449);
store_method((Type_Class)class5270, (Type_Symbol)symbol30904, (Runtime_MethodClosure)methodclosure31355);


// BridgeTest>>tmVariableInstanceCreation
//tmVariableInstanceCreation
// 	| instance |
// 	instance := StandardVariableTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
localvariable18421 = (Object)new_AST_Variable_named(L"instance");
array16655 = (Object)new_Type_Array_with(1, (Object)localvariable18421);
objectlayout7479 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7479)->values[0] = instancevariable13990;
((Type_Array)objectlayout7479)->values[1] = instancevariable13991;
((Type_Array)objectlayout7479)->values[2] = instancevariable13992;
((Type_Array)objectlayout7479)->values[3] = instancevariable13993;
((Type_Array)objectlayout7479)->values[4] = instancevariable13994;
symbol30894 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout95 = (Object)create_layout_with_vars(Type_ArrayLayout, 3);
instancevariable14005 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout95)->values[0] = instancevariable14005;
instancevariable14006 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout95)->values[1] = instancevariable14006;
instancevariable14007 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout95)->values[2] = instancevariable14007;
class5274 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout95, objectlayout7479);
((Type_Class)class5274)->name = (Type_Symbol)symbol30894;
metaclass4476 = (Object)HEADER(class5274);

// StandardVariableTestClass>>a
//a
// 	^ a
method31450 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14005);
methodclosure31356 = (Object)new_Runtime_MethodClosure(method31450);
store_method((Type_Class)class5274, (Type_Symbol)symbol30951, (Runtime_MethodClosure)methodclosure31356);


// StandardVariableTestClass>>b
//b
// 	^ b
method31451 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14006);
methodclosure31357 = (Object)new_Runtime_MethodClosure(method31451);
store_method((Type_Class)class5274, (Type_Symbol)symbol30953, (Runtime_MethodClosure)methodclosure31357);


// StandardVariableTestClass>>c:
//c: anObject
// 	c := anObject
localvariable18422 = (Object)new_AST_Variable_named(L"anObject");
array16656 = (Object)new_Type_Array_with(1, (Object)localvariable18422);
assign13900 = (Object)new_AST_Assign((Object)instancevariable14007, (Object)localvariable18422);
method31452 = (Object)new_AST_Method_with((Type_Array)array16656, (Type_Array)empty_Type_Array, 2, assign13900, Self);
methodclosure31358 = (Object)new_Runtime_MethodClosure(method31452);
store_method((Type_Class)class5274, (Type_Symbol)symbol30957, (Runtime_MethodClosure)methodclosure31358);


// StandardVariableTestClass>>a:
//a: anObject
// 	a := anObject
localvariable18423 = (Object)new_AST_Variable_named(L"anObject");
array16657 = (Object)new_Type_Array_with(1, (Object)localvariable18423);
assign13901 = (Object)new_AST_Assign((Object)instancevariable14005, (Object)localvariable18423);
method31453 = (Object)new_AST_Method_with((Type_Array)array16657, (Type_Array)empty_Type_Array, 2, assign13901, Self);
methodclosure31359 = (Object)new_Runtime_MethodClosure(method31453);
store_method((Type_Class)class5274, (Type_Symbol)symbol30952, (Runtime_MethodClosure)methodclosure31359);


// StandardVariableTestClass>>b:
//b: anObject
// 	b := anObject
localvariable18424 = (Object)new_AST_Variable_named(L"anObject");
array16658 = (Object)new_Type_Array_with(1, (Object)localvariable18424);
assign13902 = (Object)new_AST_Assign((Object)instancevariable14006, (Object)localvariable18424);
method31454 = (Object)new_AST_Method_with((Type_Array)array16658, (Type_Array)empty_Type_Array, 2, assign13902, Self);
methodclosure31360 = (Object)new_Runtime_MethodClosure(method31454);
store_method((Type_Class)class5274, (Type_Symbol)symbol30954, (Runtime_MethodClosure)methodclosure31360);


// StandardVariableTestClass>>c
//c
// 	^ c
method31455 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14007);
methodclosure31361 = (Object)new_Runtime_MethodClosure(method31455);
store_method((Type_Class)class5274, (Type_Symbol)symbol30956, (Runtime_MethodClosure)methodclosure31361);

classreference11555 = (Object)new_Organization_ClassReference((Type_Class)class5274);
// basicNew
send110035 = (Object)new_AST_Send((Object)classreference11555, (Object)SMB_basicNew, 0);
assign13903 = (Object)new_AST_Assign((Object)localvariable18421, (Object)send110035);
localvariable18425 = (Object)new_AST_Variable_named(L"receiver");
array16659 = (Object)new_Type_Array_with(1, (Object)localvariable18425);
smallint10954 = (Object)new_Type_SmallInt(1);
constant23969 = (Object)new_AST_Constant((Object)smallint10954);
// a:
send110036 = (Object)new_AST_Send((Object)localvariable18425, (Object)symbol30952, 1, (Object)constant23969);
smallint10955 = (Object)new_Type_SmallInt(2);
constant23970 = (Object)new_AST_Constant((Object)smallint10955);
// b:
send110037 = (Object)new_AST_Send((Object)localvariable18425, (Object)symbol30954, 1, (Object)constant23970);
smallint10956 = (Object)new_Type_SmallInt(3);
constant23971 = (Object)new_AST_Constant((Object)smallint10956);
// c:
send110038 = (Object)new_AST_Send((Object)localvariable18425, (Object)symbol30957, 1, (Object)constant23971);
block7435 = (Object)new_AST_Block_with((Type_Array)array16659, (Type_Array)empty_Type_Array, 1, 3, send110036, send110037, send110038);
// value:
send110039 = (Object)new_AST_Send((Object)block7435, (Object)SMB_value_, 1, (Object)localvariable18421);
// a
send110040 = (Object)new_AST_Send((Object)localvariable18421, (Object)symbol30951, 0);
smallint10957 = (Object)new_Type_SmallInt(1);
constant23972 = (Object)new_AST_Constant((Object)smallint10957);
// =
send110041 = (Object)new_AST_Send((Object)send110040, (Object)SMB__equal, 1, (Object)constant23972);
// assert:
send110042 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110041);
// b
send110043 = (Object)new_AST_Send((Object)localvariable18421, (Object)symbol30953, 0);
smallint10958 = (Object)new_Type_SmallInt(2);
constant23973 = (Object)new_AST_Constant((Object)smallint10958);
// =
send110044 = (Object)new_AST_Send((Object)send110043, (Object)SMB__equal, 1, (Object)constant23973);
// assert:
send110045 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110044);
// c
send110046 = (Object)new_AST_Send((Object)localvariable18421, (Object)symbol30956, 0);
smallint10959 = (Object)new_Type_SmallInt(3);
constant23974 = (Object)new_AST_Constant((Object)smallint10959);
// =
send110047 = (Object)new_AST_Send((Object)send110046, (Object)SMB__equal, 1, (Object)constant23974);
// assert:
send110048 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110047);
// a
send110049 = (Object)new_AST_Send((Object)localvariable18421, (Object)symbol30951, 0);
// b
send110050 = (Object)new_AST_Send((Object)localvariable18421, (Object)symbol30953, 0);
// +
send110051 = (Object)new_AST_Send((Object)send110049, (Object)SMB__plus, 1, (Object)send110050);
// c
send110052 = (Object)new_AST_Send((Object)localvariable18421, (Object)symbol30956, 0);
// +
send110053 = (Object)new_AST_Send((Object)send110051, (Object)SMB__plus, 1, (Object)send110052);
method31456 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16655, 6, assign13903, send110039, send110042, send110045, send110048, send110053);
symbol30932 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure31362 = (Object)new_Runtime_MethodClosure(method31456);
store_method((Type_Class)class5270, (Type_Symbol)symbol30932, (Runtime_MethodClosure)methodclosure31362);


// BridgeTest>>tmCharacterStringEquals
//tmCharacterStringEquals
// 	^ $C = 'C'
character543 = (Object)new_Type_Character(L'C');
constant23975 = (Object)new_AST_Constant((Object)character543);
string11062 = (Object)new_Type_String(L"C");
constant23976 = (Object)new_AST_Constant((Object)string11062);
// =
send110054 = (Object)new_AST_Send((Object)constant23975, (Object)SMB__equal, 1, (Object)constant23976);
method31457 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110054);
symbol30924 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure31363 = (Object)new_Runtime_MethodClosure(method31457);
store_method((Type_Class)class5270, (Type_Symbol)symbol30924, (Runtime_MethodClosure)methodclosure31363);


// BridgeTest>>tmNumberSubtract
//tmNumberSubtract
// 	^ 2 - 1
smallint10960 = (Object)new_Type_SmallInt(2);
constant23977 = (Object)new_AST_Constant((Object)smallint10960);
smallint10961 = (Object)new_Type_SmallInt(1);
constant23978 = (Object)new_AST_Constant((Object)smallint10961);
// -
send110055 = (Object)new_AST_Send((Object)constant23977, (Object)SMB__minus, 1, (Object)constant23978);
method31458 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110055);
symbol30916 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure31364 = (Object)new_Runtime_MethodClosure(method31458);
store_method((Type_Class)class5270, (Type_Symbol)symbol30916, (Runtime_MethodClosure)methodclosure31364);


// BridgeTest>>tmMethodArguments:with:with:
//tmMethodArguments: arg1 with: arg2 with: arg3 
// 	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
// 	^ arg1 , arg2 , arg3
localvariable18426 = (Object)new_AST_Variable_named(L"arg1");
localvariable18427 = (Object)new_AST_Variable_named(L"arg2");
localvariable18428 = (Object)new_AST_Variable_named(L"arg3");
array16660 = (Object)new_Type_Array_with(3, (Object)localvariable18426, (Object)localvariable18427, (Object)localvariable18428);
// ,
send110056 = (Object)new_AST_Send((Object)localvariable18426, (Object)SMB__concat, 1, (Object)localvariable18427);
// ,
send110057 = (Object)new_AST_Send((Object)send110056, (Object)SMB__concat, 1, (Object)localvariable18428);
method31459 = (Object)new_AST_Method_with((Type_Array)array16660, (Type_Array)empty_Type_Array, 1, send110057);
symbol30896 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure31365 = (Object)new_Runtime_MethodClosure(method31459);
store_method((Type_Class)class5270, (Type_Symbol)symbol30896, (Runtime_MethodClosure)methodclosure31365);


// BridgeTest>>tmSimpleBasicArithmetik
//tmSimpleBasicArithmetik
// 	^ ((1 + 2) + 2) * 5
smallint10962 = (Object)new_Type_SmallInt(1);
constant23979 = (Object)new_AST_Constant((Object)smallint10962);
smallint10963 = (Object)new_Type_SmallInt(2);
constant23980 = (Object)new_AST_Constant((Object)smallint10963);
// +
send110058 = (Object)new_AST_Send((Object)constant23979, (Object)SMB__plus, 1, (Object)constant23980);
smallint10964 = (Object)new_Type_SmallInt(2);
constant23981 = (Object)new_AST_Constant((Object)smallint10964);
// +
send110059 = (Object)new_AST_Send((Object)send110058, (Object)SMB__plus, 1, (Object)constant23981);
smallint10965 = (Object)new_Type_SmallInt(5);
constant23982 = (Object)new_AST_Constant((Object)smallint10965);
// *
send110060 = (Object)new_AST_Send((Object)send110059, (Object)SMB__times, 1, (Object)constant23982);
method31460 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110060);
symbol30906 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure31366 = (Object)new_Runtime_MethodClosure(method31460);
store_method((Type_Class)class5270, (Type_Symbol)symbol30906, (Runtime_MethodClosure)methodclosure31366);


// BridgeTest>>tmNumberEquals
//tmNumberEquals
// 	^ 1 = 1
smallint10966 = (Object)new_Type_SmallInt(1);
constant23983 = (Object)new_AST_Constant((Object)smallint10966);
smallint10967 = (Object)new_Type_SmallInt(1);
constant23984 = (Object)new_AST_Constant((Object)smallint10967);
// =
send110061 = (Object)new_AST_Send((Object)constant23983, (Object)SMB__equal, 1, (Object)constant23984);
method31461 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110061);
symbol30934 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure31367 = (Object)new_Runtime_MethodClosure(method31461);
store_method((Type_Class)class5270, (Type_Symbol)symbol30934, (Runtime_MethodClosure)methodclosure31367);


// BridgeTest>>tmMethodArgument:
//tmMethodArgument: arg 
// 	<arg1: 1>
// 	^ arg + 1
localvariable18429 = (Object)new_AST_Variable_named(L"arg");
array16661 = (Object)new_Type_Array_with(1, (Object)localvariable18429);
smallint10968 = (Object)new_Type_SmallInt(1);
constant23985 = (Object)new_AST_Constant((Object)smallint10968);
// +
send110062 = (Object)new_AST_Send((Object)localvariable18429, (Object)SMB__plus, 1, (Object)constant23985);
method31462 = (Object)new_AST_Method_with((Type_Array)array16661, (Type_Array)empty_Type_Array, 1, send110062);
symbol30926 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure31368 = (Object)new_Runtime_MethodClosure(method31462);
store_method((Type_Class)class5270, (Type_Symbol)symbol30926, (Runtime_MethodClosure)methodclosure31368);


// BridgeTest>>tearDown
//tearDown
method31463 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30918 = (Object)new_Type_Symbol_cached(L"tearDown");
methodclosure31369 = (Object)new_Runtime_MethodClosure(method31463);
store_method((Type_Class)class5270, (Type_Symbol)symbol30918, (Runtime_MethodClosure)methodclosure31369);


// BridgeTest>>tmBooleanTrue
//tmBooleanTrue
// 	^ true
method31464 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol30898 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure31370 = (Object)new_Runtime_MethodClosure(method31464);
store_method((Type_Class)class5270, (Type_Symbol)symbol30898, (Runtime_MethodClosure)methodclosure31370);


// BridgeTest>>tmNumber
//tmNumber
// 	^ 1
smallint10969 = (Object)new_Type_SmallInt(1);
constant23986 = (Object)new_AST_Constant((Object)smallint10969);
method31465 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant23986);
symbol30911 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure31371 = (Object)new_Runtime_MethodClosure(method31465);
store_method((Type_Class)class5270, (Type_Symbol)symbol30911, (Runtime_MethodClosure)methodclosure31371);


// BridgeTest>>tmStringNotEquals
//tmStringNotEquals
// 	^ 'String' ~= 'gnirtS'
string11063 = (Object)new_Type_String(L"String");
constant23987 = (Object)new_AST_Constant((Object)string11063);
string11064 = (Object)new_Type_String(L"gnirtS");
constant23988 = (Object)new_AST_Constant((Object)string11064);
// ~=
send110063 = (Object)new_AST_Send((Object)constant23987, (Object)symbol30861, 1, (Object)constant23988);
method31466 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110063);
symbol30908 = (Object)new_Type_Symbol_cached(L"tmStringNotEquals");
methodclosure31372 = (Object)new_Runtime_MethodClosure(method31466);
store_method((Type_Class)class5270, (Type_Symbol)symbol30908, (Runtime_MethodClosure)methodclosure31372);


// BridgeTest>>tmClassSideSuper
//tmClassSideSuper
// 	"TODO create accerssort in: everywhere"
// 	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
method31467 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30928 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure31373 = (Object)new_Runtime_MethodClosure(method31467);
store_method((Type_Class)class5270, (Type_Symbol)symbol30928, (Runtime_MethodClosure)methodclosure31373);


// BridgeTest>>tmCharacterEquals
//tmCharacterEquals
// 	^ $C = $C
character544 = (Object)new_Type_Character(L'C');
constant23989 = (Object)new_AST_Constant((Object)character544);
character545 = (Object)new_Type_Character(L'C');
constant23990 = (Object)new_AST_Constant((Object)character545);
// =
send110064 = (Object)new_AST_Send((Object)constant23989, (Object)SMB__equal, 1, (Object)constant23990);
method31468 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110064);
symbol30901 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure31374 = (Object)new_Runtime_MethodClosure(method31468);
store_method((Type_Class)class5270, (Type_Symbol)symbol30901, (Runtime_MethodClosure)methodclosure31374);


// BridgeTest>>tmNumberAdd
//tmNumberAdd
// 	^ 1 + 1
smallint10970 = (Object)new_Type_SmallInt(1);
constant23991 = (Object)new_AST_Constant((Object)smallint10970);
smallint10971 = (Object)new_Type_SmallInt(1);
constant23992 = (Object)new_AST_Constant((Object)smallint10971);
// +
send110065 = (Object)new_AST_Send((Object)constant23991, (Object)SMB__plus, 1, (Object)constant23992);
method31469 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110065);
symbol30921 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure31375 = (Object)new_Runtime_MethodClosure(method31469);
store_method((Type_Class)class5270, (Type_Symbol)symbol30921, (Runtime_MethodClosure)methodclosure31375);


// BridgeTest>>tmFibonacci
//tmFibonacci
// 	
method31470 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30913 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure31376 = (Object)new_Runtime_MethodClosure(method31470);
store_method((Type_Class)class5270, (Type_Symbol)symbol30913, (Runtime_MethodClosure)methodclosure31376);


// BridgeTest>>tmExtendedReturn
//tmExtendedReturn
// 	1 > 2 ifTrue: [ ^ 1 ]
// 		ifFalse: [ ^ 2].
variable1230 = (Object)new_AST_Variable_named(L"return");
array16662 = (Object)new_Type_Array_with(1, (Object)variable1230);
smallint10972 = (Object)new_Type_SmallInt(1);
constant23993 = (Object)new_AST_Constant((Object)smallint10972);
smallint10973 = (Object)new_Type_SmallInt(2);
constant23994 = (Object)new_AST_Constant((Object)smallint10973);
// >
send110066 = (Object)new_AST_Send((Object)constant23993, (Object)SMB__gt, 1, (Object)constant23994);
smallint10974 = (Object)new_Type_SmallInt(1);
constant23995 = (Object)new_AST_Constant((Object)smallint10974);
// escape:
send110067 = (Object)new_AST_Send((Object)variable1230, (Object)SMB_escape_, 1, (Object)constant23995);
block7436 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send110067);
smallint10975 = (Object)new_Type_SmallInt(2);
constant23996 = (Object)new_AST_Constant((Object)smallint10975);
// escape:
send110068 = (Object)new_AST_Send((Object)variable1230, (Object)SMB_escape_, 1, (Object)constant23996);
block7437 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send110068);
// ifTrue:ifFalse:
send110069 = (Object)new_AST_Send((Object)send110066, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7436, (Object)block7437);
block7438 = (Object)new_AST_Block_with((Type_Array)array16662, (Type_Array)empty_Type_Array, 1, 2, send110069, Self);
// on:
send110070 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7438);
method31471 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110070);
symbol30893 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure31377 = (Object)new_Runtime_MethodClosure(method31471);
store_method((Type_Class)class5270, (Type_Symbol)symbol30893, (Runtime_MethodClosure)methodclosure31377);


// BridgeTest>>tmString
//tmString
// 	^ 'String'
string11065 = (Object)new_Type_String(L"String");
constant23997 = (Object)new_AST_Constant((Object)string11065);
method31472 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant23997);
symbol30903 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure31378 = (Object)new_Runtime_MethodClosure(method31472);
store_method((Type_Class)class5270, (Type_Symbol)symbol30903, (Runtime_MethodClosure)methodclosure31378);


// BridgeTest>>tmSimpleReturn
//tmSimpleReturn
// 	^ 1
smallint10976 = (Object)new_Type_SmallInt(1);
constant23998 = (Object)new_AST_Constant((Object)smallint10976);
method31473 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant23998);
symbol30931 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure31379 = (Object)new_Runtime_MethodClosure(method31473);
store_method((Type_Class)class5270, (Type_Symbol)symbol30931, (Runtime_MethodClosure)methodclosure31379);


// BridgeTest>>setUp
//setUp
// 	
method31474 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30923 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure31380 = (Object)new_Runtime_MethodClosure(method31474);
store_method((Type_Class)class5270, (Type_Symbol)symbol30923, (Runtime_MethodClosure)methodclosure31380);


// BridgeTest>>tmSimpleInstanceCreation
//tmSimpleInstanceCreation
// 	| instance |
// 	instance := StandardTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
localvariable18430 = (Object)new_AST_Variable_named(L"instance");
array16663 = (Object)new_Type_Array_with(1, (Object)localvariable18430);
// basicNew
send110071 = (Object)new_AST_Send((Object)classreference11553, (Object)SMB_basicNew, 0);
assign13904 = (Object)new_AST_Assign((Object)localvariable18430, (Object)send110071);
localvariable18431 = (Object)new_AST_Variable_named(L"receiver");
array16664 = (Object)new_Type_Array_with(1, (Object)localvariable18431);
smallint10977 = (Object)new_Type_SmallInt(1);
constant23999 = (Object)new_AST_Constant((Object)smallint10977);
// a:
send110072 = (Object)new_AST_Send((Object)localvariable18431, (Object)symbol30952, 1, (Object)constant23999);
smallint10978 = (Object)new_Type_SmallInt(2);
constant24000 = (Object)new_AST_Constant((Object)smallint10978);
// b:
send110073 = (Object)new_AST_Send((Object)localvariable18431, (Object)symbol30954, 1, (Object)constant24000);
smallint10979 = (Object)new_Type_SmallInt(3);
constant24001 = (Object)new_AST_Constant((Object)smallint10979);
// c:
send110074 = (Object)new_AST_Send((Object)localvariable18431, (Object)symbol30957, 1, (Object)constant24001);
block7439 = (Object)new_AST_Block_with((Type_Array)array16664, (Type_Array)empty_Type_Array, 1, 3, send110072, send110073, send110074);
// value:
send110075 = (Object)new_AST_Send((Object)block7439, (Object)SMB_value_, 1, (Object)localvariable18430);
// a
send110076 = (Object)new_AST_Send((Object)localvariable18430, (Object)symbol30951, 0);
smallint10980 = (Object)new_Type_SmallInt(1);
constant24002 = (Object)new_AST_Constant((Object)smallint10980);
// =
send110077 = (Object)new_AST_Send((Object)send110076, (Object)SMB__equal, 1, (Object)constant24002);
// assert:
send110078 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110077);
// b
send110079 = (Object)new_AST_Send((Object)localvariable18430, (Object)symbol30953, 0);
smallint10981 = (Object)new_Type_SmallInt(2);
constant24003 = (Object)new_AST_Constant((Object)smallint10981);
// =
send110080 = (Object)new_AST_Send((Object)send110079, (Object)SMB__equal, 1, (Object)constant24003);
// assert:
send110081 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110080);
// c
send110082 = (Object)new_AST_Send((Object)localvariable18430, (Object)symbol30956, 0);
smallint10982 = (Object)new_Type_SmallInt(3);
constant24004 = (Object)new_AST_Constant((Object)smallint10982);
// =
send110083 = (Object)new_AST_Send((Object)send110082, (Object)SMB__equal, 1, (Object)constant24004);
// assert:
send110084 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110083);
// a
send110085 = (Object)new_AST_Send((Object)localvariable18430, (Object)symbol30951, 0);
// b
send110086 = (Object)new_AST_Send((Object)localvariable18430, (Object)symbol30953, 0);
// +
send110087 = (Object)new_AST_Send((Object)send110085, (Object)SMB__plus, 1, (Object)send110086);
// c
send110088 = (Object)new_AST_Send((Object)localvariable18430, (Object)symbol30956, 0);
// +
send110089 = (Object)new_AST_Send((Object)send110087, (Object)SMB__plus, 1, (Object)send110088);
method31475 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16663, 6, assign13904, send110075, send110078, send110081, send110084, send110089);
symbol30915 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure31381 = (Object)new_Runtime_MethodClosure(method31475);
store_method((Type_Class)class5270, (Type_Symbol)symbol30915, (Runtime_MethodClosure)methodclosure31381);


// BridgeTest>>tmVariableInstanceCreationSized
//tmVariableInstanceCreationSized
// 	| instance |
// 	instance := StandardVariableTestClass basicNew: 100.
// 	instance at: 1 put: 1.
// 	instance at: 100 put: 100.
// 	self assert: (instance at: 1) = 1.	"sample"
// 	self assert: (instance at: 100) = 100.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
localvariable18432 = (Object)new_AST_Variable_named(L"instance");
array16665 = (Object)new_Type_Array_with(1, (Object)localvariable18432);
smallint10983 = (Object)new_Type_SmallInt(100);
constant24005 = (Object)new_AST_Constant((Object)smallint10983);
// basicNew:
send110090 = (Object)new_AST_Send((Object)classreference11555, (Object)SMB_basicNew_, 1, (Object)constant24005);
assign13905 = (Object)new_AST_Assign((Object)localvariable18432, (Object)send110090);
smallint10984 = (Object)new_Type_SmallInt(1);
constant24006 = (Object)new_AST_Constant((Object)smallint10984);
smallint10985 = (Object)new_Type_SmallInt(1);
constant24007 = (Object)new_AST_Constant((Object)smallint10985);
// at:put:
send110091 = (Object)new_AST_Send((Object)localvariable18432, (Object)SMB_at_put_, 2, (Object)constant24006, (Object)constant24007);
smallint10986 = (Object)new_Type_SmallInt(100);
constant24008 = (Object)new_AST_Constant((Object)smallint10986);
smallint10987 = (Object)new_Type_SmallInt(100);
constant24009 = (Object)new_AST_Constant((Object)smallint10987);
// at:put:
send110092 = (Object)new_AST_Send((Object)localvariable18432, (Object)SMB_at_put_, 2, (Object)constant24008, (Object)constant24009);
smallint10988 = (Object)new_Type_SmallInt(1);
constant24010 = (Object)new_AST_Constant((Object)smallint10988);
// at:
send110093 = (Object)new_AST_Send((Object)localvariable18432, (Object)SMB_at_, 1, (Object)constant24010);
smallint10989 = (Object)new_Type_SmallInt(1);
constant24011 = (Object)new_AST_Constant((Object)smallint10989);
// =
send110094 = (Object)new_AST_Send((Object)send110093, (Object)SMB__equal, 1, (Object)constant24011);
// assert:
send110095 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110094);
smallint10990 = (Object)new_Type_SmallInt(100);
constant24012 = (Object)new_AST_Constant((Object)smallint10990);
// at:
send110096 = (Object)new_AST_Send((Object)localvariable18432, (Object)SMB_at_, 1, (Object)constant24012);
smallint10991 = (Object)new_Type_SmallInt(100);
constant24013 = (Object)new_AST_Constant((Object)smallint10991);
// =
send110097 = (Object)new_AST_Send((Object)send110096, (Object)SMB__equal, 1, (Object)constant24013);
// assert:
send110098 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110097);
localvariable18433 = (Object)new_AST_Variable_named(L"receiver");
array16666 = (Object)new_Type_Array_with(1, (Object)localvariable18433);
smallint10992 = (Object)new_Type_SmallInt(1);
constant24014 = (Object)new_AST_Constant((Object)smallint10992);
// a:
send110099 = (Object)new_AST_Send((Object)localvariable18433, (Object)symbol30952, 1, (Object)constant24014);
smallint10993 = (Object)new_Type_SmallInt(2);
constant24015 = (Object)new_AST_Constant((Object)smallint10993);
// b:
send110100 = (Object)new_AST_Send((Object)localvariable18433, (Object)symbol30954, 1, (Object)constant24015);
smallint10994 = (Object)new_Type_SmallInt(3);
constant24016 = (Object)new_AST_Constant((Object)smallint10994);
// c:
send110101 = (Object)new_AST_Send((Object)localvariable18433, (Object)symbol30957, 1, (Object)constant24016);
block7440 = (Object)new_AST_Block_with((Type_Array)array16666, (Type_Array)empty_Type_Array, 1, 3, send110099, send110100, send110101);
// value:
send110102 = (Object)new_AST_Send((Object)block7440, (Object)SMB_value_, 1, (Object)localvariable18432);
// a
send110103 = (Object)new_AST_Send((Object)localvariable18432, (Object)symbol30951, 0);
smallint10995 = (Object)new_Type_SmallInt(1);
constant24017 = (Object)new_AST_Constant((Object)smallint10995);
// =
send110104 = (Object)new_AST_Send((Object)send110103, (Object)SMB__equal, 1, (Object)constant24017);
// assert:
send110105 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110104);
// b
send110106 = (Object)new_AST_Send((Object)localvariable18432, (Object)symbol30953, 0);
smallint10996 = (Object)new_Type_SmallInt(2);
constant24018 = (Object)new_AST_Constant((Object)smallint10996);
// =
send110107 = (Object)new_AST_Send((Object)send110106, (Object)SMB__equal, 1, (Object)constant24018);
// assert:
send110108 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110107);
// c
send110109 = (Object)new_AST_Send((Object)localvariable18432, (Object)symbol30956, 0);
smallint10997 = (Object)new_Type_SmallInt(3);
constant24019 = (Object)new_AST_Constant((Object)smallint10997);
// =
send110110 = (Object)new_AST_Send((Object)send110109, (Object)SMB__equal, 1, (Object)constant24019);
// assert:
send110111 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110110);
// a
send110112 = (Object)new_AST_Send((Object)localvariable18432, (Object)symbol30951, 0);
// b
send110113 = (Object)new_AST_Send((Object)localvariable18432, (Object)symbol30953, 0);
// c
send110114 = (Object)new_AST_Send((Object)localvariable18432, (Object)symbol30956, 0);
smallint10998 = (Object)new_Type_SmallInt(1);
constant24020 = (Object)new_AST_Constant((Object)smallint10998);
// at:
send110115 = (Object)new_AST_Send((Object)localvariable18432, (Object)SMB_at_, 1, (Object)constant24020);
// +
send110116 = (Object)new_AST_Send((Object)send110114, (Object)SMB__plus, 1, (Object)send110115);
// +
send110117 = (Object)new_AST_Send((Object)send110113, (Object)SMB__plus, 1, (Object)send110116);
// +
send110118 = (Object)new_AST_Send((Object)send110112, (Object)SMB__plus, 1, (Object)send110117);
smallint10999 = (Object)new_Type_SmallInt(100);
constant24021 = (Object)new_AST_Constant((Object)smallint10999);
// at:
send110119 = (Object)new_AST_Send((Object)localvariable18432, (Object)SMB_at_, 1, (Object)constant24021);
// +
send110120 = (Object)new_AST_Send((Object)send110118, (Object)SMB__plus, 1, (Object)send110119);
method31476 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16665, 10, assign13905, send110091, send110092, send110095, send110098, send110102, send110105, send110108, send110111, send110120);
symbol30895 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure31382 = (Object)new_Runtime_MethodClosure(method31476);
store_method((Type_Class)class5270, (Type_Symbol)symbol30895, (Runtime_MethodClosure)methodclosure31382);


// BridgeTest>>tmCharacter
//tmCharacter
// 	^ $C
character546 = (Object)new_Type_Character(L'C');
constant24022 = (Object)new_AST_Constant((Object)character546);
method31477 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant24022);
symbol30905 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure31383 = (Object)new_Runtime_MethodClosure(method31477);
store_method((Type_Class)class5270, (Type_Symbol)symbol30905, (Runtime_MethodClosure)methodclosure31383);


// BridgeTest>>tmClassSide
//tmClassSide
// 	self assert: Object class class = Metaclass.
// 	^ StandardTestClass aClassSideMethod
// class
send110121 = (Object)new_AST_Send((Object)classreference11550, (Object)SMB_class, 0);
// class
send110122 = (Object)new_AST_Send((Object)send110121, (Object)SMB_class, 0);
// =
send110123 = (Object)new_AST_Send((Object)send110122, (Object)SMB__equal, 1, (Object)classreference11552);
// assert:
send110124 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110123);
// aClassSideMethod
send110125 = (Object)new_AST_Send((Object)classreference11553, (Object)symbol30958, 0);
method31478 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send110124, send110125);
symbol30933 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure31384 = (Object)new_Runtime_MethodClosure(method31478);
store_method((Type_Class)class5270, (Type_Symbol)symbol30933, (Runtime_MethodClosure)methodclosure31384);


// BridgeTest>>tmStringEquals
//tmStringEquals
// 	^ 'String' = 'String'
string11066 = (Object)new_Type_String(L"String");
constant24023 = (Object)new_AST_Constant((Object)string11066);
string11067 = (Object)new_Type_String(L"String");
constant24024 = (Object)new_AST_Constant((Object)string11067);
// =
send110126 = (Object)new_AST_Send((Object)constant24023, (Object)SMB__equal, 1, (Object)constant24024);
method31479 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110126);
symbol30925 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure31385 = (Object)new_Runtime_MethodClosure(method31479);
store_method((Type_Class)class5270, (Type_Symbol)symbol30925, (Runtime_MethodClosure)methodclosure31385);


// BridgeTest>>tmNumberMult
//tmNumberMult
// 	^ 2 * 3
smallint11000 = (Object)new_Type_SmallInt(2);
constant24025 = (Object)new_AST_Constant((Object)smallint11000);
smallint11001 = (Object)new_Type_SmallInt(3);
constant24026 = (Object)new_AST_Constant((Object)smallint11001);
// *
send110127 = (Object)new_AST_Send((Object)constant24025, (Object)SMB__times, 1, (Object)constant24026);
method31480 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110127);
symbol30917 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure31386 = (Object)new_Runtime_MethodClosure(method31480);
store_method((Type_Class)class5270, (Type_Symbol)symbol30917, (Runtime_MethodClosure)methodclosure31386);


// BridgeTest>>tmSuperClass
//tmSuperClass
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	instance a: 1.
// 	self assert: instance a = 1.
// 	self assert: instance b = nil.
// 	instance b: 2.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2
localvariable18434 = (Object)new_AST_Variable_named(L"instance");
array16667 = (Object)new_Type_Array_with(1, (Object)localvariable18434);
// basicNew
send110128 = (Object)new_AST_Send((Object)classreference11554, (Object)SMB_basicNew, 0);
assign13906 = (Object)new_AST_Assign((Object)localvariable18434, (Object)send110128);
smallint11002 = (Object)new_Type_SmallInt(1);
constant24027 = (Object)new_AST_Constant((Object)smallint11002);
// a:
send110129 = (Object)new_AST_Send((Object)localvariable18434, (Object)symbol30952, 1, (Object)constant24027);
// a
send110130 = (Object)new_AST_Send((Object)localvariable18434, (Object)symbol30951, 0);
smallint11003 = (Object)new_Type_SmallInt(1);
constant24028 = (Object)new_AST_Constant((Object)smallint11003);
// =
send110131 = (Object)new_AST_Send((Object)send110130, (Object)SMB__equal, 1, (Object)constant24028);
// assert:
send110132 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110131);
// b
send110133 = (Object)new_AST_Send((Object)localvariable18434, (Object)symbol30953, 0);
// =
send110134 = (Object)new_AST_Send((Object)send110133, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send110135 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110134);
smallint11004 = (Object)new_Type_SmallInt(2);
constant24029 = (Object)new_AST_Constant((Object)smallint11004);
// b:
send110136 = (Object)new_AST_Send((Object)localvariable18434, (Object)symbol30954, 1, (Object)constant24029);
// a
send110137 = (Object)new_AST_Send((Object)localvariable18434, (Object)symbol30951, 0);
smallint11005 = (Object)new_Type_SmallInt(1);
constant24030 = (Object)new_AST_Constant((Object)smallint11005);
// =
send110138 = (Object)new_AST_Send((Object)send110137, (Object)SMB__equal, 1, (Object)constant24030);
// assert:
send110139 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110138);
// b
send110140 = (Object)new_AST_Send((Object)localvariable18434, (Object)symbol30953, 0);
smallint11006 = (Object)new_Type_SmallInt(2);
constant24031 = (Object)new_AST_Constant((Object)smallint11006);
// =
send110141 = (Object)new_AST_Send((Object)send110140, (Object)SMB__equal, 1, (Object)constant24031);
// assert:
send110142 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110141);
method31481 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16667, 8, assign13906, send110129, send110132, send110135, send110136, send110139, send110142, Self);
symbol30897 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure31387 = (Object)new_Runtime_MethodClosure(method31481);
store_method((Type_Class)class5270, (Type_Symbol)symbol30897, (Runtime_MethodClosure)methodclosure31387);


// BridgeTest>>tmSymbolNotEquals
//tmSymbolNotEquals
// 	^ #Symbol = #lobmyS
constant24032 = (Object)new_AST_Constant((Object)symbol30968);
symbol30973 = (Object)new_Type_Symbol_cached(L"lobmyS");
constant24033 = (Object)new_AST_Constant((Object)symbol30973);
// =
send110143 = (Object)new_AST_Send((Object)constant24032, (Object)SMB__equal, 1, (Object)constant24033);
method31482 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110143);
symbol30910 = (Object)new_Type_Symbol_cached(L"tmSymbolNotEquals");
methodclosure31388 = (Object)new_Runtime_MethodClosure(method31482);
store_method((Type_Class)class5270, (Type_Symbol)symbol30910, (Runtime_MethodClosure)methodclosure31388);


// BridgeTest>>tmBooleanFalse
//tmBooleanFalse
// 	^ false
method31483 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol30907 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure31389 = (Object)new_Runtime_MethodClosure(method31483);
store_method((Type_Class)class5270, (Type_Symbol)symbol30907, (Runtime_MethodClosure)methodclosure31389);


// BridgeTest>>tmSuperClassSuperSend
//tmSuperClassSuperSend
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	self assert: instance test = 100
localvariable18435 = (Object)new_AST_Variable_named(L"instance");
array16668 = (Object)new_Type_Array_with(1, (Object)localvariable18435);
// basicNew
send110144 = (Object)new_AST_Send((Object)classreference11554, (Object)SMB_basicNew, 0);
assign13907 = (Object)new_AST_Assign((Object)localvariable18435, (Object)send110144);
// test
send110145 = (Object)new_AST_Send((Object)localvariable18435, (Object)symbol30955, 0);
smallint11007 = (Object)new_Type_SmallInt(100);
constant24034 = (Object)new_AST_Constant((Object)smallint11007);
// =
send110146 = (Object)new_AST_Send((Object)send110145, (Object)SMB__equal, 1, (Object)constant24034);
// assert:
send110147 = (Object)new_AST_Send((Object)Self, (Object)symbol30914, 1, (Object)send110146);
method31484 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16668, 3, assign13907, send110147, Self);
symbol30890 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure31390 = (Object)new_Runtime_MethodClosure(method31484);
store_method((Type_Class)class5270, (Type_Symbol)symbol30890, (Runtime_MethodClosure)methodclosure31390);

classreference11556 = (Object)new_Organization_ClassReference((Type_Class)class5270);
classreference11557 = (Object)new_Organization_ClassReference((Type_Class)class5272);
objectlayout7480 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7480)->values[0] = instancevariable13990;
((Type_Array)objectlayout7480)->values[1] = instancevariable13991;
((Type_Array)objectlayout7480)->values[2] = instancevariable13992;
((Type_Array)objectlayout7480)->values[3] = instancevariable13993;
((Type_Array)objectlayout7480)->values[4] = instancevariable13994;
symbol30936 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout7481 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable14008 = (Object)new_AST_InstVariable(0, L"info");
((Type_Array)objectlayout7481)->values[0] = instancevariable14008;
class5275 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7481, objectlayout7480);
((Type_Class)class5275)->name = (Type_Symbol)symbol30936;
metaclass4477 = (Object)HEADER(class5275);

// ASTNode>>info
//method31485 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14008);
symbol30939 = (Object)new_Type_Symbol_cached(L"info");
methodclosure31391 = (Object)new_Runtime_MethodClosure(method31485);
store_method((Type_Class)class5275, (Type_Symbol)symbol30939, (Runtime_MethodClosure)methodclosure31391);


// ASTNode>>initialize
//initialize
// 	"Subclasses should redefine this method to perform initializations on instance creation"
symbol30937 = (Object)new_Type_Symbol_cached(L"initialize");
super1734 = (Object)new_AST_Super((Object)symbol30937, 0);
method31486 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1734, Self);
methodclosure31392 = (Object)new_Runtime_MethodClosure(method31486);
store_method((Type_Class)class5275, (Type_Symbol)symbol30937, (Runtime_MethodClosure)methodclosure31392);


// ASTNode>>info:
//localvariable18436 = (Object)new_AST_Variable_named(L"anObject");
array16669 = (Object)new_Type_Array_with(1, (Object)localvariable18436);
assign13908 = (Object)new_AST_Assign((Object)instancevariable14008, (Object)localvariable18436);
method31487 = (Object)new_AST_Method_with((Type_Array)array16669, (Type_Array)empty_Type_Array, 2, assign13908, Self);
symbol30938 = (Object)new_Type_Symbol_cached(L"info:");
methodclosure31393 = (Object)new_Runtime_MethodClosure(method31487);
store_method((Type_Class)class5275, (Type_Symbol)symbol30938, (Runtime_MethodClosure)methodclosure31393);

classreference11558 = (Object)new_Organization_ClassReference((Type_Class)class5275);
objectlayout7482 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7482)->values[0] = instancevariable13990;
((Type_Array)objectlayout7482)->values[1] = instancevariable13991;
((Type_Array)objectlayout7482)->values[2] = instancevariable13992;
((Type_Array)objectlayout7482)->values[3] = instancevariable13993;
((Type_Array)objectlayout7482)->values[4] = instancevariable13994;
symbol30935 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout7483 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7483)->values[0] = instancevariable14008;
instancevariable14009 = (Object)new_AST_InstVariable(1, L"name");
((Type_Array)objectlayout7483)->values[1] = instancevariable14009;
instancevariable14010 = (Object)new_AST_InstVariable(2, L"scopeId");
((Type_Array)objectlayout7483)->values[2] = instancevariable14010;
instancevariable14011 = (Object)new_AST_InstVariable(3, L"localId");
((Type_Array)objectlayout7483)->values[3] = instancevariable14011;
class5276 = (Object)new_Class_withMeta((Object)class5275, objectlayout7483, objectlayout7482);
((Type_Class)class5276)->name = (Type_Symbol)symbol30935;
metaclass4478 = (Object)HEADER(class5276);

// a PMetaclass P#Variable>>named:
localvariable18437 = (Object)new_AST_Variable_named(L"aSymbol");
array16670 = (Object)new_Type_Array_with(1, (Object)localvariable18437);
symbol30866 = (Object)new_Type_Symbol_cached(L"new");
// new
send110148 = (Object)new_AST_Send((Object)Self, (Object)symbol30866, 0);
symbol30942 = (Object)new_Type_Symbol_cached(L"name:");
// asSymbol
send110149 = (Object)new_AST_Send((Object)localvariable18437, (Object)SMB_asSymbol, 0);
// name:
send110150 = (Object)new_AST_Send((Object)send110148, (Object)symbol30942, 1, (Object)send110149);
method31488 = (Object)new_AST_Method_with((Type_Array)array16670, (Type_Array)empty_Type_Array, 1, send110150);
symbol30940 = (Object)new_Type_Symbol_cached(L"named:");
methodclosure31394 = (Object)new_Runtime_MethodClosure(method31488);
store_method((Type_Class)metaclass4478, (Type_Symbol)symbol30940, (Runtime_MethodClosure)methodclosure31394);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method31489 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30946 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure31395 = (Object)new_Runtime_MethodClosure(method31489);
store_method((Type_Class)class5276, (Type_Symbol)symbol30946, (Runtime_MethodClosure)methodclosure31395);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable18438 = (Object)new_AST_Variable_named(L"anObject");
array16671 = (Object)new_Type_Array_with(1, (Object)localvariable18438);
assign13909 = (Object)new_AST_Assign((Object)instancevariable14011, (Object)localvariable18438);
method31490 = (Object)new_AST_Method_with((Type_Array)array16671, (Type_Array)empty_Type_Array, 2, assign13909, Self);
symbol30941 = (Object)new_Type_Symbol_cached(L"localId:");
methodclosure31396 = (Object)new_Runtime_MethodClosure(method31490);
store_method((Type_Class)class5276, (Type_Symbol)symbol30941, (Runtime_MethodClosure)methodclosure31396);


// Variable>>localId
//localId
// 	^ localId
method31491 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14011);
symbol30943 = (Object)new_Type_Symbol_cached(L"localId");
methodclosure31397 = (Object)new_Runtime_MethodClosure(method31491);
store_method((Type_Class)class5276, (Type_Symbol)symbol30943, (Runtime_MethodClosure)methodclosure31397);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable18439 = (Object)new_AST_Variable_named(L"anObject");
array16672 = (Object)new_Type_Array_with(1, (Object)localvariable18439);
assign13910 = (Object)new_AST_Assign((Object)instancevariable14010, (Object)localvariable18439);
method31492 = (Object)new_AST_Method_with((Type_Array)array16672, (Type_Array)empty_Type_Array, 2, assign13910, Self);
symbol30945 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure31398 = (Object)new_Runtime_MethodClosure(method31492);
store_method((Type_Class)class5276, (Type_Symbol)symbol30945, (Runtime_MethodClosure)methodclosure31398);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable18440 = (Object)new_AST_Variable_named(L"aStream");
array16673 = (Object)new_Type_Array_with(1, (Object)localvariable18440);
super1735 = (Object)new_AST_Super((Object)symbol30881, 1, (Object)localvariable18440);
string11068 = (Object)new_Type_String(L" ");
constant24035 = (Object)new_AST_Constant((Object)string11068);
// nextPutAll:
send110151 = (Object)new_AST_Send((Object)localvariable18440, (Object)symbol30967, 1, (Object)constant24035);
// name
send110152 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send110153 = (Object)new_AST_Send((Object)send110152, (Object)symbol30881, 1, (Object)localvariable18440);
string11069 = (Object)new_Type_String(L" ");
constant24036 = (Object)new_AST_Constant((Object)string11069);
// nextPutAll:
send110154 = (Object)new_AST_Send((Object)localvariable18440, (Object)symbol30967, 1, (Object)constant24036);
symbol30944 = (Object)new_Type_Symbol_cached(L"scopeId");
// scopeId
send110155 = (Object)new_AST_Send((Object)Self, (Object)symbol30944, 0);
// printOn:
send110156 = (Object)new_AST_Send((Object)send110155, (Object)symbol30881, 1, (Object)localvariable18440);
string11070 = (Object)new_Type_String(L"@");
constant24037 = (Object)new_AST_Constant((Object)string11070);
// nextPutAll:
send110157 = (Object)new_AST_Send((Object)localvariable18440, (Object)symbol30967, 1, (Object)constant24037);
// localId
send110158 = (Object)new_AST_Send((Object)Self, (Object)symbol30943, 0);
// printOn:
send110159 = (Object)new_AST_Send((Object)send110158, (Object)symbol30881, 1, (Object)localvariable18440);
method31493 = (Object)new_AST_Method_with((Type_Array)array16673, (Type_Array)empty_Type_Array, 8, super1735, send110151, send110153, send110154, send110156, send110157, send110159, Self);
methodclosure31399 = (Object)new_Runtime_MethodClosure(method31493);
store_method((Type_Class)class5276, (Type_Symbol)symbol30881, (Runtime_MethodClosure)methodclosure31399);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method31494 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14010);
methodclosure31400 = (Object)new_Runtime_MethodClosure(method31494);
store_method((Type_Class)class5276, (Type_Symbol)symbol30944, (Runtime_MethodClosure)methodclosure31400);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable18441 = (Object)new_AST_Variable_named(L"anObject");
array16674 = (Object)new_Type_Array_with(1, (Object)localvariable18441);
assign13911 = (Object)new_AST_Assign((Object)instancevariable14009, (Object)localvariable18441);
method31495 = (Object)new_AST_Method_with((Type_Array)array16674, (Type_Array)empty_Type_Array, 2, assign13911, Self);
methodclosure31401 = (Object)new_Runtime_MethodClosure(method31495);
store_method((Type_Class)class5276, (Type_Symbol)symbol30942, (Runtime_MethodClosure)methodclosure31401);


// Variable>>name
//name
// 	^ name
method31496 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14009);
methodclosure31402 = (Object)new_Runtime_MethodClosure(method31496);
store_method((Type_Class)class5276, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure31402);

objectlayout7484 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7484)->values[0] = instancevariable13990;
((Type_Array)objectlayout7484)->values[1] = instancevariable13991;
((Type_Array)objectlayout7484)->values[2] = instancevariable13992;
((Type_Array)objectlayout7484)->values[3] = instancevariable13993;
((Type_Array)objectlayout7484)->values[4] = instancevariable13994;
symbol30871 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout7485 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7485)->values[0] = instancevariable14008;
((Type_Array)objectlayout7485)->values[1] = instancevariable14009;
((Type_Array)objectlayout7485)->values[2] = instancevariable14010;
((Type_Array)objectlayout7485)->values[3] = instancevariable14011;
class5277 = (Object)new_Class_withMeta((Object)class5276, objectlayout7485, objectlayout7484);
((Type_Class)class5277)->name = (Type_Symbol)symbol30871;
metaclass4479 = (Object)HEADER(class5277);
classreference11559 = (Object)new_Organization_ClassReference((Type_Class)class5277);
classreference11560 = (Object)new_Organization_ClassReference((Type_Class)class5276);
objectlayout7486 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7486)->values[0] = instancevariable13990;
((Type_Array)objectlayout7486)->values[1] = instancevariable13991;
((Type_Array)objectlayout7486)->values[2] = instancevariable13992;
((Type_Array)objectlayout7486)->values[3] = instancevariable13993;
((Type_Array)objectlayout7486)->values[4] = instancevariable13994;
symbol30873 = (Object)new_Type_Symbol_cached(L"Type");
class5278 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7486);
((Type_Class)class5278)->name = (Type_Symbol)symbol30873;
metaclass4480 = (Object)HEADER(class5278);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable18442 = (Object)new_AST_Variable_named(L"aMessage");
array16675 = (Object)new_Type_Array_with(1, (Object)localvariable18442);
localvariable18443 = (Object)new_AST_Variable_named(L"selector");
array16676 = (Object)new_Type_Array_with(1, (Object)localvariable18443);
variable1231 = (Object)new_AST_Variable_named(L"return");
array16677 = (Object)new_Type_Array_with(1, (Object)variable1231);
// selector
send110160 = (Object)new_AST_Send((Object)localvariable18442, (Object)symbol30962, 0);
constant24038 = (Object)new_AST_Constant((Object)symbol30963);
// =
send110161 = (Object)new_AST_Send((Object)send110160, (Object)SMB__equal, 1, (Object)constant24038);
super1736 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable18442);
// escape:
send110162 = (Object)new_AST_Send((Object)variable1231, (Object)SMB_escape_, 1, (Object)super1736);
block7441 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send110162);
// ifFalse:
send110163 = (Object)new_AST_Send((Object)send110161, (Object)SMB_ifFalse_, 1, (Object)block7441);
string11071 = (Object)new_Type_String(L"visit");
constant24039 = (Object)new_AST_Constant((Object)string11071);
// objectName
send110164 = (Object)new_AST_Send((Object)Self, (Object)symbol30859, 0);
// ,
send110165 = (Object)new_AST_Send((Object)constant24039, (Object)SMB__concat, 1, (Object)send110164);
string11072 = (Object)new_Type_String(L":");
constant24040 = (Object)new_AST_Constant((Object)string11072);
// ,
send110166 = (Object)new_AST_Send((Object)send110165, (Object)SMB__concat, 1, (Object)constant24040);
// asSymbol
send110167 = (Object)new_AST_Send((Object)send110166, (Object)SMB_asSymbol, 0);
assign13912 = (Object)new_AST_Assign((Object)localvariable18443, (Object)send110167);
// argument
send110168 = (Object)new_AST_Send((Object)localvariable18442, (Object)symbol30964, 0);
// perform:with:
send110169 = (Object)new_AST_Send((Object)send110168, (Object)symbol30965, 2, (Object)localvariable18443, (Object)Self);
block7442 = (Object)new_AST_Block_with((Type_Array)array16677, (Type_Array)empty_Type_Array, 1, 3, send110163, assign13912, send110169);
// on:
send110170 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7442);
method31497 = (Object)new_AST_Method_with((Type_Array)array16675, (Type_Array)array16676, 1, send110170);
methodclosure31403 = (Object)new_Runtime_MethodClosure(method31497);
store_method((Type_Class)class5278, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure31403);

classreference11561 = (Object)new_Organization_ClassReference((Type_Class)class5278);
objectlayout7487 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7487)->values[0] = instancevariable13990;
((Type_Array)objectlayout7487)->values[1] = instancevariable13991;
((Type_Array)objectlayout7487)->values[2] = instancevariable13992;
((Type_Array)objectlayout7487)->values[3] = instancevariable13993;
((Type_Array)objectlayout7487)->values[4] = instancevariable13994;
instancevariable14012 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout7487)->values[5] = instancevariable14012;
symbol30874 = (Object)new_Type_Symbol_cached(L"Nil");
class5279 = (Object)new_Class_withMeta((Object)class5278, empty_object_layout, objectlayout7487);
((Type_Class)class5279)->name = (Type_Symbol)symbol30874;
metaclass4481 = (Object)HEADER(class5279);

// Nil>>isNil
//isNil
// 	^ true
method31498 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure31404 = (Object)new_Runtime_MethodClosure(method31498);
store_method((Type_Class)class5279, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure31404);

classreference11562 = (Object)new_Organization_ClassReference((Type_Class)class5279);
symbol30974 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send110171 = (Object)new_AST_Send((Object)classreference11562, (Object)symbol30974, 0);
// ~=
send110172 = (Object)new_AST_Send((Object)send109991, (Object)symbol30861, 1, (Object)send110171);
method31499 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110172);
symbol30875 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
methodclosure31405 = (Object)new_Runtime_MethodClosure(method31499);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30875, (Runtime_MethodClosure)methodclosure31405);


// Behavior>>superclass
//superclass
// 	"Answer the receiver's superclass, a Class."
// 
// 	^superclass
instancevariable14013 = (Object)new_AST_InstVariable(1, L"superclass");
method31500 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14013);
methodclosure31406 = (Object)new_Runtime_MethodClosure(method31500);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30867, (Runtime_MethodClosure)methodclosure31406);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable18444 = (Object)new_AST_Variable_named(L"sizeRequested");
array16678 = (Object)new_Type_Array_with(1, (Object)localvariable18444);
// basicNew:
send110173 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable18444);
// initialize
send110174 = (Object)new_AST_Send((Object)send110173, (Object)symbol30937, 0);
method31501 = (Object)new_AST_Method_with((Type_Array)array16678, (Type_Array)empty_Type_Array, 1, send110174);
symbol30863 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure31407 = (Object)new_Runtime_MethodClosure(method31501);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30863, (Runtime_MethodClosure)methodclosure31407);


// Behavior>>pInstVarNames
//objectlayout7488 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7488)->values[0] = instancevariable13990;
((Type_Array)objectlayout7488)->values[1] = instancevariable13991;
((Type_Array)objectlayout7488)->values[2] = instancevariable13992;
((Type_Array)objectlayout7488)->values[3] = instancevariable13993;
((Type_Array)objectlayout7488)->values[4] = instancevariable13994;
symbol30949 = (Object)new_Type_Symbol_cached(L"Collection");
class5280 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7488);
((Type_Class)class5280)->name = (Type_Symbol)symbol30949;
metaclass4482 = (Object)HEADER(class5280);
objectlayout7489 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7489)->values[0] = instancevariable13990;
((Type_Array)objectlayout7489)->values[1] = instancevariable13991;
((Type_Array)objectlayout7489)->values[2] = instancevariable13992;
((Type_Array)objectlayout7489)->values[3] = instancevariable13993;
((Type_Array)objectlayout7489)->values[4] = instancevariable13994;
symbol30948 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class5281 = (Object)new_Class_withMeta((Object)class5280, empty_object_layout, objectlayout7489);
((Type_Class)class5281)->name = (Type_Symbol)symbol30948;
metaclass4483 = (Object)HEADER(class5281);
classreference11563 = (Object)new_Organization_ClassReference((Type_Class)class5281);
classreference11564 = (Object)new_Organization_ClassReference((Type_Class)class5280);
objectlayout7490 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7490)->values[0] = instancevariable13990;
((Type_Array)objectlayout7490)->values[1] = instancevariable13991;
((Type_Array)objectlayout7490)->values[2] = instancevariable13992;
((Type_Array)objectlayout7490)->values[3] = instancevariable13993;
((Type_Array)objectlayout7490)->values[4] = instancevariable13994;
symbol30878 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout7491 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable14014 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout7491)->values[0] = instancevariable14014;
instancevariable14015 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout7491)->values[1] = instancevariable14015;
instancevariable14016 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout7491)->values[2] = instancevariable14016;
class5282 = (Object)new_Class_withMeta((Object)class5281, objectlayout7491, objectlayout7490);
((Type_Class)class5282)->name = (Type_Symbol)symbol30878;
metaclass4484 = (Object)HEADER(class5282);
classreference11565 = (Object)new_Organization_ClassReference((Type_Class)class5282);
// new
send110175 = (Object)new_AST_Send((Object)classreference11565, (Object)symbol30866, 0);
method31502 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110175);
symbol30879 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
methodclosure31408 = (Object)new_Runtime_MethodClosure(method31502);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30879, (Runtime_MethodClosure)methodclosure31408);


// Behavior>>instVariables
//localvariable18445 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable18446 = (Object)new_AST_Variable_named(L"instVars");
localvariable18447 = (Object)new_AST_Variable_named(L"instVar");
array16679 = (Object)new_Type_Array_with(3, (Object)localvariable18445, (Object)localvariable18446, (Object)localvariable18447);
symbol30880 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
// parentInstVariables
send110176 = (Object)new_AST_Send((Object)Self, (Object)symbol30880, 0);
assign13913 = (Object)new_AST_Assign((Object)localvariable18446, (Object)send110176);
// pInstVarNames
send110177 = (Object)new_AST_Send((Object)Self, (Object)symbol30879, 0);
symbol30975 = (Object)new_Type_Symbol_cached(L"do:");
localvariable18448 = (Object)new_AST_Variable_named(L"each");
array16680 = (Object)new_Type_Array_with(1, (Object)localvariable18448);
localvariable18449 = (Object)new_AST_Variable_named(L"var");
array16681 = (Object)new_Type_Array_with(1, (Object)localvariable18449);
// name
send110178 = (Object)new_AST_Send((Object)localvariable18449, (Object)SMB_name, 0);
// =
send110179 = (Object)new_AST_Send((Object)send110178, (Object)SMB__equal, 1, (Object)localvariable18448);
symbol30976 = (Object)new_Type_Symbol_cached(L"error:");
string11073 = (Object)new_Type_String(L"Double Declaration of \"");
constant24041 = (Object)new_AST_Constant((Object)string11073);
// ,
send110180 = (Object)new_AST_Send((Object)constant24041, (Object)SMB__concat, 1, (Object)localvariable18448);
string11074 = (Object)new_Type_String(L"\"");
constant24042 = (Object)new_AST_Constant((Object)string11074);
// ,
send110181 = (Object)new_AST_Send((Object)send110180, (Object)SMB__concat, 1, (Object)constant24042);
// error:
send110182 = (Object)new_AST_Send((Object)Self, (Object)symbol30976, 1, (Object)send110181);
block7443 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send110182);
// ifTrue:
send110183 = (Object)new_AST_Send((Object)send110179, (Object)SMB_ifTrue_, 1, (Object)block7443);
block7444 = (Object)new_AST_Block_with((Type_Array)array16681, (Type_Array)empty_Type_Array, 2, 1, send110183);
// do:
send110184 = (Object)new_AST_Send((Object)localvariable18446, (Object)symbol30975, 1, (Object)block7444);
// named:
send110185 = (Object)new_AST_Send((Object)classreference11559, (Object)symbol30940, 1, (Object)localvariable18448);
assign13914 = (Object)new_AST_Assign((Object)localvariable18447, (Object)send110185);
// size
send110186 = (Object)new_AST_Send((Object)localvariable18446, (Object)SMB_size, 0);
// localId:
send110187 = (Object)new_AST_Send((Object)localvariable18447, (Object)symbol30941, 1, (Object)send110186);
symbol30977 = (Object)new_Type_Symbol_cached(L"add:");
// add:
send110188 = (Object)new_AST_Send((Object)localvariable18446, (Object)symbol30977, 1, (Object)localvariable18447);
block7445 = (Object)new_AST_Block_with((Type_Array)array16680, (Type_Array)empty_Type_Array, 1, 4, send110184, assign13914, send110187, send110188);
// do:
send110189 = (Object)new_AST_Send((Object)send110177, (Object)symbol30975, 1, (Object)block7445);
method31503 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16679, 3, assign13913, send110189, localvariable18446);
symbol30872 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure31409 = (Object)new_Runtime_MethodClosure(method31503);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30872, (Runtime_MethodClosure)methodclosure31409);


// Behavior>>methods
//instancevariable14017 = (Object)new_AST_InstVariable(2, L"methods");
method31504 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14017);
symbol30864 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure31410 = (Object)new_Runtime_MethodClosure(method31504);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30864, (Runtime_MethodClosure)methodclosure31410);


// Behavior>>parentInstVariables
//localvariable18450 = (Object)new_AST_Variable_named(L"instVars");
array16682 = (Object)new_Type_Array_with(1, (Object)localvariable18450);
// new
send110190 = (Object)new_AST_Send((Object)classreference11565, (Object)symbol30866, 0);
assign13915 = (Object)new_AST_Assign((Object)localvariable18450, (Object)send110190);
// hasSuperclass
send110191 = (Object)new_AST_Send((Object)Self, (Object)symbol30875, 0);
symbol30978 = (Object)new_Type_Symbol_cached(L"addAll:");
// superclass
send110192 = (Object)new_AST_Send((Object)Self, (Object)symbol30867, 0);
symbol30865 = (Object)new_Type_Symbol_cached(L"layout");
// layout
send110193 = (Object)new_AST_Send((Object)send110192, (Object)symbol30865, 0);
// addAll:
send110194 = (Object)new_AST_Send((Object)localvariable18450, (Object)symbol30978, 1, (Object)send110193);
block7446 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send110194);
block7447 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send110195 = (Object)new_AST_Send((Object)send110191, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7446, (Object)block7447);
method31505 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16682, 3, assign13915, send110195, localvariable18450);
methodclosure31411 = (Object)new_Runtime_MethodClosure(method31505);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30880, (Runtime_MethodClosure)methodclosure31411);


// Behavior>>layout
//instancevariable14018 = (Object)new_AST_InstVariable(0, L"layout");
method31506 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable14018);
methodclosure31412 = (Object)new_Runtime_MethodClosure(method31506);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30865, (Runtime_MethodClosure)methodclosure31412);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send110196 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send110197 = (Object)new_AST_Send((Object)send110196, (Object)symbol30937, 0);
method31507 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send110197);
methodclosure31413 = (Object)new_Runtime_MethodClosure(method31507);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30866, (Runtime_MethodClosure)methodclosure31413);

classreference11566 = (Object)new_Organization_ClassReference((Type_Class)Behavior);
}


/* ========================================================================= */

NEW_TEST(BridgeTest_setUp)
/*
setUp
// 	
*/
// setUp
Object send110198 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30923, 0);
Object result = (Object)Eval((Object)send110198);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tearDown)
/*
tearDown
*/
// tearDown
Object send110199 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30918, 0);
Object result = (Object)Eval((Object)send110199);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanEquals)
/*
tmBooleanEquals
// 	^ true = true
*/
// tmBooleanEquals
Object send110200 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30909, 0);
Object result = (Object)Eval((Object)send110200);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanFalse)
/*
tmBooleanFalse
// 	^ false
*/
// tmBooleanFalse
Object send110201 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30907, 0);
Object result = (Object)Eval((Object)send110201);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanNotEquals)
/*
tmBooleanNotEquals
// 	^ true ~= false
*/
// tmBooleanNotEquals
Object send110202 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30929, 0);
Object result = (Object)Eval((Object)send110202);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
// 	^ true = #true
*/
// tmBooleanSymbolEquals
Object send110203 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30920, 0);
Object result = (Object)Eval((Object)send110203);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanTrue)
/*
tmBooleanTrue
// 	^ true
*/
// tmBooleanTrue
Object send110204 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30898, 0);
Object result = (Object)Eval((Object)send110204);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacter)
/*
tmCharacter
// 	^ $C
*/
// tmCharacter
Object send110205 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30905, 0);
Object result = (Object)Eval((Object)send110205);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterEquals)
/*
tmCharacterEquals
// 	^ $C = $C
*/
// tmCharacterEquals
Object send110206 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30901, 0);
Object result = (Object)Eval((Object)send110206);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
// 	^ $C = 'C'
*/
// tmCharacterStringEquals
Object send110207 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30924, 0);
Object result = (Object)Eval((Object)send110207);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
// 	^ Metaclass name.
*/
// tmClassReferenceReturn
Object send110208 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30912, 0);
Object result = (Object)Eval((Object)send110208);
ASSERT_EMPTY_STACK
Object symbol30883 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol30883);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmExtendedReturn)
/*
tmExtendedReturn
// 	1 > 2 ifTrue: [ ^ 1 ]
// 		ifFalse: [ ^ 2].
*/
// tmExtendedReturn
Object send110209 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30893, 0);
Object result = (Object)Eval((Object)send110209);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmLocalVariable)
/*
tmLocalVariable
// 	|a|
// 	a := 1.
// 	^ a
*/
// tmLocalVariable
Object send110210 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30904, 0);
Object result = (Object)Eval((Object)send110210);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
// 	<arg1: 1>
// 	^ arg + 1
*/
Object smallint11008 = (Object)new_Type_SmallInt(1);
Object constant24043 = (Object)new_AST_Constant((Object)smallint11008);
// tmMethodArgument:
Object send110211 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30926, 1, (Object)constant24043);
Object result = (Object)Eval((Object)send110211);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
// 	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
// 	^ arg1 , arg2 , arg3
*/
Object string11075 = (Object)new_Type_String(L"asdf");
Object constant24044 = (Object)new_AST_Constant((Object)string11075);
Object string11076 = (Object)new_Type_String(L"asdf");
Object constant24045 = (Object)new_AST_Constant((Object)string11076);
Object string11077 = (Object)new_Type_String(L"df");
Object constant24046 = (Object)new_AST_Constant((Object)string11077);
// tmMethodArguments:with:with:
Object send110212 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30896, 3, (Object)constant24044, (Object)constant24045, (Object)constant24046);
Object result = (Object)Eval((Object)send110212);
ASSERT_EMPTY_STACK
Object string11078 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string11078);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumber)
/*
tmNumber
// 	^ 1
*/
// tmNumber
Object send110213 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30911, 0);
Object result = (Object)Eval((Object)send110213);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberAdd)
/*
tmNumberAdd
// 	^ 1 + 1
*/
// tmNumberAdd
Object send110214 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30921, 0);
Object result = (Object)Eval((Object)send110214);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberDiv)
/*
tmNumberDiv
// 	^ 4 / 2
*/
// tmNumberDiv
Object send110215 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30919, 0);
Object result = (Object)Eval((Object)send110215);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberEquals)
/*
tmNumberEquals
// 	^ 1 = 1
*/
// tmNumberEquals
Object send110216 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30934, 0);
Object result = (Object)Eval((Object)send110216);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberMult)
/*
tmNumberMult
// 	^ 2 * 3
*/
// tmNumberMult
Object send110217 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30917, 0);
Object result = (Object)Eval((Object)send110217);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberNotEquals)
/*
tmNumberNotEquals
// 	^ 1 ~= 2
*/
// tmNumberNotEquals
Object send110218 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30927, 0);
Object result = (Object)Eval((Object)send110218);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberSubtract)
/*
tmNumberSubtract
// 	^ 2 - 1
*/
// tmNumberSubtract
Object send110219 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30916, 0);
Object result = (Object)Eval((Object)send110219);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
// 	^ ((1 + 2) + 2) * 5
*/
// tmSimpleBasicArithmetik
Object send110220 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30906, 0);
Object result = (Object)Eval((Object)send110220);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleReturn)
/*
tmSimpleReturn
// 	^ 1
*/
// tmSimpleReturn
Object send110221 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30931, 0);
Object result = (Object)Eval((Object)send110221);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmString)
/*
tmString
// 	^ 'String'
*/
// tmString
Object send110222 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30903, 0);
Object result = (Object)Eval((Object)send110222);
ASSERT_EMPTY_STACK
Object string11079 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string11079);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringEquals)
/*
tmStringEquals
// 	^ 'String' = 'String'
*/
// tmStringEquals
Object send110223 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30925, 0);
Object result = (Object)Eval((Object)send110223);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringNotEquals)
/*
tmStringNotEquals
// 	^ 'String' ~= 'gnirtS'
*/
// tmStringNotEquals
Object send110224 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30908, 0);
Object result = (Object)Eval((Object)send110224);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbol)
/*
tmSymbol
// 	^ #Symbol
*/
// tmSymbol
Object send110225 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30899, 0);
Object result = (Object)Eval((Object)send110225);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol30968);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
// 	^ #S = $S
*/
// tmSymbolCharacterEquals
Object send110226 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30902, 0);
Object result = (Object)Eval((Object)send110226);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolEquals)
/*
tmSymbolEquals
// 	^ #Symbol = #Symbol
*/
// tmSymbolEquals
Object send110227 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30900, 0);
Object result = (Object)Eval((Object)send110227);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolNotEquals)
/*
tmSymbolNotEquals
// 	^ #Symbol = #lobmyS
*/
// tmSymbolNotEquals
Object send110228 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30910, 0);
Object result = (Object)Eval((Object)send110228);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVar)
/*
tmClassInstVar
// 	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
// tmClassInstVar
Object send110229 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30922, 0);
Object result = (Object)Eval((Object)send110229);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
// 	StandardTestClass instVar: 10.
// 	self assert: StandardTestClass instVar = 10.
*/
// tmClassInstVarAssignment
Object send110230 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30892, 0);
Object result = (Object)Eval((Object)send110230);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSide)
/*
tmClassSide
// 	self assert: Object class class = Metaclass.
// 	^ StandardTestClass aClassSideMethod
*/
// tmClassSide
Object send110231 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30933, 0);
Object result = (Object)Eval((Object)send110231);
ASSERT_EMPTY_STACK
Object string11080 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string11080);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuper)
/*
tmClassSideSuper
// 	"TODO create accerssort in: everywhere"
// 	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
*/
// tmClassSideSuper
Object send110232 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30928, 0);
Object result = (Object)Eval((Object)send110232);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuperSend)
/*
tmClassSideSuperSend
// 	ChildClassTestClass a: nil.
// 	ChildClassTestClass b: nil.
// 	ChildClassTestClass c: nil.
// 	
// 	self assert: ChildClassTestClass a = nil.
// 	self assert: ChildClassTestClass b = nil.
// 	self assert: ChildClassTestClass c = nil.
// 	
// 	ChildClassTestClass a: 1.
// 	ChildClassTestClass b: 2.
// 	ChildClassTestClass c: 3.
// 	
// 	self assert: ChildClassTestClass a = 1.
// 	self assert: ChildClassTestClass b = 2.
// 	self assert: ChildClassTestClass c = 3.
*/
// tmClassSideSuperSend
Object send110233 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30930, 0);
Object result = (Object)Eval((Object)send110233);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
// 	| instance |
// 	instance := StandardTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
*/
// tmSimpleInstanceCreation
Object send110234 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30915, 0);
Object result = (Object)Eval((Object)send110234);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClass)
/*
tmSuperClass
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	instance a: 1.
// 	self assert: instance a = 1.
// 	self assert: instance b = nil.
// 	instance b: 2.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2
*/
// tmSuperClass
Object send110235 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30897, 0);
Object result = (Object)Eval((Object)send110235);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	self assert: instance test = 100
*/
// tmSuperClassSuperSend
Object send110236 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30890, 0);
Object result = (Object)Eval((Object)send110236);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
// 	| instance |
// 	instance := StandardVariableTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
*/
// tmVariableInstanceCreation
Object send110237 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30932, 0);
Object result = (Object)Eval((Object)send110237);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
// 	| instance |
// 	instance := StandardVariableTestClass basicNew: 100.
// 	instance at: 1 put: 1.
// 	instance at: 100 put: 100.
// 	self assert: (instance at: 1) = 1.	"sample"
// 	self assert: (instance at: 100) = 100.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
// tmVariableInstanceCreationSized
Object send110238 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30895, 0);
Object result = (Object)Eval((Object)send110238);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_assert_)
/*
assert: bool
// 	<arg: true>
// 	^ bool ifFalse: [ self fail. ]
// 	
*/
// assert:
Object send110239 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30914, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send110239);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmFibonacci)
/*
tmFibonacci
// 	
*/
// tmFibonacci
Object send110240 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30913, 0);
Object result = (Object)Eval((Object)send110240);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

void BridgeTest_setUp() {
// setUp
Object send110241 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol30923, 0);
Eval((Object)send110241);
}

/* ========================================================================= */

TEST_SUITE(BridgeTest,
{
    BridgeTest_create_ast();
    BridgeTest_TestCase_Class =(Type_Class)class5270;
    BridgeTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)BridgeTest_TestCase_Class));

    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberMult);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanSymbolEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmString);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolCharacterEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmMethodArgument_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassReferenceReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmVariableInstanceCreation);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberSubtract);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberAdd);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmMethodArguments_with_with_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleBasicArithmetik);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmStringEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberDiv);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSide);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSideSuper);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tearDown);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_assert_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmFibonacci);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_setUp);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmExtendedReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSuperClassSuperSend);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassInstVar);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbol);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumber);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassInstVarAssignment);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanFalse);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleInstanceCreation);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmLocalVariable);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmStringNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSideSuperSend);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacterEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacter);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanTrue);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacterStringEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSuperClass);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmVariableInstanceCreationSized);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberNotEquals);
})