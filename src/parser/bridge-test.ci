// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class BridgeTest_TestCase_Class;
Object BridgeTest_test_Class_Instance;
// Test Method symbol
Type_Symbol BridgeTest_SMB_runTestCase;
Object objectlayout932;
Object instancevariable1290;
Object instancevariable1291;
Object instancevariable1292;
Object instancevariable1293;
Object instancevariable1294;
Object symbol2828;
Object class601;
Object metaclass601;
Object objectlayout933;
Object symbol2827;
Object class602;
Object metaclass602;
Object objectlayout934;
Object symbol2753;
Object objectlayout935;
Object instancevariable1295;
Object instancevariable1296;
Object instancevariable1297;
Object class603;
Object metaclass603;
Object objectlayout936;
Object symbol2758;
Object class604;
Object metaclass604;
Object objectlayout937;
Object instancevariable1298;
Object symbol2759;
Object class605;
Object metaclass605;
Object objectlayout938;
Object symbol2816;
Object objectlayout939;
Object instancevariable1299;
Object class606;
Object metaclass606;
Object objectlayout940;
Object symbol2815;
Object objectlayout941;
Object instancevariable1300;
Object instancevariable1301;
Object instancevariable1302;
Object class607;
Object metaclass607;
Object objectlayout942;
Object symbol2747;
Object objectlayout943;
Object class608;
Object metaclass608;
Object objectlayout944;
Object instancevariable1303;
Object instancevariable1304;
Object symbol2829;
Object objectlayout945;
Object instancevariable1305;
Object class609;
Object metaclass609;
Object objectlayout946;
Object instancevariable1306;
Object symbol2769;
Object objectlayout947;
Object instancevariable1307;
Object class610;
Object metaclass610;
Object objectlayout948;
Object symbol2797;
Object arraylayout19;
Object instancevariable1308;
Object instancevariable1309;
Object instancevariable1310;
Object class611;
Object metaclass611;
Object objectlayout949;
Object instancevariable1311;
Object instancevariable1312;
Object symbol2774;
Object objectlayout950;
Object instancevariable1313;
Object instancevariable1314;
Object instancevariable1315;
Object class612;
Object metaclass612;
Object objectlayout951;
Object symbol2768;
Object class613;
Object metaclass613;
Object classreference1166;
Object classreference1167;
Object classreference1168;
Object method3694;
Object methodclosure3682;
Object classreference1169;
Object localvariable2587;
Object array2235;
Object localvariable2588;
Object array2236;
Object variable137;
Object array2237;
Object symbol2842;
Object send16434;
Object symbol2843;
Object constant4017;
Object send16435;
Object super283;
Object send16436;
Object block1012;
Object send16437;
Object string1765;
Object constant4018;
Object symbol2739;
Object send16438;
Object send16439;
Object string1766;
Object constant4019;
Object send16440;
Object send16441;
Object assign1980;
Object symbol2844;
Object send16442;
Object symbol2845;
Object send16443;
Object block1013;
Object send16444;
Object method3695;
Object methodclosure3683;
Object classreference1170;
Object classreference1171;
Object localvariable2589;
Object array2238;
Object assign1981;
Object method3696;
Object symbol2821;
Object methodclosure3684;
Object localvariable2590;
Object array2239;
Object assign1982;
Object method3697;
Object symbol2823;
Object methodclosure3685;
Object method3698;
Object symbol2825;
Object methodclosure3686;
Object localvariable2591;
Object array2240;
Object assign1983;
Object method3699;
Object symbol2820;
Object methodclosure3687;
Object method3700;
Object symbol2822;
Object methodclosure3688;
Object method3701;
Object symbol2824;
Object methodclosure3689;
Object localvariable2592;
Object array2241;
Object symbol2762;
Object super284;
Object symbol2846;
Object string1767;
Object constant4020;
Object send16445;
Object send16446;
Object send16447;
Object string1768;
Object constant4021;
Object send16448;
Object send16449;
Object send16450;
Object string1769;
Object constant4022;
Object send16451;
Object send16452;
Object send16453;
Object method3702;
Object methodclosure3690;
Object method3703;
Object methodclosure3691;
Object localvariable2593;
Object array2242;
Object symbol2755;
Object send16454;
Object send16455;
Object send16456;
Object method3704;
Object symbol2819;
Object methodclosure3692;
Object classreference1172;
Object symbol2740;
Object super285;
Object method3705;
Object methodclosure3693;
Object localvariable2594;
Object array2243;
Object assign1984;
Object method3706;
Object symbol2817;
Object methodclosure3694;
Object method3707;
Object symbol2818;
Object methodclosure3695;
Object classreference1173;
Object smallint1935;
Object constant4023;
Object method3708;
Object symbol2834;
Object methodclosure3696;
Object localvariable2595;
Object array2244;
Object assign1985;
Object method3709;
Object symbol2831;
Object methodclosure3697;
Object method3710;
Object symbol2830;
Object methodclosure3698;
Object localvariable2596;
Object array2245;
Object assign1986;
Object method3711;
Object methodclosure3699;
Object method3712;
Object symbol2832;
Object methodclosure3700;
Object localvariable2597;
Object array2246;
Object assign1987;
Object method3713;
Object symbol2833;
Object methodclosure3701;
Object method3714;
Object methodclosure3702;
Object classreference1174;
Object localvariable2598;
Object array2247;
Object assign1988;
Object method3715;
Object methodclosure3703;
Object smallint1936;
Object constant4024;
Object super286;
Object send16457;
Object method3716;
Object symbol2837;
Object methodclosure3704;
Object method3717;
Object methodclosure3705;
Object localvariable2599;
Object array2248;
Object assign1989;
Object method3718;
Object symbol2836;
Object methodclosure3706;
Object method3719;
Object symbol2835;
Object methodclosure3707;
Object classreference1175;
Object method3720;
Object methodclosure3708;
Object localvariable2600;
Object array2249;
Object assign1990;
Object method3721;
Object methodclosure3709;
Object localvariable2601;
Object array2250;
Object assign1991;
Object method3722;
Object methodclosure3710;
Object method3723;
Object methodclosure3711;
Object method3724;
Object methodclosure3712;
Object localvariable2602;
Object array2251;
Object assign1992;
Object method3725;
Object methodclosure3713;
Object classreference1176;
Object method3726;
Object methodclosure3714;
Object localvariable2603;
Object array2252;
Object assign1993;
Object method3727;
Object methodclosure3715;
Object localvariable2604;
Object array2253;
Object assign1994;
Object method3728;
Object methodclosure3716;
Object method3729;
Object methodclosure3717;
Object method3730;
Object methodclosure3718;
Object localvariable2605;
Object array2254;
Object assign1995;
Object method3731;
Object methodclosure3719;
Object smallint1937;
Object constant4025;
Object assign1996;
Object method3732;
Object symbol2839;
Object methodclosure3720;
Object method3733;
Object symbol2840;
Object methodclosure3721;
Object localvariable2606;
Object array2255;
Object assign1997;
Object method3734;
Object symbol2841;
Object methodclosure3722;
Object string1770;
Object constant4026;
Object method3735;
Object symbol2838;
Object methodclosure3723;
Object classreference1177;
Object method3736;
Object symbol2788;
Object methodclosure3724;
Object localvariable2607;
Object array2256;
Object smallint1938;
Object constant4027;
Object assign1998;
Object method3737;
Object symbol2814;
Object methodclosure3725;
Object symbol2847;
Object constant4028;
Object character113;
Object constant4029;
Object send16458;
Object method3738;
Object symbol2806;
Object methodclosure3726;
Object smallint1939;
Object constant4030;
Object smallint1940;
Object constant4031;
Object send16459;
Object method3739;
Object symbol2778;
Object methodclosure3727;
Object localvariable2608;
Object array2257;
Object smallint1941;
Object constant4032;
Object send16460;
Object assign1999;
Object smallint1942;
Object constant4033;
Object smallint1943;
Object constant4034;
Object send16461;
Object smallint1944;
Object constant4035;
Object smallint1945;
Object constant4036;
Object send16462;
Object symbol2799;
Object smallint1946;
Object constant4037;
Object send16463;
Object smallint1947;
Object constant4038;
Object send16464;
Object send16465;
Object smallint1948;
Object constant4039;
Object send16466;
Object smallint1949;
Object constant4040;
Object send16467;
Object send16468;
Object localvariable2609;
Object array2258;
Object smallint1950;
Object constant4041;
Object send16469;
Object smallint1951;
Object constant4042;
Object send16470;
Object smallint1952;
Object constant4043;
Object send16471;
Object block1014;
Object send16472;
Object send16473;
Object smallint1953;
Object constant4044;
Object send16474;
Object send16475;
Object send16476;
Object smallint1954;
Object constant4045;
Object send16477;
Object send16478;
Object send16479;
Object smallint1955;
Object constant4046;
Object send16480;
Object send16481;
Object send16482;
Object send16483;
Object send16484;
Object smallint1956;
Object constant4047;
Object send16485;
Object send16486;
Object send16487;
Object send16488;
Object smallint1957;
Object constant4048;
Object send16489;
Object send16490;
Object method3740;
Object symbol2798;
Object methodclosure3728;
Object method3741;
Object symbol2771;
Object methodclosure3729;
Object send16491;
Object send16492;
Object send16493;
Object send16494;
Object send16495;
Object send16496;
Object send16497;
Object send16498;
Object send16499;
Object send16500;
Object send16501;
Object send16502;
Object smallint1958;
Object constant4049;
Object send16503;
Object smallint1959;
Object constant4050;
Object send16504;
Object smallint1960;
Object constant4051;
Object send16505;
Object send16506;
Object smallint1961;
Object constant4052;
Object send16507;
Object send16508;
Object send16509;
Object smallint1962;
Object constant4053;
Object send16510;
Object send16511;
Object send16512;
Object smallint1963;
Object constant4054;
Object send16513;
Object send16514;
Object method3742;
Object symbol2808;
Object methodclosure3730;
Object smallint1964;
Object constant4055;
Object symbol2741;
Object smallint1965;
Object constant4056;
Object send16515;
Object method3743;
Object symbol2791;
Object methodclosure3731;
Object send16516;
Object method3744;
Object symbol2801;
Object methodclosure3732;
Object smallint1966;
Object constant4057;
Object method3745;
Object symbol2781;
Object methodclosure3733;
Object smallint1967;
Object constant4058;
Object method3746;
Object symbol2773;
Object methodclosure3734;
Object smallint1968;
Object constant4059;
Object smallint1969;
Object constant4060;
Object send16517;
Object method3747;
Object symbol2793;
Object methodclosure3735;
Object localvariable2610;
Object array2259;
Object send16518;
Object assign2000;
Object smallint1970;
Object constant4061;
Object send16519;
Object send16520;
Object smallint1971;
Object constant4062;
Object send16521;
Object send16522;
Object send16523;
Object send16524;
Object send16525;
Object smallint1972;
Object constant4063;
Object send16526;
Object send16527;
Object smallint1973;
Object constant4064;
Object send16528;
Object send16529;
Object send16530;
Object smallint1974;
Object constant4065;
Object send16531;
Object send16532;
Object method3748;
Object symbol2811;
Object methodclosure3736;
Object localvariable2611;
Object array2260;
Object send16533;
Object assign2001;
Object localvariable2612;
Object array2261;
Object smallint1975;
Object constant4066;
Object send16534;
Object smallint1976;
Object constant4067;
Object send16535;
Object smallint1977;
Object constant4068;
Object send16536;
Object block1015;
Object send16537;
Object send16538;
Object smallint1978;
Object constant4069;
Object send16539;
Object send16540;
Object send16541;
Object smallint1979;
Object constant4070;
Object send16542;
Object send16543;
Object send16544;
Object smallint1980;
Object constant4071;
Object send16545;
Object send16546;
Object send16547;
Object send16548;
Object send16549;
Object send16550;
Object send16551;
Object method3749;
Object symbol2803;
Object methodclosure3737;
Object character114;
Object constant4072;
Object method3750;
Object symbol2783;
Object methodclosure3738;
Object send16552;
Object method3751;
Object symbol2775;
Object methodclosure3739;
Object method3752;
Object symbol2795;
Object methodclosure3740;
Object string1771;
Object constant4073;
Object string1772;
Object constant4074;
Object send16553;
Object method3753;
Object symbol2787;
Object methodclosure3741;
Object symbol2848;
Object constant4075;
Object constant4076;
Object send16554;
Object method3754;
Object symbol2813;
Object methodclosure3742;
Object constant4077;
Object symbol2849;
Object constant4078;
Object send16555;
Object method3755;
Object symbol2805;
Object methodclosure3743;
Object character115;
Object constant4079;
Object character116;
Object constant4080;
Object send16556;
Object method3756;
Object symbol2785;
Object methodclosure3744;
Object symbol2850;
Object send16557;
Object send16558;
Object method3757;
Object methodclosure3745;
Object localvariable2613;
Object array2262;
Object send16559;
Object send16560;
Object method3758;
Object methodclosure3746;
Object method3759;
Object symbol2738;
Object methodclosure3747;
Object localvariable2614;
Object array2263;
Object localvariable2615;
Object array2264;
Object variable138;
Object array2265;
Object send16561;
Object constant4081;
Object send16562;
Object super287;
Object send16563;
Object block1016;
Object send16564;
Object string1773;
Object constant4082;
Object send16565;
Object send16566;
Object string1774;
Object constant4083;
Object send16567;
Object send16568;
Object assign2002;
Object send16569;
Object send16570;
Object block1017;
Object send16571;
Object method3760;
Object methodclosure3748;
Object method3761;
Object methodclosure3749;
Object method3762;
Object methodclosure3750;
Object send16572;
Object symbol2733;
Object send16573;
Object method3763;
Object methodclosure3751;
Object method3764;
Object symbol2737;
Object methodclosure3752;
Object classreference1178;
Object send16574;
Object send16575;
Object localvariable2616;
Object array2266;
Object super288;
Object symbol2851;
Object send16576;
Object send16577;
Object send16578;
Object method3765;
Object methodclosure3753;
Object classreference1179;
Object send16579;
Object send16580;
Object send16581;
Object method3766;
Object symbol2777;
Object methodclosure3754;
Object localvariable2617;
Object array2267;
Object smallint1981;
Object constant4084;
Object send16582;
Object method3767;
Object symbol2789;
Object methodclosure3755;
Object localvariable2618;
Object array2268;
Object send16583;
Object assign2003;
Object send16584;
Object smallint1982;
Object constant4085;
Object send16585;
Object send16586;
Object method3768;
Object symbol2770;
Object methodclosure3756;
Object method3769;
Object symbol2807;
Object methodclosure3757;
Object smallint1983;
Object constant4086;
Object smallint1984;
Object constant4087;
Object send16587;
Object method3770;
Object symbol2790;
Object methodclosure3758;
Object method3771;
Object symbol2779;
Object methodclosure3759;
Object localvariable2619;
Object array2269;
Object send16588;
Object assign2004;
Object localvariable2620;
Object array2270;
Object smallint1985;
Object constant4088;
Object send16589;
Object smallint1986;
Object constant4089;
Object send16590;
Object smallint1987;
Object constant4090;
Object send16591;
Object block1018;
Object send16592;
Object send16593;
Object smallint1988;
Object constant4091;
Object send16594;
Object send16595;
Object send16596;
Object smallint1989;
Object constant4092;
Object send16597;
Object send16598;
Object send16599;
Object smallint1990;
Object constant4093;
Object send16600;
Object send16601;
Object send16602;
Object send16603;
Object send16604;
Object send16605;
Object send16606;
Object method3772;
Object symbol2800;
Object methodclosure3760;
Object localvariable2621;
Object array2271;
Object symbol2852;
Object send16607;
Object block1019;
Object send16608;
Object method3773;
Object methodclosure3761;
Object send16609;
Object method3774;
Object symbol2780;
Object methodclosure3762;
Object localvariable2622;
Object localvariable2623;
Object localvariable2624;
Object array2272;
Object send16610;
Object send16611;
Object method3775;
Object symbol2772;
Object methodclosure3763;
Object constant4094;
Object method3776;
Object symbol2809;
Object methodclosure3764;
Object string1775;
Object constant4095;
Object method3777;
Object symbol2792;
Object methodclosure3765;
Object symbol2853;
Object constant4096;
Object send16612;
Object method3778;
Object symbol2810;
Object methodclosure3766;
Object method3779;
Object symbol2802;
Object methodclosure3767;
Object string1776;
Object constant4097;
Object string1777;
Object constant4098;
Object send16613;
Object method3780;
Object symbol2782;
Object methodclosure3768;
Object variable139;
Object array2273;
Object smallint1991;
Object constant4099;
Object smallint1992;
Object constant4100;
Object send16614;
Object smallint1993;
Object constant4101;
Object send16615;
Object block1020;
Object smallint1994;
Object constant4102;
Object send16616;
Object block1021;
Object send16617;
Object block1022;
Object send16618;
Object method3781;
Object symbol2794;
Object methodclosure3769;
Object smallint1995;
Object constant4103;
Object send16619;
Object send16620;
Object smallint1996;
Object constant4104;
Object send16621;
Object send16622;
Object method3782;
Object symbol2786;
Object methodclosure3770;
Object smallint1997;
Object constant4105;
Object smallint1998;
Object constant4106;
Object send16623;
Object method3783;
Object symbol2812;
Object methodclosure3771;
Object smallint1999;
Object constant4107;
Object smallint2000;
Object constant4108;
Object send16624;
Object method3784;
Object symbol2804;
Object methodclosure3772;
Object character117;
Object constant4109;
Object string1778;
Object constant4110;
Object send16625;
Object method3785;
Object symbol2784;
Object methodclosure3773;
Object smallint2001;
Object constant4111;
Object smallint2002;
Object constant4112;
Object send16626;
Object smallint2003;
Object constant4113;
Object send16627;
Object smallint2004;
Object constant4114;
Object send16628;
Object method3786;
Object symbol2776;
Object methodclosure3774;
Object send16629;
Object method3787;
Object symbol2796;
Object methodclosure3775;
Object classreference1180;
Object localvariable2625;
Object array2274;
Object send16630;
Object assign2005;
Object symbol2760;
Object send16631;
Object symbol2854;
Object symbol2756;
Object send16632;
Object symbol2750;
Object send16633;
Object send16634;
Object block1023;
Object block1024;
Object send16635;
Object method3788;
Object symbol2757;
Object methodclosure3776;
Object instancevariable1316;
Object method3789;
Object symbol2749;
Object methodclosure3777;
Object instancevariable1317;
Object method3790;
Object methodclosure3778;
Object send16636;
Object method3791;
Object symbol2754;
Object methodclosure3779;
Object send16637;
Object send16638;
Object method3792;
Object methodclosure3780;
Object localvariable2626;
Object array2275;
Object send16639;
Object send16640;
Object method3793;
Object symbol2743;
Object methodclosure3781;
Object instancevariable1318;
Object method3794;
Object methodclosure3782;
Object localvariable2627;
Object localvariable2628;
Object localvariable2629;
Object array2276;
Object send16641;
Object assign2006;
Object send16642;
Object symbol2855;
Object localvariable2630;
Object array2277;
Object localvariable2631;
Object array2278;
Object send16643;
Object send16644;
Object symbol2856;
Object string1779;
Object constant4115;
Object send16645;
Object string1780;
Object constant4116;
Object send16646;
Object send16647;
Object block1025;
Object send16648;
Object block1026;
Object send16649;
Object send16650;
Object assign2007;
Object send16651;
Object send16652;
Object symbol2857;
Object send16653;
Object block1027;
Object send16654;
Object method3795;
Object symbol2748;
Object methodclosure3783;
Object send16655;
Object symbol2858;
Object send16656;
Object send16657;
Object method3796;
Object methodclosure3784;
Object classreference1181;
Object instancevariable1319;
Object method3797;
Object methodclosure3785;
Object instancevariable1320;
Object method3798;
Object symbol2761;
Object methodclosure3786;
Object localvariable2632;
Object array2279;
Object super289;
Object string1781;
Object constant4117;
Object send16658;
Object send16659;
Object send16660;
Object method3799;
Object methodclosure3787;
Object classreference1182;

void BridgeTest_create_ast() {
objectlayout932 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable1290 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout932)->values[0] = instancevariable1290;
instancevariable1291 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout932)->values[1] = instancevariable1291;
instancevariable1292 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout932)->values[2] = instancevariable1292;
instancevariable1293 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout932)->values[3] = instancevariable1293;
instancevariable1294 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout932)->values[4] = instancevariable1294;
symbol2828 = (Object)new_Type_Symbol_cached(L"Collection");
class601 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout932);
((Type_Class)class601)->name = (Type_Symbol)symbol2828;
metaclass601 = (Object)HEADER(class601);
objectlayout933 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout933)->values[0] = instancevariable1290;
((Type_Array)objectlayout933)->values[1] = instancevariable1291;
((Type_Array)objectlayout933)->values[2] = instancevariable1292;
((Type_Array)objectlayout933)->values[3] = instancevariable1293;
((Type_Array)objectlayout933)->values[4] = instancevariable1294;
symbol2827 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class602 = (Object)new_Class_withMeta((Object)class601, empty_object_layout, objectlayout933);
((Type_Class)class602)->name = (Type_Symbol)symbol2827;
metaclass602 = (Object)HEADER(class602);
objectlayout934 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout934)->values[0] = instancevariable1290;
((Type_Array)objectlayout934)->values[1] = instancevariable1291;
((Type_Array)objectlayout934)->values[2] = instancevariable1292;
((Type_Array)objectlayout934)->values[3] = instancevariable1293;
((Type_Array)objectlayout934)->values[4] = instancevariable1294;
symbol2753 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout935 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1295 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout935)->values[0] = instancevariable1295;
instancevariable1296 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout935)->values[1] = instancevariable1296;
instancevariable1297 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout935)->values[2] = instancevariable1297;
class603 = (Object)new_Class_withMeta((Object)class602, objectlayout935, objectlayout934);
((Type_Class)class603)->name = (Type_Symbol)symbol2753;
metaclass603 = (Object)HEADER(class603);
objectlayout936 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout936)->values[0] = instancevariable1290;
((Type_Array)objectlayout936)->values[1] = instancevariable1291;
((Type_Array)objectlayout936)->values[2] = instancevariable1292;
((Type_Array)objectlayout936)->values[3] = instancevariable1293;
((Type_Array)objectlayout936)->values[4] = instancevariable1294;
symbol2758 = (Object)new_Type_Symbol_cached(L"Type");
class604 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout936);
((Type_Class)class604)->name = (Type_Symbol)symbol2758;
metaclass604 = (Object)HEADER(class604);
objectlayout937 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout937)->values[0] = instancevariable1290;
((Type_Array)objectlayout937)->values[1] = instancevariable1291;
((Type_Array)objectlayout937)->values[2] = instancevariable1292;
((Type_Array)objectlayout937)->values[3] = instancevariable1293;
((Type_Array)objectlayout937)->values[4] = instancevariable1294;
instancevariable1298 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout937)->values[5] = instancevariable1298;
symbol2759 = (Object)new_Type_Symbol_cached(L"Nil");
class605 = (Object)new_Class_withMeta((Object)class604, empty_object_layout, objectlayout937);
((Type_Class)class605)->name = (Type_Symbol)symbol2759;
metaclass605 = (Object)HEADER(class605);
objectlayout938 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout938)->values[0] = instancevariable1290;
((Type_Array)objectlayout938)->values[1] = instancevariable1291;
((Type_Array)objectlayout938)->values[2] = instancevariable1292;
((Type_Array)objectlayout938)->values[3] = instancevariable1293;
((Type_Array)objectlayout938)->values[4] = instancevariable1294;
symbol2816 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout939 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1299 = (Object)new_AST_InstVariable(0, L"info");
((Type_Array)objectlayout939)->values[0] = instancevariable1299;
class606 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout939, objectlayout938);
((Type_Class)class606)->name = (Type_Symbol)symbol2816;
metaclass606 = (Object)HEADER(class606);
objectlayout940 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout940)->values[0] = instancevariable1290;
((Type_Array)objectlayout940)->values[1] = instancevariable1291;
((Type_Array)objectlayout940)->values[2] = instancevariable1292;
((Type_Array)objectlayout940)->values[3] = instancevariable1293;
((Type_Array)objectlayout940)->values[4] = instancevariable1294;
symbol2815 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout941 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout941)->values[0] = instancevariable1299;
instancevariable1300 = (Object)new_AST_InstVariable(1, L"name");
((Type_Array)objectlayout941)->values[1] = instancevariable1300;
instancevariable1301 = (Object)new_AST_InstVariable(2, L"scopeId");
((Type_Array)objectlayout941)->values[2] = instancevariable1301;
instancevariable1302 = (Object)new_AST_InstVariable(3, L"localId");
((Type_Array)objectlayout941)->values[3] = instancevariable1302;
class607 = (Object)new_Class_withMeta((Object)class606, objectlayout941, objectlayout940);
((Type_Class)class607)->name = (Type_Symbol)symbol2815;
metaclass607 = (Object)HEADER(class607);
objectlayout942 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout942)->values[0] = instancevariable1290;
((Type_Array)objectlayout942)->values[1] = instancevariable1291;
((Type_Array)objectlayout942)->values[2] = instancevariable1292;
((Type_Array)objectlayout942)->values[3] = instancevariable1293;
((Type_Array)objectlayout942)->values[4] = instancevariable1294;
symbol2747 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout943 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout943)->values[0] = instancevariable1299;
((Type_Array)objectlayout943)->values[1] = instancevariable1300;
((Type_Array)objectlayout943)->values[2] = instancevariable1301;
((Type_Array)objectlayout943)->values[3] = instancevariable1302;
class608 = (Object)new_Class_withMeta((Object)class607, objectlayout943, objectlayout942);
((Type_Class)class608)->name = (Type_Symbol)symbol2747;
metaclass608 = (Object)HEADER(class608);
objectlayout944 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout944)->values[0] = instancevariable1290;
((Type_Array)objectlayout944)->values[1] = instancevariable1291;
((Type_Array)objectlayout944)->values[2] = instancevariable1292;
((Type_Array)objectlayout944)->values[3] = instancevariable1293;
((Type_Array)objectlayout944)->values[4] = instancevariable1294;
instancevariable1303 = (Object)new_AST_InstVariable(5, L"a");
((Type_Array)objectlayout944)->values[5] = instancevariable1303;
instancevariable1304 = (Object)new_AST_InstVariable(6, L"b");
((Type_Array)objectlayout944)->values[6] = instancevariable1304;
symbol2829 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout945 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1305 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout945)->values[0] = instancevariable1305;
class609 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout945, objectlayout944);
((Type_Class)class609)->name = (Type_Symbol)symbol2829;
metaclass609 = (Object)HEADER(class609);
objectlayout946 = (Object)create_layout_with_vars(Type_ObjectLayout, 8);
((Type_Array)objectlayout946)->values[0] = instancevariable1290;
((Type_Array)objectlayout946)->values[1] = instancevariable1291;
((Type_Array)objectlayout946)->values[2] = instancevariable1292;
((Type_Array)objectlayout946)->values[3] = instancevariable1293;
((Type_Array)objectlayout946)->values[4] = instancevariable1294;
((Type_Array)objectlayout946)->values[5] = instancevariable1303;
((Type_Array)objectlayout946)->values[6] = instancevariable1304;
instancevariable1306 = (Object)new_AST_InstVariable(7, L"c");
((Type_Array)objectlayout946)->values[7] = instancevariable1306;
symbol2769 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout947 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout947)->values[0] = instancevariable1305;
instancevariable1307 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout947)->values[1] = instancevariable1307;
class610 = (Object)new_Class_withMeta((Object)class609, objectlayout947, objectlayout946);
((Type_Class)class610)->name = (Type_Symbol)symbol2769;
metaclass610 = (Object)HEADER(class610);
objectlayout948 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout948)->values[0] = instancevariable1290;
((Type_Array)objectlayout948)->values[1] = instancevariable1291;
((Type_Array)objectlayout948)->values[2] = instancevariable1292;
((Type_Array)objectlayout948)->values[3] = instancevariable1293;
((Type_Array)objectlayout948)->values[4] = instancevariable1294;
symbol2797 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout19 = (Object)create_layout_with_vars(Type_ArrayLayout, 3);
instancevariable1308 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout19)->values[0] = instancevariable1308;
instancevariable1309 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout19)->values[1] = instancevariable1309;
instancevariable1310 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout19)->values[2] = instancevariable1310;
class611 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout19, objectlayout948);
((Type_Class)class611)->name = (Type_Symbol)symbol2797;
metaclass611 = (Object)HEADER(class611);
objectlayout949 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout949)->values[0] = instancevariable1290;
((Type_Array)objectlayout949)->values[1] = instancevariable1291;
((Type_Array)objectlayout949)->values[2] = instancevariable1292;
((Type_Array)objectlayout949)->values[3] = instancevariable1293;
((Type_Array)objectlayout949)->values[4] = instancevariable1294;
instancevariable1311 = (Object)new_AST_InstVariable(5, L"classInstVar");
((Type_Array)objectlayout949)->values[5] = instancevariable1311;
instancevariable1312 = (Object)new_AST_InstVariable(6, L"instVar");
((Type_Array)objectlayout949)->values[6] = instancevariable1312;
symbol2774 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout950 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1313 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout950)->values[0] = instancevariable1313;
instancevariable1314 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout950)->values[1] = instancevariable1314;
instancevariable1315 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout950)->values[2] = instancevariable1315;
class612 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout950, objectlayout949);
((Type_Class)class612)->name = (Type_Symbol)symbol2774;
metaclass612 = (Object)HEADER(class612);
objectlayout951 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout951)->values[0] = instancevariable1290;
((Type_Array)objectlayout951)->values[1] = instancevariable1291;
((Type_Array)objectlayout951)->values[2] = instancevariable1292;
((Type_Array)objectlayout951)->values[3] = instancevariable1293;
((Type_Array)objectlayout951)->values[4] = instancevariable1294;
symbol2768 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class613 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout951);
((Type_Class)class613)->name = (Type_Symbol)symbol2768;
metaclass613 = (Object)HEADER(class613);
classreference1166 = (Object)new_Organization_ClassReference((Type_Class)class603);
classreference1167 = (Object)new_Organization_ClassReference((Type_Class)class602);
classreference1168 = (Object)new_Organization_ClassReference((Type_Class)class601);

// Nil>>isNil
//isNil
// 	^ true
method3694 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure3682 = (Object)new_Runtime_MethodClosure(method3694);
store_method((Type_Class)class605, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure3682);

classreference1169 = (Object)new_Organization_ClassReference((Type_Class)class605);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable2587 = (Object)new_AST_Variable_named(L"aMessage");
array2235 = (Object)new_Type_Array_with(1, (Object)localvariable2587);
localvariable2588 = (Object)new_AST_Variable_named(L"selector");
array2236 = (Object)new_Type_Array_with(1, (Object)localvariable2588);
variable137 = (Object)new_AST_Variable_named(L"return");
array2237 = (Object)new_Type_Array_with(1, (Object)variable137);
symbol2842 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send16434 = (Object)new_AST_Send((Object)localvariable2587, (Object)symbol2842, 0);
symbol2843 = (Object)new_Type_Symbol_cached(L"accept:");
constant4017 = (Object)new_AST_Constant((Object)symbol2843);
// =
send16435 = (Object)new_AST_Send((Object)send16434, (Object)SMB__equal, 1, (Object)constant4017);
super283 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable2587);
// escape:
send16436 = (Object)new_AST_Send((Object)variable137, (Object)SMB_escape_, 1, (Object)super283);
block1012 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send16436);
// ifFalse:
send16437 = (Object)new_AST_Send((Object)send16435, (Object)SMB_ifFalse_, 1, (Object)block1012);
string1765 = (Object)new_Type_String(L"visit");
constant4018 = (Object)new_AST_Constant((Object)string1765);
symbol2739 = (Object)new_Type_Symbol_cached(L"objectName");
// objectName
send16438 = (Object)new_AST_Send((Object)Self, (Object)symbol2739, 0);
// ,
send16439 = (Object)new_AST_Send((Object)constant4018, (Object)SMB__concat, 1, (Object)send16438);
string1766 = (Object)new_Type_String(L":");
constant4019 = (Object)new_AST_Constant((Object)string1766);
// ,
send16440 = (Object)new_AST_Send((Object)send16439, (Object)SMB__concat, 1, (Object)constant4019);
// asSymbol
send16441 = (Object)new_AST_Send((Object)send16440, (Object)SMB_asSymbol, 0);
assign1980 = (Object)new_AST_Assign((Object)localvariable2588, (Object)send16441);
symbol2844 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send16442 = (Object)new_AST_Send((Object)localvariable2587, (Object)symbol2844, 0);
symbol2845 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send16443 = (Object)new_AST_Send((Object)send16442, (Object)symbol2845, 2, (Object)localvariable2588, (Object)Self);
block1013 = (Object)new_AST_Block_with((Type_Array)array2237, (Type_Array)empty_Type_Array, 1, 3, send16437, assign1980, send16443);
// on:
send16444 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1013);
method3695 = (Object)new_AST_Method_with((Type_Array)array2235, (Type_Array)array2236, 1, send16444);
methodclosure3683 = (Object)new_Runtime_MethodClosure(method3695);
store_method((Type_Class)class604, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure3683);

classreference1170 = (Object)new_Organization_ClassReference((Type_Class)class604);
classreference1171 = (Object)new_Organization_ClassReference((Type_Class)class608);

// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable2589 = (Object)new_AST_Variable_named(L"anObject");
array2238 = (Object)new_Type_Array_with(1, (Object)localvariable2589);
assign1981 = (Object)new_AST_Assign((Object)instancevariable1302, (Object)localvariable2589);
method3696 = (Object)new_AST_Method_with((Type_Array)array2238, (Type_Array)empty_Type_Array, 2, assign1981, Self);
symbol2821 = (Object)new_Type_Symbol_cached(L"localId:");
methodclosure3684 = (Object)new_Runtime_MethodClosure(method3696);
store_method((Type_Class)class607, (Type_Symbol)symbol2821, (Runtime_MethodClosure)methodclosure3684);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable2590 = (Object)new_AST_Variable_named(L"anObject");
array2239 = (Object)new_Type_Array_with(1, (Object)localvariable2590);
assign1982 = (Object)new_AST_Assign((Object)instancevariable1300, (Object)localvariable2590);
method3697 = (Object)new_AST_Method_with((Type_Array)array2239, (Type_Array)empty_Type_Array, 2, assign1982, Self);
symbol2823 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure3685 = (Object)new_Runtime_MethodClosure(method3697);
store_method((Type_Class)class607, (Type_Symbol)symbol2823, (Runtime_MethodClosure)methodclosure3685);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method3698 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1301);
symbol2825 = (Object)new_Type_Symbol_cached(L"scopeId");
methodclosure3686 = (Object)new_Runtime_MethodClosure(method3698);
store_method((Type_Class)class607, (Type_Symbol)symbol2825, (Runtime_MethodClosure)methodclosure3686);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable2591 = (Object)new_AST_Variable_named(L"anObject");
array2240 = (Object)new_Type_Array_with(1, (Object)localvariable2591);
assign1983 = (Object)new_AST_Assign((Object)instancevariable1301, (Object)localvariable2591);
method3699 = (Object)new_AST_Method_with((Type_Array)array2240, (Type_Array)empty_Type_Array, 2, assign1983, Self);
symbol2820 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure3687 = (Object)new_Runtime_MethodClosure(method3699);
store_method((Type_Class)class607, (Type_Symbol)symbol2820, (Runtime_MethodClosure)methodclosure3687);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method3700 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2822 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure3688 = (Object)new_Runtime_MethodClosure(method3700);
store_method((Type_Class)class607, (Type_Symbol)symbol2822, (Runtime_MethodClosure)methodclosure3688);


// Variable>>localId
//localId
// 	^ localId
method3701 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1302);
symbol2824 = (Object)new_Type_Symbol_cached(L"localId");
methodclosure3689 = (Object)new_Runtime_MethodClosure(method3701);
store_method((Type_Class)class607, (Type_Symbol)symbol2824, (Runtime_MethodClosure)methodclosure3689);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable2592 = (Object)new_AST_Variable_named(L"aStream");
array2241 = (Object)new_Type_Array_with(1, (Object)localvariable2592);
symbol2762 = (Object)new_Type_Symbol_cached(L"printOn:");
super284 = (Object)new_AST_Super((Object)symbol2762, 1, (Object)localvariable2592);
symbol2846 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string1767 = (Object)new_Type_String(L" ");
constant4020 = (Object)new_AST_Constant((Object)string1767);
// nextPutAll:
send16445 = (Object)new_AST_Send((Object)localvariable2592, (Object)symbol2846, 1, (Object)constant4020);
// name
send16446 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send16447 = (Object)new_AST_Send((Object)send16446, (Object)symbol2762, 1, (Object)localvariable2592);
string1768 = (Object)new_Type_String(L" ");
constant4021 = (Object)new_AST_Constant((Object)string1768);
// nextPutAll:
send16448 = (Object)new_AST_Send((Object)localvariable2592, (Object)symbol2846, 1, (Object)constant4021);
// scopeId
send16449 = (Object)new_AST_Send((Object)Self, (Object)symbol2825, 0);
// printOn:
send16450 = (Object)new_AST_Send((Object)send16449, (Object)symbol2762, 1, (Object)localvariable2592);
string1769 = (Object)new_Type_String(L"@");
constant4022 = (Object)new_AST_Constant((Object)string1769);
// nextPutAll:
send16451 = (Object)new_AST_Send((Object)localvariable2592, (Object)symbol2846, 1, (Object)constant4022);
// localId
send16452 = (Object)new_AST_Send((Object)Self, (Object)symbol2824, 0);
// printOn:
send16453 = (Object)new_AST_Send((Object)send16452, (Object)symbol2762, 1, (Object)localvariable2592);
method3702 = (Object)new_AST_Method_with((Type_Array)array2241, (Type_Array)empty_Type_Array, 8, super284, send16445, send16447, send16448, send16450, send16451, send16453, Self);
methodclosure3690 = (Object)new_Runtime_MethodClosure(method3702);
store_method((Type_Class)class607, (Type_Symbol)symbol2762, (Runtime_MethodClosure)methodclosure3690);


// Variable>>name
//name
// 	^ name
method3703 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1300);
methodclosure3691 = (Object)new_Runtime_MethodClosure(method3703);
store_method((Type_Class)class607, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3691);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable2593 = (Object)new_AST_Variable_named(L"aSymbol");
array2242 = (Object)new_Type_Array_with(1, (Object)localvariable2593);
symbol2755 = (Object)new_Type_Symbol_cached(L"new");
// new
send16454 = (Object)new_AST_Send((Object)Self, (Object)symbol2755, 0);
// asSymbol
send16455 = (Object)new_AST_Send((Object)localvariable2593, (Object)SMB_asSymbol, 0);
// name:
send16456 = (Object)new_AST_Send((Object)send16454, (Object)symbol2823, 1, (Object)send16455);
method3704 = (Object)new_AST_Method_with((Type_Array)array2242, (Type_Array)empty_Type_Array, 1, send16456);
symbol2819 = (Object)new_Type_Symbol_cached(L"named:");
methodclosure3692 = (Object)new_Runtime_MethodClosure(method3704);
store_method((Type_Class)metaclass607, (Type_Symbol)symbol2819, (Runtime_MethodClosure)methodclosure3692);

classreference1172 = (Object)new_Organization_ClassReference((Type_Class)class607);

// ASTNode>>initialize
//initialize 
// 	super initialize.
// 	
symbol2740 = (Object)new_Type_Symbol_cached(L"initialize");
super285 = (Object)new_AST_Super((Object)symbol2740, 0);
method3705 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super285, Self);
methodclosure3693 = (Object)new_Runtime_MethodClosure(method3705);
store_method((Type_Class)class606, (Type_Symbol)symbol2740, (Runtime_MethodClosure)methodclosure3693);


// ASTNode>>info:
//info: anObject
// 	info := anObject
localvariable2594 = (Object)new_AST_Variable_named(L"anObject");
array2243 = (Object)new_Type_Array_with(1, (Object)localvariable2594);
assign1984 = (Object)new_AST_Assign((Object)instancevariable1299, (Object)localvariable2594);
method3706 = (Object)new_AST_Method_with((Type_Array)array2243, (Type_Array)empty_Type_Array, 2, assign1984, Self);
symbol2817 = (Object)new_Type_Symbol_cached(L"info:");
methodclosure3694 = (Object)new_Runtime_MethodClosure(method3706);
store_method((Type_Class)class606, (Type_Symbol)symbol2817, (Runtime_MethodClosure)methodclosure3694);


// ASTNode>>info
//info
// 	^ info
method3707 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1299);
symbol2818 = (Object)new_Type_Symbol_cached(L"info");
methodclosure3695 = (Object)new_Runtime_MethodClosure(method3707);
store_method((Type_Class)class606, (Type_Symbol)symbol2818, (Runtime_MethodClosure)methodclosure3695);

classreference1173 = (Object)new_Organization_ClassReference((Type_Class)class606);

// SuperClassTestClass>>test
//test
// 	^ 10
smallint1935 = (Object)new_Type_SmallInt(10);
constant4023 = (Object)new_AST_Constant((Object)smallint1935);
method3708 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4023);
symbol2834 = (Object)new_Type_Symbol_cached(L"test");
methodclosure3696 = (Object)new_Runtime_MethodClosure(method3708);
store_method((Type_Class)class609, (Type_Symbol)symbol2834, (Runtime_MethodClosure)methodclosure3696);


// SuperClassTestClass>>a:
//a: anObject
// 	a := anObject
localvariable2595 = (Object)new_AST_Variable_named(L"anObject");
array2244 = (Object)new_Type_Array_with(1, (Object)localvariable2595);
assign1985 = (Object)new_AST_Assign((Object)instancevariable1305, (Object)localvariable2595);
method3709 = (Object)new_AST_Method_with((Type_Array)array2244, (Type_Array)empty_Type_Array, 2, assign1985, Self);
symbol2831 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure3697 = (Object)new_Runtime_MethodClosure(method3709);
store_method((Type_Class)class609, (Type_Symbol)symbol2831, (Runtime_MethodClosure)methodclosure3697);


// SuperClassTestClass>>a
//a
// 	^ a
method3710 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1305);
symbol2830 = (Object)new_Type_Symbol_cached(L"a");
methodclosure3698 = (Object)new_Runtime_MethodClosure(method3710);
store_method((Type_Class)class609, (Type_Symbol)symbol2830, (Runtime_MethodClosure)methodclosure3698);


// a PMetaclass P#SuperClassTestClass>>a:
//a: anObject
// 	a := anObject
localvariable2596 = (Object)new_AST_Variable_named(L"anObject");
array2245 = (Object)new_Type_Array_with(1, (Object)localvariable2596);
assign1986 = (Object)new_AST_Assign((Object)instancevariable1303, (Object)localvariable2596);
method3711 = (Object)new_AST_Method_with((Type_Array)array2245, (Type_Array)empty_Type_Array, 2, assign1986, Self);
methodclosure3699 = (Object)new_Runtime_MethodClosure(method3711);
store_method((Type_Class)metaclass609, (Type_Symbol)symbol2831, (Runtime_MethodClosure)methodclosure3699);


// a PMetaclass P#SuperClassTestClass>>b
//b
// 	^ b
method3712 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1304);
symbol2832 = (Object)new_Type_Symbol_cached(L"b");
methodclosure3700 = (Object)new_Runtime_MethodClosure(method3712);
store_method((Type_Class)metaclass609, (Type_Symbol)symbol2832, (Runtime_MethodClosure)methodclosure3700);


// a PMetaclass P#SuperClassTestClass>>b:
//b: anObject
// 	b := anObject
localvariable2597 = (Object)new_AST_Variable_named(L"anObject");
array2246 = (Object)new_Type_Array_with(1, (Object)localvariable2597);
assign1987 = (Object)new_AST_Assign((Object)instancevariable1304, (Object)localvariable2597);
method3713 = (Object)new_AST_Method_with((Type_Array)array2246, (Type_Array)empty_Type_Array, 2, assign1987, Self);
symbol2833 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure3701 = (Object)new_Runtime_MethodClosure(method3713);
store_method((Type_Class)metaclass609, (Type_Symbol)symbol2833, (Runtime_MethodClosure)methodclosure3701);


// a PMetaclass P#SuperClassTestClass>>a
//a
// 	^ a
method3714 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1303);
methodclosure3702 = (Object)new_Runtime_MethodClosure(method3714);
store_method((Type_Class)metaclass609, (Type_Symbol)symbol2830, (Runtime_MethodClosure)methodclosure3702);

classreference1174 = (Object)new_Organization_ClassReference((Type_Class)class609);

// ChildClassTestClass>>b:
//b: anObject
// 	b := anObject
localvariable2598 = (Object)new_AST_Variable_named(L"anObject");
array2247 = (Object)new_Type_Array_with(1, (Object)localvariable2598);
assign1988 = (Object)new_AST_Assign((Object)instancevariable1307, (Object)localvariable2598);
method3715 = (Object)new_AST_Method_with((Type_Array)array2247, (Type_Array)empty_Type_Array, 2, assign1988, Self);
methodclosure3703 = (Object)new_Runtime_MethodClosure(method3715);
store_method((Type_Class)class610, (Type_Symbol)symbol2833, (Runtime_MethodClosure)methodclosure3703);


// ChildClassTestClass>>testSuper
//testSuper
// 	^ 10 * super test
smallint1936 = (Object)new_Type_SmallInt(10);
constant4024 = (Object)new_AST_Constant((Object)smallint1936);
super286 = (Object)new_AST_Super((Object)symbol2834, 0);
// *
send16457 = (Object)new_AST_Send((Object)constant4024, (Object)SMB__times, 1, (Object)super286);
method3716 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16457);
symbol2837 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure3704 = (Object)new_Runtime_MethodClosure(method3716);
store_method((Type_Class)class610, (Type_Symbol)symbol2837, (Runtime_MethodClosure)methodclosure3704);


// ChildClassTestClass>>b
//b
// 	^ b
method3717 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1307);
methodclosure3705 = (Object)new_Runtime_MethodClosure(method3717);
store_method((Type_Class)class610, (Type_Symbol)symbol2832, (Runtime_MethodClosure)methodclosure3705);


// a PMetaclass P#ChildClassTestClass>>c:
//c: anObject
// 	c := anObject
localvariable2599 = (Object)new_AST_Variable_named(L"anObject");
array2248 = (Object)new_Type_Array_with(1, (Object)localvariable2599);
assign1989 = (Object)new_AST_Assign((Object)instancevariable1306, (Object)localvariable2599);
method3718 = (Object)new_AST_Method_with((Type_Array)array2248, (Type_Array)empty_Type_Array, 2, assign1989, Self);
symbol2836 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure3706 = (Object)new_Runtime_MethodClosure(method3718);
store_method((Type_Class)metaclass610, (Type_Symbol)symbol2836, (Runtime_MethodClosure)methodclosure3706);


// a PMetaclass P#ChildClassTestClass>>c
//c
// 	^ c
method3719 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1306);
symbol2835 = (Object)new_Type_Symbol_cached(L"c");
methodclosure3707 = (Object)new_Runtime_MethodClosure(method3719);
store_method((Type_Class)metaclass610, (Type_Symbol)symbol2835, (Runtime_MethodClosure)methodclosure3707);

classreference1175 = (Object)new_Organization_ClassReference((Type_Class)class610);

// StandardVariableTestClass>>c
//c
// 	^ c
method3720 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1310);
methodclosure3708 = (Object)new_Runtime_MethodClosure(method3720);
store_method((Type_Class)class611, (Type_Symbol)symbol2835, (Runtime_MethodClosure)methodclosure3708);


// StandardVariableTestClass>>a:
//a: anObject
// 	a := anObject
localvariable2600 = (Object)new_AST_Variable_named(L"anObject");
array2249 = (Object)new_Type_Array_with(1, (Object)localvariable2600);
assign1990 = (Object)new_AST_Assign((Object)instancevariable1308, (Object)localvariable2600);
method3721 = (Object)new_AST_Method_with((Type_Array)array2249, (Type_Array)empty_Type_Array, 2, assign1990, Self);
methodclosure3709 = (Object)new_Runtime_MethodClosure(method3721);
store_method((Type_Class)class611, (Type_Symbol)symbol2831, (Runtime_MethodClosure)methodclosure3709);


// StandardVariableTestClass>>c:
//c: anObject
// 	c := anObject
localvariable2601 = (Object)new_AST_Variable_named(L"anObject");
array2250 = (Object)new_Type_Array_with(1, (Object)localvariable2601);
assign1991 = (Object)new_AST_Assign((Object)instancevariable1310, (Object)localvariable2601);
method3722 = (Object)new_AST_Method_with((Type_Array)array2250, (Type_Array)empty_Type_Array, 2, assign1991, Self);
methodclosure3710 = (Object)new_Runtime_MethodClosure(method3722);
store_method((Type_Class)class611, (Type_Symbol)symbol2836, (Runtime_MethodClosure)methodclosure3710);


// StandardVariableTestClass>>a
//a
// 	^ a
method3723 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1308);
methodclosure3711 = (Object)new_Runtime_MethodClosure(method3723);
store_method((Type_Class)class611, (Type_Symbol)symbol2830, (Runtime_MethodClosure)methodclosure3711);


// StandardVariableTestClass>>b
//b
// 	^ b
method3724 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1309);
methodclosure3712 = (Object)new_Runtime_MethodClosure(method3724);
store_method((Type_Class)class611, (Type_Symbol)symbol2832, (Runtime_MethodClosure)methodclosure3712);


// StandardVariableTestClass>>b:
//b: anObject
// 	b := anObject
localvariable2602 = (Object)new_AST_Variable_named(L"anObject");
array2251 = (Object)new_Type_Array_with(1, (Object)localvariable2602);
assign1992 = (Object)new_AST_Assign((Object)instancevariable1309, (Object)localvariable2602);
method3725 = (Object)new_AST_Method_with((Type_Array)array2251, (Type_Array)empty_Type_Array, 2, assign1992, Self);
methodclosure3713 = (Object)new_Runtime_MethodClosure(method3725);
store_method((Type_Class)class611, (Type_Symbol)symbol2833, (Runtime_MethodClosure)methodclosure3713);

classreference1176 = (Object)new_Organization_ClassReference((Type_Class)class611);

// StandardTestClass>>c
//c
// 	^ c
method3726 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1315);
methodclosure3714 = (Object)new_Runtime_MethodClosure(method3726);
store_method((Type_Class)class612, (Type_Symbol)symbol2835, (Runtime_MethodClosure)methodclosure3714);


// StandardTestClass>>a:
//a: anObject
// 	a := anObject
localvariable2603 = (Object)new_AST_Variable_named(L"anObject");
array2252 = (Object)new_Type_Array_with(1, (Object)localvariable2603);
assign1993 = (Object)new_AST_Assign((Object)instancevariable1313, (Object)localvariable2603);
method3727 = (Object)new_AST_Method_with((Type_Array)array2252, (Type_Array)empty_Type_Array, 2, assign1993, Self);
methodclosure3715 = (Object)new_Runtime_MethodClosure(method3727);
store_method((Type_Class)class612, (Type_Symbol)symbol2831, (Runtime_MethodClosure)methodclosure3715);


// StandardTestClass>>c:
//c: anObject
// 	c := anObject
localvariable2604 = (Object)new_AST_Variable_named(L"anObject");
array2253 = (Object)new_Type_Array_with(1, (Object)localvariable2604);
assign1994 = (Object)new_AST_Assign((Object)instancevariable1315, (Object)localvariable2604);
method3728 = (Object)new_AST_Method_with((Type_Array)array2253, (Type_Array)empty_Type_Array, 2, assign1994, Self);
methodclosure3716 = (Object)new_Runtime_MethodClosure(method3728);
store_method((Type_Class)class612, (Type_Symbol)symbol2836, (Runtime_MethodClosure)methodclosure3716);


// StandardTestClass>>a
//a
// 	^ a
method3729 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1313);
methodclosure3717 = (Object)new_Runtime_MethodClosure(method3729);
store_method((Type_Class)class612, (Type_Symbol)symbol2830, (Runtime_MethodClosure)methodclosure3717);


// StandardTestClass>>b
//b
// 	^ b
method3730 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1314);
methodclosure3718 = (Object)new_Runtime_MethodClosure(method3730);
store_method((Type_Class)class612, (Type_Symbol)symbol2832, (Runtime_MethodClosure)methodclosure3718);


// StandardTestClass>>b:
//b: anObject
// 	b := anObject
localvariable2605 = (Object)new_AST_Variable_named(L"anObject");
array2254 = (Object)new_Type_Array_with(1, (Object)localvariable2605);
assign1995 = (Object)new_AST_Assign((Object)instancevariable1314, (Object)localvariable2605);
method3731 = (Object)new_AST_Method_with((Type_Array)array2254, (Type_Array)empty_Type_Array, 2, assign1995, Self);
methodclosure3719 = (Object)new_Runtime_MethodClosure(method3731);
store_method((Type_Class)class612, (Type_Symbol)symbol2833, (Runtime_MethodClosure)methodclosure3719);


// a PMetaclass P#StandardTestClass>>aClassSideMethodWithInstanceVariables
//aClassSideMethodWithInstanceVariables
// 	classInstVar := 100.
// 	^ classInstVar
smallint1937 = (Object)new_Type_SmallInt(100);
constant4025 = (Object)new_AST_Constant((Object)smallint1937);
assign1996 = (Object)new_AST_Assign((Object)instancevariable1311, (Object)constant4025);
method3732 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign1996, instancevariable1311);
symbol2839 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure3720 = (Object)new_Runtime_MethodClosure(method3732);
store_method((Type_Class)metaclass612, (Type_Symbol)symbol2839, (Runtime_MethodClosure)methodclosure3720);


// a PMetaclass P#StandardTestClass>>instVar
//instVar
// 	^ instVar
method3733 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1312);
symbol2840 = (Object)new_Type_Symbol_cached(L"instVar");
methodclosure3721 = (Object)new_Runtime_MethodClosure(method3733);
store_method((Type_Class)metaclass612, (Type_Symbol)symbol2840, (Runtime_MethodClosure)methodclosure3721);


// a PMetaclass P#StandardTestClass>>instVar:
//instVar: anObject
// 	instVar := anObject
localvariable2606 = (Object)new_AST_Variable_named(L"anObject");
array2255 = (Object)new_Type_Array_with(1, (Object)localvariable2606);
assign1997 = (Object)new_AST_Assign((Object)instancevariable1312, (Object)localvariable2606);
method3734 = (Object)new_AST_Method_with((Type_Array)array2255, (Type_Array)empty_Type_Array, 2, assign1997, Self);
symbol2841 = (Object)new_Type_Symbol_cached(L"instVar:");
methodclosure3722 = (Object)new_Runtime_MethodClosure(method3734);
store_method((Type_Class)metaclass612, (Type_Symbol)symbol2841, (Runtime_MethodClosure)methodclosure3722);


// a PMetaclass P#StandardTestClass>>aClassSideMethod
//aClassSideMethod
// 	^ 'a'
string1770 = (Object)new_Type_String(L"a");
constant4026 = (Object)new_AST_Constant((Object)string1770);
method3735 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4026);
symbol2838 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure3723 = (Object)new_Runtime_MethodClosure(method3735);
store_method((Type_Class)metaclass612, (Type_Symbol)symbol2838, (Runtime_MethodClosure)methodclosure3723);

classreference1177 = (Object)new_Organization_ClassReference((Type_Class)class612);

// BridgeTest>>tmBooleanTrue
//tmBooleanTrue
// 	^ true
method3736 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol2788 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure3724 = (Object)new_Runtime_MethodClosure(method3736);
store_method((Type_Class)class613, (Type_Symbol)symbol2788, (Runtime_MethodClosure)methodclosure3724);


// BridgeTest>>tmLocalVariable
//tmLocalVariable
// 	|a|
// 	a := 1.
// 	^ a
localvariable2607 = (Object)new_AST_Variable_named(L"a");
array2256 = (Object)new_Type_Array_with(1, (Object)localvariable2607);
smallint1938 = (Object)new_Type_SmallInt(1);
constant4027 = (Object)new_AST_Constant((Object)smallint1938);
assign1998 = (Object)new_AST_Assign((Object)localvariable2607, (Object)constant4027);
method3737 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2256, 2, assign1998, localvariable2607);
symbol2814 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure3725 = (Object)new_Runtime_MethodClosure(method3737);
store_method((Type_Class)class613, (Type_Symbol)symbol2814, (Runtime_MethodClosure)methodclosure3725);


// BridgeTest>>tmSymbolCharacterEquals
//tmSymbolCharacterEquals
// 	^ #S = $S
symbol2847 = (Object)new_Type_Symbol_cached(L"S");
constant4028 = (Object)new_AST_Constant((Object)symbol2847);
character113 = (Object)new_Type_Character(L'S');
constant4029 = (Object)new_AST_Constant((Object)character113);
// =
send16458 = (Object)new_AST_Send((Object)constant4028, (Object)SMB__equal, 1, (Object)constant4029);
method3738 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16458);
symbol2806 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure3726 = (Object)new_Runtime_MethodClosure(method3738);
store_method((Type_Class)class613, (Type_Symbol)symbol2806, (Runtime_MethodClosure)methodclosure3726);


// BridgeTest>>tmNumberAdd
//tmNumberAdd
// 	^ 1 + 1
smallint1939 = (Object)new_Type_SmallInt(1);
constant4030 = (Object)new_AST_Constant((Object)smallint1939);
smallint1940 = (Object)new_Type_SmallInt(1);
constant4031 = (Object)new_AST_Constant((Object)smallint1940);
// +
send16459 = (Object)new_AST_Send((Object)constant4030, (Object)SMB__plus, 1, (Object)constant4031);
method3739 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16459);
symbol2778 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure3727 = (Object)new_Runtime_MethodClosure(method3739);
store_method((Type_Class)class613, (Type_Symbol)symbol2778, (Runtime_MethodClosure)methodclosure3727);


// BridgeTest>>tmVariableInstanceCreationSized
//tmVariableInstanceCreationSized
// 	| instance |
// 	instance := StandardVariableTestClass basicNew: 100.
// 	instance at: 1 put: 1.
// 	instance at: 100 put: 100.
// 	self assert: (instance at: 1) = 1.	"sample"
// 	self assert: (instance at: 100) = 100.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
localvariable2608 = (Object)new_AST_Variable_named(L"instance");
array2257 = (Object)new_Type_Array_with(1, (Object)localvariable2608);
smallint1941 = (Object)new_Type_SmallInt(100);
constant4032 = (Object)new_AST_Constant((Object)smallint1941);
// basicNew:
send16460 = (Object)new_AST_Send((Object)classreference1176, (Object)SMB_basicNew_, 1, (Object)constant4032);
assign1999 = (Object)new_AST_Assign((Object)localvariable2608, (Object)send16460);
smallint1942 = (Object)new_Type_SmallInt(1);
constant4033 = (Object)new_AST_Constant((Object)smallint1942);
smallint1943 = (Object)new_Type_SmallInt(1);
constant4034 = (Object)new_AST_Constant((Object)smallint1943);
// at:put:
send16461 = (Object)new_AST_Send((Object)localvariable2608, (Object)SMB_at_put_, 2, (Object)constant4033, (Object)constant4034);
smallint1944 = (Object)new_Type_SmallInt(100);
constant4035 = (Object)new_AST_Constant((Object)smallint1944);
smallint1945 = (Object)new_Type_SmallInt(100);
constant4036 = (Object)new_AST_Constant((Object)smallint1945);
// at:put:
send16462 = (Object)new_AST_Send((Object)localvariable2608, (Object)SMB_at_put_, 2, (Object)constant4035, (Object)constant4036);
symbol2799 = (Object)new_Type_Symbol_cached(L"assert:");
smallint1946 = (Object)new_Type_SmallInt(1);
constant4037 = (Object)new_AST_Constant((Object)smallint1946);
// at:
send16463 = (Object)new_AST_Send((Object)localvariable2608, (Object)SMB_at_, 1, (Object)constant4037);
smallint1947 = (Object)new_Type_SmallInt(1);
constant4038 = (Object)new_AST_Constant((Object)smallint1947);
// =
send16464 = (Object)new_AST_Send((Object)send16463, (Object)SMB__equal, 1, (Object)constant4038);
// assert:
send16465 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16464);
smallint1948 = (Object)new_Type_SmallInt(100);
constant4039 = (Object)new_AST_Constant((Object)smallint1948);
// at:
send16466 = (Object)new_AST_Send((Object)localvariable2608, (Object)SMB_at_, 1, (Object)constant4039);
smallint1949 = (Object)new_Type_SmallInt(100);
constant4040 = (Object)new_AST_Constant((Object)smallint1949);
// =
send16467 = (Object)new_AST_Send((Object)send16466, (Object)SMB__equal, 1, (Object)constant4040);
// assert:
send16468 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16467);
localvariable2609 = (Object)new_AST_Variable_named(L"receiver");
array2258 = (Object)new_Type_Array_with(1, (Object)localvariable2609);
smallint1950 = (Object)new_Type_SmallInt(1);
constant4041 = (Object)new_AST_Constant((Object)smallint1950);
// a:
send16469 = (Object)new_AST_Send((Object)localvariable2609, (Object)symbol2831, 1, (Object)constant4041);
smallint1951 = (Object)new_Type_SmallInt(2);
constant4042 = (Object)new_AST_Constant((Object)smallint1951);
// b:
send16470 = (Object)new_AST_Send((Object)localvariable2609, (Object)symbol2833, 1, (Object)constant4042);
smallint1952 = (Object)new_Type_SmallInt(3);
constant4043 = (Object)new_AST_Constant((Object)smallint1952);
// c:
send16471 = (Object)new_AST_Send((Object)localvariable2609, (Object)symbol2836, 1, (Object)constant4043);
block1014 = (Object)new_AST_Block_with((Type_Array)array2258, (Type_Array)empty_Type_Array, 1, 3, send16469, send16470, send16471);
// value:
send16472 = (Object)new_AST_Send((Object)block1014, (Object)SMB_value_, 1, (Object)localvariable2608);
// a
send16473 = (Object)new_AST_Send((Object)localvariable2608, (Object)symbol2830, 0);
smallint1953 = (Object)new_Type_SmallInt(1);
constant4044 = (Object)new_AST_Constant((Object)smallint1953);
// =
send16474 = (Object)new_AST_Send((Object)send16473, (Object)SMB__equal, 1, (Object)constant4044);
// assert:
send16475 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16474);
// b
send16476 = (Object)new_AST_Send((Object)localvariable2608, (Object)symbol2832, 0);
smallint1954 = (Object)new_Type_SmallInt(2);
constant4045 = (Object)new_AST_Constant((Object)smallint1954);
// =
send16477 = (Object)new_AST_Send((Object)send16476, (Object)SMB__equal, 1, (Object)constant4045);
// assert:
send16478 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16477);
// c
send16479 = (Object)new_AST_Send((Object)localvariable2608, (Object)symbol2835, 0);
smallint1955 = (Object)new_Type_SmallInt(3);
constant4046 = (Object)new_AST_Constant((Object)smallint1955);
// =
send16480 = (Object)new_AST_Send((Object)send16479, (Object)SMB__equal, 1, (Object)constant4046);
// assert:
send16481 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16480);
// a
send16482 = (Object)new_AST_Send((Object)localvariable2608, (Object)symbol2830, 0);
// b
send16483 = (Object)new_AST_Send((Object)localvariable2608, (Object)symbol2832, 0);
// c
send16484 = (Object)new_AST_Send((Object)localvariable2608, (Object)symbol2835, 0);
smallint1956 = (Object)new_Type_SmallInt(1);
constant4047 = (Object)new_AST_Constant((Object)smallint1956);
// at:
send16485 = (Object)new_AST_Send((Object)localvariable2608, (Object)SMB_at_, 1, (Object)constant4047);
// +
send16486 = (Object)new_AST_Send((Object)send16484, (Object)SMB__plus, 1, (Object)send16485);
// +
send16487 = (Object)new_AST_Send((Object)send16483, (Object)SMB__plus, 1, (Object)send16486);
// +
send16488 = (Object)new_AST_Send((Object)send16482, (Object)SMB__plus, 1, (Object)send16487);
smallint1957 = (Object)new_Type_SmallInt(100);
constant4048 = (Object)new_AST_Constant((Object)smallint1957);
// at:
send16489 = (Object)new_AST_Send((Object)localvariable2608, (Object)SMB_at_, 1, (Object)constant4048);
// +
send16490 = (Object)new_AST_Send((Object)send16488, (Object)SMB__plus, 1, (Object)send16489);
method3740 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2257, 10, assign1999, send16461, send16462, send16465, send16468, send16472, send16475, send16478, send16481, send16490);
symbol2798 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure3728 = (Object)new_Runtime_MethodClosure(method3740);
store_method((Type_Class)class613, (Type_Symbol)symbol2798, (Runtime_MethodClosure)methodclosure3728);


// BridgeTest>>tmBooleanFalse
//tmBooleanFalse
// 	^ false
method3741 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol2771 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure3729 = (Object)new_Runtime_MethodClosure(method3741);
store_method((Type_Class)class613, (Type_Symbol)symbol2771, (Runtime_MethodClosure)methodclosure3729);


// BridgeTest>>tmClassSideSuperSend
//tmClassSideSuperSend
// 	ChildClassTestClass a: nil.
// 	ChildClassTestClass b: nil.
// 	ChildClassTestClass c: nil.
// 	
// 	self assert: ChildClassTestClass a = nil.
// 	self assert: ChildClassTestClass b = nil.
// 	self assert: ChildClassTestClass c = nil.
// 	
// 	ChildClassTestClass a: 1.
// 	ChildClassTestClass b: 2.
// 	ChildClassTestClass c: 3.
// 	
// 	self assert: ChildClassTestClass a = 1.
// 	self assert: ChildClassTestClass b = 2.
// 	self assert: ChildClassTestClass c = 3.
// a:
send16491 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2831, 1, (Object)Nil_Const);
// b:
send16492 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2833, 1, (Object)Nil_Const);
// c:
send16493 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2836, 1, (Object)Nil_Const);
// a
send16494 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2830, 0);
// =
send16495 = (Object)new_AST_Send((Object)send16494, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send16496 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16495);
// b
send16497 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2832, 0);
// =
send16498 = (Object)new_AST_Send((Object)send16497, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send16499 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16498);
// c
send16500 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2835, 0);
// =
send16501 = (Object)new_AST_Send((Object)send16500, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send16502 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16501);
smallint1958 = (Object)new_Type_SmallInt(1);
constant4049 = (Object)new_AST_Constant((Object)smallint1958);
// a:
send16503 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2831, 1, (Object)constant4049);
smallint1959 = (Object)new_Type_SmallInt(2);
constant4050 = (Object)new_AST_Constant((Object)smallint1959);
// b:
send16504 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2833, 1, (Object)constant4050);
smallint1960 = (Object)new_Type_SmallInt(3);
constant4051 = (Object)new_AST_Constant((Object)smallint1960);
// c:
send16505 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2836, 1, (Object)constant4051);
// a
send16506 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2830, 0);
smallint1961 = (Object)new_Type_SmallInt(1);
constant4052 = (Object)new_AST_Constant((Object)smallint1961);
// =
send16507 = (Object)new_AST_Send((Object)send16506, (Object)SMB__equal, 1, (Object)constant4052);
// assert:
send16508 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16507);
// b
send16509 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2832, 0);
smallint1962 = (Object)new_Type_SmallInt(2);
constant4053 = (Object)new_AST_Constant((Object)smallint1962);
// =
send16510 = (Object)new_AST_Send((Object)send16509, (Object)SMB__equal, 1, (Object)constant4053);
// assert:
send16511 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16510);
// c
send16512 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol2835, 0);
smallint1963 = (Object)new_Type_SmallInt(3);
constant4054 = (Object)new_AST_Constant((Object)smallint1963);
// =
send16513 = (Object)new_AST_Send((Object)send16512, (Object)SMB__equal, 1, (Object)constant4054);
// assert:
send16514 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16513);
method3742 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send16491, send16492, send16493, send16496, send16499, send16502, send16503, send16504, send16505, send16508, send16511, send16514, Self);
symbol2808 = (Object)new_Type_Symbol_cached(L"tmClassSideSuperSend");
methodclosure3730 = (Object)new_Runtime_MethodClosure(method3742);
store_method((Type_Class)class613, (Type_Symbol)symbol2808, (Runtime_MethodClosure)methodclosure3730);


// BridgeTest>>tmNumberNotEquals
//tmNumberNotEquals
// 	^ 1 ~= 2
smallint1964 = (Object)new_Type_SmallInt(1);
constant4055 = (Object)new_AST_Constant((Object)smallint1964);
symbol2741 = (Object)new_Type_Symbol_cached(L"~=");
smallint1965 = (Object)new_Type_SmallInt(2);
constant4056 = (Object)new_AST_Constant((Object)smallint1965);
// ~=
send16515 = (Object)new_AST_Send((Object)constant4055, (Object)symbol2741, 1, (Object)constant4056);
method3743 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16515);
symbol2791 = (Object)new_Type_Symbol_cached(L"tmNumberNotEquals");
methodclosure3731 = (Object)new_Runtime_MethodClosure(method3743);
store_method((Type_Class)class613, (Type_Symbol)symbol2791, (Runtime_MethodClosure)methodclosure3731);


// BridgeTest>>tmBooleanNotEquals
//tmBooleanNotEquals
// 	^ true ~= false
// ~=
send16516 = (Object)new_AST_Send((Object)True_Const, (Object)symbol2741, 1, (Object)False_Const);
method3744 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16516);
symbol2801 = (Object)new_Type_Symbol_cached(L"tmBooleanNotEquals");
methodclosure3732 = (Object)new_Runtime_MethodClosure(method3744);
store_method((Type_Class)class613, (Type_Symbol)symbol2801, (Runtime_MethodClosure)methodclosure3732);


// BridgeTest>>tmNumber
//tmNumber
// 	^ 1
smallint1966 = (Object)new_Type_SmallInt(1);
constant4057 = (Object)new_AST_Constant((Object)smallint1966);
method3745 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4057);
symbol2781 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure3733 = (Object)new_Runtime_MethodClosure(method3745);
store_method((Type_Class)class613, (Type_Symbol)symbol2781, (Runtime_MethodClosure)methodclosure3733);


// BridgeTest>>tmSimpleReturn
//tmSimpleReturn
// 	^ 1
smallint1967 = (Object)new_Type_SmallInt(1);
constant4058 = (Object)new_AST_Constant((Object)smallint1967);
method3746 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4058);
symbol2773 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure3734 = (Object)new_Runtime_MethodClosure(method3746);
store_method((Type_Class)class613, (Type_Symbol)symbol2773, (Runtime_MethodClosure)methodclosure3734);


// BridgeTest>>tmNumberSubtract
//tmNumberSubtract
// 	^ 2 - 1
smallint1968 = (Object)new_Type_SmallInt(2);
constant4059 = (Object)new_AST_Constant((Object)smallint1968);
smallint1969 = (Object)new_Type_SmallInt(1);
constant4060 = (Object)new_AST_Constant((Object)smallint1969);
// -
send16517 = (Object)new_AST_Send((Object)constant4059, (Object)SMB__minus, 1, (Object)constant4060);
method3747 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16517);
symbol2793 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure3735 = (Object)new_Runtime_MethodClosure(method3747);
store_method((Type_Class)class613, (Type_Symbol)symbol2793, (Runtime_MethodClosure)methodclosure3735);


// BridgeTest>>tmSuperClass
//tmSuperClass
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	instance a: 1.
// 	self assert: instance a = 1.
// 	self assert: instance b = nil.
// 	instance b: 2.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2
localvariable2610 = (Object)new_AST_Variable_named(L"instance");
array2259 = (Object)new_Type_Array_with(1, (Object)localvariable2610);
// basicNew
send16518 = (Object)new_AST_Send((Object)classreference1175, (Object)SMB_basicNew, 0);
assign2000 = (Object)new_AST_Assign((Object)localvariable2610, (Object)send16518);
smallint1970 = (Object)new_Type_SmallInt(1);
constant4061 = (Object)new_AST_Constant((Object)smallint1970);
// a:
send16519 = (Object)new_AST_Send((Object)localvariable2610, (Object)symbol2831, 1, (Object)constant4061);
// a
send16520 = (Object)new_AST_Send((Object)localvariable2610, (Object)symbol2830, 0);
smallint1971 = (Object)new_Type_SmallInt(1);
constant4062 = (Object)new_AST_Constant((Object)smallint1971);
// =
send16521 = (Object)new_AST_Send((Object)send16520, (Object)SMB__equal, 1, (Object)constant4062);
// assert:
send16522 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16521);
// b
send16523 = (Object)new_AST_Send((Object)localvariable2610, (Object)symbol2832, 0);
// =
send16524 = (Object)new_AST_Send((Object)send16523, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send16525 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16524);
smallint1972 = (Object)new_Type_SmallInt(2);
constant4063 = (Object)new_AST_Constant((Object)smallint1972);
// b:
send16526 = (Object)new_AST_Send((Object)localvariable2610, (Object)symbol2833, 1, (Object)constant4063);
// a
send16527 = (Object)new_AST_Send((Object)localvariable2610, (Object)symbol2830, 0);
smallint1973 = (Object)new_Type_SmallInt(1);
constant4064 = (Object)new_AST_Constant((Object)smallint1973);
// =
send16528 = (Object)new_AST_Send((Object)send16527, (Object)SMB__equal, 1, (Object)constant4064);
// assert:
send16529 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16528);
// b
send16530 = (Object)new_AST_Send((Object)localvariable2610, (Object)symbol2832, 0);
smallint1974 = (Object)new_Type_SmallInt(2);
constant4065 = (Object)new_AST_Constant((Object)smallint1974);
// =
send16531 = (Object)new_AST_Send((Object)send16530, (Object)SMB__equal, 1, (Object)constant4065);
// assert:
send16532 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16531);
method3748 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2259, 8, assign2000, send16519, send16522, send16525, send16526, send16529, send16532, Self);
symbol2811 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure3736 = (Object)new_Runtime_MethodClosure(method3748);
store_method((Type_Class)class613, (Type_Symbol)symbol2811, (Runtime_MethodClosure)methodclosure3736);


// BridgeTest>>tmVariableInstanceCreation
//tmVariableInstanceCreation
// 	| instance |
// 	instance := StandardVariableTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
localvariable2611 = (Object)new_AST_Variable_named(L"instance");
array2260 = (Object)new_Type_Array_with(1, (Object)localvariable2611);
// basicNew
send16533 = (Object)new_AST_Send((Object)classreference1176, (Object)SMB_basicNew, 0);
assign2001 = (Object)new_AST_Assign((Object)localvariable2611, (Object)send16533);
localvariable2612 = (Object)new_AST_Variable_named(L"receiver");
array2261 = (Object)new_Type_Array_with(1, (Object)localvariable2612);
smallint1975 = (Object)new_Type_SmallInt(1);
constant4066 = (Object)new_AST_Constant((Object)smallint1975);
// a:
send16534 = (Object)new_AST_Send((Object)localvariable2612, (Object)symbol2831, 1, (Object)constant4066);
smallint1976 = (Object)new_Type_SmallInt(2);
constant4067 = (Object)new_AST_Constant((Object)smallint1976);
// b:
send16535 = (Object)new_AST_Send((Object)localvariable2612, (Object)symbol2833, 1, (Object)constant4067);
smallint1977 = (Object)new_Type_SmallInt(3);
constant4068 = (Object)new_AST_Constant((Object)smallint1977);
// c:
send16536 = (Object)new_AST_Send((Object)localvariable2612, (Object)symbol2836, 1, (Object)constant4068);
block1015 = (Object)new_AST_Block_with((Type_Array)array2261, (Type_Array)empty_Type_Array, 1, 3, send16534, send16535, send16536);
// value:
send16537 = (Object)new_AST_Send((Object)block1015, (Object)SMB_value_, 1, (Object)localvariable2611);
// a
send16538 = (Object)new_AST_Send((Object)localvariable2611, (Object)symbol2830, 0);
smallint1978 = (Object)new_Type_SmallInt(1);
constant4069 = (Object)new_AST_Constant((Object)smallint1978);
// =
send16539 = (Object)new_AST_Send((Object)send16538, (Object)SMB__equal, 1, (Object)constant4069);
// assert:
send16540 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16539);
// b
send16541 = (Object)new_AST_Send((Object)localvariable2611, (Object)symbol2832, 0);
smallint1979 = (Object)new_Type_SmallInt(2);
constant4070 = (Object)new_AST_Constant((Object)smallint1979);
// =
send16542 = (Object)new_AST_Send((Object)send16541, (Object)SMB__equal, 1, (Object)constant4070);
// assert:
send16543 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16542);
// c
send16544 = (Object)new_AST_Send((Object)localvariable2611, (Object)symbol2835, 0);
smallint1980 = (Object)new_Type_SmallInt(3);
constant4071 = (Object)new_AST_Constant((Object)smallint1980);
// =
send16545 = (Object)new_AST_Send((Object)send16544, (Object)SMB__equal, 1, (Object)constant4071);
// assert:
send16546 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16545);
// a
send16547 = (Object)new_AST_Send((Object)localvariable2611, (Object)symbol2830, 0);
// b
send16548 = (Object)new_AST_Send((Object)localvariable2611, (Object)symbol2832, 0);
// +
send16549 = (Object)new_AST_Send((Object)send16547, (Object)SMB__plus, 1, (Object)send16548);
// c
send16550 = (Object)new_AST_Send((Object)localvariable2611, (Object)symbol2835, 0);
// +
send16551 = (Object)new_AST_Send((Object)send16549, (Object)SMB__plus, 1, (Object)send16550);
method3749 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2260, 6, assign2001, send16537, send16540, send16543, send16546, send16551);
symbol2803 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure3737 = (Object)new_Runtime_MethodClosure(method3749);
store_method((Type_Class)class613, (Type_Symbol)symbol2803, (Runtime_MethodClosure)methodclosure3737);


// BridgeTest>>tmCharacter
//tmCharacter
// 	^ $C
character114 = (Object)new_Type_Character(L'C');
constant4072 = (Object)new_AST_Constant((Object)character114);
method3750 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4072);
symbol2783 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure3738 = (Object)new_Runtime_MethodClosure(method3750);
store_method((Type_Class)class613, (Type_Symbol)symbol2783, (Runtime_MethodClosure)methodclosure3738);


// BridgeTest>>tmClassInstVar
//tmClassInstVar
// 	^ StandardTestClass aClassSideMethodWithInstanceVariables.
// aClassSideMethodWithInstanceVariables
send16552 = (Object)new_AST_Send((Object)classreference1177, (Object)symbol2839, 0);
method3751 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16552);
symbol2775 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure3739 = (Object)new_Runtime_MethodClosure(method3751);
store_method((Type_Class)class613, (Type_Symbol)symbol2775, (Runtime_MethodClosure)methodclosure3739);


// BridgeTest>>tmFibonacci
//tmFibonacci
// 	
method3752 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2795 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure3740 = (Object)new_Runtime_MethodClosure(method3752);
store_method((Type_Class)class613, (Type_Symbol)symbol2795, (Runtime_MethodClosure)methodclosure3740);


// BridgeTest>>tmStringNotEquals
//tmStringNotEquals
// 	^ 'String' ~= 'gnirtS'
string1771 = (Object)new_Type_String(L"String");
constant4073 = (Object)new_AST_Constant((Object)string1771);
string1772 = (Object)new_Type_String(L"gnirtS");
constant4074 = (Object)new_AST_Constant((Object)string1772);
// ~=
send16553 = (Object)new_AST_Send((Object)constant4073, (Object)symbol2741, 1, (Object)constant4074);
method3753 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16553);
symbol2787 = (Object)new_Type_Symbol_cached(L"tmStringNotEquals");
methodclosure3741 = (Object)new_Runtime_MethodClosure(method3753);
store_method((Type_Class)class613, (Type_Symbol)symbol2787, (Runtime_MethodClosure)methodclosure3741);


// BridgeTest>>tmSymbolEquals
//tmSymbolEquals
// 	^ #Symbol = #Symbol
symbol2848 = (Object)new_Type_Symbol_cached(L"Symbol");
constant4075 = (Object)new_AST_Constant((Object)symbol2848);
constant4076 = (Object)new_AST_Constant((Object)symbol2848);
// =
send16554 = (Object)new_AST_Send((Object)constant4075, (Object)SMB__equal, 1, (Object)constant4076);
method3754 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16554);
symbol2813 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure3742 = (Object)new_Runtime_MethodClosure(method3754);
store_method((Type_Class)class613, (Type_Symbol)symbol2813, (Runtime_MethodClosure)methodclosure3742);


// BridgeTest>>tmSymbolNotEquals
//tmSymbolNotEquals
// 	^ #Symbol = #lobmyS
constant4077 = (Object)new_AST_Constant((Object)symbol2848);
symbol2849 = (Object)new_Type_Symbol_cached(L"lobmyS");
constant4078 = (Object)new_AST_Constant((Object)symbol2849);
// =
send16555 = (Object)new_AST_Send((Object)constant4077, (Object)SMB__equal, 1, (Object)constant4078);
method3755 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16555);
symbol2805 = (Object)new_Type_Symbol_cached(L"tmSymbolNotEquals");
methodclosure3743 = (Object)new_Runtime_MethodClosure(method3755);
store_method((Type_Class)class613, (Type_Symbol)symbol2805, (Runtime_MethodClosure)methodclosure3743);


// BridgeTest>>tmCharacterEquals
//tmCharacterEquals
// 	^ $C = $C
character115 = (Object)new_Type_Character(L'C');
constant4079 = (Object)new_AST_Constant((Object)character115);
character116 = (Object)new_Type_Character(L'C');
constant4080 = (Object)new_AST_Constant((Object)character116);
// =
send16556 = (Object)new_AST_Send((Object)constant4079, (Object)SMB__equal, 1, (Object)constant4080);
method3756 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16556);
symbol2785 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure3744 = (Object)new_Runtime_MethodClosure(method3756);
store_method((Type_Class)class613, (Type_Symbol)symbol2785, (Runtime_MethodClosure)methodclosure3744);


// BridgeTest>>tmClassSide
//tmClassSide
// 	self assert: Object class class = Metaclass.
// 	^ StandardTestClass aClassSideMethod

// Object>>hash
//hash
// 	^ self uid hash
symbol2850 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send16557 = (Object)new_AST_Send((Object)Self, (Object)symbol2850, 0);
// hash
send16558 = (Object)new_AST_Send((Object)send16557, (Object)SMB_hash, 0);
method3757 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16558);
methodclosure3745 = (Object)new_Runtime_MethodClosure(method3757);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure3745);


// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable2613 = (Object)new_AST_Variable_named(L"anObject");
array2262 = (Object)new_Type_Array_with(1, (Object)localvariable2613);
// =
send16559 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable2613);
// not
send16560 = (Object)new_AST_Send((Object)send16559, (Object)SMB_not, 0);
method3758 = (Object)new_AST_Method_with((Type_Array)array2262, (Type_Array)empty_Type_Array, 1, send16560);
methodclosure3746 = (Object)new_Runtime_MethodClosure(method3758);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol2741, (Runtime_MethodClosure)methodclosure3746);


// Object>>yourself
//yourself
// 	^ self
method3759 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2738 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure3747 = (Object)new_Runtime_MethodClosure(method3759);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol2738, (Runtime_MethodClosure)methodclosure3747);


// Object>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable2614 = (Object)new_AST_Variable_named(L"aMessage");
array2263 = (Object)new_Type_Array_with(1, (Object)localvariable2614);
localvariable2615 = (Object)new_AST_Variable_named(L"selector");
array2264 = (Object)new_Type_Array_with(1, (Object)localvariable2615);
variable138 = (Object)new_AST_Variable_named(L"return");
array2265 = (Object)new_Type_Array_with(1, (Object)variable138);
// selector
send16561 = (Object)new_AST_Send((Object)localvariable2614, (Object)symbol2842, 0);
constant4081 = (Object)new_AST_Constant((Object)symbol2843);
// =
send16562 = (Object)new_AST_Send((Object)send16561, (Object)SMB__equal, 1, (Object)constant4081);
super287 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable2614);
// escape:
send16563 = (Object)new_AST_Send((Object)variable138, (Object)SMB_escape_, 1, (Object)super287);
block1016 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send16563);
// ifFalse:
send16564 = (Object)new_AST_Send((Object)send16562, (Object)SMB_ifFalse_, 1, (Object)block1016);
string1773 = (Object)new_Type_String(L"visit");
constant4082 = (Object)new_AST_Constant((Object)string1773);
// objectName
send16565 = (Object)new_AST_Send((Object)Self, (Object)symbol2739, 0);
// ,
send16566 = (Object)new_AST_Send((Object)constant4082, (Object)SMB__concat, 1, (Object)send16565);
string1774 = (Object)new_Type_String(L":");
constant4083 = (Object)new_AST_Constant((Object)string1774);
// ,
send16567 = (Object)new_AST_Send((Object)send16566, (Object)SMB__concat, 1, (Object)constant4083);
// asSymbol
send16568 = (Object)new_AST_Send((Object)send16567, (Object)SMB_asSymbol, 0);
assign2002 = (Object)new_AST_Assign((Object)localvariable2615, (Object)send16568);
// argument
send16569 = (Object)new_AST_Send((Object)localvariable2614, (Object)symbol2844, 0);
// perform:with:
send16570 = (Object)new_AST_Send((Object)send16569, (Object)symbol2845, 2, (Object)localvariable2615, (Object)Self);
block1017 = (Object)new_AST_Block_with((Type_Array)array2265, (Type_Array)empty_Type_Array, 1, 3, send16564, assign2002, send16570);
// on:
send16571 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1017);
method3760 = (Object)new_AST_Method_with((Type_Array)array2263, (Type_Array)array2264, 1, send16571);
methodclosure3748 = (Object)new_Runtime_MethodClosure(method3760);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure3748);


// Object>>isNil
//isNil
// 	^ false
method3761 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure3749 = (Object)new_Runtime_MethodClosure(method3761);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure3749);


// Object>>initialize
//initialize
method3762 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure3750 = (Object)new_Runtime_MethodClosure(method3762);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol2740, (Runtime_MethodClosure)methodclosure3750);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send16572 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol2733 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send16573 = (Object)new_AST_Send((Object)send16572, (Object)symbol2733, 0);
method3763 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16573);
methodclosure3751 = (Object)new_Runtime_MethodClosure(method3763);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol2739, (Runtime_MethodClosure)methodclosure3751);


// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method3764 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol2737 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure3752 = (Object)new_Runtime_MethodClosure(method3764);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol2737, (Runtime_MethodClosure)methodclosure3752);

classreference1178 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
// class
send16574 = (Object)new_AST_Send((Object)classreference1178, (Object)SMB_class, 0);
// class
send16575 = (Object)new_AST_Send((Object)send16574, (Object)SMB_class, 0);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable2616 = (Object)new_AST_Variable_named(L"aStream");
array2266 = (Object)new_Type_Array_with(1, (Object)localvariable2616);
super288 = (Object)new_AST_Super((Object)symbol2762, 1, (Object)localvariable2616);
symbol2851 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send16576 = (Object)new_AST_Send((Object)Self, (Object)symbol2851, 0);
// name
send16577 = (Object)new_AST_Send((Object)send16576, (Object)SMB_name, 0);
// printOn:
send16578 = (Object)new_AST_Send((Object)send16577, (Object)symbol2762, 1, (Object)localvariable2616);
method3765 = (Object)new_AST_Method_with((Type_Array)array2266, (Type_Array)empty_Type_Array, 3, super288, send16578, Self);
methodclosure3753 = (Object)new_Runtime_MethodClosure(method3765);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol2762, (Runtime_MethodClosure)methodclosure3753);

classreference1179 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);
// =
send16579 = (Object)new_AST_Send((Object)send16575, (Object)SMB__equal, 1, (Object)classreference1179);
// assert:
send16580 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16579);
// aClassSideMethod
send16581 = (Object)new_AST_Send((Object)classreference1177, (Object)symbol2838, 0);
method3766 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send16580, send16581);
symbol2777 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure3754 = (Object)new_Runtime_MethodClosure(method3766);
store_method((Type_Class)class613, (Type_Symbol)symbol2777, (Runtime_MethodClosure)methodclosure3754);


// BridgeTest>>tmMethodArgument:
//tmMethodArgument: arg 
// 	<arg1: 1>
// 	^ arg + 1
localvariable2617 = (Object)new_AST_Variable_named(L"arg");
array2267 = (Object)new_Type_Array_with(1, (Object)localvariable2617);
smallint1981 = (Object)new_Type_SmallInt(1);
constant4084 = (Object)new_AST_Constant((Object)smallint1981);
// +
send16582 = (Object)new_AST_Send((Object)localvariable2617, (Object)SMB__plus, 1, (Object)constant4084);
method3767 = (Object)new_AST_Method_with((Type_Array)array2267, (Type_Array)empty_Type_Array, 1, send16582);
symbol2789 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure3755 = (Object)new_Runtime_MethodClosure(method3767);
store_method((Type_Class)class613, (Type_Symbol)symbol2789, (Runtime_MethodClosure)methodclosure3755);


// BridgeTest>>tmSuperClassSuperSend
//tmSuperClassSuperSend
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	self assert: instance testSuper = 100
localvariable2618 = (Object)new_AST_Variable_named(L"instance");
array2268 = (Object)new_Type_Array_with(1, (Object)localvariable2618);
// basicNew
send16583 = (Object)new_AST_Send((Object)classreference1175, (Object)SMB_basicNew, 0);
assign2003 = (Object)new_AST_Assign((Object)localvariable2618, (Object)send16583);
// testSuper
send16584 = (Object)new_AST_Send((Object)localvariable2618, (Object)symbol2837, 0);
smallint1982 = (Object)new_Type_SmallInt(100);
constant4085 = (Object)new_AST_Constant((Object)smallint1982);
// =
send16585 = (Object)new_AST_Send((Object)send16584, (Object)SMB__equal, 1, (Object)constant4085);
// assert:
send16586 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16585);
method3768 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2268, 3, assign2003, send16586, Self);
symbol2770 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure3756 = (Object)new_Runtime_MethodClosure(method3768);
store_method((Type_Class)class613, (Type_Symbol)symbol2770, (Runtime_MethodClosure)methodclosure3756);


// BridgeTest>>setUp
//setUp
// 	
method3769 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2807 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure3757 = (Object)new_Runtime_MethodClosure(method3769);
store_method((Type_Class)class613, (Type_Symbol)symbol2807, (Runtime_MethodClosure)methodclosure3757);


// BridgeTest>>tmNumberEquals
//tmNumberEquals
// 	^ 1 = 1
smallint1983 = (Object)new_Type_SmallInt(1);
constant4086 = (Object)new_AST_Constant((Object)smallint1983);
smallint1984 = (Object)new_Type_SmallInt(1);
constant4087 = (Object)new_AST_Constant((Object)smallint1984);
// =
send16587 = (Object)new_AST_Send((Object)constant4086, (Object)SMB__equal, 1, (Object)constant4087);
method3770 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16587);
symbol2790 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure3758 = (Object)new_Runtime_MethodClosure(method3770);
store_method((Type_Class)class613, (Type_Symbol)symbol2790, (Runtime_MethodClosure)methodclosure3758);


// BridgeTest>>tmClassSideSuper
//tmClassSideSuper
// 	"TODO create accerssort in: everywhere"
// 	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
method3771 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2779 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure3759 = (Object)new_Runtime_MethodClosure(method3771);
store_method((Type_Class)class613, (Type_Symbol)symbol2779, (Runtime_MethodClosure)methodclosure3759);


// BridgeTest>>tmSimpleInstanceCreation
//tmSimpleInstanceCreation
// 	| instance |
// 	instance := StandardTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
localvariable2619 = (Object)new_AST_Variable_named(L"instance");
array2269 = (Object)new_Type_Array_with(1, (Object)localvariable2619);
// basicNew
send16588 = (Object)new_AST_Send((Object)classreference1177, (Object)SMB_basicNew, 0);
assign2004 = (Object)new_AST_Assign((Object)localvariable2619, (Object)send16588);
localvariable2620 = (Object)new_AST_Variable_named(L"receiver");
array2270 = (Object)new_Type_Array_with(1, (Object)localvariable2620);
smallint1985 = (Object)new_Type_SmallInt(1);
constant4088 = (Object)new_AST_Constant((Object)smallint1985);
// a:
send16589 = (Object)new_AST_Send((Object)localvariable2620, (Object)symbol2831, 1, (Object)constant4088);
smallint1986 = (Object)new_Type_SmallInt(2);
constant4089 = (Object)new_AST_Constant((Object)smallint1986);
// b:
send16590 = (Object)new_AST_Send((Object)localvariable2620, (Object)symbol2833, 1, (Object)constant4089);
smallint1987 = (Object)new_Type_SmallInt(3);
constant4090 = (Object)new_AST_Constant((Object)smallint1987);
// c:
send16591 = (Object)new_AST_Send((Object)localvariable2620, (Object)symbol2836, 1, (Object)constant4090);
block1018 = (Object)new_AST_Block_with((Type_Array)array2270, (Type_Array)empty_Type_Array, 1, 3, send16589, send16590, send16591);
// value:
send16592 = (Object)new_AST_Send((Object)block1018, (Object)SMB_value_, 1, (Object)localvariable2619);
// a
send16593 = (Object)new_AST_Send((Object)localvariable2619, (Object)symbol2830, 0);
smallint1988 = (Object)new_Type_SmallInt(1);
constant4091 = (Object)new_AST_Constant((Object)smallint1988);
// =
send16594 = (Object)new_AST_Send((Object)send16593, (Object)SMB__equal, 1, (Object)constant4091);
// assert:
send16595 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16594);
// b
send16596 = (Object)new_AST_Send((Object)localvariable2619, (Object)symbol2832, 0);
smallint1989 = (Object)new_Type_SmallInt(2);
constant4092 = (Object)new_AST_Constant((Object)smallint1989);
// =
send16597 = (Object)new_AST_Send((Object)send16596, (Object)SMB__equal, 1, (Object)constant4092);
// assert:
send16598 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16597);
// c
send16599 = (Object)new_AST_Send((Object)localvariable2619, (Object)symbol2835, 0);
smallint1990 = (Object)new_Type_SmallInt(3);
constant4093 = (Object)new_AST_Constant((Object)smallint1990);
// =
send16600 = (Object)new_AST_Send((Object)send16599, (Object)SMB__equal, 1, (Object)constant4093);
// assert:
send16601 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16600);
// a
send16602 = (Object)new_AST_Send((Object)localvariable2619, (Object)symbol2830, 0);
// b
send16603 = (Object)new_AST_Send((Object)localvariable2619, (Object)symbol2832, 0);
// +
send16604 = (Object)new_AST_Send((Object)send16602, (Object)SMB__plus, 1, (Object)send16603);
// c
send16605 = (Object)new_AST_Send((Object)localvariable2619, (Object)symbol2835, 0);
// +
send16606 = (Object)new_AST_Send((Object)send16604, (Object)SMB__plus, 1, (Object)send16605);
method3772 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2269, 6, assign2004, send16592, send16595, send16598, send16601, send16606);
symbol2800 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure3760 = (Object)new_Runtime_MethodClosure(method3772);
store_method((Type_Class)class613, (Type_Symbol)symbol2800, (Runtime_MethodClosure)methodclosure3760);


// BridgeTest>>assert:
//assert: bool
// 	<arg: true>
// 	^ bool ifFalse: [ self fail. ]
// 	
localvariable2621 = (Object)new_AST_Variable_named(L"bool");
array2271 = (Object)new_Type_Array_with(1, (Object)localvariable2621);
symbol2852 = (Object)new_Type_Symbol_cached(L"fail");
// fail
send16607 = (Object)new_AST_Send((Object)Self, (Object)symbol2852, 0);
block1019 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send16607);
// ifFalse:
send16608 = (Object)new_AST_Send((Object)localvariable2621, (Object)SMB_ifFalse_, 1, (Object)block1019);
method3773 = (Object)new_AST_Method_with((Type_Array)array2271, (Type_Array)empty_Type_Array, 1, send16608);
methodclosure3761 = (Object)new_Runtime_MethodClosure(method3773);
store_method((Type_Class)class613, (Type_Symbol)symbol2799, (Runtime_MethodClosure)methodclosure3761);


// BridgeTest>>tmClassReferenceReturn
//tmClassReferenceReturn
// 	^ Metaclass name.
// name
send16609 = (Object)new_AST_Send((Object)classreference1179, (Object)SMB_name, 0);
method3774 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16609);
symbol2780 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure3762 = (Object)new_Runtime_MethodClosure(method3774);
store_method((Type_Class)class613, (Type_Symbol)symbol2780, (Runtime_MethodClosure)methodclosure3762);


// BridgeTest>>tmMethodArguments:with:with:
//tmMethodArguments: arg1 with: arg2 with: arg3 
// 	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
// 	^ arg1 , arg2 , arg3
localvariable2622 = (Object)new_AST_Variable_named(L"arg1");
localvariable2623 = (Object)new_AST_Variable_named(L"arg2");
localvariable2624 = (Object)new_AST_Variable_named(L"arg3");
array2272 = (Object)new_Type_Array_with(3, (Object)localvariable2622, (Object)localvariable2623, (Object)localvariable2624);
// ,
send16610 = (Object)new_AST_Send((Object)localvariable2622, (Object)SMB__concat, 1, (Object)localvariable2623);
// ,
send16611 = (Object)new_AST_Send((Object)send16610, (Object)SMB__concat, 1, (Object)localvariable2624);
method3775 = (Object)new_AST_Method_with((Type_Array)array2272, (Type_Array)empty_Type_Array, 1, send16611);
symbol2772 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure3763 = (Object)new_Runtime_MethodClosure(method3775);
store_method((Type_Class)class613, (Type_Symbol)symbol2772, (Runtime_MethodClosure)methodclosure3763);


// BridgeTest>>tmSymbol
//tmSymbol
// 	^ #Symbol
constant4094 = (Object)new_AST_Constant((Object)symbol2848);
method3776 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4094);
symbol2809 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure3764 = (Object)new_Runtime_MethodClosure(method3776);
store_method((Type_Class)class613, (Type_Symbol)symbol2809, (Runtime_MethodClosure)methodclosure3764);


// BridgeTest>>tmString
//tmString
// 	^ 'String'
string1775 = (Object)new_Type_String(L"String");
constant4095 = (Object)new_AST_Constant((Object)string1775);
method3777 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4095);
symbol2792 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure3765 = (Object)new_Runtime_MethodClosure(method3777);
store_method((Type_Class)class613, (Type_Symbol)symbol2792, (Runtime_MethodClosure)methodclosure3765);


// BridgeTest>>tmBooleanSymbolEquals
//tmBooleanSymbolEquals
// 	^ true = #true
symbol2853 = (Object)new_Type_Symbol_cached(L"true");
constant4096 = (Object)new_AST_Constant((Object)symbol2853);
// =
send16612 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant4096);
method3778 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16612);
symbol2810 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure3766 = (Object)new_Runtime_MethodClosure(method3778);
store_method((Type_Class)class613, (Type_Symbol)symbol2810, (Runtime_MethodClosure)methodclosure3766);


// BridgeTest>>tearDown
//tearDown
method3779 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2802 = (Object)new_Type_Symbol_cached(L"tearDown");
methodclosure3767 = (Object)new_Runtime_MethodClosure(method3779);
store_method((Type_Class)class613, (Type_Symbol)symbol2802, (Runtime_MethodClosure)methodclosure3767);


// BridgeTest>>tmStringEquals
//tmStringEquals
// 	^ 'String' = 'String'
string1776 = (Object)new_Type_String(L"String");
constant4097 = (Object)new_AST_Constant((Object)string1776);
string1777 = (Object)new_Type_String(L"String");
constant4098 = (Object)new_AST_Constant((Object)string1777);
// =
send16613 = (Object)new_AST_Send((Object)constant4097, (Object)SMB__equal, 1, (Object)constant4098);
method3780 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16613);
symbol2782 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure3768 = (Object)new_Runtime_MethodClosure(method3780);
store_method((Type_Class)class613, (Type_Symbol)symbol2782, (Runtime_MethodClosure)methodclosure3768);


// BridgeTest>>tmExtendedReturn
//tmExtendedReturn
// 	1 > 2 ifTrue: [ ^ 1 ]
// 		ifFalse: [ ^ 2].
variable139 = (Object)new_AST_Variable_named(L"return");
array2273 = (Object)new_Type_Array_with(1, (Object)variable139);
smallint1991 = (Object)new_Type_SmallInt(1);
constant4099 = (Object)new_AST_Constant((Object)smallint1991);
smallint1992 = (Object)new_Type_SmallInt(2);
constant4100 = (Object)new_AST_Constant((Object)smallint1992);
// >
send16614 = (Object)new_AST_Send((Object)constant4099, (Object)SMB__gt, 1, (Object)constant4100);
smallint1993 = (Object)new_Type_SmallInt(1);
constant4101 = (Object)new_AST_Constant((Object)smallint1993);
// escape:
send16615 = (Object)new_AST_Send((Object)variable139, (Object)SMB_escape_, 1, (Object)constant4101);
block1020 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send16615);
smallint1994 = (Object)new_Type_SmallInt(2);
constant4102 = (Object)new_AST_Constant((Object)smallint1994);
// escape:
send16616 = (Object)new_AST_Send((Object)variable139, (Object)SMB_escape_, 1, (Object)constant4102);
block1021 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send16616);
// ifTrue:ifFalse:
send16617 = (Object)new_AST_Send((Object)send16614, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1020, (Object)block1021);
block1022 = (Object)new_AST_Block_with((Type_Array)array2273, (Type_Array)empty_Type_Array, 1, 2, send16617, Self);
// on:
send16618 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1022);
method3781 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16618);
symbol2794 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure3769 = (Object)new_Runtime_MethodClosure(method3781);
store_method((Type_Class)class613, (Type_Symbol)symbol2794, (Runtime_MethodClosure)methodclosure3769);


// BridgeTest>>tmClassInstVarAssignment
//tmClassInstVarAssignment
// 	StandardTestClass instVar: 10.
// 	self assert: StandardTestClass instVar = 10.
smallint1995 = (Object)new_Type_SmallInt(10);
constant4103 = (Object)new_AST_Constant((Object)smallint1995);
// instVar:
send16619 = (Object)new_AST_Send((Object)classreference1177, (Object)symbol2841, 1, (Object)constant4103);
// instVar
send16620 = (Object)new_AST_Send((Object)classreference1177, (Object)symbol2840, 0);
smallint1996 = (Object)new_Type_SmallInt(10);
constant4104 = (Object)new_AST_Constant((Object)smallint1996);
// =
send16621 = (Object)new_AST_Send((Object)send16620, (Object)SMB__equal, 1, (Object)constant4104);
// assert:
send16622 = (Object)new_AST_Send((Object)Self, (Object)symbol2799, 1, (Object)send16621);
method3782 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send16619, send16622, Self);
symbol2786 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure3770 = (Object)new_Runtime_MethodClosure(method3782);
store_method((Type_Class)class613, (Type_Symbol)symbol2786, (Runtime_MethodClosure)methodclosure3770);


// BridgeTest>>tmNumberMult
//tmNumberMult
// 	^ 2 * 3
smallint1997 = (Object)new_Type_SmallInt(2);
constant4105 = (Object)new_AST_Constant((Object)smallint1997);
smallint1998 = (Object)new_Type_SmallInt(3);
constant4106 = (Object)new_AST_Constant((Object)smallint1998);
// *
send16623 = (Object)new_AST_Send((Object)constant4105, (Object)SMB__times, 1, (Object)constant4106);
method3783 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16623);
symbol2812 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure3771 = (Object)new_Runtime_MethodClosure(method3783);
store_method((Type_Class)class613, (Type_Symbol)symbol2812, (Runtime_MethodClosure)methodclosure3771);


// BridgeTest>>tmNumberDiv
//tmNumberDiv
// 	^ 4 / 2
smallint1999 = (Object)new_Type_SmallInt(4);
constant4107 = (Object)new_AST_Constant((Object)smallint1999);
smallint2000 = (Object)new_Type_SmallInt(2);
constant4108 = (Object)new_AST_Constant((Object)smallint2000);
// /
send16624 = (Object)new_AST_Send((Object)constant4107, (Object)SMB__divide, 1, (Object)constant4108);
method3784 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16624);
symbol2804 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure3772 = (Object)new_Runtime_MethodClosure(method3784);
store_method((Type_Class)class613, (Type_Symbol)symbol2804, (Runtime_MethodClosure)methodclosure3772);


// BridgeTest>>tmCharacterStringEquals
//tmCharacterStringEquals
// 	^ $C = 'C'
character117 = (Object)new_Type_Character(L'C');
constant4109 = (Object)new_AST_Constant((Object)character117);
string1778 = (Object)new_Type_String(L"C");
constant4110 = (Object)new_AST_Constant((Object)string1778);
// =
send16625 = (Object)new_AST_Send((Object)constant4109, (Object)SMB__equal, 1, (Object)constant4110);
method3785 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16625);
symbol2784 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure3773 = (Object)new_Runtime_MethodClosure(method3785);
store_method((Type_Class)class613, (Type_Symbol)symbol2784, (Runtime_MethodClosure)methodclosure3773);


// BridgeTest>>tmSimpleBasicArithmetik
//tmSimpleBasicArithmetik
// 	^ ((1 + 2) + 2) * 5
smallint2001 = (Object)new_Type_SmallInt(1);
constant4111 = (Object)new_AST_Constant((Object)smallint2001);
smallint2002 = (Object)new_Type_SmallInt(2);
constant4112 = (Object)new_AST_Constant((Object)smallint2002);
// +
send16626 = (Object)new_AST_Send((Object)constant4111, (Object)SMB__plus, 1, (Object)constant4112);
smallint2003 = (Object)new_Type_SmallInt(2);
constant4113 = (Object)new_AST_Constant((Object)smallint2003);
// +
send16627 = (Object)new_AST_Send((Object)send16626, (Object)SMB__plus, 1, (Object)constant4113);
smallint2004 = (Object)new_Type_SmallInt(5);
constant4114 = (Object)new_AST_Constant((Object)smallint2004);
// *
send16628 = (Object)new_AST_Send((Object)send16627, (Object)SMB__times, 1, (Object)constant4114);
method3786 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16628);
symbol2776 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure3774 = (Object)new_Runtime_MethodClosure(method3786);
store_method((Type_Class)class613, (Type_Symbol)symbol2776, (Runtime_MethodClosure)methodclosure3774);


// BridgeTest>>tmBooleanEquals
//tmBooleanEquals
// 	^ true = true
// =
send16629 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method3787 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16629);
symbol2796 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure3775 = (Object)new_Runtime_MethodClosure(method3787);
store_method((Type_Class)class613, (Type_Symbol)symbol2796, (Runtime_MethodClosure)methodclosure3775);

classreference1180 = (Object)new_Organization_ClassReference((Type_Class)class613);

// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable2625 = (Object)new_AST_Variable_named(L"instVars");
array2274 = (Object)new_Type_Array_with(1, (Object)localvariable2625);
// new
send16630 = (Object)new_AST_Send((Object)classreference1166, (Object)symbol2755, 0);
assign2005 = (Object)new_AST_Assign((Object)localvariable2625, (Object)send16630);
symbol2760 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
// hasSuperclass
send16631 = (Object)new_AST_Send((Object)Self, (Object)symbol2760, 0);
symbol2854 = (Object)new_Type_Symbol_cached(L"addAll:");
symbol2756 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send16632 = (Object)new_AST_Send((Object)Self, (Object)symbol2756, 0);
symbol2750 = (Object)new_Type_Symbol_cached(L"layout");
// layout
send16633 = (Object)new_AST_Send((Object)send16632, (Object)symbol2750, 0);
// addAll:
send16634 = (Object)new_AST_Send((Object)localvariable2625, (Object)symbol2854, 1, (Object)send16633);
block1023 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send16634);
block1024 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send16635 = (Object)new_AST_Send((Object)send16631, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1023, (Object)block1024);
method3788 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2274, 3, assign2005, send16635, localvariable2625);
symbol2757 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
methodclosure3776 = (Object)new_Runtime_MethodClosure(method3788);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2757, (Runtime_MethodClosure)methodclosure3776);


// Behavior>>methods
//methods
// 	^ methods
instancevariable1316 = (Object)new_AST_InstVariable(2, L"methods");
method3789 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1316);
symbol2749 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure3777 = (Object)new_Runtime_MethodClosure(method3789);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2749, (Runtime_MethodClosure)methodclosure3777);


// Behavior>>layout
//layout
// 	^ layout
instancevariable1317 = (Object)new_AST_InstVariable(0, L"layout");
method3790 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1317);
methodclosure3778 = (Object)new_Runtime_MethodClosure(method3790);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2750, (Runtime_MethodClosure)methodclosure3778);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send16636 = (Object)new_AST_Send((Object)classreference1166, (Object)symbol2755, 0);
method3791 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16636);
symbol2754 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
methodclosure3779 = (Object)new_Runtime_MethodClosure(method3791);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2754, (Runtime_MethodClosure)methodclosure3779);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send16637 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send16638 = (Object)new_AST_Send((Object)send16637, (Object)symbol2740, 0);
method3792 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16638);
methodclosure3780 = (Object)new_Runtime_MethodClosure(method3792);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2755, (Runtime_MethodClosure)methodclosure3780);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable2626 = (Object)new_AST_Variable_named(L"sizeRequested");
array2275 = (Object)new_Type_Array_with(1, (Object)localvariable2626);
// basicNew:
send16639 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable2626);
// initialize
send16640 = (Object)new_AST_Send((Object)send16639, (Object)symbol2740, 0);
method3793 = (Object)new_AST_Method_with((Type_Array)array2275, (Type_Array)empty_Type_Array, 1, send16640);
symbol2743 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure3781 = (Object)new_Runtime_MethodClosure(method3793);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2743, (Runtime_MethodClosure)methodclosure3781);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable1318 = (Object)new_AST_InstVariable(1, L"superclass");
method3794 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1318);
methodclosure3782 = (Object)new_Runtime_MethodClosure(method3794);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2756, (Runtime_MethodClosure)methodclosure3782);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable2627 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable2628 = (Object)new_AST_Variable_named(L"instVars");
localvariable2629 = (Object)new_AST_Variable_named(L"instVar");
array2276 = (Object)new_Type_Array_with(3, (Object)localvariable2627, (Object)localvariable2628, (Object)localvariable2629);
// parentInstVariables
send16641 = (Object)new_AST_Send((Object)Self, (Object)symbol2757, 0);
assign2006 = (Object)new_AST_Assign((Object)localvariable2628, (Object)send16641);
// pInstVarNames
send16642 = (Object)new_AST_Send((Object)Self, (Object)symbol2754, 0);
symbol2855 = (Object)new_Type_Symbol_cached(L"do:");
localvariable2630 = (Object)new_AST_Variable_named(L"each");
array2277 = (Object)new_Type_Array_with(1, (Object)localvariable2630);
localvariable2631 = (Object)new_AST_Variable_named(L"var");
array2278 = (Object)new_Type_Array_with(1, (Object)localvariable2631);
// name
send16643 = (Object)new_AST_Send((Object)localvariable2631, (Object)SMB_name, 0);
// =
send16644 = (Object)new_AST_Send((Object)send16643, (Object)SMB__equal, 1, (Object)localvariable2630);
symbol2856 = (Object)new_Type_Symbol_cached(L"error:");
string1779 = (Object)new_Type_String(L"Double Declaration of \"");
constant4115 = (Object)new_AST_Constant((Object)string1779);
// ,
send16645 = (Object)new_AST_Send((Object)constant4115, (Object)SMB__concat, 1, (Object)localvariable2630);
string1780 = (Object)new_Type_String(L"\"");
constant4116 = (Object)new_AST_Constant((Object)string1780);
// ,
send16646 = (Object)new_AST_Send((Object)send16645, (Object)SMB__concat, 1, (Object)constant4116);
// error:
send16647 = (Object)new_AST_Send((Object)Self, (Object)symbol2856, 1, (Object)send16646);
block1025 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send16647);
// ifTrue:
send16648 = (Object)new_AST_Send((Object)send16644, (Object)SMB_ifTrue_, 1, (Object)block1025);
block1026 = (Object)new_AST_Block_with((Type_Array)array2278, (Type_Array)empty_Type_Array, 2, 1, send16648);
// do:
send16649 = (Object)new_AST_Send((Object)localvariable2628, (Object)symbol2855, 1, (Object)block1026);
// named:
send16650 = (Object)new_AST_Send((Object)classreference1171, (Object)symbol2819, 1, (Object)localvariable2630);
assign2007 = (Object)new_AST_Assign((Object)localvariable2629, (Object)send16650);
// size
send16651 = (Object)new_AST_Send((Object)localvariable2628, (Object)SMB_size, 0);
// localId:
send16652 = (Object)new_AST_Send((Object)localvariable2629, (Object)symbol2821, 1, (Object)send16651);
symbol2857 = (Object)new_Type_Symbol_cached(L"add:");
// add:
send16653 = (Object)new_AST_Send((Object)localvariable2628, (Object)symbol2857, 1, (Object)localvariable2629);
block1027 = (Object)new_AST_Block_with((Type_Array)array2277, (Type_Array)empty_Type_Array, 1, 4, send16649, assign2007, send16652, send16653);
// do:
send16654 = (Object)new_AST_Send((Object)send16642, (Object)symbol2855, 1, (Object)block1027);
method3795 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2276, 3, assign2006, send16654, localvariable2628);
symbol2748 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure3783 = (Object)new_Runtime_MethodClosure(method3795);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2748, (Runtime_MethodClosure)methodclosure3783);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
// superclass
send16655 = (Object)new_AST_Send((Object)Self, (Object)symbol2756, 0);
symbol2858 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send16656 = (Object)new_AST_Send((Object)classreference1169, (Object)symbol2858, 0);
// ~=
send16657 = (Object)new_AST_Send((Object)send16655, (Object)symbol2741, 1, (Object)send16656);
method3796 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send16657);
methodclosure3784 = (Object)new_Runtime_MethodClosure(method3796);
store_method((Type_Class)Behavior, (Type_Symbol)symbol2760, (Runtime_MethodClosure)methodclosure3784);

classreference1181 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Class>>name
//name 
// 	^ name
instancevariable1319 = (Object)new_AST_InstVariable(3, L"name");
method3797 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1319);
methodclosure3785 = (Object)new_Runtime_MethodClosure(method3797);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3785);


// Class>>package
//package
// 	^ package
instancevariable1320 = (Object)new_AST_InstVariable(4, L"package");
method3798 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1320);
symbol2761 = (Object)new_Type_Symbol_cached(L"package");
methodclosure3786 = (Object)new_Runtime_MethodClosure(method3798);
store_method((Type_Class)Class, (Type_Symbol)symbol2761, (Runtime_MethodClosure)methodclosure3786);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable2632 = (Object)new_AST_Variable_named(L"aStream");
array2279 = (Object)new_Type_Array_with(1, (Object)localvariable2632);
super289 = (Object)new_AST_Super((Object)symbol2762, 1, (Object)localvariable2632);
string1781 = (Object)new_Type_String(L" ");
constant4117 = (Object)new_AST_Constant((Object)string1781);
// nextPutAll:
send16658 = (Object)new_AST_Send((Object)localvariable2632, (Object)symbol2846, 1, (Object)constant4117);
// name
send16659 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send16660 = (Object)new_AST_Send((Object)send16659, (Object)symbol2762, 1, (Object)localvariable2632);
method3799 = (Object)new_AST_Method_with((Type_Array)array2279, (Type_Array)empty_Type_Array, 4, super289, send16658, send16660, Self);
methodclosure3787 = (Object)new_Runtime_MethodClosure(method3799);
store_method((Type_Class)Class, (Type_Symbol)symbol2762, (Runtime_MethodClosure)methodclosure3787);

classreference1182 = (Object)new_Organization_ClassReference((Type_Class)Class);
}


/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanEquals)
/*
tmBooleanEquals
// 	^ true = true
*/
// tmBooleanEquals
Object send16661 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2796, 0);
Object result = (Object)Eval((Object)send16661);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanFalse)
/*
tmBooleanFalse
// 	^ false
*/
// tmBooleanFalse
Object send16662 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2771, 0);
Object result = (Object)Eval((Object)send16662);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanNotEquals)
/*
tmBooleanNotEquals
// 	^ true ~= false
*/
// tmBooleanNotEquals
Object send16663 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2801, 0);
Object result = (Object)Eval((Object)send16663);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
// 	^ true = #true
*/
// tmBooleanSymbolEquals
Object send16664 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2810, 0);
Object result = (Object)Eval((Object)send16664);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanTrue)
/*
tmBooleanTrue
// 	^ true
*/
// tmBooleanTrue
Object send16665 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2788, 0);
Object result = (Object)Eval((Object)send16665);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacter)
/*
tmCharacter
// 	^ $C
*/
// tmCharacter
Object send16666 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2783, 0);
Object result = (Object)Eval((Object)send16666);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterEquals)
/*
tmCharacterEquals
// 	^ $C = $C
*/
// tmCharacterEquals
Object send16667 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2785, 0);
Object result = (Object)Eval((Object)send16667);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
// 	^ $C = 'C'
*/
// tmCharacterStringEquals
Object send16668 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2784, 0);
Object result = (Object)Eval((Object)send16668);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
// 	^ Metaclass name.
*/
// tmClassReferenceReturn
Object send16669 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2780, 0);
Object result = (Object)Eval((Object)send16669);
ASSERT_EMPTY_STACK
Object symbol2763 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol2763);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmExtendedReturn)
/*
tmExtendedReturn
// 	1 > 2 ifTrue: [ ^ 1 ]
// 		ifFalse: [ ^ 2].
*/
// tmExtendedReturn
Object send16670 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2794, 0);
Object result = (Object)Eval((Object)send16670);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmLocalVariable)
/*
tmLocalVariable
// 	|a|
// 	a := 1.
// 	^ a
*/
// tmLocalVariable
Object send16671 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2814, 0);
Object result = (Object)Eval((Object)send16671);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
// 	<arg1: 1>
// 	^ arg + 1
*/
Object smallint2005 = (Object)new_Type_SmallInt(1);
Object constant4118 = (Object)new_AST_Constant((Object)smallint2005);
// tmMethodArgument:
Object send16672 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2789, 1, (Object)constant4118);
Object result = (Object)Eval((Object)send16672);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
// 	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
// 	^ arg1 , arg2 , arg3
*/
Object string1782 = (Object)new_Type_String(L"asdf");
Object constant4119 = (Object)new_AST_Constant((Object)string1782);
Object string1783 = (Object)new_Type_String(L"asdf");
Object constant4120 = (Object)new_AST_Constant((Object)string1783);
Object string1784 = (Object)new_Type_String(L"df");
Object constant4121 = (Object)new_AST_Constant((Object)string1784);
// tmMethodArguments:with:with:
Object send16673 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2772, 3, (Object)constant4119, (Object)constant4120, (Object)constant4121);
Object result = (Object)Eval((Object)send16673);
ASSERT_EMPTY_STACK
Object string1785 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string1785);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumber)
/*
tmNumber
// 	^ 1
*/
// tmNumber
Object send16674 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2781, 0);
Object result = (Object)Eval((Object)send16674);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberAdd)
/*
tmNumberAdd
// 	^ 1 + 1
*/
// tmNumberAdd
Object send16675 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2778, 0);
Object result = (Object)Eval((Object)send16675);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberDiv)
/*
tmNumberDiv
// 	^ 4 / 2
*/
// tmNumberDiv
Object send16676 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2804, 0);
Object result = (Object)Eval((Object)send16676);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberEquals)
/*
tmNumberEquals
// 	^ 1 = 1
*/
// tmNumberEquals
Object send16677 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2790, 0);
Object result = (Object)Eval((Object)send16677);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberMult)
/*
tmNumberMult
// 	^ 2 * 3
*/
// tmNumberMult
Object send16678 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2812, 0);
Object result = (Object)Eval((Object)send16678);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberNotEquals)
/*
tmNumberNotEquals
// 	^ 1 ~= 2
*/
// tmNumberNotEquals
Object send16679 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2791, 0);
Object result = (Object)Eval((Object)send16679);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberSubtract)
/*
tmNumberSubtract
// 	^ 2 - 1
*/
// tmNumberSubtract
Object send16680 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2793, 0);
Object result = (Object)Eval((Object)send16680);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
// 	^ ((1 + 2) + 2) * 5
*/
// tmSimpleBasicArithmetik
Object send16681 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2776, 0);
Object result = (Object)Eval((Object)send16681);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleReturn)
/*
tmSimpleReturn
// 	^ 1
*/
// tmSimpleReturn
Object send16682 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2773, 0);
Object result = (Object)Eval((Object)send16682);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmString)
/*
tmString
// 	^ 'String'
*/
// tmString
Object send16683 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2792, 0);
Object result = (Object)Eval((Object)send16683);
ASSERT_EMPTY_STACK
Object string1786 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string1786);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringEquals)
/*
tmStringEquals
// 	^ 'String' = 'String'
*/
// tmStringEquals
Object send16684 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2782, 0);
Object result = (Object)Eval((Object)send16684);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringNotEquals)
/*
tmStringNotEquals
// 	^ 'String' ~= 'gnirtS'
*/
// tmStringNotEquals
Object send16685 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2787, 0);
Object result = (Object)Eval((Object)send16685);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbol)
/*
tmSymbol
// 	^ #Symbol
*/
// tmSymbol
Object send16686 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2809, 0);
Object result = (Object)Eval((Object)send16686);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol2848);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
// 	^ #S = $S
*/
// tmSymbolCharacterEquals
Object send16687 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2806, 0);
Object result = (Object)Eval((Object)send16687);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolEquals)
/*
tmSymbolEquals
// 	^ #Symbol = #Symbol
*/
// tmSymbolEquals
Object send16688 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2813, 0);
Object result = (Object)Eval((Object)send16688);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolNotEquals)
/*
tmSymbolNotEquals
// 	^ #Symbol = #lobmyS
*/
// tmSymbolNotEquals
Object send16689 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2805, 0);
Object result = (Object)Eval((Object)send16689);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_assert_)
/*
assert: bool
// 	<arg: true>
// 	^ bool ifFalse: [ self fail. ]
// 	
*/
// assert:
Object send16690 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2799, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send16690);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmFibonacci)
/*
tmFibonacci
// 	
*/
// tmFibonacci
Object send16691 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2795, 0);
Object result = (Object)Eval((Object)send16691);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVar)
/*
tmClassInstVar
// 	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
// tmClassInstVar
Object send16692 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2775, 0);
Object result = (Object)Eval((Object)send16692);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
// 	StandardTestClass instVar: 10.
// 	self assert: StandardTestClass instVar = 10.
*/
// tmClassInstVarAssignment
Object send16693 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2786, 0);
Object result = (Object)Eval((Object)send16693);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSide)
/*
tmClassSide
// 	self assert: Object class class = Metaclass.
// 	^ StandardTestClass aClassSideMethod
*/
// tmClassSide
Object send16694 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2777, 0);
Object result = (Object)Eval((Object)send16694);
ASSERT_EMPTY_STACK
Object string1787 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string1787);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuper)
/*
tmClassSideSuper
// 	"TODO create accerssort in: everywhere"
// 	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
*/
// tmClassSideSuper
Object send16695 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2779, 0);
Object result = (Object)Eval((Object)send16695);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuperSend)
/*
tmClassSideSuperSend
// 	ChildClassTestClass a: nil.
// 	ChildClassTestClass b: nil.
// 	ChildClassTestClass c: nil.
// 	
// 	self assert: ChildClassTestClass a = nil.
// 	self assert: ChildClassTestClass b = nil.
// 	self assert: ChildClassTestClass c = nil.
// 	
// 	ChildClassTestClass a: 1.
// 	ChildClassTestClass b: 2.
// 	ChildClassTestClass c: 3.
// 	
// 	self assert: ChildClassTestClass a = 1.
// 	self assert: ChildClassTestClass b = 2.
// 	self assert: ChildClassTestClass c = 3.
*/
// tmClassSideSuperSend
Object send16696 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2808, 0);
Object result = (Object)Eval((Object)send16696);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
// 	| instance |
// 	instance := StandardTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
*/
// tmSimpleInstanceCreation
Object send16697 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2800, 0);
Object result = (Object)Eval((Object)send16697);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClass)
/*
tmSuperClass
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	instance a: 1.
// 	self assert: instance a = 1.
// 	self assert: instance b = nil.
// 	instance b: 2.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2
*/
// tmSuperClass
Object send16698 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2811, 0);
Object result = (Object)Eval((Object)send16698);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	self assert: instance testSuper = 100
*/
// tmSuperClassSuperSend
Object send16699 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2770, 0);
Object result = (Object)Eval((Object)send16699);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
// 	| instance |
// 	instance := StandardVariableTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
*/
// tmVariableInstanceCreation
Object send16700 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2803, 0);
Object result = (Object)Eval((Object)send16700);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
// 	| instance |
// 	instance := StandardVariableTestClass basicNew: 100.
// 	instance at: 1 put: 1.
// 	instance at: 100 put: 100.
// 	self assert: (instance at: 1) = 1.	"sample"
// 	self assert: (instance at: 100) = 100.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
// tmVariableInstanceCreationSized
Object send16701 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2798, 0);
Object result = (Object)Eval((Object)send16701);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_setUp)
/*
setUp
// 	
*/
// setUp
Object send16702 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2807, 0);
Object result = (Object)Eval((Object)send16702);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tearDown)
/*
tearDown
*/
// tearDown
Object send16703 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2802, 0);
Object result = (Object)Eval((Object)send16703);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

void BridgeTest_setUp() {
// setUp
Object send16704 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol2807, 0);
Eval((Object)send16704);
}

/* ========================================================================= */

TEST_SUITE(BridgeTest,
{
    BridgeTest_create_ast();
    BridgeTest_TestCase_Class =(Type_Class)class613;
    BridgeTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)BridgeTest_TestCase_Class));

    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberMult);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanSymbolEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmString);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolCharacterEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmMethodArgument_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassReferenceReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmVariableInstanceCreation);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberSubtract);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberAdd);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmMethodArguments_with_with_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleBasicArithmetik);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmStringEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberDiv);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_assert_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmFibonacci);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSide);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSideSuper);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tearDown);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_setUp);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmExtendedReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSuperClassSuperSend);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassInstVar);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbol);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumber);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassInstVarAssignment);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanFalse);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleInstanceCreation);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmLocalVariable);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmStringNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSideSuperSend);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacterEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacter);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanTrue);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacterStringEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSuperClass);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmVariableInstanceCreationSized);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberNotEquals);
})