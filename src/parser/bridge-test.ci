// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class BridgeTest_TestCase_Class;
Object BridgeTest_test_Class_Instance;
// Test Method symbol
Type_Symbol BridgeTest_SMB_runTestCase;
Object objectlayout1063;
Object instancevariable829;
Object instancevariable830;
Object instancevariable831;
Object instancevariable832;
Object instancevariable833;
Object symbol4374;
Object class574;
Object metaclass574;
Object objectlayout1064;
Object symbol4373;
Object class575;
Object metaclass575;
Object objectlayout1065;
Object symbol4337;
Object objectlayout1066;
Object instancevariable834;
Object instancevariable835;
Object instancevariable836;
Object class576;
Object metaclass576;
Object objectlayout1067;
Object symbol4376;
Object objectlayout1068;
Object instancevariable837;
Object class577;
Object metaclass577;
Object objectlayout1069;
Object symbol4375;
Object objectlayout1070;
Object instancevariable838;
Object instancevariable839;
Object instancevariable840;
Object class578;
Object metaclass578;
Object objectlayout1071;
Object symbol4347;
Object objectlayout1072;
Object class579;
Object metaclass579;
Object objectlayout1073;
Object symbol4341;
Object class580;
Object metaclass580;
Object objectlayout1074;
Object instancevariable841;
Object symbol4342;
Object class581;
Object metaclass581;
Object objectlayout1075;
Object instancevariable842;
Object instancevariable843;
Object symbol4286;
Object objectlayout1076;
Object instancevariable844;
Object instancevariable845;
Object instancevariable846;
Object class582;
Object metaclass582;
Object objectlayout1077;
Object symbol4271;
Object class583;
Object metaclass583;
Object objectlayout1078;
Object instancevariable847;
Object instancevariable848;
Object symbol4369;
Object objectlayout1079;
Object instancevariable849;
Object class584;
Object metaclass584;
Object objectlayout1080;
Object instancevariable850;
Object symbol4300;
Object objectlayout1081;
Object instancevariable851;
Object class585;
Object metaclass585;
Object objectlayout1082;
Object symbol4293;
Object arraylayout3;
Object instancevariable852;
Object instancevariable853;
Object instancevariable854;
Object class586;
Object metaclass586;
Object classreference637;
Object classreference638;
Object classreference639;
Object method3309;
Object symbol4282;
Object methodclosure3309;
Object method3310;
Object symbol4284;
Object methodclosure3310;
Object method3311;
Object methodclosure3311;
Object send23939;
Object symbol4275;
Object send23940;
Object method3312;
Object symbol4281;
Object methodclosure3312;
Object method3313;
Object symbol4283;
Object methodclosure3313;
Object symbol4386;
Object send23941;
Object send23942;
Object method3314;
Object methodclosure3314;
Object localvariable3332;
Object array2644;
Object send23943;
Object send23944;
Object method3315;
Object symbol4285;
Object methodclosure3315;
Object classreference640;
Object localvariable3333;
Object array2645;
Object symbol4353;
Object super284;
Object symbol4387;
Object send23945;
Object send23946;
Object send23947;
Object method3316;
Object methodclosure3316;
Object classreference641;
Object instancevariable855;
Object method3317;
Object symbol4354;
Object methodclosure3317;
Object localvariable3334;
Object array2646;
Object super285;
Object symbol4388;
Object string2782;
Object constant4667;
Object send23948;
Object send23949;
Object send23950;
Object method3318;
Object methodclosure3318;
Object instancevariable856;
Object method3319;
Object methodclosure3319;
Object classreference642;
Object instancevariable857;
Object method3320;
Object symbol4340;
Object methodclosure3320;
Object instancevariable858;
Object method3321;
Object symbol4345;
Object methodclosure3321;
Object symbol4344;
Object send23951;
Object method3322;
Object symbol4349;
Object methodclosure3322;
Object localvariable3335;
Object array2647;
Object send23952;
Object send23953;
Object method3323;
Object symbol4334;
Object methodclosure3323;
Object localvariable3336;
Object array2648;
Object send23954;
Object assign2908;
Object symbol4343;
Object send23955;
Object symbol4389;
Object send23956;
Object send23957;
Object send23958;
Object block1495;
Object block1496;
Object send23959;
Object method3324;
Object symbol4338;
Object methodclosure3324;
Object send23960;
Object method3325;
Object methodclosure3325;
Object classreference643;
Object symbol4390;
Object send23961;
Object send23962;
Object method3326;
Object methodclosure3326;
Object instancevariable859;
Object method3327;
Object symbol4339;
Object methodclosure3327;
Object send23963;
Object send23964;
Object method3328;
Object methodclosure3328;
Object localvariable3337;
Object localvariable3338;
Object localvariable3339;
Object array2649;
Object send23965;
Object assign2909;
Object send23966;
Object symbol4391;
Object localvariable3340;
Object array2650;
Object localvariable3341;
Object array2651;
Object send23967;
Object send23968;
Object symbol4392;
Object string2783;
Object constant4668;
Object send23969;
Object string2784;
Object constant4669;
Object send23970;
Object send23971;
Object block1497;
Object send23972;
Object block1498;
Object send23973;
Object classreference644;
Object symbol4379;
Object send23974;
Object assign2910;
Object symbol4385;
Object send23975;
Object send23976;
Object symbol4393;
Object send23977;
Object block1499;
Object send23978;
Object method3329;
Object symbol4348;
Object methodclosure3329;
Object classreference645;
Object method3330;
Object symbol4378;
Object methodclosure3330;
Object super286;
Object method3331;
Object methodclosure3331;
Object localvariable3342;
Object array2652;
Object assign2911;
Object method3332;
Object symbol4377;
Object methodclosure3332;
Object classreference646;
Object localvariable3343;
Object array2653;
Object assign2912;
Object method3333;
Object methodclosure3333;
Object localvariable3344;
Object array2654;
Object assign2913;
Object method3334;
Object symbol4384;
Object methodclosure3334;
Object method3335;
Object symbol4380;
Object methodclosure3335;
Object localvariable3345;
Object array2655;
Object assign2914;
Object method3336;
Object symbol4382;
Object methodclosure3336;
Object localvariable3346;
Object array2656;
Object super287;
Object string2785;
Object constant4670;
Object send23979;
Object send23980;
Object send23981;
Object string2786;
Object constant4671;
Object send23982;
Object symbol4383;
Object send23983;
Object send23984;
Object string2787;
Object constant4672;
Object send23985;
Object symbol4381;
Object send23986;
Object send23987;
Object method3337;
Object methodclosure3337;
Object method3338;
Object methodclosure3338;
Object method3339;
Object methodclosure3339;
Object method3340;
Object methodclosure3340;
Object localvariable3347;
Object array2657;
Object send23988;
Object send23989;
Object send23990;
Object method3341;
Object methodclosure3341;
Object classreference647;
Object instancevariable860;
Object method3342;
Object symbol4357;
Object methodclosure3342;
Object method3343;
Object symbol4358;
Object methodclosure3343;
Object classreference648;
Object localvariable3348;
Object array2658;
Object localvariable3349;
Object array2659;
Object variable160;
Object array2660;
Object send23991;
Object symbol4394;
Object constant4673;
Object send23992;
Object super288;
Object send23993;
Object block1500;
Object send23994;
Object string2788;
Object constant4674;
Object send23995;
Object send23996;
Object string2789;
Object constant4675;
Object send23997;
Object send23998;
Object assign2915;
Object symbol4395;
Object send23999;
Object symbol4396;
Object send24000;
Object block1501;
Object send24001;
Object method3344;
Object methodclosure3344;
Object classreference649;
Object localvariable3350;
Object array2661;
Object assign2916;
Object method3345;
Object symbol4364;
Object methodclosure3345;
Object method3346;
Object symbol4366;
Object methodclosure3346;
Object localvariable3351;
Object array2662;
Object assign2917;
Object method3347;
Object symbol4368;
Object methodclosure3347;
Object localvariable3352;
Object array2663;
Object assign2918;
Object method3348;
Object symbol4363;
Object methodclosure3348;
Object method3349;
Object symbol4365;
Object methodclosure3349;
Object method3350;
Object symbol4367;
Object methodclosure3350;
Object smallint1621;
Object constant4676;
Object assign2919;
Object method3351;
Object symbol4360;
Object methodclosure3351;
Object string2790;
Object constant4677;
Object method3352;
Object symbol4359;
Object methodclosure3352;
Object method3353;
Object symbol4361;
Object methodclosure3353;
Object localvariable3353;
Object array2664;
Object assign2920;
Object method3354;
Object symbol4362;
Object methodclosure3354;
Object classreference650;
Object smallint1622;
Object constant4678;
Object smallint1623;
Object constant4679;
Object send24002;
Object smallint1624;
Object constant4680;
Object send24003;
Object smallint1625;
Object constant4681;
Object send24004;
Object method3355;
Object symbol4325;
Object methodclosure3355;
Object symbol4397;
Object constant4682;
Object symbol4398;
Object constant4683;
Object send24005;
Object method3356;
Object symbol4317;
Object methodclosure3356;
Object variable161;
Object array2665;
Object smallint1626;
Object constant4684;
Object smallint1627;
Object constant4685;
Object send24006;
Object smallint1628;
Object constant4686;
Object send24007;
Object block1502;
Object smallint1629;
Object constant4687;
Object send24008;
Object block1503;
Object send24009;
Object block1504;
Object send24010;
Object method3357;
Object symbol4297;
Object methodclosure3357;
Object string2791;
Object constant4688;
Object string2792;
Object constant4689;
Object send24011;
Object method3358;
Object symbol4289;
Object methodclosure3358;
Object localvariable3354;
Object array2666;
Object method3359;
Object methodclosure3359;
Object localvariable3355;
Object array2667;
Object assign2921;
Object method3360;
Object methodclosure3360;
Object smallint1630;
Object constant4690;
Object symbol4370;
Object super289;
Object send24012;
Object method3361;
Object symbol4371;
Object methodclosure3361;
Object method3362;
Object methodclosure3362;
Object localvariable3356;
Object array2668;
Object assign2922;
Object method3363;
Object methodclosure3363;
Object classreference651;
Object send24013;
Object assign2923;
Object symbol4314;
Object send24014;
Object smallint1631;
Object constant4691;
Object send24015;
Object send24016;
Object method3364;
Object symbol4310;
Object methodclosure3364;
Object smallint1632;
Object constant4692;
Object method3365;
Object symbol4307;
Object methodclosure3365;
Object character19;
Object constant4693;
Object character20;
Object constant4694;
Object send24017;
Object method3366;
Object symbol4290;
Object methodclosure3366;
Object send24018;
Object method3367;
Object symbol4327;
Object methodclosure3367;
Object method3368;
Object symbol4319;
Object methodclosure3368;
Object send24019;
Object send24020;
Object send24021;
Object send24022;
Object send24023;
Object method3369;
Object symbol4330;
Object methodclosure3369;
Object method3370;
Object symbol4299;
Object methodclosure3370;
Object string2793;
Object constant4695;
Object string2794;
Object constant4696;
Object send24024;
Object method3371;
Object symbol4320;
Object methodclosure3371;
Object character21;
Object constant4697;
Object method3372;
Object symbol4312;
Object methodclosure3372;
Object smallint1633;
Object constant4698;
Object smallint1634;
Object constant4699;
Object send24025;
Object method3373;
Object symbol4309;
Object methodclosure3373;
Object string2795;
Object constant4700;
Object method3374;
Object symbol4292;
Object methodclosure3374;
Object localvariable3357;
Object array2669;
Object localvariable3358;
Object array2670;
Object assign2924;
Object method3375;
Object methodclosure3375;
Object method3376;
Object methodclosure3376;
Object localvariable3359;
Object array2671;
Object assign2925;
Object method3377;
Object methodclosure3377;
Object localvariable3360;
Object array2672;
Object assign2926;
Object method3378;
Object methodclosure3378;
Object method3379;
Object methodclosure3379;
Object method3380;
Object methodclosure3380;
Object classreference652;
Object send24026;
Object assign2927;
Object localvariable3361;
Object array2673;
Object smallint1635;
Object constant4701;
Object send24027;
Object smallint1636;
Object constant4702;
Object send24028;
Object smallint1637;
Object constant4703;
Object send24029;
Object block1505;
Object send24030;
Object send24031;
Object smallint1638;
Object constant4704;
Object send24032;
Object send24033;
Object send24034;
Object smallint1639;
Object constant4705;
Object send24035;
Object send24036;
Object send24037;
Object smallint1640;
Object constant4706;
Object send24038;
Object send24039;
Object send24040;
Object send24041;
Object send24042;
Object send24043;
Object send24044;
Object method3381;
Object symbol4329;
Object methodclosure3381;
Object smallint1641;
Object constant4707;
Object smallint1642;
Object constant4708;
Object send24045;
Object method3382;
Object symbol4302;
Object methodclosure3382;
Object localvariable3362;
Object array2674;
Object smallint1643;
Object constant4709;
Object send24046;
Object method3383;
Object symbol4322;
Object methodclosure3383;
Object localvariable3363;
Object array2675;
Object symbol4399;
Object send24047;
Object block1506;
Object send24048;
Object method3384;
Object methodclosure3384;
Object localvariable3364;
Object array2676;
Object smallint1644;
Object constant4710;
Object send24049;
Object assign2928;
Object smallint1645;
Object constant4711;
Object smallint1646;
Object constant4712;
Object send24050;
Object smallint1647;
Object constant4713;
Object smallint1648;
Object constant4714;
Object send24051;
Object smallint1649;
Object constant4715;
Object send24052;
Object smallint1650;
Object constant4716;
Object send24053;
Object send24054;
Object smallint1651;
Object constant4717;
Object send24055;
Object smallint1652;
Object constant4718;
Object send24056;
Object send24057;
Object localvariable3365;
Object array2677;
Object smallint1653;
Object constant4719;
Object send24058;
Object smallint1654;
Object constant4720;
Object send24059;
Object smallint1655;
Object constant4721;
Object send24060;
Object block1507;
Object send24061;
Object send24062;
Object smallint1656;
Object constant4722;
Object send24063;
Object send24064;
Object send24065;
Object smallint1657;
Object constant4723;
Object send24066;
Object send24067;
Object send24068;
Object smallint1658;
Object constant4724;
Object send24069;
Object send24070;
Object send24071;
Object send24072;
Object send24073;
Object smallint1659;
Object constant4725;
Object send24074;
Object send24075;
Object send24076;
Object send24077;
Object smallint1660;
Object constant4726;
Object send24078;
Object send24079;
Object method3385;
Object symbol4294;
Object methodclosure3385;
Object symbol4400;
Object constant4727;
Object send24080;
Object method3386;
Object symbol4304;
Object methodclosure3386;
Object send24081;
Object method3387;
Object symbol4324;
Object methodclosure3387;
Object method3388;
Object symbol4316;
Object methodclosure3388;
Object symbol4401;
Object constant4728;
Object character22;
Object constant4729;
Object send24082;
Object method3389;
Object symbol4296;
Object methodclosure3389;
Object smallint1661;
Object constant4730;
Object send24083;
Object send24084;
Object smallint1662;
Object constant4731;
Object send24085;
Object send24086;
Object method3390;
Object symbol4288;
Object methodclosure3390;
Object smallint1663;
Object constant4732;
Object method3391;
Object symbol4306;
Object methodclosure3391;
Object method3392;
Object symbol4326;
Object methodclosure3392;
Object smallint1664;
Object constant4733;
Object smallint1665;
Object constant4734;
Object send24087;
Object method3393;
Object symbol4318;
Object methodclosure3393;
Object smallint1666;
Object constant4735;
Object smallint1667;
Object constant4736;
Object send24088;
Object method3394;
Object symbol4298;
Object methodclosure3394;
Object localvariable3366;
Object localvariable3367;
Object localvariable3368;
Object array2678;
Object send24089;
Object send24090;
Object method3395;
Object symbol4311;
Object methodclosure3395;
Object constant4737;
Object method3396;
Object symbol4308;
Object methodclosure3396;
Object character23;
Object constant4738;
Object string2796;
Object constant4739;
Object send24091;
Object method3397;
Object symbol4291;
Object methodclosure3397;
Object smallint1668;
Object constant4740;
Object smallint1669;
Object constant4741;
Object send24092;
Object method3398;
Object symbol4328;
Object methodclosure3398;
Object constant4742;
Object constant4743;
Object send24093;
Object method3399;
Object symbol4331;
Object methodclosure3399;
Object send24094;
Object send24095;
Object send24096;
Object send24097;
Object send24098;
Object send24099;
Object send24100;
Object send24101;
Object send24102;
Object send24103;
Object send24104;
Object send24105;
Object smallint1670;
Object constant4744;
Object send24106;
Object smallint1671;
Object constant4745;
Object send24107;
Object smallint1672;
Object constant4746;
Object send24108;
Object send24109;
Object smallint1673;
Object constant4747;
Object send24110;
Object send24111;
Object send24112;
Object smallint1674;
Object constant4748;
Object send24113;
Object send24114;
Object send24115;
Object smallint1675;
Object constant4749;
Object send24116;
Object send24117;
Object method3400;
Object symbol4301;
Object methodclosure3400;
Object localvariable3369;
Object array2679;
Object smallint1676;
Object constant4750;
Object assign2929;
Object method3401;
Object symbol4321;
Object methodclosure3401;
Object localvariable3370;
Object array2680;
Object send24118;
Object assign2930;
Object smallint1677;
Object constant4751;
Object send24119;
Object send24120;
Object smallint1678;
Object constant4752;
Object send24121;
Object send24122;
Object send24123;
Object send24124;
Object send24125;
Object smallint1679;
Object constant4753;
Object send24126;
Object send24127;
Object smallint1680;
Object constant4754;
Object send24128;
Object send24129;
Object send24130;
Object smallint1681;
Object constant4755;
Object send24131;
Object send24132;
Object method3402;
Object symbol4313;
Object methodclosure3402;
Object send24133;
Object method3403;
Object symbol4303;
Object methodclosure3403;
Object smallint1682;
Object constant4756;
Object smallint1683;
Object constant4757;
Object send24134;
Object method3404;
Object symbol4323;
Object methodclosure3404;
Object method3405;
Object symbol4315;
Object methodclosure3405;
Object localvariable3371;
Object array2681;
Object send24135;
Object assign2931;
Object localvariable3372;
Object array2682;
Object smallint1684;
Object constant4758;
Object send24136;
Object smallint1685;
Object constant4759;
Object send24137;
Object smallint1686;
Object constant4760;
Object send24138;
Object block1508;
Object send24139;
Object send24140;
Object smallint1687;
Object constant4761;
Object send24141;
Object send24142;
Object send24143;
Object smallint1688;
Object constant4762;
Object send24144;
Object send24145;
Object send24146;
Object smallint1689;
Object constant4763;
Object send24147;
Object send24148;
Object send24149;
Object send24150;
Object send24151;
Object send24152;
Object send24153;
Object method3406;
Object symbol4295;
Object methodclosure3406;
Object send24154;
Object method3407;
Object symbol4287;
Object methodclosure3407;
Object method3408;
Object symbol4305;
Object methodclosure3408;
Object classreference653;
Object localvariable3373;
Object array2683;
Object assign2932;
Object method3409;
Object methodclosure3409;
Object method3410;
Object methodclosure3410;
Object smallint1690;
Object constant4764;
Object method3411;
Object methodclosure3411;
Object method3412;
Object methodclosure3412;
Object localvariable3374;
Object array2684;
Object assign2933;
Object method3413;
Object methodclosure3413;
Object method3414;
Object methodclosure3414;
Object localvariable3375;
Object array2685;
Object assign2934;
Object method3415;
Object methodclosure3415;
Object classreference654;

void BridgeTest_create_ast() {
objectlayout1063 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable829 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout1063)->values[0] = instancevariable829;
instancevariable830 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout1063)->values[1] = instancevariable830;
instancevariable831 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout1063)->values[2] = instancevariable831;
instancevariable832 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1063)->values[3] = instancevariable832;
instancevariable833 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout1063)->values[4] = instancevariable833;
symbol4374 = (Object)new_Type_Symbol_cached(L"Collection");
class574 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1063);
((Type_Class)class574)->name = (Type_Symbol)symbol4374;
metaclass574 = (Object)HEADER(class574);
objectlayout1064 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1064)->values[0] = instancevariable829;
((Type_Array)objectlayout1064)->values[1] = instancevariable830;
((Type_Array)objectlayout1064)->values[2] = instancevariable831;
((Type_Array)objectlayout1064)->values[3] = instancevariable832;
((Type_Array)objectlayout1064)->values[4] = instancevariable833;
symbol4373 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class575 = (Object)new_Class_withMeta((Object)class574, empty_object_layout, objectlayout1064);
((Type_Class)class575)->name = (Type_Symbol)symbol4373;
metaclass575 = (Object)HEADER(class575);
objectlayout1065 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1065)->values[0] = instancevariable829;
((Type_Array)objectlayout1065)->values[1] = instancevariable830;
((Type_Array)objectlayout1065)->values[2] = instancevariable831;
((Type_Array)objectlayout1065)->values[3] = instancevariable832;
((Type_Array)objectlayout1065)->values[4] = instancevariable833;
symbol4337 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout1066 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable834 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout1066)->values[0] = instancevariable834;
instancevariable835 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout1066)->values[1] = instancevariable835;
instancevariable836 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout1066)->values[2] = instancevariable836;
class576 = (Object)new_Class_withMeta((Object)class575, objectlayout1066, objectlayout1065);
((Type_Class)class576)->name = (Type_Symbol)symbol4337;
metaclass576 = (Object)HEADER(class576);
objectlayout1067 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1067)->values[0] = instancevariable829;
((Type_Array)objectlayout1067)->values[1] = instancevariable830;
((Type_Array)objectlayout1067)->values[2] = instancevariable831;
((Type_Array)objectlayout1067)->values[3] = instancevariable832;
((Type_Array)objectlayout1067)->values[4] = instancevariable833;
symbol4376 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout1068 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable837 = (Object)new_AST_InstVariable(0, L"info");
((Type_Array)objectlayout1068)->values[0] = instancevariable837;
class577 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1068, objectlayout1067);
((Type_Class)class577)->name = (Type_Symbol)symbol4376;
metaclass577 = (Object)HEADER(class577);
objectlayout1069 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1069)->values[0] = instancevariable829;
((Type_Array)objectlayout1069)->values[1] = instancevariable830;
((Type_Array)objectlayout1069)->values[2] = instancevariable831;
((Type_Array)objectlayout1069)->values[3] = instancevariable832;
((Type_Array)objectlayout1069)->values[4] = instancevariable833;
symbol4375 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout1070 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1070)->values[0] = instancevariable837;
instancevariable838 = (Object)new_AST_InstVariable(1, L"name");
((Type_Array)objectlayout1070)->values[1] = instancevariable838;
instancevariable839 = (Object)new_AST_InstVariable(2, L"scopeId");
((Type_Array)objectlayout1070)->values[2] = instancevariable839;
instancevariable840 = (Object)new_AST_InstVariable(3, L"localId");
((Type_Array)objectlayout1070)->values[3] = instancevariable840;
class578 = (Object)new_Class_withMeta((Object)class577, objectlayout1070, objectlayout1069);
((Type_Class)class578)->name = (Type_Symbol)symbol4375;
metaclass578 = (Object)HEADER(class578);
objectlayout1071 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1071)->values[0] = instancevariable829;
((Type_Array)objectlayout1071)->values[1] = instancevariable830;
((Type_Array)objectlayout1071)->values[2] = instancevariable831;
((Type_Array)objectlayout1071)->values[3] = instancevariable832;
((Type_Array)objectlayout1071)->values[4] = instancevariable833;
symbol4347 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout1072 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1072)->values[0] = instancevariable837;
((Type_Array)objectlayout1072)->values[1] = instancevariable838;
((Type_Array)objectlayout1072)->values[2] = instancevariable839;
((Type_Array)objectlayout1072)->values[3] = instancevariable840;
class579 = (Object)new_Class_withMeta((Object)class578, objectlayout1072, objectlayout1071);
((Type_Class)class579)->name = (Type_Symbol)symbol4347;
metaclass579 = (Object)HEADER(class579);
objectlayout1073 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1073)->values[0] = instancevariable829;
((Type_Array)objectlayout1073)->values[1] = instancevariable830;
((Type_Array)objectlayout1073)->values[2] = instancevariable831;
((Type_Array)objectlayout1073)->values[3] = instancevariable832;
((Type_Array)objectlayout1073)->values[4] = instancevariable833;
symbol4341 = (Object)new_Type_Symbol_cached(L"Type");
class580 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1073);
((Type_Class)class580)->name = (Type_Symbol)symbol4341;
metaclass580 = (Object)HEADER(class580);
objectlayout1074 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1074)->values[0] = instancevariable829;
((Type_Array)objectlayout1074)->values[1] = instancevariable830;
((Type_Array)objectlayout1074)->values[2] = instancevariable831;
((Type_Array)objectlayout1074)->values[3] = instancevariable832;
((Type_Array)objectlayout1074)->values[4] = instancevariable833;
instancevariable841 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout1074)->values[5] = instancevariable841;
symbol4342 = (Object)new_Type_Symbol_cached(L"Nil");
class581 = (Object)new_Class_withMeta((Object)class580, empty_object_layout, objectlayout1074);
((Type_Class)class581)->name = (Type_Symbol)symbol4342;
metaclass581 = (Object)HEADER(class581);
objectlayout1075 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1075)->values[0] = instancevariable829;
((Type_Array)objectlayout1075)->values[1] = instancevariable830;
((Type_Array)objectlayout1075)->values[2] = instancevariable831;
((Type_Array)objectlayout1075)->values[3] = instancevariable832;
((Type_Array)objectlayout1075)->values[4] = instancevariable833;
instancevariable842 = (Object)new_AST_InstVariable(5, L"classInstVar");
((Type_Array)objectlayout1075)->values[5] = instancevariable842;
instancevariable843 = (Object)new_AST_InstVariable(6, L"instVar");
((Type_Array)objectlayout1075)->values[6] = instancevariable843;
symbol4286 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout1076 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable844 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout1076)->values[0] = instancevariable844;
instancevariable845 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout1076)->values[1] = instancevariable845;
instancevariable846 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout1076)->values[2] = instancevariable846;
class582 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1076, objectlayout1075);
((Type_Class)class582)->name = (Type_Symbol)symbol4286;
metaclass582 = (Object)HEADER(class582);
objectlayout1077 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1077)->values[0] = instancevariable829;
((Type_Array)objectlayout1077)->values[1] = instancevariable830;
((Type_Array)objectlayout1077)->values[2] = instancevariable831;
((Type_Array)objectlayout1077)->values[3] = instancevariable832;
((Type_Array)objectlayout1077)->values[4] = instancevariable833;
symbol4271 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class583 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1077);
((Type_Class)class583)->name = (Type_Symbol)symbol4271;
metaclass583 = (Object)HEADER(class583);
objectlayout1078 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1078)->values[0] = instancevariable829;
((Type_Array)objectlayout1078)->values[1] = instancevariable830;
((Type_Array)objectlayout1078)->values[2] = instancevariable831;
((Type_Array)objectlayout1078)->values[3] = instancevariable832;
((Type_Array)objectlayout1078)->values[4] = instancevariable833;
instancevariable847 = (Object)new_AST_InstVariable(5, L"a");
((Type_Array)objectlayout1078)->values[5] = instancevariable847;
instancevariable848 = (Object)new_AST_InstVariable(6, L"b");
((Type_Array)objectlayout1078)->values[6] = instancevariable848;
symbol4369 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout1079 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable849 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout1079)->values[0] = instancevariable849;
class584 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1079, objectlayout1078);
((Type_Class)class584)->name = (Type_Symbol)symbol4369;
metaclass584 = (Object)HEADER(class584);
objectlayout1080 = (Object)create_layout_with_vars(Type_ObjectLayout, 8);
((Type_Array)objectlayout1080)->values[0] = instancevariable829;
((Type_Array)objectlayout1080)->values[1] = instancevariable830;
((Type_Array)objectlayout1080)->values[2] = instancevariable831;
((Type_Array)objectlayout1080)->values[3] = instancevariable832;
((Type_Array)objectlayout1080)->values[4] = instancevariable833;
((Type_Array)objectlayout1080)->values[5] = instancevariable847;
((Type_Array)objectlayout1080)->values[6] = instancevariable848;
instancevariable850 = (Object)new_AST_InstVariable(7, L"c");
((Type_Array)objectlayout1080)->values[7] = instancevariable850;
symbol4300 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout1081 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout1081)->values[0] = instancevariable849;
instancevariable851 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout1081)->values[1] = instancevariable851;
class585 = (Object)new_Class_withMeta((Object)class584, objectlayout1081, objectlayout1080);
((Type_Class)class585)->name = (Type_Symbol)symbol4300;
metaclass585 = (Object)HEADER(class585);
objectlayout1082 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1082)->values[0] = instancevariable829;
((Type_Array)objectlayout1082)->values[1] = instancevariable830;
((Type_Array)objectlayout1082)->values[2] = instancevariable831;
((Type_Array)objectlayout1082)->values[3] = instancevariable832;
((Type_Array)objectlayout1082)->values[4] = instancevariable833;
symbol4293 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout3 = (Object)create_layout_with_vars(Type_ArrayLayout, 3);
instancevariable852 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout3)->values[0] = instancevariable852;
instancevariable853 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout3)->values[1] = instancevariable853;
instancevariable854 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout3)->values[2] = instancevariable854;
class586 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout3, objectlayout1082);
((Type_Class)class586)->name = (Type_Symbol)symbol4293;
metaclass586 = (Object)HEADER(class586);
classreference637 = (Object)new_Organization_ClassReference((Type_Class)class574);
classreference638 = (Object)new_Organization_ClassReference((Type_Class)class575);
classreference639 = (Object)new_Organization_ClassReference((Type_Class)class576);

// Object>>yourself
//yourself
// 	^ self
method3309 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4282 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure3309 = (Object)new_Runtime_MethodClosure(method3309);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol4282, (Runtime_MethodClosure)methodclosure3309);


// Object>>initialize
//initialize
method3310 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4284 = (Object)new_Type_Symbol_cached(L"initialize");
methodclosure3310 = (Object)new_Runtime_MethodClosure(method3310);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol4284, (Runtime_MethodClosure)methodclosure3310);


// Object>>isNil
//isNil
// 	^ false
method3311 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure3311 = (Object)new_Runtime_MethodClosure(method3311);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure3311);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send23939 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol4275 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send23940 = (Object)new_AST_Send((Object)send23939, (Object)symbol4275, 0);
method3312 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23940);
symbol4281 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure3312 = (Object)new_Runtime_MethodClosure(method3312);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol4281, (Runtime_MethodClosure)methodclosure3312);


// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method3313 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol4283 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure3313 = (Object)new_Runtime_MethodClosure(method3313);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol4283, (Runtime_MethodClosure)methodclosure3313);


// Object>>hash
//hash
// 	^ self uid hash
symbol4386 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send23941 = (Object)new_AST_Send((Object)Self, (Object)symbol4386, 0);
// hash
send23942 = (Object)new_AST_Send((Object)send23941, (Object)SMB_hash, 0);
method3314 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23942);
methodclosure3314 = (Object)new_Runtime_MethodClosure(method3314);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure3314);


// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable3332 = (Object)new_AST_Variable_named(L"anObject");
array2644 = (Object)new_Type_Array_with(1, (Object)localvariable3332);
// =
send23943 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable3332);
// not
send23944 = (Object)new_AST_Send((Object)send23943, (Object)SMB_not, 0);
method3315 = (Object)new_AST_Method_with((Type_Array)array2644, (Type_Array)empty_Type_Array, 1, send23944);
symbol4285 = (Object)new_Type_Symbol_cached(L"~=");
methodclosure3315 = (Object)new_Runtime_MethodClosure(method3315);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol4285, (Runtime_MethodClosure)methodclosure3315);

classreference640 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable3333 = (Object)new_AST_Variable_named(L"aStream");
array2645 = (Object)new_Type_Array_with(1, (Object)localvariable3333);
symbol4353 = (Object)new_Type_Symbol_cached(L"printOn:");
super284 = (Object)new_AST_Super((Object)symbol4353, 1, (Object)localvariable3333);
symbol4387 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send23945 = (Object)new_AST_Send((Object)Self, (Object)symbol4387, 0);
// name
send23946 = (Object)new_AST_Send((Object)send23945, (Object)SMB_name, 0);
// printOn:
send23947 = (Object)new_AST_Send((Object)send23946, (Object)symbol4353, 1, (Object)localvariable3333);
method3316 = (Object)new_AST_Method_with((Type_Array)array2645, (Type_Array)empty_Type_Array, 3, super284, send23947, Self);
methodclosure3316 = (Object)new_Runtime_MethodClosure(method3316);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol4353, (Runtime_MethodClosure)methodclosure3316);

classreference641 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Class>>package
//package
// 	^ package
instancevariable855 = (Object)new_AST_InstVariable(4, L"package");
method3317 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable855);
symbol4354 = (Object)new_Type_Symbol_cached(L"package");
methodclosure3317 = (Object)new_Runtime_MethodClosure(method3317);
store_method((Type_Class)Class, (Type_Symbol)symbol4354, (Runtime_MethodClosure)methodclosure3317);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable3334 = (Object)new_AST_Variable_named(L"aStream");
array2646 = (Object)new_Type_Array_with(1, (Object)localvariable3334);
super285 = (Object)new_AST_Super((Object)symbol4353, 1, (Object)localvariable3334);
symbol4388 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string2782 = (Object)new_Type_String(L" ");
constant4667 = (Object)new_AST_Constant((Object)string2782);
// nextPutAll:
send23948 = (Object)new_AST_Send((Object)localvariable3334, (Object)symbol4388, 1, (Object)constant4667);
// name
send23949 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send23950 = (Object)new_AST_Send((Object)send23949, (Object)symbol4353, 1, (Object)localvariable3334);
method3318 = (Object)new_AST_Method_with((Type_Array)array2646, (Type_Array)empty_Type_Array, 4, super285, send23948, send23950, Self);
methodclosure3318 = (Object)new_Runtime_MethodClosure(method3318);
store_method((Type_Class)Class, (Type_Symbol)symbol4353, (Runtime_MethodClosure)methodclosure3318);


// Class>>name
//name 
// 	^ name
instancevariable856 = (Object)new_AST_InstVariable(3, L"name");
method3319 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable856);
methodclosure3319 = (Object)new_Runtime_MethodClosure(method3319);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3319);

classreference642 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Behavior>>layout
//layout
// 	^ layout
instancevariable857 = (Object)new_AST_InstVariable(0, L"layout");
method3320 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable857);
symbol4340 = (Object)new_Type_Symbol_cached(L"layout");
methodclosure3320 = (Object)new_Runtime_MethodClosure(method3320);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4340, (Runtime_MethodClosure)methodclosure3320);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable858 = (Object)new_AST_InstVariable(1, L"superclass");
method3321 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable858);
symbol4345 = (Object)new_Type_Symbol_cached(L"superclass");
methodclosure3321 = (Object)new_Runtime_MethodClosure(method3321);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4345, (Runtime_MethodClosure)methodclosure3321);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
symbol4344 = (Object)new_Type_Symbol_cached(L"new");
// new
send23951 = (Object)new_AST_Send((Object)classreference639, (Object)symbol4344, 0);
method3322 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23951);
symbol4349 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
methodclosure3322 = (Object)new_Runtime_MethodClosure(method3322);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4349, (Runtime_MethodClosure)methodclosure3322);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable3335 = (Object)new_AST_Variable_named(L"sizeRequested");
array2647 = (Object)new_Type_Array_with(1, (Object)localvariable3335);
// basicNew:
send23952 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable3335);
// initialize
send23953 = (Object)new_AST_Send((Object)send23952, (Object)symbol4284, 0);
method3323 = (Object)new_AST_Method_with((Type_Array)array2647, (Type_Array)empty_Type_Array, 1, send23953);
symbol4334 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure3323 = (Object)new_Runtime_MethodClosure(method3323);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4334, (Runtime_MethodClosure)methodclosure3323);


// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable3336 = (Object)new_AST_Variable_named(L"instVars");
array2648 = (Object)new_Type_Array_with(1, (Object)localvariable3336);
// new
send23954 = (Object)new_AST_Send((Object)classreference639, (Object)symbol4344, 0);
assign2908 = (Object)new_AST_Assign((Object)localvariable3336, (Object)send23954);
symbol4343 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
// hasSuperclass
send23955 = (Object)new_AST_Send((Object)Self, (Object)symbol4343, 0);
symbol4389 = (Object)new_Type_Symbol_cached(L"addAll:");
// superclass
send23956 = (Object)new_AST_Send((Object)Self, (Object)symbol4345, 0);
// layout
send23957 = (Object)new_AST_Send((Object)send23956, (Object)symbol4340, 0);
// addAll:
send23958 = (Object)new_AST_Send((Object)localvariable3336, (Object)symbol4389, 1, (Object)send23957);
block1495 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23958);
block1496 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send23959 = (Object)new_AST_Send((Object)send23955, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1495, (Object)block1496);
method3324 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2648, 3, assign2908, send23959, localvariable3336);
symbol4338 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
methodclosure3324 = (Object)new_Runtime_MethodClosure(method3324);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4338, (Runtime_MethodClosure)methodclosure3324);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
// superclass
send23960 = (Object)new_AST_Send((Object)Self, (Object)symbol4345, 0);

// Nil>>isNil
//isNil
// 	^ true
method3325 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure3325 = (Object)new_Runtime_MethodClosure(method3325);
store_method((Type_Class)class581, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure3325);

classreference643 = (Object)new_Organization_ClassReference((Type_Class)class581);
symbol4390 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send23961 = (Object)new_AST_Send((Object)classreference643, (Object)symbol4390, 0);
// ~=
send23962 = (Object)new_AST_Send((Object)send23960, (Object)symbol4285, 1, (Object)send23961);
method3326 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23962);
methodclosure3326 = (Object)new_Runtime_MethodClosure(method3326);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4343, (Runtime_MethodClosure)methodclosure3326);


// Behavior>>methods
//methods
// 	^ methods
instancevariable859 = (Object)new_AST_InstVariable(2, L"methods");
method3327 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable859);
symbol4339 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure3327 = (Object)new_Runtime_MethodClosure(method3327);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4339, (Runtime_MethodClosure)methodclosure3327);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send23963 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send23964 = (Object)new_AST_Send((Object)send23963, (Object)symbol4284, 0);
method3328 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23964);
methodclosure3328 = (Object)new_Runtime_MethodClosure(method3328);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4344, (Runtime_MethodClosure)methodclosure3328);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable3337 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable3338 = (Object)new_AST_Variable_named(L"instVars");
localvariable3339 = (Object)new_AST_Variable_named(L"instVar");
array2649 = (Object)new_Type_Array_with(3, (Object)localvariable3337, (Object)localvariable3338, (Object)localvariable3339);
// parentInstVariables
send23965 = (Object)new_AST_Send((Object)Self, (Object)symbol4338, 0);
assign2909 = (Object)new_AST_Assign((Object)localvariable3338, (Object)send23965);
// pInstVarNames
send23966 = (Object)new_AST_Send((Object)Self, (Object)symbol4349, 0);
symbol4391 = (Object)new_Type_Symbol_cached(L"do:");
localvariable3340 = (Object)new_AST_Variable_named(L"each");
array2650 = (Object)new_Type_Array_with(1, (Object)localvariable3340);
localvariable3341 = (Object)new_AST_Variable_named(L"var");
array2651 = (Object)new_Type_Array_with(1, (Object)localvariable3341);
// name
send23967 = (Object)new_AST_Send((Object)localvariable3341, (Object)SMB_name, 0);
// =
send23968 = (Object)new_AST_Send((Object)send23967, (Object)SMB__equal, 1, (Object)localvariable3340);
symbol4392 = (Object)new_Type_Symbol_cached(L"error:");
string2783 = (Object)new_Type_String(L"Double Declaration of \"");
constant4668 = (Object)new_AST_Constant((Object)string2783);
// ,
send23969 = (Object)new_AST_Send((Object)constant4668, (Object)SMB__concat, 1, (Object)localvariable3340);
string2784 = (Object)new_Type_String(L"\"");
constant4669 = (Object)new_AST_Constant((Object)string2784);
// ,
send23970 = (Object)new_AST_Send((Object)send23969, (Object)SMB__concat, 1, (Object)constant4669);
// error:
send23971 = (Object)new_AST_Send((Object)Self, (Object)symbol4392, 1, (Object)send23970);
block1497 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23971);
// ifTrue:
send23972 = (Object)new_AST_Send((Object)send23968, (Object)SMB_ifTrue_, 1, (Object)block1497);
block1498 = (Object)new_AST_Block_with((Type_Array)array2651, (Type_Array)empty_Type_Array, 2, 1, send23972);
// do:
send23973 = (Object)new_AST_Send((Object)localvariable3338, (Object)symbol4391, 1, (Object)block1498);
classreference644 = (Object)new_Organization_ClassReference((Type_Class)class579);
symbol4379 = (Object)new_Type_Symbol_cached(L"named:");
// named:
send23974 = (Object)new_AST_Send((Object)classreference644, (Object)symbol4379, 1, (Object)localvariable3340);
assign2910 = (Object)new_AST_Assign((Object)localvariable3339, (Object)send23974);
symbol4385 = (Object)new_Type_Symbol_cached(L"localId:");
// size
send23975 = (Object)new_AST_Send((Object)localvariable3338, (Object)SMB_size, 0);
// localId:
send23976 = (Object)new_AST_Send((Object)localvariable3339, (Object)symbol4385, 1, (Object)send23975);
symbol4393 = (Object)new_Type_Symbol_cached(L"add:");
// add:
send23977 = (Object)new_AST_Send((Object)localvariable3338, (Object)symbol4393, 1, (Object)localvariable3339);
block1499 = (Object)new_AST_Block_with((Type_Array)array2650, (Type_Array)empty_Type_Array, 1, 4, send23973, assign2910, send23976, send23977);
// do:
send23978 = (Object)new_AST_Send((Object)send23966, (Object)symbol4391, 1, (Object)block1499);
method3329 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2649, 3, assign2909, send23978, localvariable3338);
symbol4348 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure3329 = (Object)new_Runtime_MethodClosure(method3329);
store_method((Type_Class)Behavior, (Type_Symbol)symbol4348, (Runtime_MethodClosure)methodclosure3329);

classreference645 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// ASTNode>>info
//info
// 	^ info
method3330 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable837);
symbol4378 = (Object)new_Type_Symbol_cached(L"info");
methodclosure3330 = (Object)new_Runtime_MethodClosure(method3330);
store_method((Type_Class)class577, (Type_Symbol)symbol4378, (Runtime_MethodClosure)methodclosure3330);


// ASTNode>>initialize
//initialize 
// 	super initialize.
// 	
super286 = (Object)new_AST_Super((Object)symbol4284, 0);
method3331 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super286, Self);
methodclosure3331 = (Object)new_Runtime_MethodClosure(method3331);
store_method((Type_Class)class577, (Type_Symbol)symbol4284, (Runtime_MethodClosure)methodclosure3331);


// ASTNode>>info:
//info: anObject
// 	info := anObject
localvariable3342 = (Object)new_AST_Variable_named(L"anObject");
array2652 = (Object)new_Type_Array_with(1, (Object)localvariable3342);
assign2911 = (Object)new_AST_Assign((Object)instancevariable837, (Object)localvariable3342);
method3332 = (Object)new_AST_Method_with((Type_Array)array2652, (Type_Array)empty_Type_Array, 2, assign2911, Self);
symbol4377 = (Object)new_Type_Symbol_cached(L"info:");
methodclosure3332 = (Object)new_Runtime_MethodClosure(method3332);
store_method((Type_Class)class577, (Type_Symbol)symbol4377, (Runtime_MethodClosure)methodclosure3332);

classreference646 = (Object)new_Organization_ClassReference((Type_Class)class577);

// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable3343 = (Object)new_AST_Variable_named(L"anObject");
array2653 = (Object)new_Type_Array_with(1, (Object)localvariable3343);
assign2912 = (Object)new_AST_Assign((Object)instancevariable840, (Object)localvariable3343);
method3333 = (Object)new_AST_Method_with((Type_Array)array2653, (Type_Array)empty_Type_Array, 2, assign2912, Self);
methodclosure3333 = (Object)new_Runtime_MethodClosure(method3333);
store_method((Type_Class)class578, (Type_Symbol)symbol4385, (Runtime_MethodClosure)methodclosure3333);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable3344 = (Object)new_AST_Variable_named(L"anObject");
array2654 = (Object)new_Type_Array_with(1, (Object)localvariable3344);
assign2913 = (Object)new_AST_Assign((Object)instancevariable838, (Object)localvariable3344);
method3334 = (Object)new_AST_Method_with((Type_Array)array2654, (Type_Array)empty_Type_Array, 2, assign2913, Self);
symbol4384 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure3334 = (Object)new_Runtime_MethodClosure(method3334);
store_method((Type_Class)class578, (Type_Symbol)symbol4384, (Runtime_MethodClosure)methodclosure3334);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method3335 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4380 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure3335 = (Object)new_Runtime_MethodClosure(method3335);
store_method((Type_Class)class578, (Type_Symbol)symbol4380, (Runtime_MethodClosure)methodclosure3335);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable3345 = (Object)new_AST_Variable_named(L"anObject");
array2655 = (Object)new_Type_Array_with(1, (Object)localvariable3345);
assign2914 = (Object)new_AST_Assign((Object)instancevariable839, (Object)localvariable3345);
method3336 = (Object)new_AST_Method_with((Type_Array)array2655, (Type_Array)empty_Type_Array, 2, assign2914, Self);
symbol4382 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure3336 = (Object)new_Runtime_MethodClosure(method3336);
store_method((Type_Class)class578, (Type_Symbol)symbol4382, (Runtime_MethodClosure)methodclosure3336);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable3346 = (Object)new_AST_Variable_named(L"aStream");
array2656 = (Object)new_Type_Array_with(1, (Object)localvariable3346);
super287 = (Object)new_AST_Super((Object)symbol4353, 1, (Object)localvariable3346);
string2785 = (Object)new_Type_String(L" ");
constant4670 = (Object)new_AST_Constant((Object)string2785);
// nextPutAll:
send23979 = (Object)new_AST_Send((Object)localvariable3346, (Object)symbol4388, 1, (Object)constant4670);
// name
send23980 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send23981 = (Object)new_AST_Send((Object)send23980, (Object)symbol4353, 1, (Object)localvariable3346);
string2786 = (Object)new_Type_String(L" ");
constant4671 = (Object)new_AST_Constant((Object)string2786);
// nextPutAll:
send23982 = (Object)new_AST_Send((Object)localvariable3346, (Object)symbol4388, 1, (Object)constant4671);
symbol4383 = (Object)new_Type_Symbol_cached(L"scopeId");
// scopeId
send23983 = (Object)new_AST_Send((Object)Self, (Object)symbol4383, 0);
// printOn:
send23984 = (Object)new_AST_Send((Object)send23983, (Object)symbol4353, 1, (Object)localvariable3346);
string2787 = (Object)new_Type_String(L"@");
constant4672 = (Object)new_AST_Constant((Object)string2787);
// nextPutAll:
send23985 = (Object)new_AST_Send((Object)localvariable3346, (Object)symbol4388, 1, (Object)constant4672);
symbol4381 = (Object)new_Type_Symbol_cached(L"localId");
// localId
send23986 = (Object)new_AST_Send((Object)Self, (Object)symbol4381, 0);
// printOn:
send23987 = (Object)new_AST_Send((Object)send23986, (Object)symbol4353, 1, (Object)localvariable3346);
method3337 = (Object)new_AST_Method_with((Type_Array)array2656, (Type_Array)empty_Type_Array, 8, super287, send23979, send23981, send23982, send23984, send23985, send23987, Self);
methodclosure3337 = (Object)new_Runtime_MethodClosure(method3337);
store_method((Type_Class)class578, (Type_Symbol)symbol4353, (Runtime_MethodClosure)methodclosure3337);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method3338 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable839);
methodclosure3338 = (Object)new_Runtime_MethodClosure(method3338);
store_method((Type_Class)class578, (Type_Symbol)symbol4383, (Runtime_MethodClosure)methodclosure3338);


// Variable>>localId
//localId
// 	^ localId
method3339 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable840);
methodclosure3339 = (Object)new_Runtime_MethodClosure(method3339);
store_method((Type_Class)class578, (Type_Symbol)symbol4381, (Runtime_MethodClosure)methodclosure3339);


// Variable>>name
//name
// 	^ name
method3340 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable838);
methodclosure3340 = (Object)new_Runtime_MethodClosure(method3340);
store_method((Type_Class)class578, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3340);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable3347 = (Object)new_AST_Variable_named(L"aSymbol");
array2657 = (Object)new_Type_Array_with(1, (Object)localvariable3347);
// new
send23988 = (Object)new_AST_Send((Object)Self, (Object)symbol4344, 0);
// asSymbol
send23989 = (Object)new_AST_Send((Object)localvariable3347, (Object)SMB_asSymbol, 0);
// name:
send23990 = (Object)new_AST_Send((Object)send23988, (Object)symbol4384, 1, (Object)send23989);
method3341 = (Object)new_AST_Method_with((Type_Array)array2657, (Type_Array)empty_Type_Array, 1, send23990);
methodclosure3341 = (Object)new_Runtime_MethodClosure(method3341);
store_method((Type_Class)metaclass578, (Type_Symbol)symbol4379, (Runtime_MethodClosure)methodclosure3341);

classreference647 = (Object)new_Organization_ClassReference((Type_Class)class578);

// Message>>selector
//selector 
// 	^ selector
instancevariable860 = (Object)new_AST_InstVariable(0, L"selector");
method3342 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable860);
symbol4357 = (Object)new_Type_Symbol_cached(L"selector");
methodclosure3342 = (Object)new_Runtime_MethodClosure(method3342);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol4357, (Runtime_MethodClosure)methodclosure3342);


// Message>>arguments
//arguments
// 	^ self
method3343 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4358 = (Object)new_Type_Symbol_cached(L"arguments");
methodclosure3343 = (Object)new_Runtime_MethodClosure(method3343);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol4358, (Runtime_MethodClosure)methodclosure3343);

classreference648 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable3348 = (Object)new_AST_Variable_named(L"aMessage");
array2658 = (Object)new_Type_Array_with(1, (Object)localvariable3348);
localvariable3349 = (Object)new_AST_Variable_named(L"selector");
array2659 = (Object)new_Type_Array_with(1, (Object)localvariable3349);
variable160 = (Object)new_AST_Variable_named(L"return");
array2660 = (Object)new_Type_Array_with(1, (Object)variable160);
// selector
send23991 = (Object)new_AST_Send((Object)localvariable3348, (Object)symbol4357, 0);
symbol4394 = (Object)new_Type_Symbol_cached(L"accept:");
constant4673 = (Object)new_AST_Constant((Object)symbol4394);
// =
send23992 = (Object)new_AST_Send((Object)send23991, (Object)SMB__equal, 1, (Object)constant4673);
super288 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3348);
// escape:
send23993 = (Object)new_AST_Send((Object)variable160, (Object)SMB_escape_, 1, (Object)super288);
block1500 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23993);
// ifFalse:
send23994 = (Object)new_AST_Send((Object)send23992, (Object)SMB_ifFalse_, 1, (Object)block1500);
string2788 = (Object)new_Type_String(L"visit");
constant4674 = (Object)new_AST_Constant((Object)string2788);
// objectName
send23995 = (Object)new_AST_Send((Object)Self, (Object)symbol4281, 0);
// ,
send23996 = (Object)new_AST_Send((Object)constant4674, (Object)SMB__concat, 1, (Object)send23995);
string2789 = (Object)new_Type_String(L":");
constant4675 = (Object)new_AST_Constant((Object)string2789);
// ,
send23997 = (Object)new_AST_Send((Object)send23996, (Object)SMB__concat, 1, (Object)constant4675);
// asSymbol
send23998 = (Object)new_AST_Send((Object)send23997, (Object)SMB_asSymbol, 0);
assign2915 = (Object)new_AST_Assign((Object)localvariable3349, (Object)send23998);
symbol4395 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send23999 = (Object)new_AST_Send((Object)localvariable3348, (Object)symbol4395, 0);
symbol4396 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send24000 = (Object)new_AST_Send((Object)send23999, (Object)symbol4396, 2, (Object)localvariable3349, (Object)Self);
block1501 = (Object)new_AST_Block_with((Type_Array)array2660, (Type_Array)empty_Type_Array, 1, 3, send23994, assign2915, send24000);
// on:
send24001 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1501);
method3344 = (Object)new_AST_Method_with((Type_Array)array2658, (Type_Array)array2659, 1, send24001);
methodclosure3344 = (Object)new_Runtime_MethodClosure(method3344);
store_method((Type_Class)class580, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure3344);

classreference649 = (Object)new_Organization_ClassReference((Type_Class)class580);

// StandardTestClass>>c:
//c: anObject
// 	c := anObject
localvariable3350 = (Object)new_AST_Variable_named(L"anObject");
array2661 = (Object)new_Type_Array_with(1, (Object)localvariable3350);
assign2916 = (Object)new_AST_Assign((Object)instancevariable846, (Object)localvariable3350);
method3345 = (Object)new_AST_Method_with((Type_Array)array2661, (Type_Array)empty_Type_Array, 2, assign2916, Self);
symbol4364 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure3345 = (Object)new_Runtime_MethodClosure(method3345);
store_method((Type_Class)class582, (Type_Symbol)symbol4364, (Runtime_MethodClosure)methodclosure3345);


// StandardTestClass>>c
//c
// 	^ c
method3346 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable846);
symbol4366 = (Object)new_Type_Symbol_cached(L"c");
methodclosure3346 = (Object)new_Runtime_MethodClosure(method3346);
store_method((Type_Class)class582, (Type_Symbol)symbol4366, (Runtime_MethodClosure)methodclosure3346);


// StandardTestClass>>b:
//b: anObject
// 	b := anObject
localvariable3351 = (Object)new_AST_Variable_named(L"anObject");
array2662 = (Object)new_Type_Array_with(1, (Object)localvariable3351);
assign2917 = (Object)new_AST_Assign((Object)instancevariable845, (Object)localvariable3351);
method3347 = (Object)new_AST_Method_with((Type_Array)array2662, (Type_Array)empty_Type_Array, 2, assign2917, Self);
symbol4368 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure3347 = (Object)new_Runtime_MethodClosure(method3347);
store_method((Type_Class)class582, (Type_Symbol)symbol4368, (Runtime_MethodClosure)methodclosure3347);


// StandardTestClass>>a:
//a: anObject
// 	a := anObject
localvariable3352 = (Object)new_AST_Variable_named(L"anObject");
array2663 = (Object)new_Type_Array_with(1, (Object)localvariable3352);
assign2918 = (Object)new_AST_Assign((Object)instancevariable844, (Object)localvariable3352);
method3348 = (Object)new_AST_Method_with((Type_Array)array2663, (Type_Array)empty_Type_Array, 2, assign2918, Self);
symbol4363 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure3348 = (Object)new_Runtime_MethodClosure(method3348);
store_method((Type_Class)class582, (Type_Symbol)symbol4363, (Runtime_MethodClosure)methodclosure3348);


// StandardTestClass>>b
//b
// 	^ b
method3349 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable845);
symbol4365 = (Object)new_Type_Symbol_cached(L"b");
methodclosure3349 = (Object)new_Runtime_MethodClosure(method3349);
store_method((Type_Class)class582, (Type_Symbol)symbol4365, (Runtime_MethodClosure)methodclosure3349);


// StandardTestClass>>a
//a
// 	^ a
method3350 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable844);
symbol4367 = (Object)new_Type_Symbol_cached(L"a");
methodclosure3350 = (Object)new_Runtime_MethodClosure(method3350);
store_method((Type_Class)class582, (Type_Symbol)symbol4367, (Runtime_MethodClosure)methodclosure3350);


// a PMetaclass P#StandardTestClass>>aClassSideMethodWithInstanceVariables
//aClassSideMethodWithInstanceVariables
// 	classInstVar := 100.
// 	^ classInstVar
smallint1621 = (Object)new_Type_SmallInt(100);
constant4676 = (Object)new_AST_Constant((Object)smallint1621);
assign2919 = (Object)new_AST_Assign((Object)instancevariable842, (Object)constant4676);
method3351 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign2919, instancevariable842);
symbol4360 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure3351 = (Object)new_Runtime_MethodClosure(method3351);
store_method((Type_Class)metaclass582, (Type_Symbol)symbol4360, (Runtime_MethodClosure)methodclosure3351);


// a PMetaclass P#StandardTestClass>>aClassSideMethod
//aClassSideMethod
// 	^ 'a'
string2790 = (Object)new_Type_String(L"a");
constant4677 = (Object)new_AST_Constant((Object)string2790);
method3352 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4677);
symbol4359 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure3352 = (Object)new_Runtime_MethodClosure(method3352);
store_method((Type_Class)metaclass582, (Type_Symbol)symbol4359, (Runtime_MethodClosure)methodclosure3352);


// a PMetaclass P#StandardTestClass>>instVar
//instVar
// 	^ instVar
method3353 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable843);
symbol4361 = (Object)new_Type_Symbol_cached(L"instVar");
methodclosure3353 = (Object)new_Runtime_MethodClosure(method3353);
store_method((Type_Class)metaclass582, (Type_Symbol)symbol4361, (Runtime_MethodClosure)methodclosure3353);


// a PMetaclass P#StandardTestClass>>instVar:
//instVar: anObject
// 	instVar := anObject
localvariable3353 = (Object)new_AST_Variable_named(L"anObject");
array2664 = (Object)new_Type_Array_with(1, (Object)localvariable3353);
assign2920 = (Object)new_AST_Assign((Object)instancevariable843, (Object)localvariable3353);
method3354 = (Object)new_AST_Method_with((Type_Array)array2664, (Type_Array)empty_Type_Array, 2, assign2920, Self);
symbol4362 = (Object)new_Type_Symbol_cached(L"instVar:");
methodclosure3354 = (Object)new_Runtime_MethodClosure(method3354);
store_method((Type_Class)metaclass582, (Type_Symbol)symbol4362, (Runtime_MethodClosure)methodclosure3354);

classreference650 = (Object)new_Organization_ClassReference((Type_Class)class582);

// BridgeTest>>tmSimpleBasicArithmetik
//tmSimpleBasicArithmetik
// 	^ ((1 + 2) + 2) * 5
smallint1622 = (Object)new_Type_SmallInt(1);
constant4678 = (Object)new_AST_Constant((Object)smallint1622);
smallint1623 = (Object)new_Type_SmallInt(2);
constant4679 = (Object)new_AST_Constant((Object)smallint1623);
// +
send24002 = (Object)new_AST_Send((Object)constant4678, (Object)SMB__plus, 1, (Object)constant4679);
smallint1624 = (Object)new_Type_SmallInt(2);
constant4680 = (Object)new_AST_Constant((Object)smallint1624);
// +
send24003 = (Object)new_AST_Send((Object)send24002, (Object)SMB__plus, 1, (Object)constant4680);
smallint1625 = (Object)new_Type_SmallInt(5);
constant4681 = (Object)new_AST_Constant((Object)smallint1625);
// *
send24004 = (Object)new_AST_Send((Object)send24003, (Object)SMB__times, 1, (Object)constant4681);
method3355 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24004);
symbol4325 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure3355 = (Object)new_Runtime_MethodClosure(method3355);
store_method((Type_Class)class583, (Type_Symbol)symbol4325, (Runtime_MethodClosure)methodclosure3355);


// BridgeTest>>tmSymbolNotEquals
//tmSymbolNotEquals
// 	^ #Symbol = #lobmyS
symbol4397 = (Object)new_Type_Symbol_cached(L"Symbol");
constant4682 = (Object)new_AST_Constant((Object)symbol4397);
symbol4398 = (Object)new_Type_Symbol_cached(L"lobmyS");
constant4683 = (Object)new_AST_Constant((Object)symbol4398);
// =
send24005 = (Object)new_AST_Send((Object)constant4682, (Object)SMB__equal, 1, (Object)constant4683);
method3356 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24005);
symbol4317 = (Object)new_Type_Symbol_cached(L"tmSymbolNotEquals");
methodclosure3356 = (Object)new_Runtime_MethodClosure(method3356);
store_method((Type_Class)class583, (Type_Symbol)symbol4317, (Runtime_MethodClosure)methodclosure3356);


// BridgeTest>>tmExtendedReturn
//tmExtendedReturn
// 	1 > 2 ifTrue: [ ^ 1 ]
// 		ifFalse: [ ^ 2].
variable161 = (Object)new_AST_Variable_named(L"return");
array2665 = (Object)new_Type_Array_with(1, (Object)variable161);
smallint1626 = (Object)new_Type_SmallInt(1);
constant4684 = (Object)new_AST_Constant((Object)smallint1626);
smallint1627 = (Object)new_Type_SmallInt(2);
constant4685 = (Object)new_AST_Constant((Object)smallint1627);
// >
send24006 = (Object)new_AST_Send((Object)constant4684, (Object)SMB__gt, 1, (Object)constant4685);
smallint1628 = (Object)new_Type_SmallInt(1);
constant4686 = (Object)new_AST_Constant((Object)smallint1628);
// escape:
send24007 = (Object)new_AST_Send((Object)variable161, (Object)SMB_escape_, 1, (Object)constant4686);
block1502 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24007);
smallint1629 = (Object)new_Type_SmallInt(2);
constant4687 = (Object)new_AST_Constant((Object)smallint1629);
// escape:
send24008 = (Object)new_AST_Send((Object)variable161, (Object)SMB_escape_, 1, (Object)constant4687);
block1503 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24008);
// ifTrue:ifFalse:
send24009 = (Object)new_AST_Send((Object)send24006, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1502, (Object)block1503);
block1504 = (Object)new_AST_Block_with((Type_Array)array2665, (Type_Array)empty_Type_Array, 1, 2, send24009, Self);
// on:
send24010 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1504);
method3357 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24010);
symbol4297 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure3357 = (Object)new_Runtime_MethodClosure(method3357);
store_method((Type_Class)class583, (Type_Symbol)symbol4297, (Runtime_MethodClosure)methodclosure3357);


// BridgeTest>>tmStringEquals
//tmStringEquals
// 	^ 'String' = 'String'
string2791 = (Object)new_Type_String(L"String");
constant4688 = (Object)new_AST_Constant((Object)string2791);
string2792 = (Object)new_Type_String(L"String");
constant4689 = (Object)new_AST_Constant((Object)string2792);
// =
send24011 = (Object)new_AST_Send((Object)constant4688, (Object)SMB__equal, 1, (Object)constant4689);
method3358 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24011);
symbol4289 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure3358 = (Object)new_Runtime_MethodClosure(method3358);
store_method((Type_Class)class583, (Type_Symbol)symbol4289, (Runtime_MethodClosure)methodclosure3358);


// BridgeTest>>tmSuperClassSuperSend
//tmSuperClassSuperSend
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	self assert: instance testSuper = 100
localvariable3354 = (Object)new_AST_Variable_named(L"instance");
array2666 = (Object)new_Type_Array_with(1, (Object)localvariable3354);

// ChildClassTestClass>>b
//b
// 	^ b
method3359 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable851);
methodclosure3359 = (Object)new_Runtime_MethodClosure(method3359);
store_method((Type_Class)class585, (Type_Symbol)symbol4365, (Runtime_MethodClosure)methodclosure3359);


// ChildClassTestClass>>b:
//b: anObject
// 	b := anObject
localvariable3355 = (Object)new_AST_Variable_named(L"anObject");
array2667 = (Object)new_Type_Array_with(1, (Object)localvariable3355);
assign2921 = (Object)new_AST_Assign((Object)instancevariable851, (Object)localvariable3355);
method3360 = (Object)new_AST_Method_with((Type_Array)array2667, (Type_Array)empty_Type_Array, 2, assign2921, Self);
methodclosure3360 = (Object)new_Runtime_MethodClosure(method3360);
store_method((Type_Class)class585, (Type_Symbol)symbol4368, (Runtime_MethodClosure)methodclosure3360);


// ChildClassTestClass>>testSuper
//testSuper
// 	^ 10 * super test
smallint1630 = (Object)new_Type_SmallInt(10);
constant4690 = (Object)new_AST_Constant((Object)smallint1630);
symbol4370 = (Object)new_Type_Symbol_cached(L"test");
super289 = (Object)new_AST_Super((Object)symbol4370, 0);
// *
send24012 = (Object)new_AST_Send((Object)constant4690, (Object)SMB__times, 1, (Object)super289);
method3361 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24012);
symbol4371 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure3361 = (Object)new_Runtime_MethodClosure(method3361);
store_method((Type_Class)class585, (Type_Symbol)symbol4371, (Runtime_MethodClosure)methodclosure3361);


// a PMetaclass P#ChildClassTestClass>>c
//c
// 	^ c
method3362 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable850);
methodclosure3362 = (Object)new_Runtime_MethodClosure(method3362);
store_method((Type_Class)metaclass585, (Type_Symbol)symbol4366, (Runtime_MethodClosure)methodclosure3362);


// a PMetaclass P#ChildClassTestClass>>c:
//c: anObject
// 	c := anObject
localvariable3356 = (Object)new_AST_Variable_named(L"anObject");
array2668 = (Object)new_Type_Array_with(1, (Object)localvariable3356);
assign2922 = (Object)new_AST_Assign((Object)instancevariable850, (Object)localvariable3356);
method3363 = (Object)new_AST_Method_with((Type_Array)array2668, (Type_Array)empty_Type_Array, 2, assign2922, Self);
methodclosure3363 = (Object)new_Runtime_MethodClosure(method3363);
store_method((Type_Class)metaclass585, (Type_Symbol)symbol4364, (Runtime_MethodClosure)methodclosure3363);

classreference651 = (Object)new_Organization_ClassReference((Type_Class)class585);
// basicNew
send24013 = (Object)new_AST_Send((Object)classreference651, (Object)SMB_basicNew, 0);
assign2923 = (Object)new_AST_Assign((Object)localvariable3354, (Object)send24013);
symbol4314 = (Object)new_Type_Symbol_cached(L"assert:");
// testSuper
send24014 = (Object)new_AST_Send((Object)localvariable3354, (Object)symbol4371, 0);
smallint1631 = (Object)new_Type_SmallInt(100);
constant4691 = (Object)new_AST_Constant((Object)smallint1631);
// =
send24015 = (Object)new_AST_Send((Object)send24014, (Object)SMB__equal, 1, (Object)constant4691);
// assert:
send24016 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24015);
method3364 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2666, 3, assign2923, send24016, Self);
symbol4310 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure3364 = (Object)new_Runtime_MethodClosure(method3364);
store_method((Type_Class)class583, (Type_Symbol)symbol4310, (Runtime_MethodClosure)methodclosure3364);


// BridgeTest>>tmSimpleReturn
//tmSimpleReturn
// 	^ 1
smallint1632 = (Object)new_Type_SmallInt(1);
constant4692 = (Object)new_AST_Constant((Object)smallint1632);
method3365 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4692);
symbol4307 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure3365 = (Object)new_Runtime_MethodClosure(method3365);
store_method((Type_Class)class583, (Type_Symbol)symbol4307, (Runtime_MethodClosure)methodclosure3365);


// BridgeTest>>tmCharacterEquals
//tmCharacterEquals
// 	^ $C = $C
character19 = (Object)new_Type_Character(L'C');
constant4693 = (Object)new_AST_Constant((Object)character19);
character20 = (Object)new_Type_Character(L'C');
constant4694 = (Object)new_AST_Constant((Object)character20);
// =
send24017 = (Object)new_AST_Send((Object)constant4693, (Object)SMB__equal, 1, (Object)constant4694);
method3366 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24017);
symbol4290 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure3366 = (Object)new_Runtime_MethodClosure(method3366);
store_method((Type_Class)class583, (Type_Symbol)symbol4290, (Runtime_MethodClosure)methodclosure3366);


// BridgeTest>>tmBooleanNotEquals
//tmBooleanNotEquals
// 	^ true ~= false
// ~=
send24018 = (Object)new_AST_Send((Object)True_Const, (Object)symbol4285, 1, (Object)False_Const);
method3367 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24018);
symbol4327 = (Object)new_Type_Symbol_cached(L"tmBooleanNotEquals");
methodclosure3367 = (Object)new_Runtime_MethodClosure(method3367);
store_method((Type_Class)class583, (Type_Symbol)symbol4327, (Runtime_MethodClosure)methodclosure3367);


// BridgeTest>>setUp
//setUp
// 	
method3368 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4319 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure3368 = (Object)new_Runtime_MethodClosure(method3368);
store_method((Type_Class)class583, (Type_Symbol)symbol4319, (Runtime_MethodClosure)methodclosure3368);


// BridgeTest>>tmClassSide
//tmClassSide
// 	self assert: Object class class = Metaclass.
// 	^ StandardTestClass aClassSideMethod
// class
send24019 = (Object)new_AST_Send((Object)classreference640, (Object)SMB_class, 0);
// class
send24020 = (Object)new_AST_Send((Object)send24019, (Object)SMB_class, 0);
// =
send24021 = (Object)new_AST_Send((Object)send24020, (Object)SMB__equal, 1, (Object)Metaclass_Reference);
// assert:
send24022 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24021);
// aClassSideMethod
send24023 = (Object)new_AST_Send((Object)classreference650, (Object)symbol4359, 0);
method3369 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send24022, send24023);
symbol4330 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure3369 = (Object)new_Runtime_MethodClosure(method3369);
store_method((Type_Class)class583, (Type_Symbol)symbol4330, (Runtime_MethodClosure)methodclosure3369);


// BridgeTest>>tmBooleanTrue
//tmBooleanTrue
// 	^ true
method3370 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol4299 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure3370 = (Object)new_Runtime_MethodClosure(method3370);
store_method((Type_Class)class583, (Type_Symbol)symbol4299, (Runtime_MethodClosure)methodclosure3370);


// BridgeTest>>tmStringNotEquals
//tmStringNotEquals
// 	^ 'String' ~= 'gnirtS'
string2793 = (Object)new_Type_String(L"String");
constant4695 = (Object)new_AST_Constant((Object)string2793);
string2794 = (Object)new_Type_String(L"gnirtS");
constant4696 = (Object)new_AST_Constant((Object)string2794);
// ~=
send24024 = (Object)new_AST_Send((Object)constant4695, (Object)symbol4285, 1, (Object)constant4696);
method3371 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24024);
symbol4320 = (Object)new_Type_Symbol_cached(L"tmStringNotEquals");
methodclosure3371 = (Object)new_Runtime_MethodClosure(method3371);
store_method((Type_Class)class583, (Type_Symbol)symbol4320, (Runtime_MethodClosure)methodclosure3371);


// BridgeTest>>tmCharacter
//tmCharacter
// 	^ $C
character21 = (Object)new_Type_Character(L'C');
constant4697 = (Object)new_AST_Constant((Object)character21);
method3372 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4697);
symbol4312 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure3372 = (Object)new_Runtime_MethodClosure(method3372);
store_method((Type_Class)class583, (Type_Symbol)symbol4312, (Runtime_MethodClosure)methodclosure3372);


// BridgeTest>>tmNumberSubtract
//tmNumberSubtract
// 	^ 2 - 1
smallint1633 = (Object)new_Type_SmallInt(2);
constant4698 = (Object)new_AST_Constant((Object)smallint1633);
smallint1634 = (Object)new_Type_SmallInt(1);
constant4699 = (Object)new_AST_Constant((Object)smallint1634);
// -
send24025 = (Object)new_AST_Send((Object)constant4698, (Object)SMB__minus, 1, (Object)constant4699);
method3373 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24025);
symbol4309 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure3373 = (Object)new_Runtime_MethodClosure(method3373);
store_method((Type_Class)class583, (Type_Symbol)symbol4309, (Runtime_MethodClosure)methodclosure3373);


// BridgeTest>>tmString
//tmString
// 	^ 'String'
string2795 = (Object)new_Type_String(L"String");
constant4700 = (Object)new_AST_Constant((Object)string2795);
method3374 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4700);
symbol4292 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure3374 = (Object)new_Runtime_MethodClosure(method3374);
store_method((Type_Class)class583, (Type_Symbol)symbol4292, (Runtime_MethodClosure)methodclosure3374);


// BridgeTest>>tmVariableInstanceCreation
//tmVariableInstanceCreation
// 	| instance |
// 	instance := StandardVariableTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
localvariable3357 = (Object)new_AST_Variable_named(L"instance");
array2669 = (Object)new_Type_Array_with(1, (Object)localvariable3357);

// StandardVariableTestClass>>c:
//c: anObject
// 	c := anObject
localvariable3358 = (Object)new_AST_Variable_named(L"anObject");
array2670 = (Object)new_Type_Array_with(1, (Object)localvariable3358);
assign2924 = (Object)new_AST_Assign((Object)instancevariable854, (Object)localvariable3358);
method3375 = (Object)new_AST_Method_with((Type_Array)array2670, (Type_Array)empty_Type_Array, 2, assign2924, Self);
methodclosure3375 = (Object)new_Runtime_MethodClosure(method3375);
store_method((Type_Class)class586, (Type_Symbol)symbol4364, (Runtime_MethodClosure)methodclosure3375);


// StandardVariableTestClass>>c
//c
// 	^ c
method3376 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable854);
methodclosure3376 = (Object)new_Runtime_MethodClosure(method3376);
store_method((Type_Class)class586, (Type_Symbol)symbol4366, (Runtime_MethodClosure)methodclosure3376);


// StandardVariableTestClass>>b:
//b: anObject
// 	b := anObject
localvariable3359 = (Object)new_AST_Variable_named(L"anObject");
array2671 = (Object)new_Type_Array_with(1, (Object)localvariable3359);
assign2925 = (Object)new_AST_Assign((Object)instancevariable853, (Object)localvariable3359);
method3377 = (Object)new_AST_Method_with((Type_Array)array2671, (Type_Array)empty_Type_Array, 2, assign2925, Self);
methodclosure3377 = (Object)new_Runtime_MethodClosure(method3377);
store_method((Type_Class)class586, (Type_Symbol)symbol4368, (Runtime_MethodClosure)methodclosure3377);


// StandardVariableTestClass>>a:
//a: anObject
// 	a := anObject
localvariable3360 = (Object)new_AST_Variable_named(L"anObject");
array2672 = (Object)new_Type_Array_with(1, (Object)localvariable3360);
assign2926 = (Object)new_AST_Assign((Object)instancevariable852, (Object)localvariable3360);
method3378 = (Object)new_AST_Method_with((Type_Array)array2672, (Type_Array)empty_Type_Array, 2, assign2926, Self);
methodclosure3378 = (Object)new_Runtime_MethodClosure(method3378);
store_method((Type_Class)class586, (Type_Symbol)symbol4363, (Runtime_MethodClosure)methodclosure3378);


// StandardVariableTestClass>>b
//b
// 	^ b
method3379 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable853);
methodclosure3379 = (Object)new_Runtime_MethodClosure(method3379);
store_method((Type_Class)class586, (Type_Symbol)symbol4365, (Runtime_MethodClosure)methodclosure3379);


// StandardVariableTestClass>>a
//a
// 	^ a
method3380 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable852);
methodclosure3380 = (Object)new_Runtime_MethodClosure(method3380);
store_method((Type_Class)class586, (Type_Symbol)symbol4367, (Runtime_MethodClosure)methodclosure3380);

classreference652 = (Object)new_Organization_ClassReference((Type_Class)class586);
// basicNew
send24026 = (Object)new_AST_Send((Object)classreference652, (Object)SMB_basicNew, 0);
assign2927 = (Object)new_AST_Assign((Object)localvariable3357, (Object)send24026);
localvariable3361 = (Object)new_AST_Variable_named(L"receiver");
array2673 = (Object)new_Type_Array_with(1, (Object)localvariable3361);
smallint1635 = (Object)new_Type_SmallInt(1);
constant4701 = (Object)new_AST_Constant((Object)smallint1635);
// a:
send24027 = (Object)new_AST_Send((Object)localvariable3361, (Object)symbol4363, 1, (Object)constant4701);
smallint1636 = (Object)new_Type_SmallInt(2);
constant4702 = (Object)new_AST_Constant((Object)smallint1636);
// b:
send24028 = (Object)new_AST_Send((Object)localvariable3361, (Object)symbol4368, 1, (Object)constant4702);
smallint1637 = (Object)new_Type_SmallInt(3);
constant4703 = (Object)new_AST_Constant((Object)smallint1637);
// c:
send24029 = (Object)new_AST_Send((Object)localvariable3361, (Object)symbol4364, 1, (Object)constant4703);
block1505 = (Object)new_AST_Block_with((Type_Array)array2673, (Type_Array)empty_Type_Array, 1, 3, send24027, send24028, send24029);
// value:
send24030 = (Object)new_AST_Send((Object)block1505, (Object)SMB_value_, 1, (Object)localvariable3357);
// a
send24031 = (Object)new_AST_Send((Object)localvariable3357, (Object)symbol4367, 0);
smallint1638 = (Object)new_Type_SmallInt(1);
constant4704 = (Object)new_AST_Constant((Object)smallint1638);
// =
send24032 = (Object)new_AST_Send((Object)send24031, (Object)SMB__equal, 1, (Object)constant4704);
// assert:
send24033 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24032);
// b
send24034 = (Object)new_AST_Send((Object)localvariable3357, (Object)symbol4365, 0);
smallint1639 = (Object)new_Type_SmallInt(2);
constant4705 = (Object)new_AST_Constant((Object)smallint1639);
// =
send24035 = (Object)new_AST_Send((Object)send24034, (Object)SMB__equal, 1, (Object)constant4705);
// assert:
send24036 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24035);
// c
send24037 = (Object)new_AST_Send((Object)localvariable3357, (Object)symbol4366, 0);
smallint1640 = (Object)new_Type_SmallInt(3);
constant4706 = (Object)new_AST_Constant((Object)smallint1640);
// =
send24038 = (Object)new_AST_Send((Object)send24037, (Object)SMB__equal, 1, (Object)constant4706);
// assert:
send24039 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24038);
// a
send24040 = (Object)new_AST_Send((Object)localvariable3357, (Object)symbol4367, 0);
// b
send24041 = (Object)new_AST_Send((Object)localvariable3357, (Object)symbol4365, 0);
// +
send24042 = (Object)new_AST_Send((Object)send24040, (Object)SMB__plus, 1, (Object)send24041);
// c
send24043 = (Object)new_AST_Send((Object)localvariable3357, (Object)symbol4366, 0);
// +
send24044 = (Object)new_AST_Send((Object)send24042, (Object)SMB__plus, 1, (Object)send24043);
method3381 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2669, 6, assign2927, send24030, send24033, send24036, send24039, send24044);
symbol4329 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure3381 = (Object)new_Runtime_MethodClosure(method3381);
store_method((Type_Class)class583, (Type_Symbol)symbol4329, (Runtime_MethodClosure)methodclosure3381);


// BridgeTest>>tmNumberAdd
//tmNumberAdd
// 	^ 1 + 1
smallint1641 = (Object)new_Type_SmallInt(1);
constant4707 = (Object)new_AST_Constant((Object)smallint1641);
smallint1642 = (Object)new_Type_SmallInt(1);
constant4708 = (Object)new_AST_Constant((Object)smallint1642);
// +
send24045 = (Object)new_AST_Send((Object)constant4707, (Object)SMB__plus, 1, (Object)constant4708);
method3382 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24045);
symbol4302 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure3382 = (Object)new_Runtime_MethodClosure(method3382);
store_method((Type_Class)class583, (Type_Symbol)symbol4302, (Runtime_MethodClosure)methodclosure3382);


// BridgeTest>>tmMethodArgument:
//tmMethodArgument: arg 
// 	<arg1: 1>
// 	^ arg + 1
localvariable3362 = (Object)new_AST_Variable_named(L"arg");
array2674 = (Object)new_Type_Array_with(1, (Object)localvariable3362);
smallint1643 = (Object)new_Type_SmallInt(1);
constant4709 = (Object)new_AST_Constant((Object)smallint1643);
// +
send24046 = (Object)new_AST_Send((Object)localvariable3362, (Object)SMB__plus, 1, (Object)constant4709);
method3383 = (Object)new_AST_Method_with((Type_Array)array2674, (Type_Array)empty_Type_Array, 1, send24046);
symbol4322 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure3383 = (Object)new_Runtime_MethodClosure(method3383);
store_method((Type_Class)class583, (Type_Symbol)symbol4322, (Runtime_MethodClosure)methodclosure3383);


// BridgeTest>>assert:
//assert: bool
// 	<arg: true>
// 	^ bool ifFalse: [ self fail. ]
// 	
localvariable3363 = (Object)new_AST_Variable_named(L"bool");
array2675 = (Object)new_Type_Array_with(1, (Object)localvariable3363);
symbol4399 = (Object)new_Type_Symbol_cached(L"fail");
// fail
send24047 = (Object)new_AST_Send((Object)Self, (Object)symbol4399, 0);
block1506 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send24047);
// ifFalse:
send24048 = (Object)new_AST_Send((Object)localvariable3363, (Object)SMB_ifFalse_, 1, (Object)block1506);
method3384 = (Object)new_AST_Method_with((Type_Array)array2675, (Type_Array)empty_Type_Array, 1, send24048);
methodclosure3384 = (Object)new_Runtime_MethodClosure(method3384);
store_method((Type_Class)class583, (Type_Symbol)symbol4314, (Runtime_MethodClosure)methodclosure3384);


// BridgeTest>>tmVariableInstanceCreationSized
//tmVariableInstanceCreationSized
// 	| instance |
// 	instance := StandardVariableTestClass basicNew: 100.
// 	instance at: 1 put: 1.
// 	instance at: 100 put: 100.
// 	self assert: (instance at: 1) = 1.	"sample"
// 	self assert: (instance at: 100) = 100.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
localvariable3364 = (Object)new_AST_Variable_named(L"instance");
array2676 = (Object)new_Type_Array_with(1, (Object)localvariable3364);
smallint1644 = (Object)new_Type_SmallInt(100);
constant4710 = (Object)new_AST_Constant((Object)smallint1644);
// basicNew:
send24049 = (Object)new_AST_Send((Object)classreference652, (Object)SMB_basicNew_, 1, (Object)constant4710);
assign2928 = (Object)new_AST_Assign((Object)localvariable3364, (Object)send24049);
smallint1645 = (Object)new_Type_SmallInt(1);
constant4711 = (Object)new_AST_Constant((Object)smallint1645);
smallint1646 = (Object)new_Type_SmallInt(1);
constant4712 = (Object)new_AST_Constant((Object)smallint1646);
// at:put:
send24050 = (Object)new_AST_Send((Object)localvariable3364, (Object)SMB_at_put_, 2, (Object)constant4711, (Object)constant4712);
smallint1647 = (Object)new_Type_SmallInt(100);
constant4713 = (Object)new_AST_Constant((Object)smallint1647);
smallint1648 = (Object)new_Type_SmallInt(100);
constant4714 = (Object)new_AST_Constant((Object)smallint1648);
// at:put:
send24051 = (Object)new_AST_Send((Object)localvariable3364, (Object)SMB_at_put_, 2, (Object)constant4713, (Object)constant4714);
smallint1649 = (Object)new_Type_SmallInt(1);
constant4715 = (Object)new_AST_Constant((Object)smallint1649);
// at:
send24052 = (Object)new_AST_Send((Object)localvariable3364, (Object)SMB_at_, 1, (Object)constant4715);
smallint1650 = (Object)new_Type_SmallInt(1);
constant4716 = (Object)new_AST_Constant((Object)smallint1650);
// =
send24053 = (Object)new_AST_Send((Object)send24052, (Object)SMB__equal, 1, (Object)constant4716);
// assert:
send24054 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24053);
smallint1651 = (Object)new_Type_SmallInt(100);
constant4717 = (Object)new_AST_Constant((Object)smallint1651);
// at:
send24055 = (Object)new_AST_Send((Object)localvariable3364, (Object)SMB_at_, 1, (Object)constant4717);
smallint1652 = (Object)new_Type_SmallInt(100);
constant4718 = (Object)new_AST_Constant((Object)smallint1652);
// =
send24056 = (Object)new_AST_Send((Object)send24055, (Object)SMB__equal, 1, (Object)constant4718);
// assert:
send24057 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24056);
localvariable3365 = (Object)new_AST_Variable_named(L"receiver");
array2677 = (Object)new_Type_Array_with(1, (Object)localvariable3365);
smallint1653 = (Object)new_Type_SmallInt(1);
constant4719 = (Object)new_AST_Constant((Object)smallint1653);
// a:
send24058 = (Object)new_AST_Send((Object)localvariable3365, (Object)symbol4363, 1, (Object)constant4719);
smallint1654 = (Object)new_Type_SmallInt(2);
constant4720 = (Object)new_AST_Constant((Object)smallint1654);
// b:
send24059 = (Object)new_AST_Send((Object)localvariable3365, (Object)symbol4368, 1, (Object)constant4720);
smallint1655 = (Object)new_Type_SmallInt(3);
constant4721 = (Object)new_AST_Constant((Object)smallint1655);
// c:
send24060 = (Object)new_AST_Send((Object)localvariable3365, (Object)symbol4364, 1, (Object)constant4721);
block1507 = (Object)new_AST_Block_with((Type_Array)array2677, (Type_Array)empty_Type_Array, 1, 3, send24058, send24059, send24060);
// value:
send24061 = (Object)new_AST_Send((Object)block1507, (Object)SMB_value_, 1, (Object)localvariable3364);
// a
send24062 = (Object)new_AST_Send((Object)localvariable3364, (Object)symbol4367, 0);
smallint1656 = (Object)new_Type_SmallInt(1);
constant4722 = (Object)new_AST_Constant((Object)smallint1656);
// =
send24063 = (Object)new_AST_Send((Object)send24062, (Object)SMB__equal, 1, (Object)constant4722);
// assert:
send24064 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24063);
// b
send24065 = (Object)new_AST_Send((Object)localvariable3364, (Object)symbol4365, 0);
smallint1657 = (Object)new_Type_SmallInt(2);
constant4723 = (Object)new_AST_Constant((Object)smallint1657);
// =
send24066 = (Object)new_AST_Send((Object)send24065, (Object)SMB__equal, 1, (Object)constant4723);
// assert:
send24067 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24066);
// c
send24068 = (Object)new_AST_Send((Object)localvariable3364, (Object)symbol4366, 0);
smallint1658 = (Object)new_Type_SmallInt(3);
constant4724 = (Object)new_AST_Constant((Object)smallint1658);
// =
send24069 = (Object)new_AST_Send((Object)send24068, (Object)SMB__equal, 1, (Object)constant4724);
// assert:
send24070 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24069);
// a
send24071 = (Object)new_AST_Send((Object)localvariable3364, (Object)symbol4367, 0);
// b
send24072 = (Object)new_AST_Send((Object)localvariable3364, (Object)symbol4365, 0);
// c
send24073 = (Object)new_AST_Send((Object)localvariable3364, (Object)symbol4366, 0);
smallint1659 = (Object)new_Type_SmallInt(1);
constant4725 = (Object)new_AST_Constant((Object)smallint1659);
// at:
send24074 = (Object)new_AST_Send((Object)localvariable3364, (Object)SMB_at_, 1, (Object)constant4725);
// +
send24075 = (Object)new_AST_Send((Object)send24073, (Object)SMB__plus, 1, (Object)send24074);
// +
send24076 = (Object)new_AST_Send((Object)send24072, (Object)SMB__plus, 1, (Object)send24075);
// +
send24077 = (Object)new_AST_Send((Object)send24071, (Object)SMB__plus, 1, (Object)send24076);
smallint1660 = (Object)new_Type_SmallInt(100);
constant4726 = (Object)new_AST_Constant((Object)smallint1660);
// at:
send24078 = (Object)new_AST_Send((Object)localvariable3364, (Object)SMB_at_, 1, (Object)constant4726);
// +
send24079 = (Object)new_AST_Send((Object)send24077, (Object)SMB__plus, 1, (Object)send24078);
method3385 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2676, 10, assign2928, send24050, send24051, send24054, send24057, send24061, send24064, send24067, send24070, send24079);
symbol4294 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure3385 = (Object)new_Runtime_MethodClosure(method3385);
store_method((Type_Class)class583, (Type_Symbol)symbol4294, (Runtime_MethodClosure)methodclosure3385);


// BridgeTest>>tmBooleanSymbolEquals
//tmBooleanSymbolEquals
// 	^ true = #true
symbol4400 = (Object)new_Type_Symbol_cached(L"true");
constant4727 = (Object)new_AST_Constant((Object)symbol4400);
// =
send24080 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant4727);
method3386 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24080);
symbol4304 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure3386 = (Object)new_Runtime_MethodClosure(method3386);
store_method((Type_Class)class583, (Type_Symbol)symbol4304, (Runtime_MethodClosure)methodclosure3386);


// BridgeTest>>tmClassReferenceReturn
//tmClassReferenceReturn
// 	^ Metaclass name.
// name
send24081 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
method3387 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24081);
symbol4324 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure3387 = (Object)new_Runtime_MethodClosure(method3387);
store_method((Type_Class)class583, (Type_Symbol)symbol4324, (Runtime_MethodClosure)methodclosure3387);


// BridgeTest>>tearDown
//tearDown
method3388 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4316 = (Object)new_Type_Symbol_cached(L"tearDown");
methodclosure3388 = (Object)new_Runtime_MethodClosure(method3388);
store_method((Type_Class)class583, (Type_Symbol)symbol4316, (Runtime_MethodClosure)methodclosure3388);


// BridgeTest>>tmSymbolCharacterEquals
//tmSymbolCharacterEquals
// 	^ #S = $S
symbol4401 = (Object)new_Type_Symbol_cached(L"S");
constant4728 = (Object)new_AST_Constant((Object)symbol4401);
character22 = (Object)new_Type_Character(L'S');
constant4729 = (Object)new_AST_Constant((Object)character22);
// =
send24082 = (Object)new_AST_Send((Object)constant4728, (Object)SMB__equal, 1, (Object)constant4729);
method3389 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24082);
symbol4296 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure3389 = (Object)new_Runtime_MethodClosure(method3389);
store_method((Type_Class)class583, (Type_Symbol)symbol4296, (Runtime_MethodClosure)methodclosure3389);


// BridgeTest>>tmClassInstVarAssignment
//tmClassInstVarAssignment
// 	StandardTestClass instVar: 10.
// 	self assert: StandardTestClass instVar = 10.
smallint1661 = (Object)new_Type_SmallInt(10);
constant4730 = (Object)new_AST_Constant((Object)smallint1661);
// instVar:
send24083 = (Object)new_AST_Send((Object)classreference650, (Object)symbol4362, 1, (Object)constant4730);
// instVar
send24084 = (Object)new_AST_Send((Object)classreference650, (Object)symbol4361, 0);
smallint1662 = (Object)new_Type_SmallInt(10);
constant4731 = (Object)new_AST_Constant((Object)smallint1662);
// =
send24085 = (Object)new_AST_Send((Object)send24084, (Object)SMB__equal, 1, (Object)constant4731);
// assert:
send24086 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24085);
method3390 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send24083, send24086, Self);
symbol4288 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure3390 = (Object)new_Runtime_MethodClosure(method3390);
store_method((Type_Class)class583, (Type_Symbol)symbol4288, (Runtime_MethodClosure)methodclosure3390);


// BridgeTest>>tmNumber
//tmNumber
// 	^ 1
smallint1663 = (Object)new_Type_SmallInt(1);
constant4732 = (Object)new_AST_Constant((Object)smallint1663);
method3391 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4732);
symbol4306 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure3391 = (Object)new_Runtime_MethodClosure(method3391);
store_method((Type_Class)class583, (Type_Symbol)symbol4306, (Runtime_MethodClosure)methodclosure3391);


// BridgeTest>>tmBooleanFalse
//tmBooleanFalse
// 	^ false
method3392 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol4326 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure3392 = (Object)new_Runtime_MethodClosure(method3392);
store_method((Type_Class)class583, (Type_Symbol)symbol4326, (Runtime_MethodClosure)methodclosure3392);


// BridgeTest>>tmNumberEquals
//tmNumberEquals
// 	^ 1 = 1
smallint1664 = (Object)new_Type_SmallInt(1);
constant4733 = (Object)new_AST_Constant((Object)smallint1664);
smallint1665 = (Object)new_Type_SmallInt(1);
constant4734 = (Object)new_AST_Constant((Object)smallint1665);
// =
send24087 = (Object)new_AST_Send((Object)constant4733, (Object)SMB__equal, 1, (Object)constant4734);
method3393 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24087);
symbol4318 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure3393 = (Object)new_Runtime_MethodClosure(method3393);
store_method((Type_Class)class583, (Type_Symbol)symbol4318, (Runtime_MethodClosure)methodclosure3393);


// BridgeTest>>tmNumberMult
//tmNumberMult
// 	^ 2 * 3
smallint1666 = (Object)new_Type_SmallInt(2);
constant4735 = (Object)new_AST_Constant((Object)smallint1666);
smallint1667 = (Object)new_Type_SmallInt(3);
constant4736 = (Object)new_AST_Constant((Object)smallint1667);
// *
send24088 = (Object)new_AST_Send((Object)constant4735, (Object)SMB__times, 1, (Object)constant4736);
method3394 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24088);
symbol4298 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure3394 = (Object)new_Runtime_MethodClosure(method3394);
store_method((Type_Class)class583, (Type_Symbol)symbol4298, (Runtime_MethodClosure)methodclosure3394);


// BridgeTest>>tmMethodArguments:with:with:
//tmMethodArguments: arg1 with: arg2 with: arg3 
// 	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
// 	^ arg1 , arg2 , arg3
localvariable3366 = (Object)new_AST_Variable_named(L"arg1");
localvariable3367 = (Object)new_AST_Variable_named(L"arg2");
localvariable3368 = (Object)new_AST_Variable_named(L"arg3");
array2678 = (Object)new_Type_Array_with(3, (Object)localvariable3366, (Object)localvariable3367, (Object)localvariable3368);
// ,
send24089 = (Object)new_AST_Send((Object)localvariable3366, (Object)SMB__concat, 1, (Object)localvariable3367);
// ,
send24090 = (Object)new_AST_Send((Object)send24089, (Object)SMB__concat, 1, (Object)localvariable3368);
method3395 = (Object)new_AST_Method_with((Type_Array)array2678, (Type_Array)empty_Type_Array, 1, send24090);
symbol4311 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure3395 = (Object)new_Runtime_MethodClosure(method3395);
store_method((Type_Class)class583, (Type_Symbol)symbol4311, (Runtime_MethodClosure)methodclosure3395);


// BridgeTest>>tmSymbol
//tmSymbol
// 	^ #Symbol
constant4737 = (Object)new_AST_Constant((Object)symbol4397);
method3396 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4737);
symbol4308 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure3396 = (Object)new_Runtime_MethodClosure(method3396);
store_method((Type_Class)class583, (Type_Symbol)symbol4308, (Runtime_MethodClosure)methodclosure3396);


// BridgeTest>>tmCharacterStringEquals
//tmCharacterStringEquals
// 	^ $C = 'C'
character23 = (Object)new_Type_Character(L'C');
constant4738 = (Object)new_AST_Constant((Object)character23);
string2796 = (Object)new_Type_String(L"C");
constant4739 = (Object)new_AST_Constant((Object)string2796);
// =
send24091 = (Object)new_AST_Send((Object)constant4738, (Object)SMB__equal, 1, (Object)constant4739);
method3397 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24091);
symbol4291 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure3397 = (Object)new_Runtime_MethodClosure(method3397);
store_method((Type_Class)class583, (Type_Symbol)symbol4291, (Runtime_MethodClosure)methodclosure3397);


// BridgeTest>>tmNumberNotEquals
//tmNumberNotEquals
// 	^ 1 ~= 2
smallint1668 = (Object)new_Type_SmallInt(1);
constant4740 = (Object)new_AST_Constant((Object)smallint1668);
smallint1669 = (Object)new_Type_SmallInt(2);
constant4741 = (Object)new_AST_Constant((Object)smallint1669);
// ~=
send24092 = (Object)new_AST_Send((Object)constant4740, (Object)symbol4285, 1, (Object)constant4741);
method3398 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24092);
symbol4328 = (Object)new_Type_Symbol_cached(L"tmNumberNotEquals");
methodclosure3398 = (Object)new_Runtime_MethodClosure(method3398);
store_method((Type_Class)class583, (Type_Symbol)symbol4328, (Runtime_MethodClosure)methodclosure3398);


// BridgeTest>>tmSymbolEquals
//tmSymbolEquals
// 	^ #Symbol = #Symbol
constant4742 = (Object)new_AST_Constant((Object)symbol4397);
constant4743 = (Object)new_AST_Constant((Object)symbol4397);
// =
send24093 = (Object)new_AST_Send((Object)constant4742, (Object)SMB__equal, 1, (Object)constant4743);
method3399 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24093);
symbol4331 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure3399 = (Object)new_Runtime_MethodClosure(method3399);
store_method((Type_Class)class583, (Type_Symbol)symbol4331, (Runtime_MethodClosure)methodclosure3399);


// BridgeTest>>tmClassSideSuperSend
//tmClassSideSuperSend
// 	ChildClassTestClass a: nil.
// 	ChildClassTestClass b: nil.
// 	ChildClassTestClass c: nil.
// 	
// 	self assert: ChildClassTestClass a = nil.
// 	self assert: ChildClassTestClass b = nil.
// 	self assert: ChildClassTestClass c = nil.
// 	
// 	ChildClassTestClass a: 1.
// 	ChildClassTestClass b: 2.
// 	ChildClassTestClass c: 3.
// 	
// 	self assert: ChildClassTestClass a = 1.
// 	self assert: ChildClassTestClass b = 2.
// 	self assert: ChildClassTestClass c = 3.
// a:
send24094 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4363, 1, (Object)Nil_Const);
// b:
send24095 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4368, 1, (Object)Nil_Const);
// c:
send24096 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4364, 1, (Object)Nil_Const);
// a
send24097 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4367, 0);
// =
send24098 = (Object)new_AST_Send((Object)send24097, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send24099 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24098);
// b
send24100 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4365, 0);
// =
send24101 = (Object)new_AST_Send((Object)send24100, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send24102 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24101);
// c
send24103 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4366, 0);
// =
send24104 = (Object)new_AST_Send((Object)send24103, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send24105 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24104);
smallint1670 = (Object)new_Type_SmallInt(1);
constant4744 = (Object)new_AST_Constant((Object)smallint1670);
// a:
send24106 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4363, 1, (Object)constant4744);
smallint1671 = (Object)new_Type_SmallInt(2);
constant4745 = (Object)new_AST_Constant((Object)smallint1671);
// b:
send24107 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4368, 1, (Object)constant4745);
smallint1672 = (Object)new_Type_SmallInt(3);
constant4746 = (Object)new_AST_Constant((Object)smallint1672);
// c:
send24108 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4364, 1, (Object)constant4746);
// a
send24109 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4367, 0);
smallint1673 = (Object)new_Type_SmallInt(1);
constant4747 = (Object)new_AST_Constant((Object)smallint1673);
// =
send24110 = (Object)new_AST_Send((Object)send24109, (Object)SMB__equal, 1, (Object)constant4747);
// assert:
send24111 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24110);
// b
send24112 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4365, 0);
smallint1674 = (Object)new_Type_SmallInt(2);
constant4748 = (Object)new_AST_Constant((Object)smallint1674);
// =
send24113 = (Object)new_AST_Send((Object)send24112, (Object)SMB__equal, 1, (Object)constant4748);
// assert:
send24114 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24113);
// c
send24115 = (Object)new_AST_Send((Object)classreference651, (Object)symbol4366, 0);
smallint1675 = (Object)new_Type_SmallInt(3);
constant4749 = (Object)new_AST_Constant((Object)smallint1675);
// =
send24116 = (Object)new_AST_Send((Object)send24115, (Object)SMB__equal, 1, (Object)constant4749);
// assert:
send24117 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24116);
method3400 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send24094, send24095, send24096, send24099, send24102, send24105, send24106, send24107, send24108, send24111, send24114, send24117, Self);
symbol4301 = (Object)new_Type_Symbol_cached(L"tmClassSideSuperSend");
methodclosure3400 = (Object)new_Runtime_MethodClosure(method3400);
store_method((Type_Class)class583, (Type_Symbol)symbol4301, (Runtime_MethodClosure)methodclosure3400);


// BridgeTest>>tmLocalVariable
//tmLocalVariable
// 	|a|
// 	a := 1.
// 	^ a
localvariable3369 = (Object)new_AST_Variable_named(L"a");
array2679 = (Object)new_Type_Array_with(1, (Object)localvariable3369);
smallint1676 = (Object)new_Type_SmallInt(1);
constant4750 = (Object)new_AST_Constant((Object)smallint1676);
assign2929 = (Object)new_AST_Assign((Object)localvariable3369, (Object)constant4750);
method3401 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2679, 2, assign2929, localvariable3369);
symbol4321 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure3401 = (Object)new_Runtime_MethodClosure(method3401);
store_method((Type_Class)class583, (Type_Symbol)symbol4321, (Runtime_MethodClosure)methodclosure3401);


// BridgeTest>>tmSuperClass
//tmSuperClass
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	instance a: 1.
// 	self assert: instance a = 1.
// 	self assert: instance b = nil.
// 	instance b: 2.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2
localvariable3370 = (Object)new_AST_Variable_named(L"instance");
array2680 = (Object)new_Type_Array_with(1, (Object)localvariable3370);
// basicNew
send24118 = (Object)new_AST_Send((Object)classreference651, (Object)SMB_basicNew, 0);
assign2930 = (Object)new_AST_Assign((Object)localvariable3370, (Object)send24118);
smallint1677 = (Object)new_Type_SmallInt(1);
constant4751 = (Object)new_AST_Constant((Object)smallint1677);
// a:
send24119 = (Object)new_AST_Send((Object)localvariable3370, (Object)symbol4363, 1, (Object)constant4751);
// a
send24120 = (Object)new_AST_Send((Object)localvariable3370, (Object)symbol4367, 0);
smallint1678 = (Object)new_Type_SmallInt(1);
constant4752 = (Object)new_AST_Constant((Object)smallint1678);
// =
send24121 = (Object)new_AST_Send((Object)send24120, (Object)SMB__equal, 1, (Object)constant4752);
// assert:
send24122 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24121);
// b
send24123 = (Object)new_AST_Send((Object)localvariable3370, (Object)symbol4365, 0);
// =
send24124 = (Object)new_AST_Send((Object)send24123, (Object)SMB__equal, 1, (Object)Nil_Const);
// assert:
send24125 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24124);
smallint1679 = (Object)new_Type_SmallInt(2);
constant4753 = (Object)new_AST_Constant((Object)smallint1679);
// b:
send24126 = (Object)new_AST_Send((Object)localvariable3370, (Object)symbol4368, 1, (Object)constant4753);
// a
send24127 = (Object)new_AST_Send((Object)localvariable3370, (Object)symbol4367, 0);
smallint1680 = (Object)new_Type_SmallInt(1);
constant4754 = (Object)new_AST_Constant((Object)smallint1680);
// =
send24128 = (Object)new_AST_Send((Object)send24127, (Object)SMB__equal, 1, (Object)constant4754);
// assert:
send24129 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24128);
// b
send24130 = (Object)new_AST_Send((Object)localvariable3370, (Object)symbol4365, 0);
smallint1681 = (Object)new_Type_SmallInt(2);
constant4755 = (Object)new_AST_Constant((Object)smallint1681);
// =
send24131 = (Object)new_AST_Send((Object)send24130, (Object)SMB__equal, 1, (Object)constant4755);
// assert:
send24132 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24131);
method3402 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2680, 8, assign2930, send24119, send24122, send24125, send24126, send24129, send24132, Self);
symbol4313 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure3402 = (Object)new_Runtime_MethodClosure(method3402);
store_method((Type_Class)class583, (Type_Symbol)symbol4313, (Runtime_MethodClosure)methodclosure3402);


// BridgeTest>>tmBooleanEquals
//tmBooleanEquals
// 	^ true = true
// =
send24133 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method3403 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24133);
symbol4303 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure3403 = (Object)new_Runtime_MethodClosure(method3403);
store_method((Type_Class)class583, (Type_Symbol)symbol4303, (Runtime_MethodClosure)methodclosure3403);


// BridgeTest>>tmNumberDiv
//tmNumberDiv
// 	^ 4 / 2
smallint1682 = (Object)new_Type_SmallInt(4);
constant4756 = (Object)new_AST_Constant((Object)smallint1682);
smallint1683 = (Object)new_Type_SmallInt(2);
constant4757 = (Object)new_AST_Constant((Object)smallint1683);
// /
send24134 = (Object)new_AST_Send((Object)constant4756, (Object)SMB__divide, 1, (Object)constant4757);
method3404 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24134);
symbol4323 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure3404 = (Object)new_Runtime_MethodClosure(method3404);
store_method((Type_Class)class583, (Type_Symbol)symbol4323, (Runtime_MethodClosure)methodclosure3404);


// BridgeTest>>tmClassSideSuper
//tmClassSideSuper
// 	"TODO create accerssort in: everywhere"
// 	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
method3405 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4315 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure3405 = (Object)new_Runtime_MethodClosure(method3405);
store_method((Type_Class)class583, (Type_Symbol)symbol4315, (Runtime_MethodClosure)methodclosure3405);


// BridgeTest>>tmSimpleInstanceCreation
//tmSimpleInstanceCreation
// 	| instance |
// 	instance := StandardTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
localvariable3371 = (Object)new_AST_Variable_named(L"instance");
array2681 = (Object)new_Type_Array_with(1, (Object)localvariable3371);
// basicNew
send24135 = (Object)new_AST_Send((Object)classreference650, (Object)SMB_basicNew, 0);
assign2931 = (Object)new_AST_Assign((Object)localvariable3371, (Object)send24135);
localvariable3372 = (Object)new_AST_Variable_named(L"receiver");
array2682 = (Object)new_Type_Array_with(1, (Object)localvariable3372);
smallint1684 = (Object)new_Type_SmallInt(1);
constant4758 = (Object)new_AST_Constant((Object)smallint1684);
// a:
send24136 = (Object)new_AST_Send((Object)localvariable3372, (Object)symbol4363, 1, (Object)constant4758);
smallint1685 = (Object)new_Type_SmallInt(2);
constant4759 = (Object)new_AST_Constant((Object)smallint1685);
// b:
send24137 = (Object)new_AST_Send((Object)localvariable3372, (Object)symbol4368, 1, (Object)constant4759);
smallint1686 = (Object)new_Type_SmallInt(3);
constant4760 = (Object)new_AST_Constant((Object)smallint1686);
// c:
send24138 = (Object)new_AST_Send((Object)localvariable3372, (Object)symbol4364, 1, (Object)constant4760);
block1508 = (Object)new_AST_Block_with((Type_Array)array2682, (Type_Array)empty_Type_Array, 1, 3, send24136, send24137, send24138);
// value:
send24139 = (Object)new_AST_Send((Object)block1508, (Object)SMB_value_, 1, (Object)localvariable3371);
// a
send24140 = (Object)new_AST_Send((Object)localvariable3371, (Object)symbol4367, 0);
smallint1687 = (Object)new_Type_SmallInt(1);
constant4761 = (Object)new_AST_Constant((Object)smallint1687);
// =
send24141 = (Object)new_AST_Send((Object)send24140, (Object)SMB__equal, 1, (Object)constant4761);
// assert:
send24142 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24141);
// b
send24143 = (Object)new_AST_Send((Object)localvariable3371, (Object)symbol4365, 0);
smallint1688 = (Object)new_Type_SmallInt(2);
constant4762 = (Object)new_AST_Constant((Object)smallint1688);
// =
send24144 = (Object)new_AST_Send((Object)send24143, (Object)SMB__equal, 1, (Object)constant4762);
// assert:
send24145 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24144);
// c
send24146 = (Object)new_AST_Send((Object)localvariable3371, (Object)symbol4366, 0);
smallint1689 = (Object)new_Type_SmallInt(3);
constant4763 = (Object)new_AST_Constant((Object)smallint1689);
// =
send24147 = (Object)new_AST_Send((Object)send24146, (Object)SMB__equal, 1, (Object)constant4763);
// assert:
send24148 = (Object)new_AST_Send((Object)Self, (Object)symbol4314, 1, (Object)send24147);
// a
send24149 = (Object)new_AST_Send((Object)localvariable3371, (Object)symbol4367, 0);
// b
send24150 = (Object)new_AST_Send((Object)localvariable3371, (Object)symbol4365, 0);
// +
send24151 = (Object)new_AST_Send((Object)send24149, (Object)SMB__plus, 1, (Object)send24150);
// c
send24152 = (Object)new_AST_Send((Object)localvariable3371, (Object)symbol4366, 0);
// +
send24153 = (Object)new_AST_Send((Object)send24151, (Object)SMB__plus, 1, (Object)send24152);
method3406 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2681, 6, assign2931, send24139, send24142, send24145, send24148, send24153);
symbol4295 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure3406 = (Object)new_Runtime_MethodClosure(method3406);
store_method((Type_Class)class583, (Type_Symbol)symbol4295, (Runtime_MethodClosure)methodclosure3406);


// BridgeTest>>tmClassInstVar
//tmClassInstVar
// 	^ StandardTestClass aClassSideMethodWithInstanceVariables.
// aClassSideMethodWithInstanceVariables
send24154 = (Object)new_AST_Send((Object)classreference650, (Object)symbol4360, 0);
method3407 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24154);
symbol4287 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure3407 = (Object)new_Runtime_MethodClosure(method3407);
store_method((Type_Class)class583, (Type_Symbol)symbol4287, (Runtime_MethodClosure)methodclosure3407);


// BridgeTest>>tmFibonacci
//tmFibonacci
// 	
method3408 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4305 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure3408 = (Object)new_Runtime_MethodClosure(method3408);
store_method((Type_Class)class583, (Type_Symbol)symbol4305, (Runtime_MethodClosure)methodclosure3408);

classreference653 = (Object)new_Organization_ClassReference((Type_Class)class583);

// SuperClassTestClass>>a:
//a: anObject
// 	a := anObject
localvariable3373 = (Object)new_AST_Variable_named(L"anObject");
array2683 = (Object)new_Type_Array_with(1, (Object)localvariable3373);
assign2932 = (Object)new_AST_Assign((Object)instancevariable849, (Object)localvariable3373);
method3409 = (Object)new_AST_Method_with((Type_Array)array2683, (Type_Array)empty_Type_Array, 2, assign2932, Self);
methodclosure3409 = (Object)new_Runtime_MethodClosure(method3409);
store_method((Type_Class)class584, (Type_Symbol)symbol4363, (Runtime_MethodClosure)methodclosure3409);


// SuperClassTestClass>>a
//a
// 	^ a
method3410 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable849);
methodclosure3410 = (Object)new_Runtime_MethodClosure(method3410);
store_method((Type_Class)class584, (Type_Symbol)symbol4367, (Runtime_MethodClosure)methodclosure3410);


// SuperClassTestClass>>test
//test
// 	^ 10
smallint1690 = (Object)new_Type_SmallInt(10);
constant4764 = (Object)new_AST_Constant((Object)smallint1690);
method3411 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4764);
methodclosure3411 = (Object)new_Runtime_MethodClosure(method3411);
store_method((Type_Class)class584, (Type_Symbol)symbol4370, (Runtime_MethodClosure)methodclosure3411);


// a PMetaclass P#SuperClassTestClass>>a
//a
// 	^ a
method3412 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable847);
methodclosure3412 = (Object)new_Runtime_MethodClosure(method3412);
store_method((Type_Class)metaclass584, (Type_Symbol)symbol4367, (Runtime_MethodClosure)methodclosure3412);


// a PMetaclass P#SuperClassTestClass>>a:
//a: anObject
// 	a := anObject
localvariable3374 = (Object)new_AST_Variable_named(L"anObject");
array2684 = (Object)new_Type_Array_with(1, (Object)localvariable3374);
assign2933 = (Object)new_AST_Assign((Object)instancevariable847, (Object)localvariable3374);
method3413 = (Object)new_AST_Method_with((Type_Array)array2684, (Type_Array)empty_Type_Array, 2, assign2933, Self);
methodclosure3413 = (Object)new_Runtime_MethodClosure(method3413);
store_method((Type_Class)metaclass584, (Type_Symbol)symbol4363, (Runtime_MethodClosure)methodclosure3413);


// a PMetaclass P#SuperClassTestClass>>b
//b
// 	^ b
method3414 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable848);
methodclosure3414 = (Object)new_Runtime_MethodClosure(method3414);
store_method((Type_Class)metaclass584, (Type_Symbol)symbol4365, (Runtime_MethodClosure)methodclosure3414);


// a PMetaclass P#SuperClassTestClass>>b:
//b: anObject
// 	b := anObject
localvariable3375 = (Object)new_AST_Variable_named(L"anObject");
array2685 = (Object)new_Type_Array_with(1, (Object)localvariable3375);
assign2934 = (Object)new_AST_Assign((Object)instancevariable848, (Object)localvariable3375);
method3415 = (Object)new_AST_Method_with((Type_Array)array2685, (Type_Array)empty_Type_Array, 2, assign2934, Self);
methodclosure3415 = (Object)new_Runtime_MethodClosure(method3415);
store_method((Type_Class)metaclass584, (Type_Symbol)symbol4368, (Runtime_MethodClosure)methodclosure3415);

classreference654 = (Object)new_Organization_ClassReference((Type_Class)class584);
}


/* ========================================================================= */

NEW_TEST(BridgeTest_assert_)
/*
assert: bool
// 	<arg: true>
// 	^ bool ifFalse: [ self fail. ]
// 	
*/
// assert:
Object send24155 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4314, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send24155);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmFibonacci)
/*
tmFibonacci
// 	
*/
// tmFibonacci
Object send24156 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4305, 0);
Object result = (Object)Eval((Object)send24156);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_setUp)
/*
setUp
// 	
*/
// setUp
Object send24157 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4319, 0);
Object result = (Object)Eval((Object)send24157);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tearDown)
/*
tearDown
*/
// tearDown
Object send24158 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4316, 0);
Object result = (Object)Eval((Object)send24158);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanEquals)
/*
tmBooleanEquals
// 	^ true = true
*/
// tmBooleanEquals
Object send24159 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4303, 0);
Object result = (Object)Eval((Object)send24159);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanFalse)
/*
tmBooleanFalse
// 	^ false
*/
// tmBooleanFalse
Object send24160 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4326, 0);
Object result = (Object)Eval((Object)send24160);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanNotEquals)
/*
tmBooleanNotEquals
// 	^ true ~= false
*/
// tmBooleanNotEquals
Object send24161 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4327, 0);
Object result = (Object)Eval((Object)send24161);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
// 	^ true = #true
*/
// tmBooleanSymbolEquals
Object send24162 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4304, 0);
Object result = (Object)Eval((Object)send24162);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmBooleanTrue)
/*
tmBooleanTrue
// 	^ true
*/
// tmBooleanTrue
Object send24163 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4299, 0);
Object result = (Object)Eval((Object)send24163);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacter)
/*
tmCharacter
// 	^ $C
*/
// tmCharacter
Object send24164 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4312, 0);
Object result = (Object)Eval((Object)send24164);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterEquals)
/*
tmCharacterEquals
// 	^ $C = $C
*/
// tmCharacterEquals
Object send24165 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4290, 0);
Object result = (Object)Eval((Object)send24165);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
// 	^ $C = 'C'
*/
// tmCharacterStringEquals
Object send24166 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4291, 0);
Object result = (Object)Eval((Object)send24166);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
// 	^ Metaclass name.
*/
// tmClassReferenceReturn
Object send24167 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4324, 0);
Object result = (Object)Eval((Object)send24167);
ASSERT_EMPTY_STACK
Object symbol4350 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol4350);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmExtendedReturn)
/*
tmExtendedReturn
// 	1 > 2 ifTrue: [ ^ 1 ]
// 		ifFalse: [ ^ 2].
*/
// tmExtendedReturn
Object send24168 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4297, 0);
Object result = (Object)Eval((Object)send24168);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmLocalVariable)
/*
tmLocalVariable
// 	|a|
// 	a := 1.
// 	^ a
*/
// tmLocalVariable
Object send24169 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4321, 0);
Object result = (Object)Eval((Object)send24169);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
// 	<arg1: 1>
// 	^ arg + 1
*/
Object smallint1691 = (Object)new_Type_SmallInt(1);
Object constant4765 = (Object)new_AST_Constant((Object)smallint1691);
// tmMethodArgument:
Object send24170 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4322, 1, (Object)constant4765);
Object result = (Object)Eval((Object)send24170);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
// 	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
// 	^ arg1 , arg2 , arg3
*/
Object string2797 = (Object)new_Type_String(L"asdf");
Object constant4766 = (Object)new_AST_Constant((Object)string2797);
Object string2798 = (Object)new_Type_String(L"asdf");
Object constant4767 = (Object)new_AST_Constant((Object)string2798);
Object string2799 = (Object)new_Type_String(L"df");
Object constant4768 = (Object)new_AST_Constant((Object)string2799);
// tmMethodArguments:with:with:
Object send24171 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4311, 3, (Object)constant4766, (Object)constant4767, (Object)constant4768);
Object result = (Object)Eval((Object)send24171);
ASSERT_EMPTY_STACK
Object string2800 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string2800);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumber)
/*
tmNumber
// 	^ 1
*/
// tmNumber
Object send24172 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4306, 0);
Object result = (Object)Eval((Object)send24172);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberAdd)
/*
tmNumberAdd
// 	^ 1 + 1
*/
// tmNumberAdd
Object send24173 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4302, 0);
Object result = (Object)Eval((Object)send24173);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberDiv)
/*
tmNumberDiv
// 	^ 4 / 2
*/
// tmNumberDiv
Object send24174 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4323, 0);
Object result = (Object)Eval((Object)send24174);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberEquals)
/*
tmNumberEquals
// 	^ 1 = 1
*/
// tmNumberEquals
Object send24175 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4318, 0);
Object result = (Object)Eval((Object)send24175);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberMult)
/*
tmNumberMult
// 	^ 2 * 3
*/
// tmNumberMult
Object send24176 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4298, 0);
Object result = (Object)Eval((Object)send24176);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberNotEquals)
/*
tmNumberNotEquals
// 	^ 1 ~= 2
*/
// tmNumberNotEquals
Object send24177 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4328, 0);
Object result = (Object)Eval((Object)send24177);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmNumberSubtract)
/*
tmNumberSubtract
// 	^ 2 - 1
*/
// tmNumberSubtract
Object send24178 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4309, 0);
Object result = (Object)Eval((Object)send24178);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
// 	^ ((1 + 2) + 2) * 5
*/
// tmSimpleBasicArithmetik
Object send24179 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4325, 0);
Object result = (Object)Eval((Object)send24179);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleReturn)
/*
tmSimpleReturn
// 	^ 1
*/
// tmSimpleReturn
Object send24180 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4307, 0);
Object result = (Object)Eval((Object)send24180);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmString)
/*
tmString
// 	^ 'String'
*/
// tmString
Object send24181 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4292, 0);
Object result = (Object)Eval((Object)send24181);
ASSERT_EMPTY_STACK
Object string2801 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string2801);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringEquals)
/*
tmStringEquals
// 	^ 'String' = 'String'
*/
// tmStringEquals
Object send24182 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4289, 0);
Object result = (Object)Eval((Object)send24182);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmStringNotEquals)
/*
tmStringNotEquals
// 	^ 'String' ~= 'gnirtS'
*/
// tmStringNotEquals
Object send24183 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4320, 0);
Object result = (Object)Eval((Object)send24183);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbol)
/*
tmSymbol
// 	^ #Symbol
*/
// tmSymbol
Object send24184 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4308, 0);
Object result = (Object)Eval((Object)send24184);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol4397);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
// 	^ #S = $S
*/
// tmSymbolCharacterEquals
Object send24185 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4296, 0);
Object result = (Object)Eval((Object)send24185);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolEquals)
/*
tmSymbolEquals
// 	^ #Symbol = #Symbol
*/
// tmSymbolEquals
Object send24186 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4331, 0);
Object result = (Object)Eval((Object)send24186);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSymbolNotEquals)
/*
tmSymbolNotEquals
// 	^ #Symbol = #lobmyS
*/
// tmSymbolNotEquals
Object send24187 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4317, 0);
Object result = (Object)Eval((Object)send24187);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVar)
/*
tmClassInstVar
// 	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
// tmClassInstVar
Object send24188 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4287, 0);
Object result = (Object)Eval((Object)send24188);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
// 	StandardTestClass instVar: 10.
// 	self assert: StandardTestClass instVar = 10.
*/
// tmClassInstVarAssignment
Object send24189 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4288, 0);
Object result = (Object)Eval((Object)send24189);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSide)
/*
tmClassSide
// 	self assert: Object class class = Metaclass.
// 	^ StandardTestClass aClassSideMethod
*/
// tmClassSide
Object send24190 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4330, 0);
Object result = (Object)Eval((Object)send24190);
ASSERT_EMPTY_STACK
Object string2802 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string2802);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuper)
/*
tmClassSideSuper
// 	"TODO create accerssort in: everywhere"
// 	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
*/
// tmClassSideSuper
Object send24191 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4315, 0);
Object result = (Object)Eval((Object)send24191);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmClassSideSuperSend)
/*
tmClassSideSuperSend
// 	ChildClassTestClass a: nil.
// 	ChildClassTestClass b: nil.
// 	ChildClassTestClass c: nil.
// 	
// 	self assert: ChildClassTestClass a = nil.
// 	self assert: ChildClassTestClass b = nil.
// 	self assert: ChildClassTestClass c = nil.
// 	
// 	ChildClassTestClass a: 1.
// 	ChildClassTestClass b: 2.
// 	ChildClassTestClass c: 3.
// 	
// 	self assert: ChildClassTestClass a = 1.
// 	self assert: ChildClassTestClass b = 2.
// 	self assert: ChildClassTestClass c = 3.
*/
// tmClassSideSuperSend
Object send24192 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4301, 0);
Object result = (Object)Eval((Object)send24192);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
// 	| instance |
// 	instance := StandardTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
*/
// tmSimpleInstanceCreation
Object send24193 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4295, 0);
Object result = (Object)Eval((Object)send24193);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClass)
/*
tmSuperClass
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	instance a: 1.
// 	self assert: instance a = 1.
// 	self assert: instance b = nil.
// 	instance b: 2.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2
*/
// tmSuperClass
Object send24194 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4313, 0);
Object result = (Object)Eval((Object)send24194);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
// 	| instance |
// 	instance := ChildClassTestClass basicNew.
// 	self assert: instance testSuper = 100
*/
// tmSuperClassSuperSend
Object send24195 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4310, 0);
Object result = (Object)Eval((Object)send24195);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)BridgeTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
// 	| instance |
// 	instance := StandardVariableTestClass basicNew.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c
*/
// tmVariableInstanceCreation
Object send24196 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4329, 0);
Object result = (Object)Eval((Object)send24196);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(BridgeTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
// 	| instance |
// 	instance := StandardVariableTestClass basicNew: 100.
// 	instance at: 1 put: 1.
// 	instance at: 100 put: 100.
// 	self assert: (instance at: 1) = 1.	"sample"
// 	self assert: (instance at: 100) = 100.
// 	instance
// 		a: 1;
// 		b: 2;
// 		c: 3.
// 	self assert: instance a = 1.
// 	self assert: instance b = 2.
// 	self assert: instance c = 3.
// 	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
// tmVariableInstanceCreationSized
Object send24197 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4294, 0);
Object result = (Object)Eval((Object)send24197);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

void BridgeTest_setUp() {
// setUp
Object send24198 = (Object)new_AST_Send((Object)BridgeTest_test_Class_Instance, (Object)symbol4319, 0);
Eval((Object)send24198);
}

/* ========================================================================= */

TEST_SUITE(BridgeTest,
{
    BridgeTest_create_ast();
    BridgeTest_TestCase_Class =(Type_Class)class583;
    BridgeTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)BridgeTest_TestCase_Class));

    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberMult);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanSymbolEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmString);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolCharacterEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmMethodArgument_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassReferenceReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmVariableInstanceCreation);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberSubtract);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmFibonacci);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmMethodArguments_with_with_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberAdd);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleBasicArithmetik);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_assert_);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberDiv);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmStringEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tearDown);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSide);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSideSuper);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_setUp);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmExtendedReturn);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSuperClassSuperSend);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassInstVar);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbol);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumber);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassInstVarAssignment);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanFalse);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSimpleInstanceCreation);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmLocalVariable);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmStringNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmClassSideSuperSend);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacterEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacter);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolNotEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmBooleanTrue);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmCharacterStringEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSymbolEquals);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmSuperClass);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmVariableInstanceCreationSized);
    BridgeTest_setUp();
    RUN_TEST(BridgeTest_tmNumberNotEquals);
})