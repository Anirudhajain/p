// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object objectlayout949;
Object instancevariable740;
Object instancevariable741;
Object instancevariable742;
Object instancevariable743;
Object instancevariable744;
Object symbol3932;
Object class513;
Object metaclass513;
Object objectlayout950;
Object symbol3931;
Object objectlayout951;
Object instancevariable745;
Object instancevariable746;
Object instancevariable747;
Object class514;
Object metaclass514;
Object objectlayout952;
Object symbol3930;
Object objectlayout953;
Object class515;
Object metaclass515;
Object objectlayout954;
Object symbol3957;
Object class516;
Object metaclass516;
Object objectlayout955;
Object symbol3956;
Object class517;
Object metaclass517;
Object objectlayout956;
Object symbol3955;
Object class518;
Object metaclass518;
Object objectlayout957;
Object symbol3840;
Object objectlayout958;
Object instancevariable748;
Object instancevariable749;
Object instancevariable750;
Object class519;
Object metaclass519;
Object objectlayout959;
Object symbol3938;
Object objectlayout960;
Object instancevariable751;
Object instancevariable752;
Object instancevariable753;
Object class520;
Object metaclass520;
Object objectlayout961;
Object symbol4137;
Object objectlayout962;
Object instancevariable754;
Object instancevariable755;
Object class521;
Object metaclass521;
Object objectlayout963;
Object instancevariable756;
Object symbol3814;
Object objectlayout964;
Object instancevariable757;
Object class522;
Object metaclass522;
Object objectlayout965;
Object symbol3829;
Object objectlayout966;
Object instancevariable758;
Object instancevariable759;
Object class523;
Object metaclass523;
Object objectlayout967;
Object symbol4096;
Object objectlayout968;
Object instancevariable760;
Object instancevariable761;
Object class524;
Object metaclass524;
Object objectlayout969;
Object symbol4114;
Object objectlayout970;
Object instancevariable762;
Object instancevariable763;
Object class525;
Object metaclass525;
Object objectlayout971;
Object symbol4146;
Object class526;
Object metaclass526;
Object objectlayout972;
Object symbol4143;
Object objectlayout973;
Object instancevariable764;
Object class527;
Object metaclass527;
Object objectlayout974;
Object symbol4100;
Object objectlayout975;
Object instancevariable765;
Object instancevariable766;
Object class528;
Object metaclass528;
Object objectlayout976;
Object symbol4099;
Object objectlayout977;
Object instancevariable767;
Object class529;
Object metaclass529;
Object objectlayout978;
Object symbol4104;
Object objectlayout979;
Object instancevariable768;
Object instancevariable769;
Object class530;
Object metaclass530;
Object objectlayout980;
Object symbol4112;
Object objectlayout981;
Object class531;
Object metaclass531;
Object objectlayout982;
Object symbol3895;
Object objectlayout983;
Object instancevariable770;
Object instancevariable771;
Object instancevariable772;
Object instancevariable773;
Object class532;
Object metaclass532;
Object objectlayout984;
Object symbol4144;
Object class533;
Object metaclass533;
Object objectlayout985;
Object symbol3811;
Object objectlayout986;
Object instancevariable774;
Object class534;
Object metaclass534;
Object objectlayout987;
Object symbol3889;
Object objectlayout988;
Object instancevariable775;
Object instancevariable776;
Object instancevariable777;
Object class535;
Object metaclass535;
Object objectlayout989;
Object symbol3912;
Object class536;
Object metaclass536;
Object objectlayout990;
Object symbol4125;
Object objectlayout991;
Object instancevariable778;
Object class537;
Object metaclass537;
Object objectlayout992;
Object instancevariable779;
Object symbol3913;
Object class538;
Object metaclass538;
Object objectlayout993;
Object symbol3970;
Object objectlayout994;
Object instancevariable780;
Object class539;
Object metaclass539;
Object objectlayout995;
Object symbol3981;
Object objectlayout996;
Object instancevariable781;
Object class540;
Object metaclass540;
Object objectlayout997;
Object instancevariable782;
Object symbol3977;
Object objectlayout998;
Object instancevariable783;
Object class541;
Object metaclass541;
Object objectlayout999;
Object instancevariable784;
Object symbol3943;
Object objectlayout1000;
Object instancevariable785;
Object instancevariable786;
Object instancevariable787;
Object class542;
Object metaclass542;
Object objectlayout1001;
Object symbol4127;
Object objectlayout1002;
Object instancevariable788;
Object instancevariable789;
Object instancevariable790;
Object class543;
Object metaclass543;
Object objectlayout1003;
Object symbol3917;
Object objectlayout1004;
Object class544;
Object metaclass544;
Object objectlayout1005;
Object symbol3983;
Object objectlayout1006;
Object instancevariable791;
Object class545;
Object metaclass545;
Object objectlayout1007;
Object symbol3994;
Object objectlayout1008;
Object instancevariable792;
Object class546;
Object metaclass546;
Object objectlayout1009;
Object symbol3864;
Object objectlayout1010;
Object class547;
Object metaclass547;
Object objectlayout1011;
Object symbol3892;
Object objectlayout1012;
Object instancevariable793;
Object class548;
Object metaclass548;
Object objectlayout1013;
Object symbol3884;
Object objectlayout1014;
Object class549;
Object metaclass549;
Object objectlayout1015;
Object symbol3845;
Object objectlayout1016;
Object instancevariable794;
Object instancevariable795;
Object class550;
Object metaclass550;
Object objectlayout1017;
Object symbol3942;
Object objectlayout1018;
Object class551;
Object metaclass551;
Object objectlayout1019;
Object symbol3837;
Object objectlayout1020;
Object instancevariable796;
Object class552;
Object metaclass552;
Object objectlayout1021;
Object symbol3876;
Object objectlayout1022;
Object class553;
Object metaclass553;
Object objectlayout1023;
Object symbol3902;
Object objectlayout1024;
Object instancevariable797;
Object class554;
Object metaclass554;
Object objectlayout1025;
Object symbol3988;
Object objectlayout1026;
Object class555;
Object metaclass555;
Object objectlayout1027;
Object symbol3846;
Object objectlayout1028;
Object instancevariable798;
Object class556;
Object metaclass556;
Object objectlayout1029;
Object symbol3877;
Object objectlayout1030;
Object class557;
Object metaclass557;
Object objectlayout1031;
Object symbol3850;
Object objectlayout1032;
Object instancevariable799;
Object instancevariable800;
Object instancevariable801;
Object instancevariable802;
Object class558;
Object metaclass558;
Object objectlayout1033;
Object symbol4035;
Object objectlayout1034;
Object class559;
Object metaclass559;
Object objectlayout1035;
Object symbol3831;
Object objectlayout1036;
Object instancevariable803;
Object class560;
Object metaclass560;
Object objectlayout1037;
Object symbol3859;
Object objectlayout1038;
Object instancevariable804;
Object class561;
Object metaclass561;
Object objectlayout1039;
Object symbol3879;
Object objectlayout1040;
Object instancevariable805;
Object instancevariable806;
Object instancevariable807;
Object class562;
Object metaclass562;
Object objectlayout1041;
Object symbol3993;
Object objectlayout1042;
Object class563;
Object metaclass563;
Object objectlayout1043;
Object symbol3852;
Object objectlayout1044;
Object instancevariable808;
Object class564;
Object metaclass564;
Object objectlayout1045;
Object symbol3841;
Object objectlayout1046;
Object instancevariable809;
Object instancevariable810;
Object class565;
Object metaclass565;
Object objectlayout1047;
Object symbol3872;
Object objectlayout1048;
Object instancevariable811;
Object class566;
Object metaclass566;
Object objectlayout1049;
Object symbol3862;
Object objectlayout1050;
Object instancevariable812;
Object instancevariable813;
Object class567;
Object metaclass567;
Object objectlayout1051;
Object symbol3843;
Object objectlayout1052;
Object instancevariable814;
Object instancevariable815;
Object class568;
Object metaclass568;
Object objectlayout1053;
Object symbol3835;
Object objectlayout1054;
Object instancevariable816;
Object instancevariable817;
Object class569;
Object metaclass569;
Object objectlayout1055;
Object symbol4079;
Object objectlayout1056;
Object instancevariable818;
Object class570;
Object metaclass570;
Object objectlayout1057;
Object symbol3883;
Object objectlayout1058;
Object instancevariable819;
Object class571;
Object metaclass571;
Object objectlayout1059;
Object symbol3844;
Object objectlayout1060;
Object instancevariable820;
Object instancevariable821;
Object class572;
Object metaclass572;
Object objectlayout1061;
Object symbol3836;
Object objectlayout1062;
Object instancevariable822;
Object class573;
Object metaclass573;
Object classreference569;
Object classreference570;
Object classreference571;
Object classreference572;
Object classreference573;
Object classreference574;
Object classreference575;
Object classreference576;
Object localvariable2955;
Object localvariable2956;
Object array2353;
Object symbol4150;
Object symbol4151;
Object send21125;
Object send21126;
Object block1330;
Object send21127;
Object method2952;
Object symbol4138;
Object methodclosure2952;
Object classreference577;
Object classreference578;
Object send21128;
Object send21129;
Object method2953;
Object symbol3960;
Object methodclosure2953;
Object localvariable2957;
Object array2354;
Object smallint1439;
Object constant4128;
Object symbol4152;
Object send21130;
Object localvariable2958;
Object array2355;
Object send21131;
Object send21132;
Object block1331;
Object send21133;
Object method2954;
Object symbol3964;
Object methodclosure2954;
Object localvariable2959;
Object array2356;
Object localvariable2960;
Object array2357;
Object send21134;
Object symbol3907;
Object send21135;
Object smallint1440;
Object constant4129;
Object send21136;
Object send21137;
Object assign2564;
Object symbol3962;
Object localvariable2961;
Object localvariable2962;
Object array2358;
Object send21138;
Object block1332;
Object send21139;
Object symbol3967;
Object send21140;
Object method2955;
Object symbol3965;
Object methodclosure2955;
Object symbol3826;
Object super255;
Object method2956;
Object methodclosure2956;
Object smallint1441;
Object constant4130;
Object send21141;
Object method2957;
Object symbol3961;
Object methodclosure2957;
Object localvariable2963;
Object array2359;
Object variable143;
Object array2360;
Object send21142;
Object send21143;
Object block1333;
Object send21144;
Object send21145;
Object send21146;
Object send21147;
Object send21148;
Object block1334;
Object send21149;
Object send21150;
Object send21151;
Object send21152;
Object send21153;
Object block1335;
Object send21154;
Object smallint1442;
Object constant4131;
Object send21155;
Object localvariable2964;
Object array2361;
Object send21156;
Object send21157;
Object send21158;
Object send21159;
Object block1336;
Object send21160;
Object block1337;
Object send21161;
Object block1338;
Object send21162;
Object method2958;
Object methodclosure2958;
Object localvariable2965;
Object array2362;
Object smallint1443;
Object constant4132;
Object send21163;
Object localvariable2966;
Object array2363;
Object symbol4153;
Object send21164;
Object send21165;
Object block1339;
Object send21166;
Object method2959;
Object methodclosure2959;
Object localvariable2967;
Object localvariable2968;
Object array2364;
Object localvariable2969;
Object array2365;
Object assign2565;
Object localvariable2970;
Object array2366;
Object send21167;
Object assign2566;
Object block1340;
Object send21168;
Object method2960;
Object symbol3966;
Object methodclosure2960;
Object localvariable2971;
Object array2367;
Object symbol3923;
Object super256;
Object symbol4154;
Object string2453;
Object constant4133;
Object send21169;
Object localvariable2972;
Object array2368;
Object send21170;
Object string2454;
Object constant4134;
Object send21171;
Object block1341;
Object send21172;
Object string2455;
Object constant4135;
Object send21173;
Object method2961;
Object methodclosure2961;
Object localvariable2973;
Object array2369;
Object smallint1444;
Object constant4136;
Object send21174;
Object method2962;
Object symbol3963;
Object methodclosure2962;
Object send21175;
Object smallint1445;
Object constant4137;
Object send21176;
Object method2963;
Object symbol3951;
Object methodclosure2963;
Object localvariable2974;
Object array2370;
Object send21177;
Object send21178;
Object method2964;
Object methodclosure2964;
Object classreference579;
Object classreference580;
Object instancevariable823;
Object method2965;
Object symbol3909;
Object methodclosure2965;
Object localvariable2975;
Object localvariable2976;
Object localvariable2977;
Object array2371;
Object symbol3908;
Object send21179;
Object assign2567;
Object symbol3919;
Object send21180;
Object localvariable2978;
Object array2372;
Object localvariable2979;
Object array2373;
Object send21181;
Object send21182;
Object symbol4155;
Object string2456;
Object constant4138;
Object send21183;
Object string2457;
Object constant4139;
Object send21184;
Object send21185;
Object block1342;
Object send21186;
Object block1343;
Object send21187;
Object classreference581;
Object symbol4128;
Object send21188;
Object assign2568;
Object symbol4132;
Object send21189;
Object send21190;
Object send21191;
Object block1344;
Object send21192;
Object method2966;
Object symbol3918;
Object methodclosure2966;
Object instancevariable824;
Object method2967;
Object symbol3910;
Object methodclosure2967;
Object localvariable2980;
Object array2374;
Object send21193;
Object send21194;
Object method2968;
Object methodclosure2968;
Object symbol3916;
Object send21195;
Object symbol3827;
Object method2969;
Object methodclosure2969;
Object classreference582;
Object symbol4156;
Object send21196;
Object send21197;
Object method2970;
Object symbol3914;
Object methodclosure2970;
Object send21198;
Object send21199;
Object method2971;
Object symbol3915;
Object methodclosure2971;
Object send21200;
Object method2972;
Object methodclosure2972;
Object localvariable2981;
Object array2375;
Object send21201;
Object assign2569;
Object send21202;
Object symbol4157;
Object send21203;
Object send21204;
Object send21205;
Object block1345;
Object block1346;
Object send21206;
Object method2973;
Object methodclosure2973;
Object instancevariable825;
Object method2974;
Object methodclosure2974;
Object classreference583;
Object instancevariable826;
Object method2975;
Object symbol3924;
Object methodclosure2975;
Object localvariable2982;
Object array2376;
Object super257;
Object string2458;
Object constant4140;
Object send21207;
Object send21208;
Object send21209;
Object method2976;
Object methodclosure2976;
Object instancevariable827;
Object method2977;
Object methodclosure2977;
Object classreference584;
Object localvariable2983;
Object array2377;
Object super258;
Object symbol4158;
Object send21210;
Object send21211;
Object send21212;
Object method2978;
Object methodclosure2978;
Object classreference585;
Object send21213;
Object symbol3817;
Object send21214;
Object method2979;
Object symbol3823;
Object methodclosure2979;
Object method2980;
Object symbol3825;
Object methodclosure2980;
Object localvariable2984;
Object array2378;
Object send21215;
Object send21216;
Object method2981;
Object methodclosure2981;
Object method2982;
Object methodclosure2982;
Object method2983;
Object symbol3824;
Object methodclosure2983;
Object method2984;
Object methodclosure2984;
Object symbol3946;
Object send21217;
Object send21218;
Object method2985;
Object methodclosure2985;
Object classreference586;
Object symbol4108;
Object send21219;
Object method2986;
Object symbol3934;
Object methodclosure2986;
Object localvariable2985;
Object localvariable2986;
Object array2379;
Object super259;
Object assign2570;
Object send21220;
Object smallint1446;
Object constant4141;
Object send21221;
Object send21222;
Object assign2571;
Object method2987;
Object symbol3936;
Object methodclosure2987;
Object localvariable2987;
Object array2380;
Object localvariable2988;
Object array2381;
Object symbol4121;
Object send21223;
Object assign2572;
Object symbol4159;
Object send21224;
Object method2988;
Object symbol3941;
Object methodclosure2988;
Object localvariable2989;
Object array2382;
Object localvariable2990;
Object localvariable2991;
Object array2383;
Object variable144;
Object array2384;
Object symbol4160;
Object send21225;
Object assign2573;
Object assign2574;
Object send21226;
Object block1347;
Object send21227;
Object send21228;
Object block1348;
Object send21229;
Object symbol4161;
Object send21230;
Object send21231;
Object send21232;
Object send21233;
Object block1349;
Object send21234;
Object block1350;
Object send21235;
Object block1351;
Object send21236;
Object method2989;
Object symbol3933;
Object methodclosure2989;
Object localvariable2992;
Object array2385;
Object send21237;
Object block1352;
Object block1353;
Object send21238;
Object method2990;
Object symbol3935;
Object methodclosure2990;
Object localvariable2993;
Object array2386;
Object variable145;
Object array2387;
Object smallint1447;
Object constant4142;
Object send21239;
Object send21240;
Object assign2575;
Object symbol4162;
Object send21241;
Object block1354;
Object send21242;
Object smallint1448;
Object constant4143;
Object send21243;
Object send21244;
Object send21245;
Object block1355;
Object send21246;
Object method2991;
Object symbol3939;
Object methodclosure2991;
Object localvariable2994;
Object array2388;
Object localvariable2995;
Object localvariable2996;
Object array2389;
Object variable146;
Object array2390;
Object assign2576;
Object send21247;
Object send21248;
Object block1356;
Object send21249;
Object assign2577;
Object symbol4163;
Object send21250;
Object assign2578;
Object symbol4164;
Object send21251;
Object send21252;
Object block1357;
Object send21253;
Object send21254;
Object send21255;
Object block1358;
Object send21256;
Object block1359;
Object send21257;
Object method2992;
Object symbol3940;
Object methodclosure2992;
Object classreference587;
Object method2993;
Object methodclosure2993;
Object localvariable2997;
Object array2391;
Object localvariable2998;
Object localvariable2999;
Object array2392;
Object variable147;
Object array2393;
Object send21258;
Object assign2579;
Object localvariable3000;
Object array2394;
Object send21259;
Object block1360;
Object send21260;
Object send21261;
Object assign2580;
Object symbol4165;
Object send21262;
Object block1361;
Object send21263;
Object symbol4107;
Object send21264;
Object send21265;
Object block1362;
Object send21266;
Object block1363;
Object send21267;
Object send21268;
Object smallint1449;
Object constant4144;
Object send21269;
Object send21270;
Object send21271;
Object block1364;
Object send21272;
Object block1365;
Object send21273;
Object method2994;
Object symbol4115;
Object methodclosure2994;
Object localvariable3001;
Object array2395;
Object symbol4106;
Object send21274;
Object send21275;
Object method2995;
Object symbol4145;
Object methodclosure2995;
Object localvariable3002;
Object array2396;
Object super260;
Object assign2581;
Object assign2582;
Object method2996;
Object symbol4140;
Object methodclosure2996;
Object super261;
Object send21276;
Object send21277;
Object method2997;
Object methodclosure2997;
Object localvariable3003;
Object array2397;
Object assign2583;
Object method2998;
Object symbol4142;
Object methodclosure2998;
Object classreference588;
Object localvariable3004;
Object array2398;
Object symbol4166;
Object send21278;
Object method2999;
Object symbol4147;
Object methodclosure2999;
Object classreference589;
Object localvariable3005;
Object array2399;
Object method3000;
Object methodclosure3000;
Object localvariable3006;
Object array2400;
Object send21279;
Object method3001;
Object symbol4148;
Object methodclosure3001;
Object localvariable3007;
Object array2401;
Object assign2584;
Object method3002;
Object symbol4149;
Object methodclosure3002;
Object classreference590;
Object method3003;
Object methodclosure3003;
Object localvariable3008;
Object localvariable3009;
Object array2402;
Object localvariable3010;
Object array2403;
Object send21280;
Object block1366;
Object send21281;
Object send21282;
Object assign2585;
Object send21283;
Object block1367;
Object send21284;
Object block1368;
Object send21285;
Object method3004;
Object symbol4141;
Object methodclosure3004;
Object localvariable3011;
Object array2404;
Object send21286;
Object send21287;
Object method3005;
Object methodclosure3005;
Object localvariable3012;
Object array2405;
Object super262;
Object assign2586;
Object assign2587;
Object method3006;
Object methodclosure3006;
Object method3007;
Object symbol4105;
Object methodclosure3007;
Object localvariable3013;
Object array2406;
Object assign2588;
Object method3008;
Object methodclosure3008;
Object classreference591;
Object localvariable3014;
Object array2407;
Object localvariable3015;
Object array2408;
Object variable148;
Object array2409;
Object localvariable3016;
Object array2410;
Object send21288;
Object assign2589;
Object send21289;
Object block1369;
Object send21290;
Object block1370;
Object send21291;
Object block1371;
Object send21292;
Object method3009;
Object methodclosure3009;
Object localvariable3017;
Object array2411;
Object super263;
Object assign2590;
Object method3010;
Object methodclosure3010;
Object super264;
Object send21293;
Object send21294;
Object method3011;
Object methodclosure3011;
Object localvariable3018;
Object array2412;
Object send21295;
Object send21296;
Object method3012;
Object symbol4122;
Object methodclosure3012;
Object classreference592;
Object localvariable3019;
Object array2413;
Object variable149;
Object array2414;
Object send21297;
Object classreference593;
Object send21298;
Object block1372;
Object send21299;
Object send21300;
Object block1373;
Object send21301;
Object method3013;
Object methodclosure3013;
Object localvariable3020;
Object array2415;
Object super265;
Object assign2591;
Object assign2592;
Object method3014;
Object methodclosure3014;
Object method3015;
Object methodclosure3015;
Object classreference594;
Object localvariable3021;
Object array2416;
Object localvariable3022;
Object localvariable3023;
Object array2417;
Object variable150;
Object array2418;
Object send21302;
Object assign2593;
Object send21303;
Object assign2594;
Object send21304;
Object block1374;
Object send21305;
Object send21306;
Object send21307;
Object block1375;
Object send21308;
Object method3016;
Object methodclosure3016;
Object send21309;
Object method3017;
Object methodclosure3017;
Object classreference595;
Object localvariable3024;
Object array2419;
Object assign2595;
Object method3018;
Object symbol4119;
Object methodclosure3018;
Object localvariable3025;
Object array2420;
Object localvariable3026;
Object array2421;
Object send21310;
Object assign2596;
Object method3019;
Object methodclosure3019;
Object localvariable3027;
Object array2422;
Object localvariable3028;
Object localvariable3029;
Object array2423;
Object send21311;
Object assign2597;
Object send21312;
Object assign2598;
Object method3020;
Object symbol4120;
Object methodclosure3020;
Object localvariable3030;
Object array2424;
Object assign2599;
Object method3021;
Object symbol4118;
Object methodclosure3021;
Object super266;
Object send21313;
Object symbol4167;
Object send21314;
Object assign2600;
Object method3022;
Object methodclosure3022;
Object localvariable3031;
Object array2425;
Object send21315;
Object assign2601;
Object method3023;
Object methodclosure3023;
Object localvariable3032;
Object array2426;
Object localvariable3033;
Object array2427;
Object variable151;
Object array2428;
Object send21316;
Object assign2602;
Object symbol4168;
Object block1376;
Object send21317;
Object block1377;
Object send21318;
Object send21319;
Object block1378;
Object send21320;
Object block1379;
Object send21321;
Object method3024;
Object methodclosure3024;
Object classreference596;
Object localvariable3034;
Object array2429;
Object symbol4169;
Object send21322;
Object localvariable3035;
Object array2430;
Object symbol4170;
Object send21323;
Object symbol4171;
Object send21324;
Object block1380;
Object send21325;
Object block1381;
Object send21326;
Object method3025;
Object symbol4117;
Object methodclosure3025;
Object method3026;
Object methodclosure3026;
Object method3027;
Object symbol4097;
Object methodclosure3027;
Object localvariable3036;
Object array2431;
Object assign2603;
Object method3028;
Object symbol4110;
Object methodclosure3028;
Object assign2604;
Object method3029;
Object methodclosure3029;
Object method3030;
Object methodclosure3030;
Object localvariable3037;
Object array2432;
Object send21327;
Object symbol4172;
Object send21328;
Object block1382;
Object send21329;
Object method3031;
Object symbol4098;
Object methodclosure3031;
Object variable152;
Object array2433;
Object symbol4111;
Object super267;
Object send21330;
Object block1383;
Object send21331;
Object string2459;
Object constant4145;
Object send21332;
Object string2460;
Object constant4146;
Object send21333;
Object block1384;
Object send21334;
Object method3032;
Object methodclosure3032;
Object localvariable3038;
Object array2434;
Object localvariable3039;
Object localvariable3040;
Object array2435;
Object symbol4173;
Object send21335;
Object assign2605;
Object send21336;
Object assign2606;
Object symbol4174;
Object send21337;
Object block1385;
Object send21338;
Object method3033;
Object methodclosure3033;
Object localvariable3041;
Object array2436;
Object send21339;
Object send21340;
Object send21341;
Object method3034;
Object methodclosure3034;
Object symbol4113;
Object send21342;
Object send21343;
Object method3035;
Object symbol4109;
Object methodclosure3035;
Object send21344;
Object method3036;
Object symbol4101;
Object methodclosure3036;
Object send21345;
Object method3037;
Object methodclosure3037;
Object send21346;
Object method3038;
Object methodclosure3038;
Object method3039;
Object methodclosure3039;
Object localvariable3042;
Object array2437;
Object send21347;
Object send21348;
Object method3040;
Object symbol4102;
Object methodclosure3040;
Object send21349;
Object send21350;
Object method3041;
Object symbol4103;
Object methodclosure3041;
Object localvariable3043;
Object array2438;
Object assign2607;
Object method3042;
Object symbol3985;
Object methodclosure3042;
Object localvariable3044;
Object array2439;
Object send21351;
Object send21352;
Object send21353;
Object method3043;
Object methodclosure3043;
Object localvariable3045;
Object array2440;
Object send21354;
Object method3044;
Object methodclosure3044;
Object send21355;
Object send21356;
Object method3045;
Object symbol4116;
Object methodclosure3045;
Object send21357;
Object method3046;
Object methodclosure3046;
Object classreference597;
Object localvariable3046;
Object localvariable3047;
Object localvariable3048;
Object localvariable3049;
Object array2441;
Object symbol4175;
Object send21358;
Object assign2608;
Object string2461;
Object constant4147;
Object send21359;
Object assign2609;
Object send21360;
Object assign2610;
Object send21361;
Object symbol4176;
Object send21362;
Object localvariable3050;
Object array2442;
Object assign2611;
Object method3047;
Object symbol3990;
Object methodclosure3047;
Object method3048;
Object symbol3992;
Object methodclosure3048;
Object symbol3928;
Object send21363;
Object symbol4177;
Object localvariable3051;
Object array2443;
Object send21364;
Object symbol4178;
Object symbol3945;
Object send21365;
Object block1386;
Object send21366;
Object block1387;
Object send21367;
Object method3049;
Object methodclosure3049;
Object super268;
Object send21368;
Object assign2612;
Object method3050;
Object methodclosure3050;
Object localvariable3052;
Object array2444;
Object assign2613;
Object method3051;
Object symbol4003;
Object methodclosure3051;
Object method3052;
Object methodclosure3052;
Object classreference598;
Object send21369;
Object symbol4002;
Object send21370;
Object send21371;
Object send21372;
Object localvariable3053;
Object array2445;
Object smallint1450;
Object constant4148;
Object string2462;
Object constant4149;
Object send21373;
Object smallint1451;
Object constant4150;
Object string2463;
Object constant4151;
Object send21374;
Object smallint1452;
Object constant4152;
Object string2464;
Object constant4153;
Object send21375;
Object send21376;
Object block1388;
Object smallint1453;
Object constant4154;
Object send21377;
Object send21378;
Object send21379;
Object send21380;
Object send21381;
Object assign2614;
Object send21382;
Object send21383;
Object method3053;
Object symbol4133;
Object methodclosure3053;
Object localvariable3054;
Object array2446;
Object assign2615;
Object method3054;
Object symbol4134;
Object methodclosure3054;
Object localvariable3055;
Object array2447;
Object send21384;
Object send21385;
Object send21386;
Object symbol4179;
Object send21387;
Object send21388;
Object send21389;
Object block1389;
Object send21390;
Object method3055;
Object methodclosure3055;
Object classreference599;
Object send21391;
Object symbol3972;
Object send21392;
Object send21393;
Object method3056;
Object symbol3971;
Object methodclosure3056;
Object localvariable3056;
Object array2448;
Object assign2616;
Object method3057;
Object symbol3968;
Object methodclosure3057;
Object localvariable3057;
Object array2449;
Object symbol3969;
Object send21394;
Object send21395;
Object method3058;
Object methodclosure3058;
Object symbol3973;
Object send21396;
Object string2465;
Object constant4155;
Object send21397;
Object send21398;
Object send21399;
Object symbol4180;
Object send21400;
Object send21401;
Object method3059;
Object methodclosure3059;
Object localvariable3058;
Object array2450;
Object assign2617;
Object method3060;
Object symbol3974;
Object methodclosure3060;
Object method3061;
Object methodclosure3061;
Object method3062;
Object methodclosure3062;
Object classreference600;
Object send21402;
Object send21403;
Object smallint1454;
Object constant4156;
Object send21404;
Object assign2618;
Object send21405;
Object send21406;
Object method3063;
Object symbol4000;
Object methodclosure3063;
Object localvariable3059;
Object array2451;
Object send21407;
Object send21408;
Object symbol4181;
Object send21409;
Object send21410;
Object super269;
Object send21411;
Object send21412;
Object send21413;
Object send21414;
Object method3064;
Object methodclosure3064;
Object localvariable3060;
Object array2452;
Object assign2619;
Object method3065;
Object methodclosure3065;
Object method3066;
Object methodclosure3066;
Object super270;
Object method3067;
Object methodclosure3067;
Object localvariable3061;
Object array2453;
Object assign2620;
Object method3068;
Object symbol3999;
Object methodclosure3068;
Object localvariable3062;
Object array2454;
Object send21415;
Object assign2621;
Object method3069;
Object symbol3948;
Object methodclosure3069;
Object classreference601;
Object send21416;
Object send21417;
Object smallint1455;
Object constant4157;
Object send21418;
Object assign2622;
Object send21419;
Object send21420;
Object localvariable3063;
Object array2455;
Object assign2623;
Object method3070;
Object methodclosure3070;
Object method3071;
Object methodclosure3071;
Object localvariable3064;
Object array2456;
Object send21421;
Object send21422;
Object send21423;
Object send21424;
Object super271;
Object method3072;
Object methodclosure3072;
Object classreference602;
Object send21425;
Object send21426;
Object send21427;
Object smallint1456;
Object constant4158;
Object send21428;
Object method3073;
Object symbol3856;
Object methodclosure3073;
Object localvariable3065;
Object localvariable3066;
Object localvariable3067;
Object array2457;
Object symbol4182;
Object send21429;
Object assign2624;
Object string2466;
Object constant4159;
Object send21430;
Object assign2625;
Object send21431;
Object assign2626;
Object send21432;
Object send21433;
Object symbol3953;
Object send21434;
Object send21435;
Object method3074;
Object methodclosure3074;
Object localvariable3068;
Object array2458;
Object assign2627;
Object method3075;
Object symbol3952;
Object methodclosure3075;
Object method3076;
Object methodclosure3076;
Object classreference603;
Object send21436;
Object send21437;
Object send21438;
Object send21439;
Object send21440;
Object send21441;
Object string2467;
Object constant4160;
Object send21442;
Object assign2628;
Object send21443;
Object assign2629;
Object send21444;
Object send21445;
Object send21446;
Object send21447;
Object send21448;
Object send21449;
Object smallint1457;
Object constant4161;
Object send21450;
Object send21451;
Object send21452;
Object send21453;
Object send21454;
Object send21455;
Object send21456;
Object send21457;
Object send21458;
Object send21459;
Object string2468;
Object constant4162;
Object send21460;
Object send21461;
Object smallint1458;
Object constant4163;
Object send21462;
Object send21463;
Object send21464;
Object localvariable3069;
Object array2459;
Object send21465;
Object method3077;
Object methodclosure3077;
Object symbol3975;
Object send21466;
Object send21467;
Object method3078;
Object methodclosure3078;
Object localvariable3070;
Object array2460;
Object assign2630;
Object method3079;
Object symbol3976;
Object methodclosure3079;
Object method3080;
Object methodclosure3080;
Object localvariable3071;
Object array2461;
Object string2469;
Object constant4164;
Object send21468;
Object send21469;
Object send21470;
Object method3081;
Object methodclosure3081;
Object send21471;
Object send21472;
Object method3082;
Object methodclosure3082;
Object localvariable3072;
Object array2462;
Object send21473;
Object assign2631;
Object method3083;
Object methodclosure3083;
Object method3084;
Object symbol3978;
Object methodclosure3084;
Object send21474;
Object method3085;
Object methodclosure3085;
Object localvariable3073;
Object array2463;
Object symbol4183;
Object send21475;
Object send21476;
Object send21477;
Object send21478;
Object send21479;
Object block1390;
Object send21480;
Object method3086;
Object methodclosure3086;
Object classreference604;
Object send21481;
Object send21482;
Object method3087;
Object methodclosure3087;
Object send21483;
Object send21484;
Object method3088;
Object methodclosure3088;
Object method3089;
Object methodclosure3089;
Object classreference605;
Object send21485;
Object send21486;
Object smallint1459;
Object constant4165;
Object send21487;
Object send21488;
Object send21489;
Object string2470;
Object constant4166;
Object send21490;
Object send21491;
Object smallint1460;
Object constant4167;
Object send21492;
Object send21493;
Object send21494;
Object send21495;
Object send21496;
Object smallint1461;
Object constant4168;
Object send21497;
Object send21498;
Object send21499;
Object string2471;
Object constant4169;
Object send21500;
Object send21501;
Object smallint1462;
Object constant4170;
Object send21502;
Object send21503;
Object send21504;
Object localvariable3074;
Object array2464;
Object send21505;
Object send21506;
Object send21507;
Object symbol3980;
Object send21508;
Object send21509;
Object send21510;
Object block1391;
Object send21511;
Object method3090;
Object methodclosure3090;
Object localvariable3075;
Object array2465;
Object send21512;
Object send21513;
Object method3091;
Object methodclosure3091;
Object method3092;
Object methodclosure3092;
Object localvariable3076;
Object array2466;
Object assign2632;
Object method3093;
Object symbol3979;
Object methodclosure3093;
Object classreference606;
Object send21514;
Object send21515;
Object send21516;
Object method3094;
Object symbol3982;
Object methodclosure3094;
Object method3095;
Object methodclosure3095;
Object localvariable3077;
Object array2467;
Object assign2633;
Object method3096;
Object methodclosure3096;
Object classreference607;
Object send21517;
Object send21518;
Object smallint1463;
Object constant4171;
Object send21519;
Object send21520;
Object send21521;
Object string2472;
Object constant4172;
Object send21522;
Object send21523;
Object smallint1464;
Object constant4173;
Object send21524;
Object send21525;
Object send21526;
Object send21527;
Object method3097;
Object symbol3838;
Object methodclosure3097;
Object localvariable3078;
Object localvariable3079;
Object array2468;
Object symbol4184;
Object send21528;
Object assign2634;
Object string2473;
Object constant4174;
Object send21529;
Object assign2635;
Object send21530;
Object send21531;
Object string2474;
Object constant4175;
Object send21532;
Object send21533;
Object send21534;
Object smallint1465;
Object constant4176;
Object send21535;
Object string2475;
Object constant4177;
Object send21536;
Object assign2636;
Object send21537;
Object send21538;
Object string2476;
Object constant4178;
Object send21539;
Object send21540;
Object send21541;
Object smallint1466;
Object constant4179;
Object send21542;
Object string2477;
Object constant4180;
Object send21543;
Object assign2637;
Object send21544;
Object send21545;
Object symbol4185;
Object send21546;
Object send21547;
Object send21548;
Object send21549;
Object smallint1467;
Object constant4181;
Object send21550;
Object method3098;
Object symbol3866;
Object methodclosure3098;
Object localvariable3080;
Object localvariable3081;
Object localvariable3082;
Object array2469;
Object symbol4186;
Object send21551;
Object assign2638;
Object string2478;
Object constant4182;
Object send21552;
Object assign2639;
Object send21553;
Object assign2640;
Object send21554;
Object send21555;
Object send21556;
Object symbol3927;
Object send21557;
Object send21558;
Object send21559;
Object string2479;
Object constant4183;
Object send21560;
Object send21561;
Object send21562;
Object send21563;
Object method3099;
Object methodclosure3099;
Object localvariable3083;
Object array2470;
Object assign2641;
Object method3100;
Object symbol4135;
Object methodclosure3100;
Object method3101;
Object symbol4136;
Object methodclosure3101;
Object classreference608;
Object send21564;
Object send21565;
Object send21566;
Object method3102;
Object symbol3984;
Object methodclosure3102;
Object super272;
Object method3103;
Object methodclosure3103;
Object localvariable3084;
Object array2471;
Object assign2642;
Object method3104;
Object methodclosure3104;
Object localvariable3085;
Object array2472;
Object send21567;
Object send21568;
Object send21569;
Object method3105;
Object methodclosure3105;
Object localvariable3086;
Object array2473;
Object super273;
Object localvariable3087;
Object array2474;
Object string2480;
Object constant4184;
Object send21570;
Object send21571;
Object send21572;
Object string2481;
Object constant4185;
Object send21573;
Object block1392;
Object send21574;
Object method3106;
Object methodclosure3106;
Object localvariable3088;
Object array2475;
Object send21575;
Object symbol4187;
Object send21576;
Object send21577;
Object method3107;
Object symbol3986;
Object methodclosure3107;
Object send21578;
Object send21579;
Object method3108;
Object methodclosure3108;
Object localvariable3089;
Object array2476;
Object send21580;
Object symbol4188;
Object send21581;
Object send21582;
Object method3109;
Object symbol3987;
Object methodclosure3109;
Object classreference609;
Object send21583;
Object send21584;
Object send21585;
Object send21586;
Object string2482;
Object constant4186;
Object send21587;
Object send21588;
Object send21589;
Object send21590;
Object send21591;
Object send21592;
Object send21593;
Object send21594;
Object string2483;
Object constant4187;
Object send21595;
Object send21596;
Object send21597;
Object smallint1468;
Object constant4188;
Object send21598;
Object string2484;
Object constant4189;
Object send21599;
Object assign2643;
Object send21600;
Object assign2644;
Object send21601;
Object send21602;
Object send21603;
Object send21604;
Object send21605;
Object send21606;
Object string2485;
Object constant4190;
Object send21607;
Object send21608;
Object send21609;
Object send21610;
Object send21611;
Object send21612;
Object send21613;
Object send21614;
Object string2486;
Object constant4191;
Object send21615;
Object send21616;
Object assign2645;
Object send21617;
Object send21618;
Object send21619;
Object send21620;
Object send21621;
Object send21622;
Object string2487;
Object constant4192;
Object send21623;
Object send21624;
Object send21625;
Object send21626;
Object send21627;
Object send21628;
Object send21629;
Object send21630;
Object string2488;
Object constant4193;
Object send21631;
Object send21632;
Object send21633;
Object send21634;
Object send21635;
Object send21636;
Object send21637;
Object send21638;
Object string2489;
Object constant4194;
Object send21639;
Object send21640;
Object send21641;
Object smallint1469;
Object constant4195;
Object send21642;
Object method3110;
Object symbol3858;
Object methodclosure3110;
Object localvariable3090;
Object localvariable3091;
Object array2477;
Object symbol4189;
Object send21643;
Object assign2646;
Object string2490;
Object constant4196;
Object send21644;
Object assign2647;
Object send21645;
Object send21646;
Object string2491;
Object constant4197;
Object send21647;
Object send21648;
Object send21649;
Object smallint1470;
Object constant4198;
Object send21650;
Object string2492;
Object constant4199;
Object send21651;
Object assign2648;
Object send21652;
Object send21653;
Object string2493;
Object constant4200;
Object send21654;
Object send21655;
Object send21656;
Object smallint1471;
Object constant4201;
Object send21657;
Object string2494;
Object constant4202;
Object send21658;
Object assign2649;
Object send21659;
Object send21660;
Object string2495;
Object constant4203;
Object send21661;
Object send21662;
Object send21663;
Object smallint1472;
Object constant4204;
Object send21664;
Object string2496;
Object constant4205;
Object send21665;
Object assign2650;
Object send21666;
Object send21667;
Object string2497;
Object constant4206;
Object send21668;
Object send21669;
Object send21670;
Object smallint1473;
Object constant4207;
Object send21671;
Object string2498;
Object constant4208;
Object send21672;
Object assign2651;
Object send21673;
Object send21674;
Object string2499;
Object constant4209;
Object send21675;
Object send21676;
Object send21677;
Object smallint1474;
Object constant4210;
Object send21678;
Object string2500;
Object constant4211;
Object send21679;
Object assign2652;
Object send21680;
Object send21681;
Object send21682;
Object send21683;
Object send21684;
Object send21685;
Object smallint1475;
Object constant4212;
Object send21686;
Object method3111;
Object symbol3886;
Object methodclosure3111;
Object localvariable3092;
Object localvariable3093;
Object localvariable3094;
Object array2478;
Object symbol4190;
Object send21687;
Object assign2653;
Object string2501;
Object constant4213;
Object send21688;
Object assign2654;
Object send21689;
Object assign2655;
Object send21690;
Object send21691;
Object send21692;
Object send21693;
Object send21694;
Object send21695;
Object classreference610;
Object send21696;
Object string2502;
Object constant4214;
Object send21697;
Object assign2656;
Object send21698;
Object assign2657;
Object send21699;
Object send21700;
Object send21701;
Object send21702;
Object send21703;
Object send21704;
Object localvariable3095;
Object array2479;
Object string2503;
Object constant4215;
Object send21705;
Object method3112;
Object methodclosure3112;
Object classreference611;
Object send21706;
Object string2504;
Object constant4216;
Object send21707;
Object assign2658;
Object send21708;
Object assign2659;
Object send21709;
Object send21710;
Object send21711;
Object send21712;
Object send21713;
Object send21714;
Object send21715;
Object send21716;
Object send21717;
Object send21718;
Object smallint1476;
Object constant4217;
Object send21719;
Object method3113;
Object symbol3878;
Object methodclosure3113;
Object localvariable3096;
Object localvariable3097;
Object localvariable3098;
Object array2480;
Object symbol4191;
Object send21720;
Object assign2660;
Object string2505;
Object constant4218;
Object send21721;
Object assign2661;
Object send21722;
Object assign2662;
Object send21723;
Object send21724;
Object method3114;
Object symbol4015;
Object methodclosure3114;
Object send21725;
Object send21726;
Object method3115;
Object symbol4004;
Object methodclosure3115;
Object symbol3958;
Object send21727;
Object send21728;
Object method3116;
Object symbol3997;
Object methodclosure3116;
Object localvariable3099;
Object array2481;
Object assign2663;
Object method3117;
Object symbol4014;
Object methodclosure3117;
Object classreference612;
Object send21729;
Object send21730;
Object send21731;
Object send21732;
Object string2506;
Object constant4219;
Object send21733;
Object send21734;
Object send21735;
Object send21736;
Object send21737;
Object send21738;
Object send21739;
Object send21740;
Object send21741;
Object string2507;
Object constant4220;
Object send21742;
Object send21743;
Object send21744;
Object smallint1477;
Object constant4221;
Object send21745;
Object string2508;
Object constant4222;
Object send21746;
Object assign2664;
Object send21747;
Object send21748;
Object send21749;
Object send21750;
Object send21751;
Object send21752;
Object smallint1478;
Object constant4223;
Object send21753;
Object string2509;
Object constant4224;
Object send21754;
Object assign2665;
Object send21755;
Object assign2666;
Object send21756;
Object send21757;
Object send21758;
Object send21759;
Object send21760;
Object send21761;
Object string2510;
Object constant4225;
Object send21762;
Object send21763;
Object send21764;
Object send21765;
Object send21766;
Object send21767;
Object send21768;
Object send21769;
Object send21770;
Object string2511;
Object constant4226;
Object send21771;
Object send21772;
Object send21773;
Object smallint1479;
Object constant4227;
Object send21774;
Object method3118;
Object symbol3894;
Object methodclosure3118;
Object localvariable3100;
Object localvariable3101;
Object localvariable3102;
Object localvariable3103;
Object array2482;
Object send21775;
Object assign2667;
Object string2512;
Object constant4228;
Object send21776;
Object assign2668;
Object send21777;
Object assign2669;
Object send21778;
Object send21779;
Object send21780;
Object send21781;
Object symbol4192;
Object send21782;
Object assign2670;
Object string2513;
Object constant4229;
Object send21783;
Object assign2671;
Object send21784;
Object assign2672;
Object send21785;
Object send21786;
Object method3119;
Object symbol4019;
Object methodclosure3119;
Object method3120;
Object methodclosure3120;
Object localvariable3104;
Object array2483;
Object assign2673;
Object method3121;
Object symbol4018;
Object methodclosure3121;
Object classreference613;
Object send21787;
Object send21788;
Object send21789;
Object send21790;
Object send21791;
Object send21792;
Object method3122;
Object symbol3898;
Object methodclosure3122;
Object localvariable3105;
Object localvariable3106;
Object localvariable3107;
Object array2484;
Object symbol4193;
Object send21793;
Object assign2674;
Object string2514;
Object constant4230;
Object assign2675;
Object send21794;
Object assign2676;
Object send21795;
Object send21796;
Object send21797;
Object symbol4194;
Object send21798;
Object send21799;
Object send21800;
Object localvariable3108;
Object array2485;
Object smallint1480;
Object constant4231;
Object symbol4008;
Object constant4232;
Object send21801;
Object smallint1481;
Object constant4233;
Object symbol4010;
Object constant4234;
Object send21802;
Object smallint1482;
Object constant4235;
Object symbol4007;
Object constant4236;
Object send21803;
Object smallint1483;
Object constant4237;
Object symbol4011;
Object constant4238;
Object send21804;
Object send21805;
Object block1393;
Object smallint1484;
Object constant4239;
Object send21806;
Object send21807;
Object method3123;
Object symbol4006;
Object methodclosure3123;
Object send21808;
Object send21809;
Object method3124;
Object methodclosure3124;
Object method3125;
Object methodclosure3125;
Object method3126;
Object methodclosure3126;
Object method3127;
Object methodclosure3127;
Object method3128;
Object methodclosure3128;
Object localvariable3109;
Object array2486;
Object super274;
Object string2515;
Object constant4240;
Object send21810;
Object send21811;
Object send21812;
Object string2516;
Object constant4241;
Object send21813;
Object method3129;
Object methodclosure3129;
Object localvariable3110;
Object array2487;
Object assign2677;
Object method3130;
Object symbol4012;
Object methodclosure3130;
Object localvariable3111;
Object array2488;
Object assign2678;
Object method3131;
Object symbol4005;
Object methodclosure3131;
Object localvariable3112;
Object array2489;
Object assign2679;
Object method3132;
Object symbol4009;
Object methodclosure3132;
Object localvariable3113;
Object array2490;
Object assign2680;
Object method3133;
Object symbol4013;
Object methodclosure3133;
Object classreference614;
Object send21814;
Object send21815;
Object send21816;
Object send21817;
Object string2517;
Object constant4242;
Object send21818;
Object send21819;
Object send21820;
Object send21821;
Object send21822;
Object send21823;
Object send21824;
Object method3134;
Object symbol3851;
Object methodclosure3134;
Object localvariable3114;
Object localvariable3115;
Object localvariable3116;
Object array2491;
Object symbol4195;
Object send21825;
Object assign2681;
Object string2518;
Object constant4243;
Object send21826;
Object assign2682;
Object send21827;
Object send21828;
Object send21829;
Object send21830;
Object string2519;
Object constant4244;
Object send21831;
Object assign2683;
Object send21832;
Object assign2684;
Object send21833;
Object send21834;
Object method3135;
Object methodclosure3135;
Object method3136;
Object symbol4021;
Object methodclosure3136;
Object localvariable3117;
Object array2492;
Object assign2685;
Object method3137;
Object symbol4020;
Object methodclosure3137;
Object localvariable3118;
Object array2493;
Object assign2686;
Object method3138;
Object methodclosure3138;
Object classreference615;
Object send21835;
Object send21836;
Object send21837;
Object send21838;
Object send21839;
Object send21840;
Object send21841;
Object send21842;
Object string2520;
Object constant4245;
Object send21843;
Object send21844;
Object assign2687;
Object send21845;
Object send21846;
Object send21847;
Object send21848;
Object send21849;
Object send21850;
Object send21851;
Object send21852;
Object send21853;
Object send21854;
Object string2521;
Object constant4246;
Object send21855;
Object send21856;
Object assign2688;
Object send21857;
Object send21858;
Object send21859;
Object send21860;
Object send21861;
Object send21862;
Object send21863;
Object send21864;
Object send21865;
Object send21866;
Object string2522;
Object constant4247;
Object send21867;
Object send21868;
Object send21869;
Object send21870;
Object send21871;
Object method3139;
Object symbol3904;
Object methodclosure3139;
Object localvariable3119;
Object localvariable3120;
Object localvariable3121;
Object array2494;
Object symbol4196;
Object send21872;
Object assign2689;
Object string2523;
Object constant4248;
Object send21873;
Object assign2690;
Object send21874;
Object assign2691;
Object send21875;
Object send21876;
Object send21877;
Object send21878;
Object send21879;
Object string2524;
Object constant4249;
Object send21880;
Object send21881;
Object send21882;
Object smallint1485;
Object constant4250;
Object send21883;
Object string2525;
Object constant4251;
Object send21884;
Object assign2692;
Object send21885;
Object assign2693;
Object send21886;
Object send21887;
Object send21888;
Object send21889;
Object send21890;
Object string2526;
Object constant4252;
Object send21891;
Object send21892;
Object send21893;
Object smallint1486;
Object constant4253;
Object send21894;
Object string2527;
Object constant4254;
Object send21895;
Object assign2694;
Object send21896;
Object assign2695;
Object send21897;
Object send21898;
Object send21899;
Object send21900;
Object send21901;
Object string2528;
Object constant4255;
Object send21902;
Object send21903;
Object send21904;
Object smallint1487;
Object constant4256;
Object send21905;
Object method3140;
Object symbol3848;
Object methodclosure3140;
Object localvariable3122;
Object localvariable3123;
Object array2495;
Object symbol4197;
Object send21906;
Object assign2696;
Object string2529;
Object constant4257;
Object send21907;
Object assign2697;
Object send21908;
Object send21909;
Object string2530;
Object constant4258;
Object send21910;
Object send21911;
Object send21912;
Object smallint1488;
Object constant4259;
Object send21913;
Object string2531;
Object constant4260;
Object send21914;
Object assign2698;
Object send21915;
Object send21916;
Object send21917;
Object send21918;
Object send21919;
Object send21920;
Object smallint1489;
Object constant4261;
Object send21921;
Object method3141;
Object symbol3871;
Object methodclosure3141;
Object localvariable3124;
Object localvariable3125;
Object localvariable3126;
Object array2496;
Object send21922;
Object assign2699;
Object string2532;
Object constant4262;
Object assign2700;
Object send21923;
Object assign2701;
Object send21924;
Object send21925;
Object send21926;
Object send21927;
Object send21928;
Object send21929;
Object send21930;
Object send21931;
Object send21932;
Object send21933;
Object localvariable3127;
Object array2497;
Object variable153;
Object array2498;
Object symbol3998;
Object super275;
Object send21934;
Object block1394;
Object send21935;
Object symbol4017;
Object send21936;
Object block1395;
Object send21937;
Object method3142;
Object methodclosure3142;
Object localvariable3128;
Object array2499;
Object symbol4198;
Object send21938;
Object assign2702;
Object method3143;
Object symbol4016;
Object methodclosure3143;
Object super276;
Object send21939;
Object assign2703;
Object method3144;
Object methodclosure3144;
Object method3145;
Object methodclosure3145;
Object localvariable3129;
Object array2500;
Object variable154;
Object array2501;
Object send21940;
Object symbol4199;
Object localvariable3130;
Object array2502;
Object send21941;
Object send21942;
Object send21943;
Object send21944;
Object send21945;
Object send21946;
Object send21947;
Object block1396;
Object send21948;
Object block1397;
Object send21949;
Object block1398;
Object send21950;
Object method3146;
Object methodclosure3146;
Object classreference616;
Object send21951;
Object send21952;
Object send21953;
Object send21954;
Object smallint1490;
Object constant4263;
Object send21955;
Object send21956;
Object send21957;
Object send21958;
Object smallint1491;
Object constant4264;
Object send21959;
Object send21960;
Object send21961;
Object send21962;
Object smallint1492;
Object constant4265;
Object send21963;
Object method3147;
Object symbol3868;
Object methodclosure3147;
Object localvariable3131;
Object array2503;
Object symbol4200;
Object string2533;
Object constant4266;
Object symbol4201;
Object send21964;
Object send21965;
Object assign2704;
Object string2534;
Object constant4267;
Object send21966;
Object send21967;
Object send21968;
Object send21969;
Object send21970;
Object string2535;
Object constant4268;
Object send21971;
Object send21972;
Object send21973;
Object send21974;
Object method3148;
Object symbol3896;
Object methodclosure3148;
Object localvariable3132;
Object localvariable3133;
Object array2504;
Object send21975;
Object assign2705;
Object string2536;
Object constant4269;
Object send21976;
Object send21977;
Object send21978;
Object assign2706;
Object send21979;
Object send21980;
Object send21981;
Object send21982;
Object send21983;
Object send21984;
Object send21985;
Object send21986;
Object send21987;
Object send21988;
Object send21989;
Object send21990;
Object send21991;
Object send21992;
Object send21993;
Object send21994;
Object string2537;
Object constant4270;
Object send21995;
Object send21996;
Object send21997;
Object send21998;
Object send21999;
Object string2538;
Object constant4271;
Object send22000;
Object send22001;
Object send22002;
Object send22003;
Object string2539;
Object constant4272;
Object send22004;
Object send22005;
Object send22006;
Object send22007;
Object send22008;
Object send22009;
Object send22010;
Object send22011;
Object string2540;
Object constant4273;
Object send22012;
Object method3149;
Object symbol3888;
Object methodclosure3149;
Object localvariable3134;
Object localvariable3135;
Object array2505;
Object send22013;
Object assign2707;
Object string2541;
Object constant4274;
Object send22014;
Object assign2708;
Object send22015;
Object send22016;
Object send22017;
Object send22018;
Object send22019;
Object send22020;
Object send22021;
Object smallint1493;
Object constant4275;
Object send22022;
Object string2542;
Object constant4276;
Object send22023;
Object assign2709;
Object send22024;
Object send22025;
Object send22026;
Object send22027;
Object send22028;
Object send22029;
Object send22030;
Object smallint1494;
Object constant4277;
Object send22031;
Object string2543;
Object constant4278;
Object send22032;
Object assign2710;
Object send22033;
Object send22034;
Object send22035;
Object send22036;
Object send22037;
Object send22038;
Object send22039;
Object smallint1495;
Object constant4279;
Object send22040;
Object method3150;
Object symbol3861;
Object methodclosure3150;
Object localvariable3136;
Object localvariable3137;
Object localvariable3138;
Object array2506;
Object send22041;
Object assign2711;
Object string2544;
Object constant4280;
Object send22042;
Object assign2712;
Object send22043;
Object assign2713;
Object send22044;
Object send22045;
Object send22046;
Object send22047;
Object send22048;
Object send22049;
Object string2545;
Object constant4281;
Object send22050;
Object send22051;
Object send22052;
Object send22053;
Object send22054;
Object send22055;
Object send22056;
Object send22057;
Object send22058;
Object string2546;
Object constant4282;
Object send22059;
Object send22060;
Object send22061;
Object smallint1496;
Object constant4283;
Object send22062;
Object string2547;
Object constant4284;
Object send22063;
Object assign2714;
Object send22064;
Object send22065;
Object send22066;
Object send22067;
Object send22068;
Object send22069;
Object smallint1497;
Object constant4285;
Object send22070;
Object string2548;
Object constant4286;
Object send22071;
Object assign2715;
Object send22072;
Object assign2716;
Object send22073;
Object send22074;
Object send22075;
Object send22076;
Object send22077;
Object send22078;
Object string2549;
Object constant4287;
Object send22079;
Object send22080;
Object send22081;
Object send22082;
Object send22083;
Object string2550;
Object constant4288;
Object send22084;
Object send22085;
Object send22086;
Object send22087;
Object send22088;
Object send22089;
Object send22090;
Object smallint1498;
Object constant4289;
Object send22091;
Object method3151;
Object symbol3853;
Object methodclosure3151;
Object localvariable3139;
Object localvariable3140;
Object localvariable3141;
Object array2507;
Object symbol4202;
Object send22092;
Object assign2717;
Object string2551;
Object constant4290;
Object send22093;
Object assign2718;
Object send22094;
Object assign2719;
Object send22095;
Object send22096;
Object send22097;
Object send22098;
Object method3152;
Object methodclosure3152;
Object classreference617;
Object send22099;
Object send22100;
Object send22101;
Object send22102;
Object string2552;
Object constant4291;
Object send22103;
Object send22104;
Object send22105;
Object smallint1499;
Object constant4292;
Object send22106;
Object string2553;
Object constant4293;
Object send22107;
Object assign2720;
Object send22108;
Object send22109;
Object send22110;
Object send22111;
Object send22112;
Object send22113;
Object smallint1500;
Object constant4294;
Object send22114;
Object method3153;
Object symbol3881;
Object methodclosure3153;
Object localvariable3142;
Object localvariable3143;
Object localvariable3144;
Object array2508;
Object send22115;
Object assign2721;
Object string2554;
Object constant4295;
Object send22116;
Object assign2722;
Object send22117;
Object assign2723;
Object send22118;
Object send22119;
Object send22120;
Object send22121;
Object assign2724;
Object send22122;
Object send22123;
Object send22124;
Object send22125;
Object send22126;
Object send22127;
Object send22128;
Object send22129;
Object send22130;
Object send22131;
Object string2555;
Object constant4296;
Object send22132;
Object send22133;
Object assign2725;
Object send22134;
Object send22135;
Object send22136;
Object send22137;
Object send22138;
Object send22139;
Object send22140;
Object send22141;
Object send22142;
Object send22143;
Object string2556;
Object constant4297;
Object send22144;
Object send22145;
Object assign2726;
Object send22146;
Object send22147;
Object send22148;
Object send22149;
Object send22150;
Object send22151;
Object send22152;
Object send22153;
Object send22154;
Object send22155;
Object string2557;
Object constant4298;
Object send22156;
Object send22157;
Object send22158;
Object send22159;
Object send22160;
Object string2558;
Object constant4299;
Object send22161;
Object assign2727;
Object send22162;
Object assign2728;
Object send22163;
Object send22164;
Object send22165;
Object send22166;
Object assign2729;
Object send22167;
Object send22168;
Object send22169;
Object send22170;
Object send22171;
Object send22172;
Object send22173;
Object send22174;
Object send22175;
Object send22176;
Object string2559;
Object constant4300;
Object send22177;
Object send22178;
Object assign2730;
Object send22179;
Object send22180;
Object send22181;
Object send22182;
Object send22183;
Object send22184;
Object send22185;
Object send22186;
Object send22187;
Object send22188;
Object string2560;
Object constant4301;
Object send22189;
Object send22190;
Object assign2731;
Object send22191;
Object send22192;
Object send22193;
Object send22194;
Object send22195;
Object send22196;
Object send22197;
Object send22198;
Object send22199;
Object send22200;
Object string2561;
Object constant4302;
Object send22201;
Object send22202;
Object send22203;
Object send22204;
Object send22205;
Object method3154;
Object symbol3873;
Object methodclosure3154;
Object localvariable3145;
Object localvariable3146;
Object localvariable3147;
Object array2509;
Object symbol4203;
Object send22206;
Object assign2732;
Object string2562;
Object constant4303;
Object send22207;
Object assign2733;
Object send22208;
Object assign2734;
Object send22209;
Object send22210;
Object send22211;
Object send22212;
Object send22213;
Object send22214;
Object send22215;
Object send22216;
Object send22217;
Object send22218;
Object string2563;
Object constant4304;
Object send22219;
Object send22220;
Object assign2735;
Object send22221;
Object send22222;
Object send22223;
Object send22224;
Object send22225;
Object send22226;
Object send22227;
Object send22228;
Object send22229;
Object send22230;
Object string2564;
Object constant4305;
Object send22231;
Object send22232;
Object assign2736;
Object send22233;
Object send22234;
Object send22235;
Object send22236;
Object send22237;
Object send22238;
Object send22239;
Object send22240;
Object send22241;
Object send22242;
Object string2565;
Object constant4306;
Object send22243;
Object send22244;
Object send22245;
Object send22246;
Object send22247;
Object string2566;
Object constant4307;
Object send22248;
Object assign2737;
Object send22249;
Object assign2738;
Object send22250;
Object send22251;
Object send22252;
Object send22253;
Object send22254;
Object send22255;
Object send22256;
Object send22257;
Object send22258;
Object send22259;
Object string2567;
Object constant4308;
Object send22260;
Object send22261;
Object assign2739;
Object send22262;
Object send22263;
Object send22264;
Object send22265;
Object send22266;
Object send22267;
Object send22268;
Object send22269;
Object send22270;
Object send22271;
Object string2568;
Object constant4309;
Object send22272;
Object send22273;
Object assign2740;
Object send22274;
Object send22275;
Object send22276;
Object send22277;
Object send22278;
Object send22279;
Object send22280;
Object send22281;
Object send22282;
Object send22283;
Object string2569;
Object constant4310;
Object send22284;
Object send22285;
Object send22286;
Object send22287;
Object send22288;
Object method3155;
Object symbol3863;
Object methodclosure3155;
Object localvariable3148;
Object localvariable3149;
Object array2510;
Object symbol4204;
Object send22289;
Object assign2741;
Object string2570;
Object constant4311;
Object send22290;
Object assign2742;
Object send22291;
Object send22292;
Object string2571;
Object constant4312;
Object send22293;
Object send22294;
Object send22295;
Object smallint1501;
Object constant4313;
Object send22296;
Object string2572;
Object constant4314;
Object send22297;
Object assign2743;
Object send22298;
Object send22299;
Object string2573;
Object constant4315;
Object send22300;
Object send22301;
Object send22302;
Object smallint1502;
Object constant4316;
Object send22303;
Object string2574;
Object constant4317;
Object send22304;
Object assign2744;
Object send22305;
Object send22306;
Object send22307;
Object send22308;
Object send22309;
Object send22310;
Object smallint1503;
Object constant4318;
Object send22311;
Object method3156;
Object symbol3855;
Object methodclosure3156;
Object localvariable3150;
Object localvariable3151;
Object array2511;
Object symbol4205;
Object send22312;
Object assign2745;
Object string2575;
Object constant4319;
Object send22313;
Object assign2746;
Object send22314;
Object symbol4206;
Object constant4320;
Object send22315;
Object send22316;
Object send22317;
Object localvariable3152;
Object array2512;
Object smallint1504;
Object constant4321;
Object string2576;
Object constant4322;
Object send22318;
Object smallint1505;
Object constant4323;
Object string2577;
Object constant4324;
Object send22319;
Object smallint1506;
Object constant4325;
Object string2578;
Object constant4326;
Object send22320;
Object send22321;
Object block1399;
Object smallint1507;
Object constant4327;
Object send22322;
Object send22323;
Object send22324;
Object send22325;
Object send22326;
Object smallint1508;
Object constant4328;
Object send22327;
Object string2579;
Object constant4329;
Object send22328;
Object assign2747;
Object send22329;
Object send22330;
Object send22331;
Object send22332;
Object send22333;
Object method3157;
Object symbol3891;
Object methodclosure3157;
Object localvariable3153;
Object localvariable3154;
Object array2513;
Object send22334;
Object assign2748;
Object string2580;
Object constant4330;
Object send22335;
Object assign2749;
Object send22336;
Object send22337;
Object send22338;
Object send22339;
Object send22340;
Object send22341;
Object smallint1509;
Object constant4331;
Object send22342;
Object string2581;
Object constant4332;
Object send22343;
Object assign2750;
Object send22344;
Object send22345;
Object string2582;
Object constant4333;
Object send22346;
Object send22347;
Object send22348;
Object smallint1510;
Object constant4334;
Object send22349;
Object string2583;
Object constant4335;
Object send22350;
Object assign2751;
Object send22351;
Object send22352;
Object string2584;
Object constant4336;
Object send22353;
Object send22354;
Object send22355;
Object smallint1511;
Object constant4337;
Object send22356;
Object string2585;
Object constant4338;
Object send22357;
Object assign2752;
Object send22358;
Object send22359;
Object string2586;
Object constant4339;
Object send22360;
Object send22361;
Object send22362;
Object smallint1512;
Object constant4340;
Object send22363;
Object method3158;
Object symbol3875;
Object methodclosure3158;
Object localvariable3155;
Object localvariable3156;
Object localvariable3157;
Object localvariable3158;
Object array2514;
Object send22364;
Object assign2753;
Object string2587;
Object constant4341;
Object send22365;
Object assign2754;
Object send22366;
Object assign2755;
Object send22367;
Object send22368;
Object send22369;
Object send22370;
Object send22371;
Object assign2756;
Object string2588;
Object constant4342;
Object send22372;
Object assign2757;
Object send22373;
Object assign2758;
Object send22374;
Object send22375;
Object send22376;
Object send22377;
Object send22378;
Object send22379;
Object send22380;
Object send22381;
Object method3159;
Object symbol3901;
Object methodclosure3159;
Object localvariable3159;
Object localvariable3160;
Object localvariable3161;
Object array2515;
Object symbol4207;
Object send22382;
Object assign2759;
Object string2589;
Object constant4343;
Object send22383;
Object assign2760;
Object send22384;
Object assign2761;
Object send22385;
Object send22386;
Object send22387;
Object send22388;
Object send22389;
Object send22390;
Object send22391;
Object send22392;
Object send22393;
Object send22394;
Object send22395;
Object string2590;
Object constant4344;
Object send22396;
Object send22397;
Object assign2762;
Object send22398;
Object send22399;
Object send22400;
Object send22401;
Object send22402;
Object send22403;
Object send22404;
Object send22405;
Object send22406;
Object send22407;
Object send22408;
Object string2591;
Object constant4345;
Object send22409;
Object send22410;
Object send22411;
Object send22412;
Object send22413;
Object send22414;
Object send22415;
Object send22416;
Object string2592;
Object constant4346;
Object send22417;
Object send22418;
Object send22419;
Object smallint1513;
Object constant4347;
Object send22420;
Object string2593;
Object constant4348;
Object send22421;
Object assign2763;
Object send22422;
Object assign2764;
Object send22423;
Object send22424;
Object send22425;
Object send22426;
Object send22427;
Object string2594;
Object constant4349;
Object send22428;
Object send22429;
Object send22430;
Object smallint1514;
Object constant4350;
Object send22431;
Object method3160;
Object symbol3865;
Object methodclosure3160;
Object localvariable3162;
Object localvariable3163;
Object localvariable3164;
Object array2516;
Object symbol4208;
Object send22432;
Object assign2765;
Object string2595;
Object constant4351;
Object send22433;
Object assign2766;
Object send22434;
Object assign2767;
Object send22435;
Object send22436;
Object send22437;
Object send22438;
Object send22439;
Object string2596;
Object constant4352;
Object send22440;
Object send22441;
Object send22442;
Object smallint1515;
Object constant4353;
Object send22443;
Object string2597;
Object constant4354;
Object send22444;
Object assign2768;
Object send22445;
Object assign2769;
Object send22446;
Object send22447;
Object send22448;
Object send22449;
Object send22450;
Object string2598;
Object constant4355;
Object send22451;
Object send22452;
Object send22453;
Object string2599;
Object constant4356;
Object send22454;
Object send22455;
Object send22456;
Object smallint1516;
Object constant4357;
Object send22457;
Object method3161;
Object symbol3857;
Object methodclosure3161;
Object localvariable3165;
Object localvariable3166;
Object localvariable3167;
Object localvariable3168;
Object array2517;
Object symbol4209;
Object send22458;
Object assign2770;
Object string2600;
Object constant4358;
Object send22459;
Object assign2771;
Object send22460;
Object assign2772;
Object send22461;
Object send22462;
Object localvariable3169;
Object array2518;
Object assign2773;
Object method3162;
Object methodclosure3162;
Object method3163;
Object methodclosure3163;
Object classreference618;
Object send22463;
Object send22464;
Object send22465;
Object constant4359;
Object send22466;
Object send22467;
Object localvariable3170;
Object array2519;
Object smallint1517;
Object constant4360;
Object symbol4210;
Object constant4361;
Object send22468;
Object smallint1518;
Object constant4362;
Object symbol4211;
Object constant4363;
Object send22469;
Object smallint1519;
Object constant4364;
Object symbol4212;
Object constant4365;
Object send22470;
Object send22471;
Object block1400;
Object smallint1520;
Object constant4366;
Object send22472;
Object send22473;
Object send22474;
Object send22475;
Object send22476;
Object assign2774;
Object send22477;
Object send22478;
Object send22479;
Object send22480;
Object smallint1521;
Object constant4367;
Object send22481;
Object assign2775;
Object send22482;
Object send22483;
Object send22484;
Object send22485;
Object smallint1522;
Object constant4368;
Object send22486;
Object assign2776;
Object send22487;
Object send22488;
Object send22489;
Object send22490;
Object send22491;
Object send22492;
Object send22493;
Object string2601;
Object constant4369;
Object send22494;
Object assign2777;
Object send22495;
Object assign2778;
Object send22496;
Object send22497;
Object classreference619;
Object send22498;
Object send22499;
Object send22500;
Object send22501;
Object string2602;
Object constant4370;
Object send22502;
Object send22503;
Object send22504;
Object smallint1523;
Object constant4371;
Object send22505;
Object string2603;
Object constant4372;
Object send22506;
Object assign2779;
Object send22507;
Object assign2780;
Object send22508;
Object send22509;
Object send22510;
Object send22511;
Object send22512;
Object constant4373;
Object send22513;
Object send22514;
Object localvariable3171;
Object array2520;
Object smallint1524;
Object constant4374;
Object string2604;
Object constant4375;
Object send22515;
Object smallint1525;
Object constant4376;
Object string2605;
Object constant4377;
Object send22516;
Object smallint1526;
Object constant4378;
Object string2606;
Object constant4379;
Object send22517;
Object send22518;
Object block1401;
Object smallint1527;
Object constant4380;
Object send22519;
Object send22520;
Object send22521;
Object send22522;
Object send22523;
Object send22524;
Object send22525;
Object method3164;
Object symbol3885;
Object methodclosure3164;
Object localvariable3172;
Object localvariable3173;
Object localvariable3174;
Object localvariable3175;
Object array2521;
Object symbol4213;
Object send22526;
Object assign2781;
Object string2607;
Object constant4381;
Object send22527;
Object assign2782;
Object send22528;
Object assign2783;
Object send22529;
Object send22530;
Object send22531;
Object send22532;
Object send22533;
Object send22534;
Object localvariable3176;
Object array2522;
Object smallint1528;
Object constant4382;
Object string2608;
Object constant4383;
Object send22535;
Object smallint1529;
Object constant4384;
Object string2609;
Object constant4385;
Object send22536;
Object smallint1530;
Object constant4386;
Object string2610;
Object constant4387;
Object send22537;
Object send22538;
Object block1402;
Object smallint1531;
Object constant4388;
Object send22539;
Object send22540;
Object send22541;
Object send22542;
Object send22543;
Object send22544;
Object localvariable3177;
Object array2523;
Object assign2784;
Object method3165;
Object symbol4001;
Object methodclosure3165;
Object symbol4214;
Object string2611;
Object constant4389;
Object send22545;
Object string2612;
Object constant4390;
Object send22546;
Object method3166;
Object symbol3995;
Object methodclosure3166;
Object super277;
Object send22547;
Object assign2785;
Object method3167;
Object methodclosure3167;
Object method3168;
Object methodclosure3168;
Object classreference620;
Object send22548;
Object send22549;
Object send22550;
Object send22551;
Object string2613;
Object constant4391;
Object send22552;
Object send22553;
Object send22554;
Object assign2786;
Object send22555;
Object send22556;
Object send22557;
Object send22558;
Object smallint1532;
Object constant4392;
Object send22559;
Object assign2787;
Object send22560;
Object send22561;
Object send22562;
Object send22563;
Object smallint1533;
Object constant4393;
Object send22564;
Object assign2788;
Object send22565;
Object send22566;
Object send22567;
Object send22568;
Object send22569;
Object send22570;
Object send22571;
Object send22572;
Object send22573;
Object smallint1534;
Object constant4394;
Object send22574;
Object method3169;
Object symbol3893;
Object methodclosure3169;
Object localvariable3178;
Object localvariable3179;
Object localvariable3180;
Object array2524;
Object send22575;
Object assign2789;
Object string2614;
Object constant4395;
Object assign2790;
Object send22576;
Object assign2791;
Object send22577;
Object send22578;
Object send22579;
Object send22580;
Object send22581;
Object send22582;
Object send22583;
Object send22584;
Object send22585;
Object send22586;
Object send22587;
Object send22588;
Object send22589;
Object send22590;
Object smallint1535;
Object constant4396;
Object send22591;
Object send22592;
Object send22593;
Object send22594;
Object smallint1536;
Object constant4397;
Object send22595;
Object send22596;
Object send22597;
Object send22598;
Object smallint1537;
Object constant4398;
Object send22599;
Object method3170;
Object symbol3897;
Object methodclosure3170;
Object localvariable3181;
Object localvariable3182;
Object localvariable3183;
Object array2525;
Object symbol4215;
Object send22600;
Object assign2792;
Object string2615;
Object constant4399;
Object send22601;
Object assign2793;
Object send22602;
Object send22603;
Object send22604;
Object send22605;
Object send22606;
Object send22607;
Object smallint1538;
Object constant4400;
Object send22608;
Object string2616;
Object constant4401;
Object send22609;
Object assign2794;
Object send22610;
Object assign2795;
Object send22611;
Object send22612;
Object method3171;
Object symbol4124;
Object methodclosure3171;
Object method3172;
Object methodclosure3172;
Object localvariable3184;
Object array2526;
Object send22613;
Object send22614;
Object send22615;
Object send22616;
Object send22617;
Object block1403;
Object send22618;
Object method3173;
Object methodclosure3173;
Object localvariable3185;
Object array2527;
Object symbol4216;
Object send22619;
Object assign2796;
Object method3174;
Object symbol4123;
Object methodclosure3174;
Object classreference621;
Object send22620;
Object send22621;
Object send22622;
Object method3175;
Object symbol4126;
Object methodclosure3175;
Object localvariable3186;
Object array2528;
Object assign2797;
Object method3176;
Object methodclosure3176;
Object classreference622;
Object send22623;
Object send22624;
Object send22625;
Object character18;
Object constant4402;
Object send22626;
Object send22627;
Object send22628;
Object smallint1539;
Object constant4403;
Object send22629;
Object method3177;
Object symbol3903;
Object methodclosure3177;
Object localvariable3187;
Object localvariable3188;
Object localvariable3189;
Object localvariable3190;
Object array2529;
Object symbol4217;
Object send22630;
Object assign2798;
Object string2617;
Object constant4404;
Object send22631;
Object assign2799;
Object send22632;
Object assign2800;
Object send22633;
Object send22634;
Object method3178;
Object methodclosure3178;
Object localvariable3191;
Object array2530;
Object assign2801;
Object method3179;
Object methodclosure3179;
Object method3180;
Object symbol3989;
Object methodclosure3180;
Object localvariable3192;
Object array2531;
Object assign2802;
Object method3181;
Object symbol3991;
Object methodclosure3181;
Object classreference623;
Object send22635;
Object send22636;
Object send22637;
Object send22638;
Object send22639;
Object send22640;
Object send22641;
Object send22642;
Object smallint1540;
Object constant4405;
Object send22643;
Object send22644;
Object smallint1541;
Object constant4406;
Object send22645;
Object assign2803;
Object send22646;
Object send22647;
Object send22648;
Object send22649;
Object smallint1542;
Object constant4407;
Object send22650;
Object assign2804;
Object send22651;
Object send22652;
Object send22653;
Object send22654;
Object smallint1543;
Object constant4408;
Object send22655;
Object assign2805;
Object send22656;
Object send22657;
Object send22658;
Object send22659;
Object smallint1544;
Object constant4409;
Object send22660;
Object assign2806;
Object send22661;
Object send22662;
Object send22663;
Object method3182;
Object symbol3847;
Object methodclosure3182;
Object localvariable3193;
Object localvariable3194;
Object array2532;
Object symbol4218;
Object send22664;
Object assign2807;
Object string2618;
Object constant4410;
Object send22665;
Object assign2808;
Object send22666;
Object send22667;
Object string2619;
Object constant4411;
Object send22668;
Object send22669;
Object send22670;
Object smallint1545;
Object constant4412;
Object send22671;
Object string2620;
Object constant4413;
Object send22672;
Object assign2809;
Object send22673;
Object send22674;
Object send22675;
Object send22676;
Object send22677;
Object send22678;
Object smallint1546;
Object constant4414;
Object send22679;
Object method3183;
Object symbol3870;
Object methodclosure3183;
Object localvariable3195;
Object localvariable3196;
Object localvariable3197;
Object array2533;
Object send22680;
Object assign2810;
Object string2621;
Object constant4415;
Object send22681;
Object assign2811;
Object send22682;
Object assign2812;
Object send22683;
Object send22684;
Object send22685;
Object send22686;
Object send22687;
Object send22688;
Object send22689;
Object send22690;
Object send22691;
Object send22692;
Object send22693;
Object string2622;
Object constant4416;
Object send22694;
Object send22695;
Object assign2813;
Object send22696;
Object send22697;
Object send22698;
Object send22699;
Object send22700;
Object send22701;
Object send22702;
Object send22703;
Object send22704;
Object send22705;
Object send22706;
Object string2623;
Object constant4417;
Object send22707;
Object send22708;
Object send22709;
Object send22710;
Object send22711;
Object send22712;
Object send22713;
Object send22714;
Object string2624;
Object constant4418;
Object send22715;
Object send22716;
Object send22717;
Object smallint1547;
Object constant4419;
Object send22718;
Object string2625;
Object constant4420;
Object send22719;
Object assign2814;
Object send22720;
Object assign2815;
Object send22721;
Object send22722;
Object send22723;
Object send22724;
Object send22725;
Object string2626;
Object constant4421;
Object send22726;
Object send22727;
Object send22728;
Object smallint1548;
Object constant4422;
Object send22729;
Object string2627;
Object constant4423;
Object send22730;
Object assign2816;
Object send22731;
Object assign2817;
Object send22732;
Object send22733;
Object send22734;
Object send22735;
Object send22736;
Object send22737;
Object string2628;
Object constant4424;
Object send22738;
Object send22739;
Object send22740;
Object send22741;
Object send22742;
Object send22743;
Object send22744;
Object send22745;
Object string2629;
Object constant4425;
Object send22746;
Object send22747;
Object assign2818;
Object send22748;
Object send22749;
Object send22750;
Object send22751;
Object send22752;
Object send22753;
Object string2630;
Object constant4426;
Object send22754;
Object send22755;
Object send22756;
Object send22757;
Object send22758;
Object send22759;
Object send22760;
Object send22761;
Object string2631;
Object constant4427;
Object send22762;
Object send22763;
Object send22764;
Object send22765;
Object send22766;
Object send22767;
Object send22768;
Object send22769;
Object string2632;
Object constant4428;
Object send22770;
Object send22771;
Object send22772;
Object smallint1549;
Object constant4429;
Object send22773;
Object method3184;
Object symbol3867;
Object methodclosure3184;
Object localvariable3198;
Object localvariable3199;
Object array2534;
Object symbol4219;
Object send22774;
Object assign2819;
Object string2633;
Object constant4430;
Object send22775;
Object assign2820;
Object send22776;
Object send22777;
Object send22778;
Object string2634;
Object constant4431;
Object send22779;
Object send22780;
Object send22781;
Object smallint1550;
Object constant4432;
Object send22782;
Object string2635;
Object constant4433;
Object send22783;
Object assign2821;
Object send22784;
Object send22785;
Object send22786;
Object string2636;
Object constant4434;
Object send22787;
Object send22788;
Object send22789;
Object smallint1551;
Object constant4435;
Object send22790;
Object string2637;
Object constant4436;
Object send22791;
Object assign2822;
Object send22792;
Object send22793;
Object send22794;
Object string2638;
Object constant4437;
Object send22795;
Object send22796;
Object send22797;
Object smallint1552;
Object constant4438;
Object send22798;
Object string2639;
Object constant4439;
Object send22799;
Object assign2823;
Object send22800;
Object send22801;
Object send22802;
Object string2640;
Object constant4440;
Object send22803;
Object send22804;
Object send22805;
Object smallint1553;
Object constant4441;
Object send22806;
Object method3185;
Object symbol3887;
Object methodclosure3185;
Object localvariable3200;
Object localvariable3201;
Object localvariable3202;
Object array2535;
Object symbol4220;
Object send22807;
Object assign2824;
Object string2641;
Object constant4442;
Object send22808;
Object assign2825;
Object send22809;
Object assign2826;
Object send22810;
Object send22811;
Object send22812;
Object send22813;
Object send22814;
Object string2642;
Object constant4443;
Object send22815;
Object send22816;
Object send22817;
Object send22818;
Object send22819;
Object smallint1554;
Object constant4444;
Object send22820;
Object send22821;
Object send22822;
Object send22823;
Object send22824;
Object string2643;
Object constant4445;
Object send22825;
Object send22826;
Object send22827;
Object send22828;
Object smallint1555;
Object constant4446;
Object send22829;
Object string2644;
Object constant4447;
Object send22830;
Object assign2827;
Object send22831;
Object send22832;
Object send22833;
Object send22834;
Object send22835;
Object send22836;
Object smallint1556;
Object constant4448;
Object send22837;
Object string2645;
Object constant4449;
Object send22838;
Object assign2828;
Object send22839;
Object assign2829;
Object send22840;
Object send22841;
Object send22842;
Object send22843;
Object send22844;
Object symbol4221;
Object string2646;
Object constant4450;
Object string2647;
Object constant4451;
Object send22845;
Object send22846;
Object send22847;
Object send22848;
Object send22849;
Object smallint1557;
Object constant4452;
Object send22850;
Object send22851;
Object send22852;
Object send22853;
Object send22854;
Object string2648;
Object constant4453;
Object send22855;
Object send22856;
Object send22857;
Object symbol4222;
Object send22858;
Object send22859;
Object send22860;
Object string2649;
Object constant4454;
Object send22861;
Object send22862;
Object send22863;
Object send22864;
Object smallint1558;
Object constant4455;
Object send22865;
Object method3186;
Object symbol3860;
Object methodclosure3186;
Object localvariable3203;
Object localvariable3204;
Object localvariable3205;
Object array2536;
Object send22866;
Object assign2830;
Object string2650;
Object constant4456;
Object send22867;
Object assign2831;
Object send22868;
Object assign2832;
Object send22869;
Object send22870;
Object send22871;
Object send22872;
Object send22873;
Object send22874;
Object send22875;
Object send22876;
Object send22877;
Object send22878;
Object string2651;
Object constant4457;
Object send22879;
Object send22880;
Object assign2833;
Object send22881;
Object send22882;
Object send22883;
Object send22884;
Object send22885;
Object send22886;
Object send22887;
Object send22888;
Object send22889;
Object send22890;
Object string2652;
Object constant4458;
Object send22891;
Object send22892;
Object assign2834;
Object send22893;
Object send22894;
Object send22895;
Object send22896;
Object send22897;
Object send22898;
Object send22899;
Object send22900;
Object send22901;
Object send22902;
Object string2653;
Object constant4459;
Object send22903;
Object send22904;
Object send22905;
Object send22906;
Object send22907;
Object method3187;
Object symbol3899;
Object methodclosure3187;
Object localvariable3206;
Object localvariable3207;
Object localvariable3208;
Object array2537;
Object symbol4223;
Object send22908;
Object assign2835;
Object string2654;
Object constant4460;
Object send22909;
Object assign2836;
Object send22910;
Object assign2837;
Object send22911;
Object send22912;
Object method3188;
Object methodclosure3188;
Object localvariable3209;
Object array2538;
Object assign2838;
Object method3189;
Object methodclosure3189;
Object send22913;
Object localvariable3210;
Object array2539;
Object send22914;
Object send22915;
Object block1404;
Object send22916;
Object block1405;
Object send22917;
Object method3190;
Object methodclosure3190;
Object localvariable3211;
Object array2540;
Object assign2839;
Object method3191;
Object methodclosure3191;
Object super278;
Object send22918;
Object send22919;
Object send22920;
Object send22921;
Object send22922;
Object send22923;
Object method3192;
Object methodclosure3192;
Object method3193;
Object methodclosure3193;
Object method3194;
Object methodclosure3194;
Object localvariable3212;
Object array2541;
Object assign2840;
Object method3195;
Object methodclosure3195;
Object classreference624;
Object send22924;
Object send22925;
Object send22926;
Object send22927;
Object smallint1559;
Object constant4461;
Object send22928;
Object send22929;
Object send22930;
Object send22931;
Object smallint1560;
Object constant4462;
Object send22932;
Object send22933;
Object send22934;
Object send22935;
Object smallint1561;
Object constant4463;
Object send22936;
Object string2655;
Object constant4464;
Object send22937;
Object assign2841;
Object send22938;
Object assign2842;
Object send22939;
Object send22940;
Object send22941;
Object send22942;
Object send22943;
Object send22944;
Object smallint1562;
Object constant4465;
Object send22945;
Object send22946;
Object send22947;
Object send22948;
Object smallint1563;
Object constant4466;
Object send22949;
Object send22950;
Object send22951;
Object send22952;
Object smallint1564;
Object constant4467;
Object send22953;
Object string2656;
Object constant4468;
Object send22954;
Object assign2843;
Object send22955;
Object assign2844;
Object send22956;
Object send22957;
Object send22958;
Object send22959;
Object send22960;
Object send22961;
Object smallint1565;
Object constant4469;
Object send22962;
Object send22963;
Object send22964;
Object send22965;
Object smallint1566;
Object constant4470;
Object send22966;
Object send22967;
Object send22968;
Object send22969;
Object smallint1567;
Object constant4471;
Object send22970;
Object string2657;
Object constant4472;
Object send22971;
Object assign2845;
Object send22972;
Object assign2846;
Object send22973;
Object send22974;
Object send22975;
Object send22976;
Object send22977;
Object send22978;
Object smallint1568;
Object constant4473;
Object send22979;
Object send22980;
Object send22981;
Object send22982;
Object smallint1569;
Object constant4474;
Object send22983;
Object send22984;
Object send22985;
Object send22986;
Object smallint1570;
Object constant4475;
Object send22987;
Object string2658;
Object constant4476;
Object send22988;
Object assign2847;
Object send22989;
Object assign2848;
Object send22990;
Object send22991;
Object send22992;
Object send22993;
Object send22994;
Object send22995;
Object smallint1571;
Object constant4477;
Object send22996;
Object send22997;
Object send22998;
Object send22999;
Object smallint1572;
Object constant4478;
Object send23000;
Object send23001;
Object send23002;
Object send23003;
Object smallint1573;
Object constant4479;
Object send23004;
Object string2659;
Object constant4480;
Object send23005;
Object assign2849;
Object send23006;
Object assign2850;
Object send23007;
Object send23008;
Object send23009;
Object send23010;
Object send23011;
Object send23012;
Object smallint1574;
Object constant4481;
Object send23013;
Object send23014;
Object send23015;
Object send23016;
Object smallint1575;
Object constant4482;
Object send23017;
Object send23018;
Object send23019;
Object send23020;
Object smallint1576;
Object constant4483;
Object send23021;
Object string2660;
Object constant4484;
Object send23022;
Object assign2851;
Object send23023;
Object assign2852;
Object send23024;
Object send23025;
Object send23026;
Object send23027;
Object send23028;
Object send23029;
Object smallint1577;
Object constant4485;
Object send23030;
Object send23031;
Object send23032;
Object send23033;
Object smallint1578;
Object constant4486;
Object send23034;
Object send23035;
Object send23036;
Object send23037;
Object smallint1579;
Object constant4487;
Object send23038;
Object method3196;
Object symbol3880;
Object methodclosure3196;
Object localvariable3213;
Object localvariable3214;
Object array2542;
Object send23039;
Object assign2853;
Object string2661;
Object constant4488;
Object send23040;
Object assign2854;
Object send23041;
Object constant4489;
Object send23042;
Object send23043;
Object send23044;
Object localvariable3215;
Object array2543;
Object smallint1580;
Object constant4490;
Object string2662;
Object constant4491;
Object send23045;
Object smallint1581;
Object constant4492;
Object string2663;
Object constant4493;
Object send23046;
Object smallint1582;
Object constant4494;
Object string2664;
Object constant4495;
Object send23047;
Object send23048;
Object block1406;
Object smallint1583;
Object constant4496;
Object send23049;
Object send23050;
Object send23051;
Object send23052;
Object send23053;
Object smallint1584;
Object constant4497;
Object send23054;
Object string2665;
Object constant4498;
Object send23055;
Object assign2855;
Object send23056;
Object constant4499;
Object send23057;
Object send23058;
Object send23059;
Object localvariable3216;
Object array2544;
Object smallint1585;
Object constant4500;
Object string2666;
Object constant4501;
Object send23060;
Object smallint1586;
Object constant4502;
Object string2667;
Object constant4503;
Object send23061;
Object smallint1587;
Object constant4504;
Object string2668;
Object constant4505;
Object send23062;
Object send23063;
Object block1407;
Object smallint1588;
Object constant4506;
Object send23064;
Object send23065;
Object send23066;
Object send23067;
Object send23068;
Object smallint1589;
Object constant4507;
Object send23069;
Object method3197;
Object symbol3849;
Object methodclosure3197;
Object localvariable3217;
Object localvariable3218;
Object localvariable3219;
Object array2545;
Object send23070;
Object assign2856;
Object string2669;
Object constant4508;
Object assign2857;
Object send23071;
Object assign2858;
Object send23072;
Object send23073;
Object send23074;
Object send23075;
Object send23076;
Object send23077;
Object send23078;
Object send23079;
Object send23080;
Object send23081;
Object string2670;
Object constant4509;
Object send23082;
Object method3198;
Object symbol3869;
Object methodclosure3198;
Object localvariable3220;
Object localvariable3221;
Object localvariable3222;
Object localvariable3223;
Object array2546;
Object symbol4224;
Object send23083;
Object assign2859;
Object string2671;
Object constant4510;
Object send23084;
Object assign2860;
Object send23085;
Object assign2861;
Object send23086;
Object send23087;
Object smallint1590;
Object constant4511;
Object send23088;
Object send23089;
Object send23090;
Object send23091;
Object send23092;
Object send23093;
Object smallint1591;
Object constant4512;
Object send23094;
Object smallint1592;
Object constant4513;
Object send23095;
Object assign2862;
Object send23096;
Object send23097;
Object send23098;
Object send23099;
Object send23100;
Object string2672;
Object constant4514;
Object send23101;
Object smallint1593;
Object constant4515;
Object send23102;
Object assign2863;
Object send23103;
Object send23104;
Object send23105;
Object send23106;
Object send23107;
Object string2673;
Object constant4516;
Object send23108;
Object string2674;
Object constant4517;
Object send23109;
Object assign2864;
Object send23110;
Object assign2865;
Object send23111;
Object send23112;
Object smallint1594;
Object constant4518;
Object send23113;
Object send23114;
Object send23115;
Object send23116;
Object send23117;
Object send23118;
Object smallint1595;
Object constant4519;
Object send23119;
Object send23120;
Object assign2866;
Object send23121;
Object send23122;
Object send23123;
Object send23124;
Object send23125;
Object string2675;
Object constant4520;
Object send23126;
Object smallint1596;
Object constant4521;
Object send23127;
Object assign2867;
Object send23128;
Object send23129;
Object send23130;
Object send23131;
Object send23132;
Object string2676;
Object constant4522;
Object send23133;
Object method3199;
Object symbol3842;
Object methodclosure3199;
Object method3200;
Object symbol3854;
Object methodclosure3200;
Object localvariable3224;
Object localvariable3225;
Object localvariable3226;
Object array2547;
Object send23134;
Object assign2868;
Object string2677;
Object constant4523;
Object send23135;
Object assign2869;
Object send23136;
Object assign2870;
Object send23137;
Object send23138;
Object send23139;
Object send23140;
Object send23141;
Object send23142;
Object send23143;
Object send23144;
Object send23145;
Object send23146;
Object string2678;
Object constant4524;
Object send23147;
Object send23148;
Object assign2871;
Object send23149;
Object send23150;
Object send23151;
Object send23152;
Object send23153;
Object send23154;
Object send23155;
Object send23156;
Object send23157;
Object send23158;
Object string2679;
Object constant4525;
Object send23159;
Object send23160;
Object assign2872;
Object send23161;
Object send23162;
Object send23163;
Object send23164;
Object send23165;
Object send23166;
Object send23167;
Object send23168;
Object send23169;
Object send23170;
Object string2680;
Object constant4526;
Object send23171;
Object send23172;
Object send23173;
Object send23174;
Object send23175;
Object method3201;
Object symbol3882;
Object methodclosure3201;
Object localvariable3227;
Object localvariable3228;
Object localvariable3229;
Object array2548;
Object symbol4225;
Object send23176;
Object assign2873;
Object string2681;
Object constant4527;
Object send23177;
Object assign2874;
Object send23178;
Object assign2875;
Object send23179;
Object send23180;
Object send23181;
Object send23182;
Object send23183;
Object send23184;
Object send23185;
Object send23186;
Object send23187;
Object send23188;
Object send23189;
Object string2682;
Object constant4528;
Object send23190;
Object send23191;
Object assign2876;
Object send23192;
Object send23193;
Object send23194;
Object send23195;
Object send23196;
Object send23197;
Object send23198;
Object send23199;
Object send23200;
Object send23201;
Object send23202;
Object string2683;
Object constant4529;
Object send23203;
Object send23204;
Object send23205;
Object send23206;
Object send23207;
Object send23208;
Object send23209;
Object send23210;
Object string2684;
Object constant4530;
Object send23211;
Object send23212;
Object send23213;
Object smallint1597;
Object constant4531;
Object send23214;
Object string2685;
Object constant4532;
Object send23215;
Object assign2877;
Object send23216;
Object send23217;
Object send23218;
Object send23219;
Object method3202;
Object symbol3874;
Object methodclosure3202;
Object string2686;
Object constant4533;
Object symbol4226;
Object send23220;
Object method3203;
Object symbol4041;
Object methodclosure3203;
Object symbol4227;
Object string2687;
Object constant4534;
Object string2688;
Object constant4535;
Object send23221;
Object send23222;
Object send23223;
Object symbol4228;
Object send23224;
Object send23225;
Object send23226;
Object send23227;
Object send23228;
Object send23229;
Object send23230;
Object send23231;
Object send23232;
Object string2689;
Object constant4536;
Object send23233;
Object send23234;
Object send23235;
Object localvariable3230;
Object array2549;
Object localvariable3231;
Object array2550;
Object send23236;
Object send23237;
Object block1408;
Object send23238;
Object send23239;
Object smallint1598;
Object constant4537;
Object send23240;
Object send23241;
Object block1409;
Object send23242;
Object send23243;
Object smallint1599;
Object constant4538;
Object send23244;
Object send23245;
Object block1410;
Object send23246;
Object send23247;
Object block1411;
Object send23248;
Object method3204;
Object symbol4053;
Object methodclosure3204;
Object string2690;
Object constant4539;
Object send23249;
Object send23250;
Object send23251;
Object localvariable3232;
Object array2551;
Object smallint1600;
Object constant4540;
Object send23252;
Object send23253;
Object send23254;
Object block1412;
Object send23255;
Object method3205;
Object symbol4081;
Object methodclosure3205;
Object super279;
Object send23256;
Object assign2878;
Object send23257;
Object assign2879;
Object smallint1601;
Object constant4541;
Object assign2880;
Object method3206;
Object methodclosure3206;
Object string2691;
Object constant4542;
Object send23258;
Object string2692;
Object constant4543;
Object send23259;
Object send23260;
Object method3207;
Object symbol4023;
Object methodclosure3207;
Object string2693;
Object constant4544;
Object send23261;
Object localvariable3233;
Object array2552;
Object send23262;
Object symbol3996;
Object send23263;
Object block1413;
Object send23264;
Object method3208;
Object symbol4063;
Object methodclosure3208;
Object string2694;
Object constant4545;
Object symbol4229;
Object send23265;
Object send23266;
Object send23267;
Object send23268;
Object send23269;
Object send23270;
Object send23271;
Object send23272;
Object send23273;
Object send23274;
Object send23275;
Object localvariable3234;
Object array2553;
Object localvariable3235;
Object array2554;
Object send23276;
Object send23277;
Object smallint1602;
Object constant4546;
Object send23278;
Object send23279;
Object block1414;
Object send23280;
Object send23281;
Object smallint1603;
Object constant4547;
Object send23282;
Object send23283;
Object smallint1604;
Object constant4548;
Object send23284;
Object send23285;
Object send23286;
Object block1415;
Object send23287;
Object send23288;
Object block1416;
Object send23289;
Object send23290;
Object send23291;
Object method3209;
Object symbol4091;
Object methodclosure3209;
Object string2695;
Object constant4549;
Object symbol4230;
Object send23292;
Object symbol4231;
Object send23293;
Object symbol4232;
Object send23294;
Object symbol4233;
Object send23295;
Object send23296;
Object send23297;
Object send23298;
Object symbol4234;
Object send23299;
Object send23300;
Object method3210;
Object symbol4075;
Object methodclosure3210;
Object send23301;
Object send23302;
Object send23303;
Object send23304;
Object method3211;
Object symbol4045;
Object methodclosure3211;
Object string2696;
Object constant4550;
Object send23305;
Object symbol4235;
Object send23306;
Object send23307;
Object send23308;
Object send23309;
Object send23310;
Object send23311;
Object method3212;
Object symbol4057;
Object methodclosure3212;
Object constant4551;
Object string2697;
Object constant4552;
Object send23312;
Object block1417;
Object send23313;
Object method3213;
Object symbol4085;
Object methodclosure3213;
Object localvariable3236;
Object array2555;
Object variable155;
Object array2556;
Object symbol4236;
Object send23314;
Object send23315;
Object block1418;
Object send23316;
Object send23317;
Object block1419;
Object send23318;
Object method3214;
Object symbol4027;
Object methodclosure3214;
Object localvariable3237;
Object array2557;
Object string2698;
Object constant4553;
Object send23319;
Object symbol4237;
Object send23320;
Object send23321;
Object send23322;
Object localvariable3238;
Object array2558;
Object send23323;
Object assign2881;
Object localvariable3239;
Object array2559;
Object send23324;
Object send23325;
Object send23326;
Object send23327;
Object symbol4032;
Object smallint1605;
Object constant4554;
Object send23328;
Object send23329;
Object send23330;
Object block1420;
Object send23331;
Object send23332;
Object send23333;
Object send23334;
Object block1421;
Object send23335;
Object method3215;
Object symbol4050;
Object methodclosure3215;
Object string2699;
Object constant4555;
Object send23336;
Object send23337;
Object send23338;
Object localvariable3240;
Object array2560;
Object localvariable3241;
Object array2561;
Object send23339;
Object send23340;
Object send23341;
Object smallint1606;
Object constant4556;
Object send23342;
Object send23343;
Object block1422;
Object send23344;
Object send23345;
Object block1423;
Object send23346;
Object method3216;
Object symbol4039;
Object methodclosure3216;
Object string2700;
Object constant4557;
Object send23347;
Object send23348;
Object send23349;
Object send23350;
Object localvariable3242;
Object array2562;
Object localvariable3243;
Object array2563;
Object localvariable3244;
Object array2564;
Object send23351;
Object send23352;
Object block1424;
Object send23353;
Object send23354;
Object send23355;
Object constant4558;
Object send23356;
Object send23357;
Object send23358;
Object constant4559;
Object send23359;
Object send23360;
Object block1425;
Object send23361;
Object send23362;
Object block1426;
Object send23363;
Object method3217;
Object symbol4067;
Object methodclosure3217;
Object string2701;
Object constant4560;
Object send23364;
Object send23365;
Object localvariable3245;
Object array2565;
Object localvariable3246;
Object array2566;
Object string2702;
Object constant4561;
Object localvariable3247;
Object localvariable3248;
Object array2567;
Object send23366;
Object block1427;
Object send23367;
Object send23368;
Object string2703;
Object constant4562;
Object send23369;
Object block1428;
Object send23370;
Object send23371;
Object block1429;
Object send23372;
Object method3218;
Object symbol4095;
Object methodclosure3218;
Object localvariable3249;
Object array2568;
Object variable156;
Object array2569;
Object string2704;
Object constant4563;
Object send23373;
Object send23374;
Object send23375;
Object block1430;
Object send23376;
Object string2705;
Object constant4564;
Object send23377;
Object send23378;
Object send23379;
Object block1431;
Object send23380;
Object send23381;
Object send23382;
Object block1432;
Object send23383;
Object method3219;
Object methodclosure3219;
Object string2706;
Object constant4565;
Object string2707;
Object constant4566;
Object send23384;
Object send23385;
Object send23386;
Object send23387;
Object localvariable3250;
Object array2570;
Object send23388;
Object send23389;
Object send23390;
Object block1433;
Object send23391;
Object method3220;
Object symbol4060;
Object methodclosure3220;
Object send23392;
Object method3221;
Object symbol4049;
Object methodclosure3221;
Object localvariable3251;
Object array2571;
Object string2708;
Object constant4567;
Object send23393;
Object send23394;
Object send23395;
Object symbol4238;
Object send23396;
Object send23397;
Object send23398;
Object symbol4239;
Object send23399;
Object send23400;
Object send23401;
Object send23402;
Object localvariable3252;
Object array2572;
Object smallint1607;
Object constant4568;
Object send23403;
Object symbol4240;
Object send23404;
Object send23405;
Object localvariable3253;
Object array2573;
Object send23406;
Object send23407;
Object send23408;
Object smallint1608;
Object constant4569;
Object send23409;
Object send23410;
Object block1434;
Object send23411;
Object send23412;
Object block1435;
Object send23413;
Object block1436;
Object send23414;
Object send23415;
Object send23416;
Object send23417;
Object method3222;
Object symbol4072;
Object methodclosure3222;
Object string2709;
Object constant4570;
Object send23418;
Object localvariable3254;
Object array2574;
Object send23419;
Object block1437;
Object send23420;
Object method3223;
Object symbol4089;
Object methodclosure3223;
Object method3224;
Object symbol4042;
Object methodclosure3224;
Object string2710;
Object constant4571;
Object send23421;
Object send23422;
Object send23423;
Object localvariable3255;
Object array2575;
Object localvariable3256;
Object array2576;
Object send23424;
Object send23425;
Object send23426;
Object smallint1609;
Object constant4572;
Object send23427;
Object send23428;
Object send23429;
Object block1438;
Object send23430;
Object send23431;
Object block1439;
Object send23432;
Object method3225;
Object symbol4054;
Object methodclosure3225;
Object localvariable3257;
Object array2577;
Object string2711;
Object constant4573;
Object send23433;
Object assign2882;
Object send23434;
Object send23435;
Object send23436;
Object send23437;
Object method3226;
Object symbol4082;
Object methodclosure3226;
Object symbol4026;
Object send23438;
Object symbol4241;
Object constant4574;
Object string2712;
Object constant4575;
Object send23439;
Object send23440;
Object send23441;
Object send23442;
Object send23443;
Object localvariable3258;
Object array2578;
Object smallint1610;
Object constant4576;
Object send23444;
Object localvariable3259;
Object array2579;
Object send23445;
Object send23446;
Object classreference625;
Object send23447;
Object smallint1611;
Object constant4577;
Object send23448;
Object send23449;
Object send23450;
Object send23451;
Object block1440;
Object send23452;
Object send23453;
Object send23454;
Object block1441;
Object send23455;
Object send23456;
Object symbol4025;
Object send23457;
Object send23458;
Object method3227;
Object symbol4024;
Object methodclosure3227;
Object string2713;
Object constant4578;
Object send23459;
Object localvariable3260;
Object array2580;
Object send23460;
Object send23461;
Object method3228;
Object methodclosure3228;
Object classreference626;
Object send23462;
Object send23463;
Object block1442;
Object send23464;
Object method3229;
Object symbol4036;
Object methodclosure3229;
Object send23465;
Object send23466;
Object send23467;
Object send23468;
Object send23469;
Object send23470;
Object send23471;
Object method3230;
Object symbol4064;
Object methodclosure3230;
Object string2714;
Object constant4579;
Object send23472;
Object send23473;
Object send23474;
Object send23475;
Object send23476;
Object send23477;
Object localvariable3261;
Object array2581;
Object send23478;
Object send23479;
Object localvariable3262;
Object localvariable3263;
Object array2582;
Object send23480;
Object block1443;
Object send23481;
Object block1444;
Object send23482;
Object method3231;
Object symbol4092;
Object methodclosure3231;
Object string2715;
Object constant4580;
Object send23483;
Object localvariable3264;
Object array2583;
Object send23484;
Object send23485;
Object block1445;
Object send23486;
Object method3232;
Object symbol4076;
Object methodclosure3232;
Object string2716;
Object constant4581;
Object send23487;
Object send23488;
Object send23489;
Object send23490;
Object string2717;
Object constant4582;
Object send23491;
Object send23492;
Object send23493;
Object method3233;
Object symbol4046;
Object methodclosure3233;
Object localvariable3265;
Object array2584;
Object string2718;
Object constant4583;
Object send23494;
Object send23495;
Object send23496;
Object send23497;
Object localvariable3266;
Object array2585;
Object send23498;
Object assign2883;
Object smallint1612;
Object constant4584;
Object send23499;
Object localvariable3267;
Object array2586;
Object localvariable3268;
Object array2587;
Object send23500;
Object send23501;
Object block1446;
Object send23502;
Object send23503;
Object assign2884;
Object block1447;
Object send23504;
Object block1448;
Object send23505;
Object method3234;
Object symbol4058;
Object methodclosure3234;
Object send23506;
Object send23507;
Object send23508;
Object method3235;
Object symbol4086;
Object methodclosure3235;
Object string2719;
Object constant4585;
Object send23509;
Object method3236;
Object symbol4028;
Object methodclosure3236;
Object string2720;
Object constant4586;
Object string2721;
Object constant4587;
Object send23510;
Object send23511;
Object send23512;
Object send23513;
Object localvariable3269;
Object array2588;
Object send23514;
Object send23515;
Object block1449;
Object send23516;
Object method3237;
Object symbol4051;
Object methodclosure3237;
Object localvariable3270;
Object array2589;
Object localvariable3271;
Object array2590;
Object send23517;
Object string2722;
Object constant4588;
Object send23518;
Object symbol4242;
Object send23519;
Object send23520;
Object send23521;
Object assign2885;
Object symbol4243;
Object send23522;
Object super280;
Object block1450;
Object send23523;
Object symbol4244;
Object send23524;
Object block1451;
Object send23525;
Object method3238;
Object methodclosure3238;
Object constant4589;
Object string2723;
Object constant4590;
Object send23526;
Object block1452;
Object send23527;
Object method3239;
Object symbol4068;
Object methodclosure3239;
Object send23528;
Object string2724;
Object constant4591;
Object send23529;
Object send23530;
Object send23531;
Object send23532;
Object method3240;
Object symbol4061;
Object methodclosure3240;
Object string2725;
Object constant4592;
Object symbol4245;
Object send23533;
Object send23534;
Object send23535;
Object send23536;
Object send23537;
Object send23538;
Object localvariable3272;
Object array2591;
Object send23539;
Object send23540;
Object localvariable3273;
Object localvariable3274;
Object array2592;
Object send23541;
Object block1453;
Object send23542;
Object block1454;
Object send23543;
Object method3241;
Object symbol4073;
Object methodclosure3241;
Object string2726;
Object constant4593;
Object send23544;
Object send23545;
Object send23546;
Object send23547;
Object send23548;
Object send23549;
Object send23550;
Object send23551;
Object method3242;
Object symbol4043;
Object methodclosure3242;
Object localvariable3275;
Object localvariable3276;
Object array2593;
Object send23552;
Object send23553;
Object symbol4084;
Object send23554;
Object constant4594;
Object string2727;
Object constant4595;
Object send23555;
Object send23556;
Object send23557;
Object send23558;
Object send23559;
Object send23560;
Object send23561;
Object localvariable3277;
Object array2594;
Object send23562;
Object assign2886;
Object smallint1613;
Object constant4596;
Object send23563;
Object assign2887;
Object symbol4246;
Object send23564;
Object localvariable3278;
Object array2595;
Object localvariable3279;
Object array2596;
Object send23565;
Object send23566;
Object block1455;
Object send23567;
Object send23568;
Object assign2888;
Object block1456;
Object send23569;
Object block1457;
Object send23570;
Object send23571;
Object symbol4044;
Object send23572;
Object send23573;
Object send23574;
Object constant4597;
Object send23575;
Object method3243;
Object symbol4055;
Object methodclosure3243;
Object send23576;
Object string2728;
Object constant4598;
Object send23577;
Object send23578;
Object send23579;
Object method3244;
Object symbol4083;
Object methodclosure3244;
Object send23580;
Object send23581;
Object send23582;
Object send23583;
Object send23584;
Object method3245;
Object methodclosure3245;
Object localvariable3280;
Object array2597;
Object string2729;
Object constant4599;
Object send23585;
Object assign2889;
Object string2730;
Object constant4600;
Object send23586;
Object send23587;
Object symbol4247;
Object send23588;
Object send23589;
Object symbol4248;
Object send23590;
Object symbol4249;
Object send23591;
Object send23592;
Object send23593;
Object send23594;
Object send23595;
Object send23596;
Object send23597;
Object send23598;
Object send23599;
Object send23600;
Object string2731;
Object constant4601;
Object send23601;
Object send23602;
Object send23603;
Object localvariable3281;
Object array2598;
Object send23604;
Object send23605;
Object block1458;
Object send23606;
Object method3246;
Object symbol4037;
Object methodclosure3246;
Object string2732;
Object constant4602;
Object send23607;
Object localvariable3282;
Object array2599;
Object send23608;
Object block1459;
Object send23609;
Object method3247;
Object symbol4065;
Object methodclosure3247;
Object string2733;
Object constant4603;
Object send23610;
Object send23611;
Object send23612;
Object send23613;
Object method3248;
Object symbol4093;
Object methodclosure3248;
Object localvariable3283;
Object localvariable3284;
Object array2600;
Object string2734;
Object constant4604;
Object send23614;
Object send23615;
Object assign2890;
Object string2735;
Object constant4605;
Object send23616;
Object send23617;
Object send23618;
Object send23619;
Object send23620;
Object localvariable3285;
Object array2601;
Object symbol4250;
Object send23621;
Object assign2891;
Object string2736;
Object constant4606;
Object localvariable3286;
Object localvariable3287;
Object array2602;
Object send23622;
Object block1460;
Object send23623;
Object assign2892;
Object localvariable3288;
Object localvariable3289;
Object array2603;
Object string2737;
Object constant4607;
Object send23624;
Object string2738;
Object constant4608;
Object localvariable3290;
Object localvariable3291;
Object array2604;
Object send23625;
Object block1461;
Object send23626;
Object send23627;
Object block1462;
Object send23628;
Object block1463;
Object send23629;
Object method3249;
Object symbol4077;
Object methodclosure3249;
Object send23630;
Object send23631;
Object send23632;
Object send23633;
Object send23634;
Object send23635;
Object send23636;
Object symbol4251;
Object send23637;
Object send23638;
Object method3250;
Object symbol4030;
Object methodclosure3250;
Object string2739;
Object constant4609;
Object send23639;
Object send23640;
Object send23641;
Object send23642;
Object send23643;
Object send23644;
Object send23645;
Object localvariable3292;
Object array2605;
Object smallint1614;
Object constant4610;
Object send23646;
Object localvariable3293;
Object array2606;
Object send23647;
Object send23648;
Object block1464;
Object send23649;
Object send23650;
Object block1465;
Object send23651;
Object method3251;
Object symbol4047;
Object methodclosure3251;
Object string2740;
Object constant4611;
Object string2741;
Object constant4612;
Object send23652;
Object send23653;
Object send23654;
Object send23655;
Object send23656;
Object localvariable3294;
Object array2607;
Object localvariable3295;
Object array2608;
Object send23657;
Object block1466;
Object send23658;
Object block1467;
Object send23659;
Object method3252;
Object symbol4070;
Object methodclosure3252;
Object string2742;
Object constant4613;
Object send23660;
Object send23661;
Object method3253;
Object symbol4059;
Object methodclosure3253;
Object send23662;
Object send23663;
Object method3254;
Object symbol4087;
Object methodclosure3254;
Object string2743;
Object constant4614;
Object send23664;
Object string2744;
Object constant4615;
Object send23665;
Object send23666;
Object send23667;
Object send23668;
Object string2745;
Object constant4616;
Object send23669;
Object localvariable3296;
Object array2609;
Object send23670;
Object send23671;
Object block1468;
Object send23672;
Object send23673;
Object localvariable3297;
Object localvariable3298;
Object array2610;
Object send23674;
Object block1469;
Object send23675;
Object send23676;
Object block1470;
Object send23677;
Object block1471;
Object send23678;
Object method3255;
Object symbol4040;
Object methodclosure3255;
Object string2746;
Object constant4617;
Object send23679;
Object method3256;
Object symbol4029;
Object methodclosure3256;
Object localvariable3299;
Object array2611;
Object assign2893;
Object method3257;
Object symbol4052;
Object methodclosure3257;
Object string2747;
Object constant4618;
Object string2748;
Object constant4619;
Object send23680;
Object send23681;
Object send23682;
Object send23683;
Object send23684;
Object send23685;
Object send23686;
Object string2749;
Object constant4620;
Object send23687;
Object send23688;
Object send23689;
Object localvariable3300;
Object array2612;
Object localvariable3301;
Object array2613;
Object assign2894;
Object method3258;
Object symbol4139;
Object methodclosure3258;
Object variable157;
Object array2614;
Object symbol4252;
Object send23690;
Object localvariable3302;
Object array2615;
Object send23691;
Object symbol4253;
Object send23692;
Object block1472;
Object send23693;
Object block1473;
Object send23694;
Object block1474;
Object send23695;
Object block1475;
Object send23696;
Object method3259;
Object methodclosure3259;
Object classreference627;
Object send23697;
Object localvariable3303;
Object array2616;
Object smallint1615;
Object constant4621;
Object send23698;
Object send23699;
Object send23700;
Object block1476;
Object send23701;
Object send23702;
Object send23703;
Object block1477;
Object send23704;
Object method3260;
Object symbol4080;
Object methodclosure3260;
Object send23705;
Object string2750;
Object constant4622;
Object send23706;
Object send23707;
Object send23708;
Object method3261;
Object symbol4069;
Object methodclosure3261;
Object send23709;
Object send23710;
Object method3262;
Object symbol4022;
Object methodclosure3262;
Object string2751;
Object constant4623;
Object send23711;
Object localvariable3304;
Object array2617;
Object send23712;
Object send23713;
Object block1478;
Object send23714;
Object method3263;
Object symbol4034;
Object methodclosure3263;
Object string2752;
Object constant4624;
Object string2753;
Object constant4625;
Object send23715;
Object send23716;
Object symbol4254;
Object send23717;
Object symbol4255;
Object send23718;
Object send23719;
Object send23720;
Object string2754;
Object constant4626;
Object send23721;
Object send23722;
Object send23723;
Object send23724;
Object method3264;
Object symbol4062;
Object methodclosure3264;
Object string2755;
Object constant4627;
Object send23725;
Object send23726;
Object send23727;
Object send23728;
Object send23729;
Object send23730;
Object method3265;
Object symbol4090;
Object methodclosure3265;
Object string2756;
Object constant4628;
Object send23731;
Object method3266;
Object symbol4074;
Object methodclosure3266;
Object send23732;
Object symbol4256;
Object send23733;
Object symbol4257;
Object send23734;
Object send23735;
Object symbol4258;
Object send23736;
Object send23737;
Object send23738;
Object send23739;
Object send23740;
Object symbol4259;
Object send23741;
Object send23742;
Object method3267;
Object methodclosure3267;
Object string2757;
Object constant4629;
Object send23743;
Object string2758;
Object constant4630;
Object send23744;
Object send23745;
Object symbol4260;
Object send23746;
Object send23747;
Object localvariable3305;
Object array2618;
Object send23748;
Object send23749;
Object send23750;
Object block1479;
Object send23751;
Object method3268;
Object symbol4056;
Object methodclosure3268;
Object constant4631;
Object string2759;
Object constant4632;
Object send23752;
Object block1480;
Object send23753;
Object method3269;
Object methodclosure3269;
Object constant4633;
Object string2760;
Object constant4634;
Object send23754;
Object block1481;
Object send23755;
Object method3270;
Object methodclosure3270;
Object string2761;
Object constant4635;
Object send23756;
Object localvariable3306;
Object array2619;
Object send23757;
Object send23758;
Object block1482;
Object send23759;
Object method3271;
Object symbol4038;
Object methodclosure3271;
Object send23760;
Object send23761;
Object method3272;
Object symbol4066;
Object methodclosure3272;
Object string2762;
Object constant4636;
Object send23762;
Object send23763;
Object send23764;
Object symbol4261;
Object send23765;
Object send23766;
Object send23767;
Object method3273;
Object symbol4094;
Object methodclosure3273;
Object symbol4262;
Object send23768;
Object send23769;
Object send23770;
Object method3274;
Object symbol4078;
Object methodclosure3274;
Object string2763;
Object constant4637;
Object string2764;
Object constant4638;
Object send23771;
Object send23772;
Object send23773;
Object send23774;
Object localvariable3307;
Object array2620;
Object send23775;
Object send23776;
Object block1483;
Object send23777;
Object method3275;
Object symbol4031;
Object methodclosure3275;
Object send23778;
Object send23779;
Object send23780;
Object send23781;
Object method3276;
Object symbol4048;
Object methodclosure3276;
Object string2765;
Object constant4639;
Object send23782;
Object send23783;
Object send23784;
Object send23785;
Object localvariable3308;
Object array2621;
Object localvariable3309;
Object array2622;
Object constant4640;
Object send23786;
Object send23787;
Object localvariable3310;
Object array2623;
Object constant4641;
Object send23788;
Object send23789;
Object constant4642;
Object send23790;
Object string2766;
Object constant4643;
Object send23791;
Object string2767;
Object constant4644;
Object send23792;
Object send23793;
Object send23794;
Object block1484;
Object send23795;
Object send23796;
Object send23797;
Object constant4645;
Object send23798;
Object send23799;
Object block1485;
Object send23800;
Object send23801;
Object block1486;
Object send23802;
Object method3277;
Object symbol4071;
Object methodclosure3277;
Object string2768;
Object constant4646;
Object send23803;
Object send23804;
Object localvariable3311;
Object array2624;
Object string2769;
Object constant4647;
Object localvariable3312;
Object localvariable3313;
Object array2625;
Object send23805;
Object string2770;
Object constant4648;
Object send23806;
Object block1487;
Object send23807;
Object block1488;
Object send23808;
Object method3278;
Object symbol4088;
Object methodclosure3278;
Object classreference628;
Object send23809;
Object assign2895;
Object method3279;
Object symbol3890;
Object methodclosure3279;
Object localvariable3314;
Object localvariable3315;
Object localvariable3316;
Object array2626;
Object send23810;
Object assign2896;
Object string2771;
Object constant4649;
Object send23811;
Object assign2897;
Object send23812;
Object assign2898;
Object send23813;
Object send23814;
Object send23815;
Object send23816;
Object send23817;
Object string2772;
Object constant4650;
Object send23818;
Object send23819;
Object send23820;
Object smallint1616;
Object constant4651;
Object send23821;
Object method3280;
Object symbol3900;
Object methodclosure3280;
Object classreference629;
Object instancevariable828;
Object method3281;
Object methodclosure3281;
Object method3282;
Object methodclosure3282;
Object classreference630;
Object localvariable3317;
Object array2627;
Object localvariable3318;
Object array2628;
Object variable158;
Object array2629;
Object send23822;
Object symbol4263;
Object constant4652;
Object send23823;
Object super281;
Object send23824;
Object block1489;
Object send23825;
Object string2773;
Object constant4653;
Object send23826;
Object send23827;
Object string2774;
Object constant4654;
Object send23828;
Object send23829;
Object assign2899;
Object send23830;
Object symbol4264;
Object send23831;
Object block1490;
Object send23832;
Object method3283;
Object methodclosure3283;
Object classreference631;
Object method3284;
Object methodclosure3284;
Object localvariable3319;
Object array2630;
Object assign2900;
Object method3285;
Object methodclosure3285;
Object method3286;
Object symbol4131;
Object methodclosure3286;
Object method3287;
Object methodclosure3287;
Object localvariable3320;
Object array2631;
Object super282;
Object string2775;
Object constant4655;
Object send23833;
Object send23834;
Object send23835;
Object string2776;
Object constant4656;
Object send23836;
Object send23837;
Object send23838;
Object string2777;
Object constant4657;
Object send23839;
Object symbol4129;
Object send23840;
Object send23841;
Object method3288;
Object methodclosure3288;
Object localvariable3321;
Object array2632;
Object assign2901;
Object method3289;
Object symbol4130;
Object methodclosure3289;
Object localvariable3322;
Object array2633;
Object assign2902;
Object method3290;
Object methodclosure3290;
Object method3291;
Object methodclosure3291;
Object localvariable3323;
Object array2634;
Object send23842;
Object send23843;
Object send23844;
Object method3292;
Object methodclosure3292;
Object classreference632;
Object classreference633;
Object classreference634;
Object localvariable3324;
Object array2635;
Object send23845;
Object method3293;
Object methodclosure3293;
Object method3294;
Object methodclosure3294;
Object method3295;
Object methodclosure3295;
Object string2778;
Object constant4658;
Object method3296;
Object symbol3949;
Object methodclosure3296;
Object send23846;
Object send23847;
Object symbol4265;
Object send23848;
Object assign2903;
Object block1491;
Object send23849;
Object method3297;
Object methodclosure3297;
Object send23850;
Object send23851;
Object symbol4266;
Object smallint1617;
Object constant4659;
Object send23852;
Object send23853;
Object send23854;
Object send23855;
Object send23856;
Object method3298;
Object symbol3950;
Object methodclosure3298;
Object localvariable3325;
Object array2636;
Object localvariable3326;
Object array2637;
Object variable159;
Object array2638;
Object send23857;
Object constant4660;
Object send23858;
Object super283;
Object send23859;
Object block1492;
Object send23860;
Object string2779;
Object constant4661;
Object send23861;
Object send23862;
Object smallint1618;
Object constant4662;
Object send23863;
Object send23864;
Object send23865;
Object send23866;
Object send23867;
Object string2780;
Object constant4663;
Object send23868;
Object send23869;
Object assign2904;
Object send23870;
Object send23871;
Object block1493;
Object send23872;
Object method3299;
Object methodclosure3299;
Object method3300;
Object symbol3947;
Object methodclosure3300;
Object localvariable3327;
Object array2639;
Object assign2905;
Object method3301;
Object symbol3944;
Object methodclosure3301;
Object classreference635;
Object localvariable3328;
Object array2640;
Object send23873;
Object send23874;
Object method3302;
Object methodclosure3302;
Object method3303;
Object methodclosure3303;
Object localvariable3329;
Object array2641;
Object localvariable3330;
Object array2642;
Object assign2906;
Object send23875;
Object assign2907;
Object send23876;
Object smallint1619;
Object constant4664;
Object send23877;
Object send23878;
Object smallint1620;
Object constant4665;
Object send23879;
Object send23880;
Object send23881;
Object send23882;
Object string2781;
Object constant4666;
Object send23883;
Object block1494;
Object send23884;
Object method3304;
Object methodclosure3304;
Object localvariable3331;
Object array2643;
Object send23885;
Object send23886;
Object send23887;
Object method3305;
Object methodclosure3305;
Object send23888;
Object send23889;
Object method3306;
Object methodclosure3306;
Object send23890;
Object method3307;
Object methodclosure3307;
Object send23891;
Object send23892;
Object method3308;
Object methodclosure3308;
Object classreference636;

void SCParserTest_create_ast() {
objectlayout949 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable740 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout949)->values[0] = instancevariable740;
instancevariable741 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout949)->values[1] = instancevariable741;
instancevariable742 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout949)->values[2] = instancevariable742;
instancevariable743 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout949)->values[3] = instancevariable743;
instancevariable744 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout949)->values[4] = instancevariable744;
symbol3932 = (Object)new_Type_Symbol_cached(L"Stream");
class513 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout949);
((Type_Class)class513)->name = (Type_Symbol)symbol3932;
metaclass513 = (Object)HEADER(class513);
objectlayout950 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout950)->values[0] = instancevariable740;
((Type_Array)objectlayout950)->values[1] = instancevariable741;
((Type_Array)objectlayout950)->values[2] = instancevariable742;
((Type_Array)objectlayout950)->values[3] = instancevariable743;
((Type_Array)objectlayout950)->values[4] = instancevariable744;
symbol3931 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout951 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable745 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout951)->values[0] = instancevariable745;
instancevariable746 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout951)->values[1] = instancevariable746;
instancevariable747 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout951)->values[2] = instancevariable747;
class514 = (Object)new_Class_withMeta((Object)class513, objectlayout951, objectlayout950);
((Type_Class)class514)->name = (Type_Symbol)symbol3931;
metaclass514 = (Object)HEADER(class514);
objectlayout952 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout952)->values[0] = instancevariable740;
((Type_Array)objectlayout952)->values[1] = instancevariable741;
((Type_Array)objectlayout952)->values[2] = instancevariable742;
((Type_Array)objectlayout952)->values[3] = instancevariable743;
((Type_Array)objectlayout952)->values[4] = instancevariable744;
symbol3930 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout953 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout953)->values[0] = instancevariable745;
((Type_Array)objectlayout953)->values[1] = instancevariable746;
((Type_Array)objectlayout953)->values[2] = instancevariable747;
class515 = (Object)new_Class_withMeta((Object)class514, objectlayout953, objectlayout952);
((Type_Class)class515)->name = (Type_Symbol)symbol3930;
metaclass515 = (Object)HEADER(class515);
objectlayout954 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout954)->values[0] = instancevariable740;
((Type_Array)objectlayout954)->values[1] = instancevariable741;
((Type_Array)objectlayout954)->values[2] = instancevariable742;
((Type_Array)objectlayout954)->values[3] = instancevariable743;
((Type_Array)objectlayout954)->values[4] = instancevariable744;
symbol3957 = (Object)new_Type_Symbol_cached(L"Collection");
class516 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout954);
((Type_Class)class516)->name = (Type_Symbol)symbol3957;
metaclass516 = (Object)HEADER(class516);
objectlayout955 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout955)->values[0] = instancevariable740;
((Type_Array)objectlayout955)->values[1] = instancevariable741;
((Type_Array)objectlayout955)->values[2] = instancevariable742;
((Type_Array)objectlayout955)->values[3] = instancevariable743;
((Type_Array)objectlayout955)->values[4] = instancevariable744;
symbol3956 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class517 = (Object)new_Class_withMeta((Object)class516, empty_object_layout, objectlayout955);
((Type_Class)class517)->name = (Type_Symbol)symbol3956;
metaclass517 = (Object)HEADER(class517);
objectlayout956 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout956)->values[0] = instancevariable740;
((Type_Array)objectlayout956)->values[1] = instancevariable741;
((Type_Array)objectlayout956)->values[2] = instancevariable742;
((Type_Array)objectlayout956)->values[3] = instancevariable743;
((Type_Array)objectlayout956)->values[4] = instancevariable744;
symbol3955 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class518 = (Object)new_Class_withMeta((Object)class517, empty_object_layout, objectlayout956);
((Type_Class)class518)->name = (Type_Symbol)symbol3955;
metaclass518 = (Object)HEADER(class518);
objectlayout957 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout957)->values[0] = instancevariable740;
((Type_Array)objectlayout957)->values[1] = instancevariable741;
((Type_Array)objectlayout957)->values[2] = instancevariable742;
((Type_Array)objectlayout957)->values[3] = instancevariable743;
((Type_Array)objectlayout957)->values[4] = instancevariable744;
symbol3840 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout958 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable748 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout958)->values[0] = instancevariable748;
instancevariable749 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout958)->values[1] = instancevariable749;
instancevariable750 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout958)->values[2] = instancevariable750;
class519 = (Object)new_Class_withMeta((Object)class517, objectlayout958, objectlayout957);
((Type_Class)class519)->name = (Type_Symbol)symbol3840;
metaclass519 = (Object)HEADER(class519);
objectlayout959 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout959)->values[0] = instancevariable740;
((Type_Array)objectlayout959)->values[1] = instancevariable741;
((Type_Array)objectlayout959)->values[2] = instancevariable742;
((Type_Array)objectlayout959)->values[3] = instancevariable743;
((Type_Array)objectlayout959)->values[4] = instancevariable744;
symbol3938 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout960 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable751 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout960)->values[0] = instancevariable751;
instancevariable752 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout960)->values[1] = instancevariable752;
instancevariable753 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout960)->values[2] = instancevariable753;
class520 = (Object)new_Class_withMeta((Object)class516, objectlayout960, objectlayout959);
((Type_Class)class520)->name = (Type_Symbol)symbol3938;
metaclass520 = (Object)HEADER(class520);
objectlayout961 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout961)->values[0] = instancevariable740;
((Type_Array)objectlayout961)->values[1] = instancevariable741;
((Type_Array)objectlayout961)->values[2] = instancevariable742;
((Type_Array)objectlayout961)->values[3] = instancevariable743;
((Type_Array)objectlayout961)->values[4] = instancevariable744;
symbol4137 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout962 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable754 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout962)->values[0] = instancevariable754;
instancevariable755 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout962)->values[1] = instancevariable755;
class521 = (Object)new_Class_withMeta((Object)class516, objectlayout962, objectlayout961);
((Type_Class)class521)->name = (Type_Symbol)symbol4137;
metaclass521 = (Object)HEADER(class521);
objectlayout963 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout963)->values[0] = instancevariable740;
((Type_Array)objectlayout963)->values[1] = instancevariable741;
((Type_Array)objectlayout963)->values[2] = instancevariable742;
((Type_Array)objectlayout963)->values[3] = instancevariable743;
((Type_Array)objectlayout963)->values[4] = instancevariable744;
instancevariable756 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout963)->values[5] = instancevariable756;
symbol3814 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout964 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable757 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout964)->values[0] = instancevariable757;
class522 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout964, objectlayout963);
((Type_Class)class522)->name = (Type_Symbol)symbol3814;
metaclass522 = (Object)HEADER(class522);
objectlayout965 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout965)->values[0] = instancevariable740;
((Type_Array)objectlayout965)->values[1] = instancevariable741;
((Type_Array)objectlayout965)->values[2] = instancevariable742;
((Type_Array)objectlayout965)->values[3] = instancevariable743;
((Type_Array)objectlayout965)->values[4] = instancevariable744;
symbol3829 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout966 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout966)->values[0] = instancevariable745;
((Type_Array)objectlayout966)->values[1] = instancevariable746;
((Type_Array)objectlayout966)->values[2] = instancevariable747;
instancevariable758 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout966)->values[3] = instancevariable758;
instancevariable759 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout966)->values[4] = instancevariable759;
class523 = (Object)new_Class_withMeta((Object)class515, objectlayout966, objectlayout965);
((Type_Class)class523)->name = (Type_Symbol)symbol3829;
metaclass523 = (Object)HEADER(class523);
objectlayout967 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout967)->values[0] = instancevariable740;
((Type_Array)objectlayout967)->values[1] = instancevariable741;
((Type_Array)objectlayout967)->values[2] = instancevariable742;
((Type_Array)objectlayout967)->values[3] = instancevariable743;
((Type_Array)objectlayout967)->values[4] = instancevariable744;
symbol4096 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout968 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable760 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout968)->values[0] = instancevariable760;
instancevariable761 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout968)->values[1] = instancevariable761;
class524 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout968, objectlayout967);
((Type_Class)class524)->name = (Type_Symbol)symbol4096;
metaclass524 = (Object)HEADER(class524);
objectlayout969 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout969)->values[0] = instancevariable740;
((Type_Array)objectlayout969)->values[1] = instancevariable741;
((Type_Array)objectlayout969)->values[2] = instancevariable742;
((Type_Array)objectlayout969)->values[3] = instancevariable743;
((Type_Array)objectlayout969)->values[4] = instancevariable744;
symbol4114 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout970 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout970)->values[0] = instancevariable760;
((Type_Array)objectlayout970)->values[1] = instancevariable761;
instancevariable762 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout970)->values[2] = instancevariable762;
instancevariable763 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout970)->values[3] = instancevariable763;
class525 = (Object)new_Class_withMeta((Object)class524, objectlayout970, objectlayout969);
((Type_Class)class525)->name = (Type_Symbol)symbol4114;
metaclass525 = (Object)HEADER(class525);
objectlayout971 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout971)->values[0] = instancevariable740;
((Type_Array)objectlayout971)->values[1] = instancevariable741;
((Type_Array)objectlayout971)->values[2] = instancevariable742;
((Type_Array)objectlayout971)->values[3] = instancevariable743;
((Type_Array)objectlayout971)->values[4] = instancevariable744;
symbol4146 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class526 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout971);
((Type_Class)class526)->name = (Type_Symbol)symbol4146;
metaclass526 = (Object)HEADER(class526);
objectlayout972 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout972)->values[0] = instancevariable740;
((Type_Array)objectlayout972)->values[1] = instancevariable741;
((Type_Array)objectlayout972)->values[2] = instancevariable742;
((Type_Array)objectlayout972)->values[3] = instancevariable743;
((Type_Array)objectlayout972)->values[4] = instancevariable744;
symbol4143 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout973 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable764 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout973)->values[0] = instancevariable764;
class527 = (Object)new_Class_withMeta((Object)class526, objectlayout973, objectlayout972);
((Type_Class)class527)->name = (Type_Symbol)symbol4143;
metaclass527 = (Object)HEADER(class527);
objectlayout974 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout974)->values[0] = instancevariable740;
((Type_Array)objectlayout974)->values[1] = instancevariable741;
((Type_Array)objectlayout974)->values[2] = instancevariable742;
((Type_Array)objectlayout974)->values[3] = instancevariable743;
((Type_Array)objectlayout974)->values[4] = instancevariable744;
symbol4100 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout975 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout975)->values[0] = instancevariable760;
((Type_Array)objectlayout975)->values[1] = instancevariable761;
instancevariable765 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout975)->values[2] = instancevariable765;
instancevariable766 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout975)->values[3] = instancevariable766;
class528 = (Object)new_Class_withMeta((Object)class524, objectlayout975, objectlayout974);
((Type_Class)class528)->name = (Type_Symbol)symbol4100;
metaclass528 = (Object)HEADER(class528);
objectlayout976 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout976)->values[0] = instancevariable740;
((Type_Array)objectlayout976)->values[1] = instancevariable741;
((Type_Array)objectlayout976)->values[2] = instancevariable742;
((Type_Array)objectlayout976)->values[3] = instancevariable743;
((Type_Array)objectlayout976)->values[4] = instancevariable744;
symbol4099 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout977 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout977)->values[0] = instancevariable760;
((Type_Array)objectlayout977)->values[1] = instancevariable761;
instancevariable767 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout977)->values[2] = instancevariable767;
class529 = (Object)new_Class_withMeta((Object)class524, objectlayout977, objectlayout976);
((Type_Class)class529)->name = (Type_Symbol)symbol4099;
metaclass529 = (Object)HEADER(class529);
objectlayout978 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout978)->values[0] = instancevariable740;
((Type_Array)objectlayout978)->values[1] = instancevariable741;
((Type_Array)objectlayout978)->values[2] = instancevariable742;
((Type_Array)objectlayout978)->values[3] = instancevariable743;
((Type_Array)objectlayout978)->values[4] = instancevariable744;
symbol4104 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout979 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout979)->values[0] = instancevariable760;
((Type_Array)objectlayout979)->values[1] = instancevariable761;
instancevariable768 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout979)->values[2] = instancevariable768;
instancevariable769 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout979)->values[3] = instancevariable769;
class530 = (Object)new_Class_withMeta((Object)class524, objectlayout979, objectlayout978);
((Type_Class)class530)->name = (Type_Symbol)symbol4104;
metaclass530 = (Object)HEADER(class530);
objectlayout980 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout980)->values[0] = instancevariable740;
((Type_Array)objectlayout980)->values[1] = instancevariable741;
((Type_Array)objectlayout980)->values[2] = instancevariable742;
((Type_Array)objectlayout980)->values[3] = instancevariable743;
((Type_Array)objectlayout980)->values[4] = instancevariable744;
symbol4112 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout981 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout981)->values[0] = instancevariable760;
((Type_Array)objectlayout981)->values[1] = instancevariable761;
((Type_Array)objectlayout981)->values[2] = instancevariable765;
((Type_Array)objectlayout981)->values[3] = instancevariable766;
class531 = (Object)new_Class_withMeta((Object)class528, objectlayout981, objectlayout980);
((Type_Class)class531)->name = (Type_Symbol)symbol4112;
metaclass531 = (Object)HEADER(class531);
objectlayout982 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout982)->values[0] = instancevariable740;
((Type_Array)objectlayout982)->values[1] = instancevariable741;
((Type_Array)objectlayout982)->values[2] = instancevariable742;
((Type_Array)objectlayout982)->values[3] = instancevariable743;
((Type_Array)objectlayout982)->values[4] = instancevariable744;
symbol3895 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout983 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout983)->values[0] = instancevariable760;
((Type_Array)objectlayout983)->values[1] = instancevariable761;
instancevariable770 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout983)->values[2] = instancevariable770;
instancevariable771 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout983)->values[3] = instancevariable771;
instancevariable772 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout983)->values[4] = instancevariable772;
instancevariable773 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout983)->values[5] = instancevariable773;
class532 = (Object)new_Class_withMeta((Object)class524, objectlayout983, objectlayout982);
((Type_Class)class532)->name = (Type_Symbol)symbol3895;
metaclass532 = (Object)HEADER(class532);
objectlayout984 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout984)->values[0] = instancevariable740;
((Type_Array)objectlayout984)->values[1] = instancevariable741;
((Type_Array)objectlayout984)->values[2] = instancevariable742;
((Type_Array)objectlayout984)->values[3] = instancevariable743;
((Type_Array)objectlayout984)->values[4] = instancevariable744;
symbol4144 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class533 = (Object)new_Class_withMeta((Object)class526, empty_object_layout, objectlayout984);
((Type_Class)class533)->name = (Type_Symbol)symbol4144;
metaclass533 = (Object)HEADER(class533);
objectlayout985 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout985)->values[0] = instancevariable740;
((Type_Array)objectlayout985)->values[1] = instancevariable741;
((Type_Array)objectlayout985)->values[2] = instancevariable742;
((Type_Array)objectlayout985)->values[3] = instancevariable743;
((Type_Array)objectlayout985)->values[4] = instancevariable744;
((Type_Array)objectlayout985)->values[5] = instancevariable756;
symbol3811 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout986 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout986)->values[0] = instancevariable757;
instancevariable774 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout986)->values[1] = instancevariable774;
class534 = (Object)new_Class_withMeta((Object)class522, objectlayout986, objectlayout985);
((Type_Class)class534)->name = (Type_Symbol)symbol3811;
metaclass534 = (Object)HEADER(class534);
objectlayout987 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout987)->values[0] = instancevariable740;
((Type_Array)objectlayout987)->values[1] = instancevariable741;
((Type_Array)objectlayout987)->values[2] = instancevariable742;
((Type_Array)objectlayout987)->values[3] = instancevariable743;
((Type_Array)objectlayout987)->values[4] = instancevariable744;
symbol3889 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout988 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable775 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout988)->values[0] = instancevariable775;
instancevariable776 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout988)->values[1] = instancevariable776;
instancevariable777 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout988)->values[2] = instancevariable777;
class535 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout988, objectlayout987);
((Type_Class)class535)->name = (Type_Symbol)symbol3889;
metaclass535 = (Object)HEADER(class535);
objectlayout989 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout989)->values[0] = instancevariable740;
((Type_Array)objectlayout989)->values[1] = instancevariable741;
((Type_Array)objectlayout989)->values[2] = instancevariable742;
((Type_Array)objectlayout989)->values[3] = instancevariable743;
((Type_Array)objectlayout989)->values[4] = instancevariable744;
symbol3912 = (Object)new_Type_Symbol_cached(L"Type");
class536 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout989);
((Type_Class)class536)->name = (Type_Symbol)symbol3912;
metaclass536 = (Object)HEADER(class536);
objectlayout990 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout990)->values[0] = instancevariable740;
((Type_Array)objectlayout990)->values[1] = instancevariable741;
((Type_Array)objectlayout990)->values[2] = instancevariable742;
((Type_Array)objectlayout990)->values[3] = instancevariable743;
((Type_Array)objectlayout990)->values[4] = instancevariable744;
symbol4125 = (Object)new_Type_Symbol_cached(L"Character");
objectlayout991 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable778 = (Object)new_AST_InstVariable(0, L"char");
((Type_Array)objectlayout991)->values[0] = instancevariable778;
class537 = (Object)new_Class_withMeta((Object)class536, objectlayout991, objectlayout990);
((Type_Class)class537)->name = (Type_Symbol)symbol4125;
metaclass537 = (Object)HEADER(class537);
objectlayout992 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout992)->values[0] = instancevariable740;
((Type_Array)objectlayout992)->values[1] = instancevariable741;
((Type_Array)objectlayout992)->values[2] = instancevariable742;
((Type_Array)objectlayout992)->values[3] = instancevariable743;
((Type_Array)objectlayout992)->values[4] = instancevariable744;
instancevariable779 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout992)->values[5] = instancevariable779;
symbol3913 = (Object)new_Type_Symbol_cached(L"Nil");
class538 = (Object)new_Class_withMeta((Object)class536, empty_object_layout, objectlayout992);
((Type_Class)class538)->name = (Type_Symbol)symbol3913;
metaclass538 = (Object)HEADER(class538);
objectlayout993 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout993)->values[0] = instancevariable740;
((Type_Array)objectlayout993)->values[1] = instancevariable741;
((Type_Array)objectlayout993)->values[2] = instancevariable742;
((Type_Array)objectlayout993)->values[3] = instancevariable743;
((Type_Array)objectlayout993)->values[4] = instancevariable744;
symbol3970 = (Object)new_Type_Symbol_cached(L"SmallInt");
objectlayout994 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable780 = (Object)new_AST_InstVariable(0, L"int");
((Type_Array)objectlayout994)->values[0] = instancevariable780;
class539 = (Object)new_Class_withMeta((Object)class536, objectlayout994, objectlayout993);
((Type_Class)class539)->name = (Type_Symbol)symbol3970;
metaclass539 = (Object)HEADER(class539);
objectlayout995 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout995)->values[0] = instancevariable740;
((Type_Array)objectlayout995)->values[1] = instancevariable741;
((Type_Array)objectlayout995)->values[2] = instancevariable742;
((Type_Array)objectlayout995)->values[3] = instancevariable743;
((Type_Array)objectlayout995)->values[4] = instancevariable744;
symbol3981 = (Object)new_Type_Symbol_cached(L"String");
objectlayout996 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable781 = (Object)new_AST_InstVariable(0, L"string");
((Type_Array)objectlayout996)->values[0] = instancevariable781;
class540 = (Object)new_Class_withMeta((Object)class536, objectlayout996, objectlayout995);
((Type_Class)class540)->name = (Type_Symbol)symbol3981;
metaclass540 = (Object)HEADER(class540);
objectlayout997 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout997)->values[0] = instancevariable740;
((Type_Array)objectlayout997)->values[1] = instancevariable741;
((Type_Array)objectlayout997)->values[2] = instancevariable742;
((Type_Array)objectlayout997)->values[3] = instancevariable743;
((Type_Array)objectlayout997)->values[4] = instancevariable744;
instancevariable782 = (Object)new_AST_InstVariable(5, L"symbolDictionary");
((Type_Array)objectlayout997)->values[5] = instancevariable782;
symbol3977 = (Object)new_Type_Symbol_cached(L"Symbol");
objectlayout998 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable783 = (Object)new_AST_InstVariable(0, L"symbol");
((Type_Array)objectlayout998)->values[0] = instancevariable783;
class541 = (Object)new_Class_withMeta((Object)class536, objectlayout998, objectlayout997);
((Type_Class)class541)->name = (Type_Symbol)symbol3977;
metaclass541 = (Object)HEADER(class541);
objectlayout999 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout999)->values[0] = instancevariable740;
((Type_Array)objectlayout999)->values[1] = instancevariable741;
((Type_Array)objectlayout999)->values[2] = instancevariable742;
((Type_Array)objectlayout999)->values[3] = instancevariable743;
((Type_Array)objectlayout999)->values[4] = instancevariable744;
instancevariable784 = (Object)new_AST_InstVariable(5, L"uidCounter");
((Type_Array)objectlayout999)->values[5] = instancevariable784;
symbol3943 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout1000 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable785 = (Object)new_AST_InstVariable(0, L"sourceObject");
((Type_Array)objectlayout1000)->values[0] = instancevariable785;
instancevariable786 = (Object)new_AST_InstVariable(1, L"uid");
((Type_Array)objectlayout1000)->values[1] = instancevariable786;
instancevariable787 = (Object)new_AST_InstVariable(2, L"id");
((Type_Array)objectlayout1000)->values[2] = instancevariable787;
class542 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1000, objectlayout999);
((Type_Class)class542)->name = (Type_Symbol)symbol3943;
metaclass542 = (Object)HEADER(class542);
objectlayout1001 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1001)->values[0] = instancevariable740;
((Type_Array)objectlayout1001)->values[1] = instancevariable741;
((Type_Array)objectlayout1001)->values[2] = instancevariable742;
((Type_Array)objectlayout1001)->values[3] = instancevariable743;
((Type_Array)objectlayout1001)->values[4] = instancevariable744;
((Type_Array)objectlayout1001)->values[5] = instancevariable784;
symbol4127 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout1002 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1002)->values[0] = instancevariable785;
((Type_Array)objectlayout1002)->values[1] = instancevariable786;
((Type_Array)objectlayout1002)->values[2] = instancevariable787;
instancevariable788 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1002)->values[3] = instancevariable788;
instancevariable789 = (Object)new_AST_InstVariable(4, L"scopeId");
((Type_Array)objectlayout1002)->values[4] = instancevariable789;
instancevariable790 = (Object)new_AST_InstVariable(5, L"localId");
((Type_Array)objectlayout1002)->values[5] = instancevariable790;
class543 = (Object)new_Class_withMeta((Object)class542, objectlayout1002, objectlayout1001);
((Type_Class)class543)->name = (Type_Symbol)symbol4127;
metaclass543 = (Object)HEADER(class543);
objectlayout1003 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1003)->values[0] = instancevariable740;
((Type_Array)objectlayout1003)->values[1] = instancevariable741;
((Type_Array)objectlayout1003)->values[2] = instancevariable742;
((Type_Array)objectlayout1003)->values[3] = instancevariable743;
((Type_Array)objectlayout1003)->values[4] = instancevariable744;
((Type_Array)objectlayout1003)->values[5] = instancevariable784;
symbol3917 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout1004 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1004)->values[0] = instancevariable785;
((Type_Array)objectlayout1004)->values[1] = instancevariable786;
((Type_Array)objectlayout1004)->values[2] = instancevariable787;
((Type_Array)objectlayout1004)->values[3] = instancevariable788;
((Type_Array)objectlayout1004)->values[4] = instancevariable789;
((Type_Array)objectlayout1004)->values[5] = instancevariable790;
class544 = (Object)new_Class_withMeta((Object)class543, objectlayout1004, objectlayout1003);
((Type_Class)class544)->name = (Type_Symbol)symbol3917;
metaclass544 = (Object)HEADER(class544);
objectlayout1005 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1005)->values[0] = instancevariable740;
((Type_Array)objectlayout1005)->values[1] = instancevariable741;
((Type_Array)objectlayout1005)->values[2] = instancevariable742;
((Type_Array)objectlayout1005)->values[3] = instancevariable743;
((Type_Array)objectlayout1005)->values[4] = instancevariable744;
((Type_Array)objectlayout1005)->values[5] = instancevariable784;
symbol3983 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout1006 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1006)->values[0] = instancevariable785;
((Type_Array)objectlayout1006)->values[1] = instancevariable786;
((Type_Array)objectlayout1006)->values[2] = instancevariable787;
((Type_Array)objectlayout1006)->values[3] = instancevariable788;
((Type_Array)objectlayout1006)->values[4] = instancevariable789;
((Type_Array)objectlayout1006)->values[5] = instancevariable790;
instancevariable791 = (Object)new_AST_InstVariable(6, L"key");
((Type_Array)objectlayout1006)->values[6] = instancevariable791;
class545 = (Object)new_Class_withMeta((Object)class543, objectlayout1006, objectlayout1005);
((Type_Class)class545)->name = (Type_Symbol)symbol3983;
metaclass545 = (Object)HEADER(class545);
objectlayout1007 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1007)->values[0] = instancevariable740;
((Type_Array)objectlayout1007)->values[1] = instancevariable741;
((Type_Array)objectlayout1007)->values[2] = instancevariable742;
((Type_Array)objectlayout1007)->values[3] = instancevariable743;
((Type_Array)objectlayout1007)->values[4] = instancevariable744;
((Type_Array)objectlayout1007)->values[5] = instancevariable784;
symbol3994 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout1008 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1008)->values[0] = instancevariable785;
((Type_Array)objectlayout1008)->values[1] = instancevariable786;
((Type_Array)objectlayout1008)->values[2] = instancevariable787;
instancevariable792 = (Object)new_AST_InstVariable(3, L"selector");
((Type_Array)objectlayout1008)->values[3] = instancevariable792;
class546 = (Object)new_Class_withMeta((Object)class542, objectlayout1008, objectlayout1007);
((Type_Class)class546)->name = (Type_Symbol)symbol3994;
metaclass546 = (Object)HEADER(class546);
objectlayout1009 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1009)->values[0] = instancevariable740;
((Type_Array)objectlayout1009)->values[1] = instancevariable741;
((Type_Array)objectlayout1009)->values[2] = instancevariable742;
((Type_Array)objectlayout1009)->values[3] = instancevariable743;
((Type_Array)objectlayout1009)->values[4] = instancevariable744;
((Type_Array)objectlayout1009)->values[5] = instancevariable784;
symbol3864 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout1010 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1010)->values[0] = instancevariable785;
((Type_Array)objectlayout1010)->values[1] = instancevariable786;
((Type_Array)objectlayout1010)->values[2] = instancevariable787;
((Type_Array)objectlayout1010)->values[3] = instancevariable792;
class547 = (Object)new_Class_withMeta((Object)class546, objectlayout1010, objectlayout1009);
((Type_Class)class547)->name = (Type_Symbol)symbol3864;
metaclass547 = (Object)HEADER(class547);
objectlayout1011 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1011)->values[0] = instancevariable740;
((Type_Array)objectlayout1011)->values[1] = instancevariable741;
((Type_Array)objectlayout1011)->values[2] = instancevariable742;
((Type_Array)objectlayout1011)->values[3] = instancevariable743;
((Type_Array)objectlayout1011)->values[4] = instancevariable744;
((Type_Array)objectlayout1011)->values[5] = instancevariable784;
symbol3892 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout1012 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1012)->values[0] = instancevariable785;
((Type_Array)objectlayout1012)->values[1] = instancevariable786;
((Type_Array)objectlayout1012)->values[2] = instancevariable787;
((Type_Array)objectlayout1012)->values[3] = instancevariable792;
instancevariable793 = (Object)new_AST_InstVariable(4, L"keywords");
((Type_Array)objectlayout1012)->values[4] = instancevariable793;
class548 = (Object)new_Class_withMeta((Object)class546, objectlayout1012, objectlayout1011);
((Type_Class)class548)->name = (Type_Symbol)symbol3892;
metaclass548 = (Object)HEADER(class548);
objectlayout1013 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1013)->values[0] = instancevariable740;
((Type_Array)objectlayout1013)->values[1] = instancevariable741;
((Type_Array)objectlayout1013)->values[2] = instancevariable742;
((Type_Array)objectlayout1013)->values[3] = instancevariable743;
((Type_Array)objectlayout1013)->values[4] = instancevariable744;
((Type_Array)objectlayout1013)->values[5] = instancevariable784;
symbol3884 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout1014 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1014)->values[0] = instancevariable785;
((Type_Array)objectlayout1014)->values[1] = instancevariable786;
((Type_Array)objectlayout1014)->values[2] = instancevariable787;
((Type_Array)objectlayout1014)->values[3] = instancevariable792;
class549 = (Object)new_Class_withMeta((Object)class547, objectlayout1014, objectlayout1013);
((Type_Class)class549)->name = (Type_Symbol)symbol3884;
metaclass549 = (Object)HEADER(class549);
objectlayout1015 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1015)->values[0] = instancevariable740;
((Type_Array)objectlayout1015)->values[1] = instancevariable741;
((Type_Array)objectlayout1015)->values[2] = instancevariable742;
((Type_Array)objectlayout1015)->values[3] = instancevariable743;
((Type_Array)objectlayout1015)->values[4] = instancevariable744;
((Type_Array)objectlayout1015)->values[5] = instancevariable784;
symbol3845 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout1016 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1016)->values[0] = instancevariable785;
((Type_Array)objectlayout1016)->values[1] = instancevariable786;
((Type_Array)objectlayout1016)->values[2] = instancevariable787;
((Type_Array)objectlayout1016)->values[3] = instancevariable792;
((Type_Array)objectlayout1016)->values[4] = instancevariable793;
instancevariable794 = (Object)new_AST_InstVariable(5, L"receiver");
((Type_Array)objectlayout1016)->values[5] = instancevariable794;
instancevariable795 = (Object)new_AST_InstVariable(6, L"arguments");
((Type_Array)objectlayout1016)->values[6] = instancevariable795;
class550 = (Object)new_Class_withMeta((Object)class548, objectlayout1016, objectlayout1015);
((Type_Class)class550)->name = (Type_Symbol)symbol3845;
metaclass550 = (Object)HEADER(class550);
objectlayout1017 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1017)->values[0] = instancevariable740;
((Type_Array)objectlayout1017)->values[1] = instancevariable741;
((Type_Array)objectlayout1017)->values[2] = instancevariable742;
((Type_Array)objectlayout1017)->values[3] = instancevariable743;
((Type_Array)objectlayout1017)->values[4] = instancevariable744;
((Type_Array)objectlayout1017)->values[5] = instancevariable784;
symbol3942 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout1018 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1018)->values[0] = instancevariable785;
((Type_Array)objectlayout1018)->values[1] = instancevariable786;
((Type_Array)objectlayout1018)->values[2] = instancevariable787;
class551 = (Object)new_Class_withMeta((Object)class542, objectlayout1018, objectlayout1017);
((Type_Class)class551)->name = (Type_Symbol)symbol3942;
metaclass551 = (Object)HEADER(class551);
objectlayout1019 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1019)->values[0] = instancevariable740;
((Type_Array)objectlayout1019)->values[1] = instancevariable741;
((Type_Array)objectlayout1019)->values[2] = instancevariable742;
((Type_Array)objectlayout1019)->values[3] = instancevariable743;
((Type_Array)objectlayout1019)->values[4] = instancevariable744;
((Type_Array)objectlayout1019)->values[5] = instancevariable784;
symbol3837 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout1020 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1020)->values[0] = instancevariable785;
((Type_Array)objectlayout1020)->values[1] = instancevariable786;
((Type_Array)objectlayout1020)->values[2] = instancevariable787;
instancevariable796 = (Object)new_AST_InstVariable(3, L"string");
((Type_Array)objectlayout1020)->values[3] = instancevariable796;
class552 = (Object)new_Class_withMeta((Object)class551, objectlayout1020, objectlayout1019);
((Type_Class)class552)->name = (Type_Symbol)symbol3837;
metaclass552 = (Object)HEADER(class552);
objectlayout1021 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1021)->values[0] = instancevariable740;
((Type_Array)objectlayout1021)->values[1] = instancevariable741;
((Type_Array)objectlayout1021)->values[2] = instancevariable742;
((Type_Array)objectlayout1021)->values[3] = instancevariable743;
((Type_Array)objectlayout1021)->values[4] = instancevariable744;
((Type_Array)objectlayout1021)->values[5] = instancevariable784;
symbol3876 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout1022 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1022)->values[0] = instancevariable785;
((Type_Array)objectlayout1022)->values[1] = instancevariable786;
((Type_Array)objectlayout1022)->values[2] = instancevariable787;
class553 = (Object)new_Class_withMeta((Object)class542, objectlayout1022, objectlayout1021);
((Type_Class)class553)->name = (Type_Symbol)symbol3876;
metaclass553 = (Object)HEADER(class553);
objectlayout1023 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1023)->values[0] = instancevariable740;
((Type_Array)objectlayout1023)->values[1] = instancevariable741;
((Type_Array)objectlayout1023)->values[2] = instancevariable742;
((Type_Array)objectlayout1023)->values[3] = instancevariable743;
((Type_Array)objectlayout1023)->values[4] = instancevariable744;
((Type_Array)objectlayout1023)->values[5] = instancevariable784;
symbol3902 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout1024 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1024)->values[0] = instancevariable785;
((Type_Array)objectlayout1024)->values[1] = instancevariable786;
((Type_Array)objectlayout1024)->values[2] = instancevariable787;
instancevariable797 = (Object)new_AST_InstVariable(3, L"char");
((Type_Array)objectlayout1024)->values[3] = instancevariable797;
class554 = (Object)new_Class_withMeta((Object)class551, objectlayout1024, objectlayout1023);
((Type_Class)class554)->name = (Type_Symbol)symbol3902;
metaclass554 = (Object)HEADER(class554);
objectlayout1025 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1025)->values[0] = instancevariable740;
((Type_Array)objectlayout1025)->values[1] = instancevariable741;
((Type_Array)objectlayout1025)->values[2] = instancevariable742;
((Type_Array)objectlayout1025)->values[3] = instancevariable743;
((Type_Array)objectlayout1025)->values[4] = instancevariable744;
((Type_Array)objectlayout1025)->values[5] = instancevariable784;
symbol3988 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout1026 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1026)->values[0] = instancevariable785;
((Type_Array)objectlayout1026)->values[1] = instancevariable786;
((Type_Array)objectlayout1026)->values[2] = instancevariable787;
class555 = (Object)new_Class_withMeta((Object)class542, objectlayout1026, objectlayout1025);
((Type_Class)class555)->name = (Type_Symbol)symbol3988;
metaclass555 = (Object)HEADER(class555);
objectlayout1027 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1027)->values[0] = instancevariable740;
((Type_Array)objectlayout1027)->values[1] = instancevariable741;
((Type_Array)objectlayout1027)->values[2] = instancevariable742;
((Type_Array)objectlayout1027)->values[3] = instancevariable743;
((Type_Array)objectlayout1027)->values[4] = instancevariable744;
((Type_Array)objectlayout1027)->values[5] = instancevariable784;
symbol3846 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout1028 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1028)->values[0] = instancevariable785;
((Type_Array)objectlayout1028)->values[1] = instancevariable786;
((Type_Array)objectlayout1028)->values[2] = instancevariable787;
((Type_Array)objectlayout1028)->values[3] = instancevariable792;
instancevariable798 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1028)->values[4] = instancevariable798;
class556 = (Object)new_Class_withMeta((Object)class547, objectlayout1028, objectlayout1027);
((Type_Class)class556)->name = (Type_Symbol)symbol3846;
metaclass556 = (Object)HEADER(class556);
objectlayout1029 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1029)->values[0] = instancevariable740;
((Type_Array)objectlayout1029)->values[1] = instancevariable741;
((Type_Array)objectlayout1029)->values[2] = instancevariable742;
((Type_Array)objectlayout1029)->values[3] = instancevariable743;
((Type_Array)objectlayout1029)->values[4] = instancevariable744;
((Type_Array)objectlayout1029)->values[5] = instancevariable784;
symbol3877 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout1030 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1030)->values[0] = instancevariable785;
((Type_Array)objectlayout1030)->values[1] = instancevariable786;
((Type_Array)objectlayout1030)->values[2] = instancevariable787;
class557 = (Object)new_Class_withMeta((Object)class542, objectlayout1030, objectlayout1029);
((Type_Class)class557)->name = (Type_Symbol)symbol3877;
metaclass557 = (Object)HEADER(class557);
objectlayout1031 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1031)->values[0] = instancevariable740;
((Type_Array)objectlayout1031)->values[1] = instancevariable741;
((Type_Array)objectlayout1031)->values[2] = instancevariable742;
((Type_Array)objectlayout1031)->values[3] = instancevariable743;
((Type_Array)objectlayout1031)->values[4] = instancevariable744;
((Type_Array)objectlayout1031)->values[5] = instancevariable784;
symbol3850 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout1032 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1032)->values[0] = instancevariable785;
((Type_Array)objectlayout1032)->values[1] = instancevariable786;
((Type_Array)objectlayout1032)->values[2] = instancevariable787;
instancevariable799 = (Object)new_AST_InstVariable(3, L"message");
((Type_Array)objectlayout1032)->values[3] = instancevariable799;
instancevariable800 = (Object)new_AST_InstVariable(4, L"annotations");
((Type_Array)objectlayout1032)->values[4] = instancevariable800;
instancevariable801 = (Object)new_AST_InstVariable(5, L"temporaries");
((Type_Array)objectlayout1032)->values[5] = instancevariable801;
instancevariable802 = (Object)new_AST_InstVariable(6, L"statements");
((Type_Array)objectlayout1032)->values[6] = instancevariable802;
class558 = (Object)new_Class_withMeta((Object)class542, objectlayout1032, objectlayout1031);
((Type_Class)class558)->name = (Type_Symbol)symbol3850;
metaclass558 = (Object)HEADER(class558);
objectlayout1033 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1033)->values[0] = instancevariable740;
((Type_Array)objectlayout1033)->values[1] = instancevariable741;
((Type_Array)objectlayout1033)->values[2] = instancevariable742;
((Type_Array)objectlayout1033)->values[3] = instancevariable743;
((Type_Array)objectlayout1033)->values[4] = instancevariable744;
((Type_Array)objectlayout1033)->values[5] = instancevariable784;
symbol4035 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout1034 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1034)->values[0] = instancevariable785;
((Type_Array)objectlayout1034)->values[1] = instancevariable786;
((Type_Array)objectlayout1034)->values[2] = instancevariable787;
((Type_Array)objectlayout1034)->values[3] = instancevariable792;
class559 = (Object)new_Class_withMeta((Object)class547, objectlayout1034, objectlayout1033);
((Type_Class)class559)->name = (Type_Symbol)symbol4035;
metaclass559 = (Object)HEADER(class559);
objectlayout1035 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1035)->values[0] = instancevariable740;
((Type_Array)objectlayout1035)->values[1] = instancevariable741;
((Type_Array)objectlayout1035)->values[2] = instancevariable742;
((Type_Array)objectlayout1035)->values[3] = instancevariable743;
((Type_Array)objectlayout1035)->values[4] = instancevariable744;
((Type_Array)objectlayout1035)->values[5] = instancevariable784;
symbol3831 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout1036 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1036)->values[0] = instancevariable785;
((Type_Array)objectlayout1036)->values[1] = instancevariable786;
((Type_Array)objectlayout1036)->values[2] = instancevariable787;
instancevariable803 = (Object)new_AST_InstVariable(3, L"literals");
((Type_Array)objectlayout1036)->values[3] = instancevariable803;
class560 = (Object)new_Class_withMeta((Object)class551, objectlayout1036, objectlayout1035);
((Type_Class)class560)->name = (Type_Symbol)symbol3831;
metaclass560 = (Object)HEADER(class560);
objectlayout1037 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1037)->values[0] = instancevariable740;
((Type_Array)objectlayout1037)->values[1] = instancevariable741;
((Type_Array)objectlayout1037)->values[2] = instancevariable742;
((Type_Array)objectlayout1037)->values[3] = instancevariable743;
((Type_Array)objectlayout1037)->values[4] = instancevariable744;
((Type_Array)objectlayout1037)->values[5] = instancevariable784;
symbol3859 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout1038 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1038)->values[0] = instancevariable785;
((Type_Array)objectlayout1038)->values[1] = instancevariable786;
((Type_Array)objectlayout1038)->values[2] = instancevariable787;
((Type_Array)objectlayout1038)->values[3] = instancevariable792;
((Type_Array)objectlayout1038)->values[4] = instancevariable793;
instancevariable804 = (Object)new_AST_InstVariable(5, L"parameters");
((Type_Array)objectlayout1038)->values[5] = instancevariable804;
class561 = (Object)new_Class_withMeta((Object)class548, objectlayout1038, objectlayout1037);
((Type_Class)class561)->name = (Type_Symbol)symbol3859;
metaclass561 = (Object)HEADER(class561);
objectlayout1039 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1039)->values[0] = instancevariable740;
((Type_Array)objectlayout1039)->values[1] = instancevariable741;
((Type_Array)objectlayout1039)->values[2] = instancevariable742;
((Type_Array)objectlayout1039)->values[3] = instancevariable743;
((Type_Array)objectlayout1039)->values[4] = instancevariable744;
((Type_Array)objectlayout1039)->values[5] = instancevariable784;
symbol3879 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout1040 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1040)->values[0] = instancevariable785;
((Type_Array)objectlayout1040)->values[1] = instancevariable786;
((Type_Array)objectlayout1040)->values[2] = instancevariable787;
instancevariable805 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout1040)->values[3] = instancevariable805;
instancevariable806 = (Object)new_AST_InstVariable(4, L"temporaries");
((Type_Array)objectlayout1040)->values[4] = instancevariable806;
instancevariable807 = (Object)new_AST_InstVariable(5, L"statements");
((Type_Array)objectlayout1040)->values[5] = instancevariable807;
class562 = (Object)new_Class_withMeta((Object)class542, objectlayout1040, objectlayout1039);
((Type_Class)class562)->name = (Type_Symbol)symbol3879;
metaclass562 = (Object)HEADER(class562);
objectlayout1041 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1041)->values[0] = instancevariable740;
((Type_Array)objectlayout1041)->values[1] = instancevariable741;
((Type_Array)objectlayout1041)->values[2] = instancevariable742;
((Type_Array)objectlayout1041)->values[3] = instancevariable743;
((Type_Array)objectlayout1041)->values[4] = instancevariable744;
((Type_Array)objectlayout1041)->values[5] = instancevariable784;
symbol3993 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout1042 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1042)->values[0] = instancevariable785;
((Type_Array)objectlayout1042)->values[1] = instancevariable786;
((Type_Array)objectlayout1042)->values[2] = instancevariable787;
((Type_Array)objectlayout1042)->values[3] = instancevariable792;
class563 = (Object)new_Class_withMeta((Object)class546, objectlayout1042, objectlayout1041);
((Type_Class)class563)->name = (Type_Symbol)symbol3993;
metaclass563 = (Object)HEADER(class563);
objectlayout1043 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1043)->values[0] = instancevariable740;
((Type_Array)objectlayout1043)->values[1] = instancevariable741;
((Type_Array)objectlayout1043)->values[2] = instancevariable742;
((Type_Array)objectlayout1043)->values[3] = instancevariable743;
((Type_Array)objectlayout1043)->values[4] = instancevariable744;
((Type_Array)objectlayout1043)->values[5] = instancevariable784;
symbol3852 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout1044 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1044)->values[0] = instancevariable785;
((Type_Array)objectlayout1044)->values[1] = instancevariable786;
((Type_Array)objectlayout1044)->values[2] = instancevariable787;
((Type_Array)objectlayout1044)->values[3] = instancevariable792;
instancevariable808 = (Object)new_AST_InstVariable(4, L"parameter");
((Type_Array)objectlayout1044)->values[4] = instancevariable808;
class564 = (Object)new_Class_withMeta((Object)class563, objectlayout1044, objectlayout1043);
((Type_Class)class564)->name = (Type_Symbol)symbol3852;
metaclass564 = (Object)HEADER(class564);
objectlayout1045 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1045)->values[0] = instancevariable740;
((Type_Array)objectlayout1045)->values[1] = instancevariable741;
((Type_Array)objectlayout1045)->values[2] = instancevariable742;
((Type_Array)objectlayout1045)->values[3] = instancevariable743;
((Type_Array)objectlayout1045)->values[4] = instancevariable744;
((Type_Array)objectlayout1045)->values[5] = instancevariable784;
symbol3841 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout1046 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1046)->values[0] = instancevariable785;
((Type_Array)objectlayout1046)->values[1] = instancevariable786;
((Type_Array)objectlayout1046)->values[2] = instancevariable787;
instancevariable809 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1046)->values[3] = instancevariable809;
instancevariable810 = (Object)new_AST_InstVariable(4, L"type");
((Type_Array)objectlayout1046)->values[4] = instancevariable810;
class565 = (Object)new_Class_withMeta((Object)class542, objectlayout1046, objectlayout1045);
((Type_Class)class565)->name = (Type_Symbol)symbol3841;
metaclass565 = (Object)HEADER(class565);
objectlayout1047 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1047)->values[0] = instancevariable740;
((Type_Array)objectlayout1047)->values[1] = instancevariable741;
((Type_Array)objectlayout1047)->values[2] = instancevariable742;
((Type_Array)objectlayout1047)->values[3] = instancevariable743;
((Type_Array)objectlayout1047)->values[4] = instancevariable744;
((Type_Array)objectlayout1047)->values[5] = instancevariable784;
symbol3872 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout1048 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1048)->values[0] = instancevariable785;
((Type_Array)objectlayout1048)->values[1] = instancevariable786;
((Type_Array)objectlayout1048)->values[2] = instancevariable787;
instancevariable811 = (Object)new_AST_InstVariable(3, L"expression");
((Type_Array)objectlayout1048)->values[3] = instancevariable811;
class566 = (Object)new_Class_withMeta((Object)class555, objectlayout1048, objectlayout1047);
((Type_Class)class566)->name = (Type_Symbol)symbol3872;
metaclass566 = (Object)HEADER(class566);
objectlayout1049 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1049)->values[0] = instancevariable740;
((Type_Array)objectlayout1049)->values[1] = instancevariable741;
((Type_Array)objectlayout1049)->values[2] = instancevariable742;
((Type_Array)objectlayout1049)->values[3] = instancevariable743;
((Type_Array)objectlayout1049)->values[4] = instancevariable744;
((Type_Array)objectlayout1049)->values[5] = instancevariable784;
symbol3862 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout1050 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1050)->values[0] = instancevariable785;
((Type_Array)objectlayout1050)->values[1] = instancevariable786;
((Type_Array)objectlayout1050)->values[2] = instancevariable787;
instancevariable812 = (Object)new_AST_InstVariable(3, L"variable");
((Type_Array)objectlayout1050)->values[3] = instancevariable812;
instancevariable813 = (Object)new_AST_InstVariable(4, L"expression");
((Type_Array)objectlayout1050)->values[4] = instancevariable813;
class567 = (Object)new_Class_withMeta((Object)class555, objectlayout1050, objectlayout1049);
((Type_Class)class567)->name = (Type_Symbol)symbol3862;
metaclass567 = (Object)HEADER(class567);
objectlayout1051 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1051)->values[0] = instancevariable740;
((Type_Array)objectlayout1051)->values[1] = instancevariable741;
((Type_Array)objectlayout1051)->values[2] = instancevariable742;
((Type_Array)objectlayout1051)->values[3] = instancevariable743;
((Type_Array)objectlayout1051)->values[4] = instancevariable744;
((Type_Array)objectlayout1051)->values[5] = instancevariable784;
symbol3843 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout1052 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1052)->values[0] = instancevariable785;
((Type_Array)objectlayout1052)->values[1] = instancevariable786;
((Type_Array)objectlayout1052)->values[2] = instancevariable787;
instancevariable814 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout1052)->values[3] = instancevariable814;
instancevariable815 = (Object)new_AST_InstVariable(4, L"cascades");
((Type_Array)objectlayout1052)->values[4] = instancevariable815;
class568 = (Object)new_Class_withMeta((Object)class555, objectlayout1052, objectlayout1051);
((Type_Class)class568)->name = (Type_Symbol)symbol3843;
metaclass568 = (Object)HEADER(class568);
objectlayout1053 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1053)->values[0] = instancevariable740;
((Type_Array)objectlayout1053)->values[1] = instancevariable741;
((Type_Array)objectlayout1053)->values[2] = instancevariable742;
((Type_Array)objectlayout1053)->values[3] = instancevariable743;
((Type_Array)objectlayout1053)->values[4] = instancevariable744;
((Type_Array)objectlayout1053)->values[5] = instancevariable784;
symbol3835 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout1054 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1054)->values[0] = instancevariable785;
((Type_Array)objectlayout1054)->values[1] = instancevariable786;
((Type_Array)objectlayout1054)->values[2] = instancevariable787;
instancevariable816 = (Object)new_AST_InstVariable(3, L"number");
((Type_Array)objectlayout1054)->values[3] = instancevariable816;
instancevariable817 = (Object)new_AST_InstVariable(4, L"base");
((Type_Array)objectlayout1054)->values[4] = instancevariable817;
class569 = (Object)new_Class_withMeta((Object)class551, objectlayout1054, objectlayout1053);
((Type_Class)class569)->name = (Type_Symbol)symbol3835;
metaclass569 = (Object)HEADER(class569);
objectlayout1055 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1055)->values[0] = instancevariable740;
((Type_Array)objectlayout1055)->values[1] = instancevariable741;
((Type_Array)objectlayout1055)->values[2] = instancevariable742;
((Type_Array)objectlayout1055)->values[3] = instancevariable743;
((Type_Array)objectlayout1055)->values[4] = instancevariable744;
((Type_Array)objectlayout1055)->values[5] = instancevariable784;
symbol4079 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout1056 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1056)->values[0] = instancevariable785;
((Type_Array)objectlayout1056)->values[1] = instancevariable786;
((Type_Array)objectlayout1056)->values[2] = instancevariable787;
instancevariable818 = (Object)new_AST_InstVariable(3, L"expressions");
((Type_Array)objectlayout1056)->values[3] = instancevariable818;
class570 = (Object)new_Class_withMeta((Object)class555, objectlayout1056, objectlayout1055);
((Type_Class)class570)->name = (Type_Symbol)symbol4079;
metaclass570 = (Object)HEADER(class570);
objectlayout1057 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1057)->values[0] = instancevariable740;
((Type_Array)objectlayout1057)->values[1] = instancevariable741;
((Type_Array)objectlayout1057)->values[2] = instancevariable742;
((Type_Array)objectlayout1057)->values[3] = instancevariable743;
((Type_Array)objectlayout1057)->values[4] = instancevariable744;
((Type_Array)objectlayout1057)->values[5] = instancevariable784;
symbol3883 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout1058 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1058)->values[0] = instancevariable785;
((Type_Array)objectlayout1058)->values[1] = instancevariable786;
((Type_Array)objectlayout1058)->values[2] = instancevariable787;
((Type_Array)objectlayout1058)->values[3] = instancevariable792;
((Type_Array)objectlayout1058)->values[4] = instancevariable793;
instancevariable819 = (Object)new_AST_InstVariable(5, L"arguments");
((Type_Array)objectlayout1058)->values[5] = instancevariable819;
class571 = (Object)new_Class_withMeta((Object)class548, objectlayout1058, objectlayout1057);
((Type_Class)class571)->name = (Type_Symbol)symbol3883;
metaclass571 = (Object)HEADER(class571);
objectlayout1059 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1059)->values[0] = instancevariable740;
((Type_Array)objectlayout1059)->values[1] = instancevariable741;
((Type_Array)objectlayout1059)->values[2] = instancevariable742;
((Type_Array)objectlayout1059)->values[3] = instancevariable743;
((Type_Array)objectlayout1059)->values[4] = instancevariable744;
((Type_Array)objectlayout1059)->values[5] = instancevariable784;
symbol3844 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout1060 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1060)->values[0] = instancevariable785;
((Type_Array)objectlayout1060)->values[1] = instancevariable786;
((Type_Array)objectlayout1060)->values[2] = instancevariable787;
((Type_Array)objectlayout1060)->values[3] = instancevariable792;
instancevariable820 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1060)->values[4] = instancevariable820;
instancevariable821 = (Object)new_AST_InstVariable(5, L"argument");
((Type_Array)objectlayout1060)->values[5] = instancevariable821;
class572 = (Object)new_Class_withMeta((Object)class563, objectlayout1060, objectlayout1059);
((Type_Class)class572)->name = (Type_Symbol)symbol3844;
metaclass572 = (Object)HEADER(class572);
objectlayout1061 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1061)->values[0] = instancevariable740;
((Type_Array)objectlayout1061)->values[1] = instancevariable741;
((Type_Array)objectlayout1061)->values[2] = instancevariable742;
((Type_Array)objectlayout1061)->values[3] = instancevariable743;
((Type_Array)objectlayout1061)->values[4] = instancevariable744;
((Type_Array)objectlayout1061)->values[5] = instancevariable784;
symbol3836 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout1062 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1062)->values[0] = instancevariable785;
((Type_Array)objectlayout1062)->values[1] = instancevariable786;
((Type_Array)objectlayout1062)->values[2] = instancevariable787;
instancevariable822 = (Object)new_AST_InstVariable(3, L"symbol");
((Type_Array)objectlayout1062)->values[3] = instancevariable822;
class573 = (Object)new_Class_withMeta((Object)class551, objectlayout1062, objectlayout1061);
((Type_Class)class573)->name = (Type_Symbol)symbol3836;
metaclass573 = (Object)HEADER(class573);
classreference569 = (Object)new_Organization_ClassReference((Type_Class)class515);
classreference570 = (Object)new_Organization_ClassReference((Type_Class)class514);
classreference571 = (Object)new_Organization_ClassReference((Type_Class)class513);
classreference572 = (Object)new_Organization_ClassReference((Type_Class)class518);
classreference573 = (Object)new_Organization_ClassReference((Type_Class)class517);
classreference574 = (Object)new_Organization_ClassReference((Type_Class)class516);
classreference575 = (Object)new_Organization_ClassReference((Type_Class)class519);
classreference576 = (Object)new_Organization_ClassReference((Type_Class)class520);

// Dictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	^ self at: key ifAbsent: [self at: key put: aBlock value]
localvariable2955 = (Object)new_AST_Variable_named(L"key");
localvariable2956 = (Object)new_AST_Variable_named(L"aBlock");
array2353 = (Object)new_Type_Array_with(2, (Object)localvariable2955, (Object)localvariable2956);
symbol4150 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");
symbol4151 = (Object)new_Type_Symbol_cached(L"value");
// value
send21125 = (Object)new_AST_Send((Object)localvariable2956, (Object)symbol4151, 0);
// at:put:
send21126 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable2955, (Object)send21125);
block1330 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21126);
// at:ifAbsent:
send21127 = (Object)new_AST_Send((Object)Self, (Object)symbol4150, 2, (Object)localvariable2955, (Object)block1330);
method2952 = (Object)new_AST_Method_with((Type_Array)array2353, (Type_Array)empty_Type_Array, 1, send21127);
symbol4138 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
methodclosure2952 = (Object)new_Runtime_MethodClosure(method2952);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol4138, (Runtime_MethodClosure)methodclosure2952);

classreference577 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);
classreference578 = (Object)new_Organization_ClassReference((Type_Class)class521);

// Array>>last
//last
// 	^ self at: self size.
// size
send21128 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:
send21129 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send21128);
method2953 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21129);
symbol3960 = (Object)new_Type_Symbol_cached(L"last");
methodclosure2953 = (Object)new_Runtime_MethodClosure(method2953);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3960, (Runtime_MethodClosure)methodclosure2953);


// Array>>do:
//do: aBlockClosure 
// 	1 to: self size do: 
// 		[:index | aBlockClosure value: (self at: index)]
localvariable2957 = (Object)new_AST_Variable_named(L"aBlockClosure");
array2354 = (Object)new_Type_Array_with(1, (Object)localvariable2957);
smallint1439 = (Object)new_Type_SmallInt(1);
constant4128 = (Object)new_AST_Constant((Object)smallint1439);
symbol4152 = (Object)new_Type_Symbol_cached(L"to:do:");
// size
send21130 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable2958 = (Object)new_AST_Variable_named(L"index");
array2355 = (Object)new_Type_Array_with(1, (Object)localvariable2958);
// at:
send21131 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable2958);
// value:
send21132 = (Object)new_AST_Send((Object)localvariable2957, (Object)SMB_value_, 1, (Object)send21131);
block1331 = (Object)new_AST_Block_with((Type_Array)array2355, (Type_Array)empty_Type_Array, 1, 1, send21132);
// to:do:
send21133 = (Object)new_AST_Send((Object)constant4128, (Object)symbol4152, 2, (Object)send21130, (Object)block1331);
method2954 = (Object)new_AST_Method_with((Type_Array)array2354, (Type_Array)empty_Type_Array, 2, send21133, Self);
symbol3964 = (Object)new_Type_Symbol_cached(L"do:");
methodclosure2954 = (Object)new_Runtime_MethodClosure(method2954);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3964, (Runtime_MethodClosure)methodclosure2954);


// Array>>add:
//add: anElement
// 	| result |
// 	result := self class new: self size +1.
// 	self doWithIndex: [:el :i | result at: i put: el ].
// 	result last: anElement.
// 	^ result.
localvariable2959 = (Object)new_AST_Variable_named(L"anElement");
array2356 = (Object)new_Type_Array_with(1, (Object)localvariable2959);
localvariable2960 = (Object)new_AST_Variable_named(L"result");
array2357 = (Object)new_Type_Array_with(1, (Object)localvariable2960);
// class
send21134 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol3907 = (Object)new_Type_Symbol_cached(L"new:");
// size
send21135 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint1440 = (Object)new_Type_SmallInt(1);
constant4129 = (Object)new_AST_Constant((Object)smallint1440);
// +
send21136 = (Object)new_AST_Send((Object)send21135, (Object)SMB__plus, 1, (Object)constant4129);
// new:
send21137 = (Object)new_AST_Send((Object)send21134, (Object)symbol3907, 1, (Object)send21136);
assign2564 = (Object)new_AST_Assign((Object)localvariable2960, (Object)send21137);
symbol3962 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
localvariable2961 = (Object)new_AST_Variable_named(L"el");
localvariable2962 = (Object)new_AST_Variable_named(L"i");
array2358 = (Object)new_Type_Array_with(2, (Object)localvariable2961, (Object)localvariable2962);
// at:put:
send21138 = (Object)new_AST_Send((Object)localvariable2960, (Object)SMB_at_put_, 2, (Object)localvariable2962, (Object)localvariable2961);
block1332 = (Object)new_AST_Block_with((Type_Array)array2358, (Type_Array)empty_Type_Array, 1, 1, send21138);
// doWithIndex:
send21139 = (Object)new_AST_Send((Object)Self, (Object)symbol3962, 1, (Object)block1332);
symbol3967 = (Object)new_Type_Symbol_cached(L"last:");
// last:
send21140 = (Object)new_AST_Send((Object)localvariable2960, (Object)symbol3967, 1, (Object)localvariable2959);
method2955 = (Object)new_AST_Method_with((Type_Array)array2356, (Type_Array)array2357, 4, assign2564, send21139, send21140, localvariable2960);
symbol3965 = (Object)new_Type_Symbol_cached(L"add:");
methodclosure2955 = (Object)new_Runtime_MethodClosure(method2955);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3965, (Runtime_MethodClosure)methodclosure2955);


// Array>>initialize
//initialize 
// 	super initialize.
symbol3826 = (Object)new_Type_Symbol_cached(L"initialize");
super255 = (Object)new_AST_Super((Object)symbol3826, 0);
method2956 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super255, Self);
methodclosure2956 = (Object)new_Runtime_MethodClosure(method2956);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure2956);


// Array>>first
//first
// 	^ self at: 1.
smallint1441 = (Object)new_Type_SmallInt(1);
constant4130 = (Object)new_AST_Constant((Object)smallint1441);
// at:
send21141 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant4130);
method2957 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21141);
symbol3961 = (Object)new_Type_Symbol_cached(L"first");
methodclosure2957 = (Object)new_Runtime_MethodClosure(method2957);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3961, (Runtime_MethodClosure)methodclosure2957);


// Array>>=
//= other
// 	self == other ifTrue: [^ true].
// 	self class = other class ifFalse: [ ^ false].
// 	self size = other size ifFalse: [ ^ false ].
// 	1 to: self size do: [ :index|
// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].
// 	].
// 	^ true.
localvariable2963 = (Object)new_AST_Variable_named(L"other");
array2359 = (Object)new_Type_Array_with(1, (Object)localvariable2963);
variable143 = (Object)new_AST_Variable_named(L"return");
array2360 = (Object)new_Type_Array_with(1, (Object)variable143);
// ==
send21142 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable2963);
// escape:
send21143 = (Object)new_AST_Send((Object)variable143, (Object)SMB_escape_, 1, (Object)True_Const);
block1333 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21143);
// ifTrue:
send21144 = (Object)new_AST_Send((Object)send21142, (Object)SMB_ifTrue_, 1, (Object)block1333);
// class
send21145 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send21146 = (Object)new_AST_Send((Object)localvariable2963, (Object)SMB_class, 0);
// =
send21147 = (Object)new_AST_Send((Object)send21145, (Object)SMB__equal, 1, (Object)send21146);
// escape:
send21148 = (Object)new_AST_Send((Object)variable143, (Object)SMB_escape_, 1, (Object)False_Const);
block1334 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21148);
// ifFalse:
send21149 = (Object)new_AST_Send((Object)send21147, (Object)SMB_ifFalse_, 1, (Object)block1334);
// size
send21150 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// size
send21151 = (Object)new_AST_Send((Object)localvariable2963, (Object)SMB_size, 0);
// =
send21152 = (Object)new_AST_Send((Object)send21150, (Object)SMB__equal, 1, (Object)send21151);
// escape:
send21153 = (Object)new_AST_Send((Object)variable143, (Object)SMB_escape_, 1, (Object)False_Const);
block1335 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21153);
// ifFalse:
send21154 = (Object)new_AST_Send((Object)send21152, (Object)SMB_ifFalse_, 1, (Object)block1335);
smallint1442 = (Object)new_Type_SmallInt(1);
constant4131 = (Object)new_AST_Constant((Object)smallint1442);
// size
send21155 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable2964 = (Object)new_AST_Variable_named(L"index");
array2361 = (Object)new_Type_Array_with(1, (Object)localvariable2964);
// at:
send21156 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable2964);
// at:
send21157 = (Object)new_AST_Send((Object)localvariable2963, (Object)SMB_at_, 1, (Object)localvariable2964);
// =
send21158 = (Object)new_AST_Send((Object)send21156, (Object)SMB__equal, 1, (Object)send21157);
// escape:
send21159 = (Object)new_AST_Send((Object)variable143, (Object)SMB_escape_, 1, (Object)False_Const);
block1336 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21159);
// ifFalse:
send21160 = (Object)new_AST_Send((Object)send21158, (Object)SMB_ifFalse_, 1, (Object)block1336);
block1337 = (Object)new_AST_Block_with((Type_Array)array2361, (Type_Array)empty_Type_Array, 2, 1, send21160);
// to:do:
send21161 = (Object)new_AST_Send((Object)constant4131, (Object)symbol4152, 2, (Object)send21155, (Object)block1337);
block1338 = (Object)new_AST_Block_with((Type_Array)array2360, (Type_Array)empty_Type_Array, 1, 5, send21144, send21149, send21154, send21161, True_Const);
// on:
send21162 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1338);
method2958 = (Object)new_AST_Method_with((Type_Array)array2359, (Type_Array)empty_Type_Array, 1, send21162);
methodclosure2958 = (Object)new_Runtime_MethodClosure(method2958);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure2958);


// Array>>doWithIndex:
//doWithIndex: aBlockClosure 
// 	1 to: self size do:
// 		[:index | aBlockClosure value: (self at: index) value: index]
localvariable2965 = (Object)new_AST_Variable_named(L"aBlockClosure");
array2362 = (Object)new_Type_Array_with(1, (Object)localvariable2965);
smallint1443 = (Object)new_Type_SmallInt(1);
constant4132 = (Object)new_AST_Constant((Object)smallint1443);
// size
send21163 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable2966 = (Object)new_AST_Variable_named(L"index");
array2363 = (Object)new_Type_Array_with(1, (Object)localvariable2966);
symbol4153 = (Object)new_Type_Symbol_cached(L"value:value:");
// at:
send21164 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable2966);
// value:value:
send21165 = (Object)new_AST_Send((Object)localvariable2965, (Object)symbol4153, 2, (Object)send21164, (Object)localvariable2966);
block1339 = (Object)new_AST_Block_with((Type_Array)array2363, (Type_Array)empty_Type_Array, 1, 1, send21165);
// to:do:
send21166 = (Object)new_AST_Send((Object)constant4132, (Object)symbol4152, 2, (Object)send21163, (Object)block1339);
method2959 = (Object)new_AST_Method_with((Type_Array)array2362, (Type_Array)empty_Type_Array, 2, send21166, Self);
methodclosure2959 = (Object)new_Runtime_MethodClosure(method2959);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3962, (Runtime_MethodClosure)methodclosure2959);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable2967 = (Object)new_AST_Variable_named(L"thisValue");
localvariable2968 = (Object)new_AST_Variable_named(L"binaryBlock");
array2364 = (Object)new_Type_Array_with(2, (Object)localvariable2967, (Object)localvariable2968);
localvariable2969 = (Object)new_AST_Variable_named(L"nextValue");
array2365 = (Object)new_Type_Array_with(1, (Object)localvariable2969);
assign2565 = (Object)new_AST_Assign((Object)localvariable2969, (Object)localvariable2967);
localvariable2970 = (Object)new_AST_Variable_named(L"each");
array2366 = (Object)new_Type_Array_with(1, (Object)localvariable2970);
// value:value:
send21167 = (Object)new_AST_Send((Object)localvariable2968, (Object)symbol4153, 2, (Object)localvariable2969, (Object)localvariable2970);
assign2566 = (Object)new_AST_Assign((Object)localvariable2969, (Object)send21167);
block1340 = (Object)new_AST_Block_with((Type_Array)array2366, (Type_Array)empty_Type_Array, 1, 1, assign2566);
// do:
send21168 = (Object)new_AST_Send((Object)Self, (Object)symbol3964, 1, (Object)block1340);
method2960 = (Object)new_AST_Method_with((Type_Array)array2364, (Type_Array)array2365, 3, assign2565, send21168, localvariable2969);
symbol3966 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure2960 = (Object)new_Runtime_MethodClosure(method2960);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3966, (Runtime_MethodClosure)methodclosure2960);


// Array>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' #( '.
// 	self do: [:each|
// 		each printOn: aStream.
// 		aStream nextPutAll: ' '
// 	].
// 	aStream nextPutAll: ')'.
localvariable2971 = (Object)new_AST_Variable_named(L"aStream");
array2367 = (Object)new_Type_Array_with(1, (Object)localvariable2971);
symbol3923 = (Object)new_Type_Symbol_cached(L"printOn:");
super256 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable2971);
symbol4154 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string2453 = (Object)new_Type_String(L" #( ");
constant4133 = (Object)new_AST_Constant((Object)string2453);
// nextPutAll:
send21169 = (Object)new_AST_Send((Object)localvariable2971, (Object)symbol4154, 1, (Object)constant4133);
localvariable2972 = (Object)new_AST_Variable_named(L"each");
array2368 = (Object)new_Type_Array_with(1, (Object)localvariable2972);
// printOn:
send21170 = (Object)new_AST_Send((Object)localvariable2972, (Object)symbol3923, 1, (Object)localvariable2971);
string2454 = (Object)new_Type_String(L" ");
constant4134 = (Object)new_AST_Constant((Object)string2454);
// nextPutAll:
send21171 = (Object)new_AST_Send((Object)localvariable2971, (Object)symbol4154, 1, (Object)constant4134);
block1341 = (Object)new_AST_Block_with((Type_Array)array2368, (Type_Array)empty_Type_Array, 1, 2, send21170, send21171);
// do:
send21172 = (Object)new_AST_Send((Object)Self, (Object)symbol3964, 1, (Object)block1341);
string2455 = (Object)new_Type_String(L")");
constant4135 = (Object)new_AST_Constant((Object)string2455);
// nextPutAll:
send21173 = (Object)new_AST_Send((Object)localvariable2971, (Object)symbol4154, 1, (Object)constant4135);
method2961 = (Object)new_AST_Method_with((Type_Array)array2367, (Type_Array)empty_Type_Array, 5, super256, send21169, send21172, send21173, Self);
methodclosure2961 = (Object)new_Runtime_MethodClosure(method2961);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure2961);


// Array>>first:
//first: aValue
// 	^ self at: 1 put: aValue.
localvariable2973 = (Object)new_AST_Variable_named(L"aValue");
array2369 = (Object)new_Type_Array_with(1, (Object)localvariable2973);
smallint1444 = (Object)new_Type_SmallInt(1);
constant4136 = (Object)new_AST_Constant((Object)smallint1444);
// at:put:
send21174 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant4136, (Object)localvariable2973);
method2962 = (Object)new_AST_Method_with((Type_Array)array2369, (Type_Array)empty_Type_Array, 1, send21174);
symbol3963 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure2962 = (Object)new_Runtime_MethodClosure(method2962);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3963, (Runtime_MethodClosure)methodclosure2962);


// Array>>isEmpty
//isEmpty
// 	^ self size = 0
// size
send21175 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint1445 = (Object)new_Type_SmallInt(0);
constant4137 = (Object)new_AST_Constant((Object)smallint1445);
// =
send21176 = (Object)new_AST_Send((Object)send21175, (Object)SMB__equal, 1, (Object)constant4137);
method2963 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21176);
symbol3951 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure2963 = (Object)new_Runtime_MethodClosure(method2963);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3951, (Runtime_MethodClosure)methodclosure2963);


// Array>>last:
//last: aNode
// 	^ self at: self size put: aNode.
localvariable2974 = (Object)new_AST_Variable_named(L"aNode");
array2370 = (Object)new_Type_Array_with(1, (Object)localvariable2974);
// size
send21177 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:put:
send21178 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send21177, (Object)localvariable2974);
method2964 = (Object)new_AST_Method_with((Type_Array)array2370, (Type_Array)empty_Type_Array, 1, send21178);
methodclosure2964 = (Object)new_Runtime_MethodClosure(method2964);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3967, (Runtime_MethodClosure)methodclosure2964);

classreference579 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);
classreference580 = (Object)new_Organization_ClassReference((Type_Class)class522);

// Behavior>>methods
//methods
// 	^ methods
instancevariable823 = (Object)new_AST_InstVariable(2, L"methods");
method2965 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable823);
symbol3909 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure2965 = (Object)new_Runtime_MethodClosure(method2965);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3909, (Runtime_MethodClosure)methodclosure2965);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable2975 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable2976 = (Object)new_AST_Variable_named(L"instVars");
localvariable2977 = (Object)new_AST_Variable_named(L"instVar");
array2371 = (Object)new_Type_Array_with(3, (Object)localvariable2975, (Object)localvariable2976, (Object)localvariable2977);
symbol3908 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
// parentInstVariables
send21179 = (Object)new_AST_Send((Object)Self, (Object)symbol3908, 0);
assign2567 = (Object)new_AST_Assign((Object)localvariable2976, (Object)send21179);
symbol3919 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
// pInstVarNames
send21180 = (Object)new_AST_Send((Object)Self, (Object)symbol3919, 0);
localvariable2978 = (Object)new_AST_Variable_named(L"each");
array2372 = (Object)new_Type_Array_with(1, (Object)localvariable2978);
localvariable2979 = (Object)new_AST_Variable_named(L"var");
array2373 = (Object)new_Type_Array_with(1, (Object)localvariable2979);
// name
send21181 = (Object)new_AST_Send((Object)localvariable2979, (Object)SMB_name, 0);
// =
send21182 = (Object)new_AST_Send((Object)send21181, (Object)SMB__equal, 1, (Object)localvariable2978);
symbol4155 = (Object)new_Type_Symbol_cached(L"error:");
string2456 = (Object)new_Type_String(L"Double Declaration of \"");
constant4138 = (Object)new_AST_Constant((Object)string2456);
// ,
send21183 = (Object)new_AST_Send((Object)constant4138, (Object)SMB__concat, 1, (Object)localvariable2978);
string2457 = (Object)new_Type_String(L"\"");
constant4139 = (Object)new_AST_Constant((Object)string2457);
// ,
send21184 = (Object)new_AST_Send((Object)send21183, (Object)SMB__concat, 1, (Object)constant4139);
// error:
send21185 = (Object)new_AST_Send((Object)Self, (Object)symbol4155, 1, (Object)send21184);
block1342 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21185);
// ifTrue:
send21186 = (Object)new_AST_Send((Object)send21182, (Object)SMB_ifTrue_, 1, (Object)block1342);
block1343 = (Object)new_AST_Block_with((Type_Array)array2373, (Type_Array)empty_Type_Array, 2, 1, send21186);
// do:
send21187 = (Object)new_AST_Send((Object)localvariable2976, (Object)symbol3964, 1, (Object)block1343);
classreference581 = (Object)new_Organization_ClassReference((Type_Class)class544);
symbol4128 = (Object)new_Type_Symbol_cached(L"named:");
// named:
send21188 = (Object)new_AST_Send((Object)classreference581, (Object)symbol4128, 1, (Object)localvariable2978);
assign2568 = (Object)new_AST_Assign((Object)localvariable2977, (Object)send21188);
symbol4132 = (Object)new_Type_Symbol_cached(L"localId:");
// size
send21189 = (Object)new_AST_Send((Object)localvariable2976, (Object)SMB_size, 0);
// localId:
send21190 = (Object)new_AST_Send((Object)localvariable2977, (Object)symbol4132, 1, (Object)send21189);
// add:
send21191 = (Object)new_AST_Send((Object)localvariable2976, (Object)symbol3965, 1, (Object)localvariable2977);
block1344 = (Object)new_AST_Block_with((Type_Array)array2372, (Type_Array)empty_Type_Array, 1, 4, send21187, assign2568, send21190, send21191);
// do:
send21192 = (Object)new_AST_Send((Object)send21180, (Object)symbol3964, 1, (Object)block1344);
method2966 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2371, 3, assign2567, send21192, localvariable2976);
symbol3918 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure2966 = (Object)new_Runtime_MethodClosure(method2966);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3918, (Runtime_MethodClosure)methodclosure2966);


// Behavior>>layout
//layout
// 	^ layout
instancevariable824 = (Object)new_AST_InstVariable(0, L"layout");
method2967 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable824);
symbol3910 = (Object)new_Type_Symbol_cached(L"layout");
methodclosure2967 = (Object)new_Runtime_MethodClosure(method2967);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3910, (Runtime_MethodClosure)methodclosure2967);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable2980 = (Object)new_AST_Variable_named(L"sizeRequested");
array2374 = (Object)new_Type_Array_with(1, (Object)localvariable2980);
// basicNew:
send21193 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable2980);
// initialize
send21194 = (Object)new_AST_Send((Object)send21193, (Object)symbol3826, 0);
method2968 = (Object)new_AST_Method_with((Type_Array)array2374, (Type_Array)empty_Type_Array, 1, send21194);
methodclosure2968 = (Object)new_Runtime_MethodClosure(method2968);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3907, (Runtime_MethodClosure)methodclosure2968);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
symbol3916 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send21195 = (Object)new_AST_Send((Object)Self, (Object)symbol3916, 0);
symbol3827 = (Object)new_Type_Symbol_cached(L"~=");

// Nil>>isNil
//isNil
// 	^ true
method2969 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure2969 = (Object)new_Runtime_MethodClosure(method2969);
store_method((Type_Class)class538, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure2969);

classreference582 = (Object)new_Organization_ClassReference((Type_Class)class538);
symbol4156 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send21196 = (Object)new_AST_Send((Object)classreference582, (Object)symbol4156, 0);
// ~=
send21197 = (Object)new_AST_Send((Object)send21195, (Object)symbol3827, 1, (Object)send21196);
method2970 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21197);
symbol3914 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
methodclosure2970 = (Object)new_Runtime_MethodClosure(method2970);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3914, (Runtime_MethodClosure)methodclosure2970);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send21198 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send21199 = (Object)new_AST_Send((Object)send21198, (Object)symbol3826, 0);
method2971 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21199);
symbol3915 = (Object)new_Type_Symbol_cached(L"new");
methodclosure2971 = (Object)new_Runtime_MethodClosure(method2971);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3915, (Runtime_MethodClosure)methodclosure2971);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send21200 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
method2972 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21200);
methodclosure2972 = (Object)new_Runtime_MethodClosure(method2972);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3919, (Runtime_MethodClosure)methodclosure2972);


// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable2981 = (Object)new_AST_Variable_named(L"instVars");
array2375 = (Object)new_Type_Array_with(1, (Object)localvariable2981);
// new
send21201 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
assign2569 = (Object)new_AST_Assign((Object)localvariable2981, (Object)send21201);
// hasSuperclass
send21202 = (Object)new_AST_Send((Object)Self, (Object)symbol3914, 0);
symbol4157 = (Object)new_Type_Symbol_cached(L"addAll:");
// superclass
send21203 = (Object)new_AST_Send((Object)Self, (Object)symbol3916, 0);
// layout
send21204 = (Object)new_AST_Send((Object)send21203, (Object)symbol3910, 0);
// addAll:
send21205 = (Object)new_AST_Send((Object)localvariable2981, (Object)symbol4157, 1, (Object)send21204);
block1345 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21205);
block1346 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send21206 = (Object)new_AST_Send((Object)send21202, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1345, (Object)block1346);
method2973 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2375, 3, assign2569, send21206, localvariable2981);
methodclosure2973 = (Object)new_Runtime_MethodClosure(method2973);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3908, (Runtime_MethodClosure)methodclosure2973);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable825 = (Object)new_AST_InstVariable(1, L"superclass");
method2974 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable825);
methodclosure2974 = (Object)new_Runtime_MethodClosure(method2974);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3916, (Runtime_MethodClosure)methodclosure2974);

classreference583 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Class>>package
//package
// 	^ package
instancevariable826 = (Object)new_AST_InstVariable(4, L"package");
method2975 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable826);
symbol3924 = (Object)new_Type_Symbol_cached(L"package");
methodclosure2975 = (Object)new_Runtime_MethodClosure(method2975);
store_method((Type_Class)Class, (Type_Symbol)symbol3924, (Runtime_MethodClosure)methodclosure2975);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable2982 = (Object)new_AST_Variable_named(L"aStream");
array2376 = (Object)new_Type_Array_with(1, (Object)localvariable2982);
super257 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable2982);
string2458 = (Object)new_Type_String(L" ");
constant4140 = (Object)new_AST_Constant((Object)string2458);
// nextPutAll:
send21207 = (Object)new_AST_Send((Object)localvariable2982, (Object)symbol4154, 1, (Object)constant4140);
// name
send21208 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send21209 = (Object)new_AST_Send((Object)send21208, (Object)symbol3923, 1, (Object)localvariable2982);
method2976 = (Object)new_AST_Method_with((Type_Array)array2376, (Type_Array)empty_Type_Array, 4, super257, send21207, send21209, Self);
methodclosure2976 = (Object)new_Runtime_MethodClosure(method2976);
store_method((Type_Class)Class, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure2976);


// Class>>name
//name 
// 	^ name
instancevariable827 = (Object)new_AST_InstVariable(3, L"name");
method2977 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable827);
methodclosure2977 = (Object)new_Runtime_MethodClosure(method2977);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure2977);

classreference584 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable2983 = (Object)new_AST_Variable_named(L"aStream");
array2377 = (Object)new_Type_Array_with(1, (Object)localvariable2983);
super258 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable2983);
symbol4158 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send21210 = (Object)new_AST_Send((Object)Self, (Object)symbol4158, 0);
// name
send21211 = (Object)new_AST_Send((Object)send21210, (Object)SMB_name, 0);
// printOn:
send21212 = (Object)new_AST_Send((Object)send21211, (Object)symbol3923, 1, (Object)localvariable2983);
method2978 = (Object)new_AST_Method_with((Type_Array)array2377, (Type_Array)empty_Type_Array, 3, super258, send21212, Self);
methodclosure2978 = (Object)new_Runtime_MethodClosure(method2978);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure2978);

classreference585 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send21213 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol3817 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send21214 = (Object)new_AST_Send((Object)send21213, (Object)symbol3817, 0);
method2979 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21214);
symbol3823 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure2979 = (Object)new_Runtime_MethodClosure(method2979);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3823, (Runtime_MethodClosure)methodclosure2979);


// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method2980 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol3825 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure2980 = (Object)new_Runtime_MethodClosure(method2980);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3825, (Runtime_MethodClosure)methodclosure2980);


// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable2984 = (Object)new_AST_Variable_named(L"anObject");
array2378 = (Object)new_Type_Array_with(1, (Object)localvariable2984);
// =
send21215 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable2984);
// not
send21216 = (Object)new_AST_Send((Object)send21215, (Object)SMB_not, 0);
method2981 = (Object)new_AST_Method_with((Type_Array)array2378, (Type_Array)empty_Type_Array, 1, send21216);
methodclosure2981 = (Object)new_Runtime_MethodClosure(method2981);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3827, (Runtime_MethodClosure)methodclosure2981);


// Object>>isNil
//isNil
// 	^ false
method2982 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure2982 = (Object)new_Runtime_MethodClosure(method2982);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure2982);


// Object>>yourself
//yourself
// 	^ self
method2983 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol3824 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure2983 = (Object)new_Runtime_MethodClosure(method2983);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3824, (Runtime_MethodClosure)methodclosure2983);


// Object>>initialize
//initialize
method2984 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure2984 = (Object)new_Runtime_MethodClosure(method2984);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure2984);


// Object>>hash
//hash
// 	^ self uid hash
symbol3946 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send21217 = (Object)new_AST_Send((Object)Self, (Object)symbol3946, 0);
// hash
send21218 = (Object)new_AST_Send((Object)send21217, (Object)SMB_hash, 0);
method2985 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21218);
methodclosure2985 = (Object)new_Runtime_MethodClosure(method2985);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure2985);

classreference586 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
symbol4108 = (Object)new_Type_Symbol_cached(L"match:");
// match:
send21219 = (Object)new_AST_Send((Object)instancevariable758, (Object)symbol4108, 1, (Object)Self);
method2986 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21219);
symbol3934 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
methodclosure2986 = (Object)new_Runtime_MethodClosure(method2986);
store_method((Type_Class)class523, (Type_Symbol)symbol3934, (Runtime_MethodClosure)methodclosure2986);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable2985 = (Object)new_AST_Variable_named(L"aString");
localvariable2986 = (Object)new_AST_Variable_named(L"aSeparator");
array2379 = (Object)new_Type_Array_with(2, (Object)localvariable2985, (Object)localvariable2986);
super259 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable2985);
assign2570 = (Object)new_AST_Assign((Object)instancevariable758, (Object)localvariable2986);
// size
send21220 = (Object)new_AST_Send((Object)localvariable2985, (Object)SMB_size, 0);
smallint1446 = (Object)new_Type_SmallInt(1);
constant4141 = (Object)new_AST_Constant((Object)smallint1446);
// +
send21221 = (Object)new_AST_Send((Object)send21220, (Object)SMB__plus, 1, (Object)constant4141);
// new:
send21222 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)send21221);
assign2571 = (Object)new_AST_Assign((Object)instancevariable759, (Object)send21222);
method2987 = (Object)new_AST_Method_with((Type_Array)array2379, (Type_Array)empty_Type_Array, 4, super259, assign2570, assign2571, Self);
symbol3936 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure2987 = (Object)new_Runtime_MethodClosure(method2987);
store_method((Type_Class)class523, (Type_Symbol)symbol3936, (Runtime_MethodClosure)methodclosure2987);


// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable2987 = (Object)new_AST_Variable_named(L"parser");
array2380 = (Object)new_Type_Array_with(1, (Object)localvariable2987);
localvariable2988 = (Object)new_AST_Variable_named(L"result");
array2381 = (Object)new_Type_Array_with(1, (Object)localvariable2988);
symbol4121 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send21223 = (Object)new_AST_Send((Object)localvariable2987, (Object)symbol4121, 1, (Object)Self);
assign2572 = (Object)new_AST_Assign((Object)localvariable2988, (Object)send21223);
symbol4159 = (Object)new_Type_Symbol_cached(L"@");
// @
send21224 = (Object)new_AST_Send((Object)instancevariable746, (Object)symbol4159, 1, (Object)localvariable2988);
method2988 = (Object)new_AST_Method_with((Type_Array)array2380, (Type_Array)array2381, 2, assign2572, send21224);
symbol3941 = (Object)new_Type_Symbol_cached(L"doMatch:");
methodclosure2988 = (Object)new_Runtime_MethodClosure(method2988);
store_method((Type_Class)class523, (Type_Symbol)symbol3941, (Runtime_MethodClosure)methodclosure2988);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable2989 = (Object)new_AST_Variable_named(L"subCollection");
array2382 = (Object)new_Type_Array_with(1, (Object)localvariable2989);
localvariable2990 = (Object)new_AST_Variable_named(L"pattern");
localvariable2991 = (Object)new_AST_Variable_named(L"startMatch");
array2383 = (Object)new_Type_Array_with(2, (Object)localvariable2990, (Object)localvariable2991);
variable144 = (Object)new_AST_Variable_named(L"return");
array2384 = (Object)new_Type_Array_with(1, (Object)variable144);
symbol4160 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send21225 = (Object)new_AST_Send((Object)localvariable2989, (Object)symbol4160, 0);
assign2573 = (Object)new_AST_Assign((Object)localvariable2990, (Object)send21225);
assign2574 = (Object)new_AST_Assign((Object)localvariable2991, (Object)Nil_Const);
// atEnd
send21226 = (Object)new_AST_Send((Object)localvariable2990, (Object)SMB_atEnd, 0);
block1347 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21226);
// atEnd
send21227 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
// escape:
send21228 = (Object)new_AST_Send((Object)variable144, (Object)SMB_escape_, 1, (Object)False_Const);
block1348 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21228);
// ifTrue:
send21229 = (Object)new_AST_Send((Object)send21227, (Object)SMB_ifTrue_, 1, (Object)block1348);
symbol4161 = (Object)new_Type_Symbol_cached(L"next");
// next
send21230 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 0);
// next
send21231 = (Object)new_AST_Send((Object)localvariable2990, (Object)symbol4161, 0);
// ~=
send21232 = (Object)new_AST_Send((Object)send21230, (Object)symbol3827, 1, (Object)send21231);
// escape:
send21233 = (Object)new_AST_Send((Object)variable144, (Object)SMB_escape_, 1, (Object)False_Const);
block1349 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21233);
// ifTrue:
send21234 = (Object)new_AST_Send((Object)send21232, (Object)SMB_ifTrue_, 1, (Object)block1349);
block1350 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send21229, send21234);
// whileFalse:
send21235 = (Object)new_AST_Send((Object)block1347, (Object)SMB_whileFalse_, 1, (Object)block1350);
block1351 = (Object)new_AST_Block_with((Type_Array)array2384, (Type_Array)empty_Type_Array, 1, 4, assign2573, assign2574, send21235, True_Const);
// on:
send21236 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1351);
method2989 = (Object)new_AST_Method_with((Type_Array)array2382, (Type_Array)array2383, 1, send21236);
symbol3933 = (Object)new_Type_Symbol_cached(L"beginsWith:");
methodclosure2989 = (Object)new_Runtime_MethodClosure(method2989);
store_method((Type_Class)class523, (Type_Symbol)symbol3933, (Runtime_MethodClosure)methodclosure2989);


// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable2992 = (Object)new_AST_Variable_named(L"otherString");
array2385 = (Object)new_Type_Array_with(1, (Object)localvariable2992);
// beginsWith:
send21237 = (Object)new_AST_Send((Object)Self, (Object)symbol3933, 1, (Object)localvariable2992);
block1352 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable2992);
block1353 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send21238 = (Object)new_AST_Send((Object)send21237, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1352, (Object)block1353);
method2990 = (Object)new_AST_Method_with((Type_Array)array2385, (Type_Array)empty_Type_Array, 1, send21238);
symbol3935 = (Object)new_Type_Symbol_cached(L"scan:");
methodclosure2990 = (Object)new_Runtime_MethodClosure(method2990);
store_method((Type_Class)class523, (Type_Symbol)symbol3935, (Runtime_MethodClosure)methodclosure2990);


// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable2993 = (Object)new_AST_Variable_named(L"bucket");
array2386 = (Object)new_Type_Array_with(1, (Object)localvariable2993);
variable145 = (Object)new_AST_Variable_named(L"return");
array2387 = (Object)new_Type_Array_with(1, (Object)variable145);
smallint1447 = (Object)new_Type_SmallInt(1);
constant4142 = (Object)new_AST_Constant((Object)smallint1447);
// +
send21239 = (Object)new_AST_Send((Object)instancevariable746, (Object)SMB__plus, 1, (Object)constant4142);
// at:
send21240 = (Object)new_AST_Send((Object)instancevariable759, (Object)SMB_at_, 1, (Object)send21239);
assign2575 = (Object)new_AST_Assign((Object)localvariable2993, (Object)send21240);
symbol4162 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
// escape:
send21241 = (Object)new_AST_Send((Object)variable145, (Object)SMB_escape_, 1, (Object)localvariable2993);
block1354 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21241);
// ifNotNil:
send21242 = (Object)new_AST_Send((Object)localvariable2993, (Object)symbol4162, 1, (Object)block1354);
smallint1448 = (Object)new_Type_SmallInt(1);
constant4143 = (Object)new_AST_Constant((Object)smallint1448);
// +
send21243 = (Object)new_AST_Send((Object)instancevariable746, (Object)SMB__plus, 1, (Object)constant4143);
// new
send21244 = (Object)new_AST_Send((Object)classreference576, (Object)symbol3915, 0);
// at:put:
send21245 = (Object)new_AST_Send((Object)instancevariable759, (Object)SMB_at_put_, 2, (Object)send21243, (Object)send21244);
block1355 = (Object)new_AST_Block_with((Type_Array)array2387, (Type_Array)empty_Type_Array, 1, 3, assign2575, send21242, send21245);
// on:
send21246 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1355);
method2991 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2386, 1, send21246);
symbol3939 = (Object)new_Type_Symbol_cached(L"bucket");
methodclosure2991 = (Object)new_Runtime_MethodClosure(method2991);
store_method((Type_Class)class523, (Type_Symbol)symbol3939, (Runtime_MethodClosure)methodclosure2991);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable2994 = (Object)new_AST_Variable_named(L"parser");
array2388 = (Object)new_Type_Array_with(1, (Object)localvariable2994);
localvariable2995 = (Object)new_AST_Variable_named(L"result");
localvariable2996 = (Object)new_AST_Variable_named(L"doCache");
array2389 = (Object)new_Type_Array_with(2, (Object)localvariable2995, (Object)localvariable2996);
variable146 = (Object)new_AST_Variable_named(L"return");
array2390 = (Object)new_Type_Array_with(1, (Object)variable146);
assign2576 = (Object)new_AST_Assign((Object)localvariable2996, (Object)True_Const);
// bucket
send21247 = (Object)new_AST_Send((Object)Self, (Object)symbol3939, 0);
// doMatch:
send21248 = (Object)new_AST_Send((Object)Self, (Object)symbol3941, 1, (Object)localvariable2994);
block1356 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21248);
// at:ifAbsentPut:
send21249 = (Object)new_AST_Send((Object)send21247, (Object)symbol4138, 2, (Object)localvariable2994, (Object)block1356);
assign2577 = (Object)new_AST_Assign((Object)localvariable2995, (Object)send21249);
symbol4163 = (Object)new_Type_Symbol_cached(L"x");
// x
send21250 = (Object)new_AST_Send((Object)localvariable2995, (Object)symbol4163, 0);
assign2578 = (Object)new_AST_Assign((Object)instancevariable746, (Object)send21250);
symbol4164 = (Object)new_Type_Symbol_cached(L"y");
// y
send21251 = (Object)new_AST_Send((Object)localvariable2995, (Object)symbol4164, 0);
// escape:
send21252 = (Object)new_AST_Send((Object)variable146, (Object)SMB_escape_, 1, (Object)send21251);
block1357 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign2577, assign2578, send21252);
// doMatch:
send21253 = (Object)new_AST_Send((Object)Self, (Object)symbol3941, 1, (Object)localvariable2994);
// y
send21254 = (Object)new_AST_Send((Object)send21253, (Object)symbol4164, 0);
// escape:
send21255 = (Object)new_AST_Send((Object)variable146, (Object)SMB_escape_, 1, (Object)send21254);
block1358 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21255);
// ifTrue:ifFalse:
send21256 = (Object)new_AST_Send((Object)localvariable2996, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1357, (Object)block1358);
block1359 = (Object)new_AST_Block_with((Type_Array)array2390, (Type_Array)empty_Type_Array, 1, 3, assign2576, send21256, Self);
// on:
send21257 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1359);
method2992 = (Object)new_AST_Method_with((Type_Array)array2388, (Type_Array)array2389, 1, send21257);
symbol3940 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
methodclosure2992 = (Object)new_Runtime_MethodClosure(method2992);
store_method((Type_Class)class523, (Type_Symbol)symbol3940, (Runtime_MethodClosure)methodclosure2992);

classreference587 = (Object)new_Organization_ClassReference((Type_Class)class523);

// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method2993 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable763);
methodclosure2993 = (Object)new_Runtime_MethodClosure(method2993);
store_method((Type_Class)class525, (Type_Symbol)symbol3934, (Runtime_MethodClosure)methodclosure2993);


// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable2997 = (Object)new_AST_Variable_named(L"input");
array2391 = (Object)new_Type_Array_with(1, (Object)localvariable2997);
localvariable2998 = (Object)new_AST_Variable_named(L"result");
localvariable2999 = (Object)new_AST_Variable_named(L"match");
array2392 = (Object)new_Type_Array_with(2, (Object)localvariable2998, (Object)localvariable2999);
variable147 = (Object)new_AST_Variable_named(L"return");
array2393 = (Object)new_Type_Array_with(1, (Object)variable147);
// new
send21258 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
assign2579 = (Object)new_AST_Assign((Object)localvariable2998, (Object)send21258);
localvariable3000 = (Object)new_AST_Variable_named(L"child");
array2394 = (Object)new_Type_Array_with(1, (Object)localvariable3000);
// skipWhitespace
send21259 = (Object)new_AST_Send((Object)localvariable2997, (Object)symbol3934, 0);
block1360 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21259);
// ifTrue:
send21260 = (Object)new_AST_Send((Object)instancevariable763, (Object)SMB_ifTrue_, 1, (Object)block1360);
// match:
send21261 = (Object)new_AST_Send((Object)localvariable3000, (Object)symbol4108, 1, (Object)localvariable2997);
assign2580 = (Object)new_AST_Assign((Object)localvariable2999, (Object)send21261);
symbol4165 = (Object)new_Type_Symbol_cached(L"ifNil:");
// escape:
send21262 = (Object)new_AST_Send((Object)variable147, (Object)SMB_escape_, 1, (Object)localvariable2999);
block1361 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21262);
// ifNil:
send21263 = (Object)new_AST_Send((Object)localvariable2999, (Object)symbol4165, 1, (Object)block1361);
symbol4107 = (Object)new_Type_Symbol_cached(L"omit");
// omit
send21264 = (Object)new_AST_Send((Object)localvariable3000, (Object)symbol4107, 0);
// add:
send21265 = (Object)new_AST_Send((Object)localvariable2998, (Object)symbol3965, 1, (Object)localvariable2999);
block1362 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21265);
// ifFalse:
send21266 = (Object)new_AST_Send((Object)send21264, (Object)SMB_ifFalse_, 1, (Object)block1362);
block1363 = (Object)new_AST_Block_with((Type_Array)array2394, (Type_Array)empty_Type_Array, 2, 4, send21260, assign2580, send21263, send21266);
// do:
send21267 = (Object)new_AST_Send((Object)instancevariable762, (Object)symbol3964, 1, (Object)block1363);
// size
send21268 = (Object)new_AST_Send((Object)localvariable2998, (Object)SMB_size, 0);
smallint1449 = (Object)new_Type_SmallInt(1);
constant4144 = (Object)new_AST_Constant((Object)smallint1449);
// =
send21269 = (Object)new_AST_Send((Object)send21268, (Object)SMB__equal, 1, (Object)constant4144);
// first
send21270 = (Object)new_AST_Send((Object)localvariable2998, (Object)symbol3961, 0);
// escape:
send21271 = (Object)new_AST_Send((Object)variable147, (Object)SMB_escape_, 1, (Object)send21270);
block1364 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21271);
// ifTrue:
send21272 = (Object)new_AST_Send((Object)send21269, (Object)SMB_ifTrue_, 1, (Object)block1364);
block1365 = (Object)new_AST_Block_with((Type_Array)array2393, (Type_Array)empty_Type_Array, 1, 4, assign2579, send21267, send21272, localvariable2998);
// on:
send21273 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1365);
method2994 = (Object)new_AST_Method_with((Type_Array)array2391, (Type_Array)array2392, 1, send21273);
symbol4115 = (Object)new_Type_Symbol_cached(L"privateMatch:");
methodclosure2994 = (Object)new_Runtime_MethodClosure(method2994);
store_method((Type_Class)class525, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure2994);


// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable3001 = (Object)new_AST_Variable_named(L"child");
array2395 = (Object)new_Type_Array_with(1, (Object)localvariable3001);
symbol4106 = (Object)new_Type_Symbol_cached(L"asPEG");
// asPEG
send21274 = (Object)new_AST_Send((Object)localvariable3001, (Object)symbol4106, 0);
// add:
send21275 = (Object)new_AST_Send((Object)instancevariable762, (Object)symbol3965, 1, (Object)send21274);
method2995 = (Object)new_AST_Method_with((Type_Array)array2395, (Type_Array)empty_Type_Array, 2, send21275, Self);
symbol4145 = (Object)new_Type_Symbol_cached(L"<&");
methodclosure2995 = (Object)new_Runtime_MethodClosure(method2995);
store_method((Type_Class)class525, (Type_Symbol)symbol4145, (Runtime_MethodClosure)methodclosure2995);


// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable3002 = (Object)new_AST_Variable_named(L"theChildren");
array2396 = (Object)new_Type_Array_with(1, (Object)localvariable3002);
super260 = (Object)new_AST_Super((Object)symbol3826, 0);
assign2581 = (Object)new_AST_Assign((Object)instancevariable762, (Object)localvariable3002);
assign2582 = (Object)new_AST_Assign((Object)instancevariable763, (Object)True_Const);
method2996 = (Object)new_AST_Method_with((Type_Array)array2396, (Type_Array)empty_Type_Array, 4, super260, assign2581, assign2582, Self);
symbol4140 = (Object)new_Type_Symbol_cached(L"initialize:");
methodclosure2996 = (Object)new_Runtime_MethodClosure(method2996);
store_method((Type_Class)class525, (Type_Symbol)symbol4140, (Runtime_MethodClosure)methodclosure2996);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super261 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send21276 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
// initialize:
send21277 = (Object)new_AST_Send((Object)Self, (Object)symbol4140, 1, (Object)send21276);
method2997 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super261, send21277, Self);
methodclosure2997 = (Object)new_Runtime_MethodClosure(method2997);
store_method((Type_Class)class525, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure2997);


// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable3003 = (Object)new_AST_Variable_named(L"anObject");
array2397 = (Object)new_Type_Array_with(1, (Object)localvariable3003);
assign2583 = (Object)new_AST_Assign((Object)instancevariable763, (Object)localvariable3003);
method2998 = (Object)new_AST_Method_with((Type_Array)array2397, (Type_Array)empty_Type_Array, 2, assign2583, Self);
symbol4142 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
methodclosure2998 = (Object)new_Runtime_MethodClosure(method2998);
store_method((Type_Class)class525, (Type_Symbol)symbol4142, (Runtime_MethodClosure)methodclosure2998);

classreference588 = (Object)new_Organization_ClassReference((Type_Class)class525);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable3004 = (Object)new_AST_Variable_named(L"alternative");
array2398 = (Object)new_Type_Array_with(1, (Object)localvariable3004);
symbol4166 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send21278 = (Object)new_AST_Send((Object)Self, (Object)symbol4166, 0);
method2999 = (Object)new_AST_Method_with((Type_Array)array2398, (Type_Array)empty_Type_Array, 2, send21278, Self);
symbol4147 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
methodclosure2999 = (Object)new_Runtime_MethodClosure(method2999);
store_method((Type_Class)class526, (Type_Symbol)symbol4147, (Runtime_MethodClosure)methodclosure2999);

classreference589 = (Object)new_Organization_ClassReference((Type_Class)class526);

// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable3005 = (Object)new_AST_Variable_named(L"alternative");
array2399 = (Object)new_Type_Array_with(1, (Object)localvariable3005);
method3000 = (Object)new_AST_Method_with((Type_Array)array2399, (Type_Array)empty_Type_Array, 1, instancevariable764);
methodclosure3000 = (Object)new_Runtime_MethodClosure(method3000);
store_method((Type_Class)class527, (Type_Symbol)symbol4147, (Runtime_MethodClosure)methodclosure3000);


// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable3006 = (Object)new_AST_Variable_named(L"block");
array2400 = (Object)new_Type_Array_with(1, (Object)localvariable3006);
// value:
send21279 = (Object)new_AST_Send((Object)localvariable3006, (Object)SMB_value_, 1, (Object)instancevariable764);
method3001 = (Object)new_AST_Method_with((Type_Array)array2400, (Type_Array)empty_Type_Array, 2, send21279, Self);
symbol4148 = (Object)new_Type_Symbol_cached(L"ifMatched:");
methodclosure3001 = (Object)new_Runtime_MethodClosure(method3001);
store_method((Type_Class)class527, (Type_Symbol)symbol4148, (Runtime_MethodClosure)methodclosure3001);


// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable3007 = (Object)new_AST_Variable_named(L"newResult");
array2401 = (Object)new_Type_Array_with(1, (Object)localvariable3007);
assign2584 = (Object)new_AST_Assign((Object)instancevariable764, (Object)localvariable3007);
method3002 = (Object)new_AST_Method_with((Type_Array)array2401, (Type_Array)empty_Type_Array, 2, assign2584, Self);
symbol4149 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure3002 = (Object)new_Runtime_MethodClosure(method3002);
store_method((Type_Class)class527, (Type_Symbol)symbol4149, (Runtime_MethodClosure)methodclosure3002);

classreference590 = (Object)new_Organization_ClassReference((Type_Class)class527);

// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method3003 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable766);
methodclosure3003 = (Object)new_Runtime_MethodClosure(method3003);
store_method((Type_Class)class528, (Type_Symbol)symbol3934, (Runtime_MethodClosure)methodclosure3003);


// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable3008 = (Object)new_AST_Variable_named(L"input");
localvariable3009 = (Object)new_AST_Variable_named(L"result");
array2402 = (Object)new_Type_Array_with(2, (Object)localvariable3008, (Object)localvariable3009);
localvariable3010 = (Object)new_AST_Variable_named(L"match");
array2403 = (Object)new_Type_Array_with(1, (Object)localvariable3010);
// skipWhitespace
send21280 = (Object)new_AST_Send((Object)localvariable3008, (Object)symbol3934, 0);
block1366 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21280);
// ifTrue:
send21281 = (Object)new_AST_Send((Object)instancevariable766, (Object)SMB_ifTrue_, 1, (Object)block1366);
// match:
send21282 = (Object)new_AST_Send((Object)instancevariable765, (Object)symbol4108, 1, (Object)localvariable3008);
assign2585 = (Object)new_AST_Assign((Object)localvariable3010, (Object)send21282);
// isNil
send21283 = (Object)new_AST_Send((Object)localvariable3010, (Object)SMB_isNil, 0);
block1367 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send21281, assign2585, send21283);
// add:
send21284 = (Object)new_AST_Send((Object)localvariable3009, (Object)symbol3965, 1, (Object)localvariable3010);
block1368 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21284);
// whileFalse:
send21285 = (Object)new_AST_Send((Object)block1367, (Object)SMB_whileFalse_, 1, (Object)block1368);
method3004 = (Object)new_AST_Method_with((Type_Array)array2402, (Type_Array)array2403, 2, send21285, localvariable3009);
symbol4141 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
methodclosure3004 = (Object)new_Runtime_MethodClosure(method3004);
store_method((Type_Class)class528, (Type_Symbol)symbol4141, (Runtime_MethodClosure)methodclosure3004);


// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable3011 = (Object)new_AST_Variable_named(L"input");
array2404 = (Object)new_Type_Array_with(1, (Object)localvariable3011);
// new
send21286 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
// privateMatch:on:
send21287 = (Object)new_AST_Send((Object)Self, (Object)symbol4141, 2, (Object)localvariable3011, (Object)send21286);
method3005 = (Object)new_AST_Method_with((Type_Array)array2404, (Type_Array)empty_Type_Array, 1, send21287);
methodclosure3005 = (Object)new_Runtime_MethodClosure(method3005);
store_method((Type_Class)class528, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure3005);


// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable3012 = (Object)new_AST_Variable_named(L"expression");
array2405 = (Object)new_Type_Array_with(1, (Object)localvariable3012);
super262 = (Object)new_AST_Super((Object)symbol3826, 0);
assign2586 = (Object)new_AST_Assign((Object)instancevariable765, (Object)localvariable3012);
assign2587 = (Object)new_AST_Assign((Object)instancevariable766, (Object)True_Const);
method3006 = (Object)new_AST_Method_with((Type_Array)array2405, (Type_Array)empty_Type_Array, 4, super262, assign2586, assign2587, Self);
methodclosure3006 = (Object)new_Runtime_MethodClosure(method3006);
store_method((Type_Class)class528, (Type_Symbol)symbol4140, (Runtime_MethodClosure)methodclosure3006);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method3007 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4105 = (Object)new_Type_Symbol_cached(L"optional");
methodclosure3007 = (Object)new_Runtime_MethodClosure(method3007);
store_method((Type_Class)class528, (Type_Symbol)symbol4105, (Runtime_MethodClosure)methodclosure3007);


// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable3013 = (Object)new_AST_Variable_named(L"anObject");
array2406 = (Object)new_Type_Array_with(1, (Object)localvariable3013);
assign2588 = (Object)new_AST_Assign((Object)instancevariable766, (Object)localvariable3013);
method3008 = (Object)new_AST_Method_with((Type_Array)array2406, (Type_Array)empty_Type_Array, 2, assign2588, Self);
methodclosure3008 = (Object)new_Runtime_MethodClosure(method3008);
store_method((Type_Class)class528, (Type_Symbol)symbol4142, (Runtime_MethodClosure)methodclosure3008);

classreference591 = (Object)new_Organization_ClassReference((Type_Class)class528);

// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable3014 = (Object)new_AST_Variable_named(L"input");
array2407 = (Object)new_Type_Array_with(1, (Object)localvariable3014);
localvariable3015 = (Object)new_AST_Variable_named(L"match");
array2408 = (Object)new_Type_Array_with(1, (Object)localvariable3015);
variable148 = (Object)new_AST_Variable_named(L"return");
array2409 = (Object)new_Type_Array_with(1, (Object)variable148);
localvariable3016 = (Object)new_AST_Variable_named(L"child");
array2410 = (Object)new_Type_Array_with(1, (Object)localvariable3016);
// match:
send21288 = (Object)new_AST_Send((Object)localvariable3016, (Object)symbol4108, 1, (Object)localvariable3014);
assign2589 = (Object)new_AST_Assign((Object)localvariable3015, (Object)send21288);
// escape:
send21289 = (Object)new_AST_Send((Object)variable148, (Object)SMB_escape_, 1, (Object)localvariable3015);
block1369 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21289);
// ifNotNil:
send21290 = (Object)new_AST_Send((Object)localvariable3015, (Object)symbol4162, 1, (Object)block1369);
block1370 = (Object)new_AST_Block_with((Type_Array)array2410, (Type_Array)empty_Type_Array, 2, 2, assign2589, send21290);
// do:
send21291 = (Object)new_AST_Send((Object)instancevariable767, (Object)symbol3964, 1, (Object)block1370);
block1371 = (Object)new_AST_Block_with((Type_Array)array2409, (Type_Array)empty_Type_Array, 1, 2, send21291, Nil_Const);
// on:
send21292 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1371);
method3009 = (Object)new_AST_Method_with((Type_Array)array2407, (Type_Array)array2408, 1, send21292);
methodclosure3009 = (Object)new_Runtime_MethodClosure(method3009);
store_method((Type_Class)class529, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure3009);


// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable3017 = (Object)new_AST_Variable_named(L"newChildren");
array2411 = (Object)new_Type_Array_with(1, (Object)localvariable3017);
super263 = (Object)new_AST_Super((Object)symbol3826, 0);
assign2590 = (Object)new_AST_Assign((Object)instancevariable767, (Object)localvariable3017);
method3010 = (Object)new_AST_Method_with((Type_Array)array2411, (Type_Array)empty_Type_Array, 3, super263, assign2590, Self);
methodclosure3010 = (Object)new_Runtime_MethodClosure(method3010);
store_method((Type_Class)class529, (Type_Symbol)symbol4140, (Runtime_MethodClosure)methodclosure3010);


// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
super264 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send21293 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
// initialize:
send21294 = (Object)new_AST_Send((Object)Self, (Object)symbol4140, 1, (Object)send21293);
method3011 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super264, send21294, Self);
methodclosure3011 = (Object)new_Runtime_MethodClosure(method3011);
store_method((Type_Class)class529, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3011);


// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable3018 = (Object)new_AST_Variable_named(L"child");
array2412 = (Object)new_Type_Array_with(1, (Object)localvariable3018);
// asPEG
send21295 = (Object)new_AST_Send((Object)localvariable3018, (Object)symbol4106, 0);
// add:
send21296 = (Object)new_AST_Send((Object)instancevariable767, (Object)symbol3965, 1, (Object)send21295);
method3012 = (Object)new_AST_Method_with((Type_Array)array2412, (Type_Array)empty_Type_Array, 2, send21296, Self);
symbol4122 = (Object)new_Type_Symbol_cached(L"<=");
methodclosure3012 = (Object)new_Runtime_MethodClosure(method3012);
store_method((Type_Class)class529, (Type_Symbol)symbol4122, (Runtime_MethodClosure)methodclosure3012);

classreference592 = (Object)new_Organization_ClassReference((Type_Class)class529);

// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable3019 = (Object)new_AST_Variable_named(L"input");
array2413 = (Object)new_Type_Array_with(1, (Object)localvariable3019);
variable149 = (Object)new_AST_Variable_named(L"return");
array2414 = (Object)new_Type_Array_with(1, (Object)variable149);
// match:
send21297 = (Object)new_AST_Send((Object)instancevariable768, (Object)symbol4108, 1, (Object)localvariable3019);
classreference593 = (Object)new_Organization_ClassReference((Type_Class)class533);
// escape:
send21298 = (Object)new_AST_Send((Object)variable149, (Object)SMB_escape_, 1, (Object)classreference593);
block1372 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21298);
// ifNil:
send21299 = (Object)new_AST_Send((Object)send21297, (Object)symbol4165, 1, (Object)block1372);
// new:
send21300 = (Object)new_AST_Send((Object)classreference590, (Object)symbol3907, 1, (Object)send21299);
block1373 = (Object)new_AST_Block_with((Type_Array)array2414, (Type_Array)empty_Type_Array, 1, 1, send21300);
// on:
send21301 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1373);
method3013 = (Object)new_AST_Method_with((Type_Array)array2413, (Type_Array)empty_Type_Array, 1, send21301);
methodclosure3013 = (Object)new_Runtime_MethodClosure(method3013);
store_method((Type_Class)class530, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure3013);


// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable3020 = (Object)new_AST_Variable_named(L"expression");
array2415 = (Object)new_Type_Array_with(1, (Object)localvariable3020);
super265 = (Object)new_AST_Super((Object)symbol3826, 0);
assign2591 = (Object)new_AST_Assign((Object)instancevariable768, (Object)localvariable3020);
assign2592 = (Object)new_AST_Assign((Object)instancevariable769, (Object)True_Const);
method3014 = (Object)new_AST_Method_with((Type_Array)array2415, (Type_Array)empty_Type_Array, 4, super265, assign2591, assign2592, Self);
methodclosure3014 = (Object)new_Runtime_MethodClosure(method3014);
store_method((Type_Class)class530, (Type_Symbol)symbol4140, (Runtime_MethodClosure)methodclosure3014);


// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method3015 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure3015 = (Object)new_Runtime_MethodClosure(method3015);
store_method((Type_Class)class530, (Type_Symbol)symbol4105, (Runtime_MethodClosure)methodclosure3015);

classreference594 = (Object)new_Organization_ClassReference((Type_Class)class530);

// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable3021 = (Object)new_AST_Variable_named(L"input");
array2416 = (Object)new_Type_Array_with(1, (Object)localvariable3021);
localvariable3022 = (Object)new_AST_Variable_named(L"result");
localvariable3023 = (Object)new_AST_Variable_named(L"match");
array2417 = (Object)new_Type_Array_with(2, (Object)localvariable3022, (Object)localvariable3023);
variable150 = (Object)new_AST_Variable_named(L"return");
array2418 = (Object)new_Type_Array_with(1, (Object)variable150);
// new
send21302 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
assign2593 = (Object)new_AST_Assign((Object)localvariable3022, (Object)send21302);
// match:
send21303 = (Object)new_AST_Send((Object)instancevariable765, (Object)symbol4108, 1, (Object)localvariable3021);
assign2594 = (Object)new_AST_Assign((Object)localvariable3023, (Object)send21303);
// escape:
send21304 = (Object)new_AST_Send((Object)variable150, (Object)SMB_escape_, 1, (Object)localvariable3023);
block1374 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21304);
// ifNil:
send21305 = (Object)new_AST_Send((Object)localvariable3023, (Object)symbol4165, 1, (Object)block1374);
// add:
send21306 = (Object)new_AST_Send((Object)localvariable3022, (Object)symbol3965, 1, (Object)localvariable3023);
// privateMatch:on:
send21307 = (Object)new_AST_Send((Object)Self, (Object)symbol4141, 2, (Object)localvariable3021, (Object)localvariable3022);
block1375 = (Object)new_AST_Block_with((Type_Array)array2418, (Type_Array)empty_Type_Array, 1, 5, assign2593, assign2594, send21305, send21306, send21307);
// on:
send21308 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1375);
method3016 = (Object)new_AST_Method_with((Type_Array)array2416, (Type_Array)array2417, 1, send21308);
methodclosure3016 = (Object)new_Runtime_MethodClosure(method3016);
store_method((Type_Class)class531, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure3016);


// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send21309 = (Object)new_AST_Send((Object)classreference594, (Object)symbol3907, 1, (Object)Self);
method3017 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21309);
methodclosure3017 = (Object)new_Runtime_MethodClosure(method3017);
store_method((Type_Class)class531, (Type_Symbol)symbol4105, (Runtime_MethodClosure)methodclosure3017);

classreference595 = (Object)new_Organization_ClassReference((Type_Class)class531);

// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable3024 = (Object)new_AST_Variable_named(L"aBlock");
array2419 = (Object)new_Type_Array_with(1, (Object)localvariable3024);
assign2595 = (Object)new_AST_Assign((Object)instancevariable771, (Object)localvariable3024);
method3018 = (Object)new_AST_Method_with((Type_Array)array2419, (Type_Array)empty_Type_Array, 2, assign2595, Self);
symbol4119 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure3018 = (Object)new_Runtime_MethodClosure(method3018);
store_method((Type_Class)class532, (Type_Symbol)symbol4119, (Runtime_MethodClosure)methodclosure3018);


// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable3025 = (Object)new_AST_Variable_named(L"input");
array2420 = (Object)new_Type_Array_with(1, (Object)localvariable3025);
localvariable3026 = (Object)new_AST_Variable_named(L"result");
array2421 = (Object)new_Type_Array_with(1, (Object)localvariable3026);
// memoizeMatch:
send21310 = (Object)new_AST_Send((Object)localvariable3025, (Object)symbol3940, 1, (Object)Self);
assign2596 = (Object)new_AST_Assign((Object)localvariable3026, (Object)send21310);
method3019 = (Object)new_AST_Method_with((Type_Array)array2420, (Type_Array)array2421, 2, assign2596, localvariable3026);
methodclosure3019 = (Object)new_Runtime_MethodClosure(method3019);
store_method((Type_Class)class532, (Type_Symbol)symbol4108, (Runtime_MethodClosure)methodclosure3019);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable3027 = (Object)new_AST_Variable_named(L"input");
array2422 = (Object)new_Type_Array_with(1, (Object)localvariable3027);
localvariable3028 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable3029 = (Object)new_AST_Variable_named(L"result");
array2423 = (Object)new_Type_Array_with(2, (Object)localvariable3028, (Object)localvariable3029);
// on:separator:
send21311 = (Object)new_AST_Send((Object)classreference587, (Object)symbol3936, 2, (Object)localvariable3027, (Object)instancevariable773);
assign2597 = (Object)new_AST_Assign((Object)localvariable3028, (Object)send21311);
// match:
send21312 = (Object)new_AST_Send((Object)Self, (Object)symbol4108, 1, (Object)localvariable3028);
assign2598 = (Object)new_AST_Assign((Object)localvariable3029, (Object)send21312);
method3020 = (Object)new_AST_Method_with((Type_Array)array2422, (Type_Array)array2423, 3, assign2597, assign2598, localvariable3029);
symbol4120 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure3020 = (Object)new_Runtime_MethodClosure(method3020);
store_method((Type_Class)class532, (Type_Symbol)symbol4120, (Runtime_MethodClosure)methodclosure3020);


// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable3030 = (Object)new_AST_Variable_named(L"aSeparator");
array2424 = (Object)new_Type_Array_with(1, (Object)localvariable3030);
assign2599 = (Object)new_AST_Assign((Object)instancevariable773, (Object)localvariable3030);
method3021 = (Object)new_AST_Method_with((Type_Array)array2424, (Type_Array)empty_Type_Array, 2, assign2599, Self);
symbol4118 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure3021 = (Object)new_Runtime_MethodClosure(method3021);
store_method((Type_Class)class532, (Type_Symbol)symbol4118, (Runtime_MethodClosure)methodclosure3021);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super266 = (Object)new_AST_Super((Object)symbol3826, 0);
// class
send21313 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol4167 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send21314 = (Object)new_AST_Send((Object)send21313, (Object)symbol4167, 0);
assign2600 = (Object)new_AST_Assign((Object)instancevariable773, (Object)send21314);
method3022 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super266, assign2600, Self);
methodclosure3022 = (Object)new_Runtime_MethodClosure(method3022);
store_method((Type_Class)class532, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3022);


// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable3031 = (Object)new_AST_Variable_named(L"theExpression");
array2425 = (Object)new_Type_Array_with(1, (Object)localvariable3031);
// asPEG
send21315 = (Object)new_AST_Send((Object)localvariable3031, (Object)symbol4106, 0);
assign2601 = (Object)new_AST_Assign((Object)instancevariable770, (Object)send21315);
method3023 = (Object)new_AST_Method_with((Type_Array)array2425, (Type_Array)empty_Type_Array, 2, assign2601, Self);
methodclosure3023 = (Object)new_Runtime_MethodClosure(method3023);
store_method((Type_Class)class532, (Type_Symbol)symbol4122, (Runtime_MethodClosure)methodclosure3023);


// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable3032 = (Object)new_AST_Variable_named(L"input");
array2426 = (Object)new_Type_Array_with(1, (Object)localvariable3032);
localvariable3033 = (Object)new_AST_Variable_named(L"match");
array2427 = (Object)new_Type_Array_with(1, (Object)localvariable3033);
variable151 = (Object)new_AST_Variable_named(L"return");
array2428 = (Object)new_Type_Array_with(1, (Object)variable151);
// match:
send21316 = (Object)new_AST_Send((Object)instancevariable770, (Object)symbol4108, 1, (Object)localvariable3032);
assign2602 = (Object)new_AST_Assign((Object)localvariable3033, (Object)send21316);
symbol4168 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block1376 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable3033);
// escape:
send21317 = (Object)new_AST_Send((Object)variable151, (Object)SMB_escape_, 1, (Object)localvariable3033);
block1377 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21317);
// ifNil:
send21318 = (Object)new_AST_Send((Object)instancevariable771, (Object)symbol4165, 1, (Object)block1377);
// value:
send21319 = (Object)new_AST_Send((Object)instancevariable771, (Object)SMB_value_, 1, (Object)localvariable3033);
block1378 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send21318, send21319);
// ifNil:ifNotNil:
send21320 = (Object)new_AST_Send((Object)localvariable3033, (Object)symbol4168, 2, (Object)block1376, (Object)block1378);
block1379 = (Object)new_AST_Block_with((Type_Array)array2428, (Type_Array)empty_Type_Array, 1, 2, assign2602, send21320);
// on:
send21321 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1379);
method3024 = (Object)new_AST_Method_with((Type_Array)array2426, (Type_Array)array2427, 1, send21321);
methodclosure3024 = (Object)new_Runtime_MethodClosure(method3024);
store_method((Type_Class)class532, (Type_Symbol)symbol4121, (Runtime_MethodClosure)methodclosure3024);

classreference596 = (Object)new_Organization_ClassReference((Type_Class)class532);

// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable3034 = (Object)new_AST_Variable_named(L"input");
array2429 = (Object)new_Type_Array_with(1, (Object)localvariable3034);
symbol4169 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send21322 = (Object)new_AST_Send((Object)Self, (Object)symbol4169, 0);
localvariable3035 = (Object)new_AST_Variable_named(L"receiver");
array2430 = (Object)new_Type_Array_with(1, (Object)localvariable3035);
symbol4170 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send21323 = (Object)new_AST_Send((Object)localvariable3035, (Object)symbol4170, 0);
symbol4171 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send21324 = (Object)new_AST_Send((Object)localvariable3035, (Object)symbol4171, 0);
block1380 = (Object)new_AST_Block_with((Type_Array)array2430, (Type_Array)empty_Type_Array, 2, 2, send21323, send21324);
// value:
send21325 = (Object)new_AST_Send((Object)block1380, (Object)SMB_value_, 1, (Object)classreference597);
block1381 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21325);
// ifTrue:
send21326 = (Object)new_AST_Send((Object)send21322, (Object)SMB_ifTrue_, 1, (Object)block1381);
method3025 = (Object)new_AST_Method_with((Type_Array)array2429, (Type_Array)empty_Type_Array, 2, send21326, Self);
symbol4117 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure3025 = (Object)new_Runtime_MethodClosure(method3025);
store_method((Type_Class)class524, (Type_Symbol)symbol4117, (Runtime_MethodClosure)methodclosure3025);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method3026 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure3026 = (Object)new_Runtime_MethodClosure(method3026);
store_method((Type_Class)class524, (Type_Symbol)symbol4106, (Runtime_MethodClosure)methodclosure3026);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method3027 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4097 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure3027 = (Object)new_Runtime_MethodClosure(method3027);
store_method((Type_Class)class524, (Type_Symbol)symbol4097, (Runtime_MethodClosure)methodclosure3027);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable3036 = (Object)new_AST_Variable_named(L"bool");
array2431 = (Object)new_Type_Array_with(1, (Object)localvariable3036);
assign2603 = (Object)new_AST_Assign((Object)instancevariable761, (Object)localvariable3036);
method3028 = (Object)new_AST_Method_with((Type_Array)array2431, (Type_Array)empty_Type_Array, 2, assign2603, Self);
symbol4110 = (Object)new_Type_Symbol_cached(L"omit:");
methodclosure3028 = (Object)new_Runtime_MethodClosure(method3028);
store_method((Type_Class)class524, (Type_Symbol)symbol4110, (Runtime_MethodClosure)methodclosure3028);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign2604 = (Object)new_AST_Assign((Object)instancevariable761, (Object)False_Const);
method3029 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign2604, Self);
methodclosure3029 = (Object)new_Runtime_MethodClosure(method3029);
store_method((Type_Class)class524, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3029);


// PEGExpression>>omit
//omit
// 	^ omit
method3030 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable761);
methodclosure3030 = (Object)new_Runtime_MethodClosure(method3030);
store_method((Type_Class)class524, (Type_Symbol)symbol4107, (Runtime_MethodClosure)methodclosure3030);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable3037 = (Object)new_AST_Variable_named(L"input");
array2432 = (Object)new_Type_Array_with(1, (Object)localvariable3037);
// debug
send21327 = (Object)new_AST_Send((Object)Self, (Object)symbol4169, 0);
symbol4172 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send21328 = (Object)new_AST_Send((Object)classreference597, (Object)symbol4172, 0);
block1382 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21328);
// ifTrue:
send21329 = (Object)new_AST_Send((Object)send21327, (Object)SMB_ifTrue_, 1, (Object)block1382);
method3031 = (Object)new_AST_Method_with((Type_Array)array2432, (Type_Array)empty_Type_Array, 2, send21329, Self);
symbol4098 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure3031 = (Object)new_Runtime_MethodClosure(method3031);
store_method((Type_Class)class524, (Type_Symbol)symbol4098, (Runtime_MethodClosure)methodclosure3031);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable152 = (Object)new_AST_Variable_named(L"return");
array2433 = (Object)new_Type_Array_with(1, (Object)variable152);
symbol4111 = (Object)new_Type_Symbol_cached(L"printString");
super267 = (Object)new_AST_Super((Object)symbol4111, 0);
// escape:
send21330 = (Object)new_AST_Send((Object)variable152, (Object)SMB_escape_, 1, (Object)super267);
block1383 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21330);
// ifNil:
send21331 = (Object)new_AST_Send((Object)instancevariable760, (Object)symbol4165, 1, (Object)block1383);
string2459 = (Object)new_Type_String(L"parser (");
constant4145 = (Object)new_AST_Constant((Object)string2459);
// ,
send21332 = (Object)new_AST_Send((Object)constant4145, (Object)SMB__concat, 1, (Object)instancevariable760);
string2460 = (Object)new_Type_String(L")");
constant4146 = (Object)new_AST_Constant((Object)string2460);
// ,
send21333 = (Object)new_AST_Send((Object)send21332, (Object)SMB__concat, 1, (Object)constant4146);
block1384 = (Object)new_AST_Block_with((Type_Array)array2433, (Type_Array)empty_Type_Array, 1, 2, send21331, send21333);
// on:
send21334 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1384);
method3032 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21334);
methodclosure3032 = (Object)new_Runtime_MethodClosure(method3032);
store_method((Type_Class)class524, (Type_Symbol)symbol4111, (Runtime_MethodClosure)methodclosure3032);


// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable3038 = (Object)new_AST_Variable_named(L"input");
array2434 = (Object)new_Type_Array_with(1, (Object)localvariable3038);
localvariable3039 = (Object)new_AST_Variable_named(L"position");
localvariable3040 = (Object)new_AST_Variable_named(L"match");
array2435 = (Object)new_Type_Array_with(2, (Object)localvariable3039, (Object)localvariable3040);
symbol4173 = (Object)new_Type_Symbol_cached(L"position");
// position
send21335 = (Object)new_AST_Send((Object)localvariable3038, (Object)symbol4173, 0);
assign2605 = (Object)new_AST_Assign((Object)localvariable3039, (Object)send21335);
// privateMatch:
send21336 = (Object)new_AST_Send((Object)Self, (Object)symbol4115, 1, (Object)localvariable3038);
assign2606 = (Object)new_AST_Assign((Object)localvariable3040, (Object)send21336);
symbol4174 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send21337 = (Object)new_AST_Send((Object)localvariable3038, (Object)symbol4174, 1, (Object)localvariable3039);
block1385 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21337);
// ifNil:
send21338 = (Object)new_AST_Send((Object)localvariable3040, (Object)symbol4165, 1, (Object)block1385);
method3033 = (Object)new_AST_Method_with((Type_Array)array2434, (Type_Array)array2435, 4, assign2605, assign2606, send21338, localvariable3040);
methodclosure3033 = (Object)new_Runtime_MethodClosure(method3033);
store_method((Type_Class)class524, (Type_Symbol)symbol4108, (Runtime_MethodClosure)methodclosure3033);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable3041 = (Object)new_AST_Variable_named(L"expression");
array2436 = (Object)new_Type_Array_with(1, (Object)localvariable3041);
// new
send21339 = (Object)new_AST_Send((Object)classreference588, (Object)symbol3915, 0);
// <&
send21340 = (Object)new_AST_Send((Object)send21339, (Object)symbol4145, 1, (Object)Self);
// <&
send21341 = (Object)new_AST_Send((Object)send21340, (Object)symbol4145, 1, (Object)localvariable3041);
method3034 = (Object)new_AST_Method_with((Type_Array)array2436, (Type_Array)empty_Type_Array, 1, send21341);
methodclosure3034 = (Object)new_Runtime_MethodClosure(method3034);
store_method((Type_Class)class524, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure3034);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
symbol4113 = (Object)new_Type_Symbol_cached(L"plus");
// plus
send21342 = (Object)new_AST_Send((Object)Self, (Object)symbol4113, 0);
// skipWhitespace:
send21343 = (Object)new_AST_Send((Object)send21342, (Object)symbol4142, 1, (Object)False_Const);
method3035 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21343);
symbol4109 = (Object)new_Type_Symbol_cached(L"strongPlus");
methodclosure3035 = (Object)new_Runtime_MethodClosure(method3035);
store_method((Type_Class)class524, (Type_Symbol)symbol4109, (Runtime_MethodClosure)methodclosure3035);


// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self
// new:
send21344 = (Object)new_AST_Send((Object)classreference591, (Object)symbol3907, 1, (Object)Self);
method3036 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21344);
symbol4101 = (Object)new_Type_Symbol_cached(L"times");
methodclosure3036 = (Object)new_Runtime_MethodClosure(method3036);
store_method((Type_Class)class524, (Type_Symbol)symbol4101, (Runtime_MethodClosure)methodclosure3036);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send21345 = (Object)new_AST_Send((Object)instancevariable760, (Object)SMB_hash, 0);
method3037 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21345);
methodclosure3037 = (Object)new_Runtime_MethodClosure(method3037);
store_method((Type_Class)class524, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure3037);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self
// new:
send21346 = (Object)new_AST_Send((Object)classreference595, (Object)symbol3907, 1, (Object)Self);
method3038 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21346);
methodclosure3038 = (Object)new_Runtime_MethodClosure(method3038);
store_method((Type_Class)class524, (Type_Symbol)symbol4113, (Runtime_MethodClosure)methodclosure3038);


// PEGExpression>>name
//name
// 	^ name
method3039 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable760);
methodclosure3039 = (Object)new_Runtime_MethodClosure(method3039);
store_method((Type_Class)class524, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3039);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable3042 = (Object)new_AST_Variable_named(L"other");
array2437 = (Object)new_Type_Array_with(1, (Object)localvariable3042);
// &
send21347 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable3042);
// skipWhitespace:
send21348 = (Object)new_AST_Send((Object)send21347, (Object)symbol4142, 1, (Object)False_Const);
method3040 = (Object)new_AST_Method_with((Type_Array)array2437, (Type_Array)empty_Type_Array, 1, send21348);
symbol4102 = (Object)new_Type_Symbol_cached(L"&&");
methodclosure3040 = (Object)new_Runtime_MethodClosure(method3040);
store_method((Type_Class)class524, (Type_Symbol)symbol4102, (Runtime_MethodClosure)methodclosure3040);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
// times
send21349 = (Object)new_AST_Send((Object)Self, (Object)symbol4101, 0);
// skipWhitespace:
send21350 = (Object)new_AST_Send((Object)send21349, (Object)symbol4142, 1, (Object)False_Const);
method3041 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21350);
symbol4103 = (Object)new_Type_Symbol_cached(L"strongTimes");
methodclosure3041 = (Object)new_Runtime_MethodClosure(method3041);
store_method((Type_Class)class524, (Type_Symbol)symbol4103, (Runtime_MethodClosure)methodclosure3041);


// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable3043 = (Object)new_AST_Variable_named(L"aName");
array2438 = (Object)new_Type_Array_with(1, (Object)localvariable3043);
assign2607 = (Object)new_AST_Assign((Object)instancevariable760, (Object)localvariable3043);
method3042 = (Object)new_AST_Method_with((Type_Array)array2438, (Type_Array)empty_Type_Array, 2, assign2607, Self);
symbol3985 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure3042 = (Object)new_Runtime_MethodClosure(method3042);
store_method((Type_Class)class524, (Type_Symbol)symbol3985, (Runtime_MethodClosure)methodclosure3042);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable3044 = (Object)new_AST_Variable_named(L"expression");
array2439 = (Object)new_Type_Array_with(1, (Object)localvariable3044);
// new
send21351 = (Object)new_AST_Send((Object)classreference592, (Object)symbol3915, 0);
// <=
send21352 = (Object)new_AST_Send((Object)send21351, (Object)symbol4122, 1, (Object)Self);
// <=
send21353 = (Object)new_AST_Send((Object)send21352, (Object)symbol4122, 1, (Object)localvariable3044);
method3043 = (Object)new_AST_Method_with((Type_Array)array2439, (Type_Array)empty_Type_Array, 1, send21353);
methodclosure3043 = (Object)new_Runtime_MethodClosure(method3043);
store_method((Type_Class)class524, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure3043);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable3045 = (Object)new_AST_Variable_named(L"input");
array2440 = (Object)new_Type_Array_with(1, (Object)localvariable3045);
// subclassResponsibility
send21354 = (Object)new_AST_Send((Object)Self, (Object)symbol4166, 0);
method3044 = (Object)new_AST_Method_with((Type_Array)array2440, (Type_Array)empty_Type_Array, 2, send21354, Self);
methodclosure3044 = (Object)new_Runtime_MethodClosure(method3044);
store_method((Type_Class)class524, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure3044);


// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
// optional
send21355 = (Object)new_AST_Send((Object)Self, (Object)symbol4105, 0);
// skipWhitespace:
send21356 = (Object)new_AST_Send((Object)send21355, (Object)symbol4142, 1, (Object)False_Const);
method3045 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21356);
symbol4116 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure3045 = (Object)new_Runtime_MethodClosure(method3045);
store_method((Type_Class)class524, (Type_Symbol)symbol4116, (Runtime_MethodClosure)methodclosure3045);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send21357 = (Object)new_AST_Send((Object)classreference594, (Object)symbol3907, 1, (Object)Self);
method3046 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21357);
methodclosure3046 = (Object)new_Runtime_MethodClosure(method3046);
store_method((Type_Class)class524, (Type_Symbol)symbol4105, (Runtime_MethodClosure)methodclosure3046);

classreference597 = (Object)new_Organization_ClassReference((Type_Class)class524);

// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable3046 = (Object)new_AST_Variable_named(L"parser");
localvariable3047 = (Object)new_AST_Variable_named(L"string");
localvariable3048 = (Object)new_AST_Variable_named(L"result");
localvariable3049 = (Object)new_AST_Variable_named(L"arg");
array2441 = (Object)new_Type_Array_with(4, (Object)localvariable3046, (Object)localvariable3047, (Object)localvariable3048, (Object)localvariable3049);
symbol4175 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send21358 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4175, 0);
assign2608 = (Object)new_AST_Assign((Object)localvariable3046, (Object)send21358);
string2461 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant4147 = (Object)new_AST_Constant((Object)string2461);
// on:
send21359 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4147);
assign2609 = (Object)new_AST_Assign((Object)localvariable3047, (Object)send21359);
// match:
send21360 = (Object)new_AST_Send((Object)localvariable3046, (Object)symbol4108, 1, (Object)localvariable3047);
assign2610 = (Object)new_AST_Assign((Object)localvariable3048, (Object)send21360);
// class
send21361 = (Object)new_AST_Send((Object)localvariable3048, (Object)SMB_class, 0);
symbol4176 = (Object)new_Type_Symbol_cached(L"should");
// should
send21362 = (Object)new_AST_Send((Object)send21361, (Object)symbol4176, 0);

// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable3050 = (Object)new_AST_Variable_named(L"anObject");
array2442 = (Object)new_Type_Array_with(1, (Object)localvariable3050);
assign2611 = (Object)new_AST_Assign((Object)instancevariable794, (Object)localvariable3050);
method3047 = (Object)new_AST_Method_with((Type_Array)array2442, (Type_Array)empty_Type_Array, 2, assign2611, Self);
symbol3990 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure3047 = (Object)new_Runtime_MethodClosure(method3047);
store_method((Type_Class)class550, (Type_Symbol)symbol3990, (Runtime_MethodClosure)methodclosure3047);


// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method3048 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable794);
symbol3992 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure3048 = (Object)new_Runtime_MethodClosure(method3048);
store_method((Type_Class)class550, (Type_Symbol)symbol3992, (Runtime_MethodClosure)methodclosure3048);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
symbol3928 = (Object)new_Type_Symbol_cached(L"arguments");
// arguments
send21363 = (Object)new_AST_Send((Object)Self, (Object)symbol3928, 0);
symbol4177 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable3051 = (Object)new_AST_Variable_named(L"el");
array2443 = (Object)new_Type_Array_with(1, (Object)localvariable3051);
// isReturnExpression
send21364 = (Object)new_AST_Send((Object)localvariable3051, (Object)symbol3825, 0);
symbol4178 = (Object)new_Type_Symbol_cached(L"or:");
symbol3945 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
// hasReturnExpression
send21365 = (Object)new_AST_Send((Object)localvariable3051, (Object)symbol3945, 0);
block1386 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21365);
// or:
send21366 = (Object)new_AST_Send((Object)send21364, (Object)symbol4178, 1, (Object)block1386);
block1387 = (Object)new_AST_Block_with((Type_Array)array2443, (Type_Array)empty_Type_Array, 1, 1, send21366);
// anySatisfy:
send21367 = (Object)new_AST_Send((Object)send21363, (Object)symbol4177, 1, (Object)block1387);
method3049 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21367);
methodclosure3049 = (Object)new_Runtime_MethodClosure(method3049);
store_method((Type_Class)class550, (Type_Symbol)symbol3945, (Runtime_MethodClosure)methodclosure3049);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super268 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send21368 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
assign2612 = (Object)new_AST_Assign((Object)instancevariable795, (Object)send21368);
method3050 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super268, assign2612, Self);
methodclosure3050 = (Object)new_Runtime_MethodClosure(method3050);
store_method((Type_Class)class550, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3050);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable3052 = (Object)new_AST_Variable_named(L"anObject");
array2444 = (Object)new_Type_Array_with(1, (Object)localvariable3052);
assign2613 = (Object)new_AST_Assign((Object)instancevariable795, (Object)localvariable3052);
method3051 = (Object)new_AST_Method_with((Type_Array)array2444, (Type_Array)empty_Type_Array, 2, assign2613, Self);
symbol4003 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure3051 = (Object)new_Runtime_MethodClosure(method3051);
store_method((Type_Class)class550, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure3051);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method3052 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable795);
methodclosure3052 = (Object)new_Runtime_MethodClosure(method3052);
store_method((Type_Class)class550, (Type_Symbol)symbol3928, (Runtime_MethodClosure)methodclosure3052);

classreference598 = (Object)new_Organization_ClassReference((Type_Class)class550);
// =
send21369 = (Object)new_AST_Send((Object)send21362, (Object)SMB__equal, 1, (Object)classreference598);
symbol4002 = (Object)new_Type_Symbol_cached(L"keywords");
// keywords
send21370 = (Object)new_AST_Send((Object)localvariable3048, (Object)symbol4002, 0);
// asArray
send21371 = (Object)new_AST_Send((Object)send21370, (Object)SMB_asArray, 0);
// should
send21372 = (Object)new_AST_Send((Object)send21371, (Object)symbol4176, 0);
localvariable3053 = (Object)new_AST_Variable_named(L"receiver");
array2445 = (Object)new_Type_Array_with(1, (Object)localvariable3053);
smallint1450 = (Object)new_Type_SmallInt(1);
constant4148 = (Object)new_AST_Constant((Object)smallint1450);
string2462 = (Object)new_Type_String(L"abc");
constant4149 = (Object)new_AST_Constant((Object)string2462);
// at:put:
send21373 = (Object)new_AST_Send((Object)localvariable3053, (Object)SMB_at_put_, 2, (Object)constant4148, (Object)constant4149);
smallint1451 = (Object)new_Type_SmallInt(2);
constant4150 = (Object)new_AST_Constant((Object)smallint1451);
string2463 = (Object)new_Type_String(L"def");
constant4151 = (Object)new_AST_Constant((Object)string2463);
// at:put:
send21374 = (Object)new_AST_Send((Object)localvariable3053, (Object)SMB_at_put_, 2, (Object)constant4150, (Object)constant4151);
smallint1452 = (Object)new_Type_SmallInt(3);
constant4152 = (Object)new_AST_Constant((Object)smallint1452);
string2464 = (Object)new_Type_String(L"ghi");
constant4153 = (Object)new_AST_Constant((Object)string2464);
// at:put:
send21375 = (Object)new_AST_Send((Object)localvariable3053, (Object)SMB_at_put_, 2, (Object)constant4152, (Object)constant4153);
// yourself
send21376 = (Object)new_AST_Send((Object)localvariable3053, (Object)symbol3824, 0);
block1388 = (Object)new_AST_Block_with((Type_Array)array2445, (Type_Array)empty_Type_Array, 1, 4, send21373, send21374, send21375, send21376);
smallint1453 = (Object)new_Type_SmallInt(3);
constant4154 = (Object)new_AST_Constant((Object)smallint1453);
// new:
send21377 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4154);
// value:
send21378 = (Object)new_AST_Send((Object)block1388, (Object)SMB_value_, 1, (Object)send21377);
// =
send21379 = (Object)new_AST_Send((Object)send21372, (Object)SMB__equal, 1, (Object)send21378);
// arguments
send21380 = (Object)new_AST_Send((Object)localvariable3048, (Object)symbol3928, 0);
// first
send21381 = (Object)new_AST_Send((Object)send21380, (Object)symbol3961, 0);
assign2614 = (Object)new_AST_Assign((Object)localvariable3049, (Object)send21381);
// class
send21382 = (Object)new_AST_Send((Object)localvariable3049, (Object)SMB_class, 0);
// should
send21383 = (Object)new_AST_Send((Object)send21382, (Object)symbol4176, 0);

// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger

// SmallInt>>int
//int
// 	^ int
method3053 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable780);
symbol4133 = (Object)new_Type_Symbol_cached(L"int");
methodclosure3053 = (Object)new_Runtime_MethodClosure(method3053);
store_method((Type_Class)class539, (Type_Symbol)symbol4133, (Runtime_MethodClosure)methodclosure3053);


// SmallInt>>int:
//int: anObject
// 	int := anObject
localvariable3054 = (Object)new_AST_Variable_named(L"anObject");
array2446 = (Object)new_Type_Array_with(1, (Object)localvariable3054);
assign2615 = (Object)new_AST_Assign((Object)instancevariable780, (Object)localvariable3054);
method3054 = (Object)new_AST_Method_with((Type_Array)array2446, (Type_Array)empty_Type_Array, 2, assign2615, Self);
symbol4134 = (Object)new_Type_Symbol_cached(L"int:");
methodclosure3054 = (Object)new_Runtime_MethodClosure(method3054);
store_method((Type_Class)class539, (Type_Symbol)symbol4134, (Runtime_MethodClosure)methodclosure3054);


// SmallInt>>=
//= other
// 	^ self class = other class and: [ self int = other int ]
localvariable3055 = (Object)new_AST_Variable_named(L"other");
array2447 = (Object)new_Type_Array_with(1, (Object)localvariable3055);
// class
send21384 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send21385 = (Object)new_AST_Send((Object)localvariable3055, (Object)SMB_class, 0);
// =
send21386 = (Object)new_AST_Send((Object)send21384, (Object)SMB__equal, 1, (Object)send21385);
symbol4179 = (Object)new_Type_Symbol_cached(L"and:");
// int
send21387 = (Object)new_AST_Send((Object)Self, (Object)symbol4133, 0);
// int
send21388 = (Object)new_AST_Send((Object)localvariable3055, (Object)symbol4133, 0);
// =
send21389 = (Object)new_AST_Send((Object)send21387, (Object)SMB__equal, 1, (Object)send21388);
block1389 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21389);
// and:
send21390 = (Object)new_AST_Send((Object)send21386, (Object)symbol4179, 1, (Object)block1389);
method3055 = (Object)new_AST_Method_with((Type_Array)array2447, (Type_Array)empty_Type_Array, 1, send21390);
methodclosure3055 = (Object)new_Runtime_MethodClosure(method3055);
store_method((Type_Class)class539, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure3055);

classreference599 = (Object)new_Organization_ClassReference((Type_Class)class539);
// new
send21391 = (Object)new_AST_Send((Object)classreference599, (Object)symbol3915, 0);
symbol3972 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send21392 = (Object)new_AST_Send((Object)Self, (Object)symbol3972, 0);
// int:
send21393 = (Object)new_AST_Send((Object)send21391, (Object)symbol4134, 1, (Object)send21392);
method3056 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21393);
symbol3971 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure3056 = (Object)new_Runtime_MethodClosure(method3056);
store_method((Type_Class)class569, (Type_Symbol)symbol3971, (Runtime_MethodClosure)methodclosure3056);


// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable3056 = (Object)new_AST_Variable_named(L"anObject");
array2448 = (Object)new_Type_Array_with(1, (Object)localvariable3056);
assign2616 = (Object)new_AST_Assign((Object)instancevariable816, (Object)localvariable3056);
method3057 = (Object)new_AST_Method_with((Type_Array)array2448, (Type_Array)empty_Type_Array, 2, assign2616, Self);
symbol3968 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure3057 = (Object)new_Runtime_MethodClosure(method3057);
store_method((Type_Class)class569, (Type_Symbol)symbol3968, (Runtime_MethodClosure)methodclosure3057);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable3057 = (Object)new_AST_Variable_named(L"aStream");
array2449 = (Object)new_Type_Array_with(1, (Object)localvariable3057);
symbol3969 = (Object)new_Type_Symbol_cached(L"number");
// number
send21394 = (Object)new_AST_Send((Object)Self, (Object)symbol3969, 0);
// nextPutAll:
send21395 = (Object)new_AST_Send((Object)localvariable3057, (Object)symbol4154, 1, (Object)send21394);
method3058 = (Object)new_AST_Method_with((Type_Array)array2449, (Type_Array)empty_Type_Array, 2, send21395, Self);
methodclosure3058 = (Object)new_Runtime_MethodClosure(method3058);
store_method((Type_Class)class569, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3058);


// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
symbol3973 = (Object)new_Type_Symbol_cached(L"base");
// base
send21396 = (Object)new_AST_Send((Object)Self, (Object)symbol3973, 0);
string2465 = (Object)new_Type_String(L"r");
constant4155 = (Object)new_AST_Constant((Object)string2465);
// ,
send21397 = (Object)new_AST_Send((Object)send21396, (Object)SMB__concat, 1, (Object)constant4155);
// number
send21398 = (Object)new_AST_Send((Object)Self, (Object)symbol3969, 0);
// ,
send21399 = (Object)new_AST_Send((Object)send21397, (Object)SMB__concat, 1, (Object)send21398);
symbol4180 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send21400 = (Object)new_AST_Send((Object)send21399, (Object)symbol4180, 0);
// asInteger
send21401 = (Object)new_AST_Send((Object)send21400, (Object)symbol3972, 0);
method3059 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21401);
methodclosure3059 = (Object)new_Runtime_MethodClosure(method3059);
store_method((Type_Class)class569, (Type_Symbol)symbol3972, (Runtime_MethodClosure)methodclosure3059);


// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable3058 = (Object)new_AST_Variable_named(L"anObject");
array2450 = (Object)new_Type_Array_with(1, (Object)localvariable3058);
assign2617 = (Object)new_AST_Assign((Object)instancevariable817, (Object)localvariable3058);
method3060 = (Object)new_AST_Method_with((Type_Array)array2450, (Type_Array)empty_Type_Array, 2, assign2617, Self);
symbol3974 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure3060 = (Object)new_Runtime_MethodClosure(method3060);
store_method((Type_Class)class569, (Type_Symbol)symbol3974, (Runtime_MethodClosure)methodclosure3060);


// ASTNumber>>number
//number
// 	^ number
method3061 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable816);
methodclosure3061 = (Object)new_Runtime_MethodClosure(method3061);
store_method((Type_Class)class569, (Type_Symbol)symbol3969, (Runtime_MethodClosure)methodclosure3061);


// ASTNumber>>base
//base
// 	^ base
method3062 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable817);
methodclosure3062 = (Object)new_Runtime_MethodClosure(method3062);
store_method((Type_Class)class569, (Type_Symbol)symbol3973, (Runtime_MethodClosure)methodclosure3062);

classreference600 = (Object)new_Organization_ClassReference((Type_Class)class569);
// =
send21402 = (Object)new_AST_Send((Object)send21383, (Object)SMB__equal, 1, (Object)classreference600);
// arguments
send21403 = (Object)new_AST_Send((Object)localvariable3048, (Object)symbol3928, 0);
smallint1454 = (Object)new_Type_SmallInt(2);
constant4156 = (Object)new_AST_Constant((Object)smallint1454);
// at:
send21404 = (Object)new_AST_Send((Object)send21403, (Object)SMB_at_, 1, (Object)constant4156);
assign2618 = (Object)new_AST_Assign((Object)localvariable3049, (Object)send21404);
// class
send21405 = (Object)new_AST_Send((Object)localvariable3049, (Object)SMB_class, 0);
// should
send21406 = (Object)new_AST_Send((Object)send21405, (Object)symbol4176, 0);

// ASTBinaryExpression>>argument
//argument
// 	^ argument
method3063 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable821);
symbol4000 = (Object)new_Type_Symbol_cached(L"argument");
methodclosure3063 = (Object)new_Runtime_MethodClosure(method3063);
store_method((Type_Class)class572, (Type_Symbol)symbol4000, (Runtime_MethodClosure)methodclosure3063);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable3059 = (Object)new_AST_Variable_named(L"aStream");
array2451 = (Object)new_Type_Array_with(1, (Object)localvariable3059);
// receiver
send21407 = (Object)new_AST_Send((Object)Self, (Object)symbol3992, 0);
// printOn:
send21408 = (Object)new_AST_Send((Object)send21407, (Object)symbol3923, 1, (Object)localvariable3059);
symbol4181 = (Object)new_Type_Symbol_cached(L"space");
// space
send21409 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol4181, 0);
// nextPutAll:
send21410 = (Object)new_AST_Send((Object)localvariable3059, (Object)symbol4154, 1, (Object)send21409);
super269 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable3059);
// space
send21411 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol4181, 0);
// nextPutAll:
send21412 = (Object)new_AST_Send((Object)localvariable3059, (Object)symbol4154, 1, (Object)send21411);
// argument
send21413 = (Object)new_AST_Send((Object)Self, (Object)symbol4000, 0);
// printOn:
send21414 = (Object)new_AST_Send((Object)send21413, (Object)symbol3923, 1, (Object)localvariable3059);
method3064 = (Object)new_AST_Method_with((Type_Array)array2451, (Type_Array)empty_Type_Array, 6, send21408, send21410, super269, send21412, send21414, Self);
methodclosure3064 = (Object)new_Runtime_MethodClosure(method3064);
store_method((Type_Class)class572, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3064);


// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable3060 = (Object)new_AST_Variable_named(L"anObject");
array2452 = (Object)new_Type_Array_with(1, (Object)localvariable3060);
assign2619 = (Object)new_AST_Assign((Object)instancevariable820, (Object)localvariable3060);
method3065 = (Object)new_AST_Method_with((Type_Array)array2452, (Type_Array)empty_Type_Array, 2, assign2619, Self);
methodclosure3065 = (Object)new_Runtime_MethodClosure(method3065);
store_method((Type_Class)class572, (Type_Symbol)symbol3990, (Runtime_MethodClosure)methodclosure3065);


// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method3066 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable820);
methodclosure3066 = (Object)new_Runtime_MethodClosure(method3066);
store_method((Type_Class)class572, (Type_Symbol)symbol3992, (Runtime_MethodClosure)methodclosure3066);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super270 = (Object)new_AST_Super((Object)symbol3826, 0);
method3067 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super270, Self);
methodclosure3067 = (Object)new_Runtime_MethodClosure(method3067);
store_method((Type_Class)class572, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3067);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable3061 = (Object)new_AST_Variable_named(L"anObject");
array2453 = (Object)new_Type_Array_with(1, (Object)localvariable3061);
assign2620 = (Object)new_AST_Assign((Object)instancevariable821, (Object)localvariable3061);
method3068 = (Object)new_AST_Method_with((Type_Array)array2453, (Type_Array)empty_Type_Array, 2, assign2620, Self);
symbol3999 = (Object)new_Type_Symbol_cached(L"argument:");
methodclosure3068 = (Object)new_Runtime_MethodClosure(method3068);
store_method((Type_Class)class572, (Type_Symbol)symbol3999, (Runtime_MethodClosure)methodclosure3068);


// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	outer argument: receiver.
// 	receiver := outer
localvariable3062 = (Object)new_AST_Variable_named(L"outer");
array2454 = (Object)new_Type_Array_with(1, (Object)localvariable3062);
// argument:
send21415 = (Object)new_AST_Send((Object)localvariable3062, (Object)symbol3999, 1, (Object)instancevariable820);
assign2621 = (Object)new_AST_Assign((Object)instancevariable820, (Object)localvariable3062);
method3069 = (Object)new_AST_Method_with((Type_Array)array2454, (Type_Array)empty_Type_Array, 3, send21415, assign2621, Self);
symbol3948 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
methodclosure3069 = (Object)new_Runtime_MethodClosure(method3069);
store_method((Type_Class)class572, (Type_Symbol)symbol3948, (Runtime_MethodClosure)methodclosure3069);

classreference601 = (Object)new_Organization_ClassReference((Type_Class)class572);
// =
send21416 = (Object)new_AST_Send((Object)send21406, (Object)SMB__equal, 1, (Object)classreference601);
// arguments
send21417 = (Object)new_AST_Send((Object)localvariable3048, (Object)symbol3928, 0);
smallint1455 = (Object)new_Type_SmallInt(3);
constant4157 = (Object)new_AST_Constant((Object)smallint1455);
// at:
send21418 = (Object)new_AST_Send((Object)send21417, (Object)SMB_at_, 1, (Object)constant4157);
assign2622 = (Object)new_AST_Assign((Object)localvariable3049, (Object)send21418);
// class
send21419 = (Object)new_AST_Send((Object)localvariable3049, (Object)SMB_class, 0);
// should
send21420 = (Object)new_AST_Send((Object)send21419, (Object)symbol4176, 0);

// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable3063 = (Object)new_AST_Variable_named(L"anObject");
array2455 = (Object)new_Type_Array_with(1, (Object)localvariable3063);
assign2623 = (Object)new_AST_Assign((Object)instancevariable798, (Object)localvariable3063);
method3070 = (Object)new_AST_Method_with((Type_Array)array2455, (Type_Array)empty_Type_Array, 2, assign2623, Self);
methodclosure3070 = (Object)new_Runtime_MethodClosure(method3070);
store_method((Type_Class)class556, (Type_Symbol)symbol3990, (Runtime_MethodClosure)methodclosure3070);


// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method3071 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable798);
methodclosure3071 = (Object)new_Runtime_MethodClosure(method3071);
store_method((Type_Class)class556, (Type_Symbol)symbol3992, (Runtime_MethodClosure)methodclosure3071);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable3064 = (Object)new_AST_Variable_named(L"aStream");
array2456 = (Object)new_Type_Array_with(1, (Object)localvariable3064);
// receiver
send21421 = (Object)new_AST_Send((Object)Self, (Object)symbol3992, 0);
// printOn:
send21422 = (Object)new_AST_Send((Object)send21421, (Object)symbol3923, 1, (Object)localvariable3064);
// space
send21423 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol4181, 0);
// nextPutAll:
send21424 = (Object)new_AST_Send((Object)localvariable3064, (Object)symbol4154, 1, (Object)send21423);
super271 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable3064);
method3072 = (Object)new_AST_Method_with((Type_Array)array2456, (Type_Array)empty_Type_Array, 4, send21422, send21424, super271, Self);
methodclosure3072 = (Object)new_Runtime_MethodClosure(method3072);
store_method((Type_Class)class556, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3072);

classreference602 = (Object)new_Organization_ClassReference((Type_Class)class556);
// =
send21425 = (Object)new_AST_Send((Object)send21420, (Object)SMB__equal, 1, (Object)classreference602);
// position
send21426 = (Object)new_AST_Send((Object)localvariable3047, (Object)symbol4173, 0);
// should
send21427 = (Object)new_AST_Send((Object)send21426, (Object)symbol4176, 0);
smallint1456 = (Object)new_Type_SmallInt(25);
constant4158 = (Object)new_AST_Constant((Object)smallint1456);
// =
send21428 = (Object)new_AST_Send((Object)send21427, (Object)SMB__equal, 1, (Object)constant4158);
method3073 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2441, 13, assign2608, assign2609, assign2610, send21369, send21379, assign2614, send21402, assign2618, send21416, assign2622, send21425, send21428, Self);
symbol3856 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure3073 = (Object)new_Runtime_MethodClosure(method3073);
store_method((Type_Class)class534, (Type_Symbol)symbol3856, (Runtime_MethodClosure)methodclosure3073);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable3065 = (Object)new_AST_Variable_named(L"parser");
localvariable3066 = (Object)new_AST_Variable_named(L"string");
localvariable3067 = (Object)new_AST_Variable_named(L"result");
array2457 = (Object)new_Type_Array_with(3, (Object)localvariable3065, (Object)localvariable3066, (Object)localvariable3067);
symbol4182 = (Object)new_Type_Symbol_cached(L"array");
// array
send21429 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4182, 0);
assign2624 = (Object)new_AST_Assign((Object)localvariable3065, (Object)send21429);
string2466 = (Object)new_Type_String(L"()");
constant4159 = (Object)new_AST_Constant((Object)string2466);
// on:
send21430 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4159);
assign2625 = (Object)new_AST_Assign((Object)localvariable3066, (Object)send21430);
// match:
send21431 = (Object)new_AST_Send((Object)localvariable3065, (Object)symbol4108, 1, (Object)localvariable3066);
assign2626 = (Object)new_AST_Assign((Object)localvariable3067, (Object)send21431);
// class
send21432 = (Object)new_AST_Send((Object)localvariable3067, (Object)SMB_class, 0);
// should
send21433 = (Object)new_AST_Send((Object)send21432, (Object)symbol4176, 0);

// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
symbol3953 = (Object)new_Type_Symbol_cached(L"literals");
// literals
send21434 = (Object)new_AST_Send((Object)Self, (Object)symbol3953, 0);
// isEmpty
send21435 = (Object)new_AST_Send((Object)send21434, (Object)symbol3951, 0);
method3074 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21435);
methodclosure3074 = (Object)new_Runtime_MethodClosure(method3074);
store_method((Type_Class)class560, (Type_Symbol)symbol3951, (Runtime_MethodClosure)methodclosure3074);


// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable3068 = (Object)new_AST_Variable_named(L"aCollection");
array2458 = (Object)new_Type_Array_with(1, (Object)localvariable3068);
assign2627 = (Object)new_AST_Assign((Object)instancevariable803, (Object)localvariable3068);
method3075 = (Object)new_AST_Method_with((Type_Array)array2458, (Type_Array)empty_Type_Array, 2, assign2627, Self);
symbol3952 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure3075 = (Object)new_Runtime_MethodClosure(method3075);
store_method((Type_Class)class560, (Type_Symbol)symbol3952, (Runtime_MethodClosure)methodclosure3075);


// ASTArray>>literals
//literals
// 	^ literals
method3076 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable803);
methodclosure3076 = (Object)new_Runtime_MethodClosure(method3076);
store_method((Type_Class)class560, (Type_Symbol)symbol3953, (Runtime_MethodClosure)methodclosure3076);

classreference603 = (Object)new_Organization_ClassReference((Type_Class)class560);
// =
send21436 = (Object)new_AST_Send((Object)send21433, (Object)SMB__equal, 1, (Object)classreference603);
// literals
send21437 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
// asArray
send21438 = (Object)new_AST_Send((Object)send21437, (Object)SMB_asArray, 0);
// should
send21439 = (Object)new_AST_Send((Object)send21438, (Object)symbol4176, 0);
// new
send21440 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3915, 0);
// =
send21441 = (Object)new_AST_Send((Object)send21439, (Object)SMB__equal, 1, (Object)send21440);
string2467 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant4160 = (Object)new_AST_Constant((Object)string2467);
// on:
send21442 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4160);
assign2628 = (Object)new_AST_Assign((Object)localvariable3066, (Object)send21442);
// match:
send21443 = (Object)new_AST_Send((Object)localvariable3065, (Object)symbol4108, 1, (Object)localvariable3066);
assign2629 = (Object)new_AST_Assign((Object)localvariable3067, (Object)send21443);
// class
send21444 = (Object)new_AST_Send((Object)localvariable3067, (Object)SMB_class, 0);
// should
send21445 = (Object)new_AST_Send((Object)send21444, (Object)symbol4176, 0);
// =
send21446 = (Object)new_AST_Send((Object)send21445, (Object)SMB__equal, 1, (Object)classreference603);
// literals
send21447 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
// size
send21448 = (Object)new_AST_Send((Object)send21447, (Object)SMB_size, 0);
// should
send21449 = (Object)new_AST_Send((Object)send21448, (Object)symbol4176, 0);
smallint1457 = (Object)new_Type_SmallInt(5);
constant4161 = (Object)new_AST_Constant((Object)smallint1457);
// =
send21450 = (Object)new_AST_Send((Object)send21449, (Object)SMB__equal, 1, (Object)constant4161);
// literals
send21451 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
// first
send21452 = (Object)new_AST_Send((Object)send21451, (Object)symbol3961, 0);
// class
send21453 = (Object)new_AST_Send((Object)send21452, (Object)SMB_class, 0);
// should
send21454 = (Object)new_AST_Send((Object)send21453, (Object)symbol4176, 0);
// =
send21455 = (Object)new_AST_Send((Object)send21454, (Object)SMB__equal, 1, (Object)classreference600);
// literals
send21456 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
// first
send21457 = (Object)new_AST_Send((Object)send21456, (Object)symbol3961, 0);
// number
send21458 = (Object)new_AST_Send((Object)send21457, (Object)symbol3969, 0);
// should
send21459 = (Object)new_AST_Send((Object)send21458, (Object)symbol4176, 0);
string2468 = (Object)new_Type_String(L"1");
constant4162 = (Object)new_AST_Constant((Object)string2468);
// =
send21460 = (Object)new_AST_Send((Object)send21459, (Object)SMB__equal, 1, (Object)constant4162);
// literals
send21461 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1458 = (Object)new_Type_SmallInt(2);
constant4163 = (Object)new_AST_Constant((Object)smallint1458);
// at:
send21462 = (Object)new_AST_Send((Object)send21461, (Object)SMB_at_, 1, (Object)constant4163);
// class
send21463 = (Object)new_AST_Send((Object)send21462, (Object)SMB_class, 0);
// should
send21464 = (Object)new_AST_Send((Object)send21463, (Object)symbol4176, 0);

// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable3069 = (Object)new_AST_Variable_named(L"aStream");
array2459 = (Object)new_Type_Array_with(1, (Object)localvariable3069);
// nextPutAll:
send21465 = (Object)new_AST_Send((Object)localvariable3069, (Object)symbol4154, 1, (Object)instancevariable822);
method3077 = (Object)new_AST_Method_with((Type_Array)array2459, (Type_Array)empty_Type_Array, 2, send21465, Self);
methodclosure3077 = (Object)new_Runtime_MethodClosure(method3077);
store_method((Type_Class)class573, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3077);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
symbol3975 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send21466 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// asString
send21467 = (Object)new_AST_Send((Object)send21466, (Object)SMB_asString, 0);
method3078 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21467);
methodclosure3078 = (Object)new_Runtime_MethodClosure(method3078);
store_method((Type_Class)class573, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure3078);


// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable3070 = (Object)new_AST_Variable_named(L"aSymbol");
array2460 = (Object)new_Type_Array_with(1, (Object)localvariable3070);
assign2630 = (Object)new_AST_Assign((Object)instancevariable822, (Object)localvariable3070);
method3079 = (Object)new_AST_Method_with((Type_Array)array2460, (Type_Array)empty_Type_Array, 2, assign2630, Self);
symbol3976 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure3079 = (Object)new_Runtime_MethodClosure(method3079);
store_method((Type_Class)class573, (Type_Symbol)symbol3976, (Runtime_MethodClosure)methodclosure3079);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol

// Symbol>>symbol
//symbol
// 	^ symbol
method3080 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable783);
methodclosure3080 = (Object)new_Runtime_MethodClosure(method3080);
store_method((Type_Class)class541, (Type_Symbol)symbol3975, (Runtime_MethodClosure)methodclosure3080);


// Symbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: ' P'.
// 	self symbol printOn: aStream .
localvariable3071 = (Object)new_AST_Variable_named(L"aStream");
array2461 = (Object)new_Type_Array_with(1, (Object)localvariable3071);
string2469 = (Object)new_Type_String(L" P");
constant4164 = (Object)new_AST_Constant((Object)string2469);
// nextPutAll:
send21468 = (Object)new_AST_Send((Object)localvariable3071, (Object)symbol4154, 1, (Object)constant4164);
// symbol
send21469 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// printOn:
send21470 = (Object)new_AST_Send((Object)send21469, (Object)symbol3923, 1, (Object)localvariable3071);
method3081 = (Object)new_AST_Method_with((Type_Array)array2461, (Type_Array)empty_Type_Array, 3, send21468, send21470, Self);
methodclosure3081 = (Object)new_Runtime_MethodClosure(method3081);
store_method((Type_Class)class541, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3081);


// Symbol>>asString
//asString
// 	^ self symbol asString
// symbol
send21471 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// asString
send21472 = (Object)new_AST_Send((Object)send21471, (Object)SMB_asString, 0);
method3082 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21472);
methodclosure3082 = (Object)new_Runtime_MethodClosure(method3082);
store_method((Type_Class)class541, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure3082);


// Symbol>>symbol:
//symbol: anObject
// 	symbol := anObject asSymbol
localvariable3072 = (Object)new_AST_Variable_named(L"anObject");
array2462 = (Object)new_Type_Array_with(1, (Object)localvariable3072);
// asSymbol
send21473 = (Object)new_AST_Send((Object)localvariable3072, (Object)SMB_asSymbol, 0);
assign2631 = (Object)new_AST_Assign((Object)instancevariable783, (Object)send21473);
method3083 = (Object)new_AST_Method_with((Type_Array)array2462, (Type_Array)empty_Type_Array, 2, assign2631, Self);
methodclosure3083 = (Object)new_Runtime_MethodClosure(method3083);
store_method((Type_Class)class541, (Type_Symbol)symbol3976, (Runtime_MethodClosure)methodclosure3083);


// Symbol>>asPSymbol
//asPSymbol
// 	^ self
method3084 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol3978 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure3084 = (Object)new_Runtime_MethodClosure(method3084);
store_method((Type_Class)class541, (Type_Symbol)symbol3978, (Runtime_MethodClosure)methodclosure3084);


// Symbol>>asSymbol
//asSymbol
// 	^ self symbol
// symbol
send21474 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
method3085 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21474);
methodclosure3085 = (Object)new_Runtime_MethodClosure(method3085);
store_method((Type_Class)class541, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure3085);


// Symbol>>=
//= other
// 	^(other isKindOf: self class) and: [self symbol = other symbol]
localvariable3073 = (Object)new_AST_Variable_named(L"other");
array2463 = (Object)new_Type_Array_with(1, (Object)localvariable3073);
symbol4183 = (Object)new_Type_Symbol_cached(L"isKindOf:");
// class
send21475 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// isKindOf:
send21476 = (Object)new_AST_Send((Object)localvariable3073, (Object)symbol4183, 1, (Object)send21475);
// symbol
send21477 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// symbol
send21478 = (Object)new_AST_Send((Object)localvariable3073, (Object)symbol3975, 0);
// =
send21479 = (Object)new_AST_Send((Object)send21477, (Object)SMB__equal, 1, (Object)send21478);
block1390 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21479);
// and:
send21480 = (Object)new_AST_Send((Object)send21476, (Object)symbol4179, 1, (Object)block1390);
method3086 = (Object)new_AST_Method_with((Type_Array)array2463, (Type_Array)empty_Type_Array, 1, send21480);
methodclosure3086 = (Object)new_Runtime_MethodClosure(method3086);
store_method((Type_Class)class541, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure3086);

classreference604 = (Object)new_Organization_ClassReference((Type_Class)class541);
// symbol
send21481 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// named:
send21482 = (Object)new_AST_Send((Object)classreference604, (Object)symbol4128, 1, (Object)send21481);
method3087 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21482);
methodclosure3087 = (Object)new_Runtime_MethodClosure(method3087);
store_method((Type_Class)class573, (Type_Symbol)symbol3978, (Runtime_MethodClosure)methodclosure3087);


// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send21483 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// asSymbol
send21484 = (Object)new_AST_Send((Object)send21483, (Object)SMB_asSymbol, 0);
method3088 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21484);
methodclosure3088 = (Object)new_Runtime_MethodClosure(method3088);
store_method((Type_Class)class573, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure3088);


// ASTSymbol>>symbol
//symbol
// 	^ symbol
method3089 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable822);
methodclosure3089 = (Object)new_Runtime_MethodClosure(method3089);
store_method((Type_Class)class573, (Type_Symbol)symbol3975, (Runtime_MethodClosure)methodclosure3089);

classreference605 = (Object)new_Organization_ClassReference((Type_Class)class573);
// =
send21485 = (Object)new_AST_Send((Object)send21464, (Object)SMB__equal, 1, (Object)classreference605);
// literals
send21486 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1459 = (Object)new_Type_SmallInt(2);
constant4165 = (Object)new_AST_Constant((Object)smallint1459);
// at:
send21487 = (Object)new_AST_Send((Object)send21486, (Object)SMB_at_, 1, (Object)constant4165);
// symbol
send21488 = (Object)new_AST_Send((Object)send21487, (Object)symbol3975, 0);
// should
send21489 = (Object)new_AST_Send((Object)send21488, (Object)symbol4176, 0);
string2470 = (Object)new_Type_String(L"a");
constant4166 = (Object)new_AST_Constant((Object)string2470);
// =
send21490 = (Object)new_AST_Send((Object)send21489, (Object)SMB__equal, 1, (Object)constant4166);
// literals
send21491 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1460 = (Object)new_Type_SmallInt(3);
constant4167 = (Object)new_AST_Constant((Object)smallint1460);
// at:
send21492 = (Object)new_AST_Send((Object)send21491, (Object)SMB_at_, 1, (Object)constant4167);
// class
send21493 = (Object)new_AST_Send((Object)send21492, (Object)SMB_class, 0);
// should
send21494 = (Object)new_AST_Send((Object)send21493, (Object)symbol4176, 0);
// =
send21495 = (Object)new_AST_Send((Object)send21494, (Object)SMB__equal, 1, (Object)classreference605);
// literals
send21496 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1461 = (Object)new_Type_SmallInt(3);
constant4168 = (Object)new_AST_Constant((Object)smallint1461);
// at:
send21497 = (Object)new_AST_Send((Object)send21496, (Object)SMB_at_, 1, (Object)constant4168);
// symbol
send21498 = (Object)new_AST_Send((Object)send21497, (Object)symbol3975, 0);
// should
send21499 = (Object)new_AST_Send((Object)send21498, (Object)symbol4176, 0);
string2471 = (Object)new_Type_String(L"a");
constant4169 = (Object)new_AST_Constant((Object)string2471);
// =
send21500 = (Object)new_AST_Send((Object)send21499, (Object)SMB__equal, 1, (Object)constant4169);
// literals
send21501 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1462 = (Object)new_Type_SmallInt(4);
constant4170 = (Object)new_AST_Constant((Object)smallint1462);
// at:
send21502 = (Object)new_AST_Send((Object)send21501, (Object)SMB_at_, 1, (Object)constant4170);
// class
send21503 = (Object)new_AST_Send((Object)send21502, (Object)SMB_class, 0);
// should
send21504 = (Object)new_AST_Send((Object)send21503, (Object)symbol4176, 0);

// ASTString>>asPString
//asPString 
// 	^PString new string: self string

// String>>=
//= other
// 	^ self class = other class and: [ self string = other string ].
localvariable3074 = (Object)new_AST_Variable_named(L"other");
array2464 = (Object)new_Type_Array_with(1, (Object)localvariable3074);
// class
send21505 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send21506 = (Object)new_AST_Send((Object)localvariable3074, (Object)SMB_class, 0);
// =
send21507 = (Object)new_AST_Send((Object)send21505, (Object)SMB__equal, 1, (Object)send21506);
symbol3980 = (Object)new_Type_Symbol_cached(L"string");
// string
send21508 = (Object)new_AST_Send((Object)Self, (Object)symbol3980, 0);
// string
send21509 = (Object)new_AST_Send((Object)localvariable3074, (Object)symbol3980, 0);
// =
send21510 = (Object)new_AST_Send((Object)send21508, (Object)SMB__equal, 1, (Object)send21509);
block1391 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send21510);
// and:
send21511 = (Object)new_AST_Send((Object)send21507, (Object)symbol4179, 1, (Object)block1391);
method3090 = (Object)new_AST_Method_with((Type_Array)array2464, (Type_Array)empty_Type_Array, 1, send21511);
methodclosure3090 = (Object)new_Runtime_MethodClosure(method3090);
store_method((Type_Class)class540, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure3090);


// String>>printOn:
//printOn: aStream
// 	self string printOn: aStream.
localvariable3075 = (Object)new_AST_Variable_named(L"aStream");
array2465 = (Object)new_Type_Array_with(1, (Object)localvariable3075);
// string
send21512 = (Object)new_AST_Send((Object)Self, (Object)symbol3980, 0);
// printOn:
send21513 = (Object)new_AST_Send((Object)send21512, (Object)symbol3923, 1, (Object)localvariable3075);
method3091 = (Object)new_AST_Method_with((Type_Array)array2465, (Type_Array)empty_Type_Array, 2, send21513, Self);
methodclosure3091 = (Object)new_Runtime_MethodClosure(method3091);
store_method((Type_Class)class540, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3091);


// String>>string
//string
// 	^string
method3092 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable781);
methodclosure3092 = (Object)new_Runtime_MethodClosure(method3092);
store_method((Type_Class)class540, (Type_Symbol)symbol3980, (Runtime_MethodClosure)methodclosure3092);


// String>>string:
//string: aString
// 	string := aString 
localvariable3076 = (Object)new_AST_Variable_named(L"aString");
array2466 = (Object)new_Type_Array_with(1, (Object)localvariable3076);
assign2632 = (Object)new_AST_Assign((Object)instancevariable781, (Object)localvariable3076);
method3093 = (Object)new_AST_Method_with((Type_Array)array2466, (Type_Array)empty_Type_Array, 2, assign2632, Self);
symbol3979 = (Object)new_Type_Symbol_cached(L"string:");
methodclosure3093 = (Object)new_Runtime_MethodClosure(method3093);
store_method((Type_Class)class540, (Type_Symbol)symbol3979, (Runtime_MethodClosure)methodclosure3093);

classreference606 = (Object)new_Organization_ClassReference((Type_Class)class540);
// new
send21514 = (Object)new_AST_Send((Object)classreference606, (Object)symbol3915, 0);
// string
send21515 = (Object)new_AST_Send((Object)Self, (Object)symbol3980, 0);
// string:
send21516 = (Object)new_AST_Send((Object)send21514, (Object)symbol3979, 1, (Object)send21515);
method3094 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21516);
symbol3982 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure3094 = (Object)new_Runtime_MethodClosure(method3094);
store_method((Type_Class)class552, (Type_Symbol)symbol3982, (Runtime_MethodClosure)methodclosure3094);


// ASTString>>string
//string
// 	^ string
method3095 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable796);
methodclosure3095 = (Object)new_Runtime_MethodClosure(method3095);
store_method((Type_Class)class552, (Type_Symbol)symbol3980, (Runtime_MethodClosure)methodclosure3095);


// ASTString>>string:
//string: aString
// 	string := aString
localvariable3077 = (Object)new_AST_Variable_named(L"aString");
array2467 = (Object)new_Type_Array_with(1, (Object)localvariable3077);
assign2633 = (Object)new_AST_Assign((Object)instancevariable796, (Object)localvariable3077);
method3096 = (Object)new_AST_Method_with((Type_Array)array2467, (Type_Array)empty_Type_Array, 2, assign2633, Self);
methodclosure3096 = (Object)new_Runtime_MethodClosure(method3096);
store_method((Type_Class)class552, (Type_Symbol)symbol3979, (Runtime_MethodClosure)methodclosure3096);

classreference607 = (Object)new_Organization_ClassReference((Type_Class)class552);
// =
send21517 = (Object)new_AST_Send((Object)send21504, (Object)SMB__equal, 1, (Object)classreference607);
// literals
send21518 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1463 = (Object)new_Type_SmallInt(4);
constant4171 = (Object)new_AST_Constant((Object)smallint1463);
// at:
send21519 = (Object)new_AST_Send((Object)send21518, (Object)SMB_at_, 1, (Object)constant4171);
// string
send21520 = (Object)new_AST_Send((Object)send21519, (Object)symbol3980, 0);
// should
send21521 = (Object)new_AST_Send((Object)send21520, (Object)symbol4176, 0);
string2472 = (Object)new_Type_String(L"b");
constant4172 = (Object)new_AST_Constant((Object)string2472);
// =
send21522 = (Object)new_AST_Send((Object)send21521, (Object)SMB__equal, 1, (Object)constant4172);
// literals
send21523 = (Object)new_AST_Send((Object)localvariable3067, (Object)symbol3953, 0);
smallint1464 = (Object)new_Type_SmallInt(5);
constant4173 = (Object)new_AST_Constant((Object)smallint1464);
// at:
send21524 = (Object)new_AST_Send((Object)send21523, (Object)SMB_at_, 1, (Object)constant4173);
// class
send21525 = (Object)new_AST_Send((Object)send21524, (Object)SMB_class, 0);
// should
send21526 = (Object)new_AST_Send((Object)send21525, (Object)symbol4176, 0);
// =
send21527 = (Object)new_AST_Send((Object)send21526, (Object)SMB__equal, 1, (Object)classreference603);
method3097 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2457, 19, assign2624, assign2625, assign2626, send21436, send21441, assign2628, assign2629, send21446, send21450, send21455, send21460, send21485, send21490, send21495, send21500, send21517, send21522, send21527, Self);
symbol3838 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure3097 = (Object)new_Runtime_MethodClosure(method3097);
store_method((Type_Class)class534, (Type_Symbol)symbol3838, (Runtime_MethodClosure)methodclosure3097);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3078 = (Object)new_AST_Variable_named(L"parser");
localvariable3079 = (Object)new_AST_Variable_named(L"string");
array2468 = (Object)new_Type_Array_with(2, (Object)localvariable3078, (Object)localvariable3079);
symbol4184 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send21528 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4184, 0);
assign2634 = (Object)new_AST_Assign((Object)localvariable3078, (Object)send21528);
string2473 = (Object)new_Type_String(L"Abcd ");
constant4174 = (Object)new_AST_Constant((Object)string2473);
// on:
send21529 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4174);
assign2635 = (Object)new_AST_Assign((Object)localvariable3079, (Object)send21529);
// match:
send21530 = (Object)new_AST_Send((Object)localvariable3078, (Object)symbol4108, 1, (Object)localvariable3079);
// should
send21531 = (Object)new_AST_Send((Object)send21530, (Object)symbol4176, 0);
string2474 = (Object)new_Type_String(L"Abcd");
constant4175 = (Object)new_AST_Constant((Object)string2474);
// =
send21532 = (Object)new_AST_Send((Object)send21531, (Object)SMB__equal, 1, (Object)constant4175);
// position
send21533 = (Object)new_AST_Send((Object)localvariable3079, (Object)symbol4173, 0);
// should
send21534 = (Object)new_AST_Send((Object)send21533, (Object)symbol4176, 0);
smallint1465 = (Object)new_Type_SmallInt(4);
constant4176 = (Object)new_AST_Constant((Object)smallint1465);
// =
send21535 = (Object)new_AST_Send((Object)send21534, (Object)SMB__equal, 1, (Object)constant4176);
string2475 = (Object)new_Type_String(L"AbCd145 ");
constant4177 = (Object)new_AST_Constant((Object)string2475);
// on:
send21536 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4177);
assign2636 = (Object)new_AST_Assign((Object)localvariable3079, (Object)send21536);
// match:
send21537 = (Object)new_AST_Send((Object)localvariable3078, (Object)symbol4108, 1, (Object)localvariable3079);
// should
send21538 = (Object)new_AST_Send((Object)send21537, (Object)symbol4176, 0);
string2476 = (Object)new_Type_String(L"AbCd145");
constant4178 = (Object)new_AST_Constant((Object)string2476);
// =
send21539 = (Object)new_AST_Send((Object)send21538, (Object)SMB__equal, 1, (Object)constant4178);
// position
send21540 = (Object)new_AST_Send((Object)localvariable3079, (Object)symbol4173, 0);
// should
send21541 = (Object)new_AST_Send((Object)send21540, (Object)symbol4176, 0);
smallint1466 = (Object)new_Type_SmallInt(7);
constant4179 = (Object)new_AST_Constant((Object)smallint1466);
// =
send21542 = (Object)new_AST_Send((Object)send21541, (Object)SMB__equal, 1, (Object)constant4179);
string2477 = (Object)new_Type_String(L"abcdD");
constant4180 = (Object)new_AST_Constant((Object)string2477);
// on:
send21543 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4180);
assign2637 = (Object)new_AST_Assign((Object)localvariable3079, (Object)send21543);
// match:
send21544 = (Object)new_AST_Send((Object)localvariable3078, (Object)symbol4108, 1, (Object)localvariable3079);
// should
send21545 = (Object)new_AST_Send((Object)send21544, (Object)symbol4176, 0);
symbol4185 = (Object)new_Type_Symbol_cached(L"be");
// be
send21546 = (Object)new_AST_Send((Object)send21545, (Object)symbol4185, 0);
// isNil
send21547 = (Object)new_AST_Send((Object)send21546, (Object)SMB_isNil, 0);
// position
send21548 = (Object)new_AST_Send((Object)localvariable3079, (Object)symbol4173, 0);
// should
send21549 = (Object)new_AST_Send((Object)send21548, (Object)symbol4176, 0);
smallint1467 = (Object)new_Type_SmallInt(0);
constant4181 = (Object)new_AST_Constant((Object)smallint1467);
// =
send21550 = (Object)new_AST_Send((Object)send21549, (Object)SMB__equal, 1, (Object)constant4181);
method3098 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2468, 11, assign2634, assign2635, send21532, send21535, assign2636, send21539, send21542, assign2637, send21547, send21550, Self);
symbol3866 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure3098 = (Object)new_Runtime_MethodClosure(method3098);
store_method((Type_Class)class534, (Type_Symbol)symbol3866, (Runtime_MethodClosure)methodclosure3098);


// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable3080 = (Object)new_AST_Variable_named(L"parser");
localvariable3081 = (Object)new_AST_Variable_named(L"string");
localvariable3082 = (Object)new_AST_Variable_named(L"result");
array2469 = (Object)new_Type_Array_with(3, (Object)localvariable3080, (Object)localvariable3081, (Object)localvariable3082);
symbol4186 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send21551 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4186, 0);
assign2638 = (Object)new_AST_Assign((Object)localvariable3080, (Object)send21551);
string2478 = (Object)new_Type_String(L"abc + ghi ");
constant4182 = (Object)new_AST_Constant((Object)string2478);
// on:
send21552 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4182);
assign2639 = (Object)new_AST_Assign((Object)localvariable3081, (Object)send21552);
// match:
send21553 = (Object)new_AST_Send((Object)localvariable3080, (Object)symbol4108, 1, (Object)localvariable3081);
assign2640 = (Object)new_AST_Assign((Object)localvariable3082, (Object)send21553);
// class
send21554 = (Object)new_AST_Send((Object)localvariable3082, (Object)SMB_class, 0);
// should
send21555 = (Object)new_AST_Send((Object)send21554, (Object)symbol4176, 0);
// =
send21556 = (Object)new_AST_Send((Object)send21555, (Object)SMB__equal, 1, (Object)classreference601);
symbol3927 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send21557 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3927, 0);
// printString
send21558 = (Object)new_AST_Send((Object)send21557, (Object)symbol4111, 0);
// should
send21559 = (Object)new_AST_Send((Object)send21558, (Object)symbol4176, 0);
string2479 = (Object)new_Type_String(L"+");
constant4183 = (Object)new_AST_Constant((Object)string2479);
// =
send21560 = (Object)new_AST_Send((Object)send21559, (Object)SMB__equal, 1, (Object)constant4183);
// receiver
send21561 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3992, 0);
// class
send21562 = (Object)new_AST_Send((Object)send21561, (Object)SMB_class, 0);
// should
send21563 = (Object)new_AST_Send((Object)send21562, (Object)symbol4176, 0);

// ASTVariable>>name
//name
// 	^ name
method3099 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable809);
methodclosure3099 = (Object)new_Runtime_MethodClosure(method3099);
store_method((Type_Class)class565, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3099);


// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name

// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable3083 = (Object)new_AST_Variable_named(L"anObject");
array2470 = (Object)new_Type_Array_with(1, (Object)localvariable3083);
assign2641 = (Object)new_AST_Assign((Object)instancevariable791, (Object)localvariable3083);
method3100 = (Object)new_AST_Method_with((Type_Array)array2470, (Type_Array)empty_Type_Array, 2, assign2641, Self);
symbol4135 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure3100 = (Object)new_Runtime_MethodClosure(method3100);
store_method((Type_Class)class545, (Type_Symbol)symbol4135, (Runtime_MethodClosure)methodclosure3100);


// LocalVariable>>key
//key
// 	^ key
method3101 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable791);
symbol4136 = (Object)new_Type_Symbol_cached(L"key");
methodclosure3101 = (Object)new_Runtime_MethodClosure(method3101);
store_method((Type_Class)class545, (Type_Symbol)symbol4136, (Runtime_MethodClosure)methodclosure3101);

classreference608 = (Object)new_Organization_ClassReference((Type_Class)class545);
// new
send21564 = (Object)new_AST_Send((Object)classreference608, (Object)symbol3915, 0);
// name
send21565 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name:
send21566 = (Object)new_AST_Send((Object)send21564, (Object)symbol3985, 1, (Object)send21565);
method3102 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21566);
symbol3984 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure3102 = (Object)new_Runtime_MethodClosure(method3102);
store_method((Type_Class)class565, (Type_Symbol)symbol3984, (Runtime_MethodClosure)methodclosure3102);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super272 = (Object)new_AST_Super((Object)symbol3826, 0);
method3103 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super272, Self);
methodclosure3103 = (Object)new_Runtime_MethodClosure(method3103);
store_method((Type_Class)class565, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3103);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable3084 = (Object)new_AST_Variable_named(L"anObject");
array2471 = (Object)new_Type_Array_with(1, (Object)localvariable3084);
assign2642 = (Object)new_AST_Assign((Object)instancevariable809, (Object)localvariable3084);
method3104 = (Object)new_AST_Method_with((Type_Array)array2471, (Type_Array)empty_Type_Array, 2, assign2642, Self);
methodclosure3104 = (Object)new_Runtime_MethodClosure(method3104);
store_method((Type_Class)class565, (Type_Symbol)symbol3985, (Runtime_MethodClosure)methodclosure3104);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable3085 = (Object)new_AST_Variable_named(L"other");
array2472 = (Object)new_Type_Array_with(1, (Object)localvariable3085);
// name
send21567 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name
send21568 = (Object)new_AST_Send((Object)localvariable3085, (Object)SMB_name, 0);
// =
send21569 = (Object)new_AST_Send((Object)send21567, (Object)SMB__equal, 1, (Object)send21568);
method3105 = (Object)new_AST_Method_with((Type_Array)array2472, (Type_Array)empty_Type_Array, 1, send21569);
methodclosure3105 = (Object)new_Runtime_MethodClosure(method3105);
store_method((Type_Class)class565, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure3105);


// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable3086 = (Object)new_AST_Variable_named(L"aStream");
array2473 = (Object)new_Type_Array_with(1, (Object)localvariable3086);
super273 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable3086);
localvariable3087 = (Object)new_AST_Variable_named(L"receiver");
array2474 = (Object)new_Type_Array_with(1, (Object)localvariable3087);
string2480 = (Object)new_Type_String(L"(");
constant4184 = (Object)new_AST_Constant((Object)string2480);
// nextPutAll:
send21570 = (Object)new_AST_Send((Object)localvariable3087, (Object)symbol4154, 1, (Object)constant4184);
// name
send21571 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// nextPutAll:
send21572 = (Object)new_AST_Send((Object)localvariable3087, (Object)symbol4154, 1, (Object)send21571);
string2481 = (Object)new_Type_String(L")");
constant4185 = (Object)new_AST_Constant((Object)string2481);
// nextPutAll:
send21573 = (Object)new_AST_Send((Object)localvariable3087, (Object)symbol4154, 1, (Object)constant4185);
block1392 = (Object)new_AST_Block_with((Type_Array)array2474, (Type_Array)empty_Type_Array, 1, 3, send21570, send21572, send21573);
// value:
send21574 = (Object)new_AST_Send((Object)block1392, (Object)SMB_value_, 1, (Object)localvariable3086);
method3106 = (Object)new_AST_Method_with((Type_Array)array2473, (Type_Array)empty_Type_Array, 3, super273, send21574, Self);
methodclosure3106 = (Object)new_Runtime_MethodClosure(method3106);
store_method((Type_Class)class565, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3106);


// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable3088 = (Object)new_AST_Variable_named(L"anObject");
array2475 = (Object)new_Type_Array_with(1, (Object)localvariable3088);
// layout
send21575 = (Object)new_AST_Send((Object)Self, (Object)symbol3910, 0);
symbol4187 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send21576 = (Object)new_AST_Send((Object)localvariable3088, (Object)symbol3910, 0);
// combineWith:
send21577 = (Object)new_AST_Send((Object)send21575, (Object)symbol4187, 1, (Object)send21576);
method3107 = (Object)new_AST_Method_with((Type_Array)array2475, (Type_Array)empty_Type_Array, 2, send21577, Self);
symbol3986 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure3107 = (Object)new_Runtime_MethodClosure(method3107);
store_method((Type_Class)class565, (Type_Symbol)symbol3986, (Runtime_MethodClosure)methodclosure3107);


// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send21578 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// hash
send21579 = (Object)new_AST_Send((Object)send21578, (Object)SMB_hash, 0);
method3108 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21579);
methodclosure3108 = (Object)new_Runtime_MethodClosure(method3108);
store_method((Type_Class)class565, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure3108);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable3089 = (Object)new_AST_Variable_named(L"anObject");
array2476 = (Object)new_Type_Array_with(1, (Object)localvariable3089);
// layout
send21580 = (Object)new_AST_Send((Object)Self, (Object)symbol3910, 0);
symbol4188 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send21581 = (Object)new_AST_Send((Object)localvariable3089, (Object)symbol3910, 0);
// isSameTypeAs:
send21582 = (Object)new_AST_Send((Object)send21580, (Object)symbol4188, 1, (Object)send21581);
method3109 = (Object)new_AST_Method_with((Type_Array)array2476, (Type_Array)empty_Type_Array, 1, send21582);
symbol3987 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure3109 = (Object)new_Runtime_MethodClosure(method3109);
store_method((Type_Class)class565, (Type_Symbol)symbol3987, (Runtime_MethodClosure)methodclosure3109);

classreference609 = (Object)new_Organization_ClassReference((Type_Class)class565);
// =
send21583 = (Object)new_AST_Send((Object)send21563, (Object)SMB__equal, 1, (Object)classreference609);
// receiver
send21584 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3992, 0);
// name
send21585 = (Object)new_AST_Send((Object)send21584, (Object)SMB_name, 0);
// should
send21586 = (Object)new_AST_Send((Object)send21585, (Object)symbol4176, 0);
string2482 = (Object)new_Type_String(L"abc");
constant4186 = (Object)new_AST_Constant((Object)string2482);
// =
send21587 = (Object)new_AST_Send((Object)send21586, (Object)SMB__equal, 1, (Object)constant4186);
// argument
send21588 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol4000, 0);
// class
send21589 = (Object)new_AST_Send((Object)send21588, (Object)SMB_class, 0);
// should
send21590 = (Object)new_AST_Send((Object)send21589, (Object)symbol4176, 0);
// =
send21591 = (Object)new_AST_Send((Object)send21590, (Object)SMB__equal, 1, (Object)classreference609);
// argument
send21592 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol4000, 0);
// name
send21593 = (Object)new_AST_Send((Object)send21592, (Object)SMB_name, 0);
// should
send21594 = (Object)new_AST_Send((Object)send21593, (Object)symbol4176, 0);
string2483 = (Object)new_Type_String(L"ghi");
constant4187 = (Object)new_AST_Constant((Object)string2483);
// =
send21595 = (Object)new_AST_Send((Object)send21594, (Object)SMB__equal, 1, (Object)constant4187);
// position
send21596 = (Object)new_AST_Send((Object)localvariable3081, (Object)symbol4173, 0);
// should
send21597 = (Object)new_AST_Send((Object)send21596, (Object)symbol4176, 0);
smallint1468 = (Object)new_Type_SmallInt(9);
constant4188 = (Object)new_AST_Constant((Object)smallint1468);
// =
send21598 = (Object)new_AST_Send((Object)send21597, (Object)SMB__equal, 1, (Object)constant4188);
string2484 = (Object)new_Type_String(L"abc + ghi * c ");
constant4189 = (Object)new_AST_Constant((Object)string2484);
// on:
send21599 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4189);
assign2643 = (Object)new_AST_Assign((Object)localvariable3081, (Object)send21599);
// match:
send21600 = (Object)new_AST_Send((Object)localvariable3080, (Object)symbol4108, 1, (Object)localvariable3081);
assign2644 = (Object)new_AST_Assign((Object)localvariable3082, (Object)send21600);
// class
send21601 = (Object)new_AST_Send((Object)localvariable3082, (Object)SMB_class, 0);
// should
send21602 = (Object)new_AST_Send((Object)send21601, (Object)symbol4176, 0);
// =
send21603 = (Object)new_AST_Send((Object)send21602, (Object)SMB__equal, 1, (Object)classreference601);
// selector
send21604 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3927, 0);
// printString
send21605 = (Object)new_AST_Send((Object)send21604, (Object)symbol4111, 0);
// should
send21606 = (Object)new_AST_Send((Object)send21605, (Object)symbol4176, 0);
string2485 = (Object)new_Type_String(L"*");
constant4190 = (Object)new_AST_Constant((Object)string2485);
// =
send21607 = (Object)new_AST_Send((Object)send21606, (Object)SMB__equal, 1, (Object)constant4190);
// argument
send21608 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol4000, 0);
// class
send21609 = (Object)new_AST_Send((Object)send21608, (Object)SMB_class, 0);
// should
send21610 = (Object)new_AST_Send((Object)send21609, (Object)symbol4176, 0);
// =
send21611 = (Object)new_AST_Send((Object)send21610, (Object)SMB__equal, 1, (Object)classreference609);
// argument
send21612 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol4000, 0);
// name
send21613 = (Object)new_AST_Send((Object)send21612, (Object)SMB_name, 0);
// should
send21614 = (Object)new_AST_Send((Object)send21613, (Object)symbol4176, 0);
string2486 = (Object)new_Type_String(L"c");
constant4191 = (Object)new_AST_Constant((Object)string2486);
// =
send21615 = (Object)new_AST_Send((Object)send21614, (Object)SMB__equal, 1, (Object)constant4191);
// receiver
send21616 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3992, 0);
assign2645 = (Object)new_AST_Assign((Object)localvariable3082, (Object)send21616);
// class
send21617 = (Object)new_AST_Send((Object)localvariable3082, (Object)SMB_class, 0);
// should
send21618 = (Object)new_AST_Send((Object)send21617, (Object)symbol4176, 0);
// =
send21619 = (Object)new_AST_Send((Object)send21618, (Object)SMB__equal, 1, (Object)classreference601);
// selector
send21620 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3927, 0);
// printString
send21621 = (Object)new_AST_Send((Object)send21620, (Object)symbol4111, 0);
// should
send21622 = (Object)new_AST_Send((Object)send21621, (Object)symbol4176, 0);
string2487 = (Object)new_Type_String(L"+");
constant4192 = (Object)new_AST_Constant((Object)string2487);
// =
send21623 = (Object)new_AST_Send((Object)send21622, (Object)SMB__equal, 1, (Object)constant4192);
// receiver
send21624 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3992, 0);
// class
send21625 = (Object)new_AST_Send((Object)send21624, (Object)SMB_class, 0);
// should
send21626 = (Object)new_AST_Send((Object)send21625, (Object)symbol4176, 0);
// =
send21627 = (Object)new_AST_Send((Object)send21626, (Object)SMB__equal, 1, (Object)classreference609);
// receiver
send21628 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol3992, 0);
// name
send21629 = (Object)new_AST_Send((Object)send21628, (Object)SMB_name, 0);
// should
send21630 = (Object)new_AST_Send((Object)send21629, (Object)symbol4176, 0);
string2488 = (Object)new_Type_String(L"abc");
constant4193 = (Object)new_AST_Constant((Object)string2488);
// =
send21631 = (Object)new_AST_Send((Object)send21630, (Object)SMB__equal, 1, (Object)constant4193);
// argument
send21632 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol4000, 0);
// class
send21633 = (Object)new_AST_Send((Object)send21632, (Object)SMB_class, 0);
// should
send21634 = (Object)new_AST_Send((Object)send21633, (Object)symbol4176, 0);
// =
send21635 = (Object)new_AST_Send((Object)send21634, (Object)SMB__equal, 1, (Object)classreference609);
// argument
send21636 = (Object)new_AST_Send((Object)localvariable3082, (Object)symbol4000, 0);
// name
send21637 = (Object)new_AST_Send((Object)send21636, (Object)SMB_name, 0);
// should
send21638 = (Object)new_AST_Send((Object)send21637, (Object)symbol4176, 0);
string2489 = (Object)new_Type_String(L"ghi");
constant4194 = (Object)new_AST_Constant((Object)string2489);
// =
send21639 = (Object)new_AST_Send((Object)send21638, (Object)SMB__equal, 1, (Object)constant4194);
// position
send21640 = (Object)new_AST_Send((Object)localvariable3081, (Object)symbol4173, 0);
// should
send21641 = (Object)new_AST_Send((Object)send21640, (Object)symbol4176, 0);
smallint1469 = (Object)new_Type_SmallInt(13);
constant4195 = (Object)new_AST_Constant((Object)smallint1469);
// =
send21642 = (Object)new_AST_Send((Object)send21641, (Object)SMB__equal, 1, (Object)constant4195);
method3110 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2469, 25, assign2638, assign2639, assign2640, send21556, send21560, send21583, send21587, send21591, send21595, send21598, assign2643, assign2644, send21603, send21607, send21611, send21615, assign2645, send21619, send21623, send21627, send21631, send21635, send21639, send21642, Self);
symbol3858 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure3110 = (Object)new_Runtime_MethodClosure(method3110);
store_method((Type_Class)class534, (Type_Symbol)symbol3858, (Runtime_MethodClosure)methodclosure3110);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3090 = (Object)new_AST_Variable_named(L"parser");
localvariable3091 = (Object)new_AST_Variable_named(L"string");
array2477 = (Object)new_Type_Array_with(2, (Object)localvariable3090, (Object)localvariable3091);
symbol4189 = (Object)new_Type_Symbol_cached(L"character");
// character
send21643 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4189, 0);
assign2646 = (Object)new_AST_Assign((Object)localvariable3090, (Object)send21643);
string2490 = (Object)new_Type_String(L"--");
constant4196 = (Object)new_AST_Constant((Object)string2490);
// on:
send21644 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4196);
assign2647 = (Object)new_AST_Assign((Object)localvariable3091, (Object)send21644);
// match:
send21645 = (Object)new_AST_Send((Object)localvariable3090, (Object)symbol4108, 1, (Object)localvariable3091);
// should
send21646 = (Object)new_AST_Send((Object)send21645, (Object)symbol4176, 0);
string2491 = (Object)new_Type_String(L"-");
constant4197 = (Object)new_AST_Constant((Object)string2491);
// =
send21647 = (Object)new_AST_Send((Object)send21646, (Object)SMB__equal, 1, (Object)constant4197);
// position
send21648 = (Object)new_AST_Send((Object)localvariable3091, (Object)symbol4173, 0);
// should
send21649 = (Object)new_AST_Send((Object)send21648, (Object)symbol4176, 0);
smallint1470 = (Object)new_Type_SmallInt(1);
constant4198 = (Object)new_AST_Constant((Object)smallint1470);
// =
send21650 = (Object)new_AST_Send((Object)send21649, (Object)SMB__equal, 1, (Object)constant4198);
string2492 = (Object)new_Type_String(L"__");
constant4199 = (Object)new_AST_Constant((Object)string2492);
// on:
send21651 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4199);
assign2648 = (Object)new_AST_Assign((Object)localvariable3091, (Object)send21651);
// match:
send21652 = (Object)new_AST_Send((Object)localvariable3090, (Object)symbol4108, 1, (Object)localvariable3091);
// should
send21653 = (Object)new_AST_Send((Object)send21652, (Object)symbol4176, 0);
string2493 = (Object)new_Type_String(L"_");
constant4200 = (Object)new_AST_Constant((Object)string2493);
// =
send21654 = (Object)new_AST_Send((Object)send21653, (Object)SMB__equal, 1, (Object)constant4200);
// position
send21655 = (Object)new_AST_Send((Object)localvariable3091, (Object)symbol4173, 0);
// should
send21656 = (Object)new_AST_Send((Object)send21655, (Object)symbol4176, 0);
smallint1471 = (Object)new_Type_SmallInt(1);
constant4201 = (Object)new_AST_Constant((Object)smallint1471);
// =
send21657 = (Object)new_AST_Send((Object)send21656, (Object)SMB__equal, 1, (Object)constant4201);
string2494 = (Object)new_Type_String(L"4");
constant4202 = (Object)new_AST_Constant((Object)string2494);
// on:
send21658 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4202);
assign2649 = (Object)new_AST_Assign((Object)localvariable3091, (Object)send21658);
// match:
send21659 = (Object)new_AST_Send((Object)localvariable3090, (Object)symbol4108, 1, (Object)localvariable3091);
// should
send21660 = (Object)new_AST_Send((Object)send21659, (Object)symbol4176, 0);
string2495 = (Object)new_Type_String(L"4");
constant4203 = (Object)new_AST_Constant((Object)string2495);
// =
send21661 = (Object)new_AST_Send((Object)send21660, (Object)SMB__equal, 1, (Object)constant4203);
// position
send21662 = (Object)new_AST_Send((Object)localvariable3091, (Object)symbol4173, 0);
// should
send21663 = (Object)new_AST_Send((Object)send21662, (Object)symbol4176, 0);
smallint1472 = (Object)new_Type_SmallInt(1);
constant4204 = (Object)new_AST_Constant((Object)smallint1472);
// =
send21664 = (Object)new_AST_Send((Object)send21663, (Object)SMB__equal, 1, (Object)constant4204);
string2496 = (Object)new_Type_String(L"p");
constant4205 = (Object)new_AST_Constant((Object)string2496);
// on:
send21665 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4205);
assign2650 = (Object)new_AST_Assign((Object)localvariable3091, (Object)send21665);
// match:
send21666 = (Object)new_AST_Send((Object)localvariable3090, (Object)symbol4108, 1, (Object)localvariable3091);
// should
send21667 = (Object)new_AST_Send((Object)send21666, (Object)symbol4176, 0);
string2497 = (Object)new_Type_String(L"p");
constant4206 = (Object)new_AST_Constant((Object)string2497);
// =
send21668 = (Object)new_AST_Send((Object)send21667, (Object)SMB__equal, 1, (Object)constant4206);
// position
send21669 = (Object)new_AST_Send((Object)localvariable3091, (Object)symbol4173, 0);
// should
send21670 = (Object)new_AST_Send((Object)send21669, (Object)symbol4176, 0);
smallint1473 = (Object)new_Type_SmallInt(1);
constant4207 = (Object)new_AST_Constant((Object)smallint1473);
// =
send21671 = (Object)new_AST_Send((Object)send21670, (Object)SMB__equal, 1, (Object)constant4207);
string2498 = (Object)new_Type_String(L"&");
constant4208 = (Object)new_AST_Constant((Object)string2498);
// on:
send21672 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4208);
assign2651 = (Object)new_AST_Assign((Object)localvariable3091, (Object)send21672);
// match:
send21673 = (Object)new_AST_Send((Object)localvariable3090, (Object)symbol4108, 1, (Object)localvariable3091);
// should
send21674 = (Object)new_AST_Send((Object)send21673, (Object)symbol4176, 0);
string2499 = (Object)new_Type_String(L"&");
constant4209 = (Object)new_AST_Constant((Object)string2499);
// =
send21675 = (Object)new_AST_Send((Object)send21674, (Object)SMB__equal, 1, (Object)constant4209);
// position
send21676 = (Object)new_AST_Send((Object)localvariable3091, (Object)symbol4173, 0);
// should
send21677 = (Object)new_AST_Send((Object)send21676, (Object)symbol4176, 0);
smallint1474 = (Object)new_Type_SmallInt(1);
constant4210 = (Object)new_AST_Constant((Object)smallint1474);
// =
send21678 = (Object)new_AST_Send((Object)send21677, (Object)SMB__equal, 1, (Object)constant4210);
string2500 = (Object)new_Type_String(L"\'");
constant4211 = (Object)new_AST_Constant((Object)string2500);
// on:
send21679 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4211);
assign2652 = (Object)new_AST_Assign((Object)localvariable3091, (Object)send21679);
// match:
send21680 = (Object)new_AST_Send((Object)localvariable3090, (Object)symbol4108, 1, (Object)localvariable3091);
// should
send21681 = (Object)new_AST_Send((Object)send21680, (Object)symbol4176, 0);
// be
send21682 = (Object)new_AST_Send((Object)send21681, (Object)symbol4185, 0);
// isNil
send21683 = (Object)new_AST_Send((Object)send21682, (Object)SMB_isNil, 0);
// position
send21684 = (Object)new_AST_Send((Object)localvariable3091, (Object)symbol4173, 0);
// should
send21685 = (Object)new_AST_Send((Object)send21684, (Object)symbol4176, 0);
smallint1475 = (Object)new_Type_SmallInt(0);
constant4212 = (Object)new_AST_Constant((Object)smallint1475);
// =
send21686 = (Object)new_AST_Send((Object)send21685, (Object)SMB__equal, 1, (Object)constant4212);
method3111 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2477, 20, assign2646, assign2647, send21647, send21650, assign2648, send21654, send21657, assign2649, send21661, send21664, assign2650, send21668, send21671, assign2651, send21675, send21678, assign2652, send21683, send21686, Self);
symbol3886 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure3111 = (Object)new_Runtime_MethodClosure(method3111);
store_method((Type_Class)class534, (Type_Symbol)symbol3886, (Runtime_MethodClosure)methodclosure3111);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable3092 = (Object)new_AST_Variable_named(L"parser");
localvariable3093 = (Object)new_AST_Variable_named(L"string");
localvariable3094 = (Object)new_AST_Variable_named(L"result");
array2478 = (Object)new_Type_Array_with(3, (Object)localvariable3092, (Object)localvariable3093, (Object)localvariable3094);
symbol4190 = (Object)new_Type_Symbol_cached(L"messageExpression");
// messageExpression
send21687 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4190, 0);
assign2653 = (Object)new_AST_Assign((Object)localvariable3092, (Object)send21687);
string2501 = (Object)new_Type_String(L"super+4");
constant4213 = (Object)new_AST_Constant((Object)string2501);
// on:
send21688 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4213);
assign2654 = (Object)new_AST_Assign((Object)localvariable3093, (Object)send21688);
// match:
send21689 = (Object)new_AST_Send((Object)localvariable3092, (Object)symbol4108, 1, (Object)localvariable3093);
assign2655 = (Object)new_AST_Assign((Object)localvariable3094, (Object)send21689);
// class
send21690 = (Object)new_AST_Send((Object)localvariable3094, (Object)SMB_class, 0);
// should
send21691 = (Object)new_AST_Send((Object)send21690, (Object)symbol4176, 0);
// =
send21692 = (Object)new_AST_Send((Object)send21691, (Object)SMB__equal, 1, (Object)classreference601);
// receiver
send21693 = (Object)new_AST_Send((Object)localvariable3094, (Object)symbol3992, 0);
// class
send21694 = (Object)new_AST_Send((Object)send21693, (Object)SMB_class, 0);
// should
send21695 = (Object)new_AST_Send((Object)send21694, (Object)symbol4176, 0);
classreference610 = (Object)new_Organization_ClassReference((Type_Class)class553);
// =
send21696 = (Object)new_AST_Send((Object)send21695, (Object)SMB__equal, 1, (Object)classreference610);
string2502 = (Object)new_Type_String(L"self a: 4 b: 3");
constant4214 = (Object)new_AST_Constant((Object)string2502);
// on:
send21697 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4214);
assign2656 = (Object)new_AST_Assign((Object)localvariable3093, (Object)send21697);
// match:
send21698 = (Object)new_AST_Send((Object)localvariable3092, (Object)symbol4108, 1, (Object)localvariable3093);
assign2657 = (Object)new_AST_Assign((Object)localvariable3094, (Object)send21698);
// class
send21699 = (Object)new_AST_Send((Object)localvariable3094, (Object)SMB_class, 0);
// should
send21700 = (Object)new_AST_Send((Object)send21699, (Object)symbol4176, 0);
// =
send21701 = (Object)new_AST_Send((Object)send21700, (Object)SMB__equal, 1, (Object)classreference598);
// receiver
send21702 = (Object)new_AST_Send((Object)localvariable3094, (Object)symbol3992, 0);
// class
send21703 = (Object)new_AST_Send((Object)send21702, (Object)SMB_class, 0);
// should
send21704 = (Object)new_AST_Send((Object)send21703, (Object)symbol4176, 0);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable3095 = (Object)new_AST_Variable_named(L"aStream");
array2479 = (Object)new_Type_Array_with(1, (Object)localvariable3095);
string2503 = (Object)new_Type_String(L"self");
constant4215 = (Object)new_AST_Constant((Object)string2503);
// nextPutAll:
send21705 = (Object)new_AST_Send((Object)localvariable3095, (Object)symbol4154, 1, (Object)constant4215);
method3112 = (Object)new_AST_Method_with((Type_Array)array2479, (Type_Array)empty_Type_Array, 2, send21705, Self);
methodclosure3112 = (Object)new_Runtime_MethodClosure(method3112);
store_method((Type_Class)class557, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3112);

classreference611 = (Object)new_Organization_ClassReference((Type_Class)class557);
// =
send21706 = (Object)new_AST_Send((Object)send21704, (Object)SMB__equal, 1, (Object)classreference611);
string2504 = (Object)new_Type_String(L"2 d");
constant4216 = (Object)new_AST_Constant((Object)string2504);
// on:
send21707 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4216);
assign2658 = (Object)new_AST_Assign((Object)localvariable3093, (Object)send21707);
// match:
send21708 = (Object)new_AST_Send((Object)localvariable3092, (Object)symbol4108, 1, (Object)localvariable3093);
assign2659 = (Object)new_AST_Assign((Object)localvariable3094, (Object)send21708);
// class
send21709 = (Object)new_AST_Send((Object)localvariable3094, (Object)SMB_class, 0);
// should
send21710 = (Object)new_AST_Send((Object)send21709, (Object)symbol4176, 0);
// =
send21711 = (Object)new_AST_Send((Object)send21710, (Object)SMB__equal, 1, (Object)classreference602);
// receiver
send21712 = (Object)new_AST_Send((Object)localvariable3094, (Object)symbol3992, 0);
// class
send21713 = (Object)new_AST_Send((Object)send21712, (Object)SMB_class, 0);
// should
send21714 = (Object)new_AST_Send((Object)send21713, (Object)symbol4176, 0);
// =
send21715 = (Object)new_AST_Send((Object)send21714, (Object)SMB__equal, 1, (Object)classreference600);
// receiver
send21716 = (Object)new_AST_Send((Object)localvariable3094, (Object)symbol3992, 0);
// asInteger
send21717 = (Object)new_AST_Send((Object)send21716, (Object)symbol3972, 0);
// should
send21718 = (Object)new_AST_Send((Object)send21717, (Object)symbol4176, 0);
smallint1476 = (Object)new_Type_SmallInt(2);
constant4217 = (Object)new_AST_Constant((Object)smallint1476);
// =
send21719 = (Object)new_AST_Send((Object)send21718, (Object)SMB__equal, 1, (Object)constant4217);
method3113 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2478, 15, assign2653, assign2654, assign2655, send21692, send21696, assign2656, assign2657, send21701, send21706, assign2658, assign2659, send21711, send21715, send21719, Self);
symbol3878 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure3113 = (Object)new_Runtime_MethodClosure(method3113);
store_method((Type_Class)class534, (Type_Symbol)symbol3878, (Runtime_MethodClosure)methodclosure3113);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable3096 = (Object)new_AST_Variable_named(L"parser");
localvariable3097 = (Object)new_AST_Variable_named(L"string");
localvariable3098 = (Object)new_AST_Variable_named(L"result");
array2480 = (Object)new_Type_Array_with(3, (Object)localvariable3096, (Object)localvariable3097, (Object)localvariable3098);
symbol4191 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send21720 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4191, 0);
assign2660 = (Object)new_AST_Assign((Object)localvariable3096, (Object)send21720);
string2505 = (Object)new_Type_String(L"+= a");
constant4218 = (Object)new_AST_Constant((Object)string2505);
// on:
send21721 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4218);
assign2661 = (Object)new_AST_Assign((Object)localvariable3097, (Object)send21721);
// match:
send21722 = (Object)new_AST_Send((Object)localvariable3096, (Object)symbol4108, 1, (Object)localvariable3097);
assign2662 = (Object)new_AST_Assign((Object)localvariable3098, (Object)send21722);
// class
send21723 = (Object)new_AST_Send((Object)localvariable3098, (Object)SMB_class, 0);
// should
send21724 = (Object)new_AST_Send((Object)send21723, (Object)symbol4176, 0);

// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method3114 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable808);
symbol4015 = (Object)new_Type_Symbol_cached(L"parameter");
methodclosure3114 = (Object)new_Runtime_MethodClosure(method3114);
store_method((Type_Class)class564, (Type_Symbol)symbol4015, (Runtime_MethodClosure)methodclosure3114);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send21725 = (Object)new_AST_Send((Object)Self, (Object)symbol3927, 0);
// symbol
send21726 = (Object)new_AST_Send((Object)send21725, (Object)symbol3975, 0);
method3115 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21726);
symbol4004 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
methodclosure3115 = (Object)new_Runtime_MethodClosure(method3115);
store_method((Type_Class)class564, (Type_Symbol)symbol4004, (Runtime_MethodClosure)methodclosure3115);


// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
symbol3958 = (Object)new_Type_Symbol_cached(L"with:");
// parameter
send21727 = (Object)new_AST_Send((Object)Self, (Object)symbol4015, 0);
// with:
send21728 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3958, 1, (Object)send21727);
method3116 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21728);
symbol3997 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure3116 = (Object)new_Runtime_MethodClosure(method3116);
store_method((Type_Class)class564, (Type_Symbol)symbol3997, (Runtime_MethodClosure)methodclosure3116);


// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable3099 = (Object)new_AST_Variable_named(L"anObject");
array2481 = (Object)new_Type_Array_with(1, (Object)localvariable3099);
assign2663 = (Object)new_AST_Assign((Object)instancevariable808, (Object)localvariable3099);
method3117 = (Object)new_AST_Method_with((Type_Array)array2481, (Type_Array)empty_Type_Array, 2, assign2663, Self);
symbol4014 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure3117 = (Object)new_Runtime_MethodClosure(method3117);
store_method((Type_Class)class564, (Type_Symbol)symbol4014, (Runtime_MethodClosure)methodclosure3117);

classreference612 = (Object)new_Organization_ClassReference((Type_Class)class564);
// =
send21729 = (Object)new_AST_Send((Object)send21724, (Object)SMB__equal, 1, (Object)classreference612);
// selector
send21730 = (Object)new_AST_Send((Object)localvariable3098, (Object)symbol3927, 0);
// printString
send21731 = (Object)new_AST_Send((Object)send21730, (Object)symbol4111, 0);
// should
send21732 = (Object)new_AST_Send((Object)send21731, (Object)symbol4176, 0);
string2506 = (Object)new_Type_String(L"+=");
constant4219 = (Object)new_AST_Constant((Object)string2506);
// =
send21733 = (Object)new_AST_Send((Object)send21732, (Object)SMB__equal, 1, (Object)constant4219);
// parameter
send21734 = (Object)new_AST_Send((Object)localvariable3098, (Object)symbol4015, 0);
// class
send21735 = (Object)new_AST_Send((Object)send21734, (Object)SMB_class, 0);
// should
send21736 = (Object)new_AST_Send((Object)send21735, (Object)symbol4176, 0);
// =
send21737 = (Object)new_AST_Send((Object)send21736, (Object)SMB__equal, 1, (Object)classreference609);
// parameter
send21738 = (Object)new_AST_Send((Object)localvariable3098, (Object)symbol4015, 0);
// name
send21739 = (Object)new_AST_Send((Object)send21738, (Object)SMB_name, 0);
// asString
send21740 = (Object)new_AST_Send((Object)send21739, (Object)SMB_asString, 0);
// should
send21741 = (Object)new_AST_Send((Object)send21740, (Object)symbol4176, 0);
string2507 = (Object)new_Type_String(L"a");
constant4220 = (Object)new_AST_Constant((Object)string2507);
// =
send21742 = (Object)new_AST_Send((Object)send21741, (Object)SMB__equal, 1, (Object)constant4220);
// position
send21743 = (Object)new_AST_Send((Object)localvariable3097, (Object)symbol4173, 0);
// should
send21744 = (Object)new_AST_Send((Object)send21743, (Object)symbol4176, 0);
smallint1477 = (Object)new_Type_SmallInt(4);
constant4221 = (Object)new_AST_Constant((Object)smallint1477);
// =
send21745 = (Object)new_AST_Send((Object)send21744, (Object)SMB__equal, 1, (Object)constant4221);
string2508 = (Object)new_Type_String(L"|= a");
constant4222 = (Object)new_AST_Constant((Object)string2508);
// on:
send21746 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4222);
assign2664 = (Object)new_AST_Assign((Object)localvariable3097, (Object)send21746);
// match:
send21747 = (Object)new_AST_Send((Object)localvariable3096, (Object)symbol4108, 1, (Object)localvariable3097);
// should
send21748 = (Object)new_AST_Send((Object)send21747, (Object)symbol4176, 0);
// be
send21749 = (Object)new_AST_Send((Object)send21748, (Object)symbol4185, 0);
// isNil
send21750 = (Object)new_AST_Send((Object)send21749, (Object)SMB_isNil, 0);
// position
send21751 = (Object)new_AST_Send((Object)localvariable3097, (Object)symbol4173, 0);
// should
send21752 = (Object)new_AST_Send((Object)send21751, (Object)symbol4176, 0);
smallint1478 = (Object)new_Type_SmallInt(0);
constant4223 = (Object)new_AST_Constant((Object)smallint1478);
// =
send21753 = (Object)new_AST_Send((Object)send21752, (Object)SMB__equal, 1, (Object)constant4223);
string2509 = (Object)new_Type_String(L"-= abc d");
constant4224 = (Object)new_AST_Constant((Object)string2509);
// on:
send21754 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4224);
assign2665 = (Object)new_AST_Assign((Object)localvariable3097, (Object)send21754);
// match:
send21755 = (Object)new_AST_Send((Object)localvariable3096, (Object)symbol4108, 1, (Object)localvariable3097);
assign2666 = (Object)new_AST_Assign((Object)localvariable3098, (Object)send21755);
// class
send21756 = (Object)new_AST_Send((Object)localvariable3098, (Object)SMB_class, 0);
// should
send21757 = (Object)new_AST_Send((Object)send21756, (Object)symbol4176, 0);
// =
send21758 = (Object)new_AST_Send((Object)send21757, (Object)SMB__equal, 1, (Object)classreference612);
// selector
send21759 = (Object)new_AST_Send((Object)localvariable3098, (Object)symbol3927, 0);
// printString
send21760 = (Object)new_AST_Send((Object)send21759, (Object)symbol4111, 0);
// should
send21761 = (Object)new_AST_Send((Object)send21760, (Object)symbol4176, 0);
string2510 = (Object)new_Type_String(L"-=");
constant4225 = (Object)new_AST_Constant((Object)string2510);
// =
send21762 = (Object)new_AST_Send((Object)send21761, (Object)SMB__equal, 1, (Object)constant4225);
// parameter
send21763 = (Object)new_AST_Send((Object)localvariable3098, (Object)symbol4015, 0);
// class
send21764 = (Object)new_AST_Send((Object)send21763, (Object)SMB_class, 0);
// should
send21765 = (Object)new_AST_Send((Object)send21764, (Object)symbol4176, 0);
// =
send21766 = (Object)new_AST_Send((Object)send21765, (Object)SMB__equal, 1, (Object)classreference609);
// parameter
send21767 = (Object)new_AST_Send((Object)localvariable3098, (Object)symbol4015, 0);
// name
send21768 = (Object)new_AST_Send((Object)send21767, (Object)SMB_name, 0);
// asString
send21769 = (Object)new_AST_Send((Object)send21768, (Object)SMB_asString, 0);
// should
send21770 = (Object)new_AST_Send((Object)send21769, (Object)symbol4176, 0);
string2511 = (Object)new_Type_String(L"abc");
constant4226 = (Object)new_AST_Constant((Object)string2511);
// =
send21771 = (Object)new_AST_Send((Object)send21770, (Object)SMB__equal, 1, (Object)constant4226);
// position
send21772 = (Object)new_AST_Send((Object)localvariable3097, (Object)symbol4173, 0);
// should
send21773 = (Object)new_AST_Send((Object)send21772, (Object)symbol4176, 0);
smallint1479 = (Object)new_Type_SmallInt(6);
constant4227 = (Object)new_AST_Constant((Object)smallint1479);
// =
send21774 = (Object)new_AST_Send((Object)send21773, (Object)SMB__equal, 1, (Object)constant4227);
method3118 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2480, 19, assign2660, assign2661, assign2662, send21729, send21733, send21737, send21742, send21745, assign2664, send21750, send21753, assign2665, assign2666, send21758, send21762, send21766, send21771, send21774, Self);
symbol3894 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure3118 = (Object)new_Runtime_MethodClosure(method3118);
store_method((Type_Class)class534, (Type_Symbol)symbol3894, (Runtime_MethodClosure)methodclosure3118);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable3100 = (Object)new_AST_Variable_named(L"parser");
localvariable3101 = (Object)new_AST_Variable_named(L"string");
localvariable3102 = (Object)new_AST_Variable_named(L"message");
localvariable3103 = (Object)new_AST_Variable_named(L"return");
array2482 = (Object)new_Type_Array_with(4, (Object)localvariable3100, (Object)localvariable3101, (Object)localvariable3102, (Object)localvariable3103);
// messageExpression
send21775 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4190, 0);
assign2667 = (Object)new_AST_Assign((Object)localvariable3100, (Object)send21775);
string2512 = (Object)new_Type_String(L"super do: this and: that");
constant4228 = (Object)new_AST_Constant((Object)string2512);
// on:
send21776 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4228);
assign2668 = (Object)new_AST_Assign((Object)localvariable3101, (Object)send21776);
// match:
send21777 = (Object)new_AST_Send((Object)localvariable3100, (Object)symbol4108, 1, (Object)localvariable3101);
assign2669 = (Object)new_AST_Assign((Object)localvariable3102, (Object)send21777);
// receiver
send21778 = (Object)new_AST_Send((Object)localvariable3102, (Object)symbol3992, 0);
// class
send21779 = (Object)new_AST_Send((Object)send21778, (Object)SMB_class, 0);
// should
send21780 = (Object)new_AST_Send((Object)send21779, (Object)symbol4176, 0);
// =
send21781 = (Object)new_AST_Send((Object)send21780, (Object)SMB__equal, 1, (Object)classreference610);
symbol4192 = (Object)new_Type_Symbol_cached(L"return");
// return
send21782 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4192, 0);
assign2670 = (Object)new_AST_Assign((Object)localvariable3100, (Object)send21782);
string2513 = (Object)new_Type_String(L"^ super do: this and: that");
constant4229 = (Object)new_AST_Constant((Object)string2513);
// on:
send21783 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4229);
assign2671 = (Object)new_AST_Assign((Object)localvariable3101, (Object)send21783);
// match:
send21784 = (Object)new_AST_Send((Object)localvariable3100, (Object)symbol4108, 1, (Object)localvariable3101);
assign2672 = (Object)new_AST_Assign((Object)localvariable3103, (Object)send21784);
// class
send21785 = (Object)new_AST_Send((Object)localvariable3103, (Object)SMB_class, 0);
// should
send21786 = (Object)new_AST_Send((Object)send21785, (Object)symbol4176, 0);

// ASTReturnExpression>>expression
//expression
// 	^ expression
method3119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable811);
symbol4019 = (Object)new_Type_Symbol_cached(L"expression");
methodclosure3119 = (Object)new_Runtime_MethodClosure(method3119);
store_method((Type_Class)class566, (Type_Symbol)symbol4019, (Runtime_MethodClosure)methodclosure3119);


// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method3120 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure3120 = (Object)new_Runtime_MethodClosure(method3120);
store_method((Type_Class)class566, (Type_Symbol)symbol3825, (Runtime_MethodClosure)methodclosure3120);


// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable3104 = (Object)new_AST_Variable_named(L"anObject");
array2483 = (Object)new_Type_Array_with(1, (Object)localvariable3104);
assign2673 = (Object)new_AST_Assign((Object)instancevariable811, (Object)localvariable3104);
method3121 = (Object)new_AST_Method_with((Type_Array)array2483, (Type_Array)empty_Type_Array, 2, assign2673, Self);
symbol4018 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure3121 = (Object)new_Runtime_MethodClosure(method3121);
store_method((Type_Class)class566, (Type_Symbol)symbol4018, (Runtime_MethodClosure)methodclosure3121);

classreference613 = (Object)new_Organization_ClassReference((Type_Class)class566);
// =
send21787 = (Object)new_AST_Send((Object)send21786, (Object)SMB__equal, 1, (Object)classreference613);
// expression
send21788 = (Object)new_AST_Send((Object)localvariable3103, (Object)symbol4019, 0);
// receiver
send21789 = (Object)new_AST_Send((Object)send21788, (Object)symbol3992, 0);
// class
send21790 = (Object)new_AST_Send((Object)send21789, (Object)SMB_class, 0);
// should
send21791 = (Object)new_AST_Send((Object)send21790, (Object)symbol4176, 0);
// =
send21792 = (Object)new_AST_Send((Object)send21791, (Object)SMB__equal, 1, (Object)classreference610);
method3122 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2482, 10, assign2667, assign2668, assign2669, send21781, assign2670, assign2671, assign2672, send21787, send21792, Self);
symbol3898 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure3122 = (Object)new_Runtime_MethodClosure(method3122);
store_method((Type_Class)class534, (Type_Symbol)symbol3898, (Runtime_MethodClosure)methodclosure3122);


// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable3105 = (Object)new_AST_Variable_named(L"parser");
localvariable3106 = (Object)new_AST_Variable_named(L"string");
localvariable3107 = (Object)new_AST_Variable_named(L"result");
array2484 = (Object)new_Type_Array_with(3, (Object)localvariable3105, (Object)localvariable3106, (Object)localvariable3107);
symbol4193 = (Object)new_Type_Symbol_cached(L"method");
// method
send21793 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4193, 0);
assign2674 = (Object)new_AST_Assign((Object)localvariable3105, (Object)send21793);
string2514 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant4230 = (Object)new_AST_Constant((Object)string2514);
assign2675 = (Object)new_AST_Assign((Object)localvariable3106, (Object)constant4230);
// parse:
send21794 = (Object)new_AST_Send((Object)localvariable3105, (Object)symbol4120, 1, (Object)localvariable3106);
assign2676 = (Object)new_AST_Assign((Object)localvariable3107, (Object)send21794);
// hasReturnExpression
send21795 = (Object)new_AST_Send((Object)localvariable3107, (Object)symbol3945, 0);
// should
send21796 = (Object)new_AST_Send((Object)send21795, (Object)symbol4176, 0);
// be
send21797 = (Object)new_AST_Send((Object)send21796, (Object)symbol4185, 0);
symbol4194 = (Object)new_Type_Symbol_cached(L"true");
// true
send21798 = (Object)new_AST_Send((Object)send21797, (Object)symbol4194, 0);
// class
send21799 = (Object)new_AST_Send((Object)localvariable3107, (Object)SMB_class, 0);
// should
send21800 = (Object)new_AST_Send((Object)send21799, (Object)symbol4176, 0);

// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable3108 = (Object)new_AST_Variable_named(L"receiver");
array2485 = (Object)new_Type_Array_with(1, (Object)localvariable3108);
smallint1480 = (Object)new_Type_SmallInt(1);
constant4231 = (Object)new_AST_Constant((Object)smallint1480);
symbol4008 = (Object)new_Type_Symbol_cached(L"annotations");
constant4232 = (Object)new_AST_Constant((Object)symbol4008);
// at:put:
send21801 = (Object)new_AST_Send((Object)localvariable3108, (Object)SMB_at_put_, 2, (Object)constant4231, (Object)constant4232);
smallint1481 = (Object)new_Type_SmallInt(2);
constant4233 = (Object)new_AST_Constant((Object)smallint1481);
symbol4010 = (Object)new_Type_Symbol_cached(L"message");
constant4234 = (Object)new_AST_Constant((Object)symbol4010);
// at:put:
send21802 = (Object)new_AST_Send((Object)localvariable3108, (Object)SMB_at_put_, 2, (Object)constant4233, (Object)constant4234);
smallint1482 = (Object)new_Type_SmallInt(3);
constant4235 = (Object)new_AST_Constant((Object)smallint1482);
symbol4007 = (Object)new_Type_Symbol_cached(L"statements");
constant4236 = (Object)new_AST_Constant((Object)symbol4007);
// at:put:
send21803 = (Object)new_AST_Send((Object)localvariable3108, (Object)SMB_at_put_, 2, (Object)constant4235, (Object)constant4236);
smallint1483 = (Object)new_Type_SmallInt(4);
constant4237 = (Object)new_AST_Constant((Object)smallint1483);
symbol4011 = (Object)new_Type_Symbol_cached(L"temporaries");
constant4238 = (Object)new_AST_Constant((Object)symbol4011);
// at:put:
send21804 = (Object)new_AST_Send((Object)localvariable3108, (Object)SMB_at_put_, 2, (Object)constant4237, (Object)constant4238);
// yourself
send21805 = (Object)new_AST_Send((Object)localvariable3108, (Object)symbol3824, 0);
block1393 = (Object)new_AST_Block_with((Type_Array)array2485, (Type_Array)empty_Type_Array, 1, 5, send21801, send21802, send21803, send21804, send21805);
smallint1484 = (Object)new_Type_SmallInt(4);
constant4239 = (Object)new_AST_Constant((Object)smallint1484);
// new:
send21806 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4239);
// value:
send21807 = (Object)new_AST_Send((Object)block1393, (Object)SMB_value_, 1, (Object)send21806);
method3123 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21807);
symbol4006 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure3123 = (Object)new_Runtime_MethodClosure(method3123);
store_method((Type_Class)class558, (Type_Symbol)symbol4006, (Runtime_MethodClosure)methodclosure3123);


// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
// statements
send21808 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// hasReturnExpression
send21809 = (Object)new_AST_Send((Object)send21808, (Object)symbol3945, 0);
method3124 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send21809);
methodclosure3124 = (Object)new_Runtime_MethodClosure(method3124);
store_method((Type_Class)class558, (Type_Symbol)symbol3945, (Runtime_MethodClosure)methodclosure3124);


// ASTMethod>>message
//message
// 	^ message
method3125 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable799);
methodclosure3125 = (Object)new_Runtime_MethodClosure(method3125);
store_method((Type_Class)class558, (Type_Symbol)symbol4010, (Runtime_MethodClosure)methodclosure3125);


// ASTMethod>>statements
//statements
// 	^ statements
method3126 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable802);
methodclosure3126 = (Object)new_Runtime_MethodClosure(method3126);
store_method((Type_Class)class558, (Type_Symbol)symbol4007, (Runtime_MethodClosure)methodclosure3126);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method3127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable801);
methodclosure3127 = (Object)new_Runtime_MethodClosure(method3127);
store_method((Type_Class)class558, (Type_Symbol)symbol4011, (Runtime_MethodClosure)methodclosure3127);


// ASTMethod>>annotations
//annotations
// 	^ annotations
method3128 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable800);
methodclosure3128 = (Object)new_Runtime_MethodClosure(method3128);
store_method((Type_Class)class558, (Type_Symbol)symbol4008, (Runtime_MethodClosure)methodclosure3128);


// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable3109 = (Object)new_AST_Variable_named(L"aStream");
array2486 = (Object)new_Type_Array_with(1, (Object)localvariable3109);
super274 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable3109);
string2515 = (Object)new_Type_String(L"(");
constant4240 = (Object)new_AST_Constant((Object)string2515);
// nextPutAll:
send21810 = (Object)new_AST_Send((Object)localvariable3109, (Object)symbol4154, 1, (Object)constant4240);
// message
send21811 = (Object)new_AST_Send((Object)Self, (Object)symbol4010, 0);
// printOn:
send21812 = (Object)new_AST_Send((Object)send21811, (Object)symbol3923, 1, (Object)localvariable3109);
string2516 = (Object)new_Type_String(L")");
constant4241 = (Object)new_AST_Constant((Object)string2516);
// nextPutAll:
send21813 = (Object)new_AST_Send((Object)localvariable3109, (Object)symbol4154, 1, (Object)constant4241);
method3129 = (Object)new_AST_Method_with((Type_Array)array2486, (Type_Array)empty_Type_Array, 5, super274, send21810, send21812, send21813, Self);
methodclosure3129 = (Object)new_Runtime_MethodClosure(method3129);
store_method((Type_Class)class558, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3129);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable3110 = (Object)new_AST_Variable_named(L"anObject");
array2487 = (Object)new_Type_Array_with(1, (Object)localvariable3110);
assign2677 = (Object)new_AST_Assign((Object)instancevariable801, (Object)localvariable3110);
method3130 = (Object)new_AST_Method_with((Type_Array)array2487, (Type_Array)empty_Type_Array, 2, assign2677, Self);
symbol4012 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure3130 = (Object)new_Runtime_MethodClosure(method3130);
store_method((Type_Class)class558, (Type_Symbol)symbol4012, (Runtime_MethodClosure)methodclosure3130);


// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable3111 = (Object)new_AST_Variable_named(L"anObject");
array2488 = (Object)new_Type_Array_with(1, (Object)localvariable3111);
assign2678 = (Object)new_AST_Assign((Object)instancevariable799, (Object)localvariable3111);
method3131 = (Object)new_AST_Method_with((Type_Array)array2488, (Type_Array)empty_Type_Array, 2, assign2678, Self);
symbol4005 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure3131 = (Object)new_Runtime_MethodClosure(method3131);
store_method((Type_Class)class558, (Type_Symbol)symbol4005, (Runtime_MethodClosure)methodclosure3131);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable3112 = (Object)new_AST_Variable_named(L"anObject");
array2489 = (Object)new_Type_Array_with(1, (Object)localvariable3112);
assign2679 = (Object)new_AST_Assign((Object)instancevariable802, (Object)localvariable3112);
method3132 = (Object)new_AST_Method_with((Type_Array)array2489, (Type_Array)empty_Type_Array, 2, assign2679, Self);
symbol4009 = (Object)new_Type_Symbol_cached(L"statements:");
methodclosure3132 = (Object)new_Runtime_MethodClosure(method3132);
store_method((Type_Class)class558, (Type_Symbol)symbol4009, (Runtime_MethodClosure)methodclosure3132);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable3113 = (Object)new_AST_Variable_named(L"anObject");
array2490 = (Object)new_Type_Array_with(1, (Object)localvariable3113);
assign2680 = (Object)new_AST_Assign((Object)instancevariable800, (Object)localvariable3113);
method3133 = (Object)new_AST_Method_with((Type_Array)array2490, (Type_Array)empty_Type_Array, 2, assign2680, Self);
symbol4013 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure3133 = (Object)new_Runtime_MethodClosure(method3133);
store_method((Type_Class)class558, (Type_Symbol)symbol4013, (Runtime_MethodClosure)methodclosure3133);

classreference614 = (Object)new_Organization_ClassReference((Type_Class)class558);
// =
send21814 = (Object)new_AST_Send((Object)send21800, (Object)SMB__equal, 1, (Object)classreference614);
// message
send21815 = (Object)new_AST_Send((Object)localvariable3107, (Object)symbol4010, 0);
// asString
send21816 = (Object)new_AST_Send((Object)send21815, (Object)SMB_asString, 0);
// should
send21817 = (Object)new_AST_Send((Object)send21816, (Object)symbol4176, 0);
string2517 = (Object)new_Type_String(L"withA:withB:withC:");
constant4242 = (Object)new_AST_Constant((Object)string2517);
// =
send21818 = (Object)new_AST_Send((Object)send21817, (Object)SMB__equal, 1, (Object)constant4242);
// statements
send21819 = (Object)new_AST_Send((Object)localvariable3107, (Object)symbol4007, 0);
// last
send21820 = (Object)new_AST_Send((Object)send21819, (Object)symbol3960, 0);
// hasReturnExpression
send21821 = (Object)new_AST_Send((Object)send21820, (Object)symbol3945, 0);
// should
send21822 = (Object)new_AST_Send((Object)send21821, (Object)symbol4176, 0);
// be
send21823 = (Object)new_AST_Send((Object)send21822, (Object)symbol4185, 0);
// true
send21824 = (Object)new_AST_Send((Object)send21823, (Object)symbol4194, 0);
method3134 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2484, 8, assign2674, assign2675, assign2676, send21798, send21814, send21818, send21824, Self);
symbol3851 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure3134 = (Object)new_Runtime_MethodClosure(method3134);
store_method((Type_Class)class534, (Type_Symbol)symbol3851, (Runtime_MethodClosure)methodclosure3134);


// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3114 = (Object)new_AST_Variable_named(L"parser");
localvariable3115 = (Object)new_AST_Variable_named(L"string");
localvariable3116 = (Object)new_AST_Variable_named(L"result");
array2491 = (Object)new_Type_Array_with(3, (Object)localvariable3114, (Object)localvariable3115, (Object)localvariable3116);
symbol4195 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send21825 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4195, 0);
assign2681 = (Object)new_AST_Assign((Object)localvariable3114, (Object)send21825);
string2518 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant4243 = (Object)new_AST_Constant((Object)string2518);
// on:
send21826 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4243);
assign2682 = (Object)new_AST_Assign((Object)localvariable3115, (Object)send21826);
// match:
send21827 = (Object)new_AST_Send((Object)localvariable3114, (Object)symbol4108, 1, (Object)localvariable3115);
// should
send21828 = (Object)new_AST_Send((Object)send21827, (Object)symbol4176, 0);
// be
send21829 = (Object)new_AST_Send((Object)send21828, (Object)symbol4185, 0);
// isNil
send21830 = (Object)new_AST_Send((Object)send21829, (Object)SMB_isNil, 0);
string2519 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant4244 = (Object)new_AST_Constant((Object)string2519);
// on:
send21831 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4244);
assign2683 = (Object)new_AST_Assign((Object)localvariable3115, (Object)send21831);
// match:
send21832 = (Object)new_AST_Send((Object)localvariable3114, (Object)symbol4108, 1, (Object)localvariable3115);
assign2684 = (Object)new_AST_Assign((Object)localvariable3116, (Object)send21832);
// class
send21833 = (Object)new_AST_Send((Object)localvariable3116, (Object)SMB_class, 0);
// should
send21834 = (Object)new_AST_Send((Object)send21833, (Object)symbol4176, 0);

// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method3135 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable813);
methodclosure3135 = (Object)new_Runtime_MethodClosure(method3135);
store_method((Type_Class)class567, (Type_Symbol)symbol4019, (Runtime_MethodClosure)methodclosure3135);


// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method3136 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable812);
symbol4021 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure3136 = (Object)new_Runtime_MethodClosure(method3136);
store_method((Type_Class)class567, (Type_Symbol)symbol4021, (Runtime_MethodClosure)methodclosure3136);


// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable3117 = (Object)new_AST_Variable_named(L"anObject");
array2492 = (Object)new_Type_Array_with(1, (Object)localvariable3117);
assign2685 = (Object)new_AST_Assign((Object)instancevariable812, (Object)localvariable3117);
method3137 = (Object)new_AST_Method_with((Type_Array)array2492, (Type_Array)empty_Type_Array, 2, assign2685, Self);
symbol4020 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure3137 = (Object)new_Runtime_MethodClosure(method3137);
store_method((Type_Class)class567, (Type_Symbol)symbol4020, (Runtime_MethodClosure)methodclosure3137);


// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable3118 = (Object)new_AST_Variable_named(L"anObject");
array2493 = (Object)new_Type_Array_with(1, (Object)localvariable3118);
assign2686 = (Object)new_AST_Assign((Object)instancevariable813, (Object)localvariable3118);
method3138 = (Object)new_AST_Method_with((Type_Array)array2493, (Type_Array)empty_Type_Array, 2, assign2686, Self);
methodclosure3138 = (Object)new_Runtime_MethodClosure(method3138);
store_method((Type_Class)class567, (Type_Symbol)symbol4018, (Runtime_MethodClosure)methodclosure3138);

classreference615 = (Object)new_Organization_ClassReference((Type_Class)class567);
// =
send21835 = (Object)new_AST_Send((Object)send21834, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send21836 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4021, 0);
// class
send21837 = (Object)new_AST_Send((Object)send21836, (Object)SMB_class, 0);
// should
send21838 = (Object)new_AST_Send((Object)send21837, (Object)symbol4176, 0);
// =
send21839 = (Object)new_AST_Send((Object)send21838, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send21840 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4021, 0);
// name
send21841 = (Object)new_AST_Send((Object)send21840, (Object)SMB_name, 0);
// should
send21842 = (Object)new_AST_Send((Object)send21841, (Object)symbol4176, 0);
string2520 = (Object)new_Type_String(L"a");
constant4245 = (Object)new_AST_Constant((Object)string2520);
// =
send21843 = (Object)new_AST_Send((Object)send21842, (Object)SMB__equal, 1, (Object)constant4245);
// expression
send21844 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4019, 0);
assign2687 = (Object)new_AST_Assign((Object)localvariable3116, (Object)send21844);
// class
send21845 = (Object)new_AST_Send((Object)localvariable3116, (Object)SMB_class, 0);
// should
send21846 = (Object)new_AST_Send((Object)send21845, (Object)symbol4176, 0);
// =
send21847 = (Object)new_AST_Send((Object)send21846, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send21848 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4021, 0);
// class
send21849 = (Object)new_AST_Send((Object)send21848, (Object)SMB_class, 0);
// should
send21850 = (Object)new_AST_Send((Object)send21849, (Object)symbol4176, 0);
// =
send21851 = (Object)new_AST_Send((Object)send21850, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send21852 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4021, 0);
// name
send21853 = (Object)new_AST_Send((Object)send21852, (Object)SMB_name, 0);
// should
send21854 = (Object)new_AST_Send((Object)send21853, (Object)symbol4176, 0);
string2521 = (Object)new_Type_String(L"b");
constant4246 = (Object)new_AST_Constant((Object)string2521);
// =
send21855 = (Object)new_AST_Send((Object)send21854, (Object)SMB__equal, 1, (Object)constant4246);
// expression
send21856 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4019, 0);
assign2688 = (Object)new_AST_Assign((Object)localvariable3116, (Object)send21856);
// class
send21857 = (Object)new_AST_Send((Object)localvariable3116, (Object)SMB_class, 0);
// should
send21858 = (Object)new_AST_Send((Object)send21857, (Object)symbol4176, 0);
// =
send21859 = (Object)new_AST_Send((Object)send21858, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send21860 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4021, 0);
// class
send21861 = (Object)new_AST_Send((Object)send21860, (Object)SMB_class, 0);
// should
send21862 = (Object)new_AST_Send((Object)send21861, (Object)symbol4176, 0);
// =
send21863 = (Object)new_AST_Send((Object)send21862, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send21864 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4021, 0);
// name
send21865 = (Object)new_AST_Send((Object)send21864, (Object)SMB_name, 0);
// should
send21866 = (Object)new_AST_Send((Object)send21865, (Object)symbol4176, 0);
string2522 = (Object)new_Type_String(L"c");
constant4247 = (Object)new_AST_Constant((Object)string2522);
// =
send21867 = (Object)new_AST_Send((Object)send21866, (Object)SMB__equal, 1, (Object)constant4247);
// expression
send21868 = (Object)new_AST_Send((Object)localvariable3116, (Object)symbol4019, 0);
// class
send21869 = (Object)new_AST_Send((Object)send21868, (Object)SMB_class, 0);
// should
send21870 = (Object)new_AST_Send((Object)send21869, (Object)symbol4176, 0);
// =
send21871 = (Object)new_AST_Send((Object)send21870, (Object)SMB__equal, 1, (Object)classreference598);
method3139 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2491, 18, assign2681, assign2682, send21830, assign2683, assign2684, send21835, send21839, send21843, assign2687, send21847, send21851, send21855, assign2688, send21859, send21863, send21867, send21871, Self);
symbol3904 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure3139 = (Object)new_Runtime_MethodClosure(method3139);
store_method((Type_Class)class534, (Type_Symbol)symbol3904, (Runtime_MethodClosure)methodclosure3139);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable3119 = (Object)new_AST_Variable_named(L"parser");
localvariable3120 = (Object)new_AST_Variable_named(L"string");
localvariable3121 = (Object)new_AST_Variable_named(L"result");
array2494 = (Object)new_Type_Array_with(3, (Object)localvariable3119, (Object)localvariable3120, (Object)localvariable3121);
symbol4196 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send21872 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4196, 0);
assign2689 = (Object)new_AST_Assign((Object)localvariable3119, (Object)send21872);
string2523 = (Object)new_Type_String(L"\'abc\'");
constant4248 = (Object)new_AST_Constant((Object)string2523);
// on:
send21873 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4248);
assign2690 = (Object)new_AST_Assign((Object)localvariable3120, (Object)send21873);
// match:
send21874 = (Object)new_AST_Send((Object)localvariable3119, (Object)symbol4108, 1, (Object)localvariable3120);
assign2691 = (Object)new_AST_Assign((Object)localvariable3121, (Object)send21874);
// class
send21875 = (Object)new_AST_Send((Object)localvariable3121, (Object)SMB_class, 0);
// should
send21876 = (Object)new_AST_Send((Object)send21875, (Object)symbol4176, 0);
// =
send21877 = (Object)new_AST_Send((Object)send21876, (Object)SMB__equal, 1, (Object)classreference607);
// string
send21878 = (Object)new_AST_Send((Object)localvariable3121, (Object)symbol3980, 0);
// should
send21879 = (Object)new_AST_Send((Object)send21878, (Object)symbol4176, 0);
string2524 = (Object)new_Type_String(L"abc");
constant4249 = (Object)new_AST_Constant((Object)string2524);
// =
send21880 = (Object)new_AST_Send((Object)send21879, (Object)SMB__equal, 1, (Object)constant4249);
// position
send21881 = (Object)new_AST_Send((Object)localvariable3120, (Object)symbol4173, 0);
// should
send21882 = (Object)new_AST_Send((Object)send21881, (Object)symbol4176, 0);
smallint1485 = (Object)new_Type_SmallInt(5);
constant4250 = (Object)new_AST_Constant((Object)smallint1485);
// =
send21883 = (Object)new_AST_Send((Object)send21882, (Object)SMB__equal, 1, (Object)constant4250);
string2525 = (Object)new_Type_String(L"\'abc\'\'");
constant4251 = (Object)new_AST_Constant((Object)string2525);
// on:
send21884 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4251);
assign2692 = (Object)new_AST_Assign((Object)localvariable3120, (Object)send21884);
// match:
send21885 = (Object)new_AST_Send((Object)localvariable3119, (Object)symbol4108, 1, (Object)localvariable3120);
assign2693 = (Object)new_AST_Assign((Object)localvariable3121, (Object)send21885);
// class
send21886 = (Object)new_AST_Send((Object)localvariable3121, (Object)SMB_class, 0);
// should
send21887 = (Object)new_AST_Send((Object)send21886, (Object)symbol4176, 0);
// =
send21888 = (Object)new_AST_Send((Object)send21887, (Object)SMB__equal, 1, (Object)classreference607);
// string
send21889 = (Object)new_AST_Send((Object)localvariable3121, (Object)symbol3980, 0);
// should
send21890 = (Object)new_AST_Send((Object)send21889, (Object)symbol4176, 0);
string2526 = (Object)new_Type_String(L"abc");
constant4252 = (Object)new_AST_Constant((Object)string2526);
// =
send21891 = (Object)new_AST_Send((Object)send21890, (Object)SMB__equal, 1, (Object)constant4252);
// position
send21892 = (Object)new_AST_Send((Object)localvariable3120, (Object)symbol4173, 0);
// should
send21893 = (Object)new_AST_Send((Object)send21892, (Object)symbol4176, 0);
smallint1486 = (Object)new_Type_SmallInt(5);
constant4253 = (Object)new_AST_Constant((Object)smallint1486);
// =
send21894 = (Object)new_AST_Send((Object)send21893, (Object)SMB__equal, 1, (Object)constant4253);
string2527 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant4254 = (Object)new_AST_Constant((Object)string2527);
// on:
send21895 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4254);
assign2694 = (Object)new_AST_Assign((Object)localvariable3120, (Object)send21895);
// match:
send21896 = (Object)new_AST_Send((Object)localvariable3119, (Object)symbol4108, 1, (Object)localvariable3120);
assign2695 = (Object)new_AST_Assign((Object)localvariable3121, (Object)send21896);
// class
send21897 = (Object)new_AST_Send((Object)localvariable3121, (Object)SMB_class, 0);
// should
send21898 = (Object)new_AST_Send((Object)send21897, (Object)symbol4176, 0);
// =
send21899 = (Object)new_AST_Send((Object)send21898, (Object)SMB__equal, 1, (Object)classreference607);
// string
send21900 = (Object)new_AST_Send((Object)localvariable3121, (Object)symbol3980, 0);
// should
send21901 = (Object)new_AST_Send((Object)send21900, (Object)symbol4176, 0);
string2528 = (Object)new_Type_String(L"abc\'d");
constant4255 = (Object)new_AST_Constant((Object)string2528);
// =
send21902 = (Object)new_AST_Send((Object)send21901, (Object)SMB__equal, 1, (Object)constant4255);
// position
send21903 = (Object)new_AST_Send((Object)localvariable3120, (Object)symbol4173, 0);
// should
send21904 = (Object)new_AST_Send((Object)send21903, (Object)symbol4176, 0);
smallint1487 = (Object)new_Type_SmallInt(8);
constant4256 = (Object)new_AST_Constant((Object)smallint1487);
// =
send21905 = (Object)new_AST_Send((Object)send21904, (Object)SMB__equal, 1, (Object)constant4256);
method3140 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2494, 17, assign2689, assign2690, assign2691, send21877, send21880, send21883, assign2692, assign2693, send21888, send21891, send21894, assign2694, assign2695, send21899, send21902, send21905, Self);
symbol3848 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure3140 = (Object)new_Runtime_MethodClosure(method3140);
store_method((Type_Class)class534, (Type_Symbol)symbol3848, (Runtime_MethodClosure)methodclosure3140);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3122 = (Object)new_AST_Variable_named(L"parser");
localvariable3123 = (Object)new_AST_Variable_named(L"string");
array2495 = (Object)new_Type_Array_with(2, (Object)localvariable3122, (Object)localvariable3123);
symbol4197 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send21906 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4197, 0);
assign2696 = (Object)new_AST_Assign((Object)localvariable3122, (Object)send21906);
string2529 = (Object)new_Type_String(L"abcd: ");
constant4257 = (Object)new_AST_Constant((Object)string2529);
// on:
send21907 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4257);
assign2697 = (Object)new_AST_Assign((Object)localvariable3123, (Object)send21907);
// match:
send21908 = (Object)new_AST_Send((Object)localvariable3122, (Object)symbol4108, 1, (Object)localvariable3123);
// should
send21909 = (Object)new_AST_Send((Object)send21908, (Object)symbol4176, 0);
string2530 = (Object)new_Type_String(L"abcd");
constant4258 = (Object)new_AST_Constant((Object)string2530);
// =
send21910 = (Object)new_AST_Send((Object)send21909, (Object)SMB__equal, 1, (Object)constant4258);
// position
send21911 = (Object)new_AST_Send((Object)localvariable3123, (Object)symbol4173, 0);
// should
send21912 = (Object)new_AST_Send((Object)send21911, (Object)symbol4176, 0);
smallint1488 = (Object)new_Type_SmallInt(5);
constant4259 = (Object)new_AST_Constant((Object)smallint1488);
// =
send21913 = (Object)new_AST_Send((Object)send21912, (Object)SMB__equal, 1, (Object)constant4259);
string2531 = (Object)new_Type_String(L"abcd ");
constant4260 = (Object)new_AST_Constant((Object)string2531);
// on:
send21914 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4260);
assign2698 = (Object)new_AST_Assign((Object)localvariable3123, (Object)send21914);
// match:
send21915 = (Object)new_AST_Send((Object)localvariable3122, (Object)symbol4108, 1, (Object)localvariable3123);
// should
send21916 = (Object)new_AST_Send((Object)send21915, (Object)symbol4176, 0);
// be
send21917 = (Object)new_AST_Send((Object)send21916, (Object)symbol4185, 0);
// isNil
send21918 = (Object)new_AST_Send((Object)send21917, (Object)SMB_isNil, 0);
// position
send21919 = (Object)new_AST_Send((Object)localvariable3123, (Object)symbol4173, 0);
// should
send21920 = (Object)new_AST_Send((Object)send21919, (Object)symbol4176, 0);
smallint1489 = (Object)new_Type_SmallInt(0);
constant4261 = (Object)new_AST_Constant((Object)smallint1489);
// =
send21921 = (Object)new_AST_Send((Object)send21920, (Object)SMB__equal, 1, (Object)constant4261);
method3141 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2495, 8, assign2696, assign2697, send21910, send21913, assign2698, send21918, send21921, Self);
symbol3871 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure3141 = (Object)new_Runtime_MethodClosure(method3141);
store_method((Type_Class)class534, (Type_Symbol)symbol3871, (Runtime_MethodClosure)methodclosure3141);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable3124 = (Object)new_AST_Variable_named(L"parser");
localvariable3125 = (Object)new_AST_Variable_named(L"string");
localvariable3126 = (Object)new_AST_Variable_named(L"result");
array2496 = (Object)new_Type_Array_with(3, (Object)localvariable3124, (Object)localvariable3125, (Object)localvariable3126);
// method
send21922 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4193, 0);
assign2699 = (Object)new_AST_Assign((Object)localvariable3124, (Object)send21922);
string2532 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant4262 = (Object)new_AST_Constant((Object)string2532);
assign2700 = (Object)new_AST_Assign((Object)localvariable3125, (Object)constant4262);
// parse:
send21923 = (Object)new_AST_Send((Object)localvariable3124, (Object)symbol4120, 1, (Object)localvariable3125);
assign2701 = (Object)new_AST_Assign((Object)localvariable3126, (Object)send21923);
// hasReturnExpression
send21924 = (Object)new_AST_Send((Object)localvariable3126, (Object)symbol3945, 0);
// should
send21925 = (Object)new_AST_Send((Object)send21924, (Object)symbol4176, 0);
// be
send21926 = (Object)new_AST_Send((Object)send21925, (Object)symbol4185, 0);
// true
send21927 = (Object)new_AST_Send((Object)send21926, (Object)symbol4194, 0);
// class
send21928 = (Object)new_AST_Send((Object)localvariable3126, (Object)SMB_class, 0);
// should
send21929 = (Object)new_AST_Send((Object)send21928, (Object)symbol4176, 0);
// =
send21930 = (Object)new_AST_Send((Object)send21929, (Object)SMB__equal, 1, (Object)classreference614);
// message
send21931 = (Object)new_AST_Send((Object)localvariable3126, (Object)symbol4010, 0);
// class
send21932 = (Object)new_AST_Send((Object)send21931, (Object)SMB_class, 0);
// should
send21933 = (Object)new_AST_Send((Object)send21932, (Object)symbol4176, 0);

// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable3127 = (Object)new_AST_Variable_named(L"aSelector");
array2497 = (Object)new_Type_Array_with(1, (Object)localvariable3127);
variable153 = (Object)new_AST_Variable_named(L"return");
array2498 = (Object)new_Type_Array_with(1, (Object)variable153);
symbol3998 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
super275 = (Object)new_AST_Super((Object)symbol3998, 1, (Object)localvariable3127);
// escape:
send21934 = (Object)new_AST_Send((Object)variable153, (Object)SMB_escape_, 1, (Object)False_Const);
block1394 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send21934);
// ifFalse:
send21935 = (Object)new_AST_Send((Object)super275, (Object)SMB_ifFalse_, 1, (Object)block1394);
symbol4017 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
// compatibleArgumentsWith:
send21936 = (Object)new_AST_Send((Object)Self, (Object)symbol4017, 1, (Object)localvariable3127);
block1395 = (Object)new_AST_Block_with((Type_Array)array2498, (Type_Array)empty_Type_Array, 1, 2, send21935, send21936);
// on:
send21937 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1395);
method3142 = (Object)new_AST_Method_with((Type_Array)array2497, (Type_Array)empty_Type_Array, 1, send21937);
methodclosure3142 = (Object)new_Runtime_MethodClosure(method3142);
store_method((Type_Class)class561, (Type_Symbol)symbol3998, (Runtime_MethodClosure)methodclosure3142);


// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable3128 = (Object)new_AST_Variable_named(L"aCollection");
array2499 = (Object)new_Type_Array_with(1, (Object)localvariable3128);
symbol4198 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send21938 = (Object)new_AST_Send((Object)Self, (Object)symbol4198, 0);
assign2702 = (Object)new_AST_Assign((Object)instancevariable804, (Object)localvariable3128);
method3143 = (Object)new_AST_Method_with((Type_Array)array2499, (Type_Array)empty_Type_Array, 3, send21938, assign2702, Self);
symbol4016 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure3143 = (Object)new_Runtime_MethodClosure(method3143);
store_method((Type_Class)class561, (Type_Symbol)symbol4016, (Runtime_MethodClosure)methodclosure3143);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super276 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send21939 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
assign2703 = (Object)new_AST_Assign((Object)instancevariable804, (Object)send21939);
method3144 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super276, assign2703, Self);
methodclosure3144 = (Object)new_Runtime_MethodClosure(method3144);
store_method((Type_Class)class561, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3144);


// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method3145 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable804);
methodclosure3145 = (Object)new_Runtime_MethodClosure(method3145);
store_method((Type_Class)class561, (Type_Symbol)symbol3997, (Runtime_MethodClosure)methodclosure3145);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable3129 = (Object)new_AST_Variable_named(L"aSelector");
array2500 = (Object)new_Type_Array_with(1, (Object)localvariable3129);
variable154 = (Object)new_AST_Variable_named(L"return");
array2501 = (Object)new_Type_Array_with(1, (Object)variable154);
// size
send21940 = (Object)new_AST_Send((Object)instancevariable804, (Object)SMB_size, 0);
symbol4199 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable3130 = (Object)new_AST_Variable_named(L"index");
array2502 = (Object)new_Type_Array_with(1, (Object)localvariable3130);
// at:
send21941 = (Object)new_AST_Send((Object)instancevariable804, (Object)SMB_at_, 1, (Object)localvariable3130);
// layout
send21942 = (Object)new_AST_Send((Object)send21941, (Object)symbol3910, 0);
// parameters
send21943 = (Object)new_AST_Send((Object)localvariable3129, (Object)symbol3997, 0);
// at:
send21944 = (Object)new_AST_Send((Object)send21943, (Object)SMB_at_, 1, (Object)localvariable3130);
// layout
send21945 = (Object)new_AST_Send((Object)send21944, (Object)symbol3910, 0);
// =
send21946 = (Object)new_AST_Send((Object)send21942, (Object)SMB__equal, 1, (Object)send21945);
// escape:
send21947 = (Object)new_AST_Send((Object)variable154, (Object)SMB_escape_, 1, (Object)False_Const);
block1396 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send21947);
// ifFalse:
send21948 = (Object)new_AST_Send((Object)send21946, (Object)SMB_ifFalse_, 1, (Object)block1396);
block1397 = (Object)new_AST_Block_with((Type_Array)array2502, (Type_Array)empty_Type_Array, 2, 1, send21948);
// timesRepeat:
send21949 = (Object)new_AST_Send((Object)send21940, (Object)symbol4199, 1, (Object)block1397);
block1398 = (Object)new_AST_Block_with((Type_Array)array2501, (Type_Array)empty_Type_Array, 1, 2, send21949, True_Const);
// on:
send21950 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1398);
method3146 = (Object)new_AST_Method_with((Type_Array)array2500, (Type_Array)empty_Type_Array, 1, send21950);
methodclosure3146 = (Object)new_Runtime_MethodClosure(method3146);
store_method((Type_Class)class561, (Type_Symbol)symbol4017, (Runtime_MethodClosure)methodclosure3146);

classreference616 = (Object)new_Organization_ClassReference((Type_Class)class561);
// =
send21951 = (Object)new_AST_Send((Object)send21933, (Object)SMB__equal, 1, (Object)classreference616);
// temporaries
send21952 = (Object)new_AST_Send((Object)localvariable3126, (Object)symbol4011, 0);
// size
send21953 = (Object)new_AST_Send((Object)send21952, (Object)SMB_size, 0);
// should
send21954 = (Object)new_AST_Send((Object)send21953, (Object)symbol4176, 0);
smallint1490 = (Object)new_Type_SmallInt(3);
constant4263 = (Object)new_AST_Constant((Object)smallint1490);
// =
send21955 = (Object)new_AST_Send((Object)send21954, (Object)SMB__equal, 1, (Object)constant4263);
// annotations
send21956 = (Object)new_AST_Send((Object)localvariable3126, (Object)symbol4008, 0);
// size
send21957 = (Object)new_AST_Send((Object)send21956, (Object)SMB_size, 0);
// should
send21958 = (Object)new_AST_Send((Object)send21957, (Object)symbol4176, 0);
smallint1491 = (Object)new_Type_SmallInt(3);
constant4264 = (Object)new_AST_Constant((Object)smallint1491);
// =
send21959 = (Object)new_AST_Send((Object)send21958, (Object)SMB__equal, 1, (Object)constant4264);
// statements
send21960 = (Object)new_AST_Send((Object)localvariable3126, (Object)symbol4007, 0);
// size
send21961 = (Object)new_AST_Send((Object)send21960, (Object)SMB_size, 0);
// should
send21962 = (Object)new_AST_Send((Object)send21961, (Object)symbol4176, 0);
smallint1492 = (Object)new_Type_SmallInt(2);
constant4265 = (Object)new_AST_Constant((Object)smallint1492);
// =
send21963 = (Object)new_AST_Send((Object)send21962, (Object)SMB__equal, 1, (Object)constant4265);
method3147 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2496, 10, assign2699, assign2700, assign2701, send21927, send21930, send21951, send21955, send21959, send21963, Self);
symbol3868 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure3147 = (Object)new_Runtime_MethodClosure(method3147);
store_method((Type_Class)class534, (Type_Symbol)symbol3868, (Runtime_MethodClosure)methodclosure3147);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable3131 = (Object)new_AST_Variable_named(L"parser");
array2503 = (Object)new_Type_Array_with(1, (Object)localvariable3131);
symbol4200 = (Object)new_Type_Symbol_cached(L"named:parsing:");
string2533 = (Object)new_Type_String(L"COMMENT");
constant4266 = (Object)new_AST_Constant((Object)string2533);
symbol4201 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send21964 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4201, 0);
// named:parsing:
send21965 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4200, 2, (Object)constant4266, (Object)send21964);
assign2704 = (Object)new_AST_Assign((Object)localvariable3131, (Object)send21965);
string2534 = (Object)new_Type_String(L"\"Test\"");
constant4267 = (Object)new_AST_Constant((Object)string2534);
// parse:
send21966 = (Object)new_AST_Send((Object)localvariable3131, (Object)symbol4120, 1, (Object)constant4267);
// should
send21967 = (Object)new_AST_Send((Object)send21966, (Object)symbol4176, 0);
// not
send21968 = (Object)new_AST_Send((Object)send21967, (Object)SMB_not, 0);
// be
send21969 = (Object)new_AST_Send((Object)send21968, (Object)symbol4185, 0);
// isNil
send21970 = (Object)new_AST_Send((Object)send21969, (Object)SMB_isNil, 0);
string2535 = (Object)new_Type_String(L"\"Test");
constant4268 = (Object)new_AST_Constant((Object)string2535);
// parse:
send21971 = (Object)new_AST_Send((Object)localvariable3131, (Object)symbol4120, 1, (Object)constant4268);
// should
send21972 = (Object)new_AST_Send((Object)send21971, (Object)symbol4176, 0);
// be
send21973 = (Object)new_AST_Send((Object)send21972, (Object)symbol4185, 0);
// isNil
send21974 = (Object)new_AST_Send((Object)send21973, (Object)SMB_isNil, 0);
method3148 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2503, 4, assign2704, send21970, send21974, Self);
symbol3896 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure3148 = (Object)new_Runtime_MethodClosure(method3148);
store_method((Type_Class)class534, (Type_Symbol)symbol3896, (Runtime_MethodClosure)methodclosure3148);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable3132 = (Object)new_AST_Variable_named(L"parser");
localvariable3133 = (Object)new_AST_Variable_named(L"ast");
array2504 = (Object)new_Type_Array_with(2, (Object)localvariable3132, (Object)localvariable3133);
// statements
send21975 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4007, 0);
assign2705 = (Object)new_AST_Assign((Object)localvariable3132, (Object)send21975);
string2536 = (Object)new_Type_String(L"2 fib + 3 ");
constant4269 = (Object)new_AST_Constant((Object)string2536);
// on:
send21976 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4269);
// match:
send21977 = (Object)new_AST_Send((Object)localvariable3132, (Object)symbol4108, 1, (Object)send21976);
// first
send21978 = (Object)new_AST_Send((Object)send21977, (Object)symbol3961, 0);
assign2706 = (Object)new_AST_Assign((Object)localvariable3133, (Object)send21978);
// class
send21979 = (Object)new_AST_Send((Object)localvariable3133, (Object)SMB_class, 0);
// should
send21980 = (Object)new_AST_Send((Object)send21979, (Object)symbol4176, 0);
// =
send21981 = (Object)new_AST_Send((Object)send21980, (Object)SMB__equal, 1, (Object)classreference601);
// receiver
send21982 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol3992, 0);
// class
send21983 = (Object)new_AST_Send((Object)send21982, (Object)SMB_class, 0);
// should
send21984 = (Object)new_AST_Send((Object)send21983, (Object)symbol4176, 0);
// =
send21985 = (Object)new_AST_Send((Object)send21984, (Object)SMB__equal, 1, (Object)classreference602);
// receiver
send21986 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol3992, 0);
// receiver
send21987 = (Object)new_AST_Send((Object)send21986, (Object)symbol3992, 0);
// class
send21988 = (Object)new_AST_Send((Object)send21987, (Object)SMB_class, 0);
// should
send21989 = (Object)new_AST_Send((Object)send21988, (Object)symbol4176, 0);
// =
send21990 = (Object)new_AST_Send((Object)send21989, (Object)SMB__equal, 1, (Object)classreference600);
// receiver
send21991 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol3992, 0);
// receiver
send21992 = (Object)new_AST_Send((Object)send21991, (Object)symbol3992, 0);
// number
send21993 = (Object)new_AST_Send((Object)send21992, (Object)symbol3969, 0);
// should
send21994 = (Object)new_AST_Send((Object)send21993, (Object)symbol4176, 0);
string2537 = (Object)new_Type_String(L"2");
constant4270 = (Object)new_AST_Constant((Object)string2537);
// =
send21995 = (Object)new_AST_Send((Object)send21994, (Object)SMB__equal, 1, (Object)constant4270);
// receiver
send21996 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol3992, 0);
// selector
send21997 = (Object)new_AST_Send((Object)send21996, (Object)symbol3927, 0);
// asString
send21998 = (Object)new_AST_Send((Object)send21997, (Object)SMB_asString, 0);
// should
send21999 = (Object)new_AST_Send((Object)send21998, (Object)symbol4176, 0);
string2538 = (Object)new_Type_String(L"fib");
constant4271 = (Object)new_AST_Constant((Object)string2538);
// =
send22000 = (Object)new_AST_Send((Object)send21999, (Object)SMB__equal, 1, (Object)constant4271);
// selector
send22001 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol3927, 0);
// asString
send22002 = (Object)new_AST_Send((Object)send22001, (Object)SMB_asString, 0);
// should
send22003 = (Object)new_AST_Send((Object)send22002, (Object)symbol4176, 0);
string2539 = (Object)new_Type_String(L"+");
constant4272 = (Object)new_AST_Constant((Object)string2539);
// =
send22004 = (Object)new_AST_Send((Object)send22003, (Object)SMB__equal, 1, (Object)constant4272);
// argument
send22005 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol4000, 0);
// class
send22006 = (Object)new_AST_Send((Object)send22005, (Object)SMB_class, 0);
// should
send22007 = (Object)new_AST_Send((Object)send22006, (Object)symbol4176, 0);
// =
send22008 = (Object)new_AST_Send((Object)send22007, (Object)SMB__equal, 1, (Object)classreference600);
// argument
send22009 = (Object)new_AST_Send((Object)localvariable3133, (Object)symbol4000, 0);
// number
send22010 = (Object)new_AST_Send((Object)send22009, (Object)symbol3969, 0);
// should
send22011 = (Object)new_AST_Send((Object)send22010, (Object)symbol4176, 0);
string2540 = (Object)new_Type_String(L"3");
constant4273 = (Object)new_AST_Constant((Object)string2540);
// =
send22012 = (Object)new_AST_Send((Object)send22011, (Object)SMB__equal, 1, (Object)constant4273);
method3149 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2504, 11, assign2705, assign2706, send21981, send21985, send21990, send21995, send22000, send22004, send22008, send22012, Self);
symbol3888 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure3149 = (Object)new_Runtime_MethodClosure(method3149);
store_method((Type_Class)class534, (Type_Symbol)symbol3888, (Runtime_MethodClosure)methodclosure3149);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable3134 = (Object)new_AST_Variable_named(L"parser");
localvariable3135 = (Object)new_AST_Variable_named(L"string");
array2505 = (Object)new_Type_Array_with(2, (Object)localvariable3134, (Object)localvariable3135);
// separator
send22013 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4167, 0);
assign2707 = (Object)new_AST_Assign((Object)localvariable3134, (Object)send22013);
string2541 = (Object)new_Type_String(L"\"Test\"");
constant4274 = (Object)new_AST_Constant((Object)string2541);
// on:
send22014 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4274);
assign2708 = (Object)new_AST_Assign((Object)localvariable3135, (Object)send22014);
// match:
send22015 = (Object)new_AST_Send((Object)localvariable3134, (Object)symbol4108, 1, (Object)localvariable3135);
// should
send22016 = (Object)new_AST_Send((Object)send22015, (Object)symbol4176, 0);
// not
send22017 = (Object)new_AST_Send((Object)send22016, (Object)SMB_not, 0);
// be
send22018 = (Object)new_AST_Send((Object)send22017, (Object)symbol4185, 0);
// isNil
send22019 = (Object)new_AST_Send((Object)send22018, (Object)SMB_isNil, 0);
// position
send22020 = (Object)new_AST_Send((Object)localvariable3135, (Object)symbol4173, 0);
// should
send22021 = (Object)new_AST_Send((Object)send22020, (Object)symbol4176, 0);
smallint1493 = (Object)new_Type_SmallInt(6);
constant4275 = (Object)new_AST_Constant((Object)smallint1493);
// =
send22022 = (Object)new_AST_Send((Object)send22021, (Object)SMB__equal, 1, (Object)constant4275);
string2542 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant4276 = (Object)new_AST_Constant((Object)string2542);
// on:
send22023 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4276);
assign2709 = (Object)new_AST_Assign((Object)localvariable3135, (Object)send22023);
// match:
send22024 = (Object)new_AST_Send((Object)localvariable3134, (Object)symbol4108, 1, (Object)localvariable3135);
// should
send22025 = (Object)new_AST_Send((Object)send22024, (Object)symbol4176, 0);
// not
send22026 = (Object)new_AST_Send((Object)send22025, (Object)SMB_not, 0);
// be
send22027 = (Object)new_AST_Send((Object)send22026, (Object)symbol4185, 0);
// isNil
send22028 = (Object)new_AST_Send((Object)send22027, (Object)SMB_isNil, 0);
// position
send22029 = (Object)new_AST_Send((Object)localvariable3135, (Object)symbol4173, 0);
// should
send22030 = (Object)new_AST_Send((Object)send22029, (Object)symbol4176, 0);
smallint1494 = (Object)new_Type_SmallInt(18);
constant4277 = (Object)new_AST_Constant((Object)smallint1494);
// =
send22031 = (Object)new_AST_Send((Object)send22030, (Object)SMB__equal, 1, (Object)constant4277);
string2543 = (Object)new_Type_String(L"");
constant4278 = (Object)new_AST_Constant((Object)string2543);
// on:
send22032 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4278);
assign2710 = (Object)new_AST_Assign((Object)localvariable3135, (Object)send22032);
// match:
send22033 = (Object)new_AST_Send((Object)localvariable3134, (Object)symbol4108, 1, (Object)localvariable3135);
// should
send22034 = (Object)new_AST_Send((Object)send22033, (Object)symbol4176, 0);
// not
send22035 = (Object)new_AST_Send((Object)send22034, (Object)SMB_not, 0);
// be
send22036 = (Object)new_AST_Send((Object)send22035, (Object)symbol4185, 0);
// isNil
send22037 = (Object)new_AST_Send((Object)send22036, (Object)SMB_isNil, 0);
// position
send22038 = (Object)new_AST_Send((Object)localvariable3135, (Object)symbol4173, 0);
// should
send22039 = (Object)new_AST_Send((Object)send22038, (Object)symbol4176, 0);
smallint1495 = (Object)new_Type_SmallInt(0);
constant4279 = (Object)new_AST_Constant((Object)smallint1495);
// =
send22040 = (Object)new_AST_Send((Object)send22039, (Object)SMB__equal, 1, (Object)constant4279);
method3150 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2505, 11, assign2707, assign2708, send22019, send22022, assign2709, send22028, send22031, assign2710, send22037, send22040, Self);
symbol3861 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure3150 = (Object)new_Runtime_MethodClosure(method3150);
store_method((Type_Class)class534, (Type_Symbol)symbol3861, (Runtime_MethodClosure)methodclosure3150);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable3136 = (Object)new_AST_Variable_named(L"parser");
localvariable3137 = (Object)new_AST_Variable_named(L"string");
localvariable3138 = (Object)new_AST_Variable_named(L"result");
array2506 = (Object)new_Type_Array_with(3, (Object)localvariable3136, (Object)localvariable3137, (Object)localvariable3138);
// binaryMessageDefinition
send22041 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4191, 0);
assign2711 = (Object)new_AST_Assign((Object)localvariable3136, (Object)send22041);
string2544 = (Object)new_Type_String(L"+= a");
constant4280 = (Object)new_AST_Constant((Object)string2544);
// on:
send22042 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4280);
assign2712 = (Object)new_AST_Assign((Object)localvariable3137, (Object)send22042);
// match:
send22043 = (Object)new_AST_Send((Object)localvariable3136, (Object)symbol4108, 1, (Object)localvariable3137);
assign2713 = (Object)new_AST_Assign((Object)localvariable3138, (Object)send22043);
// class
send22044 = (Object)new_AST_Send((Object)localvariable3138, (Object)SMB_class, 0);
// should
send22045 = (Object)new_AST_Send((Object)send22044, (Object)symbol4176, 0);
// =
send22046 = (Object)new_AST_Send((Object)send22045, (Object)SMB__equal, 1, (Object)classreference612);
// selector
send22047 = (Object)new_AST_Send((Object)localvariable3138, (Object)symbol3927, 0);
// printString
send22048 = (Object)new_AST_Send((Object)send22047, (Object)symbol4111, 0);
// should
send22049 = (Object)new_AST_Send((Object)send22048, (Object)symbol4176, 0);
string2545 = (Object)new_Type_String(L"+=");
constant4281 = (Object)new_AST_Constant((Object)string2545);
// =
send22050 = (Object)new_AST_Send((Object)send22049, (Object)SMB__equal, 1, (Object)constant4281);
// parameter
send22051 = (Object)new_AST_Send((Object)localvariable3138, (Object)symbol4015, 0);
// class
send22052 = (Object)new_AST_Send((Object)send22051, (Object)SMB_class, 0);
// should
send22053 = (Object)new_AST_Send((Object)send22052, (Object)symbol4176, 0);
// =
send22054 = (Object)new_AST_Send((Object)send22053, (Object)SMB__equal, 1, (Object)classreference609);
// parameter
send22055 = (Object)new_AST_Send((Object)localvariable3138, (Object)symbol4015, 0);
// name
send22056 = (Object)new_AST_Send((Object)send22055, (Object)SMB_name, 0);
// asString
send22057 = (Object)new_AST_Send((Object)send22056, (Object)SMB_asString, 0);
// should
send22058 = (Object)new_AST_Send((Object)send22057, (Object)symbol4176, 0);
string2546 = (Object)new_Type_String(L"a");
constant4282 = (Object)new_AST_Constant((Object)string2546);
// =
send22059 = (Object)new_AST_Send((Object)send22058, (Object)SMB__equal, 1, (Object)constant4282);
// position
send22060 = (Object)new_AST_Send((Object)localvariable3137, (Object)symbol4173, 0);
// should
send22061 = (Object)new_AST_Send((Object)send22060, (Object)symbol4176, 0);
smallint1496 = (Object)new_Type_SmallInt(4);
constant4283 = (Object)new_AST_Constant((Object)smallint1496);
// =
send22062 = (Object)new_AST_Send((Object)send22061, (Object)SMB__equal, 1, (Object)constant4283);
string2547 = (Object)new_Type_String(L"|= a");
constant4284 = (Object)new_AST_Constant((Object)string2547);
// on:
send22063 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4284);
assign2714 = (Object)new_AST_Assign((Object)localvariable3137, (Object)send22063);
// match:
send22064 = (Object)new_AST_Send((Object)localvariable3136, (Object)symbol4108, 1, (Object)localvariable3137);
// should
send22065 = (Object)new_AST_Send((Object)send22064, (Object)symbol4176, 0);
// be
send22066 = (Object)new_AST_Send((Object)send22065, (Object)symbol4185, 0);
// isNil
send22067 = (Object)new_AST_Send((Object)send22066, (Object)SMB_isNil, 0);
// position
send22068 = (Object)new_AST_Send((Object)localvariable3137, (Object)symbol4173, 0);
// should
send22069 = (Object)new_AST_Send((Object)send22068, (Object)symbol4176, 0);
smallint1497 = (Object)new_Type_SmallInt(0);
constant4285 = (Object)new_AST_Constant((Object)smallint1497);
// =
send22070 = (Object)new_AST_Send((Object)send22069, (Object)SMB__equal, 1, (Object)constant4285);
string2548 = (Object)new_Type_String(L"-= abc d");
constant4286 = (Object)new_AST_Constant((Object)string2548);
// on:
send22071 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4286);
assign2715 = (Object)new_AST_Assign((Object)localvariable3137, (Object)send22071);
// match:
send22072 = (Object)new_AST_Send((Object)localvariable3136, (Object)symbol4108, 1, (Object)localvariable3137);
assign2716 = (Object)new_AST_Assign((Object)localvariable3138, (Object)send22072);
// class
send22073 = (Object)new_AST_Send((Object)localvariable3138, (Object)SMB_class, 0);
// should
send22074 = (Object)new_AST_Send((Object)send22073, (Object)symbol4176, 0);
// =
send22075 = (Object)new_AST_Send((Object)send22074, (Object)SMB__equal, 1, (Object)classreference612);
// selector
send22076 = (Object)new_AST_Send((Object)localvariable3138, (Object)symbol3927, 0);
// printString
send22077 = (Object)new_AST_Send((Object)send22076, (Object)symbol4111, 0);
// should
send22078 = (Object)new_AST_Send((Object)send22077, (Object)symbol4176, 0);
string2549 = (Object)new_Type_String(L"-=");
constant4287 = (Object)new_AST_Constant((Object)string2549);
// =
send22079 = (Object)new_AST_Send((Object)send22078, (Object)SMB__equal, 1, (Object)constant4287);
// parameter
send22080 = (Object)new_AST_Send((Object)localvariable3138, (Object)symbol4015, 0);
// name
send22081 = (Object)new_AST_Send((Object)send22080, (Object)SMB_name, 0);
// asString
send22082 = (Object)new_AST_Send((Object)send22081, (Object)SMB_asString, 0);
// should
send22083 = (Object)new_AST_Send((Object)send22082, (Object)symbol4176, 0);
string2550 = (Object)new_Type_String(L"abc");
constant4288 = (Object)new_AST_Constant((Object)string2550);
// =
send22084 = (Object)new_AST_Send((Object)send22083, (Object)SMB__equal, 1, (Object)constant4288);
// parameter
send22085 = (Object)new_AST_Send((Object)localvariable3138, (Object)symbol4015, 0);
// class
send22086 = (Object)new_AST_Send((Object)send22085, (Object)SMB_class, 0);
// should
send22087 = (Object)new_AST_Send((Object)send22086, (Object)symbol4176, 0);
// =
send22088 = (Object)new_AST_Send((Object)send22087, (Object)SMB__equal, 1, (Object)classreference609);
// position
send22089 = (Object)new_AST_Send((Object)localvariable3137, (Object)symbol4173, 0);
// should
send22090 = (Object)new_AST_Send((Object)send22089, (Object)symbol4176, 0);
smallint1498 = (Object)new_Type_SmallInt(6);
constant4289 = (Object)new_AST_Constant((Object)smallint1498);
// =
send22091 = (Object)new_AST_Send((Object)send22090, (Object)SMB__equal, 1, (Object)constant4289);
method3151 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2506, 19, assign2711, assign2712, assign2713, send22046, send22050, send22054, send22059, send22062, assign2714, send22067, send22070, assign2715, assign2716, send22075, send22079, send22084, send22088, send22091, Self);
symbol3853 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure3151 = (Object)new_Runtime_MethodClosure(method3151);
store_method((Type_Class)class534, (Type_Symbol)symbol3853, (Runtime_MethodClosure)methodclosure3151);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3139 = (Object)new_AST_Variable_named(L"parser");
localvariable3140 = (Object)new_AST_Variable_named(L"string");
localvariable3141 = (Object)new_AST_Variable_named(L"result");
array2507 = (Object)new_Type_Array_with(3, (Object)localvariable3139, (Object)localvariable3140, (Object)localvariable3141);
symbol4202 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send22092 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4202, 0);
assign2717 = (Object)new_AST_Assign((Object)localvariable3139, (Object)send22092);
string2551 = (Object)new_Type_String(L"abcd bla");
constant4290 = (Object)new_AST_Constant((Object)string2551);
// on:
send22093 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4290);
assign2718 = (Object)new_AST_Assign((Object)localvariable3140, (Object)send22093);
// match:
send22094 = (Object)new_AST_Send((Object)localvariable3139, (Object)symbol4108, 1, (Object)localvariable3140);
assign2719 = (Object)new_AST_Assign((Object)localvariable3141, (Object)send22094);
// class
send22095 = (Object)new_AST_Send((Object)localvariable3141, (Object)SMB_class, 0);
// should
send22096 = (Object)new_AST_Send((Object)send22095, (Object)symbol4176, 0);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send22097 = (Object)new_AST_Send((Object)Self, (Object)symbol3927, 0);
// symbol
send22098 = (Object)new_AST_Send((Object)send22097, (Object)symbol3975, 0);
method3152 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22098);
methodclosure3152 = (Object)new_Runtime_MethodClosure(method3152);
store_method((Type_Class)class547, (Type_Symbol)symbol4004, (Runtime_MethodClosure)methodclosure3152);

classreference617 = (Object)new_Organization_ClassReference((Type_Class)class547);
// =
send22099 = (Object)new_AST_Send((Object)send22096, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send22100 = (Object)new_AST_Send((Object)localvariable3141, (Object)symbol3927, 0);
// printString
send22101 = (Object)new_AST_Send((Object)send22100, (Object)symbol4111, 0);
// should
send22102 = (Object)new_AST_Send((Object)send22101, (Object)symbol4176, 0);
string2552 = (Object)new_Type_String(L"abcd");
constant4291 = (Object)new_AST_Constant((Object)string2552);
// =
send22103 = (Object)new_AST_Send((Object)send22102, (Object)SMB__equal, 1, (Object)constant4291);
// position
send22104 = (Object)new_AST_Send((Object)localvariable3140, (Object)symbol4173, 0);
// should
send22105 = (Object)new_AST_Send((Object)send22104, (Object)symbol4176, 0);
smallint1499 = (Object)new_Type_SmallInt(4);
constant4292 = (Object)new_AST_Constant((Object)smallint1499);
// =
send22106 = (Object)new_AST_Send((Object)send22105, (Object)SMB__equal, 1, (Object)constant4292);
string2553 = (Object)new_Type_String(L"abcd: bla");
constant4293 = (Object)new_AST_Constant((Object)string2553);
// on:
send22107 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4293);
assign2720 = (Object)new_AST_Assign((Object)localvariable3140, (Object)send22107);
// match:
send22108 = (Object)new_AST_Send((Object)localvariable3139, (Object)symbol4108, 1, (Object)localvariable3140);
// should
send22109 = (Object)new_AST_Send((Object)send22108, (Object)symbol4176, 0);
// be
send22110 = (Object)new_AST_Send((Object)send22109, (Object)symbol4185, 0);
// isNil
send22111 = (Object)new_AST_Send((Object)send22110, (Object)SMB_isNil, 0);
// position
send22112 = (Object)new_AST_Send((Object)localvariable3140, (Object)symbol4173, 0);
// should
send22113 = (Object)new_AST_Send((Object)send22112, (Object)symbol4176, 0);
smallint1500 = (Object)new_Type_SmallInt(0);
constant4294 = (Object)new_AST_Constant((Object)smallint1500);
// =
send22114 = (Object)new_AST_Send((Object)send22113, (Object)SMB__equal, 1, (Object)constant4294);
method3153 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2507, 10, assign2717, assign2718, assign2719, send22099, send22103, send22106, assign2720, send22111, send22114, Self);
symbol3881 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure3153 = (Object)new_Runtime_MethodClosure(method3153);
store_method((Type_Class)class534, (Type_Symbol)symbol3881, (Runtime_MethodClosure)methodclosure3153);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3142 = (Object)new_AST_Variable_named(L"parser");
localvariable3143 = (Object)new_AST_Variable_named(L"string");
localvariable3144 = (Object)new_AST_Variable_named(L"result");
array2508 = (Object)new_Type_Array_with(3, (Object)localvariable3142, (Object)localvariable3143, (Object)localvariable3144);
// return
send22115 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4192, 0);
assign2721 = (Object)new_AST_Assign((Object)localvariable3142, (Object)send22115);
string2554 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant4295 = (Object)new_AST_Constant((Object)string2554);
// on:
send22116 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4295);
assign2722 = (Object)new_AST_Assign((Object)localvariable3143, (Object)send22116);
// match:
send22117 = (Object)new_AST_Send((Object)localvariable3142, (Object)symbol4108, 1, (Object)localvariable3143);
assign2723 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22117);
// class
send22118 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22119 = (Object)new_AST_Send((Object)send22118, (Object)symbol4176, 0);
// =
send22120 = (Object)new_AST_Send((Object)send22119, (Object)SMB__equal, 1, (Object)classreference613);
// expression
send22121 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
assign2724 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22121);
// class
send22122 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22123 = (Object)new_AST_Send((Object)send22122, (Object)symbol4176, 0);
// =
send22124 = (Object)new_AST_Send((Object)send22123, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22125 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// class
send22126 = (Object)new_AST_Send((Object)send22125, (Object)SMB_class, 0);
// should
send22127 = (Object)new_AST_Send((Object)send22126, (Object)symbol4176, 0);
// =
send22128 = (Object)new_AST_Send((Object)send22127, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22129 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// name
send22130 = (Object)new_AST_Send((Object)send22129, (Object)SMB_name, 0);
// should
send22131 = (Object)new_AST_Send((Object)send22130, (Object)symbol4176, 0);
string2555 = (Object)new_Type_String(L"a");
constant4296 = (Object)new_AST_Constant((Object)string2555);
// =
send22132 = (Object)new_AST_Send((Object)send22131, (Object)SMB__equal, 1, (Object)constant4296);
// expression
send22133 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
assign2725 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22133);
// class
send22134 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22135 = (Object)new_AST_Send((Object)send22134, (Object)symbol4176, 0);
// =
send22136 = (Object)new_AST_Send((Object)send22135, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22137 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// class
send22138 = (Object)new_AST_Send((Object)send22137, (Object)SMB_class, 0);
// should
send22139 = (Object)new_AST_Send((Object)send22138, (Object)symbol4176, 0);
// =
send22140 = (Object)new_AST_Send((Object)send22139, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22141 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// name
send22142 = (Object)new_AST_Send((Object)send22141, (Object)SMB_name, 0);
// should
send22143 = (Object)new_AST_Send((Object)send22142, (Object)symbol4176, 0);
string2556 = (Object)new_Type_String(L"b");
constant4297 = (Object)new_AST_Constant((Object)string2556);
// =
send22144 = (Object)new_AST_Send((Object)send22143, (Object)SMB__equal, 1, (Object)constant4297);
// expression
send22145 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
assign2726 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22145);
// class
send22146 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22147 = (Object)new_AST_Send((Object)send22146, (Object)symbol4176, 0);
// =
send22148 = (Object)new_AST_Send((Object)send22147, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22149 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// class
send22150 = (Object)new_AST_Send((Object)send22149, (Object)SMB_class, 0);
// should
send22151 = (Object)new_AST_Send((Object)send22150, (Object)symbol4176, 0);
// =
send22152 = (Object)new_AST_Send((Object)send22151, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22153 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// name
send22154 = (Object)new_AST_Send((Object)send22153, (Object)SMB_name, 0);
// should
send22155 = (Object)new_AST_Send((Object)send22154, (Object)symbol4176, 0);
string2557 = (Object)new_Type_String(L"c");
constant4298 = (Object)new_AST_Constant((Object)string2557);
// =
send22156 = (Object)new_AST_Send((Object)send22155, (Object)SMB__equal, 1, (Object)constant4298);
// expression
send22157 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
// class
send22158 = (Object)new_AST_Send((Object)send22157, (Object)SMB_class, 0);
// should
send22159 = (Object)new_AST_Send((Object)send22158, (Object)symbol4176, 0);
// =
send22160 = (Object)new_AST_Send((Object)send22159, (Object)SMB__equal, 1, (Object)classreference598);
string2558 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant4299 = (Object)new_AST_Constant((Object)string2558);
// on:
send22161 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4299);
assign2727 = (Object)new_AST_Assign((Object)localvariable3143, (Object)send22161);
// match:
send22162 = (Object)new_AST_Send((Object)localvariable3142, (Object)symbol4108, 1, (Object)localvariable3143);
assign2728 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22162);
// class
send22163 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22164 = (Object)new_AST_Send((Object)send22163, (Object)symbol4176, 0);
// =
send22165 = (Object)new_AST_Send((Object)send22164, (Object)SMB__equal, 1, (Object)classreference613);
// expression
send22166 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
assign2729 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22166);
// class
send22167 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22168 = (Object)new_AST_Send((Object)send22167, (Object)symbol4176, 0);
// =
send22169 = (Object)new_AST_Send((Object)send22168, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22170 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// class
send22171 = (Object)new_AST_Send((Object)send22170, (Object)SMB_class, 0);
// should
send22172 = (Object)new_AST_Send((Object)send22171, (Object)symbol4176, 0);
// =
send22173 = (Object)new_AST_Send((Object)send22172, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22174 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// name
send22175 = (Object)new_AST_Send((Object)send22174, (Object)SMB_name, 0);
// should
send22176 = (Object)new_AST_Send((Object)send22175, (Object)symbol4176, 0);
string2559 = (Object)new_Type_String(L"a");
constant4300 = (Object)new_AST_Constant((Object)string2559);
// =
send22177 = (Object)new_AST_Send((Object)send22176, (Object)SMB__equal, 1, (Object)constant4300);
// expression
send22178 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
assign2730 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22178);
// class
send22179 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22180 = (Object)new_AST_Send((Object)send22179, (Object)symbol4176, 0);
// =
send22181 = (Object)new_AST_Send((Object)send22180, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22182 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// class
send22183 = (Object)new_AST_Send((Object)send22182, (Object)SMB_class, 0);
// should
send22184 = (Object)new_AST_Send((Object)send22183, (Object)symbol4176, 0);
// =
send22185 = (Object)new_AST_Send((Object)send22184, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22186 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// name
send22187 = (Object)new_AST_Send((Object)send22186, (Object)SMB_name, 0);
// should
send22188 = (Object)new_AST_Send((Object)send22187, (Object)symbol4176, 0);
string2560 = (Object)new_Type_String(L"b");
constant4301 = (Object)new_AST_Constant((Object)string2560);
// =
send22189 = (Object)new_AST_Send((Object)send22188, (Object)SMB__equal, 1, (Object)constant4301);
// expression
send22190 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
assign2731 = (Object)new_AST_Assign((Object)localvariable3144, (Object)send22190);
// class
send22191 = (Object)new_AST_Send((Object)localvariable3144, (Object)SMB_class, 0);
// should
send22192 = (Object)new_AST_Send((Object)send22191, (Object)symbol4176, 0);
// =
send22193 = (Object)new_AST_Send((Object)send22192, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22194 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// class
send22195 = (Object)new_AST_Send((Object)send22194, (Object)SMB_class, 0);
// should
send22196 = (Object)new_AST_Send((Object)send22195, (Object)symbol4176, 0);
// =
send22197 = (Object)new_AST_Send((Object)send22196, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22198 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4021, 0);
// name
send22199 = (Object)new_AST_Send((Object)send22198, (Object)SMB_name, 0);
// should
send22200 = (Object)new_AST_Send((Object)send22199, (Object)symbol4176, 0);
string2561 = (Object)new_Type_String(L"c");
constant4302 = (Object)new_AST_Constant((Object)string2561);
// =
send22201 = (Object)new_AST_Send((Object)send22200, (Object)SMB__equal, 1, (Object)constant4302);
// expression
send22202 = (Object)new_AST_Send((Object)localvariable3144, (Object)symbol4019, 0);
// class
send22203 = (Object)new_AST_Send((Object)send22202, (Object)SMB_class, 0);
// should
send22204 = (Object)new_AST_Send((Object)send22203, (Object)symbol4176, 0);
// =
send22205 = (Object)new_AST_Send((Object)send22204, (Object)SMB__equal, 1, (Object)classreference598);
method3154 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2508, 34, assign2721, assign2722, assign2723, send22120, assign2724, send22124, send22128, send22132, assign2725, send22136, send22140, send22144, assign2726, send22148, send22152, send22156, send22160, assign2727, assign2728, send22165, assign2729, send22169, send22173, send22177, assign2730, send22181, send22185, send22189, assign2731, send22193, send22197, send22201, send22205, Self);
symbol3873 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure3154 = (Object)new_Runtime_MethodClosure(method3154);
store_method((Type_Class)class534, (Type_Symbol)symbol3873, (Runtime_MethodClosure)methodclosure3154);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3145 = (Object)new_AST_Variable_named(L"parser");
localvariable3146 = (Object)new_AST_Variable_named(L"string");
localvariable3147 = (Object)new_AST_Variable_named(L"result");
array2509 = (Object)new_Type_Array_with(3, (Object)localvariable3145, (Object)localvariable3146, (Object)localvariable3147);
symbol4203 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send22206 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4203, 0);
assign2732 = (Object)new_AST_Assign((Object)localvariable3145, (Object)send22206);
string2562 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant4303 = (Object)new_AST_Constant((Object)string2562);
// on:
send22207 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4303);
assign2733 = (Object)new_AST_Assign((Object)localvariable3146, (Object)send22207);
// match:
send22208 = (Object)new_AST_Send((Object)localvariable3145, (Object)symbol4108, 1, (Object)localvariable3146);
assign2734 = (Object)new_AST_Assign((Object)localvariable3147, (Object)send22208);
// class
send22209 = (Object)new_AST_Send((Object)localvariable3147, (Object)SMB_class, 0);
// should
send22210 = (Object)new_AST_Send((Object)send22209, (Object)symbol4176, 0);
// =
send22211 = (Object)new_AST_Send((Object)send22210, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22212 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// class
send22213 = (Object)new_AST_Send((Object)send22212, (Object)SMB_class, 0);
// should
send22214 = (Object)new_AST_Send((Object)send22213, (Object)symbol4176, 0);
// =
send22215 = (Object)new_AST_Send((Object)send22214, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22216 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// name
send22217 = (Object)new_AST_Send((Object)send22216, (Object)SMB_name, 0);
// should
send22218 = (Object)new_AST_Send((Object)send22217, (Object)symbol4176, 0);
string2563 = (Object)new_Type_String(L"a");
constant4304 = (Object)new_AST_Constant((Object)string2563);
// =
send22219 = (Object)new_AST_Send((Object)send22218, (Object)SMB__equal, 1, (Object)constant4304);
// expression
send22220 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4019, 0);
assign2735 = (Object)new_AST_Assign((Object)localvariable3147, (Object)send22220);
// class
send22221 = (Object)new_AST_Send((Object)localvariable3147, (Object)SMB_class, 0);
// should
send22222 = (Object)new_AST_Send((Object)send22221, (Object)symbol4176, 0);
// =
send22223 = (Object)new_AST_Send((Object)send22222, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22224 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// class
send22225 = (Object)new_AST_Send((Object)send22224, (Object)SMB_class, 0);
// should
send22226 = (Object)new_AST_Send((Object)send22225, (Object)symbol4176, 0);
// =
send22227 = (Object)new_AST_Send((Object)send22226, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22228 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// name
send22229 = (Object)new_AST_Send((Object)send22228, (Object)SMB_name, 0);
// should
send22230 = (Object)new_AST_Send((Object)send22229, (Object)symbol4176, 0);
string2564 = (Object)new_Type_String(L"b");
constant4305 = (Object)new_AST_Constant((Object)string2564);
// =
send22231 = (Object)new_AST_Send((Object)send22230, (Object)SMB__equal, 1, (Object)constant4305);
// expression
send22232 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4019, 0);
assign2736 = (Object)new_AST_Assign((Object)localvariable3147, (Object)send22232);
// class
send22233 = (Object)new_AST_Send((Object)localvariable3147, (Object)SMB_class, 0);
// should
send22234 = (Object)new_AST_Send((Object)send22233, (Object)symbol4176, 0);
// =
send22235 = (Object)new_AST_Send((Object)send22234, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22236 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// class
send22237 = (Object)new_AST_Send((Object)send22236, (Object)SMB_class, 0);
// should
send22238 = (Object)new_AST_Send((Object)send22237, (Object)symbol4176, 0);
// =
send22239 = (Object)new_AST_Send((Object)send22238, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22240 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// name
send22241 = (Object)new_AST_Send((Object)send22240, (Object)SMB_name, 0);
// should
send22242 = (Object)new_AST_Send((Object)send22241, (Object)symbol4176, 0);
string2565 = (Object)new_Type_String(L"c");
constant4306 = (Object)new_AST_Constant((Object)string2565);
// =
send22243 = (Object)new_AST_Send((Object)send22242, (Object)SMB__equal, 1, (Object)constant4306);
// expression
send22244 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4019, 0);
// class
send22245 = (Object)new_AST_Send((Object)send22244, (Object)SMB_class, 0);
// should
send22246 = (Object)new_AST_Send((Object)send22245, (Object)symbol4176, 0);
// =
send22247 = (Object)new_AST_Send((Object)send22246, (Object)SMB__equal, 1, (Object)classreference598);
string2566 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant4307 = (Object)new_AST_Constant((Object)string2566);
// on:
send22248 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4307);
assign2737 = (Object)new_AST_Assign((Object)localvariable3146, (Object)send22248);
// match:
send22249 = (Object)new_AST_Send((Object)localvariable3145, (Object)symbol4108, 1, (Object)localvariable3146);
assign2738 = (Object)new_AST_Assign((Object)localvariable3147, (Object)send22249);
// class
send22250 = (Object)new_AST_Send((Object)localvariable3147, (Object)SMB_class, 0);
// should
send22251 = (Object)new_AST_Send((Object)send22250, (Object)symbol4176, 0);
// =
send22252 = (Object)new_AST_Send((Object)send22251, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22253 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// class
send22254 = (Object)new_AST_Send((Object)send22253, (Object)SMB_class, 0);
// should
send22255 = (Object)new_AST_Send((Object)send22254, (Object)symbol4176, 0);
// =
send22256 = (Object)new_AST_Send((Object)send22255, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22257 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// name
send22258 = (Object)new_AST_Send((Object)send22257, (Object)SMB_name, 0);
// should
send22259 = (Object)new_AST_Send((Object)send22258, (Object)symbol4176, 0);
string2567 = (Object)new_Type_String(L"a");
constant4308 = (Object)new_AST_Constant((Object)string2567);
// =
send22260 = (Object)new_AST_Send((Object)send22259, (Object)SMB__equal, 1, (Object)constant4308);
// expression
send22261 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4019, 0);
assign2739 = (Object)new_AST_Assign((Object)localvariable3147, (Object)send22261);
// class
send22262 = (Object)new_AST_Send((Object)localvariable3147, (Object)SMB_class, 0);
// should
send22263 = (Object)new_AST_Send((Object)send22262, (Object)symbol4176, 0);
// =
send22264 = (Object)new_AST_Send((Object)send22263, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22265 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// class
send22266 = (Object)new_AST_Send((Object)send22265, (Object)SMB_class, 0);
// should
send22267 = (Object)new_AST_Send((Object)send22266, (Object)symbol4176, 0);
// =
send22268 = (Object)new_AST_Send((Object)send22267, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22269 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// name
send22270 = (Object)new_AST_Send((Object)send22269, (Object)SMB_name, 0);
// should
send22271 = (Object)new_AST_Send((Object)send22270, (Object)symbol4176, 0);
string2568 = (Object)new_Type_String(L"b");
constant4309 = (Object)new_AST_Constant((Object)string2568);
// =
send22272 = (Object)new_AST_Send((Object)send22271, (Object)SMB__equal, 1, (Object)constant4309);
// expression
send22273 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4019, 0);
assign2740 = (Object)new_AST_Assign((Object)localvariable3147, (Object)send22273);
// class
send22274 = (Object)new_AST_Send((Object)localvariable3147, (Object)SMB_class, 0);
// should
send22275 = (Object)new_AST_Send((Object)send22274, (Object)symbol4176, 0);
// =
send22276 = (Object)new_AST_Send((Object)send22275, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22277 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// class
send22278 = (Object)new_AST_Send((Object)send22277, (Object)SMB_class, 0);
// should
send22279 = (Object)new_AST_Send((Object)send22278, (Object)symbol4176, 0);
// =
send22280 = (Object)new_AST_Send((Object)send22279, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22281 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4021, 0);
// name
send22282 = (Object)new_AST_Send((Object)send22281, (Object)SMB_name, 0);
// should
send22283 = (Object)new_AST_Send((Object)send22282, (Object)symbol4176, 0);
string2569 = (Object)new_Type_String(L"c");
constant4310 = (Object)new_AST_Constant((Object)string2569);
// =
send22284 = (Object)new_AST_Send((Object)send22283, (Object)SMB__equal, 1, (Object)constant4310);
// expression
send22285 = (Object)new_AST_Send((Object)localvariable3147, (Object)symbol4019, 0);
// class
send22286 = (Object)new_AST_Send((Object)send22285, (Object)SMB_class, 0);
// should
send22287 = (Object)new_AST_Send((Object)send22286, (Object)symbol4176, 0);
// =
send22288 = (Object)new_AST_Send((Object)send22287, (Object)SMB__equal, 1, (Object)classreference598);
method3155 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2509, 30, assign2732, assign2733, assign2734, send22211, send22215, send22219, assign2735, send22223, send22227, send22231, assign2736, send22235, send22239, send22243, send22247, assign2737, assign2738, send22252, send22256, send22260, assign2739, send22264, send22268, send22272, assign2740, send22276, send22280, send22284, send22288, Self);
symbol3863 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure3155 = (Object)new_Runtime_MethodClosure(method3155);
store_method((Type_Class)class534, (Type_Symbol)symbol3863, (Runtime_MethodClosure)methodclosure3155);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3148 = (Object)new_AST_Variable_named(L"parser");
localvariable3149 = (Object)new_AST_Variable_named(L"string");
array2510 = (Object)new_Type_Array_with(2, (Object)localvariable3148, (Object)localvariable3149);
symbol4204 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send22289 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4204, 0);
assign2741 = (Object)new_AST_Assign((Object)localvariable3148, (Object)send22289);
string2570 = (Object)new_Type_String(L"abcd ");
constant4311 = (Object)new_AST_Constant((Object)string2570);
// on:
send22290 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4311);
assign2742 = (Object)new_AST_Assign((Object)localvariable3149, (Object)send22290);
// match:
send22291 = (Object)new_AST_Send((Object)localvariable3148, (Object)symbol4108, 1, (Object)localvariable3149);
// should
send22292 = (Object)new_AST_Send((Object)send22291, (Object)symbol4176, 0);
string2571 = (Object)new_Type_String(L"abcd");
constant4312 = (Object)new_AST_Constant((Object)string2571);
// =
send22293 = (Object)new_AST_Send((Object)send22292, (Object)SMB__equal, 1, (Object)constant4312);
// position
send22294 = (Object)new_AST_Send((Object)localvariable3149, (Object)symbol4173, 0);
// should
send22295 = (Object)new_AST_Send((Object)send22294, (Object)symbol4176, 0);
smallint1501 = (Object)new_Type_SmallInt(4);
constant4313 = (Object)new_AST_Constant((Object)smallint1501);
// =
send22296 = (Object)new_AST_Send((Object)send22295, (Object)SMB__equal, 1, (Object)constant4313);
string2572 = (Object)new_Type_String(L"AbCd145 ");
constant4314 = (Object)new_AST_Constant((Object)string2572);
// on:
send22297 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4314);
assign2743 = (Object)new_AST_Assign((Object)localvariable3149, (Object)send22297);
// match:
send22298 = (Object)new_AST_Send((Object)localvariable3148, (Object)symbol4108, 1, (Object)localvariable3149);
// should
send22299 = (Object)new_AST_Send((Object)send22298, (Object)symbol4176, 0);
string2573 = (Object)new_Type_String(L"AbCd145");
constant4315 = (Object)new_AST_Constant((Object)string2573);
// =
send22300 = (Object)new_AST_Send((Object)send22299, (Object)SMB__equal, 1, (Object)constant4315);
// position
send22301 = (Object)new_AST_Send((Object)localvariable3149, (Object)symbol4173, 0);
// should
send22302 = (Object)new_AST_Send((Object)send22301, (Object)symbol4176, 0);
smallint1502 = (Object)new_Type_SmallInt(7);
constant4316 = (Object)new_AST_Constant((Object)smallint1502);
// =
send22303 = (Object)new_AST_Send((Object)send22302, (Object)SMB__equal, 1, (Object)constant4316);
string2574 = (Object)new_Type_String(L"1a");
constant4317 = (Object)new_AST_Constant((Object)string2574);
// on:
send22304 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4317);
assign2744 = (Object)new_AST_Assign((Object)localvariable3149, (Object)send22304);
// match:
send22305 = (Object)new_AST_Send((Object)localvariable3148, (Object)symbol4108, 1, (Object)localvariable3149);
// should
send22306 = (Object)new_AST_Send((Object)send22305, (Object)symbol4176, 0);
// be
send22307 = (Object)new_AST_Send((Object)send22306, (Object)symbol4185, 0);
// isNil
send22308 = (Object)new_AST_Send((Object)send22307, (Object)SMB_isNil, 0);
// position
send22309 = (Object)new_AST_Send((Object)localvariable3149, (Object)symbol4173, 0);
// should
send22310 = (Object)new_AST_Send((Object)send22309, (Object)symbol4176, 0);
smallint1503 = (Object)new_Type_SmallInt(0);
constant4318 = (Object)new_AST_Constant((Object)smallint1503);
// =
send22311 = (Object)new_AST_Send((Object)send22310, (Object)SMB__equal, 1, (Object)constant4318);
method3156 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2510, 11, assign2741, assign2742, send22293, send22296, assign2743, send22300, send22303, assign2744, send22308, send22311, Self);
symbol3855 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure3156 = (Object)new_Runtime_MethodClosure(method3156);
store_method((Type_Class)class534, (Type_Symbol)symbol3855, (Runtime_MethodClosure)methodclosure3156);


// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable3150 = (Object)new_AST_Variable_named(L"parser");
localvariable3151 = (Object)new_AST_Variable_named(L"string");
array2511 = (Object)new_Type_Array_with(2, (Object)localvariable3150, (Object)localvariable3151);
symbol4205 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send22312 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4205, 0);
assign2745 = (Object)new_AST_Assign((Object)localvariable3150, (Object)send22312);
string2575 = (Object)new_Type_String(L"a :=  b:= c := d");
constant4319 = (Object)new_AST_Constant((Object)string2575);
// on:
send22313 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4319);
assign2746 = (Object)new_AST_Assign((Object)localvariable3151, (Object)send22313);
// match:
send22314 = (Object)new_AST_Send((Object)localvariable3150, (Object)symbol4108, 1, (Object)localvariable3151);
symbol4206 = (Object)new_Type_Symbol_cached(L"collect:");
constant4320 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send22315 = (Object)new_AST_Send((Object)send22314, (Object)symbol4206, 1, (Object)constant4320);
// asArray
send22316 = (Object)new_AST_Send((Object)send22315, (Object)SMB_asArray, 0);
// should
send22317 = (Object)new_AST_Send((Object)send22316, (Object)symbol4176, 0);
localvariable3152 = (Object)new_AST_Variable_named(L"receiver");
array2512 = (Object)new_Type_Array_with(1, (Object)localvariable3152);
smallint1504 = (Object)new_Type_SmallInt(1);
constant4321 = (Object)new_AST_Constant((Object)smallint1504);
string2576 = (Object)new_Type_String(L"a");
constant4322 = (Object)new_AST_Constant((Object)string2576);
// at:put:
send22318 = (Object)new_AST_Send((Object)localvariable3152, (Object)SMB_at_put_, 2, (Object)constant4321, (Object)constant4322);
smallint1505 = (Object)new_Type_SmallInt(2);
constant4323 = (Object)new_AST_Constant((Object)smallint1505);
string2577 = (Object)new_Type_String(L"b");
constant4324 = (Object)new_AST_Constant((Object)string2577);
// at:put:
send22319 = (Object)new_AST_Send((Object)localvariable3152, (Object)SMB_at_put_, 2, (Object)constant4323, (Object)constant4324);
smallint1506 = (Object)new_Type_SmallInt(3);
constant4325 = (Object)new_AST_Constant((Object)smallint1506);
string2578 = (Object)new_Type_String(L"c");
constant4326 = (Object)new_AST_Constant((Object)string2578);
// at:put:
send22320 = (Object)new_AST_Send((Object)localvariable3152, (Object)SMB_at_put_, 2, (Object)constant4325, (Object)constant4326);
// yourself
send22321 = (Object)new_AST_Send((Object)localvariable3152, (Object)symbol3824, 0);
block1399 = (Object)new_AST_Block_with((Type_Array)array2512, (Type_Array)empty_Type_Array, 1, 4, send22318, send22319, send22320, send22321);
smallint1507 = (Object)new_Type_SmallInt(3);
constant4327 = (Object)new_AST_Constant((Object)smallint1507);
// new:
send22322 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4327);
// value:
send22323 = (Object)new_AST_Send((Object)block1399, (Object)SMB_value_, 1, (Object)send22322);
// =
send22324 = (Object)new_AST_Send((Object)send22317, (Object)SMB__equal, 1, (Object)send22323);
// position
send22325 = (Object)new_AST_Send((Object)localvariable3151, (Object)symbol4173, 0);
// should
send22326 = (Object)new_AST_Send((Object)send22325, (Object)symbol4176, 0);
smallint1508 = (Object)new_Type_SmallInt(15);
constant4328 = (Object)new_AST_Constant((Object)smallint1508);
// =
send22327 = (Object)new_AST_Send((Object)send22326, (Object)SMB__equal, 1, (Object)constant4328);
string2579 = (Object)new_Type_String(L"");
constant4329 = (Object)new_AST_Constant((Object)string2579);
// on:
send22328 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4329);
assign2747 = (Object)new_AST_Assign((Object)localvariable3151, (Object)send22328);
// match:
send22329 = (Object)new_AST_Send((Object)localvariable3150, (Object)symbol4108, 1, (Object)localvariable3151);
// should
send22330 = (Object)new_AST_Send((Object)send22329, (Object)symbol4176, 0);
// not
send22331 = (Object)new_AST_Send((Object)send22330, (Object)SMB_not, 0);
// be
send22332 = (Object)new_AST_Send((Object)send22331, (Object)symbol4185, 0);
// isNil
send22333 = (Object)new_AST_Send((Object)send22332, (Object)SMB_isNil, 0);
method3157 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2511, 7, assign2745, assign2746, send22324, send22327, assign2747, send22333, Self);
symbol3891 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure3157 = (Object)new_Runtime_MethodClosure(method3157);
store_method((Type_Class)class534, (Type_Symbol)symbol3891, (Runtime_MethodClosure)methodclosure3157);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable3153 = (Object)new_AST_Variable_named(L"parser");
localvariable3154 = (Object)new_AST_Variable_named(L"string");
array2513 = (Object)new_Type_Array_with(2, (Object)localvariable3153, (Object)localvariable3154);
// string
send22334 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol3980, 0);
assign2748 = (Object)new_AST_Assign((Object)localvariable3153, (Object)send22334);
string2580 = (Object)new_Type_String(L"");
constant4330 = (Object)new_AST_Constant((Object)string2580);
// on:
send22335 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4330);
assign2749 = (Object)new_AST_Assign((Object)localvariable3154, (Object)send22335);
// match:
send22336 = (Object)new_AST_Send((Object)localvariable3153, (Object)symbol4108, 1, (Object)localvariable3154);
// should
send22337 = (Object)new_AST_Send((Object)send22336, (Object)symbol4176, 0);
// be
send22338 = (Object)new_AST_Send((Object)send22337, (Object)symbol4185, 0);
// isNil
send22339 = (Object)new_AST_Send((Object)send22338, (Object)SMB_isNil, 0);
// position
send22340 = (Object)new_AST_Send((Object)localvariable3154, (Object)symbol4173, 0);
// should
send22341 = (Object)new_AST_Send((Object)send22340, (Object)symbol4176, 0);
smallint1509 = (Object)new_Type_SmallInt(0);
constant4331 = (Object)new_AST_Constant((Object)smallint1509);
// =
send22342 = (Object)new_AST_Send((Object)send22341, (Object)SMB__equal, 1, (Object)constant4331);
string2581 = (Object)new_Type_String(L"\'abc\'");
constant4332 = (Object)new_AST_Constant((Object)string2581);
// on:
send22343 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4332);
assign2750 = (Object)new_AST_Assign((Object)localvariable3154, (Object)send22343);
// match:
send22344 = (Object)new_AST_Send((Object)localvariable3153, (Object)symbol4108, 1, (Object)localvariable3154);
// should
send22345 = (Object)new_AST_Send((Object)send22344, (Object)symbol4176, 0);
string2582 = (Object)new_Type_String(L"abc");
constant4333 = (Object)new_AST_Constant((Object)string2582);
// =
send22346 = (Object)new_AST_Send((Object)send22345, (Object)SMB__equal, 1, (Object)constant4333);
// position
send22347 = (Object)new_AST_Send((Object)localvariable3154, (Object)symbol4173, 0);
// should
send22348 = (Object)new_AST_Send((Object)send22347, (Object)symbol4176, 0);
smallint1510 = (Object)new_Type_SmallInt(5);
constant4334 = (Object)new_AST_Constant((Object)smallint1510);
// =
send22349 = (Object)new_AST_Send((Object)send22348, (Object)SMB__equal, 1, (Object)constant4334);
string2583 = (Object)new_Type_String(L"\'abc\'\'");
constant4335 = (Object)new_AST_Constant((Object)string2583);
// on:
send22350 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4335);
assign2751 = (Object)new_AST_Assign((Object)localvariable3154, (Object)send22350);
// match:
send22351 = (Object)new_AST_Send((Object)localvariable3153, (Object)symbol4108, 1, (Object)localvariable3154);
// should
send22352 = (Object)new_AST_Send((Object)send22351, (Object)symbol4176, 0);
string2584 = (Object)new_Type_String(L"abc");
constant4336 = (Object)new_AST_Constant((Object)string2584);
// =
send22353 = (Object)new_AST_Send((Object)send22352, (Object)SMB__equal, 1, (Object)constant4336);
// position
send22354 = (Object)new_AST_Send((Object)localvariable3154, (Object)symbol4173, 0);
// should
send22355 = (Object)new_AST_Send((Object)send22354, (Object)symbol4176, 0);
smallint1511 = (Object)new_Type_SmallInt(5);
constant4337 = (Object)new_AST_Constant((Object)smallint1511);
// =
send22356 = (Object)new_AST_Send((Object)send22355, (Object)SMB__equal, 1, (Object)constant4337);
string2585 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant4338 = (Object)new_AST_Constant((Object)string2585);
// on:
send22357 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4338);
assign2752 = (Object)new_AST_Assign((Object)localvariable3154, (Object)send22357);
// match:
send22358 = (Object)new_AST_Send((Object)localvariable3153, (Object)symbol4108, 1, (Object)localvariable3154);
// should
send22359 = (Object)new_AST_Send((Object)send22358, (Object)symbol4176, 0);
string2586 = (Object)new_Type_String(L"abc\'d");
constant4339 = (Object)new_AST_Constant((Object)string2586);
// =
send22360 = (Object)new_AST_Send((Object)send22359, (Object)SMB__equal, 1, (Object)constant4339);
// position
send22361 = (Object)new_AST_Send((Object)localvariable3154, (Object)symbol4173, 0);
// should
send22362 = (Object)new_AST_Send((Object)send22361, (Object)symbol4176, 0);
smallint1512 = (Object)new_Type_SmallInt(8);
constant4340 = (Object)new_AST_Constant((Object)smallint1512);
// =
send22363 = (Object)new_AST_Send((Object)send22362, (Object)SMB__equal, 1, (Object)constant4340);
method3158 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2513, 14, assign2748, assign2749, send22339, send22342, assign2750, send22346, send22349, assign2751, send22353, send22356, assign2752, send22360, send22363, Self);
symbol3875 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure3158 = (Object)new_Runtime_MethodClosure(method3158);
store_method((Type_Class)class534, (Type_Symbol)symbol3875, (Runtime_MethodClosure)methodclosure3158);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable3155 = (Object)new_AST_Variable_named(L"parser");
localvariable3156 = (Object)new_AST_Variable_named(L"string");
localvariable3157 = (Object)new_AST_Variable_named(L"message");
localvariable3158 = (Object)new_AST_Variable_named(L"return");
array2514 = (Object)new_Type_Array_with(4, (Object)localvariable3155, (Object)localvariable3156, (Object)localvariable3157, (Object)localvariable3158);
// messageExpression
send22364 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4190, 0);
assign2753 = (Object)new_AST_Assign((Object)localvariable3155, (Object)send22364);
string2587 = (Object)new_Type_String(L"self do: this and: that");
constant4341 = (Object)new_AST_Constant((Object)string2587);
// on:
send22365 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4341);
assign2754 = (Object)new_AST_Assign((Object)localvariable3156, (Object)send22365);
// match:
send22366 = (Object)new_AST_Send((Object)localvariable3155, (Object)symbol4108, 1, (Object)localvariable3156);
assign2755 = (Object)new_AST_Assign((Object)localvariable3157, (Object)send22366);
// receiver
send22367 = (Object)new_AST_Send((Object)localvariable3157, (Object)symbol3992, 0);
// class
send22368 = (Object)new_AST_Send((Object)send22367, (Object)SMB_class, 0);
// should
send22369 = (Object)new_AST_Send((Object)send22368, (Object)symbol4176, 0);
// =
send22370 = (Object)new_AST_Send((Object)send22369, (Object)SMB__equal, 1, (Object)classreference611);
// return
send22371 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4192, 0);
assign2756 = (Object)new_AST_Assign((Object)localvariable3155, (Object)send22371);
string2588 = (Object)new_Type_String(L"^ self do: this and: that");
constant4342 = (Object)new_AST_Constant((Object)string2588);
// on:
send22372 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4342);
assign2757 = (Object)new_AST_Assign((Object)localvariable3156, (Object)send22372);
// match:
send22373 = (Object)new_AST_Send((Object)localvariable3155, (Object)symbol4108, 1, (Object)localvariable3156);
assign2758 = (Object)new_AST_Assign((Object)localvariable3158, (Object)send22373);
// class
send22374 = (Object)new_AST_Send((Object)localvariable3158, (Object)SMB_class, 0);
// should
send22375 = (Object)new_AST_Send((Object)send22374, (Object)symbol4176, 0);
// =
send22376 = (Object)new_AST_Send((Object)send22375, (Object)SMB__equal, 1, (Object)classreference613);
// expression
send22377 = (Object)new_AST_Send((Object)localvariable3158, (Object)symbol4019, 0);
// receiver
send22378 = (Object)new_AST_Send((Object)send22377, (Object)symbol3992, 0);
// class
send22379 = (Object)new_AST_Send((Object)send22378, (Object)SMB_class, 0);
// should
send22380 = (Object)new_AST_Send((Object)send22379, (Object)symbol4176, 0);
// =
send22381 = (Object)new_AST_Send((Object)send22380, (Object)SMB__equal, 1, (Object)classreference611);
method3159 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2514, 10, assign2753, assign2754, assign2755, send22370, assign2756, assign2757, assign2758, send22376, send22381, Self);
symbol3901 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure3159 = (Object)new_Runtime_MethodClosure(method3159);
store_method((Type_Class)class534, (Type_Symbol)symbol3901, (Runtime_MethodClosure)methodclosure3159);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable3159 = (Object)new_AST_Variable_named(L"parser");
localvariable3160 = (Object)new_AST_Variable_named(L"string");
localvariable3161 = (Object)new_AST_Variable_named(L"result");
array2515 = (Object)new_Type_Array_with(3, (Object)localvariable3159, (Object)localvariable3160, (Object)localvariable3161);
symbol4207 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send22382 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4207, 0);
assign2759 = (Object)new_AST_Assign((Object)localvariable3159, (Object)send22382);
string2589 = (Object)new_Type_String(L"abc def ghi ");
constant4343 = (Object)new_AST_Constant((Object)string2589);
// on:
send22383 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4343);
assign2760 = (Object)new_AST_Assign((Object)localvariable3160, (Object)send22383);
// match:
send22384 = (Object)new_AST_Send((Object)localvariable3159, (Object)symbol4108, 1, (Object)localvariable3160);
assign2761 = (Object)new_AST_Assign((Object)localvariable3161, (Object)send22384);
// class
send22385 = (Object)new_AST_Send((Object)localvariable3161, (Object)SMB_class, 0);
// should
send22386 = (Object)new_AST_Send((Object)send22385, (Object)symbol4176, 0);
// =
send22387 = (Object)new_AST_Send((Object)send22386, (Object)SMB__equal, 1, (Object)classreference602);
// selector
send22388 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3927, 0);
// class
send22389 = (Object)new_AST_Send((Object)send22388, (Object)SMB_class, 0);
// should
send22390 = (Object)new_AST_Send((Object)send22389, (Object)symbol4176, 0);
// =
send22391 = (Object)new_AST_Send((Object)send22390, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send22392 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3927, 0);
// selector
send22393 = (Object)new_AST_Send((Object)send22392, (Object)symbol3927, 0);
// printString
send22394 = (Object)new_AST_Send((Object)send22393, (Object)symbol4111, 0);
// should
send22395 = (Object)new_AST_Send((Object)send22394, (Object)symbol4176, 0);
string2590 = (Object)new_Type_String(L"ghi");
constant4344 = (Object)new_AST_Constant((Object)string2590);
// =
send22396 = (Object)new_AST_Send((Object)send22395, (Object)SMB__equal, 1, (Object)constant4344);
// receiver
send22397 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3992, 0);
assign2762 = (Object)new_AST_Assign((Object)localvariable3161, (Object)send22397);
// class
send22398 = (Object)new_AST_Send((Object)localvariable3161, (Object)SMB_class, 0);
// should
send22399 = (Object)new_AST_Send((Object)send22398, (Object)symbol4176, 0);
// =
send22400 = (Object)new_AST_Send((Object)send22399, (Object)SMB__equal, 1, (Object)classreference602);
// selector
send22401 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3927, 0);
// class
send22402 = (Object)new_AST_Send((Object)send22401, (Object)SMB_class, 0);
// should
send22403 = (Object)new_AST_Send((Object)send22402, (Object)symbol4176, 0);
// =
send22404 = (Object)new_AST_Send((Object)send22403, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send22405 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3927, 0);
// selector
send22406 = (Object)new_AST_Send((Object)send22405, (Object)symbol3927, 0);
// printString
send22407 = (Object)new_AST_Send((Object)send22406, (Object)symbol4111, 0);
// should
send22408 = (Object)new_AST_Send((Object)send22407, (Object)symbol4176, 0);
string2591 = (Object)new_Type_String(L"def");
constant4345 = (Object)new_AST_Constant((Object)string2591);
// =
send22409 = (Object)new_AST_Send((Object)send22408, (Object)SMB__equal, 1, (Object)constant4345);
// receiver
send22410 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3992, 0);
// class
send22411 = (Object)new_AST_Send((Object)send22410, (Object)SMB_class, 0);
// should
send22412 = (Object)new_AST_Send((Object)send22411, (Object)symbol4176, 0);
// =
send22413 = (Object)new_AST_Send((Object)send22412, (Object)SMB__equal, 1, (Object)classreference609);
// receiver
send22414 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3992, 0);
// name
send22415 = (Object)new_AST_Send((Object)send22414, (Object)SMB_name, 0);
// should
send22416 = (Object)new_AST_Send((Object)send22415, (Object)symbol4176, 0);
string2592 = (Object)new_Type_String(L"abc");
constant4346 = (Object)new_AST_Constant((Object)string2592);
// =
send22417 = (Object)new_AST_Send((Object)send22416, (Object)SMB__equal, 1, (Object)constant4346);
// position
send22418 = (Object)new_AST_Send((Object)localvariable3160, (Object)symbol4173, 0);
// should
send22419 = (Object)new_AST_Send((Object)send22418, (Object)symbol4176, 0);
smallint1513 = (Object)new_Type_SmallInt(12);
constant4347 = (Object)new_AST_Constant((Object)smallint1513);
// =
send22420 = (Object)new_AST_Send((Object)send22419, (Object)SMB__equal, 1, (Object)constant4347);
string2593 = (Object)new_Type_String(L"3");
constant4348 = (Object)new_AST_Constant((Object)string2593);
// on:
send22421 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4348);
assign2763 = (Object)new_AST_Assign((Object)localvariable3160, (Object)send22421);
// match:
send22422 = (Object)new_AST_Send((Object)localvariable3159, (Object)symbol4108, 1, (Object)localvariable3160);
assign2764 = (Object)new_AST_Assign((Object)localvariable3161, (Object)send22422);
// class
send22423 = (Object)new_AST_Send((Object)localvariable3161, (Object)SMB_class, 0);
// should
send22424 = (Object)new_AST_Send((Object)send22423, (Object)symbol4176, 0);
// =
send22425 = (Object)new_AST_Send((Object)send22424, (Object)SMB__equal, 1, (Object)classreference600);
// number
send22426 = (Object)new_AST_Send((Object)localvariable3161, (Object)symbol3969, 0);
// should
send22427 = (Object)new_AST_Send((Object)send22426, (Object)symbol4176, 0);
string2594 = (Object)new_Type_String(L"3");
constant4349 = (Object)new_AST_Constant((Object)string2594);
// =
send22428 = (Object)new_AST_Send((Object)send22427, (Object)SMB__equal, 1, (Object)constant4349);
// position
send22429 = (Object)new_AST_Send((Object)localvariable3160, (Object)symbol4173, 0);
// should
send22430 = (Object)new_AST_Send((Object)send22429, (Object)symbol4176, 0);
smallint1514 = (Object)new_Type_SmallInt(1);
constant4350 = (Object)new_AST_Constant((Object)smallint1514);
// =
send22431 = (Object)new_AST_Send((Object)send22430, (Object)SMB__equal, 1, (Object)constant4350);
method3160 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2515, 19, assign2759, assign2760, assign2761, send22387, send22391, send22396, assign2762, send22400, send22404, send22409, send22413, send22417, send22420, assign2763, assign2764, send22425, send22428, send22431, Self);
symbol3865 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure3160 = (Object)new_Runtime_MethodClosure(method3160);
store_method((Type_Class)class534, (Type_Symbol)symbol3865, (Runtime_MethodClosure)methodclosure3160);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable3162 = (Object)new_AST_Variable_named(L"parser");
localvariable3163 = (Object)new_AST_Variable_named(L"string");
localvariable3164 = (Object)new_AST_Variable_named(L"result");
array2516 = (Object)new_Type_Array_with(3, (Object)localvariable3162, (Object)localvariable3163, (Object)localvariable3164);
symbol4208 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send22432 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4208, 0);
assign2765 = (Object)new_AST_Assign((Object)localvariable3162, (Object)send22432);
string2595 = (Object)new_Type_String(L"abc ");
constant4351 = (Object)new_AST_Constant((Object)string2595);
// on:
send22433 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4351);
assign2766 = (Object)new_AST_Assign((Object)localvariable3163, (Object)send22433);
// match:
send22434 = (Object)new_AST_Send((Object)localvariable3162, (Object)symbol4108, 1, (Object)localvariable3163);
assign2767 = (Object)new_AST_Assign((Object)localvariable3164, (Object)send22434);
// class
send22435 = (Object)new_AST_Send((Object)localvariable3164, (Object)SMB_class, 0);
// should
send22436 = (Object)new_AST_Send((Object)send22435, (Object)symbol4176, 0);
// =
send22437 = (Object)new_AST_Send((Object)send22436, (Object)SMB__equal, 1, (Object)classreference609);
// name
send22438 = (Object)new_AST_Send((Object)localvariable3164, (Object)SMB_name, 0);
// should
send22439 = (Object)new_AST_Send((Object)send22438, (Object)symbol4176, 0);
string2596 = (Object)new_Type_String(L"abc");
constant4352 = (Object)new_AST_Constant((Object)string2596);
// =
send22440 = (Object)new_AST_Send((Object)send22439, (Object)SMB__equal, 1, (Object)constant4352);
// position
send22441 = (Object)new_AST_Send((Object)localvariable3163, (Object)symbol4173, 0);
// should
send22442 = (Object)new_AST_Send((Object)send22441, (Object)symbol4176, 0);
smallint1515 = (Object)new_Type_SmallInt(3);
constant4353 = (Object)new_AST_Constant((Object)smallint1515);
// =
send22443 = (Object)new_AST_Send((Object)send22442, (Object)SMB__equal, 1, (Object)constant4353);
string2597 = (Object)new_Type_String(L"3");
constant4354 = (Object)new_AST_Constant((Object)string2597);
// on:
send22444 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4354);
assign2768 = (Object)new_AST_Assign((Object)localvariable3163, (Object)send22444);
// match:
send22445 = (Object)new_AST_Send((Object)localvariable3162, (Object)symbol4108, 1, (Object)localvariable3163);
assign2769 = (Object)new_AST_Assign((Object)localvariable3164, (Object)send22445);
// class
send22446 = (Object)new_AST_Send((Object)localvariable3164, (Object)SMB_class, 0);
// should
send22447 = (Object)new_AST_Send((Object)send22446, (Object)symbol4176, 0);
// =
send22448 = (Object)new_AST_Send((Object)send22447, (Object)SMB__equal, 1, (Object)classreference600);
// number
send22449 = (Object)new_AST_Send((Object)localvariable3164, (Object)symbol3969, 0);
// should
send22450 = (Object)new_AST_Send((Object)send22449, (Object)symbol4176, 0);
string2598 = (Object)new_Type_String(L"3");
constant4355 = (Object)new_AST_Constant((Object)string2598);
// =
send22451 = (Object)new_AST_Send((Object)send22450, (Object)SMB__equal, 1, (Object)constant4355);
// base
send22452 = (Object)new_AST_Send((Object)localvariable3164, (Object)symbol3973, 0);
// should
send22453 = (Object)new_AST_Send((Object)send22452, (Object)symbol4176, 0);
string2599 = (Object)new_Type_String(L"10");
constant4356 = (Object)new_AST_Constant((Object)string2599);
// =
send22454 = (Object)new_AST_Send((Object)send22453, (Object)SMB__equal, 1, (Object)constant4356);
// position
send22455 = (Object)new_AST_Send((Object)localvariable3163, (Object)symbol4173, 0);
// should
send22456 = (Object)new_AST_Send((Object)send22455, (Object)symbol4176, 0);
smallint1516 = (Object)new_Type_SmallInt(1);
constant4357 = (Object)new_AST_Constant((Object)smallint1516);
// =
send22457 = (Object)new_AST_Send((Object)send22456, (Object)SMB__equal, 1, (Object)constant4357);
method3161 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2516, 13, assign2765, assign2766, assign2767, send22437, send22440, send22443, assign2768, assign2769, send22448, send22451, send22454, send22457, Self);
symbol3857 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure3161 = (Object)new_Runtime_MethodClosure(method3161);
store_method((Type_Class)class534, (Type_Symbol)symbol3857, (Runtime_MethodClosure)methodclosure3161);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable3165 = (Object)new_AST_Variable_named(L"parser");
localvariable3166 = (Object)new_AST_Variable_named(L"string");
localvariable3167 = (Object)new_AST_Variable_named(L"result");
localvariable3168 = (Object)new_AST_Variable_named(L"arg");
array2517 = (Object)new_Type_Array_with(4, (Object)localvariable3165, (Object)localvariable3166, (Object)localvariable3167, (Object)localvariable3168);
symbol4209 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send22458 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4209, 0);
assign2770 = (Object)new_AST_Assign((Object)localvariable3165, (Object)send22458);
string2600 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant4358 = (Object)new_AST_Constant((Object)string2600);
// on:
send22459 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4358);
assign2771 = (Object)new_AST_Assign((Object)localvariable3166, (Object)send22459);
// match:
send22460 = (Object)new_AST_Send((Object)localvariable3165, (Object)symbol4108, 1, (Object)localvariable3166);
assign2772 = (Object)new_AST_Assign((Object)localvariable3167, (Object)send22460);
// class
send22461 = (Object)new_AST_Send((Object)localvariable3167, (Object)SMB_class, 0);
// should
send22462 = (Object)new_AST_Send((Object)send22461, (Object)symbol4176, 0);

// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable3169 = (Object)new_AST_Variable_named(L"anObject");
array2518 = (Object)new_Type_Array_with(1, (Object)localvariable3169);
assign2773 = (Object)new_AST_Assign((Object)instancevariable819, (Object)localvariable3169);
method3162 = (Object)new_AST_Method_with((Type_Array)array2518, (Type_Array)empty_Type_Array, 2, assign2773, Self);
methodclosure3162 = (Object)new_Runtime_MethodClosure(method3162);
store_method((Type_Class)class571, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure3162);


// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method3163 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable819);
methodclosure3163 = (Object)new_Runtime_MethodClosure(method3163);
store_method((Type_Class)class571, (Type_Symbol)symbol3928, (Runtime_MethodClosure)methodclosure3163);

classreference618 = (Object)new_Organization_ClassReference((Type_Class)class571);
// =
send22463 = (Object)new_AST_Send((Object)send22462, (Object)SMB__equal, 1, (Object)classreference618);
// keywords
send22464 = (Object)new_AST_Send((Object)localvariable3167, (Object)symbol4002, 0);
// asArray
send22465 = (Object)new_AST_Send((Object)send22464, (Object)SMB_asArray, 0);
constant4359 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send22466 = (Object)new_AST_Send((Object)send22465, (Object)symbol4206, 1, (Object)constant4359);
// should
send22467 = (Object)new_AST_Send((Object)send22466, (Object)symbol4176, 0);
localvariable3170 = (Object)new_AST_Variable_named(L"receiver");
array2519 = (Object)new_Type_Array_with(1, (Object)localvariable3170);
smallint1517 = (Object)new_Type_SmallInt(1);
constant4360 = (Object)new_AST_Constant((Object)smallint1517);
symbol4210 = (Object)new_Type_Symbol_cached(L"abc");
constant4361 = (Object)new_AST_Constant((Object)symbol4210);
// at:put:
send22468 = (Object)new_AST_Send((Object)localvariable3170, (Object)SMB_at_put_, 2, (Object)constant4360, (Object)constant4361);
smallint1518 = (Object)new_Type_SmallInt(2);
constant4362 = (Object)new_AST_Constant((Object)smallint1518);
symbol4211 = (Object)new_Type_Symbol_cached(L"def");
constant4363 = (Object)new_AST_Constant((Object)symbol4211);
// at:put:
send22469 = (Object)new_AST_Send((Object)localvariable3170, (Object)SMB_at_put_, 2, (Object)constant4362, (Object)constant4363);
smallint1519 = (Object)new_Type_SmallInt(3);
constant4364 = (Object)new_AST_Constant((Object)smallint1519);
symbol4212 = (Object)new_Type_Symbol_cached(L"ghi");
constant4365 = (Object)new_AST_Constant((Object)symbol4212);
// at:put:
send22470 = (Object)new_AST_Send((Object)localvariable3170, (Object)SMB_at_put_, 2, (Object)constant4364, (Object)constant4365);
// yourself
send22471 = (Object)new_AST_Send((Object)localvariable3170, (Object)symbol3824, 0);
block1400 = (Object)new_AST_Block_with((Type_Array)array2519, (Type_Array)empty_Type_Array, 1, 4, send22468, send22469, send22470, send22471);
smallint1520 = (Object)new_Type_SmallInt(3);
constant4366 = (Object)new_AST_Constant((Object)smallint1520);
// new:
send22472 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4366);
// value:
send22473 = (Object)new_AST_Send((Object)block1400, (Object)SMB_value_, 1, (Object)send22472);
// =
send22474 = (Object)new_AST_Send((Object)send22467, (Object)SMB__equal, 1, (Object)send22473);
// arguments
send22475 = (Object)new_AST_Send((Object)localvariable3167, (Object)symbol3928, 0);
// first
send22476 = (Object)new_AST_Send((Object)send22475, (Object)symbol3961, 0);
assign2774 = (Object)new_AST_Assign((Object)localvariable3168, (Object)send22476);
// class
send22477 = (Object)new_AST_Send((Object)localvariable3168, (Object)SMB_class, 0);
// should
send22478 = (Object)new_AST_Send((Object)send22477, (Object)symbol4176, 0);
// =
send22479 = (Object)new_AST_Send((Object)send22478, (Object)SMB__equal, 1, (Object)classreference600);
// arguments
send22480 = (Object)new_AST_Send((Object)localvariable3167, (Object)symbol3928, 0);
smallint1521 = (Object)new_Type_SmallInt(2);
constant4367 = (Object)new_AST_Constant((Object)smallint1521);
// at:
send22481 = (Object)new_AST_Send((Object)send22480, (Object)SMB_at_, 1, (Object)constant4367);
assign2775 = (Object)new_AST_Assign((Object)localvariable3168, (Object)send22481);
// class
send22482 = (Object)new_AST_Send((Object)localvariable3168, (Object)SMB_class, 0);
// should
send22483 = (Object)new_AST_Send((Object)send22482, (Object)symbol4176, 0);
// =
send22484 = (Object)new_AST_Send((Object)send22483, (Object)SMB__equal, 1, (Object)classreference601);
// arguments
send22485 = (Object)new_AST_Send((Object)localvariable3167, (Object)symbol3928, 0);
smallint1522 = (Object)new_Type_SmallInt(3);
constant4368 = (Object)new_AST_Constant((Object)smallint1522);
// at:
send22486 = (Object)new_AST_Send((Object)send22485, (Object)SMB_at_, 1, (Object)constant4368);
assign2776 = (Object)new_AST_Assign((Object)localvariable3168, (Object)send22486);
// class
send22487 = (Object)new_AST_Send((Object)localvariable3168, (Object)SMB_class, 0);
// should
send22488 = (Object)new_AST_Send((Object)send22487, (Object)symbol4176, 0);
// =
send22489 = (Object)new_AST_Send((Object)send22488, (Object)SMB__equal, 1, (Object)classreference602);
// atEnd
send22490 = (Object)new_AST_Send((Object)localvariable3166, (Object)SMB_atEnd, 0);
// should
send22491 = (Object)new_AST_Send((Object)send22490, (Object)symbol4176, 0);
// be
send22492 = (Object)new_AST_Send((Object)send22491, (Object)symbol4185, 0);
// true
send22493 = (Object)new_AST_Send((Object)send22492, (Object)symbol4194, 0);
string2601 = (Object)new_Type_String(L"<abc> ");
constant4369 = (Object)new_AST_Constant((Object)string2601);
// on:
send22494 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4369);
assign2777 = (Object)new_AST_Assign((Object)localvariable3166, (Object)send22494);
// match:
send22495 = (Object)new_AST_Send((Object)localvariable3165, (Object)symbol4108, 1, (Object)localvariable3166);
assign2778 = (Object)new_AST_Assign((Object)localvariable3167, (Object)send22495);
// class
send22496 = (Object)new_AST_Send((Object)localvariable3167, (Object)SMB_class, 0);
// should
send22497 = (Object)new_AST_Send((Object)send22496, (Object)symbol4176, 0);
classreference619 = (Object)new_Organization_ClassReference((Type_Class)class549);
// =
send22498 = (Object)new_AST_Send((Object)send22497, (Object)SMB__equal, 1, (Object)classreference619);
// selector
send22499 = (Object)new_AST_Send((Object)localvariable3167, (Object)symbol3927, 0);
// asString
send22500 = (Object)new_AST_Send((Object)send22499, (Object)SMB_asString, 0);
// should
send22501 = (Object)new_AST_Send((Object)send22500, (Object)symbol4176, 0);
string2602 = (Object)new_Type_String(L"abc");
constant4370 = (Object)new_AST_Constant((Object)string2602);
// =
send22502 = (Object)new_AST_Send((Object)send22501, (Object)SMB__equal, 1, (Object)constant4370);
// position
send22503 = (Object)new_AST_Send((Object)localvariable3166, (Object)symbol4173, 0);
// should
send22504 = (Object)new_AST_Send((Object)send22503, (Object)symbol4176, 0);
smallint1523 = (Object)new_Type_SmallInt(5);
constant4371 = (Object)new_AST_Constant((Object)smallint1523);
// =
send22505 = (Object)new_AST_Send((Object)send22504, (Object)SMB__equal, 1, (Object)constant4371);
string2603 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant4372 = (Object)new_AST_Constant((Object)string2603);
// on:
send22506 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4372);
assign2779 = (Object)new_AST_Assign((Object)localvariable3166, (Object)send22506);
// match:
send22507 = (Object)new_AST_Send((Object)localvariable3165, (Object)symbol4108, 1, (Object)localvariable3166);
assign2780 = (Object)new_AST_Assign((Object)localvariable3167, (Object)send22507);
// class
send22508 = (Object)new_AST_Send((Object)localvariable3167, (Object)SMB_class, 0);
// should
send22509 = (Object)new_AST_Send((Object)send22508, (Object)symbol4176, 0);
// =
send22510 = (Object)new_AST_Send((Object)send22509, (Object)SMB__equal, 1, (Object)classreference618);
// keywords
send22511 = (Object)new_AST_Send((Object)localvariable3167, (Object)symbol4002, 0);
// asArray
send22512 = (Object)new_AST_Send((Object)send22511, (Object)SMB_asArray, 0);
constant4373 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send22513 = (Object)new_AST_Send((Object)send22512, (Object)symbol4206, 1, (Object)constant4373);
// should
send22514 = (Object)new_AST_Send((Object)send22513, (Object)symbol4176, 0);
localvariable3171 = (Object)new_AST_Variable_named(L"receiver");
array2520 = (Object)new_Type_Array_with(1, (Object)localvariable3171);
smallint1524 = (Object)new_Type_SmallInt(1);
constant4374 = (Object)new_AST_Constant((Object)smallint1524);
string2604 = (Object)new_Type_String(L"temps");
constant4375 = (Object)new_AST_Constant((Object)string2604);
// at:put:
send22515 = (Object)new_AST_Send((Object)localvariable3171, (Object)SMB_at_put_, 2, (Object)constant4374, (Object)constant4375);
smallint1525 = (Object)new_Type_SmallInt(2);
constant4376 = (Object)new_AST_Constant((Object)smallint1525);
string2605 = (Object)new_Type_String(L"annotations");
constant4377 = (Object)new_AST_Constant((Object)string2605);
// at:put:
send22516 = (Object)new_AST_Send((Object)localvariable3171, (Object)SMB_at_put_, 2, (Object)constant4376, (Object)constant4377);
smallint1526 = (Object)new_Type_SmallInt(3);
constant4378 = (Object)new_AST_Constant((Object)smallint1526);
string2606 = (Object)new_Type_String(L"statements");
constant4379 = (Object)new_AST_Constant((Object)string2606);
// at:put:
send22517 = (Object)new_AST_Send((Object)localvariable3171, (Object)SMB_at_put_, 2, (Object)constant4378, (Object)constant4379);
// yourself
send22518 = (Object)new_AST_Send((Object)localvariable3171, (Object)symbol3824, 0);
block1401 = (Object)new_AST_Block_with((Type_Array)array2520, (Type_Array)empty_Type_Array, 1, 4, send22515, send22516, send22517, send22518);
smallint1527 = (Object)new_Type_SmallInt(3);
constant4380 = (Object)new_AST_Constant((Object)smallint1527);
// new:
send22519 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4380);
// value:
send22520 = (Object)new_AST_Send((Object)block1401, (Object)SMB_value_, 1, (Object)send22519);
// =
send22521 = (Object)new_AST_Send((Object)send22514, (Object)SMB__equal, 1, (Object)send22520);
// atEnd
send22522 = (Object)new_AST_Send((Object)localvariable3166, (Object)SMB_atEnd, 0);
// should
send22523 = (Object)new_AST_Send((Object)send22522, (Object)symbol4176, 0);
// be
send22524 = (Object)new_AST_Send((Object)send22523, (Object)symbol4185, 0);
// true
send22525 = (Object)new_AST_Send((Object)send22524, (Object)symbol4194, 0);
method3164 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2517, 23, assign2770, assign2771, assign2772, send22463, send22474, assign2774, send22479, assign2775, send22484, assign2776, send22489, send22493, assign2777, assign2778, send22498, send22502, send22505, assign2779, assign2780, send22510, send22521, send22525, Self);
symbol3885 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure3164 = (Object)new_Runtime_MethodClosure(method3164);
store_method((Type_Class)class534, (Type_Symbol)symbol3885, (Runtime_MethodClosure)methodclosure3164);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable3172 = (Object)new_AST_Variable_named(L"parser");
localvariable3173 = (Object)new_AST_Variable_named(L"string");
localvariable3174 = (Object)new_AST_Variable_named(L"result");
localvariable3175 = (Object)new_AST_Variable_named(L"arg");
array2521 = (Object)new_Type_Array_with(4, (Object)localvariable3172, (Object)localvariable3173, (Object)localvariable3174, (Object)localvariable3175);
symbol4213 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send22526 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4213, 0);
assign2781 = (Object)new_AST_Assign((Object)localvariable3172, (Object)send22526);
string2607 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant4381 = (Object)new_AST_Constant((Object)string2607);
// on:
send22527 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4381);
assign2782 = (Object)new_AST_Assign((Object)localvariable3173, (Object)send22527);
// match:
send22528 = (Object)new_AST_Send((Object)localvariable3172, (Object)symbol4108, 1, (Object)localvariable3173);
assign2783 = (Object)new_AST_Assign((Object)localvariable3174, (Object)send22528);
// class
send22529 = (Object)new_AST_Send((Object)localvariable3174, (Object)SMB_class, 0);
// should
send22530 = (Object)new_AST_Send((Object)send22529, (Object)symbol4176, 0);
// =
send22531 = (Object)new_AST_Send((Object)send22530, (Object)SMB__equal, 1, (Object)classreference598);
// keywords
send22532 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol4002, 0);
// asArray
send22533 = (Object)new_AST_Send((Object)send22532, (Object)SMB_asArray, 0);
// should
send22534 = (Object)new_AST_Send((Object)send22533, (Object)symbol4176, 0);
localvariable3176 = (Object)new_AST_Variable_named(L"receiver");
array2522 = (Object)new_Type_Array_with(1, (Object)localvariable3176);
smallint1528 = (Object)new_Type_SmallInt(1);
constant4382 = (Object)new_AST_Constant((Object)smallint1528);
string2608 = (Object)new_Type_String(L"abc");
constant4383 = (Object)new_AST_Constant((Object)string2608);
// at:put:
send22535 = (Object)new_AST_Send((Object)localvariable3176, (Object)SMB_at_put_, 2, (Object)constant4382, (Object)constant4383);
smallint1529 = (Object)new_Type_SmallInt(2);
constant4384 = (Object)new_AST_Constant((Object)smallint1529);
string2609 = (Object)new_Type_String(L"def");
constant4385 = (Object)new_AST_Constant((Object)string2609);
// at:put:
send22536 = (Object)new_AST_Send((Object)localvariable3176, (Object)SMB_at_put_, 2, (Object)constant4384, (Object)constant4385);
smallint1530 = (Object)new_Type_SmallInt(3);
constant4386 = (Object)new_AST_Constant((Object)smallint1530);
string2610 = (Object)new_Type_String(L"ghi");
constant4387 = (Object)new_AST_Constant((Object)string2610);
// at:put:
send22537 = (Object)new_AST_Send((Object)localvariable3176, (Object)SMB_at_put_, 2, (Object)constant4386, (Object)constant4387);
// yourself
send22538 = (Object)new_AST_Send((Object)localvariable3176, (Object)symbol3824, 0);
block1402 = (Object)new_AST_Block_with((Type_Array)array2522, (Type_Array)empty_Type_Array, 1, 4, send22535, send22536, send22537, send22538);
smallint1531 = (Object)new_Type_SmallInt(3);
constant4388 = (Object)new_AST_Constant((Object)smallint1531);
// new:
send22539 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4388);
// value:
send22540 = (Object)new_AST_Send((Object)block1402, (Object)SMB_value_, 1, (Object)send22539);
// =
send22541 = (Object)new_AST_Send((Object)send22534, (Object)SMB__equal, 1, (Object)send22540);
// selector
send22542 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol3927, 0);
// class
send22543 = (Object)new_AST_Send((Object)send22542, (Object)SMB_class, 0);
// should
send22544 = (Object)new_AST_Send((Object)send22543, (Object)symbol4176, 0);

// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable3177 = (Object)new_AST_Variable_named(L"anObject");
array2523 = (Object)new_Type_Array_with(1, (Object)localvariable3177);
assign2784 = (Object)new_AST_Assign((Object)instancevariable793, (Object)localvariable3177);
method3165 = (Object)new_AST_Method_with((Type_Array)array2523, (Type_Array)empty_Type_Array, 2, assign2784, Self);
symbol4001 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure3165 = (Object)new_Runtime_MethodClosure(method3165);
store_method((Type_Class)class548, (Type_Symbol)symbol4001, (Runtime_MethodClosure)methodclosure3165);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol4214 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string2611 = (Object)new_Type_String(L":");
constant4389 = (Object)new_AST_Constant((Object)string2611);
// joinUsing:
send22545 = (Object)new_AST_Send((Object)instancevariable793, (Object)symbol4214, 1, (Object)constant4389);
string2612 = (Object)new_Type_String(L":");
constant4390 = (Object)new_AST_Constant((Object)string2612);
// ,
send22546 = (Object)new_AST_Send((Object)send22545, (Object)SMB__concat, 1, (Object)constant4390);
method3166 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22546);
symbol3995 = (Object)new_Type_Symbol_cached(L"selectorName");
methodclosure3166 = (Object)new_Runtime_MethodClosure(method3166);
store_method((Type_Class)class548, (Type_Symbol)symbol3995, (Runtime_MethodClosure)methodclosure3166);


// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super277 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send22547 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
assign2785 = (Object)new_AST_Assign((Object)instancevariable793, (Object)send22547);
method3167 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super277, assign2785, Self);
methodclosure3167 = (Object)new_Runtime_MethodClosure(method3167);
store_method((Type_Class)class548, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3167);


// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method3168 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable793);
methodclosure3168 = (Object)new_Runtime_MethodClosure(method3168);
store_method((Type_Class)class548, (Type_Symbol)symbol4002, (Runtime_MethodClosure)methodclosure3168);

classreference620 = (Object)new_Organization_ClassReference((Type_Class)class548);
// =
send22548 = (Object)new_AST_Send((Object)send22544, (Object)SMB__equal, 1, (Object)classreference620);
// selector
send22549 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol3927, 0);
// printString
send22550 = (Object)new_AST_Send((Object)send22549, (Object)symbol4111, 0);
// should
send22551 = (Object)new_AST_Send((Object)send22550, (Object)symbol4176, 0);
string2613 = (Object)new_Type_String(L"abc:def:ghi:");
constant4391 = (Object)new_AST_Constant((Object)string2613);
// =
send22552 = (Object)new_AST_Send((Object)send22551, (Object)SMB__equal, 1, (Object)constant4391);
// arguments
send22553 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol3928, 0);
// first
send22554 = (Object)new_AST_Send((Object)send22553, (Object)symbol3961, 0);
assign2786 = (Object)new_AST_Assign((Object)localvariable3175, (Object)send22554);
// class
send22555 = (Object)new_AST_Send((Object)localvariable3175, (Object)SMB_class, 0);
// should
send22556 = (Object)new_AST_Send((Object)send22555, (Object)symbol4176, 0);
// =
send22557 = (Object)new_AST_Send((Object)send22556, (Object)SMB__equal, 1, (Object)classreference600);
// arguments
send22558 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol3928, 0);
smallint1532 = (Object)new_Type_SmallInt(2);
constant4392 = (Object)new_AST_Constant((Object)smallint1532);
// at:
send22559 = (Object)new_AST_Send((Object)send22558, (Object)SMB_at_, 1, (Object)constant4392);
assign2787 = (Object)new_AST_Assign((Object)localvariable3175, (Object)send22559);
// class
send22560 = (Object)new_AST_Send((Object)localvariable3175, (Object)SMB_class, 0);
// should
send22561 = (Object)new_AST_Send((Object)send22560, (Object)symbol4176, 0);
// =
send22562 = (Object)new_AST_Send((Object)send22561, (Object)SMB__equal, 1, (Object)classreference601);
// arguments
send22563 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol3928, 0);
smallint1533 = (Object)new_Type_SmallInt(3);
constant4393 = (Object)new_AST_Constant((Object)smallint1533);
// at:
send22564 = (Object)new_AST_Send((Object)send22563, (Object)SMB_at_, 1, (Object)constant4393);
assign2788 = (Object)new_AST_Assign((Object)localvariable3175, (Object)send22564);
// class
send22565 = (Object)new_AST_Send((Object)localvariable3175, (Object)SMB_class, 0);
// should
send22566 = (Object)new_AST_Send((Object)send22565, (Object)symbol4176, 0);
// =
send22567 = (Object)new_AST_Send((Object)send22566, (Object)SMB__equal, 1, (Object)classreference602);
// receiver
send22568 = (Object)new_AST_Send((Object)localvariable3174, (Object)symbol3992, 0);
// class
send22569 = (Object)new_AST_Send((Object)send22568, (Object)SMB_class, 0);
// should
send22570 = (Object)new_AST_Send((Object)send22569, (Object)symbol4176, 0);
// =
send22571 = (Object)new_AST_Send((Object)send22570, (Object)SMB__equal, 1, (Object)classreference601);
// position
send22572 = (Object)new_AST_Send((Object)localvariable3173, (Object)symbol4173, 0);
// should
send22573 = (Object)new_AST_Send((Object)send22572, (Object)symbol4176, 0);
smallint1534 = (Object)new_Type_SmallInt(29);
constant4394 = (Object)new_AST_Constant((Object)smallint1534);
// =
send22574 = (Object)new_AST_Send((Object)send22573, (Object)SMB__equal, 1, (Object)constant4394);
method3169 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2521, 16, assign2781, assign2782, assign2783, send22531, send22541, send22548, send22552, assign2786, send22557, assign2787, send22562, assign2788, send22567, send22571, send22574, Self);
symbol3893 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure3169 = (Object)new_Runtime_MethodClosure(method3169);
store_method((Type_Class)class534, (Type_Symbol)symbol3893, (Runtime_MethodClosure)methodclosure3169);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable3178 = (Object)new_AST_Variable_named(L"parser");
localvariable3179 = (Object)new_AST_Variable_named(L"string");
localvariable3180 = (Object)new_AST_Variable_named(L"result");
array2524 = (Object)new_Type_Array_with(3, (Object)localvariable3178, (Object)localvariable3179, (Object)localvariable3180);
// method
send22575 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4193, 0);
assign2789 = (Object)new_AST_Assign((Object)localvariable3178, (Object)send22575);
string2614 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant4395 = (Object)new_AST_Constant((Object)string2614);
assign2790 = (Object)new_AST_Assign((Object)localvariable3179, (Object)constant4395);
// parse:
send22576 = (Object)new_AST_Send((Object)localvariable3178, (Object)symbol4120, 1, (Object)localvariable3179);
assign2791 = (Object)new_AST_Assign((Object)localvariable3180, (Object)send22576);
// hasReturnExpression
send22577 = (Object)new_AST_Send((Object)localvariable3180, (Object)symbol3945, 0);
// should
send22578 = (Object)new_AST_Send((Object)send22577, (Object)symbol4176, 0);
// be
send22579 = (Object)new_AST_Send((Object)send22578, (Object)symbol4185, 0);
// true
send22580 = (Object)new_AST_Send((Object)send22579, (Object)symbol4194, 0);
// class
send22581 = (Object)new_AST_Send((Object)localvariable3180, (Object)SMB_class, 0);
// should
send22582 = (Object)new_AST_Send((Object)send22581, (Object)symbol4176, 0);
// =
send22583 = (Object)new_AST_Send((Object)send22582, (Object)SMB__equal, 1, (Object)classreference614);
// message
send22584 = (Object)new_AST_Send((Object)localvariable3180, (Object)symbol4010, 0);
// class
send22585 = (Object)new_AST_Send((Object)send22584, (Object)SMB_class, 0);
// should
send22586 = (Object)new_AST_Send((Object)send22585, (Object)symbol4176, 0);
// =
send22587 = (Object)new_AST_Send((Object)send22586, (Object)SMB__equal, 1, (Object)classreference616);
// temporaries
send22588 = (Object)new_AST_Send((Object)localvariable3180, (Object)symbol4011, 0);
// size
send22589 = (Object)new_AST_Send((Object)send22588, (Object)SMB_size, 0);
// should
send22590 = (Object)new_AST_Send((Object)send22589, (Object)symbol4176, 0);
smallint1535 = (Object)new_Type_SmallInt(3);
constant4396 = (Object)new_AST_Constant((Object)smallint1535);
// =
send22591 = (Object)new_AST_Send((Object)send22590, (Object)SMB__equal, 1, (Object)constant4396);
// annotations
send22592 = (Object)new_AST_Send((Object)localvariable3180, (Object)symbol4008, 0);
// size
send22593 = (Object)new_AST_Send((Object)send22592, (Object)SMB_size, 0);
// should
send22594 = (Object)new_AST_Send((Object)send22593, (Object)symbol4176, 0);
smallint1536 = (Object)new_Type_SmallInt(3);
constant4397 = (Object)new_AST_Constant((Object)smallint1536);
// =
send22595 = (Object)new_AST_Send((Object)send22594, (Object)SMB__equal, 1, (Object)constant4397);
// statements
send22596 = (Object)new_AST_Send((Object)localvariable3180, (Object)symbol4007, 0);
// size
send22597 = (Object)new_AST_Send((Object)send22596, (Object)SMB_size, 0);
// should
send22598 = (Object)new_AST_Send((Object)send22597, (Object)symbol4176, 0);
smallint1537 = (Object)new_Type_SmallInt(2);
constant4398 = (Object)new_AST_Constant((Object)smallint1537);
// =
send22599 = (Object)new_AST_Send((Object)send22598, (Object)SMB__equal, 1, (Object)constant4398);
method3170 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2524, 10, assign2789, assign2790, assign2791, send22580, send22583, send22587, send22591, send22595, send22599, Self);
symbol3897 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure3170 = (Object)new_Runtime_MethodClosure(method3170);
store_method((Type_Class)class534, (Type_Symbol)symbol3897, (Runtime_MethodClosure)methodclosure3170);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable3181 = (Object)new_AST_Variable_named(L"parser");
localvariable3182 = (Object)new_AST_Variable_named(L"string");
localvariable3183 = (Object)new_AST_Variable_named(L"result");
array2525 = (Object)new_Type_Array_with(3, (Object)localvariable3181, (Object)localvariable3182, (Object)localvariable3183);
symbol4215 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send22600 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4215, 0);
assign2792 = (Object)new_AST_Assign((Object)localvariable3181, (Object)send22600);
string2615 = (Object)new_Type_String(L"a");
constant4399 = (Object)new_AST_Constant((Object)string2615);
// on:
send22601 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4399);
assign2793 = (Object)new_AST_Assign((Object)localvariable3182, (Object)send22601);
// match:
send22602 = (Object)new_AST_Send((Object)localvariable3181, (Object)symbol4108, 1, (Object)localvariable3182);
// should
send22603 = (Object)new_AST_Send((Object)send22602, (Object)symbol4176, 0);
// be
send22604 = (Object)new_AST_Send((Object)send22603, (Object)symbol4185, 0);
// isNil
send22605 = (Object)new_AST_Send((Object)send22604, (Object)SMB_isNil, 0);
// position
send22606 = (Object)new_AST_Send((Object)localvariable3182, (Object)symbol4173, 0);
// should
send22607 = (Object)new_AST_Send((Object)send22606, (Object)symbol4176, 0);
smallint1538 = (Object)new_Type_SmallInt(0);
constant4400 = (Object)new_AST_Constant((Object)smallint1538);
// =
send22608 = (Object)new_AST_Send((Object)send22607, (Object)SMB__equal, 1, (Object)constant4400);
string2616 = (Object)new_Type_String(L"$_");
constant4401 = (Object)new_AST_Constant((Object)string2616);
// on:
send22609 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4401);
assign2794 = (Object)new_AST_Assign((Object)localvariable3182, (Object)send22609);
// match:
send22610 = (Object)new_AST_Send((Object)localvariable3181, (Object)symbol4108, 1, (Object)localvariable3182);
assign2795 = (Object)new_AST_Assign((Object)localvariable3183, (Object)send22610);
// class
send22611 = (Object)new_AST_Send((Object)localvariable3183, (Object)SMB_class, 0);
// should
send22612 = (Object)new_AST_Send((Object)send22611, (Object)symbol4176, 0);

// ASTCharacter>>char
//char
// 	^ char
method3171 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable797);
symbol4124 = (Object)new_Type_Symbol_cached(L"char");
methodclosure3171 = (Object)new_Runtime_MethodClosure(method3171);
store_method((Type_Class)class554, (Type_Symbol)symbol4124, (Runtime_MethodClosure)methodclosure3171);


// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char

// Character>>char
//char
// 	^ char
method3172 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable778);
methodclosure3172 = (Object)new_Runtime_MethodClosure(method3172);
store_method((Type_Class)class537, (Type_Symbol)symbol4124, (Runtime_MethodClosure)methodclosure3172);


// Character>>=
//= other
// 	^ (other isKindOf: self class) and: [ self char = other char ].
localvariable3184 = (Object)new_AST_Variable_named(L"other");
array2526 = (Object)new_Type_Array_with(1, (Object)localvariable3184);
// class
send22613 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// isKindOf:
send22614 = (Object)new_AST_Send((Object)localvariable3184, (Object)symbol4183, 1, (Object)send22613);
// char
send22615 = (Object)new_AST_Send((Object)Self, (Object)symbol4124, 0);
// char
send22616 = (Object)new_AST_Send((Object)localvariable3184, (Object)symbol4124, 0);
// =
send22617 = (Object)new_AST_Send((Object)send22615, (Object)SMB__equal, 1, (Object)send22616);
block1403 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send22617);
// and:
send22618 = (Object)new_AST_Send((Object)send22614, (Object)symbol4179, 1, (Object)block1403);
method3173 = (Object)new_AST_Method_with((Type_Array)array2526, (Type_Array)empty_Type_Array, 1, send22618);
methodclosure3173 = (Object)new_Runtime_MethodClosure(method3173);
store_method((Type_Class)class537, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure3173);


// Character>>char:
//char: anObject
// 	char := anObject reallyAsCharacter.
localvariable3185 = (Object)new_AST_Variable_named(L"anObject");
array2527 = (Object)new_Type_Array_with(1, (Object)localvariable3185);
symbol4216 = (Object)new_Type_Symbol_cached(L"reallyAsCharacter");
// reallyAsCharacter
send22619 = (Object)new_AST_Send((Object)localvariable3185, (Object)symbol4216, 0);
assign2796 = (Object)new_AST_Assign((Object)instancevariable778, (Object)send22619);
method3174 = (Object)new_AST_Method_with((Type_Array)array2527, (Type_Array)empty_Type_Array, 2, assign2796, Self);
symbol4123 = (Object)new_Type_Symbol_cached(L"char:");
methodclosure3174 = (Object)new_Runtime_MethodClosure(method3174);
store_method((Type_Class)class537, (Type_Symbol)symbol4123, (Runtime_MethodClosure)methodclosure3174);

classreference621 = (Object)new_Organization_ClassReference((Type_Class)class537);
// new
send22620 = (Object)new_AST_Send((Object)classreference621, (Object)symbol3915, 0);
// char
send22621 = (Object)new_AST_Send((Object)Self, (Object)symbol4124, 0);
// char:
send22622 = (Object)new_AST_Send((Object)send22620, (Object)symbol4123, 1, (Object)send22621);
method3175 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22622);
symbol4126 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure3175 = (Object)new_Runtime_MethodClosure(method3175);
store_method((Type_Class)class554, (Type_Symbol)symbol4126, (Runtime_MethodClosure)methodclosure3175);


// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable3186 = (Object)new_AST_Variable_named(L"aChar");
array2528 = (Object)new_Type_Array_with(1, (Object)localvariable3186);
assign2797 = (Object)new_AST_Assign((Object)instancevariable797, (Object)localvariable3186);
method3176 = (Object)new_AST_Method_with((Type_Array)array2528, (Type_Array)empty_Type_Array, 2, assign2797, Self);
methodclosure3176 = (Object)new_Runtime_MethodClosure(method3176);
store_method((Type_Class)class554, (Type_Symbol)symbol4123, (Runtime_MethodClosure)methodclosure3176);

classreference622 = (Object)new_Organization_ClassReference((Type_Class)class554);
// =
send22623 = (Object)new_AST_Send((Object)send22612, (Object)SMB__equal, 1, (Object)classreference622);
// char
send22624 = (Object)new_AST_Send((Object)localvariable3183, (Object)symbol4124, 0);
// should
send22625 = (Object)new_AST_Send((Object)send22624, (Object)symbol4176, 0);
character18 = (Object)new_Type_Character(L'_');
constant4402 = (Object)new_AST_Constant((Object)character18);
// =
send22626 = (Object)new_AST_Send((Object)send22625, (Object)SMB__equal, 1, (Object)constant4402);
// position
send22627 = (Object)new_AST_Send((Object)localvariable3182, (Object)symbol4173, 0);
// should
send22628 = (Object)new_AST_Send((Object)send22627, (Object)symbol4176, 0);
smallint1539 = (Object)new_Type_SmallInt(2);
constant4403 = (Object)new_AST_Constant((Object)smallint1539);
// =
send22629 = (Object)new_AST_Send((Object)send22628, (Object)SMB__equal, 1, (Object)constant4403);
method3177 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2525, 10, assign2792, assign2793, send22605, send22608, assign2794, assign2795, send22623, send22626, send22629, Self);
symbol3903 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure3177 = (Object)new_Runtime_MethodClosure(method3177);
store_method((Type_Class)class534, (Type_Symbol)symbol3903, (Runtime_MethodClosure)methodclosure3177);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable3187 = (Object)new_AST_Variable_named(L"parser");
localvariable3188 = (Object)new_AST_Variable_named(L"string");
localvariable3189 = (Object)new_AST_Variable_named(L"result");
localvariable3190 = (Object)new_AST_Variable_named(L"expression");
array2529 = (Object)new_Type_Array_with(4, (Object)localvariable3187, (Object)localvariable3188, (Object)localvariable3189, (Object)localvariable3190);
symbol4217 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
// cascadedMessageExpression
send22630 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4217, 0);
assign2798 = (Object)new_AST_Assign((Object)localvariable3187, (Object)send22630);
string2617 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant4404 = (Object)new_AST_Constant((Object)string2617);
// on:
send22631 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4404);
assign2799 = (Object)new_AST_Assign((Object)localvariable3188, (Object)send22631);
// match:
send22632 = (Object)new_AST_Send((Object)localvariable3187, (Object)symbol4108, 1, (Object)localvariable3188);
assign2800 = (Object)new_AST_Assign((Object)localvariable3189, (Object)send22632);
// class
send22633 = (Object)new_AST_Send((Object)localvariable3189, (Object)SMB_class, 0);
// should
send22634 = (Object)new_AST_Send((Object)send22633, (Object)symbol4176, 0);

// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method3178 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable814);
methodclosure3178 = (Object)new_Runtime_MethodClosure(method3178);
store_method((Type_Class)class568, (Type_Symbol)symbol3992, (Runtime_MethodClosure)methodclosure3178);


// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable3191 = (Object)new_AST_Variable_named(L"anObject");
array2530 = (Object)new_Type_Array_with(1, (Object)localvariable3191);
assign2801 = (Object)new_AST_Assign((Object)instancevariable814, (Object)localvariable3191);
method3179 = (Object)new_AST_Method_with((Type_Array)array2530, (Type_Array)empty_Type_Array, 2, assign2801, Self);
methodclosure3179 = (Object)new_Runtime_MethodClosure(method3179);
store_method((Type_Class)class568, (Type_Symbol)symbol3990, (Runtime_MethodClosure)methodclosure3179);


// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method3180 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable815);
symbol3989 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure3180 = (Object)new_Runtime_MethodClosure(method3180);
store_method((Type_Class)class568, (Type_Symbol)symbol3989, (Runtime_MethodClosure)methodclosure3180);


// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable3192 = (Object)new_AST_Variable_named(L"anObject");
array2531 = (Object)new_Type_Array_with(1, (Object)localvariable3192);
assign2802 = (Object)new_AST_Assign((Object)instancevariable815, (Object)localvariable3192);
method3181 = (Object)new_AST_Method_with((Type_Array)array2531, (Type_Array)empty_Type_Array, 2, assign2802, Self);
symbol3991 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure3181 = (Object)new_Runtime_MethodClosure(method3181);
store_method((Type_Class)class568, (Type_Symbol)symbol3991, (Runtime_MethodClosure)methodclosure3181);

classreference623 = (Object)new_Organization_ClassReference((Type_Class)class568);
// =
send22635 = (Object)new_AST_Send((Object)send22634, (Object)SMB__equal, 1, (Object)classreference623);
// receiver
send22636 = (Object)new_AST_Send((Object)localvariable3189, (Object)symbol3992, 0);
// class
send22637 = (Object)new_AST_Send((Object)send22636, (Object)SMB_class, 0);
// should
send22638 = (Object)new_AST_Send((Object)send22637, (Object)symbol4176, 0);
// =
send22639 = (Object)new_AST_Send((Object)send22638, (Object)SMB__equal, 1, (Object)classreference600);
// cascades
send22640 = (Object)new_AST_Send((Object)localvariable3189, (Object)symbol3989, 0);
// size
send22641 = (Object)new_AST_Send((Object)send22640, (Object)SMB_size, 0);
// should
send22642 = (Object)new_AST_Send((Object)send22641, (Object)symbol4176, 0);
smallint1540 = (Object)new_Type_SmallInt(4);
constant4405 = (Object)new_AST_Constant((Object)smallint1540);
// =
send22643 = (Object)new_AST_Send((Object)send22642, (Object)SMB__equal, 1, (Object)constant4405);
// cascades
send22644 = (Object)new_AST_Send((Object)localvariable3189, (Object)symbol3989, 0);
smallint1541 = (Object)new_Type_SmallInt(1);
constant4406 = (Object)new_AST_Constant((Object)smallint1541);
// at:
send22645 = (Object)new_AST_Send((Object)send22644, (Object)SMB_at_, 1, (Object)constant4406);
assign2803 = (Object)new_AST_Assign((Object)localvariable3190, (Object)send22645);
// class
send22646 = (Object)new_AST_Send((Object)localvariable3190, (Object)SMB_class, 0);
// should
send22647 = (Object)new_AST_Send((Object)send22646, (Object)symbol4176, 0);
// =
send22648 = (Object)new_AST_Send((Object)send22647, (Object)SMB__equal, 1, (Object)classreference601);
// cascades
send22649 = (Object)new_AST_Send((Object)localvariable3189, (Object)symbol3989, 0);
smallint1542 = (Object)new_Type_SmallInt(2);
constant4407 = (Object)new_AST_Constant((Object)smallint1542);
// at:
send22650 = (Object)new_AST_Send((Object)send22649, (Object)SMB_at_, 1, (Object)constant4407);
assign2804 = (Object)new_AST_Assign((Object)localvariable3190, (Object)send22650);
// class
send22651 = (Object)new_AST_Send((Object)localvariable3190, (Object)SMB_class, 0);
// should
send22652 = (Object)new_AST_Send((Object)send22651, (Object)symbol4176, 0);
// =
send22653 = (Object)new_AST_Send((Object)send22652, (Object)SMB__equal, 1, (Object)classreference598);
// cascades
send22654 = (Object)new_AST_Send((Object)localvariable3189, (Object)symbol3989, 0);
smallint1543 = (Object)new_Type_SmallInt(3);
constant4408 = (Object)new_AST_Constant((Object)smallint1543);
// at:
send22655 = (Object)new_AST_Send((Object)send22654, (Object)SMB_at_, 1, (Object)constant4408);
assign2805 = (Object)new_AST_Assign((Object)localvariable3190, (Object)send22655);
// class
send22656 = (Object)new_AST_Send((Object)localvariable3190, (Object)SMB_class, 0);
// should
send22657 = (Object)new_AST_Send((Object)send22656, (Object)symbol4176, 0);
// =
send22658 = (Object)new_AST_Send((Object)send22657, (Object)SMB__equal, 1, (Object)classreference598);
// cascades
send22659 = (Object)new_AST_Send((Object)localvariable3189, (Object)symbol3989, 0);
smallint1544 = (Object)new_Type_SmallInt(4);
constant4409 = (Object)new_AST_Constant((Object)smallint1544);
// at:
send22660 = (Object)new_AST_Send((Object)send22659, (Object)SMB_at_, 1, (Object)constant4409);
assign2806 = (Object)new_AST_Assign((Object)localvariable3190, (Object)send22660);
// class
send22661 = (Object)new_AST_Send((Object)localvariable3190, (Object)SMB_class, 0);
// should
send22662 = (Object)new_AST_Send((Object)send22661, (Object)symbol4176, 0);
// =
send22663 = (Object)new_AST_Send((Object)send22662, (Object)SMB__equal, 1, (Object)classreference602);
method3182 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2529, 15, assign2798, assign2799, assign2800, send22635, send22639, send22643, assign2803, send22648, assign2804, send22653, assign2805, send22658, assign2806, send22663, Self);
symbol3847 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure3182 = (Object)new_Runtime_MethodClosure(method3182);
store_method((Type_Class)class534, (Type_Symbol)symbol3847, (Runtime_MethodClosure)methodclosure3182);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3193 = (Object)new_AST_Variable_named(L"parser");
localvariable3194 = (Object)new_AST_Variable_named(L"string");
array2532 = (Object)new_Type_Array_with(2, (Object)localvariable3193, (Object)localvariable3194);
symbol4218 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send22664 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4218, 0);
assign2807 = (Object)new_AST_Assign((Object)localvariable3193, (Object)send22664);
string2618 = (Object)new_Type_String(L"abcd:def: ");
constant4410 = (Object)new_AST_Constant((Object)string2618);
// on:
send22665 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4410);
assign2808 = (Object)new_AST_Assign((Object)localvariable3194, (Object)send22665);
// match:
send22666 = (Object)new_AST_Send((Object)localvariable3193, (Object)symbol4108, 1, (Object)localvariable3194);
// should
send22667 = (Object)new_AST_Send((Object)send22666, (Object)symbol4176, 0);
string2619 = (Object)new_Type_String(L"abcd:def:");
constant4411 = (Object)new_AST_Constant((Object)string2619);
// =
send22668 = (Object)new_AST_Send((Object)send22667, (Object)SMB__equal, 1, (Object)constant4411);
// position
send22669 = (Object)new_AST_Send((Object)localvariable3194, (Object)symbol4173, 0);
// should
send22670 = (Object)new_AST_Send((Object)send22669, (Object)symbol4176, 0);
smallint1545 = (Object)new_Type_SmallInt(9);
constant4412 = (Object)new_AST_Constant((Object)smallint1545);
// =
send22671 = (Object)new_AST_Send((Object)send22670, (Object)SMB__equal, 1, (Object)constant4412);
string2620 = (Object)new_Type_String(L"abcd ");
constant4413 = (Object)new_AST_Constant((Object)string2620);
// on:
send22672 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4413);
assign2809 = (Object)new_AST_Assign((Object)localvariable3194, (Object)send22672);
// match:
send22673 = (Object)new_AST_Send((Object)localvariable3193, (Object)symbol4108, 1, (Object)localvariable3194);
// should
send22674 = (Object)new_AST_Send((Object)send22673, (Object)symbol4176, 0);
// be
send22675 = (Object)new_AST_Send((Object)send22674, (Object)symbol4185, 0);
// isNil
send22676 = (Object)new_AST_Send((Object)send22675, (Object)SMB_isNil, 0);
// position
send22677 = (Object)new_AST_Send((Object)localvariable3194, (Object)symbol4173, 0);
// should
send22678 = (Object)new_AST_Send((Object)send22677, (Object)symbol4176, 0);
smallint1546 = (Object)new_Type_SmallInt(0);
constant4414 = (Object)new_AST_Constant((Object)smallint1546);
// =
send22679 = (Object)new_AST_Send((Object)send22678, (Object)SMB__equal, 1, (Object)constant4414);
method3183 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2532, 8, assign2807, assign2808, send22668, send22671, assign2809, send22676, send22679, Self);
symbol3870 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure3183 = (Object)new_Runtime_MethodClosure(method3183);
store_method((Type_Class)class534, (Type_Symbol)symbol3870, (Runtime_MethodClosure)methodclosure3183);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable3195 = (Object)new_AST_Variable_named(L"parser");
localvariable3196 = (Object)new_AST_Variable_named(L"string");
localvariable3197 = (Object)new_AST_Variable_named(L"result");
array2533 = (Object)new_Type_Array_with(3, (Object)localvariable3195, (Object)localvariable3196, (Object)localvariable3197);
// binaryObjectDescription
send22680 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4186, 0);
assign2810 = (Object)new_AST_Assign((Object)localvariable3195, (Object)send22680);
string2621 = (Object)new_Type_String(L"abc def ghi ");
constant4415 = (Object)new_AST_Constant((Object)string2621);
// on:
send22681 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4415);
assign2811 = (Object)new_AST_Assign((Object)localvariable3196, (Object)send22681);
// match:
send22682 = (Object)new_AST_Send((Object)localvariable3195, (Object)symbol4108, 1, (Object)localvariable3196);
assign2812 = (Object)new_AST_Assign((Object)localvariable3197, (Object)send22682);
// class
send22683 = (Object)new_AST_Send((Object)localvariable3197, (Object)SMB_class, 0);
// should
send22684 = (Object)new_AST_Send((Object)send22683, (Object)symbol4176, 0);
// =
send22685 = (Object)new_AST_Send((Object)send22684, (Object)SMB__equal, 1, (Object)classreference602);
// selector
send22686 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3927, 0);
// class
send22687 = (Object)new_AST_Send((Object)send22686, (Object)SMB_class, 0);
// should
send22688 = (Object)new_AST_Send((Object)send22687, (Object)symbol4176, 0);
// =
send22689 = (Object)new_AST_Send((Object)send22688, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send22690 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3927, 0);
// selector
send22691 = (Object)new_AST_Send((Object)send22690, (Object)symbol3927, 0);
// asString
send22692 = (Object)new_AST_Send((Object)send22691, (Object)SMB_asString, 0);
// should
send22693 = (Object)new_AST_Send((Object)send22692, (Object)symbol4176, 0);
string2622 = (Object)new_Type_String(L"ghi");
constant4416 = (Object)new_AST_Constant((Object)string2622);
// =
send22694 = (Object)new_AST_Send((Object)send22693, (Object)SMB__equal, 1, (Object)constant4416);
// receiver
send22695 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3992, 0);
assign2813 = (Object)new_AST_Assign((Object)localvariable3197, (Object)send22695);
// class
send22696 = (Object)new_AST_Send((Object)localvariable3197, (Object)SMB_class, 0);
// should
send22697 = (Object)new_AST_Send((Object)send22696, (Object)symbol4176, 0);
// =
send22698 = (Object)new_AST_Send((Object)send22697, (Object)SMB__equal, 1, (Object)classreference602);
// selector
send22699 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3927, 0);
// class
send22700 = (Object)new_AST_Send((Object)send22699, (Object)SMB_class, 0);
// should
send22701 = (Object)new_AST_Send((Object)send22700, (Object)symbol4176, 0);
// =
send22702 = (Object)new_AST_Send((Object)send22701, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send22703 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3927, 0);
// selector
send22704 = (Object)new_AST_Send((Object)send22703, (Object)symbol3927, 0);
// asString
send22705 = (Object)new_AST_Send((Object)send22704, (Object)SMB_asString, 0);
// should
send22706 = (Object)new_AST_Send((Object)send22705, (Object)symbol4176, 0);
string2623 = (Object)new_Type_String(L"def");
constant4417 = (Object)new_AST_Constant((Object)string2623);
// =
send22707 = (Object)new_AST_Send((Object)send22706, (Object)SMB__equal, 1, (Object)constant4417);
// receiver
send22708 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3992, 0);
// class
send22709 = (Object)new_AST_Send((Object)send22708, (Object)SMB_class, 0);
// should
send22710 = (Object)new_AST_Send((Object)send22709, (Object)symbol4176, 0);
// =
send22711 = (Object)new_AST_Send((Object)send22710, (Object)SMB__equal, 1, (Object)classreference609);
// receiver
send22712 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3992, 0);
// name
send22713 = (Object)new_AST_Send((Object)send22712, (Object)SMB_name, 0);
// should
send22714 = (Object)new_AST_Send((Object)send22713, (Object)symbol4176, 0);
string2624 = (Object)new_Type_String(L"abc");
constant4418 = (Object)new_AST_Constant((Object)string2624);
// =
send22715 = (Object)new_AST_Send((Object)send22714, (Object)SMB__equal, 1, (Object)constant4418);
// position
send22716 = (Object)new_AST_Send((Object)localvariable3196, (Object)symbol4173, 0);
// should
send22717 = (Object)new_AST_Send((Object)send22716, (Object)symbol4176, 0);
smallint1547 = (Object)new_Type_SmallInt(12);
constant4419 = (Object)new_AST_Constant((Object)smallint1547);
// =
send22718 = (Object)new_AST_Send((Object)send22717, (Object)SMB__equal, 1, (Object)constant4419);
string2625 = (Object)new_Type_String(L"3");
constant4420 = (Object)new_AST_Constant((Object)string2625);
// on:
send22719 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4420);
assign2814 = (Object)new_AST_Assign((Object)localvariable3196, (Object)send22719);
// match:
send22720 = (Object)new_AST_Send((Object)localvariable3195, (Object)symbol4108, 1, (Object)localvariable3196);
assign2815 = (Object)new_AST_Assign((Object)localvariable3197, (Object)send22720);
// class
send22721 = (Object)new_AST_Send((Object)localvariable3197, (Object)SMB_class, 0);
// should
send22722 = (Object)new_AST_Send((Object)send22721, (Object)symbol4176, 0);
// =
send22723 = (Object)new_AST_Send((Object)send22722, (Object)SMB__equal, 1, (Object)classreference600);
// number
send22724 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3969, 0);
// should
send22725 = (Object)new_AST_Send((Object)send22724, (Object)symbol4176, 0);
string2626 = (Object)new_Type_String(L"3");
constant4421 = (Object)new_AST_Constant((Object)string2626);
// =
send22726 = (Object)new_AST_Send((Object)send22725, (Object)SMB__equal, 1, (Object)constant4421);
// position
send22727 = (Object)new_AST_Send((Object)localvariable3196, (Object)symbol4173, 0);
// should
send22728 = (Object)new_AST_Send((Object)send22727, (Object)symbol4176, 0);
smallint1548 = (Object)new_Type_SmallInt(1);
constant4422 = (Object)new_AST_Constant((Object)smallint1548);
// =
send22729 = (Object)new_AST_Send((Object)send22728, (Object)SMB__equal, 1, (Object)constant4422);
string2627 = (Object)new_Type_String(L"abc + ghi * c ");
constant4423 = (Object)new_AST_Constant((Object)string2627);
// on:
send22730 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4423);
assign2816 = (Object)new_AST_Assign((Object)localvariable3196, (Object)send22730);
// match:
send22731 = (Object)new_AST_Send((Object)localvariable3195, (Object)symbol4108, 1, (Object)localvariable3196);
assign2817 = (Object)new_AST_Assign((Object)localvariable3197, (Object)send22731);
// class
send22732 = (Object)new_AST_Send((Object)localvariable3197, (Object)SMB_class, 0);
// should
send22733 = (Object)new_AST_Send((Object)send22732, (Object)symbol4176, 0);
// =
send22734 = (Object)new_AST_Send((Object)send22733, (Object)SMB__equal, 1, (Object)classreference601);
// selector
send22735 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3927, 0);
// printString
send22736 = (Object)new_AST_Send((Object)send22735, (Object)symbol4111, 0);
// should
send22737 = (Object)new_AST_Send((Object)send22736, (Object)symbol4176, 0);
string2628 = (Object)new_Type_String(L"*");
constant4424 = (Object)new_AST_Constant((Object)string2628);
// =
send22738 = (Object)new_AST_Send((Object)send22737, (Object)SMB__equal, 1, (Object)constant4424);
// argument
send22739 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol4000, 0);
// class
send22740 = (Object)new_AST_Send((Object)send22739, (Object)SMB_class, 0);
// should
send22741 = (Object)new_AST_Send((Object)send22740, (Object)symbol4176, 0);
// =
send22742 = (Object)new_AST_Send((Object)send22741, (Object)SMB__equal, 1, (Object)classreference609);
// argument
send22743 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol4000, 0);
// name
send22744 = (Object)new_AST_Send((Object)send22743, (Object)SMB_name, 0);
// should
send22745 = (Object)new_AST_Send((Object)send22744, (Object)symbol4176, 0);
string2629 = (Object)new_Type_String(L"c");
constant4425 = (Object)new_AST_Constant((Object)string2629);
// =
send22746 = (Object)new_AST_Send((Object)send22745, (Object)SMB__equal, 1, (Object)constant4425);
// receiver
send22747 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3992, 0);
assign2818 = (Object)new_AST_Assign((Object)localvariable3197, (Object)send22747);
// class
send22748 = (Object)new_AST_Send((Object)localvariable3197, (Object)SMB_class, 0);
// should
send22749 = (Object)new_AST_Send((Object)send22748, (Object)symbol4176, 0);
// =
send22750 = (Object)new_AST_Send((Object)send22749, (Object)SMB__equal, 1, (Object)classreference601);
// selector
send22751 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3927, 0);
// printString
send22752 = (Object)new_AST_Send((Object)send22751, (Object)symbol4111, 0);
// should
send22753 = (Object)new_AST_Send((Object)send22752, (Object)symbol4176, 0);
string2630 = (Object)new_Type_String(L"+");
constant4426 = (Object)new_AST_Constant((Object)string2630);
// =
send22754 = (Object)new_AST_Send((Object)send22753, (Object)SMB__equal, 1, (Object)constant4426);
// receiver
send22755 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3992, 0);
// class
send22756 = (Object)new_AST_Send((Object)send22755, (Object)SMB_class, 0);
// should
send22757 = (Object)new_AST_Send((Object)send22756, (Object)symbol4176, 0);
// =
send22758 = (Object)new_AST_Send((Object)send22757, (Object)SMB__equal, 1, (Object)classreference609);
// receiver
send22759 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol3992, 0);
// name
send22760 = (Object)new_AST_Send((Object)send22759, (Object)SMB_name, 0);
// should
send22761 = (Object)new_AST_Send((Object)send22760, (Object)symbol4176, 0);
string2631 = (Object)new_Type_String(L"abc");
constant4427 = (Object)new_AST_Constant((Object)string2631);
// =
send22762 = (Object)new_AST_Send((Object)send22761, (Object)SMB__equal, 1, (Object)constant4427);
// argument
send22763 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol4000, 0);
// class
send22764 = (Object)new_AST_Send((Object)send22763, (Object)SMB_class, 0);
// should
send22765 = (Object)new_AST_Send((Object)send22764, (Object)symbol4176, 0);
// =
send22766 = (Object)new_AST_Send((Object)send22765, (Object)SMB__equal, 1, (Object)classreference609);
// argument
send22767 = (Object)new_AST_Send((Object)localvariable3197, (Object)symbol4000, 0);
// name
send22768 = (Object)new_AST_Send((Object)send22767, (Object)SMB_name, 0);
// should
send22769 = (Object)new_AST_Send((Object)send22768, (Object)symbol4176, 0);
string2632 = (Object)new_Type_String(L"ghi");
constant4428 = (Object)new_AST_Constant((Object)string2632);
// =
send22770 = (Object)new_AST_Send((Object)send22769, (Object)SMB__equal, 1, (Object)constant4428);
// position
send22771 = (Object)new_AST_Send((Object)localvariable3196, (Object)symbol4173, 0);
// should
send22772 = (Object)new_AST_Send((Object)send22771, (Object)symbol4176, 0);
smallint1549 = (Object)new_Type_SmallInt(13);
constant4429 = (Object)new_AST_Constant((Object)smallint1549);
// =
send22773 = (Object)new_AST_Send((Object)send22772, (Object)SMB__equal, 1, (Object)constant4429);
method3184 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2533, 33, assign2810, assign2811, assign2812, send22685, send22689, send22694, assign2813, send22698, send22702, send22707, send22711, send22715, send22718, assign2814, assign2815, send22723, send22726, send22729, assign2816, assign2817, send22734, send22738, send22742, send22746, assign2818, send22750, send22754, send22758, send22762, send22766, send22770, send22773, Self);
symbol3867 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure3184 = (Object)new_Runtime_MethodClosure(method3184);
store_method((Type_Class)class534, (Type_Symbol)symbol3867, (Runtime_MethodClosure)methodclosure3184);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable3198 = (Object)new_AST_Variable_named(L"parser");
localvariable3199 = (Object)new_AST_Variable_named(L"string");
array2534 = (Object)new_Type_Array_with(2, (Object)localvariable3198, (Object)localvariable3199);
symbol4219 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send22774 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4219, 0);
assign2819 = (Object)new_AST_Assign((Object)localvariable3198, (Object)send22774);
string2633 = (Object)new_Type_String(L"+= a");
constant4430 = (Object)new_AST_Constant((Object)string2633);
// on:
send22775 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4430);
assign2820 = (Object)new_AST_Assign((Object)localvariable3199, (Object)send22775);
// match:
send22776 = (Object)new_AST_Send((Object)localvariable3198, (Object)symbol4108, 1, (Object)localvariable3199);
// printString
send22777 = (Object)new_AST_Send((Object)send22776, (Object)symbol4111, 0);
// should
send22778 = (Object)new_AST_Send((Object)send22777, (Object)symbol4176, 0);
string2634 = (Object)new_Type_String(L"+=");
constant4431 = (Object)new_AST_Constant((Object)string2634);
// =
send22779 = (Object)new_AST_Send((Object)send22778, (Object)SMB__equal, 1, (Object)constant4431);
// position
send22780 = (Object)new_AST_Send((Object)localvariable3199, (Object)symbol4173, 0);
// should
send22781 = (Object)new_AST_Send((Object)send22780, (Object)symbol4176, 0);
smallint1550 = (Object)new_Type_SmallInt(2);
constant4432 = (Object)new_AST_Constant((Object)smallint1550);
// =
send22782 = (Object)new_AST_Send((Object)send22781, (Object)SMB__equal, 1, (Object)constant4432);
string2635 = (Object)new_Type_String(L"|= a");
constant4433 = (Object)new_AST_Constant((Object)string2635);
// on:
send22783 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4433);
assign2821 = (Object)new_AST_Assign((Object)localvariable3199, (Object)send22783);
// match:
send22784 = (Object)new_AST_Send((Object)localvariable3198, (Object)symbol4108, 1, (Object)localvariable3199);
// printString
send22785 = (Object)new_AST_Send((Object)send22784, (Object)symbol4111, 0);
// should
send22786 = (Object)new_AST_Send((Object)send22785, (Object)symbol4176, 0);
string2636 = (Object)new_Type_String(L"|");
constant4434 = (Object)new_AST_Constant((Object)string2636);
// =
send22787 = (Object)new_AST_Send((Object)send22786, (Object)SMB__equal, 1, (Object)constant4434);
// position
send22788 = (Object)new_AST_Send((Object)localvariable3199, (Object)symbol4173, 0);
// should
send22789 = (Object)new_AST_Send((Object)send22788, (Object)symbol4176, 0);
smallint1551 = (Object)new_Type_SmallInt(1);
constant4435 = (Object)new_AST_Constant((Object)smallint1551);
// =
send22790 = (Object)new_AST_Send((Object)send22789, (Object)SMB__equal, 1, (Object)constant4435);
string2637 = (Object)new_Type_String(L"-= a");
constant4436 = (Object)new_AST_Constant((Object)string2637);
// on:
send22791 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4436);
assign2822 = (Object)new_AST_Assign((Object)localvariable3199, (Object)send22791);
// match:
send22792 = (Object)new_AST_Send((Object)localvariable3198, (Object)symbol4108, 1, (Object)localvariable3199);
// printString
send22793 = (Object)new_AST_Send((Object)send22792, (Object)symbol4111, 0);
// should
send22794 = (Object)new_AST_Send((Object)send22793, (Object)symbol4176, 0);
string2638 = (Object)new_Type_String(L"-=");
constant4437 = (Object)new_AST_Constant((Object)string2638);
// =
send22795 = (Object)new_AST_Send((Object)send22794, (Object)SMB__equal, 1, (Object)constant4437);
// position
send22796 = (Object)new_AST_Send((Object)localvariable3199, (Object)symbol4173, 0);
// should
send22797 = (Object)new_AST_Send((Object)send22796, (Object)symbol4176, 0);
smallint1552 = (Object)new_Type_SmallInt(2);
constant4438 = (Object)new_AST_Constant((Object)smallint1552);
// =
send22798 = (Object)new_AST_Send((Object)send22797, (Object)SMB__equal, 1, (Object)constant4438);
string2639 = (Object)new_Type_String(L"=- a");
constant4439 = (Object)new_AST_Constant((Object)string2639);
// on:
send22799 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4439);
assign2823 = (Object)new_AST_Assign((Object)localvariable3199, (Object)send22799);
// match:
send22800 = (Object)new_AST_Send((Object)localvariable3198, (Object)symbol4108, 1, (Object)localvariable3199);
// printString
send22801 = (Object)new_AST_Send((Object)send22800, (Object)symbol4111, 0);
// should
send22802 = (Object)new_AST_Send((Object)send22801, (Object)symbol4176, 0);
string2640 = (Object)new_Type_String(L"=");
constant4440 = (Object)new_AST_Constant((Object)string2640);
// =
send22803 = (Object)new_AST_Send((Object)send22802, (Object)SMB__equal, 1, (Object)constant4440);
// position
send22804 = (Object)new_AST_Send((Object)localvariable3199, (Object)symbol4173, 0);
// should
send22805 = (Object)new_AST_Send((Object)send22804, (Object)symbol4176, 0);
smallint1553 = (Object)new_Type_SmallInt(1);
constant4441 = (Object)new_AST_Constant((Object)smallint1553);
// =
send22806 = (Object)new_AST_Send((Object)send22805, (Object)SMB__equal, 1, (Object)constant4441);
method3185 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2534, 14, assign2819, assign2820, send22779, send22782, assign2821, send22787, send22790, assign2822, send22795, send22798, assign2823, send22803, send22806, Self);
symbol3887 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure3185 = (Object)new_Runtime_MethodClosure(method3185);
store_method((Type_Class)class534, (Type_Symbol)symbol3887, (Runtime_MethodClosure)methodclosure3185);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable3200 = (Object)new_AST_Variable_named(L"parser");
localvariable3201 = (Object)new_AST_Variable_named(L"string");
localvariable3202 = (Object)new_AST_Variable_named(L"result");
array2535 = (Object)new_Type_Array_with(3, (Object)localvariable3200, (Object)localvariable3201, (Object)localvariable3202);
symbol4220 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send22807 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4220, 0);
assign2824 = (Object)new_AST_Assign((Object)localvariable3200, (Object)send22807);
string2641 = (Object)new_Type_String(L"test: ab");
constant4442 = (Object)new_AST_Constant((Object)string2641);
// on:
send22808 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4442);
assign2825 = (Object)new_AST_Assign((Object)localvariable3201, (Object)send22808);
// match:
send22809 = (Object)new_AST_Send((Object)localvariable3200, (Object)symbol4108, 1, (Object)localvariable3201);
assign2826 = (Object)new_AST_Assign((Object)localvariable3202, (Object)send22809);
// class
send22810 = (Object)new_AST_Send((Object)localvariable3202, (Object)SMB_class, 0);
// should
send22811 = (Object)new_AST_Send((Object)send22810, (Object)symbol4176, 0);
// =
send22812 = (Object)new_AST_Send((Object)send22811, (Object)SMB__equal, 1, (Object)classreference616);
// keywords
send22813 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol4002, 0);
// should
send22814 = (Object)new_AST_Send((Object)send22813, (Object)symbol4176, 0);
string2642 = (Object)new_Type_String(L"test");
constant4443 = (Object)new_AST_Constant((Object)string2642);
// with:
send22815 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3958, 1, (Object)constant4443);
// =
send22816 = (Object)new_AST_Send((Object)send22814, (Object)SMB__equal, 1, (Object)send22815);
// parameters
send22817 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol3997, 0);
// size
send22818 = (Object)new_AST_Send((Object)send22817, (Object)SMB_size, 0);
// should
send22819 = (Object)new_AST_Send((Object)send22818, (Object)symbol4176, 0);
smallint1554 = (Object)new_Type_SmallInt(1);
constant4444 = (Object)new_AST_Constant((Object)smallint1554);
// =
send22820 = (Object)new_AST_Send((Object)send22819, (Object)SMB__equal, 1, (Object)constant4444);
// parameters
send22821 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol3997, 0);
// first
send22822 = (Object)new_AST_Send((Object)send22821, (Object)symbol3961, 0);
// should
send22823 = (Object)new_AST_Send((Object)send22822, (Object)symbol4176, 0);
// new
send22824 = (Object)new_AST_Send((Object)classreference609, (Object)symbol3915, 0);
string2643 = (Object)new_Type_String(L"ab");
constant4445 = (Object)new_AST_Constant((Object)string2643);
// name:
send22825 = (Object)new_AST_Send((Object)send22824, (Object)symbol3985, 1, (Object)constant4445);
// =
send22826 = (Object)new_AST_Send((Object)send22823, (Object)SMB__equal, 1, (Object)send22825);
// position
send22827 = (Object)new_AST_Send((Object)localvariable3201, (Object)symbol4173, 0);
// should
send22828 = (Object)new_AST_Send((Object)send22827, (Object)symbol4176, 0);
smallint1555 = (Object)new_Type_SmallInt(8);
constant4446 = (Object)new_AST_Constant((Object)smallint1555);
// =
send22829 = (Object)new_AST_Send((Object)send22828, (Object)SMB__equal, 1, (Object)constant4446);
string2644 = (Object)new_Type_String(L"bla a");
constant4447 = (Object)new_AST_Constant((Object)string2644);
// on:
send22830 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4447);
assign2827 = (Object)new_AST_Assign((Object)localvariable3201, (Object)send22830);
// match:
send22831 = (Object)new_AST_Send((Object)localvariable3200, (Object)symbol4108, 1, (Object)localvariable3201);
// should
send22832 = (Object)new_AST_Send((Object)send22831, (Object)symbol4176, 0);
// be
send22833 = (Object)new_AST_Send((Object)send22832, (Object)symbol4185, 0);
// isNil
send22834 = (Object)new_AST_Send((Object)send22833, (Object)SMB_isNil, 0);
// position
send22835 = (Object)new_AST_Send((Object)localvariable3201, (Object)symbol4173, 0);
// should
send22836 = (Object)new_AST_Send((Object)send22835, (Object)symbol4176, 0);
smallint1556 = (Object)new_Type_SmallInt(0);
constant4448 = (Object)new_AST_Constant((Object)smallint1556);
// =
send22837 = (Object)new_AST_Send((Object)send22836, (Object)SMB__equal, 1, (Object)constant4448);
string2645 = (Object)new_Type_String(L"test: d bla: c boe");
constant4449 = (Object)new_AST_Constant((Object)string2645);
// on:
send22838 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4449);
assign2828 = (Object)new_AST_Assign((Object)localvariable3201, (Object)send22838);
// match:
send22839 = (Object)new_AST_Send((Object)localvariable3200, (Object)symbol4108, 1, (Object)localvariable3201);
assign2829 = (Object)new_AST_Assign((Object)localvariable3202, (Object)send22839);
// class
send22840 = (Object)new_AST_Send((Object)localvariable3202, (Object)SMB_class, 0);
// should
send22841 = (Object)new_AST_Send((Object)send22840, (Object)symbol4176, 0);
// =
send22842 = (Object)new_AST_Send((Object)send22841, (Object)SMB__equal, 1, (Object)classreference616);
// keywords
send22843 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol4002, 0);
// should
send22844 = (Object)new_AST_Send((Object)send22843, (Object)symbol4176, 0);
symbol4221 = (Object)new_Type_Symbol_cached(L"with:with:");
string2646 = (Object)new_Type_String(L"test");
constant4450 = (Object)new_AST_Constant((Object)string2646);
string2647 = (Object)new_Type_String(L"bla");
constant4451 = (Object)new_AST_Constant((Object)string2647);
// with:with:
send22845 = (Object)new_AST_Send((Object)classreference575, (Object)symbol4221, 2, (Object)constant4450, (Object)constant4451);
// =
send22846 = (Object)new_AST_Send((Object)send22844, (Object)SMB__equal, 1, (Object)send22845);
// parameters
send22847 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol3997, 0);
// size
send22848 = (Object)new_AST_Send((Object)send22847, (Object)SMB_size, 0);
// should
send22849 = (Object)new_AST_Send((Object)send22848, (Object)symbol4176, 0);
smallint1557 = (Object)new_Type_SmallInt(2);
constant4452 = (Object)new_AST_Constant((Object)smallint1557);
// =
send22850 = (Object)new_AST_Send((Object)send22849, (Object)SMB__equal, 1, (Object)constant4452);
// parameters
send22851 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol3997, 0);
// first
send22852 = (Object)new_AST_Send((Object)send22851, (Object)symbol3961, 0);
// should
send22853 = (Object)new_AST_Send((Object)send22852, (Object)symbol4176, 0);
// new
send22854 = (Object)new_AST_Send((Object)classreference609, (Object)symbol3915, 0);
string2648 = (Object)new_Type_String(L"d");
constant4453 = (Object)new_AST_Constant((Object)string2648);
// name:
send22855 = (Object)new_AST_Send((Object)send22854, (Object)symbol3985, 1, (Object)constant4453);
// =
send22856 = (Object)new_AST_Send((Object)send22853, (Object)SMB__equal, 1, (Object)send22855);
// parameters
send22857 = (Object)new_AST_Send((Object)localvariable3202, (Object)symbol3997, 0);
symbol4222 = (Object)new_Type_Symbol_cached(L"second");
// second
send22858 = (Object)new_AST_Send((Object)send22857, (Object)symbol4222, 0);
// should
send22859 = (Object)new_AST_Send((Object)send22858, (Object)symbol4176, 0);
// new
send22860 = (Object)new_AST_Send((Object)classreference609, (Object)symbol3915, 0);
string2649 = (Object)new_Type_String(L"c");
constant4454 = (Object)new_AST_Constant((Object)string2649);
// name:
send22861 = (Object)new_AST_Send((Object)send22860, (Object)symbol3985, 1, (Object)constant4454);
// =
send22862 = (Object)new_AST_Send((Object)send22859, (Object)SMB__equal, 1, (Object)send22861);
// position
send22863 = (Object)new_AST_Send((Object)localvariable3201, (Object)symbol4173, 0);
// should
send22864 = (Object)new_AST_Send((Object)send22863, (Object)symbol4176, 0);
smallint1558 = (Object)new_Type_SmallInt(15);
constant4455 = (Object)new_AST_Constant((Object)smallint1558);
// =
send22865 = (Object)new_AST_Send((Object)send22864, (Object)SMB__equal, 1, (Object)constant4455);
method3186 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2535, 20, assign2824, assign2825, assign2826, send22812, send22816, send22820, send22826, send22829, assign2827, send22834, send22837, assign2828, assign2829, send22842, send22846, send22850, send22856, send22862, send22865, Self);
symbol3860 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure3186 = (Object)new_Runtime_MethodClosure(method3186);
store_method((Type_Class)class534, (Type_Symbol)symbol3860, (Runtime_MethodClosure)methodclosure3186);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3203 = (Object)new_AST_Variable_named(L"parser");
localvariable3204 = (Object)new_AST_Variable_named(L"string");
localvariable3205 = (Object)new_AST_Variable_named(L"result");
array2536 = (Object)new_Type_Array_with(3, (Object)localvariable3203, (Object)localvariable3204, (Object)localvariable3205);
// expression
send22866 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4019, 0);
assign2830 = (Object)new_AST_Assign((Object)localvariable3203, (Object)send22866);
string2650 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant4456 = (Object)new_AST_Constant((Object)string2650);
// on:
send22867 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4456);
assign2831 = (Object)new_AST_Assign((Object)localvariable3204, (Object)send22867);
// match:
send22868 = (Object)new_AST_Send((Object)localvariable3203, (Object)symbol4108, 1, (Object)localvariable3204);
assign2832 = (Object)new_AST_Assign((Object)localvariable3205, (Object)send22868);
// class
send22869 = (Object)new_AST_Send((Object)localvariable3205, (Object)SMB_class, 0);
// should
send22870 = (Object)new_AST_Send((Object)send22869, (Object)symbol4176, 0);
// =
send22871 = (Object)new_AST_Send((Object)send22870, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22872 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4021, 0);
// class
send22873 = (Object)new_AST_Send((Object)send22872, (Object)SMB_class, 0);
// should
send22874 = (Object)new_AST_Send((Object)send22873, (Object)symbol4176, 0);
// =
send22875 = (Object)new_AST_Send((Object)send22874, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22876 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4021, 0);
// name
send22877 = (Object)new_AST_Send((Object)send22876, (Object)SMB_name, 0);
// should
send22878 = (Object)new_AST_Send((Object)send22877, (Object)symbol4176, 0);
string2651 = (Object)new_Type_String(L"a");
constant4457 = (Object)new_AST_Constant((Object)string2651);
// =
send22879 = (Object)new_AST_Send((Object)send22878, (Object)SMB__equal, 1, (Object)constant4457);
// expression
send22880 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4019, 0);
assign2833 = (Object)new_AST_Assign((Object)localvariable3205, (Object)send22880);
// class
send22881 = (Object)new_AST_Send((Object)localvariable3205, (Object)SMB_class, 0);
// should
send22882 = (Object)new_AST_Send((Object)send22881, (Object)symbol4176, 0);
// =
send22883 = (Object)new_AST_Send((Object)send22882, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22884 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4021, 0);
// class
send22885 = (Object)new_AST_Send((Object)send22884, (Object)SMB_class, 0);
// should
send22886 = (Object)new_AST_Send((Object)send22885, (Object)symbol4176, 0);
// =
send22887 = (Object)new_AST_Send((Object)send22886, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22888 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4021, 0);
// name
send22889 = (Object)new_AST_Send((Object)send22888, (Object)SMB_name, 0);
// should
send22890 = (Object)new_AST_Send((Object)send22889, (Object)symbol4176, 0);
string2652 = (Object)new_Type_String(L"b");
constant4458 = (Object)new_AST_Constant((Object)string2652);
// =
send22891 = (Object)new_AST_Send((Object)send22890, (Object)SMB__equal, 1, (Object)constant4458);
// expression
send22892 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4019, 0);
assign2834 = (Object)new_AST_Assign((Object)localvariable3205, (Object)send22892);
// class
send22893 = (Object)new_AST_Send((Object)localvariable3205, (Object)SMB_class, 0);
// should
send22894 = (Object)new_AST_Send((Object)send22893, (Object)symbol4176, 0);
// =
send22895 = (Object)new_AST_Send((Object)send22894, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send22896 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4021, 0);
// class
send22897 = (Object)new_AST_Send((Object)send22896, (Object)SMB_class, 0);
// should
send22898 = (Object)new_AST_Send((Object)send22897, (Object)symbol4176, 0);
// =
send22899 = (Object)new_AST_Send((Object)send22898, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send22900 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4021, 0);
// name
send22901 = (Object)new_AST_Send((Object)send22900, (Object)SMB_name, 0);
// should
send22902 = (Object)new_AST_Send((Object)send22901, (Object)symbol4176, 0);
string2653 = (Object)new_Type_String(L"c");
constant4459 = (Object)new_AST_Constant((Object)string2653);
// =
send22903 = (Object)new_AST_Send((Object)send22902, (Object)SMB__equal, 1, (Object)constant4459);
// expression
send22904 = (Object)new_AST_Send((Object)localvariable3205, (Object)symbol4019, 0);
// class
send22905 = (Object)new_AST_Send((Object)send22904, (Object)SMB_class, 0);
// should
send22906 = (Object)new_AST_Send((Object)send22905, (Object)symbol4176, 0);
// =
send22907 = (Object)new_AST_Send((Object)send22906, (Object)SMB__equal, 1, (Object)classreference598);
method3187 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2536, 16, assign2830, assign2831, assign2832, send22871, send22875, send22879, assign2833, send22883, send22887, send22891, assign2834, send22895, send22899, send22903, send22907, Self);
symbol3899 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure3187 = (Object)new_Runtime_MethodClosure(method3187);
store_method((Type_Class)class534, (Type_Symbol)symbol3899, (Runtime_MethodClosure)methodclosure3187);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable3206 = (Object)new_AST_Variable_named(L"parser");
localvariable3207 = (Object)new_AST_Variable_named(L"string");
localvariable3208 = (Object)new_AST_Variable_named(L"result");
array2537 = (Object)new_Type_Array_with(3, (Object)localvariable3206, (Object)localvariable3207, (Object)localvariable3208);
symbol4223 = (Object)new_Type_Symbol_cached(L"block");
// block
send22908 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4223, 0);
assign2835 = (Object)new_AST_Assign((Object)localvariable3206, (Object)send22908);
string2654 = (Object)new_Type_String(L"[]");
constant4460 = (Object)new_AST_Constant((Object)string2654);
// on:
send22909 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4460);
assign2836 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send22909);
// match:
send22910 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2837 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send22910);
// class
send22911 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send22912 = (Object)new_AST_Send((Object)send22911, (Object)symbol4176, 0);

// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method3188 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable806);
methodclosure3188 = (Object)new_Runtime_MethodClosure(method3188);
store_method((Type_Class)class562, (Type_Symbol)symbol4011, (Runtime_MethodClosure)methodclosure3188);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable3209 = (Object)new_AST_Variable_named(L"anObject");
array2538 = (Object)new_Type_Array_with(1, (Object)localvariable3209);
assign2838 = (Object)new_AST_Assign((Object)instancevariable806, (Object)localvariable3209);
method3189 = (Object)new_AST_Method_with((Type_Array)array2538, (Type_Array)empty_Type_Array, 2, assign2838, Self);
methodclosure3189 = (Object)new_Runtime_MethodClosure(method3189);
store_method((Type_Class)class562, (Type_Symbol)symbol4012, (Runtime_MethodClosure)methodclosure3189);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// statements
send22913 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
localvariable3210 = (Object)new_AST_Variable_named(L"el");
array2539 = (Object)new_Type_Array_with(1, (Object)localvariable3210);
// isReturnExpression
send22914 = (Object)new_AST_Send((Object)localvariable3210, (Object)symbol3825, 0);
// hasReturnExpression
send22915 = (Object)new_AST_Send((Object)localvariable3210, (Object)symbol3945, 0);
block1404 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22915);
// or:
send22916 = (Object)new_AST_Send((Object)send22914, (Object)symbol4178, 1, (Object)block1404);
block1405 = (Object)new_AST_Block_with((Type_Array)array2539, (Type_Array)empty_Type_Array, 1, 1, send22916);
// anySatisfy:
send22917 = (Object)new_AST_Send((Object)send22913, (Object)symbol4177, 1, (Object)block1405);
method3190 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22917);
methodclosure3190 = (Object)new_Runtime_MethodClosure(method3190);
store_method((Type_Class)class562, (Type_Symbol)symbol3945, (Runtime_MethodClosure)methodclosure3190);


// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable3211 = (Object)new_AST_Variable_named(L"aCollection");
array2540 = (Object)new_Type_Array_with(1, (Object)localvariable3211);
assign2839 = (Object)new_AST_Assign((Object)instancevariable805, (Object)localvariable3211);
method3191 = (Object)new_AST_Method_with((Type_Array)array2540, (Type_Array)empty_Type_Array, 2, assign2839, Self);
methodclosure3191 = (Object)new_Runtime_MethodClosure(method3191);
store_method((Type_Class)class562, (Type_Symbol)symbol4016, (Runtime_MethodClosure)methodclosure3191);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super278 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send22918 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3915, 0);
// parameters:
send22919 = (Object)new_AST_Send((Object)Self, (Object)symbol4016, 1, (Object)send22918);
// new
send22920 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3915, 0);
// statements:
send22921 = (Object)new_AST_Send((Object)Self, (Object)symbol4009, 1, (Object)send22920);
// new
send22922 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3915, 0);
// temporaries:
send22923 = (Object)new_AST_Send((Object)Self, (Object)symbol4012, 1, (Object)send22922);
method3192 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super278, send22919, send22921, send22923, Self);
methodclosure3192 = (Object)new_Runtime_MethodClosure(method3192);
store_method((Type_Class)class562, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3192);


// ASTBlock>>parameters
//parameters
// 	^ parameters
method3193 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable805);
methodclosure3193 = (Object)new_Runtime_MethodClosure(method3193);
store_method((Type_Class)class562, (Type_Symbol)symbol3997, (Runtime_MethodClosure)methodclosure3193);


// ASTBlock>>statements
//statements
// 	^ statements
method3194 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable807);
methodclosure3194 = (Object)new_Runtime_MethodClosure(method3194);
store_method((Type_Class)class562, (Type_Symbol)symbol4007, (Runtime_MethodClosure)methodclosure3194);


// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable3212 = (Object)new_AST_Variable_named(L"anObject");
array2541 = (Object)new_Type_Array_with(1, (Object)localvariable3212);
assign2840 = (Object)new_AST_Assign((Object)instancevariable807, (Object)localvariable3212);
method3195 = (Object)new_AST_Method_with((Type_Array)array2541, (Type_Array)empty_Type_Array, 2, assign2840, Self);
methodclosure3195 = (Object)new_Runtime_MethodClosure(method3195);
store_method((Type_Class)class562, (Type_Symbol)symbol4009, (Runtime_MethodClosure)methodclosure3195);

classreference624 = (Object)new_Organization_ClassReference((Type_Class)class562);
// =
send22924 = (Object)new_AST_Send((Object)send22912, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send22925 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send22926 = (Object)new_AST_Send((Object)send22925, (Object)SMB_size, 0);
// should
send22927 = (Object)new_AST_Send((Object)send22926, (Object)symbol4176, 0);
smallint1559 = (Object)new_Type_SmallInt(0);
constant4461 = (Object)new_AST_Constant((Object)smallint1559);
// =
send22928 = (Object)new_AST_Send((Object)send22927, (Object)SMB__equal, 1, (Object)constant4461);
// parameters
send22929 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send22930 = (Object)new_AST_Send((Object)send22929, (Object)SMB_size, 0);
// should
send22931 = (Object)new_AST_Send((Object)send22930, (Object)symbol4176, 0);
smallint1560 = (Object)new_Type_SmallInt(0);
constant4462 = (Object)new_AST_Constant((Object)smallint1560);
// =
send22932 = (Object)new_AST_Send((Object)send22931, (Object)SMB__equal, 1, (Object)constant4462);
// statements
send22933 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send22934 = (Object)new_AST_Send((Object)send22933, (Object)SMB_size, 0);
// should
send22935 = (Object)new_AST_Send((Object)send22934, (Object)symbol4176, 0);
smallint1561 = (Object)new_Type_SmallInt(0);
constant4463 = (Object)new_AST_Constant((Object)smallint1561);
// =
send22936 = (Object)new_AST_Send((Object)send22935, (Object)SMB__equal, 1, (Object)constant4463);
string2655 = (Object)new_Type_String(L"[||]");
constant4464 = (Object)new_AST_Constant((Object)string2655);
// on:
send22937 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4464);
assign2841 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send22937);
// match:
send22938 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2842 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send22938);
// class
send22939 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send22940 = (Object)new_AST_Send((Object)send22939, (Object)symbol4176, 0);
// =
send22941 = (Object)new_AST_Send((Object)send22940, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send22942 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send22943 = (Object)new_AST_Send((Object)send22942, (Object)SMB_size, 0);
// should
send22944 = (Object)new_AST_Send((Object)send22943, (Object)symbol4176, 0);
smallint1562 = (Object)new_Type_SmallInt(0);
constant4465 = (Object)new_AST_Constant((Object)smallint1562);
// =
send22945 = (Object)new_AST_Send((Object)send22944, (Object)SMB__equal, 1, (Object)constant4465);
// parameters
send22946 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send22947 = (Object)new_AST_Send((Object)send22946, (Object)SMB_size, 0);
// should
send22948 = (Object)new_AST_Send((Object)send22947, (Object)symbol4176, 0);
smallint1563 = (Object)new_Type_SmallInt(0);
constant4466 = (Object)new_AST_Constant((Object)smallint1563);
// =
send22949 = (Object)new_AST_Send((Object)send22948, (Object)SMB__equal, 1, (Object)constant4466);
// statements
send22950 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send22951 = (Object)new_AST_Send((Object)send22950, (Object)SMB_size, 0);
// should
send22952 = (Object)new_AST_Send((Object)send22951, (Object)symbol4176, 0);
smallint1564 = (Object)new_Type_SmallInt(0);
constant4467 = (Object)new_AST_Constant((Object)smallint1564);
// =
send22953 = (Object)new_AST_Send((Object)send22952, (Object)SMB__equal, 1, (Object)constant4467);
string2656 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant4468 = (Object)new_AST_Constant((Object)string2656);
// on:
send22954 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4468);
assign2843 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send22954);
// match:
send22955 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2844 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send22955);
// class
send22956 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send22957 = (Object)new_AST_Send((Object)send22956, (Object)symbol4176, 0);
// =
send22958 = (Object)new_AST_Send((Object)send22957, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send22959 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send22960 = (Object)new_AST_Send((Object)send22959, (Object)SMB_size, 0);
// should
send22961 = (Object)new_AST_Send((Object)send22960, (Object)symbol4176, 0);
smallint1565 = (Object)new_Type_SmallInt(0);
constant4469 = (Object)new_AST_Constant((Object)smallint1565);
// =
send22962 = (Object)new_AST_Send((Object)send22961, (Object)SMB__equal, 1, (Object)constant4469);
// parameters
send22963 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send22964 = (Object)new_AST_Send((Object)send22963, (Object)SMB_size, 0);
// should
send22965 = (Object)new_AST_Send((Object)send22964, (Object)symbol4176, 0);
smallint1566 = (Object)new_Type_SmallInt(4);
constant4470 = (Object)new_AST_Constant((Object)smallint1566);
// =
send22966 = (Object)new_AST_Send((Object)send22965, (Object)SMB__equal, 1, (Object)constant4470);
// statements
send22967 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send22968 = (Object)new_AST_Send((Object)send22967, (Object)SMB_size, 0);
// should
send22969 = (Object)new_AST_Send((Object)send22968, (Object)symbol4176, 0);
smallint1567 = (Object)new_Type_SmallInt(0);
constant4471 = (Object)new_AST_Constant((Object)smallint1567);
// =
send22970 = (Object)new_AST_Send((Object)send22969, (Object)SMB__equal, 1, (Object)constant4471);
string2657 = (Object)new_Type_String(L"[ | a   f d| ]");
constant4472 = (Object)new_AST_Constant((Object)string2657);
// on:
send22971 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4472);
assign2845 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send22971);
// match:
send22972 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2846 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send22972);
// class
send22973 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send22974 = (Object)new_AST_Send((Object)send22973, (Object)symbol4176, 0);
// =
send22975 = (Object)new_AST_Send((Object)send22974, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send22976 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send22977 = (Object)new_AST_Send((Object)send22976, (Object)SMB_size, 0);
// should
send22978 = (Object)new_AST_Send((Object)send22977, (Object)symbol4176, 0);
smallint1568 = (Object)new_Type_SmallInt(3);
constant4473 = (Object)new_AST_Constant((Object)smallint1568);
// =
send22979 = (Object)new_AST_Send((Object)send22978, (Object)SMB__equal, 1, (Object)constant4473);
// parameters
send22980 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send22981 = (Object)new_AST_Send((Object)send22980, (Object)SMB_size, 0);
// should
send22982 = (Object)new_AST_Send((Object)send22981, (Object)symbol4176, 0);
smallint1569 = (Object)new_Type_SmallInt(0);
constant4474 = (Object)new_AST_Constant((Object)smallint1569);
// =
send22983 = (Object)new_AST_Send((Object)send22982, (Object)SMB__equal, 1, (Object)constant4474);
// statements
send22984 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send22985 = (Object)new_AST_Send((Object)send22984, (Object)SMB_size, 0);
// should
send22986 = (Object)new_AST_Send((Object)send22985, (Object)symbol4176, 0);
smallint1570 = (Object)new_Type_SmallInt(0);
constant4475 = (Object)new_AST_Constant((Object)smallint1570);
// =
send22987 = (Object)new_AST_Send((Object)send22986, (Object)SMB__equal, 1, (Object)constant4475);
string2658 = (Object)new_Type_String(L"[ || b. d ]");
constant4476 = (Object)new_AST_Constant((Object)string2658);
// on:
send22988 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4476);
assign2847 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send22988);
// match:
send22989 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2848 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send22989);
// class
send22990 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send22991 = (Object)new_AST_Send((Object)send22990, (Object)symbol4176, 0);
// =
send22992 = (Object)new_AST_Send((Object)send22991, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send22993 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send22994 = (Object)new_AST_Send((Object)send22993, (Object)SMB_size, 0);
// should
send22995 = (Object)new_AST_Send((Object)send22994, (Object)symbol4176, 0);
smallint1571 = (Object)new_Type_SmallInt(0);
constant4477 = (Object)new_AST_Constant((Object)smallint1571);
// =
send22996 = (Object)new_AST_Send((Object)send22995, (Object)SMB__equal, 1, (Object)constant4477);
// parameters
send22997 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send22998 = (Object)new_AST_Send((Object)send22997, (Object)SMB_size, 0);
// should
send22999 = (Object)new_AST_Send((Object)send22998, (Object)symbol4176, 0);
smallint1572 = (Object)new_Type_SmallInt(0);
constant4478 = (Object)new_AST_Constant((Object)smallint1572);
// =
send23000 = (Object)new_AST_Send((Object)send22999, (Object)SMB__equal, 1, (Object)constant4478);
// statements
send23001 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send23002 = (Object)new_AST_Send((Object)send23001, (Object)SMB_size, 0);
// should
send23003 = (Object)new_AST_Send((Object)send23002, (Object)symbol4176, 0);
smallint1573 = (Object)new_Type_SmallInt(2);
constant4479 = (Object)new_AST_Constant((Object)smallint1573);
// =
send23004 = (Object)new_AST_Send((Object)send23003, (Object)SMB__equal, 1, (Object)constant4479);
string2659 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant4480 = (Object)new_AST_Constant((Object)string2659);
// on:
send23005 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4480);
assign2849 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send23005);
// match:
send23006 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2850 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send23006);
// class
send23007 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send23008 = (Object)new_AST_Send((Object)send23007, (Object)symbol4176, 0);
// =
send23009 = (Object)new_AST_Send((Object)send23008, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send23010 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send23011 = (Object)new_AST_Send((Object)send23010, (Object)SMB_size, 0);
// should
send23012 = (Object)new_AST_Send((Object)send23011, (Object)symbol4176, 0);
smallint1574 = (Object)new_Type_SmallInt(0);
constant4481 = (Object)new_AST_Constant((Object)smallint1574);
// =
send23013 = (Object)new_AST_Send((Object)send23012, (Object)SMB__equal, 1, (Object)constant4481);
// parameters
send23014 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send23015 = (Object)new_AST_Send((Object)send23014, (Object)SMB_size, 0);
// should
send23016 = (Object)new_AST_Send((Object)send23015, (Object)symbol4176, 0);
smallint1575 = (Object)new_Type_SmallInt(0);
constant4482 = (Object)new_AST_Constant((Object)smallint1575);
// =
send23017 = (Object)new_AST_Send((Object)send23016, (Object)SMB__equal, 1, (Object)constant4482);
// statements
send23018 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send23019 = (Object)new_AST_Send((Object)send23018, (Object)SMB_size, 0);
// should
send23020 = (Object)new_AST_Send((Object)send23019, (Object)symbol4176, 0);
smallint1576 = (Object)new_Type_SmallInt(2);
constant4483 = (Object)new_AST_Constant((Object)smallint1576);
// =
send23021 = (Object)new_AST_Send((Object)send23020, (Object)SMB__equal, 1, (Object)constant4483);
string2660 = (Object)new_Type_String(L"[ || b. d. ]");
constant4484 = (Object)new_AST_Constant((Object)string2660);
// on:
send23022 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4484);
assign2851 = (Object)new_AST_Assign((Object)localvariable3207, (Object)send23022);
// match:
send23023 = (Object)new_AST_Send((Object)localvariable3206, (Object)symbol4108, 1, (Object)localvariable3207);
assign2852 = (Object)new_AST_Assign((Object)localvariable3208, (Object)send23023);
// class
send23024 = (Object)new_AST_Send((Object)localvariable3208, (Object)SMB_class, 0);
// should
send23025 = (Object)new_AST_Send((Object)send23024, (Object)symbol4176, 0);
// =
send23026 = (Object)new_AST_Send((Object)send23025, (Object)SMB__equal, 1, (Object)classreference624);
// temporaries
send23027 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4011, 0);
// size
send23028 = (Object)new_AST_Send((Object)send23027, (Object)SMB_size, 0);
// should
send23029 = (Object)new_AST_Send((Object)send23028, (Object)symbol4176, 0);
smallint1577 = (Object)new_Type_SmallInt(0);
constant4485 = (Object)new_AST_Constant((Object)smallint1577);
// =
send23030 = (Object)new_AST_Send((Object)send23029, (Object)SMB__equal, 1, (Object)constant4485);
// parameters
send23031 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol3997, 0);
// size
send23032 = (Object)new_AST_Send((Object)send23031, (Object)SMB_size, 0);
// should
send23033 = (Object)new_AST_Send((Object)send23032, (Object)symbol4176, 0);
smallint1578 = (Object)new_Type_SmallInt(0);
constant4486 = (Object)new_AST_Constant((Object)smallint1578);
// =
send23034 = (Object)new_AST_Send((Object)send23033, (Object)SMB__equal, 1, (Object)constant4486);
// statements
send23035 = (Object)new_AST_Send((Object)localvariable3208, (Object)symbol4007, 0);
// size
send23036 = (Object)new_AST_Send((Object)send23035, (Object)SMB_size, 0);
// should
send23037 = (Object)new_AST_Send((Object)send23036, (Object)symbol4176, 0);
smallint1579 = (Object)new_Type_SmallInt(2);
constant4487 = (Object)new_AST_Constant((Object)smallint1579);
// =
send23038 = (Object)new_AST_Send((Object)send23037, (Object)SMB__equal, 1, (Object)constant4487);
method3196 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2537, 44, assign2835, assign2836, assign2837, send22924, send22928, send22932, send22936, assign2841, assign2842, send22941, send22945, send22949, send22953, assign2843, assign2844, send22958, send22962, send22966, send22970, assign2845, assign2846, send22975, send22979, send22983, send22987, assign2847, assign2848, send22992, send22996, send23000, send23004, assign2849, assign2850, send23009, send23013, send23017, send23021, assign2851, assign2852, send23026, send23030, send23034, send23038, Self);
symbol3880 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure3196 = (Object)new_Runtime_MethodClosure(method3196);
store_method((Type_Class)class534, (Type_Symbol)symbol3880, (Runtime_MethodClosure)methodclosure3196);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable3213 = (Object)new_AST_Variable_named(L"parser");
localvariable3214 = (Object)new_AST_Variable_named(L"string");
array2542 = (Object)new_Type_Array_with(2, (Object)localvariable3213, (Object)localvariable3214);
// temporaries
send23039 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4011, 0);
assign2853 = (Object)new_AST_Assign((Object)localvariable3213, (Object)send23039);
string2661 = (Object)new_Type_String(L"|a b c|");
constant4488 = (Object)new_AST_Constant((Object)string2661);
// on:
send23040 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4488);
assign2854 = (Object)new_AST_Assign((Object)localvariable3214, (Object)send23040);
// match:
send23041 = (Object)new_AST_Send((Object)localvariable3213, (Object)symbol4108, 1, (Object)localvariable3214);
constant4489 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send23042 = (Object)new_AST_Send((Object)send23041, (Object)symbol4206, 1, (Object)constant4489);
// asArray
send23043 = (Object)new_AST_Send((Object)send23042, (Object)SMB_asArray, 0);
// should
send23044 = (Object)new_AST_Send((Object)send23043, (Object)symbol4176, 0);
localvariable3215 = (Object)new_AST_Variable_named(L"receiver");
array2543 = (Object)new_Type_Array_with(1, (Object)localvariable3215);
smallint1580 = (Object)new_Type_SmallInt(1);
constant4490 = (Object)new_AST_Constant((Object)smallint1580);
string2662 = (Object)new_Type_String(L"a");
constant4491 = (Object)new_AST_Constant((Object)string2662);
// at:put:
send23045 = (Object)new_AST_Send((Object)localvariable3215, (Object)SMB_at_put_, 2, (Object)constant4490, (Object)constant4491);
smallint1581 = (Object)new_Type_SmallInt(2);
constant4492 = (Object)new_AST_Constant((Object)smallint1581);
string2663 = (Object)new_Type_String(L"b");
constant4493 = (Object)new_AST_Constant((Object)string2663);
// at:put:
send23046 = (Object)new_AST_Send((Object)localvariable3215, (Object)SMB_at_put_, 2, (Object)constant4492, (Object)constant4493);
smallint1582 = (Object)new_Type_SmallInt(3);
constant4494 = (Object)new_AST_Constant((Object)smallint1582);
string2664 = (Object)new_Type_String(L"c");
constant4495 = (Object)new_AST_Constant((Object)string2664);
// at:put:
send23047 = (Object)new_AST_Send((Object)localvariable3215, (Object)SMB_at_put_, 2, (Object)constant4494, (Object)constant4495);
// yourself
send23048 = (Object)new_AST_Send((Object)localvariable3215, (Object)symbol3824, 0);
block1406 = (Object)new_AST_Block_with((Type_Array)array2543, (Type_Array)empty_Type_Array, 1, 4, send23045, send23046, send23047, send23048);
smallint1583 = (Object)new_Type_SmallInt(3);
constant4496 = (Object)new_AST_Constant((Object)smallint1583);
// new:
send23049 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4496);
// value:
send23050 = (Object)new_AST_Send((Object)block1406, (Object)SMB_value_, 1, (Object)send23049);
// =
send23051 = (Object)new_AST_Send((Object)send23044, (Object)SMB__equal, 1, (Object)send23050);
// position
send23052 = (Object)new_AST_Send((Object)localvariable3214, (Object)symbol4173, 0);
// should
send23053 = (Object)new_AST_Send((Object)send23052, (Object)symbol4176, 0);
smallint1584 = (Object)new_Type_SmallInt(7);
constant4497 = (Object)new_AST_Constant((Object)smallint1584);
// =
send23054 = (Object)new_AST_Send((Object)send23053, (Object)SMB__equal, 1, (Object)constant4497);
string2665 = (Object)new_Type_String(L"|  a b c  |");
constant4498 = (Object)new_AST_Constant((Object)string2665);
// on:
send23055 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4498);
assign2855 = (Object)new_AST_Assign((Object)localvariable3214, (Object)send23055);
// match:
send23056 = (Object)new_AST_Send((Object)localvariable3213, (Object)symbol4108, 1, (Object)localvariable3214);
constant4499 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send23057 = (Object)new_AST_Send((Object)send23056, (Object)symbol4206, 1, (Object)constant4499);
// asArray
send23058 = (Object)new_AST_Send((Object)send23057, (Object)SMB_asArray, 0);
// should
send23059 = (Object)new_AST_Send((Object)send23058, (Object)symbol4176, 0);
localvariable3216 = (Object)new_AST_Variable_named(L"receiver");
array2544 = (Object)new_Type_Array_with(1, (Object)localvariable3216);
smallint1585 = (Object)new_Type_SmallInt(1);
constant4500 = (Object)new_AST_Constant((Object)smallint1585);
string2666 = (Object)new_Type_String(L"a");
constant4501 = (Object)new_AST_Constant((Object)string2666);
// at:put:
send23060 = (Object)new_AST_Send((Object)localvariable3216, (Object)SMB_at_put_, 2, (Object)constant4500, (Object)constant4501);
smallint1586 = (Object)new_Type_SmallInt(2);
constant4502 = (Object)new_AST_Constant((Object)smallint1586);
string2667 = (Object)new_Type_String(L"b");
constant4503 = (Object)new_AST_Constant((Object)string2667);
// at:put:
send23061 = (Object)new_AST_Send((Object)localvariable3216, (Object)SMB_at_put_, 2, (Object)constant4502, (Object)constant4503);
smallint1587 = (Object)new_Type_SmallInt(3);
constant4504 = (Object)new_AST_Constant((Object)smallint1587);
string2668 = (Object)new_Type_String(L"c");
constant4505 = (Object)new_AST_Constant((Object)string2668);
// at:put:
send23062 = (Object)new_AST_Send((Object)localvariable3216, (Object)SMB_at_put_, 2, (Object)constant4504, (Object)constant4505);
// yourself
send23063 = (Object)new_AST_Send((Object)localvariable3216, (Object)symbol3824, 0);
block1407 = (Object)new_AST_Block_with((Type_Array)array2544, (Type_Array)empty_Type_Array, 1, 4, send23060, send23061, send23062, send23063);
smallint1588 = (Object)new_Type_SmallInt(3);
constant4506 = (Object)new_AST_Constant((Object)smallint1588);
// new:
send23064 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3907, 1, (Object)constant4506);
// value:
send23065 = (Object)new_AST_Send((Object)block1407, (Object)SMB_value_, 1, (Object)send23064);
// =
send23066 = (Object)new_AST_Send((Object)send23059, (Object)SMB__equal, 1, (Object)send23065);
// position
send23067 = (Object)new_AST_Send((Object)localvariable3214, (Object)symbol4173, 0);
// should
send23068 = (Object)new_AST_Send((Object)send23067, (Object)symbol4176, 0);
smallint1589 = (Object)new_Type_SmallInt(11);
constant4507 = (Object)new_AST_Constant((Object)smallint1589);
// =
send23069 = (Object)new_AST_Send((Object)send23068, (Object)SMB__equal, 1, (Object)constant4507);
method3197 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2542, 8, assign2853, assign2854, send23051, send23054, assign2855, send23066, send23069, Self);
symbol3849 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure3197 = (Object)new_Runtime_MethodClosure(method3197);
store_method((Type_Class)class534, (Type_Symbol)symbol3849, (Runtime_MethodClosure)methodclosure3197);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable3217 = (Object)new_AST_Variable_named(L"parser");
localvariable3218 = (Object)new_AST_Variable_named(L"string");
localvariable3219 = (Object)new_AST_Variable_named(L"result");
array2545 = (Object)new_Type_Array_with(3, (Object)localvariable3217, (Object)localvariable3218, (Object)localvariable3219);
// method
send23070 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4193, 0);
assign2856 = (Object)new_AST_Assign((Object)localvariable3217, (Object)send23070);
string2669 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant4508 = (Object)new_AST_Constant((Object)string2669);
assign2857 = (Object)new_AST_Assign((Object)localvariable3218, (Object)constant4508);
// parse:
send23071 = (Object)new_AST_Send((Object)localvariable3217, (Object)symbol4120, 1, (Object)localvariable3218);
assign2858 = (Object)new_AST_Assign((Object)localvariable3219, (Object)send23071);
// hasReturnExpression
send23072 = (Object)new_AST_Send((Object)localvariable3219, (Object)symbol3945, 0);
// should
send23073 = (Object)new_AST_Send((Object)send23072, (Object)symbol4176, 0);
// be
send23074 = (Object)new_AST_Send((Object)send23073, (Object)symbol4185, 0);
// true
send23075 = (Object)new_AST_Send((Object)send23074, (Object)symbol4194, 0);
// class
send23076 = (Object)new_AST_Send((Object)localvariable3219, (Object)SMB_class, 0);
// should
send23077 = (Object)new_AST_Send((Object)send23076, (Object)symbol4176, 0);
// =
send23078 = (Object)new_AST_Send((Object)send23077, (Object)SMB__equal, 1, (Object)classreference614);
// message
send23079 = (Object)new_AST_Send((Object)localvariable3219, (Object)symbol4010, 0);
// asString
send23080 = (Object)new_AST_Send((Object)send23079, (Object)SMB_asString, 0);
// should
send23081 = (Object)new_AST_Send((Object)send23080, (Object)symbol4176, 0);
string2670 = (Object)new_Type_String(L"withA:withB:withC:");
constant4509 = (Object)new_AST_Constant((Object)string2670);
// =
send23082 = (Object)new_AST_Send((Object)send23081, (Object)SMB__equal, 1, (Object)constant4509);
method3198 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2545, 7, assign2856, assign2857, assign2858, send23075, send23078, send23082, Self);
symbol3869 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure3198 = (Object)new_Runtime_MethodClosure(method3198);
store_method((Type_Class)class534, (Type_Symbol)symbol3869, (Runtime_MethodClosure)methodclosure3198);


// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable3220 = (Object)new_AST_Variable_named(L"string");
localvariable3221 = (Object)new_AST_Variable_named(L"result");
localvariable3222 = (Object)new_AST_Variable_named(L"var");
localvariable3223 = (Object)new_AST_Variable_named(L"parser");
array2546 = (Object)new_Type_Array_with(4, (Object)localvariable3220, (Object)localvariable3221, (Object)localvariable3222, (Object)localvariable3223);
symbol4224 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send23083 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4224, 0);
assign2859 = (Object)new_AST_Assign((Object)localvariable3223, (Object)send23083);
string2671 = (Object)new_Type_String(L":abcd :def");
constant4510 = (Object)new_AST_Constant((Object)string2671);
// on:
send23084 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4510);
assign2860 = (Object)new_AST_Assign((Object)localvariable3220, (Object)send23084);
// match:
send23085 = (Object)new_AST_Send((Object)localvariable3223, (Object)symbol4108, 1, (Object)localvariable3220);
assign2861 = (Object)new_AST_Assign((Object)localvariable3221, (Object)send23085);
// position
send23086 = (Object)new_AST_Send((Object)localvariable3220, (Object)symbol4173, 0);
// should
send23087 = (Object)new_AST_Send((Object)send23086, (Object)symbol4176, 0);
smallint1590 = (Object)new_Type_SmallInt(10);
constant4511 = (Object)new_AST_Constant((Object)smallint1590);
// =
send23088 = (Object)new_AST_Send((Object)send23087, (Object)SMB__equal, 1, (Object)constant4511);
// class
send23089 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_class, 0);
// should
send23090 = (Object)new_AST_Send((Object)send23089, (Object)symbol4176, 0);
// =
send23091 = (Object)new_AST_Send((Object)send23090, (Object)SMB__equal, 1, (Object)classreference575);
// size
send23092 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_size, 0);
// should
send23093 = (Object)new_AST_Send((Object)send23092, (Object)symbol4176, 0);
smallint1591 = (Object)new_Type_SmallInt(2);
constant4512 = (Object)new_AST_Constant((Object)smallint1591);
// =
send23094 = (Object)new_AST_Send((Object)send23093, (Object)SMB__equal, 1, (Object)constant4512);
smallint1592 = (Object)new_Type_SmallInt(1);
constant4513 = (Object)new_AST_Constant((Object)smallint1592);
// at:
send23095 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_at_, 1, (Object)constant4513);
assign2862 = (Object)new_AST_Assign((Object)localvariable3222, (Object)send23095);
// class
send23096 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_class, 0);
// should
send23097 = (Object)new_AST_Send((Object)send23096, (Object)symbol4176, 0);
// =
send23098 = (Object)new_AST_Send((Object)send23097, (Object)SMB__equal, 1, (Object)classreference609);
// name
send23099 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_name, 0);
// should
send23100 = (Object)new_AST_Send((Object)send23099, (Object)symbol4176, 0);
string2672 = (Object)new_Type_String(L"abcd");
constant4514 = (Object)new_AST_Constant((Object)string2672);
// =
send23101 = (Object)new_AST_Send((Object)send23100, (Object)SMB__equal, 1, (Object)constant4514);
smallint1593 = (Object)new_Type_SmallInt(2);
constant4515 = (Object)new_AST_Constant((Object)smallint1593);
// at:
send23102 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_at_, 1, (Object)constant4515);
assign2863 = (Object)new_AST_Assign((Object)localvariable3222, (Object)send23102);
// class
send23103 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_class, 0);
// should
send23104 = (Object)new_AST_Send((Object)send23103, (Object)symbol4176, 0);
// =
send23105 = (Object)new_AST_Send((Object)send23104, (Object)SMB__equal, 1, (Object)classreference609);
// name
send23106 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_name, 0);
// should
send23107 = (Object)new_AST_Send((Object)send23106, (Object)symbol4176, 0);
string2673 = (Object)new_Type_String(L"def");
constant4516 = (Object)new_AST_Constant((Object)string2673);
// =
send23108 = (Object)new_AST_Send((Object)send23107, (Object)SMB__equal, 1, (Object)constant4516);
string2674 = (Object)new_Type_String(L" :  abcd:   def ");
constant4517 = (Object)new_AST_Constant((Object)string2674);
// on:
send23109 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4517);
assign2864 = (Object)new_AST_Assign((Object)localvariable3220, (Object)send23109);
// match:
send23110 = (Object)new_AST_Send((Object)localvariable3223, (Object)symbol4108, 1, (Object)localvariable3220);
assign2865 = (Object)new_AST_Assign((Object)localvariable3221, (Object)send23110);
// position
send23111 = (Object)new_AST_Send((Object)localvariable3220, (Object)symbol4173, 0);
// should
send23112 = (Object)new_AST_Send((Object)send23111, (Object)symbol4176, 0);
smallint1594 = (Object)new_Type_SmallInt(16);
constant4518 = (Object)new_AST_Constant((Object)smallint1594);
// =
send23113 = (Object)new_AST_Send((Object)send23112, (Object)SMB__equal, 1, (Object)constant4518);
// class
send23114 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_class, 0);
// should
send23115 = (Object)new_AST_Send((Object)send23114, (Object)symbol4176, 0);
// =
send23116 = (Object)new_AST_Send((Object)send23115, (Object)SMB__equal, 1, (Object)classreference575);
// size
send23117 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_size, 0);
// should
send23118 = (Object)new_AST_Send((Object)send23117, (Object)symbol4176, 0);
smallint1595 = (Object)new_Type_SmallInt(2);
constant4519 = (Object)new_AST_Constant((Object)smallint1595);
// =
send23119 = (Object)new_AST_Send((Object)send23118, (Object)SMB__equal, 1, (Object)constant4519);
// first
send23120 = (Object)new_AST_Send((Object)localvariable3221, (Object)symbol3961, 0);
assign2866 = (Object)new_AST_Assign((Object)localvariable3222, (Object)send23120);
// class
send23121 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_class, 0);
// should
send23122 = (Object)new_AST_Send((Object)send23121, (Object)symbol4176, 0);
// =
send23123 = (Object)new_AST_Send((Object)send23122, (Object)SMB__equal, 1, (Object)classreference609);
// name
send23124 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_name, 0);
// should
send23125 = (Object)new_AST_Send((Object)send23124, (Object)symbol4176, 0);
string2675 = (Object)new_Type_String(L"abcd");
constant4520 = (Object)new_AST_Constant((Object)string2675);
// =
send23126 = (Object)new_AST_Send((Object)send23125, (Object)SMB__equal, 1, (Object)constant4520);
smallint1596 = (Object)new_Type_SmallInt(2);
constant4521 = (Object)new_AST_Constant((Object)smallint1596);
// at:
send23127 = (Object)new_AST_Send((Object)localvariable3221, (Object)SMB_at_, 1, (Object)constant4521);
assign2867 = (Object)new_AST_Assign((Object)localvariable3222, (Object)send23127);
// class
send23128 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_class, 0);
// should
send23129 = (Object)new_AST_Send((Object)send23128, (Object)symbol4176, 0);
// =
send23130 = (Object)new_AST_Send((Object)send23129, (Object)SMB__equal, 1, (Object)classreference609);
// name
send23131 = (Object)new_AST_Send((Object)localvariable3222, (Object)SMB_name, 0);
// should
send23132 = (Object)new_AST_Send((Object)send23131, (Object)symbol4176, 0);
string2676 = (Object)new_Type_String(L"def");
constant4522 = (Object)new_AST_Constant((Object)string2676);
// =
send23133 = (Object)new_AST_Send((Object)send23132, (Object)SMB__equal, 1, (Object)constant4522);
method3199 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2546, 24, assign2859, assign2860, assign2861, send23088, send23091, send23094, assign2862, send23098, send23101, assign2863, send23105, send23108, assign2864, assign2865, send23113, send23116, send23119, assign2866, send23123, send23126, assign2867, send23130, send23133, Self);
symbol3842 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure3199 = (Object)new_Runtime_MethodClosure(method3199);
store_method((Type_Class)class534, (Type_Symbol)symbol3842, (Runtime_MethodClosure)methodclosure3199);


// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method3200 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol3854 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure3200 = (Object)new_Runtime_MethodClosure(method3200);
store_method((Type_Class)class534, (Type_Symbol)symbol3854, (Runtime_MethodClosure)methodclosure3200);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3224 = (Object)new_AST_Variable_named(L"parser");
localvariable3225 = (Object)new_AST_Variable_named(L"string");
localvariable3226 = (Object)new_AST_Variable_named(L"result");
array2547 = (Object)new_Type_Array_with(3, (Object)localvariable3224, (Object)localvariable3225, (Object)localvariable3226);
// expression
send23134 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4019, 0);
assign2868 = (Object)new_AST_Assign((Object)localvariable3224, (Object)send23134);
string2677 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant4523 = (Object)new_AST_Constant((Object)string2677);
// on:
send23135 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4523);
assign2869 = (Object)new_AST_Assign((Object)localvariable3225, (Object)send23135);
// match:
send23136 = (Object)new_AST_Send((Object)localvariable3224, (Object)symbol4108, 1, (Object)localvariable3225);
assign2870 = (Object)new_AST_Assign((Object)localvariable3226, (Object)send23136);
// class
send23137 = (Object)new_AST_Send((Object)localvariable3226, (Object)SMB_class, 0);
// should
send23138 = (Object)new_AST_Send((Object)send23137, (Object)symbol4176, 0);
// =
send23139 = (Object)new_AST_Send((Object)send23138, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send23140 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4021, 0);
// class
send23141 = (Object)new_AST_Send((Object)send23140, (Object)SMB_class, 0);
// should
send23142 = (Object)new_AST_Send((Object)send23141, (Object)symbol4176, 0);
// =
send23143 = (Object)new_AST_Send((Object)send23142, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send23144 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4021, 0);
// name
send23145 = (Object)new_AST_Send((Object)send23144, (Object)SMB_name, 0);
// should
send23146 = (Object)new_AST_Send((Object)send23145, (Object)symbol4176, 0);
string2678 = (Object)new_Type_String(L"a");
constant4524 = (Object)new_AST_Constant((Object)string2678);
// =
send23147 = (Object)new_AST_Send((Object)send23146, (Object)SMB__equal, 1, (Object)constant4524);
// expression
send23148 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4019, 0);
assign2871 = (Object)new_AST_Assign((Object)localvariable3226, (Object)send23148);
// class
send23149 = (Object)new_AST_Send((Object)localvariable3226, (Object)SMB_class, 0);
// should
send23150 = (Object)new_AST_Send((Object)send23149, (Object)symbol4176, 0);
// =
send23151 = (Object)new_AST_Send((Object)send23150, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send23152 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4021, 0);
// class
send23153 = (Object)new_AST_Send((Object)send23152, (Object)SMB_class, 0);
// should
send23154 = (Object)new_AST_Send((Object)send23153, (Object)symbol4176, 0);
// =
send23155 = (Object)new_AST_Send((Object)send23154, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send23156 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4021, 0);
// name
send23157 = (Object)new_AST_Send((Object)send23156, (Object)SMB_name, 0);
// should
send23158 = (Object)new_AST_Send((Object)send23157, (Object)symbol4176, 0);
string2679 = (Object)new_Type_String(L"b");
constant4525 = (Object)new_AST_Constant((Object)string2679);
// =
send23159 = (Object)new_AST_Send((Object)send23158, (Object)SMB__equal, 1, (Object)constant4525);
// expression
send23160 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4019, 0);
assign2872 = (Object)new_AST_Assign((Object)localvariable3226, (Object)send23160);
// class
send23161 = (Object)new_AST_Send((Object)localvariable3226, (Object)SMB_class, 0);
// should
send23162 = (Object)new_AST_Send((Object)send23161, (Object)symbol4176, 0);
// =
send23163 = (Object)new_AST_Send((Object)send23162, (Object)SMB__equal, 1, (Object)classreference615);
// variable
send23164 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4021, 0);
// class
send23165 = (Object)new_AST_Send((Object)send23164, (Object)SMB_class, 0);
// should
send23166 = (Object)new_AST_Send((Object)send23165, (Object)symbol4176, 0);
// =
send23167 = (Object)new_AST_Send((Object)send23166, (Object)SMB__equal, 1, (Object)classreference609);
// variable
send23168 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4021, 0);
// name
send23169 = (Object)new_AST_Send((Object)send23168, (Object)SMB_name, 0);
// should
send23170 = (Object)new_AST_Send((Object)send23169, (Object)symbol4176, 0);
string2680 = (Object)new_Type_String(L"c");
constant4526 = (Object)new_AST_Constant((Object)string2680);
// =
send23171 = (Object)new_AST_Send((Object)send23170, (Object)SMB__equal, 1, (Object)constant4526);
// expression
send23172 = (Object)new_AST_Send((Object)localvariable3226, (Object)symbol4019, 0);
// class
send23173 = (Object)new_AST_Send((Object)send23172, (Object)SMB_class, 0);
// should
send23174 = (Object)new_AST_Send((Object)send23173, (Object)symbol4176, 0);
// =
send23175 = (Object)new_AST_Send((Object)send23174, (Object)SMB__equal, 1, (Object)classreference598);
method3201 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2547, 16, assign2868, assign2869, assign2870, send23139, send23143, send23147, assign2871, send23151, send23155, send23159, assign2872, send23163, send23167, send23171, send23175, Self);
symbol3882 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure3201 = (Object)new_Runtime_MethodClosure(method3201);
store_method((Type_Class)class534, (Type_Symbol)symbol3882, (Runtime_MethodClosure)methodclosure3201);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable3227 = (Object)new_AST_Variable_named(L"parser");
localvariable3228 = (Object)new_AST_Variable_named(L"string");
localvariable3229 = (Object)new_AST_Variable_named(L"result");
array2548 = (Object)new_Type_Array_with(3, (Object)localvariable3227, (Object)localvariable3228, (Object)localvariable3229);
symbol4225 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send23176 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4225, 0);
assign2873 = (Object)new_AST_Assign((Object)localvariable3227, (Object)send23176);
string2681 = (Object)new_Type_String(L"abc def ghi ");
constant4527 = (Object)new_AST_Constant((Object)string2681);
// on:
send23177 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4527);
assign2874 = (Object)new_AST_Assign((Object)localvariable3228, (Object)send23177);
// match:
send23178 = (Object)new_AST_Send((Object)localvariable3227, (Object)symbol4108, 1, (Object)localvariable3228);
assign2875 = (Object)new_AST_Assign((Object)localvariable3229, (Object)send23178);
// class
send23179 = (Object)new_AST_Send((Object)localvariable3229, (Object)SMB_class, 0);
// should
send23180 = (Object)new_AST_Send((Object)send23179, (Object)symbol4176, 0);
// =
send23181 = (Object)new_AST_Send((Object)send23180, (Object)SMB__equal, 1, (Object)classreference602);
// selector
send23182 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3927, 0);
// class
send23183 = (Object)new_AST_Send((Object)send23182, (Object)SMB_class, 0);
// should
send23184 = (Object)new_AST_Send((Object)send23183, (Object)symbol4176, 0);
// =
send23185 = (Object)new_AST_Send((Object)send23184, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send23186 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3927, 0);
// selector
send23187 = (Object)new_AST_Send((Object)send23186, (Object)symbol3927, 0);
// printString
send23188 = (Object)new_AST_Send((Object)send23187, (Object)symbol4111, 0);
// should
send23189 = (Object)new_AST_Send((Object)send23188, (Object)symbol4176, 0);
string2682 = (Object)new_Type_String(L"ghi");
constant4528 = (Object)new_AST_Constant((Object)string2682);
// =
send23190 = (Object)new_AST_Send((Object)send23189, (Object)SMB__equal, 1, (Object)constant4528);
// receiver
send23191 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3992, 0);
assign2876 = (Object)new_AST_Assign((Object)localvariable3229, (Object)send23191);
// class
send23192 = (Object)new_AST_Send((Object)localvariable3229, (Object)SMB_class, 0);
// should
send23193 = (Object)new_AST_Send((Object)send23192, (Object)symbol4176, 0);
// =
send23194 = (Object)new_AST_Send((Object)send23193, (Object)SMB__equal, 1, (Object)classreference602);
// selector
send23195 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3927, 0);
// class
send23196 = (Object)new_AST_Send((Object)send23195, (Object)SMB_class, 0);
// should
send23197 = (Object)new_AST_Send((Object)send23196, (Object)symbol4176, 0);
// =
send23198 = (Object)new_AST_Send((Object)send23197, (Object)SMB__equal, 1, (Object)classreference617);
// selector
send23199 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3927, 0);
// selector
send23200 = (Object)new_AST_Send((Object)send23199, (Object)symbol3927, 0);
// printString
send23201 = (Object)new_AST_Send((Object)send23200, (Object)symbol4111, 0);
// should
send23202 = (Object)new_AST_Send((Object)send23201, (Object)symbol4176, 0);
string2683 = (Object)new_Type_String(L"def");
constant4529 = (Object)new_AST_Constant((Object)string2683);
// =
send23203 = (Object)new_AST_Send((Object)send23202, (Object)SMB__equal, 1, (Object)constant4529);
// receiver
send23204 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3992, 0);
// class
send23205 = (Object)new_AST_Send((Object)send23204, (Object)SMB_class, 0);
// should
send23206 = (Object)new_AST_Send((Object)send23205, (Object)symbol4176, 0);
// =
send23207 = (Object)new_AST_Send((Object)send23206, (Object)SMB__equal, 1, (Object)classreference609);
// receiver
send23208 = (Object)new_AST_Send((Object)localvariable3229, (Object)symbol3992, 0);
// name
send23209 = (Object)new_AST_Send((Object)send23208, (Object)SMB_name, 0);
// should
send23210 = (Object)new_AST_Send((Object)send23209, (Object)symbol4176, 0);
string2684 = (Object)new_Type_String(L"abc");
constant4530 = (Object)new_AST_Constant((Object)string2684);
// =
send23211 = (Object)new_AST_Send((Object)send23210, (Object)SMB__equal, 1, (Object)constant4530);
// position
send23212 = (Object)new_AST_Send((Object)localvariable3228, (Object)symbol4173, 0);
// should
send23213 = (Object)new_AST_Send((Object)send23212, (Object)symbol4176, 0);
smallint1597 = (Object)new_Type_SmallInt(12);
constant4531 = (Object)new_AST_Constant((Object)smallint1597);
// =
send23214 = (Object)new_AST_Send((Object)send23213, (Object)SMB__equal, 1, (Object)constant4531);
string2685 = (Object)new_Type_String(L"abc");
constant4532 = (Object)new_AST_Constant((Object)string2685);
// on:
send23215 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4532);
assign2877 = (Object)new_AST_Assign((Object)localvariable3228, (Object)send23215);
// match:
send23216 = (Object)new_AST_Send((Object)localvariable3227, (Object)symbol4108, 1, (Object)localvariable3228);
// should
send23217 = (Object)new_AST_Send((Object)send23216, (Object)symbol4176, 0);
// be
send23218 = (Object)new_AST_Send((Object)send23217, (Object)symbol4185, 0);
// isNil
send23219 = (Object)new_AST_Send((Object)send23218, (Object)SMB_isNil, 0);
method3202 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2548, 16, assign2873, assign2874, assign2875, send23181, send23185, send23190, assign2876, send23194, send23198, send23203, send23207, send23211, send23214, assign2877, send23219, Self);
symbol3874 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure3202 = (Object)new_Runtime_MethodClosure(method3202);
store_method((Type_Class)class534, (Type_Symbol)symbol3874, (Runtime_MethodClosure)methodclosure3202);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new

// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string2686 = (Object)new_Type_String(L"A-Z");
constant4533 = (Object)new_AST_Constant((Object)string2686);
symbol4226 = (Object)new_Type_Symbol_cached(L"asPEGRange");
// asPEGRange
send23220 = (Object)new_AST_Send((Object)constant4533, (Object)symbol4226, 0);
method3203 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23220);
symbol4041 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure3203 = (Object)new_Runtime_MethodClosure(method3203);
store_method((Type_Class)class535, (Type_Symbol)symbol4041, (Runtime_MethodClosure)methodclosure3203);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
symbol4227 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
string2687 = (Object)new_Type_String(L"BLOCK");
constant4534 = (Object)new_AST_Constant((Object)string2687);
string2688 = (Object)new_Type_String(L"[");
constant4535 = (Object)new_AST_Constant((Object)string2688);
// asPEG
send23221 = (Object)new_AST_Send((Object)constant4535, (Object)symbol4106, 0);
// omit:
send23222 = (Object)new_AST_Send((Object)send23221, (Object)symbol4110, 1, (Object)True_Const);
// blockArguments
send23223 = (Object)new_AST_Send((Object)Self, (Object)symbol4224, 0);
symbol4228 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send23224 = (Object)new_AST_Send((Object)Self, (Object)symbol4228, 0);
// &
send23225 = (Object)new_AST_Send((Object)send23223, (Object)SMB__and, 1, (Object)send23224);
// optional
send23226 = (Object)new_AST_Send((Object)send23225, (Object)symbol4105, 0);
// temporaries
send23227 = (Object)new_AST_Send((Object)Self, (Object)symbol4011, 0);
// optional
send23228 = (Object)new_AST_Send((Object)send23227, (Object)symbol4105, 0);
// statements
send23229 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// <&
send23230 = (Object)new_AST_Send((Object)send23228, (Object)symbol4145, 1, (Object)send23229);
// <&
send23231 = (Object)new_AST_Send((Object)send23226, (Object)symbol4145, 1, (Object)send23230);
// &
send23232 = (Object)new_AST_Send((Object)send23222, (Object)SMB__and, 1, (Object)send23231);
string2689 = (Object)new_Type_String(L"]");
constant4536 = (Object)new_AST_Constant((Object)string2689);
// asPEG
send23233 = (Object)new_AST_Send((Object)constant4536, (Object)symbol4106, 0);
// omit:
send23234 = (Object)new_AST_Send((Object)send23233, (Object)symbol4110, 1, (Object)True_Const);
// <&
send23235 = (Object)new_AST_Send((Object)send23232, (Object)symbol4145, 1, (Object)send23234);
localvariable3230 = (Object)new_AST_Variable_named(L"result");
array2549 = (Object)new_Type_Array_with(1, (Object)localvariable3230);
localvariable3231 = (Object)new_AST_Variable_named(L"receiver");
array2550 = (Object)new_Type_Array_with(1, (Object)localvariable3231);
// first
send23236 = (Object)new_AST_Send((Object)localvariable3230, (Object)symbol3961, 0);
// new
send23237 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
block1408 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23237);
// resultIfFailed:
send23238 = (Object)new_AST_Send((Object)send23236, (Object)symbol4147, 1, (Object)block1408);
// parameters:
send23239 = (Object)new_AST_Send((Object)localvariable3231, (Object)symbol4016, 1, (Object)send23238);
smallint1598 = (Object)new_Type_SmallInt(2);
constant4537 = (Object)new_AST_Constant((Object)smallint1598);
// at:
send23240 = (Object)new_AST_Send((Object)localvariable3230, (Object)SMB_at_, 1, (Object)constant4537);
// new
send23241 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
block1409 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23241);
// resultIfFailed:
send23242 = (Object)new_AST_Send((Object)send23240, (Object)symbol4147, 1, (Object)block1409);
// temporaries:
send23243 = (Object)new_AST_Send((Object)localvariable3231, (Object)symbol4012, 1, (Object)send23242);
smallint1599 = (Object)new_Type_SmallInt(3);
constant4538 = (Object)new_AST_Constant((Object)smallint1599);
// at:
send23244 = (Object)new_AST_Send((Object)localvariable3230, (Object)SMB_at_, 1, (Object)constant4538);
// statements:
send23245 = (Object)new_AST_Send((Object)localvariable3231, (Object)symbol4009, 1, (Object)send23244);
block1410 = (Object)new_AST_Block_with((Type_Array)array2550, (Type_Array)empty_Type_Array, 2, 3, send23239, send23243, send23245);
// new
send23246 = (Object)new_AST_Send((Object)classreference624, (Object)symbol3915, 0);
// value:
send23247 = (Object)new_AST_Send((Object)block1410, (Object)SMB_value_, 1, (Object)send23246);
block1411 = (Object)new_AST_Block_with((Type_Array)array2549, (Type_Array)empty_Type_Array, 1, 1, send23247);
// named:parsing:semantics:
send23248 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4534, (Object)send23235, (Object)block1411);
method3204 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23248);
symbol4053 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure3204 = (Object)new_Runtime_MethodClosure(method3204);
store_method((Type_Class)class535, (Type_Symbol)symbol4053, (Runtime_MethodClosure)methodclosure3204);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string2690 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant4539 = (Object)new_AST_Constant((Object)string2690);
// binaryObjectDescription
send23249 = (Object)new_AST_Send((Object)Self, (Object)symbol4186, 0);
// keywordMessageExpression
send23250 = (Object)new_AST_Send((Object)Self, (Object)symbol4175, 0);
// &
send23251 = (Object)new_AST_Send((Object)send23249, (Object)SMB__and, 1, (Object)send23250);
localvariable3232 = (Object)new_AST_Variable_named(L"parts");
array2551 = (Object)new_Type_Array_with(1, (Object)localvariable3232);
smallint1600 = (Object)new_Type_SmallInt(2);
constant4540 = (Object)new_AST_Constant((Object)smallint1600);
// at:
send23252 = (Object)new_AST_Send((Object)localvariable3232, (Object)SMB_at_, 1, (Object)constant4540);
// first
send23253 = (Object)new_AST_Send((Object)localvariable3232, (Object)symbol3961, 0);
// receiver:
send23254 = (Object)new_AST_Send((Object)send23252, (Object)symbol3990, 1, (Object)send23253);
block1412 = (Object)new_AST_Block_with((Type_Array)array2551, (Type_Array)empty_Type_Array, 1, 1, send23254);
// named:parsing:semantics:
send23255 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4539, (Object)send23251, (Object)block1412);
method3205 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23255);
symbol4081 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure3205 = (Object)new_Runtime_MethodClosure(method3205);
store_method((Type_Class)class535, (Type_Symbol)symbol4081, (Runtime_MethodClosure)methodclosure3205);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super279 = (Object)new_AST_Super((Object)symbol3826, 0);
// new
send23256 = (Object)new_AST_Send((Object)classreference577, (Object)symbol3915, 0);
assign2878 = (Object)new_AST_Assign((Object)instancevariable775, (Object)send23256);
// new
send23257 = (Object)new_AST_Send((Object)classreference577, (Object)symbol3915, 0);
assign2879 = (Object)new_AST_Assign((Object)instancevariable777, (Object)send23257);
smallint1601 = (Object)new_Type_SmallInt(0);
constant4541 = (Object)new_AST_Constant((Object)smallint1601);
assign2880 = (Object)new_AST_Assign((Object)instancevariable776, (Object)constant4541);
method3206 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super279, assign2878, assign2879, assign2880, Self);
methodclosure3206 = (Object)new_Runtime_MethodClosure(method3206);
store_method((Type_Class)class535, (Type_Symbol)symbol3826, (Runtime_MethodClosure)methodclosure3206);


// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string2691 = (Object)new_Type_String(L":=");
constant4542 = (Object)new_AST_Constant((Object)string2691);
// asPEG
send23258 = (Object)new_AST_Send((Object)constant4542, (Object)symbol4106, 0);
string2692 = (Object)new_Type_String(L"_");
constant4543 = (Object)new_AST_Constant((Object)string2692);
// |
send23259 = (Object)new_AST_Send((Object)send23258, (Object)SMB__or, 1, (Object)constant4543);
// omit:
send23260 = (Object)new_AST_Send((Object)send23259, (Object)symbol4110, 1, (Object)True_Const);
method3207 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23260);
symbol4023 = (Object)new_Type_Symbol_cached(L"assignmentOp");
methodclosure3207 = (Object)new_Runtime_MethodClosure(method3207);
store_method((Type_Class)class535, (Type_Symbol)symbol4023, (Runtime_MethodClosure)methodclosure3207);


// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
string2693 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant4544 = (Object)new_AST_Constant((Object)string2693);
// unarySelector
send23261 = (Object)new_AST_Send((Object)Self, (Object)symbol4202, 0);
localvariable3233 = (Object)new_AST_Variable_named(L"selector");
array2552 = (Object)new_Type_Array_with(1, (Object)localvariable3233);
// new
send23262 = (Object)new_AST_Send((Object)classreference619, (Object)symbol3915, 0);
symbol3996 = (Object)new_Type_Symbol_cached(L"selector:");
// selector:
send23263 = (Object)new_AST_Send((Object)send23262, (Object)symbol3996, 1, (Object)localvariable3233);
block1413 = (Object)new_AST_Block_with((Type_Array)array2552, (Type_Array)empty_Type_Array, 1, 1, send23263);
// named:parsing:semantics:
send23264 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4544, (Object)send23261, (Object)block1413);
method3208 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23264);
symbol4063 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure3208 = (Object)new_Runtime_MethodClosure(method3208);
store_method((Type_Class)class535, (Type_Symbol)symbol4063, (Runtime_MethodClosure)methodclosure3208);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string2694 = (Object)new_Type_String(L"METHOD");
constant4545 = (Object)new_AST_Constant((Object)string2694);
symbol4229 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send23265 = (Object)new_AST_Send((Object)Self, (Object)symbol4229, 0);
// temporaries
send23266 = (Object)new_AST_Send((Object)Self, (Object)symbol4011, 0);
// optional
send23267 = (Object)new_AST_Send((Object)send23266, (Object)symbol4105, 0);
// annotation
send23268 = (Object)new_AST_Send((Object)Self, (Object)symbol4209, 0);
// times
send23269 = (Object)new_AST_Send((Object)send23268, (Object)symbol4101, 0);
// statements
send23270 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// <&
send23271 = (Object)new_AST_Send((Object)send23269, (Object)symbol4145, 1, (Object)send23270);
// <&
send23272 = (Object)new_AST_Send((Object)send23267, (Object)symbol4145, 1, (Object)send23271);
// &
send23273 = (Object)new_AST_Send((Object)send23265, (Object)SMB__and, 1, (Object)send23272);
// separator
send23274 = (Object)new_AST_Send((Object)Self, (Object)symbol4167, 0);
// <&
send23275 = (Object)new_AST_Send((Object)send23273, (Object)symbol4145, 1, (Object)send23274);
localvariable3234 = (Object)new_AST_Variable_named(L"parts");
array2553 = (Object)new_Type_Array_with(1, (Object)localvariable3234);
localvariable3235 = (Object)new_AST_Variable_named(L"receiver");
array2554 = (Object)new_Type_Array_with(1, (Object)localvariable3235);
// first
send23276 = (Object)new_AST_Send((Object)localvariable3234, (Object)symbol3961, 0);
// message:
send23277 = (Object)new_AST_Send((Object)localvariable3235, (Object)symbol4005, 1, (Object)send23276);
smallint1602 = (Object)new_Type_SmallInt(2);
constant4546 = (Object)new_AST_Constant((Object)smallint1602);
// at:
send23278 = (Object)new_AST_Send((Object)localvariable3234, (Object)SMB_at_, 1, (Object)constant4546);
// new
send23279 = (Object)new_AST_Send((Object)classreference575, (Object)symbol3915, 0);
block1414 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23279);
// resultIfFailed:
send23280 = (Object)new_AST_Send((Object)send23278, (Object)symbol4147, 1, (Object)block1414);
// temporaries:
send23281 = (Object)new_AST_Send((Object)localvariable3235, (Object)symbol4012, 1, (Object)send23280);
smallint1603 = (Object)new_Type_SmallInt(3);
constant4547 = (Object)new_AST_Constant((Object)smallint1603);
// at:
send23282 = (Object)new_AST_Send((Object)localvariable3234, (Object)SMB_at_, 1, (Object)constant4547);
// annotations:
send23283 = (Object)new_AST_Send((Object)localvariable3235, (Object)symbol4013, 1, (Object)send23282);
smallint1604 = (Object)new_Type_SmallInt(4);
constant4548 = (Object)new_AST_Constant((Object)smallint1604);
// at:
send23284 = (Object)new_AST_Send((Object)localvariable3234, (Object)SMB_at_, 1, (Object)constant4548);
// statements:
send23285 = (Object)new_AST_Send((Object)localvariable3235, (Object)symbol4009, 1, (Object)send23284);
// yourself
send23286 = (Object)new_AST_Send((Object)localvariable3235, (Object)symbol3824, 0);
block1415 = (Object)new_AST_Block_with((Type_Array)array2554, (Type_Array)empty_Type_Array, 2, 5, send23277, send23281, send23283, send23285, send23286);
// new
send23287 = (Object)new_AST_Send((Object)classreference614, (Object)symbol3915, 0);
// value:
send23288 = (Object)new_AST_Send((Object)block1415, (Object)SMB_value_, 1, (Object)send23287);
block1416 = (Object)new_AST_Block_with((Type_Array)array2553, (Type_Array)empty_Type_Array, 1, 1, send23288);
// named:parsing:semantics:
send23289 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4545, (Object)send23275, (Object)block1416);
// separator
send23290 = (Object)new_AST_Send((Object)Self, (Object)symbol4167, 0);
// separator:
send23291 = (Object)new_AST_Send((Object)send23289, (Object)symbol4118, 1, (Object)send23290);
method3209 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23291);
symbol4091 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure3209 = (Object)new_Runtime_MethodClosure(method3209);
store_method((Type_Class)class535, (Type_Symbol)symbol4091, (Runtime_MethodClosure)methodclosure3209);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string2695 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant4549 = (Object)new_AST_Constant((Object)string2695);
symbol4230 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
// asPEGChoice
send23292 = (Object)new_AST_Send((Object)constant4549, (Object)symbol4230, 0);
symbol4231 = (Object)new_Type_Symbol_cached(L"separators");
// separators
send23293 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4231, 0);
symbol4232 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send23294 = (Object)new_AST_Send((Object)Self, (Object)symbol4232, 0);
symbol4233 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send23295 = (Object)new_AST_Send((Object)Self, (Object)symbol4233, 0);
// <=
send23296 = (Object)new_AST_Send((Object)send23294, (Object)symbol4122, 1, (Object)send23295);
// <=
send23297 = (Object)new_AST_Send((Object)send23293, (Object)symbol4122, 1, (Object)send23296);
// |
send23298 = (Object)new_AST_Send((Object)send23292, (Object)SMB__or, 1, (Object)send23297);
symbol4234 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send23299 = (Object)new_AST_Send((Object)Self, (Object)symbol4234, 0);
// <=
send23300 = (Object)new_AST_Send((Object)send23298, (Object)symbol4122, 1, (Object)send23299);
method3210 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23300);
symbol4075 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure3210 = (Object)new_Runtime_MethodClosure(method3210);
store_method((Type_Class)class535, (Type_Symbol)symbol4075, (Runtime_MethodClosure)methodclosure3210);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send23301 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
// messageExpression
send23302 = (Object)new_AST_Send((Object)Self, (Object)symbol4190, 0);
// separator
send23303 = (Object)new_AST_Send((Object)Self, (Object)symbol4167, 0);
// separator:
send23304 = (Object)new_AST_Send((Object)send23302, (Object)symbol4118, 1, (Object)send23303);
method3211 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send23301, send23304);
symbol4045 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure3211 = (Object)new_Runtime_MethodClosure(method3211);
store_method((Type_Class)class535, (Type_Symbol)symbol4045, (Runtime_MethodClosure)methodclosure3211);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
string2696 = (Object)new_Type_String(L"TEMPORARIES");
constant4550 = (Object)new_AST_Constant((Object)string2696);
// bar
send23305 = (Object)new_AST_Send((Object)Self, (Object)symbol4228, 0);
symbol4235 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send23306 = (Object)new_AST_Send((Object)Self, (Object)symbol4235, 0);
// times
send23307 = (Object)new_AST_Send((Object)send23306, (Object)symbol4101, 0);
// &
send23308 = (Object)new_AST_Send((Object)send23305, (Object)SMB__and, 1, (Object)send23307);
// bar
send23309 = (Object)new_AST_Send((Object)Self, (Object)symbol4228, 0);
// <&
send23310 = (Object)new_AST_Send((Object)send23308, (Object)symbol4145, 1, (Object)send23309);
// named:parsing:
send23311 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4200, 2, (Object)constant4550, (Object)send23310);
method3212 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23311);
symbol4057 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure3212 = (Object)new_Runtime_MethodClosure(method3212);
store_method((Type_Class)class535, (Type_Symbol)symbol4057, (Runtime_MethodClosure)methodclosure3212);


// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
constant4551 = (Object)new_AST_Constant((Object)symbol4190);
string2697 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant4552 = (Object)new_AST_Constant((Object)string2697);
// named:
send23312 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4128, 1, (Object)constant4552);
block1417 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23312);
// at:ifAbsentPut:
send23313 = (Object)new_AST_Send((Object)instancevariable775, (Object)symbol4138, 2, (Object)constant4551, (Object)block1417);
method3213 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23313);
symbol4085 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
methodclosure3213 = (Object)new_Runtime_MethodClosure(method3213);
store_method((Type_Class)class535, (Type_Symbol)symbol4085, (Runtime_MethodClosure)methodclosure3213);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable3236 = (Object)new_AST_Variable_named(L"anObject");
array2555 = (Object)new_Type_Array_with(1, (Object)localvariable3236);
variable155 = (Object)new_AST_Variable_named(L"return");
array2556 = (Object)new_Type_Array_with(1, (Object)variable155);
symbol4236 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send23314 = (Object)new_AST_Send((Object)localvariable3236, (Object)symbol4236, 0);
// escape:
send23315 = (Object)new_AST_Send((Object)variable155, (Object)SMB_escape_, 1, (Object)localvariable3236);
block1418 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23315);
// ifFalse:
send23316 = (Object)new_AST_Send((Object)send23314, (Object)SMB_ifFalse_, 1, (Object)block1418);
// named:
send23317 = (Object)new_AST_Send((Object)classreference605, (Object)symbol4128, 1, (Object)localvariable3236);
block1419 = (Object)new_AST_Block_with((Type_Array)array2556, (Type_Array)empty_Type_Array, 1, 2, send23316, send23317);
// on:
send23318 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1419);
method3214 = (Object)new_AST_Method_with((Type_Array)array2555, (Type_Array)empty_Type_Array, 1, send23318);
symbol4027 = (Object)new_Type_Symbol_cached(L"createSymbol:");
methodclosure3214 = (Object)new_Runtime_MethodClosure(method3214);
store_method((Type_Class)class535, (Type_Symbol)symbol4027, (Runtime_MethodClosure)methodclosure3214);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable3237 = (Object)new_AST_Variable_named(L"result");
array2557 = (Object)new_Type_Array_with(1, (Object)localvariable3237);
string2698 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant4553 = (Object)new_AST_Constant((Object)string2698);
// keyword
send23319 = (Object)new_AST_Send((Object)Self, (Object)symbol4197, 0);
symbol4237 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send23320 = (Object)new_AST_Send((Object)Self, (Object)symbol4237, 0);
// &
send23321 = (Object)new_AST_Send((Object)send23319, (Object)SMB__and, 1, (Object)send23320);
// plus
send23322 = (Object)new_AST_Send((Object)send23321, (Object)symbol4113, 0);
localvariable3238 = (Object)new_AST_Variable_named(L"pairs");
array2558 = (Object)new_Type_Array_with(1, (Object)localvariable3238);
// new
send23323 = (Object)new_AST_Send((Object)classreference616, (Object)symbol3915, 0);
assign2881 = (Object)new_AST_Assign((Object)localvariable3237, (Object)send23323);
localvariable3239 = (Object)new_AST_Variable_named(L"pair");
array2559 = (Object)new_Type_Array_with(1, (Object)localvariable3239);
// keywords
send23324 = (Object)new_AST_Send((Object)localvariable3237, (Object)symbol4002, 0);
// first
send23325 = (Object)new_AST_Send((Object)localvariable3239, (Object)symbol3961, 0);
// add:
send23326 = (Object)new_AST_Send((Object)send23324, (Object)symbol3965, 1, (Object)send23325);
// parameters
send23327 = (Object)new_AST_Send((Object)localvariable3237, (Object)symbol3997, 0);
symbol4032 = (Object)new_Type_Symbol_cached(L"createVariable:");
smallint1605 = (Object)new_Type_SmallInt(2);
constant4554 = (Object)new_AST_Constant((Object)smallint1605);
// at:
send23328 = (Object)new_AST_Send((Object)localvariable3239, (Object)SMB_at_, 1, (Object)constant4554);
// createVariable:
send23329 = (Object)new_AST_Send((Object)Self, (Object)symbol4032, 1, (Object)send23328);
// add:
send23330 = (Object)new_AST_Send((Object)send23327, (Object)symbol3965, 1, (Object)send23329);
block1420 = (Object)new_AST_Block_with((Type_Array)array2559, (Type_Array)empty_Type_Array, 2, 2, send23326, send23330);
// do:
send23331 = (Object)new_AST_Send((Object)localvariable3238, (Object)symbol3964, 1, (Object)block1420);
// selectorName
send23332 = (Object)new_AST_Send((Object)localvariable3237, (Object)symbol3995, 0);
// named:
send23333 = (Object)new_AST_Send((Object)classreference605, (Object)symbol4128, 1, (Object)send23332);
// selector:
send23334 = (Object)new_AST_Send((Object)localvariable3237, (Object)symbol3996, 1, (Object)send23333);
block1421 = (Object)new_AST_Block_with((Type_Array)array2558, (Type_Array)empty_Type_Array, 1, 4, assign2881, send23331, send23334, localvariable3237);
// named:parsing:semantics:
send23335 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4553, (Object)send23322, (Object)block1421);
method3215 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2557, 1, send23335);
symbol4050 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure3215 = (Object)new_Runtime_MethodClosure(method3215);
store_method((Type_Class)class535, (Type_Symbol)symbol4050, (Runtime_MethodClosure)methodclosure3215);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string2699 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant4555 = (Object)new_AST_Constant((Object)string2699);
// binarySelector
send23336 = (Object)new_AST_Send((Object)Self, (Object)symbol4219, 0);
// unaryObjectDescription
send23337 = (Object)new_AST_Send((Object)Self, (Object)symbol4207, 0);
// &
send23338 = (Object)new_AST_Send((Object)send23336, (Object)SMB__and, 1, (Object)send23337);
localvariable3240 = (Object)new_AST_Variable_named(L"parts");
array2560 = (Object)new_Type_Array_with(1, (Object)localvariable3240);
localvariable3241 = (Object)new_AST_Variable_named(L"receiver");
array2561 = (Object)new_Type_Array_with(1, (Object)localvariable3241);
// first
send23339 = (Object)new_AST_Send((Object)localvariable3240, (Object)symbol3961, 0);
// createSymbol:
send23340 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)send23339);
// selector:
send23341 = (Object)new_AST_Send((Object)localvariable3241, (Object)symbol3996, 1, (Object)send23340);
smallint1606 = (Object)new_Type_SmallInt(2);
constant4556 = (Object)new_AST_Constant((Object)smallint1606);
// at:
send23342 = (Object)new_AST_Send((Object)localvariable3240, (Object)SMB_at_, 1, (Object)constant4556);
// argument:
send23343 = (Object)new_AST_Send((Object)localvariable3241, (Object)symbol3999, 1, (Object)send23342);
block1422 = (Object)new_AST_Block_with((Type_Array)array2561, (Type_Array)empty_Type_Array, 2, 2, send23341, send23343);
// new
send23344 = (Object)new_AST_Send((Object)classreference601, (Object)symbol3915, 0);
// value:
send23345 = (Object)new_AST_Send((Object)block1422, (Object)SMB_value_, 1, (Object)send23344);
block1423 = (Object)new_AST_Block_with((Type_Array)array2560, (Type_Array)empty_Type_Array, 1, 1, send23345);
// named:parsing:semantics:
send23346 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4555, (Object)send23338, (Object)block1423);
method3216 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23346);
symbol4039 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure3216 = (Object)new_Runtime_MethodClosure(method3216);
store_method((Type_Class)class535, (Type_Symbol)symbol4039, (Runtime_MethodClosure)methodclosure3216);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string2700 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant4557 = (Object)new_AST_Constant((Object)string2700);
// keyword
send23347 = (Object)new_AST_Send((Object)Self, (Object)symbol4197, 0);
// primary
send23348 = (Object)new_AST_Send((Object)Self, (Object)symbol4208, 0);
// &
send23349 = (Object)new_AST_Send((Object)send23347, (Object)SMB__and, 1, (Object)send23348);
// plus
send23350 = (Object)new_AST_Send((Object)send23349, (Object)symbol4113, 0);
localvariable3242 = (Object)new_AST_Variable_named(L"result");
array2562 = (Object)new_Type_Array_with(1, (Object)localvariable3242);
localvariable3243 = (Object)new_AST_Variable_named(L"receiver");
array2563 = (Object)new_Type_Array_with(1, (Object)localvariable3243);
localvariable3244 = (Object)new_AST_Variable_named(L"each");
array2564 = (Object)new_Type_Array_with(1, (Object)localvariable3244);
// first
send23351 = (Object)new_AST_Send((Object)localvariable3244, (Object)symbol3961, 0);
// named:
send23352 = (Object)new_AST_Send((Object)classreference605, (Object)symbol4128, 1, (Object)send23351);
block1424 = (Object)new_AST_Block_with((Type_Array)array2564, (Type_Array)empty_Type_Array, 3, 1, send23352);
// collect:
send23353 = (Object)new_AST_Send((Object)localvariable3242, (Object)symbol4206, 1, (Object)block1424);
// keywords:
send23354 = (Object)new_AST_Send((Object)localvariable3243, (Object)symbol4001, 1, (Object)send23353);
// new
send23355 = (Object)new_AST_Send((Object)classreference620, (Object)symbol3915, 0);
constant4558 = (Object)new_AST_Constant((Object)symbol3961);
// collect:
send23356 = (Object)new_AST_Send((Object)localvariable3242, (Object)symbol4206, 1, (Object)constant4558);
// keywords:
send23357 = (Object)new_AST_Send((Object)send23355, (Object)symbol4001, 1, (Object)send23356);
// selector:
send23358 = (Object)new_AST_Send((Object)localvariable3243, (Object)symbol3996, 1, (Object)send23357);
constant4559 = (Object)new_AST_Constant((Object)symbol4222);
// collect:
send23359 = (Object)new_AST_Send((Object)localvariable3242, (Object)symbol4206, 1, (Object)constant4559);
// arguments:
send23360 = (Object)new_AST_Send((Object)localvariable3243, (Object)symbol4003, 1, (Object)send23359);
block1425 = (Object)new_AST_Block_with((Type_Array)array2563, (Type_Array)empty_Type_Array, 2, 3, send23354, send23358, send23360);
// new
send23361 = (Object)new_AST_Send((Object)classreference618, (Object)symbol3915, 0);
// value:
send23362 = (Object)new_AST_Send((Object)block1425, (Object)SMB_value_, 1, (Object)send23361);
block1426 = (Object)new_AST_Block_with((Type_Array)array2562, (Type_Array)empty_Type_Array, 1, 1, send23362);
// named:parsing:semantics:
send23363 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4557, (Object)send23350, (Object)block1426);
method3217 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23363);
symbol4067 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure3217 = (Object)new_Runtime_MethodClosure(method3217);
store_method((Type_Class)class535, (Type_Symbol)symbol4067, (Runtime_MethodClosure)methodclosure3217);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string2701 = (Object)new_Type_String(L"NUMBER");
constant4560 = (Object)new_AST_Constant((Object)string2701);
// decimalDigit
send23364 = (Object)new_AST_Send((Object)Self, (Object)symbol4232, 0);
// plus
send23365 = (Object)new_AST_Send((Object)send23364, (Object)symbol4113, 0);
localvariable3245 = (Object)new_AST_Variable_named(L"result");
array2565 = (Object)new_Type_Array_with(1, (Object)localvariable3245);
localvariable3246 = (Object)new_AST_Variable_named(L"receiver");
array2566 = (Object)new_Type_Array_with(1, (Object)localvariable3246);
string2702 = (Object)new_Type_String(L"");
constant4561 = (Object)new_AST_Constant((Object)string2702);
localvariable3247 = (Object)new_AST_Variable_named(L"c");
localvariable3248 = (Object)new_AST_Variable_named(L"e");
array2567 = (Object)new_Type_Array_with(2, (Object)localvariable3247, (Object)localvariable3248);
// ,
send23366 = (Object)new_AST_Send((Object)localvariable3247, (Object)SMB__concat, 1, (Object)localvariable3248);
block1427 = (Object)new_AST_Block_with((Type_Array)array2567, (Type_Array)empty_Type_Array, 3, 1, send23366);
// inject:into:
send23367 = (Object)new_AST_Send((Object)localvariable3245, (Object)symbol3966, 2, (Object)constant4561, (Object)block1427);
// number:
send23368 = (Object)new_AST_Send((Object)localvariable3246, (Object)symbol3968, 1, (Object)send23367);
string2703 = (Object)new_Type_String(L"10");
constant4562 = (Object)new_AST_Constant((Object)string2703);
// base:
send23369 = (Object)new_AST_Send((Object)localvariable3246, (Object)symbol3974, 1, (Object)constant4562);
block1428 = (Object)new_AST_Block_with((Type_Array)array2566, (Type_Array)empty_Type_Array, 2, 2, send23368, send23369);
// new
send23370 = (Object)new_AST_Send((Object)classreference600, (Object)symbol3915, 0);
// value:
send23371 = (Object)new_AST_Send((Object)block1428, (Object)SMB_value_, 1, (Object)send23370);
block1429 = (Object)new_AST_Block_with((Type_Array)array2565, (Type_Array)empty_Type_Array, 1, 1, send23371);
// named:parsing:semantics:
send23372 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4560, (Object)send23365, (Object)block1429);
method3218 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23372);
symbol4095 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure3218 = (Object)new_Runtime_MethodClosure(method3218);
store_method((Type_Class)class535, (Type_Symbol)symbol4095, (Runtime_MethodClosure)methodclosure3218);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable3249 = (Object)new_AST_Variable_named(L"name");
array2568 = (Object)new_Type_Array_with(1, (Object)localvariable3249);
variable156 = (Object)new_AST_Variable_named(L"return");
array2569 = (Object)new_Type_Array_with(1, (Object)variable156);
string2704 = (Object)new_Type_String(L"self");
constant4563 = (Object)new_AST_Constant((Object)string2704);
// =
send23373 = (Object)new_AST_Send((Object)localvariable3249, (Object)SMB__equal, 1, (Object)constant4563);
// new
send23374 = (Object)new_AST_Send((Object)classreference611, (Object)symbol3915, 0);
// escape:
send23375 = (Object)new_AST_Send((Object)variable156, (Object)SMB_escape_, 1, (Object)send23374);
block1430 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23375);
// ifTrue:
send23376 = (Object)new_AST_Send((Object)send23373, (Object)SMB_ifTrue_, 1, (Object)block1430);
string2705 = (Object)new_Type_String(L"super");
constant4564 = (Object)new_AST_Constant((Object)string2705);
// =
send23377 = (Object)new_AST_Send((Object)localvariable3249, (Object)SMB__equal, 1, (Object)constant4564);
// new
send23378 = (Object)new_AST_Send((Object)classreference610, (Object)symbol3915, 0);
// escape:
send23379 = (Object)new_AST_Send((Object)variable156, (Object)SMB_escape_, 1, (Object)send23378);
block1431 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23379);
// ifTrue:
send23380 = (Object)new_AST_Send((Object)send23377, (Object)SMB_ifTrue_, 1, (Object)block1431);
// new
send23381 = (Object)new_AST_Send((Object)classreference609, (Object)symbol3915, 0);
// name:
send23382 = (Object)new_AST_Send((Object)send23381, (Object)symbol3985, 1, (Object)localvariable3249);
block1432 = (Object)new_AST_Block_with((Type_Array)array2569, (Type_Array)empty_Type_Array, 1, 3, send23376, send23380, send23382);
// on:
send23383 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1432);
method3219 = (Object)new_AST_Method_with((Type_Array)array2568, (Type_Array)empty_Type_Array, 1, send23383);
methodclosure3219 = (Object)new_Runtime_MethodClosure(method3219);
store_method((Type_Class)class535, (Type_Symbol)symbol4032, (Runtime_MethodClosure)methodclosure3219);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string2706 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant4565 = (Object)new_AST_Constant((Object)string2706);
string2707 = (Object)new_Type_String(L"$");
constant4566 = (Object)new_AST_Constant((Object)string2707);
// asPEG
send23384 = (Object)new_AST_Send((Object)constant4566, (Object)symbol4106, 0);
// omit:
send23385 = (Object)new_AST_Send((Object)send23384, (Object)symbol4110, 1, (Object)True_Const);
// character
send23386 = (Object)new_AST_Send((Object)Self, (Object)symbol4189, 0);
// &&
send23387 = (Object)new_AST_Send((Object)send23385, (Object)symbol4102, 1, (Object)send23386);
localvariable3250 = (Object)new_AST_Variable_named(L"char");
array2570 = (Object)new_Type_Array_with(1, (Object)localvariable3250);
// new
send23388 = (Object)new_AST_Send((Object)classreference622, (Object)symbol3915, 0);
// first
send23389 = (Object)new_AST_Send((Object)localvariable3250, (Object)symbol3961, 0);
// char:
send23390 = (Object)new_AST_Send((Object)send23388, (Object)symbol4123, 1, (Object)send23389);
block1433 = (Object)new_AST_Block_with((Type_Array)array2570, (Type_Array)empty_Type_Array, 1, 1, send23390);
// named:parsing:semantics:
send23391 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4565, (Object)send23387, (Object)block1433);
method3220 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23391);
symbol4060 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure3220 = (Object)new_Runtime_MethodClosure(method3220);
store_method((Type_Class)class535, (Type_Symbol)symbol4060, (Runtime_MethodClosure)methodclosure3220);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
// identifier
send23392 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
method3221 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23392);
symbol4049 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure3221 = (Object)new_Runtime_MethodClosure(method3221);
store_method((Type_Class)class535, (Type_Symbol)symbol4049, (Runtime_MethodClosure)methodclosure3221);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable3251 = (Object)new_AST_Variable_named(L"receiver");
array2571 = (Object)new_Type_Array_with(1, (Object)localvariable3251);
string2708 = (Object)new_Type_String(L";");
constant4567 = (Object)new_AST_Constant((Object)string2708);
// asPEG
send23393 = (Object)new_AST_Send((Object)constant4567, (Object)symbol4106, 0);
// omit:
send23394 = (Object)new_AST_Send((Object)send23393, (Object)symbol4110, 1, (Object)True_Const);
// keywordMessageExpression
send23395 = (Object)new_AST_Send((Object)Self, (Object)symbol4175, 0);
symbol4238 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send23396 = (Object)new_AST_Send((Object)Self, (Object)symbol4238, 0);
// |
send23397 = (Object)new_AST_Send((Object)send23395, (Object)SMB__or, 1, (Object)send23396);
// &
send23398 = (Object)new_AST_Send((Object)send23394, (Object)SMB__and, 1, (Object)send23397);
symbol4239 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send23399 = (Object)new_AST_Send((Object)Self, (Object)symbol4239, 0);
// <=
send23400 = (Object)new_AST_Send((Object)send23398, (Object)symbol4122, 1, (Object)send23399);
// plus
send23401 = (Object)new_AST_Send((Object)send23400, (Object)symbol4113, 0);
// &
send23402 = (Object)new_AST_Send((Object)localvariable3251, (Object)SMB__and, 1, (Object)send23401);
localvariable3252 = (Object)new_AST_Variable_named(L"parts");
array2572 = (Object)new_Type_Array_with(1, (Object)localvariable3252);
smallint1607 = (Object)new_Type_SmallInt(2);
constant4568 = (Object)new_AST_Constant((Object)smallint1607);
// at:
send23403 = (Object)new_AST_Send((Object)localvariable3252, (Object)SMB_at_, 1, (Object)constant4568);
symbol4240 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send23404 = (Object)new_AST_Send((Object)localvariable3252, (Object)symbol3961, 0);
// addFirst:
send23405 = (Object)new_AST_Send((Object)send23403, (Object)symbol4240, 1, (Object)send23404);
localvariable3253 = (Object)new_AST_Variable_named(L"receiver");
array2573 = (Object)new_Type_Array_with(1, (Object)localvariable3253);
// first
send23406 = (Object)new_AST_Send((Object)localvariable3252, (Object)symbol3961, 0);
// receiver
send23407 = (Object)new_AST_Send((Object)send23406, (Object)symbol3992, 0);
// receiver:
send23408 = (Object)new_AST_Send((Object)localvariable3253, (Object)symbol3990, 1, (Object)send23407);
smallint1608 = (Object)new_Type_SmallInt(2);
constant4569 = (Object)new_AST_Constant((Object)smallint1608);
// at:
send23409 = (Object)new_AST_Send((Object)localvariable3252, (Object)SMB_at_, 1, (Object)constant4569);
// cascades:
send23410 = (Object)new_AST_Send((Object)localvariable3253, (Object)symbol3991, 1, (Object)send23409);
block1434 = (Object)new_AST_Block_with((Type_Array)array2573, (Type_Array)empty_Type_Array, 3, 2, send23408, send23410);
// new
send23411 = (Object)new_AST_Send((Object)classreference623, (Object)symbol3915, 0);
// value:
send23412 = (Object)new_AST_Send((Object)block1434, (Object)SMB_value_, 1, (Object)send23411);
block1435 = (Object)new_AST_Block_with((Type_Array)array2572, (Type_Array)empty_Type_Array, 2, 2, send23405, send23412);
// semantics:
send23413 = (Object)new_AST_Send((Object)localvariable3251, (Object)symbol4119, 1, (Object)block1435);
block1436 = (Object)new_AST_Block_with((Type_Array)array2571, (Type_Array)empty_Type_Array, 1, 2, send23402, send23413);
// cascadedMessageExpression
send23414 = (Object)new_AST_Send((Object)Self, (Object)symbol4217, 0);
// messageExpression
send23415 = (Object)new_AST_Send((Object)Self, (Object)symbol4190, 0);
// <=
send23416 = (Object)new_AST_Send((Object)send23414, (Object)symbol4122, 1, (Object)send23415);
// value:
send23417 = (Object)new_AST_Send((Object)block1436, (Object)SMB_value_, 1, (Object)send23416);
method3222 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23417);
symbol4072 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
methodclosure3222 = (Object)new_Runtime_MethodClosure(method3222);
store_method((Type_Class)class535, (Type_Symbol)symbol4072, (Runtime_MethodClosure)methodclosure3222);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string2709 = (Object)new_Type_String(L"VARIABLE-NAME");
constant4570 = (Object)new_AST_Constant((Object)string2709);
// identifier
send23418 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
localvariable3254 = (Object)new_AST_Variable_named(L"result");
array2574 = (Object)new_Type_Array_with(1, (Object)localvariable3254);
// createVariable:
send23419 = (Object)new_AST_Send((Object)Self, (Object)symbol4032, 1, (Object)localvariable3254);
block1437 = (Object)new_AST_Block_with((Type_Array)array2574, (Type_Array)empty_Type_Array, 1, 1, send23419);
// named:parsing:semantics:
send23420 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4570, (Object)send23418, (Object)block1437);
method3223 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23420);
symbol4089 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure3223 = (Object)new_Runtime_MethodClosure(method3223);
store_method((Type_Class)class535, (Type_Symbol)symbol4089, (Runtime_MethodClosure)methodclosure3223);


// SCParser>>symbols
//symbols
// 	^ symbols
method3224 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable777);
symbol4042 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure3224 = (Object)new_Runtime_MethodClosure(method3224);
store_method((Type_Class)class535, (Type_Symbol)symbol4042, (Runtime_MethodClosure)methodclosure3224);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string2710 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant4571 = (Object)new_AST_Constant((Object)string2710);
// binarySelector
send23421 = (Object)new_AST_Send((Object)Self, (Object)symbol4219, 0);
// parameterName
send23422 = (Object)new_AST_Send((Object)Self, (Object)symbol4237, 0);
// &
send23423 = (Object)new_AST_Send((Object)send23421, (Object)SMB__and, 1, (Object)send23422);
localvariable3255 = (Object)new_AST_Variable_named(L"result");
array2575 = (Object)new_Type_Array_with(1, (Object)localvariable3255);
localvariable3256 = (Object)new_AST_Variable_named(L"receiver");
array2576 = (Object)new_Type_Array_with(1, (Object)localvariable3256);
// first
send23424 = (Object)new_AST_Send((Object)localvariable3255, (Object)symbol3961, 0);
// createSymbol:
send23425 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)send23424);
// selector:
send23426 = (Object)new_AST_Send((Object)localvariable3256, (Object)symbol3996, 1, (Object)send23425);
smallint1609 = (Object)new_Type_SmallInt(2);
constant4572 = (Object)new_AST_Constant((Object)smallint1609);
// at:
send23427 = (Object)new_AST_Send((Object)localvariable3255, (Object)SMB_at_, 1, (Object)constant4572);
// createVariable:
send23428 = (Object)new_AST_Send((Object)Self, (Object)symbol4032, 1, (Object)send23427);
// parameter:
send23429 = (Object)new_AST_Send((Object)localvariable3256, (Object)symbol4014, 1, (Object)send23428);
block1438 = (Object)new_AST_Block_with((Type_Array)array2576, (Type_Array)empty_Type_Array, 2, 2, send23426, send23429);
// new
send23430 = (Object)new_AST_Send((Object)classreference612, (Object)symbol3915, 0);
// value:
send23431 = (Object)new_AST_Send((Object)block1438, (Object)SMB_value_, 1, (Object)send23430);
block1439 = (Object)new_AST_Block_with((Type_Array)array2575, (Type_Array)empty_Type_Array, 1, 1, send23431);
// named:parsing:semantics:
send23432 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4571, (Object)send23423, (Object)block1439);
method3225 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23432);
symbol4054 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure3225 = (Object)new_Runtime_MethodClosure(method3225);
store_method((Type_Class)class535, (Type_Symbol)symbol4054, (Runtime_MethodClosure)methodclosure3225);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable3257 = (Object)new_AST_Variable_named(L"commentBorder");
array2577 = (Object)new_Type_Array_with(1, (Object)localvariable3257);
string2711 = (Object)new_Type_String(L"\"");
constant4573 = (Object)new_AST_Constant((Object)string2711);
// asPEG
send23433 = (Object)new_AST_Send((Object)constant4573, (Object)symbol4106, 0);
assign2882 = (Object)new_AST_Assign((Object)localvariable3257, (Object)send23433);
// not
send23434 = (Object)new_AST_Send((Object)localvariable3257, (Object)SMB_not, 0);
// strongTimes
send23435 = (Object)new_AST_Send((Object)send23434, (Object)symbol4103, 0);
// &&
send23436 = (Object)new_AST_Send((Object)localvariable3257, (Object)symbol4102, 1, (Object)send23435);
// <&
send23437 = (Object)new_AST_Send((Object)send23436, (Object)symbol4145, 1, (Object)localvariable3257);
method3226 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2577, 2, assign2882, send23437);
symbol4082 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure3226 = (Object)new_Runtime_MethodClosure(method3226);
store_method((Type_Class)class535, (Type_Symbol)symbol4082, (Runtime_MethodClosure)methodclosure3226);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new
// 						selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
symbol4026 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
// preStoreBinaryObjectDescription
send23438 = (Object)new_AST_Send((Object)Self, (Object)symbol4026, 0);
symbol4241 = (Object)new_Type_Symbol_cached(L"binaryExpression");
constant4574 = (Object)new_AST_Constant((Object)symbol4241);
string2712 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant4575 = (Object)new_AST_Constant((Object)string2712);
// unaryObjectDescription
send23439 = (Object)new_AST_Send((Object)Self, (Object)symbol4207, 0);
// binarySelector
send23440 = (Object)new_AST_Send((Object)Self, (Object)symbol4219, 0);
// &
send23441 = (Object)new_AST_Send((Object)send23439, (Object)SMB__and, 1, (Object)send23440);
// binaryObjectDescription
send23442 = (Object)new_AST_Send((Object)Self, (Object)symbol4186, 0);
// <&
send23443 = (Object)new_AST_Send((Object)send23441, (Object)symbol4145, 1, (Object)send23442);
localvariable3258 = (Object)new_AST_Variable_named(L"parts");
array2578 = (Object)new_Type_Array_with(1, (Object)localvariable3258);
smallint1610 = (Object)new_Type_SmallInt(3);
constant4576 = (Object)new_AST_Constant((Object)smallint1610);
// at:
send23444 = (Object)new_AST_Send((Object)localvariable3258, (Object)SMB_at_, 1, (Object)constant4576);
localvariable3259 = (Object)new_AST_Variable_named(L"receiver");
array2579 = (Object)new_Type_Array_with(1, (Object)localvariable3259);
// first
send23445 = (Object)new_AST_Send((Object)localvariable3258, (Object)symbol3961, 0);
// receiver:
send23446 = (Object)new_AST_Send((Object)localvariable3259, (Object)symbol3990, 1, (Object)send23445);
classreference625 = (Object)new_Organization_ClassReference((Type_Class)class563);
// new
send23447 = (Object)new_AST_Send((Object)classreference625, (Object)symbol3915, 0);
smallint1611 = (Object)new_Type_SmallInt(2);
constant4577 = (Object)new_AST_Constant((Object)smallint1611);
// at:
send23448 = (Object)new_AST_Send((Object)localvariable3258, (Object)SMB_at_, 1, (Object)constant4577);
// createSymbol:
send23449 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)send23448);
// selector:
send23450 = (Object)new_AST_Send((Object)send23447, (Object)symbol3996, 1, (Object)send23449);
// selector:
send23451 = (Object)new_AST_Send((Object)localvariable3259, (Object)symbol3996, 1, (Object)send23450);
block1440 = (Object)new_AST_Block_with((Type_Array)array2579, (Type_Array)empty_Type_Array, 2, 2, send23446, send23451);
// new
send23452 = (Object)new_AST_Send((Object)classreference601, (Object)symbol3915, 0);
// value:
send23453 = (Object)new_AST_Send((Object)block1440, (Object)SMB_value_, 1, (Object)send23452);
// argumentOfBinary:
send23454 = (Object)new_AST_Send((Object)send23444, (Object)symbol3948, 1, (Object)send23453);
block1441 = (Object)new_AST_Block_with((Type_Array)array2578, (Type_Array)empty_Type_Array, 1, 1, send23454);
// named:parsing:semantics:
send23455 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4575, (Object)send23443, (Object)block1441);
// at:ifAbsentPut:
send23456 = (Object)new_AST_Send((Object)instancevariable775, (Object)symbol4138, 2, (Object)constant4574, (Object)send23455);
symbol4025 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
// injectBinaryObjectDescription
send23457 = (Object)new_AST_Send((Object)Self, (Object)symbol4025, 0);
// binaryExpression
send23458 = (Object)new_AST_Send((Object)Self, (Object)symbol4241, 0);
method3227 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send23438, send23456, send23457, send23458);
symbol4024 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure3227 = (Object)new_Runtime_MethodClosure(method3227);
store_method((Type_Class)class535, (Type_Symbol)symbol4024, (Runtime_MethodClosure)methodclosure3227);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string2713 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant4578 = (Object)new_AST_Constant((Object)string2713);
// unarySelector
send23459 = (Object)new_AST_Send((Object)Self, (Object)symbol4202, 0);
localvariable3260 = (Object)new_AST_Variable_named(L"selector");
array2580 = (Object)new_Type_Array_with(1, (Object)localvariable3260);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send23460 = (Object)new_AST_Send((Object)Self, (Object)symbol3927, 0);
// selectorSymbol
send23461 = (Object)new_AST_Send((Object)send23460, (Object)symbol4004, 0);
method3228 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23461);
methodclosure3228 = (Object)new_Runtime_MethodClosure(method3228);
store_method((Type_Class)class559, (Type_Symbol)symbol4004, (Runtime_MethodClosure)methodclosure3228);

classreference626 = (Object)new_Organization_ClassReference((Type_Class)class559);
// new
send23462 = (Object)new_AST_Send((Object)classreference626, (Object)symbol3915, 0);
// selector:
send23463 = (Object)new_AST_Send((Object)send23462, (Object)symbol3996, 1, (Object)localvariable3260);
block1442 = (Object)new_AST_Block_with((Type_Array)array2580, (Type_Array)empty_Type_Array, 1, 1, send23463);
// named:parsing:semantics:
send23464 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4578, (Object)send23459, (Object)block1442);
method3229 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23464);
symbol4036 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure3229 = (Object)new_Runtime_MethodClosure(method3229);
store_method((Type_Class)class535, (Type_Symbol)symbol4036, (Runtime_MethodClosure)methodclosure3229);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send23465 = (Object)new_AST_Send((Object)Self, (Object)symbol4190, 0);
// keywordExpression
send23466 = (Object)new_AST_Send((Object)Self, (Object)symbol4213, 0);
// binaryExpression
send23467 = (Object)new_AST_Send((Object)Self, (Object)symbol4241, 0);
// |
send23468 = (Object)new_AST_Send((Object)send23466, (Object)SMB__or, 1, (Object)send23467);
// <=
send23469 = (Object)new_AST_Send((Object)send23465, (Object)symbol4122, 1, (Object)send23468);
// unaryExpression
send23470 = (Object)new_AST_Send((Object)Self, (Object)symbol4225, 0);
// <=
send23471 = (Object)new_AST_Send((Object)send23469, (Object)symbol4122, 1, (Object)send23470);
method3230 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23471);
symbol4064 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
methodclosure3230 = (Object)new_Runtime_MethodClosure(method3230);
store_method((Type_Class)class535, (Type_Symbol)symbol4064, (Runtime_MethodClosure)methodclosure3230);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string2714 = (Object)new_Type_String(L"IDENTIFIER");
constant4579 = (Object)new_AST_Constant((Object)string2714);
// letter
send23472 = (Object)new_AST_Send((Object)Self, (Object)symbol4233, 0);
// letter
send23473 = (Object)new_AST_Send((Object)Self, (Object)symbol4233, 0);
// decimalDigit
send23474 = (Object)new_AST_Send((Object)Self, (Object)symbol4232, 0);
// |
send23475 = (Object)new_AST_Send((Object)send23473, (Object)SMB__or, 1, (Object)send23474);
// strongTimes
send23476 = (Object)new_AST_Send((Object)send23475, (Object)symbol4103, 0);
// &&
send23477 = (Object)new_AST_Send((Object)send23472, (Object)symbol4102, 1, (Object)send23476);
localvariable3261 = (Object)new_AST_Variable_named(L"result");
array2581 = (Object)new_Type_Array_with(1, (Object)localvariable3261);
// second
send23478 = (Object)new_AST_Send((Object)localvariable3261, (Object)symbol4222, 0);
// first
send23479 = (Object)new_AST_Send((Object)localvariable3261, (Object)symbol3961, 0);
localvariable3262 = (Object)new_AST_Variable_named(L"c");
localvariable3263 = (Object)new_AST_Variable_named(L"e");
array2582 = (Object)new_Type_Array_with(2, (Object)localvariable3262, (Object)localvariable3263);
// ,
send23480 = (Object)new_AST_Send((Object)localvariable3262, (Object)SMB__concat, 1, (Object)localvariable3263);
block1443 = (Object)new_AST_Block_with((Type_Array)array2582, (Type_Array)empty_Type_Array, 2, 1, send23480);
// inject:into:
send23481 = (Object)new_AST_Send((Object)send23478, (Object)symbol3966, 2, (Object)send23479, (Object)block1443);
block1444 = (Object)new_AST_Block_with((Type_Array)array2581, (Type_Array)empty_Type_Array, 1, 1, send23481);
// named:parsing:semantics:
send23482 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4579, (Object)send23477, (Object)block1444);
method3231 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23482);
symbol4092 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure3231 = (Object)new_Runtime_MethodClosure(method3231);
store_method((Type_Class)class535, (Type_Symbol)symbol4092, (Runtime_MethodClosure)methodclosure3231);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string2715 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant4580 = (Object)new_AST_Constant((Object)string2715);
// symbol
send23483 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
localvariable3264 = (Object)new_AST_Variable_named(L"symbol");
array2583 = (Object)new_Type_Array_with(1, (Object)localvariable3264);
// new
send23484 = (Object)new_AST_Send((Object)classreference605, (Object)symbol3915, 0);
// symbol:
send23485 = (Object)new_AST_Send((Object)send23484, (Object)symbol3976, 1, (Object)localvariable3264);
block1445 = (Object)new_AST_Block_with((Type_Array)array2583, (Type_Array)empty_Type_Array, 1, 1, send23485);
// named:parsing:semantics:
send23486 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4580, (Object)send23483, (Object)block1445);
method3232 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23486);
symbol4076 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure3232 = (Object)new_Runtime_MethodClosure(method3232);
store_method((Type_Class)class535, (Type_Symbol)symbol4076, (Runtime_MethodClosure)methodclosure3232);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string2716 = (Object)new_Type_String(L"(");
constant4581 = (Object)new_AST_Constant((Object)string2716);
// asPEG
send23487 = (Object)new_AST_Send((Object)constant4581, (Object)symbol4106, 0);
// omit:
send23488 = (Object)new_AST_Send((Object)send23487, (Object)symbol4110, 1, (Object)True_Const);
// expression
send23489 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
// &
send23490 = (Object)new_AST_Send((Object)send23488, (Object)SMB__and, 1, (Object)send23489);
string2717 = (Object)new_Type_String(L")");
constant4582 = (Object)new_AST_Constant((Object)string2717);
// asPEG
send23491 = (Object)new_AST_Send((Object)constant4582, (Object)symbol4106, 0);
// omit:
send23492 = (Object)new_AST_Send((Object)send23491, (Object)symbol4110, 1, (Object)True_Const);
// <&
send23493 = (Object)new_AST_Send((Object)send23490, (Object)symbol4145, 1, (Object)send23492);
method3233 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23493);
symbol4046 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure3233 = (Object)new_Runtime_MethodClosure(method3233);
store_method((Type_Class)class535, (Type_Symbol)symbol4046, (Runtime_MethodClosure)methodclosure3233);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable3265 = (Object)new_AST_Variable_named(L"result");
array2584 = (Object)new_Type_Array_with(1, (Object)localvariable3265);
string2718 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant4583 = (Object)new_AST_Constant((Object)string2718);
// primary
send23494 = (Object)new_AST_Send((Object)Self, (Object)symbol4208, 0);
// unarySelector
send23495 = (Object)new_AST_Send((Object)Self, (Object)symbol4202, 0);
// plus
send23496 = (Object)new_AST_Send((Object)send23495, (Object)symbol4113, 0);
// &
send23497 = (Object)new_AST_Send((Object)send23494, (Object)SMB__and, 1, (Object)send23496);
localvariable3266 = (Object)new_AST_Variable_named(L"parts");
array2585 = (Object)new_Type_Array_with(1, (Object)localvariable3266);
// first
send23498 = (Object)new_AST_Send((Object)localvariable3266, (Object)symbol3961, 0);
assign2883 = (Object)new_AST_Assign((Object)localvariable3265, (Object)send23498);
smallint1612 = (Object)new_Type_SmallInt(2);
constant4584 = (Object)new_AST_Constant((Object)smallint1612);
// at:
send23499 = (Object)new_AST_Send((Object)localvariable3266, (Object)SMB_at_, 1, (Object)constant4584);
localvariable3267 = (Object)new_AST_Variable_named(L"selector");
array2586 = (Object)new_Type_Array_with(1, (Object)localvariable3267);
localvariable3268 = (Object)new_AST_Variable_named(L"receiver");
array2587 = (Object)new_Type_Array_with(1, (Object)localvariable3268);
// receiver:
send23500 = (Object)new_AST_Send((Object)localvariable3268, (Object)symbol3990, 1, (Object)localvariable3265);
// selector:
send23501 = (Object)new_AST_Send((Object)localvariable3268, (Object)symbol3996, 1, (Object)localvariable3267);
block1446 = (Object)new_AST_Block_with((Type_Array)array2587, (Type_Array)empty_Type_Array, 3, 2, send23500, send23501);
// new
send23502 = (Object)new_AST_Send((Object)classreference602, (Object)symbol3915, 0);
// value:
send23503 = (Object)new_AST_Send((Object)block1446, (Object)SMB_value_, 1, (Object)send23502);
assign2884 = (Object)new_AST_Assign((Object)localvariable3265, (Object)send23503);
block1447 = (Object)new_AST_Block_with((Type_Array)array2586, (Type_Array)empty_Type_Array, 2, 1, assign2884);
// do:
send23504 = (Object)new_AST_Send((Object)send23499, (Object)symbol3964, 1, (Object)block1447);
block1448 = (Object)new_AST_Block_with((Type_Array)array2585, (Type_Array)empty_Type_Array, 1, 3, assign2883, send23504, localvariable3265);
// named:parsing:semantics:
send23505 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4583, (Object)send23497, (Object)block1448);
method3234 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2584, 1, send23505);
symbol4058 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure3234 = (Object)new_Runtime_MethodClosure(method3234);
store_method((Type_Class)class535, (Type_Symbol)symbol4058, (Runtime_MethodClosure)methodclosure3234);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
// unaryExpression
send23506 = (Object)new_AST_Send((Object)Self, (Object)symbol4225, 0);
// primary
send23507 = (Object)new_AST_Send((Object)Self, (Object)symbol4208, 0);
// |
send23508 = (Object)new_AST_Send((Object)send23506, (Object)SMB__or, 1, (Object)send23507);
method3235 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23508);
symbol4086 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure3235 = (Object)new_Runtime_MethodClosure(method3235);
store_method((Type_Class)class535, (Type_Symbol)symbol4086, (Runtime_MethodClosure)methodclosure3235);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string2719 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant4585 = (Object)new_AST_Constant((Object)string2719);
// asPEGChoice
send23509 = (Object)new_AST_Send((Object)constant4585, (Object)symbol4230, 0);
method3236 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23509);
symbol4028 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure3236 = (Object)new_Runtime_MethodClosure(method3236);
store_method((Type_Class)class535, (Type_Symbol)symbol4028, (Runtime_MethodClosure)methodclosure3236);


// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string2720 = (Object)new_Type_String(L"RETURN");
constant4586 = (Object)new_AST_Constant((Object)string2720);
string2721 = (Object)new_Type_String(L"^");
constant4587 = (Object)new_AST_Constant((Object)string2721);
// asPEG
send23510 = (Object)new_AST_Send((Object)constant4587, (Object)symbol4106, 0);
// omit:
send23511 = (Object)new_AST_Send((Object)send23510, (Object)symbol4110, 1, (Object)True_Const);
// finalExpression
send23512 = (Object)new_AST_Send((Object)Self, (Object)symbol4203, 0);
// &
send23513 = (Object)new_AST_Send((Object)send23511, (Object)SMB__and, 1, (Object)send23512);
localvariable3269 = (Object)new_AST_Variable_named(L"expression");
array2588 = (Object)new_Type_Array_with(1, (Object)localvariable3269);
// new
send23514 = (Object)new_AST_Send((Object)classreference613, (Object)symbol3915, 0);
// expression:
send23515 = (Object)new_AST_Send((Object)send23514, (Object)symbol4018, 1, (Object)localvariable3269);
block1449 = (Object)new_AST_Block_with((Type_Array)array2588, (Type_Array)empty_Type_Array, 1, 1, send23515);
// named:parsing:semantics:
send23516 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4586, (Object)send23513, (Object)block1449);
method3237 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23516);
symbol4051 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure3237 = (Object)new_Runtime_MethodClosure(method3237);
store_method((Type_Class)class535, (Type_Symbol)symbol4051, (Runtime_MethodClosure)methodclosure3237);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
//             ifFalse: [ super doesNotUnderstand: message ].
//         self perform: selector
// 	]
localvariable3270 = (Object)new_AST_Variable_named(L"message");
array2589 = (Object)new_Type_Array_with(1, (Object)localvariable3270);
localvariable3271 = (Object)new_AST_Variable_named(L"selector");
array2590 = (Object)new_Type_Array_with(1, (Object)localvariable3271);
// selector
send23517 = (Object)new_AST_Send((Object)localvariable3270, (Object)symbol3927, 0);
string2722 = (Object)new_Type_String(L"initialize");
constant4588 = (Object)new_AST_Constant((Object)string2722);
// selector
send23518 = (Object)new_AST_Send((Object)localvariable3270, (Object)symbol3927, 0);
symbol4242 = (Object)new_Type_Symbol_cached(L"capitalized");
// capitalized
send23519 = (Object)new_AST_Send((Object)send23518, (Object)symbol4242, 0);
// ,
send23520 = (Object)new_AST_Send((Object)constant4588, (Object)SMB__concat, 1, (Object)send23519);
// asSymbol
send23521 = (Object)new_AST_Send((Object)send23520, (Object)SMB_asSymbol, 0);
assign2885 = (Object)new_AST_Assign((Object)localvariable3271, (Object)send23521);
symbol4243 = (Object)new_Type_Symbol_cached(L"respondsTo:");
// respondsTo:
send23522 = (Object)new_AST_Send((Object)Self, (Object)symbol4243, 1, (Object)localvariable3271);
super280 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3270);
block1450 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super280);
// ifFalse:
send23523 = (Object)new_AST_Send((Object)send23522, (Object)SMB_ifFalse_, 1, (Object)block1450);
symbol4244 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send23524 = (Object)new_AST_Send((Object)Self, (Object)symbol4244, 1, (Object)localvariable3271);
block1451 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, assign2885, send23523, send23524);
// at:ifAbsentPut:
send23525 = (Object)new_AST_Send((Object)instancevariable775, (Object)symbol4138, 2, (Object)send23517, (Object)block1451);
method3238 = (Object)new_AST_Method_with((Type_Array)array2589, (Type_Array)array2590, 1, send23525);
methodclosure3238 = (Object)new_Runtime_MethodClosure(method3238);
store_method((Type_Class)class535, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure3238);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant4589 = (Object)new_AST_Constant((Object)symbol4208);
string2723 = (Object)new_Type_String(L"PRIMARY");
constant4590 = (Object)new_AST_Constant((Object)string2723);
// named:
send23526 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4128, 1, (Object)constant4590);
block1452 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23526);
// at:ifAbsentPut:
send23527 = (Object)new_AST_Send((Object)instancevariable775, (Object)symbol4138, 2, (Object)constant4589, (Object)block1452);
method3239 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23527);
symbol4068 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
methodclosure3239 = (Object)new_Runtime_MethodClosure(method3239);
store_method((Type_Class)class535, (Type_Symbol)symbol4068, (Runtime_MethodClosure)methodclosure3239);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send23528 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
string2724 = (Object)new_Type_String(L".");
constant4591 = (Object)new_AST_Constant((Object)string2724);
// asPEG
send23529 = (Object)new_AST_Send((Object)constant4591, (Object)symbol4106, 0);
// optional
send23530 = (Object)new_AST_Send((Object)send23529, (Object)symbol4105, 0);
// omit:
send23531 = (Object)new_AST_Send((Object)send23530, (Object)symbol4110, 1, (Object)True_Const);
// &
send23532 = (Object)new_AST_Send((Object)send23528, (Object)SMB__and, 1, (Object)send23531);
method3240 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23532);
symbol4061 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure3240 = (Object)new_Runtime_MethodClosure(method3240);
store_method((Type_Class)class535, (Type_Symbol)symbol4061, (Runtime_MethodClosure)methodclosure3240);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string2725 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant4592 = (Object)new_AST_Constant((Object)string2725);
symbol4245 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send23533 = (Object)new_AST_Send((Object)Self, (Object)symbol4245, 0);
// letter
send23534 = (Object)new_AST_Send((Object)Self, (Object)symbol4233, 0);
// decimalDigit
send23535 = (Object)new_AST_Send((Object)Self, (Object)symbol4232, 0);
// |
send23536 = (Object)new_AST_Send((Object)send23534, (Object)SMB__or, 1, (Object)send23535);
// strongTimes
send23537 = (Object)new_AST_Send((Object)send23536, (Object)symbol4103, 0);
// &&
send23538 = (Object)new_AST_Send((Object)send23533, (Object)symbol4102, 1, (Object)send23537);
localvariable3272 = (Object)new_AST_Variable_named(L"result");
array2591 = (Object)new_Type_Array_with(1, (Object)localvariable3272);
// second
send23539 = (Object)new_AST_Send((Object)localvariable3272, (Object)symbol4222, 0);
// first
send23540 = (Object)new_AST_Send((Object)localvariable3272, (Object)symbol3961, 0);
localvariable3273 = (Object)new_AST_Variable_named(L"c");
localvariable3274 = (Object)new_AST_Variable_named(L"e");
array2592 = (Object)new_Type_Array_with(2, (Object)localvariable3273, (Object)localvariable3274);
// ,
send23541 = (Object)new_AST_Send((Object)localvariable3273, (Object)SMB__concat, 1, (Object)localvariable3274);
block1453 = (Object)new_AST_Block_with((Type_Array)array2592, (Type_Array)empty_Type_Array, 2, 1, send23541);
// inject:into:
send23542 = (Object)new_AST_Send((Object)send23539, (Object)symbol3966, 2, (Object)send23540, (Object)block1453);
block1454 = (Object)new_AST_Block_with((Type_Array)array2591, (Type_Array)empty_Type_Array, 1, 1, send23542);
// named:parsing:semantics:
send23543 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4592, (Object)send23538, (Object)block1454);
method3241 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23543);
symbol4073 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure3241 = (Object)new_Runtime_MethodClosure(method3241);
store_method((Type_Class)class535, (Type_Symbol)symbol4073, (Runtime_MethodClosure)methodclosure3241);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string2726 = (Object)new_Type_String(L"SYMBOL");
constant4593 = (Object)new_AST_Constant((Object)string2726);
// symbolKeywords
send23544 = (Object)new_AST_Send((Object)Self, (Object)symbol4218, 0);
// identifier
send23545 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
// binarySelector
send23546 = (Object)new_AST_Send((Object)Self, (Object)symbol4219, 0);
// <=
send23547 = (Object)new_AST_Send((Object)send23545, (Object)symbol4122, 1, (Object)send23546);
// |
send23548 = (Object)new_AST_Send((Object)send23544, (Object)SMB__or, 1, (Object)send23547);
// string
send23549 = (Object)new_AST_Send((Object)Self, (Object)symbol3980, 0);
// <=
send23550 = (Object)new_AST_Send((Object)send23548, (Object)symbol4122, 1, (Object)send23549);
// named:parsing:
send23551 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4200, 2, (Object)constant4593, (Object)send23550);
method3242 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23551);
symbol4043 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure3242 = (Object)new_Runtime_MethodClosure(method3242);
store_method((Type_Class)class535, (Type_Symbol)symbol4043, (Runtime_MethodClosure)methodclosure3242);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable3275 = (Object)new_AST_Variable_named(L"variables");
localvariable3276 = (Object)new_AST_Variable_named(L"expression");
array2593 = (Object)new_Type_Array_with(2, (Object)localvariable3275, (Object)localvariable3276);
// preStorePrimary
send23552 = (Object)new_AST_Send((Object)Self, (Object)symbol4068, 0);
// preStoreMessageExpression
send23553 = (Object)new_AST_Send((Object)Self, (Object)symbol4085, 0);
symbol4084 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
// preStoreCascadedMessageExpression
send23554 = (Object)new_AST_Send((Object)Self, (Object)symbol4084, 0);
constant4594 = (Object)new_AST_Constant((Object)symbol4019);
string2727 = (Object)new_Type_String(L"EXPRESSION");
constant4595 = (Object)new_AST_Constant((Object)string2727);
// assignmentExpressions
send23555 = (Object)new_AST_Send((Object)Self, (Object)symbol4205, 0);
// cascadedMessageExpression
send23556 = (Object)new_AST_Send((Object)Self, (Object)symbol4217, 0);
// messageExpression
send23557 = (Object)new_AST_Send((Object)Self, (Object)symbol4190, 0);
// |
send23558 = (Object)new_AST_Send((Object)send23556, (Object)SMB__or, 1, (Object)send23557);
// &
send23559 = (Object)new_AST_Send((Object)send23555, (Object)SMB__and, 1, (Object)send23558);
// primary
send23560 = (Object)new_AST_Send((Object)Self, (Object)symbol4208, 0);
// <=
send23561 = (Object)new_AST_Send((Object)send23559, (Object)symbol4122, 1, (Object)send23560);
localvariable3277 = (Object)new_AST_Variable_named(L"result");
array2594 = (Object)new_Type_Array_with(1, (Object)localvariable3277);
// first
send23562 = (Object)new_AST_Send((Object)localvariable3277, (Object)symbol3961, 0);
assign2886 = (Object)new_AST_Assign((Object)localvariable3275, (Object)send23562);
smallint1613 = (Object)new_Type_SmallInt(2);
constant4596 = (Object)new_AST_Constant((Object)smallint1613);
// at:
send23563 = (Object)new_AST_Send((Object)localvariable3277, (Object)SMB_at_, 1, (Object)constant4596);
assign2887 = (Object)new_AST_Assign((Object)localvariable3276, (Object)send23563);
symbol4246 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send23564 = (Object)new_AST_Send((Object)localvariable3275, (Object)symbol4246, 0);
localvariable3278 = (Object)new_AST_Variable_named(L"variable");
array2595 = (Object)new_Type_Array_with(1, (Object)localvariable3278);
localvariable3279 = (Object)new_AST_Variable_named(L"receiver");
array2596 = (Object)new_Type_Array_with(1, (Object)localvariable3279);
// expression:
send23565 = (Object)new_AST_Send((Object)localvariable3279, (Object)symbol4018, 1, (Object)localvariable3276);
// variable:
send23566 = (Object)new_AST_Send((Object)localvariable3279, (Object)symbol4020, 1, (Object)localvariable3278);
block1455 = (Object)new_AST_Block_with((Type_Array)array2596, (Type_Array)empty_Type_Array, 3, 2, send23565, send23566);
// new
send23567 = (Object)new_AST_Send((Object)classreference615, (Object)symbol3915, 0);
// value:
send23568 = (Object)new_AST_Send((Object)block1455, (Object)SMB_value_, 1, (Object)send23567);
assign2888 = (Object)new_AST_Assign((Object)localvariable3276, (Object)send23568);
block1456 = (Object)new_AST_Block_with((Type_Array)array2595, (Type_Array)empty_Type_Array, 2, 1, assign2888);
// do:
send23569 = (Object)new_AST_Send((Object)send23564, (Object)symbol3964, 1, (Object)block1456);
block1457 = (Object)new_AST_Block_with((Type_Array)array2594, (Type_Array)empty_Type_Array, 1, 4, assign2886, assign2887, send23569, localvariable3276);
// named:parsing:semantics:
send23570 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4595, (Object)send23561, (Object)block1457);
// at:put:
send23571 = (Object)new_AST_Send((Object)instancevariable775, (Object)SMB_at_put_, 2, (Object)constant4594, (Object)send23570);
symbol4044 = (Object)new_Type_Symbol_cached(L"injectPrimary");
// injectPrimary
send23572 = (Object)new_AST_Send((Object)Self, (Object)symbol4044, 0);
// injectMessageExpression
send23573 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
// injectCascadedMessageExpression
send23574 = (Object)new_AST_Send((Object)Self, (Object)symbol4072, 0);
constant4597 = (Object)new_AST_Constant((Object)symbol4019);
// at:
send23575 = (Object)new_AST_Send((Object)instancevariable775, (Object)SMB_at_, 1, (Object)constant4597);
method3243 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2593, 8, send23552, send23553, send23554, send23571, send23572, send23573, send23574, send23575);
symbol4055 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure3243 = (Object)new_Runtime_MethodClosure(method3243);
store_method((Type_Class)class535, (Type_Symbol)symbol4055, (Runtime_MethodClosure)methodclosure3243);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send23576 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
string2728 = (Object)new_Type_String(L":");
constant4598 = (Object)new_AST_Constant((Object)string2728);
// asPEG
send23577 = (Object)new_AST_Send((Object)constant4598, (Object)symbol4106, 0);
// omit:
send23578 = (Object)new_AST_Send((Object)send23577, (Object)symbol4110, 1, (Object)True_Const);
// &&
send23579 = (Object)new_AST_Send((Object)send23576, (Object)symbol4102, 1, (Object)send23578);
method3244 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23579);
symbol4083 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure3244 = (Object)new_Runtime_MethodClosure(method3244);
store_method((Type_Class)class535, (Type_Symbol)symbol4083, (Runtime_MethodClosure)methodclosure3244);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send23580 = (Object)new_AST_Send((Object)Self, (Object)symbol4186, 0);
// binaryExpression
send23581 = (Object)new_AST_Send((Object)Self, (Object)symbol4241, 0);
// <=
send23582 = (Object)new_AST_Send((Object)send23580, (Object)symbol4122, 1, (Object)send23581);
// unaryObjectDescription
send23583 = (Object)new_AST_Send((Object)Self, (Object)symbol4207, 0);
// |
send23584 = (Object)new_AST_Send((Object)send23582, (Object)SMB__or, 1, (Object)send23583);
method3245 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23584);
methodclosure3245 = (Object)new_Runtime_MethodClosure(method3245);
store_method((Type_Class)class535, (Type_Symbol)symbol4025, (Runtime_MethodClosure)methodclosure3245);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable3280 = (Object)new_AST_Variable_named(L"array");
array2597 = (Object)new_Type_Array_with(1, (Object)localvariable3280);
string2729 = (Object)new_Type_String(L"ARRAY");
constant4599 = (Object)new_AST_Constant((Object)string2729);
// named:
send23585 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4128, 1, (Object)constant4599);
assign2889 = (Object)new_AST_Assign((Object)localvariable3280, (Object)send23585);
string2730 = (Object)new_Type_String(L"(");
constant4600 = (Object)new_AST_Constant((Object)string2730);
// asPEG
send23586 = (Object)new_AST_Send((Object)constant4600, (Object)symbol4106, 0);
// omit:
send23587 = (Object)new_AST_Send((Object)send23586, (Object)symbol4110, 1, (Object)True_Const);
symbol4247 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send23588 = (Object)new_AST_Send((Object)Self, (Object)symbol4247, 0);
// stringConstant
send23589 = (Object)new_AST_Send((Object)Self, (Object)symbol4196, 0);
symbol4248 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send23590 = (Object)new_AST_Send((Object)Self, (Object)symbol4248, 0);
symbol4249 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send23591 = (Object)new_AST_Send((Object)Self, (Object)symbol4249, 0);
// characterConstant
send23592 = (Object)new_AST_Send((Object)Self, (Object)symbol4215, 0);
// <=
send23593 = (Object)new_AST_Send((Object)send23591, (Object)symbol4122, 1, (Object)send23592);
// <=
send23594 = (Object)new_AST_Send((Object)send23590, (Object)symbol4122, 1, (Object)send23593);
// <=
send23595 = (Object)new_AST_Send((Object)send23589, (Object)symbol4122, 1, (Object)send23594);
// |
send23596 = (Object)new_AST_Send((Object)send23588, (Object)SMB__or, 1, (Object)send23595);
// <=
send23597 = (Object)new_AST_Send((Object)send23596, (Object)symbol4122, 1, (Object)localvariable3280);
// times
send23598 = (Object)new_AST_Send((Object)send23597, (Object)symbol4101, 0);
// &
send23599 = (Object)new_AST_Send((Object)send23587, (Object)SMB__and, 1, (Object)send23598);
// <=
send23600 = (Object)new_AST_Send((Object)localvariable3280, (Object)symbol4122, 1, (Object)send23599);
string2731 = (Object)new_Type_String(L")");
constant4601 = (Object)new_AST_Constant((Object)string2731);
// asPEG
send23601 = (Object)new_AST_Send((Object)constant4601, (Object)symbol4106, 0);
// omit:
send23602 = (Object)new_AST_Send((Object)send23601, (Object)symbol4110, 1, (Object)True_Const);
// <&
send23603 = (Object)new_AST_Send((Object)send23600, (Object)symbol4145, 1, (Object)send23602);
localvariable3281 = (Object)new_AST_Variable_named(L"result");
array2598 = (Object)new_Type_Array_with(1, (Object)localvariable3281);
// new
send23604 = (Object)new_AST_Send((Object)classreference603, (Object)symbol3915, 0);
// literals:
send23605 = (Object)new_AST_Send((Object)send23604, (Object)symbol3952, 1, (Object)localvariable3281);
block1458 = (Object)new_AST_Block_with((Type_Array)array2598, (Type_Array)empty_Type_Array, 1, 1, send23605);
// semantics:
send23606 = (Object)new_AST_Send((Object)localvariable3280, (Object)symbol4119, 1, (Object)block1458);
method3246 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2597, 4, assign2889, send23603, send23606, localvariable3280);
symbol4037 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure3246 = (Object)new_Runtime_MethodClosure(method3246);
store_method((Type_Class)class535, (Type_Symbol)symbol4037, (Runtime_MethodClosure)methodclosure3246);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
string2732 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant4602 = (Object)new_AST_Constant((Object)string2732);
// identifier
send23607 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
localvariable3282 = (Object)new_AST_Variable_named(L"result");
array2599 = (Object)new_Type_Array_with(1, (Object)localvariable3282);
// createVariable:
send23608 = (Object)new_AST_Send((Object)Self, (Object)symbol4032, 1, (Object)localvariable3282);
block1459 = (Object)new_AST_Block_with((Type_Array)array2599, (Type_Array)empty_Type_Array, 1, 1, send23608);
// named:parsing:semantics:
send23609 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4602, (Object)send23607, (Object)block1459);
method3247 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23609);
symbol4065 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure3247 = (Object)new_Runtime_MethodClosure(method3247);
store_method((Type_Class)class535, (Type_Symbol)symbol4065, (Runtime_MethodClosure)methodclosure3247);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string2733 = (Object)new_Type_String(L"#");
constant4603 = (Object)new_AST_Constant((Object)string2733);
// asPEG
send23610 = (Object)new_AST_Send((Object)constant4603, (Object)symbol4106, 0);
// omit:
send23611 = (Object)new_AST_Send((Object)send23610, (Object)symbol4110, 1, (Object)True_Const);
// array
send23612 = (Object)new_AST_Send((Object)Self, (Object)symbol4182, 0);
// &
send23613 = (Object)new_AST_Send((Object)send23611, (Object)SMB__and, 1, (Object)send23612);
method3248 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23613);
symbol4093 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure3248 = (Object)new_Runtime_MethodClosure(method3248);
store_method((Type_Class)class535, (Type_Symbol)symbol4093, (Runtime_MethodClosure)methodclosure3248);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable3283 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable3284 = (Object)new_AST_Variable_named(L"first");
array2600 = (Object)new_Type_Array_with(2, (Object)localvariable3283, (Object)localvariable3284);
string2734 = (Object)new_Type_String(L"\'");
constant4604 = (Object)new_AST_Constant((Object)string2734);
// asPEG
send23614 = (Object)new_AST_Send((Object)constant4604, (Object)symbol4106, 0);
// omit:
send23615 = (Object)new_AST_Send((Object)send23614, (Object)symbol4110, 1, (Object)True_Const);
assign2890 = (Object)new_AST_Assign((Object)localvariable3283, (Object)send23615);
string2735 = (Object)new_Type_String(L"STRING");
constant4605 = (Object)new_AST_Constant((Object)string2735);
// not
send23616 = (Object)new_AST_Send((Object)localvariable3283, (Object)SMB_not, 0);
// strongTimes
send23617 = (Object)new_AST_Send((Object)send23616, (Object)symbol4103, 0);
// &&
send23618 = (Object)new_AST_Send((Object)localvariable3283, (Object)symbol4102, 1, (Object)send23617);
// <&
send23619 = (Object)new_AST_Send((Object)send23618, (Object)symbol4145, 1, (Object)localvariable3283);
// strongPlus
send23620 = (Object)new_AST_Send((Object)send23619, (Object)symbol4109, 0);
localvariable3285 = (Object)new_AST_Variable_named(L"result");
array2601 = (Object)new_Type_Array_with(1, (Object)localvariable3285);
symbol4250 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send23621 = (Object)new_AST_Send((Object)localvariable3285, (Object)symbol4250, 0);
assign2891 = (Object)new_AST_Assign((Object)localvariable3284, (Object)send23621);
string2736 = (Object)new_Type_String(L"");
constant4606 = (Object)new_AST_Constant((Object)string2736);
localvariable3286 = (Object)new_AST_Variable_named(L"c");
localvariable3287 = (Object)new_AST_Variable_named(L"e");
array2602 = (Object)new_Type_Array_with(2, (Object)localvariable3286, (Object)localvariable3287);
// ,
send23622 = (Object)new_AST_Send((Object)localvariable3286, (Object)SMB__concat, 1, (Object)localvariable3287);
block1460 = (Object)new_AST_Block_with((Type_Array)array2602, (Type_Array)empty_Type_Array, 2, 1, send23622);
// inject:into:
send23623 = (Object)new_AST_Send((Object)localvariable3284, (Object)symbol3966, 2, (Object)constant4606, (Object)block1460);
assign2892 = (Object)new_AST_Assign((Object)localvariable3284, (Object)send23623);
localvariable3288 = (Object)new_AST_Variable_named(L"c");
localvariable3289 = (Object)new_AST_Variable_named(L"e");
array2603 = (Object)new_Type_Array_with(2, (Object)localvariable3288, (Object)localvariable3289);
string2737 = (Object)new_Type_String(L"\'");
constant4607 = (Object)new_AST_Constant((Object)string2737);
// ,
send23624 = (Object)new_AST_Send((Object)localvariable3288, (Object)SMB__concat, 1, (Object)constant4607);
string2738 = (Object)new_Type_String(L"");
constant4608 = (Object)new_AST_Constant((Object)string2738);
localvariable3290 = (Object)new_AST_Variable_named(L"ic");
localvariable3291 = (Object)new_AST_Variable_named(L"ie");
array2604 = (Object)new_Type_Array_with(2, (Object)localvariable3290, (Object)localvariable3291);
// ,
send23625 = (Object)new_AST_Send((Object)localvariable3290, (Object)SMB__concat, 1, (Object)localvariable3291);
block1461 = (Object)new_AST_Block_with((Type_Array)array2604, (Type_Array)empty_Type_Array, 3, 1, send23625);
// inject:into:
send23626 = (Object)new_AST_Send((Object)localvariable3289, (Object)symbol3966, 2, (Object)constant4608, (Object)block1461);
// ,
send23627 = (Object)new_AST_Send((Object)send23624, (Object)SMB__concat, 1, (Object)send23626);
block1462 = (Object)new_AST_Block_with((Type_Array)array2603, (Type_Array)empty_Type_Array, 2, 1, send23627);
// inject:into:
send23628 = (Object)new_AST_Send((Object)localvariable3285, (Object)symbol3966, 2, (Object)localvariable3284, (Object)block1462);
block1463 = (Object)new_AST_Block_with((Type_Array)array2601, (Type_Array)empty_Type_Array, 1, 3, assign2891, assign2892, send23628);
// named:parsing:semantics:
send23629 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4605, (Object)send23620, (Object)block1463);
method3249 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2600, 2, assign2890, send23629);
symbol4077 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure3249 = (Object)new_Runtime_MethodClosure(method3249);
store_method((Type_Class)class535, (Type_Symbol)symbol4077, (Runtime_MethodClosure)methodclosure3249);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
// numberConstant
send23630 = (Object)new_AST_Send((Object)Self, (Object)symbol4247, 0);
// symbolConstant
send23631 = (Object)new_AST_Send((Object)Self, (Object)symbol4249, 0);
// characterConstant
send23632 = (Object)new_AST_Send((Object)Self, (Object)symbol4215, 0);
// stringConstant
send23633 = (Object)new_AST_Send((Object)Self, (Object)symbol4196, 0);
// <=
send23634 = (Object)new_AST_Send((Object)send23632, (Object)symbol4122, 1, (Object)send23633);
// <=
send23635 = (Object)new_AST_Send((Object)send23631, (Object)symbol4122, 1, (Object)send23634);
// |
send23636 = (Object)new_AST_Send((Object)send23630, (Object)SMB__or, 1, (Object)send23635);
symbol4251 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send23637 = (Object)new_AST_Send((Object)Self, (Object)symbol4251, 0);
// <=
send23638 = (Object)new_AST_Send((Object)send23636, (Object)symbol4122, 1, (Object)send23637);
method3250 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23638);
symbol4030 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure3250 = (Object)new_Runtime_MethodClosure(method3250);
store_method((Type_Class)class535, (Type_Symbol)symbol4030, (Runtime_MethodClosure)methodclosure3250);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
string2739 = (Object)new_Type_String(L"STATEMENTS");
constant4609 = (Object)new_AST_Constant((Object)string2739);
// subExpression
send23639 = (Object)new_AST_Send((Object)Self, (Object)symbol4195, 0);
// times
send23640 = (Object)new_AST_Send((Object)send23639, (Object)symbol4101, 0);
// return
send23641 = (Object)new_AST_Send((Object)Self, (Object)symbol4192, 0);
// finalExpression
send23642 = (Object)new_AST_Send((Object)Self, (Object)symbol4203, 0);
// |
send23643 = (Object)new_AST_Send((Object)send23641, (Object)SMB__or, 1, (Object)send23642);
// optional
send23644 = (Object)new_AST_Send((Object)send23643, (Object)symbol4105, 0);
// &
send23645 = (Object)new_AST_Send((Object)send23640, (Object)SMB__and, 1, (Object)send23644);
localvariable3292 = (Object)new_AST_Variable_named(L"result");
array2605 = (Object)new_Type_Array_with(1, (Object)localvariable3292);
smallint1614 = (Object)new_Type_SmallInt(2);
constant4610 = (Object)new_AST_Constant((Object)smallint1614);
// at:
send23646 = (Object)new_AST_Send((Object)localvariable3292, (Object)SMB_at_, 1, (Object)constant4610);
localvariable3293 = (Object)new_AST_Variable_named(L"exp");
array2606 = (Object)new_Type_Array_with(1, (Object)localvariable3293);
// first
send23647 = (Object)new_AST_Send((Object)localvariable3292, (Object)symbol3961, 0);
// add:
send23648 = (Object)new_AST_Send((Object)send23647, (Object)symbol3965, 1, (Object)localvariable3293);
block1464 = (Object)new_AST_Block_with((Type_Array)array2606, (Type_Array)empty_Type_Array, 2, 1, send23648);
// ifMatched:
send23649 = (Object)new_AST_Send((Object)send23646, (Object)symbol4148, 1, (Object)block1464);
// first
send23650 = (Object)new_AST_Send((Object)localvariable3292, (Object)symbol3961, 0);
block1465 = (Object)new_AST_Block_with((Type_Array)array2605, (Type_Array)empty_Type_Array, 1, 2, send23649, send23650);
// named:parsing:semantics:
send23651 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4609, (Object)send23645, (Object)block1465);
method3251 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23651);
symbol4047 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure3251 = (Object)new_Runtime_MethodClosure(method3251);
store_method((Type_Class)class535, (Type_Symbol)symbol4047, (Runtime_MethodClosure)methodclosure3251);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string2740 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant4611 = (Object)new_AST_Constant((Object)string2740);
string2741 = (Object)new_Type_String(L":");
constant4612 = (Object)new_AST_Constant((Object)string2741);
// asPEG
send23652 = (Object)new_AST_Send((Object)constant4612, (Object)symbol4106, 0);
// omit:
send23653 = (Object)new_AST_Send((Object)send23652, (Object)symbol4110, 1, (Object)True_Const);
// identifier
send23654 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
// &
send23655 = (Object)new_AST_Send((Object)send23653, (Object)SMB__and, 1, (Object)send23654);
// plus
send23656 = (Object)new_AST_Send((Object)send23655, (Object)symbol4113, 0);
localvariable3294 = (Object)new_AST_Variable_named(L"result");
array2607 = (Object)new_Type_Array_with(1, (Object)localvariable3294);
localvariable3295 = (Object)new_AST_Variable_named(L"variable");
array2608 = (Object)new_Type_Array_with(1, (Object)localvariable3295);
// createVariable:
send23657 = (Object)new_AST_Send((Object)Self, (Object)symbol4032, 1, (Object)localvariable3295);
block1466 = (Object)new_AST_Block_with((Type_Array)array2608, (Type_Array)empty_Type_Array, 2, 1, send23657);
// collect:
send23658 = (Object)new_AST_Send((Object)localvariable3294, (Object)symbol4206, 1, (Object)block1466);
block1467 = (Object)new_AST_Block_with((Type_Array)array2607, (Type_Array)empty_Type_Array, 1, 1, send23658);
// named:parsing:semantics:
send23659 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4611, (Object)send23656, (Object)block1467);
method3252 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23659);
symbol4070 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure3252 = (Object)new_Runtime_MethodClosure(method3252);
store_method((Type_Class)class535, (Type_Symbol)symbol4070, (Runtime_MethodClosure)methodclosure3252);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string2742 = (Object)new_Type_String(L"|");
constant4613 = (Object)new_AST_Constant((Object)string2742);
// asPEG
send23660 = (Object)new_AST_Send((Object)constant4613, (Object)symbol4106, 0);
// omit:
send23661 = (Object)new_AST_Send((Object)send23660, (Object)symbol4110, 1, (Object)True_Const);
method3253 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23661);
symbol4059 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure3253 = (Object)new_Runtime_MethodClosure(method3253);
store_method((Type_Class)class535, (Type_Symbol)symbol4059, (Runtime_MethodClosure)methodclosure3253);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send23662 = (Object)new_AST_Send((Object)Self, (Object)symbol4241, 0);
// binaryObjectDescription
send23663 = (Object)new_AST_Send((Object)Self, (Object)symbol4186, 0);
method3254 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send23662, send23663);
symbol4087 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure3254 = (Object)new_Runtime_MethodClosure(method3254);
store_method((Type_Class)class535, (Type_Symbol)symbol4087, (Runtime_MethodClosure)methodclosure3254);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string2743 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant4614 = (Object)new_AST_Constant((Object)string2743);
// specialCharacter
send23664 = (Object)new_AST_Send((Object)Self, (Object)symbol4234, 0);
string2744 = (Object)new_Type_String(L"-");
constant4615 = (Object)new_AST_Constant((Object)string2744);
// |
send23665 = (Object)new_AST_Send((Object)send23664, (Object)SMB__or, 1, (Object)constant4615);
// specialCharacter
send23666 = (Object)new_AST_Send((Object)Self, (Object)symbol4234, 0);
// strongTimes
send23667 = (Object)new_AST_Send((Object)send23666, (Object)symbol4103, 0);
// &&
send23668 = (Object)new_AST_Send((Object)send23665, (Object)symbol4102, 1, (Object)send23667);
string2745 = (Object)new_Type_String(L"|");
constant4616 = (Object)new_AST_Constant((Object)string2745);
// |
send23669 = (Object)new_AST_Send((Object)send23668, (Object)SMB__or, 1, (Object)constant4616);
localvariable3296 = (Object)new_AST_Variable_named(L"result");
array2609 = (Object)new_Type_Array_with(1, (Object)localvariable3296);
// isString
send23670 = (Object)new_AST_Send((Object)localvariable3296, (Object)symbol4236, 0);
// createSymbol:
send23671 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)localvariable3296);
block1468 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23671);
// second
send23672 = (Object)new_AST_Send((Object)localvariable3296, (Object)symbol4222, 0);
// first
send23673 = (Object)new_AST_Send((Object)localvariable3296, (Object)symbol3961, 0);
localvariable3297 = (Object)new_AST_Variable_named(L"c");
localvariable3298 = (Object)new_AST_Variable_named(L"e");
array2610 = (Object)new_Type_Array_with(2, (Object)localvariable3297, (Object)localvariable3298);
// ,
send23674 = (Object)new_AST_Send((Object)localvariable3297, (Object)SMB__concat, 1, (Object)localvariable3298);
block1469 = (Object)new_AST_Block_with((Type_Array)array2610, (Type_Array)empty_Type_Array, 3, 1, send23674);
// inject:into:
send23675 = (Object)new_AST_Send((Object)send23672, (Object)symbol3966, 2, (Object)send23673, (Object)block1469);
// createSymbol:
send23676 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)send23675);
block1470 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23676);
// ifTrue:ifFalse:
send23677 = (Object)new_AST_Send((Object)send23670, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1468, (Object)block1470);
block1471 = (Object)new_AST_Block_with((Type_Array)array2609, (Type_Array)empty_Type_Array, 1, 1, send23677);
// named:parsing:semantics:
send23678 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4614, (Object)send23669, (Object)block1471);
method3255 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23678);
symbol4040 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure3255 = (Object)new_Runtime_MethodClosure(method3255);
store_method((Type_Class)class535, (Type_Symbol)symbol4040, (Runtime_MethodClosure)methodclosure3255);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string2746 = (Object)new_Type_String(L"a-z");
constant4617 = (Object)new_AST_Constant((Object)string2746);
// asPEGRange
send23679 = (Object)new_AST_Send((Object)constant4617, (Object)symbol4226, 0);
method3256 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23679);
symbol4029 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure3256 = (Object)new_Runtime_MethodClosure(method3256);
store_method((Type_Class)class535, (Type_Symbol)symbol4029, (Runtime_MethodClosure)methodclosure3256);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable3299 = (Object)new_AST_Variable_named(L"aDictionary");
array2611 = (Object)new_Type_Array_with(1, (Object)localvariable3299);
assign2893 = (Object)new_AST_Assign((Object)instancevariable775, (Object)localvariable3299);
method3257 = (Object)new_AST_Method_with((Type_Array)array2611, (Type_Array)empty_Type_Array, 2, assign2893, Self);
symbol4052 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure3257 = (Object)new_Runtime_MethodClosure(method3257);
store_method((Type_Class)class535, (Type_Symbol)symbol4052, (Runtime_MethodClosure)methodclosure3257);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string2747 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant4618 = (Object)new_AST_Constant((Object)string2747);
string2748 = (Object)new_Type_String(L"{");
constant4619 = (Object)new_AST_Constant((Object)string2748);
// asPEG
send23680 = (Object)new_AST_Send((Object)constant4619, (Object)symbol4106, 0);
// omit:
send23681 = (Object)new_AST_Send((Object)send23680, (Object)symbol4110, 1, (Object)True_Const);
// subExpression
send23682 = (Object)new_AST_Send((Object)Self, (Object)symbol4195, 0);
// times
send23683 = (Object)new_AST_Send((Object)send23682, (Object)symbol4101, 0);
// expression
send23684 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
// <&
send23685 = (Object)new_AST_Send((Object)send23683, (Object)symbol4145, 1, (Object)send23684);
// &
send23686 = (Object)new_AST_Send((Object)send23681, (Object)SMB__and, 1, (Object)send23685);
string2749 = (Object)new_Type_String(L"}");
constant4620 = (Object)new_AST_Constant((Object)string2749);
// asPEG
send23687 = (Object)new_AST_Send((Object)constant4620, (Object)symbol4106, 0);
// omit:
send23688 = (Object)new_AST_Send((Object)send23687, (Object)symbol4110, 1, (Object)True_Const);
// <&
send23689 = (Object)new_AST_Send((Object)send23686, (Object)symbol4145, 1, (Object)send23688);
localvariable3300 = (Object)new_AST_Variable_named(L"result");
array2612 = (Object)new_Type_Array_with(1, (Object)localvariable3300);

// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable3301 = (Object)new_AST_Variable_named(L"newExpressions");
array2613 = (Object)new_Type_Array_with(1, (Object)localvariable3301);
assign2894 = (Object)new_AST_Assign((Object)instancevariable818, (Object)localvariable3301);
method3258 = (Object)new_AST_Method_with((Type_Array)array2613, (Type_Array)empty_Type_Array, 2, assign2894, Self);
symbol4139 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure3258 = (Object)new_Runtime_MethodClosure(method3258);
store_method((Type_Class)class570, (Type_Symbol)symbol4139, (Runtime_MethodClosure)methodclosure3258);


// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable157 = (Object)new_AST_Variable_named(L"return");
array2614 = (Object)new_Type_Array_with(1, (Object)variable157);
symbol4252 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send23690 = (Object)new_AST_Send((Object)Self, (Object)symbol4252, 0);
localvariable3302 = (Object)new_AST_Variable_named(L"el");
array2615 = (Object)new_Type_Array_with(1, (Object)localvariable3302);
// isReturnExpression
send23691 = (Object)new_AST_Send((Object)localvariable3302, (Object)symbol3825, 0);
symbol4253 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
// hasReturnExpression
send23692 = (Object)new_AST_Send((Object)localvariable3302, (Object)symbol3945, 0);
block1472 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23692);
// escape:
send23693 = (Object)new_AST_Send((Object)variable157, (Object)SMB_escape_, 1, (Object)True_Const);
block1473 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23693);
// or:ifTrue:
send23694 = (Object)new_AST_Send((Object)send23691, (Object)symbol4253, 2, (Object)block1472, (Object)block1473);
block1474 = (Object)new_AST_Block_with((Type_Array)array2615, (Type_Array)empty_Type_Array, 2, 1, send23694);
// do:
send23695 = (Object)new_AST_Send((Object)send23690, (Object)symbol3964, 1, (Object)block1474);
block1475 = (Object)new_AST_Block_with((Type_Array)array2614, (Type_Array)empty_Type_Array, 1, 2, send23695, False_Const);
// on:
send23696 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1475);
method3259 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23696);
methodclosure3259 = (Object)new_Runtime_MethodClosure(method3259);
store_method((Type_Class)class570, (Type_Symbol)symbol3945, (Runtime_MethodClosure)methodclosure3259);

classreference627 = (Object)new_Organization_ClassReference((Type_Class)class570);
// new
send23697 = (Object)new_AST_Send((Object)classreference627, (Object)symbol3915, 0);
localvariable3303 = (Object)new_AST_Variable_named(L"receiver");
array2616 = (Object)new_Type_Array_with(1, (Object)localvariable3303);
smallint1615 = (Object)new_Type_SmallInt(2);
constant4621 = (Object)new_AST_Constant((Object)smallint1615);
// at:
send23698 = (Object)new_AST_Send((Object)localvariable3300, (Object)SMB_at_, 1, (Object)constant4621);
// add:
send23699 = (Object)new_AST_Send((Object)localvariable3303, (Object)symbol3965, 1, (Object)send23698);
// yourself
send23700 = (Object)new_AST_Send((Object)localvariable3303, (Object)symbol3824, 0);
block1476 = (Object)new_AST_Block_with((Type_Array)array2616, (Type_Array)empty_Type_Array, 2, 2, send23699, send23700);
// first
send23701 = (Object)new_AST_Send((Object)localvariable3300, (Object)symbol3961, 0);
// value:
send23702 = (Object)new_AST_Send((Object)block1476, (Object)SMB_value_, 1, (Object)send23701);
// expressions:
send23703 = (Object)new_AST_Send((Object)send23697, (Object)symbol4139, 1, (Object)send23702);
block1477 = (Object)new_AST_Block_with((Type_Array)array2612, (Type_Array)empty_Type_Array, 1, 1, send23703);
// named:parsing:semantics:
send23704 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4618, (Object)send23689, (Object)block1477);
method3260 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23704);
symbol4080 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure3260 = (Object)new_Runtime_MethodClosure(method3260);
store_method((Type_Class)class535, (Type_Symbol)symbol4080, (Runtime_MethodClosure)methodclosure3260);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send23705 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
string2750 = (Object)new_Type_String(L".");
constant4622 = (Object)new_AST_Constant((Object)string2750);
// asPEG
send23706 = (Object)new_AST_Send((Object)constant4622, (Object)symbol4106, 0);
// omit:
send23707 = (Object)new_AST_Send((Object)send23706, (Object)symbol4110, 1, (Object)True_Const);
// &
send23708 = (Object)new_AST_Send((Object)send23705, (Object)SMB__and, 1, (Object)send23707);
method3261 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23708);
symbol4069 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure3261 = (Object)new_Runtime_MethodClosure(method3261);
store_method((Type_Class)class535, (Type_Symbol)symbol4069, (Runtime_MethodClosure)methodclosure3261);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send23709 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
// cascadedMessageExpression
send23710 = (Object)new_AST_Send((Object)Self, (Object)symbol4217, 0);
method3262 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send23709, send23710);
symbol4022 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure3262 = (Object)new_Runtime_MethodClosure(method3262);
store_method((Type_Class)class535, (Type_Symbol)symbol4022, (Runtime_MethodClosure)methodclosure3262);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string2751 = (Object)new_Type_String(L"STRING-CONSTANT");
constant4623 = (Object)new_AST_Constant((Object)string2751);
// string
send23711 = (Object)new_AST_Send((Object)Self, (Object)symbol3980, 0);
localvariable3304 = (Object)new_AST_Variable_named(L"result");
array2617 = (Object)new_Type_Array_with(1, (Object)localvariable3304);
// new
send23712 = (Object)new_AST_Send((Object)classreference607, (Object)symbol3915, 0);
// string:
send23713 = (Object)new_AST_Send((Object)send23712, (Object)symbol3979, 1, (Object)localvariable3304);
block1478 = (Object)new_AST_Block_with((Type_Array)array2617, (Type_Array)empty_Type_Array, 1, 1, send23713);
// named:parsing:semantics:
send23714 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4623, (Object)send23711, (Object)block1478);
method3263 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23714);
symbol4034 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure3263 = (Object)new_Runtime_MethodClosure(method3263);
store_method((Type_Class)class535, (Type_Symbol)symbol4034, (Runtime_MethodClosure)methodclosure3263);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
string2752 = (Object)new_Type_String(L"ANNOTATION");
constant4624 = (Object)new_AST_Constant((Object)string2752);
string2753 = (Object)new_Type_String(L"<");
constant4625 = (Object)new_AST_Constant((Object)string2753);
// asPEG
send23715 = (Object)new_AST_Send((Object)constant4625, (Object)symbol4106, 0);
// omit:
send23716 = (Object)new_AST_Send((Object)send23715, (Object)symbol4110, 1, (Object)True_Const);
symbol4254 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send23717 = (Object)new_AST_Send((Object)Self, (Object)symbol4254, 0);
symbol4255 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send23718 = (Object)new_AST_Send((Object)Self, (Object)symbol4255, 0);
// |
send23719 = (Object)new_AST_Send((Object)send23717, (Object)SMB__or, 1, (Object)send23718);
// &
send23720 = (Object)new_AST_Send((Object)send23716, (Object)SMB__and, 1, (Object)send23719);
string2754 = (Object)new_Type_String(L">");
constant4626 = (Object)new_AST_Constant((Object)string2754);
// asPEG
send23721 = (Object)new_AST_Send((Object)constant4626, (Object)symbol4106, 0);
// omit:
send23722 = (Object)new_AST_Send((Object)send23721, (Object)symbol4110, 1, (Object)True_Const);
// <&
send23723 = (Object)new_AST_Send((Object)send23720, (Object)symbol4145, 1, (Object)send23722);
// named:parsing:
send23724 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4200, 2, (Object)constant4624, (Object)send23723);
method3264 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23724);
symbol4062 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure3264 = (Object)new_Runtime_MethodClosure(method3264);
store_method((Type_Class)class535, (Type_Symbol)symbol4062, (Runtime_MethodClosure)methodclosure3264);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
string2755 = (Object)new_Type_String(L"COMMENT");
constant4627 = (Object)new_AST_Constant((Object)string2755);
// separators
send23725 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4231, 0);
// commentFormat
send23726 = (Object)new_AST_Send((Object)Self, (Object)symbol4201, 0);
// |
send23727 = (Object)new_AST_Send((Object)send23725, (Object)SMB__or, 1, (Object)send23726);
// strongTimes
send23728 = (Object)new_AST_Send((Object)send23727, (Object)symbol4103, 0);
// omit:
send23729 = (Object)new_AST_Send((Object)send23728, (Object)symbol4110, 1, (Object)True_Const);
// named:parsing:
send23730 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4200, 2, (Object)constant4627, (Object)send23729);
method3265 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23730);
symbol4090 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure3265 = (Object)new_Runtime_MethodClosure(method3265);
store_method((Type_Class)class535, (Type_Symbol)symbol4090, (Runtime_MethodClosure)methodclosure3265);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string2756 = (Object)new_Type_String(L"0-9");
constant4628 = (Object)new_AST_Constant((Object)string2756);
// asPEGRange
send23731 = (Object)new_AST_Send((Object)constant4628, (Object)symbol4226, 0);
method3266 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23731);
symbol4074 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure3266 = (Object)new_Runtime_MethodClosure(method3266);
store_method((Type_Class)class535, (Type_Symbol)symbol4074, (Runtime_MethodClosure)methodclosure3266);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
// primary
send23732 = (Object)new_AST_Send((Object)Self, (Object)symbol4208, 0);
symbol4256 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send23733 = (Object)new_AST_Send((Object)Self, (Object)symbol4256, 0);
symbol4257 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send23734 = (Object)new_AST_Send((Object)Self, (Object)symbol4257, 0);
// block
send23735 = (Object)new_AST_Send((Object)Self, (Object)symbol4223, 0);
symbol4258 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send23736 = (Object)new_AST_Send((Object)Self, (Object)symbol4258, 0);
// <=
send23737 = (Object)new_AST_Send((Object)send23735, (Object)symbol4122, 1, (Object)send23736);
// <=
send23738 = (Object)new_AST_Send((Object)send23734, (Object)symbol4122, 1, (Object)send23737);
// |
send23739 = (Object)new_AST_Send((Object)send23733, (Object)SMB__or, 1, (Object)send23738);
// <=
send23740 = (Object)new_AST_Send((Object)send23732, (Object)symbol4122, 1, (Object)send23739);
symbol4259 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send23741 = (Object)new_AST_Send((Object)Self, (Object)symbol4259, 0);
// <=
send23742 = (Object)new_AST_Send((Object)send23740, (Object)symbol4122, 1, (Object)send23741);
method3267 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23742);
methodclosure3267 = (Object)new_Runtime_MethodClosure(method3267);
store_method((Type_Class)class535, (Type_Symbol)symbol4044, (Runtime_MethodClosure)methodclosure3267);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string2757 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant4629 = (Object)new_AST_Constant((Object)string2757);
// identifier
send23743 = (Object)new_AST_Send((Object)Self, (Object)symbol4204, 0);
string2758 = (Object)new_Type_String(L":");
constant4630 = (Object)new_AST_Constant((Object)string2758);
// asPEG
send23744 = (Object)new_AST_Send((Object)constant4630, (Object)symbol4106, 0);
// not
send23745 = (Object)new_AST_Send((Object)send23744, (Object)SMB_not, 0);
symbol4260 = (Object)new_Type_Symbol_cached(L"consume:");
// consume:
send23746 = (Object)new_AST_Send((Object)send23745, (Object)symbol4260, 1, (Object)False_Const);
// &&
send23747 = (Object)new_AST_Send((Object)send23743, (Object)symbol4102, 1, (Object)send23746);
localvariable3305 = (Object)new_AST_Variable_named(L"selector");
array2618 = (Object)new_Type_Array_with(1, (Object)localvariable3305);
// new
send23748 = (Object)new_AST_Send((Object)classreference617, (Object)symbol3915, 0);
// createSymbol:
send23749 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)localvariable3305);
// selector:
send23750 = (Object)new_AST_Send((Object)send23748, (Object)symbol3996, 1, (Object)send23749);
block1479 = (Object)new_AST_Block_with((Type_Array)array2618, (Type_Array)empty_Type_Array, 1, 1, send23750);
// named:parsing:semantics:
send23751 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4629, (Object)send23747, (Object)block1479);
method3268 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23751);
symbol4056 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure3268 = (Object)new_Runtime_MethodClosure(method3268);
store_method((Type_Class)class535, (Type_Symbol)symbol4056, (Runtime_MethodClosure)methodclosure3268);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
constant4631 = (Object)new_AST_Constant((Object)symbol4217);
string2759 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant4632 = (Object)new_AST_Constant((Object)string2759);
// named:
send23752 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4128, 1, (Object)constant4632);
block1480 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23752);
// at:ifAbsentPut:
send23753 = (Object)new_AST_Send((Object)instancevariable775, (Object)symbol4138, 2, (Object)constant4631, (Object)block1480);
method3269 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23753);
methodclosure3269 = (Object)new_Runtime_MethodClosure(method3269);
store_method((Type_Class)class535, (Type_Symbol)symbol4084, (Runtime_MethodClosure)methodclosure3269);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant4633 = (Object)new_AST_Constant((Object)symbol4186);
string2760 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant4634 = (Object)new_AST_Constant((Object)string2760);
// named:
send23754 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4128, 1, (Object)constant4634);
block1481 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23754);
// at:ifAbsentPut:
send23755 = (Object)new_AST_Send((Object)instancevariable775, (Object)symbol4138, 2, (Object)constant4633, (Object)block1481);
method3270 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23755);
methodclosure3270 = (Object)new_Runtime_MethodClosure(method3270);
store_method((Type_Class)class535, (Type_Symbol)symbol4026, (Runtime_MethodClosure)methodclosure3270);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string2761 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant4635 = (Object)new_AST_Constant((Object)string2761);
// unarySelector
send23756 = (Object)new_AST_Send((Object)Self, (Object)symbol4202, 0);
localvariable3306 = (Object)new_AST_Variable_named(L"selector");
array2619 = (Object)new_Type_Array_with(1, (Object)localvariable3306);
// new
send23757 = (Object)new_AST_Send((Object)classreference602, (Object)symbol3915, 0);
// selector:
send23758 = (Object)new_AST_Send((Object)send23757, (Object)symbol3996, 1, (Object)localvariable3306);
block1482 = (Object)new_AST_Block_with((Type_Array)array2619, (Type_Array)empty_Type_Array, 1, 1, send23758);
// named:parsing:semantics:
send23759 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4635, (Object)send23756, (Object)block1482);
method3271 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23759);
symbol4038 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure3271 = (Object)new_Runtime_MethodClosure(method3271);
store_method((Type_Class)class535, (Type_Symbol)symbol4038, (Runtime_MethodClosure)methodclosure3271);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send23760 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 0);
// primary
send23761 = (Object)new_AST_Send((Object)Self, (Object)symbol4208, 0);
method3272 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send23760, send23761);
symbol4066 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure3272 = (Object)new_Runtime_MethodClosure(method3272);
store_method((Type_Class)class535, (Type_Symbol)symbol4066, (Runtime_MethodClosure)methodclosure3272);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string2762 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant4636 = (Object)new_AST_Constant((Object)string2762);
// keywordsArguments
send23762 = (Object)new_AST_Send((Object)Self, (Object)symbol4220, 0);
// binaryMessageDefinition
send23763 = (Object)new_AST_Send((Object)Self, (Object)symbol4191, 0);
// |
send23764 = (Object)new_AST_Send((Object)send23762, (Object)SMB__or, 1, (Object)send23763);
symbol4261 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send23765 = (Object)new_AST_Send((Object)Self, (Object)symbol4261, 0);
// <=
send23766 = (Object)new_AST_Send((Object)send23764, (Object)symbol4122, 1, (Object)send23765);
// named:parsing:
send23767 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4200, 2, (Object)constant4636, (Object)send23766);
method3273 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23767);
symbol4094 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure3273 = (Object)new_Runtime_MethodClosure(method3273);
store_method((Type_Class)class535, (Type_Symbol)symbol4094, (Runtime_MethodClosure)methodclosure3273);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol4262 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send23768 = (Object)new_AST_Send((Object)Self, (Object)symbol4262, 0);
// uppercase
send23769 = (Object)new_AST_Send((Object)Self, (Object)symbol4245, 0);
// |
send23770 = (Object)new_AST_Send((Object)send23768, (Object)SMB__or, 1, (Object)send23769);
method3274 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23770);
symbol4078 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure3274 = (Object)new_Runtime_MethodClosure(method3274);
store_method((Type_Class)class535, (Type_Symbol)symbol4078, (Runtime_MethodClosure)methodclosure3274);


// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
string2763 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant4637 = (Object)new_AST_Constant((Object)string2763);
string2764 = (Object)new_Type_String(L"#");
constant4638 = (Object)new_AST_Constant((Object)string2764);
// asPEG
send23771 = (Object)new_AST_Send((Object)constant4638, (Object)symbol4106, 0);
// omit:
send23772 = (Object)new_AST_Send((Object)send23771, (Object)symbol4110, 1, (Object)True_Const);
// symbol
send23773 = (Object)new_AST_Send((Object)Self, (Object)symbol3975, 0);
// &&
send23774 = (Object)new_AST_Send((Object)send23772, (Object)symbol4102, 1, (Object)send23773);
localvariable3307 = (Object)new_AST_Variable_named(L"result");
array2620 = (Object)new_Type_Array_with(1, (Object)localvariable3307);
// new
send23775 = (Object)new_AST_Send((Object)classreference605, (Object)symbol3915, 0);
// symbol:
send23776 = (Object)new_AST_Send((Object)send23775, (Object)symbol3976, 1, (Object)localvariable3307);
block1483 = (Object)new_AST_Block_with((Type_Array)array2620, (Type_Array)empty_Type_Array, 1, 1, send23776);
// named:parsing:semantics:
send23777 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4637, (Object)send23774, (Object)block1483);
method3275 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23777);
symbol4031 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure3275 = (Object)new_Runtime_MethodClosure(method3275);
store_method((Type_Class)class535, (Type_Symbol)symbol4031, (Runtime_MethodClosure)methodclosure3275);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
// variableName
send23778 = (Object)new_AST_Send((Object)Self, (Object)symbol4235, 0);
// assignmentOp
send23779 = (Object)new_AST_Send((Object)Self, (Object)symbol4023, 0);
// &
send23780 = (Object)new_AST_Send((Object)send23778, (Object)SMB__and, 1, (Object)send23779);
// times
send23781 = (Object)new_AST_Send((Object)send23780, (Object)symbol4101, 0);
method3276 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23781);
symbol4048 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure3276 = (Object)new_Runtime_MethodClosure(method3276);
store_method((Type_Class)class535, (Type_Symbol)symbol4048, (Runtime_MethodClosure)methodclosure3276);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string2765 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant4639 = (Object)new_AST_Constant((Object)string2765);
// keyword
send23782 = (Object)new_AST_Send((Object)Self, (Object)symbol4197, 0);
// binaryObjectDescription
send23783 = (Object)new_AST_Send((Object)Self, (Object)symbol4186, 0);
// &
send23784 = (Object)new_AST_Send((Object)send23782, (Object)SMB__and, 1, (Object)send23783);
// plus
send23785 = (Object)new_AST_Send((Object)send23784, (Object)symbol4113, 0);
localvariable3308 = (Object)new_AST_Variable_named(L"parts");
array2621 = (Object)new_Type_Array_with(1, (Object)localvariable3308);
localvariable3309 = (Object)new_AST_Variable_named(L"receiver");
array2622 = (Object)new_Type_Array_with(1, (Object)localvariable3309);
constant4640 = (Object)new_AST_Constant((Object)symbol3961);
// collect:
send23786 = (Object)new_AST_Send((Object)localvariable3308, (Object)symbol4206, 1, (Object)constant4640);
// keywords:
send23787 = (Object)new_AST_Send((Object)localvariable3309, (Object)symbol4001, 1, (Object)send23786);
localvariable3310 = (Object)new_AST_Variable_named(L"receiver");
array2623 = (Object)new_Type_Array_with(1, (Object)localvariable3310);
constant4641 = (Object)new_AST_Constant((Object)symbol3961);
// collect:
send23788 = (Object)new_AST_Send((Object)localvariable3308, (Object)symbol4206, 1, (Object)constant4641);
// keywords:
send23789 = (Object)new_AST_Send((Object)localvariable3310, (Object)symbol4001, 1, (Object)send23788);
constant4642 = (Object)new_AST_Constant((Object)symbol3961);
// collect:
send23790 = (Object)new_AST_Send((Object)localvariable3308, (Object)symbol4206, 1, (Object)constant4642);
string2766 = (Object)new_Type_String(L":");
constant4643 = (Object)new_AST_Constant((Object)string2766);
// joinUsing:
send23791 = (Object)new_AST_Send((Object)send23790, (Object)symbol4214, 1, (Object)constant4643);
string2767 = (Object)new_Type_String(L":");
constant4644 = (Object)new_AST_Constant((Object)string2767);
// ,
send23792 = (Object)new_AST_Send((Object)send23791, (Object)SMB__concat, 1, (Object)constant4644);
// createSymbol:
send23793 = (Object)new_AST_Send((Object)Self, (Object)symbol4027, 1, (Object)send23792);
// selector:
send23794 = (Object)new_AST_Send((Object)localvariable3310, (Object)symbol3996, 1, (Object)send23793);
block1484 = (Object)new_AST_Block_with((Type_Array)array2623, (Type_Array)empty_Type_Array, 3, 2, send23789, send23794);
// new
send23795 = (Object)new_AST_Send((Object)classreference620, (Object)symbol3915, 0);
// value:
send23796 = (Object)new_AST_Send((Object)block1484, (Object)SMB_value_, 1, (Object)send23795);
// selector:
send23797 = (Object)new_AST_Send((Object)localvariable3309, (Object)symbol3996, 1, (Object)send23796);
constant4645 = (Object)new_AST_Constant((Object)symbol4222);
// collect:
send23798 = (Object)new_AST_Send((Object)localvariable3308, (Object)symbol4206, 1, (Object)constant4645);
// arguments:
send23799 = (Object)new_AST_Send((Object)localvariable3309, (Object)symbol4003, 1, (Object)send23798);
block1485 = (Object)new_AST_Block_with((Type_Array)array2622, (Type_Array)empty_Type_Array, 2, 3, send23787, send23797, send23799);
// new
send23800 = (Object)new_AST_Send((Object)classreference598, (Object)symbol3915, 0);
// value:
send23801 = (Object)new_AST_Send((Object)block1485, (Object)SMB_value_, 1, (Object)send23800);
block1486 = (Object)new_AST_Block_with((Type_Array)array2621, (Type_Array)empty_Type_Array, 1, 1, send23801);
// named:parsing:semantics:
send23802 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4639, (Object)send23785, (Object)block1486);
method3277 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23802);
symbol4071 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure3277 = (Object)new_Runtime_MethodClosure(method3277);
store_method((Type_Class)class535, (Type_Symbol)symbol4071, (Runtime_MethodClosure)methodclosure3277);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string2768 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant4646 = (Object)new_AST_Constant((Object)string2768);
// keyword
send23803 = (Object)new_AST_Send((Object)Self, (Object)symbol4197, 0);
// strongPlus
send23804 = (Object)new_AST_Send((Object)send23803, (Object)symbol4109, 0);
localvariable3311 = (Object)new_AST_Variable_named(L"result");
array2624 = (Object)new_Type_Array_with(1, (Object)localvariable3311);
string2769 = (Object)new_Type_String(L"");
constant4647 = (Object)new_AST_Constant((Object)string2769);
localvariable3312 = (Object)new_AST_Variable_named(L"c");
localvariable3313 = (Object)new_AST_Variable_named(L"e");
array2625 = (Object)new_Type_Array_with(2, (Object)localvariable3312, (Object)localvariable3313);
// ,
send23805 = (Object)new_AST_Send((Object)localvariable3312, (Object)SMB__concat, 1, (Object)localvariable3313);
string2770 = (Object)new_Type_String(L":");
constant4648 = (Object)new_AST_Constant((Object)string2770);
// ,
send23806 = (Object)new_AST_Send((Object)send23805, (Object)SMB__concat, 1, (Object)constant4648);
block1487 = (Object)new_AST_Block_with((Type_Array)array2625, (Type_Array)empty_Type_Array, 2, 1, send23806);
// inject:into:
send23807 = (Object)new_AST_Send((Object)localvariable3311, (Object)symbol3966, 2, (Object)constant4647, (Object)block1487);
block1488 = (Object)new_AST_Block_with((Type_Array)array2624, (Type_Array)empty_Type_Array, 1, 1, send23807);
// named:parsing:semantics:
send23808 = (Object)new_AST_Send((Object)classreference596, (Object)symbol4227, 3, (Object)constant4646, (Object)send23804, (Object)block1488);
method3278 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23808);
symbol4088 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure3278 = (Object)new_Runtime_MethodClosure(method3278);
store_method((Type_Class)class535, (Type_Symbol)symbol4088, (Runtime_MethodClosure)methodclosure3278);

classreference628 = (Object)new_Organization_ClassReference((Type_Class)class535);
// new
send23809 = (Object)new_AST_Send((Object)classreference628, (Object)symbol3915, 0);
assign2895 = (Object)new_AST_Assign((Object)instancevariable774, (Object)send23809);
method3279 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign2895, Self);
symbol3890 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure3279 = (Object)new_Runtime_MethodClosure(method3279);
store_method((Type_Class)class534, (Type_Symbol)symbol3890, (Runtime_MethodClosure)methodclosure3279);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable3314 = (Object)new_AST_Variable_named(L"parser");
localvariable3315 = (Object)new_AST_Variable_named(L"string");
localvariable3316 = (Object)new_AST_Variable_named(L"result");
array2626 = (Object)new_Type_Array_with(3, (Object)localvariable3314, (Object)localvariable3315, (Object)localvariable3316);
// symbolConstant
send23810 = (Object)new_AST_Send((Object)instancevariable774, (Object)symbol4249, 0);
assign2896 = (Object)new_AST_Assign((Object)localvariable3314, (Object)send23810);
string2771 = (Object)new_Type_String(L"#abc");
constant4649 = (Object)new_AST_Constant((Object)string2771);
// on:
send23811 = (Object)new_AST_Send((Object)classreference587, (Object)SMB_on_, 1, (Object)constant4649);
assign2897 = (Object)new_AST_Assign((Object)localvariable3315, (Object)send23811);
// match:
send23812 = (Object)new_AST_Send((Object)localvariable3314, (Object)symbol4108, 1, (Object)localvariable3315);
assign2898 = (Object)new_AST_Assign((Object)localvariable3316, (Object)send23812);
// class
send23813 = (Object)new_AST_Send((Object)localvariable3316, (Object)SMB_class, 0);
// should
send23814 = (Object)new_AST_Send((Object)send23813, (Object)symbol4176, 0);
// =
send23815 = (Object)new_AST_Send((Object)send23814, (Object)SMB__equal, 1, (Object)classreference605);
// symbol
send23816 = (Object)new_AST_Send((Object)localvariable3316, (Object)symbol3975, 0);
// should
send23817 = (Object)new_AST_Send((Object)send23816, (Object)symbol4176, 0);
string2772 = (Object)new_Type_String(L"abc");
constant4650 = (Object)new_AST_Constant((Object)string2772);
// =
send23818 = (Object)new_AST_Send((Object)send23817, (Object)SMB__equal, 1, (Object)constant4650);
// position
send23819 = (Object)new_AST_Send((Object)localvariable3315, (Object)symbol4173, 0);
// should
send23820 = (Object)new_AST_Send((Object)send23819, (Object)symbol4176, 0);
smallint1616 = (Object)new_Type_SmallInt(4);
constant4651 = (Object)new_AST_Constant((Object)smallint1616);
// =
send23821 = (Object)new_AST_Send((Object)send23820, (Object)SMB__equal, 1, (Object)constant4651);
method3280 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2626, 7, assign2896, assign2897, assign2898, send23815, send23818, send23821, Self);
symbol3900 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure3280 = (Object)new_Runtime_MethodClosure(method3280);
store_method((Type_Class)class534, (Type_Symbol)symbol3900, (Runtime_MethodClosure)methodclosure3280);

classreference629 = (Object)new_Organization_ClassReference((Type_Class)class534);

// Message>>selector
//selector 
// 	^ selector
instancevariable828 = (Object)new_AST_InstVariable(0, L"selector");
method3281 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable828);
methodclosure3281 = (Object)new_Runtime_MethodClosure(method3281);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol3927, (Runtime_MethodClosure)methodclosure3281);


// Message>>arguments
//arguments
// 	^ self
method3282 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure3282 = (Object)new_Runtime_MethodClosure(method3282);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol3928, (Runtime_MethodClosure)methodclosure3282);

classreference630 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable3317 = (Object)new_AST_Variable_named(L"aMessage");
array2627 = (Object)new_Type_Array_with(1, (Object)localvariable3317);
localvariable3318 = (Object)new_AST_Variable_named(L"selector");
array2628 = (Object)new_Type_Array_with(1, (Object)localvariable3318);
variable158 = (Object)new_AST_Variable_named(L"return");
array2629 = (Object)new_Type_Array_with(1, (Object)variable158);
// selector
send23822 = (Object)new_AST_Send((Object)localvariable3317, (Object)symbol3927, 0);
symbol4263 = (Object)new_Type_Symbol_cached(L"accept:");
constant4652 = (Object)new_AST_Constant((Object)symbol4263);
// =
send23823 = (Object)new_AST_Send((Object)send23822, (Object)SMB__equal, 1, (Object)constant4652);
super281 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3317);
// escape:
send23824 = (Object)new_AST_Send((Object)variable158, (Object)SMB_escape_, 1, (Object)super281);
block1489 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23824);
// ifFalse:
send23825 = (Object)new_AST_Send((Object)send23823, (Object)SMB_ifFalse_, 1, (Object)block1489);
string2773 = (Object)new_Type_String(L"visit");
constant4653 = (Object)new_AST_Constant((Object)string2773);
// objectName
send23826 = (Object)new_AST_Send((Object)Self, (Object)symbol3823, 0);
// ,
send23827 = (Object)new_AST_Send((Object)constant4653, (Object)SMB__concat, 1, (Object)send23826);
string2774 = (Object)new_Type_String(L":");
constant4654 = (Object)new_AST_Constant((Object)string2774);
// ,
send23828 = (Object)new_AST_Send((Object)send23827, (Object)SMB__concat, 1, (Object)constant4654);
// asSymbol
send23829 = (Object)new_AST_Send((Object)send23828, (Object)SMB_asSymbol, 0);
assign2899 = (Object)new_AST_Assign((Object)localvariable3318, (Object)send23829);
// argument
send23830 = (Object)new_AST_Send((Object)localvariable3317, (Object)symbol4000, 0);
symbol4264 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send23831 = (Object)new_AST_Send((Object)send23830, (Object)symbol4264, 2, (Object)localvariable3318, (Object)Self);
block1490 = (Object)new_AST_Block_with((Type_Array)array2629, (Type_Array)empty_Type_Array, 1, 3, send23825, assign2899, send23831);
// on:
send23832 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1490);
method3283 = (Object)new_AST_Method_with((Type_Array)array2627, (Type_Array)array2628, 1, send23832);
methodclosure3283 = (Object)new_Runtime_MethodClosure(method3283);
store_method((Type_Class)class536, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure3283);

classreference631 = (Object)new_Organization_ClassReference((Type_Class)class536);

// Variable>>name
//name
// 	^ name
method3284 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable788);
methodclosure3284 = (Object)new_Runtime_MethodClosure(method3284);
store_method((Type_Class)class543, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure3284);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable3319 = (Object)new_AST_Variable_named(L"anObject");
array2630 = (Object)new_Type_Array_with(1, (Object)localvariable3319);
assign2900 = (Object)new_AST_Assign((Object)instancevariable790, (Object)localvariable3319);
method3285 = (Object)new_AST_Method_with((Type_Array)array2630, (Type_Array)empty_Type_Array, 2, assign2900, Self);
methodclosure3285 = (Object)new_Runtime_MethodClosure(method3285);
store_method((Type_Class)class543, (Type_Symbol)symbol4132, (Runtime_MethodClosure)methodclosure3285);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method3286 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable789);
symbol4131 = (Object)new_Type_Symbol_cached(L"scopeId");
methodclosure3286 = (Object)new_Runtime_MethodClosure(method3286);
store_method((Type_Class)class543, (Type_Symbol)symbol4131, (Runtime_MethodClosure)methodclosure3286);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method3287 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure3287 = (Object)new_Runtime_MethodClosure(method3287);
store_method((Type_Class)class543, (Type_Symbol)symbol3984, (Runtime_MethodClosure)methodclosure3287);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable3320 = (Object)new_AST_Variable_named(L"aStream");
array2631 = (Object)new_Type_Array_with(1, (Object)localvariable3320);
super282 = (Object)new_AST_Super((Object)symbol3923, 1, (Object)localvariable3320);
string2775 = (Object)new_Type_String(L" ");
constant4655 = (Object)new_AST_Constant((Object)string2775);
// nextPutAll:
send23833 = (Object)new_AST_Send((Object)localvariable3320, (Object)symbol4154, 1, (Object)constant4655);
// name
send23834 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send23835 = (Object)new_AST_Send((Object)send23834, (Object)symbol3923, 1, (Object)localvariable3320);
string2776 = (Object)new_Type_String(L" ");
constant4656 = (Object)new_AST_Constant((Object)string2776);
// nextPutAll:
send23836 = (Object)new_AST_Send((Object)localvariable3320, (Object)symbol4154, 1, (Object)constant4656);
// scopeId
send23837 = (Object)new_AST_Send((Object)Self, (Object)symbol4131, 0);
// printOn:
send23838 = (Object)new_AST_Send((Object)send23837, (Object)symbol3923, 1, (Object)localvariable3320);
string2777 = (Object)new_Type_String(L"@");
constant4657 = (Object)new_AST_Constant((Object)string2777);
// nextPutAll:
send23839 = (Object)new_AST_Send((Object)localvariable3320, (Object)symbol4154, 1, (Object)constant4657);
symbol4129 = (Object)new_Type_Symbol_cached(L"localId");
// localId
send23840 = (Object)new_AST_Send((Object)Self, (Object)symbol4129, 0);
// printOn:
send23841 = (Object)new_AST_Send((Object)send23840, (Object)symbol3923, 1, (Object)localvariable3320);
method3288 = (Object)new_AST_Method_with((Type_Array)array2631, (Type_Array)empty_Type_Array, 8, super282, send23833, send23835, send23836, send23838, send23839, send23841, Self);
methodclosure3288 = (Object)new_Runtime_MethodClosure(method3288);
store_method((Type_Class)class543, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3288);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable3321 = (Object)new_AST_Variable_named(L"anObject");
array2632 = (Object)new_Type_Array_with(1, (Object)localvariable3321);
assign2901 = (Object)new_AST_Assign((Object)instancevariable789, (Object)localvariable3321);
method3289 = (Object)new_AST_Method_with((Type_Array)array2632, (Type_Array)empty_Type_Array, 2, assign2901, Self);
symbol4130 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure3289 = (Object)new_Runtime_MethodClosure(method3289);
store_method((Type_Class)class543, (Type_Symbol)symbol4130, (Runtime_MethodClosure)methodclosure3289);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable3322 = (Object)new_AST_Variable_named(L"anObject");
array2633 = (Object)new_Type_Array_with(1, (Object)localvariable3322);
assign2902 = (Object)new_AST_Assign((Object)instancevariable788, (Object)localvariable3322);
method3290 = (Object)new_AST_Method_with((Type_Array)array2633, (Type_Array)empty_Type_Array, 2, assign2902, Self);
methodclosure3290 = (Object)new_Runtime_MethodClosure(method3290);
store_method((Type_Class)class543, (Type_Symbol)symbol3985, (Runtime_MethodClosure)methodclosure3290);


// Variable>>localId
//localId
// 	^ localId
method3291 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable790);
methodclosure3291 = (Object)new_Runtime_MethodClosure(method3291);
store_method((Type_Class)class543, (Type_Symbol)symbol4129, (Runtime_MethodClosure)methodclosure3291);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable3323 = (Object)new_AST_Variable_named(L"aSymbol");
array2634 = (Object)new_Type_Array_with(1, (Object)localvariable3323);
// new
send23842 = (Object)new_AST_Send((Object)Self, (Object)symbol3915, 0);
// asSymbol
send23843 = (Object)new_AST_Send((Object)localvariable3323, (Object)SMB_asSymbol, 0);
// name:
send23844 = (Object)new_AST_Send((Object)send23842, (Object)symbol3985, 1, (Object)send23843);
method3292 = (Object)new_AST_Method_with((Type_Array)array2634, (Type_Array)empty_Type_Array, 1, send23844);
methodclosure3292 = (Object)new_Runtime_MethodClosure(method3292);
store_method((Type_Class)metaclass543, (Type_Symbol)symbol4128, (Runtime_MethodClosure)methodclosure3292);

classreference632 = (Object)new_Organization_ClassReference((Type_Class)class543);
classreference633 = (Object)new_Organization_ClassReference((Type_Class)class555);
classreference634 = (Object)new_Organization_ClassReference((Type_Class)class551);

// ASTNode>>argumentOfBinary:
//argumentOfBinary: binary
// 	^ binary argument: self
localvariable3324 = (Object)new_AST_Variable_named(L"binary");
array2635 = (Object)new_Type_Array_with(1, (Object)localvariable3324);
// argument:
send23845 = (Object)new_AST_Send((Object)localvariable3324, (Object)symbol3999, 1, (Object)Self);
method3293 = (Object)new_AST_Method_with((Type_Array)array2635, (Type_Array)empty_Type_Array, 1, send23845);
methodclosure3293 = (Object)new_Runtime_MethodClosure(method3293);
store_method((Type_Class)class542, (Type_Symbol)symbol3948, (Runtime_MethodClosure)methodclosure3293);


// ASTNode>>isReturnExpression
//isReturnExpression
// 	^ false
method3294 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure3294 = (Object)new_Runtime_MethodClosure(method3294);
store_method((Type_Class)class542, (Type_Symbol)symbol3825, (Runtime_MethodClosure)methodclosure3294);


// ASTNode>>hasReturnExpression
//hasReturnExpression
// 	^ false
method3295 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure3295 = (Object)new_Runtime_MethodClosure(method3295);
store_method((Type_Class)class542, (Type_Symbol)symbol3945, (Runtime_MethodClosure)methodclosure3295);


// ASTNode>>astType
//astType
// 	^ 'Type'
string2778 = (Object)new_Type_String(L"Type");
constant4658 = (Object)new_AST_Constant((Object)string2778);
method3296 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant4658);
symbol3949 = (Object)new_Type_Symbol_cached(L"astType");
methodclosure3296 = (Object)new_Runtime_MethodClosure(method3296);
store_method((Type_Class)class542, (Type_Symbol)symbol3949, (Runtime_MethodClosure)methodclosure3296);


// ASTNode>>uid
//uid
// 	uid isNil ifTrue: [ uid := self class uidFor: self].
// 	^ uid
// isNil
send23846 = (Object)new_AST_Send((Object)instancevariable786, (Object)SMB_isNil, 0);
// class
send23847 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol4265 = (Object)new_Type_Symbol_cached(L"uidFor:");
// uidFor:
send23848 = (Object)new_AST_Send((Object)send23847, (Object)symbol4265, 1, (Object)Self);
assign2903 = (Object)new_AST_Assign((Object)instancevariable786, (Object)send23848);
block1491 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign2903);
// ifTrue:
send23849 = (Object)new_AST_Send((Object)send23846, (Object)SMB_ifTrue_, 1, (Object)block1491);
method3297 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send23849, instancevariable786);
methodclosure3297 = (Object)new_Runtime_MethodClosure(method3297);
store_method((Type_Class)class542, (Type_Symbol)symbol3946, (Runtime_MethodClosure)methodclosure3297);


// ASTNode>>astName
//astName
// 	^ (self class name 
// 			copyFrom: 4
// 			to: self class name size) capitalized
// class
send23850 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send23851 = (Object)new_AST_Send((Object)send23850, (Object)SMB_name, 0);
symbol4266 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");
smallint1617 = (Object)new_Type_SmallInt(4);
constant4659 = (Object)new_AST_Constant((Object)smallint1617);
// class
send23852 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send23853 = (Object)new_AST_Send((Object)send23852, (Object)SMB_name, 0);
// size
send23854 = (Object)new_AST_Send((Object)send23853, (Object)SMB_size, 0);
// copyFrom:to:
send23855 = (Object)new_AST_Send((Object)send23851, (Object)symbol4266, 2, (Object)constant4659, (Object)send23854);
// capitalized
send23856 = (Object)new_AST_Send((Object)send23855, (Object)symbol4242, 0);
method3298 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23856);
symbol3950 = (Object)new_Type_Symbol_cached(L"astName");
methodclosure3298 = (Object)new_Runtime_MethodClosure(method3298);
store_method((Type_Class)class542, (Type_Symbol)symbol3950, (Runtime_MethodClosure)methodclosure3298);


// ASTNode>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable3325 = (Object)new_AST_Variable_named(L"aMessage");
array2636 = (Object)new_Type_Array_with(1, (Object)localvariable3325);
localvariable3326 = (Object)new_AST_Variable_named(L"selector");
array2637 = (Object)new_Type_Array_with(1, (Object)localvariable3326);
variable159 = (Object)new_AST_Variable_named(L"return");
array2638 = (Object)new_Type_Array_with(1, (Object)variable159);
// selector
send23857 = (Object)new_AST_Send((Object)localvariable3325, (Object)symbol3927, 0);
constant4660 = (Object)new_AST_Constant((Object)symbol4263);
// =
send23858 = (Object)new_AST_Send((Object)send23857, (Object)SMB__equal, 1, (Object)constant4660);
super283 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3325);
// escape:
send23859 = (Object)new_AST_Send((Object)variable159, (Object)SMB_escape_, 1, (Object)super283);
block1492 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23859);
// ifFalse:
send23860 = (Object)new_AST_Send((Object)send23858, (Object)SMB_ifFalse_, 1, (Object)block1492);
string2779 = (Object)new_Type_String(L"visit");
constant4661 = (Object)new_AST_Constant((Object)string2779);
// class
send23861 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send23862 = (Object)new_AST_Send((Object)send23861, (Object)SMB_name, 0);
smallint1618 = (Object)new_Type_SmallInt(4);
constant4662 = (Object)new_AST_Constant((Object)smallint1618);
// class
send23863 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send23864 = (Object)new_AST_Send((Object)send23863, (Object)SMB_name, 0);
// size
send23865 = (Object)new_AST_Send((Object)send23864, (Object)SMB_size, 0);
// copyFrom:to:
send23866 = (Object)new_AST_Send((Object)send23862, (Object)symbol4266, 2, (Object)constant4662, (Object)send23865);
// ,
send23867 = (Object)new_AST_Send((Object)constant4661, (Object)SMB__concat, 1, (Object)send23866);
string2780 = (Object)new_Type_String(L":");
constant4663 = (Object)new_AST_Constant((Object)string2780);
// ,
send23868 = (Object)new_AST_Send((Object)send23867, (Object)SMB__concat, 1, (Object)constant4663);
// asSymbol
send23869 = (Object)new_AST_Send((Object)send23868, (Object)SMB_asSymbol, 0);
assign2904 = (Object)new_AST_Assign((Object)localvariable3326, (Object)send23869);
// argument
send23870 = (Object)new_AST_Send((Object)localvariable3325, (Object)symbol4000, 0);
// perform:with:
send23871 = (Object)new_AST_Send((Object)send23870, (Object)symbol4264, 2, (Object)localvariable3326, (Object)Self);
block1493 = (Object)new_AST_Block_with((Type_Array)array2638, (Type_Array)empty_Type_Array, 1, 3, send23860, assign2904, send23871);
// on:
send23872 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1493);
method3299 = (Object)new_AST_Method_with((Type_Array)array2636, (Type_Array)array2637, 1, send23872);
methodclosure3299 = (Object)new_Runtime_MethodClosure(method3299);
store_method((Type_Class)class542, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure3299);


// ASTNode>>sourceObject
//sourceObject
// 	^ sourceObject
method3300 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable785);
symbol3947 = (Object)new_Type_Symbol_cached(L"sourceObject");
methodclosure3300 = (Object)new_Runtime_MethodClosure(method3300);
store_method((Type_Class)class542, (Type_Symbol)symbol3947, (Runtime_MethodClosure)methodclosure3300);


// ASTNode>>sourceObject:
//sourceObject: anObject
// 	sourceObject := anObject
localvariable3327 = (Object)new_AST_Variable_named(L"anObject");
array2639 = (Object)new_Type_Array_with(1, (Object)localvariable3327);
assign2905 = (Object)new_AST_Assign((Object)instancevariable785, (Object)localvariable3327);
method3301 = (Object)new_AST_Method_with((Type_Array)array2639, (Type_Array)empty_Type_Array, 2, assign2905, Self);
symbol3944 = (Object)new_Type_Symbol_cached(L"sourceObject:");
methodclosure3301 = (Object)new_Runtime_MethodClosure(method3301);
store_method((Type_Class)class542, (Type_Symbol)symbol3944, (Runtime_MethodClosure)methodclosure3301);

classreference635 = (Object)new_Organization_ClassReference((Type_Class)class542);

// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable3328 = (Object)new_AST_Variable_named(L"aStream");
array2640 = (Object)new_Type_Array_with(1, (Object)localvariable3328);
// selector
send23873 = (Object)new_AST_Send((Object)Self, (Object)symbol3927, 0);
// printOn:
send23874 = (Object)new_AST_Send((Object)send23873, (Object)symbol3923, 1, (Object)localvariable3328);
method3302 = (Object)new_AST_Method_with((Type_Array)array2640, (Type_Array)empty_Type_Array, 2, send23874, Self);
methodclosure3302 = (Object)new_Runtime_MethodClosure(method3302);
store_method((Type_Class)class546, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure3302);


// ASTSelector>>selector
//selector
// 	^ selector
method3303 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable792);
methodclosure3303 = (Object)new_Runtime_MethodClosure(method3303);
store_method((Type_Class)class546, (Type_Symbol)symbol3927, (Runtime_MethodClosure)methodclosure3303);


// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable3329 = (Object)new_AST_Variable_named(L"anObject");
array2641 = (Object)new_Type_Array_with(1, (Object)localvariable3329);
localvariable3330 = (Object)new_AST_Variable_named(L"string");
array2642 = (Object)new_Type_Array_with(1, (Object)localvariable3330);
assign2906 = (Object)new_AST_Assign((Object)instancevariable792, (Object)localvariable3329);
// asString
send23875 = (Object)new_AST_Send((Object)instancevariable792, (Object)SMB_asString, 0);
assign2907 = (Object)new_AST_Assign((Object)localvariable3330, (Object)send23875);
// size
send23876 = (Object)new_AST_Send((Object)localvariable3330, (Object)SMB_size, 0);
smallint1619 = (Object)new_Type_SmallInt(1);
constant4664 = (Object)new_AST_Constant((Object)smallint1619);
// >
send23877 = (Object)new_AST_Send((Object)send23876, (Object)SMB__gt, 1, (Object)constant4664);
// size
send23878 = (Object)new_AST_Send((Object)localvariable3330, (Object)SMB_size, 0);
smallint1620 = (Object)new_Type_SmallInt(1);
constant4665 = (Object)new_AST_Constant((Object)smallint1620);
// -
send23879 = (Object)new_AST_Send((Object)send23878, (Object)SMB__minus, 1, (Object)constant4665);
// at:
send23880 = (Object)new_AST_Send((Object)localvariable3330, (Object)SMB_at_, 1, (Object)send23879);
// should
send23881 = (Object)new_AST_Send((Object)send23880, (Object)symbol4176, 0);
// not
send23882 = (Object)new_AST_Send((Object)send23881, (Object)SMB_not, 0);
string2781 = (Object)new_Type_String(L":");
constant4666 = (Object)new_AST_Constant((Object)string2781);
// =
send23883 = (Object)new_AST_Send((Object)send23882, (Object)SMB__equal, 1, (Object)constant4666);
block1494 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23883);
// ifTrue:
send23884 = (Object)new_AST_Send((Object)send23877, (Object)SMB_ifTrue_, 1, (Object)block1494);
method3304 = (Object)new_AST_Method_with((Type_Array)array2641, (Type_Array)array2642, 4, assign2906, assign2907, send23884, Self);
methodclosure3304 = (Object)new_Runtime_MethodClosure(method3304);
store_method((Type_Class)class546, (Type_Symbol)symbol3996, (Runtime_MethodClosure)methodclosure3304);


// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable3331 = (Object)new_AST_Variable_named(L"aSelector");
array2643 = (Object)new_Type_Array_with(1, (Object)localvariable3331);
// selectorName
send23885 = (Object)new_AST_Send((Object)Self, (Object)symbol3995, 0);
// selectorName
send23886 = (Object)new_AST_Send((Object)localvariable3331, (Object)symbol3995, 0);
// =
send23887 = (Object)new_AST_Send((Object)send23885, (Object)SMB__equal, 1, (Object)send23886);
method3305 = (Object)new_AST_Method_with((Type_Array)array2643, (Type_Array)empty_Type_Array, 1, send23887);
methodclosure3305 = (Object)new_Runtime_MethodClosure(method3305);
store_method((Type_Class)class546, (Type_Symbol)symbol3998, (Runtime_MethodClosure)methodclosure3305);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send23888 = (Object)new_AST_Send((Object)Self, (Object)symbol3927, 0);
// asString
send23889 = (Object)new_AST_Send((Object)send23888, (Object)SMB_asString, 0);
method3306 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23889);
methodclosure3306 = (Object)new_Runtime_MethodClosure(method3306);
store_method((Type_Class)class546, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure3306);


// ASTSelector>>parameters
//parameters
// 	^ Array new.
// new
send23890 = (Object)new_AST_Send((Object)classreference579, (Object)symbol3915, 0);
method3307 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23890);
methodclosure3307 = (Object)new_Runtime_MethodClosure(method3307);
store_method((Type_Class)class546, (Type_Symbol)symbol3997, (Runtime_MethodClosure)methodclosure3307);


// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send23891 = (Object)new_AST_Send((Object)Self, (Object)symbol3927, 0);
// printString
send23892 = (Object)new_AST_Send((Object)send23891, (Object)symbol4111, 0);
method3308 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send23892, Self);
methodclosure3308 = (Object)new_Runtime_MethodClosure(method3308);
store_method((Type_Class)class546, (Type_Symbol)symbol3995, (Runtime_MethodClosure)methodclosure3308);

classreference636 = (Object)new_Organization_ClassReference((Type_Class)class546);
}


/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send23893 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3890, 0);
Object result = (Object)Eval((Object)send23893);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send23894 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3885, 0);
Object result = (Object)Eval((Object)send23894);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send23895 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3838, 0);
Object result = (Object)Eval((Object)send23895);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send23896 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3891, 0);
Object result = (Object)Eval((Object)send23896);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send23897 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3894, 0);
Object result = (Object)Eval((Object)send23897);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send23898 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3858, 0);
Object result = (Object)Eval((Object)send23898);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send23899 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3853, 0);
Object result = (Object)Eval((Object)send23899);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send23900 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3867, 0);
Object result = (Object)Eval((Object)send23900);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send23901 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3887, 0);
Object result = (Object)Eval((Object)send23901);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send23902 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3880, 0);
Object result = (Object)Eval((Object)send23902);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send23903 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3842, 0);
Object result = (Object)Eval((Object)send23903);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send23904 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3866, 0);
Object result = (Object)Eval((Object)send23904);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send23905 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3847, 0);
Object result = (Object)Eval((Object)send23905);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send23906 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3886, 0);
Object result = (Object)Eval((Object)send23906);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send23907 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3903, 0);
Object result = (Object)Eval((Object)send23907);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send23908 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3896, 0);
Object result = (Object)Eval((Object)send23908);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send23909 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3899, 0);
Object result = (Object)Eval((Object)send23909);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send23910 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3863, 0);
Object result = (Object)Eval((Object)send23910);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send23911 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3855, 0);
Object result = (Object)Eval((Object)send23911);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send23912 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3871, 0);
Object result = (Object)Eval((Object)send23912);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send23913 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3893, 0);
Object result = (Object)Eval((Object)send23913);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send23914 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3856, 0);
Object result = (Object)Eval((Object)send23914);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send23915 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3860, 0);
Object result = (Object)Eval((Object)send23915);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send23916 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3878, 0);
Object result = (Object)Eval((Object)send23916);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send23917 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3897, 0);
Object result = (Object)Eval((Object)send23917);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send23918 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3868, 0);
Object result = (Object)Eval((Object)send23918);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send23919 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3869, 0);
Object result = (Object)Eval((Object)send23919);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send23920 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3851, 0);
Object result = (Object)Eval((Object)send23920);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send23921 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3857, 0);
Object result = (Object)Eval((Object)send23921);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send23922 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3873, 0);
Object result = (Object)Eval((Object)send23922);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send23923 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3882, 0);
Object result = (Object)Eval((Object)send23923);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send23924 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3901, 0);
Object result = (Object)Eval((Object)send23924);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send23925 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3861, 0);
Object result = (Object)Eval((Object)send23925);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send23926 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3875, 0);
Object result = (Object)Eval((Object)send23926);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send23927 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3848, 0);
Object result = (Object)Eval((Object)send23927);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send23928 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3904, 0);
Object result = (Object)Eval((Object)send23928);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send23929 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3898, 0);
Object result = (Object)Eval((Object)send23929);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send23930 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3900, 0);
Object result = (Object)Eval((Object)send23930);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send23931 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3870, 0);
Object result = (Object)Eval((Object)send23931);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send23932 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3849, 0);
Object result = (Object)Eval((Object)send23932);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send23933 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3888, 0);
Object result = (Object)Eval((Object)send23933);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send23934 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3874, 0);
Object result = (Object)Eval((Object)send23934);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send23935 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3865, 0);
Object result = (Object)Eval((Object)send23935);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send23936 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3881, 0);
Object result = (Object)Eval((Object)send23936);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send23937 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3854, 0);
Object result = (Object)Eval((Object)send23937);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send23938 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3890, 0);
Eval((Object)send23938);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class534;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})