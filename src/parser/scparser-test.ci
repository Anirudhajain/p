// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object objectlayout1797;
Object instancevariable1412;
Object instancevariable1413;
Object instancevariable1414;
Object instancevariable1415;
Object instancevariable1416;
Object symbol7698;
Object class969;
Object metaclass969;
Object objectlayout1798;
Object symbol7697;
Object class970;
Object metaclass970;
Object objectlayout1799;
Object symbol7696;
Object class971;
Object metaclass971;
Object objectlayout1800;
Object symbol7563;
Object objectlayout1801;
Object instancevariable1417;
Object instancevariable1418;
Object instancevariable1419;
Object class972;
Object metaclass972;
Object objectlayout1802;
Object symbol7871;
Object objectlayout1803;
Object instancevariable1420;
Object instancevariable1421;
Object class973;
Object metaclass973;
Object objectlayout1804;
Object symbol7680;
Object objectlayout1805;
Object instancevariable1422;
Object instancevariable1423;
Object instancevariable1424;
Object class974;
Object metaclass974;
Object objectlayout1806;
Object symbol7674;
Object class975;
Object metaclass975;
Object objectlayout1807;
Object symbol7673;
Object objectlayout1808;
Object instancevariable1425;
Object instancevariable1426;
Object instancevariable1427;
Object class976;
Object metaclass976;
Object objectlayout1809;
Object symbol7672;
Object objectlayout1810;
Object class977;
Object metaclass977;
Object objectlayout1811;
Object symbol7834;
Object objectlayout1812;
Object instancevariable1428;
Object instancevariable1429;
Object class978;
Object metaclass978;
Object objectlayout1813;
Object symbol7838;
Object objectlayout1814;
Object instancevariable1430;
Object instancevariable1431;
Object class979;
Object metaclass979;
Object objectlayout1815;
Object symbol7850;
Object objectlayout1816;
Object class980;
Object metaclass980;
Object objectlayout1817;
Object symbol7842;
Object objectlayout1818;
Object instancevariable1432;
Object instancevariable1433;
Object class981;
Object metaclass981;
Object objectlayout1819;
Object symbol7881;
Object class982;
Object metaclass982;
Object objectlayout1820;
Object symbol7878;
Object objectlayout1821;
Object instancevariable1434;
Object class983;
Object metaclass983;
Object objectlayout1822;
Object symbol7552;
Object objectlayout1823;
Object instancevariable1435;
Object instancevariable1436;
Object class984;
Object metaclass984;
Object objectlayout1824;
Object symbol7879;
Object class985;
Object metaclass985;
Object objectlayout1825;
Object symbol7852;
Object objectlayout1826;
Object instancevariable1437;
Object instancevariable1438;
Object class986;
Object metaclass986;
Object objectlayout1827;
Object symbol7837;
Object objectlayout1828;
Object instancevariable1439;
Object class987;
Object metaclass987;
Object objectlayout1829;
Object symbol7618;
Object objectlayout1830;
Object instancevariable1440;
Object instancevariable1441;
Object instancevariable1442;
Object instancevariable1443;
Object class988;
Object metaclass988;
Object objectlayout1831;
Object instancevariable1444;
Object symbol7685;
Object objectlayout1832;
Object instancevariable1445;
Object instancevariable1446;
Object instancevariable1447;
Object class989;
Object metaclass989;
Object objectlayout1833;
Object symbol7684;
Object objectlayout1834;
Object class990;
Object metaclass990;
Object objectlayout1835;
Object symbol7558;
Object objectlayout1836;
Object instancevariable1448;
Object instancevariable1449;
Object class991;
Object metaclass991;
Object objectlayout1837;
Object symbol7732;
Object objectlayout1838;
Object instancevariable1450;
Object class992;
Object metaclass992;
Object objectlayout1839;
Object symbol7615;
Object objectlayout1840;
Object instancevariable1451;
Object class993;
Object metaclass993;
Object objectlayout1841;
Object symbol7587;
Object objectlayout1842;
Object class994;
Object metaclass994;
Object objectlayout1843;
Object symbol7607;
Object objectlayout1844;
Object class995;
Object metaclass995;
Object objectlayout1845;
Object symbol7559;
Object objectlayout1846;
Object instancevariable1452;
Object class996;
Object metaclass996;
Object objectlayout1847;
Object symbol7582;
Object objectlayout1848;
Object instancevariable1453;
Object class997;
Object metaclass997;
Object objectlayout1849;
Object symbol7731;
Object objectlayout1850;
Object class998;
Object metaclass998;
Object objectlayout1851;
Object symbol7600;
Object objectlayout1852;
Object class999;
Object metaclass999;
Object objectlayout1853;
Object symbol7599;
Object objectlayout1854;
Object class1000;
Object metaclass1000;
Object objectlayout1855;
Object symbol7564;
Object objectlayout1856;
Object instancevariable1454;
Object instancevariable1455;
Object class1001;
Object metaclass1001;
Object objectlayout1857;
Object symbol7726;
Object objectlayout1858;
Object class1002;
Object metaclass1002;
Object objectlayout1859;
Object symbol7817;
Object objectlayout1860;
Object instancevariable1456;
Object class1003;
Object metaclass1003;
Object objectlayout1861;
Object symbol7573;
Object objectlayout1862;
Object instancevariable1457;
Object instancevariable1458;
Object instancevariable1459;
Object instancevariable1460;
Object class1004;
Object metaclass1004;
Object objectlayout1863;
Object symbol7602;
Object objectlayout1864;
Object instancevariable1461;
Object instancevariable1462;
Object instancevariable1463;
Object class1005;
Object metaclass1005;
Object objectlayout1865;
Object symbol7773;
Object objectlayout1866;
Object class1006;
Object metaclass1006;
Object objectlayout1867;
Object symbol7554;
Object objectlayout1868;
Object instancevariable1464;
Object class1007;
Object metaclass1007;
Object objectlayout1869;
Object symbol7585;
Object objectlayout1870;
Object instancevariable1465;
Object instancevariable1466;
Object class1008;
Object metaclass1008;
Object objectlayout1871;
Object symbol7566;
Object objectlayout1872;
Object instancevariable1467;
Object instancevariable1468;
Object class1009;
Object metaclass1009;
Object objectlayout1873;
Object symbol7575;
Object objectlayout1874;
Object instancevariable1469;
Object class1010;
Object metaclass1010;
Object objectlayout1875;
Object symbol7567;
Object objectlayout1876;
Object instancevariable1470;
Object instancevariable1471;
Object class1011;
Object metaclass1011;
Object objectlayout1877;
Object symbol7595;
Object objectlayout1878;
Object instancevariable1472;
Object class1012;
Object metaclass1012;
Object objectlayout1879;
Object symbol7560;
Object objectlayout1880;
Object instancevariable1473;
Object class1013;
Object metaclass1013;
Object objectlayout1881;
Object symbol7568;
Object objectlayout1882;
Object instancevariable1474;
Object instancevariable1475;
Object class1014;
Object metaclass1014;
Object objectlayout1883;
Object symbol7625;
Object objectlayout1884;
Object instancevariable1476;
Object class1015;
Object metaclass1015;
Object objectlayout1885;
Object symbol7569;
Object objectlayout1886;
Object instancevariable1477;
Object class1016;
Object metaclass1016;
Object objectlayout1887;
Object symbol7606;
Object objectlayout1888;
Object instancevariable1478;
Object class1017;
Object metaclass1017;
Object objectlayout1889;
Object symbol7612;
Object objectlayout1890;
Object instancevariable1479;
Object instancevariable1480;
Object instancevariable1481;
Object class1018;
Object metaclass1018;
Object objectlayout1891;
Object instancevariable1482;
Object symbol7536;
Object objectlayout1892;
Object instancevariable1483;
Object class1019;
Object metaclass1019;
Object objectlayout1893;
Object symbol7533;
Object objectlayout1894;
Object instancevariable1484;
Object class1020;
Object metaclass1020;
Object objectlayout1895;
Object symbol7863;
Object objectlayout1896;
Object instancevariable1485;
Object instancevariable1486;
Object instancevariable1487;
Object class1021;
Object metaclass1021;
Object objectlayout1897;
Object symbol7721;
Object objectlayout1898;
Object instancevariable1488;
Object class1022;
Object metaclass1022;
Object objectlayout1899;
Object symbol7643;
Object objectlayout1900;
Object class1023;
Object metaclass1023;
Object objectlayout1901;
Object symbol7637;
Object class1024;
Object metaclass1024;
Object objectlayout1902;
Object instancevariable1489;
Object symbol7638;
Object class1025;
Object metaclass1025;
Object localvariable5979;
Object array4712;
Object send43735;
Object symbol7548;
Object send43736;
Object method5798;
Object symbol7630;
Object methodclosure5798;
Object localvariable5980;
Object array4713;
Object symbol7646;
Object send43737;
Object symbol7873;
Object send43738;
Object method5799;
Object symbol7642;
Object methodclosure5799;
Object instancevariable1490;
Object method5800;
Object methodclosure5800;
Object localvariable5981;
Object array4714;
Object assign5306;
Object method5801;
Object symbol7631;
Object methodclosure5801;
Object instancevariable1491;
Object method5802;
Object symbol7635;
Object methodclosure5802;
Object symbol7641;
Object send43739;
Object symbol7550;
Object method5803;
Object methodclosure5803;
Object classreference1137;
Object symbol7885;
Object send43740;
Object send43741;
Object method5804;
Object symbol7639;
Object methodclosure5804;
Object localvariable5982;
Object array4715;
Object classreference1138;
Object symbol7640;
Object send43742;
Object assign5307;
Object send43743;
Object symbol7886;
Object send43744;
Object send43745;
Object send43746;
Object block2714;
Object block2715;
Object send43747;
Object method5805;
Object symbol7632;
Object methodclosure5805;
Object send43748;
Object send43749;
Object method5806;
Object methodclosure5806;
Object localvariable5983;
Object localvariable5984;
Object localvariable5985;
Object array4716;
Object send43750;
Object assign5308;
Object symbol7645;
Object send43751;
Object symbol7705;
Object localvariable5986;
Object array4717;
Object localvariable5987;
Object array4718;
Object send43752;
Object send43753;
Object symbol7887;
Object string5077;
Object constant8510;
Object send43754;
Object string5078;
Object constant8511;
Object send43755;
Object send43756;
Object block2716;
Object send43757;
Object block2717;
Object send43758;
Object classreference1139;
Object symbol7864;
Object send43759;
Object assign5309;
Object symbol7868;
Object send43760;
Object send43761;
Object symbol7706;
Object send43762;
Object block2718;
Object send43763;
Object method5807;
Object symbol7644;
Object methodclosure5807;
Object method5808;
Object symbol7633;
Object methodclosure5808;
Object instancevariable1492;
Object method5809;
Object methodclosure5809;
Object send43764;
Object method5810;
Object methodclosure5810;
Object localvariable5988;
Object array4719;
Object variable302;
Object array4720;
Object send43765;
Object send43766;
Object block2719;
Object send43767;
Object send43768;
Object send43769;
Object block2720;
Object send43770;
Object symbol7634;
Object send43771;
Object block2721;
Object send43772;
Object method5811;
Object methodclosure5811;
Object classreference1140;
Object instancevariable1493;
Object method5812;
Object symbol7651;
Object methodclosure5812;
Object localvariable5989;
Object array4721;
Object symbol7650;
Object super487;
Object symbol7888;
Object string5079;
Object constant8512;
Object send43773;
Object send43774;
Object send43775;
Object method5813;
Object methodclosure5813;
Object instancevariable1494;
Object method5814;
Object methodclosure5814;
Object classreference1141;
Object localvariable5990;
Object array4722;
Object super488;
Object symbol7889;
Object send43776;
Object send43777;
Object send43778;
Object method5815;
Object methodclosure5815;
Object classreference1142;
Object classreference1143;
Object localvariable5991;
Object array4723;
Object send43779;
Object send43780;
Object method5816;
Object methodclosure5816;
Object method5817;
Object symbol7546;
Object methodclosure5817;
Object method5818;
Object methodclosure5818;
Object method5819;
Object methodclosure5819;
Object send43781;
Object symbol7539;
Object send43782;
Object method5820;
Object symbol7545;
Object methodclosure5820;
Object method5821;
Object symbol7547;
Object methodclosure5821;
Object symbol7688;
Object send43783;
Object send43784;
Object method5822;
Object methodclosure5822;
Object localvariable5992;
Object array4724;
Object send43785;
Object send43786;
Object method5823;
Object symbol7549;
Object methodclosure5823;
Object classreference1144;
Object smallint2973;
Object constant8513;
Object send43787;
Object method5824;
Object symbol7702;
Object methodclosure5824;
Object localvariable5993;
Object array4725;
Object super489;
Object string5080;
Object constant8514;
Object send43788;
Object localvariable5994;
Object array4726;
Object send43789;
Object string5081;
Object constant8515;
Object send43790;
Object block2722;
Object send43791;
Object string5082;
Object constant8516;
Object send43792;
Object method5825;
Object methodclosure5825;
Object send43793;
Object smallint2974;
Object constant8517;
Object send43794;
Object method5826;
Object symbol7662;
Object methodclosure5826;
Object localvariable5995;
Object array4727;
Object smallint2975;
Object constant8518;
Object symbol7890;
Object send43795;
Object localvariable5996;
Object array4728;
Object symbol7891;
Object send43796;
Object send43797;
Object block2723;
Object send43798;
Object method5827;
Object symbol7703;
Object methodclosure5827;
Object localvariable5997;
Object localvariable5998;
Object array4729;
Object localvariable5999;
Object array4730;
Object assign5310;
Object localvariable6000;
Object array4731;
Object send43799;
Object assign5311;
Object block2724;
Object send43800;
Object method5828;
Object symbol7707;
Object methodclosure5828;
Object localvariable6001;
Object array4732;
Object smallint2976;
Object constant8519;
Object send43801;
Object method5829;
Object symbol7704;
Object methodclosure5829;
Object localvariable6002;
Object array4733;
Object variable303;
Object array4734;
Object send43802;
Object send43803;
Object block2725;
Object send43804;
Object send43805;
Object send43806;
Object send43807;
Object send43808;
Object block2726;
Object send43809;
Object send43810;
Object send43811;
Object send43812;
Object send43813;
Object block2727;
Object send43814;
Object smallint2977;
Object constant8520;
Object send43815;
Object localvariable6003;
Object array4735;
Object send43816;
Object send43817;
Object send43818;
Object send43819;
Object block2728;
Object send43820;
Object block2729;
Object send43821;
Object block2730;
Object send43822;
Object method5830;
Object methodclosure5830;
Object super490;
Object method5831;
Object methodclosure5831;
Object localvariable6004;
Object array4736;
Object send43823;
Object send43824;
Object method5832;
Object symbol7708;
Object methodclosure5832;
Object send43825;
Object send43826;
Object method5833;
Object symbol7701;
Object methodclosure5833;
Object localvariable6005;
Object array4737;
Object smallint2978;
Object constant8521;
Object send43827;
Object localvariable6006;
Object array4738;
Object send43828;
Object send43829;
Object block2731;
Object send43830;
Object method5834;
Object methodclosure5834;
Object localvariable6007;
Object array4739;
Object localvariable6008;
Object array4740;
Object send43831;
Object send43832;
Object smallint2979;
Object constant8522;
Object send43833;
Object send43834;
Object assign5312;
Object localvariable6009;
Object localvariable6010;
Object array4741;
Object send43835;
Object block2732;
Object send43836;
Object send43837;
Object method5835;
Object methodclosure5835;
Object classreference1145;
Object classreference1146;
Object classreference1147;
Object classreference1148;
Object classreference1149;
Object classreference1150;
Object localvariable6011;
Object localvariable6012;
Object array4742;
Object symbol7892;
Object symbol7893;
Object send43838;
Object send43839;
Object block2733;
Object send43840;
Object method5836;
Object symbol7872;
Object methodclosure5836;
Object localvariable6013;
Object array4743;
Object variable304;
Object array4744;
Object send43841;
Object block2734;
Object send43842;
Object block2735;
Object send43843;
Object method5837;
Object methodclosure5837;
Object classreference1151;
Object classreference1152;
Object classreference1153;
Object classreference1154;
Object symbol7843;
Object send43844;
Object symbol7877;
Object send43845;
Object method5838;
Object symbol7854;
Object methodclosure5838;
Object localvariable6014;
Object array4745;
Object localvariable6015;
Object localvariable6016;
Object array4746;
Object symbol7894;
Object send43846;
Object assign5313;
Object symbol7853;
Object send43847;
Object assign5314;
Object symbol7895;
Object symbol7896;
Object send43848;
Object block2736;
Object send43849;
Object method5839;
Object symbol7846;
Object methodclosure5839;
Object method5840;
Object symbol7835;
Object methodclosure5840;
Object localvariable6017;
Object array4747;
Object assign5315;
Object method5841;
Object symbol7723;
Object methodclosure5841;
Object localvariable6018;
Object array4748;
Object symbol7897;
Object send43850;
Object localvariable6019;
Object array4749;
Object symbol7898;
Object send43851;
Object symbol7899;
Object send43852;
Object block2737;
Object send43853;
Object block2738;
Object send43854;
Object method5842;
Object symbol7855;
Object methodclosure5842;
Object symbol7851;
Object send43855;
Object send43856;
Object method5843;
Object symbol7847;
Object methodclosure5843;
Object localvariable6020;
Object array4750;
Object send43857;
Object symbol7900;
Object send43858;
Object block2739;
Object send43859;
Object method5844;
Object symbol7836;
Object methodclosure5844;
Object localvariable6021;
Object array4751;
Object send43860;
Object send43861;
Object method5845;
Object symbol7840;
Object methodclosure5845;
Object localvariable6022;
Object array4752;
Object assign5316;
Object method5846;
Object symbol7848;
Object methodclosure5846;
Object localvariable6023;
Object array4753;
Object localvariable6024;
Object array4754;
Object super491;
Object assign5317;
Object assign5318;
Object method5847;
Object symbol7875;
Object methodclosure5847;
Object super492;
Object send43862;
Object send43863;
Object method5848;
Object methodclosure5848;
Object localvariable6025;
Object array4755;
Object assign5319;
Object method5849;
Object methodclosure5849;
Object method5850;
Object symbol7676;
Object methodclosure5850;
Object localvariable6026;
Object array4756;
Object symbol7844;
Object send43864;
Object send43865;
Object method5851;
Object symbol7880;
Object methodclosure5851;
Object localvariable6027;
Object array4757;
Object localvariable6028;
Object localvariable6029;
Object array4758;
Object variable305;
Object array4759;
Object send43866;
Object assign5320;
Object localvariable6030;
Object array4760;
Object send43867;
Object block2740;
Object send43868;
Object send43869;
Object assign5321;
Object send43870;
Object block2741;
Object send43871;
Object symbol7845;
Object send43872;
Object send43873;
Object block2742;
Object send43874;
Object block2743;
Object send43875;
Object send43876;
Object smallint2980;
Object constant8523;
Object send43877;
Object send43878;
Object send43879;
Object block2744;
Object send43880;
Object block2745;
Object send43881;
Object method5852;
Object methodclosure5852;
Object classreference1156;
Object send43882;
Object send43883;
Object send43884;
Object method5853;
Object methodclosure5853;
Object send43885;
Object method5854;
Object methodclosure5854;
Object variable306;
Object array4761;
Object symbol7849;
Object super493;
Object send43886;
Object block2746;
Object send43887;
Object string5083;
Object constant8524;
Object send43888;
Object string5084;
Object constant8525;
Object send43889;
Object block2747;
Object send43890;
Object method5855;
Object methodclosure5855;
Object symbol7839;
Object send43891;
Object send43892;
Object method5856;
Object symbol7841;
Object methodclosure5856;
Object method5857;
Object methodclosure5857;
Object localvariable6031;
Object array4762;
Object super494;
Object assign5322;
Object assign5323;
Object method5858;
Object methodclosure5858;
Object localvariable6032;
Object array4763;
Object assign5324;
Object method5859;
Object methodclosure5859;
Object method5860;
Object methodclosure5860;
Object localvariable6033;
Object localvariable6034;
Object array4764;
Object localvariable6035;
Object array4765;
Object send43893;
Object block2748;
Object send43894;
Object send43895;
Object assign5325;
Object send43896;
Object block2749;
Object send43897;
Object block2750;
Object send43898;
Object method5861;
Object symbol7876;
Object methodclosure5861;
Object localvariable6036;
Object array4766;
Object send43899;
Object send43900;
Object method5862;
Object methodclosure5862;
Object method5863;
Object methodclosure5863;
Object classreference1157;
Object send43901;
Object method5864;
Object methodclosure5864;
Object localvariable6037;
Object array4767;
Object localvariable6038;
Object localvariable6039;
Object array4768;
Object variable307;
Object array4769;
Object send43902;
Object assign5326;
Object send43903;
Object assign5327;
Object send43904;
Object block2751;
Object send43905;
Object send43906;
Object send43907;
Object block2752;
Object send43908;
Object method5865;
Object methodclosure5865;
Object localvariable6040;
Object array4770;
Object super495;
Object assign5328;
Object assign5329;
Object method5866;
Object methodclosure5866;
Object localvariable6041;
Object array4771;
Object variable308;
Object array4772;
Object localvariable6042;
Object array4773;
Object send43909;
Object method5867;
Object symbol7883;
Object methodclosure5867;
Object localvariable6043;
Object array4774;
Object assign5330;
Object method5868;
Object symbol7884;
Object methodclosure5868;
Object localvariable6044;
Object array4775;
Object method5869;
Object symbol7882;
Object methodclosure5869;
Object classreference1158;
Object send43910;
Object classreference1159;
Object send43911;
Object block2753;
Object send43912;
Object send43913;
Object block2754;
Object send43914;
Object method5870;
Object methodclosure5870;
Object method5871;
Object methodclosure5871;
Object classreference1160;
Object send43915;
Object method5872;
Object methodclosure5872;
Object classreference1161;
Object send43916;
Object method5873;
Object methodclosure5873;
Object send43917;
Object method5874;
Object methodclosure5874;
Object localvariable6045;
Object array4776;
Object localvariable6046;
Object array4777;
Object super496;
Object assign5331;
Object method5875;
Object methodclosure5875;
Object super497;
Object send43918;
Object send43919;
Object method5876;
Object methodclosure5876;
Object localvariable6047;
Object array4778;
Object localvariable6048;
Object array4779;
Object variable309;
Object array4780;
Object localvariable6049;
Object array4781;
Object send43920;
Object assign5332;
Object symbol7901;
Object send43921;
Object block2755;
Object send43922;
Object block2756;
Object send43923;
Object block2757;
Object send43924;
Object method5877;
Object methodclosure5877;
Object localvariable6050;
Object array4782;
Object send43925;
Object send43926;
Object method5878;
Object symbol7667;
Object methodclosure5878;
Object classreference1162;
Object send43927;
Object send43928;
Object send43929;
Object method5879;
Object methodclosure5879;
Object assign5333;
Object method5880;
Object methodclosure5880;
Object method5881;
Object methodclosure5881;
Object localvariable6051;
Object array4783;
Object symbol7902;
Object send43930;
Object method5882;
Object methodclosure5882;
Object method5883;
Object methodclosure5883;
Object classreference1155;
Object localvariable6052;
Object array4784;
Object localvariable6053;
Object array4785;
Object symbol7859;
Object send43931;
Object assign5334;
Object symbol7903;
Object send43932;
Object method5884;
Object symbol7683;
Object methodclosure5884;
Object localvariable6054;
Object array4786;
Object localvariable6055;
Object localvariable6056;
Object array4787;
Object variable310;
Object array4788;
Object assign5335;
Object symbol7681;
Object send43933;
Object send43934;
Object block2758;
Object send43935;
Object assign5336;
Object symbol7904;
Object send43936;
Object assign5337;
Object symbol7905;
Object send43937;
Object send43938;
Object block2759;
Object send43939;
Object send43940;
Object send43941;
Object block2760;
Object send43942;
Object block2761;
Object send43943;
Object method5885;
Object symbol7682;
Object methodclosure5885;
Object localvariable6057;
Object localvariable6058;
Object array4789;
Object super498;
Object assign5338;
Object send43944;
Object smallint2981;
Object constant8526;
Object send43945;
Object send43946;
Object assign5339;
Object method5886;
Object symbol7678;
Object methodclosure5886;
Object send43947;
Object method5887;
Object methodclosure5887;
Object localvariable6059;
Object array4790;
Object variable311;
Object array4791;
Object smallint2982;
Object constant8527;
Object send43948;
Object send43949;
Object assign5340;
Object send43950;
Object block2762;
Object send43951;
Object smallint2983;
Object constant8528;
Object send43952;
Object send43953;
Object send43954;
Object block2763;
Object send43955;
Object method5888;
Object methodclosure5888;
Object localvariable6060;
Object array4792;
Object symbol7675;
Object send43956;
Object block2764;
Object block2765;
Object send43957;
Object method5889;
Object symbol7677;
Object methodclosure5889;
Object localvariable6061;
Object array4793;
Object localvariable6062;
Object localvariable6063;
Object array4794;
Object variable312;
Object array4795;
Object symbol7906;
Object send43958;
Object assign5341;
Object assign5342;
Object send43959;
Object block2766;
Object send43960;
Object send43961;
Object block2767;
Object send43962;
Object symbol7907;
Object send43963;
Object send43964;
Object send43965;
Object send43966;
Object block2768;
Object send43967;
Object block2769;
Object send43968;
Object block2770;
Object send43969;
Object method5890;
Object methodclosure5890;
Object classreference1163;
Object localvariable6064;
Object array4796;
Object send43970;
Object assign5343;
Object method5891;
Object methodclosure5891;
Object super499;
Object send43971;
Object symbol7908;
Object send43972;
Object assign5344;
Object method5892;
Object methodclosure5892;
Object localvariable6065;
Object array4797;
Object localvariable6066;
Object localvariable6067;
Object array4798;
Object send43973;
Object assign5345;
Object send43974;
Object assign5346;
Object method5893;
Object symbol7858;
Object methodclosure5893;
Object localvariable6068;
Object array4799;
Object localvariable6069;
Object array4800;
Object send43975;
Object assign5347;
Object method5894;
Object methodclosure5894;
Object localvariable6070;
Object array4801;
Object assign5348;
Object method5895;
Object symbol7856;
Object methodclosure5895;
Object localvariable6071;
Object array4802;
Object assign5349;
Object method5896;
Object symbol7857;
Object methodclosure5896;
Object localvariable6072;
Object array4803;
Object localvariable6073;
Object array4804;
Object variable313;
Object array4805;
Object send43976;
Object assign5350;
Object symbol7909;
Object block2771;
Object send43977;
Object block2772;
Object send43978;
Object send43979;
Object block2773;
Object send43980;
Object block2774;
Object send43981;
Object method5897;
Object methodclosure5897;
Object classreference1164;
Object localvariable6074;
Object array4806;
Object send43982;
Object method5898;
Object methodclosure5898;
Object classreference1165;
Object localvariable6075;
Object array4807;
Object assign5351;
Object method5899;
Object symbol7714;
Object methodclosure5899;
Object localvariable6076;
Object array4808;
Object symbol7710;
Object send43983;
Object send43984;
Object method5900;
Object methodclosure5900;
Object localvariable6077;
Object array4809;
Object send43985;
Object send43986;
Object method5901;
Object methodclosure5901;
Object classreference1166;
Object send43987;
Object symbol7910;
Object symbol7712;
Object send43988;
Object send43989;
Object method5902;
Object symbol7711;
Object methodclosure5902;
Object method5903;
Object symbol7713;
Object methodclosure5903;
Object localvariable6078;
Object array4810;
Object assign5352;
Object method5904;
Object symbol7709;
Object methodclosure5904;
Object send43990;
Object string5085;
Object constant8529;
Object send43991;
Object send43992;
Object send43993;
Object symbol7911;
Object send43994;
Object send43995;
Object method5905;
Object methodclosure5905;
Object method5906;
Object methodclosure5906;
Object classreference1167;
Object method5907;
Object symbol7689;
Object methodclosure5907;
Object localvariable6079;
Object array4811;
Object symbol7737;
Object send43996;
Object method5908;
Object symbol7690;
Object methodclosure5908;
Object localvariable6080;
Object array4812;
Object assign5353;
Object method5909;
Object symbol7686;
Object methodclosure5909;
Object method5910;
Object methodclosure5910;
Object string5086;
Object constant8530;
Object method5911;
Object symbol7691;
Object methodclosure5911;
Object method5912;
Object symbol7687;
Object methodclosure5912;
Object localvariable6081;
Object array4813;
Object localvariable6082;
Object array4814;
Object variable314;
Object array4815;
Object symbol7654;
Object send43997;
Object symbol7912;
Object constant8531;
Object send43998;
Object super500;
Object send43999;
Object block2775;
Object send44000;
Object string5087;
Object constant8532;
Object send44001;
Object send44002;
Object symbol7913;
Object smallint2984;
Object constant8533;
Object send44003;
Object send44004;
Object send44005;
Object send44006;
Object send44007;
Object string5088;
Object constant8534;
Object send44008;
Object send44009;
Object assign5354;
Object symbol7738;
Object send44010;
Object symbol7914;
Object send44011;
Object block2776;
Object send44012;
Object method5913;
Object methodclosure5913;
Object send44013;
Object send44014;
Object smallint2985;
Object constant8535;
Object send44015;
Object send44016;
Object send44017;
Object send44018;
Object symbol7664;
Object send44019;
Object method5914;
Object symbol7692;
Object methodclosure5914;
Object send44020;
Object send44021;
Object symbol7915;
Object send44022;
Object assign5355;
Object block2777;
Object send44023;
Object method5915;
Object methodclosure5915;
Object classreference1168;
Object localvariable6083;
Object array4816;
Object assign5356;
Object method5916;
Object symbol7739;
Object methodclosure5916;
Object symbol7916;
Object string5089;
Object constant8536;
Object send44024;
Object string5090;
Object constant8537;
Object send44025;
Object method5917;
Object symbol7733;
Object methodclosure5917;
Object super501;
Object send44026;
Object assign5357;
Object method5918;
Object methodclosure5918;
Object method5919;
Object symbol7740;
Object methodclosure5919;
Object classreference1169;
Object classreference1170;
Object localvariable6084;
Object array4817;
Object send44027;
Object method5920;
Object methodclosure5920;
Object send44028;
Object send44029;
Object send44030;
Object method5921;
Object methodclosure5921;
Object classreference1171;
Object symbol7715;
Object send44031;
Object send44032;
Object method5922;
Object symbol7717;
Object methodclosure5922;
Object method5923;
Object methodclosure5923;
Object send44033;
Object send44034;
Object method5924;
Object methodclosure5924;
Object localvariable6085;
Object array4818;
Object assign5358;
Object method5925;
Object symbol7716;
Object methodclosure5925;
Object send44035;
Object send44036;
Object method5926;
Object methodclosure5926;
Object classreference1172;
Object localvariable6086;
Object array4819;
Object variable315;
Object array4820;
Object symbol7736;
Object super502;
Object send44037;
Object block2778;
Object send44038;
Object symbol7755;
Object send44039;
Object block2779;
Object send44040;
Object method5927;
Object methodclosure5927;
Object super503;
Object send44041;
Object assign5359;
Object method5928;
Object methodclosure5928;
Object localvariable6087;
Object array4821;
Object symbol7917;
Object send44042;
Object assign5360;
Object method5929;
Object symbol7754;
Object methodclosure5929;
Object method5930;
Object symbol7735;
Object methodclosure5930;
Object localvariable6088;
Object array4822;
Object variable316;
Object array4823;
Object send44043;
Object symbol7918;
Object localvariable6089;
Object array4824;
Object send44044;
Object send44045;
Object send44046;
Object send44047;
Object send44048;
Object send44049;
Object send44050;
Object block2780;
Object send44051;
Object block2781;
Object send44052;
Object block2782;
Object send44053;
Object method5931;
Object methodclosure5931;
Object classreference1173;
Object classreference1174;
Object localvariable6090;
Object array4825;
Object string5091;
Object constant8538;
Object send44054;
Object method5932;
Object methodclosure5932;
Object classreference1175;
Object classreference1176;
Object localvariable6091;
Object array4826;
Object localvariable6092;
Object array4827;
Object assign5361;
Object send44055;
Object assign5362;
Object send44056;
Object smallint2986;
Object constant8539;
Object send44057;
Object send44058;
Object smallint2987;
Object constant8540;
Object send44059;
Object send44060;
Object symbol7919;
Object send44061;
Object send44062;
Object string5092;
Object constant8541;
Object send44063;
Object block2783;
Object send44064;
Object method5933;
Object symbol7734;
Object methodclosure5933;
Object method5934;
Object methodclosure5934;
Object localvariable6093;
Object array4828;
Object send44065;
Object send44066;
Object method5935;
Object methodclosure5935;
Object localvariable6094;
Object array4829;
Object send44067;
Object send44068;
Object send44069;
Object method5936;
Object methodclosure5936;
Object send44070;
Object send44071;
Object method5937;
Object methodclosure5937;
Object send44072;
Object send44073;
Object method5938;
Object methodclosure5938;
Object send44074;
Object method5939;
Object methodclosure5939;
Object classreference1177;
Object classreference1178;
Object method5940;
Object symbol7870;
Object methodclosure5940;
Object localvariable6095;
Object array4830;
Object assign5363;
Object method5941;
Object symbol7869;
Object methodclosure5941;
Object classreference1179;
Object send44075;
Object send44076;
Object send44077;
Object method5942;
Object symbol7722;
Object methodclosure5942;
Object localvariable6096;
Object array4831;
Object super504;
Object localvariable6097;
Object array4832;
Object string5093;
Object constant8542;
Object send44078;
Object send44079;
Object send44080;
Object string5094;
Object constant8543;
Object send44081;
Object block2784;
Object send44082;
Object method5943;
Object methodclosure5943;
Object localvariable6098;
Object array4833;
Object assign5364;
Object method5944;
Object methodclosure5944;
Object localvariable6099;
Object array4834;
Object send44083;
Object send44084;
Object send44085;
Object method5945;
Object methodclosure5945;
Object super505;
Object method5946;
Object methodclosure5946;
Object localvariable6100;
Object array4835;
Object send44086;
Object symbol7920;
Object send44087;
Object send44088;
Object method5947;
Object symbol7724;
Object methodclosure5947;
Object localvariable6101;
Object array4836;
Object send44089;
Object symbol7921;
Object send44090;
Object send44091;
Object method5948;
Object symbol7725;
Object methodclosure5948;
Object send44092;
Object send44093;
Object method5949;
Object methodclosure5949;
Object method5950;
Object methodclosure5950;
Object classreference1180;
Object localvariable6102;
Object array4837;
Object assign5365;
Object method5951;
Object symbol7874;
Object methodclosure5951;
Object variable317;
Object array4838;
Object symbol7922;
Object send44094;
Object localvariable6103;
Object array4839;
Object send44095;
Object symbol7923;
Object send44096;
Object block2785;
Object send44097;
Object block2786;
Object send44098;
Object block2787;
Object send44099;
Object block2788;
Object send44100;
Object method5952;
Object methodclosure5952;
Object classreference1181;
Object localvariable6104;
Object array4840;
Object super506;
Object string5095;
Object constant8544;
Object send44101;
Object symbol7748;
Object send44102;
Object send44103;
Object string5096;
Object constant8545;
Object send44104;
Object method5953;
Object methodclosure5953;
Object localvariable6105;
Object array4841;
Object assign5366;
Object method5954;
Object symbol7750;
Object methodclosure5954;
Object method5955;
Object symbol7746;
Object methodclosure5955;
Object localvariable6106;
Object array4842;
Object assign5367;
Object method5956;
Object symbol7751;
Object methodclosure5956;
Object localvariable6107;
Object array4843;
Object assign5368;
Object method5957;
Object symbol7747;
Object methodclosure5957;
Object localvariable6108;
Object array4844;
Object assign5369;
Object method5958;
Object symbol7743;
Object methodclosure5958;
Object symbol7745;
Object send44105;
Object send44106;
Object method5959;
Object methodclosure5959;
Object localvariable6109;
Object array4845;
Object smallint2988;
Object constant8546;
Object constant8547;
Object send44107;
Object smallint2989;
Object constant8548;
Object constant8549;
Object send44108;
Object smallint2990;
Object constant8550;
Object constant8551;
Object send44109;
Object smallint2991;
Object constant8552;
Object symbol7749;
Object constant8553;
Object send44110;
Object send44111;
Object block2789;
Object smallint2992;
Object constant8554;
Object send44112;
Object send44113;
Object method5960;
Object symbol7744;
Object methodclosure5960;
Object method5961;
Object methodclosure5961;
Object method5962;
Object methodclosure5962;
Object method5963;
Object methodclosure5963;
Object classreference1182;
Object method5964;
Object methodclosure5964;
Object send44114;
Object symbol7924;
Object localvariable6110;
Object array4846;
Object send44115;
Object symbol7658;
Object send44116;
Object block2790;
Object send44117;
Object block2791;
Object send44118;
Object method5965;
Object methodclosure5965;
Object localvariable6111;
Object array4847;
Object assign5370;
Object method5966;
Object methodclosure5966;
Object super507;
Object send44119;
Object send44120;
Object send44121;
Object send44122;
Object send44123;
Object send44124;
Object method5967;
Object methodclosure5967;
Object localvariable6112;
Object array4848;
Object assign5371;
Object method5968;
Object methodclosure5968;
Object method5969;
Object methodclosure5969;
Object method5970;
Object methodclosure5970;
Object localvariable6113;
Object array4849;
Object assign5372;
Object method5971;
Object methodclosure5971;
Object classreference1183;
Object send44125;
Object symbol7742;
Object send44126;
Object method5972;
Object methodclosure5972;
Object classreference1184;
Object localvariable6114;
Object array4850;
Object assign5373;
Object method5973;
Object symbol7693;
Object methodclosure5973;
Object method5974;
Object symbol7694;
Object methodclosure5974;
Object send44127;
Object send44128;
Object method5975;
Object methodclosure5975;
Object classreference1185;
Object method5976;
Object symbol7759;
Object methodclosure5976;
Object localvariable6115;
Object array4851;
Object assign5374;
Object method5977;
Object symbol7756;
Object methodclosure5977;
Object method5978;
Object symbol7757;
Object methodclosure5978;
Object localvariable6116;
Object array4852;
Object assign5375;
Object method5979;
Object symbol7758;
Object methodclosure5979;
Object classreference1186;
Object classreference1187;
Object method5980;
Object symbol7730;
Object methodclosure5980;
Object method5981;
Object symbol7727;
Object methodclosure5981;
Object localvariable6117;
Object array4853;
Object assign5376;
Object method5982;
Object symbol7728;
Object methodclosure5982;
Object localvariable6118;
Object array4854;
Object assign5377;
Object method5983;
Object symbol7729;
Object methodclosure5983;
Object classreference1188;
Object symbol7699;
Object symbol7753;
Object send44129;
Object send44130;
Object method5984;
Object methodclosure5984;
Object localvariable6119;
Object array4855;
Object assign5378;
Object method5985;
Object symbol7752;
Object methodclosure5985;
Object method5986;
Object methodclosure5986;
Object send44131;
Object send44132;
Object method5987;
Object methodclosure5987;
Object classreference1189;
Object method5988;
Object methodclosure5988;
Object localvariable6120;
Object array4856;
Object assign5379;
Object method5989;
Object methodclosure5989;
Object super508;
Object method5990;
Object methodclosure5990;
Object localvariable6121;
Object array4857;
Object send44133;
Object send44134;
Object send44135;
Object send44136;
Object method5991;
Object symbol7663;
Object methodclosure5991;
Object localvariable6122;
Object array4858;
Object variable318;
Object array4859;
Object send44137;
Object send44138;
Object send44139;
Object block2792;
Object send44140;
Object send44141;
Object assign5380;
Object smallint2993;
Object constant8555;
Object smallint2994;
Object constant8556;
Object send44142;
Object symbol7669;
Object send44143;
Object send44144;
Object block2793;
Object send44145;
Object method5992;
Object methodclosure5992;
Object send44146;
Object smallint2995;
Object constant8557;
Object send44147;
Object method5993;
Object methodclosure5993;
Object classreference1190;
Object symbol7925;
Object send44148;
Object send44149;
Object super509;
Object send44150;
Object send44151;
Object send44152;
Object send44153;
Object method5994;
Object methodclosure5994;
Object method5995;
Object methodclosure5995;
Object localvariable6123;
Object array4860;
Object assign5381;
Object method5996;
Object methodclosure5996;
Object localvariable6124;
Object array4861;
Object send44154;
Object assign5382;
Object method5997;
Object methodclosure5997;
Object classreference1191;
Object method5998;
Object methodclosure5998;
Object localvariable6125;
Object array4862;
Object assign5383;
Object method5999;
Object methodclosure5999;
Object method6000;
Object methodclosure6000;
Object classreference1192;
Object send44155;
Object send44156;
Object method6001;
Object methodclosure6001;
Object classreference1193;
Object send44157;
Object symbol7718;
Object symbol7719;
Object send44158;
Object send44159;
Object method6002;
Object symbol7720;
Object methodclosure6002;
Object localvariable6126;
Object array4863;
Object assign5384;
Object method6003;
Object methodclosure6003;
Object method6004;
Object methodclosure6004;
Object classreference1194;
Object method6005;
Object methodclosure6005;
Object symbol7655;
Object send44160;
Object localvariable6127;
Object array4864;
Object send44161;
Object send44162;
Object block2794;
Object send44163;
Object block2795;
Object send44164;
Object method6006;
Object methodclosure6006;
Object localvariable6128;
Object array4865;
Object assign5385;
Object method6007;
Object methodclosure6007;
Object super510;
Object send44165;
Object assign5386;
Object method6008;
Object methodclosure6008;
Object method6009;
Object methodclosure6009;
Object localvariable6129;
Object array4866;
Object assign5387;
Object method6010;
Object symbol7741;
Object methodclosure6010;
Object classreference1195;
Object localvariable6130;
Object array4867;
Object assign5388;
Object method6011;
Object symbol7860;
Object methodclosure6011;
Object method6012;
Object symbol7861;
Object methodclosure6012;
Object send44166;
Object method6013;
Object symbol7670;
Object methodclosure6013;
Object localvariable6131;
Object array4868;
Object variable319;
Object array4869;
Object send44167;
Object assign5389;
Object smallint2996;
Object constant8558;
Object send44168;
Object symbol7659;
Object smallint2997;
Object constant8559;
Object send44169;
Object block2796;
Object send44170;
Object smallint2998;
Object constant8560;
Object send44171;
Object smallint2999;
Object constant8561;
Object send44172;
Object block2797;
Object send44173;
Object block2798;
Object send44174;
Object smallint3000;
Object constant8562;
Object send44175;
Object smallint3001;
Object constant8563;
Object send44176;
Object block2799;
Object send44177;
Object block2800;
Object send44178;
Object smallint3002;
Object constant8564;
Object smallint3003;
Object constant8565;
Object send44179;
Object send44180;
Object send44181;
Object send44182;
Object send44183;
Object block2801;
Object send44184;
Object block2802;
Object send44185;
Object block2803;
Object send44186;
Object method6014;
Object methodclosure6014;
Object classreference1196;
Object send44187;
Object send44188;
Object send44189;
Object method6015;
Object symbol7862;
Object methodclosure6015;
Object classreference1197;
Object method6016;
Object methodclosure6016;
Object localvariable6132;
Object array4870;
Object assign5390;
Object method6017;
Object methodclosure6017;
Object localvariable6133;
Object array4871;
Object send44190;
Object send44191;
Object send44192;
Object send44193;
Object super511;
Object method6018;
Object methodclosure6018;
Object classreference1198;
Object method6019;
Object methodclosure6019;
Object localvariable6134;
Object array4872;
Object assign5391;
Object method6020;
Object methodclosure6020;
Object classreference1199;
Object symbol7926;
Object string5097;
Object constant8566;
Object string5098;
Object constant8567;
Object send44194;
Object send44195;
Object send44196;
Object send44197;
Object localvariable6135;
Object array4873;
Object send44198;
Object send44199;
Object block2804;
Object send44200;
Object method6021;
Object symbol7769;
Object methodclosure6021;
Object string5099;
Object constant8568;
Object send44201;
Object send44202;
Object method6022;
Object symbol7797;
Object methodclosure6022;
Object symbol7764;
Object send44203;
Object symbol7927;
Object constant8569;
Object string5100;
Object constant8570;
Object symbol7928;
Object send44204;
Object symbol7929;
Object send44205;
Object send44206;
Object symbol7930;
Object send44207;
Object send44208;
Object localvariable6136;
Object array4874;
Object smallint3004;
Object constant8571;
Object send44209;
Object localvariable6137;
Object array4875;
Object send44210;
Object send44211;
Object send44212;
Object symbol7765;
Object smallint3005;
Object constant8572;
Object send44213;
Object send44214;
Object send44215;
Object send44216;
Object block2805;
Object send44217;
Object send44218;
Object send44219;
Object block2806;
Object send44220;
Object send44221;
Object symbol7763;
Object send44222;
Object send44223;
Object method6023;
Object symbol7762;
Object methodclosure6023;
Object localvariable6138;
Object array4876;
Object assign5392;
Object method6024;
Object symbol7790;
Object methodclosure6024;
Object send44224;
Object string5101;
Object constant8573;
Object send44225;
Object send44226;
Object send44227;
Object method6025;
Object symbol7807;
Object methodclosure6025;
Object string5102;
Object constant8574;
Object symbol7931;
Object send44228;
Object method6026;
Object symbol7779;
Object methodclosure6026;
Object symbol7932;
Object string5103;
Object constant8575;
Object string5104;
Object constant8576;
Object send44229;
Object send44230;
Object symbol7933;
Object send44231;
Object symbol7934;
Object send44232;
Object send44233;
Object send44234;
Object string5105;
Object constant8577;
Object send44235;
Object send44236;
Object send44237;
Object send44238;
Object method6027;
Object symbol7800;
Object methodclosure6027;
Object string5106;
Object constant8578;
Object send44239;
Object localvariable6139;
Object array4877;
Object send44240;
Object send44241;
Object block2807;
Object send44242;
Object method6028;
Object symbol7772;
Object methodclosure6028;
Object string5107;
Object constant8579;
Object symbol7935;
Object send44243;
Object send44244;
Object send44245;
Object symbol7936;
Object send44246;
Object send44247;
Object send44248;
Object send44249;
Object send44250;
Object send44251;
Object send44252;
Object send44253;
Object localvariable6140;
Object array4878;
Object localvariable6141;
Object array4879;
Object send44254;
Object send44255;
Object smallint3006;
Object constant8580;
Object send44256;
Object send44257;
Object block2808;
Object send44258;
Object send44259;
Object smallint3007;
Object constant8581;
Object send44260;
Object send44261;
Object smallint3008;
Object constant8582;
Object send44262;
Object send44263;
Object send44264;
Object block2809;
Object send44265;
Object send44266;
Object block2810;
Object send44267;
Object send44268;
Object send44269;
Object method6029;
Object symbol7829;
Object methodclosure6029;
Object string5108;
Object constant8583;
Object string5109;
Object constant8584;
Object send44270;
Object send44271;
Object symbol7937;
Object send44272;
Object send44273;
Object localvariable6142;
Object array4880;
Object send44274;
Object send44275;
Object block2811;
Object send44276;
Object method6030;
Object symbol7789;
Object methodclosure6030;
Object localvariable6143;
Object array4881;
Object string5110;
Object constant8585;
Object send44277;
Object send44278;
Object symbol7938;
Object send44279;
Object symbol7939;
Object send44280;
Object send44281;
Object send44282;
Object symbol7940;
Object send44283;
Object send44284;
Object send44285;
Object send44286;
Object localvariable6144;
Object array4882;
Object smallint3009;
Object constant8586;
Object send44287;
Object symbol7941;
Object send44288;
Object send44289;
Object localvariable6145;
Object array4883;
Object send44290;
Object send44291;
Object send44292;
Object smallint3010;
Object constant8587;
Object send44293;
Object send44294;
Object block2812;
Object send44295;
Object send44296;
Object block2813;
Object send44297;
Object block2814;
Object symbol7942;
Object send44298;
Object symbol7943;
Object send44299;
Object send44300;
Object send44301;
Object method6031;
Object symbol7810;
Object methodclosure6031;
Object constant8588;
Object string5111;
Object constant8589;
Object send44302;
Object block2815;
Object send44303;
Object method6032;
Object symbol7822;
Object methodclosure6032;
Object symbol7944;
Object send44304;
Object symbol7945;
Object send44305;
Object symbol7946;
Object send44306;
Object symbol7947;
Object send44307;
Object symbol7948;
Object send44308;
Object send44309;
Object send44310;
Object send44311;
Object send44312;
Object symbol7949;
Object send44313;
Object send44314;
Object method6033;
Object symbol7782;
Object methodclosure6033;
Object string5112;
Object constant8590;
Object symbol7950;
Object send44315;
Object method6034;
Object symbol7766;
Object methodclosure6034;
Object string5113;
Object constant8591;
Object symbol7951;
Object send44316;
Object string5114;
Object constant8592;
Object send44317;
Object send44318;
Object symbol7952;
Object send44319;
Object send44320;
Object localvariable6146;
Object array4884;
Object send44321;
Object send44322;
Object send44323;
Object block2816;
Object send44324;
Object method6035;
Object symbol7794;
Object methodclosure6035;
Object send44325;
Object send44326;
Object method6036;
Object symbol7804;
Object methodclosure6036;
Object string5115;
Object constant8593;
Object symbol7953;
Object send44327;
Object symbol7954;
Object send44328;
Object send44329;
Object symbol7955;
Object send44330;
Object send44331;
Object send44332;
Object method6037;
Object symbol7832;
Object methodclosure6037;
Object string5116;
Object constant8594;
Object symbol7956;
Object send44333;
Object localvariable6147;
Object array4885;
Object send44334;
Object send44335;
Object block2817;
Object send44336;
Object method6038;
Object symbol7776;
Object methodclosure6038;
Object string5117;
Object constant8595;
Object send44337;
Object localvariable6148;
Object array4886;
Object send44338;
Object send44339;
Object block2818;
Object send44340;
Object method6039;
Object symbol7814;
Object methodclosure6039;
Object string5118;
Object constant8596;
Object symbol7957;
Object send44341;
Object send44342;
Object localvariable6149;
Object array4887;
Object string5119;
Object constant8597;
Object localvariable6150;
Object localvariable6151;
Object array4888;
Object send44343;
Object string5120;
Object constant8598;
Object send44344;
Object block2819;
Object send44345;
Object block2820;
Object send44346;
Object method6040;
Object symbol7826;
Object methodclosure6040;
Object symbol7958;
Object send44347;
Object symbol7761;
Object send44348;
Object send44349;
Object send44350;
Object method6041;
Object symbol7786;
Object methodclosure6041;
Object string5121;
Object constant8599;
Object string5122;
Object constant8600;
Object send44351;
Object send44352;
Object symbol7959;
Object send44353;
Object send44354;
Object localvariable6152;
Object array4889;
Object send44355;
Object send44356;
Object send44357;
Object block2821;
Object send44358;
Object method6042;
Object symbol7798;
Object methodclosure6042;
Object send44359;
Object send44360;
Object send44361;
Object send44362;
Object send44363;
Object method6043;
Object methodclosure6043;
Object string5123;
Object constant8601;
Object string5124;
Object constant8602;
Object send44364;
Object send44365;
Object symbol7960;
Object send44366;
Object symbol7961;
Object send44367;
Object send44368;
Object send44369;
Object send44370;
Object send44371;
Object send44372;
Object send44373;
Object send44374;
Object send44375;
Object string5125;
Object constant8603;
Object send44376;
Object send44377;
Object send44378;
Object localvariable6153;
Object array4890;
Object localvariable6154;
Object array4891;
Object send44379;
Object send44380;
Object block2822;
Object send44381;
Object send44382;
Object smallint3011;
Object constant8604;
Object send44383;
Object send44384;
Object block2823;
Object send44385;
Object send44386;
Object smallint3012;
Object constant8605;
Object send44387;
Object send44388;
Object block2824;
Object send44389;
Object send44390;
Object block2825;
Object send44391;
Object method6044;
Object symbol7791;
Object methodclosure6044;
Object string5126;
Object constant8606;
Object string5127;
Object constant8607;
Object send44392;
Object send44393;
Object send44394;
Object send44395;
Object send44396;
Object localvariable6155;
Object array4892;
Object symbol7962;
Object localvariable6156;
Object array4893;
Object symbol7770;
Object send44397;
Object block2826;
Object send44398;
Object block2827;
Object send44399;
Object method6045;
Object symbol7808;
Object methodclosure6045;
Object string5128;
Object constant8608;
Object send44400;
Object localvariable6157;
Object array4894;
Object send44401;
Object send44402;
Object block2828;
Object send44403;
Object method6046;
Object symbol7801;
Object methodclosure6046;
Object string5129;
Object constant8609;
Object string5130;
Object constant8610;
Object send44404;
Object send44405;
Object symbol7963;
Object send44406;
Object send44407;
Object send44408;
Object send44409;
Object send44410;
Object string5131;
Object constant8611;
Object send44411;
Object send44412;
Object send44413;
Object localvariable6158;
Object array4895;
Object send44414;
Object localvariable6159;
Object array4896;
Object smallint3013;
Object constant8612;
Object send44415;
Object send44416;
Object send44417;
Object block2829;
Object send44418;
Object send44419;
Object send44420;
Object block2830;
Object send44421;
Object method6047;
Object symbol7818;
Object methodclosure6047;
Object string5132;
Object constant8613;
Object symbol7964;
Object send44422;
Object symbol7965;
Object send44423;
Object symbol7966;
Object send44424;
Object send44425;
Object send44426;
Object send44427;
Object localvariable6160;
Object array4897;
Object symbol7967;
Object send44428;
Object send44429;
Object localvariable6161;
Object localvariable6162;
Object array4898;
Object send44430;
Object block2831;
Object send44431;
Object block2832;
Object send44432;
Object method6048;
Object symbol7811;
Object methodclosure6048;
Object constant8614;
Object string5133;
Object constant8615;
Object send44433;
Object block2833;
Object send44434;
Object method6049;
Object symbol7823;
Object methodclosure6049;
Object send44435;
Object send44436;
Object send44437;
Object send44438;
Object method6050;
Object symbol7783;
Object methodclosure6050;
Object string5134;
Object constant8616;
Object send44439;
Object method6051;
Object symbol7767;
Object methodclosure6051;
Object string5135;
Object constant8617;
Object send44440;
Object send44441;
Object send44442;
Object send44443;
Object send44444;
Object send44445;
Object send44446;
Object method6052;
Object symbol7795;
Object methodclosure6052;
Object localvariable6163;
Object array4899;
Object localvariable6164;
Object array4900;
Object send44447;
Object string5136;
Object constant8618;
Object send44448;
Object send44449;
Object send44450;
Object send44451;
Object assign5393;
Object send44452;
Object symbol7968;
Object send44453;
Object block2834;
Object super512;
Object block2835;
Object send44454;
Object block2836;
Object send44455;
Object method6053;
Object methodclosure6053;
Object send44456;
Object send44457;
Object method6054;
Object symbol7760;
Object methodclosure6054;
Object string5137;
Object constant8619;
Object send44458;
Object send44459;
Object send44460;
Object send44461;
Object localvariable6165;
Object array4901;
Object localvariable6166;
Object array4902;
Object localvariable6167;
Object array4903;
Object send44462;
Object send44463;
Object block2837;
Object send44464;
Object send44465;
Object send44466;
Object constant8620;
Object send44467;
Object send44468;
Object send44469;
Object constant8621;
Object send44470;
Object send44471;
Object block2838;
Object send44472;
Object send44473;
Object block2839;
Object send44474;
Object method6055;
Object symbol7805;
Object methodclosure6055;
Object string5138;
Object constant8622;
Object send44475;
Object send44476;
Object localvariable6168;
Object array4904;
Object localvariable6169;
Object array4905;
Object string5139;
Object constant8623;
Object localvariable6170;
Object localvariable6171;
Object array4906;
Object send44477;
Object block2840;
Object send44478;
Object send44479;
Object string5140;
Object constant8624;
Object send44480;
Object block2841;
Object send44481;
Object send44482;
Object block2842;
Object send44483;
Object method6056;
Object symbol7833;
Object methodclosure6056;
Object string5141;
Object constant8625;
Object send44484;
Object send44485;
Object send44486;
Object localvariable6172;
Object array4907;
Object localvariable6173;
Object array4908;
Object send44487;
Object send44488;
Object send44489;
Object smallint3014;
Object constant8626;
Object send44490;
Object send44491;
Object block2843;
Object send44492;
Object send44493;
Object block2844;
Object send44494;
Object method6057;
Object symbol7777;
Object methodclosure6057;
Object localvariable6174;
Object array4909;
Object variable320;
Object array4910;
Object string5142;
Object constant8627;
Object send44495;
Object send44496;
Object send44497;
Object block2845;
Object send44498;
Object string5143;
Object constant8628;
Object send44499;
Object send44500;
Object send44501;
Object block2846;
Object send44502;
Object send44503;
Object send44504;
Object block2847;
Object send44505;
Object method6058;
Object methodclosure6058;
Object localvariable6175;
Object localvariable6176;
Object array4911;
Object string5144;
Object constant8629;
Object send44506;
Object send44507;
Object assign5394;
Object string5145;
Object constant8630;
Object send44508;
Object send44509;
Object send44510;
Object send44511;
Object send44512;
Object localvariable6177;
Object array4912;
Object symbol7969;
Object send44513;
Object assign5395;
Object string5146;
Object constant8631;
Object localvariable6178;
Object localvariable6179;
Object array4913;
Object send44514;
Object block2848;
Object send44515;
Object assign5396;
Object localvariable6180;
Object localvariable6181;
Object array4914;
Object string5147;
Object constant8632;
Object send44516;
Object string5148;
Object constant8633;
Object localvariable6182;
Object localvariable6183;
Object array4915;
Object send44517;
Object block2849;
Object send44518;
Object send44519;
Object block2850;
Object send44520;
Object block2851;
Object send44521;
Object method6059;
Object symbol7815;
Object methodclosure6059;
Object string5149;
Object constant8634;
Object send44522;
Object localvariable6184;
Object array4916;
Object send44523;
Object block2852;
Object send44524;
Object method6060;
Object symbol7827;
Object methodclosure6060;
Object send44525;
Object method6061;
Object symbol7787;
Object methodclosure6061;
Object send44526;
Object string5150;
Object constant8635;
Object send44527;
Object send44528;
Object send44529;
Object send44530;
Object method6062;
Object symbol7799;
Object methodclosure6062;
Object localvariable6185;
Object array4917;
Object string5151;
Object constant8636;
Object send44531;
Object assign5397;
Object send44532;
Object send44533;
Object send44534;
Object send44535;
Object method6063;
Object symbol7820;
Object methodclosure6063;
Object method6064;
Object symbol7780;
Object methodclosure6064;
Object constant8637;
Object string5152;
Object constant8638;
Object send44536;
Object block2853;
Object send44537;
Object method6065;
Object methodclosure6065;
Object string5153;
Object constant8639;
Object send44538;
Object symbol7970;
Object send44539;
Object send44540;
Object localvariable6186;
Object array4918;
Object localvariable6187;
Object array4919;
Object send44541;
Object send44542;
Object send44543;
Object smallint3015;
Object constant8640;
Object send44544;
Object send44545;
Object send44546;
Object block2854;
Object send44547;
Object send44548;
Object block2855;
Object send44549;
Object method6066;
Object symbol7792;
Object methodclosure6066;
Object string5154;
Object constant8641;
Object send44550;
Object send44551;
Object send44552;
Object send44553;
Object localvariable6188;
Object array4920;
Object localvariable6189;
Object array4921;
Object constant8642;
Object send44554;
Object send44555;
Object localvariable6190;
Object array4922;
Object constant8643;
Object send44556;
Object send44557;
Object constant8644;
Object send44558;
Object string5155;
Object constant8645;
Object send44559;
Object string5156;
Object constant8646;
Object send44560;
Object send44561;
Object send44562;
Object block2856;
Object send44563;
Object send44564;
Object send44565;
Object constant8647;
Object send44566;
Object send44567;
Object block2857;
Object send44568;
Object send44569;
Object block2858;
Object send44570;
Object method6067;
Object symbol7809;
Object methodclosure6067;
Object send44571;
Object symbol7971;
Object send44572;
Object send44573;
Object send44574;
Object send44575;
Object symbol7972;
Object send44576;
Object send44577;
Object method6068;
Object symbol7802;
Object methodclosure6068;
Object string5157;
Object constant8648;
Object send44578;
Object send44579;
Object send44580;
Object send44581;
Object send44582;
Object send44583;
Object localvariable6191;
Object array4923;
Object send44584;
Object send44585;
Object localvariable6192;
Object localvariable6193;
Object array4924;
Object send44586;
Object block2859;
Object send44587;
Object block2860;
Object send44588;
Object method6069;
Object symbol7830;
Object methodclosure6069;
Object string5158;
Object constant8649;
Object send44589;
Object localvariable6194;
Object array4925;
Object send44590;
Object send44591;
Object block2861;
Object send44592;
Object method6070;
Object symbol7774;
Object methodclosure6070;
Object string5159;
Object constant8650;
Object send44593;
Object send44594;
Object send44595;
Object localvariable6195;
Object array4926;
Object smallint3016;
Object constant8651;
Object send44596;
Object send44597;
Object send44598;
Object block2862;
Object send44599;
Object method6071;
Object symbol7819;
Object methodclosure6071;
Object string5160;
Object constant8652;
Object send44600;
Object method6072;
Object symbol7812;
Object methodclosure6072;
Object send44601;
Object send44602;
Object send44603;
Object method6073;
Object symbol7824;
Object methodclosure6073;
Object string5161;
Object constant8653;
Object send44604;
Object send44605;
Object send44606;
Object send44607;
Object string5162;
Object constant8654;
Object send44608;
Object send44609;
Object send44610;
Object method6074;
Object symbol7784;
Object methodclosure6074;
Object symbol7973;
Object send44611;
Object symbol7974;
Object send44612;
Object symbol7975;
Object send44613;
Object symbol7976;
Object send44614;
Object send44615;
Object send44616;
Object send44617;
Object symbol7977;
Object send44618;
Object send44619;
Object method6075;
Object symbol7768;
Object methodclosure6075;
Object localvariable6196;
Object array4927;
Object string5163;
Object constant8655;
Object send44620;
Object send44621;
Object send44622;
Object send44623;
Object localvariable6197;
Object array4928;
Object send44624;
Object assign5398;
Object smallint3017;
Object constant8656;
Object send44625;
Object localvariable6198;
Object array4929;
Object localvariable6199;
Object array4930;
Object send44626;
Object send44627;
Object block2863;
Object send44628;
Object send44629;
Object assign5399;
Object block2864;
Object send44630;
Object block2865;
Object send44631;
Object method6076;
Object symbol7796;
Object methodclosure6076;
Object string5164;
Object constant8657;
Object send44632;
Object string5165;
Object constant8658;
Object send44633;
Object send44634;
Object method6077;
Object methodclosure6077;
Object constant8659;
Object string5166;
Object constant8660;
Object send44635;
Object block2866;
Object send44636;
Object method6078;
Object symbol7806;
Object methodclosure6078;
Object string5167;
Object constant8661;
Object symbol7978;
Object send44637;
Object string5168;
Object constant8662;
Object send44638;
Object send44639;
Object send44640;
Object send44641;
Object string5169;
Object constant8663;
Object send44642;
Object localvariable6200;
Object array4931;
Object symbol7979;
Object send44643;
Object send44644;
Object block2867;
Object send44645;
Object send44646;
Object localvariable6201;
Object localvariable6202;
Object array4932;
Object send44647;
Object block2868;
Object send44648;
Object send44649;
Object block2869;
Object send44650;
Object block2870;
Object send44651;
Object method6079;
Object symbol7778;
Object methodclosure6079;
Object symbol7980;
Object send44652;
Object send44653;
Object send44654;
Object method6080;
Object symbol7816;
Object methodclosure6080;
Object string5170;
Object constant8664;
Object symbol7981;
Object send44655;
Object symbol7982;
Object send44656;
Object send44657;
Object send44658;
Object send44659;
Object send44660;
Object method6081;
Object symbol7828;
Object methodclosure6081;
Object localvariable6203;
Object array4933;
Object string5171;
Object constant8665;
Object send44661;
Object send44662;
Object send44663;
Object send44664;
Object localvariable6204;
Object array4934;
Object send44665;
Object assign5400;
Object localvariable6205;
Object array4935;
Object send44666;
Object send44667;
Object send44668;
Object send44669;
Object smallint3018;
Object constant8666;
Object send44670;
Object send44671;
Object send44672;
Object block2871;
Object send44673;
Object send44674;
Object send44675;
Object send44676;
Object block2872;
Object send44677;
Object method6082;
Object symbol7788;
Object methodclosure6082;
Object send44678;
Object string5172;
Object constant8667;
Object send44679;
Object send44680;
Object send44681;
Object method6083;
Object symbol7821;
Object methodclosure6083;
Object string5173;
Object constant8668;
Object symbol7983;
Object send44682;
Object send44683;
Object send44684;
Object send44685;
Object send44686;
Object send44687;
Object send44688;
Object send44689;
Object method6084;
Object symbol7781;
Object methodclosure6084;
Object localvariable6206;
Object array4936;
Object variable321;
Object array4937;
Object send44690;
Object send44691;
Object block2873;
Object send44692;
Object send44693;
Object block2874;
Object send44694;
Object method6085;
Object methodclosure6085;
Object localvariable6207;
Object localvariable6208;
Object array4938;
Object send44695;
Object send44696;
Object send44697;
Object constant8669;
Object string5174;
Object constant8670;
Object symbol7984;
Object send44698;
Object send44699;
Object send44700;
Object send44701;
Object send44702;
Object send44703;
Object send44704;
Object localvariable6209;
Object array4939;
Object send44705;
Object assign5401;
Object smallint3019;
Object constant8671;
Object send44706;
Object assign5402;
Object symbol7985;
Object send44707;
Object localvariable6210;
Object array4940;
Object localvariable6211;
Object array4941;
Object send44708;
Object send44709;
Object block2875;
Object send44710;
Object send44711;
Object assign5403;
Object block2876;
Object send44712;
Object block2877;
Object send44713;
Object send44714;
Object send44715;
Object send44716;
Object send44717;
Object constant8672;
Object send44718;
Object method6086;
Object symbol7793;
Object methodclosure6086;
Object string5175;
Object constant8673;
Object send44719;
Object localvariable6212;
Object array4942;
Object send44720;
Object block2878;
Object send44721;
Object method6087;
Object symbol7803;
Object methodclosure6087;
Object string5176;
Object constant8674;
Object send44722;
Object send44723;
Object symbol7986;
Object send44724;
Object send44725;
Object method6088;
Object symbol7831;
Object methodclosure6088;
Object localvariable6213;
Object array4943;
Object string5177;
Object constant8675;
Object send44726;
Object assign5404;
Object string5178;
Object constant8676;
Object send44727;
Object send44728;
Object send44729;
Object send44730;
Object symbol7987;
Object send44731;
Object send44732;
Object send44733;
Object send44734;
Object send44735;
Object send44736;
Object send44737;
Object send44738;
Object send44739;
Object send44740;
Object send44741;
Object string5179;
Object constant8677;
Object send44742;
Object send44743;
Object send44744;
Object localvariable6214;
Object array4944;
Object send44745;
Object send44746;
Object block2879;
Object send44747;
Object method6089;
Object symbol7775;
Object methodclosure6089;
Object super513;
Object send44748;
Object assign5405;
Object send44749;
Object assign5406;
Object smallint3020;
Object constant8678;
Object assign5407;
Object method6090;
Object methodclosure6090;
Object string5180;
Object constant8679;
Object send44750;
Object send44751;
Object send44752;
Object send44753;
Object send44754;
Object send44755;
Object send44756;
Object send44757;
Object send44758;
Object method6091;
Object symbol7813;
Object methodclosure6091;
Object send44759;
Object send44760;
Object method6092;
Object symbol7825;
Object methodclosure6092;
Object string5181;
Object constant8680;
Object send44761;
Object send44762;
Object symbol7988;
Object send44763;
Object send44764;
Object send44765;
Object send44766;
Object send44767;
Object localvariable6215;
Object array4945;
Object smallint3021;
Object constant8681;
Object send44768;
Object localvariable6216;
Object array4946;
Object send44769;
Object send44770;
Object block2880;
Object send44771;
Object send44772;
Object block2881;
Object send44773;
Object method6093;
Object symbol7785;
Object methodclosure6093;
Object classreference1200;
Object localvariable6217;
Object localvariable6218;
Object localvariable6219;
Object array4947;
Object send44774;
Object assign5408;
Object string5182;
Object constant8682;
Object send44775;
Object assign5409;
Object send44776;
Object assign5410;
Object send44777;
Object send44778;
Object send44779;
Object send44780;
Object send44781;
Object send44782;
Object string5183;
Object constant8683;
Object send44783;
Object send44784;
Object send44785;
Object send44786;
Object send44787;
Object send44788;
Object send44789;
Object send44790;
Object string5184;
Object constant8684;
Object send44791;
Object send44792;
Object send44793;
Object send44794;
Object send44795;
Object send44796;
Object send44797;
Object send44798;
Object string5185;
Object constant8685;
Object send44799;
Object send44800;
Object send44801;
Object smallint3022;
Object constant8686;
Object send44802;
Object string5186;
Object constant8687;
Object send44803;
Object assign5411;
Object send44804;
Object assign5412;
Object send44805;
Object send44806;
Object send44807;
Object send44808;
Object send44809;
Object send44810;
Object string5187;
Object constant8688;
Object send44811;
Object send44812;
Object send44813;
Object send44814;
Object send44815;
Object send44816;
Object send44817;
Object send44818;
Object string5188;
Object constant8689;
Object send44819;
Object send44820;
Object assign5413;
Object send44821;
Object send44822;
Object send44823;
Object send44824;
Object send44825;
Object send44826;
Object string5189;
Object constant8690;
Object send44827;
Object send44828;
Object send44829;
Object send44830;
Object send44831;
Object send44832;
Object send44833;
Object send44834;
Object string5190;
Object constant8691;
Object send44835;
Object send44836;
Object send44837;
Object send44838;
Object send44839;
Object send44840;
Object send44841;
Object send44842;
Object string5191;
Object constant8692;
Object send44843;
Object send44844;
Object send44845;
Object smallint3023;
Object constant8693;
Object send44846;
Object method6094;
Object symbol7581;
Object methodclosure6094;
Object localvariable6220;
Object localvariable6221;
Object localvariable6222;
Object array4948;
Object send44847;
Object assign5414;
Object string5192;
Object constant8694;
Object send44848;
Object assign5415;
Object send44849;
Object send44850;
Object symbol7989;
Object send44851;
Object send44852;
Object send44853;
Object send44854;
Object smallint3024;
Object constant8695;
Object send44855;
Object string5193;
Object constant8696;
Object send44856;
Object assign5416;
Object send44857;
Object assign5417;
Object send44858;
Object send44859;
Object send44860;
Object send44861;
Object send44862;
Object character26;
Object constant8697;
Object send44863;
Object send44864;
Object send44865;
Object smallint3025;
Object constant8698;
Object send44866;
Object method6095;
Object symbol7626;
Object methodclosure6095;
Object localvariable6223;
Object localvariable6224;
Object array4949;
Object send44867;
Object assign5418;
Object string5194;
Object constant8699;
Object send44868;
Object assign5419;
Object send44869;
Object send44870;
Object string5195;
Object constant8700;
Object send44871;
Object send44872;
Object send44873;
Object smallint3026;
Object constant8701;
Object send44874;
Object string5196;
Object constant8702;
Object send44875;
Object assign5420;
Object send44876;
Object send44877;
Object string5197;
Object constant8703;
Object send44878;
Object send44879;
Object send44880;
Object smallint3027;
Object constant8704;
Object send44881;
Object string5198;
Object constant8705;
Object send44882;
Object assign5421;
Object send44883;
Object send44884;
Object send44885;
Object send44886;
Object send44887;
Object send44888;
Object smallint3028;
Object constant8706;
Object send44889;
Object method6096;
Object symbol7578;
Object methodclosure6096;
Object localvariable6225;
Object localvariable6226;
Object array4950;
Object send44890;
Object assign5422;
Object string5199;
Object constant8707;
Object send44891;
Object assign5423;
Object send44892;
Object send44893;
Object send44894;
Object send44895;
Object send44896;
Object send44897;
Object smallint3029;
Object constant8708;
Object send44898;
Object string5200;
Object constant8709;
Object send44899;
Object assign5424;
Object send44900;
Object send44901;
Object string5201;
Object constant8710;
Object send44902;
Object send44903;
Object send44904;
Object smallint3030;
Object constant8711;
Object send44905;
Object string5202;
Object constant8712;
Object send44906;
Object assign5425;
Object send44907;
Object send44908;
Object string5203;
Object constant8713;
Object send44909;
Object send44910;
Object send44911;
Object smallint3031;
Object constant8714;
Object send44912;
Object string5204;
Object constant8715;
Object send44913;
Object assign5426;
Object send44914;
Object send44915;
Object string5205;
Object constant8716;
Object send44916;
Object send44917;
Object send44918;
Object smallint3032;
Object constant8717;
Object send44919;
Object method6097;
Object symbol7598;
Object methodclosure6097;
Object localvariable6227;
Object localvariable6228;
Object localvariable6229;
Object array4951;
Object send44920;
Object assign5427;
Object string5206;
Object constant8718;
Object send44921;
Object assign5428;
Object send44922;
Object assign5429;
Object send44923;
Object send44924;
Object send44925;
Object send44926;
Object send44927;
Object string5207;
Object constant8719;
Object send44928;
Object send44929;
Object send44930;
Object smallint3033;
Object constant8720;
Object send44931;
Object string5208;
Object constant8721;
Object send44932;
Object assign5430;
Object send44933;
Object assign5431;
Object send44934;
Object send44935;
Object send44936;
Object send44937;
Object send44938;
Object string5209;
Object constant8722;
Object send44939;
Object send44940;
Object send44941;
Object smallint3034;
Object constant8723;
Object send44942;
Object string5210;
Object constant8724;
Object send44943;
Object assign5432;
Object send44944;
Object assign5433;
Object send44945;
Object send44946;
Object send44947;
Object send44948;
Object send44949;
Object string5211;
Object constant8725;
Object send44950;
Object send44951;
Object send44952;
Object smallint3035;
Object constant8726;
Object send44953;
Object method6098;
Object symbol7571;
Object methodclosure6098;
Object localvariable6230;
Object localvariable6231;
Object localvariable6232;
Object localvariable6233;
Object array4952;
Object send44954;
Object assign5434;
Object string5212;
Object constant8727;
Object send44955;
Object assign5435;
Object send44956;
Object assign5436;
Object send44957;
Object send44958;
Object send44959;
Object send44960;
Object send44961;
Object constant8728;
Object send44962;
Object send44963;
Object localvariable6234;
Object array4953;
Object smallint3036;
Object constant8729;
Object symbol7990;
Object constant8730;
Object send44964;
Object smallint3037;
Object constant8731;
Object symbol7991;
Object constant8732;
Object send44965;
Object smallint3038;
Object constant8733;
Object symbol7992;
Object constant8734;
Object send44966;
Object send44967;
Object block2882;
Object smallint3039;
Object constant8735;
Object send44968;
Object send44969;
Object send44970;
Object send44971;
Object send44972;
Object assign5437;
Object send44973;
Object send44974;
Object send44975;
Object send44976;
Object smallint3040;
Object constant8736;
Object send44977;
Object assign5438;
Object send44978;
Object send44979;
Object send44980;
Object send44981;
Object smallint3041;
Object constant8737;
Object send44982;
Object assign5439;
Object send44983;
Object send44984;
Object send44985;
Object send44986;
Object send44987;
Object send44988;
Object symbol7993;
Object send44989;
Object string5213;
Object constant8738;
Object send44990;
Object assign5440;
Object send44991;
Object assign5441;
Object send44992;
Object send44993;
Object send44994;
Object send44995;
Object send44996;
Object send44997;
Object string5214;
Object constant8739;
Object send44998;
Object send44999;
Object send45000;
Object smallint3042;
Object constant8740;
Object send45001;
Object string5215;
Object constant8741;
Object send45002;
Object assign5442;
Object send45003;
Object assign5443;
Object send45004;
Object send45005;
Object send45006;
Object send45007;
Object send45008;
Object constant8742;
Object send45009;
Object send45010;
Object localvariable6235;
Object array4954;
Object smallint3043;
Object constant8743;
Object string5216;
Object constant8744;
Object send45011;
Object smallint3044;
Object constant8745;
Object string5217;
Object constant8746;
Object send45012;
Object smallint3045;
Object constant8747;
Object string5218;
Object constant8748;
Object send45013;
Object send45014;
Object block2883;
Object smallint3046;
Object constant8749;
Object send45015;
Object send45016;
Object send45017;
Object send45018;
Object send45019;
Object send45020;
Object send45021;
Object method6099;
Object symbol7608;
Object methodclosure6099;
Object localvariable6236;
Object localvariable6237;
Object localvariable6238;
Object array4955;
Object symbol7994;
Object send45022;
Object assign5444;
Object string5219;
Object constant8750;
Object assign5445;
Object send45023;
Object assign5446;
Object send45024;
Object send45025;
Object send45026;
Object send45027;
Object send45028;
Object send45029;
Object send45030;
Object send45031;
Object send45032;
Object send45033;
Object send45034;
Object send45035;
Object send45036;
Object send45037;
Object smallint3047;
Object constant8751;
Object send45038;
Object send45039;
Object send45040;
Object send45041;
Object smallint3048;
Object constant8752;
Object send45042;
Object send45043;
Object send45044;
Object send45045;
Object smallint3049;
Object constant8753;
Object send45046;
Object method6100;
Object symbol7591;
Object methodclosure6100;
Object localvariable6239;
Object localvariable6240;
Object localvariable6241;
Object array4956;
Object send45047;
Object assign5447;
Object string5220;
Object constant8754;
Object send45048;
Object assign5448;
Object send45049;
Object assign5449;
Object send45050;
Object send45051;
Object send45052;
Object send45053;
Object send45054;
Object string5221;
Object constant8755;
Object send45055;
Object send45056;
Object send45057;
Object send45058;
Object send45059;
Object smallint3050;
Object constant8756;
Object send45060;
Object send45061;
Object send45062;
Object send45063;
Object send45064;
Object string5222;
Object constant8757;
Object send45065;
Object send45066;
Object send45067;
Object send45068;
Object smallint3051;
Object constant8758;
Object send45069;
Object string5223;
Object constant8759;
Object send45070;
Object assign5450;
Object send45071;
Object send45072;
Object send45073;
Object send45074;
Object send45075;
Object send45076;
Object smallint3052;
Object constant8760;
Object send45077;
Object string5224;
Object constant8761;
Object send45078;
Object assign5451;
Object send45079;
Object assign5452;
Object send45080;
Object send45081;
Object send45082;
Object send45083;
Object send45084;
Object symbol7995;
Object string5225;
Object constant8762;
Object string5226;
Object constant8763;
Object send45085;
Object send45086;
Object send45087;
Object send45088;
Object send45089;
Object smallint3053;
Object constant8764;
Object send45090;
Object send45091;
Object send45092;
Object send45093;
Object send45094;
Object string5227;
Object constant8765;
Object send45095;
Object send45096;
Object send45097;
Object send45098;
Object send45099;
Object send45100;
Object string5228;
Object constant8766;
Object send45101;
Object send45102;
Object send45103;
Object send45104;
Object smallint3054;
Object constant8767;
Object send45105;
Object method6101;
Object symbol7583;
Object methodclosure6101;
Object localvariable6242;
Object localvariable6243;
Object localvariable6244;
Object localvariable6245;
Object array4957;
Object send45106;
Object assign5453;
Object string5229;
Object constant8768;
Object send45107;
Object assign5454;
Object send45108;
Object assign5455;
Object send45109;
Object send45110;
Object send45111;
Object send45112;
Object send45113;
Object send45114;
Object localvariable6246;
Object array4958;
Object smallint3055;
Object constant8769;
Object string5230;
Object constant8770;
Object send45115;
Object smallint3056;
Object constant8771;
Object string5231;
Object constant8772;
Object send45116;
Object smallint3057;
Object constant8773;
Object string5232;
Object constant8774;
Object send45117;
Object send45118;
Object block2884;
Object smallint3058;
Object constant8775;
Object send45119;
Object send45120;
Object send45121;
Object send45122;
Object send45123;
Object send45124;
Object send45125;
Object send45126;
Object send45127;
Object send45128;
Object string5233;
Object constant8776;
Object send45129;
Object send45130;
Object send45131;
Object assign5456;
Object send45132;
Object send45133;
Object send45134;
Object send45135;
Object smallint3059;
Object constant8777;
Object send45136;
Object assign5457;
Object send45137;
Object send45138;
Object send45139;
Object send45140;
Object smallint3060;
Object constant8778;
Object send45141;
Object assign5458;
Object send45142;
Object send45143;
Object send45144;
Object send45145;
Object send45146;
Object send45147;
Object send45148;
Object send45149;
Object send45150;
Object smallint3061;
Object constant8779;
Object send45151;
Object method6102;
Object symbol7616;
Object methodclosure6102;
Object localvariable6247;
Object localvariable6248;
Object localvariable6249;
Object array4959;
Object send45152;
Object assign5459;
Object string5234;
Object constant8780;
Object send45153;
Object assign5460;
Object send45154;
Object assign5461;
Object send45155;
Object send45156;
Object send45157;
Object send45158;
Object send45159;
Object send45160;
Object send45161;
Object string5235;
Object constant8781;
Object send45162;
Object assign5462;
Object send45163;
Object assign5463;
Object send45164;
Object send45165;
Object send45166;
Object send45167;
Object send45168;
Object send45169;
Object send45170;
Object string5236;
Object constant8782;
Object send45171;
Object assign5464;
Object send45172;
Object assign5465;
Object send45173;
Object send45174;
Object send45175;
Object send45176;
Object send45177;
Object send45178;
Object send45179;
Object send45180;
Object send45181;
Object send45182;
Object smallint3062;
Object constant8783;
Object send45183;
Object method6103;
Object symbol7601;
Object methodclosure6103;
Object localvariable6250;
Object localvariable6251;
Object localvariable6252;
Object localvariable6253;
Object array4960;
Object send45184;
Object assign5466;
Object string5237;
Object constant8784;
Object send45185;
Object assign5467;
Object send45186;
Object assign5468;
Object send45187;
Object send45188;
Object send45189;
Object send45190;
Object send45191;
Object assign5469;
Object string5238;
Object constant8785;
Object send45192;
Object assign5470;
Object send45193;
Object assign5471;
Object send45194;
Object send45195;
Object send45196;
Object send45197;
Object send45198;
Object send45199;
Object send45200;
Object send45201;
Object method6104;
Object symbol7621;
Object methodclosure6104;
Object localvariable6254;
Object localvariable6255;
Object localvariable6256;
Object localvariable6257;
Object array4961;
Object send45202;
Object assign5472;
Object string5239;
Object constant8786;
Object send45203;
Object assign5473;
Object send45204;
Object assign5474;
Object send45205;
Object send45206;
Object smallint3063;
Object constant8787;
Object send45207;
Object send45208;
Object send45209;
Object send45210;
Object send45211;
Object send45212;
Object smallint3064;
Object constant8788;
Object send45213;
Object smallint3065;
Object constant8789;
Object send45214;
Object assign5475;
Object send45215;
Object send45216;
Object send45217;
Object send45218;
Object send45219;
Object string5240;
Object constant8790;
Object send45220;
Object smallint3066;
Object constant8791;
Object send45221;
Object assign5476;
Object send45222;
Object send45223;
Object send45224;
Object send45225;
Object send45226;
Object string5241;
Object constant8792;
Object send45227;
Object string5242;
Object constant8793;
Object send45228;
Object assign5477;
Object send45229;
Object assign5478;
Object send45230;
Object send45231;
Object smallint3067;
Object constant8794;
Object send45232;
Object send45233;
Object send45234;
Object send45235;
Object send45236;
Object send45237;
Object smallint3068;
Object constant8795;
Object send45238;
Object send45239;
Object assign5479;
Object send45240;
Object send45241;
Object send45242;
Object send45243;
Object send45244;
Object string5243;
Object constant8796;
Object send45245;
Object smallint3069;
Object constant8797;
Object send45246;
Object assign5480;
Object send45247;
Object send45248;
Object send45249;
Object send45250;
Object send45251;
Object string5244;
Object constant8798;
Object send45252;
Object method6105;
Object symbol7565;
Object methodclosure6105;
Object localvariable6258;
Object localvariable6259;
Object array4962;
Object send45253;
Object assign5481;
Object string5245;
Object constant8799;
Object send45254;
Object assign5482;
Object send45255;
Object send45256;
Object string5246;
Object constant8800;
Object send45257;
Object send45258;
Object send45259;
Object smallint3070;
Object constant8801;
Object send45260;
Object string5247;
Object constant8802;
Object send45261;
Object assign5483;
Object send45262;
Object send45263;
Object send45264;
Object send45265;
Object send45266;
Object send45267;
Object smallint3071;
Object constant8803;
Object send45268;
Object method6106;
Object symbol7593;
Object methodclosure6106;
Object localvariable6260;
Object localvariable6261;
Object array4963;
Object send45269;
Object assign5484;
Object string5248;
Object constant8804;
Object send45270;
Object send45271;
Object send45272;
Object assign5485;
Object send45273;
Object send45274;
Object send45275;
Object send45276;
Object send45277;
Object send45278;
Object send45279;
Object send45280;
Object send45281;
Object send45282;
Object send45283;
Object send45284;
Object send45285;
Object send45286;
Object send45287;
Object send45288;
Object string5249;
Object constant8805;
Object send45289;
Object send45290;
Object send45291;
Object send45292;
Object send45293;
Object string5250;
Object constant8806;
Object send45294;
Object send45295;
Object send45296;
Object send45297;
Object string5251;
Object constant8807;
Object send45298;
Object send45299;
Object send45300;
Object send45301;
Object send45302;
Object send45303;
Object send45304;
Object send45305;
Object string5252;
Object constant8808;
Object send45306;
Object method6107;
Object symbol7611;
Object methodclosure6107;
Object localvariable6262;
Object localvariable6263;
Object localvariable6264;
Object array4964;
Object send45307;
Object assign5486;
Object string5253;
Object constant8809;
Object send45308;
Object assign5487;
Object send45309;
Object assign5488;
Object send45310;
Object send45311;
Object send45312;
Object send45313;
Object send45314;
Object send45315;
Object smallint3072;
Object constant8810;
Object send45316;
Object send45317;
Object send45318;
Object send45319;
Object smallint3073;
Object constant8811;
Object send45320;
Object send45321;
Object send45322;
Object send45323;
Object smallint3074;
Object constant8812;
Object send45324;
Object string5254;
Object constant8813;
Object send45325;
Object assign5489;
Object send45326;
Object assign5490;
Object send45327;
Object send45328;
Object send45329;
Object send45330;
Object send45331;
Object send45332;
Object smallint3075;
Object constant8814;
Object send45333;
Object send45334;
Object send45335;
Object send45336;
Object smallint3076;
Object constant8815;
Object send45337;
Object send45338;
Object send45339;
Object send45340;
Object smallint3077;
Object constant8816;
Object send45341;
Object string5255;
Object constant8817;
Object send45342;
Object assign5491;
Object send45343;
Object assign5492;
Object send45344;
Object send45345;
Object send45346;
Object send45347;
Object send45348;
Object send45349;
Object smallint3078;
Object constant8818;
Object send45350;
Object send45351;
Object send45352;
Object send45353;
Object smallint3079;
Object constant8819;
Object send45354;
Object send45355;
Object send45356;
Object send45357;
Object smallint3080;
Object constant8820;
Object send45358;
Object string5256;
Object constant8821;
Object send45359;
Object assign5493;
Object send45360;
Object assign5494;
Object send45361;
Object send45362;
Object send45363;
Object send45364;
Object send45365;
Object send45366;
Object smallint3081;
Object constant8822;
Object send45367;
Object send45368;
Object send45369;
Object send45370;
Object smallint3082;
Object constant8823;
Object send45371;
Object send45372;
Object send45373;
Object send45374;
Object smallint3083;
Object constant8824;
Object send45375;
Object string5257;
Object constant8825;
Object send45376;
Object assign5495;
Object send45377;
Object assign5496;
Object send45378;
Object send45379;
Object send45380;
Object send45381;
Object send45382;
Object send45383;
Object smallint3084;
Object constant8826;
Object send45384;
Object send45385;
Object send45386;
Object send45387;
Object smallint3085;
Object constant8827;
Object send45388;
Object send45389;
Object send45390;
Object send45391;
Object smallint3086;
Object constant8828;
Object send45392;
Object string5258;
Object constant8829;
Object send45393;
Object assign5497;
Object send45394;
Object assign5498;
Object send45395;
Object send45396;
Object send45397;
Object send45398;
Object send45399;
Object send45400;
Object smallint3087;
Object constant8830;
Object send45401;
Object send45402;
Object send45403;
Object send45404;
Object smallint3088;
Object constant8831;
Object send45405;
Object send45406;
Object send45407;
Object send45408;
Object smallint3089;
Object constant8832;
Object send45409;
Object string5259;
Object constant8833;
Object send45410;
Object assign5499;
Object send45411;
Object assign5500;
Object send45412;
Object send45413;
Object send45414;
Object send45415;
Object send45416;
Object send45417;
Object smallint3090;
Object constant8834;
Object send45418;
Object send45419;
Object send45420;
Object send45421;
Object smallint3091;
Object constant8835;
Object send45422;
Object send45423;
Object send45424;
Object send45425;
Object smallint3092;
Object constant8836;
Object send45426;
Object method6108;
Object symbol7603;
Object methodclosure6108;
Object localvariable6265;
Object localvariable6266;
Object localvariable6267;
Object array4965;
Object send45427;
Object assign5501;
Object string5260;
Object constant8837;
Object send45428;
Object assign5502;
Object send45429;
Object assign5503;
Object send45430;
Object send45431;
Object send45432;
Object send45433;
Object send45434;
Object string5261;
Object constant8838;
Object send45435;
Object send45436;
Object send45437;
Object smallint3093;
Object constant8839;
Object send45438;
Object method6109;
Object symbol7623;
Object methodclosure6109;
Object send45439;
Object assign5504;
Object method6110;
Object symbol7613;
Object methodclosure6110;
Object localvariable6268;
Object localvariable6269;
Object localvariable6270;
Object array4966;
Object send45440;
Object assign5505;
Object string5262;
Object constant8840;
Object send45441;
Object assign5506;
Object send45442;
Object assign5507;
Object send45443;
Object send45444;
Object send45445;
Object send45446;
Object send45447;
Object send45448;
Object send45449;
Object send45450;
Object send45451;
Object send45452;
Object string5263;
Object constant8841;
Object send45453;
Object send45454;
Object assign5508;
Object send45455;
Object send45456;
Object send45457;
Object send45458;
Object send45459;
Object send45460;
Object send45461;
Object send45462;
Object send45463;
Object send45464;
Object string5264;
Object constant8842;
Object send45465;
Object send45466;
Object assign5509;
Object send45467;
Object send45468;
Object send45469;
Object send45470;
Object send45471;
Object send45472;
Object send45473;
Object send45474;
Object send45475;
Object send45476;
Object string5265;
Object constant8843;
Object send45477;
Object send45478;
Object send45479;
Object send45480;
Object send45481;
Object method6111;
Object symbol7605;
Object methodclosure6111;
Object localvariable6271;
Object localvariable6272;
Object localvariable6273;
Object array4967;
Object send45482;
Object assign5510;
Object string5266;
Object constant8844;
Object send45483;
Object assign5511;
Object send45484;
Object assign5512;
Object send45485;
Object send45486;
Object send45487;
Object send45488;
Object send45489;
Object string5267;
Object constant8845;
Object send45490;
Object send45491;
Object send45492;
Object smallint3094;
Object constant8846;
Object send45493;
Object string5268;
Object constant8847;
Object send45494;
Object assign5513;
Object send45495;
Object assign5514;
Object send45496;
Object send45497;
Object send45498;
Object send45499;
Object send45500;
Object string5269;
Object constant8848;
Object send45501;
Object send45502;
Object send45503;
Object string5270;
Object constant8849;
Object send45504;
Object send45505;
Object send45506;
Object smallint3095;
Object constant8850;
Object send45507;
Object method6112;
Object symbol7580;
Object methodclosure6112;
Object method6113;
Object symbol7577;
Object methodclosure6113;
Object localvariable6274;
Object localvariable6275;
Object localvariable6276;
Object array4968;
Object send45508;
Object assign5515;
Object string5271;
Object constant8851;
Object send45509;
Object assign5516;
Object send45510;
Object assign5517;
Object send45511;
Object send45512;
Object send45513;
Object send45514;
Object send45515;
Object send45516;
Object send45517;
Object send45518;
Object send45519;
Object send45520;
Object send45521;
Object string5272;
Object constant8852;
Object send45522;
Object send45523;
Object assign5518;
Object send45524;
Object send45525;
Object send45526;
Object send45527;
Object send45528;
Object send45529;
Object send45530;
Object send45531;
Object send45532;
Object send45533;
Object send45534;
Object string5273;
Object constant8853;
Object send45535;
Object send45536;
Object send45537;
Object send45538;
Object send45539;
Object send45540;
Object send45541;
Object send45542;
Object string5274;
Object constant8854;
Object send45543;
Object send45544;
Object send45545;
Object smallint3096;
Object constant8855;
Object send45546;
Object string5275;
Object constant8856;
Object send45547;
Object assign5519;
Object send45548;
Object send45549;
Object send45550;
Object send45551;
Object method6114;
Object symbol7597;
Object methodclosure6114;
Object localvariable6277;
Object localvariable6278;
Object array4969;
Object symbol7996;
Object send45552;
Object assign5520;
Object string5276;
Object constant8857;
Object send45553;
Object assign5521;
Object send45554;
Object send45555;
Object string5277;
Object constant8858;
Object send45556;
Object send45557;
Object send45558;
Object smallint3097;
Object constant8859;
Object send45559;
Object string5278;
Object constant8860;
Object send45560;
Object assign5522;
Object send45561;
Object send45562;
Object string5279;
Object constant8861;
Object send45563;
Object send45564;
Object send45565;
Object smallint3098;
Object constant8862;
Object send45566;
Object string5280;
Object constant8863;
Object send45567;
Object assign5523;
Object send45568;
Object send45569;
Object send45570;
Object send45571;
Object send45572;
Object send45573;
Object smallint3099;
Object constant8864;
Object send45574;
Object method6115;
Object symbol7589;
Object methodclosure6115;
Object localvariable6279;
Object localvariable6280;
Object localvariable6281;
Object localvariable6282;
Object array4970;
Object send45575;
Object assign5524;
Object string5281;
Object constant8865;
Object send45576;
Object assign5525;
Object send45577;
Object assign5526;
Object send45578;
Object send45579;
Object send45580;
Object send45581;
Object send45582;
Object send45583;
Object send45584;
Object send45585;
Object send45586;
Object send45587;
Object smallint3100;
Object constant8866;
Object send45588;
Object send45589;
Object smallint3101;
Object constant8867;
Object send45590;
Object assign5527;
Object send45591;
Object send45592;
Object send45593;
Object send45594;
Object smallint3102;
Object constant8868;
Object send45595;
Object assign5528;
Object send45596;
Object send45597;
Object send45598;
Object send45599;
Object smallint3103;
Object constant8869;
Object send45600;
Object assign5529;
Object send45601;
Object send45602;
Object send45603;
Object send45604;
Object smallint3104;
Object constant8870;
Object send45605;
Object assign5530;
Object send45606;
Object send45607;
Object send45608;
Object method6116;
Object symbol7570;
Object methodclosure6116;
Object localvariable6283;
Object localvariable6284;
Object localvariable6285;
Object array4971;
Object send45609;
Object assign5531;
Object string5282;
Object constant8871;
Object send45610;
Object assign5532;
Object send45611;
Object assign5533;
Object send45612;
Object send45613;
Object send45614;
Object send45615;
Object send45616;
Object send45617;
Object send45618;
Object send45619;
Object send45620;
Object send45621;
Object send45622;
Object string5283;
Object constant8872;
Object send45623;
Object send45624;
Object assign5534;
Object send45625;
Object send45626;
Object send45627;
Object send45628;
Object send45629;
Object send45630;
Object send45631;
Object send45632;
Object send45633;
Object send45634;
Object send45635;
Object string5284;
Object constant8873;
Object send45636;
Object send45637;
Object send45638;
Object send45639;
Object send45640;
Object send45641;
Object send45642;
Object send45643;
Object string5285;
Object constant8874;
Object send45644;
Object send45645;
Object send45646;
Object smallint3105;
Object constant8875;
Object send45647;
Object string5286;
Object constant8876;
Object send45648;
Object assign5535;
Object send45649;
Object assign5536;
Object send45650;
Object send45651;
Object send45652;
Object send45653;
Object send45654;
Object string5287;
Object constant8877;
Object send45655;
Object send45656;
Object send45657;
Object smallint3106;
Object constant8878;
Object send45658;
Object string5288;
Object constant8879;
Object send45659;
Object assign5537;
Object send45660;
Object assign5538;
Object send45661;
Object send45662;
Object send45663;
Object send45664;
Object send45665;
Object send45666;
Object string5289;
Object constant8880;
Object send45667;
Object send45668;
Object send45669;
Object send45670;
Object send45671;
Object send45672;
Object send45673;
Object send45674;
Object string5290;
Object constant8881;
Object send45675;
Object send45676;
Object assign5539;
Object send45677;
Object send45678;
Object send45679;
Object send45680;
Object send45681;
Object send45682;
Object string5291;
Object constant8882;
Object send45683;
Object send45684;
Object send45685;
Object send45686;
Object send45687;
Object send45688;
Object send45689;
Object send45690;
Object string5292;
Object constant8883;
Object send45691;
Object send45692;
Object send45693;
Object send45694;
Object send45695;
Object send45696;
Object send45697;
Object send45698;
Object string5293;
Object constant8884;
Object send45699;
Object send45700;
Object send45701;
Object smallint3107;
Object constant8885;
Object send45702;
Object method6117;
Object symbol7590;
Object methodclosure6117;
Object localvariable6286;
Object localvariable6287;
Object localvariable6288;
Object array4972;
Object send45703;
Object assign5540;
Object string5294;
Object constant8886;
Object send45704;
Object assign5541;
Object send45705;
Object send45706;
Object send45707;
Object send45708;
Object string5295;
Object constant8887;
Object send45709;
Object assign5542;
Object send45710;
Object assign5543;
Object send45711;
Object send45712;
Object send45713;
Object send45714;
Object send45715;
Object send45716;
Object send45717;
Object send45718;
Object send45719;
Object send45720;
Object string5296;
Object constant8888;
Object send45721;
Object send45722;
Object assign5544;
Object send45723;
Object send45724;
Object send45725;
Object send45726;
Object send45727;
Object send45728;
Object send45729;
Object send45730;
Object send45731;
Object send45732;
Object string5297;
Object constant8889;
Object send45733;
Object send45734;
Object assign5545;
Object send45735;
Object send45736;
Object send45737;
Object send45738;
Object send45739;
Object send45740;
Object send45741;
Object send45742;
Object send45743;
Object send45744;
Object string5298;
Object constant8890;
Object send45745;
Object send45746;
Object send45747;
Object send45748;
Object send45749;
Object method6118;
Object symbol7627;
Object methodclosure6118;
Object localvariable6289;
Object localvariable6290;
Object localvariable6291;
Object localvariable6292;
Object array4973;
Object send45750;
Object assign5546;
Object string5299;
Object constant8891;
Object send45751;
Object assign5547;
Object send45752;
Object assign5548;
Object send45753;
Object send45754;
Object send45755;
Object send45756;
Object send45757;
Object send45758;
Object localvariable6293;
Object array4974;
Object smallint3108;
Object constant8892;
Object string5300;
Object constant8893;
Object send45759;
Object smallint3109;
Object constant8894;
Object string5301;
Object constant8895;
Object send45760;
Object smallint3110;
Object constant8896;
Object string5302;
Object constant8897;
Object send45761;
Object send45762;
Object block2885;
Object smallint3111;
Object constant8898;
Object send45763;
Object send45764;
Object send45765;
Object send45766;
Object send45767;
Object assign5549;
Object send45768;
Object send45769;
Object send45770;
Object send45771;
Object smallint3112;
Object constant8899;
Object send45772;
Object assign5550;
Object send45773;
Object send45774;
Object send45775;
Object send45776;
Object smallint3113;
Object constant8900;
Object send45777;
Object assign5551;
Object send45778;
Object send45779;
Object send45780;
Object send45781;
Object send45782;
Object smallint3114;
Object constant8901;
Object send45783;
Object method6119;
Object symbol7579;
Object methodclosure6119;
Object localvariable6294;
Object localvariable6295;
Object localvariable6296;
Object array4975;
Object send45784;
Object assign5552;
Object string5303;
Object constant8902;
Object assign5553;
Object send45785;
Object assign5554;
Object send45786;
Object send45787;
Object send45788;
Object send45789;
Object send45790;
Object send45791;
Object send45792;
Object send45793;
Object send45794;
Object send45795;
Object send45796;
Object send45797;
Object send45798;
Object send45799;
Object smallint3115;
Object constant8903;
Object send45800;
Object send45801;
Object send45802;
Object send45803;
Object smallint3116;
Object constant8904;
Object send45804;
Object send45805;
Object send45806;
Object send45807;
Object smallint3117;
Object constant8905;
Object send45808;
Object method6120;
Object symbol7620;
Object methodclosure6120;
Object localvariable6297;
Object localvariable6298;
Object array4976;
Object send45809;
Object assign5555;
Object string5304;
Object constant8906;
Object send45810;
Object assign5556;
Object send45811;
Object constant8907;
Object send45812;
Object send45813;
Object send45814;
Object localvariable6299;
Object array4977;
Object smallint3118;
Object constant8908;
Object string5305;
Object constant8909;
Object send45815;
Object smallint3119;
Object constant8910;
Object string5306;
Object constant8911;
Object send45816;
Object smallint3120;
Object constant8912;
Object string5307;
Object constant8913;
Object send45817;
Object send45818;
Object block2886;
Object smallint3121;
Object constant8914;
Object send45819;
Object send45820;
Object send45821;
Object send45822;
Object send45823;
Object smallint3122;
Object constant8915;
Object send45824;
Object string5308;
Object constant8916;
Object send45825;
Object assign5557;
Object send45826;
Object constant8917;
Object send45827;
Object send45828;
Object send45829;
Object localvariable6300;
Object array4978;
Object smallint3123;
Object constant8918;
Object string5309;
Object constant8919;
Object send45830;
Object smallint3124;
Object constant8920;
Object string5310;
Object constant8921;
Object send45831;
Object smallint3125;
Object constant8922;
Object string5311;
Object constant8923;
Object send45832;
Object send45833;
Object block2887;
Object smallint3126;
Object constant8924;
Object send45834;
Object send45835;
Object send45836;
Object send45837;
Object send45838;
Object smallint3127;
Object constant8925;
Object send45839;
Object method6121;
Object symbol7572;
Object methodclosure6121;
Object localvariable6301;
Object localvariable6302;
Object array4979;
Object send45840;
Object assign5558;
Object string5312;
Object constant8926;
Object send45841;
Object assign5559;
Object send45842;
Object send45843;
Object string5313;
Object constant8927;
Object send45844;
Object send45845;
Object send45846;
Object smallint3128;
Object constant8928;
Object send45847;
Object string5314;
Object constant8929;
Object send45848;
Object assign5560;
Object send45849;
Object send45850;
Object string5315;
Object constant8930;
Object send45851;
Object send45852;
Object send45853;
Object smallint3129;
Object constant8931;
Object send45854;
Object string5316;
Object constant8932;
Object send45855;
Object assign5561;
Object send45856;
Object send45857;
Object string5317;
Object constant8933;
Object send45858;
Object send45859;
Object send45860;
Object smallint3130;
Object constant8934;
Object send45861;
Object string5318;
Object constant8935;
Object send45862;
Object assign5562;
Object send45863;
Object send45864;
Object string5319;
Object constant8936;
Object send45865;
Object send45866;
Object send45867;
Object smallint3131;
Object constant8937;
Object send45868;
Object string5320;
Object constant8938;
Object send45869;
Object assign5563;
Object send45870;
Object send45871;
Object string5321;
Object constant8939;
Object send45872;
Object send45873;
Object send45874;
Object smallint3132;
Object constant8940;
Object send45875;
Object string5322;
Object constant8941;
Object send45876;
Object assign5564;
Object send45877;
Object send45878;
Object send45879;
Object send45880;
Object send45881;
Object send45882;
Object smallint3133;
Object constant8942;
Object send45883;
Object method6122;
Object symbol7609;
Object methodclosure6122;
Object localvariable6303;
Object localvariable6304;
Object localvariable6305;
Object array4980;
Object send45884;
Object assign5565;
Object string5323;
Object constant8943;
Object assign5566;
Object send45885;
Object assign5567;
Object send45886;
Object send45887;
Object send45888;
Object send45889;
Object send45890;
Object send45891;
Object send45892;
Object send45893;
Object send45894;
Object send45895;
Object string5324;
Object constant8944;
Object send45896;
Object method6123;
Object symbol7592;
Object methodclosure6123;
Object localvariable6306;
Object localvariable6307;
Object array4981;
Object send45897;
Object assign5568;
Object string5325;
Object constant8945;
Object send45898;
Object assign5569;
Object send45899;
Object send45900;
Object send45901;
Object send45902;
Object send45903;
Object send45904;
Object send45905;
Object smallint3134;
Object constant8946;
Object send45906;
Object string5326;
Object constant8947;
Object send45907;
Object assign5570;
Object send45908;
Object send45909;
Object send45910;
Object send45911;
Object send45912;
Object send45913;
Object send45914;
Object smallint3135;
Object constant8948;
Object send45915;
Object string5327;
Object constant8949;
Object send45916;
Object assign5571;
Object send45917;
Object send45918;
Object send45919;
Object send45920;
Object send45921;
Object send45922;
Object send45923;
Object smallint3136;
Object constant8950;
Object send45924;
Object method6124;
Object symbol7584;
Object methodclosure6124;
Object localvariable6308;
Object localvariable6309;
Object localvariable6310;
Object array4982;
Object send45925;
Object assign5572;
Object string5328;
Object constant8951;
Object send45926;
Object assign5573;
Object send45927;
Object assign5574;
Object send45928;
Object send45929;
Object send45930;
Object send45931;
Object send45932;
Object send45933;
Object string5329;
Object constant8952;
Object send45934;
Object send45935;
Object send45936;
Object send45937;
Object send45938;
Object send45939;
Object send45940;
Object send45941;
Object send45942;
Object string5330;
Object constant8953;
Object send45943;
Object send45944;
Object send45945;
Object smallint3137;
Object constant8954;
Object send45946;
Object string5331;
Object constant8955;
Object send45947;
Object assign5575;
Object send45948;
Object send45949;
Object send45950;
Object send45951;
Object send45952;
Object send45953;
Object smallint3138;
Object constant8956;
Object send45954;
Object string5332;
Object constant8957;
Object send45955;
Object assign5576;
Object send45956;
Object assign5577;
Object send45957;
Object send45958;
Object send45959;
Object send45960;
Object send45961;
Object send45962;
Object string5333;
Object constant8958;
Object send45963;
Object send45964;
Object send45965;
Object send45966;
Object send45967;
Object send45968;
Object send45969;
Object send45970;
Object send45971;
Object string5334;
Object constant8959;
Object send45972;
Object send45973;
Object send45974;
Object smallint3139;
Object constant8960;
Object send45975;
Object method6125;
Object symbol7617;
Object methodclosure6125;
Object localvariable6311;
Object localvariable6312;
Object array4983;
Object send45976;
Object assign5578;
Object string5335;
Object constant8961;
Object send45977;
Object assign5579;
Object send45978;
Object send45979;
Object send45980;
Object string5336;
Object constant8962;
Object send45981;
Object send45982;
Object send45983;
Object smallint3140;
Object constant8963;
Object send45984;
Object string5337;
Object constant8964;
Object send45985;
Object assign5580;
Object send45986;
Object send45987;
Object send45988;
Object string5338;
Object constant8965;
Object send45989;
Object send45990;
Object send45991;
Object smallint3141;
Object constant8966;
Object send45992;
Object string5339;
Object constant8967;
Object send45993;
Object assign5581;
Object send45994;
Object send45995;
Object send45996;
Object string5340;
Object constant8968;
Object send45997;
Object send45998;
Object send45999;
Object smallint3142;
Object constant8969;
Object send46000;
Object string5341;
Object constant8970;
Object send46001;
Object assign5582;
Object send46002;
Object send46003;
Object send46004;
Object string5342;
Object constant8971;
Object send46005;
Object send46006;
Object send46007;
Object smallint3143;
Object constant8972;
Object send46008;
Object method6126;
Object symbol7610;
Object methodclosure6126;
Object localvariable6313;
Object localvariable6314;
Object localvariable6315;
Object array4984;
Object send46009;
Object assign5583;
Object string5343;
Object constant8973;
Object send46010;
Object assign5584;
Object send46011;
Object assign5585;
Object send46012;
Object send46013;
Object send46014;
Object send46015;
Object send46016;
Object send46017;
Object send46018;
Object send46019;
Object send46020;
Object send46021;
Object string5344;
Object constant8974;
Object send46022;
Object send46023;
Object assign5586;
Object send46024;
Object send46025;
Object send46026;
Object send46027;
Object send46028;
Object send46029;
Object send46030;
Object send46031;
Object send46032;
Object send46033;
Object string5345;
Object constant8975;
Object send46034;
Object send46035;
Object assign5587;
Object send46036;
Object send46037;
Object send46038;
Object send46039;
Object send46040;
Object send46041;
Object send46042;
Object send46043;
Object send46044;
Object send46045;
Object string5346;
Object constant8976;
Object send46046;
Object send46047;
Object send46048;
Object send46049;
Object send46050;
Object method6127;
Object symbol7622;
Object methodclosure6127;
Object localvariable6316;
Object localvariable6317;
Object localvariable6318;
Object array4985;
Object send46051;
Object assign5588;
Object string5347;
Object constant8977;
Object assign5589;
Object send46052;
Object assign5590;
Object send46053;
Object send46054;
Object send46055;
Object send46056;
Object send46057;
Object send46058;
Object send46059;
Object send46060;
Object send46061;
Object send46062;
Object string5348;
Object constant8978;
Object send46063;
Object send46064;
Object send46065;
Object send46066;
Object send46067;
Object send46068;
Object send46069;
Object method6128;
Object symbol7574;
Object methodclosure6128;
Object localvariable6319;
Object array4986;
Object string5349;
Object constant8979;
Object send46070;
Object send46071;
Object assign5591;
Object string5350;
Object constant8980;
Object send46072;
Object send46073;
Object send46074;
Object send46075;
Object send46076;
Object string5351;
Object constant8981;
Object send46077;
Object send46078;
Object send46079;
Object send46080;
Object method6129;
Object symbol7619;
Object methodclosure6129;
Object localvariable6320;
Object localvariable6321;
Object array4987;
Object send46081;
Object assign5592;
Object string5352;
Object constant8982;
Object send46082;
Object assign5593;
Object send46083;
Object send46084;
Object string5353;
Object constant8983;
Object send46085;
Object send46086;
Object send46087;
Object smallint3144;
Object constant8984;
Object send46088;
Object string5354;
Object constant8985;
Object send46089;
Object assign5594;
Object send46090;
Object send46091;
Object send46092;
Object send46093;
Object send46094;
Object send46095;
Object smallint3145;
Object constant8986;
Object send46096;
Object method6130;
Object symbol7594;
Object methodclosure6130;
Object localvariable6322;
Object localvariable6323;
Object localvariable6324;
Object array4988;
Object send46097;
Object assign5595;
Object string5355;
Object constant8987;
Object send46098;
Object assign5596;
Object send46099;
Object assign5597;
Object send46100;
Object send46101;
Object send46102;
Object send46103;
Object send46104;
Object send46105;
Object send46106;
Object send46107;
Object send46108;
Object send46109;
Object string5356;
Object constant8988;
Object send46110;
Object send46111;
Object assign5598;
Object send46112;
Object send46113;
Object send46114;
Object send46115;
Object send46116;
Object send46117;
Object send46118;
Object send46119;
Object send46120;
Object send46121;
Object string5357;
Object constant8989;
Object send46122;
Object send46123;
Object assign5599;
Object send46124;
Object send46125;
Object send46126;
Object send46127;
Object send46128;
Object send46129;
Object send46130;
Object send46131;
Object send46132;
Object send46133;
Object string5358;
Object constant8990;
Object send46134;
Object send46135;
Object send46136;
Object send46137;
Object send46138;
Object string5359;
Object constant8991;
Object send46139;
Object assign5600;
Object send46140;
Object assign5601;
Object send46141;
Object send46142;
Object send46143;
Object send46144;
Object send46145;
Object send46146;
Object send46147;
Object send46148;
Object send46149;
Object send46150;
Object string5360;
Object constant8992;
Object send46151;
Object send46152;
Object assign5602;
Object send46153;
Object send46154;
Object send46155;
Object send46156;
Object send46157;
Object send46158;
Object send46159;
Object send46160;
Object send46161;
Object send46162;
Object string5361;
Object constant8993;
Object send46163;
Object send46164;
Object assign5603;
Object send46165;
Object send46166;
Object send46167;
Object send46168;
Object send46169;
Object send46170;
Object send46171;
Object send46172;
Object send46173;
Object send46174;
Object string5362;
Object constant8994;
Object send46175;
Object send46176;
Object send46177;
Object send46178;
Object send46179;
Object method6131;
Object symbol7586;
Object methodclosure6131;
Object localvariable6325;
Object localvariable6326;
Object localvariable6327;
Object array4989;
Object send46180;
Object assign5604;
Object string5363;
Object constant8995;
Object send46181;
Object assign5605;
Object send46182;
Object assign5606;
Object send46183;
Object send46184;
Object send46185;
Object send46186;
Object send46187;
Object send46188;
Object string5364;
Object constant8996;
Object send46189;
Object send46190;
Object send46191;
Object smallint3146;
Object constant8997;
Object send46192;
Object string5365;
Object constant8998;
Object send46193;
Object assign5607;
Object send46194;
Object send46195;
Object send46196;
Object send46197;
Object send46198;
Object send46199;
Object smallint3147;
Object constant8999;
Object send46200;
Object method6132;
Object symbol7604;
Object methodclosure6132;
Object localvariable6328;
Object localvariable6329;
Object localvariable6330;
Object localvariable6331;
Object array4990;
Object send46201;
Object assign5608;
Object string5366;
Object constant9000;
Object send46202;
Object assign5609;
Object send46203;
Object assign5610;
Object send46204;
Object send46205;
Object send46206;
Object send46207;
Object send46208;
Object assign5611;
Object string5367;
Object constant9001;
Object send46209;
Object assign5612;
Object send46210;
Object assign5613;
Object send46211;
Object send46212;
Object send46213;
Object send46214;
Object send46215;
Object send46216;
Object send46217;
Object send46218;
Object method6133;
Object symbol7624;
Object methodclosure6133;
Object localvariable6332;
Object localvariable6333;
Object localvariable6334;
Object array4991;
Object send46219;
Object assign5614;
Object string5368;
Object constant9002;
Object send46220;
Object assign5615;
Object send46221;
Object assign5616;
Object send46222;
Object send46223;
Object send46224;
Object send46225;
Object send46226;
Object send46227;
Object string5369;
Object constant9003;
Object send46228;
Object send46229;
Object send46230;
Object send46231;
Object send46232;
Object send46233;
Object send46234;
Object send46235;
Object send46236;
Object string5370;
Object constant9004;
Object send46237;
Object send46238;
Object send46239;
Object smallint3148;
Object constant9005;
Object send46240;
Object string5371;
Object constant9006;
Object send46241;
Object assign5617;
Object send46242;
Object send46243;
Object send46244;
Object send46245;
Object send46246;
Object send46247;
Object smallint3149;
Object constant9007;
Object send46248;
Object string5372;
Object constant9008;
Object send46249;
Object assign5618;
Object send46250;
Object assign5619;
Object send46251;
Object send46252;
Object send46253;
Object send46254;
Object send46255;
Object send46256;
Object string5373;
Object constant9009;
Object send46257;
Object send46258;
Object send46259;
Object send46260;
Object send46261;
Object string5374;
Object constant9010;
Object send46262;
Object send46263;
Object send46264;
Object send46265;
Object send46266;
Object send46267;
Object send46268;
Object smallint3150;
Object constant9011;
Object send46269;
Object method6134;
Object symbol7576;
Object methodclosure6134;
Object localvariable6335;
Object localvariable6336;
Object localvariable6337;
Object array4992;
Object send46270;
Object assign5620;
Object string5375;
Object constant9012;
Object send46271;
Object assign5621;
Object send46272;
Object assign5622;
Object send46273;
Object send46274;
Object send46275;
Object send46276;
Object assign5623;
Object send46277;
Object send46278;
Object send46279;
Object send46280;
Object send46281;
Object send46282;
Object send46283;
Object send46284;
Object send46285;
Object send46286;
Object string5376;
Object constant9013;
Object send46287;
Object send46288;
Object assign5624;
Object send46289;
Object send46290;
Object send46291;
Object send46292;
Object send46293;
Object send46294;
Object send46295;
Object send46296;
Object send46297;
Object send46298;
Object string5377;
Object constant9014;
Object send46299;
Object send46300;
Object assign5625;
Object send46301;
Object send46302;
Object send46303;
Object send46304;
Object send46305;
Object send46306;
Object send46307;
Object send46308;
Object send46309;
Object send46310;
Object string5378;
Object constant9015;
Object send46311;
Object send46312;
Object send46313;
Object send46314;
Object send46315;
Object string5379;
Object constant9016;
Object send46316;
Object assign5626;
Object send46317;
Object assign5627;
Object send46318;
Object send46319;
Object send46320;
Object send46321;
Object assign5628;
Object send46322;
Object send46323;
Object send46324;
Object send46325;
Object send46326;
Object send46327;
Object send46328;
Object send46329;
Object send46330;
Object send46331;
Object string5380;
Object constant9017;
Object send46332;
Object send46333;
Object assign5629;
Object send46334;
Object send46335;
Object send46336;
Object send46337;
Object send46338;
Object send46339;
Object send46340;
Object send46341;
Object send46342;
Object send46343;
Object string5381;
Object constant9018;
Object send46344;
Object send46345;
Object assign5630;
Object send46346;
Object send46347;
Object send46348;
Object send46349;
Object send46350;
Object send46351;
Object send46352;
Object send46353;
Object send46354;
Object send46355;
Object string5382;
Object constant9019;
Object send46356;
Object send46357;
Object send46358;
Object send46359;
Object send46360;
Object method6135;
Object symbol7596;
Object methodclosure6135;
Object localvariable6338;
Object localvariable6339;
Object localvariable6340;
Object array4993;
Object send46361;
Object assign5631;
Object string5383;
Object constant9020;
Object send46362;
Object assign5632;
Object send46363;
Object assign5633;
Object send46364;
Object send46365;
Object send46366;
Object send46367;
Object send46368;
Object send46369;
Object send46370;
Object send46371;
Object send46372;
Object send46373;
Object send46374;
Object string5384;
Object constant9021;
Object send46375;
Object send46376;
Object assign5634;
Object send46377;
Object send46378;
Object send46379;
Object send46380;
Object send46381;
Object send46382;
Object send46383;
Object send46384;
Object send46385;
Object send46386;
Object send46387;
Object string5385;
Object constant9022;
Object send46388;
Object send46389;
Object send46390;
Object send46391;
Object send46392;
Object send46393;
Object send46394;
Object send46395;
Object string5386;
Object constant9023;
Object send46396;
Object send46397;
Object send46398;
Object smallint3151;
Object constant9024;
Object send46399;
Object string5387;
Object constant9025;
Object send46400;
Object assign5635;
Object send46401;
Object assign5636;
Object send46402;
Object send46403;
Object send46404;
Object send46405;
Object send46406;
Object string5388;
Object constant9026;
Object send46407;
Object send46408;
Object send46409;
Object smallint3152;
Object constant9027;
Object send46410;
Object method6136;
Object symbol7588;
Object methodclosure6136;
Object localvariable6341;
Object localvariable6342;
Object array4994;
Object send46411;
Object assign5637;
Object string5389;
Object constant9028;
Object send46412;
Object assign5638;
Object send46413;
Object constant9029;
Object send46414;
Object send46415;
Object send46416;
Object localvariable6343;
Object array4995;
Object smallint3153;
Object constant9030;
Object string5390;
Object constant9031;
Object send46417;
Object smallint3154;
Object constant9032;
Object string5391;
Object constant9033;
Object send46418;
Object smallint3155;
Object constant9034;
Object string5392;
Object constant9035;
Object send46419;
Object send46420;
Object block2888;
Object smallint3156;
Object constant9036;
Object send46421;
Object send46422;
Object send46423;
Object send46424;
Object send46425;
Object smallint3157;
Object constant9037;
Object send46426;
Object string5393;
Object constant9038;
Object send46427;
Object assign5639;
Object send46428;
Object send46429;
Object send46430;
Object send46431;
Object send46432;
Object method6137;
Object symbol7614;
Object methodclosure6137;
Object localvariable6344;
Object localvariable6345;
Object localvariable6346;
Object array4996;
Object send46433;
Object assign5640;
Object string5394;
Object constant9039;
Object send46434;
Object assign5641;
Object send46435;
Object assign5642;
Object send46436;
Object send46437;
Object send46438;
Object send46439;
Object send46440;
Object send46441;
Object send46442;
Object send46443;
Object string5395;
Object constant9040;
Object send46444;
Object assign5643;
Object send46445;
Object assign5644;
Object send46446;
Object send46447;
Object send46448;
Object send46449;
Object send46450;
Object send46451;
Object smallint3158;
Object constant9041;
Object send46452;
Object send46453;
Object send46454;
Object send46455;
Object send46456;
Object send46457;
Object send46458;
Object send46459;
Object send46460;
Object send46461;
Object string5396;
Object constant9042;
Object send46462;
Object send46463;
Object smallint3159;
Object constant9043;
Object send46464;
Object send46465;
Object send46466;
Object send46467;
Object send46468;
Object smallint3160;
Object constant9044;
Object send46469;
Object send46470;
Object send46471;
Object string5397;
Object constant9045;
Object send46472;
Object send46473;
Object smallint3161;
Object constant9046;
Object send46474;
Object send46475;
Object send46476;
Object send46477;
Object send46478;
Object smallint3162;
Object constant9047;
Object send46479;
Object send46480;
Object send46481;
Object string5398;
Object constant9048;
Object send46482;
Object send46483;
Object smallint3163;
Object constant9049;
Object send46484;
Object send46485;
Object send46486;
Object send46487;
Object send46488;
Object smallint3164;
Object constant9050;
Object send46489;
Object send46490;
Object send46491;
Object string5399;
Object constant9051;
Object send46492;
Object send46493;
Object smallint3165;
Object constant9052;
Object send46494;
Object send46495;
Object send46496;
Object send46497;
Object method6138;
Object symbol7561;
Object methodclosure6138;
Object classreference1201;
Object method6139;
Object methodclosure6139;
Object method6140;
Object symbol7865;
Object methodclosure6140;
Object method6141;
Object symbol7867;
Object methodclosure6141;
Object localvariable6347;
Object array4997;
Object super514;
Object string5400;
Object constant9053;
Object send46498;
Object send46499;
Object send46500;
Object string5401;
Object constant9054;
Object send46501;
Object send46502;
Object send46503;
Object string5402;
Object constant9055;
Object send46504;
Object send46505;
Object send46506;
Object method6142;
Object methodclosure6142;
Object localvariable6348;
Object array4998;
Object assign5645;
Object method6143;
Object methodclosure6143;
Object localvariable6349;
Object array4999;
Object assign5646;
Object method6144;
Object symbol7866;
Object methodclosure6144;
Object localvariable6350;
Object array5000;
Object assign5647;
Object method6145;
Object methodclosure6145;
Object method6146;
Object methodclosure6146;
Object localvariable6351;
Object array5001;
Object send46507;
Object send46508;
Object send46509;
Object method6147;
Object methodclosure6147;
Object classreference1202;
Object instancevariable1495;
Object method6148;
Object methodclosure6148;
Object method6149;
Object methodclosure6149;
Object classreference1203;
Object localvariable6352;
Object array5002;
Object method6150;
Object methodclosure6150;
Object localvariable6353;
Object array5003;
Object send46510;
Object method6151;
Object methodclosure6151;
Object classreference1204;
Object localvariable6354;
Object array5004;
Object send46511;
Object method6152;
Object methodclosure6152;
Object localvariable6355;
Object array5005;
Object method6153;
Object methodclosure6153;
Object classreference1205;
Object localvariable6356;
Object array5006;
Object localvariable6357;
Object array5007;
Object variable322;
Object array5008;
Object send46512;
Object constant9056;
Object send46513;
Object super515;
Object send46514;
Object block2889;
Object send46515;
Object string5403;
Object constant9057;
Object send46516;
Object send46517;
Object string5404;
Object constant9058;
Object send46518;
Object send46519;
Object assign5648;
Object send46520;
Object send46521;
Object block2890;
Object send46522;
Object method6154;
Object methodclosure6154;
Object classreference1206;
Object classreference1207;

void SCParserTest_create_ast() {
objectlayout1797 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable1412 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout1797)->values[0] = instancevariable1412;
instancevariable1413 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout1797)->values[1] = instancevariable1413;
instancevariable1414 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout1797)->values[2] = instancevariable1414;
instancevariable1415 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1797)->values[3] = instancevariable1415;
instancevariable1416 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout1797)->values[4] = instancevariable1416;
symbol7698 = (Object)new_Type_Symbol_cached(L"Collection");
class969 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1797);
((Type_Class)class969)->name = (Type_Symbol)symbol7698;
metaclass969 = (Object)HEADER(class969);
objectlayout1798 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1798)->values[0] = instancevariable1412;
((Type_Array)objectlayout1798)->values[1] = instancevariable1413;
((Type_Array)objectlayout1798)->values[2] = instancevariable1414;
((Type_Array)objectlayout1798)->values[3] = instancevariable1415;
((Type_Array)objectlayout1798)->values[4] = instancevariable1416;
symbol7697 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class970 = (Object)new_Class_withMeta((Object)class969, empty_object_layout, objectlayout1798);
((Type_Class)class970)->name = (Type_Symbol)symbol7697;
metaclass970 = (Object)HEADER(class970);
objectlayout1799 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1799)->values[0] = instancevariable1412;
((Type_Array)objectlayout1799)->values[1] = instancevariable1413;
((Type_Array)objectlayout1799)->values[2] = instancevariable1414;
((Type_Array)objectlayout1799)->values[3] = instancevariable1415;
((Type_Array)objectlayout1799)->values[4] = instancevariable1416;
symbol7696 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class971 = (Object)new_Class_withMeta((Object)class970, empty_object_layout, objectlayout1799);
((Type_Class)class971)->name = (Type_Symbol)symbol7696;
metaclass971 = (Object)HEADER(class971);
objectlayout1800 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1800)->values[0] = instancevariable1412;
((Type_Array)objectlayout1800)->values[1] = instancevariable1413;
((Type_Array)objectlayout1800)->values[2] = instancevariable1414;
((Type_Array)objectlayout1800)->values[3] = instancevariable1415;
((Type_Array)objectlayout1800)->values[4] = instancevariable1416;
symbol7563 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout1801 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1417 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout1801)->values[0] = instancevariable1417;
instancevariable1418 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout1801)->values[1] = instancevariable1418;
instancevariable1419 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout1801)->values[2] = instancevariable1419;
class972 = (Object)new_Class_withMeta((Object)class970, objectlayout1801, objectlayout1800);
((Type_Class)class972)->name = (Type_Symbol)symbol7563;
metaclass972 = (Object)HEADER(class972);
objectlayout1802 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1802)->values[0] = instancevariable1412;
((Type_Array)objectlayout1802)->values[1] = instancevariable1413;
((Type_Array)objectlayout1802)->values[2] = instancevariable1414;
((Type_Array)objectlayout1802)->values[3] = instancevariable1415;
((Type_Array)objectlayout1802)->values[4] = instancevariable1416;
symbol7871 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout1803 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable1420 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout1803)->values[0] = instancevariable1420;
instancevariable1421 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout1803)->values[1] = instancevariable1421;
class973 = (Object)new_Class_withMeta((Object)class969, objectlayout1803, objectlayout1802);
((Type_Class)class973)->name = (Type_Symbol)symbol7871;
metaclass973 = (Object)HEADER(class973);
objectlayout1804 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1804)->values[0] = instancevariable1412;
((Type_Array)objectlayout1804)->values[1] = instancevariable1413;
((Type_Array)objectlayout1804)->values[2] = instancevariable1414;
((Type_Array)objectlayout1804)->values[3] = instancevariable1415;
((Type_Array)objectlayout1804)->values[4] = instancevariable1416;
symbol7680 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout1805 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1422 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout1805)->values[0] = instancevariable1422;
instancevariable1423 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout1805)->values[1] = instancevariable1423;
instancevariable1424 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout1805)->values[2] = instancevariable1424;
class974 = (Object)new_Class_withMeta((Object)class969, objectlayout1805, objectlayout1804);
((Type_Class)class974)->name = (Type_Symbol)symbol7680;
metaclass974 = (Object)HEADER(class974);
objectlayout1806 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1806)->values[0] = instancevariable1412;
((Type_Array)objectlayout1806)->values[1] = instancevariable1413;
((Type_Array)objectlayout1806)->values[2] = instancevariable1414;
((Type_Array)objectlayout1806)->values[3] = instancevariable1415;
((Type_Array)objectlayout1806)->values[4] = instancevariable1416;
symbol7674 = (Object)new_Type_Symbol_cached(L"Stream");
class975 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1806);
((Type_Class)class975)->name = (Type_Symbol)symbol7674;
metaclass975 = (Object)HEADER(class975);
objectlayout1807 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1807)->values[0] = instancevariable1412;
((Type_Array)objectlayout1807)->values[1] = instancevariable1413;
((Type_Array)objectlayout1807)->values[2] = instancevariable1414;
((Type_Array)objectlayout1807)->values[3] = instancevariable1415;
((Type_Array)objectlayout1807)->values[4] = instancevariable1416;
symbol7673 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout1808 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1425 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout1808)->values[0] = instancevariable1425;
instancevariable1426 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout1808)->values[1] = instancevariable1426;
instancevariable1427 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout1808)->values[2] = instancevariable1427;
class976 = (Object)new_Class_withMeta((Object)class975, objectlayout1808, objectlayout1807);
((Type_Class)class976)->name = (Type_Symbol)symbol7673;
metaclass976 = (Object)HEADER(class976);
objectlayout1809 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1809)->values[0] = instancevariable1412;
((Type_Array)objectlayout1809)->values[1] = instancevariable1413;
((Type_Array)objectlayout1809)->values[2] = instancevariable1414;
((Type_Array)objectlayout1809)->values[3] = instancevariable1415;
((Type_Array)objectlayout1809)->values[4] = instancevariable1416;
symbol7672 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout1810 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1810)->values[0] = instancevariable1425;
((Type_Array)objectlayout1810)->values[1] = instancevariable1426;
((Type_Array)objectlayout1810)->values[2] = instancevariable1427;
class977 = (Object)new_Class_withMeta((Object)class976, objectlayout1810, objectlayout1809);
((Type_Class)class977)->name = (Type_Symbol)symbol7672;
metaclass977 = (Object)HEADER(class977);
objectlayout1811 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1811)->values[0] = instancevariable1412;
((Type_Array)objectlayout1811)->values[1] = instancevariable1413;
((Type_Array)objectlayout1811)->values[2] = instancevariable1414;
((Type_Array)objectlayout1811)->values[3] = instancevariable1415;
((Type_Array)objectlayout1811)->values[4] = instancevariable1416;
symbol7834 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout1812 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable1428 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout1812)->values[0] = instancevariable1428;
instancevariable1429 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout1812)->values[1] = instancevariable1429;
class978 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1812, objectlayout1811);
((Type_Class)class978)->name = (Type_Symbol)symbol7834;
metaclass978 = (Object)HEADER(class978);
objectlayout1813 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1813)->values[0] = instancevariable1412;
((Type_Array)objectlayout1813)->values[1] = instancevariable1413;
((Type_Array)objectlayout1813)->values[2] = instancevariable1414;
((Type_Array)objectlayout1813)->values[3] = instancevariable1415;
((Type_Array)objectlayout1813)->values[4] = instancevariable1416;
symbol7838 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout1814 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1814)->values[0] = instancevariable1428;
((Type_Array)objectlayout1814)->values[1] = instancevariable1429;
instancevariable1430 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout1814)->values[2] = instancevariable1430;
instancevariable1431 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1814)->values[3] = instancevariable1431;
class979 = (Object)new_Class_withMeta((Object)class978, objectlayout1814, objectlayout1813);
((Type_Class)class979)->name = (Type_Symbol)symbol7838;
metaclass979 = (Object)HEADER(class979);
objectlayout1815 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1815)->values[0] = instancevariable1412;
((Type_Array)objectlayout1815)->values[1] = instancevariable1413;
((Type_Array)objectlayout1815)->values[2] = instancevariable1414;
((Type_Array)objectlayout1815)->values[3] = instancevariable1415;
((Type_Array)objectlayout1815)->values[4] = instancevariable1416;
symbol7850 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout1816 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1816)->values[0] = instancevariable1428;
((Type_Array)objectlayout1816)->values[1] = instancevariable1429;
((Type_Array)objectlayout1816)->values[2] = instancevariable1430;
((Type_Array)objectlayout1816)->values[3] = instancevariable1431;
class980 = (Object)new_Class_withMeta((Object)class979, objectlayout1816, objectlayout1815);
((Type_Class)class980)->name = (Type_Symbol)symbol7850;
metaclass980 = (Object)HEADER(class980);
objectlayout1817 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1817)->values[0] = instancevariable1412;
((Type_Array)objectlayout1817)->values[1] = instancevariable1413;
((Type_Array)objectlayout1817)->values[2] = instancevariable1414;
((Type_Array)objectlayout1817)->values[3] = instancevariable1415;
((Type_Array)objectlayout1817)->values[4] = instancevariable1416;
symbol7842 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout1818 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1818)->values[0] = instancevariable1428;
((Type_Array)objectlayout1818)->values[1] = instancevariable1429;
instancevariable1432 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout1818)->values[2] = instancevariable1432;
instancevariable1433 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1818)->values[3] = instancevariable1433;
class981 = (Object)new_Class_withMeta((Object)class978, objectlayout1818, objectlayout1817);
((Type_Class)class981)->name = (Type_Symbol)symbol7842;
metaclass981 = (Object)HEADER(class981);
objectlayout1819 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1819)->values[0] = instancevariable1412;
((Type_Array)objectlayout1819)->values[1] = instancevariable1413;
((Type_Array)objectlayout1819)->values[2] = instancevariable1414;
((Type_Array)objectlayout1819)->values[3] = instancevariable1415;
((Type_Array)objectlayout1819)->values[4] = instancevariable1416;
symbol7881 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class982 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1819);
((Type_Class)class982)->name = (Type_Symbol)symbol7881;
metaclass982 = (Object)HEADER(class982);
objectlayout1820 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1820)->values[0] = instancevariable1412;
((Type_Array)objectlayout1820)->values[1] = instancevariable1413;
((Type_Array)objectlayout1820)->values[2] = instancevariable1414;
((Type_Array)objectlayout1820)->values[3] = instancevariable1415;
((Type_Array)objectlayout1820)->values[4] = instancevariable1416;
symbol7878 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout1821 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1434 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout1821)->values[0] = instancevariable1434;
class983 = (Object)new_Class_withMeta((Object)class982, objectlayout1821, objectlayout1820);
((Type_Class)class983)->name = (Type_Symbol)symbol7878;
metaclass983 = (Object)HEADER(class983);
objectlayout1822 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1822)->values[0] = instancevariable1412;
((Type_Array)objectlayout1822)->values[1] = instancevariable1413;
((Type_Array)objectlayout1822)->values[2] = instancevariable1414;
((Type_Array)objectlayout1822)->values[3] = instancevariable1415;
((Type_Array)objectlayout1822)->values[4] = instancevariable1416;
symbol7552 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout1823 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1823)->values[0] = instancevariable1425;
((Type_Array)objectlayout1823)->values[1] = instancevariable1426;
((Type_Array)objectlayout1823)->values[2] = instancevariable1427;
instancevariable1435 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout1823)->values[3] = instancevariable1435;
instancevariable1436 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout1823)->values[4] = instancevariable1436;
class984 = (Object)new_Class_withMeta((Object)class977, objectlayout1823, objectlayout1822);
((Type_Class)class984)->name = (Type_Symbol)symbol7552;
metaclass984 = (Object)HEADER(class984);
objectlayout1824 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1824)->values[0] = instancevariable1412;
((Type_Array)objectlayout1824)->values[1] = instancevariable1413;
((Type_Array)objectlayout1824)->values[2] = instancevariable1414;
((Type_Array)objectlayout1824)->values[3] = instancevariable1415;
((Type_Array)objectlayout1824)->values[4] = instancevariable1416;
symbol7879 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class985 = (Object)new_Class_withMeta((Object)class982, empty_object_layout, objectlayout1824);
((Type_Class)class985)->name = (Type_Symbol)symbol7879;
metaclass985 = (Object)HEADER(class985);
objectlayout1825 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1825)->values[0] = instancevariable1412;
((Type_Array)objectlayout1825)->values[1] = instancevariable1413;
((Type_Array)objectlayout1825)->values[2] = instancevariable1414;
((Type_Array)objectlayout1825)->values[3] = instancevariable1415;
((Type_Array)objectlayout1825)->values[4] = instancevariable1416;
symbol7852 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout1826 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1826)->values[0] = instancevariable1428;
((Type_Array)objectlayout1826)->values[1] = instancevariable1429;
instancevariable1437 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout1826)->values[2] = instancevariable1437;
instancevariable1438 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1826)->values[3] = instancevariable1438;
class986 = (Object)new_Class_withMeta((Object)class978, objectlayout1826, objectlayout1825);
((Type_Class)class986)->name = (Type_Symbol)symbol7852;
metaclass986 = (Object)HEADER(class986);
objectlayout1827 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1827)->values[0] = instancevariable1412;
((Type_Array)objectlayout1827)->values[1] = instancevariable1413;
((Type_Array)objectlayout1827)->values[2] = instancevariable1414;
((Type_Array)objectlayout1827)->values[3] = instancevariable1415;
((Type_Array)objectlayout1827)->values[4] = instancevariable1416;
symbol7837 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout1828 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1828)->values[0] = instancevariable1428;
((Type_Array)objectlayout1828)->values[1] = instancevariable1429;
instancevariable1439 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout1828)->values[2] = instancevariable1439;
class987 = (Object)new_Class_withMeta((Object)class978, objectlayout1828, objectlayout1827);
((Type_Class)class987)->name = (Type_Symbol)symbol7837;
metaclass987 = (Object)HEADER(class987);
objectlayout1829 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1829)->values[0] = instancevariable1412;
((Type_Array)objectlayout1829)->values[1] = instancevariable1413;
((Type_Array)objectlayout1829)->values[2] = instancevariable1414;
((Type_Array)objectlayout1829)->values[3] = instancevariable1415;
((Type_Array)objectlayout1829)->values[4] = instancevariable1416;
symbol7618 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout1830 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1830)->values[0] = instancevariable1428;
((Type_Array)objectlayout1830)->values[1] = instancevariable1429;
instancevariable1440 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout1830)->values[2] = instancevariable1440;
instancevariable1441 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout1830)->values[3] = instancevariable1441;
instancevariable1442 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout1830)->values[4] = instancevariable1442;
instancevariable1443 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout1830)->values[5] = instancevariable1443;
class988 = (Object)new_Class_withMeta((Object)class978, objectlayout1830, objectlayout1829);
((Type_Class)class988)->name = (Type_Symbol)symbol7618;
metaclass988 = (Object)HEADER(class988);
objectlayout1831 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1831)->values[0] = instancevariable1412;
((Type_Array)objectlayout1831)->values[1] = instancevariable1413;
((Type_Array)objectlayout1831)->values[2] = instancevariable1414;
((Type_Array)objectlayout1831)->values[3] = instancevariable1415;
((Type_Array)objectlayout1831)->values[4] = instancevariable1416;
instancevariable1444 = (Object)new_AST_InstVariable(5, L"uidCounter");
((Type_Array)objectlayout1831)->values[5] = instancevariable1444;
symbol7685 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout1832 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1445 = (Object)new_AST_InstVariable(0, L"sourceObject");
((Type_Array)objectlayout1832)->values[0] = instancevariable1445;
instancevariable1446 = (Object)new_AST_InstVariable(1, L"uid");
((Type_Array)objectlayout1832)->values[1] = instancevariable1446;
instancevariable1447 = (Object)new_AST_InstVariable(2, L"id");
((Type_Array)objectlayout1832)->values[2] = instancevariable1447;
class989 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1832, objectlayout1831);
((Type_Class)class989)->name = (Type_Symbol)symbol7685;
metaclass989 = (Object)HEADER(class989);
objectlayout1833 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1833)->values[0] = instancevariable1412;
((Type_Array)objectlayout1833)->values[1] = instancevariable1413;
((Type_Array)objectlayout1833)->values[2] = instancevariable1414;
((Type_Array)objectlayout1833)->values[3] = instancevariable1415;
((Type_Array)objectlayout1833)->values[4] = instancevariable1416;
((Type_Array)objectlayout1833)->values[5] = instancevariable1444;
symbol7684 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout1834 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1834)->values[0] = instancevariable1445;
((Type_Array)objectlayout1834)->values[1] = instancevariable1446;
((Type_Array)objectlayout1834)->values[2] = instancevariable1447;
class990 = (Object)new_Class_withMeta((Object)class989, objectlayout1834, objectlayout1833);
((Type_Class)class990)->name = (Type_Symbol)symbol7684;
metaclass990 = (Object)HEADER(class990);
objectlayout1835 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1835)->values[0] = instancevariable1412;
((Type_Array)objectlayout1835)->values[1] = instancevariable1413;
((Type_Array)objectlayout1835)->values[2] = instancevariable1414;
((Type_Array)objectlayout1835)->values[3] = instancevariable1415;
((Type_Array)objectlayout1835)->values[4] = instancevariable1416;
((Type_Array)objectlayout1835)->values[5] = instancevariable1444;
symbol7558 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout1836 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1836)->values[0] = instancevariable1445;
((Type_Array)objectlayout1836)->values[1] = instancevariable1446;
((Type_Array)objectlayout1836)->values[2] = instancevariable1447;
instancevariable1448 = (Object)new_AST_InstVariable(3, L"number");
((Type_Array)objectlayout1836)->values[3] = instancevariable1448;
instancevariable1449 = (Object)new_AST_InstVariable(4, L"base");
((Type_Array)objectlayout1836)->values[4] = instancevariable1449;
class991 = (Object)new_Class_withMeta((Object)class990, objectlayout1836, objectlayout1835);
((Type_Class)class991)->name = (Type_Symbol)symbol7558;
metaclass991 = (Object)HEADER(class991);
objectlayout1837 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1837)->values[0] = instancevariable1412;
((Type_Array)objectlayout1837)->values[1] = instancevariable1413;
((Type_Array)objectlayout1837)->values[2] = instancevariable1414;
((Type_Array)objectlayout1837)->values[3] = instancevariable1415;
((Type_Array)objectlayout1837)->values[4] = instancevariable1416;
((Type_Array)objectlayout1837)->values[5] = instancevariable1444;
symbol7732 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout1838 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1838)->values[0] = instancevariable1445;
((Type_Array)objectlayout1838)->values[1] = instancevariable1446;
((Type_Array)objectlayout1838)->values[2] = instancevariable1447;
instancevariable1450 = (Object)new_AST_InstVariable(3, L"selector");
((Type_Array)objectlayout1838)->values[3] = instancevariable1450;
class992 = (Object)new_Class_withMeta((Object)class989, objectlayout1838, objectlayout1837);
((Type_Class)class992)->name = (Type_Symbol)symbol7732;
metaclass992 = (Object)HEADER(class992);
objectlayout1839 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1839)->values[0] = instancevariable1412;
((Type_Array)objectlayout1839)->values[1] = instancevariable1413;
((Type_Array)objectlayout1839)->values[2] = instancevariable1414;
((Type_Array)objectlayout1839)->values[3] = instancevariable1415;
((Type_Array)objectlayout1839)->values[4] = instancevariable1416;
((Type_Array)objectlayout1839)->values[5] = instancevariable1444;
symbol7615 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout1840 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1840)->values[0] = instancevariable1445;
((Type_Array)objectlayout1840)->values[1] = instancevariable1446;
((Type_Array)objectlayout1840)->values[2] = instancevariable1447;
((Type_Array)objectlayout1840)->values[3] = instancevariable1450;
instancevariable1451 = (Object)new_AST_InstVariable(4, L"keywords");
((Type_Array)objectlayout1840)->values[4] = instancevariable1451;
class993 = (Object)new_Class_withMeta((Object)class992, objectlayout1840, objectlayout1839);
((Type_Class)class993)->name = (Type_Symbol)symbol7615;
metaclass993 = (Object)HEADER(class993);
objectlayout1841 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1841)->values[0] = instancevariable1412;
((Type_Array)objectlayout1841)->values[1] = instancevariable1413;
((Type_Array)objectlayout1841)->values[2] = instancevariable1414;
((Type_Array)objectlayout1841)->values[3] = instancevariable1415;
((Type_Array)objectlayout1841)->values[4] = instancevariable1416;
((Type_Array)objectlayout1841)->values[5] = instancevariable1444;
symbol7587 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout1842 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1842)->values[0] = instancevariable1445;
((Type_Array)objectlayout1842)->values[1] = instancevariable1446;
((Type_Array)objectlayout1842)->values[2] = instancevariable1447;
((Type_Array)objectlayout1842)->values[3] = instancevariable1450;
class994 = (Object)new_Class_withMeta((Object)class992, objectlayout1842, objectlayout1841);
((Type_Class)class994)->name = (Type_Symbol)symbol7587;
metaclass994 = (Object)HEADER(class994);
objectlayout1843 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1843)->values[0] = instancevariable1412;
((Type_Array)objectlayout1843)->values[1] = instancevariable1413;
((Type_Array)objectlayout1843)->values[2] = instancevariable1414;
((Type_Array)objectlayout1843)->values[3] = instancevariable1415;
((Type_Array)objectlayout1843)->values[4] = instancevariable1416;
((Type_Array)objectlayout1843)->values[5] = instancevariable1444;
symbol7607 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout1844 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1844)->values[0] = instancevariable1445;
((Type_Array)objectlayout1844)->values[1] = instancevariable1446;
((Type_Array)objectlayout1844)->values[2] = instancevariable1447;
((Type_Array)objectlayout1844)->values[3] = instancevariable1450;
class995 = (Object)new_Class_withMeta((Object)class994, objectlayout1844, objectlayout1843);
((Type_Class)class995)->name = (Type_Symbol)symbol7607;
metaclass995 = (Object)HEADER(class995);
objectlayout1845 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1845)->values[0] = instancevariable1412;
((Type_Array)objectlayout1845)->values[1] = instancevariable1413;
((Type_Array)objectlayout1845)->values[2] = instancevariable1414;
((Type_Array)objectlayout1845)->values[3] = instancevariable1415;
((Type_Array)objectlayout1845)->values[4] = instancevariable1416;
((Type_Array)objectlayout1845)->values[5] = instancevariable1444;
symbol7559 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout1846 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1846)->values[0] = instancevariable1445;
((Type_Array)objectlayout1846)->values[1] = instancevariable1446;
((Type_Array)objectlayout1846)->values[2] = instancevariable1447;
instancevariable1452 = (Object)new_AST_InstVariable(3, L"symbol");
((Type_Array)objectlayout1846)->values[3] = instancevariable1452;
class996 = (Object)new_Class_withMeta((Object)class990, objectlayout1846, objectlayout1845);
((Type_Class)class996)->name = (Type_Symbol)symbol7559;
metaclass996 = (Object)HEADER(class996);
objectlayout1847 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1847)->values[0] = instancevariable1412;
((Type_Array)objectlayout1847)->values[1] = instancevariable1413;
((Type_Array)objectlayout1847)->values[2] = instancevariable1414;
((Type_Array)objectlayout1847)->values[3] = instancevariable1415;
((Type_Array)objectlayout1847)->values[4] = instancevariable1416;
((Type_Array)objectlayout1847)->values[5] = instancevariable1444;
symbol7582 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout1848 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1848)->values[0] = instancevariable1445;
((Type_Array)objectlayout1848)->values[1] = instancevariable1446;
((Type_Array)objectlayout1848)->values[2] = instancevariable1447;
((Type_Array)objectlayout1848)->values[3] = instancevariable1450;
((Type_Array)objectlayout1848)->values[4] = instancevariable1451;
instancevariable1453 = (Object)new_AST_InstVariable(5, L"parameters");
((Type_Array)objectlayout1848)->values[5] = instancevariable1453;
class997 = (Object)new_Class_withMeta((Object)class993, objectlayout1848, objectlayout1847);
((Type_Class)class997)->name = (Type_Symbol)symbol7582;
metaclass997 = (Object)HEADER(class997);
objectlayout1849 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1849)->values[0] = instancevariable1412;
((Type_Array)objectlayout1849)->values[1] = instancevariable1413;
((Type_Array)objectlayout1849)->values[2] = instancevariable1414;
((Type_Array)objectlayout1849)->values[3] = instancevariable1415;
((Type_Array)objectlayout1849)->values[4] = instancevariable1416;
((Type_Array)objectlayout1849)->values[5] = instancevariable1444;
symbol7731 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout1850 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1850)->values[0] = instancevariable1445;
((Type_Array)objectlayout1850)->values[1] = instancevariable1446;
((Type_Array)objectlayout1850)->values[2] = instancevariable1447;
((Type_Array)objectlayout1850)->values[3] = instancevariable1450;
class998 = (Object)new_Class_withMeta((Object)class992, objectlayout1850, objectlayout1849);
((Type_Class)class998)->name = (Type_Symbol)symbol7731;
metaclass998 = (Object)HEADER(class998);
objectlayout1851 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1851)->values[0] = instancevariable1412;
((Type_Array)objectlayout1851)->values[1] = instancevariable1413;
((Type_Array)objectlayout1851)->values[2] = instancevariable1414;
((Type_Array)objectlayout1851)->values[3] = instancevariable1415;
((Type_Array)objectlayout1851)->values[4] = instancevariable1416;
((Type_Array)objectlayout1851)->values[5] = instancevariable1444;
symbol7600 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout1852 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1852)->values[0] = instancevariable1445;
((Type_Array)objectlayout1852)->values[1] = instancevariable1446;
((Type_Array)objectlayout1852)->values[2] = instancevariable1447;
class999 = (Object)new_Class_withMeta((Object)class989, objectlayout1852, objectlayout1851);
((Type_Class)class999)->name = (Type_Symbol)symbol7600;
metaclass999 = (Object)HEADER(class999);
objectlayout1853 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1853)->values[0] = instancevariable1412;
((Type_Array)objectlayout1853)->values[1] = instancevariable1413;
((Type_Array)objectlayout1853)->values[2] = instancevariable1414;
((Type_Array)objectlayout1853)->values[3] = instancevariable1415;
((Type_Array)objectlayout1853)->values[4] = instancevariable1416;
((Type_Array)objectlayout1853)->values[5] = instancevariable1444;
symbol7599 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout1854 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1854)->values[0] = instancevariable1445;
((Type_Array)objectlayout1854)->values[1] = instancevariable1446;
((Type_Array)objectlayout1854)->values[2] = instancevariable1447;
class1000 = (Object)new_Class_withMeta((Object)class989, objectlayout1854, objectlayout1853);
((Type_Class)class1000)->name = (Type_Symbol)symbol7599;
metaclass1000 = (Object)HEADER(class1000);
objectlayout1855 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1855)->values[0] = instancevariable1412;
((Type_Array)objectlayout1855)->values[1] = instancevariable1413;
((Type_Array)objectlayout1855)->values[2] = instancevariable1414;
((Type_Array)objectlayout1855)->values[3] = instancevariable1415;
((Type_Array)objectlayout1855)->values[4] = instancevariable1416;
((Type_Array)objectlayout1855)->values[5] = instancevariable1444;
symbol7564 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout1856 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1856)->values[0] = instancevariable1445;
((Type_Array)objectlayout1856)->values[1] = instancevariable1446;
((Type_Array)objectlayout1856)->values[2] = instancevariable1447;
instancevariable1454 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1856)->values[3] = instancevariable1454;
instancevariable1455 = (Object)new_AST_InstVariable(4, L"type");
((Type_Array)objectlayout1856)->values[4] = instancevariable1455;
class1001 = (Object)new_Class_withMeta((Object)class989, objectlayout1856, objectlayout1855);
((Type_Class)class1001)->name = (Type_Symbol)symbol7564;
metaclass1001 = (Object)HEADER(class1001);
objectlayout1857 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1857)->values[0] = instancevariable1412;
((Type_Array)objectlayout1857)->values[1] = instancevariable1413;
((Type_Array)objectlayout1857)->values[2] = instancevariable1414;
((Type_Array)objectlayout1857)->values[3] = instancevariable1415;
((Type_Array)objectlayout1857)->values[4] = instancevariable1416;
((Type_Array)objectlayout1857)->values[5] = instancevariable1444;
symbol7726 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout1858 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1858)->values[0] = instancevariable1445;
((Type_Array)objectlayout1858)->values[1] = instancevariable1446;
((Type_Array)objectlayout1858)->values[2] = instancevariable1447;
class1002 = (Object)new_Class_withMeta((Object)class989, objectlayout1858, objectlayout1857);
((Type_Class)class1002)->name = (Type_Symbol)symbol7726;
metaclass1002 = (Object)HEADER(class1002);
objectlayout1859 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1859)->values[0] = instancevariable1412;
((Type_Array)objectlayout1859)->values[1] = instancevariable1413;
((Type_Array)objectlayout1859)->values[2] = instancevariable1414;
((Type_Array)objectlayout1859)->values[3] = instancevariable1415;
((Type_Array)objectlayout1859)->values[4] = instancevariable1416;
((Type_Array)objectlayout1859)->values[5] = instancevariable1444;
symbol7817 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout1860 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1860)->values[0] = instancevariable1445;
((Type_Array)objectlayout1860)->values[1] = instancevariable1446;
((Type_Array)objectlayout1860)->values[2] = instancevariable1447;
instancevariable1456 = (Object)new_AST_InstVariable(3, L"expressions");
((Type_Array)objectlayout1860)->values[3] = instancevariable1456;
class1003 = (Object)new_Class_withMeta((Object)class1002, objectlayout1860, objectlayout1859);
((Type_Class)class1003)->name = (Type_Symbol)symbol7817;
metaclass1003 = (Object)HEADER(class1003);
objectlayout1861 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1861)->values[0] = instancevariable1412;
((Type_Array)objectlayout1861)->values[1] = instancevariable1413;
((Type_Array)objectlayout1861)->values[2] = instancevariable1414;
((Type_Array)objectlayout1861)->values[3] = instancevariable1415;
((Type_Array)objectlayout1861)->values[4] = instancevariable1416;
((Type_Array)objectlayout1861)->values[5] = instancevariable1444;
symbol7573 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout1862 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1862)->values[0] = instancevariable1445;
((Type_Array)objectlayout1862)->values[1] = instancevariable1446;
((Type_Array)objectlayout1862)->values[2] = instancevariable1447;
instancevariable1457 = (Object)new_AST_InstVariable(3, L"message");
((Type_Array)objectlayout1862)->values[3] = instancevariable1457;
instancevariable1458 = (Object)new_AST_InstVariable(4, L"annotations");
((Type_Array)objectlayout1862)->values[4] = instancevariable1458;
instancevariable1459 = (Object)new_AST_InstVariable(5, L"temporaries");
((Type_Array)objectlayout1862)->values[5] = instancevariable1459;
instancevariable1460 = (Object)new_AST_InstVariable(6, L"statements");
((Type_Array)objectlayout1862)->values[6] = instancevariable1460;
class1004 = (Object)new_Class_withMeta((Object)class989, objectlayout1862, objectlayout1861);
((Type_Class)class1004)->name = (Type_Symbol)symbol7573;
metaclass1004 = (Object)HEADER(class1004);
objectlayout1863 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1863)->values[0] = instancevariable1412;
((Type_Array)objectlayout1863)->values[1] = instancevariable1413;
((Type_Array)objectlayout1863)->values[2] = instancevariable1414;
((Type_Array)objectlayout1863)->values[3] = instancevariable1415;
((Type_Array)objectlayout1863)->values[4] = instancevariable1416;
((Type_Array)objectlayout1863)->values[5] = instancevariable1444;
symbol7602 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout1864 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1864)->values[0] = instancevariable1445;
((Type_Array)objectlayout1864)->values[1] = instancevariable1446;
((Type_Array)objectlayout1864)->values[2] = instancevariable1447;
instancevariable1461 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout1864)->values[3] = instancevariable1461;
instancevariable1462 = (Object)new_AST_InstVariable(4, L"temporaries");
((Type_Array)objectlayout1864)->values[4] = instancevariable1462;
instancevariable1463 = (Object)new_AST_InstVariable(5, L"statements");
((Type_Array)objectlayout1864)->values[5] = instancevariable1463;
class1005 = (Object)new_Class_withMeta((Object)class989, objectlayout1864, objectlayout1863);
((Type_Class)class1005)->name = (Type_Symbol)symbol7602;
metaclass1005 = (Object)HEADER(class1005);
objectlayout1865 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1865)->values[0] = instancevariable1412;
((Type_Array)objectlayout1865)->values[1] = instancevariable1413;
((Type_Array)objectlayout1865)->values[2] = instancevariable1414;
((Type_Array)objectlayout1865)->values[3] = instancevariable1415;
((Type_Array)objectlayout1865)->values[4] = instancevariable1416;
((Type_Array)objectlayout1865)->values[5] = instancevariable1444;
symbol7773 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout1866 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1866)->values[0] = instancevariable1445;
((Type_Array)objectlayout1866)->values[1] = instancevariable1446;
((Type_Array)objectlayout1866)->values[2] = instancevariable1447;
((Type_Array)objectlayout1866)->values[3] = instancevariable1450;
class1006 = (Object)new_Class_withMeta((Object)class994, objectlayout1866, objectlayout1865);
((Type_Class)class1006)->name = (Type_Symbol)symbol7773;
metaclass1006 = (Object)HEADER(class1006);
objectlayout1867 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1867)->values[0] = instancevariable1412;
((Type_Array)objectlayout1867)->values[1] = instancevariable1413;
((Type_Array)objectlayout1867)->values[2] = instancevariable1414;
((Type_Array)objectlayout1867)->values[3] = instancevariable1415;
((Type_Array)objectlayout1867)->values[4] = instancevariable1416;
((Type_Array)objectlayout1867)->values[5] = instancevariable1444;
symbol7554 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout1868 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1868)->values[0] = instancevariable1445;
((Type_Array)objectlayout1868)->values[1] = instancevariable1446;
((Type_Array)objectlayout1868)->values[2] = instancevariable1447;
instancevariable1464 = (Object)new_AST_InstVariable(3, L"literals");
((Type_Array)objectlayout1868)->values[3] = instancevariable1464;
class1007 = (Object)new_Class_withMeta((Object)class990, objectlayout1868, objectlayout1867);
((Type_Class)class1007)->name = (Type_Symbol)symbol7554;
metaclass1007 = (Object)HEADER(class1007);
objectlayout1869 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1869)->values[0] = instancevariable1412;
((Type_Array)objectlayout1869)->values[1] = instancevariable1413;
((Type_Array)objectlayout1869)->values[2] = instancevariable1414;
((Type_Array)objectlayout1869)->values[3] = instancevariable1415;
((Type_Array)objectlayout1869)->values[4] = instancevariable1416;
((Type_Array)objectlayout1869)->values[5] = instancevariable1444;
symbol7585 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout1870 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1870)->values[0] = instancevariable1445;
((Type_Array)objectlayout1870)->values[1] = instancevariable1446;
((Type_Array)objectlayout1870)->values[2] = instancevariable1447;
instancevariable1465 = (Object)new_AST_InstVariable(3, L"variable");
((Type_Array)objectlayout1870)->values[3] = instancevariable1465;
instancevariable1466 = (Object)new_AST_InstVariable(4, L"expression");
((Type_Array)objectlayout1870)->values[4] = instancevariable1466;
class1008 = (Object)new_Class_withMeta((Object)class1002, objectlayout1870, objectlayout1869);
((Type_Class)class1008)->name = (Type_Symbol)symbol7585;
metaclass1008 = (Object)HEADER(class1008);
objectlayout1871 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1871)->values[0] = instancevariable1412;
((Type_Array)objectlayout1871)->values[1] = instancevariable1413;
((Type_Array)objectlayout1871)->values[2] = instancevariable1414;
((Type_Array)objectlayout1871)->values[3] = instancevariable1415;
((Type_Array)objectlayout1871)->values[4] = instancevariable1416;
((Type_Array)objectlayout1871)->values[5] = instancevariable1444;
symbol7566 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout1872 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1872)->values[0] = instancevariable1445;
((Type_Array)objectlayout1872)->values[1] = instancevariable1446;
((Type_Array)objectlayout1872)->values[2] = instancevariable1447;
instancevariable1467 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout1872)->values[3] = instancevariable1467;
instancevariable1468 = (Object)new_AST_InstVariable(4, L"cascades");
((Type_Array)objectlayout1872)->values[4] = instancevariable1468;
class1009 = (Object)new_Class_withMeta((Object)class1002, objectlayout1872, objectlayout1871);
((Type_Class)class1009)->name = (Type_Symbol)symbol7566;
metaclass1009 = (Object)HEADER(class1009);
objectlayout1873 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1873)->values[0] = instancevariable1412;
((Type_Array)objectlayout1873)->values[1] = instancevariable1413;
((Type_Array)objectlayout1873)->values[2] = instancevariable1414;
((Type_Array)objectlayout1873)->values[3] = instancevariable1415;
((Type_Array)objectlayout1873)->values[4] = instancevariable1416;
((Type_Array)objectlayout1873)->values[5] = instancevariable1444;
symbol7575 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout1874 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1874)->values[0] = instancevariable1445;
((Type_Array)objectlayout1874)->values[1] = instancevariable1446;
((Type_Array)objectlayout1874)->values[2] = instancevariable1447;
((Type_Array)objectlayout1874)->values[3] = instancevariable1450;
instancevariable1469 = (Object)new_AST_InstVariable(4, L"parameter");
((Type_Array)objectlayout1874)->values[4] = instancevariable1469;
class1010 = (Object)new_Class_withMeta((Object)class998, objectlayout1874, objectlayout1873);
((Type_Class)class1010)->name = (Type_Symbol)symbol7575;
metaclass1010 = (Object)HEADER(class1010);
objectlayout1875 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1875)->values[0] = instancevariable1412;
((Type_Array)objectlayout1875)->values[1] = instancevariable1413;
((Type_Array)objectlayout1875)->values[2] = instancevariable1414;
((Type_Array)objectlayout1875)->values[3] = instancevariable1415;
((Type_Array)objectlayout1875)->values[4] = instancevariable1416;
((Type_Array)objectlayout1875)->values[5] = instancevariable1444;
symbol7567 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout1876 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1876)->values[0] = instancevariable1445;
((Type_Array)objectlayout1876)->values[1] = instancevariable1446;
((Type_Array)objectlayout1876)->values[2] = instancevariable1447;
((Type_Array)objectlayout1876)->values[3] = instancevariable1450;
instancevariable1470 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1876)->values[4] = instancevariable1470;
instancevariable1471 = (Object)new_AST_InstVariable(5, L"argument");
((Type_Array)objectlayout1876)->values[5] = instancevariable1471;
class1011 = (Object)new_Class_withMeta((Object)class998, objectlayout1876, objectlayout1875);
((Type_Class)class1011)->name = (Type_Symbol)symbol7567;
metaclass1011 = (Object)HEADER(class1011);
objectlayout1877 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1877)->values[0] = instancevariable1412;
((Type_Array)objectlayout1877)->values[1] = instancevariable1413;
((Type_Array)objectlayout1877)->values[2] = instancevariable1414;
((Type_Array)objectlayout1877)->values[3] = instancevariable1415;
((Type_Array)objectlayout1877)->values[4] = instancevariable1416;
((Type_Array)objectlayout1877)->values[5] = instancevariable1444;
symbol7595 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout1878 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1878)->values[0] = instancevariable1445;
((Type_Array)objectlayout1878)->values[1] = instancevariable1446;
((Type_Array)objectlayout1878)->values[2] = instancevariable1447;
instancevariable1472 = (Object)new_AST_InstVariable(3, L"expression");
((Type_Array)objectlayout1878)->values[3] = instancevariable1472;
class1012 = (Object)new_Class_withMeta((Object)class1002, objectlayout1878, objectlayout1877);
((Type_Class)class1012)->name = (Type_Symbol)symbol7595;
metaclass1012 = (Object)HEADER(class1012);
objectlayout1879 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1879)->values[0] = instancevariable1412;
((Type_Array)objectlayout1879)->values[1] = instancevariable1413;
((Type_Array)objectlayout1879)->values[2] = instancevariable1414;
((Type_Array)objectlayout1879)->values[3] = instancevariable1415;
((Type_Array)objectlayout1879)->values[4] = instancevariable1416;
((Type_Array)objectlayout1879)->values[5] = instancevariable1444;
symbol7560 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout1880 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1880)->values[0] = instancevariable1445;
((Type_Array)objectlayout1880)->values[1] = instancevariable1446;
((Type_Array)objectlayout1880)->values[2] = instancevariable1447;
instancevariable1473 = (Object)new_AST_InstVariable(3, L"string");
((Type_Array)objectlayout1880)->values[3] = instancevariable1473;
class1013 = (Object)new_Class_withMeta((Object)class990, objectlayout1880, objectlayout1879);
((Type_Class)class1013)->name = (Type_Symbol)symbol7560;
metaclass1013 = (Object)HEADER(class1013);
objectlayout1881 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1881)->values[0] = instancevariable1412;
((Type_Array)objectlayout1881)->values[1] = instancevariable1413;
((Type_Array)objectlayout1881)->values[2] = instancevariable1414;
((Type_Array)objectlayout1881)->values[3] = instancevariable1415;
((Type_Array)objectlayout1881)->values[4] = instancevariable1416;
((Type_Array)objectlayout1881)->values[5] = instancevariable1444;
symbol7568 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout1882 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1882)->values[0] = instancevariable1445;
((Type_Array)objectlayout1882)->values[1] = instancevariable1446;
((Type_Array)objectlayout1882)->values[2] = instancevariable1447;
((Type_Array)objectlayout1882)->values[3] = instancevariable1450;
((Type_Array)objectlayout1882)->values[4] = instancevariable1451;
instancevariable1474 = (Object)new_AST_InstVariable(5, L"receiver");
((Type_Array)objectlayout1882)->values[5] = instancevariable1474;
instancevariable1475 = (Object)new_AST_InstVariable(6, L"arguments");
((Type_Array)objectlayout1882)->values[6] = instancevariable1475;
class1014 = (Object)new_Class_withMeta((Object)class993, objectlayout1882, objectlayout1881);
((Type_Class)class1014)->name = (Type_Symbol)symbol7568;
metaclass1014 = (Object)HEADER(class1014);
objectlayout1883 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1883)->values[0] = instancevariable1412;
((Type_Array)objectlayout1883)->values[1] = instancevariable1413;
((Type_Array)objectlayout1883)->values[2] = instancevariable1414;
((Type_Array)objectlayout1883)->values[3] = instancevariable1415;
((Type_Array)objectlayout1883)->values[4] = instancevariable1416;
((Type_Array)objectlayout1883)->values[5] = instancevariable1444;
symbol7625 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout1884 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1884)->values[0] = instancevariable1445;
((Type_Array)objectlayout1884)->values[1] = instancevariable1446;
((Type_Array)objectlayout1884)->values[2] = instancevariable1447;
instancevariable1476 = (Object)new_AST_InstVariable(3, L"char");
((Type_Array)objectlayout1884)->values[3] = instancevariable1476;
class1015 = (Object)new_Class_withMeta((Object)class990, objectlayout1884, objectlayout1883);
((Type_Class)class1015)->name = (Type_Symbol)symbol7625;
metaclass1015 = (Object)HEADER(class1015);
objectlayout1885 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1885)->values[0] = instancevariable1412;
((Type_Array)objectlayout1885)->values[1] = instancevariable1413;
((Type_Array)objectlayout1885)->values[2] = instancevariable1414;
((Type_Array)objectlayout1885)->values[3] = instancevariable1415;
((Type_Array)objectlayout1885)->values[4] = instancevariable1416;
((Type_Array)objectlayout1885)->values[5] = instancevariable1444;
symbol7569 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout1886 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1886)->values[0] = instancevariable1445;
((Type_Array)objectlayout1886)->values[1] = instancevariable1446;
((Type_Array)objectlayout1886)->values[2] = instancevariable1447;
((Type_Array)objectlayout1886)->values[3] = instancevariable1450;
instancevariable1477 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1886)->values[4] = instancevariable1477;
class1016 = (Object)new_Class_withMeta((Object)class994, objectlayout1886, objectlayout1885);
((Type_Class)class1016)->name = (Type_Symbol)symbol7569;
metaclass1016 = (Object)HEADER(class1016);
objectlayout1887 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1887)->values[0] = instancevariable1412;
((Type_Array)objectlayout1887)->values[1] = instancevariable1413;
((Type_Array)objectlayout1887)->values[2] = instancevariable1414;
((Type_Array)objectlayout1887)->values[3] = instancevariable1415;
((Type_Array)objectlayout1887)->values[4] = instancevariable1416;
((Type_Array)objectlayout1887)->values[5] = instancevariable1444;
symbol7606 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout1888 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1888)->values[0] = instancevariable1445;
((Type_Array)objectlayout1888)->values[1] = instancevariable1446;
((Type_Array)objectlayout1888)->values[2] = instancevariable1447;
((Type_Array)objectlayout1888)->values[3] = instancevariable1450;
((Type_Array)objectlayout1888)->values[4] = instancevariable1451;
instancevariable1478 = (Object)new_AST_InstVariable(5, L"arguments");
((Type_Array)objectlayout1888)->values[5] = instancevariable1478;
class1017 = (Object)new_Class_withMeta((Object)class993, objectlayout1888, objectlayout1887);
((Type_Class)class1017)->name = (Type_Symbol)symbol7606;
metaclass1017 = (Object)HEADER(class1017);
objectlayout1889 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1889)->values[0] = instancevariable1412;
((Type_Array)objectlayout1889)->values[1] = instancevariable1413;
((Type_Array)objectlayout1889)->values[2] = instancevariable1414;
((Type_Array)objectlayout1889)->values[3] = instancevariable1415;
((Type_Array)objectlayout1889)->values[4] = instancevariable1416;
symbol7612 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout1890 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1479 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout1890)->values[0] = instancevariable1479;
instancevariable1480 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout1890)->values[1] = instancevariable1480;
instancevariable1481 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout1890)->values[2] = instancevariable1481;
class1018 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1890, objectlayout1889);
((Type_Class)class1018)->name = (Type_Symbol)symbol7612;
metaclass1018 = (Object)HEADER(class1018);
objectlayout1891 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1891)->values[0] = instancevariable1412;
((Type_Array)objectlayout1891)->values[1] = instancevariable1413;
((Type_Array)objectlayout1891)->values[2] = instancevariable1414;
((Type_Array)objectlayout1891)->values[3] = instancevariable1415;
((Type_Array)objectlayout1891)->values[4] = instancevariable1416;
instancevariable1482 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout1891)->values[5] = instancevariable1482;
symbol7536 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout1892 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1483 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout1892)->values[0] = instancevariable1483;
class1019 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1892, objectlayout1891);
((Type_Class)class1019)->name = (Type_Symbol)symbol7536;
metaclass1019 = (Object)HEADER(class1019);
objectlayout1893 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1893)->values[0] = instancevariable1412;
((Type_Array)objectlayout1893)->values[1] = instancevariable1413;
((Type_Array)objectlayout1893)->values[2] = instancevariable1414;
((Type_Array)objectlayout1893)->values[3] = instancevariable1415;
((Type_Array)objectlayout1893)->values[4] = instancevariable1416;
((Type_Array)objectlayout1893)->values[5] = instancevariable1482;
symbol7533 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout1894 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout1894)->values[0] = instancevariable1483;
instancevariable1484 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout1894)->values[1] = instancevariable1484;
class1020 = (Object)new_Class_withMeta((Object)class1019, objectlayout1894, objectlayout1893);
((Type_Class)class1020)->name = (Type_Symbol)symbol7533;
metaclass1020 = (Object)HEADER(class1020);
objectlayout1895 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1895)->values[0] = instancevariable1412;
((Type_Array)objectlayout1895)->values[1] = instancevariable1413;
((Type_Array)objectlayout1895)->values[2] = instancevariable1414;
((Type_Array)objectlayout1895)->values[3] = instancevariable1415;
((Type_Array)objectlayout1895)->values[4] = instancevariable1416;
((Type_Array)objectlayout1895)->values[5] = instancevariable1444;
symbol7863 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout1896 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1896)->values[0] = instancevariable1445;
((Type_Array)objectlayout1896)->values[1] = instancevariable1446;
((Type_Array)objectlayout1896)->values[2] = instancevariable1447;
instancevariable1485 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1896)->values[3] = instancevariable1485;
instancevariable1486 = (Object)new_AST_InstVariable(4, L"scopeId");
((Type_Array)objectlayout1896)->values[4] = instancevariable1486;
instancevariable1487 = (Object)new_AST_InstVariable(5, L"localId");
((Type_Array)objectlayout1896)->values[5] = instancevariable1487;
class1021 = (Object)new_Class_withMeta((Object)class989, objectlayout1896, objectlayout1895);
((Type_Class)class1021)->name = (Type_Symbol)symbol7863;
metaclass1021 = (Object)HEADER(class1021);
objectlayout1897 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1897)->values[0] = instancevariable1412;
((Type_Array)objectlayout1897)->values[1] = instancevariable1413;
((Type_Array)objectlayout1897)->values[2] = instancevariable1414;
((Type_Array)objectlayout1897)->values[3] = instancevariable1415;
((Type_Array)objectlayout1897)->values[4] = instancevariable1416;
((Type_Array)objectlayout1897)->values[5] = instancevariable1444;
symbol7721 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout1898 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1898)->values[0] = instancevariable1445;
((Type_Array)objectlayout1898)->values[1] = instancevariable1446;
((Type_Array)objectlayout1898)->values[2] = instancevariable1447;
((Type_Array)objectlayout1898)->values[3] = instancevariable1485;
((Type_Array)objectlayout1898)->values[4] = instancevariable1486;
((Type_Array)objectlayout1898)->values[5] = instancevariable1487;
instancevariable1488 = (Object)new_AST_InstVariable(6, L"key");
((Type_Array)objectlayout1898)->values[6] = instancevariable1488;
class1022 = (Object)new_Class_withMeta((Object)class1021, objectlayout1898, objectlayout1897);
((Type_Class)class1022)->name = (Type_Symbol)symbol7721;
metaclass1022 = (Object)HEADER(class1022);
objectlayout1899 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1899)->values[0] = instancevariable1412;
((Type_Array)objectlayout1899)->values[1] = instancevariable1413;
((Type_Array)objectlayout1899)->values[2] = instancevariable1414;
((Type_Array)objectlayout1899)->values[3] = instancevariable1415;
((Type_Array)objectlayout1899)->values[4] = instancevariable1416;
((Type_Array)objectlayout1899)->values[5] = instancevariable1444;
symbol7643 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout1900 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1900)->values[0] = instancevariable1445;
((Type_Array)objectlayout1900)->values[1] = instancevariable1446;
((Type_Array)objectlayout1900)->values[2] = instancevariable1447;
((Type_Array)objectlayout1900)->values[3] = instancevariable1485;
((Type_Array)objectlayout1900)->values[4] = instancevariable1486;
((Type_Array)objectlayout1900)->values[5] = instancevariable1487;
class1023 = (Object)new_Class_withMeta((Object)class1021, objectlayout1900, objectlayout1899);
((Type_Class)class1023)->name = (Type_Symbol)symbol7643;
metaclass1023 = (Object)HEADER(class1023);
objectlayout1901 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1901)->values[0] = instancevariable1412;
((Type_Array)objectlayout1901)->values[1] = instancevariable1413;
((Type_Array)objectlayout1901)->values[2] = instancevariable1414;
((Type_Array)objectlayout1901)->values[3] = instancevariable1415;
((Type_Array)objectlayout1901)->values[4] = instancevariable1416;
symbol7637 = (Object)new_Type_Symbol_cached(L"Type");
class1024 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1901);
((Type_Class)class1024)->name = (Type_Symbol)symbol7637;
metaclass1024 = (Object)HEADER(class1024);
objectlayout1902 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1902)->values[0] = instancevariable1412;
((Type_Array)objectlayout1902)->values[1] = instancevariable1413;
((Type_Array)objectlayout1902)->values[2] = instancevariable1414;
((Type_Array)objectlayout1902)->values[3] = instancevariable1415;
((Type_Array)objectlayout1902)->values[4] = instancevariable1416;
instancevariable1489 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout1902)->values[5] = instancevariable1489;
symbol7638 = (Object)new_Type_Symbol_cached(L"Nil");
class1025 = (Object)new_Class_withMeta((Object)class1024, empty_object_layout, objectlayout1902);
((Type_Class)class1025)->name = (Type_Symbol)symbol7638;
metaclass1025 = (Object)HEADER(class1025);

// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable5979 = (Object)new_AST_Variable_named(L"sizeRequested");
array4712 = (Object)new_Type_Array_with(1, (Object)localvariable5979);
// basicNew:
send43735 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable5979);
symbol7548 = (Object)new_Type_Symbol_cached(L"initialize");
// initialize
send43736 = (Object)new_AST_Send((Object)send43735, (Object)symbol7548, 0);
method5798 = (Object)new_AST_Method_with((Type_Array)array4712, (Type_Array)empty_Type_Array, 1, send43736);
symbol7630 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure5798 = (Object)new_Runtime_MethodClosure(method5798);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7630, (Runtime_MethodClosure)methodclosure5798);


// Behavior>>includesSelector:
//includesSelector: selector
// 	^ self methodDict includesKey: selector
localvariable5980 = (Object)new_AST_Variable_named(L"selector");
array4713 = (Object)new_Type_Array_with(1, (Object)localvariable5980);
symbol7646 = (Object)new_Type_Symbol_cached(L"methodDict");
// methodDict
send43737 = (Object)new_AST_Send((Object)Self, (Object)symbol7646, 0);
symbol7873 = (Object)new_Type_Symbol_cached(L"includesKey:");
// includesKey:
send43738 = (Object)new_AST_Send((Object)send43737, (Object)symbol7873, 1, (Object)localvariable5980);
method5799 = (Object)new_AST_Method_with((Type_Array)array4713, (Type_Array)empty_Type_Array, 1, send43738);
symbol7642 = (Object)new_Type_Symbol_cached(L"includesSelector:");
methodclosure5799 = (Object)new_Runtime_MethodClosure(method5799);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7642, (Runtime_MethodClosure)methodclosure5799);


// Behavior>>methodDict
//methodDict
// 	^ methods
instancevariable1490 = (Object)new_AST_InstVariable(2, L"methods");
method5800 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1490);
methodclosure5800 = (Object)new_Runtime_MethodClosure(method5800);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7646, (Runtime_MethodClosure)methodclosure5800);


// Behavior>>methods:
//methods: anObject
// 	methods := anObject
localvariable5981 = (Object)new_AST_Variable_named(L"anObject");
array4714 = (Object)new_Type_Array_with(1, (Object)localvariable5981);
assign5306 = (Object)new_AST_Assign((Object)instancevariable1490, (Object)localvariable5981);
method5801 = (Object)new_AST_Method_with((Type_Array)array4714, (Type_Array)empty_Type_Array, 2, assign5306, Self);
symbol7631 = (Object)new_Type_Symbol_cached(L"methods:");
methodclosure5801 = (Object)new_Runtime_MethodClosure(method5801);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7631, (Runtime_MethodClosure)methodclosure5801);


// Behavior>>layout
//layout
// 	^ layout
instancevariable1491 = (Object)new_AST_InstVariable(0, L"layout");
method5802 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1491);
symbol7635 = (Object)new_Type_Symbol_cached(L"layout");
methodclosure5802 = (Object)new_Runtime_MethodClosure(method5802);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7635, (Runtime_MethodClosure)methodclosure5802);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
symbol7641 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send43739 = (Object)new_AST_Send((Object)Self, (Object)symbol7641, 0);
symbol7550 = (Object)new_Type_Symbol_cached(L"~=");

// Nil>>isNil
//isNil
// 	^ true
method5803 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure5803 = (Object)new_Runtime_MethodClosure(method5803);
store_method((Type_Class)class1025, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure5803);

classreference1137 = (Object)new_Organization_ClassReference((Type_Class)class1025);
symbol7885 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send43740 = (Object)new_AST_Send((Object)classreference1137, (Object)symbol7885, 0);
// ~=
send43741 = (Object)new_AST_Send((Object)send43739, (Object)symbol7550, 1, (Object)send43740);
method5804 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43741);
symbol7639 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
methodclosure5804 = (Object)new_Runtime_MethodClosure(method5804);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7639, (Runtime_MethodClosure)methodclosure5804);


// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable5982 = (Object)new_AST_Variable_named(L"instVars");
array4715 = (Object)new_Type_Array_with(1, (Object)localvariable5982);
classreference1138 = (Object)new_Organization_ClassReference((Type_Class)class972);
symbol7640 = (Object)new_Type_Symbol_cached(L"new");
// new
send43742 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
assign5307 = (Object)new_AST_Assign((Object)localvariable5982, (Object)send43742);
// hasSuperclass
send43743 = (Object)new_AST_Send((Object)Self, (Object)symbol7639, 0);
symbol7886 = (Object)new_Type_Symbol_cached(L"addAll:");
// superclass
send43744 = (Object)new_AST_Send((Object)Self, (Object)symbol7641, 0);
// layout
send43745 = (Object)new_AST_Send((Object)send43744, (Object)symbol7635, 0);
// addAll:
send43746 = (Object)new_AST_Send((Object)localvariable5982, (Object)symbol7886, 1, (Object)send43745);
block2714 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send43746);
block2715 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send43747 = (Object)new_AST_Send((Object)send43743, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block2714, (Object)block2715);
method5805 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4715, 3, assign5307, send43747, localvariable5982);
symbol7632 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
methodclosure5805 = (Object)new_Runtime_MethodClosure(method5805);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7632, (Runtime_MethodClosure)methodclosure5805);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send43748 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send43749 = (Object)new_AST_Send((Object)send43748, (Object)symbol7548, 0);
method5806 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43749);
methodclosure5806 = (Object)new_Runtime_MethodClosure(method5806);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7640, (Runtime_MethodClosure)methodclosure5806);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable5983 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable5984 = (Object)new_AST_Variable_named(L"instVars");
localvariable5985 = (Object)new_AST_Variable_named(L"instVar");
array4716 = (Object)new_Type_Array_with(3, (Object)localvariable5983, (Object)localvariable5984, (Object)localvariable5985);
// parentInstVariables
send43750 = (Object)new_AST_Send((Object)Self, (Object)symbol7632, 0);
assign5308 = (Object)new_AST_Assign((Object)localvariable5984, (Object)send43750);
symbol7645 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
// pInstVarNames
send43751 = (Object)new_AST_Send((Object)Self, (Object)symbol7645, 0);
symbol7705 = (Object)new_Type_Symbol_cached(L"do:");
localvariable5986 = (Object)new_AST_Variable_named(L"each");
array4717 = (Object)new_Type_Array_with(1, (Object)localvariable5986);
localvariable5987 = (Object)new_AST_Variable_named(L"var");
array4718 = (Object)new_Type_Array_with(1, (Object)localvariable5987);
// name
send43752 = (Object)new_AST_Send((Object)localvariable5987, (Object)SMB_name, 0);
// =
send43753 = (Object)new_AST_Send((Object)send43752, (Object)SMB__equal, 1, (Object)localvariable5986);
symbol7887 = (Object)new_Type_Symbol_cached(L"error:");
string5077 = (Object)new_Type_String(L"Double Declaration of \"");
constant8510 = (Object)new_AST_Constant((Object)string5077);
// ,
send43754 = (Object)new_AST_Send((Object)constant8510, (Object)SMB__concat, 1, (Object)localvariable5986);
string5078 = (Object)new_Type_String(L"\"");
constant8511 = (Object)new_AST_Constant((Object)string5078);
// ,
send43755 = (Object)new_AST_Send((Object)send43754, (Object)SMB__concat, 1, (Object)constant8511);
// error:
send43756 = (Object)new_AST_Send((Object)Self, (Object)symbol7887, 1, (Object)send43755);
block2716 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43756);
// ifTrue:
send43757 = (Object)new_AST_Send((Object)send43753, (Object)SMB_ifTrue_, 1, (Object)block2716);
block2717 = (Object)new_AST_Block_with((Type_Array)array4718, (Type_Array)empty_Type_Array, 2, 1, send43757);
// do:
send43758 = (Object)new_AST_Send((Object)localvariable5984, (Object)symbol7705, 1, (Object)block2717);
classreference1139 = (Object)new_Organization_ClassReference((Type_Class)class1023);
symbol7864 = (Object)new_Type_Symbol_cached(L"named:");
// named:
send43759 = (Object)new_AST_Send((Object)classreference1139, (Object)symbol7864, 1, (Object)localvariable5986);
assign5309 = (Object)new_AST_Assign((Object)localvariable5985, (Object)send43759);
symbol7868 = (Object)new_Type_Symbol_cached(L"localId:");
// size
send43760 = (Object)new_AST_Send((Object)localvariable5984, (Object)SMB_size, 0);
// localId:
send43761 = (Object)new_AST_Send((Object)localvariable5985, (Object)symbol7868, 1, (Object)send43760);
symbol7706 = (Object)new_Type_Symbol_cached(L"add:");
// add:
send43762 = (Object)new_AST_Send((Object)localvariable5984, (Object)symbol7706, 1, (Object)localvariable5985);
block2718 = (Object)new_AST_Block_with((Type_Array)array4717, (Type_Array)empty_Type_Array, 1, 4, send43758, assign5309, send43761, send43762);
// do:
send43763 = (Object)new_AST_Send((Object)send43751, (Object)symbol7705, 1, (Object)block2718);
method5807 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4716, 3, assign5308, send43763, localvariable5984);
symbol7644 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure5807 = (Object)new_Runtime_MethodClosure(method5807);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7644, (Runtime_MethodClosure)methodclosure5807);


// Behavior>>methods
//methods
// 	^ methods
method5808 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1490);
symbol7633 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure5808 = (Object)new_Runtime_MethodClosure(method5808);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7633, (Runtime_MethodClosure)methodclosure5808);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable1492 = (Object)new_AST_InstVariable(1, L"superclass");
method5809 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1492);
methodclosure5809 = (Object)new_Runtime_MethodClosure(method5809);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7641, (Runtime_MethodClosure)methodclosure5809);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send43764 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
method5810 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43764);
methodclosure5810 = (Object)new_Runtime_MethodClosure(method5810);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7645, (Runtime_MethodClosure)methodclosure5810);


// Behavior>>canUnderstand:
//canUnderstand: selector
// 	(self includesSelector: selector) ifTrue: [^true].
// 	superclass == nil ifTrue: [^false].
// 	^superclass canUnderstand: selector
localvariable5988 = (Object)new_AST_Variable_named(L"selector");
array4719 = (Object)new_Type_Array_with(1, (Object)localvariable5988);
variable302 = (Object)new_AST_Variable_named(L"return");
array4720 = (Object)new_Type_Array_with(1, (Object)variable302);
// includesSelector:
send43765 = (Object)new_AST_Send((Object)Self, (Object)symbol7642, 1, (Object)localvariable5988);
// escape:
send43766 = (Object)new_AST_Send((Object)variable302, (Object)SMB_escape_, 1, (Object)True_Const);
block2719 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43766);
// ifTrue:
send43767 = (Object)new_AST_Send((Object)send43765, (Object)SMB_ifTrue_, 1, (Object)block2719);
// ==
send43768 = (Object)new_AST_Send((Object)instancevariable1492, (Object)SMB__pequal, 1, (Object)Nil_Const);
// escape:
send43769 = (Object)new_AST_Send((Object)variable302, (Object)SMB_escape_, 1, (Object)False_Const);
block2720 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43769);
// ifTrue:
send43770 = (Object)new_AST_Send((Object)send43768, (Object)SMB_ifTrue_, 1, (Object)block2720);
symbol7634 = (Object)new_Type_Symbol_cached(L"canUnderstand:");
// canUnderstand:
send43771 = (Object)new_AST_Send((Object)instancevariable1492, (Object)symbol7634, 1, (Object)localvariable5988);
block2721 = (Object)new_AST_Block_with((Type_Array)array4720, (Type_Array)empty_Type_Array, 1, 3, send43767, send43770, send43771);
// on:
send43772 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2721);
method5811 = (Object)new_AST_Method_with((Type_Array)array4719, (Type_Array)empty_Type_Array, 1, send43772);
methodclosure5811 = (Object)new_Runtime_MethodClosure(method5811);
store_method((Type_Class)Behavior, (Type_Symbol)symbol7634, (Runtime_MethodClosure)methodclosure5811);

classreference1140 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Class>>package
//package
// 	^ package
instancevariable1493 = (Object)new_AST_InstVariable(4, L"package");
method5812 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1493);
symbol7651 = (Object)new_Type_Symbol_cached(L"package");
methodclosure5812 = (Object)new_Runtime_MethodClosure(method5812);
store_method((Type_Class)Class, (Type_Symbol)symbol7651, (Runtime_MethodClosure)methodclosure5812);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable5989 = (Object)new_AST_Variable_named(L"aStream");
array4721 = (Object)new_Type_Array_with(1, (Object)localvariable5989);
symbol7650 = (Object)new_Type_Symbol_cached(L"printOn:");
super487 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable5989);
symbol7888 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string5079 = (Object)new_Type_String(L" ");
constant8512 = (Object)new_AST_Constant((Object)string5079);
// nextPutAll:
send43773 = (Object)new_AST_Send((Object)localvariable5989, (Object)symbol7888, 1, (Object)constant8512);
// name
send43774 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send43775 = (Object)new_AST_Send((Object)send43774, (Object)symbol7650, 1, (Object)localvariable5989);
method5813 = (Object)new_AST_Method_with((Type_Array)array4721, (Type_Array)empty_Type_Array, 4, super487, send43773, send43775, Self);
methodclosure5813 = (Object)new_Runtime_MethodClosure(method5813);
store_method((Type_Class)Class, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5813);


// Class>>name
//name 
// 	^ name
instancevariable1494 = (Object)new_AST_InstVariable(3, L"name");
method5814 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1494);
methodclosure5814 = (Object)new_Runtime_MethodClosure(method5814);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure5814);

classreference1141 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable5990 = (Object)new_AST_Variable_named(L"aStream");
array4722 = (Object)new_Type_Array_with(1, (Object)localvariable5990);
super488 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable5990);
symbol7889 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send43776 = (Object)new_AST_Send((Object)Self, (Object)symbol7889, 0);
// name
send43777 = (Object)new_AST_Send((Object)send43776, (Object)SMB_name, 0);
// printOn:
send43778 = (Object)new_AST_Send((Object)send43777, (Object)symbol7650, 1, (Object)localvariable5990);
method5815 = (Object)new_AST_Method_with((Type_Array)array4722, (Type_Array)empty_Type_Array, 3, super488, send43778, Self);
methodclosure5815 = (Object)new_Runtime_MethodClosure(method5815);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5815);

classreference1142 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);
classreference1143 = (Object)new_Organization_ClassReference((Type_Class)Type_Boolean_Class);

// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable5991 = (Object)new_AST_Variable_named(L"anObject");
array4723 = (Object)new_Type_Array_with(1, (Object)localvariable5991);
// =
send43779 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable5991);
// not
send43780 = (Object)new_AST_Send((Object)send43779, (Object)SMB_not, 0);
method5816 = (Object)new_AST_Method_with((Type_Array)array4723, (Type_Array)empty_Type_Array, 1, send43780);
methodclosure5816 = (Object)new_Runtime_MethodClosure(method5816);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol7550, (Runtime_MethodClosure)methodclosure5816);


// Object>>yourself
//yourself
// 	^ self
method5817 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol7546 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure5817 = (Object)new_Runtime_MethodClosure(method5817);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol7546, (Runtime_MethodClosure)methodclosure5817);


// Object>>initialize
//initialize
method5818 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure5818 = (Object)new_Runtime_MethodClosure(method5818);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5818);


// Object>>isNil
//isNil
// 	^ false
method5819 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure5819 = (Object)new_Runtime_MethodClosure(method5819);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure5819);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send43781 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol7539 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send43782 = (Object)new_AST_Send((Object)send43781, (Object)symbol7539, 0);
method5820 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43782);
symbol7545 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure5820 = (Object)new_Runtime_MethodClosure(method5820);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol7545, (Runtime_MethodClosure)methodclosure5820);


// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method5821 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol7547 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure5821 = (Object)new_Runtime_MethodClosure(method5821);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol7547, (Runtime_MethodClosure)methodclosure5821);


// Object>>hash
//hash
// 	^ self uid hash
symbol7688 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send43783 = (Object)new_AST_Send((Object)Self, (Object)symbol7688, 0);
// hash
send43784 = (Object)new_AST_Send((Object)send43783, (Object)SMB_hash, 0);
method5822 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43784);
methodclosure5822 = (Object)new_Runtime_MethodClosure(method5822);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure5822);


// Object>>respondsTo:
//respondsTo: selector
// 	^ self class canUnderstand: selector
localvariable5992 = (Object)new_AST_Variable_named(L"selector");
array4724 = (Object)new_Type_Array_with(1, (Object)localvariable5992);
// class
send43785 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// canUnderstand:
send43786 = (Object)new_AST_Send((Object)send43785, (Object)symbol7634, 1, (Object)localvariable5992);
method5823 = (Object)new_AST_Method_with((Type_Array)array4724, (Type_Array)empty_Type_Array, 1, send43786);
symbol7549 = (Object)new_Type_Symbol_cached(L"respondsTo:");
methodclosure5823 = (Object)new_Runtime_MethodClosure(method5823);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol7549, (Runtime_MethodClosure)methodclosure5823);

classreference1144 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Array>>first
//first
// 	^ self at: 1.
smallint2973 = (Object)new_Type_SmallInt(1);
constant8513 = (Object)new_AST_Constant((Object)smallint2973);
// at:
send43787 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant8513);
method5824 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43787);
symbol7702 = (Object)new_Type_Symbol_cached(L"first");
methodclosure5824 = (Object)new_Runtime_MethodClosure(method5824);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7702, (Runtime_MethodClosure)methodclosure5824);


// Array>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' #( '.
// 	self do: [:each|
// 		each printOn: aStream.
// 		aStream nextPutAll: ' '
// 	].
// 	aStream nextPutAll: ')'.
localvariable5993 = (Object)new_AST_Variable_named(L"aStream");
array4725 = (Object)new_Type_Array_with(1, (Object)localvariable5993);
super489 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable5993);
string5080 = (Object)new_Type_String(L" #( ");
constant8514 = (Object)new_AST_Constant((Object)string5080);
// nextPutAll:
send43788 = (Object)new_AST_Send((Object)localvariable5993, (Object)symbol7888, 1, (Object)constant8514);
localvariable5994 = (Object)new_AST_Variable_named(L"each");
array4726 = (Object)new_Type_Array_with(1, (Object)localvariable5994);
// printOn:
send43789 = (Object)new_AST_Send((Object)localvariable5994, (Object)symbol7650, 1, (Object)localvariable5993);
string5081 = (Object)new_Type_String(L" ");
constant8515 = (Object)new_AST_Constant((Object)string5081);
// nextPutAll:
send43790 = (Object)new_AST_Send((Object)localvariable5993, (Object)symbol7888, 1, (Object)constant8515);
block2722 = (Object)new_AST_Block_with((Type_Array)array4726, (Type_Array)empty_Type_Array, 1, 2, send43789, send43790);
// do:
send43791 = (Object)new_AST_Send((Object)Self, (Object)symbol7705, 1, (Object)block2722);
string5082 = (Object)new_Type_String(L")");
constant8516 = (Object)new_AST_Constant((Object)string5082);
// nextPutAll:
send43792 = (Object)new_AST_Send((Object)localvariable5993, (Object)symbol7888, 1, (Object)constant8516);
method5825 = (Object)new_AST_Method_with((Type_Array)array4725, (Type_Array)empty_Type_Array, 5, super489, send43788, send43791, send43792, Self);
methodclosure5825 = (Object)new_Runtime_MethodClosure(method5825);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5825);


// Array>>isEmpty
//isEmpty
// 	^ self size = 0
// size
send43793 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2974 = (Object)new_Type_SmallInt(0);
constant8517 = (Object)new_AST_Constant((Object)smallint2974);
// =
send43794 = (Object)new_AST_Send((Object)send43793, (Object)SMB__equal, 1, (Object)constant8517);
method5826 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43794);
symbol7662 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure5826 = (Object)new_Runtime_MethodClosure(method5826);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7662, (Runtime_MethodClosure)methodclosure5826);


// Array>>doWithIndex:
//doWithIndex: aBlockClosure 
// 	1 to: self size do:
// 		[:index | aBlockClosure value: (self at: index) value: index]
localvariable5995 = (Object)new_AST_Variable_named(L"aBlockClosure");
array4727 = (Object)new_Type_Array_with(1, (Object)localvariable5995);
smallint2975 = (Object)new_Type_SmallInt(1);
constant8518 = (Object)new_AST_Constant((Object)smallint2975);
symbol7890 = (Object)new_Type_Symbol_cached(L"to:do:");
// size
send43795 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable5996 = (Object)new_AST_Variable_named(L"index");
array4728 = (Object)new_Type_Array_with(1, (Object)localvariable5996);
symbol7891 = (Object)new_Type_Symbol_cached(L"value:value:");
// at:
send43796 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable5996);
// value:value:
send43797 = (Object)new_AST_Send((Object)localvariable5995, (Object)symbol7891, 2, (Object)send43796, (Object)localvariable5996);
block2723 = (Object)new_AST_Block_with((Type_Array)array4728, (Type_Array)empty_Type_Array, 1, 1, send43797);
// to:do:
send43798 = (Object)new_AST_Send((Object)constant8518, (Object)symbol7890, 2, (Object)send43795, (Object)block2723);
method5827 = (Object)new_AST_Method_with((Type_Array)array4727, (Type_Array)empty_Type_Array, 2, send43798, Self);
symbol7703 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
methodclosure5827 = (Object)new_Runtime_MethodClosure(method5827);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7703, (Runtime_MethodClosure)methodclosure5827);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable5997 = (Object)new_AST_Variable_named(L"thisValue");
localvariable5998 = (Object)new_AST_Variable_named(L"binaryBlock");
array4729 = (Object)new_Type_Array_with(2, (Object)localvariable5997, (Object)localvariable5998);
localvariable5999 = (Object)new_AST_Variable_named(L"nextValue");
array4730 = (Object)new_Type_Array_with(1, (Object)localvariable5999);
assign5310 = (Object)new_AST_Assign((Object)localvariable5999, (Object)localvariable5997);
localvariable6000 = (Object)new_AST_Variable_named(L"each");
array4731 = (Object)new_Type_Array_with(1, (Object)localvariable6000);
// value:value:
send43799 = (Object)new_AST_Send((Object)localvariable5998, (Object)symbol7891, 2, (Object)localvariable5999, (Object)localvariable6000);
assign5311 = (Object)new_AST_Assign((Object)localvariable5999, (Object)send43799);
block2724 = (Object)new_AST_Block_with((Type_Array)array4731, (Type_Array)empty_Type_Array, 1, 1, assign5311);
// do:
send43800 = (Object)new_AST_Send((Object)Self, (Object)symbol7705, 1, (Object)block2724);
method5828 = (Object)new_AST_Method_with((Type_Array)array4729, (Type_Array)array4730, 3, assign5310, send43800, localvariable5999);
symbol7707 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure5828 = (Object)new_Runtime_MethodClosure(method5828);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7707, (Runtime_MethodClosure)methodclosure5828);


// Array>>first:
//first: aValue
// 	^ self at: 1 put: aValue.
localvariable6001 = (Object)new_AST_Variable_named(L"aValue");
array4732 = (Object)new_Type_Array_with(1, (Object)localvariable6001);
smallint2976 = (Object)new_Type_SmallInt(1);
constant8519 = (Object)new_AST_Constant((Object)smallint2976);
// at:put:
send43801 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant8519, (Object)localvariable6001);
method5829 = (Object)new_AST_Method_with((Type_Array)array4732, (Type_Array)empty_Type_Array, 1, send43801);
symbol7704 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure5829 = (Object)new_Runtime_MethodClosure(method5829);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7704, (Runtime_MethodClosure)methodclosure5829);


// Array>>=
//= other
// 	self == other ifTrue: [^ true].
// 	self class = other class ifFalse: [ ^ false].
// 	self size = other size ifFalse: [ ^ false ].
// 	1 to: self size do: [ :index|
// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].
// 	].
// 	^ true.
localvariable6002 = (Object)new_AST_Variable_named(L"other");
array4733 = (Object)new_Type_Array_with(1, (Object)localvariable6002);
variable303 = (Object)new_AST_Variable_named(L"return");
array4734 = (Object)new_Type_Array_with(1, (Object)variable303);
// ==
send43802 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable6002);
// escape:
send43803 = (Object)new_AST_Send((Object)variable303, (Object)SMB_escape_, 1, (Object)True_Const);
block2725 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43803);
// ifTrue:
send43804 = (Object)new_AST_Send((Object)send43802, (Object)SMB_ifTrue_, 1, (Object)block2725);
// class
send43805 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send43806 = (Object)new_AST_Send((Object)localvariable6002, (Object)SMB_class, 0);
// =
send43807 = (Object)new_AST_Send((Object)send43805, (Object)SMB__equal, 1, (Object)send43806);
// escape:
send43808 = (Object)new_AST_Send((Object)variable303, (Object)SMB_escape_, 1, (Object)False_Const);
block2726 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43808);
// ifFalse:
send43809 = (Object)new_AST_Send((Object)send43807, (Object)SMB_ifFalse_, 1, (Object)block2726);
// size
send43810 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// size
send43811 = (Object)new_AST_Send((Object)localvariable6002, (Object)SMB_size, 0);
// =
send43812 = (Object)new_AST_Send((Object)send43810, (Object)SMB__equal, 1, (Object)send43811);
// escape:
send43813 = (Object)new_AST_Send((Object)variable303, (Object)SMB_escape_, 1, (Object)False_Const);
block2727 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43813);
// ifFalse:
send43814 = (Object)new_AST_Send((Object)send43812, (Object)SMB_ifFalse_, 1, (Object)block2727);
smallint2977 = (Object)new_Type_SmallInt(1);
constant8520 = (Object)new_AST_Constant((Object)smallint2977);
// size
send43815 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable6003 = (Object)new_AST_Variable_named(L"index");
array4735 = (Object)new_Type_Array_with(1, (Object)localvariable6003);
// at:
send43816 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable6003);
// at:
send43817 = (Object)new_AST_Send((Object)localvariable6002, (Object)SMB_at_, 1, (Object)localvariable6003);
// =
send43818 = (Object)new_AST_Send((Object)send43816, (Object)SMB__equal, 1, (Object)send43817);
// escape:
send43819 = (Object)new_AST_Send((Object)variable303, (Object)SMB_escape_, 1, (Object)False_Const);
block2728 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43819);
// ifFalse:
send43820 = (Object)new_AST_Send((Object)send43818, (Object)SMB_ifFalse_, 1, (Object)block2728);
block2729 = (Object)new_AST_Block_with((Type_Array)array4735, (Type_Array)empty_Type_Array, 2, 1, send43820);
// to:do:
send43821 = (Object)new_AST_Send((Object)constant8520, (Object)symbol7890, 2, (Object)send43815, (Object)block2729);
block2730 = (Object)new_AST_Block_with((Type_Array)array4734, (Type_Array)empty_Type_Array, 1, 5, send43804, send43809, send43814, send43821, True_Const);
// on:
send43822 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2730);
method5830 = (Object)new_AST_Method_with((Type_Array)array4733, (Type_Array)empty_Type_Array, 1, send43822);
methodclosure5830 = (Object)new_Runtime_MethodClosure(method5830);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure5830);


// Array>>initialize
//initialize 
// 	super initialize.
super490 = (Object)new_AST_Super((Object)symbol7548, 0);
method5831 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super490, Self);
methodclosure5831 = (Object)new_Runtime_MethodClosure(method5831);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5831);


// Array>>last:
//last: aNode
// 	^ self at: self size put: aNode.
localvariable6004 = (Object)new_AST_Variable_named(L"aNode");
array4736 = (Object)new_Type_Array_with(1, (Object)localvariable6004);
// size
send43823 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:put:
send43824 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send43823, (Object)localvariable6004);
method5832 = (Object)new_AST_Method_with((Type_Array)array4736, (Type_Array)empty_Type_Array, 1, send43824);
symbol7708 = (Object)new_Type_Symbol_cached(L"last:");
methodclosure5832 = (Object)new_Runtime_MethodClosure(method5832);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7708, (Runtime_MethodClosure)methodclosure5832);


// Array>>last
//last
// 	^ self at: self size.
// size
send43825 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:
send43826 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send43825);
method5833 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43826);
symbol7701 = (Object)new_Type_Symbol_cached(L"last");
methodclosure5833 = (Object)new_Runtime_MethodClosure(method5833);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7701, (Runtime_MethodClosure)methodclosure5833);


// Array>>do:
//do: aBlockClosure 
// 	1 to: self size do: 
// 		[:index | aBlockClosure value: (self at: index)]
localvariable6005 = (Object)new_AST_Variable_named(L"aBlockClosure");
array4737 = (Object)new_Type_Array_with(1, (Object)localvariable6005);
smallint2978 = (Object)new_Type_SmallInt(1);
constant8521 = (Object)new_AST_Constant((Object)smallint2978);
// size
send43827 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable6006 = (Object)new_AST_Variable_named(L"index");
array4738 = (Object)new_Type_Array_with(1, (Object)localvariable6006);
// at:
send43828 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable6006);
// value:
send43829 = (Object)new_AST_Send((Object)localvariable6005, (Object)SMB_value_, 1, (Object)send43828);
block2731 = (Object)new_AST_Block_with((Type_Array)array4738, (Type_Array)empty_Type_Array, 1, 1, send43829);
// to:do:
send43830 = (Object)new_AST_Send((Object)constant8521, (Object)symbol7890, 2, (Object)send43827, (Object)block2731);
method5834 = (Object)new_AST_Method_with((Type_Array)array4737, (Type_Array)empty_Type_Array, 2, send43830, Self);
methodclosure5834 = (Object)new_Runtime_MethodClosure(method5834);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7705, (Runtime_MethodClosure)methodclosure5834);


// Array>>add:
//add: anElement
// 	| result |
// 	result := self class new: self size +1.
// 	self doWithIndex: [:el :i | result at: i put: el ].
// 	result last: anElement.
// 	^ result.
localvariable6007 = (Object)new_AST_Variable_named(L"anElement");
array4739 = (Object)new_Type_Array_with(1, (Object)localvariable6007);
localvariable6008 = (Object)new_AST_Variable_named(L"result");
array4740 = (Object)new_Type_Array_with(1, (Object)localvariable6008);
// class
send43831 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// size
send43832 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2979 = (Object)new_Type_SmallInt(1);
constant8522 = (Object)new_AST_Constant((Object)smallint2979);
// +
send43833 = (Object)new_AST_Send((Object)send43832, (Object)SMB__plus, 1, (Object)constant8522);
// new:
send43834 = (Object)new_AST_Send((Object)send43831, (Object)symbol7630, 1, (Object)send43833);
assign5312 = (Object)new_AST_Assign((Object)localvariable6008, (Object)send43834);
localvariable6009 = (Object)new_AST_Variable_named(L"el");
localvariable6010 = (Object)new_AST_Variable_named(L"i");
array4741 = (Object)new_Type_Array_with(2, (Object)localvariable6009, (Object)localvariable6010);
// at:put:
send43835 = (Object)new_AST_Send((Object)localvariable6008, (Object)SMB_at_put_, 2, (Object)localvariable6010, (Object)localvariable6009);
block2732 = (Object)new_AST_Block_with((Type_Array)array4741, (Type_Array)empty_Type_Array, 1, 1, send43835);
// doWithIndex:
send43836 = (Object)new_AST_Send((Object)Self, (Object)symbol7703, 1, (Object)block2732);
// last:
send43837 = (Object)new_AST_Send((Object)localvariable6008, (Object)symbol7708, 1, (Object)localvariable6007);
method5835 = (Object)new_AST_Method_with((Type_Array)array4739, (Type_Array)array4740, 4, assign5312, send43836, send43837, localvariable6008);
methodclosure5835 = (Object)new_Runtime_MethodClosure(method5835);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol7706, (Runtime_MethodClosure)methodclosure5835);

classreference1145 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);
classreference1146 = (Object)new_Organization_ClassReference((Type_Class)class971);
classreference1147 = (Object)new_Organization_ClassReference((Type_Class)class970);
classreference1148 = (Object)new_Organization_ClassReference((Type_Class)class969);
classreference1149 = (Object)new_Organization_ClassReference((Type_Class)class973);
classreference1150 = (Object)new_Organization_ClassReference((Type_Class)class974);

// Dictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	^ self at: key ifAbsent: [self at: key put: aBlock value]
localvariable6011 = (Object)new_AST_Variable_named(L"key");
localvariable6012 = (Object)new_AST_Variable_named(L"aBlock");
array4742 = (Object)new_Type_Array_with(2, (Object)localvariable6011, (Object)localvariable6012);
symbol7892 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");
symbol7893 = (Object)new_Type_Symbol_cached(L"value");
// value
send43838 = (Object)new_AST_Send((Object)localvariable6012, (Object)symbol7893, 0);
// at:put:
send43839 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable6011, (Object)send43838);
block2733 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send43839);
// at:ifAbsent:
send43840 = (Object)new_AST_Send((Object)Self, (Object)symbol7892, 2, (Object)localvariable6011, (Object)block2733);
method5836 = (Object)new_AST_Method_with((Type_Array)array4742, (Type_Array)empty_Type_Array, 1, send43840);
symbol7872 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
methodclosure5836 = (Object)new_Runtime_MethodClosure(method5836);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol7872, (Runtime_MethodClosure)methodclosure5836);


// Dictionary>>includesKey:
//includesKey: key
// 	self at: key ifAbsent: [ ^ false ].
// 	^ true
localvariable6013 = (Object)new_AST_Variable_named(L"key");
array4743 = (Object)new_Type_Array_with(1, (Object)localvariable6013);
variable304 = (Object)new_AST_Variable_named(L"return");
array4744 = (Object)new_Type_Array_with(1, (Object)variable304);
// escape:
send43841 = (Object)new_AST_Send((Object)variable304, (Object)SMB_escape_, 1, (Object)False_Const);
block2734 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43841);
// at:ifAbsent:
send43842 = (Object)new_AST_Send((Object)Self, (Object)symbol7892, 2, (Object)localvariable6013, (Object)block2734);
block2735 = (Object)new_AST_Block_with((Type_Array)array4744, (Type_Array)empty_Type_Array, 1, 2, send43842, True_Const);
// on:
send43843 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2735);
method5837 = (Object)new_AST_Method_with((Type_Array)array4743, (Type_Array)empty_Type_Array, 1, send43843);
methodclosure5837 = (Object)new_Runtime_MethodClosure(method5837);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol7873, (Runtime_MethodClosure)methodclosure5837);

classreference1151 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);
classreference1152 = (Object)new_Organization_ClassReference((Type_Class)class975);
classreference1153 = (Object)new_Organization_ClassReference((Type_Class)class977);
classreference1154 = (Object)new_Organization_ClassReference((Type_Class)class976);

// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
symbol7843 = (Object)new_Type_Symbol_cached(L"optional");
// optional
send43844 = (Object)new_AST_Send((Object)Self, (Object)symbol7843, 0);
symbol7877 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
// skipWhitespace:
send43845 = (Object)new_AST_Send((Object)send43844, (Object)symbol7877, 1, (Object)False_Const);
method5838 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43845);
symbol7854 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure5838 = (Object)new_Runtime_MethodClosure(method5838);
store_method((Type_Class)class978, (Type_Symbol)symbol7854, (Runtime_MethodClosure)methodclosure5838);


// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable6014 = (Object)new_AST_Variable_named(L"input");
array4745 = (Object)new_Type_Array_with(1, (Object)localvariable6014);
localvariable6015 = (Object)new_AST_Variable_named(L"position");
localvariable6016 = (Object)new_AST_Variable_named(L"match");
array4746 = (Object)new_Type_Array_with(2, (Object)localvariable6015, (Object)localvariable6016);
symbol7894 = (Object)new_Type_Symbol_cached(L"position");
// position
send43846 = (Object)new_AST_Send((Object)localvariable6014, (Object)symbol7894, 0);
assign5313 = (Object)new_AST_Assign((Object)localvariable6015, (Object)send43846);
symbol7853 = (Object)new_Type_Symbol_cached(L"privateMatch:");
// privateMatch:
send43847 = (Object)new_AST_Send((Object)Self, (Object)symbol7853, 1, (Object)localvariable6014);
assign5314 = (Object)new_AST_Assign((Object)localvariable6016, (Object)send43847);
symbol7895 = (Object)new_Type_Symbol_cached(L"ifNil:");
symbol7896 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send43848 = (Object)new_AST_Send((Object)localvariable6014, (Object)symbol7896, 1, (Object)localvariable6015);
block2736 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send43848);
// ifNil:
send43849 = (Object)new_AST_Send((Object)localvariable6016, (Object)symbol7895, 1, (Object)block2736);
method5839 = (Object)new_AST_Method_with((Type_Array)array4745, (Type_Array)array4746, 4, assign5313, assign5314, send43849, localvariable6016);
symbol7846 = (Object)new_Type_Symbol_cached(L"match:");
methodclosure5839 = (Object)new_Runtime_MethodClosure(method5839);
store_method((Type_Class)class978, (Type_Symbol)symbol7846, (Runtime_MethodClosure)methodclosure5839);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method5840 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol7835 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure5840 = (Object)new_Runtime_MethodClosure(method5840);
store_method((Type_Class)class978, (Type_Symbol)symbol7835, (Runtime_MethodClosure)methodclosure5840);


// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable6017 = (Object)new_AST_Variable_named(L"aName");
array4747 = (Object)new_Type_Array_with(1, (Object)localvariable6017);
assign5315 = (Object)new_AST_Assign((Object)instancevariable1428, (Object)localvariable6017);
method5841 = (Object)new_AST_Method_with((Type_Array)array4747, (Type_Array)empty_Type_Array, 2, assign5315, Self);
symbol7723 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure5841 = (Object)new_Runtime_MethodClosure(method5841);
store_method((Type_Class)class978, (Type_Symbol)symbol7723, (Runtime_MethodClosure)methodclosure5841);


// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable6018 = (Object)new_AST_Variable_named(L"input");
array4748 = (Object)new_Type_Array_with(1, (Object)localvariable6018);
symbol7897 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send43850 = (Object)new_AST_Send((Object)Self, (Object)symbol7897, 0);
localvariable6019 = (Object)new_AST_Variable_named(L"receiver");
array4749 = (Object)new_Type_Array_with(1, (Object)localvariable6019);
symbol7898 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send43851 = (Object)new_AST_Send((Object)localvariable6019, (Object)symbol7898, 0);
symbol7899 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send43852 = (Object)new_AST_Send((Object)localvariable6019, (Object)symbol7899, 0);
block2737 = (Object)new_AST_Block_with((Type_Array)array4749, (Type_Array)empty_Type_Array, 2, 2, send43851, send43852);
// value:
send43853 = (Object)new_AST_Send((Object)block2737, (Object)SMB_value_, 1, (Object)classreference1155);
block2738 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send43853);
// ifTrue:
send43854 = (Object)new_AST_Send((Object)send43850, (Object)SMB_ifTrue_, 1, (Object)block2738);
method5842 = (Object)new_AST_Method_with((Type_Array)array4748, (Type_Array)empty_Type_Array, 2, send43854, Self);
symbol7855 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure5842 = (Object)new_Runtime_MethodClosure(method5842);
store_method((Type_Class)class978, (Type_Symbol)symbol7855, (Runtime_MethodClosure)methodclosure5842);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
symbol7851 = (Object)new_Type_Symbol_cached(L"plus");
// plus
send43855 = (Object)new_AST_Send((Object)Self, (Object)symbol7851, 0);
// skipWhitespace:
send43856 = (Object)new_AST_Send((Object)send43855, (Object)symbol7877, 1, (Object)False_Const);
method5843 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43856);
symbol7847 = (Object)new_Type_Symbol_cached(L"strongPlus");
methodclosure5843 = (Object)new_Runtime_MethodClosure(method5843);
store_method((Type_Class)class978, (Type_Symbol)symbol7847, (Runtime_MethodClosure)methodclosure5843);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable6020 = (Object)new_AST_Variable_named(L"input");
array4750 = (Object)new_Type_Array_with(1, (Object)localvariable6020);
// debug
send43857 = (Object)new_AST_Send((Object)Self, (Object)symbol7897, 0);
symbol7900 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send43858 = (Object)new_AST_Send((Object)classreference1155, (Object)symbol7900, 0);
block2739 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send43858);
// ifTrue:
send43859 = (Object)new_AST_Send((Object)send43857, (Object)SMB_ifTrue_, 1, (Object)block2739);
method5844 = (Object)new_AST_Method_with((Type_Array)array4750, (Type_Array)empty_Type_Array, 2, send43859, Self);
symbol7836 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure5844 = (Object)new_Runtime_MethodClosure(method5844);
store_method((Type_Class)class978, (Type_Symbol)symbol7836, (Runtime_MethodClosure)methodclosure5844);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable6021 = (Object)new_AST_Variable_named(L"other");
array4751 = (Object)new_Type_Array_with(1, (Object)localvariable6021);
// &
send43860 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable6021);
// skipWhitespace:
send43861 = (Object)new_AST_Send((Object)send43860, (Object)symbol7877, 1, (Object)False_Const);
method5845 = (Object)new_AST_Method_with((Type_Array)array4751, (Type_Array)empty_Type_Array, 1, send43861);
symbol7840 = (Object)new_Type_Symbol_cached(L"&&");
methodclosure5845 = (Object)new_Runtime_MethodClosure(method5845);
store_method((Type_Class)class978, (Type_Symbol)symbol7840, (Runtime_MethodClosure)methodclosure5845);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable6022 = (Object)new_AST_Variable_named(L"bool");
array4752 = (Object)new_Type_Array_with(1, (Object)localvariable6022);
assign5316 = (Object)new_AST_Assign((Object)instancevariable1429, (Object)localvariable6022);
method5846 = (Object)new_AST_Method_with((Type_Array)array4752, (Type_Array)empty_Type_Array, 2, assign5316, Self);
symbol7848 = (Object)new_Type_Symbol_cached(L"omit:");
methodclosure5846 = (Object)new_Runtime_MethodClosure(method5846);
store_method((Type_Class)class978, (Type_Symbol)symbol7848, (Runtime_MethodClosure)methodclosure5846);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable6023 = (Object)new_AST_Variable_named(L"expression");
array4753 = (Object)new_Type_Array_with(1, (Object)localvariable6023);

// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable6024 = (Object)new_AST_Variable_named(L"theChildren");
array4754 = (Object)new_Type_Array_with(1, (Object)localvariable6024);
super491 = (Object)new_AST_Super((Object)symbol7548, 0);
assign5317 = (Object)new_AST_Assign((Object)instancevariable1437, (Object)localvariable6024);
assign5318 = (Object)new_AST_Assign((Object)instancevariable1438, (Object)True_Const);
method5847 = (Object)new_AST_Method_with((Type_Array)array4754, (Type_Array)empty_Type_Array, 4, super491, assign5317, assign5318, Self);
symbol7875 = (Object)new_Type_Symbol_cached(L"initialize:");
methodclosure5847 = (Object)new_Runtime_MethodClosure(method5847);
store_method((Type_Class)class986, (Type_Symbol)symbol7875, (Runtime_MethodClosure)methodclosure5847);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super492 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send43862 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
// initialize:
send43863 = (Object)new_AST_Send((Object)Self, (Object)symbol7875, 1, (Object)send43862);
method5848 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super492, send43863, Self);
methodclosure5848 = (Object)new_Runtime_MethodClosure(method5848);
store_method((Type_Class)class986, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5848);


// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable6025 = (Object)new_AST_Variable_named(L"anObject");
array4755 = (Object)new_Type_Array_with(1, (Object)localvariable6025);
assign5319 = (Object)new_AST_Assign((Object)instancevariable1438, (Object)localvariable6025);
method5849 = (Object)new_AST_Method_with((Type_Array)array4755, (Type_Array)empty_Type_Array, 2, assign5319, Self);
methodclosure5849 = (Object)new_Runtime_MethodClosure(method5849);
store_method((Type_Class)class986, (Type_Symbol)symbol7877, (Runtime_MethodClosure)methodclosure5849);


// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method5850 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1438);
symbol7676 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
methodclosure5850 = (Object)new_Runtime_MethodClosure(method5850);
store_method((Type_Class)class986, (Type_Symbol)symbol7676, (Runtime_MethodClosure)methodclosure5850);


// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable6026 = (Object)new_AST_Variable_named(L"child");
array4756 = (Object)new_Type_Array_with(1, (Object)localvariable6026);
symbol7844 = (Object)new_Type_Symbol_cached(L"asPEG");
// asPEG
send43864 = (Object)new_AST_Send((Object)localvariable6026, (Object)symbol7844, 0);
// add:
send43865 = (Object)new_AST_Send((Object)instancevariable1437, (Object)symbol7706, 1, (Object)send43864);
method5851 = (Object)new_AST_Method_with((Type_Array)array4756, (Type_Array)empty_Type_Array, 2, send43865, Self);
symbol7880 = (Object)new_Type_Symbol_cached(L"<&");
methodclosure5851 = (Object)new_Runtime_MethodClosure(method5851);
store_method((Type_Class)class986, (Type_Symbol)symbol7880, (Runtime_MethodClosure)methodclosure5851);


// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable6027 = (Object)new_AST_Variable_named(L"input");
array4757 = (Object)new_Type_Array_with(1, (Object)localvariable6027);
localvariable6028 = (Object)new_AST_Variable_named(L"result");
localvariable6029 = (Object)new_AST_Variable_named(L"match");
array4758 = (Object)new_Type_Array_with(2, (Object)localvariable6028, (Object)localvariable6029);
variable305 = (Object)new_AST_Variable_named(L"return");
array4759 = (Object)new_Type_Array_with(1, (Object)variable305);
// new
send43866 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
assign5320 = (Object)new_AST_Assign((Object)localvariable6028, (Object)send43866);
localvariable6030 = (Object)new_AST_Variable_named(L"child");
array4760 = (Object)new_Type_Array_with(1, (Object)localvariable6030);
// skipWhitespace
send43867 = (Object)new_AST_Send((Object)localvariable6027, (Object)symbol7676, 0);
block2740 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43867);
// ifTrue:
send43868 = (Object)new_AST_Send((Object)instancevariable1438, (Object)SMB_ifTrue_, 1, (Object)block2740);
// match:
send43869 = (Object)new_AST_Send((Object)localvariable6030, (Object)symbol7846, 1, (Object)localvariable6027);
assign5321 = (Object)new_AST_Assign((Object)localvariable6029, (Object)send43869);
// escape:
send43870 = (Object)new_AST_Send((Object)variable305, (Object)SMB_escape_, 1, (Object)localvariable6029);
block2741 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43870);
// ifNil:
send43871 = (Object)new_AST_Send((Object)localvariable6029, (Object)symbol7895, 1, (Object)block2741);
symbol7845 = (Object)new_Type_Symbol_cached(L"omit");
// omit
send43872 = (Object)new_AST_Send((Object)localvariable6030, (Object)symbol7845, 0);
// add:
send43873 = (Object)new_AST_Send((Object)localvariable6028, (Object)symbol7706, 1, (Object)localvariable6029);
block2742 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43873);
// ifFalse:
send43874 = (Object)new_AST_Send((Object)send43872, (Object)SMB_ifFalse_, 1, (Object)block2742);
block2743 = (Object)new_AST_Block_with((Type_Array)array4760, (Type_Array)empty_Type_Array, 2, 4, send43868, assign5321, send43871, send43874);
// do:
send43875 = (Object)new_AST_Send((Object)instancevariable1437, (Object)symbol7705, 1, (Object)block2743);
// size
send43876 = (Object)new_AST_Send((Object)localvariable6028, (Object)SMB_size, 0);
smallint2980 = (Object)new_Type_SmallInt(1);
constant8523 = (Object)new_AST_Constant((Object)smallint2980);
// =
send43877 = (Object)new_AST_Send((Object)send43876, (Object)SMB__equal, 1, (Object)constant8523);
// first
send43878 = (Object)new_AST_Send((Object)localvariable6028, (Object)symbol7702, 0);
// escape:
send43879 = (Object)new_AST_Send((Object)variable305, (Object)SMB_escape_, 1, (Object)send43878);
block2744 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43879);
// ifTrue:
send43880 = (Object)new_AST_Send((Object)send43877, (Object)SMB_ifTrue_, 1, (Object)block2744);
block2745 = (Object)new_AST_Block_with((Type_Array)array4759, (Type_Array)empty_Type_Array, 1, 4, assign5320, send43875, send43880, localvariable6028);
// on:
send43881 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2745);
method5852 = (Object)new_AST_Method_with((Type_Array)array4757, (Type_Array)array4758, 1, send43881);
methodclosure5852 = (Object)new_Runtime_MethodClosure(method5852);
store_method((Type_Class)class986, (Type_Symbol)symbol7853, (Runtime_MethodClosure)methodclosure5852);

classreference1156 = (Object)new_Organization_ClassReference((Type_Class)class986);
// new
send43882 = (Object)new_AST_Send((Object)classreference1156, (Object)symbol7640, 0);
// <&
send43883 = (Object)new_AST_Send((Object)send43882, (Object)symbol7880, 1, (Object)Self);
// <&
send43884 = (Object)new_AST_Send((Object)send43883, (Object)symbol7880, 1, (Object)localvariable6023);
method5853 = (Object)new_AST_Method_with((Type_Array)array4753, (Type_Array)empty_Type_Array, 1, send43884);
methodclosure5853 = (Object)new_Runtime_MethodClosure(method5853);
store_method((Type_Class)class978, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure5853);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send43885 = (Object)new_AST_Send((Object)instancevariable1428, (Object)SMB_hash, 0);
method5854 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43885);
methodclosure5854 = (Object)new_Runtime_MethodClosure(method5854);
store_method((Type_Class)class978, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure5854);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable306 = (Object)new_AST_Variable_named(L"return");
array4761 = (Object)new_Type_Array_with(1, (Object)variable306);
symbol7849 = (Object)new_Type_Symbol_cached(L"printString");
super493 = (Object)new_AST_Super((Object)symbol7849, 0);
// escape:
send43886 = (Object)new_AST_Send((Object)variable306, (Object)SMB_escape_, 1, (Object)super493);
block2746 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43886);
// ifNil:
send43887 = (Object)new_AST_Send((Object)instancevariable1428, (Object)symbol7895, 1, (Object)block2746);
string5083 = (Object)new_Type_String(L"parser (");
constant8524 = (Object)new_AST_Constant((Object)string5083);
// ,
send43888 = (Object)new_AST_Send((Object)constant8524, (Object)SMB__concat, 1, (Object)instancevariable1428);
string5084 = (Object)new_Type_String(L")");
constant8525 = (Object)new_AST_Constant((Object)string5084);
// ,
send43889 = (Object)new_AST_Send((Object)send43888, (Object)SMB__concat, 1, (Object)constant8525);
block2747 = (Object)new_AST_Block_with((Type_Array)array4761, (Type_Array)empty_Type_Array, 1, 2, send43887, send43889);
// on:
send43890 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2747);
method5855 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43890);
methodclosure5855 = (Object)new_Runtime_MethodClosure(method5855);
store_method((Type_Class)class978, (Type_Symbol)symbol7849, (Runtime_MethodClosure)methodclosure5855);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
symbol7839 = (Object)new_Type_Symbol_cached(L"times");
// times
send43891 = (Object)new_AST_Send((Object)Self, (Object)symbol7839, 0);
// skipWhitespace:
send43892 = (Object)new_AST_Send((Object)send43891, (Object)symbol7877, 1, (Object)False_Const);
method5856 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43892);
symbol7841 = (Object)new_Type_Symbol_cached(L"strongTimes");
methodclosure5856 = (Object)new_Runtime_MethodClosure(method5856);
store_method((Type_Class)class978, (Type_Symbol)symbol7841, (Runtime_MethodClosure)methodclosure5856);


// PEGExpression>>name
//name
// 	^ name
method5857 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1428);
methodclosure5857 = (Object)new_Runtime_MethodClosure(method5857);
store_method((Type_Class)class978, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure5857);


// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self

// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable6031 = (Object)new_AST_Variable_named(L"expression");
array4762 = (Object)new_Type_Array_with(1, (Object)localvariable6031);
super494 = (Object)new_AST_Super((Object)symbol7548, 0);
assign5322 = (Object)new_AST_Assign((Object)instancevariable1430, (Object)localvariable6031);
assign5323 = (Object)new_AST_Assign((Object)instancevariable1431, (Object)True_Const);
method5858 = (Object)new_AST_Method_with((Type_Array)array4762, (Type_Array)empty_Type_Array, 4, super494, assign5322, assign5323, Self);
methodclosure5858 = (Object)new_Runtime_MethodClosure(method5858);
store_method((Type_Class)class979, (Type_Symbol)symbol7875, (Runtime_MethodClosure)methodclosure5858);


// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable6032 = (Object)new_AST_Variable_named(L"anObject");
array4763 = (Object)new_Type_Array_with(1, (Object)localvariable6032);
assign5324 = (Object)new_AST_Assign((Object)instancevariable1431, (Object)localvariable6032);
method5859 = (Object)new_AST_Method_with((Type_Array)array4763, (Type_Array)empty_Type_Array, 2, assign5324, Self);
methodclosure5859 = (Object)new_Runtime_MethodClosure(method5859);
store_method((Type_Class)class979, (Type_Symbol)symbol7877, (Runtime_MethodClosure)methodclosure5859);


// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method5860 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1431);
methodclosure5860 = (Object)new_Runtime_MethodClosure(method5860);
store_method((Type_Class)class979, (Type_Symbol)symbol7676, (Runtime_MethodClosure)methodclosure5860);


// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable6033 = (Object)new_AST_Variable_named(L"input");
localvariable6034 = (Object)new_AST_Variable_named(L"result");
array4764 = (Object)new_Type_Array_with(2, (Object)localvariable6033, (Object)localvariable6034);
localvariable6035 = (Object)new_AST_Variable_named(L"match");
array4765 = (Object)new_Type_Array_with(1, (Object)localvariable6035);
// skipWhitespace
send43893 = (Object)new_AST_Send((Object)localvariable6033, (Object)symbol7676, 0);
block2748 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43893);
// ifTrue:
send43894 = (Object)new_AST_Send((Object)instancevariable1431, (Object)SMB_ifTrue_, 1, (Object)block2748);
// match:
send43895 = (Object)new_AST_Send((Object)instancevariable1430, (Object)symbol7846, 1, (Object)localvariable6033);
assign5325 = (Object)new_AST_Assign((Object)localvariable6035, (Object)send43895);
// isNil
send43896 = (Object)new_AST_Send((Object)localvariable6035, (Object)SMB_isNil, 0);
block2749 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send43894, assign5325, send43896);
// add:
send43897 = (Object)new_AST_Send((Object)localvariable6034, (Object)symbol7706, 1, (Object)localvariable6035);
block2750 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send43897);
// whileFalse:
send43898 = (Object)new_AST_Send((Object)block2749, (Object)SMB_whileFalse_, 1, (Object)block2750);
method5861 = (Object)new_AST_Method_with((Type_Array)array4764, (Type_Array)array4765, 2, send43898, localvariable6034);
symbol7876 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
methodclosure5861 = (Object)new_Runtime_MethodClosure(method5861);
store_method((Type_Class)class979, (Type_Symbol)symbol7876, (Runtime_MethodClosure)methodclosure5861);


// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable6036 = (Object)new_AST_Variable_named(L"input");
array4766 = (Object)new_Type_Array_with(1, (Object)localvariable6036);
// new
send43899 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
// privateMatch:on:
send43900 = (Object)new_AST_Send((Object)Self, (Object)symbol7876, 2, (Object)localvariable6036, (Object)send43899);
method5862 = (Object)new_AST_Method_with((Type_Array)array4766, (Type_Array)empty_Type_Array, 1, send43900);
methodclosure5862 = (Object)new_Runtime_MethodClosure(method5862);
store_method((Type_Class)class979, (Type_Symbol)symbol7853, (Runtime_MethodClosure)methodclosure5862);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method5863 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure5863 = (Object)new_Runtime_MethodClosure(method5863);
store_method((Type_Class)class979, (Type_Symbol)symbol7843, (Runtime_MethodClosure)methodclosure5863);

classreference1157 = (Object)new_Organization_ClassReference((Type_Class)class979);
// new:
send43901 = (Object)new_AST_Send((Object)classreference1157, (Object)symbol7630, 1, (Object)Self);
method5864 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43901);
methodclosure5864 = (Object)new_Runtime_MethodClosure(method5864);
store_method((Type_Class)class978, (Type_Symbol)symbol7839, (Runtime_MethodClosure)methodclosure5864);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self

// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable6037 = (Object)new_AST_Variable_named(L"input");
array4767 = (Object)new_Type_Array_with(1, (Object)localvariable6037);
localvariable6038 = (Object)new_AST_Variable_named(L"result");
localvariable6039 = (Object)new_AST_Variable_named(L"match");
array4768 = (Object)new_Type_Array_with(2, (Object)localvariable6038, (Object)localvariable6039);
variable307 = (Object)new_AST_Variable_named(L"return");
array4769 = (Object)new_Type_Array_with(1, (Object)variable307);
// new
send43902 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
assign5326 = (Object)new_AST_Assign((Object)localvariable6038, (Object)send43902);
// match:
send43903 = (Object)new_AST_Send((Object)instancevariable1430, (Object)symbol7846, 1, (Object)localvariable6037);
assign5327 = (Object)new_AST_Assign((Object)localvariable6039, (Object)send43903);
// escape:
send43904 = (Object)new_AST_Send((Object)variable307, (Object)SMB_escape_, 1, (Object)localvariable6039);
block2751 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43904);
// ifNil:
send43905 = (Object)new_AST_Send((Object)localvariable6039, (Object)symbol7895, 1, (Object)block2751);
// add:
send43906 = (Object)new_AST_Send((Object)localvariable6038, (Object)symbol7706, 1, (Object)localvariable6039);
// privateMatch:on:
send43907 = (Object)new_AST_Send((Object)Self, (Object)symbol7876, 2, (Object)localvariable6037, (Object)localvariable6038);
block2752 = (Object)new_AST_Block_with((Type_Array)array4769, (Type_Array)empty_Type_Array, 1, 5, assign5326, assign5327, send43905, send43906, send43907);
// on:
send43908 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2752);
method5865 = (Object)new_AST_Method_with((Type_Array)array4767, (Type_Array)array4768, 1, send43908);
methodclosure5865 = (Object)new_Runtime_MethodClosure(method5865);
store_method((Type_Class)class980, (Type_Symbol)symbol7853, (Runtime_MethodClosure)methodclosure5865);


// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self

// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable6040 = (Object)new_AST_Variable_named(L"expression");
array4770 = (Object)new_Type_Array_with(1, (Object)localvariable6040);
super495 = (Object)new_AST_Super((Object)symbol7548, 0);
assign5328 = (Object)new_AST_Assign((Object)instancevariable1432, (Object)localvariable6040);
assign5329 = (Object)new_AST_Assign((Object)instancevariable1433, (Object)True_Const);
method5866 = (Object)new_AST_Method_with((Type_Array)array4770, (Type_Array)empty_Type_Array, 4, super495, assign5328, assign5329, Self);
methodclosure5866 = (Object)new_Runtime_MethodClosure(method5866);
store_method((Type_Class)class981, (Type_Symbol)symbol7875, (Runtime_MethodClosure)methodclosure5866);


// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable6041 = (Object)new_AST_Variable_named(L"input");
array4771 = (Object)new_Type_Array_with(1, (Object)localvariable6041);
variable308 = (Object)new_AST_Variable_named(L"return");
array4772 = (Object)new_Type_Array_with(1, (Object)variable308);

// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable6042 = (Object)new_AST_Variable_named(L"block");
array4773 = (Object)new_Type_Array_with(1, (Object)localvariable6042);
// value:
send43909 = (Object)new_AST_Send((Object)localvariable6042, (Object)SMB_value_, 1, (Object)instancevariable1434);
method5867 = (Object)new_AST_Method_with((Type_Array)array4773, (Type_Array)empty_Type_Array, 2, send43909, Self);
symbol7883 = (Object)new_Type_Symbol_cached(L"ifMatched:");
methodclosure5867 = (Object)new_Runtime_MethodClosure(method5867);
store_method((Type_Class)class983, (Type_Symbol)symbol7883, (Runtime_MethodClosure)methodclosure5867);


// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable6043 = (Object)new_AST_Variable_named(L"newResult");
array4774 = (Object)new_Type_Array_with(1, (Object)localvariable6043);
assign5330 = (Object)new_AST_Assign((Object)instancevariable1434, (Object)localvariable6043);
method5868 = (Object)new_AST_Method_with((Type_Array)array4774, (Type_Array)empty_Type_Array, 2, assign5330, Self);
symbol7884 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure5868 = (Object)new_Runtime_MethodClosure(method5868);
store_method((Type_Class)class983, (Type_Symbol)symbol7884, (Runtime_MethodClosure)methodclosure5868);


// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable6044 = (Object)new_AST_Variable_named(L"alternative");
array4775 = (Object)new_Type_Array_with(1, (Object)localvariable6044);
method5869 = (Object)new_AST_Method_with((Type_Array)array4775, (Type_Array)empty_Type_Array, 1, instancevariable1434);
symbol7882 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
methodclosure5869 = (Object)new_Runtime_MethodClosure(method5869);
store_method((Type_Class)class983, (Type_Symbol)symbol7882, (Runtime_MethodClosure)methodclosure5869);

classreference1158 = (Object)new_Organization_ClassReference((Type_Class)class983);
// match:
send43910 = (Object)new_AST_Send((Object)instancevariable1432, (Object)symbol7846, 1, (Object)localvariable6041);
classreference1159 = (Object)new_Organization_ClassReference((Type_Class)class985);
// escape:
send43911 = (Object)new_AST_Send((Object)variable308, (Object)SMB_escape_, 1, (Object)classreference1159);
block2753 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43911);
// ifNil:
send43912 = (Object)new_AST_Send((Object)send43910, (Object)symbol7895, 1, (Object)block2753);
// new:
send43913 = (Object)new_AST_Send((Object)classreference1158, (Object)symbol7630, 1, (Object)send43912);
block2754 = (Object)new_AST_Block_with((Type_Array)array4772, (Type_Array)empty_Type_Array, 1, 1, send43913);
// on:
send43914 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2754);
method5870 = (Object)new_AST_Method_with((Type_Array)array4771, (Type_Array)empty_Type_Array, 1, send43914);
methodclosure5870 = (Object)new_Runtime_MethodClosure(method5870);
store_method((Type_Class)class981, (Type_Symbol)symbol7853, (Runtime_MethodClosure)methodclosure5870);


// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method5871 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure5871 = (Object)new_Runtime_MethodClosure(method5871);
store_method((Type_Class)class981, (Type_Symbol)symbol7843, (Runtime_MethodClosure)methodclosure5871);

classreference1160 = (Object)new_Organization_ClassReference((Type_Class)class981);
// new:
send43915 = (Object)new_AST_Send((Object)classreference1160, (Object)symbol7630, 1, (Object)Self);
method5872 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43915);
methodclosure5872 = (Object)new_Runtime_MethodClosure(method5872);
store_method((Type_Class)class980, (Type_Symbol)symbol7843, (Runtime_MethodClosure)methodclosure5872);

classreference1161 = (Object)new_Organization_ClassReference((Type_Class)class980);
// new:
send43916 = (Object)new_AST_Send((Object)classreference1161, (Object)symbol7630, 1, (Object)Self);
method5873 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43916);
methodclosure5873 = (Object)new_Runtime_MethodClosure(method5873);
store_method((Type_Class)class978, (Type_Symbol)symbol7851, (Runtime_MethodClosure)methodclosure5873);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send43917 = (Object)new_AST_Send((Object)classreference1160, (Object)symbol7630, 1, (Object)Self);
method5874 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43917);
methodclosure5874 = (Object)new_Runtime_MethodClosure(method5874);
store_method((Type_Class)class978, (Type_Symbol)symbol7843, (Runtime_MethodClosure)methodclosure5874);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable6045 = (Object)new_AST_Variable_named(L"expression");
array4776 = (Object)new_Type_Array_with(1, (Object)localvariable6045);

// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable6046 = (Object)new_AST_Variable_named(L"newChildren");
array4777 = (Object)new_Type_Array_with(1, (Object)localvariable6046);
super496 = (Object)new_AST_Super((Object)symbol7548, 0);
assign5331 = (Object)new_AST_Assign((Object)instancevariable1439, (Object)localvariable6046);
method5875 = (Object)new_AST_Method_with((Type_Array)array4777, (Type_Array)empty_Type_Array, 3, super496, assign5331, Self);
methodclosure5875 = (Object)new_Runtime_MethodClosure(method5875);
store_method((Type_Class)class987, (Type_Symbol)symbol7875, (Runtime_MethodClosure)methodclosure5875);


// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
super497 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send43918 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
// initialize:
send43919 = (Object)new_AST_Send((Object)Self, (Object)symbol7875, 1, (Object)send43918);
method5876 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super497, send43919, Self);
methodclosure5876 = (Object)new_Runtime_MethodClosure(method5876);
store_method((Type_Class)class987, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5876);


// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable6047 = (Object)new_AST_Variable_named(L"input");
array4778 = (Object)new_Type_Array_with(1, (Object)localvariable6047);
localvariable6048 = (Object)new_AST_Variable_named(L"match");
array4779 = (Object)new_Type_Array_with(1, (Object)localvariable6048);
variable309 = (Object)new_AST_Variable_named(L"return");
array4780 = (Object)new_Type_Array_with(1, (Object)variable309);
localvariable6049 = (Object)new_AST_Variable_named(L"child");
array4781 = (Object)new_Type_Array_with(1, (Object)localvariable6049);
// match:
send43920 = (Object)new_AST_Send((Object)localvariable6049, (Object)symbol7846, 1, (Object)localvariable6047);
assign5332 = (Object)new_AST_Assign((Object)localvariable6048, (Object)send43920);
symbol7901 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
// escape:
send43921 = (Object)new_AST_Send((Object)variable309, (Object)SMB_escape_, 1, (Object)localvariable6048);
block2755 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43921);
// ifNotNil:
send43922 = (Object)new_AST_Send((Object)localvariable6048, (Object)symbol7901, 1, (Object)block2755);
block2756 = (Object)new_AST_Block_with((Type_Array)array4781, (Type_Array)empty_Type_Array, 2, 2, assign5332, send43922);
// do:
send43923 = (Object)new_AST_Send((Object)instancevariable1439, (Object)symbol7705, 1, (Object)block2756);
block2757 = (Object)new_AST_Block_with((Type_Array)array4780, (Type_Array)empty_Type_Array, 1, 2, send43923, Nil_Const);
// on:
send43924 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2757);
method5877 = (Object)new_AST_Method_with((Type_Array)array4778, (Type_Array)array4779, 1, send43924);
methodclosure5877 = (Object)new_Runtime_MethodClosure(method5877);
store_method((Type_Class)class987, (Type_Symbol)symbol7853, (Runtime_MethodClosure)methodclosure5877);


// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable6050 = (Object)new_AST_Variable_named(L"child");
array4782 = (Object)new_Type_Array_with(1, (Object)localvariable6050);
// asPEG
send43925 = (Object)new_AST_Send((Object)localvariable6050, (Object)symbol7844, 0);
// add:
send43926 = (Object)new_AST_Send((Object)instancevariable1439, (Object)symbol7706, 1, (Object)send43925);
method5878 = (Object)new_AST_Method_with((Type_Array)array4782, (Type_Array)empty_Type_Array, 2, send43926, Self);
symbol7667 = (Object)new_Type_Symbol_cached(L"<=");
methodclosure5878 = (Object)new_Runtime_MethodClosure(method5878);
store_method((Type_Class)class987, (Type_Symbol)symbol7667, (Runtime_MethodClosure)methodclosure5878);

classreference1162 = (Object)new_Organization_ClassReference((Type_Class)class987);
// new
send43927 = (Object)new_AST_Send((Object)classreference1162, (Object)symbol7640, 0);
// <=
send43928 = (Object)new_AST_Send((Object)send43927, (Object)symbol7667, 1, (Object)Self);
// <=
send43929 = (Object)new_AST_Send((Object)send43928, (Object)symbol7667, 1, (Object)localvariable6045);
method5879 = (Object)new_AST_Method_with((Type_Array)array4776, (Type_Array)empty_Type_Array, 1, send43929);
methodclosure5879 = (Object)new_Runtime_MethodClosure(method5879);
store_method((Type_Class)class978, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure5879);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign5333 = (Object)new_AST_Assign((Object)instancevariable1429, (Object)False_Const);
method5880 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign5333, Self);
methodclosure5880 = (Object)new_Runtime_MethodClosure(method5880);
store_method((Type_Class)class978, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5880);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method5881 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure5881 = (Object)new_Runtime_MethodClosure(method5881);
store_method((Type_Class)class978, (Type_Symbol)symbol7844, (Runtime_MethodClosure)methodclosure5881);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable6051 = (Object)new_AST_Variable_named(L"input");
array4783 = (Object)new_Type_Array_with(1, (Object)localvariable6051);
symbol7902 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send43930 = (Object)new_AST_Send((Object)Self, (Object)symbol7902, 0);
method5882 = (Object)new_AST_Method_with((Type_Array)array4783, (Type_Array)empty_Type_Array, 2, send43930, Self);
methodclosure5882 = (Object)new_Runtime_MethodClosure(method5882);
store_method((Type_Class)class978, (Type_Symbol)symbol7853, (Runtime_MethodClosure)methodclosure5882);


// PEGExpression>>omit
//omit
// 	^ omit
method5883 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1429);
methodclosure5883 = (Object)new_Runtime_MethodClosure(method5883);
store_method((Type_Class)class978, (Type_Symbol)symbol7845, (Runtime_MethodClosure)methodclosure5883);

classreference1155 = (Object)new_Organization_ClassReference((Type_Class)class978);

// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable6052 = (Object)new_AST_Variable_named(L"parser");
array4784 = (Object)new_Type_Array_with(1, (Object)localvariable6052);
localvariable6053 = (Object)new_AST_Variable_named(L"result");
array4785 = (Object)new_Type_Array_with(1, (Object)localvariable6053);
symbol7859 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send43931 = (Object)new_AST_Send((Object)localvariable6052, (Object)symbol7859, 1, (Object)Self);
assign5334 = (Object)new_AST_Assign((Object)localvariable6053, (Object)send43931);
symbol7903 = (Object)new_Type_Symbol_cached(L"@");
// @
send43932 = (Object)new_AST_Send((Object)instancevariable1426, (Object)symbol7903, 1, (Object)localvariable6053);
method5884 = (Object)new_AST_Method_with((Type_Array)array4784, (Type_Array)array4785, 2, assign5334, send43932);
symbol7683 = (Object)new_Type_Symbol_cached(L"doMatch:");
methodclosure5884 = (Object)new_Runtime_MethodClosure(method5884);
store_method((Type_Class)class984, (Type_Symbol)symbol7683, (Runtime_MethodClosure)methodclosure5884);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable6054 = (Object)new_AST_Variable_named(L"parser");
array4786 = (Object)new_Type_Array_with(1, (Object)localvariable6054);
localvariable6055 = (Object)new_AST_Variable_named(L"result");
localvariable6056 = (Object)new_AST_Variable_named(L"doCache");
array4787 = (Object)new_Type_Array_with(2, (Object)localvariable6055, (Object)localvariable6056);
variable310 = (Object)new_AST_Variable_named(L"return");
array4788 = (Object)new_Type_Array_with(1, (Object)variable310);
assign5335 = (Object)new_AST_Assign((Object)localvariable6056, (Object)True_Const);
symbol7681 = (Object)new_Type_Symbol_cached(L"bucket");
// bucket
send43933 = (Object)new_AST_Send((Object)Self, (Object)symbol7681, 0);
// doMatch:
send43934 = (Object)new_AST_Send((Object)Self, (Object)symbol7683, 1, (Object)localvariable6054);
block2758 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43934);
// at:ifAbsentPut:
send43935 = (Object)new_AST_Send((Object)send43933, (Object)symbol7872, 2, (Object)localvariable6054, (Object)block2758);
assign5336 = (Object)new_AST_Assign((Object)localvariable6055, (Object)send43935);
symbol7904 = (Object)new_Type_Symbol_cached(L"x");
// x
send43936 = (Object)new_AST_Send((Object)localvariable6055, (Object)symbol7904, 0);
assign5337 = (Object)new_AST_Assign((Object)instancevariable1426, (Object)send43936);
symbol7905 = (Object)new_Type_Symbol_cached(L"y");
// y
send43937 = (Object)new_AST_Send((Object)localvariable6055, (Object)symbol7905, 0);
// escape:
send43938 = (Object)new_AST_Send((Object)variable310, (Object)SMB_escape_, 1, (Object)send43937);
block2759 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign5336, assign5337, send43938);
// doMatch:
send43939 = (Object)new_AST_Send((Object)Self, (Object)symbol7683, 1, (Object)localvariable6054);
// y
send43940 = (Object)new_AST_Send((Object)send43939, (Object)symbol7905, 0);
// escape:
send43941 = (Object)new_AST_Send((Object)variable310, (Object)SMB_escape_, 1, (Object)send43940);
block2760 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43941);
// ifTrue:ifFalse:
send43942 = (Object)new_AST_Send((Object)localvariable6056, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block2759, (Object)block2760);
block2761 = (Object)new_AST_Block_with((Type_Array)array4788, (Type_Array)empty_Type_Array, 1, 3, assign5335, send43942, Self);
// on:
send43943 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2761);
method5885 = (Object)new_AST_Method_with((Type_Array)array4786, (Type_Array)array4787, 1, send43943);
symbol7682 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
methodclosure5885 = (Object)new_Runtime_MethodClosure(method5885);
store_method((Type_Class)class984, (Type_Symbol)symbol7682, (Runtime_MethodClosure)methodclosure5885);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable6057 = (Object)new_AST_Variable_named(L"aString");
localvariable6058 = (Object)new_AST_Variable_named(L"aSeparator");
array4789 = (Object)new_Type_Array_with(2, (Object)localvariable6057, (Object)localvariable6058);
super498 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable6057);
assign5338 = (Object)new_AST_Assign((Object)instancevariable1435, (Object)localvariable6058);
// size
send43944 = (Object)new_AST_Send((Object)localvariable6057, (Object)SMB_size, 0);
smallint2981 = (Object)new_Type_SmallInt(1);
constant8526 = (Object)new_AST_Constant((Object)smallint2981);
// +
send43945 = (Object)new_AST_Send((Object)send43944, (Object)SMB__plus, 1, (Object)constant8526);
// new:
send43946 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)send43945);
assign5339 = (Object)new_AST_Assign((Object)instancevariable1436, (Object)send43946);
method5886 = (Object)new_AST_Method_with((Type_Array)array4789, (Type_Array)empty_Type_Array, 4, super498, assign5338, assign5339, Self);
symbol7678 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure5886 = (Object)new_Runtime_MethodClosure(method5886);
store_method((Type_Class)class984, (Type_Symbol)symbol7678, (Runtime_MethodClosure)methodclosure5886);


// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
// match:
send43947 = (Object)new_AST_Send((Object)instancevariable1435, (Object)symbol7846, 1, (Object)Self);
method5887 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43947);
methodclosure5887 = (Object)new_Runtime_MethodClosure(method5887);
store_method((Type_Class)class984, (Type_Symbol)symbol7676, (Runtime_MethodClosure)methodclosure5887);


// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable6059 = (Object)new_AST_Variable_named(L"bucket");
array4790 = (Object)new_Type_Array_with(1, (Object)localvariable6059);
variable311 = (Object)new_AST_Variable_named(L"return");
array4791 = (Object)new_Type_Array_with(1, (Object)variable311);
smallint2982 = (Object)new_Type_SmallInt(1);
constant8527 = (Object)new_AST_Constant((Object)smallint2982);
// +
send43948 = (Object)new_AST_Send((Object)instancevariable1426, (Object)SMB__plus, 1, (Object)constant8527);
// at:
send43949 = (Object)new_AST_Send((Object)instancevariable1436, (Object)SMB_at_, 1, (Object)send43948);
assign5340 = (Object)new_AST_Assign((Object)localvariable6059, (Object)send43949);
// escape:
send43950 = (Object)new_AST_Send((Object)variable311, (Object)SMB_escape_, 1, (Object)localvariable6059);
block2762 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43950);
// ifNotNil:
send43951 = (Object)new_AST_Send((Object)localvariable6059, (Object)symbol7901, 1, (Object)block2762);
smallint2983 = (Object)new_Type_SmallInt(1);
constant8528 = (Object)new_AST_Constant((Object)smallint2983);
// +
send43952 = (Object)new_AST_Send((Object)instancevariable1426, (Object)SMB__plus, 1, (Object)constant8528);
// new
send43953 = (Object)new_AST_Send((Object)classreference1150, (Object)symbol7640, 0);
// at:put:
send43954 = (Object)new_AST_Send((Object)instancevariable1436, (Object)SMB_at_put_, 2, (Object)send43952, (Object)send43953);
block2763 = (Object)new_AST_Block_with((Type_Array)array4791, (Type_Array)empty_Type_Array, 1, 3, assign5340, send43951, send43954);
// on:
send43955 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2763);
method5888 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4790, 1, send43955);
methodclosure5888 = (Object)new_Runtime_MethodClosure(method5888);
store_method((Type_Class)class984, (Type_Symbol)symbol7681, (Runtime_MethodClosure)methodclosure5888);


// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable6060 = (Object)new_AST_Variable_named(L"otherString");
array4792 = (Object)new_Type_Array_with(1, (Object)localvariable6060);
symbol7675 = (Object)new_Type_Symbol_cached(L"beginsWith:");
// beginsWith:
send43956 = (Object)new_AST_Send((Object)Self, (Object)symbol7675, 1, (Object)localvariable6060);
block2764 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable6060);
block2765 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send43957 = (Object)new_AST_Send((Object)send43956, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block2764, (Object)block2765);
method5889 = (Object)new_AST_Method_with((Type_Array)array4792, (Type_Array)empty_Type_Array, 1, send43957);
symbol7677 = (Object)new_Type_Symbol_cached(L"scan:");
methodclosure5889 = (Object)new_Runtime_MethodClosure(method5889);
store_method((Type_Class)class984, (Type_Symbol)symbol7677, (Runtime_MethodClosure)methodclosure5889);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable6061 = (Object)new_AST_Variable_named(L"subCollection");
array4793 = (Object)new_Type_Array_with(1, (Object)localvariable6061);
localvariable6062 = (Object)new_AST_Variable_named(L"pattern");
localvariable6063 = (Object)new_AST_Variable_named(L"startMatch");
array4794 = (Object)new_Type_Array_with(2, (Object)localvariable6062, (Object)localvariable6063);
variable312 = (Object)new_AST_Variable_named(L"return");
array4795 = (Object)new_Type_Array_with(1, (Object)variable312);
symbol7906 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send43958 = (Object)new_AST_Send((Object)localvariable6061, (Object)symbol7906, 0);
assign5341 = (Object)new_AST_Assign((Object)localvariable6062, (Object)send43958);
assign5342 = (Object)new_AST_Assign((Object)localvariable6063, (Object)Nil_Const);
// atEnd
send43959 = (Object)new_AST_Send((Object)localvariable6062, (Object)SMB_atEnd, 0);
block2766 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43959);
// atEnd
send43960 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
// escape:
send43961 = (Object)new_AST_Send((Object)variable312, (Object)SMB_escape_, 1, (Object)False_Const);
block2767 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43961);
// ifTrue:
send43962 = (Object)new_AST_Send((Object)send43960, (Object)SMB_ifTrue_, 1, (Object)block2767);
symbol7907 = (Object)new_Type_Symbol_cached(L"next");
// next
send43963 = (Object)new_AST_Send((Object)Self, (Object)symbol7907, 0);
// next
send43964 = (Object)new_AST_Send((Object)localvariable6062, (Object)symbol7907, 0);
// ~=
send43965 = (Object)new_AST_Send((Object)send43963, (Object)symbol7550, 1, (Object)send43964);
// escape:
send43966 = (Object)new_AST_Send((Object)variable312, (Object)SMB_escape_, 1, (Object)False_Const);
block2768 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43966);
// ifTrue:
send43967 = (Object)new_AST_Send((Object)send43965, (Object)SMB_ifTrue_, 1, (Object)block2768);
block2769 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send43962, send43967);
// whileFalse:
send43968 = (Object)new_AST_Send((Object)block2766, (Object)SMB_whileFalse_, 1, (Object)block2769);
block2770 = (Object)new_AST_Block_with((Type_Array)array4795, (Type_Array)empty_Type_Array, 1, 4, assign5341, assign5342, send43968, True_Const);
// on:
send43969 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2770);
method5890 = (Object)new_AST_Method_with((Type_Array)array4793, (Type_Array)array4794, 1, send43969);
methodclosure5890 = (Object)new_Runtime_MethodClosure(method5890);
store_method((Type_Class)class984, (Type_Symbol)symbol7675, (Runtime_MethodClosure)methodclosure5890);

classreference1163 = (Object)new_Organization_ClassReference((Type_Class)class984);

// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable6064 = (Object)new_AST_Variable_named(L"theExpression");
array4796 = (Object)new_Type_Array_with(1, (Object)localvariable6064);
// asPEG
send43970 = (Object)new_AST_Send((Object)localvariable6064, (Object)symbol7844, 0);
assign5343 = (Object)new_AST_Assign((Object)instancevariable1440, (Object)send43970);
method5891 = (Object)new_AST_Method_with((Type_Array)array4796, (Type_Array)empty_Type_Array, 2, assign5343, Self);
methodclosure5891 = (Object)new_Runtime_MethodClosure(method5891);
store_method((Type_Class)class988, (Type_Symbol)symbol7667, (Runtime_MethodClosure)methodclosure5891);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super499 = (Object)new_AST_Super((Object)symbol7548, 0);
// class
send43971 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol7908 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send43972 = (Object)new_AST_Send((Object)send43971, (Object)symbol7908, 0);
assign5344 = (Object)new_AST_Assign((Object)instancevariable1443, (Object)send43972);
method5892 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super499, assign5344, Self);
methodclosure5892 = (Object)new_Runtime_MethodClosure(method5892);
store_method((Type_Class)class988, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5892);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable6065 = (Object)new_AST_Variable_named(L"input");
array4797 = (Object)new_Type_Array_with(1, (Object)localvariable6065);
localvariable6066 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable6067 = (Object)new_AST_Variable_named(L"result");
array4798 = (Object)new_Type_Array_with(2, (Object)localvariable6066, (Object)localvariable6067);
// on:separator:
send43973 = (Object)new_AST_Send((Object)classreference1163, (Object)symbol7678, 2, (Object)localvariable6065, (Object)instancevariable1443);
assign5345 = (Object)new_AST_Assign((Object)localvariable6066, (Object)send43973);
// match:
send43974 = (Object)new_AST_Send((Object)Self, (Object)symbol7846, 1, (Object)localvariable6066);
assign5346 = (Object)new_AST_Assign((Object)localvariable6067, (Object)send43974);
method5893 = (Object)new_AST_Method_with((Type_Array)array4797, (Type_Array)array4798, 3, assign5345, assign5346, localvariable6067);
symbol7858 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure5893 = (Object)new_Runtime_MethodClosure(method5893);
store_method((Type_Class)class988, (Type_Symbol)symbol7858, (Runtime_MethodClosure)methodclosure5893);


// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable6068 = (Object)new_AST_Variable_named(L"input");
array4799 = (Object)new_Type_Array_with(1, (Object)localvariable6068);
localvariable6069 = (Object)new_AST_Variable_named(L"result");
array4800 = (Object)new_Type_Array_with(1, (Object)localvariable6069);
// memoizeMatch:
send43975 = (Object)new_AST_Send((Object)localvariable6068, (Object)symbol7682, 1, (Object)Self);
assign5347 = (Object)new_AST_Assign((Object)localvariable6069, (Object)send43975);
method5894 = (Object)new_AST_Method_with((Type_Array)array4799, (Type_Array)array4800, 2, assign5347, localvariable6069);
methodclosure5894 = (Object)new_Runtime_MethodClosure(method5894);
store_method((Type_Class)class988, (Type_Symbol)symbol7846, (Runtime_MethodClosure)methodclosure5894);


// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable6070 = (Object)new_AST_Variable_named(L"aSeparator");
array4801 = (Object)new_Type_Array_with(1, (Object)localvariable6070);
assign5348 = (Object)new_AST_Assign((Object)instancevariable1443, (Object)localvariable6070);
method5895 = (Object)new_AST_Method_with((Type_Array)array4801, (Type_Array)empty_Type_Array, 2, assign5348, Self);
symbol7856 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure5895 = (Object)new_Runtime_MethodClosure(method5895);
store_method((Type_Class)class988, (Type_Symbol)symbol7856, (Runtime_MethodClosure)methodclosure5895);


// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable6071 = (Object)new_AST_Variable_named(L"aBlock");
array4802 = (Object)new_Type_Array_with(1, (Object)localvariable6071);
assign5349 = (Object)new_AST_Assign((Object)instancevariable1441, (Object)localvariable6071);
method5896 = (Object)new_AST_Method_with((Type_Array)array4802, (Type_Array)empty_Type_Array, 2, assign5349, Self);
symbol7857 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure5896 = (Object)new_Runtime_MethodClosure(method5896);
store_method((Type_Class)class988, (Type_Symbol)symbol7857, (Runtime_MethodClosure)methodclosure5896);


// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable6072 = (Object)new_AST_Variable_named(L"input");
array4803 = (Object)new_Type_Array_with(1, (Object)localvariable6072);
localvariable6073 = (Object)new_AST_Variable_named(L"match");
array4804 = (Object)new_Type_Array_with(1, (Object)localvariable6073);
variable313 = (Object)new_AST_Variable_named(L"return");
array4805 = (Object)new_Type_Array_with(1, (Object)variable313);
// match:
send43976 = (Object)new_AST_Send((Object)instancevariable1440, (Object)symbol7846, 1, (Object)localvariable6072);
assign5350 = (Object)new_AST_Assign((Object)localvariable6073, (Object)send43976);
symbol7909 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block2771 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable6073);
// escape:
send43977 = (Object)new_AST_Send((Object)variable313, (Object)SMB_escape_, 1, (Object)localvariable6073);
block2772 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send43977);
// ifNil:
send43978 = (Object)new_AST_Send((Object)instancevariable1441, (Object)symbol7895, 1, (Object)block2772);
// value:
send43979 = (Object)new_AST_Send((Object)instancevariable1441, (Object)SMB_value_, 1, (Object)localvariable6073);
block2773 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send43978, send43979);
// ifNil:ifNotNil:
send43980 = (Object)new_AST_Send((Object)localvariable6073, (Object)symbol7909, 2, (Object)block2771, (Object)block2773);
block2774 = (Object)new_AST_Block_with((Type_Array)array4805, (Type_Array)empty_Type_Array, 1, 2, assign5350, send43980);
// on:
send43981 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2774);
method5897 = (Object)new_AST_Method_with((Type_Array)array4803, (Type_Array)array4804, 1, send43981);
methodclosure5897 = (Object)new_Runtime_MethodClosure(method5897);
store_method((Type_Class)class988, (Type_Symbol)symbol7859, (Runtime_MethodClosure)methodclosure5897);

classreference1164 = (Object)new_Organization_ClassReference((Type_Class)class988);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable6074 = (Object)new_AST_Variable_named(L"alternative");
array4806 = (Object)new_Type_Array_with(1, (Object)localvariable6074);
// subclassResponsibility
send43982 = (Object)new_AST_Send((Object)Self, (Object)symbol7902, 0);
method5898 = (Object)new_AST_Method_with((Type_Array)array4806, (Type_Array)empty_Type_Array, 2, send43982, Self);
methodclosure5898 = (Object)new_Runtime_MethodClosure(method5898);
store_method((Type_Class)class982, (Type_Symbol)symbol7882, (Runtime_MethodClosure)methodclosure5898);

classreference1165 = (Object)new_Organization_ClassReference((Type_Class)class982);

// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable6075 = (Object)new_AST_Variable_named(L"anObject");
array4807 = (Object)new_Type_Array_with(1, (Object)localvariable6075);
assign5351 = (Object)new_AST_Assign((Object)instancevariable1449, (Object)localvariable6075);
method5899 = (Object)new_AST_Method_with((Type_Array)array4807, (Type_Array)empty_Type_Array, 2, assign5351, Self);
symbol7714 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure5899 = (Object)new_Runtime_MethodClosure(method5899);
store_method((Type_Class)class991, (Type_Symbol)symbol7714, (Runtime_MethodClosure)methodclosure5899);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable6076 = (Object)new_AST_Variable_named(L"aStream");
array4808 = (Object)new_Type_Array_with(1, (Object)localvariable6076);
symbol7710 = (Object)new_Type_Symbol_cached(L"number");
// number
send43983 = (Object)new_AST_Send((Object)Self, (Object)symbol7710, 0);
// nextPutAll:
send43984 = (Object)new_AST_Send((Object)localvariable6076, (Object)symbol7888, 1, (Object)send43983);
method5900 = (Object)new_AST_Method_with((Type_Array)array4808, (Type_Array)empty_Type_Array, 2, send43984, Self);
methodclosure5900 = (Object)new_Runtime_MethodClosure(method5900);
store_method((Type_Class)class991, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5900);


// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger

// SmallInt>><=
//<= aSmallInt
// 	^ (self > aSmallInt) not.
localvariable6077 = (Object)new_AST_Variable_named(L"aSmallInt");
array4809 = (Object)new_Type_Array_with(1, (Object)localvariable6077);
// >
send43985 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable6077);
// not
send43986 = (Object)new_AST_Send((Object)send43985, (Object)SMB_not, 0);
method5901 = (Object)new_AST_Method_with((Type_Array)array4809, (Type_Array)empty_Type_Array, 1, send43986);
methodclosure5901 = (Object)new_Runtime_MethodClosure(method5901);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol7667, (Runtime_MethodClosure)methodclosure5901);

classreference1166 = (Object)new_Organization_ClassReference((Type_Class)Type_SmallInt_Class);
// new
send43987 = (Object)new_AST_Send((Object)classreference1166, (Object)symbol7640, 0);
symbol7910 = (Object)new_Type_Symbol_cached(L"int:");
symbol7712 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send43988 = (Object)new_AST_Send((Object)Self, (Object)symbol7712, 0);
// int:
send43989 = (Object)new_AST_Send((Object)send43987, (Object)symbol7910, 1, (Object)send43988);
method5902 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43989);
symbol7711 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure5902 = (Object)new_Runtime_MethodClosure(method5902);
store_method((Type_Class)class991, (Type_Symbol)symbol7711, (Runtime_MethodClosure)methodclosure5902);


// ASTNumber>>base
//base
// 	^ base
method5903 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1449);
symbol7713 = (Object)new_Type_Symbol_cached(L"base");
methodclosure5903 = (Object)new_Runtime_MethodClosure(method5903);
store_method((Type_Class)class991, (Type_Symbol)symbol7713, (Runtime_MethodClosure)methodclosure5903);


// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable6078 = (Object)new_AST_Variable_named(L"anObject");
array4810 = (Object)new_Type_Array_with(1, (Object)localvariable6078);
assign5352 = (Object)new_AST_Assign((Object)instancevariable1448, (Object)localvariable6078);
method5904 = (Object)new_AST_Method_with((Type_Array)array4810, (Type_Array)empty_Type_Array, 2, assign5352, Self);
symbol7709 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure5904 = (Object)new_Runtime_MethodClosure(method5904);
store_method((Type_Class)class991, (Type_Symbol)symbol7709, (Runtime_MethodClosure)methodclosure5904);


// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
// base
send43990 = (Object)new_AST_Send((Object)Self, (Object)symbol7713, 0);
string5085 = (Object)new_Type_String(L"r");
constant8529 = (Object)new_AST_Constant((Object)string5085);
// ,
send43991 = (Object)new_AST_Send((Object)send43990, (Object)SMB__concat, 1, (Object)constant8529);
// number
send43992 = (Object)new_AST_Send((Object)Self, (Object)symbol7710, 0);
// ,
send43993 = (Object)new_AST_Send((Object)send43991, (Object)SMB__concat, 1, (Object)send43992);
symbol7911 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send43994 = (Object)new_AST_Send((Object)send43993, (Object)symbol7911, 0);
// asInteger
send43995 = (Object)new_AST_Send((Object)send43994, (Object)symbol7712, 0);
method5905 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send43995);
methodclosure5905 = (Object)new_Runtime_MethodClosure(method5905);
store_method((Type_Class)class991, (Type_Symbol)symbol7712, (Runtime_MethodClosure)methodclosure5905);


// ASTNumber>>number
//number
// 	^ number
method5906 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1448);
methodclosure5906 = (Object)new_Runtime_MethodClosure(method5906);
store_method((Type_Class)class991, (Type_Symbol)symbol7710, (Runtime_MethodClosure)methodclosure5906);

classreference1167 = (Object)new_Organization_ClassReference((Type_Class)class991);

// ASTNode>>sourceObject
//sourceObject
// 	^ sourceObject
method5907 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1445);
symbol7689 = (Object)new_Type_Symbol_cached(L"sourceObject");
methodclosure5907 = (Object)new_Runtime_MethodClosure(method5907);
store_method((Type_Class)class989, (Type_Symbol)symbol7689, (Runtime_MethodClosure)methodclosure5907);


// ASTNode>>argumentOfBinary:
//argumentOfBinary: binary
// 	^ binary argument: self
localvariable6079 = (Object)new_AST_Variable_named(L"binary");
array4811 = (Object)new_Type_Array_with(1, (Object)localvariable6079);
symbol7737 = (Object)new_Type_Symbol_cached(L"argument:");
// argument:
send43996 = (Object)new_AST_Send((Object)localvariable6079, (Object)symbol7737, 1, (Object)Self);
method5908 = (Object)new_AST_Method_with((Type_Array)array4811, (Type_Array)empty_Type_Array, 1, send43996);
symbol7690 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
methodclosure5908 = (Object)new_Runtime_MethodClosure(method5908);
store_method((Type_Class)class989, (Type_Symbol)symbol7690, (Runtime_MethodClosure)methodclosure5908);


// ASTNode>>sourceObject:
//sourceObject: anObject
// 	sourceObject := anObject
localvariable6080 = (Object)new_AST_Variable_named(L"anObject");
array4812 = (Object)new_Type_Array_with(1, (Object)localvariable6080);
assign5353 = (Object)new_AST_Assign((Object)instancevariable1445, (Object)localvariable6080);
method5909 = (Object)new_AST_Method_with((Type_Array)array4812, (Type_Array)empty_Type_Array, 2, assign5353, Self);
symbol7686 = (Object)new_Type_Symbol_cached(L"sourceObject:");
methodclosure5909 = (Object)new_Runtime_MethodClosure(method5909);
store_method((Type_Class)class989, (Type_Symbol)symbol7686, (Runtime_MethodClosure)methodclosure5909);


// ASTNode>>isReturnExpression
//isReturnExpression
// 	^ false
method5910 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure5910 = (Object)new_Runtime_MethodClosure(method5910);
store_method((Type_Class)class989, (Type_Symbol)symbol7547, (Runtime_MethodClosure)methodclosure5910);


// ASTNode>>astType
//astType
// 	^ 'Type'
string5086 = (Object)new_Type_String(L"Type");
constant8530 = (Object)new_AST_Constant((Object)string5086);
method5911 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant8530);
symbol7691 = (Object)new_Type_Symbol_cached(L"astType");
methodclosure5911 = (Object)new_Runtime_MethodClosure(method5911);
store_method((Type_Class)class989, (Type_Symbol)symbol7691, (Runtime_MethodClosure)methodclosure5911);


// ASTNode>>hasReturnExpression
//hasReturnExpression
// 	^ false
method5912 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol7687 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
methodclosure5912 = (Object)new_Runtime_MethodClosure(method5912);
store_method((Type_Class)class989, (Type_Symbol)symbol7687, (Runtime_MethodClosure)methodclosure5912);


// ASTNode>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable6081 = (Object)new_AST_Variable_named(L"aMessage");
array4813 = (Object)new_Type_Array_with(1, (Object)localvariable6081);
localvariable6082 = (Object)new_AST_Variable_named(L"selector");
array4814 = (Object)new_Type_Array_with(1, (Object)localvariable6082);
variable314 = (Object)new_AST_Variable_named(L"return");
array4815 = (Object)new_Type_Array_with(1, (Object)variable314);
symbol7654 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send43997 = (Object)new_AST_Send((Object)localvariable6081, (Object)symbol7654, 0);
symbol7912 = (Object)new_Type_Symbol_cached(L"accept:");
constant8531 = (Object)new_AST_Constant((Object)symbol7912);
// =
send43998 = (Object)new_AST_Send((Object)send43997, (Object)SMB__equal, 1, (Object)constant8531);
super500 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable6081);
// escape:
send43999 = (Object)new_AST_Send((Object)variable314, (Object)SMB_escape_, 1, (Object)super500);
block2775 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send43999);
// ifFalse:
send44000 = (Object)new_AST_Send((Object)send43998, (Object)SMB_ifFalse_, 1, (Object)block2775);
string5087 = (Object)new_Type_String(L"visit");
constant8532 = (Object)new_AST_Constant((Object)string5087);
// class
send44001 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send44002 = (Object)new_AST_Send((Object)send44001, (Object)SMB_name, 0);
symbol7913 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");
smallint2984 = (Object)new_Type_SmallInt(4);
constant8533 = (Object)new_AST_Constant((Object)smallint2984);
// class
send44003 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send44004 = (Object)new_AST_Send((Object)send44003, (Object)SMB_name, 0);
// size
send44005 = (Object)new_AST_Send((Object)send44004, (Object)SMB_size, 0);
// copyFrom:to:
send44006 = (Object)new_AST_Send((Object)send44002, (Object)symbol7913, 2, (Object)constant8533, (Object)send44005);
// ,
send44007 = (Object)new_AST_Send((Object)constant8532, (Object)SMB__concat, 1, (Object)send44006);
string5088 = (Object)new_Type_String(L":");
constant8534 = (Object)new_AST_Constant((Object)string5088);
// ,
send44008 = (Object)new_AST_Send((Object)send44007, (Object)SMB__concat, 1, (Object)constant8534);
// asSymbol
send44009 = (Object)new_AST_Send((Object)send44008, (Object)SMB_asSymbol, 0);
assign5354 = (Object)new_AST_Assign((Object)localvariable6082, (Object)send44009);
symbol7738 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send44010 = (Object)new_AST_Send((Object)localvariable6081, (Object)symbol7738, 0);
symbol7914 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send44011 = (Object)new_AST_Send((Object)send44010, (Object)symbol7914, 2, (Object)localvariable6082, (Object)Self);
block2776 = (Object)new_AST_Block_with((Type_Array)array4815, (Type_Array)empty_Type_Array, 1, 3, send44000, assign5354, send44011);
// on:
send44012 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2776);
method5913 = (Object)new_AST_Method_with((Type_Array)array4813, (Type_Array)array4814, 1, send44012);
methodclosure5913 = (Object)new_Runtime_MethodClosure(method5913);
store_method((Type_Class)class989, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure5913);


// ASTNode>>astName
//astName
// 	^ (self class name 
// 			copyFrom: 4
// 			to: self class name size) capitalized
// class
send44013 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send44014 = (Object)new_AST_Send((Object)send44013, (Object)SMB_name, 0);
smallint2985 = (Object)new_Type_SmallInt(4);
constant8535 = (Object)new_AST_Constant((Object)smallint2985);
// class
send44015 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send44016 = (Object)new_AST_Send((Object)send44015, (Object)SMB_name, 0);
// size
send44017 = (Object)new_AST_Send((Object)send44016, (Object)SMB_size, 0);
// copyFrom:to:
send44018 = (Object)new_AST_Send((Object)send44014, (Object)symbol7913, 2, (Object)constant8535, (Object)send44017);
symbol7664 = (Object)new_Type_Symbol_cached(L"capitalized");
// capitalized
send44019 = (Object)new_AST_Send((Object)send44018, (Object)symbol7664, 0);
method5914 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44019);
symbol7692 = (Object)new_Type_Symbol_cached(L"astName");
methodclosure5914 = (Object)new_Runtime_MethodClosure(method5914);
store_method((Type_Class)class989, (Type_Symbol)symbol7692, (Runtime_MethodClosure)methodclosure5914);


// ASTNode>>uid
//uid
// 	uid isNil ifTrue: [ uid := self class uidFor: self].
// 	^ uid
// isNil
send44020 = (Object)new_AST_Send((Object)instancevariable1446, (Object)SMB_isNil, 0);
// class
send44021 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol7915 = (Object)new_Type_Symbol_cached(L"uidFor:");
// uidFor:
send44022 = (Object)new_AST_Send((Object)send44021, (Object)symbol7915, 1, (Object)Self);
assign5355 = (Object)new_AST_Assign((Object)instancevariable1446, (Object)send44022);
block2777 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign5355);
// ifTrue:
send44023 = (Object)new_AST_Send((Object)send44020, (Object)SMB_ifTrue_, 1, (Object)block2777);
method5915 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send44023, instancevariable1446);
methodclosure5915 = (Object)new_Runtime_MethodClosure(method5915);
store_method((Type_Class)class989, (Type_Symbol)symbol7688, (Runtime_MethodClosure)methodclosure5915);

classreference1168 = (Object)new_Organization_ClassReference((Type_Class)class989);

// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable6083 = (Object)new_AST_Variable_named(L"anObject");
array4816 = (Object)new_Type_Array_with(1, (Object)localvariable6083);
assign5356 = (Object)new_AST_Assign((Object)instancevariable1451, (Object)localvariable6083);
method5916 = (Object)new_AST_Method_with((Type_Array)array4816, (Type_Array)empty_Type_Array, 2, assign5356, Self);
symbol7739 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure5916 = (Object)new_Runtime_MethodClosure(method5916);
store_method((Type_Class)class993, (Type_Symbol)symbol7739, (Runtime_MethodClosure)methodclosure5916);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol7916 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string5089 = (Object)new_Type_String(L":");
constant8536 = (Object)new_AST_Constant((Object)string5089);
// joinUsing:
send44024 = (Object)new_AST_Send((Object)instancevariable1451, (Object)symbol7916, 1, (Object)constant8536);
string5090 = (Object)new_Type_String(L":");
constant8537 = (Object)new_AST_Constant((Object)string5090);
// ,
send44025 = (Object)new_AST_Send((Object)send44024, (Object)SMB__concat, 1, (Object)constant8537);
method5917 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44025);
symbol7733 = (Object)new_Type_Symbol_cached(L"selectorName");
methodclosure5917 = (Object)new_Runtime_MethodClosure(method5917);
store_method((Type_Class)class993, (Type_Symbol)symbol7733, (Runtime_MethodClosure)methodclosure5917);


// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super501 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send44026 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
assign5357 = (Object)new_AST_Assign((Object)instancevariable1451, (Object)send44026);
method5918 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super501, assign5357, Self);
methodclosure5918 = (Object)new_Runtime_MethodClosure(method5918);
store_method((Type_Class)class993, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5918);


// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method5919 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1451);
symbol7740 = (Object)new_Type_Symbol_cached(L"keywords");
methodclosure5919 = (Object)new_Runtime_MethodClosure(method5919);
store_method((Type_Class)class993, (Type_Symbol)symbol7740, (Runtime_MethodClosure)methodclosure5919);

classreference1169 = (Object)new_Organization_ClassReference((Type_Class)class993);
classreference1170 = (Object)new_Organization_ClassReference((Type_Class)class995);

// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable6084 = (Object)new_AST_Variable_named(L"aStream");
array4817 = (Object)new_Type_Array_with(1, (Object)localvariable6084);
// nextPutAll:
send44027 = (Object)new_AST_Send((Object)localvariable6084, (Object)symbol7888, 1, (Object)instancevariable1452);
method5920 = (Object)new_AST_Method_with((Type_Array)array4817, (Type_Array)empty_Type_Array, 2, send44027, Self);
methodclosure5920 = (Object)new_Runtime_MethodClosure(method5920);
store_method((Type_Class)class996, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5920);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol

// Symbol>>capitalized
//capitalized
// 	^ self asString capitalized asSymbol
// asString
send44028 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);
// capitalized
send44029 = (Object)new_AST_Send((Object)send44028, (Object)symbol7664, 0);
// asSymbol
send44030 = (Object)new_AST_Send((Object)send44029, (Object)SMB_asSymbol, 0);
method5921 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44030);
methodclosure5921 = (Object)new_Runtime_MethodClosure(method5921);
store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol7664, (Runtime_MethodClosure)methodclosure5921);

classreference1171 = (Object)new_Organization_ClassReference((Type_Class)Type_Symbol_Class);
symbol7715 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send44031 = (Object)new_AST_Send((Object)Self, (Object)symbol7715, 0);
// named:
send44032 = (Object)new_AST_Send((Object)classreference1171, (Object)symbol7864, 1, (Object)send44031);
method5922 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44032);
symbol7717 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure5922 = (Object)new_Runtime_MethodClosure(method5922);
store_method((Type_Class)class996, (Type_Symbol)symbol7717, (Runtime_MethodClosure)methodclosure5922);


// ASTSymbol>>symbol
//symbol
// 	^ symbol
method5923 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1452);
methodclosure5923 = (Object)new_Runtime_MethodClosure(method5923);
store_method((Type_Class)class996, (Type_Symbol)symbol7715, (Runtime_MethodClosure)methodclosure5923);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
// symbol
send44033 = (Object)new_AST_Send((Object)Self, (Object)symbol7715, 0);
// asString
send44034 = (Object)new_AST_Send((Object)send44033, (Object)SMB_asString, 0);
method5924 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44034);
methodclosure5924 = (Object)new_Runtime_MethodClosure(method5924);
store_method((Type_Class)class996, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure5924);


// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable6085 = (Object)new_AST_Variable_named(L"aSymbol");
array4818 = (Object)new_Type_Array_with(1, (Object)localvariable6085);
assign5358 = (Object)new_AST_Assign((Object)instancevariable1452, (Object)localvariable6085);
method5925 = (Object)new_AST_Method_with((Type_Array)array4818, (Type_Array)empty_Type_Array, 2, assign5358, Self);
symbol7716 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure5925 = (Object)new_Runtime_MethodClosure(method5925);
store_method((Type_Class)class996, (Type_Symbol)symbol7716, (Runtime_MethodClosure)methodclosure5925);


// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send44035 = (Object)new_AST_Send((Object)Self, (Object)symbol7715, 0);
// asSymbol
send44036 = (Object)new_AST_Send((Object)send44035, (Object)SMB_asSymbol, 0);
method5926 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44036);
methodclosure5926 = (Object)new_Runtime_MethodClosure(method5926);
store_method((Type_Class)class996, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure5926);

classreference1172 = (Object)new_Organization_ClassReference((Type_Class)class996);

// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable6086 = (Object)new_AST_Variable_named(L"aSelector");
array4819 = (Object)new_Type_Array_with(1, (Object)localvariable6086);
variable315 = (Object)new_AST_Variable_named(L"return");
array4820 = (Object)new_Type_Array_with(1, (Object)variable315);
symbol7736 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
super502 = (Object)new_AST_Super((Object)symbol7736, 1, (Object)localvariable6086);
// escape:
send44037 = (Object)new_AST_Send((Object)variable315, (Object)SMB_escape_, 1, (Object)False_Const);
block2778 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44037);
// ifFalse:
send44038 = (Object)new_AST_Send((Object)super502, (Object)SMB_ifFalse_, 1, (Object)block2778);
symbol7755 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
// compatibleArgumentsWith:
send44039 = (Object)new_AST_Send((Object)Self, (Object)symbol7755, 1, (Object)localvariable6086);
block2779 = (Object)new_AST_Block_with((Type_Array)array4820, (Type_Array)empty_Type_Array, 1, 2, send44038, send44039);
// on:
send44040 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2779);
method5927 = (Object)new_AST_Method_with((Type_Array)array4819, (Type_Array)empty_Type_Array, 1, send44040);
methodclosure5927 = (Object)new_Runtime_MethodClosure(method5927);
store_method((Type_Class)class997, (Type_Symbol)symbol7736, (Runtime_MethodClosure)methodclosure5927);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super503 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send44041 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
assign5359 = (Object)new_AST_Assign((Object)instancevariable1453, (Object)send44041);
method5928 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super503, assign5359, Self);
methodclosure5928 = (Object)new_Runtime_MethodClosure(method5928);
store_method((Type_Class)class997, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5928);


// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable6087 = (Object)new_AST_Variable_named(L"aCollection");
array4821 = (Object)new_Type_Array_with(1, (Object)localvariable6087);
symbol7917 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send44042 = (Object)new_AST_Send((Object)Self, (Object)symbol7917, 0);
assign5360 = (Object)new_AST_Assign((Object)instancevariable1453, (Object)localvariable6087);
method5929 = (Object)new_AST_Method_with((Type_Array)array4821, (Type_Array)empty_Type_Array, 3, send44042, assign5360, Self);
symbol7754 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure5929 = (Object)new_Runtime_MethodClosure(method5929);
store_method((Type_Class)class997, (Type_Symbol)symbol7754, (Runtime_MethodClosure)methodclosure5929);


// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method5930 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1453);
symbol7735 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure5930 = (Object)new_Runtime_MethodClosure(method5930);
store_method((Type_Class)class997, (Type_Symbol)symbol7735, (Runtime_MethodClosure)methodclosure5930);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable6088 = (Object)new_AST_Variable_named(L"aSelector");
array4822 = (Object)new_Type_Array_with(1, (Object)localvariable6088);
variable316 = (Object)new_AST_Variable_named(L"return");
array4823 = (Object)new_Type_Array_with(1, (Object)variable316);
// size
send44043 = (Object)new_AST_Send((Object)instancevariable1453, (Object)SMB_size, 0);
symbol7918 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable6089 = (Object)new_AST_Variable_named(L"index");
array4824 = (Object)new_Type_Array_with(1, (Object)localvariable6089);
// at:
send44044 = (Object)new_AST_Send((Object)instancevariable1453, (Object)SMB_at_, 1, (Object)localvariable6089);
// layout
send44045 = (Object)new_AST_Send((Object)send44044, (Object)symbol7635, 0);
// parameters
send44046 = (Object)new_AST_Send((Object)localvariable6088, (Object)symbol7735, 0);
// at:
send44047 = (Object)new_AST_Send((Object)send44046, (Object)SMB_at_, 1, (Object)localvariable6089);
// layout
send44048 = (Object)new_AST_Send((Object)send44047, (Object)symbol7635, 0);
// =
send44049 = (Object)new_AST_Send((Object)send44045, (Object)SMB__equal, 1, (Object)send44048);
// escape:
send44050 = (Object)new_AST_Send((Object)variable316, (Object)SMB_escape_, 1, (Object)False_Const);
block2780 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44050);
// ifFalse:
send44051 = (Object)new_AST_Send((Object)send44049, (Object)SMB_ifFalse_, 1, (Object)block2780);
block2781 = (Object)new_AST_Block_with((Type_Array)array4824, (Type_Array)empty_Type_Array, 2, 1, send44051);
// timesRepeat:
send44052 = (Object)new_AST_Send((Object)send44043, (Object)symbol7918, 1, (Object)block2781);
block2782 = (Object)new_AST_Block_with((Type_Array)array4823, (Type_Array)empty_Type_Array, 1, 2, send44052, True_Const);
// on:
send44053 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2782);
method5931 = (Object)new_AST_Method_with((Type_Array)array4822, (Type_Array)empty_Type_Array, 1, send44053);
methodclosure5931 = (Object)new_Runtime_MethodClosure(method5931);
store_method((Type_Class)class997, (Type_Symbol)symbol7755, (Runtime_MethodClosure)methodclosure5931);

classreference1173 = (Object)new_Organization_ClassReference((Type_Class)class997);
classreference1174 = (Object)new_Organization_ClassReference((Type_Class)class998);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable6090 = (Object)new_AST_Variable_named(L"aStream");
array4825 = (Object)new_Type_Array_with(1, (Object)localvariable6090);
string5091 = (Object)new_Type_String(L"self");
constant8538 = (Object)new_AST_Constant((Object)string5091);
// nextPutAll:
send44054 = (Object)new_AST_Send((Object)localvariable6090, (Object)symbol7888, 1, (Object)constant8538);
method5932 = (Object)new_AST_Method_with((Type_Array)array4825, (Type_Array)empty_Type_Array, 2, send44054, Self);
methodclosure5932 = (Object)new_Runtime_MethodClosure(method5932);
store_method((Type_Class)class999, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5932);

classreference1175 = (Object)new_Organization_ClassReference((Type_Class)class999);
classreference1176 = (Object)new_Organization_ClassReference((Type_Class)class1000);

// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable6091 = (Object)new_AST_Variable_named(L"anObject");
array4826 = (Object)new_Type_Array_with(1, (Object)localvariable6091);
localvariable6092 = (Object)new_AST_Variable_named(L"string");
array4827 = (Object)new_Type_Array_with(1, (Object)localvariable6092);
assign5361 = (Object)new_AST_Assign((Object)instancevariable1450, (Object)localvariable6091);
// asString
send44055 = (Object)new_AST_Send((Object)instancevariable1450, (Object)SMB_asString, 0);
assign5362 = (Object)new_AST_Assign((Object)localvariable6092, (Object)send44055);
// size
send44056 = (Object)new_AST_Send((Object)localvariable6092, (Object)SMB_size, 0);
smallint2986 = (Object)new_Type_SmallInt(1);
constant8539 = (Object)new_AST_Constant((Object)smallint2986);
// >
send44057 = (Object)new_AST_Send((Object)send44056, (Object)SMB__gt, 1, (Object)constant8539);
// size
send44058 = (Object)new_AST_Send((Object)localvariable6092, (Object)SMB_size, 0);
smallint2987 = (Object)new_Type_SmallInt(1);
constant8540 = (Object)new_AST_Constant((Object)smallint2987);
// -
send44059 = (Object)new_AST_Send((Object)send44058, (Object)SMB__minus, 1, (Object)constant8540);
// at:
send44060 = (Object)new_AST_Send((Object)localvariable6092, (Object)SMB_at_, 1, (Object)send44059);
symbol7919 = (Object)new_Type_Symbol_cached(L"should");
// should
send44061 = (Object)new_AST_Send((Object)send44060, (Object)symbol7919, 0);
// not
send44062 = (Object)new_AST_Send((Object)send44061, (Object)SMB_not, 0);
string5092 = (Object)new_Type_String(L":");
constant8541 = (Object)new_AST_Constant((Object)string5092);
// =
send44063 = (Object)new_AST_Send((Object)send44062, (Object)SMB__equal, 1, (Object)constant8541);
block2783 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send44063);
// ifTrue:
send44064 = (Object)new_AST_Send((Object)send44057, (Object)SMB_ifTrue_, 1, (Object)block2783);
method5933 = (Object)new_AST_Method_with((Type_Array)array4826, (Type_Array)array4827, 4, assign5361, assign5362, send44064, Self);
symbol7734 = (Object)new_Type_Symbol_cached(L"selector:");
methodclosure5933 = (Object)new_Runtime_MethodClosure(method5933);
store_method((Type_Class)class992, (Type_Symbol)symbol7734, (Runtime_MethodClosure)methodclosure5933);


// ASTSelector>>selector
//selector
// 	^ selector
method5934 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1450);
methodclosure5934 = (Object)new_Runtime_MethodClosure(method5934);
store_method((Type_Class)class992, (Type_Symbol)symbol7654, (Runtime_MethodClosure)methodclosure5934);


// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable6093 = (Object)new_AST_Variable_named(L"aStream");
array4828 = (Object)new_Type_Array_with(1, (Object)localvariable6093);
// selector
send44065 = (Object)new_AST_Send((Object)Self, (Object)symbol7654, 0);
// printOn:
send44066 = (Object)new_AST_Send((Object)send44065, (Object)symbol7650, 1, (Object)localvariable6093);
method5935 = (Object)new_AST_Method_with((Type_Array)array4828, (Type_Array)empty_Type_Array, 2, send44066, Self);
methodclosure5935 = (Object)new_Runtime_MethodClosure(method5935);
store_method((Type_Class)class992, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5935);


// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable6094 = (Object)new_AST_Variable_named(L"aSelector");
array4829 = (Object)new_Type_Array_with(1, (Object)localvariable6094);
// selectorName
send44067 = (Object)new_AST_Send((Object)Self, (Object)symbol7733, 0);
// selectorName
send44068 = (Object)new_AST_Send((Object)localvariable6094, (Object)symbol7733, 0);
// =
send44069 = (Object)new_AST_Send((Object)send44067, (Object)SMB__equal, 1, (Object)send44068);
method5936 = (Object)new_AST_Method_with((Type_Array)array4829, (Type_Array)empty_Type_Array, 1, send44069);
methodclosure5936 = (Object)new_Runtime_MethodClosure(method5936);
store_method((Type_Class)class992, (Type_Symbol)symbol7736, (Runtime_MethodClosure)methodclosure5936);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send44070 = (Object)new_AST_Send((Object)Self, (Object)symbol7654, 0);
// asString
send44071 = (Object)new_AST_Send((Object)send44070, (Object)SMB_asString, 0);
method5937 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44071);
methodclosure5937 = (Object)new_Runtime_MethodClosure(method5937);
store_method((Type_Class)class992, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure5937);


// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send44072 = (Object)new_AST_Send((Object)Self, (Object)symbol7654, 0);
// printString
send44073 = (Object)new_AST_Send((Object)send44072, (Object)symbol7849, 0);
method5938 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send44073, Self);
methodclosure5938 = (Object)new_Runtime_MethodClosure(method5938);
store_method((Type_Class)class992, (Type_Symbol)symbol7733, (Runtime_MethodClosure)methodclosure5938);


// ASTSelector>>parameters
//parameters
// 	^ Array new.
// new
send44074 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7640, 0);
method5939 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44074);
methodclosure5939 = (Object)new_Runtime_MethodClosure(method5939);
store_method((Type_Class)class992, (Type_Symbol)symbol7735, (Runtime_MethodClosure)methodclosure5939);

classreference1177 = (Object)new_Organization_ClassReference((Type_Class)class992);
classreference1178 = (Object)new_Organization_ClassReference((Type_Class)class990);

// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name

// LocalVariable>>key
//key
// 	^ key
method5940 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1488);
symbol7870 = (Object)new_Type_Symbol_cached(L"key");
methodclosure5940 = (Object)new_Runtime_MethodClosure(method5940);
store_method((Type_Class)class1022, (Type_Symbol)symbol7870, (Runtime_MethodClosure)methodclosure5940);


// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable6095 = (Object)new_AST_Variable_named(L"anObject");
array4830 = (Object)new_Type_Array_with(1, (Object)localvariable6095);
assign5363 = (Object)new_AST_Assign((Object)instancevariable1488, (Object)localvariable6095);
method5941 = (Object)new_AST_Method_with((Type_Array)array4830, (Type_Array)empty_Type_Array, 2, assign5363, Self);
symbol7869 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure5941 = (Object)new_Runtime_MethodClosure(method5941);
store_method((Type_Class)class1022, (Type_Symbol)symbol7869, (Runtime_MethodClosure)methodclosure5941);

classreference1179 = (Object)new_Organization_ClassReference((Type_Class)class1022);
// new
send44075 = (Object)new_AST_Send((Object)classreference1179, (Object)symbol7640, 0);
// name
send44076 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name:
send44077 = (Object)new_AST_Send((Object)send44075, (Object)symbol7723, 1, (Object)send44076);
method5942 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44077);
symbol7722 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure5942 = (Object)new_Runtime_MethodClosure(method5942);
store_method((Type_Class)class1001, (Type_Symbol)symbol7722, (Runtime_MethodClosure)methodclosure5942);


// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable6096 = (Object)new_AST_Variable_named(L"aStream");
array4831 = (Object)new_Type_Array_with(1, (Object)localvariable6096);
super504 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable6096);
localvariable6097 = (Object)new_AST_Variable_named(L"receiver");
array4832 = (Object)new_Type_Array_with(1, (Object)localvariable6097);
string5093 = (Object)new_Type_String(L"(");
constant8542 = (Object)new_AST_Constant((Object)string5093);
// nextPutAll:
send44078 = (Object)new_AST_Send((Object)localvariable6097, (Object)symbol7888, 1, (Object)constant8542);
// name
send44079 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// nextPutAll:
send44080 = (Object)new_AST_Send((Object)localvariable6097, (Object)symbol7888, 1, (Object)send44079);
string5094 = (Object)new_Type_String(L")");
constant8543 = (Object)new_AST_Constant((Object)string5094);
// nextPutAll:
send44081 = (Object)new_AST_Send((Object)localvariable6097, (Object)symbol7888, 1, (Object)constant8543);
block2784 = (Object)new_AST_Block_with((Type_Array)array4832, (Type_Array)empty_Type_Array, 1, 3, send44078, send44080, send44081);
// value:
send44082 = (Object)new_AST_Send((Object)block2784, (Object)SMB_value_, 1, (Object)localvariable6096);
method5943 = (Object)new_AST_Method_with((Type_Array)array4831, (Type_Array)empty_Type_Array, 3, super504, send44082, Self);
methodclosure5943 = (Object)new_Runtime_MethodClosure(method5943);
store_method((Type_Class)class1001, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5943);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable6098 = (Object)new_AST_Variable_named(L"anObject");
array4833 = (Object)new_Type_Array_with(1, (Object)localvariable6098);
assign5364 = (Object)new_AST_Assign((Object)instancevariable1454, (Object)localvariable6098);
method5944 = (Object)new_AST_Method_with((Type_Array)array4833, (Type_Array)empty_Type_Array, 2, assign5364, Self);
methodclosure5944 = (Object)new_Runtime_MethodClosure(method5944);
store_method((Type_Class)class1001, (Type_Symbol)symbol7723, (Runtime_MethodClosure)methodclosure5944);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable6099 = (Object)new_AST_Variable_named(L"other");
array4834 = (Object)new_Type_Array_with(1, (Object)localvariable6099);
// name
send44083 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name
send44084 = (Object)new_AST_Send((Object)localvariable6099, (Object)SMB_name, 0);
// =
send44085 = (Object)new_AST_Send((Object)send44083, (Object)SMB__equal, 1, (Object)send44084);
method5945 = (Object)new_AST_Method_with((Type_Array)array4834, (Type_Array)empty_Type_Array, 1, send44085);
methodclosure5945 = (Object)new_Runtime_MethodClosure(method5945);
store_method((Type_Class)class1001, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure5945);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super505 = (Object)new_AST_Super((Object)symbol7548, 0);
method5946 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super505, Self);
methodclosure5946 = (Object)new_Runtime_MethodClosure(method5946);
store_method((Type_Class)class1001, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5946);


// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable6100 = (Object)new_AST_Variable_named(L"anObject");
array4835 = (Object)new_Type_Array_with(1, (Object)localvariable6100);
// layout
send44086 = (Object)new_AST_Send((Object)Self, (Object)symbol7635, 0);
symbol7920 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send44087 = (Object)new_AST_Send((Object)localvariable6100, (Object)symbol7635, 0);
// combineWith:
send44088 = (Object)new_AST_Send((Object)send44086, (Object)symbol7920, 1, (Object)send44087);
method5947 = (Object)new_AST_Method_with((Type_Array)array4835, (Type_Array)empty_Type_Array, 2, send44088, Self);
symbol7724 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure5947 = (Object)new_Runtime_MethodClosure(method5947);
store_method((Type_Class)class1001, (Type_Symbol)symbol7724, (Runtime_MethodClosure)methodclosure5947);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable6101 = (Object)new_AST_Variable_named(L"anObject");
array4836 = (Object)new_Type_Array_with(1, (Object)localvariable6101);
// layout
send44089 = (Object)new_AST_Send((Object)Self, (Object)symbol7635, 0);
symbol7921 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send44090 = (Object)new_AST_Send((Object)localvariable6101, (Object)symbol7635, 0);
// isSameTypeAs:
send44091 = (Object)new_AST_Send((Object)send44089, (Object)symbol7921, 1, (Object)send44090);
method5948 = (Object)new_AST_Method_with((Type_Array)array4836, (Type_Array)empty_Type_Array, 1, send44091);
symbol7725 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure5948 = (Object)new_Runtime_MethodClosure(method5948);
store_method((Type_Class)class1001, (Type_Symbol)symbol7725, (Runtime_MethodClosure)methodclosure5948);


// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send44092 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// hash
send44093 = (Object)new_AST_Send((Object)send44092, (Object)SMB_hash, 0);
method5949 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44093);
methodclosure5949 = (Object)new_Runtime_MethodClosure(method5949);
store_method((Type_Class)class1001, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure5949);


// ASTVariable>>name
//name
// 	^ name
method5950 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1454);
methodclosure5950 = (Object)new_Runtime_MethodClosure(method5950);
store_method((Type_Class)class1001, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure5950);

classreference1180 = (Object)new_Organization_ClassReference((Type_Class)class1001);

// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable6102 = (Object)new_AST_Variable_named(L"newExpressions");
array4837 = (Object)new_Type_Array_with(1, (Object)localvariable6102);
assign5365 = (Object)new_AST_Assign((Object)instancevariable1456, (Object)localvariable6102);
method5951 = (Object)new_AST_Method_with((Type_Array)array4837, (Type_Array)empty_Type_Array, 2, assign5365, Self);
symbol7874 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure5951 = (Object)new_Runtime_MethodClosure(method5951);
store_method((Type_Class)class1003, (Type_Symbol)symbol7874, (Runtime_MethodClosure)methodclosure5951);


// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable317 = (Object)new_AST_Variable_named(L"return");
array4838 = (Object)new_Type_Array_with(1, (Object)variable317);
symbol7922 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send44094 = (Object)new_AST_Send((Object)Self, (Object)symbol7922, 0);
localvariable6103 = (Object)new_AST_Variable_named(L"el");
array4839 = (Object)new_Type_Array_with(1, (Object)localvariable6103);
// isReturnExpression
send44095 = (Object)new_AST_Send((Object)localvariable6103, (Object)symbol7547, 0);
symbol7923 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
// hasReturnExpression
send44096 = (Object)new_AST_Send((Object)localvariable6103, (Object)symbol7687, 0);
block2785 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44096);
// escape:
send44097 = (Object)new_AST_Send((Object)variable317, (Object)SMB_escape_, 1, (Object)True_Const);
block2786 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44097);
// or:ifTrue:
send44098 = (Object)new_AST_Send((Object)send44095, (Object)symbol7923, 2, (Object)block2785, (Object)block2786);
block2787 = (Object)new_AST_Block_with((Type_Array)array4839, (Type_Array)empty_Type_Array, 2, 1, send44098);
// do:
send44099 = (Object)new_AST_Send((Object)send44094, (Object)symbol7705, 1, (Object)block2787);
block2788 = (Object)new_AST_Block_with((Type_Array)array4838, (Type_Array)empty_Type_Array, 1, 2, send44099, False_Const);
// on:
send44100 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2788);
method5952 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44100);
methodclosure5952 = (Object)new_Runtime_MethodClosure(method5952);
store_method((Type_Class)class1003, (Type_Symbol)symbol7687, (Runtime_MethodClosure)methodclosure5952);

classreference1181 = (Object)new_Organization_ClassReference((Type_Class)class1003);

// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable6104 = (Object)new_AST_Variable_named(L"aStream");
array4840 = (Object)new_Type_Array_with(1, (Object)localvariable6104);
super506 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable6104);
string5095 = (Object)new_Type_String(L"(");
constant8544 = (Object)new_AST_Constant((Object)string5095);
// nextPutAll:
send44101 = (Object)new_AST_Send((Object)localvariable6104, (Object)symbol7888, 1, (Object)constant8544);
symbol7748 = (Object)new_Type_Symbol_cached(L"message");
// message
send44102 = (Object)new_AST_Send((Object)Self, (Object)symbol7748, 0);
// printOn:
send44103 = (Object)new_AST_Send((Object)send44102, (Object)symbol7650, 1, (Object)localvariable6104);
string5096 = (Object)new_Type_String(L")");
constant8545 = (Object)new_AST_Constant((Object)string5096);
// nextPutAll:
send44104 = (Object)new_AST_Send((Object)localvariable6104, (Object)symbol7888, 1, (Object)constant8545);
method5953 = (Object)new_AST_Method_with((Type_Array)array4840, (Type_Array)empty_Type_Array, 5, super506, send44101, send44103, send44104, Self);
methodclosure5953 = (Object)new_Runtime_MethodClosure(method5953);
store_method((Type_Class)class1004, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5953);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable6105 = (Object)new_AST_Variable_named(L"anObject");
array4841 = (Object)new_Type_Array_with(1, (Object)localvariable6105);
assign5366 = (Object)new_AST_Assign((Object)instancevariable1459, (Object)localvariable6105);
method5954 = (Object)new_AST_Method_with((Type_Array)array4841, (Type_Array)empty_Type_Array, 2, assign5366, Self);
symbol7750 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure5954 = (Object)new_Runtime_MethodClosure(method5954);
store_method((Type_Class)class1004, (Type_Symbol)symbol7750, (Runtime_MethodClosure)methodclosure5954);


// ASTMethod>>annotations
//annotations
// 	^ annotations
method5955 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1458);
symbol7746 = (Object)new_Type_Symbol_cached(L"annotations");
methodclosure5955 = (Object)new_Runtime_MethodClosure(method5955);
store_method((Type_Class)class1004, (Type_Symbol)symbol7746, (Runtime_MethodClosure)methodclosure5955);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable6106 = (Object)new_AST_Variable_named(L"anObject");
array4842 = (Object)new_Type_Array_with(1, (Object)localvariable6106);
assign5367 = (Object)new_AST_Assign((Object)instancevariable1458, (Object)localvariable6106);
method5956 = (Object)new_AST_Method_with((Type_Array)array4842, (Type_Array)empty_Type_Array, 2, assign5367, Self);
symbol7751 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure5956 = (Object)new_Runtime_MethodClosure(method5956);
store_method((Type_Class)class1004, (Type_Symbol)symbol7751, (Runtime_MethodClosure)methodclosure5956);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable6107 = (Object)new_AST_Variable_named(L"anObject");
array4843 = (Object)new_Type_Array_with(1, (Object)localvariable6107);
assign5368 = (Object)new_AST_Assign((Object)instancevariable1460, (Object)localvariable6107);
method5957 = (Object)new_AST_Method_with((Type_Array)array4843, (Type_Array)empty_Type_Array, 2, assign5368, Self);
symbol7747 = (Object)new_Type_Symbol_cached(L"statements:");
methodclosure5957 = (Object)new_Runtime_MethodClosure(method5957);
store_method((Type_Class)class1004, (Type_Symbol)symbol7747, (Runtime_MethodClosure)methodclosure5957);


// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable6108 = (Object)new_AST_Variable_named(L"anObject");
array4844 = (Object)new_Type_Array_with(1, (Object)localvariable6108);
assign5369 = (Object)new_AST_Assign((Object)instancevariable1457, (Object)localvariable6108);
method5958 = (Object)new_AST_Method_with((Type_Array)array4844, (Type_Array)empty_Type_Array, 2, assign5369, Self);
symbol7743 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure5958 = (Object)new_Runtime_MethodClosure(method5958);
store_method((Type_Class)class1004, (Type_Symbol)symbol7743, (Runtime_MethodClosure)methodclosure5958);


// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
symbol7745 = (Object)new_Type_Symbol_cached(L"statements");
// statements
send44105 = (Object)new_AST_Send((Object)Self, (Object)symbol7745, 0);
// hasReturnExpression
send44106 = (Object)new_AST_Send((Object)send44105, (Object)symbol7687, 0);
method5959 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44106);
methodclosure5959 = (Object)new_Runtime_MethodClosure(method5959);
store_method((Type_Class)class1004, (Type_Symbol)symbol7687, (Runtime_MethodClosure)methodclosure5959);


// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable6109 = (Object)new_AST_Variable_named(L"receiver");
array4845 = (Object)new_Type_Array_with(1, (Object)localvariable6109);
smallint2988 = (Object)new_Type_SmallInt(1);
constant8546 = (Object)new_AST_Constant((Object)smallint2988);
constant8547 = (Object)new_AST_Constant((Object)symbol7746);
// at:put:
send44107 = (Object)new_AST_Send((Object)localvariable6109, (Object)SMB_at_put_, 2, (Object)constant8546, (Object)constant8547);
smallint2989 = (Object)new_Type_SmallInt(2);
constant8548 = (Object)new_AST_Constant((Object)smallint2989);
constant8549 = (Object)new_AST_Constant((Object)symbol7748);
// at:put:
send44108 = (Object)new_AST_Send((Object)localvariable6109, (Object)SMB_at_put_, 2, (Object)constant8548, (Object)constant8549);
smallint2990 = (Object)new_Type_SmallInt(3);
constant8550 = (Object)new_AST_Constant((Object)smallint2990);
constant8551 = (Object)new_AST_Constant((Object)symbol7745);
// at:put:
send44109 = (Object)new_AST_Send((Object)localvariable6109, (Object)SMB_at_put_, 2, (Object)constant8550, (Object)constant8551);
smallint2991 = (Object)new_Type_SmallInt(4);
constant8552 = (Object)new_AST_Constant((Object)smallint2991);
symbol7749 = (Object)new_Type_Symbol_cached(L"temporaries");
constant8553 = (Object)new_AST_Constant((Object)symbol7749);
// at:put:
send44110 = (Object)new_AST_Send((Object)localvariable6109, (Object)SMB_at_put_, 2, (Object)constant8552, (Object)constant8553);
// yourself
send44111 = (Object)new_AST_Send((Object)localvariable6109, (Object)symbol7546, 0);
block2789 = (Object)new_AST_Block_with((Type_Array)array4845, (Type_Array)empty_Type_Array, 1, 5, send44107, send44108, send44109, send44110, send44111);
smallint2992 = (Object)new_Type_SmallInt(4);
constant8554 = (Object)new_AST_Constant((Object)smallint2992);
// new:
send44112 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8554);
// value:
send44113 = (Object)new_AST_Send((Object)block2789, (Object)SMB_value_, 1, (Object)send44112);
method5960 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44113);
symbol7744 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure5960 = (Object)new_Runtime_MethodClosure(method5960);
store_method((Type_Class)class1004, (Type_Symbol)symbol7744, (Runtime_MethodClosure)methodclosure5960);


// ASTMethod>>message
//message
// 	^ message
method5961 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1457);
methodclosure5961 = (Object)new_Runtime_MethodClosure(method5961);
store_method((Type_Class)class1004, (Type_Symbol)symbol7748, (Runtime_MethodClosure)methodclosure5961);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method5962 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1459);
methodclosure5962 = (Object)new_Runtime_MethodClosure(method5962);
store_method((Type_Class)class1004, (Type_Symbol)symbol7749, (Runtime_MethodClosure)methodclosure5962);


// ASTMethod>>statements
//statements
// 	^ statements
method5963 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1460);
methodclosure5963 = (Object)new_Runtime_MethodClosure(method5963);
store_method((Type_Class)class1004, (Type_Symbol)symbol7745, (Runtime_MethodClosure)methodclosure5963);

classreference1182 = (Object)new_Organization_ClassReference((Type_Class)class1004);

// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method5964 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1462);
methodclosure5964 = (Object)new_Runtime_MethodClosure(method5964);
store_method((Type_Class)class1005, (Type_Symbol)symbol7749, (Runtime_MethodClosure)methodclosure5964);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// statements
send44114 = (Object)new_AST_Send((Object)Self, (Object)symbol7745, 0);
symbol7924 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable6110 = (Object)new_AST_Variable_named(L"el");
array4846 = (Object)new_Type_Array_with(1, (Object)localvariable6110);
// isReturnExpression
send44115 = (Object)new_AST_Send((Object)localvariable6110, (Object)symbol7547, 0);
symbol7658 = (Object)new_Type_Symbol_cached(L"or:");
// hasReturnExpression
send44116 = (Object)new_AST_Send((Object)localvariable6110, (Object)symbol7687, 0);
block2790 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44116);
// or:
send44117 = (Object)new_AST_Send((Object)send44115, (Object)symbol7658, 1, (Object)block2790);
block2791 = (Object)new_AST_Block_with((Type_Array)array4846, (Type_Array)empty_Type_Array, 1, 1, send44117);
// anySatisfy:
send44118 = (Object)new_AST_Send((Object)send44114, (Object)symbol7924, 1, (Object)block2791);
method5965 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44118);
methodclosure5965 = (Object)new_Runtime_MethodClosure(method5965);
store_method((Type_Class)class1005, (Type_Symbol)symbol7687, (Runtime_MethodClosure)methodclosure5965);


// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable6111 = (Object)new_AST_Variable_named(L"aCollection");
array4847 = (Object)new_Type_Array_with(1, (Object)localvariable6111);
assign5370 = (Object)new_AST_Assign((Object)instancevariable1461, (Object)localvariable6111);
method5966 = (Object)new_AST_Method_with((Type_Array)array4847, (Type_Array)empty_Type_Array, 2, assign5370, Self);
methodclosure5966 = (Object)new_Runtime_MethodClosure(method5966);
store_method((Type_Class)class1005, (Type_Symbol)symbol7754, (Runtime_MethodClosure)methodclosure5966);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super507 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send44119 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7640, 0);
// parameters:
send44120 = (Object)new_AST_Send((Object)Self, (Object)symbol7754, 1, (Object)send44119);
// new
send44121 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7640, 0);
// statements:
send44122 = (Object)new_AST_Send((Object)Self, (Object)symbol7747, 1, (Object)send44121);
// new
send44123 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7640, 0);
// temporaries:
send44124 = (Object)new_AST_Send((Object)Self, (Object)symbol7750, 1, (Object)send44123);
method5967 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super507, send44120, send44122, send44124, Self);
methodclosure5967 = (Object)new_Runtime_MethodClosure(method5967);
store_method((Type_Class)class1005, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5967);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable6112 = (Object)new_AST_Variable_named(L"anObject");
array4848 = (Object)new_Type_Array_with(1, (Object)localvariable6112);
assign5371 = (Object)new_AST_Assign((Object)instancevariable1462, (Object)localvariable6112);
method5968 = (Object)new_AST_Method_with((Type_Array)array4848, (Type_Array)empty_Type_Array, 2, assign5371, Self);
methodclosure5968 = (Object)new_Runtime_MethodClosure(method5968);
store_method((Type_Class)class1005, (Type_Symbol)symbol7750, (Runtime_MethodClosure)methodclosure5968);


// ASTBlock>>parameters
//parameters
// 	^ parameters
method5969 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1461);
methodclosure5969 = (Object)new_Runtime_MethodClosure(method5969);
store_method((Type_Class)class1005, (Type_Symbol)symbol7735, (Runtime_MethodClosure)methodclosure5969);


// ASTBlock>>statements
//statements
// 	^ statements
method5970 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1463);
methodclosure5970 = (Object)new_Runtime_MethodClosure(method5970);
store_method((Type_Class)class1005, (Type_Symbol)symbol7745, (Runtime_MethodClosure)methodclosure5970);


// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable6113 = (Object)new_AST_Variable_named(L"anObject");
array4849 = (Object)new_Type_Array_with(1, (Object)localvariable6113);
assign5372 = (Object)new_AST_Assign((Object)instancevariable1463, (Object)localvariable6113);
method5971 = (Object)new_AST_Method_with((Type_Array)array4849, (Type_Array)empty_Type_Array, 2, assign5372, Self);
methodclosure5971 = (Object)new_Runtime_MethodClosure(method5971);
store_method((Type_Class)class1005, (Type_Symbol)symbol7747, (Runtime_MethodClosure)methodclosure5971);

classreference1183 = (Object)new_Organization_ClassReference((Type_Class)class1005);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send44125 = (Object)new_AST_Send((Object)Self, (Object)symbol7654, 0);
symbol7742 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
// selectorSymbol
send44126 = (Object)new_AST_Send((Object)send44125, (Object)symbol7742, 0);
method5972 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44126);
methodclosure5972 = (Object)new_Runtime_MethodClosure(method5972);
store_method((Type_Class)class1006, (Type_Symbol)symbol7742, (Runtime_MethodClosure)methodclosure5972);

classreference1184 = (Object)new_Organization_ClassReference((Type_Class)class1006);

// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable6114 = (Object)new_AST_Variable_named(L"aCollection");
array4850 = (Object)new_Type_Array_with(1, (Object)localvariable6114);
assign5373 = (Object)new_AST_Assign((Object)instancevariable1464, (Object)localvariable6114);
method5973 = (Object)new_AST_Method_with((Type_Array)array4850, (Type_Array)empty_Type_Array, 2, assign5373, Self);
symbol7693 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure5973 = (Object)new_Runtime_MethodClosure(method5973);
store_method((Type_Class)class1007, (Type_Symbol)symbol7693, (Runtime_MethodClosure)methodclosure5973);


// ASTArray>>literals
//literals
// 	^ literals
method5974 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1464);
symbol7694 = (Object)new_Type_Symbol_cached(L"literals");
methodclosure5974 = (Object)new_Runtime_MethodClosure(method5974);
store_method((Type_Class)class1007, (Type_Symbol)symbol7694, (Runtime_MethodClosure)methodclosure5974);


// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
// literals
send44127 = (Object)new_AST_Send((Object)Self, (Object)symbol7694, 0);
// isEmpty
send44128 = (Object)new_AST_Send((Object)send44127, (Object)symbol7662, 0);
method5975 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44128);
methodclosure5975 = (Object)new_Runtime_MethodClosure(method5975);
store_method((Type_Class)class1007, (Type_Symbol)symbol7662, (Runtime_MethodClosure)methodclosure5975);

classreference1185 = (Object)new_Organization_ClassReference((Type_Class)class1007);

// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method5976 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1465);
symbol7759 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure5976 = (Object)new_Runtime_MethodClosure(method5976);
store_method((Type_Class)class1008, (Type_Symbol)symbol7759, (Runtime_MethodClosure)methodclosure5976);


// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable6115 = (Object)new_AST_Variable_named(L"anObject");
array4851 = (Object)new_Type_Array_with(1, (Object)localvariable6115);
assign5374 = (Object)new_AST_Assign((Object)instancevariable1466, (Object)localvariable6115);
method5977 = (Object)new_AST_Method_with((Type_Array)array4851, (Type_Array)empty_Type_Array, 2, assign5374, Self);
symbol7756 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure5977 = (Object)new_Runtime_MethodClosure(method5977);
store_method((Type_Class)class1008, (Type_Symbol)symbol7756, (Runtime_MethodClosure)methodclosure5977);


// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method5978 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1466);
symbol7757 = (Object)new_Type_Symbol_cached(L"expression");
methodclosure5978 = (Object)new_Runtime_MethodClosure(method5978);
store_method((Type_Class)class1008, (Type_Symbol)symbol7757, (Runtime_MethodClosure)methodclosure5978);


// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable6116 = (Object)new_AST_Variable_named(L"anObject");
array4852 = (Object)new_Type_Array_with(1, (Object)localvariable6116);
assign5375 = (Object)new_AST_Assign((Object)instancevariable1465, (Object)localvariable6116);
method5979 = (Object)new_AST_Method_with((Type_Array)array4852, (Type_Array)empty_Type_Array, 2, assign5375, Self);
symbol7758 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure5979 = (Object)new_Runtime_MethodClosure(method5979);
store_method((Type_Class)class1008, (Type_Symbol)symbol7758, (Runtime_MethodClosure)methodclosure5979);

classreference1186 = (Object)new_Organization_ClassReference((Type_Class)class1008);
classreference1187 = (Object)new_Organization_ClassReference((Type_Class)class1002);

// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method5980 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1467);
symbol7730 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure5980 = (Object)new_Runtime_MethodClosure(method5980);
store_method((Type_Class)class1009, (Type_Symbol)symbol7730, (Runtime_MethodClosure)methodclosure5980);


// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method5981 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1468);
symbol7727 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure5981 = (Object)new_Runtime_MethodClosure(method5981);
store_method((Type_Class)class1009, (Type_Symbol)symbol7727, (Runtime_MethodClosure)methodclosure5981);


// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable6117 = (Object)new_AST_Variable_named(L"anObject");
array4853 = (Object)new_Type_Array_with(1, (Object)localvariable6117);
assign5376 = (Object)new_AST_Assign((Object)instancevariable1467, (Object)localvariable6117);
method5982 = (Object)new_AST_Method_with((Type_Array)array4853, (Type_Array)empty_Type_Array, 2, assign5376, Self);
symbol7728 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure5982 = (Object)new_Runtime_MethodClosure(method5982);
store_method((Type_Class)class1009, (Type_Symbol)symbol7728, (Runtime_MethodClosure)methodclosure5982);


// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable6118 = (Object)new_AST_Variable_named(L"anObject");
array4854 = (Object)new_Type_Array_with(1, (Object)localvariable6118);
assign5377 = (Object)new_AST_Assign((Object)instancevariable1468, (Object)localvariable6118);
method5983 = (Object)new_AST_Method_with((Type_Array)array4854, (Type_Array)empty_Type_Array, 2, assign5377, Self);
symbol7729 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure5983 = (Object)new_Runtime_MethodClosure(method5983);
store_method((Type_Class)class1009, (Type_Symbol)symbol7729, (Runtime_MethodClosure)methodclosure5983);

classreference1188 = (Object)new_Organization_ClassReference((Type_Class)class1009);

// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
symbol7699 = (Object)new_Type_Symbol_cached(L"with:");
symbol7753 = (Object)new_Type_Symbol_cached(L"parameter");
// parameter
send44129 = (Object)new_AST_Send((Object)Self, (Object)symbol7753, 0);
// with:
send44130 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7699, 1, (Object)send44129);
method5984 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44130);
methodclosure5984 = (Object)new_Runtime_MethodClosure(method5984);
store_method((Type_Class)class1010, (Type_Symbol)symbol7735, (Runtime_MethodClosure)methodclosure5984);


// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable6119 = (Object)new_AST_Variable_named(L"anObject");
array4855 = (Object)new_Type_Array_with(1, (Object)localvariable6119);
assign5378 = (Object)new_AST_Assign((Object)instancevariable1469, (Object)localvariable6119);
method5985 = (Object)new_AST_Method_with((Type_Array)array4855, (Type_Array)empty_Type_Array, 2, assign5378, Self);
symbol7752 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure5985 = (Object)new_Runtime_MethodClosure(method5985);
store_method((Type_Class)class1010, (Type_Symbol)symbol7752, (Runtime_MethodClosure)methodclosure5985);


// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method5986 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1469);
methodclosure5986 = (Object)new_Runtime_MethodClosure(method5986);
store_method((Type_Class)class1010, (Type_Symbol)symbol7753, (Runtime_MethodClosure)methodclosure5986);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send44131 = (Object)new_AST_Send((Object)Self, (Object)symbol7654, 0);
// symbol
send44132 = (Object)new_AST_Send((Object)send44131, (Object)symbol7715, 0);
method5987 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44132);
methodclosure5987 = (Object)new_Runtime_MethodClosure(method5987);
store_method((Type_Class)class1010, (Type_Symbol)symbol7742, (Runtime_MethodClosure)methodclosure5987);

classreference1189 = (Object)new_Organization_ClassReference((Type_Class)class1010);

// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method5988 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1470);
methodclosure5988 = (Object)new_Runtime_MethodClosure(method5988);
store_method((Type_Class)class1011, (Type_Symbol)symbol7730, (Runtime_MethodClosure)methodclosure5988);


// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable6120 = (Object)new_AST_Variable_named(L"anObject");
array4856 = (Object)new_Type_Array_with(1, (Object)localvariable6120);
assign5379 = (Object)new_AST_Assign((Object)instancevariable1470, (Object)localvariable6120);
method5989 = (Object)new_AST_Method_with((Type_Array)array4856, (Type_Array)empty_Type_Array, 2, assign5379, Self);
methodclosure5989 = (Object)new_Runtime_MethodClosure(method5989);
store_method((Type_Class)class1011, (Type_Symbol)symbol7728, (Runtime_MethodClosure)methodclosure5989);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super508 = (Object)new_AST_Super((Object)symbol7548, 0);
method5990 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super508, Self);
methodclosure5990 = (Object)new_Runtime_MethodClosure(method5990);
store_method((Type_Class)class1011, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure5990);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable6121 = (Object)new_AST_Variable_named(L"aStream");
array4857 = (Object)new_Type_Array_with(1, (Object)localvariable6121);
// receiver
send44133 = (Object)new_AST_Send((Object)Self, (Object)symbol7730, 0);
// printOn:
send44134 = (Object)new_AST_Send((Object)send44133, (Object)symbol7650, 1, (Object)localvariable6121);

// String>>copy
//copy
// 	^ self asSymbol asString
// asSymbol
send44135 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSymbol, 0);
// asString
send44136 = (Object)new_AST_Send((Object)send44135, (Object)SMB_asString, 0);
method5991 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44136);
symbol7663 = (Object)new_Type_Symbol_cached(L"copy");
methodclosure5991 = (Object)new_Runtime_MethodClosure(method5991);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol7663, (Runtime_MethodClosure)methodclosure5991);


// String>>capitalized
//capitalized
// 	"Return a copy with the first letter capitalized"
// 	| cap |
// 	self isEmpty ifTrue: [ ^self copy ].
// 	cap := self copy.
// 	cap at: 1 put: (cap at: 1) asUppercase.
// 	^ cap
localvariable6122 = (Object)new_AST_Variable_named(L"cap");
array4858 = (Object)new_Type_Array_with(1, (Object)localvariable6122);
variable318 = (Object)new_AST_Variable_named(L"return");
array4859 = (Object)new_Type_Array_with(1, (Object)variable318);
// isEmpty
send44137 = (Object)new_AST_Send((Object)Self, (Object)symbol7662, 0);
// copy
send44138 = (Object)new_AST_Send((Object)Self, (Object)symbol7663, 0);
// escape:
send44139 = (Object)new_AST_Send((Object)variable318, (Object)SMB_escape_, 1, (Object)send44138);
block2792 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44139);
// ifTrue:
send44140 = (Object)new_AST_Send((Object)send44137, (Object)SMB_ifTrue_, 1, (Object)block2792);
// copy
send44141 = (Object)new_AST_Send((Object)Self, (Object)symbol7663, 0);
assign5380 = (Object)new_AST_Assign((Object)localvariable6122, (Object)send44141);
smallint2993 = (Object)new_Type_SmallInt(1);
constant8555 = (Object)new_AST_Constant((Object)smallint2993);
smallint2994 = (Object)new_Type_SmallInt(1);
constant8556 = (Object)new_AST_Constant((Object)smallint2994);
// at:
send44142 = (Object)new_AST_Send((Object)localvariable6122, (Object)SMB_at_, 1, (Object)constant8556);
symbol7669 = (Object)new_Type_Symbol_cached(L"asUppercase");
// asUppercase
send44143 = (Object)new_AST_Send((Object)send44142, (Object)symbol7669, 0);
// at:put:
send44144 = (Object)new_AST_Send((Object)localvariable6122, (Object)SMB_at_put_, 2, (Object)constant8555, (Object)send44143);
block2793 = (Object)new_AST_Block_with((Type_Array)array4859, (Type_Array)empty_Type_Array, 1, 4, send44140, assign5380, send44144, localvariable6122);
// on:
send44145 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2793);
method5992 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4858, 1, send44145);
methodclosure5992 = (Object)new_Runtime_MethodClosure(method5992);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol7664, (Runtime_MethodClosure)methodclosure5992);


// String>>isEmpty
//isEmpty 
// 	^ self size = 0.
// size
send44146 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2995 = (Object)new_Type_SmallInt(0);
constant8557 = (Object)new_AST_Constant((Object)smallint2995);
// =
send44147 = (Object)new_AST_Send((Object)send44146, (Object)SMB__equal, 1, (Object)constant8557);
method5993 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44147);
methodclosure5993 = (Object)new_Runtime_MethodClosure(method5993);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol7662, (Runtime_MethodClosure)methodclosure5993);

classreference1190 = (Object)new_Organization_ClassReference((Type_Class)Type_String_Class);
symbol7925 = (Object)new_Type_Symbol_cached(L"space");
// space
send44148 = (Object)new_AST_Send((Object)classreference1190, (Object)symbol7925, 0);
// nextPutAll:
send44149 = (Object)new_AST_Send((Object)localvariable6121, (Object)symbol7888, 1, (Object)send44148);
super509 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable6121);
// space
send44150 = (Object)new_AST_Send((Object)classreference1190, (Object)symbol7925, 0);
// nextPutAll:
send44151 = (Object)new_AST_Send((Object)localvariable6121, (Object)symbol7888, 1, (Object)send44150);
// argument
send44152 = (Object)new_AST_Send((Object)Self, (Object)symbol7738, 0);
// printOn:
send44153 = (Object)new_AST_Send((Object)send44152, (Object)symbol7650, 1, (Object)localvariable6121);
method5994 = (Object)new_AST_Method_with((Type_Array)array4857, (Type_Array)empty_Type_Array, 6, send44134, send44149, super509, send44151, send44153, Self);
methodclosure5994 = (Object)new_Runtime_MethodClosure(method5994);
store_method((Type_Class)class1011, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure5994);


// ASTBinaryExpression>>argument
//argument
// 	^ argument
method5995 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1471);
methodclosure5995 = (Object)new_Runtime_MethodClosure(method5995);
store_method((Type_Class)class1011, (Type_Symbol)symbol7738, (Runtime_MethodClosure)methodclosure5995);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable6123 = (Object)new_AST_Variable_named(L"anObject");
array4860 = (Object)new_Type_Array_with(1, (Object)localvariable6123);
assign5381 = (Object)new_AST_Assign((Object)instancevariable1471, (Object)localvariable6123);
method5996 = (Object)new_AST_Method_with((Type_Array)array4860, (Type_Array)empty_Type_Array, 2, assign5381, Self);
methodclosure5996 = (Object)new_Runtime_MethodClosure(method5996);
store_method((Type_Class)class1011, (Type_Symbol)symbol7737, (Runtime_MethodClosure)methodclosure5996);


// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	outer argument: receiver.
// 	receiver := outer
localvariable6124 = (Object)new_AST_Variable_named(L"outer");
array4861 = (Object)new_Type_Array_with(1, (Object)localvariable6124);
// argument:
send44154 = (Object)new_AST_Send((Object)localvariable6124, (Object)symbol7737, 1, (Object)instancevariable1470);
assign5382 = (Object)new_AST_Assign((Object)instancevariable1470, (Object)localvariable6124);
method5997 = (Object)new_AST_Method_with((Type_Array)array4861, (Type_Array)empty_Type_Array, 3, send44154, assign5382, Self);
methodclosure5997 = (Object)new_Runtime_MethodClosure(method5997);
store_method((Type_Class)class1011, (Type_Symbol)symbol7690, (Runtime_MethodClosure)methodclosure5997);

classreference1191 = (Object)new_Organization_ClassReference((Type_Class)class1011);

// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method5998 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure5998 = (Object)new_Runtime_MethodClosure(method5998);
store_method((Type_Class)class1012, (Type_Symbol)symbol7547, (Runtime_MethodClosure)methodclosure5998);


// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable6125 = (Object)new_AST_Variable_named(L"anObject");
array4862 = (Object)new_Type_Array_with(1, (Object)localvariable6125);
assign5383 = (Object)new_AST_Assign((Object)instancevariable1472, (Object)localvariable6125);
method5999 = (Object)new_AST_Method_with((Type_Array)array4862, (Type_Array)empty_Type_Array, 2, assign5383, Self);
methodclosure5999 = (Object)new_Runtime_MethodClosure(method5999);
store_method((Type_Class)class1012, (Type_Symbol)symbol7756, (Runtime_MethodClosure)methodclosure5999);


// ASTReturnExpression>>expression
//expression
// 	^ expression
method6000 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1472);
methodclosure6000 = (Object)new_Runtime_MethodClosure(method6000);
store_method((Type_Class)class1012, (Type_Symbol)symbol7757, (Runtime_MethodClosure)methodclosure6000);

classreference1192 = (Object)new_Organization_ClassReference((Type_Class)class1012);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send44155 = (Object)new_AST_Send((Object)Self, (Object)symbol7654, 0);
// symbol
send44156 = (Object)new_AST_Send((Object)send44155, (Object)symbol7715, 0);
method6001 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44156);
methodclosure6001 = (Object)new_Runtime_MethodClosure(method6001);
store_method((Type_Class)class994, (Type_Symbol)symbol7742, (Runtime_MethodClosure)methodclosure6001);

classreference1193 = (Object)new_Organization_ClassReference((Type_Class)class994);

// ASTString>>asPString
//asPString 
// 	^PString new string: self string
// new
send44157 = (Object)new_AST_Send((Object)classreference1190, (Object)symbol7640, 0);
symbol7718 = (Object)new_Type_Symbol_cached(L"string:");
symbol7719 = (Object)new_Type_Symbol_cached(L"string");
// string
send44158 = (Object)new_AST_Send((Object)Self, (Object)symbol7719, 0);
// string:
send44159 = (Object)new_AST_Send((Object)send44157, (Object)symbol7718, 1, (Object)send44158);
method6002 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44159);
symbol7720 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure6002 = (Object)new_Runtime_MethodClosure(method6002);
store_method((Type_Class)class1013, (Type_Symbol)symbol7720, (Runtime_MethodClosure)methodclosure6002);


// ASTString>>string:
//string: aString
// 	string := aString
localvariable6126 = (Object)new_AST_Variable_named(L"aString");
array4863 = (Object)new_Type_Array_with(1, (Object)localvariable6126);
assign5384 = (Object)new_AST_Assign((Object)instancevariable1473, (Object)localvariable6126);
method6003 = (Object)new_AST_Method_with((Type_Array)array4863, (Type_Array)empty_Type_Array, 2, assign5384, Self);
methodclosure6003 = (Object)new_Runtime_MethodClosure(method6003);
store_method((Type_Class)class1013, (Type_Symbol)symbol7718, (Runtime_MethodClosure)methodclosure6003);


// ASTString>>string
//string
// 	^ string
method6004 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1473);
methodclosure6004 = (Object)new_Runtime_MethodClosure(method6004);
store_method((Type_Class)class1013, (Type_Symbol)symbol7719, (Runtime_MethodClosure)methodclosure6004);

classreference1194 = (Object)new_Organization_ClassReference((Type_Class)class1013);

// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method6005 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1474);
methodclosure6005 = (Object)new_Runtime_MethodClosure(method6005);
store_method((Type_Class)class1014, (Type_Symbol)symbol7730, (Runtime_MethodClosure)methodclosure6005);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
symbol7655 = (Object)new_Type_Symbol_cached(L"arguments");
// arguments
send44160 = (Object)new_AST_Send((Object)Self, (Object)symbol7655, 0);
localvariable6127 = (Object)new_AST_Variable_named(L"el");
array4864 = (Object)new_Type_Array_with(1, (Object)localvariable6127);
// isReturnExpression
send44161 = (Object)new_AST_Send((Object)localvariable6127, (Object)symbol7547, 0);
// hasReturnExpression
send44162 = (Object)new_AST_Send((Object)localvariable6127, (Object)symbol7687, 0);
block2794 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44162);
// or:
send44163 = (Object)new_AST_Send((Object)send44161, (Object)symbol7658, 1, (Object)block2794);
block2795 = (Object)new_AST_Block_with((Type_Array)array4864, (Type_Array)empty_Type_Array, 1, 1, send44163);
// anySatisfy:
send44164 = (Object)new_AST_Send((Object)send44160, (Object)symbol7924, 1, (Object)block2795);
method6006 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44164);
methodclosure6006 = (Object)new_Runtime_MethodClosure(method6006);
store_method((Type_Class)class1014, (Type_Symbol)symbol7687, (Runtime_MethodClosure)methodclosure6006);


// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable6128 = (Object)new_AST_Variable_named(L"anObject");
array4865 = (Object)new_Type_Array_with(1, (Object)localvariable6128);
assign5385 = (Object)new_AST_Assign((Object)instancevariable1474, (Object)localvariable6128);
method6007 = (Object)new_AST_Method_with((Type_Array)array4865, (Type_Array)empty_Type_Array, 2, assign5385, Self);
methodclosure6007 = (Object)new_Runtime_MethodClosure(method6007);
store_method((Type_Class)class1014, (Type_Symbol)symbol7728, (Runtime_MethodClosure)methodclosure6007);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super510 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send44165 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
assign5386 = (Object)new_AST_Assign((Object)instancevariable1475, (Object)send44165);
method6008 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super510, assign5386, Self);
methodclosure6008 = (Object)new_Runtime_MethodClosure(method6008);
store_method((Type_Class)class1014, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure6008);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method6009 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1475);
methodclosure6009 = (Object)new_Runtime_MethodClosure(method6009);
store_method((Type_Class)class1014, (Type_Symbol)symbol7655, (Runtime_MethodClosure)methodclosure6009);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable6129 = (Object)new_AST_Variable_named(L"anObject");
array4866 = (Object)new_Type_Array_with(1, (Object)localvariable6129);
assign5387 = (Object)new_AST_Assign((Object)instancevariable1475, (Object)localvariable6129);
method6010 = (Object)new_AST_Method_with((Type_Array)array4866, (Type_Array)empty_Type_Array, 2, assign5387, Self);
symbol7741 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure6010 = (Object)new_Runtime_MethodClosure(method6010);
store_method((Type_Class)class1014, (Type_Symbol)symbol7741, (Runtime_MethodClosure)methodclosure6010);

classreference1195 = (Object)new_Organization_ClassReference((Type_Class)class1014);

// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable6130 = (Object)new_AST_Variable_named(L"aChar");
array4867 = (Object)new_Type_Array_with(1, (Object)localvariable6130);
assign5388 = (Object)new_AST_Assign((Object)instancevariable1476, (Object)localvariable6130);
method6011 = (Object)new_AST_Method_with((Type_Array)array4867, (Type_Array)empty_Type_Array, 2, assign5388, Self);
symbol7860 = (Object)new_Type_Symbol_cached(L"char:");
methodclosure6011 = (Object)new_Runtime_MethodClosure(method6011);
store_method((Type_Class)class1015, (Type_Symbol)symbol7860, (Runtime_MethodClosure)methodclosure6011);


// ASTCharacter>>char
//char
// 	^ char
method6012 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1476);
symbol7861 = (Object)new_Type_Symbol_cached(L"char");
methodclosure6012 = (Object)new_Runtime_MethodClosure(method6012);
store_method((Type_Class)class1015, (Type_Symbol)symbol7861, (Runtime_MethodClosure)methodclosure6012);


// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char

// Character>>charCode
//charCode
// 	^ self asSmallInt.
// asSmallInt
send44166 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
method6013 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44166);
symbol7670 = (Object)new_Type_Symbol_cached(L"charCode");
methodclosure6013 = (Object)new_Runtime_MethodClosure(method6013);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol7670, (Runtime_MethodClosure)methodclosure6013);


// Character>>asUppercase
//asUppercase
// 	"If the receiver is lowercase, answer its matching uppercase Character."
// 	"A tentative implementation.  Eventually this should consult the Unicode table."	
// 
// 	| v |
// 	v := self charCode.
// 	(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])
// 		ifTrue: [^ (0 - 32 + self asSmallInt) asCharacter ]
// 		ifFalse: [^ self]
localvariable6131 = (Object)new_AST_Variable_named(L"v");
array4868 = (Object)new_Type_Array_with(1, (Object)localvariable6131);
variable319 = (Object)new_AST_Variable_named(L"return");
array4869 = (Object)new_Type_Array_with(1, (Object)variable319);
// charCode
send44167 = (Object)new_AST_Send((Object)Self, (Object)symbol7670, 0);
assign5389 = (Object)new_AST_Assign((Object)localvariable6131, (Object)send44167);
smallint2996 = (Object)new_Type_SmallInt(97);
constant8558 = (Object)new_AST_Constant((Object)smallint2996);
// <=
send44168 = (Object)new_AST_Send((Object)constant8558, (Object)symbol7667, 1, (Object)localvariable6131);
symbol7659 = (Object)new_Type_Symbol_cached(L"and:");
smallint2997 = (Object)new_Type_SmallInt(122);
constant8559 = (Object)new_AST_Constant((Object)smallint2997);
// <=
send44169 = (Object)new_AST_Send((Object)localvariable6131, (Object)symbol7667, 1, (Object)constant8559);
block2796 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44169);
// and:
send44170 = (Object)new_AST_Send((Object)send44168, (Object)symbol7659, 1, (Object)block2796);
smallint2998 = (Object)new_Type_SmallInt(224);
constant8560 = (Object)new_AST_Constant((Object)smallint2998);
// <=
send44171 = (Object)new_AST_Send((Object)constant8560, (Object)symbol7667, 1, (Object)localvariable6131);
smallint2999 = (Object)new_Type_SmallInt(246);
constant8561 = (Object)new_AST_Constant((Object)smallint2999);
// <=
send44172 = (Object)new_AST_Send((Object)localvariable6131, (Object)symbol7667, 1, (Object)constant8561);
block2797 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44172);
// and:
send44173 = (Object)new_AST_Send((Object)send44171, (Object)symbol7659, 1, (Object)block2797);
block2798 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44173);
// or:
send44174 = (Object)new_AST_Send((Object)send44170, (Object)symbol7658, 1, (Object)block2798);
smallint3000 = (Object)new_Type_SmallInt(248);
constant8562 = (Object)new_AST_Constant((Object)smallint3000);
// <=
send44175 = (Object)new_AST_Send((Object)constant8562, (Object)symbol7667, 1, (Object)localvariable6131);
smallint3001 = (Object)new_Type_SmallInt(254);
constant8563 = (Object)new_AST_Constant((Object)smallint3001);
// <=
send44176 = (Object)new_AST_Send((Object)localvariable6131, (Object)symbol7667, 1, (Object)constant8563);
block2799 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44176);
// and:
send44177 = (Object)new_AST_Send((Object)send44175, (Object)symbol7659, 1, (Object)block2799);
block2800 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44177);
// or:
send44178 = (Object)new_AST_Send((Object)send44174, (Object)symbol7658, 1, (Object)block2800);
smallint3002 = (Object)new_Type_SmallInt(0);
constant8564 = (Object)new_AST_Constant((Object)smallint3002);
smallint3003 = (Object)new_Type_SmallInt(32);
constant8565 = (Object)new_AST_Constant((Object)smallint3003);
// -
send44179 = (Object)new_AST_Send((Object)constant8564, (Object)SMB__minus, 1, (Object)constant8565);
// asSmallInt
send44180 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
// +
send44181 = (Object)new_AST_Send((Object)send44179, (Object)SMB__plus, 1, (Object)send44180);
// asCharacter
send44182 = (Object)new_AST_Send((Object)send44181, (Object)SMB_asCharacter, 0);
// escape:
send44183 = (Object)new_AST_Send((Object)variable319, (Object)SMB_escape_, 1, (Object)send44182);
block2801 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44183);
// escape:
send44184 = (Object)new_AST_Send((Object)variable319, (Object)SMB_escape_, 1, (Object)Self);
block2802 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44184);
// ifTrue:ifFalse:
send44185 = (Object)new_AST_Send((Object)send44178, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block2801, (Object)block2802);
block2803 = (Object)new_AST_Block_with((Type_Array)array4869, (Type_Array)empty_Type_Array, 1, 3, assign5389, send44185, Self);
// on:
send44186 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2803);
method6014 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4868, 1, send44186);
methodclosure6014 = (Object)new_Runtime_MethodClosure(method6014);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol7669, (Runtime_MethodClosure)methodclosure6014);

classreference1196 = (Object)new_Organization_ClassReference((Type_Class)Type_Character_Class);
// new
send44187 = (Object)new_AST_Send((Object)classreference1196, (Object)symbol7640, 0);
// char
send44188 = (Object)new_AST_Send((Object)Self, (Object)symbol7861, 0);
// char:
send44189 = (Object)new_AST_Send((Object)send44187, (Object)symbol7860, 1, (Object)send44188);
method6015 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44189);
symbol7862 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure6015 = (Object)new_Runtime_MethodClosure(method6015);
store_method((Type_Class)class1015, (Type_Symbol)symbol7862, (Runtime_MethodClosure)methodclosure6015);

classreference1197 = (Object)new_Organization_ClassReference((Type_Class)class1015);

// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method6016 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1477);
methodclosure6016 = (Object)new_Runtime_MethodClosure(method6016);
store_method((Type_Class)class1016, (Type_Symbol)symbol7730, (Runtime_MethodClosure)methodclosure6016);


// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable6132 = (Object)new_AST_Variable_named(L"anObject");
array4870 = (Object)new_Type_Array_with(1, (Object)localvariable6132);
assign5390 = (Object)new_AST_Assign((Object)instancevariable1477, (Object)localvariable6132);
method6017 = (Object)new_AST_Method_with((Type_Array)array4870, (Type_Array)empty_Type_Array, 2, assign5390, Self);
methodclosure6017 = (Object)new_Runtime_MethodClosure(method6017);
store_method((Type_Class)class1016, (Type_Symbol)symbol7728, (Runtime_MethodClosure)methodclosure6017);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable6133 = (Object)new_AST_Variable_named(L"aStream");
array4871 = (Object)new_Type_Array_with(1, (Object)localvariable6133);
// receiver
send44190 = (Object)new_AST_Send((Object)Self, (Object)symbol7730, 0);
// printOn:
send44191 = (Object)new_AST_Send((Object)send44190, (Object)symbol7650, 1, (Object)localvariable6133);
// space
send44192 = (Object)new_AST_Send((Object)classreference1190, (Object)symbol7925, 0);
// nextPutAll:
send44193 = (Object)new_AST_Send((Object)localvariable6133, (Object)symbol7888, 1, (Object)send44192);
super511 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable6133);
method6018 = (Object)new_AST_Method_with((Type_Array)array4871, (Type_Array)empty_Type_Array, 4, send44191, send44193, super511, Self);
methodclosure6018 = (Object)new_Runtime_MethodClosure(method6018);
store_method((Type_Class)class1016, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure6018);

classreference1198 = (Object)new_Organization_ClassReference((Type_Class)class1016);

// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method6019 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1478);
methodclosure6019 = (Object)new_Runtime_MethodClosure(method6019);
store_method((Type_Class)class1017, (Type_Symbol)symbol7655, (Runtime_MethodClosure)methodclosure6019);


// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable6134 = (Object)new_AST_Variable_named(L"anObject");
array4872 = (Object)new_Type_Array_with(1, (Object)localvariable6134);
assign5391 = (Object)new_AST_Assign((Object)instancevariable1478, (Object)localvariable6134);
method6020 = (Object)new_AST_Method_with((Type_Array)array4872, (Type_Array)empty_Type_Array, 2, assign5391, Self);
methodclosure6020 = (Object)new_Runtime_MethodClosure(method6020);
store_method((Type_Class)class1017, (Type_Symbol)symbol7741, (Runtime_MethodClosure)methodclosure6020);

classreference1199 = (Object)new_Organization_ClassReference((Type_Class)class1017);

// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
symbol7926 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
string5097 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant8566 = (Object)new_AST_Constant((Object)string5097);
string5098 = (Object)new_Type_String(L"#");
constant8567 = (Object)new_AST_Constant((Object)string5098);
// asPEG
send44194 = (Object)new_AST_Send((Object)constant8567, (Object)symbol7844, 0);
// omit:
send44195 = (Object)new_AST_Send((Object)send44194, (Object)symbol7848, 1, (Object)True_Const);
// symbol
send44196 = (Object)new_AST_Send((Object)Self, (Object)symbol7715, 0);
// &&
send44197 = (Object)new_AST_Send((Object)send44195, (Object)symbol7840, 1, (Object)send44196);
localvariable6135 = (Object)new_AST_Variable_named(L"result");
array4873 = (Object)new_Type_Array_with(1, (Object)localvariable6135);
// new
send44198 = (Object)new_AST_Send((Object)classreference1172, (Object)symbol7640, 0);
// symbol:
send44199 = (Object)new_AST_Send((Object)send44198, (Object)symbol7716, 1, (Object)localvariable6135);
block2804 = (Object)new_AST_Block_with((Type_Array)array4873, (Type_Array)empty_Type_Array, 1, 1, send44199);
// named:parsing:semantics:
send44200 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8566, (Object)send44197, (Object)block2804);
method6021 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44200);
symbol7769 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure6021 = (Object)new_Runtime_MethodClosure(method6021);
store_method((Type_Class)class1018, (Type_Symbol)symbol7769, (Runtime_MethodClosure)methodclosure6021);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string5099 = (Object)new_Type_String(L"|");
constant8568 = (Object)new_AST_Constant((Object)string5099);
// asPEG
send44201 = (Object)new_AST_Send((Object)constant8568, (Object)symbol7844, 0);
// omit:
send44202 = (Object)new_AST_Send((Object)send44201, (Object)symbol7848, 1, (Object)True_Const);
method6022 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44202);
symbol7797 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure6022 = (Object)new_Runtime_MethodClosure(method6022);
store_method((Type_Class)class1018, (Type_Symbol)symbol7797, (Runtime_MethodClosure)methodclosure6022);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new
// 						selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
symbol7764 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
// preStoreBinaryObjectDescription
send44203 = (Object)new_AST_Send((Object)Self, (Object)symbol7764, 0);
symbol7927 = (Object)new_Type_Symbol_cached(L"binaryExpression");
constant8569 = (Object)new_AST_Constant((Object)symbol7927);
string5100 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant8570 = (Object)new_AST_Constant((Object)string5100);
symbol7928 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send44204 = (Object)new_AST_Send((Object)Self, (Object)symbol7928, 0);
symbol7929 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send44205 = (Object)new_AST_Send((Object)Self, (Object)symbol7929, 0);
// &
send44206 = (Object)new_AST_Send((Object)send44204, (Object)SMB__and, 1, (Object)send44205);
symbol7930 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send44207 = (Object)new_AST_Send((Object)Self, (Object)symbol7930, 0);
// <&
send44208 = (Object)new_AST_Send((Object)send44206, (Object)symbol7880, 1, (Object)send44207);
localvariable6136 = (Object)new_AST_Variable_named(L"parts");
array4874 = (Object)new_Type_Array_with(1, (Object)localvariable6136);
smallint3004 = (Object)new_Type_SmallInt(3);
constant8571 = (Object)new_AST_Constant((Object)smallint3004);
// at:
send44209 = (Object)new_AST_Send((Object)localvariable6136, (Object)SMB_at_, 1, (Object)constant8571);
localvariable6137 = (Object)new_AST_Variable_named(L"receiver");
array4875 = (Object)new_Type_Array_with(1, (Object)localvariable6137);
// first
send44210 = (Object)new_AST_Send((Object)localvariable6136, (Object)symbol7702, 0);
// receiver:
send44211 = (Object)new_AST_Send((Object)localvariable6137, (Object)symbol7728, 1, (Object)send44210);
// new
send44212 = (Object)new_AST_Send((Object)classreference1174, (Object)symbol7640, 0);
symbol7765 = (Object)new_Type_Symbol_cached(L"createSymbol:");
smallint3005 = (Object)new_Type_SmallInt(2);
constant8572 = (Object)new_AST_Constant((Object)smallint3005);
// at:
send44213 = (Object)new_AST_Send((Object)localvariable6136, (Object)SMB_at_, 1, (Object)constant8572);
// createSymbol:
send44214 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)send44213);
// selector:
send44215 = (Object)new_AST_Send((Object)send44212, (Object)symbol7734, 1, (Object)send44214);
// selector:
send44216 = (Object)new_AST_Send((Object)localvariable6137, (Object)symbol7734, 1, (Object)send44215);
block2805 = (Object)new_AST_Block_with((Type_Array)array4875, (Type_Array)empty_Type_Array, 2, 2, send44211, send44216);
// new
send44217 = (Object)new_AST_Send((Object)classreference1191, (Object)symbol7640, 0);
// value:
send44218 = (Object)new_AST_Send((Object)block2805, (Object)SMB_value_, 1, (Object)send44217);
// argumentOfBinary:
send44219 = (Object)new_AST_Send((Object)send44209, (Object)symbol7690, 1, (Object)send44218);
block2806 = (Object)new_AST_Block_with((Type_Array)array4874, (Type_Array)empty_Type_Array, 1, 1, send44219);
// named:parsing:semantics:
send44220 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8570, (Object)send44208, (Object)block2806);
// at:ifAbsentPut:
send44221 = (Object)new_AST_Send((Object)instancevariable1479, (Object)symbol7872, 2, (Object)constant8569, (Object)send44220);
symbol7763 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
// injectBinaryObjectDescription
send44222 = (Object)new_AST_Send((Object)Self, (Object)symbol7763, 0);
// binaryExpression
send44223 = (Object)new_AST_Send((Object)Self, (Object)symbol7927, 0);
method6023 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send44203, send44221, send44222, send44223);
symbol7762 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure6023 = (Object)new_Runtime_MethodClosure(method6023);
store_method((Type_Class)class1018, (Type_Symbol)symbol7762, (Runtime_MethodClosure)methodclosure6023);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable6138 = (Object)new_AST_Variable_named(L"aDictionary");
array4876 = (Object)new_Type_Array_with(1, (Object)localvariable6138);
assign5392 = (Object)new_AST_Assign((Object)instancevariable1479, (Object)localvariable6138);
method6024 = (Object)new_AST_Method_with((Type_Array)array4876, (Type_Array)empty_Type_Array, 2, assign5392, Self);
symbol7790 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure6024 = (Object)new_Runtime_MethodClosure(method6024);
store_method((Type_Class)class1018, (Type_Symbol)symbol7790, (Runtime_MethodClosure)methodclosure6024);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send44224 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
string5101 = (Object)new_Type_String(L".");
constant8573 = (Object)new_AST_Constant((Object)string5101);
// asPEG
send44225 = (Object)new_AST_Send((Object)constant8573, (Object)symbol7844, 0);
// omit:
send44226 = (Object)new_AST_Send((Object)send44225, (Object)symbol7848, 1, (Object)True_Const);
// &
send44227 = (Object)new_AST_Send((Object)send44224, (Object)SMB__and, 1, (Object)send44226);
method6025 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44227);
symbol7807 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure6025 = (Object)new_Runtime_MethodClosure(method6025);
store_method((Type_Class)class1018, (Type_Symbol)symbol7807, (Runtime_MethodClosure)methodclosure6025);


// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string5102 = (Object)new_Type_String(L"A-Z");
constant8574 = (Object)new_AST_Constant((Object)string5102);
symbol7931 = (Object)new_Type_Symbol_cached(L"asPEGRange");
// asPEGRange
send44228 = (Object)new_AST_Send((Object)constant8574, (Object)symbol7931, 0);
method6026 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44228);
symbol7779 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure6026 = (Object)new_Runtime_MethodClosure(method6026);
store_method((Type_Class)class1018, (Type_Symbol)symbol7779, (Runtime_MethodClosure)methodclosure6026);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
symbol7932 = (Object)new_Type_Symbol_cached(L"named:parsing:");
string5103 = (Object)new_Type_String(L"ANNOTATION");
constant8575 = (Object)new_AST_Constant((Object)string5103);
string5104 = (Object)new_Type_String(L"<");
constant8576 = (Object)new_AST_Constant((Object)string5104);
// asPEG
send44229 = (Object)new_AST_Send((Object)constant8576, (Object)symbol7844, 0);
// omit:
send44230 = (Object)new_AST_Send((Object)send44229, (Object)symbol7848, 1, (Object)True_Const);
symbol7933 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send44231 = (Object)new_AST_Send((Object)Self, (Object)symbol7933, 0);
symbol7934 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send44232 = (Object)new_AST_Send((Object)Self, (Object)symbol7934, 0);
// |
send44233 = (Object)new_AST_Send((Object)send44231, (Object)SMB__or, 1, (Object)send44232);
// &
send44234 = (Object)new_AST_Send((Object)send44230, (Object)SMB__and, 1, (Object)send44233);
string5105 = (Object)new_Type_String(L">");
constant8577 = (Object)new_AST_Constant((Object)string5105);
// asPEG
send44235 = (Object)new_AST_Send((Object)constant8577, (Object)symbol7844, 0);
// omit:
send44236 = (Object)new_AST_Send((Object)send44235, (Object)symbol7848, 1, (Object)True_Const);
// <&
send44237 = (Object)new_AST_Send((Object)send44234, (Object)symbol7880, 1, (Object)send44236);
// named:parsing:
send44238 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7932, 2, (Object)constant8575, (Object)send44237);
method6027 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44238);
symbol7800 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure6027 = (Object)new_Runtime_MethodClosure(method6027);
store_method((Type_Class)class1018, (Type_Symbol)symbol7800, (Runtime_MethodClosure)methodclosure6027);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string5106 = (Object)new_Type_String(L"STRING-CONSTANT");
constant8578 = (Object)new_AST_Constant((Object)string5106);
// string
send44239 = (Object)new_AST_Send((Object)Self, (Object)symbol7719, 0);
localvariable6139 = (Object)new_AST_Variable_named(L"result");
array4877 = (Object)new_Type_Array_with(1, (Object)localvariable6139);
// new
send44240 = (Object)new_AST_Send((Object)classreference1194, (Object)symbol7640, 0);
// string:
send44241 = (Object)new_AST_Send((Object)send44240, (Object)symbol7718, 1, (Object)localvariable6139);
block2807 = (Object)new_AST_Block_with((Type_Array)array4877, (Type_Array)empty_Type_Array, 1, 1, send44241);
// named:parsing:semantics:
send44242 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8578, (Object)send44239, (Object)block2807);
method6028 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44242);
symbol7772 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure6028 = (Object)new_Runtime_MethodClosure(method6028);
store_method((Type_Class)class1018, (Type_Symbol)symbol7772, (Runtime_MethodClosure)methodclosure6028);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string5107 = (Object)new_Type_String(L"METHOD");
constant8579 = (Object)new_AST_Constant((Object)string5107);
symbol7935 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send44243 = (Object)new_AST_Send((Object)Self, (Object)symbol7935, 0);
// temporaries
send44244 = (Object)new_AST_Send((Object)Self, (Object)symbol7749, 0);
// optional
send44245 = (Object)new_AST_Send((Object)send44244, (Object)symbol7843, 0);
symbol7936 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send44246 = (Object)new_AST_Send((Object)Self, (Object)symbol7936, 0);
// times
send44247 = (Object)new_AST_Send((Object)send44246, (Object)symbol7839, 0);
// statements
send44248 = (Object)new_AST_Send((Object)Self, (Object)symbol7745, 0);
// <&
send44249 = (Object)new_AST_Send((Object)send44247, (Object)symbol7880, 1, (Object)send44248);
// <&
send44250 = (Object)new_AST_Send((Object)send44245, (Object)symbol7880, 1, (Object)send44249);
// &
send44251 = (Object)new_AST_Send((Object)send44243, (Object)SMB__and, 1, (Object)send44250);
// separator
send44252 = (Object)new_AST_Send((Object)Self, (Object)symbol7908, 0);
// <&
send44253 = (Object)new_AST_Send((Object)send44251, (Object)symbol7880, 1, (Object)send44252);
localvariable6140 = (Object)new_AST_Variable_named(L"parts");
array4878 = (Object)new_Type_Array_with(1, (Object)localvariable6140);
localvariable6141 = (Object)new_AST_Variable_named(L"receiver");
array4879 = (Object)new_Type_Array_with(1, (Object)localvariable6141);
// first
send44254 = (Object)new_AST_Send((Object)localvariable6140, (Object)symbol7702, 0);
// message:
send44255 = (Object)new_AST_Send((Object)localvariable6141, (Object)symbol7743, 1, (Object)send44254);
smallint3006 = (Object)new_Type_SmallInt(2);
constant8580 = (Object)new_AST_Constant((Object)smallint3006);
// at:
send44256 = (Object)new_AST_Send((Object)localvariable6140, (Object)SMB_at_, 1, (Object)constant8580);
// new
send44257 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
block2808 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44257);
// resultIfFailed:
send44258 = (Object)new_AST_Send((Object)send44256, (Object)symbol7882, 1, (Object)block2808);
// temporaries:
send44259 = (Object)new_AST_Send((Object)localvariable6141, (Object)symbol7750, 1, (Object)send44258);
smallint3007 = (Object)new_Type_SmallInt(3);
constant8581 = (Object)new_AST_Constant((Object)smallint3007);
// at:
send44260 = (Object)new_AST_Send((Object)localvariable6140, (Object)SMB_at_, 1, (Object)constant8581);
// annotations:
send44261 = (Object)new_AST_Send((Object)localvariable6141, (Object)symbol7751, 1, (Object)send44260);
smallint3008 = (Object)new_Type_SmallInt(4);
constant8582 = (Object)new_AST_Constant((Object)smallint3008);
// at:
send44262 = (Object)new_AST_Send((Object)localvariable6140, (Object)SMB_at_, 1, (Object)constant8582);
// statements:
send44263 = (Object)new_AST_Send((Object)localvariable6141, (Object)symbol7747, 1, (Object)send44262);
// yourself
send44264 = (Object)new_AST_Send((Object)localvariable6141, (Object)symbol7546, 0);
block2809 = (Object)new_AST_Block_with((Type_Array)array4879, (Type_Array)empty_Type_Array, 2, 5, send44255, send44259, send44261, send44263, send44264);
// new
send44265 = (Object)new_AST_Send((Object)classreference1182, (Object)symbol7640, 0);
// value:
send44266 = (Object)new_AST_Send((Object)block2809, (Object)SMB_value_, 1, (Object)send44265);
block2810 = (Object)new_AST_Block_with((Type_Array)array4878, (Type_Array)empty_Type_Array, 1, 1, send44266);
// named:parsing:semantics:
send44267 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8579, (Object)send44253, (Object)block2810);
// separator
send44268 = (Object)new_AST_Send((Object)Self, (Object)symbol7908, 0);
// separator:
send44269 = (Object)new_AST_Send((Object)send44267, (Object)symbol7856, 1, (Object)send44268);
method6029 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44269);
symbol7829 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure6029 = (Object)new_Runtime_MethodClosure(method6029);
store_method((Type_Class)class1018, (Type_Symbol)symbol7829, (Runtime_MethodClosure)methodclosure6029);


// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string5108 = (Object)new_Type_String(L"RETURN");
constant8583 = (Object)new_AST_Constant((Object)string5108);
string5109 = (Object)new_Type_String(L"^");
constant8584 = (Object)new_AST_Constant((Object)string5109);
// asPEG
send44270 = (Object)new_AST_Send((Object)constant8584, (Object)symbol7844, 0);
// omit:
send44271 = (Object)new_AST_Send((Object)send44270, (Object)symbol7848, 1, (Object)True_Const);
symbol7937 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send44272 = (Object)new_AST_Send((Object)Self, (Object)symbol7937, 0);
// &
send44273 = (Object)new_AST_Send((Object)send44271, (Object)SMB__and, 1, (Object)send44272);
localvariable6142 = (Object)new_AST_Variable_named(L"expression");
array4880 = (Object)new_Type_Array_with(1, (Object)localvariable6142);
// new
send44274 = (Object)new_AST_Send((Object)classreference1192, (Object)symbol7640, 0);
// expression:
send44275 = (Object)new_AST_Send((Object)send44274, (Object)symbol7756, 1, (Object)localvariable6142);
block2811 = (Object)new_AST_Block_with((Type_Array)array4880, (Type_Array)empty_Type_Array, 1, 1, send44275);
// named:parsing:semantics:
send44276 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8583, (Object)send44273, (Object)block2811);
method6030 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44276);
symbol7789 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure6030 = (Object)new_Runtime_MethodClosure(method6030);
store_method((Type_Class)class1018, (Type_Symbol)symbol7789, (Runtime_MethodClosure)methodclosure6030);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable6143 = (Object)new_AST_Variable_named(L"receiver");
array4881 = (Object)new_Type_Array_with(1, (Object)localvariable6143);
string5110 = (Object)new_Type_String(L";");
constant8585 = (Object)new_AST_Constant((Object)string5110);
// asPEG
send44277 = (Object)new_AST_Send((Object)constant8585, (Object)symbol7844, 0);
// omit:
send44278 = (Object)new_AST_Send((Object)send44277, (Object)symbol7848, 1, (Object)True_Const);
symbol7938 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send44279 = (Object)new_AST_Send((Object)Self, (Object)symbol7938, 0);
symbol7939 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send44280 = (Object)new_AST_Send((Object)Self, (Object)symbol7939, 0);
// |
send44281 = (Object)new_AST_Send((Object)send44279, (Object)SMB__or, 1, (Object)send44280);
// &
send44282 = (Object)new_AST_Send((Object)send44278, (Object)SMB__and, 1, (Object)send44281);
symbol7940 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send44283 = (Object)new_AST_Send((Object)Self, (Object)symbol7940, 0);
// <=
send44284 = (Object)new_AST_Send((Object)send44282, (Object)symbol7667, 1, (Object)send44283);
// plus
send44285 = (Object)new_AST_Send((Object)send44284, (Object)symbol7851, 0);
// &
send44286 = (Object)new_AST_Send((Object)localvariable6143, (Object)SMB__and, 1, (Object)send44285);
localvariable6144 = (Object)new_AST_Variable_named(L"parts");
array4882 = (Object)new_Type_Array_with(1, (Object)localvariable6144);
smallint3009 = (Object)new_Type_SmallInt(2);
constant8586 = (Object)new_AST_Constant((Object)smallint3009);
// at:
send44287 = (Object)new_AST_Send((Object)localvariable6144, (Object)SMB_at_, 1, (Object)constant8586);
symbol7941 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send44288 = (Object)new_AST_Send((Object)localvariable6144, (Object)symbol7702, 0);
// addFirst:
send44289 = (Object)new_AST_Send((Object)send44287, (Object)symbol7941, 1, (Object)send44288);
localvariable6145 = (Object)new_AST_Variable_named(L"receiver");
array4883 = (Object)new_Type_Array_with(1, (Object)localvariable6145);
// first
send44290 = (Object)new_AST_Send((Object)localvariable6144, (Object)symbol7702, 0);
// receiver
send44291 = (Object)new_AST_Send((Object)send44290, (Object)symbol7730, 0);
// receiver:
send44292 = (Object)new_AST_Send((Object)localvariable6145, (Object)symbol7728, 1, (Object)send44291);
smallint3010 = (Object)new_Type_SmallInt(2);
constant8587 = (Object)new_AST_Constant((Object)smallint3010);
// at:
send44293 = (Object)new_AST_Send((Object)localvariable6144, (Object)SMB_at_, 1, (Object)constant8587);
// cascades:
send44294 = (Object)new_AST_Send((Object)localvariable6145, (Object)symbol7729, 1, (Object)send44293);
block2812 = (Object)new_AST_Block_with((Type_Array)array4883, (Type_Array)empty_Type_Array, 3, 2, send44292, send44294);
// new
send44295 = (Object)new_AST_Send((Object)classreference1188, (Object)symbol7640, 0);
// value:
send44296 = (Object)new_AST_Send((Object)block2812, (Object)SMB_value_, 1, (Object)send44295);
block2813 = (Object)new_AST_Block_with((Type_Array)array4882, (Type_Array)empty_Type_Array, 2, 2, send44289, send44296);
// semantics:
send44297 = (Object)new_AST_Send((Object)localvariable6143, (Object)symbol7857, 1, (Object)block2813);
block2814 = (Object)new_AST_Block_with((Type_Array)array4881, (Type_Array)empty_Type_Array, 1, 2, send44286, send44297);
symbol7942 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
// cascadedMessageExpression
send44298 = (Object)new_AST_Send((Object)Self, (Object)symbol7942, 0);
symbol7943 = (Object)new_Type_Symbol_cached(L"messageExpression");
// messageExpression
send44299 = (Object)new_AST_Send((Object)Self, (Object)symbol7943, 0);
// <=
send44300 = (Object)new_AST_Send((Object)send44298, (Object)symbol7667, 1, (Object)send44299);
// value:
send44301 = (Object)new_AST_Send((Object)block2814, (Object)SMB_value_, 1, (Object)send44300);
method6031 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44301);
symbol7810 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
methodclosure6031 = (Object)new_Runtime_MethodClosure(method6031);
store_method((Type_Class)class1018, (Type_Symbol)symbol7810, (Runtime_MethodClosure)methodclosure6031);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
constant8588 = (Object)new_AST_Constant((Object)symbol7942);
string5111 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant8589 = (Object)new_AST_Constant((Object)string5111);
// named:
send44302 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7864, 1, (Object)constant8589);
block2815 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send44302);
// at:ifAbsentPut:
send44303 = (Object)new_AST_Send((Object)instancevariable1479, (Object)symbol7872, 2, (Object)constant8588, (Object)block2815);
method6032 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44303);
symbol7822 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
methodclosure6032 = (Object)new_Runtime_MethodClosure(method6032);
store_method((Type_Class)class1018, (Type_Symbol)symbol7822, (Runtime_MethodClosure)methodclosure6032);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
symbol7944 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send44304 = (Object)new_AST_Send((Object)Self, (Object)symbol7944, 0);
symbol7945 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send44305 = (Object)new_AST_Send((Object)Self, (Object)symbol7945, 0);
symbol7946 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send44306 = (Object)new_AST_Send((Object)Self, (Object)symbol7946, 0);
symbol7947 = (Object)new_Type_Symbol_cached(L"block");
// block
send44307 = (Object)new_AST_Send((Object)Self, (Object)symbol7947, 0);
symbol7948 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send44308 = (Object)new_AST_Send((Object)Self, (Object)symbol7948, 0);
// <=
send44309 = (Object)new_AST_Send((Object)send44307, (Object)symbol7667, 1, (Object)send44308);
// <=
send44310 = (Object)new_AST_Send((Object)send44306, (Object)symbol7667, 1, (Object)send44309);
// |
send44311 = (Object)new_AST_Send((Object)send44305, (Object)SMB__or, 1, (Object)send44310);
// <=
send44312 = (Object)new_AST_Send((Object)send44304, (Object)symbol7667, 1, (Object)send44311);
symbol7949 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send44313 = (Object)new_AST_Send((Object)Self, (Object)symbol7949, 0);
// <=
send44314 = (Object)new_AST_Send((Object)send44312, (Object)symbol7667, 1, (Object)send44313);
method6033 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44314);
symbol7782 = (Object)new_Type_Symbol_cached(L"injectPrimary");
methodclosure6033 = (Object)new_Runtime_MethodClosure(method6033);
store_method((Type_Class)class1018, (Type_Symbol)symbol7782, (Runtime_MethodClosure)methodclosure6033);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string5112 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant8590 = (Object)new_AST_Constant((Object)string5112);
symbol7950 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
// asPEGChoice
send44315 = (Object)new_AST_Send((Object)constant8590, (Object)symbol7950, 0);
method6034 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44315);
symbol7766 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure6034 = (Object)new_Runtime_MethodClosure(method6034);
store_method((Type_Class)class1018, (Type_Symbol)symbol7766, (Runtime_MethodClosure)methodclosure6034);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string5113 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant8591 = (Object)new_AST_Constant((Object)string5113);
symbol7951 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send44316 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
string5114 = (Object)new_Type_String(L":");
constant8592 = (Object)new_AST_Constant((Object)string5114);
// asPEG
send44317 = (Object)new_AST_Send((Object)constant8592, (Object)symbol7844, 0);
// not
send44318 = (Object)new_AST_Send((Object)send44317, (Object)SMB_not, 0);
symbol7952 = (Object)new_Type_Symbol_cached(L"consume:");
// consume:
send44319 = (Object)new_AST_Send((Object)send44318, (Object)symbol7952, 1, (Object)False_Const);
// &&
send44320 = (Object)new_AST_Send((Object)send44316, (Object)symbol7840, 1, (Object)send44319);
localvariable6146 = (Object)new_AST_Variable_named(L"selector");
array4884 = (Object)new_Type_Array_with(1, (Object)localvariable6146);
// new
send44321 = (Object)new_AST_Send((Object)classreference1193, (Object)symbol7640, 0);
// createSymbol:
send44322 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)localvariable6146);
// selector:
send44323 = (Object)new_AST_Send((Object)send44321, (Object)symbol7734, 1, (Object)send44322);
block2816 = (Object)new_AST_Block_with((Type_Array)array4884, (Type_Array)empty_Type_Array, 1, 1, send44323);
// named:parsing:semantics:
send44324 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8591, (Object)send44320, (Object)block2816);
method6035 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44324);
symbol7794 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure6035 = (Object)new_Runtime_MethodClosure(method6035);
store_method((Type_Class)class1018, (Type_Symbol)symbol7794, (Runtime_MethodClosure)methodclosure6035);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send44325 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
// primary
send44326 = (Object)new_AST_Send((Object)Self, (Object)symbol7944, 0);
method6036 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send44325, send44326);
symbol7804 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure6036 = (Object)new_Runtime_MethodClosure(method6036);
store_method((Type_Class)class1018, (Type_Symbol)symbol7804, (Runtime_MethodClosure)methodclosure6036);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string5115 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant8593 = (Object)new_AST_Constant((Object)string5115);
symbol7953 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send44327 = (Object)new_AST_Send((Object)Self, (Object)symbol7953, 0);
symbol7954 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send44328 = (Object)new_AST_Send((Object)Self, (Object)symbol7954, 0);
// |
send44329 = (Object)new_AST_Send((Object)send44327, (Object)SMB__or, 1, (Object)send44328);
symbol7955 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send44330 = (Object)new_AST_Send((Object)Self, (Object)symbol7955, 0);
// <=
send44331 = (Object)new_AST_Send((Object)send44329, (Object)symbol7667, 1, (Object)send44330);
// named:parsing:
send44332 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7932, 2, (Object)constant8593, (Object)send44331);
method6037 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44332);
symbol7832 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure6037 = (Object)new_Runtime_MethodClosure(method6037);
store_method((Type_Class)class1018, (Type_Symbol)symbol7832, (Runtime_MethodClosure)methodclosure6037);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string5116 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant8594 = (Object)new_AST_Constant((Object)string5116);
symbol7956 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send44333 = (Object)new_AST_Send((Object)Self, (Object)symbol7956, 0);
localvariable6147 = (Object)new_AST_Variable_named(L"selector");
array4885 = (Object)new_Type_Array_with(1, (Object)localvariable6147);
// new
send44334 = (Object)new_AST_Send((Object)classreference1198, (Object)symbol7640, 0);
// selector:
send44335 = (Object)new_AST_Send((Object)send44334, (Object)symbol7734, 1, (Object)localvariable6147);
block2817 = (Object)new_AST_Block_with((Type_Array)array4885, (Type_Array)empty_Type_Array, 1, 1, send44335);
// named:parsing:semantics:
send44336 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8594, (Object)send44333, (Object)block2817);
method6038 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44336);
symbol7776 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure6038 = (Object)new_Runtime_MethodClosure(method6038);
store_method((Type_Class)class1018, (Type_Symbol)symbol7776, (Runtime_MethodClosure)methodclosure6038);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string5117 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant8595 = (Object)new_AST_Constant((Object)string5117);
// symbol
send44337 = (Object)new_AST_Send((Object)Self, (Object)symbol7715, 0);
localvariable6148 = (Object)new_AST_Variable_named(L"symbol");
array4886 = (Object)new_Type_Array_with(1, (Object)localvariable6148);
// new
send44338 = (Object)new_AST_Send((Object)classreference1172, (Object)symbol7640, 0);
// symbol:
send44339 = (Object)new_AST_Send((Object)send44338, (Object)symbol7716, 1, (Object)localvariable6148);
block2818 = (Object)new_AST_Block_with((Type_Array)array4886, (Type_Array)empty_Type_Array, 1, 1, send44339);
// named:parsing:semantics:
send44340 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8595, (Object)send44337, (Object)block2818);
method6039 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44340);
symbol7814 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure6039 = (Object)new_Runtime_MethodClosure(method6039);
store_method((Type_Class)class1018, (Type_Symbol)symbol7814, (Runtime_MethodClosure)methodclosure6039);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string5118 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant8596 = (Object)new_AST_Constant((Object)string5118);
symbol7957 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send44341 = (Object)new_AST_Send((Object)Self, (Object)symbol7957, 0);
// strongPlus
send44342 = (Object)new_AST_Send((Object)send44341, (Object)symbol7847, 0);
localvariable6149 = (Object)new_AST_Variable_named(L"result");
array4887 = (Object)new_Type_Array_with(1, (Object)localvariable6149);
string5119 = (Object)new_Type_String(L"");
constant8597 = (Object)new_AST_Constant((Object)string5119);
localvariable6150 = (Object)new_AST_Variable_named(L"c");
localvariable6151 = (Object)new_AST_Variable_named(L"e");
array4888 = (Object)new_Type_Array_with(2, (Object)localvariable6150, (Object)localvariable6151);
// ,
send44343 = (Object)new_AST_Send((Object)localvariable6150, (Object)SMB__concat, 1, (Object)localvariable6151);
string5120 = (Object)new_Type_String(L":");
constant8598 = (Object)new_AST_Constant((Object)string5120);
// ,
send44344 = (Object)new_AST_Send((Object)send44343, (Object)SMB__concat, 1, (Object)constant8598);
block2819 = (Object)new_AST_Block_with((Type_Array)array4888, (Type_Array)empty_Type_Array, 2, 1, send44344);
// inject:into:
send44345 = (Object)new_AST_Send((Object)localvariable6149, (Object)symbol7707, 2, (Object)constant8597, (Object)block2819);
block2820 = (Object)new_AST_Block_with((Type_Array)array4887, (Type_Array)empty_Type_Array, 1, 1, send44345);
// named:parsing:semantics:
send44346 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8596, (Object)send44342, (Object)block2820);
method6040 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44346);
symbol7826 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure6040 = (Object)new_Runtime_MethodClosure(method6040);
store_method((Type_Class)class1018, (Type_Symbol)symbol7826, (Runtime_MethodClosure)methodclosure6040);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
symbol7958 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send44347 = (Object)new_AST_Send((Object)Self, (Object)symbol7958, 0);
symbol7761 = (Object)new_Type_Symbol_cached(L"assignmentOp");
// assignmentOp
send44348 = (Object)new_AST_Send((Object)Self, (Object)symbol7761, 0);
// &
send44349 = (Object)new_AST_Send((Object)send44347, (Object)SMB__and, 1, (Object)send44348);
// times
send44350 = (Object)new_AST_Send((Object)send44349, (Object)symbol7839, 0);
method6041 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44350);
symbol7786 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure6041 = (Object)new_Runtime_MethodClosure(method6041);
store_method((Type_Class)class1018, (Type_Symbol)symbol7786, (Runtime_MethodClosure)methodclosure6041);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string5121 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant8599 = (Object)new_AST_Constant((Object)string5121);
string5122 = (Object)new_Type_String(L"$");
constant8600 = (Object)new_AST_Constant((Object)string5122);
// asPEG
send44351 = (Object)new_AST_Send((Object)constant8600, (Object)symbol7844, 0);
// omit:
send44352 = (Object)new_AST_Send((Object)send44351, (Object)symbol7848, 1, (Object)True_Const);
symbol7959 = (Object)new_Type_Symbol_cached(L"character");
// character
send44353 = (Object)new_AST_Send((Object)Self, (Object)symbol7959, 0);
// &&
send44354 = (Object)new_AST_Send((Object)send44352, (Object)symbol7840, 1, (Object)send44353);
localvariable6152 = (Object)new_AST_Variable_named(L"char");
array4889 = (Object)new_Type_Array_with(1, (Object)localvariable6152);
// new
send44355 = (Object)new_AST_Send((Object)classreference1197, (Object)symbol7640, 0);
// first
send44356 = (Object)new_AST_Send((Object)localvariable6152, (Object)symbol7702, 0);
// char:
send44357 = (Object)new_AST_Send((Object)send44355, (Object)symbol7860, 1, (Object)send44356);
block2821 = (Object)new_AST_Block_with((Type_Array)array4889, (Type_Array)empty_Type_Array, 1, 1, send44357);
// named:parsing:semantics:
send44358 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8599, (Object)send44354, (Object)block2821);
method6042 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44358);
symbol7798 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure6042 = (Object)new_Runtime_MethodClosure(method6042);
store_method((Type_Class)class1018, (Type_Symbol)symbol7798, (Runtime_MethodClosure)methodclosure6042);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send44359 = (Object)new_AST_Send((Object)Self, (Object)symbol7930, 0);
// binaryExpression
send44360 = (Object)new_AST_Send((Object)Self, (Object)symbol7927, 0);
// <=
send44361 = (Object)new_AST_Send((Object)send44359, (Object)symbol7667, 1, (Object)send44360);
// unaryObjectDescription
send44362 = (Object)new_AST_Send((Object)Self, (Object)symbol7928, 0);
// |
send44363 = (Object)new_AST_Send((Object)send44361, (Object)SMB__or, 1, (Object)send44362);
method6043 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44363);
methodclosure6043 = (Object)new_Runtime_MethodClosure(method6043);
store_method((Type_Class)class1018, (Type_Symbol)symbol7763, (Runtime_MethodClosure)methodclosure6043);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
string5123 = (Object)new_Type_String(L"BLOCK");
constant8601 = (Object)new_AST_Constant((Object)string5123);
string5124 = (Object)new_Type_String(L"[");
constant8602 = (Object)new_AST_Constant((Object)string5124);
// asPEG
send44364 = (Object)new_AST_Send((Object)constant8602, (Object)symbol7844, 0);
// omit:
send44365 = (Object)new_AST_Send((Object)send44364, (Object)symbol7848, 1, (Object)True_Const);
symbol7960 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send44366 = (Object)new_AST_Send((Object)Self, (Object)symbol7960, 0);
symbol7961 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send44367 = (Object)new_AST_Send((Object)Self, (Object)symbol7961, 0);
// &
send44368 = (Object)new_AST_Send((Object)send44366, (Object)SMB__and, 1, (Object)send44367);
// optional
send44369 = (Object)new_AST_Send((Object)send44368, (Object)symbol7843, 0);
// temporaries
send44370 = (Object)new_AST_Send((Object)Self, (Object)symbol7749, 0);
// optional
send44371 = (Object)new_AST_Send((Object)send44370, (Object)symbol7843, 0);
// statements
send44372 = (Object)new_AST_Send((Object)Self, (Object)symbol7745, 0);
// <&
send44373 = (Object)new_AST_Send((Object)send44371, (Object)symbol7880, 1, (Object)send44372);
// <&
send44374 = (Object)new_AST_Send((Object)send44369, (Object)symbol7880, 1, (Object)send44373);
// &
send44375 = (Object)new_AST_Send((Object)send44365, (Object)SMB__and, 1, (Object)send44374);
string5125 = (Object)new_Type_String(L"]");
constant8603 = (Object)new_AST_Constant((Object)string5125);
// asPEG
send44376 = (Object)new_AST_Send((Object)constant8603, (Object)symbol7844, 0);
// omit:
send44377 = (Object)new_AST_Send((Object)send44376, (Object)symbol7848, 1, (Object)True_Const);
// <&
send44378 = (Object)new_AST_Send((Object)send44375, (Object)symbol7880, 1, (Object)send44377);
localvariable6153 = (Object)new_AST_Variable_named(L"result");
array4890 = (Object)new_Type_Array_with(1, (Object)localvariable6153);
localvariable6154 = (Object)new_AST_Variable_named(L"receiver");
array4891 = (Object)new_Type_Array_with(1, (Object)localvariable6154);
// first
send44379 = (Object)new_AST_Send((Object)localvariable6153, (Object)symbol7702, 0);
// new
send44380 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
block2822 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44380);
// resultIfFailed:
send44381 = (Object)new_AST_Send((Object)send44379, (Object)symbol7882, 1, (Object)block2822);
// parameters:
send44382 = (Object)new_AST_Send((Object)localvariable6154, (Object)symbol7754, 1, (Object)send44381);
smallint3011 = (Object)new_Type_SmallInt(2);
constant8604 = (Object)new_AST_Constant((Object)smallint3011);
// at:
send44383 = (Object)new_AST_Send((Object)localvariable6153, (Object)SMB_at_, 1, (Object)constant8604);
// new
send44384 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7640, 0);
block2823 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send44384);
// resultIfFailed:
send44385 = (Object)new_AST_Send((Object)send44383, (Object)symbol7882, 1, (Object)block2823);
// temporaries:
send44386 = (Object)new_AST_Send((Object)localvariable6154, (Object)symbol7750, 1, (Object)send44385);
smallint3012 = (Object)new_Type_SmallInt(3);
constant8605 = (Object)new_AST_Constant((Object)smallint3012);
// at:
send44387 = (Object)new_AST_Send((Object)localvariable6153, (Object)SMB_at_, 1, (Object)constant8605);
// statements:
send44388 = (Object)new_AST_Send((Object)localvariable6154, (Object)symbol7747, 1, (Object)send44387);
block2824 = (Object)new_AST_Block_with((Type_Array)array4891, (Type_Array)empty_Type_Array, 2, 3, send44382, send44386, send44388);
// new
send44389 = (Object)new_AST_Send((Object)classreference1183, (Object)symbol7640, 0);
// value:
send44390 = (Object)new_AST_Send((Object)block2824, (Object)SMB_value_, 1, (Object)send44389);
block2825 = (Object)new_AST_Block_with((Type_Array)array4890, (Type_Array)empty_Type_Array, 1, 1, send44390);
// named:parsing:semantics:
send44391 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8601, (Object)send44378, (Object)block2825);
method6044 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44391);
symbol7791 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure6044 = (Object)new_Runtime_MethodClosure(method6044);
store_method((Type_Class)class1018, (Type_Symbol)symbol7791, (Runtime_MethodClosure)methodclosure6044);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string5126 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant8606 = (Object)new_AST_Constant((Object)string5126);
string5127 = (Object)new_Type_String(L":");
constant8607 = (Object)new_AST_Constant((Object)string5127);
// asPEG
send44392 = (Object)new_AST_Send((Object)constant8607, (Object)symbol7844, 0);
// omit:
send44393 = (Object)new_AST_Send((Object)send44392, (Object)symbol7848, 1, (Object)True_Const);
// identifier
send44394 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
// &
send44395 = (Object)new_AST_Send((Object)send44393, (Object)SMB__and, 1, (Object)send44394);
// plus
send44396 = (Object)new_AST_Send((Object)send44395, (Object)symbol7851, 0);
localvariable6155 = (Object)new_AST_Variable_named(L"result");
array4892 = (Object)new_Type_Array_with(1, (Object)localvariable6155);
symbol7962 = (Object)new_Type_Symbol_cached(L"collect:");
localvariable6156 = (Object)new_AST_Variable_named(L"variable");
array4893 = (Object)new_Type_Array_with(1, (Object)localvariable6156);
symbol7770 = (Object)new_Type_Symbol_cached(L"createVariable:");
// createVariable:
send44397 = (Object)new_AST_Send((Object)Self, (Object)symbol7770, 1, (Object)localvariable6156);
block2826 = (Object)new_AST_Block_with((Type_Array)array4893, (Type_Array)empty_Type_Array, 2, 1, send44397);
// collect:
send44398 = (Object)new_AST_Send((Object)localvariable6155, (Object)symbol7962, 1, (Object)block2826);
block2827 = (Object)new_AST_Block_with((Type_Array)array4892, (Type_Array)empty_Type_Array, 1, 1, send44398);
// named:parsing:semantics:
send44399 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8606, (Object)send44396, (Object)block2827);
method6045 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44399);
symbol7808 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure6045 = (Object)new_Runtime_MethodClosure(method6045);
store_method((Type_Class)class1018, (Type_Symbol)symbol7808, (Runtime_MethodClosure)methodclosure6045);


// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
string5128 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant8608 = (Object)new_AST_Constant((Object)string5128);
// unarySelector
send44400 = (Object)new_AST_Send((Object)Self, (Object)symbol7956, 0);
localvariable6157 = (Object)new_AST_Variable_named(L"selector");
array4894 = (Object)new_Type_Array_with(1, (Object)localvariable6157);
// new
send44401 = (Object)new_AST_Send((Object)classreference1170, (Object)symbol7640, 0);
// selector:
send44402 = (Object)new_AST_Send((Object)send44401, (Object)symbol7734, 1, (Object)localvariable6157);
block2828 = (Object)new_AST_Block_with((Type_Array)array4894, (Type_Array)empty_Type_Array, 1, 1, send44402);
// named:parsing:semantics:
send44403 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8608, (Object)send44400, (Object)block2828);
method6046 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44403);
symbol7801 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure6046 = (Object)new_Runtime_MethodClosure(method6046);
store_method((Type_Class)class1018, (Type_Symbol)symbol7801, (Runtime_MethodClosure)methodclosure6046);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string5129 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant8609 = (Object)new_AST_Constant((Object)string5129);
string5130 = (Object)new_Type_String(L"{");
constant8610 = (Object)new_AST_Constant((Object)string5130);
// asPEG
send44404 = (Object)new_AST_Send((Object)constant8610, (Object)symbol7844, 0);
// omit:
send44405 = (Object)new_AST_Send((Object)send44404, (Object)symbol7848, 1, (Object)True_Const);
symbol7963 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send44406 = (Object)new_AST_Send((Object)Self, (Object)symbol7963, 0);
// times
send44407 = (Object)new_AST_Send((Object)send44406, (Object)symbol7839, 0);
// expression
send44408 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
// <&
send44409 = (Object)new_AST_Send((Object)send44407, (Object)symbol7880, 1, (Object)send44408);
// &
send44410 = (Object)new_AST_Send((Object)send44405, (Object)SMB__and, 1, (Object)send44409);
string5131 = (Object)new_Type_String(L"}");
constant8611 = (Object)new_AST_Constant((Object)string5131);
// asPEG
send44411 = (Object)new_AST_Send((Object)constant8611, (Object)symbol7844, 0);
// omit:
send44412 = (Object)new_AST_Send((Object)send44411, (Object)symbol7848, 1, (Object)True_Const);
// <&
send44413 = (Object)new_AST_Send((Object)send44410, (Object)symbol7880, 1, (Object)send44412);
localvariable6158 = (Object)new_AST_Variable_named(L"result");
array4895 = (Object)new_Type_Array_with(1, (Object)localvariable6158);
// new
send44414 = (Object)new_AST_Send((Object)classreference1181, (Object)symbol7640, 0);
localvariable6159 = (Object)new_AST_Variable_named(L"receiver");
array4896 = (Object)new_Type_Array_with(1, (Object)localvariable6159);
smallint3013 = (Object)new_Type_SmallInt(2);
constant8612 = (Object)new_AST_Constant((Object)smallint3013);
// at:
send44415 = (Object)new_AST_Send((Object)localvariable6158, (Object)SMB_at_, 1, (Object)constant8612);
// add:
send44416 = (Object)new_AST_Send((Object)localvariable6159, (Object)symbol7706, 1, (Object)send44415);
// yourself
send44417 = (Object)new_AST_Send((Object)localvariable6159, (Object)symbol7546, 0);
block2829 = (Object)new_AST_Block_with((Type_Array)array4896, (Type_Array)empty_Type_Array, 2, 2, send44416, send44417);
// first
send44418 = (Object)new_AST_Send((Object)localvariable6158, (Object)symbol7702, 0);
// value:
send44419 = (Object)new_AST_Send((Object)block2829, (Object)SMB_value_, 1, (Object)send44418);
// expressions:
send44420 = (Object)new_AST_Send((Object)send44414, (Object)symbol7874, 1, (Object)send44419);
block2830 = (Object)new_AST_Block_with((Type_Array)array4895, (Type_Array)empty_Type_Array, 1, 1, send44420);
// named:parsing:semantics:
send44421 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8609, (Object)send44413, (Object)block2830);
method6047 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44421);
symbol7818 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure6047 = (Object)new_Runtime_MethodClosure(method6047);
store_method((Type_Class)class1018, (Type_Symbol)symbol7818, (Runtime_MethodClosure)methodclosure6047);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string5132 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant8613 = (Object)new_AST_Constant((Object)string5132);
symbol7964 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send44422 = (Object)new_AST_Send((Object)Self, (Object)symbol7964, 0);
symbol7965 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send44423 = (Object)new_AST_Send((Object)Self, (Object)symbol7965, 0);
symbol7966 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send44424 = (Object)new_AST_Send((Object)Self, (Object)symbol7966, 0);
// |
send44425 = (Object)new_AST_Send((Object)send44423, (Object)SMB__or, 1, (Object)send44424);
// strongTimes
send44426 = (Object)new_AST_Send((Object)send44425, (Object)symbol7841, 0);
// &&
send44427 = (Object)new_AST_Send((Object)send44422, (Object)symbol7840, 1, (Object)send44426);
localvariable6160 = (Object)new_AST_Variable_named(L"result");
array4897 = (Object)new_Type_Array_with(1, (Object)localvariable6160);
symbol7967 = (Object)new_Type_Symbol_cached(L"second");
// second
send44428 = (Object)new_AST_Send((Object)localvariable6160, (Object)symbol7967, 0);
// first
send44429 = (Object)new_AST_Send((Object)localvariable6160, (Object)symbol7702, 0);
localvariable6161 = (Object)new_AST_Variable_named(L"c");
localvariable6162 = (Object)new_AST_Variable_named(L"e");
array4898 = (Object)new_Type_Array_with(2, (Object)localvariable6161, (Object)localvariable6162);
// ,
send44430 = (Object)new_AST_Send((Object)localvariable6161, (Object)SMB__concat, 1, (Object)localvariable6162);
block2831 = (Object)new_AST_Block_with((Type_Array)array4898, (Type_Array)empty_Type_Array, 2, 1, send44430);
// inject:into:
send44431 = (Object)new_AST_Send((Object)send44428, (Object)symbol7707, 2, (Object)send44429, (Object)block2831);
block2832 = (Object)new_AST_Block_with((Type_Array)array4897, (Type_Array)empty_Type_Array, 1, 1, send44431);
// named:parsing:semantics:
send44432 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8613, (Object)send44427, (Object)block2832);
method6048 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44432);
symbol7811 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure6048 = (Object)new_Runtime_MethodClosure(method6048);
store_method((Type_Class)class1018, (Type_Symbol)symbol7811, (Runtime_MethodClosure)methodclosure6048);


// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
constant8614 = (Object)new_AST_Constant((Object)symbol7943);
string5133 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant8615 = (Object)new_AST_Constant((Object)string5133);
// named:
send44433 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7864, 1, (Object)constant8615);
block2833 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send44433);
// at:ifAbsentPut:
send44434 = (Object)new_AST_Send((Object)instancevariable1479, (Object)symbol7872, 2, (Object)constant8614, (Object)block2833);
method6049 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44434);
symbol7823 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
methodclosure6049 = (Object)new_Runtime_MethodClosure(method6049);
store_method((Type_Class)class1018, (Type_Symbol)symbol7823, (Runtime_MethodClosure)methodclosure6049);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send44435 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
// messageExpression
send44436 = (Object)new_AST_Send((Object)Self, (Object)symbol7943, 0);
// separator
send44437 = (Object)new_AST_Send((Object)Self, (Object)symbol7908, 0);
// separator:
send44438 = (Object)new_AST_Send((Object)send44436, (Object)symbol7856, 1, (Object)send44437);
method6050 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send44435, send44438);
symbol7783 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure6050 = (Object)new_Runtime_MethodClosure(method6050);
store_method((Type_Class)class1018, (Type_Symbol)symbol7783, (Runtime_MethodClosure)methodclosure6050);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string5134 = (Object)new_Type_String(L"a-z");
constant8616 = (Object)new_AST_Constant((Object)string5134);
// asPEGRange
send44439 = (Object)new_AST_Send((Object)constant8616, (Object)symbol7931, 0);
method6051 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44439);
symbol7767 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure6051 = (Object)new_Runtime_MethodClosure(method6051);
store_method((Type_Class)class1018, (Type_Symbol)symbol7767, (Runtime_MethodClosure)methodclosure6051);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
string5135 = (Object)new_Type_String(L"TEMPORARIES");
constant8617 = (Object)new_AST_Constant((Object)string5135);
// bar
send44440 = (Object)new_AST_Send((Object)Self, (Object)symbol7961, 0);
// variableName
send44441 = (Object)new_AST_Send((Object)Self, (Object)symbol7958, 0);
// times
send44442 = (Object)new_AST_Send((Object)send44441, (Object)symbol7839, 0);
// &
send44443 = (Object)new_AST_Send((Object)send44440, (Object)SMB__and, 1, (Object)send44442);
// bar
send44444 = (Object)new_AST_Send((Object)Self, (Object)symbol7961, 0);
// <&
send44445 = (Object)new_AST_Send((Object)send44443, (Object)symbol7880, 1, (Object)send44444);
// named:parsing:
send44446 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7932, 2, (Object)constant8617, (Object)send44445);
method6052 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44446);
symbol7795 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure6052 = (Object)new_Runtime_MethodClosure(method6052);
store_method((Type_Class)class1018, (Type_Symbol)symbol7795, (Runtime_MethodClosure)methodclosure6052);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
// 			ifTrue: [ self perform: selector ]
//             ifFalse: [ super doesNotUnderstand: message ]
// 	]
localvariable6163 = (Object)new_AST_Variable_named(L"message");
array4899 = (Object)new_Type_Array_with(1, (Object)localvariable6163);
localvariable6164 = (Object)new_AST_Variable_named(L"selector");
array4900 = (Object)new_Type_Array_with(1, (Object)localvariable6164);
// selector
send44447 = (Object)new_AST_Send((Object)localvariable6163, (Object)symbol7654, 0);
string5136 = (Object)new_Type_String(L"initialize");
constant8618 = (Object)new_AST_Constant((Object)string5136);
// selector
send44448 = (Object)new_AST_Send((Object)localvariable6163, (Object)symbol7654, 0);
// capitalized
send44449 = (Object)new_AST_Send((Object)send44448, (Object)symbol7664, 0);
// ,
send44450 = (Object)new_AST_Send((Object)constant8618, (Object)SMB__concat, 1, (Object)send44449);
// asSymbol
send44451 = (Object)new_AST_Send((Object)send44450, (Object)SMB_asSymbol, 0);
assign5393 = (Object)new_AST_Assign((Object)localvariable6164, (Object)send44451);
// respondsTo:
send44452 = (Object)new_AST_Send((Object)Self, (Object)symbol7549, 1, (Object)localvariable6164);
symbol7968 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send44453 = (Object)new_AST_Send((Object)Self, (Object)symbol7968, 1, (Object)localvariable6164);
block2834 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44453);
super512 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable6163);
block2835 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super512);
// ifTrue:ifFalse:
send44454 = (Object)new_AST_Send((Object)send44452, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block2834, (Object)block2835);
block2836 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, assign5393, send44454);
// at:ifAbsentPut:
send44455 = (Object)new_AST_Send((Object)instancevariable1479, (Object)symbol7872, 2, (Object)send44447, (Object)block2836);
method6053 = (Object)new_AST_Method_with((Type_Array)array4899, (Type_Array)array4900, 1, send44455);
methodclosure6053 = (Object)new_Runtime_MethodClosure(method6053);
store_method((Type_Class)class1018, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure6053);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send44456 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
// cascadedMessageExpression
send44457 = (Object)new_AST_Send((Object)Self, (Object)symbol7942, 0);
method6054 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send44456, send44457);
symbol7760 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure6054 = (Object)new_Runtime_MethodClosure(method6054);
store_method((Type_Class)class1018, (Type_Symbol)symbol7760, (Runtime_MethodClosure)methodclosure6054);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string5137 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant8619 = (Object)new_AST_Constant((Object)string5137);
// keyword
send44458 = (Object)new_AST_Send((Object)Self, (Object)symbol7957, 0);
// primary
send44459 = (Object)new_AST_Send((Object)Self, (Object)symbol7944, 0);
// &
send44460 = (Object)new_AST_Send((Object)send44458, (Object)SMB__and, 1, (Object)send44459);
// plus
send44461 = (Object)new_AST_Send((Object)send44460, (Object)symbol7851, 0);
localvariable6165 = (Object)new_AST_Variable_named(L"result");
array4901 = (Object)new_Type_Array_with(1, (Object)localvariable6165);
localvariable6166 = (Object)new_AST_Variable_named(L"receiver");
array4902 = (Object)new_Type_Array_with(1, (Object)localvariable6166);
localvariable6167 = (Object)new_AST_Variable_named(L"each");
array4903 = (Object)new_Type_Array_with(1, (Object)localvariable6167);
// first
send44462 = (Object)new_AST_Send((Object)localvariable6167, (Object)symbol7702, 0);
// named:
send44463 = (Object)new_AST_Send((Object)classreference1172, (Object)symbol7864, 1, (Object)send44462);
block2837 = (Object)new_AST_Block_with((Type_Array)array4903, (Type_Array)empty_Type_Array, 3, 1, send44463);
// collect:
send44464 = (Object)new_AST_Send((Object)localvariable6165, (Object)symbol7962, 1, (Object)block2837);
// keywords:
send44465 = (Object)new_AST_Send((Object)localvariable6166, (Object)symbol7739, 1, (Object)send44464);
// new
send44466 = (Object)new_AST_Send((Object)classreference1169, (Object)symbol7640, 0);
constant8620 = (Object)new_AST_Constant((Object)symbol7702);
// collect:
send44467 = (Object)new_AST_Send((Object)localvariable6165, (Object)symbol7962, 1, (Object)constant8620);
// keywords:
send44468 = (Object)new_AST_Send((Object)send44466, (Object)symbol7739, 1, (Object)send44467);
// selector:
send44469 = (Object)new_AST_Send((Object)localvariable6166, (Object)symbol7734, 1, (Object)send44468);
constant8621 = (Object)new_AST_Constant((Object)symbol7967);
// collect:
send44470 = (Object)new_AST_Send((Object)localvariable6165, (Object)symbol7962, 1, (Object)constant8621);
// arguments:
send44471 = (Object)new_AST_Send((Object)localvariable6166, (Object)symbol7741, 1, (Object)send44470);
block2838 = (Object)new_AST_Block_with((Type_Array)array4902, (Type_Array)empty_Type_Array, 2, 3, send44465, send44469, send44471);
// new
send44472 = (Object)new_AST_Send((Object)classreference1199, (Object)symbol7640, 0);
// value:
send44473 = (Object)new_AST_Send((Object)block2838, (Object)SMB_value_, 1, (Object)send44472);
block2839 = (Object)new_AST_Block_with((Type_Array)array4901, (Type_Array)empty_Type_Array, 1, 1, send44473);
// named:parsing:semantics:
send44474 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8619, (Object)send44461, (Object)block2839);
method6055 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44474);
symbol7805 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure6055 = (Object)new_Runtime_MethodClosure(method6055);
store_method((Type_Class)class1018, (Type_Symbol)symbol7805, (Runtime_MethodClosure)methodclosure6055);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string5138 = (Object)new_Type_String(L"NUMBER");
constant8622 = (Object)new_AST_Constant((Object)string5138);
// decimalDigit
send44475 = (Object)new_AST_Send((Object)Self, (Object)symbol7966, 0);
// plus
send44476 = (Object)new_AST_Send((Object)send44475, (Object)symbol7851, 0);
localvariable6168 = (Object)new_AST_Variable_named(L"result");
array4904 = (Object)new_Type_Array_with(1, (Object)localvariable6168);
localvariable6169 = (Object)new_AST_Variable_named(L"receiver");
array4905 = (Object)new_Type_Array_with(1, (Object)localvariable6169);
string5139 = (Object)new_Type_String(L"");
constant8623 = (Object)new_AST_Constant((Object)string5139);
localvariable6170 = (Object)new_AST_Variable_named(L"c");
localvariable6171 = (Object)new_AST_Variable_named(L"e");
array4906 = (Object)new_Type_Array_with(2, (Object)localvariable6170, (Object)localvariable6171);
// ,
send44477 = (Object)new_AST_Send((Object)localvariable6170, (Object)SMB__concat, 1, (Object)localvariable6171);
block2840 = (Object)new_AST_Block_with((Type_Array)array4906, (Type_Array)empty_Type_Array, 3, 1, send44477);
// inject:into:
send44478 = (Object)new_AST_Send((Object)localvariable6168, (Object)symbol7707, 2, (Object)constant8623, (Object)block2840);
// number:
send44479 = (Object)new_AST_Send((Object)localvariable6169, (Object)symbol7709, 1, (Object)send44478);
string5140 = (Object)new_Type_String(L"10");
constant8624 = (Object)new_AST_Constant((Object)string5140);
// base:
send44480 = (Object)new_AST_Send((Object)localvariable6169, (Object)symbol7714, 1, (Object)constant8624);
block2841 = (Object)new_AST_Block_with((Type_Array)array4905, (Type_Array)empty_Type_Array, 2, 2, send44479, send44480);
// new
send44481 = (Object)new_AST_Send((Object)classreference1167, (Object)symbol7640, 0);
// value:
send44482 = (Object)new_AST_Send((Object)block2841, (Object)SMB_value_, 1, (Object)send44481);
block2842 = (Object)new_AST_Block_with((Type_Array)array4904, (Type_Array)empty_Type_Array, 1, 1, send44482);
// named:parsing:semantics:
send44483 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8622, (Object)send44476, (Object)block2842);
method6056 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44483);
symbol7833 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure6056 = (Object)new_Runtime_MethodClosure(method6056);
store_method((Type_Class)class1018, (Type_Symbol)symbol7833, (Runtime_MethodClosure)methodclosure6056);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string5141 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant8625 = (Object)new_AST_Constant((Object)string5141);
// binarySelector
send44484 = (Object)new_AST_Send((Object)Self, (Object)symbol7929, 0);
// unaryObjectDescription
send44485 = (Object)new_AST_Send((Object)Self, (Object)symbol7928, 0);
// &
send44486 = (Object)new_AST_Send((Object)send44484, (Object)SMB__and, 1, (Object)send44485);
localvariable6172 = (Object)new_AST_Variable_named(L"parts");
array4907 = (Object)new_Type_Array_with(1, (Object)localvariable6172);
localvariable6173 = (Object)new_AST_Variable_named(L"receiver");
array4908 = (Object)new_Type_Array_with(1, (Object)localvariable6173);
// first
send44487 = (Object)new_AST_Send((Object)localvariable6172, (Object)symbol7702, 0);
// createSymbol:
send44488 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)send44487);
// selector:
send44489 = (Object)new_AST_Send((Object)localvariable6173, (Object)symbol7734, 1, (Object)send44488);
smallint3014 = (Object)new_Type_SmallInt(2);
constant8626 = (Object)new_AST_Constant((Object)smallint3014);
// at:
send44490 = (Object)new_AST_Send((Object)localvariable6172, (Object)SMB_at_, 1, (Object)constant8626);
// argument:
send44491 = (Object)new_AST_Send((Object)localvariable6173, (Object)symbol7737, 1, (Object)send44490);
block2843 = (Object)new_AST_Block_with((Type_Array)array4908, (Type_Array)empty_Type_Array, 2, 2, send44489, send44491);
// new
send44492 = (Object)new_AST_Send((Object)classreference1191, (Object)symbol7640, 0);
// value:
send44493 = (Object)new_AST_Send((Object)block2843, (Object)SMB_value_, 1, (Object)send44492);
block2844 = (Object)new_AST_Block_with((Type_Array)array4907, (Type_Array)empty_Type_Array, 1, 1, send44493);
// named:parsing:semantics:
send44494 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8625, (Object)send44486, (Object)block2844);
method6057 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44494);
symbol7777 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure6057 = (Object)new_Runtime_MethodClosure(method6057);
store_method((Type_Class)class1018, (Type_Symbol)symbol7777, (Runtime_MethodClosure)methodclosure6057);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable6174 = (Object)new_AST_Variable_named(L"name");
array4909 = (Object)new_Type_Array_with(1, (Object)localvariable6174);
variable320 = (Object)new_AST_Variable_named(L"return");
array4910 = (Object)new_Type_Array_with(1, (Object)variable320);
string5142 = (Object)new_Type_String(L"self");
constant8627 = (Object)new_AST_Constant((Object)string5142);
// =
send44495 = (Object)new_AST_Send((Object)localvariable6174, (Object)SMB__equal, 1, (Object)constant8627);
// new
send44496 = (Object)new_AST_Send((Object)classreference1175, (Object)symbol7640, 0);
// escape:
send44497 = (Object)new_AST_Send((Object)variable320, (Object)SMB_escape_, 1, (Object)send44496);
block2845 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44497);
// ifTrue:
send44498 = (Object)new_AST_Send((Object)send44495, (Object)SMB_ifTrue_, 1, (Object)block2845);
string5143 = (Object)new_Type_String(L"super");
constant8628 = (Object)new_AST_Constant((Object)string5143);
// =
send44499 = (Object)new_AST_Send((Object)localvariable6174, (Object)SMB__equal, 1, (Object)constant8628);
// new
send44500 = (Object)new_AST_Send((Object)classreference1176, (Object)symbol7640, 0);
// escape:
send44501 = (Object)new_AST_Send((Object)variable320, (Object)SMB_escape_, 1, (Object)send44500);
block2846 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44501);
// ifTrue:
send44502 = (Object)new_AST_Send((Object)send44499, (Object)SMB_ifTrue_, 1, (Object)block2846);
// new
send44503 = (Object)new_AST_Send((Object)classreference1180, (Object)symbol7640, 0);
// name:
send44504 = (Object)new_AST_Send((Object)send44503, (Object)symbol7723, 1, (Object)localvariable6174);
block2847 = (Object)new_AST_Block_with((Type_Array)array4910, (Type_Array)empty_Type_Array, 1, 3, send44498, send44502, send44504);
// on:
send44505 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2847);
method6058 = (Object)new_AST_Method_with((Type_Array)array4909, (Type_Array)empty_Type_Array, 1, send44505);
methodclosure6058 = (Object)new_Runtime_MethodClosure(method6058);
store_method((Type_Class)class1018, (Type_Symbol)symbol7770, (Runtime_MethodClosure)methodclosure6058);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable6175 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable6176 = (Object)new_AST_Variable_named(L"first");
array4911 = (Object)new_Type_Array_with(2, (Object)localvariable6175, (Object)localvariable6176);
string5144 = (Object)new_Type_String(L"\'");
constant8629 = (Object)new_AST_Constant((Object)string5144);
// asPEG
send44506 = (Object)new_AST_Send((Object)constant8629, (Object)symbol7844, 0);
// omit:
send44507 = (Object)new_AST_Send((Object)send44506, (Object)symbol7848, 1, (Object)True_Const);
assign5394 = (Object)new_AST_Assign((Object)localvariable6175, (Object)send44507);
string5145 = (Object)new_Type_String(L"STRING");
constant8630 = (Object)new_AST_Constant((Object)string5145);
// not
send44508 = (Object)new_AST_Send((Object)localvariable6175, (Object)SMB_not, 0);
// strongTimes
send44509 = (Object)new_AST_Send((Object)send44508, (Object)symbol7841, 0);
// &&
send44510 = (Object)new_AST_Send((Object)localvariable6175, (Object)symbol7840, 1, (Object)send44509);
// <&
send44511 = (Object)new_AST_Send((Object)send44510, (Object)symbol7880, 1, (Object)localvariable6175);
// strongPlus
send44512 = (Object)new_AST_Send((Object)send44511, (Object)symbol7847, 0);
localvariable6177 = (Object)new_AST_Variable_named(L"result");
array4912 = (Object)new_Type_Array_with(1, (Object)localvariable6177);
symbol7969 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send44513 = (Object)new_AST_Send((Object)localvariable6177, (Object)symbol7969, 0);
assign5395 = (Object)new_AST_Assign((Object)localvariable6176, (Object)send44513);
string5146 = (Object)new_Type_String(L"");
constant8631 = (Object)new_AST_Constant((Object)string5146);
localvariable6178 = (Object)new_AST_Variable_named(L"c");
localvariable6179 = (Object)new_AST_Variable_named(L"e");
array4913 = (Object)new_Type_Array_with(2, (Object)localvariable6178, (Object)localvariable6179);
// ,
send44514 = (Object)new_AST_Send((Object)localvariable6178, (Object)SMB__concat, 1, (Object)localvariable6179);
block2848 = (Object)new_AST_Block_with((Type_Array)array4913, (Type_Array)empty_Type_Array, 2, 1, send44514);
// inject:into:
send44515 = (Object)new_AST_Send((Object)localvariable6176, (Object)symbol7707, 2, (Object)constant8631, (Object)block2848);
assign5396 = (Object)new_AST_Assign((Object)localvariable6176, (Object)send44515);
localvariable6180 = (Object)new_AST_Variable_named(L"c");
localvariable6181 = (Object)new_AST_Variable_named(L"e");
array4914 = (Object)new_Type_Array_with(2, (Object)localvariable6180, (Object)localvariable6181);
string5147 = (Object)new_Type_String(L"\'");
constant8632 = (Object)new_AST_Constant((Object)string5147);
// ,
send44516 = (Object)new_AST_Send((Object)localvariable6180, (Object)SMB__concat, 1, (Object)constant8632);
string5148 = (Object)new_Type_String(L"");
constant8633 = (Object)new_AST_Constant((Object)string5148);
localvariable6182 = (Object)new_AST_Variable_named(L"ic");
localvariable6183 = (Object)new_AST_Variable_named(L"ie");
array4915 = (Object)new_Type_Array_with(2, (Object)localvariable6182, (Object)localvariable6183);
// ,
send44517 = (Object)new_AST_Send((Object)localvariable6182, (Object)SMB__concat, 1, (Object)localvariable6183);
block2849 = (Object)new_AST_Block_with((Type_Array)array4915, (Type_Array)empty_Type_Array, 3, 1, send44517);
// inject:into:
send44518 = (Object)new_AST_Send((Object)localvariable6181, (Object)symbol7707, 2, (Object)constant8633, (Object)block2849);
// ,
send44519 = (Object)new_AST_Send((Object)send44516, (Object)SMB__concat, 1, (Object)send44518);
block2850 = (Object)new_AST_Block_with((Type_Array)array4914, (Type_Array)empty_Type_Array, 2, 1, send44519);
// inject:into:
send44520 = (Object)new_AST_Send((Object)localvariable6177, (Object)symbol7707, 2, (Object)localvariable6176, (Object)block2850);
block2851 = (Object)new_AST_Block_with((Type_Array)array4912, (Type_Array)empty_Type_Array, 1, 3, assign5395, assign5396, send44520);
// named:parsing:semantics:
send44521 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8630, (Object)send44512, (Object)block2851);
method6059 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4911, 2, assign5394, send44521);
symbol7815 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure6059 = (Object)new_Runtime_MethodClosure(method6059);
store_method((Type_Class)class1018, (Type_Symbol)symbol7815, (Runtime_MethodClosure)methodclosure6059);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string5149 = (Object)new_Type_String(L"VARIABLE-NAME");
constant8634 = (Object)new_AST_Constant((Object)string5149);
// identifier
send44522 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
localvariable6184 = (Object)new_AST_Variable_named(L"result");
array4916 = (Object)new_Type_Array_with(1, (Object)localvariable6184);
// createVariable:
send44523 = (Object)new_AST_Send((Object)Self, (Object)symbol7770, 1, (Object)localvariable6184);
block2852 = (Object)new_AST_Block_with((Type_Array)array4916, (Type_Array)empty_Type_Array, 1, 1, send44523);
// named:parsing:semantics:
send44524 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8634, (Object)send44522, (Object)block2852);
method6060 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44524);
symbol7827 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure6060 = (Object)new_Runtime_MethodClosure(method6060);
store_method((Type_Class)class1018, (Type_Symbol)symbol7827, (Runtime_MethodClosure)methodclosure6060);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
// identifier
send44525 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
method6061 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44525);
symbol7787 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure6061 = (Object)new_Runtime_MethodClosure(method6061);
store_method((Type_Class)class1018, (Type_Symbol)symbol7787, (Runtime_MethodClosure)methodclosure6061);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send44526 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
string5150 = (Object)new_Type_String(L".");
constant8635 = (Object)new_AST_Constant((Object)string5150);
// asPEG
send44527 = (Object)new_AST_Send((Object)constant8635, (Object)symbol7844, 0);
// optional
send44528 = (Object)new_AST_Send((Object)send44527, (Object)symbol7843, 0);
// omit:
send44529 = (Object)new_AST_Send((Object)send44528, (Object)symbol7848, 1, (Object)True_Const);
// &
send44530 = (Object)new_AST_Send((Object)send44526, (Object)SMB__and, 1, (Object)send44529);
method6062 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44530);
symbol7799 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure6062 = (Object)new_Runtime_MethodClosure(method6062);
store_method((Type_Class)class1018, (Type_Symbol)symbol7799, (Runtime_MethodClosure)methodclosure6062);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable6185 = (Object)new_AST_Variable_named(L"commentBorder");
array4917 = (Object)new_Type_Array_with(1, (Object)localvariable6185);
string5151 = (Object)new_Type_String(L"\"");
constant8636 = (Object)new_AST_Constant((Object)string5151);
// asPEG
send44531 = (Object)new_AST_Send((Object)constant8636, (Object)symbol7844, 0);
assign5397 = (Object)new_AST_Assign((Object)localvariable6185, (Object)send44531);
// not
send44532 = (Object)new_AST_Send((Object)localvariable6185, (Object)SMB_not, 0);
// strongTimes
send44533 = (Object)new_AST_Send((Object)send44532, (Object)symbol7841, 0);
// &&
send44534 = (Object)new_AST_Send((Object)localvariable6185, (Object)symbol7840, 1, (Object)send44533);
// <&
send44535 = (Object)new_AST_Send((Object)send44534, (Object)symbol7880, 1, (Object)localvariable6185);
method6063 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4917, 2, assign5397, send44535);
symbol7820 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure6063 = (Object)new_Runtime_MethodClosure(method6063);
store_method((Type_Class)class1018, (Type_Symbol)symbol7820, (Runtime_MethodClosure)methodclosure6063);


// SCParser>>symbols
//symbols
// 	^ symbols
method6064 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1481);
symbol7780 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure6064 = (Object)new_Runtime_MethodClosure(method6064);
store_method((Type_Class)class1018, (Type_Symbol)symbol7780, (Runtime_MethodClosure)methodclosure6064);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant8637 = (Object)new_AST_Constant((Object)symbol7930);
string5152 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant8638 = (Object)new_AST_Constant((Object)string5152);
// named:
send44536 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7864, 1, (Object)constant8638);
block2853 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send44536);
// at:ifAbsentPut:
send44537 = (Object)new_AST_Send((Object)instancevariable1479, (Object)symbol7872, 2, (Object)constant8637, (Object)block2853);
method6065 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44537);
methodclosure6065 = (Object)new_Runtime_MethodClosure(method6065);
store_method((Type_Class)class1018, (Type_Symbol)symbol7764, (Runtime_MethodClosure)methodclosure6065);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string5153 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant8639 = (Object)new_AST_Constant((Object)string5153);
// binarySelector
send44538 = (Object)new_AST_Send((Object)Self, (Object)symbol7929, 0);
symbol7970 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send44539 = (Object)new_AST_Send((Object)Self, (Object)symbol7970, 0);
// &
send44540 = (Object)new_AST_Send((Object)send44538, (Object)SMB__and, 1, (Object)send44539);
localvariable6186 = (Object)new_AST_Variable_named(L"result");
array4918 = (Object)new_Type_Array_with(1, (Object)localvariable6186);
localvariable6187 = (Object)new_AST_Variable_named(L"receiver");
array4919 = (Object)new_Type_Array_with(1, (Object)localvariable6187);
// first
send44541 = (Object)new_AST_Send((Object)localvariable6186, (Object)symbol7702, 0);
// createSymbol:
send44542 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)send44541);
// selector:
send44543 = (Object)new_AST_Send((Object)localvariable6187, (Object)symbol7734, 1, (Object)send44542);
smallint3015 = (Object)new_Type_SmallInt(2);
constant8640 = (Object)new_AST_Constant((Object)smallint3015);
// at:
send44544 = (Object)new_AST_Send((Object)localvariable6186, (Object)SMB_at_, 1, (Object)constant8640);
// createVariable:
send44545 = (Object)new_AST_Send((Object)Self, (Object)symbol7770, 1, (Object)send44544);
// parameter:
send44546 = (Object)new_AST_Send((Object)localvariable6187, (Object)symbol7752, 1, (Object)send44545);
block2854 = (Object)new_AST_Block_with((Type_Array)array4919, (Type_Array)empty_Type_Array, 2, 2, send44543, send44546);
// new
send44547 = (Object)new_AST_Send((Object)classreference1189, (Object)symbol7640, 0);
// value:
send44548 = (Object)new_AST_Send((Object)block2854, (Object)SMB_value_, 1, (Object)send44547);
block2855 = (Object)new_AST_Block_with((Type_Array)array4918, (Type_Array)empty_Type_Array, 1, 1, send44548);
// named:parsing:semantics:
send44549 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8639, (Object)send44540, (Object)block2855);
method6066 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44549);
symbol7792 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure6066 = (Object)new_Runtime_MethodClosure(method6066);
store_method((Type_Class)class1018, (Type_Symbol)symbol7792, (Runtime_MethodClosure)methodclosure6066);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string5154 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant8641 = (Object)new_AST_Constant((Object)string5154);
// keyword
send44550 = (Object)new_AST_Send((Object)Self, (Object)symbol7957, 0);
// binaryObjectDescription
send44551 = (Object)new_AST_Send((Object)Self, (Object)symbol7930, 0);
// &
send44552 = (Object)new_AST_Send((Object)send44550, (Object)SMB__and, 1, (Object)send44551);
// plus
send44553 = (Object)new_AST_Send((Object)send44552, (Object)symbol7851, 0);
localvariable6188 = (Object)new_AST_Variable_named(L"parts");
array4920 = (Object)new_Type_Array_with(1, (Object)localvariable6188);
localvariable6189 = (Object)new_AST_Variable_named(L"receiver");
array4921 = (Object)new_Type_Array_with(1, (Object)localvariable6189);
constant8642 = (Object)new_AST_Constant((Object)symbol7702);
// collect:
send44554 = (Object)new_AST_Send((Object)localvariable6188, (Object)symbol7962, 1, (Object)constant8642);
// keywords:
send44555 = (Object)new_AST_Send((Object)localvariable6189, (Object)symbol7739, 1, (Object)send44554);
localvariable6190 = (Object)new_AST_Variable_named(L"receiver");
array4922 = (Object)new_Type_Array_with(1, (Object)localvariable6190);
constant8643 = (Object)new_AST_Constant((Object)symbol7702);
// collect:
send44556 = (Object)new_AST_Send((Object)localvariable6188, (Object)symbol7962, 1, (Object)constant8643);
// keywords:
send44557 = (Object)new_AST_Send((Object)localvariable6190, (Object)symbol7739, 1, (Object)send44556);
constant8644 = (Object)new_AST_Constant((Object)symbol7702);
// collect:
send44558 = (Object)new_AST_Send((Object)localvariable6188, (Object)symbol7962, 1, (Object)constant8644);
string5155 = (Object)new_Type_String(L":");
constant8645 = (Object)new_AST_Constant((Object)string5155);
// joinUsing:
send44559 = (Object)new_AST_Send((Object)send44558, (Object)symbol7916, 1, (Object)constant8645);
string5156 = (Object)new_Type_String(L":");
constant8646 = (Object)new_AST_Constant((Object)string5156);
// ,
send44560 = (Object)new_AST_Send((Object)send44559, (Object)SMB__concat, 1, (Object)constant8646);
// createSymbol:
send44561 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)send44560);
// selector:
send44562 = (Object)new_AST_Send((Object)localvariable6190, (Object)symbol7734, 1, (Object)send44561);
block2856 = (Object)new_AST_Block_with((Type_Array)array4922, (Type_Array)empty_Type_Array, 3, 2, send44557, send44562);
// new
send44563 = (Object)new_AST_Send((Object)classreference1169, (Object)symbol7640, 0);
// value:
send44564 = (Object)new_AST_Send((Object)block2856, (Object)SMB_value_, 1, (Object)send44563);
// selector:
send44565 = (Object)new_AST_Send((Object)localvariable6189, (Object)symbol7734, 1, (Object)send44564);
constant8647 = (Object)new_AST_Constant((Object)symbol7967);
// collect:
send44566 = (Object)new_AST_Send((Object)localvariable6188, (Object)symbol7962, 1, (Object)constant8647);
// arguments:
send44567 = (Object)new_AST_Send((Object)localvariable6189, (Object)symbol7741, 1, (Object)send44566);
block2857 = (Object)new_AST_Block_with((Type_Array)array4921, (Type_Array)empty_Type_Array, 2, 3, send44555, send44565, send44567);
// new
send44568 = (Object)new_AST_Send((Object)classreference1195, (Object)symbol7640, 0);
// value:
send44569 = (Object)new_AST_Send((Object)block2857, (Object)SMB_value_, 1, (Object)send44568);
block2858 = (Object)new_AST_Block_with((Type_Array)array4920, (Type_Array)empty_Type_Array, 1, 1, send44569);
// named:parsing:semantics:
send44570 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8641, (Object)send44553, (Object)block2858);
method6067 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44570);
symbol7809 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure6067 = (Object)new_Runtime_MethodClosure(method6067);
store_method((Type_Class)class1018, (Type_Symbol)symbol7809, (Runtime_MethodClosure)methodclosure6067);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send44571 = (Object)new_AST_Send((Object)Self, (Object)symbol7943, 0);
symbol7971 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send44572 = (Object)new_AST_Send((Object)Self, (Object)symbol7971, 0);
// binaryExpression
send44573 = (Object)new_AST_Send((Object)Self, (Object)symbol7927, 0);
// |
send44574 = (Object)new_AST_Send((Object)send44572, (Object)SMB__or, 1, (Object)send44573);
// <=
send44575 = (Object)new_AST_Send((Object)send44571, (Object)symbol7667, 1, (Object)send44574);
symbol7972 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send44576 = (Object)new_AST_Send((Object)Self, (Object)symbol7972, 0);
// <=
send44577 = (Object)new_AST_Send((Object)send44575, (Object)symbol7667, 1, (Object)send44576);
method6068 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44577);
symbol7802 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
methodclosure6068 = (Object)new_Runtime_MethodClosure(method6068);
store_method((Type_Class)class1018, (Type_Symbol)symbol7802, (Runtime_MethodClosure)methodclosure6068);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string5157 = (Object)new_Type_String(L"IDENTIFIER");
constant8648 = (Object)new_AST_Constant((Object)string5157);
// letter
send44578 = (Object)new_AST_Send((Object)Self, (Object)symbol7965, 0);
// letter
send44579 = (Object)new_AST_Send((Object)Self, (Object)symbol7965, 0);
// decimalDigit
send44580 = (Object)new_AST_Send((Object)Self, (Object)symbol7966, 0);
// |
send44581 = (Object)new_AST_Send((Object)send44579, (Object)SMB__or, 1, (Object)send44580);
// strongTimes
send44582 = (Object)new_AST_Send((Object)send44581, (Object)symbol7841, 0);
// &&
send44583 = (Object)new_AST_Send((Object)send44578, (Object)symbol7840, 1, (Object)send44582);
localvariable6191 = (Object)new_AST_Variable_named(L"result");
array4923 = (Object)new_Type_Array_with(1, (Object)localvariable6191);
// second
send44584 = (Object)new_AST_Send((Object)localvariable6191, (Object)symbol7967, 0);
// first
send44585 = (Object)new_AST_Send((Object)localvariable6191, (Object)symbol7702, 0);
localvariable6192 = (Object)new_AST_Variable_named(L"c");
localvariable6193 = (Object)new_AST_Variable_named(L"e");
array4924 = (Object)new_Type_Array_with(2, (Object)localvariable6192, (Object)localvariable6193);
// ,
send44586 = (Object)new_AST_Send((Object)localvariable6192, (Object)SMB__concat, 1, (Object)localvariable6193);
block2859 = (Object)new_AST_Block_with((Type_Array)array4924, (Type_Array)empty_Type_Array, 2, 1, send44586);
// inject:into:
send44587 = (Object)new_AST_Send((Object)send44584, (Object)symbol7707, 2, (Object)send44585, (Object)block2859);
block2860 = (Object)new_AST_Block_with((Type_Array)array4923, (Type_Array)empty_Type_Array, 1, 1, send44587);
// named:parsing:semantics:
send44588 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8648, (Object)send44583, (Object)block2860);
method6069 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44588);
symbol7830 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure6069 = (Object)new_Runtime_MethodClosure(method6069);
store_method((Type_Class)class1018, (Type_Symbol)symbol7830, (Runtime_MethodClosure)methodclosure6069);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string5158 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant8649 = (Object)new_AST_Constant((Object)string5158);
// unarySelector
send44589 = (Object)new_AST_Send((Object)Self, (Object)symbol7956, 0);
localvariable6194 = (Object)new_AST_Variable_named(L"selector");
array4925 = (Object)new_Type_Array_with(1, (Object)localvariable6194);
// new
send44590 = (Object)new_AST_Send((Object)classreference1184, (Object)symbol7640, 0);
// selector:
send44591 = (Object)new_AST_Send((Object)send44590, (Object)symbol7734, 1, (Object)localvariable6194);
block2861 = (Object)new_AST_Block_with((Type_Array)array4925, (Type_Array)empty_Type_Array, 1, 1, send44591);
// named:parsing:semantics:
send44592 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8649, (Object)send44589, (Object)block2861);
method6070 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44592);
symbol7774 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure6070 = (Object)new_Runtime_MethodClosure(method6070);
store_method((Type_Class)class1018, (Type_Symbol)symbol7774, (Runtime_MethodClosure)methodclosure6070);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string5159 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant8650 = (Object)new_AST_Constant((Object)string5159);
// binaryObjectDescription
send44593 = (Object)new_AST_Send((Object)Self, (Object)symbol7930, 0);
// keywordMessageExpression
send44594 = (Object)new_AST_Send((Object)Self, (Object)symbol7938, 0);
// &
send44595 = (Object)new_AST_Send((Object)send44593, (Object)SMB__and, 1, (Object)send44594);
localvariable6195 = (Object)new_AST_Variable_named(L"parts");
array4926 = (Object)new_Type_Array_with(1, (Object)localvariable6195);
smallint3016 = (Object)new_Type_SmallInt(2);
constant8651 = (Object)new_AST_Constant((Object)smallint3016);
// at:
send44596 = (Object)new_AST_Send((Object)localvariable6195, (Object)SMB_at_, 1, (Object)constant8651);
// first
send44597 = (Object)new_AST_Send((Object)localvariable6195, (Object)symbol7702, 0);
// receiver:
send44598 = (Object)new_AST_Send((Object)send44596, (Object)symbol7728, 1, (Object)send44597);
block2862 = (Object)new_AST_Block_with((Type_Array)array4926, (Type_Array)empty_Type_Array, 1, 1, send44598);
// named:parsing:semantics:
send44599 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8650, (Object)send44595, (Object)block2862);
method6071 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44599);
symbol7819 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure6071 = (Object)new_Runtime_MethodClosure(method6071);
store_method((Type_Class)class1018, (Type_Symbol)symbol7819, (Runtime_MethodClosure)methodclosure6071);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string5160 = (Object)new_Type_String(L"0-9");
constant8652 = (Object)new_AST_Constant((Object)string5160);
// asPEGRange
send44600 = (Object)new_AST_Send((Object)constant8652, (Object)symbol7931, 0);
method6072 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44600);
symbol7812 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure6072 = (Object)new_Runtime_MethodClosure(method6072);
store_method((Type_Class)class1018, (Type_Symbol)symbol7812, (Runtime_MethodClosure)methodclosure6072);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
// unaryExpression
send44601 = (Object)new_AST_Send((Object)Self, (Object)symbol7972, 0);
// primary
send44602 = (Object)new_AST_Send((Object)Self, (Object)symbol7944, 0);
// |
send44603 = (Object)new_AST_Send((Object)send44601, (Object)SMB__or, 1, (Object)send44602);
method6073 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44603);
symbol7824 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure6073 = (Object)new_Runtime_MethodClosure(method6073);
store_method((Type_Class)class1018, (Type_Symbol)symbol7824, (Runtime_MethodClosure)methodclosure6073);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string5161 = (Object)new_Type_String(L"(");
constant8653 = (Object)new_AST_Constant((Object)string5161);
// asPEG
send44604 = (Object)new_AST_Send((Object)constant8653, (Object)symbol7844, 0);
// omit:
send44605 = (Object)new_AST_Send((Object)send44604, (Object)symbol7848, 1, (Object)True_Const);
// expression
send44606 = (Object)new_AST_Send((Object)Self, (Object)symbol7757, 0);
// &
send44607 = (Object)new_AST_Send((Object)send44605, (Object)SMB__and, 1, (Object)send44606);
string5162 = (Object)new_Type_String(L")");
constant8654 = (Object)new_AST_Constant((Object)string5162);
// asPEG
send44608 = (Object)new_AST_Send((Object)constant8654, (Object)symbol7844, 0);
// omit:
send44609 = (Object)new_AST_Send((Object)send44608, (Object)symbol7848, 1, (Object)True_Const);
// <&
send44610 = (Object)new_AST_Send((Object)send44607, (Object)symbol7880, 1, (Object)send44609);
method6074 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44610);
symbol7784 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure6074 = (Object)new_Runtime_MethodClosure(method6074);
store_method((Type_Class)class1018, (Type_Symbol)symbol7784, (Runtime_MethodClosure)methodclosure6074);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
symbol7973 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send44611 = (Object)new_AST_Send((Object)Self, (Object)symbol7973, 0);
symbol7974 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send44612 = (Object)new_AST_Send((Object)Self, (Object)symbol7974, 0);
symbol7975 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send44613 = (Object)new_AST_Send((Object)Self, (Object)symbol7975, 0);
symbol7976 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send44614 = (Object)new_AST_Send((Object)Self, (Object)symbol7976, 0);
// <=
send44615 = (Object)new_AST_Send((Object)send44613, (Object)symbol7667, 1, (Object)send44614);
// <=
send44616 = (Object)new_AST_Send((Object)send44612, (Object)symbol7667, 1, (Object)send44615);
// |
send44617 = (Object)new_AST_Send((Object)send44611, (Object)SMB__or, 1, (Object)send44616);
symbol7977 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send44618 = (Object)new_AST_Send((Object)Self, (Object)symbol7977, 0);
// <=
send44619 = (Object)new_AST_Send((Object)send44617, (Object)symbol7667, 1, (Object)send44618);
method6075 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44619);
symbol7768 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure6075 = (Object)new_Runtime_MethodClosure(method6075);
store_method((Type_Class)class1018, (Type_Symbol)symbol7768, (Runtime_MethodClosure)methodclosure6075);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable6196 = (Object)new_AST_Variable_named(L"result");
array4927 = (Object)new_Type_Array_with(1, (Object)localvariable6196);
string5163 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant8655 = (Object)new_AST_Constant((Object)string5163);
// primary
send44620 = (Object)new_AST_Send((Object)Self, (Object)symbol7944, 0);
// unarySelector
send44621 = (Object)new_AST_Send((Object)Self, (Object)symbol7956, 0);
// plus
send44622 = (Object)new_AST_Send((Object)send44621, (Object)symbol7851, 0);
// &
send44623 = (Object)new_AST_Send((Object)send44620, (Object)SMB__and, 1, (Object)send44622);
localvariable6197 = (Object)new_AST_Variable_named(L"parts");
array4928 = (Object)new_Type_Array_with(1, (Object)localvariable6197);
// first
send44624 = (Object)new_AST_Send((Object)localvariable6197, (Object)symbol7702, 0);
assign5398 = (Object)new_AST_Assign((Object)localvariable6196, (Object)send44624);
smallint3017 = (Object)new_Type_SmallInt(2);
constant8656 = (Object)new_AST_Constant((Object)smallint3017);
// at:
send44625 = (Object)new_AST_Send((Object)localvariable6197, (Object)SMB_at_, 1, (Object)constant8656);
localvariable6198 = (Object)new_AST_Variable_named(L"selector");
array4929 = (Object)new_Type_Array_with(1, (Object)localvariable6198);
localvariable6199 = (Object)new_AST_Variable_named(L"receiver");
array4930 = (Object)new_Type_Array_with(1, (Object)localvariable6199);
// receiver:
send44626 = (Object)new_AST_Send((Object)localvariable6199, (Object)symbol7728, 1, (Object)localvariable6196);
// selector:
send44627 = (Object)new_AST_Send((Object)localvariable6199, (Object)symbol7734, 1, (Object)localvariable6198);
block2863 = (Object)new_AST_Block_with((Type_Array)array4930, (Type_Array)empty_Type_Array, 3, 2, send44626, send44627);
// new
send44628 = (Object)new_AST_Send((Object)classreference1198, (Object)symbol7640, 0);
// value:
send44629 = (Object)new_AST_Send((Object)block2863, (Object)SMB_value_, 1, (Object)send44628);
assign5399 = (Object)new_AST_Assign((Object)localvariable6196, (Object)send44629);
block2864 = (Object)new_AST_Block_with((Type_Array)array4929, (Type_Array)empty_Type_Array, 2, 1, assign5399);
// do:
send44630 = (Object)new_AST_Send((Object)send44625, (Object)symbol7705, 1, (Object)block2864);
block2865 = (Object)new_AST_Block_with((Type_Array)array4928, (Type_Array)empty_Type_Array, 1, 3, assign5398, send44630, localvariable6196);
// named:parsing:semantics:
send44631 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8655, (Object)send44623, (Object)block2865);
method6076 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4927, 1, send44631);
symbol7796 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure6076 = (Object)new_Runtime_MethodClosure(method6076);
store_method((Type_Class)class1018, (Type_Symbol)symbol7796, (Runtime_MethodClosure)methodclosure6076);


// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string5164 = (Object)new_Type_String(L":=");
constant8657 = (Object)new_AST_Constant((Object)string5164);
// asPEG
send44632 = (Object)new_AST_Send((Object)constant8657, (Object)symbol7844, 0);
string5165 = (Object)new_Type_String(L"_");
constant8658 = (Object)new_AST_Constant((Object)string5165);
// |
send44633 = (Object)new_AST_Send((Object)send44632, (Object)SMB__or, 1, (Object)constant8658);
// omit:
send44634 = (Object)new_AST_Send((Object)send44633, (Object)symbol7848, 1, (Object)True_Const);
method6077 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44634);
methodclosure6077 = (Object)new_Runtime_MethodClosure(method6077);
store_method((Type_Class)class1018, (Type_Symbol)symbol7761, (Runtime_MethodClosure)methodclosure6077);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant8659 = (Object)new_AST_Constant((Object)symbol7944);
string5166 = (Object)new_Type_String(L"PRIMARY");
constant8660 = (Object)new_AST_Constant((Object)string5166);
// named:
send44635 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7864, 1, (Object)constant8660);
block2866 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send44635);
// at:ifAbsentPut:
send44636 = (Object)new_AST_Send((Object)instancevariable1479, (Object)symbol7872, 2, (Object)constant8659, (Object)block2866);
method6078 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44636);
symbol7806 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
methodclosure6078 = (Object)new_Runtime_MethodClosure(method6078);
store_method((Type_Class)class1018, (Type_Symbol)symbol7806, (Runtime_MethodClosure)methodclosure6078);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string5167 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant8661 = (Object)new_AST_Constant((Object)string5167);
symbol7978 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send44637 = (Object)new_AST_Send((Object)Self, (Object)symbol7978, 0);
string5168 = (Object)new_Type_String(L"-");
constant8662 = (Object)new_AST_Constant((Object)string5168);
// |
send44638 = (Object)new_AST_Send((Object)send44637, (Object)SMB__or, 1, (Object)constant8662);
// specialCharacter
send44639 = (Object)new_AST_Send((Object)Self, (Object)symbol7978, 0);
// strongTimes
send44640 = (Object)new_AST_Send((Object)send44639, (Object)symbol7841, 0);
// &&
send44641 = (Object)new_AST_Send((Object)send44638, (Object)symbol7840, 1, (Object)send44640);
string5169 = (Object)new_Type_String(L"|");
constant8663 = (Object)new_AST_Constant((Object)string5169);
// |
send44642 = (Object)new_AST_Send((Object)send44641, (Object)SMB__or, 1, (Object)constant8663);
localvariable6200 = (Object)new_AST_Variable_named(L"result");
array4931 = (Object)new_Type_Array_with(1, (Object)localvariable6200);
symbol7979 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send44643 = (Object)new_AST_Send((Object)localvariable6200, (Object)symbol7979, 0);
// createSymbol:
send44644 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)localvariable6200);
block2867 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44644);
// second
send44645 = (Object)new_AST_Send((Object)localvariable6200, (Object)symbol7967, 0);
// first
send44646 = (Object)new_AST_Send((Object)localvariable6200, (Object)symbol7702, 0);
localvariable6201 = (Object)new_AST_Variable_named(L"c");
localvariable6202 = (Object)new_AST_Variable_named(L"e");
array4932 = (Object)new_Type_Array_with(2, (Object)localvariable6201, (Object)localvariable6202);
// ,
send44647 = (Object)new_AST_Send((Object)localvariable6201, (Object)SMB__concat, 1, (Object)localvariable6202);
block2868 = (Object)new_AST_Block_with((Type_Array)array4932, (Type_Array)empty_Type_Array, 3, 1, send44647);
// inject:into:
send44648 = (Object)new_AST_Send((Object)send44645, (Object)symbol7707, 2, (Object)send44646, (Object)block2868);
// createSymbol:
send44649 = (Object)new_AST_Send((Object)Self, (Object)symbol7765, 1, (Object)send44648);
block2869 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44649);
// ifTrue:ifFalse:
send44650 = (Object)new_AST_Send((Object)send44643, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block2867, (Object)block2869);
block2870 = (Object)new_AST_Block_with((Type_Array)array4931, (Type_Array)empty_Type_Array, 1, 1, send44650);
// named:parsing:semantics:
send44651 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8661, (Object)send44642, (Object)block2870);
method6079 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44651);
symbol7778 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure6079 = (Object)new_Runtime_MethodClosure(method6079);
store_method((Type_Class)class1018, (Type_Symbol)symbol7778, (Runtime_MethodClosure)methodclosure6079);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol7980 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send44652 = (Object)new_AST_Send((Object)Self, (Object)symbol7980, 0);
// uppercase
send44653 = (Object)new_AST_Send((Object)Self, (Object)symbol7964, 0);
// |
send44654 = (Object)new_AST_Send((Object)send44652, (Object)SMB__or, 1, (Object)send44653);
method6080 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44654);
symbol7816 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure6080 = (Object)new_Runtime_MethodClosure(method6080);
store_method((Type_Class)class1018, (Type_Symbol)symbol7816, (Runtime_MethodClosure)methodclosure6080);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
string5170 = (Object)new_Type_String(L"COMMENT");
constant8664 = (Object)new_AST_Constant((Object)string5170);
symbol7981 = (Object)new_Type_Symbol_cached(L"separators");
// separators
send44655 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7981, 0);
symbol7982 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send44656 = (Object)new_AST_Send((Object)Self, (Object)symbol7982, 0);
// |
send44657 = (Object)new_AST_Send((Object)send44655, (Object)SMB__or, 1, (Object)send44656);
// strongTimes
send44658 = (Object)new_AST_Send((Object)send44657, (Object)symbol7841, 0);
// omit:
send44659 = (Object)new_AST_Send((Object)send44658, (Object)symbol7848, 1, (Object)True_Const);
// named:parsing:
send44660 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7932, 2, (Object)constant8664, (Object)send44659);
method6081 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44660);
symbol7828 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure6081 = (Object)new_Runtime_MethodClosure(method6081);
store_method((Type_Class)class1018, (Type_Symbol)symbol7828, (Runtime_MethodClosure)methodclosure6081);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable6203 = (Object)new_AST_Variable_named(L"result");
array4933 = (Object)new_Type_Array_with(1, (Object)localvariable6203);
string5171 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant8665 = (Object)new_AST_Constant((Object)string5171);
// keyword
send44661 = (Object)new_AST_Send((Object)Self, (Object)symbol7957, 0);
// parameterName
send44662 = (Object)new_AST_Send((Object)Self, (Object)symbol7970, 0);
// &
send44663 = (Object)new_AST_Send((Object)send44661, (Object)SMB__and, 1, (Object)send44662);
// plus
send44664 = (Object)new_AST_Send((Object)send44663, (Object)symbol7851, 0);
localvariable6204 = (Object)new_AST_Variable_named(L"pairs");
array4934 = (Object)new_Type_Array_with(1, (Object)localvariable6204);
// new
send44665 = (Object)new_AST_Send((Object)classreference1173, (Object)symbol7640, 0);
assign5400 = (Object)new_AST_Assign((Object)localvariable6203, (Object)send44665);
localvariable6205 = (Object)new_AST_Variable_named(L"pair");
array4935 = (Object)new_Type_Array_with(1, (Object)localvariable6205);
// keywords
send44666 = (Object)new_AST_Send((Object)localvariable6203, (Object)symbol7740, 0);
// first
send44667 = (Object)new_AST_Send((Object)localvariable6205, (Object)symbol7702, 0);
// add:
send44668 = (Object)new_AST_Send((Object)send44666, (Object)symbol7706, 1, (Object)send44667);
// parameters
send44669 = (Object)new_AST_Send((Object)localvariable6203, (Object)symbol7735, 0);
smallint3018 = (Object)new_Type_SmallInt(2);
constant8666 = (Object)new_AST_Constant((Object)smallint3018);
// at:
send44670 = (Object)new_AST_Send((Object)localvariable6205, (Object)SMB_at_, 1, (Object)constant8666);
// createVariable:
send44671 = (Object)new_AST_Send((Object)Self, (Object)symbol7770, 1, (Object)send44670);
// add:
send44672 = (Object)new_AST_Send((Object)send44669, (Object)symbol7706, 1, (Object)send44671);
block2871 = (Object)new_AST_Block_with((Type_Array)array4935, (Type_Array)empty_Type_Array, 2, 2, send44668, send44672);
// do:
send44673 = (Object)new_AST_Send((Object)localvariable6204, (Object)symbol7705, 1, (Object)block2871);
// selectorName
send44674 = (Object)new_AST_Send((Object)localvariable6203, (Object)symbol7733, 0);
// named:
send44675 = (Object)new_AST_Send((Object)classreference1172, (Object)symbol7864, 1, (Object)send44674);
// selector:
send44676 = (Object)new_AST_Send((Object)localvariable6203, (Object)symbol7734, 1, (Object)send44675);
block2872 = (Object)new_AST_Block_with((Type_Array)array4934, (Type_Array)empty_Type_Array, 1, 4, assign5400, send44673, send44676, localvariable6203);
// named:parsing:semantics:
send44677 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8665, (Object)send44664, (Object)block2872);
method6082 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4933, 1, send44677);
symbol7788 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure6082 = (Object)new_Runtime_MethodClosure(method6082);
store_method((Type_Class)class1018, (Type_Symbol)symbol7788, (Runtime_MethodClosure)methodclosure6082);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send44678 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
string5172 = (Object)new_Type_String(L":");
constant8667 = (Object)new_AST_Constant((Object)string5172);
// asPEG
send44679 = (Object)new_AST_Send((Object)constant8667, (Object)symbol7844, 0);
// omit:
send44680 = (Object)new_AST_Send((Object)send44679, (Object)symbol7848, 1, (Object)True_Const);
// &&
send44681 = (Object)new_AST_Send((Object)send44678, (Object)symbol7840, 1, (Object)send44680);
method6083 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44681);
symbol7821 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure6083 = (Object)new_Runtime_MethodClosure(method6083);
store_method((Type_Class)class1018, (Type_Symbol)symbol7821, (Runtime_MethodClosure)methodclosure6083);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string5173 = (Object)new_Type_String(L"SYMBOL");
constant8668 = (Object)new_AST_Constant((Object)string5173);
symbol7983 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send44682 = (Object)new_AST_Send((Object)Self, (Object)symbol7983, 0);
// identifier
send44683 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
// binarySelector
send44684 = (Object)new_AST_Send((Object)Self, (Object)symbol7929, 0);
// <=
send44685 = (Object)new_AST_Send((Object)send44683, (Object)symbol7667, 1, (Object)send44684);
// |
send44686 = (Object)new_AST_Send((Object)send44682, (Object)SMB__or, 1, (Object)send44685);
// string
send44687 = (Object)new_AST_Send((Object)Self, (Object)symbol7719, 0);
// <=
send44688 = (Object)new_AST_Send((Object)send44686, (Object)symbol7667, 1, (Object)send44687);
// named:parsing:
send44689 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7932, 2, (Object)constant8668, (Object)send44688);
method6084 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44689);
symbol7781 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure6084 = (Object)new_Runtime_MethodClosure(method6084);
store_method((Type_Class)class1018, (Type_Symbol)symbol7781, (Runtime_MethodClosure)methodclosure6084);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable6206 = (Object)new_AST_Variable_named(L"anObject");
array4936 = (Object)new_Type_Array_with(1, (Object)localvariable6206);
variable321 = (Object)new_AST_Variable_named(L"return");
array4937 = (Object)new_Type_Array_with(1, (Object)variable321);
// isString
send44690 = (Object)new_AST_Send((Object)localvariable6206, (Object)symbol7979, 0);
// escape:
send44691 = (Object)new_AST_Send((Object)variable321, (Object)SMB_escape_, 1, (Object)localvariable6206);
block2873 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send44691);
// ifFalse:
send44692 = (Object)new_AST_Send((Object)send44690, (Object)SMB_ifFalse_, 1, (Object)block2873);
// named:
send44693 = (Object)new_AST_Send((Object)classreference1172, (Object)symbol7864, 1, (Object)localvariable6206);
block2874 = (Object)new_AST_Block_with((Type_Array)array4937, (Type_Array)empty_Type_Array, 1, 2, send44692, send44693);
// on:
send44694 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2874);
method6085 = (Object)new_AST_Method_with((Type_Array)array4936, (Type_Array)empty_Type_Array, 1, send44694);
methodclosure6085 = (Object)new_Runtime_MethodClosure(method6085);
store_method((Type_Class)class1018, (Type_Symbol)symbol7765, (Runtime_MethodClosure)methodclosure6085);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable6207 = (Object)new_AST_Variable_named(L"variables");
localvariable6208 = (Object)new_AST_Variable_named(L"expression");
array4938 = (Object)new_Type_Array_with(2, (Object)localvariable6207, (Object)localvariable6208);
// preStorePrimary
send44695 = (Object)new_AST_Send((Object)Self, (Object)symbol7806, 0);
// preStoreMessageExpression
send44696 = (Object)new_AST_Send((Object)Self, (Object)symbol7823, 0);
// preStoreCascadedMessageExpression
send44697 = (Object)new_AST_Send((Object)Self, (Object)symbol7822, 0);
constant8669 = (Object)new_AST_Constant((Object)symbol7757);
string5174 = (Object)new_Type_String(L"EXPRESSION");
constant8670 = (Object)new_AST_Constant((Object)string5174);
symbol7984 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send44698 = (Object)new_AST_Send((Object)Self, (Object)symbol7984, 0);
// cascadedMessageExpression
send44699 = (Object)new_AST_Send((Object)Self, (Object)symbol7942, 0);
// messageExpression
send44700 = (Object)new_AST_Send((Object)Self, (Object)symbol7943, 0);
// |
send44701 = (Object)new_AST_Send((Object)send44699, (Object)SMB__or, 1, (Object)send44700);
// &
send44702 = (Object)new_AST_Send((Object)send44698, (Object)SMB__and, 1, (Object)send44701);
// primary
send44703 = (Object)new_AST_Send((Object)Self, (Object)symbol7944, 0);
// <=
send44704 = (Object)new_AST_Send((Object)send44702, (Object)symbol7667, 1, (Object)send44703);
localvariable6209 = (Object)new_AST_Variable_named(L"result");
array4939 = (Object)new_Type_Array_with(1, (Object)localvariable6209);
// first
send44705 = (Object)new_AST_Send((Object)localvariable6209, (Object)symbol7702, 0);
assign5401 = (Object)new_AST_Assign((Object)localvariable6207, (Object)send44705);
smallint3019 = (Object)new_Type_SmallInt(2);
constant8671 = (Object)new_AST_Constant((Object)smallint3019);
// at:
send44706 = (Object)new_AST_Send((Object)localvariable6209, (Object)SMB_at_, 1, (Object)constant8671);
assign5402 = (Object)new_AST_Assign((Object)localvariable6208, (Object)send44706);
symbol7985 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send44707 = (Object)new_AST_Send((Object)localvariable6207, (Object)symbol7985, 0);
localvariable6210 = (Object)new_AST_Variable_named(L"variable");
array4940 = (Object)new_Type_Array_with(1, (Object)localvariable6210);
localvariable6211 = (Object)new_AST_Variable_named(L"receiver");
array4941 = (Object)new_Type_Array_with(1, (Object)localvariable6211);
// expression:
send44708 = (Object)new_AST_Send((Object)localvariable6211, (Object)symbol7756, 1, (Object)localvariable6208);
// variable:
send44709 = (Object)new_AST_Send((Object)localvariable6211, (Object)symbol7758, 1, (Object)localvariable6210);
block2875 = (Object)new_AST_Block_with((Type_Array)array4941, (Type_Array)empty_Type_Array, 3, 2, send44708, send44709);
// new
send44710 = (Object)new_AST_Send((Object)classreference1186, (Object)symbol7640, 0);
// value:
send44711 = (Object)new_AST_Send((Object)block2875, (Object)SMB_value_, 1, (Object)send44710);
assign5403 = (Object)new_AST_Assign((Object)localvariable6208, (Object)send44711);
block2876 = (Object)new_AST_Block_with((Type_Array)array4940, (Type_Array)empty_Type_Array, 2, 1, assign5403);
// do:
send44712 = (Object)new_AST_Send((Object)send44707, (Object)symbol7705, 1, (Object)block2876);
block2877 = (Object)new_AST_Block_with((Type_Array)array4939, (Type_Array)empty_Type_Array, 1, 4, assign5401, assign5402, send44712, localvariable6208);
// named:parsing:semantics:
send44713 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8670, (Object)send44704, (Object)block2877);
// at:put:
send44714 = (Object)new_AST_Send((Object)instancevariable1479, (Object)SMB_at_put_, 2, (Object)constant8669, (Object)send44713);
// injectPrimary
send44715 = (Object)new_AST_Send((Object)Self, (Object)symbol7782, 0);
// injectMessageExpression
send44716 = (Object)new_AST_Send((Object)Self, (Object)symbol7802, 0);
// injectCascadedMessageExpression
send44717 = (Object)new_AST_Send((Object)Self, (Object)symbol7810, 0);
constant8672 = (Object)new_AST_Constant((Object)symbol7757);
// at:
send44718 = (Object)new_AST_Send((Object)instancevariable1479, (Object)SMB_at_, 1, (Object)constant8672);
method6086 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4938, 8, send44695, send44696, send44697, send44714, send44715, send44716, send44717, send44718);
symbol7793 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure6086 = (Object)new_Runtime_MethodClosure(method6086);
store_method((Type_Class)class1018, (Type_Symbol)symbol7793, (Runtime_MethodClosure)methodclosure6086);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
string5175 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant8673 = (Object)new_AST_Constant((Object)string5175);
// identifier
send44719 = (Object)new_AST_Send((Object)Self, (Object)symbol7951, 0);
localvariable6212 = (Object)new_AST_Variable_named(L"result");
array4942 = (Object)new_Type_Array_with(1, (Object)localvariable6212);
// createVariable:
send44720 = (Object)new_AST_Send((Object)Self, (Object)symbol7770, 1, (Object)localvariable6212);
block2878 = (Object)new_AST_Block_with((Type_Array)array4942, (Type_Array)empty_Type_Array, 1, 1, send44720);
// named:parsing:semantics:
send44721 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8673, (Object)send44719, (Object)block2878);
method6087 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44721);
symbol7803 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure6087 = (Object)new_Runtime_MethodClosure(method6087);
store_method((Type_Class)class1018, (Type_Symbol)symbol7803, (Runtime_MethodClosure)methodclosure6087);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string5176 = (Object)new_Type_String(L"#");
constant8674 = (Object)new_AST_Constant((Object)string5176);
// asPEG
send44722 = (Object)new_AST_Send((Object)constant8674, (Object)symbol7844, 0);
// omit:
send44723 = (Object)new_AST_Send((Object)send44722, (Object)symbol7848, 1, (Object)True_Const);
symbol7986 = (Object)new_Type_Symbol_cached(L"array");
// array
send44724 = (Object)new_AST_Send((Object)Self, (Object)symbol7986, 0);
// &
send44725 = (Object)new_AST_Send((Object)send44723, (Object)SMB__and, 1, (Object)send44724);
method6088 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44725);
symbol7831 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure6088 = (Object)new_Runtime_MethodClosure(method6088);
store_method((Type_Class)class1018, (Type_Symbol)symbol7831, (Runtime_MethodClosure)methodclosure6088);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable6213 = (Object)new_AST_Variable_named(L"array");
array4943 = (Object)new_Type_Array_with(1, (Object)localvariable6213);
string5177 = (Object)new_Type_String(L"ARRAY");
constant8675 = (Object)new_AST_Constant((Object)string5177);
// named:
send44726 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7864, 1, (Object)constant8675);
assign5404 = (Object)new_AST_Assign((Object)localvariable6213, (Object)send44726);
string5178 = (Object)new_Type_String(L"(");
constant8676 = (Object)new_AST_Constant((Object)string5178);
// asPEG
send44727 = (Object)new_AST_Send((Object)constant8676, (Object)symbol7844, 0);
// omit:
send44728 = (Object)new_AST_Send((Object)send44727, (Object)symbol7848, 1, (Object)True_Const);
// numberConstant
send44729 = (Object)new_AST_Send((Object)Self, (Object)symbol7973, 0);
// stringConstant
send44730 = (Object)new_AST_Send((Object)Self, (Object)symbol7976, 0);
symbol7987 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send44731 = (Object)new_AST_Send((Object)Self, (Object)symbol7987, 0);
// symbolConstant
send44732 = (Object)new_AST_Send((Object)Self, (Object)symbol7974, 0);
// characterConstant
send44733 = (Object)new_AST_Send((Object)Self, (Object)symbol7975, 0);
// <=
send44734 = (Object)new_AST_Send((Object)send44732, (Object)symbol7667, 1, (Object)send44733);
// <=
send44735 = (Object)new_AST_Send((Object)send44731, (Object)symbol7667, 1, (Object)send44734);
// <=
send44736 = (Object)new_AST_Send((Object)send44730, (Object)symbol7667, 1, (Object)send44735);
// |
send44737 = (Object)new_AST_Send((Object)send44729, (Object)SMB__or, 1, (Object)send44736);
// <=
send44738 = (Object)new_AST_Send((Object)send44737, (Object)symbol7667, 1, (Object)localvariable6213);
// times
send44739 = (Object)new_AST_Send((Object)send44738, (Object)symbol7839, 0);
// &
send44740 = (Object)new_AST_Send((Object)send44728, (Object)SMB__and, 1, (Object)send44739);
// <=
send44741 = (Object)new_AST_Send((Object)localvariable6213, (Object)symbol7667, 1, (Object)send44740);
string5179 = (Object)new_Type_String(L")");
constant8677 = (Object)new_AST_Constant((Object)string5179);
// asPEG
send44742 = (Object)new_AST_Send((Object)constant8677, (Object)symbol7844, 0);
// omit:
send44743 = (Object)new_AST_Send((Object)send44742, (Object)symbol7848, 1, (Object)True_Const);
// <&
send44744 = (Object)new_AST_Send((Object)send44741, (Object)symbol7880, 1, (Object)send44743);
localvariable6214 = (Object)new_AST_Variable_named(L"result");
array4944 = (Object)new_Type_Array_with(1, (Object)localvariable6214);
// new
send44745 = (Object)new_AST_Send((Object)classreference1185, (Object)symbol7640, 0);
// literals:
send44746 = (Object)new_AST_Send((Object)send44745, (Object)symbol7693, 1, (Object)localvariable6214);
block2879 = (Object)new_AST_Block_with((Type_Array)array4944, (Type_Array)empty_Type_Array, 1, 1, send44746);
// semantics:
send44747 = (Object)new_AST_Send((Object)localvariable6213, (Object)symbol7857, 1, (Object)block2879);
method6089 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4943, 4, assign5404, send44744, send44747, localvariable6213);
symbol7775 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure6089 = (Object)new_Runtime_MethodClosure(method6089);
store_method((Type_Class)class1018, (Type_Symbol)symbol7775, (Runtime_MethodClosure)methodclosure6089);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super513 = (Object)new_AST_Super((Object)symbol7548, 0);
// new
send44748 = (Object)new_AST_Send((Object)classreference1151, (Object)symbol7640, 0);
assign5405 = (Object)new_AST_Assign((Object)instancevariable1479, (Object)send44748);
// new
send44749 = (Object)new_AST_Send((Object)classreference1151, (Object)symbol7640, 0);
assign5406 = (Object)new_AST_Assign((Object)instancevariable1481, (Object)send44749);
smallint3020 = (Object)new_Type_SmallInt(0);
constant8678 = (Object)new_AST_Constant((Object)smallint3020);
assign5407 = (Object)new_AST_Assign((Object)instancevariable1480, (Object)constant8678);
method6090 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super513, assign5405, assign5406, assign5407, Self);
methodclosure6090 = (Object)new_Runtime_MethodClosure(method6090);
store_method((Type_Class)class1018, (Type_Symbol)symbol7548, (Runtime_MethodClosure)methodclosure6090);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string5180 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant8679 = (Object)new_AST_Constant((Object)string5180);
// asPEGChoice
send44750 = (Object)new_AST_Send((Object)constant8679, (Object)symbol7950, 0);
// separators
send44751 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7981, 0);
// decimalDigit
send44752 = (Object)new_AST_Send((Object)Self, (Object)symbol7966, 0);
// letter
send44753 = (Object)new_AST_Send((Object)Self, (Object)symbol7965, 0);
// <=
send44754 = (Object)new_AST_Send((Object)send44752, (Object)symbol7667, 1, (Object)send44753);
// <=
send44755 = (Object)new_AST_Send((Object)send44751, (Object)symbol7667, 1, (Object)send44754);
// |
send44756 = (Object)new_AST_Send((Object)send44750, (Object)SMB__or, 1, (Object)send44755);
// specialCharacter
send44757 = (Object)new_AST_Send((Object)Self, (Object)symbol7978, 0);
// <=
send44758 = (Object)new_AST_Send((Object)send44756, (Object)symbol7667, 1, (Object)send44757);
method6091 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44758);
symbol7813 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure6091 = (Object)new_Runtime_MethodClosure(method6091);
store_method((Type_Class)class1018, (Type_Symbol)symbol7813, (Runtime_MethodClosure)methodclosure6091);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send44759 = (Object)new_AST_Send((Object)Self, (Object)symbol7927, 0);
// binaryObjectDescription
send44760 = (Object)new_AST_Send((Object)Self, (Object)symbol7930, 0);
method6092 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send44759, send44760);
symbol7825 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure6092 = (Object)new_Runtime_MethodClosure(method6092);
store_method((Type_Class)class1018, (Type_Symbol)symbol7825, (Runtime_MethodClosure)methodclosure6092);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
string5181 = (Object)new_Type_String(L"STATEMENTS");
constant8680 = (Object)new_AST_Constant((Object)string5181);
// subExpression
send44761 = (Object)new_AST_Send((Object)Self, (Object)symbol7963, 0);
// times
send44762 = (Object)new_AST_Send((Object)send44761, (Object)symbol7839, 0);
symbol7988 = (Object)new_Type_Symbol_cached(L"return");
// return
send44763 = (Object)new_AST_Send((Object)Self, (Object)symbol7988, 0);
// finalExpression
send44764 = (Object)new_AST_Send((Object)Self, (Object)symbol7937, 0);
// |
send44765 = (Object)new_AST_Send((Object)send44763, (Object)SMB__or, 1, (Object)send44764);
// optional
send44766 = (Object)new_AST_Send((Object)send44765, (Object)symbol7843, 0);
// &
send44767 = (Object)new_AST_Send((Object)send44762, (Object)SMB__and, 1, (Object)send44766);
localvariable6215 = (Object)new_AST_Variable_named(L"result");
array4945 = (Object)new_Type_Array_with(1, (Object)localvariable6215);
smallint3021 = (Object)new_Type_SmallInt(2);
constant8681 = (Object)new_AST_Constant((Object)smallint3021);
// at:
send44768 = (Object)new_AST_Send((Object)localvariable6215, (Object)SMB_at_, 1, (Object)constant8681);
localvariable6216 = (Object)new_AST_Variable_named(L"exp");
array4946 = (Object)new_Type_Array_with(1, (Object)localvariable6216);
// first
send44769 = (Object)new_AST_Send((Object)localvariable6215, (Object)symbol7702, 0);
// add:
send44770 = (Object)new_AST_Send((Object)send44769, (Object)symbol7706, 1, (Object)localvariable6216);
block2880 = (Object)new_AST_Block_with((Type_Array)array4946, (Type_Array)empty_Type_Array, 2, 1, send44770);
// ifMatched:
send44771 = (Object)new_AST_Send((Object)send44768, (Object)symbol7883, 1, (Object)block2880);
// first
send44772 = (Object)new_AST_Send((Object)localvariable6215, (Object)symbol7702, 0);
block2881 = (Object)new_AST_Block_with((Type_Array)array4945, (Type_Array)empty_Type_Array, 1, 2, send44771, send44772);
// named:parsing:semantics:
send44773 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7926, 3, (Object)constant8680, (Object)send44767, (Object)block2881);
method6093 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send44773);
symbol7785 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure6093 = (Object)new_Runtime_MethodClosure(method6093);
store_method((Type_Class)class1018, (Type_Symbol)symbol7785, (Runtime_MethodClosure)methodclosure6093);

classreference1200 = (Object)new_Organization_ClassReference((Type_Class)class1018);

// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable6217 = (Object)new_AST_Variable_named(L"parser");
localvariable6218 = (Object)new_AST_Variable_named(L"string");
localvariable6219 = (Object)new_AST_Variable_named(L"result");
array4947 = (Object)new_Type_Array_with(3, (Object)localvariable6217, (Object)localvariable6218, (Object)localvariable6219);
// binaryObjectDescription
send44774 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7930, 0);
assign5408 = (Object)new_AST_Assign((Object)localvariable6217, (Object)send44774);
string5182 = (Object)new_Type_String(L"abc + ghi ");
constant8682 = (Object)new_AST_Constant((Object)string5182);
// on:
send44775 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8682);
assign5409 = (Object)new_AST_Assign((Object)localvariable6218, (Object)send44775);
// match:
send44776 = (Object)new_AST_Send((Object)localvariable6217, (Object)symbol7846, 1, (Object)localvariable6218);
assign5410 = (Object)new_AST_Assign((Object)localvariable6219, (Object)send44776);
// class
send44777 = (Object)new_AST_Send((Object)localvariable6219, (Object)SMB_class, 0);
// should
send44778 = (Object)new_AST_Send((Object)send44777, (Object)symbol7919, 0);
// =
send44779 = (Object)new_AST_Send((Object)send44778, (Object)SMB__equal, 1, (Object)classreference1191);
// selector
send44780 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7654, 0);
// printString
send44781 = (Object)new_AST_Send((Object)send44780, (Object)symbol7849, 0);
// should
send44782 = (Object)new_AST_Send((Object)send44781, (Object)symbol7919, 0);
string5183 = (Object)new_Type_String(L"+");
constant8683 = (Object)new_AST_Constant((Object)string5183);
// =
send44783 = (Object)new_AST_Send((Object)send44782, (Object)SMB__equal, 1, (Object)constant8683);
// receiver
send44784 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7730, 0);
// class
send44785 = (Object)new_AST_Send((Object)send44784, (Object)SMB_class, 0);
// should
send44786 = (Object)new_AST_Send((Object)send44785, (Object)symbol7919, 0);
// =
send44787 = (Object)new_AST_Send((Object)send44786, (Object)SMB__equal, 1, (Object)classreference1180);
// receiver
send44788 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7730, 0);
// name
send44789 = (Object)new_AST_Send((Object)send44788, (Object)SMB_name, 0);
// should
send44790 = (Object)new_AST_Send((Object)send44789, (Object)symbol7919, 0);
string5184 = (Object)new_Type_String(L"abc");
constant8684 = (Object)new_AST_Constant((Object)string5184);
// =
send44791 = (Object)new_AST_Send((Object)send44790, (Object)SMB__equal, 1, (Object)constant8684);
// argument
send44792 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7738, 0);
// class
send44793 = (Object)new_AST_Send((Object)send44792, (Object)SMB_class, 0);
// should
send44794 = (Object)new_AST_Send((Object)send44793, (Object)symbol7919, 0);
// =
send44795 = (Object)new_AST_Send((Object)send44794, (Object)SMB__equal, 1, (Object)classreference1180);
// argument
send44796 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7738, 0);
// name
send44797 = (Object)new_AST_Send((Object)send44796, (Object)SMB_name, 0);
// should
send44798 = (Object)new_AST_Send((Object)send44797, (Object)symbol7919, 0);
string5185 = (Object)new_Type_String(L"ghi");
constant8685 = (Object)new_AST_Constant((Object)string5185);
// =
send44799 = (Object)new_AST_Send((Object)send44798, (Object)SMB__equal, 1, (Object)constant8685);
// position
send44800 = (Object)new_AST_Send((Object)localvariable6218, (Object)symbol7894, 0);
// should
send44801 = (Object)new_AST_Send((Object)send44800, (Object)symbol7919, 0);
smallint3022 = (Object)new_Type_SmallInt(9);
constant8686 = (Object)new_AST_Constant((Object)smallint3022);
// =
send44802 = (Object)new_AST_Send((Object)send44801, (Object)SMB__equal, 1, (Object)constant8686);
string5186 = (Object)new_Type_String(L"abc + ghi * c ");
constant8687 = (Object)new_AST_Constant((Object)string5186);
// on:
send44803 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8687);
assign5411 = (Object)new_AST_Assign((Object)localvariable6218, (Object)send44803);
// match:
send44804 = (Object)new_AST_Send((Object)localvariable6217, (Object)symbol7846, 1, (Object)localvariable6218);
assign5412 = (Object)new_AST_Assign((Object)localvariable6219, (Object)send44804);
// class
send44805 = (Object)new_AST_Send((Object)localvariable6219, (Object)SMB_class, 0);
// should
send44806 = (Object)new_AST_Send((Object)send44805, (Object)symbol7919, 0);
// =
send44807 = (Object)new_AST_Send((Object)send44806, (Object)SMB__equal, 1, (Object)classreference1191);
// selector
send44808 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7654, 0);
// printString
send44809 = (Object)new_AST_Send((Object)send44808, (Object)symbol7849, 0);
// should
send44810 = (Object)new_AST_Send((Object)send44809, (Object)symbol7919, 0);
string5187 = (Object)new_Type_String(L"*");
constant8688 = (Object)new_AST_Constant((Object)string5187);
// =
send44811 = (Object)new_AST_Send((Object)send44810, (Object)SMB__equal, 1, (Object)constant8688);
// argument
send44812 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7738, 0);
// class
send44813 = (Object)new_AST_Send((Object)send44812, (Object)SMB_class, 0);
// should
send44814 = (Object)new_AST_Send((Object)send44813, (Object)symbol7919, 0);
// =
send44815 = (Object)new_AST_Send((Object)send44814, (Object)SMB__equal, 1, (Object)classreference1180);
// argument
send44816 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7738, 0);
// name
send44817 = (Object)new_AST_Send((Object)send44816, (Object)SMB_name, 0);
// should
send44818 = (Object)new_AST_Send((Object)send44817, (Object)symbol7919, 0);
string5188 = (Object)new_Type_String(L"c");
constant8689 = (Object)new_AST_Constant((Object)string5188);
// =
send44819 = (Object)new_AST_Send((Object)send44818, (Object)SMB__equal, 1, (Object)constant8689);
// receiver
send44820 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7730, 0);
assign5413 = (Object)new_AST_Assign((Object)localvariable6219, (Object)send44820);
// class
send44821 = (Object)new_AST_Send((Object)localvariable6219, (Object)SMB_class, 0);
// should
send44822 = (Object)new_AST_Send((Object)send44821, (Object)symbol7919, 0);
// =
send44823 = (Object)new_AST_Send((Object)send44822, (Object)SMB__equal, 1, (Object)classreference1191);
// selector
send44824 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7654, 0);
// printString
send44825 = (Object)new_AST_Send((Object)send44824, (Object)symbol7849, 0);
// should
send44826 = (Object)new_AST_Send((Object)send44825, (Object)symbol7919, 0);
string5189 = (Object)new_Type_String(L"+");
constant8690 = (Object)new_AST_Constant((Object)string5189);
// =
send44827 = (Object)new_AST_Send((Object)send44826, (Object)SMB__equal, 1, (Object)constant8690);
// receiver
send44828 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7730, 0);
// class
send44829 = (Object)new_AST_Send((Object)send44828, (Object)SMB_class, 0);
// should
send44830 = (Object)new_AST_Send((Object)send44829, (Object)symbol7919, 0);
// =
send44831 = (Object)new_AST_Send((Object)send44830, (Object)SMB__equal, 1, (Object)classreference1180);
// receiver
send44832 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7730, 0);
// name
send44833 = (Object)new_AST_Send((Object)send44832, (Object)SMB_name, 0);
// should
send44834 = (Object)new_AST_Send((Object)send44833, (Object)symbol7919, 0);
string5190 = (Object)new_Type_String(L"abc");
constant8691 = (Object)new_AST_Constant((Object)string5190);
// =
send44835 = (Object)new_AST_Send((Object)send44834, (Object)SMB__equal, 1, (Object)constant8691);
// argument
send44836 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7738, 0);
// class
send44837 = (Object)new_AST_Send((Object)send44836, (Object)SMB_class, 0);
// should
send44838 = (Object)new_AST_Send((Object)send44837, (Object)symbol7919, 0);
// =
send44839 = (Object)new_AST_Send((Object)send44838, (Object)SMB__equal, 1, (Object)classreference1180);
// argument
send44840 = (Object)new_AST_Send((Object)localvariable6219, (Object)symbol7738, 0);
// name
send44841 = (Object)new_AST_Send((Object)send44840, (Object)SMB_name, 0);
// should
send44842 = (Object)new_AST_Send((Object)send44841, (Object)symbol7919, 0);
string5191 = (Object)new_Type_String(L"ghi");
constant8692 = (Object)new_AST_Constant((Object)string5191);
// =
send44843 = (Object)new_AST_Send((Object)send44842, (Object)SMB__equal, 1, (Object)constant8692);
// position
send44844 = (Object)new_AST_Send((Object)localvariable6218, (Object)symbol7894, 0);
// should
send44845 = (Object)new_AST_Send((Object)send44844, (Object)symbol7919, 0);
smallint3023 = (Object)new_Type_SmallInt(13);
constant8693 = (Object)new_AST_Constant((Object)smallint3023);
// =
send44846 = (Object)new_AST_Send((Object)send44845, (Object)SMB__equal, 1, (Object)constant8693);
method6094 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4947, 25, assign5408, assign5409, assign5410, send44779, send44783, send44787, send44791, send44795, send44799, send44802, assign5411, assign5412, send44807, send44811, send44815, send44819, assign5413, send44823, send44827, send44831, send44835, send44839, send44843, send44846, Self);
symbol7581 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure6094 = (Object)new_Runtime_MethodClosure(method6094);
store_method((Type_Class)class1020, (Type_Symbol)symbol7581, (Runtime_MethodClosure)methodclosure6094);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable6220 = (Object)new_AST_Variable_named(L"parser");
localvariable6221 = (Object)new_AST_Variable_named(L"string");
localvariable6222 = (Object)new_AST_Variable_named(L"result");
array4948 = (Object)new_Type_Array_with(3, (Object)localvariable6220, (Object)localvariable6221, (Object)localvariable6222);
// characterConstant
send44847 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7975, 0);
assign5414 = (Object)new_AST_Assign((Object)localvariable6220, (Object)send44847);
string5192 = (Object)new_Type_String(L"a");
constant8694 = (Object)new_AST_Constant((Object)string5192);
// on:
send44848 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8694);
assign5415 = (Object)new_AST_Assign((Object)localvariable6221, (Object)send44848);
// match:
send44849 = (Object)new_AST_Send((Object)localvariable6220, (Object)symbol7846, 1, (Object)localvariable6221);
// should
send44850 = (Object)new_AST_Send((Object)send44849, (Object)symbol7919, 0);
symbol7989 = (Object)new_Type_Symbol_cached(L"be");
// be
send44851 = (Object)new_AST_Send((Object)send44850, (Object)symbol7989, 0);
// isNil
send44852 = (Object)new_AST_Send((Object)send44851, (Object)SMB_isNil, 0);
// position
send44853 = (Object)new_AST_Send((Object)localvariable6221, (Object)symbol7894, 0);
// should
send44854 = (Object)new_AST_Send((Object)send44853, (Object)symbol7919, 0);
smallint3024 = (Object)new_Type_SmallInt(0);
constant8695 = (Object)new_AST_Constant((Object)smallint3024);
// =
send44855 = (Object)new_AST_Send((Object)send44854, (Object)SMB__equal, 1, (Object)constant8695);
string5193 = (Object)new_Type_String(L"$_");
constant8696 = (Object)new_AST_Constant((Object)string5193);
// on:
send44856 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8696);
assign5416 = (Object)new_AST_Assign((Object)localvariable6221, (Object)send44856);
// match:
send44857 = (Object)new_AST_Send((Object)localvariable6220, (Object)symbol7846, 1, (Object)localvariable6221);
assign5417 = (Object)new_AST_Assign((Object)localvariable6222, (Object)send44857);
// class
send44858 = (Object)new_AST_Send((Object)localvariable6222, (Object)SMB_class, 0);
// should
send44859 = (Object)new_AST_Send((Object)send44858, (Object)symbol7919, 0);
// =
send44860 = (Object)new_AST_Send((Object)send44859, (Object)SMB__equal, 1, (Object)classreference1197);
// char
send44861 = (Object)new_AST_Send((Object)localvariable6222, (Object)symbol7861, 0);
// should
send44862 = (Object)new_AST_Send((Object)send44861, (Object)symbol7919, 0);
character26 = (Object)new_Type_Character(L'_');
constant8697 = (Object)new_AST_Constant((Object)character26);
// =
send44863 = (Object)new_AST_Send((Object)send44862, (Object)SMB__equal, 1, (Object)constant8697);
// position
send44864 = (Object)new_AST_Send((Object)localvariable6221, (Object)symbol7894, 0);
// should
send44865 = (Object)new_AST_Send((Object)send44864, (Object)symbol7919, 0);
smallint3025 = (Object)new_Type_SmallInt(2);
constant8698 = (Object)new_AST_Constant((Object)smallint3025);
// =
send44866 = (Object)new_AST_Send((Object)send44865, (Object)SMB__equal, 1, (Object)constant8698);
method6095 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4948, 10, assign5414, assign5415, send44852, send44855, assign5416, assign5417, send44860, send44863, send44866, Self);
symbol7626 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure6095 = (Object)new_Runtime_MethodClosure(method6095);
store_method((Type_Class)class1020, (Type_Symbol)symbol7626, (Runtime_MethodClosure)methodclosure6095);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable6223 = (Object)new_AST_Variable_named(L"parser");
localvariable6224 = (Object)new_AST_Variable_named(L"string");
array4949 = (Object)new_Type_Array_with(2, (Object)localvariable6223, (Object)localvariable6224);
// identifier
send44867 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7951, 0);
assign5418 = (Object)new_AST_Assign((Object)localvariable6223, (Object)send44867);
string5194 = (Object)new_Type_String(L"abcd ");
constant8699 = (Object)new_AST_Constant((Object)string5194);
// on:
send44868 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8699);
assign5419 = (Object)new_AST_Assign((Object)localvariable6224, (Object)send44868);
// match:
send44869 = (Object)new_AST_Send((Object)localvariable6223, (Object)symbol7846, 1, (Object)localvariable6224);
// should
send44870 = (Object)new_AST_Send((Object)send44869, (Object)symbol7919, 0);
string5195 = (Object)new_Type_String(L"abcd");
constant8700 = (Object)new_AST_Constant((Object)string5195);
// =
send44871 = (Object)new_AST_Send((Object)send44870, (Object)SMB__equal, 1, (Object)constant8700);
// position
send44872 = (Object)new_AST_Send((Object)localvariable6224, (Object)symbol7894, 0);
// should
send44873 = (Object)new_AST_Send((Object)send44872, (Object)symbol7919, 0);
smallint3026 = (Object)new_Type_SmallInt(4);
constant8701 = (Object)new_AST_Constant((Object)smallint3026);
// =
send44874 = (Object)new_AST_Send((Object)send44873, (Object)SMB__equal, 1, (Object)constant8701);
string5196 = (Object)new_Type_String(L"AbCd145 ");
constant8702 = (Object)new_AST_Constant((Object)string5196);
// on:
send44875 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8702);
assign5420 = (Object)new_AST_Assign((Object)localvariable6224, (Object)send44875);
// match:
send44876 = (Object)new_AST_Send((Object)localvariable6223, (Object)symbol7846, 1, (Object)localvariable6224);
// should
send44877 = (Object)new_AST_Send((Object)send44876, (Object)symbol7919, 0);
string5197 = (Object)new_Type_String(L"AbCd145");
constant8703 = (Object)new_AST_Constant((Object)string5197);
// =
send44878 = (Object)new_AST_Send((Object)send44877, (Object)SMB__equal, 1, (Object)constant8703);
// position
send44879 = (Object)new_AST_Send((Object)localvariable6224, (Object)symbol7894, 0);
// should
send44880 = (Object)new_AST_Send((Object)send44879, (Object)symbol7919, 0);
smallint3027 = (Object)new_Type_SmallInt(7);
constant8704 = (Object)new_AST_Constant((Object)smallint3027);
// =
send44881 = (Object)new_AST_Send((Object)send44880, (Object)SMB__equal, 1, (Object)constant8704);
string5198 = (Object)new_Type_String(L"1a");
constant8705 = (Object)new_AST_Constant((Object)string5198);
// on:
send44882 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8705);
assign5421 = (Object)new_AST_Assign((Object)localvariable6224, (Object)send44882);
// match:
send44883 = (Object)new_AST_Send((Object)localvariable6223, (Object)symbol7846, 1, (Object)localvariable6224);
// should
send44884 = (Object)new_AST_Send((Object)send44883, (Object)symbol7919, 0);
// be
send44885 = (Object)new_AST_Send((Object)send44884, (Object)symbol7989, 0);
// isNil
send44886 = (Object)new_AST_Send((Object)send44885, (Object)SMB_isNil, 0);
// position
send44887 = (Object)new_AST_Send((Object)localvariable6224, (Object)symbol7894, 0);
// should
send44888 = (Object)new_AST_Send((Object)send44887, (Object)symbol7919, 0);
smallint3028 = (Object)new_Type_SmallInt(0);
constant8706 = (Object)new_AST_Constant((Object)smallint3028);
// =
send44889 = (Object)new_AST_Send((Object)send44888, (Object)SMB__equal, 1, (Object)constant8706);
method6096 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4949, 11, assign5418, assign5419, send44871, send44874, assign5420, send44878, send44881, assign5421, send44886, send44889, Self);
symbol7578 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure6096 = (Object)new_Runtime_MethodClosure(method6096);
store_method((Type_Class)class1020, (Type_Symbol)symbol7578, (Runtime_MethodClosure)methodclosure6096);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable6225 = (Object)new_AST_Variable_named(L"parser");
localvariable6226 = (Object)new_AST_Variable_named(L"string");
array4950 = (Object)new_Type_Array_with(2, (Object)localvariable6225, (Object)localvariable6226);
// string
send44890 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7719, 0);
assign5422 = (Object)new_AST_Assign((Object)localvariable6225, (Object)send44890);
string5199 = (Object)new_Type_String(L"");
constant8707 = (Object)new_AST_Constant((Object)string5199);
// on:
send44891 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8707);
assign5423 = (Object)new_AST_Assign((Object)localvariable6226, (Object)send44891);
// match:
send44892 = (Object)new_AST_Send((Object)localvariable6225, (Object)symbol7846, 1, (Object)localvariable6226);
// should
send44893 = (Object)new_AST_Send((Object)send44892, (Object)symbol7919, 0);
// be
send44894 = (Object)new_AST_Send((Object)send44893, (Object)symbol7989, 0);
// isNil
send44895 = (Object)new_AST_Send((Object)send44894, (Object)SMB_isNil, 0);
// position
send44896 = (Object)new_AST_Send((Object)localvariable6226, (Object)symbol7894, 0);
// should
send44897 = (Object)new_AST_Send((Object)send44896, (Object)symbol7919, 0);
smallint3029 = (Object)new_Type_SmallInt(0);
constant8708 = (Object)new_AST_Constant((Object)smallint3029);
// =
send44898 = (Object)new_AST_Send((Object)send44897, (Object)SMB__equal, 1, (Object)constant8708);
string5200 = (Object)new_Type_String(L"\'abc\'");
constant8709 = (Object)new_AST_Constant((Object)string5200);
// on:
send44899 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8709);
assign5424 = (Object)new_AST_Assign((Object)localvariable6226, (Object)send44899);
// match:
send44900 = (Object)new_AST_Send((Object)localvariable6225, (Object)symbol7846, 1, (Object)localvariable6226);
// should
send44901 = (Object)new_AST_Send((Object)send44900, (Object)symbol7919, 0);
string5201 = (Object)new_Type_String(L"abc");
constant8710 = (Object)new_AST_Constant((Object)string5201);
// =
send44902 = (Object)new_AST_Send((Object)send44901, (Object)SMB__equal, 1, (Object)constant8710);
// position
send44903 = (Object)new_AST_Send((Object)localvariable6226, (Object)symbol7894, 0);
// should
send44904 = (Object)new_AST_Send((Object)send44903, (Object)symbol7919, 0);
smallint3030 = (Object)new_Type_SmallInt(5);
constant8711 = (Object)new_AST_Constant((Object)smallint3030);
// =
send44905 = (Object)new_AST_Send((Object)send44904, (Object)SMB__equal, 1, (Object)constant8711);
string5202 = (Object)new_Type_String(L"\'abc\'\'");
constant8712 = (Object)new_AST_Constant((Object)string5202);
// on:
send44906 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8712);
assign5425 = (Object)new_AST_Assign((Object)localvariable6226, (Object)send44906);
// match:
send44907 = (Object)new_AST_Send((Object)localvariable6225, (Object)symbol7846, 1, (Object)localvariable6226);
// should
send44908 = (Object)new_AST_Send((Object)send44907, (Object)symbol7919, 0);
string5203 = (Object)new_Type_String(L"abc");
constant8713 = (Object)new_AST_Constant((Object)string5203);
// =
send44909 = (Object)new_AST_Send((Object)send44908, (Object)SMB__equal, 1, (Object)constant8713);
// position
send44910 = (Object)new_AST_Send((Object)localvariable6226, (Object)symbol7894, 0);
// should
send44911 = (Object)new_AST_Send((Object)send44910, (Object)symbol7919, 0);
smallint3031 = (Object)new_Type_SmallInt(5);
constant8714 = (Object)new_AST_Constant((Object)smallint3031);
// =
send44912 = (Object)new_AST_Send((Object)send44911, (Object)SMB__equal, 1, (Object)constant8714);
string5204 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant8715 = (Object)new_AST_Constant((Object)string5204);
// on:
send44913 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8715);
assign5426 = (Object)new_AST_Assign((Object)localvariable6226, (Object)send44913);
// match:
send44914 = (Object)new_AST_Send((Object)localvariable6225, (Object)symbol7846, 1, (Object)localvariable6226);
// should
send44915 = (Object)new_AST_Send((Object)send44914, (Object)symbol7919, 0);
string5205 = (Object)new_Type_String(L"abc\'d");
constant8716 = (Object)new_AST_Constant((Object)string5205);
// =
send44916 = (Object)new_AST_Send((Object)send44915, (Object)SMB__equal, 1, (Object)constant8716);
// position
send44917 = (Object)new_AST_Send((Object)localvariable6226, (Object)symbol7894, 0);
// should
send44918 = (Object)new_AST_Send((Object)send44917, (Object)symbol7919, 0);
smallint3032 = (Object)new_Type_SmallInt(8);
constant8717 = (Object)new_AST_Constant((Object)smallint3032);
// =
send44919 = (Object)new_AST_Send((Object)send44918, (Object)SMB__equal, 1, (Object)constant8717);
method6097 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4950, 14, assign5422, assign5423, send44895, send44898, assign5424, send44902, send44905, assign5425, send44909, send44912, assign5426, send44916, send44919, Self);
symbol7598 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure6097 = (Object)new_Runtime_MethodClosure(method6097);
store_method((Type_Class)class1020, (Type_Symbol)symbol7598, (Runtime_MethodClosure)methodclosure6097);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable6227 = (Object)new_AST_Variable_named(L"parser");
localvariable6228 = (Object)new_AST_Variable_named(L"string");
localvariable6229 = (Object)new_AST_Variable_named(L"result");
array4951 = (Object)new_Type_Array_with(3, (Object)localvariable6227, (Object)localvariable6228, (Object)localvariable6229);
// stringConstant
send44920 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7976, 0);
assign5427 = (Object)new_AST_Assign((Object)localvariable6227, (Object)send44920);
string5206 = (Object)new_Type_String(L"\'abc\'");
constant8718 = (Object)new_AST_Constant((Object)string5206);
// on:
send44921 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8718);
assign5428 = (Object)new_AST_Assign((Object)localvariable6228, (Object)send44921);
// match:
send44922 = (Object)new_AST_Send((Object)localvariable6227, (Object)symbol7846, 1, (Object)localvariable6228);
assign5429 = (Object)new_AST_Assign((Object)localvariable6229, (Object)send44922);
// class
send44923 = (Object)new_AST_Send((Object)localvariable6229, (Object)SMB_class, 0);
// should
send44924 = (Object)new_AST_Send((Object)send44923, (Object)symbol7919, 0);
// =
send44925 = (Object)new_AST_Send((Object)send44924, (Object)SMB__equal, 1, (Object)classreference1194);
// string
send44926 = (Object)new_AST_Send((Object)localvariable6229, (Object)symbol7719, 0);
// should
send44927 = (Object)new_AST_Send((Object)send44926, (Object)symbol7919, 0);
string5207 = (Object)new_Type_String(L"abc");
constant8719 = (Object)new_AST_Constant((Object)string5207);
// =
send44928 = (Object)new_AST_Send((Object)send44927, (Object)SMB__equal, 1, (Object)constant8719);
// position
send44929 = (Object)new_AST_Send((Object)localvariable6228, (Object)symbol7894, 0);
// should
send44930 = (Object)new_AST_Send((Object)send44929, (Object)symbol7919, 0);
smallint3033 = (Object)new_Type_SmallInt(5);
constant8720 = (Object)new_AST_Constant((Object)smallint3033);
// =
send44931 = (Object)new_AST_Send((Object)send44930, (Object)SMB__equal, 1, (Object)constant8720);
string5208 = (Object)new_Type_String(L"\'abc\'\'");
constant8721 = (Object)new_AST_Constant((Object)string5208);
// on:
send44932 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8721);
assign5430 = (Object)new_AST_Assign((Object)localvariable6228, (Object)send44932);
// match:
send44933 = (Object)new_AST_Send((Object)localvariable6227, (Object)symbol7846, 1, (Object)localvariable6228);
assign5431 = (Object)new_AST_Assign((Object)localvariable6229, (Object)send44933);
// class
send44934 = (Object)new_AST_Send((Object)localvariable6229, (Object)SMB_class, 0);
// should
send44935 = (Object)new_AST_Send((Object)send44934, (Object)symbol7919, 0);
// =
send44936 = (Object)new_AST_Send((Object)send44935, (Object)SMB__equal, 1, (Object)classreference1194);
// string
send44937 = (Object)new_AST_Send((Object)localvariable6229, (Object)symbol7719, 0);
// should
send44938 = (Object)new_AST_Send((Object)send44937, (Object)symbol7919, 0);
string5209 = (Object)new_Type_String(L"abc");
constant8722 = (Object)new_AST_Constant((Object)string5209);
// =
send44939 = (Object)new_AST_Send((Object)send44938, (Object)SMB__equal, 1, (Object)constant8722);
// position
send44940 = (Object)new_AST_Send((Object)localvariable6228, (Object)symbol7894, 0);
// should
send44941 = (Object)new_AST_Send((Object)send44940, (Object)symbol7919, 0);
smallint3034 = (Object)new_Type_SmallInt(5);
constant8723 = (Object)new_AST_Constant((Object)smallint3034);
// =
send44942 = (Object)new_AST_Send((Object)send44941, (Object)SMB__equal, 1, (Object)constant8723);
string5210 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant8724 = (Object)new_AST_Constant((Object)string5210);
// on:
send44943 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8724);
assign5432 = (Object)new_AST_Assign((Object)localvariable6228, (Object)send44943);
// match:
send44944 = (Object)new_AST_Send((Object)localvariable6227, (Object)symbol7846, 1, (Object)localvariable6228);
assign5433 = (Object)new_AST_Assign((Object)localvariable6229, (Object)send44944);
// class
send44945 = (Object)new_AST_Send((Object)localvariable6229, (Object)SMB_class, 0);
// should
send44946 = (Object)new_AST_Send((Object)send44945, (Object)symbol7919, 0);
// =
send44947 = (Object)new_AST_Send((Object)send44946, (Object)SMB__equal, 1, (Object)classreference1194);
// string
send44948 = (Object)new_AST_Send((Object)localvariable6229, (Object)symbol7719, 0);
// should
send44949 = (Object)new_AST_Send((Object)send44948, (Object)symbol7919, 0);
string5211 = (Object)new_Type_String(L"abc\'d");
constant8725 = (Object)new_AST_Constant((Object)string5211);
// =
send44950 = (Object)new_AST_Send((Object)send44949, (Object)SMB__equal, 1, (Object)constant8725);
// position
send44951 = (Object)new_AST_Send((Object)localvariable6228, (Object)symbol7894, 0);
// should
send44952 = (Object)new_AST_Send((Object)send44951, (Object)symbol7919, 0);
smallint3035 = (Object)new_Type_SmallInt(8);
constant8726 = (Object)new_AST_Constant((Object)smallint3035);
// =
send44953 = (Object)new_AST_Send((Object)send44952, (Object)SMB__equal, 1, (Object)constant8726);
method6098 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4951, 17, assign5427, assign5428, assign5429, send44925, send44928, send44931, assign5430, assign5431, send44936, send44939, send44942, assign5432, assign5433, send44947, send44950, send44953, Self);
symbol7571 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure6098 = (Object)new_Runtime_MethodClosure(method6098);
store_method((Type_Class)class1020, (Type_Symbol)symbol7571, (Runtime_MethodClosure)methodclosure6098);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable6230 = (Object)new_AST_Variable_named(L"parser");
localvariable6231 = (Object)new_AST_Variable_named(L"string");
localvariable6232 = (Object)new_AST_Variable_named(L"result");
localvariable6233 = (Object)new_AST_Variable_named(L"arg");
array4952 = (Object)new_Type_Array_with(4, (Object)localvariable6230, (Object)localvariable6231, (Object)localvariable6232, (Object)localvariable6233);
// annotation
send44954 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7936, 0);
assign5434 = (Object)new_AST_Assign((Object)localvariable6230, (Object)send44954);
string5212 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant8727 = (Object)new_AST_Constant((Object)string5212);
// on:
send44955 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8727);
assign5435 = (Object)new_AST_Assign((Object)localvariable6231, (Object)send44955);
// match:
send44956 = (Object)new_AST_Send((Object)localvariable6230, (Object)symbol7846, 1, (Object)localvariable6231);
assign5436 = (Object)new_AST_Assign((Object)localvariable6232, (Object)send44956);
// class
send44957 = (Object)new_AST_Send((Object)localvariable6232, (Object)SMB_class, 0);
// should
send44958 = (Object)new_AST_Send((Object)send44957, (Object)symbol7919, 0);
// =
send44959 = (Object)new_AST_Send((Object)send44958, (Object)SMB__equal, 1, (Object)classreference1199);
// keywords
send44960 = (Object)new_AST_Send((Object)localvariable6232, (Object)symbol7740, 0);
// asArray
send44961 = (Object)new_AST_Send((Object)send44960, (Object)SMB_asArray, 0);
constant8728 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send44962 = (Object)new_AST_Send((Object)send44961, (Object)symbol7962, 1, (Object)constant8728);
// should
send44963 = (Object)new_AST_Send((Object)send44962, (Object)symbol7919, 0);
localvariable6234 = (Object)new_AST_Variable_named(L"receiver");
array4953 = (Object)new_Type_Array_with(1, (Object)localvariable6234);
smallint3036 = (Object)new_Type_SmallInt(1);
constant8729 = (Object)new_AST_Constant((Object)smallint3036);
symbol7990 = (Object)new_Type_Symbol_cached(L"abc");
constant8730 = (Object)new_AST_Constant((Object)symbol7990);
// at:put:
send44964 = (Object)new_AST_Send((Object)localvariable6234, (Object)SMB_at_put_, 2, (Object)constant8729, (Object)constant8730);
smallint3037 = (Object)new_Type_SmallInt(2);
constant8731 = (Object)new_AST_Constant((Object)smallint3037);
symbol7991 = (Object)new_Type_Symbol_cached(L"def");
constant8732 = (Object)new_AST_Constant((Object)symbol7991);
// at:put:
send44965 = (Object)new_AST_Send((Object)localvariable6234, (Object)SMB_at_put_, 2, (Object)constant8731, (Object)constant8732);
smallint3038 = (Object)new_Type_SmallInt(3);
constant8733 = (Object)new_AST_Constant((Object)smallint3038);
symbol7992 = (Object)new_Type_Symbol_cached(L"ghi");
constant8734 = (Object)new_AST_Constant((Object)symbol7992);
// at:put:
send44966 = (Object)new_AST_Send((Object)localvariable6234, (Object)SMB_at_put_, 2, (Object)constant8733, (Object)constant8734);
// yourself
send44967 = (Object)new_AST_Send((Object)localvariable6234, (Object)symbol7546, 0);
block2882 = (Object)new_AST_Block_with((Type_Array)array4953, (Type_Array)empty_Type_Array, 1, 4, send44964, send44965, send44966, send44967);
smallint3039 = (Object)new_Type_SmallInt(3);
constant8735 = (Object)new_AST_Constant((Object)smallint3039);
// new:
send44968 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8735);
// value:
send44969 = (Object)new_AST_Send((Object)block2882, (Object)SMB_value_, 1, (Object)send44968);
// =
send44970 = (Object)new_AST_Send((Object)send44963, (Object)SMB__equal, 1, (Object)send44969);
// arguments
send44971 = (Object)new_AST_Send((Object)localvariable6232, (Object)symbol7655, 0);
// first
send44972 = (Object)new_AST_Send((Object)send44971, (Object)symbol7702, 0);
assign5437 = (Object)new_AST_Assign((Object)localvariable6233, (Object)send44972);
// class
send44973 = (Object)new_AST_Send((Object)localvariable6233, (Object)SMB_class, 0);
// should
send44974 = (Object)new_AST_Send((Object)send44973, (Object)symbol7919, 0);
// =
send44975 = (Object)new_AST_Send((Object)send44974, (Object)SMB__equal, 1, (Object)classreference1167);
// arguments
send44976 = (Object)new_AST_Send((Object)localvariable6232, (Object)symbol7655, 0);
smallint3040 = (Object)new_Type_SmallInt(2);
constant8736 = (Object)new_AST_Constant((Object)smallint3040);
// at:
send44977 = (Object)new_AST_Send((Object)send44976, (Object)SMB_at_, 1, (Object)constant8736);
assign5438 = (Object)new_AST_Assign((Object)localvariable6233, (Object)send44977);
// class
send44978 = (Object)new_AST_Send((Object)localvariable6233, (Object)SMB_class, 0);
// should
send44979 = (Object)new_AST_Send((Object)send44978, (Object)symbol7919, 0);
// =
send44980 = (Object)new_AST_Send((Object)send44979, (Object)SMB__equal, 1, (Object)classreference1191);
// arguments
send44981 = (Object)new_AST_Send((Object)localvariable6232, (Object)symbol7655, 0);
smallint3041 = (Object)new_Type_SmallInt(3);
constant8737 = (Object)new_AST_Constant((Object)smallint3041);
// at:
send44982 = (Object)new_AST_Send((Object)send44981, (Object)SMB_at_, 1, (Object)constant8737);
assign5439 = (Object)new_AST_Assign((Object)localvariable6233, (Object)send44982);
// class
send44983 = (Object)new_AST_Send((Object)localvariable6233, (Object)SMB_class, 0);
// should
send44984 = (Object)new_AST_Send((Object)send44983, (Object)symbol7919, 0);
// =
send44985 = (Object)new_AST_Send((Object)send44984, (Object)SMB__equal, 1, (Object)classreference1198);
// atEnd
send44986 = (Object)new_AST_Send((Object)localvariable6231, (Object)SMB_atEnd, 0);
// should
send44987 = (Object)new_AST_Send((Object)send44986, (Object)symbol7919, 0);
// be
send44988 = (Object)new_AST_Send((Object)send44987, (Object)symbol7989, 0);
symbol7993 = (Object)new_Type_Symbol_cached(L"true");
// true
send44989 = (Object)new_AST_Send((Object)send44988, (Object)symbol7993, 0);
string5213 = (Object)new_Type_String(L"<abc> ");
constant8738 = (Object)new_AST_Constant((Object)string5213);
// on:
send44990 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8738);
assign5440 = (Object)new_AST_Assign((Object)localvariable6231, (Object)send44990);
// match:
send44991 = (Object)new_AST_Send((Object)localvariable6230, (Object)symbol7846, 1, (Object)localvariable6231);
assign5441 = (Object)new_AST_Assign((Object)localvariable6232, (Object)send44991);
// class
send44992 = (Object)new_AST_Send((Object)localvariable6232, (Object)SMB_class, 0);
// should
send44993 = (Object)new_AST_Send((Object)send44992, (Object)symbol7919, 0);
// =
send44994 = (Object)new_AST_Send((Object)send44993, (Object)SMB__equal, 1, (Object)classreference1170);
// selector
send44995 = (Object)new_AST_Send((Object)localvariable6232, (Object)symbol7654, 0);
// asString
send44996 = (Object)new_AST_Send((Object)send44995, (Object)SMB_asString, 0);
// should
send44997 = (Object)new_AST_Send((Object)send44996, (Object)symbol7919, 0);
string5214 = (Object)new_Type_String(L"abc");
constant8739 = (Object)new_AST_Constant((Object)string5214);
// =
send44998 = (Object)new_AST_Send((Object)send44997, (Object)SMB__equal, 1, (Object)constant8739);
// position
send44999 = (Object)new_AST_Send((Object)localvariable6231, (Object)symbol7894, 0);
// should
send45000 = (Object)new_AST_Send((Object)send44999, (Object)symbol7919, 0);
smallint3042 = (Object)new_Type_SmallInt(5);
constant8740 = (Object)new_AST_Constant((Object)smallint3042);
// =
send45001 = (Object)new_AST_Send((Object)send45000, (Object)SMB__equal, 1, (Object)constant8740);
string5215 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant8741 = (Object)new_AST_Constant((Object)string5215);
// on:
send45002 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8741);
assign5442 = (Object)new_AST_Assign((Object)localvariable6231, (Object)send45002);
// match:
send45003 = (Object)new_AST_Send((Object)localvariable6230, (Object)symbol7846, 1, (Object)localvariable6231);
assign5443 = (Object)new_AST_Assign((Object)localvariable6232, (Object)send45003);
// class
send45004 = (Object)new_AST_Send((Object)localvariable6232, (Object)SMB_class, 0);
// should
send45005 = (Object)new_AST_Send((Object)send45004, (Object)symbol7919, 0);
// =
send45006 = (Object)new_AST_Send((Object)send45005, (Object)SMB__equal, 1, (Object)classreference1199);
// keywords
send45007 = (Object)new_AST_Send((Object)localvariable6232, (Object)symbol7740, 0);
// asArray
send45008 = (Object)new_AST_Send((Object)send45007, (Object)SMB_asArray, 0);
constant8742 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send45009 = (Object)new_AST_Send((Object)send45008, (Object)symbol7962, 1, (Object)constant8742);
// should
send45010 = (Object)new_AST_Send((Object)send45009, (Object)symbol7919, 0);
localvariable6235 = (Object)new_AST_Variable_named(L"receiver");
array4954 = (Object)new_Type_Array_with(1, (Object)localvariable6235);
smallint3043 = (Object)new_Type_SmallInt(1);
constant8743 = (Object)new_AST_Constant((Object)smallint3043);
string5216 = (Object)new_Type_String(L"temps");
constant8744 = (Object)new_AST_Constant((Object)string5216);
// at:put:
send45011 = (Object)new_AST_Send((Object)localvariable6235, (Object)SMB_at_put_, 2, (Object)constant8743, (Object)constant8744);
smallint3044 = (Object)new_Type_SmallInt(2);
constant8745 = (Object)new_AST_Constant((Object)smallint3044);
string5217 = (Object)new_Type_String(L"annotations");
constant8746 = (Object)new_AST_Constant((Object)string5217);
// at:put:
send45012 = (Object)new_AST_Send((Object)localvariable6235, (Object)SMB_at_put_, 2, (Object)constant8745, (Object)constant8746);
smallint3045 = (Object)new_Type_SmallInt(3);
constant8747 = (Object)new_AST_Constant((Object)smallint3045);
string5218 = (Object)new_Type_String(L"statements");
constant8748 = (Object)new_AST_Constant((Object)string5218);
// at:put:
send45013 = (Object)new_AST_Send((Object)localvariable6235, (Object)SMB_at_put_, 2, (Object)constant8747, (Object)constant8748);
// yourself
send45014 = (Object)new_AST_Send((Object)localvariable6235, (Object)symbol7546, 0);
block2883 = (Object)new_AST_Block_with((Type_Array)array4954, (Type_Array)empty_Type_Array, 1, 4, send45011, send45012, send45013, send45014);
smallint3046 = (Object)new_Type_SmallInt(3);
constant8749 = (Object)new_AST_Constant((Object)smallint3046);
// new:
send45015 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8749);
// value:
send45016 = (Object)new_AST_Send((Object)block2883, (Object)SMB_value_, 1, (Object)send45015);
// =
send45017 = (Object)new_AST_Send((Object)send45010, (Object)SMB__equal, 1, (Object)send45016);
// atEnd
send45018 = (Object)new_AST_Send((Object)localvariable6231, (Object)SMB_atEnd, 0);
// should
send45019 = (Object)new_AST_Send((Object)send45018, (Object)symbol7919, 0);
// be
send45020 = (Object)new_AST_Send((Object)send45019, (Object)symbol7989, 0);
// true
send45021 = (Object)new_AST_Send((Object)send45020, (Object)symbol7993, 0);
method6099 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4952, 23, assign5434, assign5435, assign5436, send44959, send44970, assign5437, send44975, assign5438, send44980, assign5439, send44985, send44989, assign5440, assign5441, send44994, send44998, send45001, assign5442, assign5443, send45006, send45017, send45021, Self);
symbol7608 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure6099 = (Object)new_Runtime_MethodClosure(method6099);
store_method((Type_Class)class1020, (Type_Symbol)symbol7608, (Runtime_MethodClosure)methodclosure6099);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable6236 = (Object)new_AST_Variable_named(L"parser");
localvariable6237 = (Object)new_AST_Variable_named(L"string");
localvariable6238 = (Object)new_AST_Variable_named(L"result");
array4955 = (Object)new_Type_Array_with(3, (Object)localvariable6236, (Object)localvariable6237, (Object)localvariable6238);
symbol7994 = (Object)new_Type_Symbol_cached(L"method");
// method
send45022 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7994, 0);
assign5444 = (Object)new_AST_Assign((Object)localvariable6236, (Object)send45022);
string5219 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant8750 = (Object)new_AST_Constant((Object)string5219);
assign5445 = (Object)new_AST_Assign((Object)localvariable6237, (Object)constant8750);
// parse:
send45023 = (Object)new_AST_Send((Object)localvariable6236, (Object)symbol7858, 1, (Object)localvariable6237);
assign5446 = (Object)new_AST_Assign((Object)localvariable6238, (Object)send45023);
// hasReturnExpression
send45024 = (Object)new_AST_Send((Object)localvariable6238, (Object)symbol7687, 0);
// should
send45025 = (Object)new_AST_Send((Object)send45024, (Object)symbol7919, 0);
// be
send45026 = (Object)new_AST_Send((Object)send45025, (Object)symbol7989, 0);
// true
send45027 = (Object)new_AST_Send((Object)send45026, (Object)symbol7993, 0);
// class
send45028 = (Object)new_AST_Send((Object)localvariable6238, (Object)SMB_class, 0);
// should
send45029 = (Object)new_AST_Send((Object)send45028, (Object)symbol7919, 0);
// =
send45030 = (Object)new_AST_Send((Object)send45029, (Object)SMB__equal, 1, (Object)classreference1182);
// message
send45031 = (Object)new_AST_Send((Object)localvariable6238, (Object)symbol7748, 0);
// class
send45032 = (Object)new_AST_Send((Object)send45031, (Object)SMB_class, 0);
// should
send45033 = (Object)new_AST_Send((Object)send45032, (Object)symbol7919, 0);
// =
send45034 = (Object)new_AST_Send((Object)send45033, (Object)SMB__equal, 1, (Object)classreference1173);
// temporaries
send45035 = (Object)new_AST_Send((Object)localvariable6238, (Object)symbol7749, 0);
// size
send45036 = (Object)new_AST_Send((Object)send45035, (Object)SMB_size, 0);
// should
send45037 = (Object)new_AST_Send((Object)send45036, (Object)symbol7919, 0);
smallint3047 = (Object)new_Type_SmallInt(3);
constant8751 = (Object)new_AST_Constant((Object)smallint3047);
// =
send45038 = (Object)new_AST_Send((Object)send45037, (Object)SMB__equal, 1, (Object)constant8751);
// annotations
send45039 = (Object)new_AST_Send((Object)localvariable6238, (Object)symbol7746, 0);
// size
send45040 = (Object)new_AST_Send((Object)send45039, (Object)SMB_size, 0);
// should
send45041 = (Object)new_AST_Send((Object)send45040, (Object)symbol7919, 0);
smallint3048 = (Object)new_Type_SmallInt(3);
constant8752 = (Object)new_AST_Constant((Object)smallint3048);
// =
send45042 = (Object)new_AST_Send((Object)send45041, (Object)SMB__equal, 1, (Object)constant8752);
// statements
send45043 = (Object)new_AST_Send((Object)localvariable6238, (Object)symbol7745, 0);
// size
send45044 = (Object)new_AST_Send((Object)send45043, (Object)SMB_size, 0);
// should
send45045 = (Object)new_AST_Send((Object)send45044, (Object)symbol7919, 0);
smallint3049 = (Object)new_Type_SmallInt(2);
constant8753 = (Object)new_AST_Constant((Object)smallint3049);
// =
send45046 = (Object)new_AST_Send((Object)send45045, (Object)SMB__equal, 1, (Object)constant8753);
method6100 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4955, 10, assign5444, assign5445, assign5446, send45027, send45030, send45034, send45038, send45042, send45046, Self);
symbol7591 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure6100 = (Object)new_Runtime_MethodClosure(method6100);
store_method((Type_Class)class1020, (Type_Symbol)symbol7591, (Runtime_MethodClosure)methodclosure6100);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable6239 = (Object)new_AST_Variable_named(L"parser");
localvariable6240 = (Object)new_AST_Variable_named(L"string");
localvariable6241 = (Object)new_AST_Variable_named(L"result");
array4956 = (Object)new_Type_Array_with(3, (Object)localvariable6239, (Object)localvariable6240, (Object)localvariable6241);
// keywordsArguments
send45047 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7953, 0);
assign5447 = (Object)new_AST_Assign((Object)localvariable6239, (Object)send45047);
string5220 = (Object)new_Type_String(L"test: ab");
constant8754 = (Object)new_AST_Constant((Object)string5220);
// on:
send45048 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8754);
assign5448 = (Object)new_AST_Assign((Object)localvariable6240, (Object)send45048);
// match:
send45049 = (Object)new_AST_Send((Object)localvariable6239, (Object)symbol7846, 1, (Object)localvariable6240);
assign5449 = (Object)new_AST_Assign((Object)localvariable6241, (Object)send45049);
// class
send45050 = (Object)new_AST_Send((Object)localvariable6241, (Object)SMB_class, 0);
// should
send45051 = (Object)new_AST_Send((Object)send45050, (Object)symbol7919, 0);
// =
send45052 = (Object)new_AST_Send((Object)send45051, (Object)SMB__equal, 1, (Object)classreference1173);
// keywords
send45053 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7740, 0);
// should
send45054 = (Object)new_AST_Send((Object)send45053, (Object)symbol7919, 0);
string5221 = (Object)new_Type_String(L"test");
constant8755 = (Object)new_AST_Constant((Object)string5221);
// with:
send45055 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7699, 1, (Object)constant8755);
// =
send45056 = (Object)new_AST_Send((Object)send45054, (Object)SMB__equal, 1, (Object)send45055);
// parameters
send45057 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7735, 0);
// size
send45058 = (Object)new_AST_Send((Object)send45057, (Object)SMB_size, 0);
// should
send45059 = (Object)new_AST_Send((Object)send45058, (Object)symbol7919, 0);
smallint3050 = (Object)new_Type_SmallInt(1);
constant8756 = (Object)new_AST_Constant((Object)smallint3050);
// =
send45060 = (Object)new_AST_Send((Object)send45059, (Object)SMB__equal, 1, (Object)constant8756);
// parameters
send45061 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7735, 0);
// first
send45062 = (Object)new_AST_Send((Object)send45061, (Object)symbol7702, 0);
// should
send45063 = (Object)new_AST_Send((Object)send45062, (Object)symbol7919, 0);
// new
send45064 = (Object)new_AST_Send((Object)classreference1180, (Object)symbol7640, 0);
string5222 = (Object)new_Type_String(L"ab");
constant8757 = (Object)new_AST_Constant((Object)string5222);
// name:
send45065 = (Object)new_AST_Send((Object)send45064, (Object)symbol7723, 1, (Object)constant8757);
// =
send45066 = (Object)new_AST_Send((Object)send45063, (Object)SMB__equal, 1, (Object)send45065);
// position
send45067 = (Object)new_AST_Send((Object)localvariable6240, (Object)symbol7894, 0);
// should
send45068 = (Object)new_AST_Send((Object)send45067, (Object)symbol7919, 0);
smallint3051 = (Object)new_Type_SmallInt(8);
constant8758 = (Object)new_AST_Constant((Object)smallint3051);
// =
send45069 = (Object)new_AST_Send((Object)send45068, (Object)SMB__equal, 1, (Object)constant8758);
string5223 = (Object)new_Type_String(L"bla a");
constant8759 = (Object)new_AST_Constant((Object)string5223);
// on:
send45070 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8759);
assign5450 = (Object)new_AST_Assign((Object)localvariable6240, (Object)send45070);
// match:
send45071 = (Object)new_AST_Send((Object)localvariable6239, (Object)symbol7846, 1, (Object)localvariable6240);
// should
send45072 = (Object)new_AST_Send((Object)send45071, (Object)symbol7919, 0);
// be
send45073 = (Object)new_AST_Send((Object)send45072, (Object)symbol7989, 0);
// isNil
send45074 = (Object)new_AST_Send((Object)send45073, (Object)SMB_isNil, 0);
// position
send45075 = (Object)new_AST_Send((Object)localvariable6240, (Object)symbol7894, 0);
// should
send45076 = (Object)new_AST_Send((Object)send45075, (Object)symbol7919, 0);
smallint3052 = (Object)new_Type_SmallInt(0);
constant8760 = (Object)new_AST_Constant((Object)smallint3052);
// =
send45077 = (Object)new_AST_Send((Object)send45076, (Object)SMB__equal, 1, (Object)constant8760);
string5224 = (Object)new_Type_String(L"test: d bla: c boe");
constant8761 = (Object)new_AST_Constant((Object)string5224);
// on:
send45078 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8761);
assign5451 = (Object)new_AST_Assign((Object)localvariable6240, (Object)send45078);
// match:
send45079 = (Object)new_AST_Send((Object)localvariable6239, (Object)symbol7846, 1, (Object)localvariable6240);
assign5452 = (Object)new_AST_Assign((Object)localvariable6241, (Object)send45079);
// class
send45080 = (Object)new_AST_Send((Object)localvariable6241, (Object)SMB_class, 0);
// should
send45081 = (Object)new_AST_Send((Object)send45080, (Object)symbol7919, 0);
// =
send45082 = (Object)new_AST_Send((Object)send45081, (Object)SMB__equal, 1, (Object)classreference1173);
// keywords
send45083 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7740, 0);
// should
send45084 = (Object)new_AST_Send((Object)send45083, (Object)symbol7919, 0);
symbol7995 = (Object)new_Type_Symbol_cached(L"with:with:");
string5225 = (Object)new_Type_String(L"test");
constant8762 = (Object)new_AST_Constant((Object)string5225);
string5226 = (Object)new_Type_String(L"bla");
constant8763 = (Object)new_AST_Constant((Object)string5226);
// with:with:
send45085 = (Object)new_AST_Send((Object)classreference1138, (Object)symbol7995, 2, (Object)constant8762, (Object)constant8763);
// =
send45086 = (Object)new_AST_Send((Object)send45084, (Object)SMB__equal, 1, (Object)send45085);
// parameters
send45087 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7735, 0);
// size
send45088 = (Object)new_AST_Send((Object)send45087, (Object)SMB_size, 0);
// should
send45089 = (Object)new_AST_Send((Object)send45088, (Object)symbol7919, 0);
smallint3053 = (Object)new_Type_SmallInt(2);
constant8764 = (Object)new_AST_Constant((Object)smallint3053);
// =
send45090 = (Object)new_AST_Send((Object)send45089, (Object)SMB__equal, 1, (Object)constant8764);
// parameters
send45091 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7735, 0);
// first
send45092 = (Object)new_AST_Send((Object)send45091, (Object)symbol7702, 0);
// should
send45093 = (Object)new_AST_Send((Object)send45092, (Object)symbol7919, 0);
// new
send45094 = (Object)new_AST_Send((Object)classreference1180, (Object)symbol7640, 0);
string5227 = (Object)new_Type_String(L"d");
constant8765 = (Object)new_AST_Constant((Object)string5227);
// name:
send45095 = (Object)new_AST_Send((Object)send45094, (Object)symbol7723, 1, (Object)constant8765);
// =
send45096 = (Object)new_AST_Send((Object)send45093, (Object)SMB__equal, 1, (Object)send45095);
// parameters
send45097 = (Object)new_AST_Send((Object)localvariable6241, (Object)symbol7735, 0);
// second
send45098 = (Object)new_AST_Send((Object)send45097, (Object)symbol7967, 0);
// should
send45099 = (Object)new_AST_Send((Object)send45098, (Object)symbol7919, 0);
// new
send45100 = (Object)new_AST_Send((Object)classreference1180, (Object)symbol7640, 0);
string5228 = (Object)new_Type_String(L"c");
constant8766 = (Object)new_AST_Constant((Object)string5228);
// name:
send45101 = (Object)new_AST_Send((Object)send45100, (Object)symbol7723, 1, (Object)constant8766);
// =
send45102 = (Object)new_AST_Send((Object)send45099, (Object)SMB__equal, 1, (Object)send45101);
// position
send45103 = (Object)new_AST_Send((Object)localvariable6240, (Object)symbol7894, 0);
// should
send45104 = (Object)new_AST_Send((Object)send45103, (Object)symbol7919, 0);
smallint3054 = (Object)new_Type_SmallInt(15);
constant8767 = (Object)new_AST_Constant((Object)smallint3054);
// =
send45105 = (Object)new_AST_Send((Object)send45104, (Object)SMB__equal, 1, (Object)constant8767);
method6101 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4956, 20, assign5447, assign5448, assign5449, send45052, send45056, send45060, send45066, send45069, assign5450, send45074, send45077, assign5451, assign5452, send45082, send45086, send45090, send45096, send45102, send45105, Self);
symbol7583 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure6101 = (Object)new_Runtime_MethodClosure(method6101);
store_method((Type_Class)class1020, (Type_Symbol)symbol7583, (Runtime_MethodClosure)methodclosure6101);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable6242 = (Object)new_AST_Variable_named(L"parser");
localvariable6243 = (Object)new_AST_Variable_named(L"string");
localvariable6244 = (Object)new_AST_Variable_named(L"result");
localvariable6245 = (Object)new_AST_Variable_named(L"arg");
array4957 = (Object)new_Type_Array_with(4, (Object)localvariable6242, (Object)localvariable6243, (Object)localvariable6244, (Object)localvariable6245);
// keywordExpression
send45106 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7971, 0);
assign5453 = (Object)new_AST_Assign((Object)localvariable6242, (Object)send45106);
string5229 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant8768 = (Object)new_AST_Constant((Object)string5229);
// on:
send45107 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8768);
assign5454 = (Object)new_AST_Assign((Object)localvariable6243, (Object)send45107);
// match:
send45108 = (Object)new_AST_Send((Object)localvariable6242, (Object)symbol7846, 1, (Object)localvariable6243);
assign5455 = (Object)new_AST_Assign((Object)localvariable6244, (Object)send45108);
// class
send45109 = (Object)new_AST_Send((Object)localvariable6244, (Object)SMB_class, 0);
// should
send45110 = (Object)new_AST_Send((Object)send45109, (Object)symbol7919, 0);
// =
send45111 = (Object)new_AST_Send((Object)send45110, (Object)SMB__equal, 1, (Object)classreference1195);
// keywords
send45112 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7740, 0);
// asArray
send45113 = (Object)new_AST_Send((Object)send45112, (Object)SMB_asArray, 0);
// should
send45114 = (Object)new_AST_Send((Object)send45113, (Object)symbol7919, 0);
localvariable6246 = (Object)new_AST_Variable_named(L"receiver");
array4958 = (Object)new_Type_Array_with(1, (Object)localvariable6246);
smallint3055 = (Object)new_Type_SmallInt(1);
constant8769 = (Object)new_AST_Constant((Object)smallint3055);
string5230 = (Object)new_Type_String(L"abc");
constant8770 = (Object)new_AST_Constant((Object)string5230);
// at:put:
send45115 = (Object)new_AST_Send((Object)localvariable6246, (Object)SMB_at_put_, 2, (Object)constant8769, (Object)constant8770);
smallint3056 = (Object)new_Type_SmallInt(2);
constant8771 = (Object)new_AST_Constant((Object)smallint3056);
string5231 = (Object)new_Type_String(L"def");
constant8772 = (Object)new_AST_Constant((Object)string5231);
// at:put:
send45116 = (Object)new_AST_Send((Object)localvariable6246, (Object)SMB_at_put_, 2, (Object)constant8771, (Object)constant8772);
smallint3057 = (Object)new_Type_SmallInt(3);
constant8773 = (Object)new_AST_Constant((Object)smallint3057);
string5232 = (Object)new_Type_String(L"ghi");
constant8774 = (Object)new_AST_Constant((Object)string5232);
// at:put:
send45117 = (Object)new_AST_Send((Object)localvariable6246, (Object)SMB_at_put_, 2, (Object)constant8773, (Object)constant8774);
// yourself
send45118 = (Object)new_AST_Send((Object)localvariable6246, (Object)symbol7546, 0);
block2884 = (Object)new_AST_Block_with((Type_Array)array4958, (Type_Array)empty_Type_Array, 1, 4, send45115, send45116, send45117, send45118);
smallint3058 = (Object)new_Type_SmallInt(3);
constant8775 = (Object)new_AST_Constant((Object)smallint3058);
// new:
send45119 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8775);
// value:
send45120 = (Object)new_AST_Send((Object)block2884, (Object)SMB_value_, 1, (Object)send45119);
// =
send45121 = (Object)new_AST_Send((Object)send45114, (Object)SMB__equal, 1, (Object)send45120);
// selector
send45122 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7654, 0);
// class
send45123 = (Object)new_AST_Send((Object)send45122, (Object)SMB_class, 0);
// should
send45124 = (Object)new_AST_Send((Object)send45123, (Object)symbol7919, 0);
// =
send45125 = (Object)new_AST_Send((Object)send45124, (Object)SMB__equal, 1, (Object)classreference1169);
// selector
send45126 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7654, 0);
// printString
send45127 = (Object)new_AST_Send((Object)send45126, (Object)symbol7849, 0);
// should
send45128 = (Object)new_AST_Send((Object)send45127, (Object)symbol7919, 0);
string5233 = (Object)new_Type_String(L"abc:def:ghi:");
constant8776 = (Object)new_AST_Constant((Object)string5233);
// =
send45129 = (Object)new_AST_Send((Object)send45128, (Object)SMB__equal, 1, (Object)constant8776);
// arguments
send45130 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7655, 0);
// first
send45131 = (Object)new_AST_Send((Object)send45130, (Object)symbol7702, 0);
assign5456 = (Object)new_AST_Assign((Object)localvariable6245, (Object)send45131);
// class
send45132 = (Object)new_AST_Send((Object)localvariable6245, (Object)SMB_class, 0);
// should
send45133 = (Object)new_AST_Send((Object)send45132, (Object)symbol7919, 0);
// =
send45134 = (Object)new_AST_Send((Object)send45133, (Object)SMB__equal, 1, (Object)classreference1167);
// arguments
send45135 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7655, 0);
smallint3059 = (Object)new_Type_SmallInt(2);
constant8777 = (Object)new_AST_Constant((Object)smallint3059);
// at:
send45136 = (Object)new_AST_Send((Object)send45135, (Object)SMB_at_, 1, (Object)constant8777);
assign5457 = (Object)new_AST_Assign((Object)localvariable6245, (Object)send45136);
// class
send45137 = (Object)new_AST_Send((Object)localvariable6245, (Object)SMB_class, 0);
// should
send45138 = (Object)new_AST_Send((Object)send45137, (Object)symbol7919, 0);
// =
send45139 = (Object)new_AST_Send((Object)send45138, (Object)SMB__equal, 1, (Object)classreference1191);
// arguments
send45140 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7655, 0);
smallint3060 = (Object)new_Type_SmallInt(3);
constant8778 = (Object)new_AST_Constant((Object)smallint3060);
// at:
send45141 = (Object)new_AST_Send((Object)send45140, (Object)SMB_at_, 1, (Object)constant8778);
assign5458 = (Object)new_AST_Assign((Object)localvariable6245, (Object)send45141);
// class
send45142 = (Object)new_AST_Send((Object)localvariable6245, (Object)SMB_class, 0);
// should
send45143 = (Object)new_AST_Send((Object)send45142, (Object)symbol7919, 0);
// =
send45144 = (Object)new_AST_Send((Object)send45143, (Object)SMB__equal, 1, (Object)classreference1198);
// receiver
send45145 = (Object)new_AST_Send((Object)localvariable6244, (Object)symbol7730, 0);
// class
send45146 = (Object)new_AST_Send((Object)send45145, (Object)SMB_class, 0);
// should
send45147 = (Object)new_AST_Send((Object)send45146, (Object)symbol7919, 0);
// =
send45148 = (Object)new_AST_Send((Object)send45147, (Object)SMB__equal, 1, (Object)classreference1191);
// position
send45149 = (Object)new_AST_Send((Object)localvariable6243, (Object)symbol7894, 0);
// should
send45150 = (Object)new_AST_Send((Object)send45149, (Object)symbol7919, 0);
smallint3061 = (Object)new_Type_SmallInt(29);
constant8779 = (Object)new_AST_Constant((Object)smallint3061);
// =
send45151 = (Object)new_AST_Send((Object)send45150, (Object)SMB__equal, 1, (Object)constant8779);
method6102 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4957, 16, assign5453, assign5454, assign5455, send45111, send45121, send45125, send45129, assign5456, send45134, assign5457, send45139, assign5458, send45144, send45148, send45151, Self);
symbol7616 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure6102 = (Object)new_Runtime_MethodClosure(method6102);
store_method((Type_Class)class1020, (Type_Symbol)symbol7616, (Runtime_MethodClosure)methodclosure6102);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable6247 = (Object)new_AST_Variable_named(L"parser");
localvariable6248 = (Object)new_AST_Variable_named(L"string");
localvariable6249 = (Object)new_AST_Variable_named(L"result");
array4959 = (Object)new_Type_Array_with(3, (Object)localvariable6247, (Object)localvariable6248, (Object)localvariable6249);
// messageExpression
send45152 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7943, 0);
assign5459 = (Object)new_AST_Assign((Object)localvariable6247, (Object)send45152);
string5234 = (Object)new_Type_String(L"super+4");
constant8780 = (Object)new_AST_Constant((Object)string5234);
// on:
send45153 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8780);
assign5460 = (Object)new_AST_Assign((Object)localvariable6248, (Object)send45153);
// match:
send45154 = (Object)new_AST_Send((Object)localvariable6247, (Object)symbol7846, 1, (Object)localvariable6248);
assign5461 = (Object)new_AST_Assign((Object)localvariable6249, (Object)send45154);
// class
send45155 = (Object)new_AST_Send((Object)localvariable6249, (Object)SMB_class, 0);
// should
send45156 = (Object)new_AST_Send((Object)send45155, (Object)symbol7919, 0);
// =
send45157 = (Object)new_AST_Send((Object)send45156, (Object)SMB__equal, 1, (Object)classreference1191);
// receiver
send45158 = (Object)new_AST_Send((Object)localvariable6249, (Object)symbol7730, 0);
// class
send45159 = (Object)new_AST_Send((Object)send45158, (Object)SMB_class, 0);
// should
send45160 = (Object)new_AST_Send((Object)send45159, (Object)symbol7919, 0);
// =
send45161 = (Object)new_AST_Send((Object)send45160, (Object)SMB__equal, 1, (Object)classreference1176);
string5235 = (Object)new_Type_String(L"self a: 4 b: 3");
constant8781 = (Object)new_AST_Constant((Object)string5235);
// on:
send45162 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8781);
assign5462 = (Object)new_AST_Assign((Object)localvariable6248, (Object)send45162);
// match:
send45163 = (Object)new_AST_Send((Object)localvariable6247, (Object)symbol7846, 1, (Object)localvariable6248);
assign5463 = (Object)new_AST_Assign((Object)localvariable6249, (Object)send45163);
// class
send45164 = (Object)new_AST_Send((Object)localvariable6249, (Object)SMB_class, 0);
// should
send45165 = (Object)new_AST_Send((Object)send45164, (Object)symbol7919, 0);
// =
send45166 = (Object)new_AST_Send((Object)send45165, (Object)SMB__equal, 1, (Object)classreference1195);
// receiver
send45167 = (Object)new_AST_Send((Object)localvariable6249, (Object)symbol7730, 0);
// class
send45168 = (Object)new_AST_Send((Object)send45167, (Object)SMB_class, 0);
// should
send45169 = (Object)new_AST_Send((Object)send45168, (Object)symbol7919, 0);
// =
send45170 = (Object)new_AST_Send((Object)send45169, (Object)SMB__equal, 1, (Object)classreference1175);
string5236 = (Object)new_Type_String(L"2 d");
constant8782 = (Object)new_AST_Constant((Object)string5236);
// on:
send45171 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8782);
assign5464 = (Object)new_AST_Assign((Object)localvariable6248, (Object)send45171);
// match:
send45172 = (Object)new_AST_Send((Object)localvariable6247, (Object)symbol7846, 1, (Object)localvariable6248);
assign5465 = (Object)new_AST_Assign((Object)localvariable6249, (Object)send45172);
// class
send45173 = (Object)new_AST_Send((Object)localvariable6249, (Object)SMB_class, 0);
// should
send45174 = (Object)new_AST_Send((Object)send45173, (Object)symbol7919, 0);
// =
send45175 = (Object)new_AST_Send((Object)send45174, (Object)SMB__equal, 1, (Object)classreference1198);
// receiver
send45176 = (Object)new_AST_Send((Object)localvariable6249, (Object)symbol7730, 0);
// class
send45177 = (Object)new_AST_Send((Object)send45176, (Object)SMB_class, 0);
// should
send45178 = (Object)new_AST_Send((Object)send45177, (Object)symbol7919, 0);
// =
send45179 = (Object)new_AST_Send((Object)send45178, (Object)SMB__equal, 1, (Object)classreference1167);
// receiver
send45180 = (Object)new_AST_Send((Object)localvariable6249, (Object)symbol7730, 0);
// asInteger
send45181 = (Object)new_AST_Send((Object)send45180, (Object)symbol7712, 0);
// should
send45182 = (Object)new_AST_Send((Object)send45181, (Object)symbol7919, 0);
smallint3062 = (Object)new_Type_SmallInt(2);
constant8783 = (Object)new_AST_Constant((Object)smallint3062);
// =
send45183 = (Object)new_AST_Send((Object)send45182, (Object)SMB__equal, 1, (Object)constant8783);
method6103 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4959, 15, assign5459, assign5460, assign5461, send45157, send45161, assign5462, assign5463, send45166, send45170, assign5464, assign5465, send45175, send45179, send45183, Self);
symbol7601 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure6103 = (Object)new_Runtime_MethodClosure(method6103);
store_method((Type_Class)class1020, (Type_Symbol)symbol7601, (Runtime_MethodClosure)methodclosure6103);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable6250 = (Object)new_AST_Variable_named(L"parser");
localvariable6251 = (Object)new_AST_Variable_named(L"string");
localvariable6252 = (Object)new_AST_Variable_named(L"message");
localvariable6253 = (Object)new_AST_Variable_named(L"return");
array4960 = (Object)new_Type_Array_with(4, (Object)localvariable6250, (Object)localvariable6251, (Object)localvariable6252, (Object)localvariable6253);
// messageExpression
send45184 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7943, 0);
assign5466 = (Object)new_AST_Assign((Object)localvariable6250, (Object)send45184);
string5237 = (Object)new_Type_String(L"super do: this and: that");
constant8784 = (Object)new_AST_Constant((Object)string5237);
// on:
send45185 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8784);
assign5467 = (Object)new_AST_Assign((Object)localvariable6251, (Object)send45185);
// match:
send45186 = (Object)new_AST_Send((Object)localvariable6250, (Object)symbol7846, 1, (Object)localvariable6251);
assign5468 = (Object)new_AST_Assign((Object)localvariable6252, (Object)send45186);
// receiver
send45187 = (Object)new_AST_Send((Object)localvariable6252, (Object)symbol7730, 0);
// class
send45188 = (Object)new_AST_Send((Object)send45187, (Object)SMB_class, 0);
// should
send45189 = (Object)new_AST_Send((Object)send45188, (Object)symbol7919, 0);
// =
send45190 = (Object)new_AST_Send((Object)send45189, (Object)SMB__equal, 1, (Object)classreference1176);
// return
send45191 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7988, 0);
assign5469 = (Object)new_AST_Assign((Object)localvariable6250, (Object)send45191);
string5238 = (Object)new_Type_String(L"^ super do: this and: that");
constant8785 = (Object)new_AST_Constant((Object)string5238);
// on:
send45192 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8785);
assign5470 = (Object)new_AST_Assign((Object)localvariable6251, (Object)send45192);
// match:
send45193 = (Object)new_AST_Send((Object)localvariable6250, (Object)symbol7846, 1, (Object)localvariable6251);
assign5471 = (Object)new_AST_Assign((Object)localvariable6253, (Object)send45193);
// class
send45194 = (Object)new_AST_Send((Object)localvariable6253, (Object)SMB_class, 0);
// should
send45195 = (Object)new_AST_Send((Object)send45194, (Object)symbol7919, 0);
// =
send45196 = (Object)new_AST_Send((Object)send45195, (Object)SMB__equal, 1, (Object)classreference1192);
// expression
send45197 = (Object)new_AST_Send((Object)localvariable6253, (Object)symbol7757, 0);
// receiver
send45198 = (Object)new_AST_Send((Object)send45197, (Object)symbol7730, 0);
// class
send45199 = (Object)new_AST_Send((Object)send45198, (Object)SMB_class, 0);
// should
send45200 = (Object)new_AST_Send((Object)send45199, (Object)symbol7919, 0);
// =
send45201 = (Object)new_AST_Send((Object)send45200, (Object)SMB__equal, 1, (Object)classreference1176);
method6104 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4960, 10, assign5466, assign5467, assign5468, send45190, assign5469, assign5470, assign5471, send45196, send45201, Self);
symbol7621 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure6104 = (Object)new_Runtime_MethodClosure(method6104);
store_method((Type_Class)class1020, (Type_Symbol)symbol7621, (Runtime_MethodClosure)methodclosure6104);


// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable6254 = (Object)new_AST_Variable_named(L"string");
localvariable6255 = (Object)new_AST_Variable_named(L"result");
localvariable6256 = (Object)new_AST_Variable_named(L"var");
localvariable6257 = (Object)new_AST_Variable_named(L"parser");
array4961 = (Object)new_Type_Array_with(4, (Object)localvariable6254, (Object)localvariable6255, (Object)localvariable6256, (Object)localvariable6257);
// blockArguments
send45202 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7960, 0);
assign5472 = (Object)new_AST_Assign((Object)localvariable6257, (Object)send45202);
string5239 = (Object)new_Type_String(L":abcd :def");
constant8786 = (Object)new_AST_Constant((Object)string5239);
// on:
send45203 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8786);
assign5473 = (Object)new_AST_Assign((Object)localvariable6254, (Object)send45203);
// match:
send45204 = (Object)new_AST_Send((Object)localvariable6257, (Object)symbol7846, 1, (Object)localvariable6254);
assign5474 = (Object)new_AST_Assign((Object)localvariable6255, (Object)send45204);
// position
send45205 = (Object)new_AST_Send((Object)localvariable6254, (Object)symbol7894, 0);
// should
send45206 = (Object)new_AST_Send((Object)send45205, (Object)symbol7919, 0);
smallint3063 = (Object)new_Type_SmallInt(10);
constant8787 = (Object)new_AST_Constant((Object)smallint3063);
// =
send45207 = (Object)new_AST_Send((Object)send45206, (Object)SMB__equal, 1, (Object)constant8787);
// class
send45208 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_class, 0);
// should
send45209 = (Object)new_AST_Send((Object)send45208, (Object)symbol7919, 0);
// =
send45210 = (Object)new_AST_Send((Object)send45209, (Object)SMB__equal, 1, (Object)classreference1138);
// size
send45211 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_size, 0);
// should
send45212 = (Object)new_AST_Send((Object)send45211, (Object)symbol7919, 0);
smallint3064 = (Object)new_Type_SmallInt(2);
constant8788 = (Object)new_AST_Constant((Object)smallint3064);
// =
send45213 = (Object)new_AST_Send((Object)send45212, (Object)SMB__equal, 1, (Object)constant8788);
smallint3065 = (Object)new_Type_SmallInt(1);
constant8789 = (Object)new_AST_Constant((Object)smallint3065);
// at:
send45214 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_at_, 1, (Object)constant8789);
assign5475 = (Object)new_AST_Assign((Object)localvariable6256, (Object)send45214);
// class
send45215 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_class, 0);
// should
send45216 = (Object)new_AST_Send((Object)send45215, (Object)symbol7919, 0);
// =
send45217 = (Object)new_AST_Send((Object)send45216, (Object)SMB__equal, 1, (Object)classreference1180);
// name
send45218 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_name, 0);
// should
send45219 = (Object)new_AST_Send((Object)send45218, (Object)symbol7919, 0);
string5240 = (Object)new_Type_String(L"abcd");
constant8790 = (Object)new_AST_Constant((Object)string5240);
// =
send45220 = (Object)new_AST_Send((Object)send45219, (Object)SMB__equal, 1, (Object)constant8790);
smallint3066 = (Object)new_Type_SmallInt(2);
constant8791 = (Object)new_AST_Constant((Object)smallint3066);
// at:
send45221 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_at_, 1, (Object)constant8791);
assign5476 = (Object)new_AST_Assign((Object)localvariable6256, (Object)send45221);
// class
send45222 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_class, 0);
// should
send45223 = (Object)new_AST_Send((Object)send45222, (Object)symbol7919, 0);
// =
send45224 = (Object)new_AST_Send((Object)send45223, (Object)SMB__equal, 1, (Object)classreference1180);
// name
send45225 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_name, 0);
// should
send45226 = (Object)new_AST_Send((Object)send45225, (Object)symbol7919, 0);
string5241 = (Object)new_Type_String(L"def");
constant8792 = (Object)new_AST_Constant((Object)string5241);
// =
send45227 = (Object)new_AST_Send((Object)send45226, (Object)SMB__equal, 1, (Object)constant8792);
string5242 = (Object)new_Type_String(L" :  abcd:   def ");
constant8793 = (Object)new_AST_Constant((Object)string5242);
// on:
send45228 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8793);
assign5477 = (Object)new_AST_Assign((Object)localvariable6254, (Object)send45228);
// match:
send45229 = (Object)new_AST_Send((Object)localvariable6257, (Object)symbol7846, 1, (Object)localvariable6254);
assign5478 = (Object)new_AST_Assign((Object)localvariable6255, (Object)send45229);
// position
send45230 = (Object)new_AST_Send((Object)localvariable6254, (Object)symbol7894, 0);
// should
send45231 = (Object)new_AST_Send((Object)send45230, (Object)symbol7919, 0);
smallint3067 = (Object)new_Type_SmallInt(16);
constant8794 = (Object)new_AST_Constant((Object)smallint3067);
// =
send45232 = (Object)new_AST_Send((Object)send45231, (Object)SMB__equal, 1, (Object)constant8794);
// class
send45233 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_class, 0);
// should
send45234 = (Object)new_AST_Send((Object)send45233, (Object)symbol7919, 0);
// =
send45235 = (Object)new_AST_Send((Object)send45234, (Object)SMB__equal, 1, (Object)classreference1138);
// size
send45236 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_size, 0);
// should
send45237 = (Object)new_AST_Send((Object)send45236, (Object)symbol7919, 0);
smallint3068 = (Object)new_Type_SmallInt(2);
constant8795 = (Object)new_AST_Constant((Object)smallint3068);
// =
send45238 = (Object)new_AST_Send((Object)send45237, (Object)SMB__equal, 1, (Object)constant8795);
// first
send45239 = (Object)new_AST_Send((Object)localvariable6255, (Object)symbol7702, 0);
assign5479 = (Object)new_AST_Assign((Object)localvariable6256, (Object)send45239);
// class
send45240 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_class, 0);
// should
send45241 = (Object)new_AST_Send((Object)send45240, (Object)symbol7919, 0);
// =
send45242 = (Object)new_AST_Send((Object)send45241, (Object)SMB__equal, 1, (Object)classreference1180);
// name
send45243 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_name, 0);
// should
send45244 = (Object)new_AST_Send((Object)send45243, (Object)symbol7919, 0);
string5243 = (Object)new_Type_String(L"abcd");
constant8796 = (Object)new_AST_Constant((Object)string5243);
// =
send45245 = (Object)new_AST_Send((Object)send45244, (Object)SMB__equal, 1, (Object)constant8796);
smallint3069 = (Object)new_Type_SmallInt(2);
constant8797 = (Object)new_AST_Constant((Object)smallint3069);
// at:
send45246 = (Object)new_AST_Send((Object)localvariable6255, (Object)SMB_at_, 1, (Object)constant8797);
assign5480 = (Object)new_AST_Assign((Object)localvariable6256, (Object)send45246);
// class
send45247 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_class, 0);
// should
send45248 = (Object)new_AST_Send((Object)send45247, (Object)symbol7919, 0);
// =
send45249 = (Object)new_AST_Send((Object)send45248, (Object)SMB__equal, 1, (Object)classreference1180);
// name
send45250 = (Object)new_AST_Send((Object)localvariable6256, (Object)SMB_name, 0);
// should
send45251 = (Object)new_AST_Send((Object)send45250, (Object)symbol7919, 0);
string5244 = (Object)new_Type_String(L"def");
constant8798 = (Object)new_AST_Constant((Object)string5244);
// =
send45252 = (Object)new_AST_Send((Object)send45251, (Object)SMB__equal, 1, (Object)constant8798);
method6105 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4961, 24, assign5472, assign5473, assign5474, send45207, send45210, send45213, assign5475, send45217, send45220, assign5476, send45224, send45227, assign5477, assign5478, send45232, send45235, send45238, assign5479, send45242, send45245, assign5480, send45249, send45252, Self);
symbol7565 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure6105 = (Object)new_Runtime_MethodClosure(method6105);
store_method((Type_Class)class1020, (Type_Symbol)symbol7565, (Runtime_MethodClosure)methodclosure6105);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable6258 = (Object)new_AST_Variable_named(L"parser");
localvariable6259 = (Object)new_AST_Variable_named(L"string");
array4962 = (Object)new_Type_Array_with(2, (Object)localvariable6258, (Object)localvariable6259);
// symbolKeywords
send45253 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7983, 0);
assign5481 = (Object)new_AST_Assign((Object)localvariable6258, (Object)send45253);
string5245 = (Object)new_Type_String(L"abcd:def: ");
constant8799 = (Object)new_AST_Constant((Object)string5245);
// on:
send45254 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8799);
assign5482 = (Object)new_AST_Assign((Object)localvariable6259, (Object)send45254);
// match:
send45255 = (Object)new_AST_Send((Object)localvariable6258, (Object)symbol7846, 1, (Object)localvariable6259);
// should
send45256 = (Object)new_AST_Send((Object)send45255, (Object)symbol7919, 0);
string5246 = (Object)new_Type_String(L"abcd:def:");
constant8800 = (Object)new_AST_Constant((Object)string5246);
// =
send45257 = (Object)new_AST_Send((Object)send45256, (Object)SMB__equal, 1, (Object)constant8800);
// position
send45258 = (Object)new_AST_Send((Object)localvariable6259, (Object)symbol7894, 0);
// should
send45259 = (Object)new_AST_Send((Object)send45258, (Object)symbol7919, 0);
smallint3070 = (Object)new_Type_SmallInt(9);
constant8801 = (Object)new_AST_Constant((Object)smallint3070);
// =
send45260 = (Object)new_AST_Send((Object)send45259, (Object)SMB__equal, 1, (Object)constant8801);
string5247 = (Object)new_Type_String(L"abcd ");
constant8802 = (Object)new_AST_Constant((Object)string5247);
// on:
send45261 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8802);
assign5483 = (Object)new_AST_Assign((Object)localvariable6259, (Object)send45261);
// match:
send45262 = (Object)new_AST_Send((Object)localvariable6258, (Object)symbol7846, 1, (Object)localvariable6259);
// should
send45263 = (Object)new_AST_Send((Object)send45262, (Object)symbol7919, 0);
// be
send45264 = (Object)new_AST_Send((Object)send45263, (Object)symbol7989, 0);
// isNil
send45265 = (Object)new_AST_Send((Object)send45264, (Object)SMB_isNil, 0);
// position
send45266 = (Object)new_AST_Send((Object)localvariable6259, (Object)symbol7894, 0);
// should
send45267 = (Object)new_AST_Send((Object)send45266, (Object)symbol7919, 0);
smallint3071 = (Object)new_Type_SmallInt(0);
constant8803 = (Object)new_AST_Constant((Object)smallint3071);
// =
send45268 = (Object)new_AST_Send((Object)send45267, (Object)SMB__equal, 1, (Object)constant8803);
method6106 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4962, 8, assign5481, assign5482, send45257, send45260, assign5483, send45265, send45268, Self);
symbol7593 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure6106 = (Object)new_Runtime_MethodClosure(method6106);
store_method((Type_Class)class1020, (Type_Symbol)symbol7593, (Runtime_MethodClosure)methodclosure6106);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable6260 = (Object)new_AST_Variable_named(L"parser");
localvariable6261 = (Object)new_AST_Variable_named(L"ast");
array4963 = (Object)new_Type_Array_with(2, (Object)localvariable6260, (Object)localvariable6261);
// statements
send45269 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7745, 0);
assign5484 = (Object)new_AST_Assign((Object)localvariable6260, (Object)send45269);
string5248 = (Object)new_Type_String(L"2 fib + 3 ");
constant8804 = (Object)new_AST_Constant((Object)string5248);
// on:
send45270 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8804);
// match:
send45271 = (Object)new_AST_Send((Object)localvariable6260, (Object)symbol7846, 1, (Object)send45270);
// first
send45272 = (Object)new_AST_Send((Object)send45271, (Object)symbol7702, 0);
assign5485 = (Object)new_AST_Assign((Object)localvariable6261, (Object)send45272);
// class
send45273 = (Object)new_AST_Send((Object)localvariable6261, (Object)SMB_class, 0);
// should
send45274 = (Object)new_AST_Send((Object)send45273, (Object)symbol7919, 0);
// =
send45275 = (Object)new_AST_Send((Object)send45274, (Object)SMB__equal, 1, (Object)classreference1191);
// receiver
send45276 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7730, 0);
// class
send45277 = (Object)new_AST_Send((Object)send45276, (Object)SMB_class, 0);
// should
send45278 = (Object)new_AST_Send((Object)send45277, (Object)symbol7919, 0);
// =
send45279 = (Object)new_AST_Send((Object)send45278, (Object)SMB__equal, 1, (Object)classreference1198);
// receiver
send45280 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7730, 0);
// receiver
send45281 = (Object)new_AST_Send((Object)send45280, (Object)symbol7730, 0);
// class
send45282 = (Object)new_AST_Send((Object)send45281, (Object)SMB_class, 0);
// should
send45283 = (Object)new_AST_Send((Object)send45282, (Object)symbol7919, 0);
// =
send45284 = (Object)new_AST_Send((Object)send45283, (Object)SMB__equal, 1, (Object)classreference1167);
// receiver
send45285 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7730, 0);
// receiver
send45286 = (Object)new_AST_Send((Object)send45285, (Object)symbol7730, 0);
// number
send45287 = (Object)new_AST_Send((Object)send45286, (Object)symbol7710, 0);
// should
send45288 = (Object)new_AST_Send((Object)send45287, (Object)symbol7919, 0);
string5249 = (Object)new_Type_String(L"2");
constant8805 = (Object)new_AST_Constant((Object)string5249);
// =
send45289 = (Object)new_AST_Send((Object)send45288, (Object)SMB__equal, 1, (Object)constant8805);
// receiver
send45290 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7730, 0);
// selector
send45291 = (Object)new_AST_Send((Object)send45290, (Object)symbol7654, 0);
// asString
send45292 = (Object)new_AST_Send((Object)send45291, (Object)SMB_asString, 0);
// should
send45293 = (Object)new_AST_Send((Object)send45292, (Object)symbol7919, 0);
string5250 = (Object)new_Type_String(L"fib");
constant8806 = (Object)new_AST_Constant((Object)string5250);
// =
send45294 = (Object)new_AST_Send((Object)send45293, (Object)SMB__equal, 1, (Object)constant8806);
// selector
send45295 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7654, 0);
// asString
send45296 = (Object)new_AST_Send((Object)send45295, (Object)SMB_asString, 0);
// should
send45297 = (Object)new_AST_Send((Object)send45296, (Object)symbol7919, 0);
string5251 = (Object)new_Type_String(L"+");
constant8807 = (Object)new_AST_Constant((Object)string5251);
// =
send45298 = (Object)new_AST_Send((Object)send45297, (Object)SMB__equal, 1, (Object)constant8807);
// argument
send45299 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7738, 0);
// class
send45300 = (Object)new_AST_Send((Object)send45299, (Object)SMB_class, 0);
// should
send45301 = (Object)new_AST_Send((Object)send45300, (Object)symbol7919, 0);
// =
send45302 = (Object)new_AST_Send((Object)send45301, (Object)SMB__equal, 1, (Object)classreference1167);
// argument
send45303 = (Object)new_AST_Send((Object)localvariable6261, (Object)symbol7738, 0);
// number
send45304 = (Object)new_AST_Send((Object)send45303, (Object)symbol7710, 0);
// should
send45305 = (Object)new_AST_Send((Object)send45304, (Object)symbol7919, 0);
string5252 = (Object)new_Type_String(L"3");
constant8808 = (Object)new_AST_Constant((Object)string5252);
// =
send45306 = (Object)new_AST_Send((Object)send45305, (Object)SMB__equal, 1, (Object)constant8808);
method6107 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4963, 11, assign5484, assign5485, send45275, send45279, send45284, send45289, send45294, send45298, send45302, send45306, Self);
symbol7611 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure6107 = (Object)new_Runtime_MethodClosure(method6107);
store_method((Type_Class)class1020, (Type_Symbol)symbol7611, (Runtime_MethodClosure)methodclosure6107);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable6262 = (Object)new_AST_Variable_named(L"parser");
localvariable6263 = (Object)new_AST_Variable_named(L"string");
localvariable6264 = (Object)new_AST_Variable_named(L"result");
array4964 = (Object)new_Type_Array_with(3, (Object)localvariable6262, (Object)localvariable6263, (Object)localvariable6264);
// block
send45307 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7947, 0);
assign5486 = (Object)new_AST_Assign((Object)localvariable6262, (Object)send45307);
string5253 = (Object)new_Type_String(L"[]");
constant8809 = (Object)new_AST_Constant((Object)string5253);
// on:
send45308 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8809);
assign5487 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45308);
// match:
send45309 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5488 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45309);
// class
send45310 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45311 = (Object)new_AST_Send((Object)send45310, (Object)symbol7919, 0);
// =
send45312 = (Object)new_AST_Send((Object)send45311, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45313 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45314 = (Object)new_AST_Send((Object)send45313, (Object)SMB_size, 0);
// should
send45315 = (Object)new_AST_Send((Object)send45314, (Object)symbol7919, 0);
smallint3072 = (Object)new_Type_SmallInt(0);
constant8810 = (Object)new_AST_Constant((Object)smallint3072);
// =
send45316 = (Object)new_AST_Send((Object)send45315, (Object)SMB__equal, 1, (Object)constant8810);
// parameters
send45317 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45318 = (Object)new_AST_Send((Object)send45317, (Object)SMB_size, 0);
// should
send45319 = (Object)new_AST_Send((Object)send45318, (Object)symbol7919, 0);
smallint3073 = (Object)new_Type_SmallInt(0);
constant8811 = (Object)new_AST_Constant((Object)smallint3073);
// =
send45320 = (Object)new_AST_Send((Object)send45319, (Object)SMB__equal, 1, (Object)constant8811);
// statements
send45321 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45322 = (Object)new_AST_Send((Object)send45321, (Object)SMB_size, 0);
// should
send45323 = (Object)new_AST_Send((Object)send45322, (Object)symbol7919, 0);
smallint3074 = (Object)new_Type_SmallInt(0);
constant8812 = (Object)new_AST_Constant((Object)smallint3074);
// =
send45324 = (Object)new_AST_Send((Object)send45323, (Object)SMB__equal, 1, (Object)constant8812);
string5254 = (Object)new_Type_String(L"[||]");
constant8813 = (Object)new_AST_Constant((Object)string5254);
// on:
send45325 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8813);
assign5489 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45325);
// match:
send45326 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5490 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45326);
// class
send45327 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45328 = (Object)new_AST_Send((Object)send45327, (Object)symbol7919, 0);
// =
send45329 = (Object)new_AST_Send((Object)send45328, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45330 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45331 = (Object)new_AST_Send((Object)send45330, (Object)SMB_size, 0);
// should
send45332 = (Object)new_AST_Send((Object)send45331, (Object)symbol7919, 0);
smallint3075 = (Object)new_Type_SmallInt(0);
constant8814 = (Object)new_AST_Constant((Object)smallint3075);
// =
send45333 = (Object)new_AST_Send((Object)send45332, (Object)SMB__equal, 1, (Object)constant8814);
// parameters
send45334 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45335 = (Object)new_AST_Send((Object)send45334, (Object)SMB_size, 0);
// should
send45336 = (Object)new_AST_Send((Object)send45335, (Object)symbol7919, 0);
smallint3076 = (Object)new_Type_SmallInt(0);
constant8815 = (Object)new_AST_Constant((Object)smallint3076);
// =
send45337 = (Object)new_AST_Send((Object)send45336, (Object)SMB__equal, 1, (Object)constant8815);
// statements
send45338 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45339 = (Object)new_AST_Send((Object)send45338, (Object)SMB_size, 0);
// should
send45340 = (Object)new_AST_Send((Object)send45339, (Object)symbol7919, 0);
smallint3077 = (Object)new_Type_SmallInt(0);
constant8816 = (Object)new_AST_Constant((Object)smallint3077);
// =
send45341 = (Object)new_AST_Send((Object)send45340, (Object)SMB__equal, 1, (Object)constant8816);
string5255 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant8817 = (Object)new_AST_Constant((Object)string5255);
// on:
send45342 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8817);
assign5491 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45342);
// match:
send45343 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5492 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45343);
// class
send45344 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45345 = (Object)new_AST_Send((Object)send45344, (Object)symbol7919, 0);
// =
send45346 = (Object)new_AST_Send((Object)send45345, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45347 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45348 = (Object)new_AST_Send((Object)send45347, (Object)SMB_size, 0);
// should
send45349 = (Object)new_AST_Send((Object)send45348, (Object)symbol7919, 0);
smallint3078 = (Object)new_Type_SmallInt(0);
constant8818 = (Object)new_AST_Constant((Object)smallint3078);
// =
send45350 = (Object)new_AST_Send((Object)send45349, (Object)SMB__equal, 1, (Object)constant8818);
// parameters
send45351 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45352 = (Object)new_AST_Send((Object)send45351, (Object)SMB_size, 0);
// should
send45353 = (Object)new_AST_Send((Object)send45352, (Object)symbol7919, 0);
smallint3079 = (Object)new_Type_SmallInt(4);
constant8819 = (Object)new_AST_Constant((Object)smallint3079);
// =
send45354 = (Object)new_AST_Send((Object)send45353, (Object)SMB__equal, 1, (Object)constant8819);
// statements
send45355 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45356 = (Object)new_AST_Send((Object)send45355, (Object)SMB_size, 0);
// should
send45357 = (Object)new_AST_Send((Object)send45356, (Object)symbol7919, 0);
smallint3080 = (Object)new_Type_SmallInt(0);
constant8820 = (Object)new_AST_Constant((Object)smallint3080);
// =
send45358 = (Object)new_AST_Send((Object)send45357, (Object)SMB__equal, 1, (Object)constant8820);
string5256 = (Object)new_Type_String(L"[ | a   f d| ]");
constant8821 = (Object)new_AST_Constant((Object)string5256);
// on:
send45359 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8821);
assign5493 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45359);
// match:
send45360 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5494 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45360);
// class
send45361 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45362 = (Object)new_AST_Send((Object)send45361, (Object)symbol7919, 0);
// =
send45363 = (Object)new_AST_Send((Object)send45362, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45364 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45365 = (Object)new_AST_Send((Object)send45364, (Object)SMB_size, 0);
// should
send45366 = (Object)new_AST_Send((Object)send45365, (Object)symbol7919, 0);
smallint3081 = (Object)new_Type_SmallInt(3);
constant8822 = (Object)new_AST_Constant((Object)smallint3081);
// =
send45367 = (Object)new_AST_Send((Object)send45366, (Object)SMB__equal, 1, (Object)constant8822);
// parameters
send45368 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45369 = (Object)new_AST_Send((Object)send45368, (Object)SMB_size, 0);
// should
send45370 = (Object)new_AST_Send((Object)send45369, (Object)symbol7919, 0);
smallint3082 = (Object)new_Type_SmallInt(0);
constant8823 = (Object)new_AST_Constant((Object)smallint3082);
// =
send45371 = (Object)new_AST_Send((Object)send45370, (Object)SMB__equal, 1, (Object)constant8823);
// statements
send45372 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45373 = (Object)new_AST_Send((Object)send45372, (Object)SMB_size, 0);
// should
send45374 = (Object)new_AST_Send((Object)send45373, (Object)symbol7919, 0);
smallint3083 = (Object)new_Type_SmallInt(0);
constant8824 = (Object)new_AST_Constant((Object)smallint3083);
// =
send45375 = (Object)new_AST_Send((Object)send45374, (Object)SMB__equal, 1, (Object)constant8824);
string5257 = (Object)new_Type_String(L"[ || b. d ]");
constant8825 = (Object)new_AST_Constant((Object)string5257);
// on:
send45376 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8825);
assign5495 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45376);
// match:
send45377 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5496 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45377);
// class
send45378 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45379 = (Object)new_AST_Send((Object)send45378, (Object)symbol7919, 0);
// =
send45380 = (Object)new_AST_Send((Object)send45379, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45381 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45382 = (Object)new_AST_Send((Object)send45381, (Object)SMB_size, 0);
// should
send45383 = (Object)new_AST_Send((Object)send45382, (Object)symbol7919, 0);
smallint3084 = (Object)new_Type_SmallInt(0);
constant8826 = (Object)new_AST_Constant((Object)smallint3084);
// =
send45384 = (Object)new_AST_Send((Object)send45383, (Object)SMB__equal, 1, (Object)constant8826);
// parameters
send45385 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45386 = (Object)new_AST_Send((Object)send45385, (Object)SMB_size, 0);
// should
send45387 = (Object)new_AST_Send((Object)send45386, (Object)symbol7919, 0);
smallint3085 = (Object)new_Type_SmallInt(0);
constant8827 = (Object)new_AST_Constant((Object)smallint3085);
// =
send45388 = (Object)new_AST_Send((Object)send45387, (Object)SMB__equal, 1, (Object)constant8827);
// statements
send45389 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45390 = (Object)new_AST_Send((Object)send45389, (Object)SMB_size, 0);
// should
send45391 = (Object)new_AST_Send((Object)send45390, (Object)symbol7919, 0);
smallint3086 = (Object)new_Type_SmallInt(2);
constant8828 = (Object)new_AST_Constant((Object)smallint3086);
// =
send45392 = (Object)new_AST_Send((Object)send45391, (Object)SMB__equal, 1, (Object)constant8828);
string5258 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant8829 = (Object)new_AST_Constant((Object)string5258);
// on:
send45393 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8829);
assign5497 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45393);
// match:
send45394 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5498 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45394);
// class
send45395 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45396 = (Object)new_AST_Send((Object)send45395, (Object)symbol7919, 0);
// =
send45397 = (Object)new_AST_Send((Object)send45396, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45398 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45399 = (Object)new_AST_Send((Object)send45398, (Object)SMB_size, 0);
// should
send45400 = (Object)new_AST_Send((Object)send45399, (Object)symbol7919, 0);
smallint3087 = (Object)new_Type_SmallInt(0);
constant8830 = (Object)new_AST_Constant((Object)smallint3087);
// =
send45401 = (Object)new_AST_Send((Object)send45400, (Object)SMB__equal, 1, (Object)constant8830);
// parameters
send45402 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45403 = (Object)new_AST_Send((Object)send45402, (Object)SMB_size, 0);
// should
send45404 = (Object)new_AST_Send((Object)send45403, (Object)symbol7919, 0);
smallint3088 = (Object)new_Type_SmallInt(0);
constant8831 = (Object)new_AST_Constant((Object)smallint3088);
// =
send45405 = (Object)new_AST_Send((Object)send45404, (Object)SMB__equal, 1, (Object)constant8831);
// statements
send45406 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45407 = (Object)new_AST_Send((Object)send45406, (Object)SMB_size, 0);
// should
send45408 = (Object)new_AST_Send((Object)send45407, (Object)symbol7919, 0);
smallint3089 = (Object)new_Type_SmallInt(2);
constant8832 = (Object)new_AST_Constant((Object)smallint3089);
// =
send45409 = (Object)new_AST_Send((Object)send45408, (Object)SMB__equal, 1, (Object)constant8832);
string5259 = (Object)new_Type_String(L"[ || b. d. ]");
constant8833 = (Object)new_AST_Constant((Object)string5259);
// on:
send45410 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8833);
assign5499 = (Object)new_AST_Assign((Object)localvariable6263, (Object)send45410);
// match:
send45411 = (Object)new_AST_Send((Object)localvariable6262, (Object)symbol7846, 1, (Object)localvariable6263);
assign5500 = (Object)new_AST_Assign((Object)localvariable6264, (Object)send45411);
// class
send45412 = (Object)new_AST_Send((Object)localvariable6264, (Object)SMB_class, 0);
// should
send45413 = (Object)new_AST_Send((Object)send45412, (Object)symbol7919, 0);
// =
send45414 = (Object)new_AST_Send((Object)send45413, (Object)SMB__equal, 1, (Object)classreference1183);
// temporaries
send45415 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7749, 0);
// size
send45416 = (Object)new_AST_Send((Object)send45415, (Object)SMB_size, 0);
// should
send45417 = (Object)new_AST_Send((Object)send45416, (Object)symbol7919, 0);
smallint3090 = (Object)new_Type_SmallInt(0);
constant8834 = (Object)new_AST_Constant((Object)smallint3090);
// =
send45418 = (Object)new_AST_Send((Object)send45417, (Object)SMB__equal, 1, (Object)constant8834);
// parameters
send45419 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7735, 0);
// size
send45420 = (Object)new_AST_Send((Object)send45419, (Object)SMB_size, 0);
// should
send45421 = (Object)new_AST_Send((Object)send45420, (Object)symbol7919, 0);
smallint3091 = (Object)new_Type_SmallInt(0);
constant8835 = (Object)new_AST_Constant((Object)smallint3091);
// =
send45422 = (Object)new_AST_Send((Object)send45421, (Object)SMB__equal, 1, (Object)constant8835);
// statements
send45423 = (Object)new_AST_Send((Object)localvariable6264, (Object)symbol7745, 0);
// size
send45424 = (Object)new_AST_Send((Object)send45423, (Object)SMB_size, 0);
// should
send45425 = (Object)new_AST_Send((Object)send45424, (Object)symbol7919, 0);
smallint3092 = (Object)new_Type_SmallInt(2);
constant8836 = (Object)new_AST_Constant((Object)smallint3092);
// =
send45426 = (Object)new_AST_Send((Object)send45425, (Object)SMB__equal, 1, (Object)constant8836);
method6108 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4964, 44, assign5486, assign5487, assign5488, send45312, send45316, send45320, send45324, assign5489, assign5490, send45329, send45333, send45337, send45341, assign5491, assign5492, send45346, send45350, send45354, send45358, assign5493, assign5494, send45363, send45367, send45371, send45375, assign5495, assign5496, send45380, send45384, send45388, send45392, assign5497, assign5498, send45397, send45401, send45405, send45409, assign5499, assign5500, send45414, send45418, send45422, send45426, Self);
symbol7603 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure6108 = (Object)new_Runtime_MethodClosure(method6108);
store_method((Type_Class)class1020, (Type_Symbol)symbol7603, (Runtime_MethodClosure)methodclosure6108);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable6265 = (Object)new_AST_Variable_named(L"parser");
localvariable6266 = (Object)new_AST_Variable_named(L"string");
localvariable6267 = (Object)new_AST_Variable_named(L"result");
array4965 = (Object)new_Type_Array_with(3, (Object)localvariable6265, (Object)localvariable6266, (Object)localvariable6267);
// symbolConstant
send45427 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7974, 0);
assign5501 = (Object)new_AST_Assign((Object)localvariable6265, (Object)send45427);
string5260 = (Object)new_Type_String(L"#abc");
constant8837 = (Object)new_AST_Constant((Object)string5260);
// on:
send45428 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8837);
assign5502 = (Object)new_AST_Assign((Object)localvariable6266, (Object)send45428);
// match:
send45429 = (Object)new_AST_Send((Object)localvariable6265, (Object)symbol7846, 1, (Object)localvariable6266);
assign5503 = (Object)new_AST_Assign((Object)localvariable6267, (Object)send45429);
// class
send45430 = (Object)new_AST_Send((Object)localvariable6267, (Object)SMB_class, 0);
// should
send45431 = (Object)new_AST_Send((Object)send45430, (Object)symbol7919, 0);
// =
send45432 = (Object)new_AST_Send((Object)send45431, (Object)SMB__equal, 1, (Object)classreference1172);
// symbol
send45433 = (Object)new_AST_Send((Object)localvariable6267, (Object)symbol7715, 0);
// should
send45434 = (Object)new_AST_Send((Object)send45433, (Object)symbol7919, 0);
string5261 = (Object)new_Type_String(L"abc");
constant8838 = (Object)new_AST_Constant((Object)string5261);
// =
send45435 = (Object)new_AST_Send((Object)send45434, (Object)SMB__equal, 1, (Object)constant8838);
// position
send45436 = (Object)new_AST_Send((Object)localvariable6266, (Object)symbol7894, 0);
// should
send45437 = (Object)new_AST_Send((Object)send45436, (Object)symbol7919, 0);
smallint3093 = (Object)new_Type_SmallInt(4);
constant8839 = (Object)new_AST_Constant((Object)smallint3093);
// =
send45438 = (Object)new_AST_Send((Object)send45437, (Object)SMB__equal, 1, (Object)constant8839);
method6109 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4965, 7, assign5501, assign5502, assign5503, send45432, send45435, send45438, Self);
symbol7623 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure6109 = (Object)new_Runtime_MethodClosure(method6109);
store_method((Type_Class)class1020, (Type_Symbol)symbol7623, (Runtime_MethodClosure)methodclosure6109);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new
// new
send45439 = (Object)new_AST_Send((Object)classreference1200, (Object)symbol7640, 0);
assign5504 = (Object)new_AST_Assign((Object)instancevariable1484, (Object)send45439);
method6110 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign5504, Self);
symbol7613 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure6110 = (Object)new_Runtime_MethodClosure(method6110);
store_method((Type_Class)class1020, (Type_Symbol)symbol7613, (Runtime_MethodClosure)methodclosure6110);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable6268 = (Object)new_AST_Variable_named(L"parser");
localvariable6269 = (Object)new_AST_Variable_named(L"string");
localvariable6270 = (Object)new_AST_Variable_named(L"result");
array4966 = (Object)new_Type_Array_with(3, (Object)localvariable6268, (Object)localvariable6269, (Object)localvariable6270);
// expression
send45440 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7757, 0);
assign5505 = (Object)new_AST_Assign((Object)localvariable6268, (Object)send45440);
string5262 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant8840 = (Object)new_AST_Constant((Object)string5262);
// on:
send45441 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8840);
assign5506 = (Object)new_AST_Assign((Object)localvariable6269, (Object)send45441);
// match:
send45442 = (Object)new_AST_Send((Object)localvariable6268, (Object)symbol7846, 1, (Object)localvariable6269);
assign5507 = (Object)new_AST_Assign((Object)localvariable6270, (Object)send45442);
// class
send45443 = (Object)new_AST_Send((Object)localvariable6270, (Object)SMB_class, 0);
// should
send45444 = (Object)new_AST_Send((Object)send45443, (Object)symbol7919, 0);
// =
send45445 = (Object)new_AST_Send((Object)send45444, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send45446 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7759, 0);
// class
send45447 = (Object)new_AST_Send((Object)send45446, (Object)SMB_class, 0);
// should
send45448 = (Object)new_AST_Send((Object)send45447, (Object)symbol7919, 0);
// =
send45449 = (Object)new_AST_Send((Object)send45448, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send45450 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7759, 0);
// name
send45451 = (Object)new_AST_Send((Object)send45450, (Object)SMB_name, 0);
// should
send45452 = (Object)new_AST_Send((Object)send45451, (Object)symbol7919, 0);
string5263 = (Object)new_Type_String(L"a");
constant8841 = (Object)new_AST_Constant((Object)string5263);
// =
send45453 = (Object)new_AST_Send((Object)send45452, (Object)SMB__equal, 1, (Object)constant8841);
// expression
send45454 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7757, 0);
assign5508 = (Object)new_AST_Assign((Object)localvariable6270, (Object)send45454);
// class
send45455 = (Object)new_AST_Send((Object)localvariable6270, (Object)SMB_class, 0);
// should
send45456 = (Object)new_AST_Send((Object)send45455, (Object)symbol7919, 0);
// =
send45457 = (Object)new_AST_Send((Object)send45456, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send45458 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7759, 0);
// class
send45459 = (Object)new_AST_Send((Object)send45458, (Object)SMB_class, 0);
// should
send45460 = (Object)new_AST_Send((Object)send45459, (Object)symbol7919, 0);
// =
send45461 = (Object)new_AST_Send((Object)send45460, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send45462 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7759, 0);
// name
send45463 = (Object)new_AST_Send((Object)send45462, (Object)SMB_name, 0);
// should
send45464 = (Object)new_AST_Send((Object)send45463, (Object)symbol7919, 0);
string5264 = (Object)new_Type_String(L"b");
constant8842 = (Object)new_AST_Constant((Object)string5264);
// =
send45465 = (Object)new_AST_Send((Object)send45464, (Object)SMB__equal, 1, (Object)constant8842);
// expression
send45466 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7757, 0);
assign5509 = (Object)new_AST_Assign((Object)localvariable6270, (Object)send45466);
// class
send45467 = (Object)new_AST_Send((Object)localvariable6270, (Object)SMB_class, 0);
// should
send45468 = (Object)new_AST_Send((Object)send45467, (Object)symbol7919, 0);
// =
send45469 = (Object)new_AST_Send((Object)send45468, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send45470 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7759, 0);
// class
send45471 = (Object)new_AST_Send((Object)send45470, (Object)SMB_class, 0);
// should
send45472 = (Object)new_AST_Send((Object)send45471, (Object)symbol7919, 0);
// =
send45473 = (Object)new_AST_Send((Object)send45472, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send45474 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7759, 0);
// name
send45475 = (Object)new_AST_Send((Object)send45474, (Object)SMB_name, 0);
// should
send45476 = (Object)new_AST_Send((Object)send45475, (Object)symbol7919, 0);
string5265 = (Object)new_Type_String(L"c");
constant8843 = (Object)new_AST_Constant((Object)string5265);
// =
send45477 = (Object)new_AST_Send((Object)send45476, (Object)SMB__equal, 1, (Object)constant8843);
// expression
send45478 = (Object)new_AST_Send((Object)localvariable6270, (Object)symbol7757, 0);
// class
send45479 = (Object)new_AST_Send((Object)send45478, (Object)SMB_class, 0);
// should
send45480 = (Object)new_AST_Send((Object)send45479, (Object)symbol7919, 0);
// =
send45481 = (Object)new_AST_Send((Object)send45480, (Object)SMB__equal, 1, (Object)classreference1195);
method6111 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4966, 16, assign5505, assign5506, assign5507, send45445, send45449, send45453, assign5508, send45457, send45461, send45465, assign5509, send45469, send45473, send45477, send45481, Self);
symbol7605 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure6111 = (Object)new_Runtime_MethodClosure(method6111);
store_method((Type_Class)class1020, (Type_Symbol)symbol7605, (Runtime_MethodClosure)methodclosure6111);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable6271 = (Object)new_AST_Variable_named(L"parser");
localvariable6272 = (Object)new_AST_Variable_named(L"string");
localvariable6273 = (Object)new_AST_Variable_named(L"result");
array4967 = (Object)new_Type_Array_with(3, (Object)localvariable6271, (Object)localvariable6272, (Object)localvariable6273);
// primary
send45482 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7944, 0);
assign5510 = (Object)new_AST_Assign((Object)localvariable6271, (Object)send45482);
string5266 = (Object)new_Type_String(L"abc ");
constant8844 = (Object)new_AST_Constant((Object)string5266);
// on:
send45483 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8844);
assign5511 = (Object)new_AST_Assign((Object)localvariable6272, (Object)send45483);
// match:
send45484 = (Object)new_AST_Send((Object)localvariable6271, (Object)symbol7846, 1, (Object)localvariable6272);
assign5512 = (Object)new_AST_Assign((Object)localvariable6273, (Object)send45484);
// class
send45485 = (Object)new_AST_Send((Object)localvariable6273, (Object)SMB_class, 0);
// should
send45486 = (Object)new_AST_Send((Object)send45485, (Object)symbol7919, 0);
// =
send45487 = (Object)new_AST_Send((Object)send45486, (Object)SMB__equal, 1, (Object)classreference1180);
// name
send45488 = (Object)new_AST_Send((Object)localvariable6273, (Object)SMB_name, 0);
// should
send45489 = (Object)new_AST_Send((Object)send45488, (Object)symbol7919, 0);
string5267 = (Object)new_Type_String(L"abc");
constant8845 = (Object)new_AST_Constant((Object)string5267);
// =
send45490 = (Object)new_AST_Send((Object)send45489, (Object)SMB__equal, 1, (Object)constant8845);
// position
send45491 = (Object)new_AST_Send((Object)localvariable6272, (Object)symbol7894, 0);
// should
send45492 = (Object)new_AST_Send((Object)send45491, (Object)symbol7919, 0);
smallint3094 = (Object)new_Type_SmallInt(3);
constant8846 = (Object)new_AST_Constant((Object)smallint3094);
// =
send45493 = (Object)new_AST_Send((Object)send45492, (Object)SMB__equal, 1, (Object)constant8846);
string5268 = (Object)new_Type_String(L"3");
constant8847 = (Object)new_AST_Constant((Object)string5268);
// on:
send45494 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8847);
assign5513 = (Object)new_AST_Assign((Object)localvariable6272, (Object)send45494);
// match:
send45495 = (Object)new_AST_Send((Object)localvariable6271, (Object)symbol7846, 1, (Object)localvariable6272);
assign5514 = (Object)new_AST_Assign((Object)localvariable6273, (Object)send45495);
// class
send45496 = (Object)new_AST_Send((Object)localvariable6273, (Object)SMB_class, 0);
// should
send45497 = (Object)new_AST_Send((Object)send45496, (Object)symbol7919, 0);
// =
send45498 = (Object)new_AST_Send((Object)send45497, (Object)SMB__equal, 1, (Object)classreference1167);
// number
send45499 = (Object)new_AST_Send((Object)localvariable6273, (Object)symbol7710, 0);
// should
send45500 = (Object)new_AST_Send((Object)send45499, (Object)symbol7919, 0);
string5269 = (Object)new_Type_String(L"3");
constant8848 = (Object)new_AST_Constant((Object)string5269);
// =
send45501 = (Object)new_AST_Send((Object)send45500, (Object)SMB__equal, 1, (Object)constant8848);
// base
send45502 = (Object)new_AST_Send((Object)localvariable6273, (Object)symbol7713, 0);
// should
send45503 = (Object)new_AST_Send((Object)send45502, (Object)symbol7919, 0);
string5270 = (Object)new_Type_String(L"10");
constant8849 = (Object)new_AST_Constant((Object)string5270);
// =
send45504 = (Object)new_AST_Send((Object)send45503, (Object)SMB__equal, 1, (Object)constant8849);
// position
send45505 = (Object)new_AST_Send((Object)localvariable6272, (Object)symbol7894, 0);
// should
send45506 = (Object)new_AST_Send((Object)send45505, (Object)symbol7919, 0);
smallint3095 = (Object)new_Type_SmallInt(1);
constant8850 = (Object)new_AST_Constant((Object)smallint3095);
// =
send45507 = (Object)new_AST_Send((Object)send45506, (Object)SMB__equal, 1, (Object)constant8850);
method6112 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4967, 13, assign5510, assign5511, assign5512, send45487, send45490, send45493, assign5513, assign5514, send45498, send45501, send45504, send45507, Self);
symbol7580 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure6112 = (Object)new_Runtime_MethodClosure(method6112);
store_method((Type_Class)class1020, (Type_Symbol)symbol7580, (Runtime_MethodClosure)methodclosure6112);


// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method6113 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol7577 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure6113 = (Object)new_Runtime_MethodClosure(method6113);
store_method((Type_Class)class1020, (Type_Symbol)symbol7577, (Runtime_MethodClosure)methodclosure6113);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable6274 = (Object)new_AST_Variable_named(L"parser");
localvariable6275 = (Object)new_AST_Variable_named(L"string");
localvariable6276 = (Object)new_AST_Variable_named(L"result");
array4968 = (Object)new_Type_Array_with(3, (Object)localvariable6274, (Object)localvariable6275, (Object)localvariable6276);
// unaryExpression
send45508 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7972, 0);
assign5515 = (Object)new_AST_Assign((Object)localvariable6274, (Object)send45508);
string5271 = (Object)new_Type_String(L"abc def ghi ");
constant8851 = (Object)new_AST_Constant((Object)string5271);
// on:
send45509 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8851);
assign5516 = (Object)new_AST_Assign((Object)localvariable6275, (Object)send45509);
// match:
send45510 = (Object)new_AST_Send((Object)localvariable6274, (Object)symbol7846, 1, (Object)localvariable6275);
assign5517 = (Object)new_AST_Assign((Object)localvariable6276, (Object)send45510);
// class
send45511 = (Object)new_AST_Send((Object)localvariable6276, (Object)SMB_class, 0);
// should
send45512 = (Object)new_AST_Send((Object)send45511, (Object)symbol7919, 0);
// =
send45513 = (Object)new_AST_Send((Object)send45512, (Object)SMB__equal, 1, (Object)classreference1198);
// selector
send45514 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7654, 0);
// class
send45515 = (Object)new_AST_Send((Object)send45514, (Object)SMB_class, 0);
// should
send45516 = (Object)new_AST_Send((Object)send45515, (Object)symbol7919, 0);
// =
send45517 = (Object)new_AST_Send((Object)send45516, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send45518 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7654, 0);
// selector
send45519 = (Object)new_AST_Send((Object)send45518, (Object)symbol7654, 0);
// printString
send45520 = (Object)new_AST_Send((Object)send45519, (Object)symbol7849, 0);
// should
send45521 = (Object)new_AST_Send((Object)send45520, (Object)symbol7919, 0);
string5272 = (Object)new_Type_String(L"ghi");
constant8852 = (Object)new_AST_Constant((Object)string5272);
// =
send45522 = (Object)new_AST_Send((Object)send45521, (Object)SMB__equal, 1, (Object)constant8852);
// receiver
send45523 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7730, 0);
assign5518 = (Object)new_AST_Assign((Object)localvariable6276, (Object)send45523);
// class
send45524 = (Object)new_AST_Send((Object)localvariable6276, (Object)SMB_class, 0);
// should
send45525 = (Object)new_AST_Send((Object)send45524, (Object)symbol7919, 0);
// =
send45526 = (Object)new_AST_Send((Object)send45525, (Object)SMB__equal, 1, (Object)classreference1198);
// selector
send45527 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7654, 0);
// class
send45528 = (Object)new_AST_Send((Object)send45527, (Object)SMB_class, 0);
// should
send45529 = (Object)new_AST_Send((Object)send45528, (Object)symbol7919, 0);
// =
send45530 = (Object)new_AST_Send((Object)send45529, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send45531 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7654, 0);
// selector
send45532 = (Object)new_AST_Send((Object)send45531, (Object)symbol7654, 0);
// printString
send45533 = (Object)new_AST_Send((Object)send45532, (Object)symbol7849, 0);
// should
send45534 = (Object)new_AST_Send((Object)send45533, (Object)symbol7919, 0);
string5273 = (Object)new_Type_String(L"def");
constant8853 = (Object)new_AST_Constant((Object)string5273);
// =
send45535 = (Object)new_AST_Send((Object)send45534, (Object)SMB__equal, 1, (Object)constant8853);
// receiver
send45536 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7730, 0);
// class
send45537 = (Object)new_AST_Send((Object)send45536, (Object)SMB_class, 0);
// should
send45538 = (Object)new_AST_Send((Object)send45537, (Object)symbol7919, 0);
// =
send45539 = (Object)new_AST_Send((Object)send45538, (Object)SMB__equal, 1, (Object)classreference1180);
// receiver
send45540 = (Object)new_AST_Send((Object)localvariable6276, (Object)symbol7730, 0);
// name
send45541 = (Object)new_AST_Send((Object)send45540, (Object)SMB_name, 0);
// should
send45542 = (Object)new_AST_Send((Object)send45541, (Object)symbol7919, 0);
string5274 = (Object)new_Type_String(L"abc");
constant8854 = (Object)new_AST_Constant((Object)string5274);
// =
send45543 = (Object)new_AST_Send((Object)send45542, (Object)SMB__equal, 1, (Object)constant8854);
// position
send45544 = (Object)new_AST_Send((Object)localvariable6275, (Object)symbol7894, 0);
// should
send45545 = (Object)new_AST_Send((Object)send45544, (Object)symbol7919, 0);
smallint3096 = (Object)new_Type_SmallInt(12);
constant8855 = (Object)new_AST_Constant((Object)smallint3096);
// =
send45546 = (Object)new_AST_Send((Object)send45545, (Object)SMB__equal, 1, (Object)constant8855);
string5275 = (Object)new_Type_String(L"abc");
constant8856 = (Object)new_AST_Constant((Object)string5275);
// on:
send45547 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8856);
assign5519 = (Object)new_AST_Assign((Object)localvariable6275, (Object)send45547);
// match:
send45548 = (Object)new_AST_Send((Object)localvariable6274, (Object)symbol7846, 1, (Object)localvariable6275);
// should
send45549 = (Object)new_AST_Send((Object)send45548, (Object)symbol7919, 0);
// be
send45550 = (Object)new_AST_Send((Object)send45549, (Object)symbol7989, 0);
// isNil
send45551 = (Object)new_AST_Send((Object)send45550, (Object)SMB_isNil, 0);
method6114 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4968, 16, assign5515, assign5516, assign5517, send45513, send45517, send45522, assign5518, send45526, send45530, send45535, send45539, send45543, send45546, assign5519, send45551, Self);
symbol7597 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure6114 = (Object)new_Runtime_MethodClosure(method6114);
store_method((Type_Class)class1020, (Type_Symbol)symbol7597, (Runtime_MethodClosure)methodclosure6114);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable6277 = (Object)new_AST_Variable_named(L"parser");
localvariable6278 = (Object)new_AST_Variable_named(L"string");
array4969 = (Object)new_Type_Array_with(2, (Object)localvariable6277, (Object)localvariable6278);
symbol7996 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send45552 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7996, 0);
assign5520 = (Object)new_AST_Assign((Object)localvariable6277, (Object)send45552);
string5276 = (Object)new_Type_String(L"Abcd ");
constant8857 = (Object)new_AST_Constant((Object)string5276);
// on:
send45553 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8857);
assign5521 = (Object)new_AST_Assign((Object)localvariable6278, (Object)send45553);
// match:
send45554 = (Object)new_AST_Send((Object)localvariable6277, (Object)symbol7846, 1, (Object)localvariable6278);
// should
send45555 = (Object)new_AST_Send((Object)send45554, (Object)symbol7919, 0);
string5277 = (Object)new_Type_String(L"Abcd");
constant8858 = (Object)new_AST_Constant((Object)string5277);
// =
send45556 = (Object)new_AST_Send((Object)send45555, (Object)SMB__equal, 1, (Object)constant8858);
// position
send45557 = (Object)new_AST_Send((Object)localvariable6278, (Object)symbol7894, 0);
// should
send45558 = (Object)new_AST_Send((Object)send45557, (Object)symbol7919, 0);
smallint3097 = (Object)new_Type_SmallInt(4);
constant8859 = (Object)new_AST_Constant((Object)smallint3097);
// =
send45559 = (Object)new_AST_Send((Object)send45558, (Object)SMB__equal, 1, (Object)constant8859);
string5278 = (Object)new_Type_String(L"AbCd145 ");
constant8860 = (Object)new_AST_Constant((Object)string5278);
// on:
send45560 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8860);
assign5522 = (Object)new_AST_Assign((Object)localvariable6278, (Object)send45560);
// match:
send45561 = (Object)new_AST_Send((Object)localvariable6277, (Object)symbol7846, 1, (Object)localvariable6278);
// should
send45562 = (Object)new_AST_Send((Object)send45561, (Object)symbol7919, 0);
string5279 = (Object)new_Type_String(L"AbCd145");
constant8861 = (Object)new_AST_Constant((Object)string5279);
// =
send45563 = (Object)new_AST_Send((Object)send45562, (Object)SMB__equal, 1, (Object)constant8861);
// position
send45564 = (Object)new_AST_Send((Object)localvariable6278, (Object)symbol7894, 0);
// should
send45565 = (Object)new_AST_Send((Object)send45564, (Object)symbol7919, 0);
smallint3098 = (Object)new_Type_SmallInt(7);
constant8862 = (Object)new_AST_Constant((Object)smallint3098);
// =
send45566 = (Object)new_AST_Send((Object)send45565, (Object)SMB__equal, 1, (Object)constant8862);
string5280 = (Object)new_Type_String(L"abcdD");
constant8863 = (Object)new_AST_Constant((Object)string5280);
// on:
send45567 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8863);
assign5523 = (Object)new_AST_Assign((Object)localvariable6278, (Object)send45567);
// match:
send45568 = (Object)new_AST_Send((Object)localvariable6277, (Object)symbol7846, 1, (Object)localvariable6278);
// should
send45569 = (Object)new_AST_Send((Object)send45568, (Object)symbol7919, 0);
// be
send45570 = (Object)new_AST_Send((Object)send45569, (Object)symbol7989, 0);
// isNil
send45571 = (Object)new_AST_Send((Object)send45570, (Object)SMB_isNil, 0);
// position
send45572 = (Object)new_AST_Send((Object)localvariable6278, (Object)symbol7894, 0);
// should
send45573 = (Object)new_AST_Send((Object)send45572, (Object)symbol7919, 0);
smallint3099 = (Object)new_Type_SmallInt(0);
constant8864 = (Object)new_AST_Constant((Object)smallint3099);
// =
send45574 = (Object)new_AST_Send((Object)send45573, (Object)SMB__equal, 1, (Object)constant8864);
method6115 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4969, 11, assign5520, assign5521, send45556, send45559, assign5522, send45563, send45566, assign5523, send45571, send45574, Self);
symbol7589 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure6115 = (Object)new_Runtime_MethodClosure(method6115);
store_method((Type_Class)class1020, (Type_Symbol)symbol7589, (Runtime_MethodClosure)methodclosure6115);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable6279 = (Object)new_AST_Variable_named(L"parser");
localvariable6280 = (Object)new_AST_Variable_named(L"string");
localvariable6281 = (Object)new_AST_Variable_named(L"result");
localvariable6282 = (Object)new_AST_Variable_named(L"expression");
array4970 = (Object)new_Type_Array_with(4, (Object)localvariable6279, (Object)localvariable6280, (Object)localvariable6281, (Object)localvariable6282);
// cascadedMessageExpression
send45575 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7942, 0);
assign5524 = (Object)new_AST_Assign((Object)localvariable6279, (Object)send45575);
string5281 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant8865 = (Object)new_AST_Constant((Object)string5281);
// on:
send45576 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8865);
assign5525 = (Object)new_AST_Assign((Object)localvariable6280, (Object)send45576);
// match:
send45577 = (Object)new_AST_Send((Object)localvariable6279, (Object)symbol7846, 1, (Object)localvariable6280);
assign5526 = (Object)new_AST_Assign((Object)localvariable6281, (Object)send45577);
// class
send45578 = (Object)new_AST_Send((Object)localvariable6281, (Object)SMB_class, 0);
// should
send45579 = (Object)new_AST_Send((Object)send45578, (Object)symbol7919, 0);
// =
send45580 = (Object)new_AST_Send((Object)send45579, (Object)SMB__equal, 1, (Object)classreference1188);
// receiver
send45581 = (Object)new_AST_Send((Object)localvariable6281, (Object)symbol7730, 0);
// class
send45582 = (Object)new_AST_Send((Object)send45581, (Object)SMB_class, 0);
// should
send45583 = (Object)new_AST_Send((Object)send45582, (Object)symbol7919, 0);
// =
send45584 = (Object)new_AST_Send((Object)send45583, (Object)SMB__equal, 1, (Object)classreference1167);
// cascades
send45585 = (Object)new_AST_Send((Object)localvariable6281, (Object)symbol7727, 0);
// size
send45586 = (Object)new_AST_Send((Object)send45585, (Object)SMB_size, 0);
// should
send45587 = (Object)new_AST_Send((Object)send45586, (Object)symbol7919, 0);
smallint3100 = (Object)new_Type_SmallInt(4);
constant8866 = (Object)new_AST_Constant((Object)smallint3100);
// =
send45588 = (Object)new_AST_Send((Object)send45587, (Object)SMB__equal, 1, (Object)constant8866);
// cascades
send45589 = (Object)new_AST_Send((Object)localvariable6281, (Object)symbol7727, 0);
smallint3101 = (Object)new_Type_SmallInt(1);
constant8867 = (Object)new_AST_Constant((Object)smallint3101);
// at:
send45590 = (Object)new_AST_Send((Object)send45589, (Object)SMB_at_, 1, (Object)constant8867);
assign5527 = (Object)new_AST_Assign((Object)localvariable6282, (Object)send45590);
// class
send45591 = (Object)new_AST_Send((Object)localvariable6282, (Object)SMB_class, 0);
// should
send45592 = (Object)new_AST_Send((Object)send45591, (Object)symbol7919, 0);
// =
send45593 = (Object)new_AST_Send((Object)send45592, (Object)SMB__equal, 1, (Object)classreference1191);
// cascades
send45594 = (Object)new_AST_Send((Object)localvariable6281, (Object)symbol7727, 0);
smallint3102 = (Object)new_Type_SmallInt(2);
constant8868 = (Object)new_AST_Constant((Object)smallint3102);
// at:
send45595 = (Object)new_AST_Send((Object)send45594, (Object)SMB_at_, 1, (Object)constant8868);
assign5528 = (Object)new_AST_Assign((Object)localvariable6282, (Object)send45595);
// class
send45596 = (Object)new_AST_Send((Object)localvariable6282, (Object)SMB_class, 0);
// should
send45597 = (Object)new_AST_Send((Object)send45596, (Object)symbol7919, 0);
// =
send45598 = (Object)new_AST_Send((Object)send45597, (Object)SMB__equal, 1, (Object)classreference1195);
// cascades
send45599 = (Object)new_AST_Send((Object)localvariable6281, (Object)symbol7727, 0);
smallint3103 = (Object)new_Type_SmallInt(3);
constant8869 = (Object)new_AST_Constant((Object)smallint3103);
// at:
send45600 = (Object)new_AST_Send((Object)send45599, (Object)SMB_at_, 1, (Object)constant8869);
assign5529 = (Object)new_AST_Assign((Object)localvariable6282, (Object)send45600);
// class
send45601 = (Object)new_AST_Send((Object)localvariable6282, (Object)SMB_class, 0);
// should
send45602 = (Object)new_AST_Send((Object)send45601, (Object)symbol7919, 0);
// =
send45603 = (Object)new_AST_Send((Object)send45602, (Object)SMB__equal, 1, (Object)classreference1195);
// cascades
send45604 = (Object)new_AST_Send((Object)localvariable6281, (Object)symbol7727, 0);
smallint3104 = (Object)new_Type_SmallInt(4);
constant8870 = (Object)new_AST_Constant((Object)smallint3104);
// at:
send45605 = (Object)new_AST_Send((Object)send45604, (Object)SMB_at_, 1, (Object)constant8870);
assign5530 = (Object)new_AST_Assign((Object)localvariable6282, (Object)send45605);
// class
send45606 = (Object)new_AST_Send((Object)localvariable6282, (Object)SMB_class, 0);
// should
send45607 = (Object)new_AST_Send((Object)send45606, (Object)symbol7919, 0);
// =
send45608 = (Object)new_AST_Send((Object)send45607, (Object)SMB__equal, 1, (Object)classreference1198);
method6116 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4970, 15, assign5524, assign5525, assign5526, send45580, send45584, send45588, assign5527, send45593, assign5528, send45598, assign5529, send45603, assign5530, send45608, Self);
symbol7570 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure6116 = (Object)new_Runtime_MethodClosure(method6116);
store_method((Type_Class)class1020, (Type_Symbol)symbol7570, (Runtime_MethodClosure)methodclosure6116);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable6283 = (Object)new_AST_Variable_named(L"parser");
localvariable6284 = (Object)new_AST_Variable_named(L"string");
localvariable6285 = (Object)new_AST_Variable_named(L"result");
array4971 = (Object)new_Type_Array_with(3, (Object)localvariable6283, (Object)localvariable6284, (Object)localvariable6285);
// binaryObjectDescription
send45609 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7930, 0);
assign5531 = (Object)new_AST_Assign((Object)localvariable6283, (Object)send45609);
string5282 = (Object)new_Type_String(L"abc def ghi ");
constant8871 = (Object)new_AST_Constant((Object)string5282);
// on:
send45610 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8871);
assign5532 = (Object)new_AST_Assign((Object)localvariable6284, (Object)send45610);
// match:
send45611 = (Object)new_AST_Send((Object)localvariable6283, (Object)symbol7846, 1, (Object)localvariable6284);
assign5533 = (Object)new_AST_Assign((Object)localvariable6285, (Object)send45611);
// class
send45612 = (Object)new_AST_Send((Object)localvariable6285, (Object)SMB_class, 0);
// should
send45613 = (Object)new_AST_Send((Object)send45612, (Object)symbol7919, 0);
// =
send45614 = (Object)new_AST_Send((Object)send45613, (Object)SMB__equal, 1, (Object)classreference1198);
// selector
send45615 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7654, 0);
// class
send45616 = (Object)new_AST_Send((Object)send45615, (Object)SMB_class, 0);
// should
send45617 = (Object)new_AST_Send((Object)send45616, (Object)symbol7919, 0);
// =
send45618 = (Object)new_AST_Send((Object)send45617, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send45619 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7654, 0);
// selector
send45620 = (Object)new_AST_Send((Object)send45619, (Object)symbol7654, 0);
// asString
send45621 = (Object)new_AST_Send((Object)send45620, (Object)SMB_asString, 0);
// should
send45622 = (Object)new_AST_Send((Object)send45621, (Object)symbol7919, 0);
string5283 = (Object)new_Type_String(L"ghi");
constant8872 = (Object)new_AST_Constant((Object)string5283);
// =
send45623 = (Object)new_AST_Send((Object)send45622, (Object)SMB__equal, 1, (Object)constant8872);
// receiver
send45624 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7730, 0);
assign5534 = (Object)new_AST_Assign((Object)localvariable6285, (Object)send45624);
// class
send45625 = (Object)new_AST_Send((Object)localvariable6285, (Object)SMB_class, 0);
// should
send45626 = (Object)new_AST_Send((Object)send45625, (Object)symbol7919, 0);
// =
send45627 = (Object)new_AST_Send((Object)send45626, (Object)SMB__equal, 1, (Object)classreference1198);
// selector
send45628 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7654, 0);
// class
send45629 = (Object)new_AST_Send((Object)send45628, (Object)SMB_class, 0);
// should
send45630 = (Object)new_AST_Send((Object)send45629, (Object)symbol7919, 0);
// =
send45631 = (Object)new_AST_Send((Object)send45630, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send45632 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7654, 0);
// selector
send45633 = (Object)new_AST_Send((Object)send45632, (Object)symbol7654, 0);
// asString
send45634 = (Object)new_AST_Send((Object)send45633, (Object)SMB_asString, 0);
// should
send45635 = (Object)new_AST_Send((Object)send45634, (Object)symbol7919, 0);
string5284 = (Object)new_Type_String(L"def");
constant8873 = (Object)new_AST_Constant((Object)string5284);
// =
send45636 = (Object)new_AST_Send((Object)send45635, (Object)SMB__equal, 1, (Object)constant8873);
// receiver
send45637 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7730, 0);
// class
send45638 = (Object)new_AST_Send((Object)send45637, (Object)SMB_class, 0);
// should
send45639 = (Object)new_AST_Send((Object)send45638, (Object)symbol7919, 0);
// =
send45640 = (Object)new_AST_Send((Object)send45639, (Object)SMB__equal, 1, (Object)classreference1180);
// receiver
send45641 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7730, 0);
// name
send45642 = (Object)new_AST_Send((Object)send45641, (Object)SMB_name, 0);
// should
send45643 = (Object)new_AST_Send((Object)send45642, (Object)symbol7919, 0);
string5285 = (Object)new_Type_String(L"abc");
constant8874 = (Object)new_AST_Constant((Object)string5285);
// =
send45644 = (Object)new_AST_Send((Object)send45643, (Object)SMB__equal, 1, (Object)constant8874);
// position
send45645 = (Object)new_AST_Send((Object)localvariable6284, (Object)symbol7894, 0);
// should
send45646 = (Object)new_AST_Send((Object)send45645, (Object)symbol7919, 0);
smallint3105 = (Object)new_Type_SmallInt(12);
constant8875 = (Object)new_AST_Constant((Object)smallint3105);
// =
send45647 = (Object)new_AST_Send((Object)send45646, (Object)SMB__equal, 1, (Object)constant8875);
string5286 = (Object)new_Type_String(L"3");
constant8876 = (Object)new_AST_Constant((Object)string5286);
// on:
send45648 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8876);
assign5535 = (Object)new_AST_Assign((Object)localvariable6284, (Object)send45648);
// match:
send45649 = (Object)new_AST_Send((Object)localvariable6283, (Object)symbol7846, 1, (Object)localvariable6284);
assign5536 = (Object)new_AST_Assign((Object)localvariable6285, (Object)send45649);
// class
send45650 = (Object)new_AST_Send((Object)localvariable6285, (Object)SMB_class, 0);
// should
send45651 = (Object)new_AST_Send((Object)send45650, (Object)symbol7919, 0);
// =
send45652 = (Object)new_AST_Send((Object)send45651, (Object)SMB__equal, 1, (Object)classreference1167);
// number
send45653 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7710, 0);
// should
send45654 = (Object)new_AST_Send((Object)send45653, (Object)symbol7919, 0);
string5287 = (Object)new_Type_String(L"3");
constant8877 = (Object)new_AST_Constant((Object)string5287);
// =
send45655 = (Object)new_AST_Send((Object)send45654, (Object)SMB__equal, 1, (Object)constant8877);
// position
send45656 = (Object)new_AST_Send((Object)localvariable6284, (Object)symbol7894, 0);
// should
send45657 = (Object)new_AST_Send((Object)send45656, (Object)symbol7919, 0);
smallint3106 = (Object)new_Type_SmallInt(1);
constant8878 = (Object)new_AST_Constant((Object)smallint3106);
// =
send45658 = (Object)new_AST_Send((Object)send45657, (Object)SMB__equal, 1, (Object)constant8878);
string5288 = (Object)new_Type_String(L"abc + ghi * c ");
constant8879 = (Object)new_AST_Constant((Object)string5288);
// on:
send45659 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8879);
assign5537 = (Object)new_AST_Assign((Object)localvariable6284, (Object)send45659);
// match:
send45660 = (Object)new_AST_Send((Object)localvariable6283, (Object)symbol7846, 1, (Object)localvariable6284);
assign5538 = (Object)new_AST_Assign((Object)localvariable6285, (Object)send45660);
// class
send45661 = (Object)new_AST_Send((Object)localvariable6285, (Object)SMB_class, 0);
// should
send45662 = (Object)new_AST_Send((Object)send45661, (Object)symbol7919, 0);
// =
send45663 = (Object)new_AST_Send((Object)send45662, (Object)SMB__equal, 1, (Object)classreference1191);
// selector
send45664 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7654, 0);
// printString
send45665 = (Object)new_AST_Send((Object)send45664, (Object)symbol7849, 0);
// should
send45666 = (Object)new_AST_Send((Object)send45665, (Object)symbol7919, 0);
string5289 = (Object)new_Type_String(L"*");
constant8880 = (Object)new_AST_Constant((Object)string5289);
// =
send45667 = (Object)new_AST_Send((Object)send45666, (Object)SMB__equal, 1, (Object)constant8880);
// argument
send45668 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7738, 0);
// class
send45669 = (Object)new_AST_Send((Object)send45668, (Object)SMB_class, 0);
// should
send45670 = (Object)new_AST_Send((Object)send45669, (Object)symbol7919, 0);
// =
send45671 = (Object)new_AST_Send((Object)send45670, (Object)SMB__equal, 1, (Object)classreference1180);
// argument
send45672 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7738, 0);
// name
send45673 = (Object)new_AST_Send((Object)send45672, (Object)SMB_name, 0);
// should
send45674 = (Object)new_AST_Send((Object)send45673, (Object)symbol7919, 0);
string5290 = (Object)new_Type_String(L"c");
constant8881 = (Object)new_AST_Constant((Object)string5290);
// =
send45675 = (Object)new_AST_Send((Object)send45674, (Object)SMB__equal, 1, (Object)constant8881);
// receiver
send45676 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7730, 0);
assign5539 = (Object)new_AST_Assign((Object)localvariable6285, (Object)send45676);
// class
send45677 = (Object)new_AST_Send((Object)localvariable6285, (Object)SMB_class, 0);
// should
send45678 = (Object)new_AST_Send((Object)send45677, (Object)symbol7919, 0);
// =
send45679 = (Object)new_AST_Send((Object)send45678, (Object)SMB__equal, 1, (Object)classreference1191);
// selector
send45680 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7654, 0);
// printString
send45681 = (Object)new_AST_Send((Object)send45680, (Object)symbol7849, 0);
// should
send45682 = (Object)new_AST_Send((Object)send45681, (Object)symbol7919, 0);
string5291 = (Object)new_Type_String(L"+");
constant8882 = (Object)new_AST_Constant((Object)string5291);
// =
send45683 = (Object)new_AST_Send((Object)send45682, (Object)SMB__equal, 1, (Object)constant8882);
// receiver
send45684 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7730, 0);
// class
send45685 = (Object)new_AST_Send((Object)send45684, (Object)SMB_class, 0);
// should
send45686 = (Object)new_AST_Send((Object)send45685, (Object)symbol7919, 0);
// =
send45687 = (Object)new_AST_Send((Object)send45686, (Object)SMB__equal, 1, (Object)classreference1180);
// receiver
send45688 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7730, 0);
// name
send45689 = (Object)new_AST_Send((Object)send45688, (Object)SMB_name, 0);
// should
send45690 = (Object)new_AST_Send((Object)send45689, (Object)symbol7919, 0);
string5292 = (Object)new_Type_String(L"abc");
constant8883 = (Object)new_AST_Constant((Object)string5292);
// =
send45691 = (Object)new_AST_Send((Object)send45690, (Object)SMB__equal, 1, (Object)constant8883);
// argument
send45692 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7738, 0);
// class
send45693 = (Object)new_AST_Send((Object)send45692, (Object)SMB_class, 0);
// should
send45694 = (Object)new_AST_Send((Object)send45693, (Object)symbol7919, 0);
// =
send45695 = (Object)new_AST_Send((Object)send45694, (Object)SMB__equal, 1, (Object)classreference1180);
// argument
send45696 = (Object)new_AST_Send((Object)localvariable6285, (Object)symbol7738, 0);
// name
send45697 = (Object)new_AST_Send((Object)send45696, (Object)SMB_name, 0);
// should
send45698 = (Object)new_AST_Send((Object)send45697, (Object)symbol7919, 0);
string5293 = (Object)new_Type_String(L"ghi");
constant8884 = (Object)new_AST_Constant((Object)string5293);
// =
send45699 = (Object)new_AST_Send((Object)send45698, (Object)SMB__equal, 1, (Object)constant8884);
// position
send45700 = (Object)new_AST_Send((Object)localvariable6284, (Object)symbol7894, 0);
// should
send45701 = (Object)new_AST_Send((Object)send45700, (Object)symbol7919, 0);
smallint3107 = (Object)new_Type_SmallInt(13);
constant8885 = (Object)new_AST_Constant((Object)smallint3107);
// =
send45702 = (Object)new_AST_Send((Object)send45701, (Object)SMB__equal, 1, (Object)constant8885);
method6117 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4971, 33, assign5531, assign5532, assign5533, send45614, send45618, send45623, assign5534, send45627, send45631, send45636, send45640, send45644, send45647, assign5535, assign5536, send45652, send45655, send45658, assign5537, assign5538, send45663, send45667, send45671, send45675, assign5539, send45679, send45683, send45687, send45691, send45695, send45699, send45702, Self);
symbol7590 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure6117 = (Object)new_Runtime_MethodClosure(method6117);
store_method((Type_Class)class1020, (Type_Symbol)symbol7590, (Runtime_MethodClosure)methodclosure6117);


// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable6286 = (Object)new_AST_Variable_named(L"parser");
localvariable6287 = (Object)new_AST_Variable_named(L"string");
localvariable6288 = (Object)new_AST_Variable_named(L"result");
array4972 = (Object)new_Type_Array_with(3, (Object)localvariable6286, (Object)localvariable6287, (Object)localvariable6288);
// subExpression
send45703 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7963, 0);
assign5540 = (Object)new_AST_Assign((Object)localvariable6286, (Object)send45703);
string5294 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant8886 = (Object)new_AST_Constant((Object)string5294);
// on:
send45704 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8886);
assign5541 = (Object)new_AST_Assign((Object)localvariable6287, (Object)send45704);
// match:
send45705 = (Object)new_AST_Send((Object)localvariable6286, (Object)symbol7846, 1, (Object)localvariable6287);
// should
send45706 = (Object)new_AST_Send((Object)send45705, (Object)symbol7919, 0);
// be
send45707 = (Object)new_AST_Send((Object)send45706, (Object)symbol7989, 0);
// isNil
send45708 = (Object)new_AST_Send((Object)send45707, (Object)SMB_isNil, 0);
string5295 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant8887 = (Object)new_AST_Constant((Object)string5295);
// on:
send45709 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8887);
assign5542 = (Object)new_AST_Assign((Object)localvariable6287, (Object)send45709);
// match:
send45710 = (Object)new_AST_Send((Object)localvariable6286, (Object)symbol7846, 1, (Object)localvariable6287);
assign5543 = (Object)new_AST_Assign((Object)localvariable6288, (Object)send45710);
// class
send45711 = (Object)new_AST_Send((Object)localvariable6288, (Object)SMB_class, 0);
// should
send45712 = (Object)new_AST_Send((Object)send45711, (Object)symbol7919, 0);
// =
send45713 = (Object)new_AST_Send((Object)send45712, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send45714 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7759, 0);
// class
send45715 = (Object)new_AST_Send((Object)send45714, (Object)SMB_class, 0);
// should
send45716 = (Object)new_AST_Send((Object)send45715, (Object)symbol7919, 0);
// =
send45717 = (Object)new_AST_Send((Object)send45716, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send45718 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7759, 0);
// name
send45719 = (Object)new_AST_Send((Object)send45718, (Object)SMB_name, 0);
// should
send45720 = (Object)new_AST_Send((Object)send45719, (Object)symbol7919, 0);
string5296 = (Object)new_Type_String(L"a");
constant8888 = (Object)new_AST_Constant((Object)string5296);
// =
send45721 = (Object)new_AST_Send((Object)send45720, (Object)SMB__equal, 1, (Object)constant8888);
// expression
send45722 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7757, 0);
assign5544 = (Object)new_AST_Assign((Object)localvariable6288, (Object)send45722);
// class
send45723 = (Object)new_AST_Send((Object)localvariable6288, (Object)SMB_class, 0);
// should
send45724 = (Object)new_AST_Send((Object)send45723, (Object)symbol7919, 0);
// =
send45725 = (Object)new_AST_Send((Object)send45724, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send45726 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7759, 0);
// class
send45727 = (Object)new_AST_Send((Object)send45726, (Object)SMB_class, 0);
// should
send45728 = (Object)new_AST_Send((Object)send45727, (Object)symbol7919, 0);
// =
send45729 = (Object)new_AST_Send((Object)send45728, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send45730 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7759, 0);
// name
send45731 = (Object)new_AST_Send((Object)send45730, (Object)SMB_name, 0);
// should
send45732 = (Object)new_AST_Send((Object)send45731, (Object)symbol7919, 0);
string5297 = (Object)new_Type_String(L"b");
constant8889 = (Object)new_AST_Constant((Object)string5297);
// =
send45733 = (Object)new_AST_Send((Object)send45732, (Object)SMB__equal, 1, (Object)constant8889);
// expression
send45734 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7757, 0);
assign5545 = (Object)new_AST_Assign((Object)localvariable6288, (Object)send45734);
// class
send45735 = (Object)new_AST_Send((Object)localvariable6288, (Object)SMB_class, 0);
// should
send45736 = (Object)new_AST_Send((Object)send45735, (Object)symbol7919, 0);
// =
send45737 = (Object)new_AST_Send((Object)send45736, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send45738 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7759, 0);
// class
send45739 = (Object)new_AST_Send((Object)send45738, (Object)SMB_class, 0);
// should
send45740 = (Object)new_AST_Send((Object)send45739, (Object)symbol7919, 0);
// =
send45741 = (Object)new_AST_Send((Object)send45740, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send45742 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7759, 0);
// name
send45743 = (Object)new_AST_Send((Object)send45742, (Object)SMB_name, 0);
// should
send45744 = (Object)new_AST_Send((Object)send45743, (Object)symbol7919, 0);
string5298 = (Object)new_Type_String(L"c");
constant8890 = (Object)new_AST_Constant((Object)string5298);
// =
send45745 = (Object)new_AST_Send((Object)send45744, (Object)SMB__equal, 1, (Object)constant8890);
// expression
send45746 = (Object)new_AST_Send((Object)localvariable6288, (Object)symbol7757, 0);
// class
send45747 = (Object)new_AST_Send((Object)send45746, (Object)SMB_class, 0);
// should
send45748 = (Object)new_AST_Send((Object)send45747, (Object)symbol7919, 0);
// =
send45749 = (Object)new_AST_Send((Object)send45748, (Object)SMB__equal, 1, (Object)classreference1195);
method6118 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4972, 18, assign5540, assign5541, send45708, assign5542, assign5543, send45713, send45717, send45721, assign5544, send45725, send45729, send45733, assign5545, send45737, send45741, send45745, send45749, Self);
symbol7627 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure6118 = (Object)new_Runtime_MethodClosure(method6118);
store_method((Type_Class)class1020, (Type_Symbol)symbol7627, (Runtime_MethodClosure)methodclosure6118);


// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable6289 = (Object)new_AST_Variable_named(L"parser");
localvariable6290 = (Object)new_AST_Variable_named(L"string");
localvariable6291 = (Object)new_AST_Variable_named(L"result");
localvariable6292 = (Object)new_AST_Variable_named(L"arg");
array4973 = (Object)new_Type_Array_with(4, (Object)localvariable6289, (Object)localvariable6290, (Object)localvariable6291, (Object)localvariable6292);
// keywordMessageExpression
send45750 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7938, 0);
assign5546 = (Object)new_AST_Assign((Object)localvariable6289, (Object)send45750);
string5299 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant8891 = (Object)new_AST_Constant((Object)string5299);
// on:
send45751 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8891);
assign5547 = (Object)new_AST_Assign((Object)localvariable6290, (Object)send45751);
// match:
send45752 = (Object)new_AST_Send((Object)localvariable6289, (Object)symbol7846, 1, (Object)localvariable6290);
assign5548 = (Object)new_AST_Assign((Object)localvariable6291, (Object)send45752);
// class
send45753 = (Object)new_AST_Send((Object)localvariable6291, (Object)SMB_class, 0);
// should
send45754 = (Object)new_AST_Send((Object)send45753, (Object)symbol7919, 0);
// =
send45755 = (Object)new_AST_Send((Object)send45754, (Object)SMB__equal, 1, (Object)classreference1195);
// keywords
send45756 = (Object)new_AST_Send((Object)localvariable6291, (Object)symbol7740, 0);
// asArray
send45757 = (Object)new_AST_Send((Object)send45756, (Object)SMB_asArray, 0);
// should
send45758 = (Object)new_AST_Send((Object)send45757, (Object)symbol7919, 0);
localvariable6293 = (Object)new_AST_Variable_named(L"receiver");
array4974 = (Object)new_Type_Array_with(1, (Object)localvariable6293);
smallint3108 = (Object)new_Type_SmallInt(1);
constant8892 = (Object)new_AST_Constant((Object)smallint3108);
string5300 = (Object)new_Type_String(L"abc");
constant8893 = (Object)new_AST_Constant((Object)string5300);
// at:put:
send45759 = (Object)new_AST_Send((Object)localvariable6293, (Object)SMB_at_put_, 2, (Object)constant8892, (Object)constant8893);
smallint3109 = (Object)new_Type_SmallInt(2);
constant8894 = (Object)new_AST_Constant((Object)smallint3109);
string5301 = (Object)new_Type_String(L"def");
constant8895 = (Object)new_AST_Constant((Object)string5301);
// at:put:
send45760 = (Object)new_AST_Send((Object)localvariable6293, (Object)SMB_at_put_, 2, (Object)constant8894, (Object)constant8895);
smallint3110 = (Object)new_Type_SmallInt(3);
constant8896 = (Object)new_AST_Constant((Object)smallint3110);
string5302 = (Object)new_Type_String(L"ghi");
constant8897 = (Object)new_AST_Constant((Object)string5302);
// at:put:
send45761 = (Object)new_AST_Send((Object)localvariable6293, (Object)SMB_at_put_, 2, (Object)constant8896, (Object)constant8897);
// yourself
send45762 = (Object)new_AST_Send((Object)localvariable6293, (Object)symbol7546, 0);
block2885 = (Object)new_AST_Block_with((Type_Array)array4974, (Type_Array)empty_Type_Array, 1, 4, send45759, send45760, send45761, send45762);
smallint3111 = (Object)new_Type_SmallInt(3);
constant8898 = (Object)new_AST_Constant((Object)smallint3111);
// new:
send45763 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8898);
// value:
send45764 = (Object)new_AST_Send((Object)block2885, (Object)SMB_value_, 1, (Object)send45763);
// =
send45765 = (Object)new_AST_Send((Object)send45758, (Object)SMB__equal, 1, (Object)send45764);
// arguments
send45766 = (Object)new_AST_Send((Object)localvariable6291, (Object)symbol7655, 0);
// first
send45767 = (Object)new_AST_Send((Object)send45766, (Object)symbol7702, 0);
assign5549 = (Object)new_AST_Assign((Object)localvariable6292, (Object)send45767);
// class
send45768 = (Object)new_AST_Send((Object)localvariable6292, (Object)SMB_class, 0);
// should
send45769 = (Object)new_AST_Send((Object)send45768, (Object)symbol7919, 0);
// =
send45770 = (Object)new_AST_Send((Object)send45769, (Object)SMB__equal, 1, (Object)classreference1167);
// arguments
send45771 = (Object)new_AST_Send((Object)localvariable6291, (Object)symbol7655, 0);
smallint3112 = (Object)new_Type_SmallInt(2);
constant8899 = (Object)new_AST_Constant((Object)smallint3112);
// at:
send45772 = (Object)new_AST_Send((Object)send45771, (Object)SMB_at_, 1, (Object)constant8899);
assign5550 = (Object)new_AST_Assign((Object)localvariable6292, (Object)send45772);
// class
send45773 = (Object)new_AST_Send((Object)localvariable6292, (Object)SMB_class, 0);
// should
send45774 = (Object)new_AST_Send((Object)send45773, (Object)symbol7919, 0);
// =
send45775 = (Object)new_AST_Send((Object)send45774, (Object)SMB__equal, 1, (Object)classreference1191);
// arguments
send45776 = (Object)new_AST_Send((Object)localvariable6291, (Object)symbol7655, 0);
smallint3113 = (Object)new_Type_SmallInt(3);
constant8900 = (Object)new_AST_Constant((Object)smallint3113);
// at:
send45777 = (Object)new_AST_Send((Object)send45776, (Object)SMB_at_, 1, (Object)constant8900);
assign5551 = (Object)new_AST_Assign((Object)localvariable6292, (Object)send45777);
// class
send45778 = (Object)new_AST_Send((Object)localvariable6292, (Object)SMB_class, 0);
// should
send45779 = (Object)new_AST_Send((Object)send45778, (Object)symbol7919, 0);
// =
send45780 = (Object)new_AST_Send((Object)send45779, (Object)SMB__equal, 1, (Object)classreference1198);
// position
send45781 = (Object)new_AST_Send((Object)localvariable6290, (Object)symbol7894, 0);
// should
send45782 = (Object)new_AST_Send((Object)send45781, (Object)symbol7919, 0);
smallint3114 = (Object)new_Type_SmallInt(25);
constant8901 = (Object)new_AST_Constant((Object)smallint3114);
// =
send45783 = (Object)new_AST_Send((Object)send45782, (Object)SMB__equal, 1, (Object)constant8901);
method6119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4973, 13, assign5546, assign5547, assign5548, send45755, send45765, assign5549, send45770, assign5550, send45775, assign5551, send45780, send45783, Self);
symbol7579 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure6119 = (Object)new_Runtime_MethodClosure(method6119);
store_method((Type_Class)class1020, (Type_Symbol)symbol7579, (Runtime_MethodClosure)methodclosure6119);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable6294 = (Object)new_AST_Variable_named(L"parser");
localvariable6295 = (Object)new_AST_Variable_named(L"string");
localvariable6296 = (Object)new_AST_Variable_named(L"result");
array4975 = (Object)new_Type_Array_with(3, (Object)localvariable6294, (Object)localvariable6295, (Object)localvariable6296);
// method
send45784 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7994, 0);
assign5552 = (Object)new_AST_Assign((Object)localvariable6294, (Object)send45784);
string5303 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant8902 = (Object)new_AST_Constant((Object)string5303);
assign5553 = (Object)new_AST_Assign((Object)localvariable6295, (Object)constant8902);
// parse:
send45785 = (Object)new_AST_Send((Object)localvariable6294, (Object)symbol7858, 1, (Object)localvariable6295);
assign5554 = (Object)new_AST_Assign((Object)localvariable6296, (Object)send45785);
// hasReturnExpression
send45786 = (Object)new_AST_Send((Object)localvariable6296, (Object)symbol7687, 0);
// should
send45787 = (Object)new_AST_Send((Object)send45786, (Object)symbol7919, 0);
// be
send45788 = (Object)new_AST_Send((Object)send45787, (Object)symbol7989, 0);
// true
send45789 = (Object)new_AST_Send((Object)send45788, (Object)symbol7993, 0);
// class
send45790 = (Object)new_AST_Send((Object)localvariable6296, (Object)SMB_class, 0);
// should
send45791 = (Object)new_AST_Send((Object)send45790, (Object)symbol7919, 0);
// =
send45792 = (Object)new_AST_Send((Object)send45791, (Object)SMB__equal, 1, (Object)classreference1182);
// message
send45793 = (Object)new_AST_Send((Object)localvariable6296, (Object)symbol7748, 0);
// class
send45794 = (Object)new_AST_Send((Object)send45793, (Object)SMB_class, 0);
// should
send45795 = (Object)new_AST_Send((Object)send45794, (Object)symbol7919, 0);
// =
send45796 = (Object)new_AST_Send((Object)send45795, (Object)SMB__equal, 1, (Object)classreference1173);
// temporaries
send45797 = (Object)new_AST_Send((Object)localvariable6296, (Object)symbol7749, 0);
// size
send45798 = (Object)new_AST_Send((Object)send45797, (Object)SMB_size, 0);
// should
send45799 = (Object)new_AST_Send((Object)send45798, (Object)symbol7919, 0);
smallint3115 = (Object)new_Type_SmallInt(3);
constant8903 = (Object)new_AST_Constant((Object)smallint3115);
// =
send45800 = (Object)new_AST_Send((Object)send45799, (Object)SMB__equal, 1, (Object)constant8903);
// annotations
send45801 = (Object)new_AST_Send((Object)localvariable6296, (Object)symbol7746, 0);
// size
send45802 = (Object)new_AST_Send((Object)send45801, (Object)SMB_size, 0);
// should
send45803 = (Object)new_AST_Send((Object)send45802, (Object)symbol7919, 0);
smallint3116 = (Object)new_Type_SmallInt(3);
constant8904 = (Object)new_AST_Constant((Object)smallint3116);
// =
send45804 = (Object)new_AST_Send((Object)send45803, (Object)SMB__equal, 1, (Object)constant8904);
// statements
send45805 = (Object)new_AST_Send((Object)localvariable6296, (Object)symbol7745, 0);
// size
send45806 = (Object)new_AST_Send((Object)send45805, (Object)SMB_size, 0);
// should
send45807 = (Object)new_AST_Send((Object)send45806, (Object)symbol7919, 0);
smallint3117 = (Object)new_Type_SmallInt(2);
constant8905 = (Object)new_AST_Constant((Object)smallint3117);
// =
send45808 = (Object)new_AST_Send((Object)send45807, (Object)SMB__equal, 1, (Object)constant8905);
method6120 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4975, 10, assign5552, assign5553, assign5554, send45789, send45792, send45796, send45800, send45804, send45808, Self);
symbol7620 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure6120 = (Object)new_Runtime_MethodClosure(method6120);
store_method((Type_Class)class1020, (Type_Symbol)symbol7620, (Runtime_MethodClosure)methodclosure6120);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable6297 = (Object)new_AST_Variable_named(L"parser");
localvariable6298 = (Object)new_AST_Variable_named(L"string");
array4976 = (Object)new_Type_Array_with(2, (Object)localvariable6297, (Object)localvariable6298);
// temporaries
send45809 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7749, 0);
assign5555 = (Object)new_AST_Assign((Object)localvariable6297, (Object)send45809);
string5304 = (Object)new_Type_String(L"|a b c|");
constant8906 = (Object)new_AST_Constant((Object)string5304);
// on:
send45810 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8906);
assign5556 = (Object)new_AST_Assign((Object)localvariable6298, (Object)send45810);
// match:
send45811 = (Object)new_AST_Send((Object)localvariable6297, (Object)symbol7846, 1, (Object)localvariable6298);
constant8907 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send45812 = (Object)new_AST_Send((Object)send45811, (Object)symbol7962, 1, (Object)constant8907);
// asArray
send45813 = (Object)new_AST_Send((Object)send45812, (Object)SMB_asArray, 0);
// should
send45814 = (Object)new_AST_Send((Object)send45813, (Object)symbol7919, 0);
localvariable6299 = (Object)new_AST_Variable_named(L"receiver");
array4977 = (Object)new_Type_Array_with(1, (Object)localvariable6299);
smallint3118 = (Object)new_Type_SmallInt(1);
constant8908 = (Object)new_AST_Constant((Object)smallint3118);
string5305 = (Object)new_Type_String(L"a");
constant8909 = (Object)new_AST_Constant((Object)string5305);
// at:put:
send45815 = (Object)new_AST_Send((Object)localvariable6299, (Object)SMB_at_put_, 2, (Object)constant8908, (Object)constant8909);
smallint3119 = (Object)new_Type_SmallInt(2);
constant8910 = (Object)new_AST_Constant((Object)smallint3119);
string5306 = (Object)new_Type_String(L"b");
constant8911 = (Object)new_AST_Constant((Object)string5306);
// at:put:
send45816 = (Object)new_AST_Send((Object)localvariable6299, (Object)SMB_at_put_, 2, (Object)constant8910, (Object)constant8911);
smallint3120 = (Object)new_Type_SmallInt(3);
constant8912 = (Object)new_AST_Constant((Object)smallint3120);
string5307 = (Object)new_Type_String(L"c");
constant8913 = (Object)new_AST_Constant((Object)string5307);
// at:put:
send45817 = (Object)new_AST_Send((Object)localvariable6299, (Object)SMB_at_put_, 2, (Object)constant8912, (Object)constant8913);
// yourself
send45818 = (Object)new_AST_Send((Object)localvariable6299, (Object)symbol7546, 0);
block2886 = (Object)new_AST_Block_with((Type_Array)array4977, (Type_Array)empty_Type_Array, 1, 4, send45815, send45816, send45817, send45818);
smallint3121 = (Object)new_Type_SmallInt(3);
constant8914 = (Object)new_AST_Constant((Object)smallint3121);
// new:
send45819 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8914);
// value:
send45820 = (Object)new_AST_Send((Object)block2886, (Object)SMB_value_, 1, (Object)send45819);
// =
send45821 = (Object)new_AST_Send((Object)send45814, (Object)SMB__equal, 1, (Object)send45820);
// position
send45822 = (Object)new_AST_Send((Object)localvariable6298, (Object)symbol7894, 0);
// should
send45823 = (Object)new_AST_Send((Object)send45822, (Object)symbol7919, 0);
smallint3122 = (Object)new_Type_SmallInt(7);
constant8915 = (Object)new_AST_Constant((Object)smallint3122);
// =
send45824 = (Object)new_AST_Send((Object)send45823, (Object)SMB__equal, 1, (Object)constant8915);
string5308 = (Object)new_Type_String(L"|  a b c  |");
constant8916 = (Object)new_AST_Constant((Object)string5308);
// on:
send45825 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8916);
assign5557 = (Object)new_AST_Assign((Object)localvariable6298, (Object)send45825);
// match:
send45826 = (Object)new_AST_Send((Object)localvariable6297, (Object)symbol7846, 1, (Object)localvariable6298);
constant8917 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send45827 = (Object)new_AST_Send((Object)send45826, (Object)symbol7962, 1, (Object)constant8917);
// asArray
send45828 = (Object)new_AST_Send((Object)send45827, (Object)SMB_asArray, 0);
// should
send45829 = (Object)new_AST_Send((Object)send45828, (Object)symbol7919, 0);
localvariable6300 = (Object)new_AST_Variable_named(L"receiver");
array4978 = (Object)new_Type_Array_with(1, (Object)localvariable6300);
smallint3123 = (Object)new_Type_SmallInt(1);
constant8918 = (Object)new_AST_Constant((Object)smallint3123);
string5309 = (Object)new_Type_String(L"a");
constant8919 = (Object)new_AST_Constant((Object)string5309);
// at:put:
send45830 = (Object)new_AST_Send((Object)localvariable6300, (Object)SMB_at_put_, 2, (Object)constant8918, (Object)constant8919);
smallint3124 = (Object)new_Type_SmallInt(2);
constant8920 = (Object)new_AST_Constant((Object)smallint3124);
string5310 = (Object)new_Type_String(L"b");
constant8921 = (Object)new_AST_Constant((Object)string5310);
// at:put:
send45831 = (Object)new_AST_Send((Object)localvariable6300, (Object)SMB_at_put_, 2, (Object)constant8920, (Object)constant8921);
smallint3125 = (Object)new_Type_SmallInt(3);
constant8922 = (Object)new_AST_Constant((Object)smallint3125);
string5311 = (Object)new_Type_String(L"c");
constant8923 = (Object)new_AST_Constant((Object)string5311);
// at:put:
send45832 = (Object)new_AST_Send((Object)localvariable6300, (Object)SMB_at_put_, 2, (Object)constant8922, (Object)constant8923);
// yourself
send45833 = (Object)new_AST_Send((Object)localvariable6300, (Object)symbol7546, 0);
block2887 = (Object)new_AST_Block_with((Type_Array)array4978, (Type_Array)empty_Type_Array, 1, 4, send45830, send45831, send45832, send45833);
smallint3126 = (Object)new_Type_SmallInt(3);
constant8924 = (Object)new_AST_Constant((Object)smallint3126);
// new:
send45834 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant8924);
// value:
send45835 = (Object)new_AST_Send((Object)block2887, (Object)SMB_value_, 1, (Object)send45834);
// =
send45836 = (Object)new_AST_Send((Object)send45829, (Object)SMB__equal, 1, (Object)send45835);
// position
send45837 = (Object)new_AST_Send((Object)localvariable6298, (Object)symbol7894, 0);
// should
send45838 = (Object)new_AST_Send((Object)send45837, (Object)symbol7919, 0);
smallint3127 = (Object)new_Type_SmallInt(11);
constant8925 = (Object)new_AST_Constant((Object)smallint3127);
// =
send45839 = (Object)new_AST_Send((Object)send45838, (Object)SMB__equal, 1, (Object)constant8925);
method6121 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4976, 8, assign5555, assign5556, send45821, send45824, assign5557, send45836, send45839, Self);
symbol7572 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure6121 = (Object)new_Runtime_MethodClosure(method6121);
store_method((Type_Class)class1020, (Type_Symbol)symbol7572, (Runtime_MethodClosure)methodclosure6121);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable6301 = (Object)new_AST_Variable_named(L"parser");
localvariable6302 = (Object)new_AST_Variable_named(L"string");
array4979 = (Object)new_Type_Array_with(2, (Object)localvariable6301, (Object)localvariable6302);
// character
send45840 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7959, 0);
assign5558 = (Object)new_AST_Assign((Object)localvariable6301, (Object)send45840);
string5312 = (Object)new_Type_String(L"--");
constant8926 = (Object)new_AST_Constant((Object)string5312);
// on:
send45841 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8926);
assign5559 = (Object)new_AST_Assign((Object)localvariable6302, (Object)send45841);
// match:
send45842 = (Object)new_AST_Send((Object)localvariable6301, (Object)symbol7846, 1, (Object)localvariable6302);
// should
send45843 = (Object)new_AST_Send((Object)send45842, (Object)symbol7919, 0);
string5313 = (Object)new_Type_String(L"-");
constant8927 = (Object)new_AST_Constant((Object)string5313);
// =
send45844 = (Object)new_AST_Send((Object)send45843, (Object)SMB__equal, 1, (Object)constant8927);
// position
send45845 = (Object)new_AST_Send((Object)localvariable6302, (Object)symbol7894, 0);
// should
send45846 = (Object)new_AST_Send((Object)send45845, (Object)symbol7919, 0);
smallint3128 = (Object)new_Type_SmallInt(1);
constant8928 = (Object)new_AST_Constant((Object)smallint3128);
// =
send45847 = (Object)new_AST_Send((Object)send45846, (Object)SMB__equal, 1, (Object)constant8928);
string5314 = (Object)new_Type_String(L"__");
constant8929 = (Object)new_AST_Constant((Object)string5314);
// on:
send45848 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8929);
assign5560 = (Object)new_AST_Assign((Object)localvariable6302, (Object)send45848);
// match:
send45849 = (Object)new_AST_Send((Object)localvariable6301, (Object)symbol7846, 1, (Object)localvariable6302);
// should
send45850 = (Object)new_AST_Send((Object)send45849, (Object)symbol7919, 0);
string5315 = (Object)new_Type_String(L"_");
constant8930 = (Object)new_AST_Constant((Object)string5315);
// =
send45851 = (Object)new_AST_Send((Object)send45850, (Object)SMB__equal, 1, (Object)constant8930);
// position
send45852 = (Object)new_AST_Send((Object)localvariable6302, (Object)symbol7894, 0);
// should
send45853 = (Object)new_AST_Send((Object)send45852, (Object)symbol7919, 0);
smallint3129 = (Object)new_Type_SmallInt(1);
constant8931 = (Object)new_AST_Constant((Object)smallint3129);
// =
send45854 = (Object)new_AST_Send((Object)send45853, (Object)SMB__equal, 1, (Object)constant8931);
string5316 = (Object)new_Type_String(L"4");
constant8932 = (Object)new_AST_Constant((Object)string5316);
// on:
send45855 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8932);
assign5561 = (Object)new_AST_Assign((Object)localvariable6302, (Object)send45855);
// match:
send45856 = (Object)new_AST_Send((Object)localvariable6301, (Object)symbol7846, 1, (Object)localvariable6302);
// should
send45857 = (Object)new_AST_Send((Object)send45856, (Object)symbol7919, 0);
string5317 = (Object)new_Type_String(L"4");
constant8933 = (Object)new_AST_Constant((Object)string5317);
// =
send45858 = (Object)new_AST_Send((Object)send45857, (Object)SMB__equal, 1, (Object)constant8933);
// position
send45859 = (Object)new_AST_Send((Object)localvariable6302, (Object)symbol7894, 0);
// should
send45860 = (Object)new_AST_Send((Object)send45859, (Object)symbol7919, 0);
smallint3130 = (Object)new_Type_SmallInt(1);
constant8934 = (Object)new_AST_Constant((Object)smallint3130);
// =
send45861 = (Object)new_AST_Send((Object)send45860, (Object)SMB__equal, 1, (Object)constant8934);
string5318 = (Object)new_Type_String(L"p");
constant8935 = (Object)new_AST_Constant((Object)string5318);
// on:
send45862 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8935);
assign5562 = (Object)new_AST_Assign((Object)localvariable6302, (Object)send45862);
// match:
send45863 = (Object)new_AST_Send((Object)localvariable6301, (Object)symbol7846, 1, (Object)localvariable6302);
// should
send45864 = (Object)new_AST_Send((Object)send45863, (Object)symbol7919, 0);
string5319 = (Object)new_Type_String(L"p");
constant8936 = (Object)new_AST_Constant((Object)string5319);
// =
send45865 = (Object)new_AST_Send((Object)send45864, (Object)SMB__equal, 1, (Object)constant8936);
// position
send45866 = (Object)new_AST_Send((Object)localvariable6302, (Object)symbol7894, 0);
// should
send45867 = (Object)new_AST_Send((Object)send45866, (Object)symbol7919, 0);
smallint3131 = (Object)new_Type_SmallInt(1);
constant8937 = (Object)new_AST_Constant((Object)smallint3131);
// =
send45868 = (Object)new_AST_Send((Object)send45867, (Object)SMB__equal, 1, (Object)constant8937);
string5320 = (Object)new_Type_String(L"&");
constant8938 = (Object)new_AST_Constant((Object)string5320);
// on:
send45869 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8938);
assign5563 = (Object)new_AST_Assign((Object)localvariable6302, (Object)send45869);
// match:
send45870 = (Object)new_AST_Send((Object)localvariable6301, (Object)symbol7846, 1, (Object)localvariable6302);
// should
send45871 = (Object)new_AST_Send((Object)send45870, (Object)symbol7919, 0);
string5321 = (Object)new_Type_String(L"&");
constant8939 = (Object)new_AST_Constant((Object)string5321);
// =
send45872 = (Object)new_AST_Send((Object)send45871, (Object)SMB__equal, 1, (Object)constant8939);
// position
send45873 = (Object)new_AST_Send((Object)localvariable6302, (Object)symbol7894, 0);
// should
send45874 = (Object)new_AST_Send((Object)send45873, (Object)symbol7919, 0);
smallint3132 = (Object)new_Type_SmallInt(1);
constant8940 = (Object)new_AST_Constant((Object)smallint3132);
// =
send45875 = (Object)new_AST_Send((Object)send45874, (Object)SMB__equal, 1, (Object)constant8940);
string5322 = (Object)new_Type_String(L"\'");
constant8941 = (Object)new_AST_Constant((Object)string5322);
// on:
send45876 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8941);
assign5564 = (Object)new_AST_Assign((Object)localvariable6302, (Object)send45876);
// match:
send45877 = (Object)new_AST_Send((Object)localvariable6301, (Object)symbol7846, 1, (Object)localvariable6302);
// should
send45878 = (Object)new_AST_Send((Object)send45877, (Object)symbol7919, 0);
// be
send45879 = (Object)new_AST_Send((Object)send45878, (Object)symbol7989, 0);
// isNil
send45880 = (Object)new_AST_Send((Object)send45879, (Object)SMB_isNil, 0);
// position
send45881 = (Object)new_AST_Send((Object)localvariable6302, (Object)symbol7894, 0);
// should
send45882 = (Object)new_AST_Send((Object)send45881, (Object)symbol7919, 0);
smallint3133 = (Object)new_Type_SmallInt(0);
constant8942 = (Object)new_AST_Constant((Object)smallint3133);
// =
send45883 = (Object)new_AST_Send((Object)send45882, (Object)SMB__equal, 1, (Object)constant8942);
method6122 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4979, 20, assign5558, assign5559, send45844, send45847, assign5560, send45851, send45854, assign5561, send45858, send45861, assign5562, send45865, send45868, assign5563, send45872, send45875, assign5564, send45880, send45883, Self);
symbol7609 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure6122 = (Object)new_Runtime_MethodClosure(method6122);
store_method((Type_Class)class1020, (Type_Symbol)symbol7609, (Runtime_MethodClosure)methodclosure6122);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable6303 = (Object)new_AST_Variable_named(L"parser");
localvariable6304 = (Object)new_AST_Variable_named(L"string");
localvariable6305 = (Object)new_AST_Variable_named(L"result");
array4980 = (Object)new_Type_Array_with(3, (Object)localvariable6303, (Object)localvariable6304, (Object)localvariable6305);
// method
send45884 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7994, 0);
assign5565 = (Object)new_AST_Assign((Object)localvariable6303, (Object)send45884);
string5323 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant8943 = (Object)new_AST_Constant((Object)string5323);
assign5566 = (Object)new_AST_Assign((Object)localvariable6304, (Object)constant8943);
// parse:
send45885 = (Object)new_AST_Send((Object)localvariable6303, (Object)symbol7858, 1, (Object)localvariable6304);
assign5567 = (Object)new_AST_Assign((Object)localvariable6305, (Object)send45885);
// hasReturnExpression
send45886 = (Object)new_AST_Send((Object)localvariable6305, (Object)symbol7687, 0);
// should
send45887 = (Object)new_AST_Send((Object)send45886, (Object)symbol7919, 0);
// be
send45888 = (Object)new_AST_Send((Object)send45887, (Object)symbol7989, 0);
// true
send45889 = (Object)new_AST_Send((Object)send45888, (Object)symbol7993, 0);
// class
send45890 = (Object)new_AST_Send((Object)localvariable6305, (Object)SMB_class, 0);
// should
send45891 = (Object)new_AST_Send((Object)send45890, (Object)symbol7919, 0);
// =
send45892 = (Object)new_AST_Send((Object)send45891, (Object)SMB__equal, 1, (Object)classreference1182);
// message
send45893 = (Object)new_AST_Send((Object)localvariable6305, (Object)symbol7748, 0);
// asString
send45894 = (Object)new_AST_Send((Object)send45893, (Object)SMB_asString, 0);
// should
send45895 = (Object)new_AST_Send((Object)send45894, (Object)symbol7919, 0);
string5324 = (Object)new_Type_String(L"withA:withB:withC:");
constant8944 = (Object)new_AST_Constant((Object)string5324);
// =
send45896 = (Object)new_AST_Send((Object)send45895, (Object)SMB__equal, 1, (Object)constant8944);
method6123 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4980, 7, assign5565, assign5566, assign5567, send45889, send45892, send45896, Self);
symbol7592 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure6123 = (Object)new_Runtime_MethodClosure(method6123);
store_method((Type_Class)class1020, (Type_Symbol)symbol7592, (Runtime_MethodClosure)methodclosure6123);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable6306 = (Object)new_AST_Variable_named(L"parser");
localvariable6307 = (Object)new_AST_Variable_named(L"string");
array4981 = (Object)new_Type_Array_with(2, (Object)localvariable6306, (Object)localvariable6307);
// separator
send45897 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7908, 0);
assign5568 = (Object)new_AST_Assign((Object)localvariable6306, (Object)send45897);
string5325 = (Object)new_Type_String(L"\"Test\"");
constant8945 = (Object)new_AST_Constant((Object)string5325);
// on:
send45898 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8945);
assign5569 = (Object)new_AST_Assign((Object)localvariable6307, (Object)send45898);
// match:
send45899 = (Object)new_AST_Send((Object)localvariable6306, (Object)symbol7846, 1, (Object)localvariable6307);
// should
send45900 = (Object)new_AST_Send((Object)send45899, (Object)symbol7919, 0);
// not
send45901 = (Object)new_AST_Send((Object)send45900, (Object)SMB_not, 0);
// be
send45902 = (Object)new_AST_Send((Object)send45901, (Object)symbol7989, 0);
// isNil
send45903 = (Object)new_AST_Send((Object)send45902, (Object)SMB_isNil, 0);
// position
send45904 = (Object)new_AST_Send((Object)localvariable6307, (Object)symbol7894, 0);
// should
send45905 = (Object)new_AST_Send((Object)send45904, (Object)symbol7919, 0);
smallint3134 = (Object)new_Type_SmallInt(6);
constant8946 = (Object)new_AST_Constant((Object)smallint3134);
// =
send45906 = (Object)new_AST_Send((Object)send45905, (Object)SMB__equal, 1, (Object)constant8946);
string5326 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant8947 = (Object)new_AST_Constant((Object)string5326);
// on:
send45907 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8947);
assign5570 = (Object)new_AST_Assign((Object)localvariable6307, (Object)send45907);
// match:
send45908 = (Object)new_AST_Send((Object)localvariable6306, (Object)symbol7846, 1, (Object)localvariable6307);
// should
send45909 = (Object)new_AST_Send((Object)send45908, (Object)symbol7919, 0);
// not
send45910 = (Object)new_AST_Send((Object)send45909, (Object)SMB_not, 0);
// be
send45911 = (Object)new_AST_Send((Object)send45910, (Object)symbol7989, 0);
// isNil
send45912 = (Object)new_AST_Send((Object)send45911, (Object)SMB_isNil, 0);
// position
send45913 = (Object)new_AST_Send((Object)localvariable6307, (Object)symbol7894, 0);
// should
send45914 = (Object)new_AST_Send((Object)send45913, (Object)symbol7919, 0);
smallint3135 = (Object)new_Type_SmallInt(18);
constant8948 = (Object)new_AST_Constant((Object)smallint3135);
// =
send45915 = (Object)new_AST_Send((Object)send45914, (Object)SMB__equal, 1, (Object)constant8948);
string5327 = (Object)new_Type_String(L"");
constant8949 = (Object)new_AST_Constant((Object)string5327);
// on:
send45916 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8949);
assign5571 = (Object)new_AST_Assign((Object)localvariable6307, (Object)send45916);
// match:
send45917 = (Object)new_AST_Send((Object)localvariable6306, (Object)symbol7846, 1, (Object)localvariable6307);
// should
send45918 = (Object)new_AST_Send((Object)send45917, (Object)symbol7919, 0);
// not
send45919 = (Object)new_AST_Send((Object)send45918, (Object)SMB_not, 0);
// be
send45920 = (Object)new_AST_Send((Object)send45919, (Object)symbol7989, 0);
// isNil
send45921 = (Object)new_AST_Send((Object)send45920, (Object)SMB_isNil, 0);
// position
send45922 = (Object)new_AST_Send((Object)localvariable6307, (Object)symbol7894, 0);
// should
send45923 = (Object)new_AST_Send((Object)send45922, (Object)symbol7919, 0);
smallint3136 = (Object)new_Type_SmallInt(0);
constant8950 = (Object)new_AST_Constant((Object)smallint3136);
// =
send45924 = (Object)new_AST_Send((Object)send45923, (Object)SMB__equal, 1, (Object)constant8950);
method6124 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4981, 11, assign5568, assign5569, send45903, send45906, assign5570, send45912, send45915, assign5571, send45921, send45924, Self);
symbol7584 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure6124 = (Object)new_Runtime_MethodClosure(method6124);
store_method((Type_Class)class1020, (Type_Symbol)symbol7584, (Runtime_MethodClosure)methodclosure6124);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable6308 = (Object)new_AST_Variable_named(L"parser");
localvariable6309 = (Object)new_AST_Variable_named(L"string");
localvariable6310 = (Object)new_AST_Variable_named(L"result");
array4982 = (Object)new_Type_Array_with(3, (Object)localvariable6308, (Object)localvariable6309, (Object)localvariable6310);
// binaryMessageDefinition
send45925 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7954, 0);
assign5572 = (Object)new_AST_Assign((Object)localvariable6308, (Object)send45925);
string5328 = (Object)new_Type_String(L"+= a");
constant8951 = (Object)new_AST_Constant((Object)string5328);
// on:
send45926 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8951);
assign5573 = (Object)new_AST_Assign((Object)localvariable6309, (Object)send45926);
// match:
send45927 = (Object)new_AST_Send((Object)localvariable6308, (Object)symbol7846, 1, (Object)localvariable6309);
assign5574 = (Object)new_AST_Assign((Object)localvariable6310, (Object)send45927);
// class
send45928 = (Object)new_AST_Send((Object)localvariable6310, (Object)SMB_class, 0);
// should
send45929 = (Object)new_AST_Send((Object)send45928, (Object)symbol7919, 0);
// =
send45930 = (Object)new_AST_Send((Object)send45929, (Object)SMB__equal, 1, (Object)classreference1189);
// selector
send45931 = (Object)new_AST_Send((Object)localvariable6310, (Object)symbol7654, 0);
// printString
send45932 = (Object)new_AST_Send((Object)send45931, (Object)symbol7849, 0);
// should
send45933 = (Object)new_AST_Send((Object)send45932, (Object)symbol7919, 0);
string5329 = (Object)new_Type_String(L"+=");
constant8952 = (Object)new_AST_Constant((Object)string5329);
// =
send45934 = (Object)new_AST_Send((Object)send45933, (Object)SMB__equal, 1, (Object)constant8952);
// parameter
send45935 = (Object)new_AST_Send((Object)localvariable6310, (Object)symbol7753, 0);
// class
send45936 = (Object)new_AST_Send((Object)send45935, (Object)SMB_class, 0);
// should
send45937 = (Object)new_AST_Send((Object)send45936, (Object)symbol7919, 0);
// =
send45938 = (Object)new_AST_Send((Object)send45937, (Object)SMB__equal, 1, (Object)classreference1180);
// parameter
send45939 = (Object)new_AST_Send((Object)localvariable6310, (Object)symbol7753, 0);
// name
send45940 = (Object)new_AST_Send((Object)send45939, (Object)SMB_name, 0);
// asString
send45941 = (Object)new_AST_Send((Object)send45940, (Object)SMB_asString, 0);
// should
send45942 = (Object)new_AST_Send((Object)send45941, (Object)symbol7919, 0);
string5330 = (Object)new_Type_String(L"a");
constant8953 = (Object)new_AST_Constant((Object)string5330);
// =
send45943 = (Object)new_AST_Send((Object)send45942, (Object)SMB__equal, 1, (Object)constant8953);
// position
send45944 = (Object)new_AST_Send((Object)localvariable6309, (Object)symbol7894, 0);
// should
send45945 = (Object)new_AST_Send((Object)send45944, (Object)symbol7919, 0);
smallint3137 = (Object)new_Type_SmallInt(4);
constant8954 = (Object)new_AST_Constant((Object)smallint3137);
// =
send45946 = (Object)new_AST_Send((Object)send45945, (Object)SMB__equal, 1, (Object)constant8954);
string5331 = (Object)new_Type_String(L"|= a");
constant8955 = (Object)new_AST_Constant((Object)string5331);
// on:
send45947 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8955);
assign5575 = (Object)new_AST_Assign((Object)localvariable6309, (Object)send45947);
// match:
send45948 = (Object)new_AST_Send((Object)localvariable6308, (Object)symbol7846, 1, (Object)localvariable6309);
// should
send45949 = (Object)new_AST_Send((Object)send45948, (Object)symbol7919, 0);
// be
send45950 = (Object)new_AST_Send((Object)send45949, (Object)symbol7989, 0);
// isNil
send45951 = (Object)new_AST_Send((Object)send45950, (Object)SMB_isNil, 0);
// position
send45952 = (Object)new_AST_Send((Object)localvariable6309, (Object)symbol7894, 0);
// should
send45953 = (Object)new_AST_Send((Object)send45952, (Object)symbol7919, 0);
smallint3138 = (Object)new_Type_SmallInt(0);
constant8956 = (Object)new_AST_Constant((Object)smallint3138);
// =
send45954 = (Object)new_AST_Send((Object)send45953, (Object)SMB__equal, 1, (Object)constant8956);
string5332 = (Object)new_Type_String(L"-= abc d");
constant8957 = (Object)new_AST_Constant((Object)string5332);
// on:
send45955 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8957);
assign5576 = (Object)new_AST_Assign((Object)localvariable6309, (Object)send45955);
// match:
send45956 = (Object)new_AST_Send((Object)localvariable6308, (Object)symbol7846, 1, (Object)localvariable6309);
assign5577 = (Object)new_AST_Assign((Object)localvariable6310, (Object)send45956);
// class
send45957 = (Object)new_AST_Send((Object)localvariable6310, (Object)SMB_class, 0);
// should
send45958 = (Object)new_AST_Send((Object)send45957, (Object)symbol7919, 0);
// =
send45959 = (Object)new_AST_Send((Object)send45958, (Object)SMB__equal, 1, (Object)classreference1189);
// selector
send45960 = (Object)new_AST_Send((Object)localvariable6310, (Object)symbol7654, 0);
// printString
send45961 = (Object)new_AST_Send((Object)send45960, (Object)symbol7849, 0);
// should
send45962 = (Object)new_AST_Send((Object)send45961, (Object)symbol7919, 0);
string5333 = (Object)new_Type_String(L"-=");
constant8958 = (Object)new_AST_Constant((Object)string5333);
// =
send45963 = (Object)new_AST_Send((Object)send45962, (Object)SMB__equal, 1, (Object)constant8958);
// parameter
send45964 = (Object)new_AST_Send((Object)localvariable6310, (Object)symbol7753, 0);
// class
send45965 = (Object)new_AST_Send((Object)send45964, (Object)SMB_class, 0);
// should
send45966 = (Object)new_AST_Send((Object)send45965, (Object)symbol7919, 0);
// =
send45967 = (Object)new_AST_Send((Object)send45966, (Object)SMB__equal, 1, (Object)classreference1180);
// parameter
send45968 = (Object)new_AST_Send((Object)localvariable6310, (Object)symbol7753, 0);
// name
send45969 = (Object)new_AST_Send((Object)send45968, (Object)SMB_name, 0);
// asString
send45970 = (Object)new_AST_Send((Object)send45969, (Object)SMB_asString, 0);
// should
send45971 = (Object)new_AST_Send((Object)send45970, (Object)symbol7919, 0);
string5334 = (Object)new_Type_String(L"abc");
constant8959 = (Object)new_AST_Constant((Object)string5334);
// =
send45972 = (Object)new_AST_Send((Object)send45971, (Object)SMB__equal, 1, (Object)constant8959);
// position
send45973 = (Object)new_AST_Send((Object)localvariable6309, (Object)symbol7894, 0);
// should
send45974 = (Object)new_AST_Send((Object)send45973, (Object)symbol7919, 0);
smallint3139 = (Object)new_Type_SmallInt(6);
constant8960 = (Object)new_AST_Constant((Object)smallint3139);
// =
send45975 = (Object)new_AST_Send((Object)send45974, (Object)SMB__equal, 1, (Object)constant8960);
method6125 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4982, 19, assign5572, assign5573, assign5574, send45930, send45934, send45938, send45943, send45946, assign5575, send45951, send45954, assign5576, assign5577, send45959, send45963, send45967, send45972, send45975, Self);
symbol7617 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure6125 = (Object)new_Runtime_MethodClosure(method6125);
store_method((Type_Class)class1020, (Type_Symbol)symbol7617, (Runtime_MethodClosure)methodclosure6125);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable6311 = (Object)new_AST_Variable_named(L"parser");
localvariable6312 = (Object)new_AST_Variable_named(L"string");
array4983 = (Object)new_Type_Array_with(2, (Object)localvariable6311, (Object)localvariable6312);
// binarySelector
send45976 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7929, 0);
assign5578 = (Object)new_AST_Assign((Object)localvariable6311, (Object)send45976);
string5335 = (Object)new_Type_String(L"+= a");
constant8961 = (Object)new_AST_Constant((Object)string5335);
// on:
send45977 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8961);
assign5579 = (Object)new_AST_Assign((Object)localvariable6312, (Object)send45977);
// match:
send45978 = (Object)new_AST_Send((Object)localvariable6311, (Object)symbol7846, 1, (Object)localvariable6312);
// printString
send45979 = (Object)new_AST_Send((Object)send45978, (Object)symbol7849, 0);
// should
send45980 = (Object)new_AST_Send((Object)send45979, (Object)symbol7919, 0);
string5336 = (Object)new_Type_String(L"+=");
constant8962 = (Object)new_AST_Constant((Object)string5336);
// =
send45981 = (Object)new_AST_Send((Object)send45980, (Object)SMB__equal, 1, (Object)constant8962);
// position
send45982 = (Object)new_AST_Send((Object)localvariable6312, (Object)symbol7894, 0);
// should
send45983 = (Object)new_AST_Send((Object)send45982, (Object)symbol7919, 0);
smallint3140 = (Object)new_Type_SmallInt(2);
constant8963 = (Object)new_AST_Constant((Object)smallint3140);
// =
send45984 = (Object)new_AST_Send((Object)send45983, (Object)SMB__equal, 1, (Object)constant8963);
string5337 = (Object)new_Type_String(L"|= a");
constant8964 = (Object)new_AST_Constant((Object)string5337);
// on:
send45985 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8964);
assign5580 = (Object)new_AST_Assign((Object)localvariable6312, (Object)send45985);
// match:
send45986 = (Object)new_AST_Send((Object)localvariable6311, (Object)symbol7846, 1, (Object)localvariable6312);
// printString
send45987 = (Object)new_AST_Send((Object)send45986, (Object)symbol7849, 0);
// should
send45988 = (Object)new_AST_Send((Object)send45987, (Object)symbol7919, 0);
string5338 = (Object)new_Type_String(L"|");
constant8965 = (Object)new_AST_Constant((Object)string5338);
// =
send45989 = (Object)new_AST_Send((Object)send45988, (Object)SMB__equal, 1, (Object)constant8965);
// position
send45990 = (Object)new_AST_Send((Object)localvariable6312, (Object)symbol7894, 0);
// should
send45991 = (Object)new_AST_Send((Object)send45990, (Object)symbol7919, 0);
smallint3141 = (Object)new_Type_SmallInt(1);
constant8966 = (Object)new_AST_Constant((Object)smallint3141);
// =
send45992 = (Object)new_AST_Send((Object)send45991, (Object)SMB__equal, 1, (Object)constant8966);
string5339 = (Object)new_Type_String(L"-= a");
constant8967 = (Object)new_AST_Constant((Object)string5339);
// on:
send45993 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8967);
assign5581 = (Object)new_AST_Assign((Object)localvariable6312, (Object)send45993);
// match:
send45994 = (Object)new_AST_Send((Object)localvariable6311, (Object)symbol7846, 1, (Object)localvariable6312);
// printString
send45995 = (Object)new_AST_Send((Object)send45994, (Object)symbol7849, 0);
// should
send45996 = (Object)new_AST_Send((Object)send45995, (Object)symbol7919, 0);
string5340 = (Object)new_Type_String(L"-=");
constant8968 = (Object)new_AST_Constant((Object)string5340);
// =
send45997 = (Object)new_AST_Send((Object)send45996, (Object)SMB__equal, 1, (Object)constant8968);
// position
send45998 = (Object)new_AST_Send((Object)localvariable6312, (Object)symbol7894, 0);
// should
send45999 = (Object)new_AST_Send((Object)send45998, (Object)symbol7919, 0);
smallint3142 = (Object)new_Type_SmallInt(2);
constant8969 = (Object)new_AST_Constant((Object)smallint3142);
// =
send46000 = (Object)new_AST_Send((Object)send45999, (Object)SMB__equal, 1, (Object)constant8969);
string5341 = (Object)new_Type_String(L"=- a");
constant8970 = (Object)new_AST_Constant((Object)string5341);
// on:
send46001 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8970);
assign5582 = (Object)new_AST_Assign((Object)localvariable6312, (Object)send46001);
// match:
send46002 = (Object)new_AST_Send((Object)localvariable6311, (Object)symbol7846, 1, (Object)localvariable6312);
// printString
send46003 = (Object)new_AST_Send((Object)send46002, (Object)symbol7849, 0);
// should
send46004 = (Object)new_AST_Send((Object)send46003, (Object)symbol7919, 0);
string5342 = (Object)new_Type_String(L"=");
constant8971 = (Object)new_AST_Constant((Object)string5342);
// =
send46005 = (Object)new_AST_Send((Object)send46004, (Object)SMB__equal, 1, (Object)constant8971);
// position
send46006 = (Object)new_AST_Send((Object)localvariable6312, (Object)symbol7894, 0);
// should
send46007 = (Object)new_AST_Send((Object)send46006, (Object)symbol7919, 0);
smallint3143 = (Object)new_Type_SmallInt(1);
constant8972 = (Object)new_AST_Constant((Object)smallint3143);
// =
send46008 = (Object)new_AST_Send((Object)send46007, (Object)SMB__equal, 1, (Object)constant8972);
method6126 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4983, 14, assign5578, assign5579, send45981, send45984, assign5580, send45989, send45992, assign5581, send45997, send46000, assign5582, send46005, send46008, Self);
symbol7610 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure6126 = (Object)new_Runtime_MethodClosure(method6126);
store_method((Type_Class)class1020, (Type_Symbol)symbol7610, (Runtime_MethodClosure)methodclosure6126);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable6313 = (Object)new_AST_Variable_named(L"parser");
localvariable6314 = (Object)new_AST_Variable_named(L"string");
localvariable6315 = (Object)new_AST_Variable_named(L"result");
array4984 = (Object)new_Type_Array_with(3, (Object)localvariable6313, (Object)localvariable6314, (Object)localvariable6315);
// expression
send46009 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7757, 0);
assign5583 = (Object)new_AST_Assign((Object)localvariable6313, (Object)send46009);
string5343 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant8973 = (Object)new_AST_Constant((Object)string5343);
// on:
send46010 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8973);
assign5584 = (Object)new_AST_Assign((Object)localvariable6314, (Object)send46010);
// match:
send46011 = (Object)new_AST_Send((Object)localvariable6313, (Object)symbol7846, 1, (Object)localvariable6314);
assign5585 = (Object)new_AST_Assign((Object)localvariable6315, (Object)send46011);
// class
send46012 = (Object)new_AST_Send((Object)localvariable6315, (Object)SMB_class, 0);
// should
send46013 = (Object)new_AST_Send((Object)send46012, (Object)symbol7919, 0);
// =
send46014 = (Object)new_AST_Send((Object)send46013, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46015 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7759, 0);
// class
send46016 = (Object)new_AST_Send((Object)send46015, (Object)SMB_class, 0);
// should
send46017 = (Object)new_AST_Send((Object)send46016, (Object)symbol7919, 0);
// =
send46018 = (Object)new_AST_Send((Object)send46017, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46019 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7759, 0);
// name
send46020 = (Object)new_AST_Send((Object)send46019, (Object)SMB_name, 0);
// should
send46021 = (Object)new_AST_Send((Object)send46020, (Object)symbol7919, 0);
string5344 = (Object)new_Type_String(L"a");
constant8974 = (Object)new_AST_Constant((Object)string5344);
// =
send46022 = (Object)new_AST_Send((Object)send46021, (Object)SMB__equal, 1, (Object)constant8974);
// expression
send46023 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7757, 0);
assign5586 = (Object)new_AST_Assign((Object)localvariable6315, (Object)send46023);
// class
send46024 = (Object)new_AST_Send((Object)localvariable6315, (Object)SMB_class, 0);
// should
send46025 = (Object)new_AST_Send((Object)send46024, (Object)symbol7919, 0);
// =
send46026 = (Object)new_AST_Send((Object)send46025, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46027 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7759, 0);
// class
send46028 = (Object)new_AST_Send((Object)send46027, (Object)SMB_class, 0);
// should
send46029 = (Object)new_AST_Send((Object)send46028, (Object)symbol7919, 0);
// =
send46030 = (Object)new_AST_Send((Object)send46029, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46031 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7759, 0);
// name
send46032 = (Object)new_AST_Send((Object)send46031, (Object)SMB_name, 0);
// should
send46033 = (Object)new_AST_Send((Object)send46032, (Object)symbol7919, 0);
string5345 = (Object)new_Type_String(L"b");
constant8975 = (Object)new_AST_Constant((Object)string5345);
// =
send46034 = (Object)new_AST_Send((Object)send46033, (Object)SMB__equal, 1, (Object)constant8975);
// expression
send46035 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7757, 0);
assign5587 = (Object)new_AST_Assign((Object)localvariable6315, (Object)send46035);
// class
send46036 = (Object)new_AST_Send((Object)localvariable6315, (Object)SMB_class, 0);
// should
send46037 = (Object)new_AST_Send((Object)send46036, (Object)symbol7919, 0);
// =
send46038 = (Object)new_AST_Send((Object)send46037, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46039 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7759, 0);
// class
send46040 = (Object)new_AST_Send((Object)send46039, (Object)SMB_class, 0);
// should
send46041 = (Object)new_AST_Send((Object)send46040, (Object)symbol7919, 0);
// =
send46042 = (Object)new_AST_Send((Object)send46041, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46043 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7759, 0);
// name
send46044 = (Object)new_AST_Send((Object)send46043, (Object)SMB_name, 0);
// should
send46045 = (Object)new_AST_Send((Object)send46044, (Object)symbol7919, 0);
string5346 = (Object)new_Type_String(L"c");
constant8976 = (Object)new_AST_Constant((Object)string5346);
// =
send46046 = (Object)new_AST_Send((Object)send46045, (Object)SMB__equal, 1, (Object)constant8976);
// expression
send46047 = (Object)new_AST_Send((Object)localvariable6315, (Object)symbol7757, 0);
// class
send46048 = (Object)new_AST_Send((Object)send46047, (Object)SMB_class, 0);
// should
send46049 = (Object)new_AST_Send((Object)send46048, (Object)symbol7919, 0);
// =
send46050 = (Object)new_AST_Send((Object)send46049, (Object)SMB__equal, 1, (Object)classreference1195);
method6127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4984, 16, assign5583, assign5584, assign5585, send46014, send46018, send46022, assign5586, send46026, send46030, send46034, assign5587, send46038, send46042, send46046, send46050, Self);
symbol7622 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure6127 = (Object)new_Runtime_MethodClosure(method6127);
store_method((Type_Class)class1020, (Type_Symbol)symbol7622, (Runtime_MethodClosure)methodclosure6127);


// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable6316 = (Object)new_AST_Variable_named(L"parser");
localvariable6317 = (Object)new_AST_Variable_named(L"string");
localvariable6318 = (Object)new_AST_Variable_named(L"result");
array4985 = (Object)new_Type_Array_with(3, (Object)localvariable6316, (Object)localvariable6317, (Object)localvariable6318);
// method
send46051 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7994, 0);
assign5588 = (Object)new_AST_Assign((Object)localvariable6316, (Object)send46051);
string5347 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant8977 = (Object)new_AST_Constant((Object)string5347);
assign5589 = (Object)new_AST_Assign((Object)localvariable6317, (Object)constant8977);
// parse:
send46052 = (Object)new_AST_Send((Object)localvariable6316, (Object)symbol7858, 1, (Object)localvariable6317);
assign5590 = (Object)new_AST_Assign((Object)localvariable6318, (Object)send46052);
// hasReturnExpression
send46053 = (Object)new_AST_Send((Object)localvariable6318, (Object)symbol7687, 0);
// should
send46054 = (Object)new_AST_Send((Object)send46053, (Object)symbol7919, 0);
// be
send46055 = (Object)new_AST_Send((Object)send46054, (Object)symbol7989, 0);
// true
send46056 = (Object)new_AST_Send((Object)send46055, (Object)symbol7993, 0);
// class
send46057 = (Object)new_AST_Send((Object)localvariable6318, (Object)SMB_class, 0);
// should
send46058 = (Object)new_AST_Send((Object)send46057, (Object)symbol7919, 0);
// =
send46059 = (Object)new_AST_Send((Object)send46058, (Object)SMB__equal, 1, (Object)classreference1182);
// message
send46060 = (Object)new_AST_Send((Object)localvariable6318, (Object)symbol7748, 0);
// asString
send46061 = (Object)new_AST_Send((Object)send46060, (Object)SMB_asString, 0);
// should
send46062 = (Object)new_AST_Send((Object)send46061, (Object)symbol7919, 0);
string5348 = (Object)new_Type_String(L"withA:withB:withC:");
constant8978 = (Object)new_AST_Constant((Object)string5348);
// =
send46063 = (Object)new_AST_Send((Object)send46062, (Object)SMB__equal, 1, (Object)constant8978);
// statements
send46064 = (Object)new_AST_Send((Object)localvariable6318, (Object)symbol7745, 0);
// last
send46065 = (Object)new_AST_Send((Object)send46064, (Object)symbol7701, 0);
// hasReturnExpression
send46066 = (Object)new_AST_Send((Object)send46065, (Object)symbol7687, 0);
// should
send46067 = (Object)new_AST_Send((Object)send46066, (Object)symbol7919, 0);
// be
send46068 = (Object)new_AST_Send((Object)send46067, (Object)symbol7989, 0);
// true
send46069 = (Object)new_AST_Send((Object)send46068, (Object)symbol7993, 0);
method6128 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4985, 8, assign5588, assign5589, assign5590, send46056, send46059, send46063, send46069, Self);
symbol7574 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure6128 = (Object)new_Runtime_MethodClosure(method6128);
store_method((Type_Class)class1020, (Type_Symbol)symbol7574, (Runtime_MethodClosure)methodclosure6128);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable6319 = (Object)new_AST_Variable_named(L"parser");
array4986 = (Object)new_Type_Array_with(1, (Object)localvariable6319);
string5349 = (Object)new_Type_String(L"COMMENT");
constant8979 = (Object)new_AST_Constant((Object)string5349);
// commentFormat
send46070 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7982, 0);
// named:parsing:
send46071 = (Object)new_AST_Send((Object)classreference1164, (Object)symbol7932, 2, (Object)constant8979, (Object)send46070);
assign5591 = (Object)new_AST_Assign((Object)localvariable6319, (Object)send46071);
string5350 = (Object)new_Type_String(L"\"Test\"");
constant8980 = (Object)new_AST_Constant((Object)string5350);
// parse:
send46072 = (Object)new_AST_Send((Object)localvariable6319, (Object)symbol7858, 1, (Object)constant8980);
// should
send46073 = (Object)new_AST_Send((Object)send46072, (Object)symbol7919, 0);
// not
send46074 = (Object)new_AST_Send((Object)send46073, (Object)SMB_not, 0);
// be
send46075 = (Object)new_AST_Send((Object)send46074, (Object)symbol7989, 0);
// isNil
send46076 = (Object)new_AST_Send((Object)send46075, (Object)SMB_isNil, 0);
string5351 = (Object)new_Type_String(L"\"Test");
constant8981 = (Object)new_AST_Constant((Object)string5351);
// parse:
send46077 = (Object)new_AST_Send((Object)localvariable6319, (Object)symbol7858, 1, (Object)constant8981);
// should
send46078 = (Object)new_AST_Send((Object)send46077, (Object)symbol7919, 0);
// be
send46079 = (Object)new_AST_Send((Object)send46078, (Object)symbol7989, 0);
// isNil
send46080 = (Object)new_AST_Send((Object)send46079, (Object)SMB_isNil, 0);
method6129 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4986, 4, assign5591, send46076, send46080, Self);
symbol7619 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure6129 = (Object)new_Runtime_MethodClosure(method6129);
store_method((Type_Class)class1020, (Type_Symbol)symbol7619, (Runtime_MethodClosure)methodclosure6129);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable6320 = (Object)new_AST_Variable_named(L"parser");
localvariable6321 = (Object)new_AST_Variable_named(L"string");
array4987 = (Object)new_Type_Array_with(2, (Object)localvariable6320, (Object)localvariable6321);
// keyword
send46081 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7957, 0);
assign5592 = (Object)new_AST_Assign((Object)localvariable6320, (Object)send46081);
string5352 = (Object)new_Type_String(L"abcd: ");
constant8982 = (Object)new_AST_Constant((Object)string5352);
// on:
send46082 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8982);
assign5593 = (Object)new_AST_Assign((Object)localvariable6321, (Object)send46082);
// match:
send46083 = (Object)new_AST_Send((Object)localvariable6320, (Object)symbol7846, 1, (Object)localvariable6321);
// should
send46084 = (Object)new_AST_Send((Object)send46083, (Object)symbol7919, 0);
string5353 = (Object)new_Type_String(L"abcd");
constant8983 = (Object)new_AST_Constant((Object)string5353);
// =
send46085 = (Object)new_AST_Send((Object)send46084, (Object)SMB__equal, 1, (Object)constant8983);
// position
send46086 = (Object)new_AST_Send((Object)localvariable6321, (Object)symbol7894, 0);
// should
send46087 = (Object)new_AST_Send((Object)send46086, (Object)symbol7919, 0);
smallint3144 = (Object)new_Type_SmallInt(5);
constant8984 = (Object)new_AST_Constant((Object)smallint3144);
// =
send46088 = (Object)new_AST_Send((Object)send46087, (Object)SMB__equal, 1, (Object)constant8984);
string5354 = (Object)new_Type_String(L"abcd ");
constant8985 = (Object)new_AST_Constant((Object)string5354);
// on:
send46089 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8985);
assign5594 = (Object)new_AST_Assign((Object)localvariable6321, (Object)send46089);
// match:
send46090 = (Object)new_AST_Send((Object)localvariable6320, (Object)symbol7846, 1, (Object)localvariable6321);
// should
send46091 = (Object)new_AST_Send((Object)send46090, (Object)symbol7919, 0);
// be
send46092 = (Object)new_AST_Send((Object)send46091, (Object)symbol7989, 0);
// isNil
send46093 = (Object)new_AST_Send((Object)send46092, (Object)SMB_isNil, 0);
// position
send46094 = (Object)new_AST_Send((Object)localvariable6321, (Object)symbol7894, 0);
// should
send46095 = (Object)new_AST_Send((Object)send46094, (Object)symbol7919, 0);
smallint3145 = (Object)new_Type_SmallInt(0);
constant8986 = (Object)new_AST_Constant((Object)smallint3145);
// =
send46096 = (Object)new_AST_Send((Object)send46095, (Object)SMB__equal, 1, (Object)constant8986);
method6130 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4987, 8, assign5592, assign5593, send46085, send46088, assign5594, send46093, send46096, Self);
symbol7594 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure6130 = (Object)new_Runtime_MethodClosure(method6130);
store_method((Type_Class)class1020, (Type_Symbol)symbol7594, (Runtime_MethodClosure)methodclosure6130);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable6322 = (Object)new_AST_Variable_named(L"parser");
localvariable6323 = (Object)new_AST_Variable_named(L"string");
localvariable6324 = (Object)new_AST_Variable_named(L"result");
array4988 = (Object)new_Type_Array_with(3, (Object)localvariable6322, (Object)localvariable6323, (Object)localvariable6324);
// finalExpression
send46097 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7937, 0);
assign5595 = (Object)new_AST_Assign((Object)localvariable6322, (Object)send46097);
string5355 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant8987 = (Object)new_AST_Constant((Object)string5355);
// on:
send46098 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8987);
assign5596 = (Object)new_AST_Assign((Object)localvariable6323, (Object)send46098);
// match:
send46099 = (Object)new_AST_Send((Object)localvariable6322, (Object)symbol7846, 1, (Object)localvariable6323);
assign5597 = (Object)new_AST_Assign((Object)localvariable6324, (Object)send46099);
// class
send46100 = (Object)new_AST_Send((Object)localvariable6324, (Object)SMB_class, 0);
// should
send46101 = (Object)new_AST_Send((Object)send46100, (Object)symbol7919, 0);
// =
send46102 = (Object)new_AST_Send((Object)send46101, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46103 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// class
send46104 = (Object)new_AST_Send((Object)send46103, (Object)SMB_class, 0);
// should
send46105 = (Object)new_AST_Send((Object)send46104, (Object)symbol7919, 0);
// =
send46106 = (Object)new_AST_Send((Object)send46105, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46107 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// name
send46108 = (Object)new_AST_Send((Object)send46107, (Object)SMB_name, 0);
// should
send46109 = (Object)new_AST_Send((Object)send46108, (Object)symbol7919, 0);
string5356 = (Object)new_Type_String(L"a");
constant8988 = (Object)new_AST_Constant((Object)string5356);
// =
send46110 = (Object)new_AST_Send((Object)send46109, (Object)SMB__equal, 1, (Object)constant8988);
// expression
send46111 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7757, 0);
assign5598 = (Object)new_AST_Assign((Object)localvariable6324, (Object)send46111);
// class
send46112 = (Object)new_AST_Send((Object)localvariable6324, (Object)SMB_class, 0);
// should
send46113 = (Object)new_AST_Send((Object)send46112, (Object)symbol7919, 0);
// =
send46114 = (Object)new_AST_Send((Object)send46113, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46115 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// class
send46116 = (Object)new_AST_Send((Object)send46115, (Object)SMB_class, 0);
// should
send46117 = (Object)new_AST_Send((Object)send46116, (Object)symbol7919, 0);
// =
send46118 = (Object)new_AST_Send((Object)send46117, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46119 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// name
send46120 = (Object)new_AST_Send((Object)send46119, (Object)SMB_name, 0);
// should
send46121 = (Object)new_AST_Send((Object)send46120, (Object)symbol7919, 0);
string5357 = (Object)new_Type_String(L"b");
constant8989 = (Object)new_AST_Constant((Object)string5357);
// =
send46122 = (Object)new_AST_Send((Object)send46121, (Object)SMB__equal, 1, (Object)constant8989);
// expression
send46123 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7757, 0);
assign5599 = (Object)new_AST_Assign((Object)localvariable6324, (Object)send46123);
// class
send46124 = (Object)new_AST_Send((Object)localvariable6324, (Object)SMB_class, 0);
// should
send46125 = (Object)new_AST_Send((Object)send46124, (Object)symbol7919, 0);
// =
send46126 = (Object)new_AST_Send((Object)send46125, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46127 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// class
send46128 = (Object)new_AST_Send((Object)send46127, (Object)SMB_class, 0);
// should
send46129 = (Object)new_AST_Send((Object)send46128, (Object)symbol7919, 0);
// =
send46130 = (Object)new_AST_Send((Object)send46129, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46131 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// name
send46132 = (Object)new_AST_Send((Object)send46131, (Object)SMB_name, 0);
// should
send46133 = (Object)new_AST_Send((Object)send46132, (Object)symbol7919, 0);
string5358 = (Object)new_Type_String(L"c");
constant8990 = (Object)new_AST_Constant((Object)string5358);
// =
send46134 = (Object)new_AST_Send((Object)send46133, (Object)SMB__equal, 1, (Object)constant8990);
// expression
send46135 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7757, 0);
// class
send46136 = (Object)new_AST_Send((Object)send46135, (Object)SMB_class, 0);
// should
send46137 = (Object)new_AST_Send((Object)send46136, (Object)symbol7919, 0);
// =
send46138 = (Object)new_AST_Send((Object)send46137, (Object)SMB__equal, 1, (Object)classreference1195);
string5359 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant8991 = (Object)new_AST_Constant((Object)string5359);
// on:
send46139 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8991);
assign5600 = (Object)new_AST_Assign((Object)localvariable6323, (Object)send46139);
// match:
send46140 = (Object)new_AST_Send((Object)localvariable6322, (Object)symbol7846, 1, (Object)localvariable6323);
assign5601 = (Object)new_AST_Assign((Object)localvariable6324, (Object)send46140);
// class
send46141 = (Object)new_AST_Send((Object)localvariable6324, (Object)SMB_class, 0);
// should
send46142 = (Object)new_AST_Send((Object)send46141, (Object)symbol7919, 0);
// =
send46143 = (Object)new_AST_Send((Object)send46142, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46144 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// class
send46145 = (Object)new_AST_Send((Object)send46144, (Object)SMB_class, 0);
// should
send46146 = (Object)new_AST_Send((Object)send46145, (Object)symbol7919, 0);
// =
send46147 = (Object)new_AST_Send((Object)send46146, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46148 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// name
send46149 = (Object)new_AST_Send((Object)send46148, (Object)SMB_name, 0);
// should
send46150 = (Object)new_AST_Send((Object)send46149, (Object)symbol7919, 0);
string5360 = (Object)new_Type_String(L"a");
constant8992 = (Object)new_AST_Constant((Object)string5360);
// =
send46151 = (Object)new_AST_Send((Object)send46150, (Object)SMB__equal, 1, (Object)constant8992);
// expression
send46152 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7757, 0);
assign5602 = (Object)new_AST_Assign((Object)localvariable6324, (Object)send46152);
// class
send46153 = (Object)new_AST_Send((Object)localvariable6324, (Object)SMB_class, 0);
// should
send46154 = (Object)new_AST_Send((Object)send46153, (Object)symbol7919, 0);
// =
send46155 = (Object)new_AST_Send((Object)send46154, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46156 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// class
send46157 = (Object)new_AST_Send((Object)send46156, (Object)SMB_class, 0);
// should
send46158 = (Object)new_AST_Send((Object)send46157, (Object)symbol7919, 0);
// =
send46159 = (Object)new_AST_Send((Object)send46158, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46160 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// name
send46161 = (Object)new_AST_Send((Object)send46160, (Object)SMB_name, 0);
// should
send46162 = (Object)new_AST_Send((Object)send46161, (Object)symbol7919, 0);
string5361 = (Object)new_Type_String(L"b");
constant8993 = (Object)new_AST_Constant((Object)string5361);
// =
send46163 = (Object)new_AST_Send((Object)send46162, (Object)SMB__equal, 1, (Object)constant8993);
// expression
send46164 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7757, 0);
assign5603 = (Object)new_AST_Assign((Object)localvariable6324, (Object)send46164);
// class
send46165 = (Object)new_AST_Send((Object)localvariable6324, (Object)SMB_class, 0);
// should
send46166 = (Object)new_AST_Send((Object)send46165, (Object)symbol7919, 0);
// =
send46167 = (Object)new_AST_Send((Object)send46166, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46168 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// class
send46169 = (Object)new_AST_Send((Object)send46168, (Object)SMB_class, 0);
// should
send46170 = (Object)new_AST_Send((Object)send46169, (Object)symbol7919, 0);
// =
send46171 = (Object)new_AST_Send((Object)send46170, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46172 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7759, 0);
// name
send46173 = (Object)new_AST_Send((Object)send46172, (Object)SMB_name, 0);
// should
send46174 = (Object)new_AST_Send((Object)send46173, (Object)symbol7919, 0);
string5362 = (Object)new_Type_String(L"c");
constant8994 = (Object)new_AST_Constant((Object)string5362);
// =
send46175 = (Object)new_AST_Send((Object)send46174, (Object)SMB__equal, 1, (Object)constant8994);
// expression
send46176 = (Object)new_AST_Send((Object)localvariable6324, (Object)symbol7757, 0);
// class
send46177 = (Object)new_AST_Send((Object)send46176, (Object)SMB_class, 0);
// should
send46178 = (Object)new_AST_Send((Object)send46177, (Object)symbol7919, 0);
// =
send46179 = (Object)new_AST_Send((Object)send46178, (Object)SMB__equal, 1, (Object)classreference1195);
method6131 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4988, 30, assign5595, assign5596, assign5597, send46102, send46106, send46110, assign5598, send46114, send46118, send46122, assign5599, send46126, send46130, send46134, send46138, assign5600, assign5601, send46143, send46147, send46151, assign5602, send46155, send46159, send46163, assign5603, send46167, send46171, send46175, send46179, Self);
symbol7586 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure6131 = (Object)new_Runtime_MethodClosure(method6131);
store_method((Type_Class)class1020, (Type_Symbol)symbol7586, (Runtime_MethodClosure)methodclosure6131);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable6325 = (Object)new_AST_Variable_named(L"parser");
localvariable6326 = (Object)new_AST_Variable_named(L"string");
localvariable6327 = (Object)new_AST_Variable_named(L"result");
array4989 = (Object)new_Type_Array_with(3, (Object)localvariable6325, (Object)localvariable6326, (Object)localvariable6327);
// unarySelector
send46180 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7956, 0);
assign5604 = (Object)new_AST_Assign((Object)localvariable6325, (Object)send46180);
string5363 = (Object)new_Type_String(L"abcd bla");
constant8995 = (Object)new_AST_Constant((Object)string5363);
// on:
send46181 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8995);
assign5605 = (Object)new_AST_Assign((Object)localvariable6326, (Object)send46181);
// match:
send46182 = (Object)new_AST_Send((Object)localvariable6325, (Object)symbol7846, 1, (Object)localvariable6326);
assign5606 = (Object)new_AST_Assign((Object)localvariable6327, (Object)send46182);
// class
send46183 = (Object)new_AST_Send((Object)localvariable6327, (Object)SMB_class, 0);
// should
send46184 = (Object)new_AST_Send((Object)send46183, (Object)symbol7919, 0);
// =
send46185 = (Object)new_AST_Send((Object)send46184, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send46186 = (Object)new_AST_Send((Object)localvariable6327, (Object)symbol7654, 0);
// printString
send46187 = (Object)new_AST_Send((Object)send46186, (Object)symbol7849, 0);
// should
send46188 = (Object)new_AST_Send((Object)send46187, (Object)symbol7919, 0);
string5364 = (Object)new_Type_String(L"abcd");
constant8996 = (Object)new_AST_Constant((Object)string5364);
// =
send46189 = (Object)new_AST_Send((Object)send46188, (Object)SMB__equal, 1, (Object)constant8996);
// position
send46190 = (Object)new_AST_Send((Object)localvariable6326, (Object)symbol7894, 0);
// should
send46191 = (Object)new_AST_Send((Object)send46190, (Object)symbol7919, 0);
smallint3146 = (Object)new_Type_SmallInt(4);
constant8997 = (Object)new_AST_Constant((Object)smallint3146);
// =
send46192 = (Object)new_AST_Send((Object)send46191, (Object)SMB__equal, 1, (Object)constant8997);
string5365 = (Object)new_Type_String(L"abcd: bla");
constant8998 = (Object)new_AST_Constant((Object)string5365);
// on:
send46193 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant8998);
assign5607 = (Object)new_AST_Assign((Object)localvariable6326, (Object)send46193);
// match:
send46194 = (Object)new_AST_Send((Object)localvariable6325, (Object)symbol7846, 1, (Object)localvariable6326);
// should
send46195 = (Object)new_AST_Send((Object)send46194, (Object)symbol7919, 0);
// be
send46196 = (Object)new_AST_Send((Object)send46195, (Object)symbol7989, 0);
// isNil
send46197 = (Object)new_AST_Send((Object)send46196, (Object)SMB_isNil, 0);
// position
send46198 = (Object)new_AST_Send((Object)localvariable6326, (Object)symbol7894, 0);
// should
send46199 = (Object)new_AST_Send((Object)send46198, (Object)symbol7919, 0);
smallint3147 = (Object)new_Type_SmallInt(0);
constant8999 = (Object)new_AST_Constant((Object)smallint3147);
// =
send46200 = (Object)new_AST_Send((Object)send46199, (Object)SMB__equal, 1, (Object)constant8999);
method6132 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4989, 10, assign5604, assign5605, assign5606, send46185, send46189, send46192, assign5607, send46197, send46200, Self);
symbol7604 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure6132 = (Object)new_Runtime_MethodClosure(method6132);
store_method((Type_Class)class1020, (Type_Symbol)symbol7604, (Runtime_MethodClosure)methodclosure6132);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable6328 = (Object)new_AST_Variable_named(L"parser");
localvariable6329 = (Object)new_AST_Variable_named(L"string");
localvariable6330 = (Object)new_AST_Variable_named(L"message");
localvariable6331 = (Object)new_AST_Variable_named(L"return");
array4990 = (Object)new_Type_Array_with(4, (Object)localvariable6328, (Object)localvariable6329, (Object)localvariable6330, (Object)localvariable6331);
// messageExpression
send46201 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7943, 0);
assign5608 = (Object)new_AST_Assign((Object)localvariable6328, (Object)send46201);
string5366 = (Object)new_Type_String(L"self do: this and: that");
constant9000 = (Object)new_AST_Constant((Object)string5366);
// on:
send46202 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9000);
assign5609 = (Object)new_AST_Assign((Object)localvariable6329, (Object)send46202);
// match:
send46203 = (Object)new_AST_Send((Object)localvariable6328, (Object)symbol7846, 1, (Object)localvariable6329);
assign5610 = (Object)new_AST_Assign((Object)localvariable6330, (Object)send46203);
// receiver
send46204 = (Object)new_AST_Send((Object)localvariable6330, (Object)symbol7730, 0);
// class
send46205 = (Object)new_AST_Send((Object)send46204, (Object)SMB_class, 0);
// should
send46206 = (Object)new_AST_Send((Object)send46205, (Object)symbol7919, 0);
// =
send46207 = (Object)new_AST_Send((Object)send46206, (Object)SMB__equal, 1, (Object)classreference1175);
// return
send46208 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7988, 0);
assign5611 = (Object)new_AST_Assign((Object)localvariable6328, (Object)send46208);
string5367 = (Object)new_Type_String(L"^ self do: this and: that");
constant9001 = (Object)new_AST_Constant((Object)string5367);
// on:
send46209 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9001);
assign5612 = (Object)new_AST_Assign((Object)localvariable6329, (Object)send46209);
// match:
send46210 = (Object)new_AST_Send((Object)localvariable6328, (Object)symbol7846, 1, (Object)localvariable6329);
assign5613 = (Object)new_AST_Assign((Object)localvariable6331, (Object)send46210);
// class
send46211 = (Object)new_AST_Send((Object)localvariable6331, (Object)SMB_class, 0);
// should
send46212 = (Object)new_AST_Send((Object)send46211, (Object)symbol7919, 0);
// =
send46213 = (Object)new_AST_Send((Object)send46212, (Object)SMB__equal, 1, (Object)classreference1192);
// expression
send46214 = (Object)new_AST_Send((Object)localvariable6331, (Object)symbol7757, 0);
// receiver
send46215 = (Object)new_AST_Send((Object)send46214, (Object)symbol7730, 0);
// class
send46216 = (Object)new_AST_Send((Object)send46215, (Object)SMB_class, 0);
// should
send46217 = (Object)new_AST_Send((Object)send46216, (Object)symbol7919, 0);
// =
send46218 = (Object)new_AST_Send((Object)send46217, (Object)SMB__equal, 1, (Object)classreference1175);
method6133 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4990, 10, assign5608, assign5609, assign5610, send46207, assign5611, assign5612, assign5613, send46213, send46218, Self);
symbol7624 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure6133 = (Object)new_Runtime_MethodClosure(method6133);
store_method((Type_Class)class1020, (Type_Symbol)symbol7624, (Runtime_MethodClosure)methodclosure6133);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable6332 = (Object)new_AST_Variable_named(L"parser");
localvariable6333 = (Object)new_AST_Variable_named(L"string");
localvariable6334 = (Object)new_AST_Variable_named(L"result");
array4991 = (Object)new_Type_Array_with(3, (Object)localvariable6332, (Object)localvariable6333, (Object)localvariable6334);
// binaryMessageDefinition
send46219 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7954, 0);
assign5614 = (Object)new_AST_Assign((Object)localvariable6332, (Object)send46219);
string5368 = (Object)new_Type_String(L"+= a");
constant9002 = (Object)new_AST_Constant((Object)string5368);
// on:
send46220 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9002);
assign5615 = (Object)new_AST_Assign((Object)localvariable6333, (Object)send46220);
// match:
send46221 = (Object)new_AST_Send((Object)localvariable6332, (Object)symbol7846, 1, (Object)localvariable6333);
assign5616 = (Object)new_AST_Assign((Object)localvariable6334, (Object)send46221);
// class
send46222 = (Object)new_AST_Send((Object)localvariable6334, (Object)SMB_class, 0);
// should
send46223 = (Object)new_AST_Send((Object)send46222, (Object)symbol7919, 0);
// =
send46224 = (Object)new_AST_Send((Object)send46223, (Object)SMB__equal, 1, (Object)classreference1189);
// selector
send46225 = (Object)new_AST_Send((Object)localvariable6334, (Object)symbol7654, 0);
// printString
send46226 = (Object)new_AST_Send((Object)send46225, (Object)symbol7849, 0);
// should
send46227 = (Object)new_AST_Send((Object)send46226, (Object)symbol7919, 0);
string5369 = (Object)new_Type_String(L"+=");
constant9003 = (Object)new_AST_Constant((Object)string5369);
// =
send46228 = (Object)new_AST_Send((Object)send46227, (Object)SMB__equal, 1, (Object)constant9003);
// parameter
send46229 = (Object)new_AST_Send((Object)localvariable6334, (Object)symbol7753, 0);
// class
send46230 = (Object)new_AST_Send((Object)send46229, (Object)SMB_class, 0);
// should
send46231 = (Object)new_AST_Send((Object)send46230, (Object)symbol7919, 0);
// =
send46232 = (Object)new_AST_Send((Object)send46231, (Object)SMB__equal, 1, (Object)classreference1180);
// parameter
send46233 = (Object)new_AST_Send((Object)localvariable6334, (Object)symbol7753, 0);
// name
send46234 = (Object)new_AST_Send((Object)send46233, (Object)SMB_name, 0);
// asString
send46235 = (Object)new_AST_Send((Object)send46234, (Object)SMB_asString, 0);
// should
send46236 = (Object)new_AST_Send((Object)send46235, (Object)symbol7919, 0);
string5370 = (Object)new_Type_String(L"a");
constant9004 = (Object)new_AST_Constant((Object)string5370);
// =
send46237 = (Object)new_AST_Send((Object)send46236, (Object)SMB__equal, 1, (Object)constant9004);
// position
send46238 = (Object)new_AST_Send((Object)localvariable6333, (Object)symbol7894, 0);
// should
send46239 = (Object)new_AST_Send((Object)send46238, (Object)symbol7919, 0);
smallint3148 = (Object)new_Type_SmallInt(4);
constant9005 = (Object)new_AST_Constant((Object)smallint3148);
// =
send46240 = (Object)new_AST_Send((Object)send46239, (Object)SMB__equal, 1, (Object)constant9005);
string5371 = (Object)new_Type_String(L"|= a");
constant9006 = (Object)new_AST_Constant((Object)string5371);
// on:
send46241 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9006);
assign5617 = (Object)new_AST_Assign((Object)localvariable6333, (Object)send46241);
// match:
send46242 = (Object)new_AST_Send((Object)localvariable6332, (Object)symbol7846, 1, (Object)localvariable6333);
// should
send46243 = (Object)new_AST_Send((Object)send46242, (Object)symbol7919, 0);
// be
send46244 = (Object)new_AST_Send((Object)send46243, (Object)symbol7989, 0);
// isNil
send46245 = (Object)new_AST_Send((Object)send46244, (Object)SMB_isNil, 0);
// position
send46246 = (Object)new_AST_Send((Object)localvariable6333, (Object)symbol7894, 0);
// should
send46247 = (Object)new_AST_Send((Object)send46246, (Object)symbol7919, 0);
smallint3149 = (Object)new_Type_SmallInt(0);
constant9007 = (Object)new_AST_Constant((Object)smallint3149);
// =
send46248 = (Object)new_AST_Send((Object)send46247, (Object)SMB__equal, 1, (Object)constant9007);
string5372 = (Object)new_Type_String(L"-= abc d");
constant9008 = (Object)new_AST_Constant((Object)string5372);
// on:
send46249 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9008);
assign5618 = (Object)new_AST_Assign((Object)localvariable6333, (Object)send46249);
// match:
send46250 = (Object)new_AST_Send((Object)localvariable6332, (Object)symbol7846, 1, (Object)localvariable6333);
assign5619 = (Object)new_AST_Assign((Object)localvariable6334, (Object)send46250);
// class
send46251 = (Object)new_AST_Send((Object)localvariable6334, (Object)SMB_class, 0);
// should
send46252 = (Object)new_AST_Send((Object)send46251, (Object)symbol7919, 0);
// =
send46253 = (Object)new_AST_Send((Object)send46252, (Object)SMB__equal, 1, (Object)classreference1189);
// selector
send46254 = (Object)new_AST_Send((Object)localvariable6334, (Object)symbol7654, 0);
// printString
send46255 = (Object)new_AST_Send((Object)send46254, (Object)symbol7849, 0);
// should
send46256 = (Object)new_AST_Send((Object)send46255, (Object)symbol7919, 0);
string5373 = (Object)new_Type_String(L"-=");
constant9009 = (Object)new_AST_Constant((Object)string5373);
// =
send46257 = (Object)new_AST_Send((Object)send46256, (Object)SMB__equal, 1, (Object)constant9009);
// parameter
send46258 = (Object)new_AST_Send((Object)localvariable6334, (Object)symbol7753, 0);
// name
send46259 = (Object)new_AST_Send((Object)send46258, (Object)SMB_name, 0);
// asString
send46260 = (Object)new_AST_Send((Object)send46259, (Object)SMB_asString, 0);
// should
send46261 = (Object)new_AST_Send((Object)send46260, (Object)symbol7919, 0);
string5374 = (Object)new_Type_String(L"abc");
constant9010 = (Object)new_AST_Constant((Object)string5374);
// =
send46262 = (Object)new_AST_Send((Object)send46261, (Object)SMB__equal, 1, (Object)constant9010);
// parameter
send46263 = (Object)new_AST_Send((Object)localvariable6334, (Object)symbol7753, 0);
// class
send46264 = (Object)new_AST_Send((Object)send46263, (Object)SMB_class, 0);
// should
send46265 = (Object)new_AST_Send((Object)send46264, (Object)symbol7919, 0);
// =
send46266 = (Object)new_AST_Send((Object)send46265, (Object)SMB__equal, 1, (Object)classreference1180);
// position
send46267 = (Object)new_AST_Send((Object)localvariable6333, (Object)symbol7894, 0);
// should
send46268 = (Object)new_AST_Send((Object)send46267, (Object)symbol7919, 0);
smallint3150 = (Object)new_Type_SmallInt(6);
constant9011 = (Object)new_AST_Constant((Object)smallint3150);
// =
send46269 = (Object)new_AST_Send((Object)send46268, (Object)SMB__equal, 1, (Object)constant9011);
method6134 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4991, 19, assign5614, assign5615, assign5616, send46224, send46228, send46232, send46237, send46240, assign5617, send46245, send46248, assign5618, assign5619, send46253, send46257, send46262, send46266, send46269, Self);
symbol7576 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure6134 = (Object)new_Runtime_MethodClosure(method6134);
store_method((Type_Class)class1020, (Type_Symbol)symbol7576, (Runtime_MethodClosure)methodclosure6134);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable6335 = (Object)new_AST_Variable_named(L"parser");
localvariable6336 = (Object)new_AST_Variable_named(L"string");
localvariable6337 = (Object)new_AST_Variable_named(L"result");
array4992 = (Object)new_Type_Array_with(3, (Object)localvariable6335, (Object)localvariable6336, (Object)localvariable6337);
// return
send46270 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7988, 0);
assign5620 = (Object)new_AST_Assign((Object)localvariable6335, (Object)send46270);
string5375 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant9012 = (Object)new_AST_Constant((Object)string5375);
// on:
send46271 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9012);
assign5621 = (Object)new_AST_Assign((Object)localvariable6336, (Object)send46271);
// match:
send46272 = (Object)new_AST_Send((Object)localvariable6335, (Object)symbol7846, 1, (Object)localvariable6336);
assign5622 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46272);
// class
send46273 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46274 = (Object)new_AST_Send((Object)send46273, (Object)symbol7919, 0);
// =
send46275 = (Object)new_AST_Send((Object)send46274, (Object)SMB__equal, 1, (Object)classreference1192);
// expression
send46276 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
assign5623 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46276);
// class
send46277 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46278 = (Object)new_AST_Send((Object)send46277, (Object)symbol7919, 0);
// =
send46279 = (Object)new_AST_Send((Object)send46278, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46280 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// class
send46281 = (Object)new_AST_Send((Object)send46280, (Object)SMB_class, 0);
// should
send46282 = (Object)new_AST_Send((Object)send46281, (Object)symbol7919, 0);
// =
send46283 = (Object)new_AST_Send((Object)send46282, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46284 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// name
send46285 = (Object)new_AST_Send((Object)send46284, (Object)SMB_name, 0);
// should
send46286 = (Object)new_AST_Send((Object)send46285, (Object)symbol7919, 0);
string5376 = (Object)new_Type_String(L"a");
constant9013 = (Object)new_AST_Constant((Object)string5376);
// =
send46287 = (Object)new_AST_Send((Object)send46286, (Object)SMB__equal, 1, (Object)constant9013);
// expression
send46288 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
assign5624 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46288);
// class
send46289 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46290 = (Object)new_AST_Send((Object)send46289, (Object)symbol7919, 0);
// =
send46291 = (Object)new_AST_Send((Object)send46290, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46292 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// class
send46293 = (Object)new_AST_Send((Object)send46292, (Object)SMB_class, 0);
// should
send46294 = (Object)new_AST_Send((Object)send46293, (Object)symbol7919, 0);
// =
send46295 = (Object)new_AST_Send((Object)send46294, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46296 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// name
send46297 = (Object)new_AST_Send((Object)send46296, (Object)SMB_name, 0);
// should
send46298 = (Object)new_AST_Send((Object)send46297, (Object)symbol7919, 0);
string5377 = (Object)new_Type_String(L"b");
constant9014 = (Object)new_AST_Constant((Object)string5377);
// =
send46299 = (Object)new_AST_Send((Object)send46298, (Object)SMB__equal, 1, (Object)constant9014);
// expression
send46300 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
assign5625 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46300);
// class
send46301 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46302 = (Object)new_AST_Send((Object)send46301, (Object)symbol7919, 0);
// =
send46303 = (Object)new_AST_Send((Object)send46302, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46304 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// class
send46305 = (Object)new_AST_Send((Object)send46304, (Object)SMB_class, 0);
// should
send46306 = (Object)new_AST_Send((Object)send46305, (Object)symbol7919, 0);
// =
send46307 = (Object)new_AST_Send((Object)send46306, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46308 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// name
send46309 = (Object)new_AST_Send((Object)send46308, (Object)SMB_name, 0);
// should
send46310 = (Object)new_AST_Send((Object)send46309, (Object)symbol7919, 0);
string5378 = (Object)new_Type_String(L"c");
constant9015 = (Object)new_AST_Constant((Object)string5378);
// =
send46311 = (Object)new_AST_Send((Object)send46310, (Object)SMB__equal, 1, (Object)constant9015);
// expression
send46312 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
// class
send46313 = (Object)new_AST_Send((Object)send46312, (Object)SMB_class, 0);
// should
send46314 = (Object)new_AST_Send((Object)send46313, (Object)symbol7919, 0);
// =
send46315 = (Object)new_AST_Send((Object)send46314, (Object)SMB__equal, 1, (Object)classreference1195);
string5379 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant9016 = (Object)new_AST_Constant((Object)string5379);
// on:
send46316 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9016);
assign5626 = (Object)new_AST_Assign((Object)localvariable6336, (Object)send46316);
// match:
send46317 = (Object)new_AST_Send((Object)localvariable6335, (Object)symbol7846, 1, (Object)localvariable6336);
assign5627 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46317);
// class
send46318 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46319 = (Object)new_AST_Send((Object)send46318, (Object)symbol7919, 0);
// =
send46320 = (Object)new_AST_Send((Object)send46319, (Object)SMB__equal, 1, (Object)classreference1192);
// expression
send46321 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
assign5628 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46321);
// class
send46322 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46323 = (Object)new_AST_Send((Object)send46322, (Object)symbol7919, 0);
// =
send46324 = (Object)new_AST_Send((Object)send46323, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46325 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// class
send46326 = (Object)new_AST_Send((Object)send46325, (Object)SMB_class, 0);
// should
send46327 = (Object)new_AST_Send((Object)send46326, (Object)symbol7919, 0);
// =
send46328 = (Object)new_AST_Send((Object)send46327, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46329 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// name
send46330 = (Object)new_AST_Send((Object)send46329, (Object)SMB_name, 0);
// should
send46331 = (Object)new_AST_Send((Object)send46330, (Object)symbol7919, 0);
string5380 = (Object)new_Type_String(L"a");
constant9017 = (Object)new_AST_Constant((Object)string5380);
// =
send46332 = (Object)new_AST_Send((Object)send46331, (Object)SMB__equal, 1, (Object)constant9017);
// expression
send46333 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
assign5629 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46333);
// class
send46334 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46335 = (Object)new_AST_Send((Object)send46334, (Object)symbol7919, 0);
// =
send46336 = (Object)new_AST_Send((Object)send46335, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46337 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// class
send46338 = (Object)new_AST_Send((Object)send46337, (Object)SMB_class, 0);
// should
send46339 = (Object)new_AST_Send((Object)send46338, (Object)symbol7919, 0);
// =
send46340 = (Object)new_AST_Send((Object)send46339, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46341 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// name
send46342 = (Object)new_AST_Send((Object)send46341, (Object)SMB_name, 0);
// should
send46343 = (Object)new_AST_Send((Object)send46342, (Object)symbol7919, 0);
string5381 = (Object)new_Type_String(L"b");
constant9018 = (Object)new_AST_Constant((Object)string5381);
// =
send46344 = (Object)new_AST_Send((Object)send46343, (Object)SMB__equal, 1, (Object)constant9018);
// expression
send46345 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
assign5630 = (Object)new_AST_Assign((Object)localvariable6337, (Object)send46345);
// class
send46346 = (Object)new_AST_Send((Object)localvariable6337, (Object)SMB_class, 0);
// should
send46347 = (Object)new_AST_Send((Object)send46346, (Object)symbol7919, 0);
// =
send46348 = (Object)new_AST_Send((Object)send46347, (Object)SMB__equal, 1, (Object)classreference1186);
// variable
send46349 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// class
send46350 = (Object)new_AST_Send((Object)send46349, (Object)SMB_class, 0);
// should
send46351 = (Object)new_AST_Send((Object)send46350, (Object)symbol7919, 0);
// =
send46352 = (Object)new_AST_Send((Object)send46351, (Object)SMB__equal, 1, (Object)classreference1180);
// variable
send46353 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7759, 0);
// name
send46354 = (Object)new_AST_Send((Object)send46353, (Object)SMB_name, 0);
// should
send46355 = (Object)new_AST_Send((Object)send46354, (Object)symbol7919, 0);
string5382 = (Object)new_Type_String(L"c");
constant9019 = (Object)new_AST_Constant((Object)string5382);
// =
send46356 = (Object)new_AST_Send((Object)send46355, (Object)SMB__equal, 1, (Object)constant9019);
// expression
send46357 = (Object)new_AST_Send((Object)localvariable6337, (Object)symbol7757, 0);
// class
send46358 = (Object)new_AST_Send((Object)send46357, (Object)SMB_class, 0);
// should
send46359 = (Object)new_AST_Send((Object)send46358, (Object)symbol7919, 0);
// =
send46360 = (Object)new_AST_Send((Object)send46359, (Object)SMB__equal, 1, (Object)classreference1195);
method6135 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4992, 34, assign5620, assign5621, assign5622, send46275, assign5623, send46279, send46283, send46287, assign5624, send46291, send46295, send46299, assign5625, send46303, send46307, send46311, send46315, assign5626, assign5627, send46320, assign5628, send46324, send46328, send46332, assign5629, send46336, send46340, send46344, assign5630, send46348, send46352, send46356, send46360, Self);
symbol7596 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure6135 = (Object)new_Runtime_MethodClosure(method6135);
store_method((Type_Class)class1020, (Type_Symbol)symbol7596, (Runtime_MethodClosure)methodclosure6135);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable6338 = (Object)new_AST_Variable_named(L"parser");
localvariable6339 = (Object)new_AST_Variable_named(L"string");
localvariable6340 = (Object)new_AST_Variable_named(L"result");
array4993 = (Object)new_Type_Array_with(3, (Object)localvariable6338, (Object)localvariable6339, (Object)localvariable6340);
// unaryObjectDescription
send46361 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7928, 0);
assign5631 = (Object)new_AST_Assign((Object)localvariable6338, (Object)send46361);
string5383 = (Object)new_Type_String(L"abc def ghi ");
constant9020 = (Object)new_AST_Constant((Object)string5383);
// on:
send46362 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9020);
assign5632 = (Object)new_AST_Assign((Object)localvariable6339, (Object)send46362);
// match:
send46363 = (Object)new_AST_Send((Object)localvariable6338, (Object)symbol7846, 1, (Object)localvariable6339);
assign5633 = (Object)new_AST_Assign((Object)localvariable6340, (Object)send46363);
// class
send46364 = (Object)new_AST_Send((Object)localvariable6340, (Object)SMB_class, 0);
// should
send46365 = (Object)new_AST_Send((Object)send46364, (Object)symbol7919, 0);
// =
send46366 = (Object)new_AST_Send((Object)send46365, (Object)SMB__equal, 1, (Object)classreference1198);
// selector
send46367 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7654, 0);
// class
send46368 = (Object)new_AST_Send((Object)send46367, (Object)SMB_class, 0);
// should
send46369 = (Object)new_AST_Send((Object)send46368, (Object)symbol7919, 0);
// =
send46370 = (Object)new_AST_Send((Object)send46369, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send46371 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7654, 0);
// selector
send46372 = (Object)new_AST_Send((Object)send46371, (Object)symbol7654, 0);
// printString
send46373 = (Object)new_AST_Send((Object)send46372, (Object)symbol7849, 0);
// should
send46374 = (Object)new_AST_Send((Object)send46373, (Object)symbol7919, 0);
string5384 = (Object)new_Type_String(L"ghi");
constant9021 = (Object)new_AST_Constant((Object)string5384);
// =
send46375 = (Object)new_AST_Send((Object)send46374, (Object)SMB__equal, 1, (Object)constant9021);
// receiver
send46376 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7730, 0);
assign5634 = (Object)new_AST_Assign((Object)localvariable6340, (Object)send46376);
// class
send46377 = (Object)new_AST_Send((Object)localvariable6340, (Object)SMB_class, 0);
// should
send46378 = (Object)new_AST_Send((Object)send46377, (Object)symbol7919, 0);
// =
send46379 = (Object)new_AST_Send((Object)send46378, (Object)SMB__equal, 1, (Object)classreference1198);
// selector
send46380 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7654, 0);
// class
send46381 = (Object)new_AST_Send((Object)send46380, (Object)SMB_class, 0);
// should
send46382 = (Object)new_AST_Send((Object)send46381, (Object)symbol7919, 0);
// =
send46383 = (Object)new_AST_Send((Object)send46382, (Object)SMB__equal, 1, (Object)classreference1193);
// selector
send46384 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7654, 0);
// selector
send46385 = (Object)new_AST_Send((Object)send46384, (Object)symbol7654, 0);
// printString
send46386 = (Object)new_AST_Send((Object)send46385, (Object)symbol7849, 0);
// should
send46387 = (Object)new_AST_Send((Object)send46386, (Object)symbol7919, 0);
string5385 = (Object)new_Type_String(L"def");
constant9022 = (Object)new_AST_Constant((Object)string5385);
// =
send46388 = (Object)new_AST_Send((Object)send46387, (Object)SMB__equal, 1, (Object)constant9022);
// receiver
send46389 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7730, 0);
// class
send46390 = (Object)new_AST_Send((Object)send46389, (Object)SMB_class, 0);
// should
send46391 = (Object)new_AST_Send((Object)send46390, (Object)symbol7919, 0);
// =
send46392 = (Object)new_AST_Send((Object)send46391, (Object)SMB__equal, 1, (Object)classreference1180);
// receiver
send46393 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7730, 0);
// name
send46394 = (Object)new_AST_Send((Object)send46393, (Object)SMB_name, 0);
// should
send46395 = (Object)new_AST_Send((Object)send46394, (Object)symbol7919, 0);
string5386 = (Object)new_Type_String(L"abc");
constant9023 = (Object)new_AST_Constant((Object)string5386);
// =
send46396 = (Object)new_AST_Send((Object)send46395, (Object)SMB__equal, 1, (Object)constant9023);
// position
send46397 = (Object)new_AST_Send((Object)localvariable6339, (Object)symbol7894, 0);
// should
send46398 = (Object)new_AST_Send((Object)send46397, (Object)symbol7919, 0);
smallint3151 = (Object)new_Type_SmallInt(12);
constant9024 = (Object)new_AST_Constant((Object)smallint3151);
// =
send46399 = (Object)new_AST_Send((Object)send46398, (Object)SMB__equal, 1, (Object)constant9024);
string5387 = (Object)new_Type_String(L"3");
constant9025 = (Object)new_AST_Constant((Object)string5387);
// on:
send46400 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9025);
assign5635 = (Object)new_AST_Assign((Object)localvariable6339, (Object)send46400);
// match:
send46401 = (Object)new_AST_Send((Object)localvariable6338, (Object)symbol7846, 1, (Object)localvariable6339);
assign5636 = (Object)new_AST_Assign((Object)localvariable6340, (Object)send46401);
// class
send46402 = (Object)new_AST_Send((Object)localvariable6340, (Object)SMB_class, 0);
// should
send46403 = (Object)new_AST_Send((Object)send46402, (Object)symbol7919, 0);
// =
send46404 = (Object)new_AST_Send((Object)send46403, (Object)SMB__equal, 1, (Object)classreference1167);
// number
send46405 = (Object)new_AST_Send((Object)localvariable6340, (Object)symbol7710, 0);
// should
send46406 = (Object)new_AST_Send((Object)send46405, (Object)symbol7919, 0);
string5388 = (Object)new_Type_String(L"3");
constant9026 = (Object)new_AST_Constant((Object)string5388);
// =
send46407 = (Object)new_AST_Send((Object)send46406, (Object)SMB__equal, 1, (Object)constant9026);
// position
send46408 = (Object)new_AST_Send((Object)localvariable6339, (Object)symbol7894, 0);
// should
send46409 = (Object)new_AST_Send((Object)send46408, (Object)symbol7919, 0);
smallint3152 = (Object)new_Type_SmallInt(1);
constant9027 = (Object)new_AST_Constant((Object)smallint3152);
// =
send46410 = (Object)new_AST_Send((Object)send46409, (Object)SMB__equal, 1, (Object)constant9027);
method6136 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4993, 19, assign5631, assign5632, assign5633, send46366, send46370, send46375, assign5634, send46379, send46383, send46388, send46392, send46396, send46399, assign5635, assign5636, send46404, send46407, send46410, Self);
symbol7588 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure6136 = (Object)new_Runtime_MethodClosure(method6136);
store_method((Type_Class)class1020, (Type_Symbol)symbol7588, (Runtime_MethodClosure)methodclosure6136);


// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable6341 = (Object)new_AST_Variable_named(L"parser");
localvariable6342 = (Object)new_AST_Variable_named(L"string");
array4994 = (Object)new_Type_Array_with(2, (Object)localvariable6341, (Object)localvariable6342);
// assignmentExpressions
send46411 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7984, 0);
assign5637 = (Object)new_AST_Assign((Object)localvariable6341, (Object)send46411);
string5389 = (Object)new_Type_String(L"a :=  b:= c := d");
constant9028 = (Object)new_AST_Constant((Object)string5389);
// on:
send46412 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9028);
assign5638 = (Object)new_AST_Assign((Object)localvariable6342, (Object)send46412);
// match:
send46413 = (Object)new_AST_Send((Object)localvariable6341, (Object)symbol7846, 1, (Object)localvariable6342);
constant9029 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send46414 = (Object)new_AST_Send((Object)send46413, (Object)symbol7962, 1, (Object)constant9029);
// asArray
send46415 = (Object)new_AST_Send((Object)send46414, (Object)SMB_asArray, 0);
// should
send46416 = (Object)new_AST_Send((Object)send46415, (Object)symbol7919, 0);
localvariable6343 = (Object)new_AST_Variable_named(L"receiver");
array4995 = (Object)new_Type_Array_with(1, (Object)localvariable6343);
smallint3153 = (Object)new_Type_SmallInt(1);
constant9030 = (Object)new_AST_Constant((Object)smallint3153);
string5390 = (Object)new_Type_String(L"a");
constant9031 = (Object)new_AST_Constant((Object)string5390);
// at:put:
send46417 = (Object)new_AST_Send((Object)localvariable6343, (Object)SMB_at_put_, 2, (Object)constant9030, (Object)constant9031);
smallint3154 = (Object)new_Type_SmallInt(2);
constant9032 = (Object)new_AST_Constant((Object)smallint3154);
string5391 = (Object)new_Type_String(L"b");
constant9033 = (Object)new_AST_Constant((Object)string5391);
// at:put:
send46418 = (Object)new_AST_Send((Object)localvariable6343, (Object)SMB_at_put_, 2, (Object)constant9032, (Object)constant9033);
smallint3155 = (Object)new_Type_SmallInt(3);
constant9034 = (Object)new_AST_Constant((Object)smallint3155);
string5392 = (Object)new_Type_String(L"c");
constant9035 = (Object)new_AST_Constant((Object)string5392);
// at:put:
send46419 = (Object)new_AST_Send((Object)localvariable6343, (Object)SMB_at_put_, 2, (Object)constant9034, (Object)constant9035);
// yourself
send46420 = (Object)new_AST_Send((Object)localvariable6343, (Object)symbol7546, 0);
block2888 = (Object)new_AST_Block_with((Type_Array)array4995, (Type_Array)empty_Type_Array, 1, 4, send46417, send46418, send46419, send46420);
smallint3156 = (Object)new_Type_SmallInt(3);
constant9036 = (Object)new_AST_Constant((Object)smallint3156);
// new:
send46421 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7630, 1, (Object)constant9036);
// value:
send46422 = (Object)new_AST_Send((Object)block2888, (Object)SMB_value_, 1, (Object)send46421);
// =
send46423 = (Object)new_AST_Send((Object)send46416, (Object)SMB__equal, 1, (Object)send46422);
// position
send46424 = (Object)new_AST_Send((Object)localvariable6342, (Object)symbol7894, 0);
// should
send46425 = (Object)new_AST_Send((Object)send46424, (Object)symbol7919, 0);
smallint3157 = (Object)new_Type_SmallInt(15);
constant9037 = (Object)new_AST_Constant((Object)smallint3157);
// =
send46426 = (Object)new_AST_Send((Object)send46425, (Object)SMB__equal, 1, (Object)constant9037);
string5393 = (Object)new_Type_String(L"");
constant9038 = (Object)new_AST_Constant((Object)string5393);
// on:
send46427 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9038);
assign5639 = (Object)new_AST_Assign((Object)localvariable6342, (Object)send46427);
// match:
send46428 = (Object)new_AST_Send((Object)localvariable6341, (Object)symbol7846, 1, (Object)localvariable6342);
// should
send46429 = (Object)new_AST_Send((Object)send46428, (Object)symbol7919, 0);
// not
send46430 = (Object)new_AST_Send((Object)send46429, (Object)SMB_not, 0);
// be
send46431 = (Object)new_AST_Send((Object)send46430, (Object)symbol7989, 0);
// isNil
send46432 = (Object)new_AST_Send((Object)send46431, (Object)SMB_isNil, 0);
method6137 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4994, 7, assign5637, assign5638, send46423, send46426, assign5639, send46432, Self);
symbol7614 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure6137 = (Object)new_Runtime_MethodClosure(method6137);
store_method((Type_Class)class1020, (Type_Symbol)symbol7614, (Runtime_MethodClosure)methodclosure6137);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable6344 = (Object)new_AST_Variable_named(L"parser");
localvariable6345 = (Object)new_AST_Variable_named(L"string");
localvariable6346 = (Object)new_AST_Variable_named(L"result");
array4996 = (Object)new_Type_Array_with(3, (Object)localvariable6344, (Object)localvariable6345, (Object)localvariable6346);
// array
send46433 = (Object)new_AST_Send((Object)instancevariable1484, (Object)symbol7986, 0);
assign5640 = (Object)new_AST_Assign((Object)localvariable6344, (Object)send46433);
string5394 = (Object)new_Type_String(L"()");
constant9039 = (Object)new_AST_Constant((Object)string5394);
// on:
send46434 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9039);
assign5641 = (Object)new_AST_Assign((Object)localvariable6345, (Object)send46434);
// match:
send46435 = (Object)new_AST_Send((Object)localvariable6344, (Object)symbol7846, 1, (Object)localvariable6345);
assign5642 = (Object)new_AST_Assign((Object)localvariable6346, (Object)send46435);
// class
send46436 = (Object)new_AST_Send((Object)localvariable6346, (Object)SMB_class, 0);
// should
send46437 = (Object)new_AST_Send((Object)send46436, (Object)symbol7919, 0);
// =
send46438 = (Object)new_AST_Send((Object)send46437, (Object)SMB__equal, 1, (Object)classreference1185);
// literals
send46439 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
// asArray
send46440 = (Object)new_AST_Send((Object)send46439, (Object)SMB_asArray, 0);
// should
send46441 = (Object)new_AST_Send((Object)send46440, (Object)symbol7919, 0);
// new
send46442 = (Object)new_AST_Send((Object)classreference1145, (Object)symbol7640, 0);
// =
send46443 = (Object)new_AST_Send((Object)send46441, (Object)SMB__equal, 1, (Object)send46442);
string5395 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant9040 = (Object)new_AST_Constant((Object)string5395);
// on:
send46444 = (Object)new_AST_Send((Object)classreference1163, (Object)SMB_on_, 1, (Object)constant9040);
assign5643 = (Object)new_AST_Assign((Object)localvariable6345, (Object)send46444);
// match:
send46445 = (Object)new_AST_Send((Object)localvariable6344, (Object)symbol7846, 1, (Object)localvariable6345);
assign5644 = (Object)new_AST_Assign((Object)localvariable6346, (Object)send46445);
// class
send46446 = (Object)new_AST_Send((Object)localvariable6346, (Object)SMB_class, 0);
// should
send46447 = (Object)new_AST_Send((Object)send46446, (Object)symbol7919, 0);
// =
send46448 = (Object)new_AST_Send((Object)send46447, (Object)SMB__equal, 1, (Object)classreference1185);
// literals
send46449 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
// size
send46450 = (Object)new_AST_Send((Object)send46449, (Object)SMB_size, 0);
// should
send46451 = (Object)new_AST_Send((Object)send46450, (Object)symbol7919, 0);
smallint3158 = (Object)new_Type_SmallInt(5);
constant9041 = (Object)new_AST_Constant((Object)smallint3158);
// =
send46452 = (Object)new_AST_Send((Object)send46451, (Object)SMB__equal, 1, (Object)constant9041);
// literals
send46453 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
// first
send46454 = (Object)new_AST_Send((Object)send46453, (Object)symbol7702, 0);
// class
send46455 = (Object)new_AST_Send((Object)send46454, (Object)SMB_class, 0);
// should
send46456 = (Object)new_AST_Send((Object)send46455, (Object)symbol7919, 0);
// =
send46457 = (Object)new_AST_Send((Object)send46456, (Object)SMB__equal, 1, (Object)classreference1167);
// literals
send46458 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
// first
send46459 = (Object)new_AST_Send((Object)send46458, (Object)symbol7702, 0);
// number
send46460 = (Object)new_AST_Send((Object)send46459, (Object)symbol7710, 0);
// should
send46461 = (Object)new_AST_Send((Object)send46460, (Object)symbol7919, 0);
string5396 = (Object)new_Type_String(L"1");
constant9042 = (Object)new_AST_Constant((Object)string5396);
// =
send46462 = (Object)new_AST_Send((Object)send46461, (Object)SMB__equal, 1, (Object)constant9042);
// literals
send46463 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3159 = (Object)new_Type_SmallInt(2);
constant9043 = (Object)new_AST_Constant((Object)smallint3159);
// at:
send46464 = (Object)new_AST_Send((Object)send46463, (Object)SMB_at_, 1, (Object)constant9043);
// class
send46465 = (Object)new_AST_Send((Object)send46464, (Object)SMB_class, 0);
// should
send46466 = (Object)new_AST_Send((Object)send46465, (Object)symbol7919, 0);
// =
send46467 = (Object)new_AST_Send((Object)send46466, (Object)SMB__equal, 1, (Object)classreference1172);
// literals
send46468 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3160 = (Object)new_Type_SmallInt(2);
constant9044 = (Object)new_AST_Constant((Object)smallint3160);
// at:
send46469 = (Object)new_AST_Send((Object)send46468, (Object)SMB_at_, 1, (Object)constant9044);
// symbol
send46470 = (Object)new_AST_Send((Object)send46469, (Object)symbol7715, 0);
// should
send46471 = (Object)new_AST_Send((Object)send46470, (Object)symbol7919, 0);
string5397 = (Object)new_Type_String(L"a");
constant9045 = (Object)new_AST_Constant((Object)string5397);
// =
send46472 = (Object)new_AST_Send((Object)send46471, (Object)SMB__equal, 1, (Object)constant9045);
// literals
send46473 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3161 = (Object)new_Type_SmallInt(3);
constant9046 = (Object)new_AST_Constant((Object)smallint3161);
// at:
send46474 = (Object)new_AST_Send((Object)send46473, (Object)SMB_at_, 1, (Object)constant9046);
// class
send46475 = (Object)new_AST_Send((Object)send46474, (Object)SMB_class, 0);
// should
send46476 = (Object)new_AST_Send((Object)send46475, (Object)symbol7919, 0);
// =
send46477 = (Object)new_AST_Send((Object)send46476, (Object)SMB__equal, 1, (Object)classreference1172);
// literals
send46478 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3162 = (Object)new_Type_SmallInt(3);
constant9047 = (Object)new_AST_Constant((Object)smallint3162);
// at:
send46479 = (Object)new_AST_Send((Object)send46478, (Object)SMB_at_, 1, (Object)constant9047);
// symbol
send46480 = (Object)new_AST_Send((Object)send46479, (Object)symbol7715, 0);
// should
send46481 = (Object)new_AST_Send((Object)send46480, (Object)symbol7919, 0);
string5398 = (Object)new_Type_String(L"a");
constant9048 = (Object)new_AST_Constant((Object)string5398);
// =
send46482 = (Object)new_AST_Send((Object)send46481, (Object)SMB__equal, 1, (Object)constant9048);
// literals
send46483 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3163 = (Object)new_Type_SmallInt(4);
constant9049 = (Object)new_AST_Constant((Object)smallint3163);
// at:
send46484 = (Object)new_AST_Send((Object)send46483, (Object)SMB_at_, 1, (Object)constant9049);
// class
send46485 = (Object)new_AST_Send((Object)send46484, (Object)SMB_class, 0);
// should
send46486 = (Object)new_AST_Send((Object)send46485, (Object)symbol7919, 0);
// =
send46487 = (Object)new_AST_Send((Object)send46486, (Object)SMB__equal, 1, (Object)classreference1194);
// literals
send46488 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3164 = (Object)new_Type_SmallInt(4);
constant9050 = (Object)new_AST_Constant((Object)smallint3164);
// at:
send46489 = (Object)new_AST_Send((Object)send46488, (Object)SMB_at_, 1, (Object)constant9050);
// string
send46490 = (Object)new_AST_Send((Object)send46489, (Object)symbol7719, 0);
// should
send46491 = (Object)new_AST_Send((Object)send46490, (Object)symbol7919, 0);
string5399 = (Object)new_Type_String(L"b");
constant9051 = (Object)new_AST_Constant((Object)string5399);
// =
send46492 = (Object)new_AST_Send((Object)send46491, (Object)SMB__equal, 1, (Object)constant9051);
// literals
send46493 = (Object)new_AST_Send((Object)localvariable6346, (Object)symbol7694, 0);
smallint3165 = (Object)new_Type_SmallInt(5);
constant9052 = (Object)new_AST_Constant((Object)smallint3165);
// at:
send46494 = (Object)new_AST_Send((Object)send46493, (Object)SMB_at_, 1, (Object)constant9052);
// class
send46495 = (Object)new_AST_Send((Object)send46494, (Object)SMB_class, 0);
// should
send46496 = (Object)new_AST_Send((Object)send46495, (Object)symbol7919, 0);
// =
send46497 = (Object)new_AST_Send((Object)send46496, (Object)SMB__equal, 1, (Object)classreference1185);
method6138 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array4996, 19, assign5640, assign5641, assign5642, send46438, send46443, assign5643, assign5644, send46448, send46452, send46457, send46462, send46467, send46472, send46477, send46482, send46487, send46492, send46497, Self);
symbol7561 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure6138 = (Object)new_Runtime_MethodClosure(method6138);
store_method((Type_Class)class1020, (Type_Symbol)symbol7561, (Runtime_MethodClosure)methodclosure6138);

classreference1201 = (Object)new_Organization_ClassReference((Type_Class)class1020);

// Variable>>asPVariable
//asPVariable
// 	^ self.
method6139 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure6139 = (Object)new_Runtime_MethodClosure(method6139);
store_method((Type_Class)class1021, (Type_Symbol)symbol7722, (Runtime_MethodClosure)methodclosure6139);


// Variable>>localId
//localId
// 	^ localId
method6140 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1487);
symbol7865 = (Object)new_Type_Symbol_cached(L"localId");
methodclosure6140 = (Object)new_Runtime_MethodClosure(method6140);
store_method((Type_Class)class1021, (Type_Symbol)symbol7865, (Runtime_MethodClosure)methodclosure6140);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method6141 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1486);
symbol7867 = (Object)new_Type_Symbol_cached(L"scopeId");
methodclosure6141 = (Object)new_Runtime_MethodClosure(method6141);
store_method((Type_Class)class1021, (Type_Symbol)symbol7867, (Runtime_MethodClosure)methodclosure6141);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable6347 = (Object)new_AST_Variable_named(L"aStream");
array4997 = (Object)new_Type_Array_with(1, (Object)localvariable6347);
super514 = (Object)new_AST_Super((Object)symbol7650, 1, (Object)localvariable6347);
string5400 = (Object)new_Type_String(L" ");
constant9053 = (Object)new_AST_Constant((Object)string5400);
// nextPutAll:
send46498 = (Object)new_AST_Send((Object)localvariable6347, (Object)symbol7888, 1, (Object)constant9053);
// name
send46499 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send46500 = (Object)new_AST_Send((Object)send46499, (Object)symbol7650, 1, (Object)localvariable6347);
string5401 = (Object)new_Type_String(L" ");
constant9054 = (Object)new_AST_Constant((Object)string5401);
// nextPutAll:
send46501 = (Object)new_AST_Send((Object)localvariable6347, (Object)symbol7888, 1, (Object)constant9054);
// scopeId
send46502 = (Object)new_AST_Send((Object)Self, (Object)symbol7867, 0);
// printOn:
send46503 = (Object)new_AST_Send((Object)send46502, (Object)symbol7650, 1, (Object)localvariable6347);
string5402 = (Object)new_Type_String(L"@");
constant9055 = (Object)new_AST_Constant((Object)string5402);
// nextPutAll:
send46504 = (Object)new_AST_Send((Object)localvariable6347, (Object)symbol7888, 1, (Object)constant9055);
// localId
send46505 = (Object)new_AST_Send((Object)Self, (Object)symbol7865, 0);
// printOn:
send46506 = (Object)new_AST_Send((Object)send46505, (Object)symbol7650, 1, (Object)localvariable6347);
method6142 = (Object)new_AST_Method_with((Type_Array)array4997, (Type_Array)empty_Type_Array, 8, super514, send46498, send46500, send46501, send46503, send46504, send46506, Self);
methodclosure6142 = (Object)new_Runtime_MethodClosure(method6142);
store_method((Type_Class)class1021, (Type_Symbol)symbol7650, (Runtime_MethodClosure)methodclosure6142);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable6348 = (Object)new_AST_Variable_named(L"anObject");
array4998 = (Object)new_Type_Array_with(1, (Object)localvariable6348);
assign5645 = (Object)new_AST_Assign((Object)instancevariable1485, (Object)localvariable6348);
method6143 = (Object)new_AST_Method_with((Type_Array)array4998, (Type_Array)empty_Type_Array, 2, assign5645, Self);
methodclosure6143 = (Object)new_Runtime_MethodClosure(method6143);
store_method((Type_Class)class1021, (Type_Symbol)symbol7723, (Runtime_MethodClosure)methodclosure6143);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable6349 = (Object)new_AST_Variable_named(L"anObject");
array4999 = (Object)new_Type_Array_with(1, (Object)localvariable6349);
assign5646 = (Object)new_AST_Assign((Object)instancevariable1486, (Object)localvariable6349);
method6144 = (Object)new_AST_Method_with((Type_Array)array4999, (Type_Array)empty_Type_Array, 2, assign5646, Self);
symbol7866 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure6144 = (Object)new_Runtime_MethodClosure(method6144);
store_method((Type_Class)class1021, (Type_Symbol)symbol7866, (Runtime_MethodClosure)methodclosure6144);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable6350 = (Object)new_AST_Variable_named(L"anObject");
array5000 = (Object)new_Type_Array_with(1, (Object)localvariable6350);
assign5647 = (Object)new_AST_Assign((Object)instancevariable1487, (Object)localvariable6350);
method6145 = (Object)new_AST_Method_with((Type_Array)array5000, (Type_Array)empty_Type_Array, 2, assign5647, Self);
methodclosure6145 = (Object)new_Runtime_MethodClosure(method6145);
store_method((Type_Class)class1021, (Type_Symbol)symbol7868, (Runtime_MethodClosure)methodclosure6145);


// Variable>>name
//name
// 	^ name
method6146 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1485);
methodclosure6146 = (Object)new_Runtime_MethodClosure(method6146);
store_method((Type_Class)class1021, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure6146);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable6351 = (Object)new_AST_Variable_named(L"aSymbol");
array5001 = (Object)new_Type_Array_with(1, (Object)localvariable6351);
// new
send46507 = (Object)new_AST_Send((Object)Self, (Object)symbol7640, 0);
// asSymbol
send46508 = (Object)new_AST_Send((Object)localvariable6351, (Object)SMB_asSymbol, 0);
// name:
send46509 = (Object)new_AST_Send((Object)send46507, (Object)symbol7723, 1, (Object)send46508);
method6147 = (Object)new_AST_Method_with((Type_Array)array5001, (Type_Array)empty_Type_Array, 1, send46509);
methodclosure6147 = (Object)new_Runtime_MethodClosure(method6147);
store_method((Type_Class)metaclass1021, (Type_Symbol)symbol7864, (Runtime_MethodClosure)methodclosure6147);

classreference1202 = (Object)new_Organization_ClassReference((Type_Class)class1021);

// Message>>selector
//selector 
// 	^ selector
instancevariable1495 = (Object)new_AST_InstVariable(0, L"selector");
method6148 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1495);
methodclosure6148 = (Object)new_Runtime_MethodClosure(method6148);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol7654, (Runtime_MethodClosure)methodclosure6148);


// Message>>arguments
//arguments
// 	^ self
method6149 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure6149 = (Object)new_Runtime_MethodClosure(method6149);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol7655, (Runtime_MethodClosure)methodclosure6149);

classreference1203 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// True>>or:
//or: aBoolean
localvariable6352 = (Object)new_AST_Variable_named(L"aBoolean");
array5002 = (Object)new_Type_Array_with(1, (Object)localvariable6352);
method6150 = (Object)new_AST_Method_with((Type_Array)array5002, (Type_Array)empty_Type_Array, 1, Self);
methodclosure6150 = (Object)new_Runtime_MethodClosure(method6150);
store_method((Type_Class)True_Class, (Type_Symbol)symbol7658, (Runtime_MethodClosure)methodclosure6150);


// True>>and:
//and: aBlock
// 	^ aBlock value.
localvariable6353 = (Object)new_AST_Variable_named(L"aBlock");
array5003 = (Object)new_Type_Array_with(1, (Object)localvariable6353);
// value
send46510 = (Object)new_AST_Send((Object)localvariable6353, (Object)symbol7893, 0);
method6151 = (Object)new_AST_Method_with((Type_Array)array5003, (Type_Array)empty_Type_Array, 1, send46510);
methodclosure6151 = (Object)new_Runtime_MethodClosure(method6151);
store_method((Type_Class)True_Class, (Type_Symbol)symbol7659, (Runtime_MethodClosure)methodclosure6151);

classreference1204 = (Object)new_Organization_ClassReference((Type_Class)True_Class);

// False>>or:
//or: aBlock
// 	^ aBlock value.
localvariable6354 = (Object)new_AST_Variable_named(L"aBlock");
array5004 = (Object)new_Type_Array_with(1, (Object)localvariable6354);
// value
send46511 = (Object)new_AST_Send((Object)localvariable6354, (Object)symbol7893, 0);
method6152 = (Object)new_AST_Method_with((Type_Array)array5004, (Type_Array)empty_Type_Array, 1, send46511);
methodclosure6152 = (Object)new_Runtime_MethodClosure(method6152);
store_method((Type_Class)False_Class, (Type_Symbol)symbol7658, (Runtime_MethodClosure)methodclosure6152);


// False>>and:
//and: aBoolean
localvariable6355 = (Object)new_AST_Variable_named(L"aBoolean");
array5005 = (Object)new_Type_Array_with(1, (Object)localvariable6355);
method6153 = (Object)new_AST_Method_with((Type_Array)array5005, (Type_Array)empty_Type_Array, 1, Self);
methodclosure6153 = (Object)new_Runtime_MethodClosure(method6153);
store_method((Type_Class)False_Class, (Type_Symbol)symbol7659, (Runtime_MethodClosure)methodclosure6153);

classreference1205 = (Object)new_Organization_ClassReference((Type_Class)False_Class);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable6356 = (Object)new_AST_Variable_named(L"aMessage");
array5006 = (Object)new_Type_Array_with(1, (Object)localvariable6356);
localvariable6357 = (Object)new_AST_Variable_named(L"selector");
array5007 = (Object)new_Type_Array_with(1, (Object)localvariable6357);
variable322 = (Object)new_AST_Variable_named(L"return");
array5008 = (Object)new_Type_Array_with(1, (Object)variable322);
// selector
send46512 = (Object)new_AST_Send((Object)localvariable6356, (Object)symbol7654, 0);
constant9056 = (Object)new_AST_Constant((Object)symbol7912);
// =
send46513 = (Object)new_AST_Send((Object)send46512, (Object)SMB__equal, 1, (Object)constant9056);
super515 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable6356);
// escape:
send46514 = (Object)new_AST_Send((Object)variable322, (Object)SMB_escape_, 1, (Object)super515);
block2889 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send46514);
// ifFalse:
send46515 = (Object)new_AST_Send((Object)send46513, (Object)SMB_ifFalse_, 1, (Object)block2889);
string5403 = (Object)new_Type_String(L"visit");
constant9057 = (Object)new_AST_Constant((Object)string5403);
// objectName
send46516 = (Object)new_AST_Send((Object)Self, (Object)symbol7545, 0);
// ,
send46517 = (Object)new_AST_Send((Object)constant9057, (Object)SMB__concat, 1, (Object)send46516);
string5404 = (Object)new_Type_String(L":");
constant9058 = (Object)new_AST_Constant((Object)string5404);
// ,
send46518 = (Object)new_AST_Send((Object)send46517, (Object)SMB__concat, 1, (Object)constant9058);
// asSymbol
send46519 = (Object)new_AST_Send((Object)send46518, (Object)SMB_asSymbol, 0);
assign5648 = (Object)new_AST_Assign((Object)localvariable6357, (Object)send46519);
// argument
send46520 = (Object)new_AST_Send((Object)localvariable6356, (Object)symbol7738, 0);
// perform:with:
send46521 = (Object)new_AST_Send((Object)send46520, (Object)symbol7914, 2, (Object)localvariable6357, (Object)Self);
block2890 = (Object)new_AST_Block_with((Type_Array)array5008, (Type_Array)empty_Type_Array, 1, 3, send46515, assign5648, send46521);
// on:
send46522 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2890);
method6154 = (Object)new_AST_Method_with((Type_Array)array5006, (Type_Array)array5007, 1, send46522);
methodclosure6154 = (Object)new_Runtime_MethodClosure(method6154);
store_method((Type_Class)class1024, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure6154);

classreference1206 = (Object)new_Organization_ClassReference((Type_Class)class1024);
classreference1207 = (Object)new_Organization_ClassReference((Type_Class)class1019);
}


/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send46523 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7613, 0);
Object result = (Object)Eval((Object)send46523);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send46524 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7608, 0);
Object result = (Object)Eval((Object)send46524);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send46525 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7561, 0);
Object result = (Object)Eval((Object)send46525);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send46526 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7614, 0);
Object result = (Object)Eval((Object)send46526);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send46527 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7617, 0);
Object result = (Object)Eval((Object)send46527);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send46528 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7581, 0);
Object result = (Object)Eval((Object)send46528);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send46529 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7576, 0);
Object result = (Object)Eval((Object)send46529);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send46530 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7590, 0);
Object result = (Object)Eval((Object)send46530);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send46531 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7610, 0);
Object result = (Object)Eval((Object)send46531);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send46532 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7603, 0);
Object result = (Object)Eval((Object)send46532);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send46533 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7565, 0);
Object result = (Object)Eval((Object)send46533);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send46534 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7589, 0);
Object result = (Object)Eval((Object)send46534);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send46535 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7570, 0);
Object result = (Object)Eval((Object)send46535);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send46536 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7609, 0);
Object result = (Object)Eval((Object)send46536);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send46537 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7626, 0);
Object result = (Object)Eval((Object)send46537);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send46538 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7619, 0);
Object result = (Object)Eval((Object)send46538);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send46539 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7622, 0);
Object result = (Object)Eval((Object)send46539);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send46540 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7586, 0);
Object result = (Object)Eval((Object)send46540);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send46541 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7578, 0);
Object result = (Object)Eval((Object)send46541);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send46542 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7594, 0);
Object result = (Object)Eval((Object)send46542);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send46543 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7616, 0);
Object result = (Object)Eval((Object)send46543);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send46544 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7579, 0);
Object result = (Object)Eval((Object)send46544);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send46545 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7583, 0);
Object result = (Object)Eval((Object)send46545);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send46546 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7601, 0);
Object result = (Object)Eval((Object)send46546);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send46547 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7620, 0);
Object result = (Object)Eval((Object)send46547);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send46548 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7591, 0);
Object result = (Object)Eval((Object)send46548);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send46549 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7592, 0);
Object result = (Object)Eval((Object)send46549);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send46550 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7574, 0);
Object result = (Object)Eval((Object)send46550);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send46551 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7580, 0);
Object result = (Object)Eval((Object)send46551);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send46552 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7596, 0);
Object result = (Object)Eval((Object)send46552);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send46553 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7605, 0);
Object result = (Object)Eval((Object)send46553);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send46554 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7624, 0);
Object result = (Object)Eval((Object)send46554);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send46555 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7584, 0);
Object result = (Object)Eval((Object)send46555);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send46556 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7598, 0);
Object result = (Object)Eval((Object)send46556);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send46557 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7571, 0);
Object result = (Object)Eval((Object)send46557);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send46558 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7627, 0);
Object result = (Object)Eval((Object)send46558);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send46559 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7621, 0);
Object result = (Object)Eval((Object)send46559);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send46560 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7623, 0);
Object result = (Object)Eval((Object)send46560);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send46561 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7593, 0);
Object result = (Object)Eval((Object)send46561);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send46562 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7572, 0);
Object result = (Object)Eval((Object)send46562);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send46563 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7611, 0);
Object result = (Object)Eval((Object)send46563);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send46564 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7597, 0);
Object result = (Object)Eval((Object)send46564);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send46565 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7588, 0);
Object result = (Object)Eval((Object)send46565);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send46566 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7604, 0);
Object result = (Object)Eval((Object)send46566);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send46567 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7577, 0);
Object result = (Object)Eval((Object)send46567);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send46568 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol7613, 0);
Eval((Object)send46568);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class1020;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})