// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object objectlayout1267;
Object instancevariable992;
Object instancevariable993;
Object instancevariable994;
Object instancevariable995;
Object instancevariable996;
Object symbol5368;
Object class684;
Object metaclass684;
Object objectlayout1268;
Object symbol5367;
Object class685;
Object metaclass685;
Object objectlayout1269;
Object symbol5366;
Object class686;
Object metaclass686;
Object objectlayout1270;
Object symbol5233;
Object objectlayout1271;
Object instancevariable997;
Object instancevariable998;
Object instancevariable999;
Object class687;
Object metaclass687;
Object objectlayout1272;
Object symbol5541;
Object objectlayout1273;
Object instancevariable1000;
Object instancevariable1001;
Object class688;
Object metaclass688;
Object objectlayout1274;
Object symbol5350;
Object objectlayout1275;
Object instancevariable1002;
Object instancevariable1003;
Object instancevariable1004;
Object class689;
Object metaclass689;
Object objectlayout1276;
Object symbol5344;
Object class690;
Object metaclass690;
Object objectlayout1277;
Object symbol5343;
Object objectlayout1278;
Object instancevariable1005;
Object instancevariable1006;
Object instancevariable1007;
Object class691;
Object metaclass691;
Object objectlayout1279;
Object symbol5342;
Object objectlayout1280;
Object class692;
Object metaclass692;
Object objectlayout1281;
Object symbol5504;
Object objectlayout1282;
Object instancevariable1008;
Object instancevariable1009;
Object class693;
Object metaclass693;
Object objectlayout1283;
Object symbol5512;
Object objectlayout1284;
Object instancevariable1010;
Object instancevariable1011;
Object class694;
Object metaclass694;
Object objectlayout1285;
Object symbol5508;
Object objectlayout1286;
Object instancevariable1012;
Object instancevariable1013;
Object class695;
Object metaclass695;
Object objectlayout1287;
Object symbol5520;
Object objectlayout1288;
Object class696;
Object metaclass696;
Object objectlayout1289;
Object symbol5551;
Object class697;
Object metaclass697;
Object objectlayout1290;
Object symbol5548;
Object objectlayout1291;
Object instancevariable1014;
Object class698;
Object metaclass698;
Object objectlayout1292;
Object symbol5288;
Object objectlayout1293;
Object instancevariable1015;
Object instancevariable1016;
Object instancevariable1017;
Object instancevariable1018;
Object class699;
Object metaclass699;
Object objectlayout1294;
Object symbol5222;
Object objectlayout1295;
Object instancevariable1019;
Object instancevariable1020;
Object class700;
Object metaclass700;
Object objectlayout1296;
Object symbol5549;
Object class701;
Object metaclass701;
Object objectlayout1297;
Object symbol5522;
Object objectlayout1298;
Object instancevariable1021;
Object instancevariable1022;
Object class702;
Object metaclass702;
Object objectlayout1299;
Object symbol5507;
Object objectlayout1300;
Object instancevariable1023;
Object class703;
Object metaclass703;
Object objectlayout1301;
Object instancevariable1024;
Object symbol5355;
Object objectlayout1302;
Object instancevariable1025;
Object instancevariable1026;
Object instancevariable1027;
Object class704;
Object metaclass704;
Object objectlayout1303;
Object symbol5354;
Object objectlayout1304;
Object class705;
Object metaclass705;
Object objectlayout1305;
Object symbol5224;
Object objectlayout1306;
Object instancevariable1028;
Object class706;
Object metaclass706;
Object objectlayout1307;
Object symbol5402;
Object objectlayout1308;
Object instancevariable1029;
Object class707;
Object metaclass707;
Object objectlayout1309;
Object symbol5285;
Object objectlayout1310;
Object instancevariable1030;
Object class708;
Object metaclass708;
Object objectlayout1311;
Object symbol5252;
Object objectlayout1312;
Object instancevariable1031;
Object class709;
Object metaclass709;
Object objectlayout1313;
Object symbol5396;
Object objectlayout1314;
Object class710;
Object metaclass710;
Object objectlayout1315;
Object symbol5487;
Object objectlayout1316;
Object instancevariable1032;
Object class711;
Object metaclass711;
Object objectlayout1317;
Object symbol5272;
Object objectlayout1318;
Object instancevariable1033;
Object instancevariable1034;
Object instancevariable1035;
Object class712;
Object metaclass712;
Object objectlayout1319;
Object symbol5401;
Object objectlayout1320;
Object class713;
Object metaclass713;
Object objectlayout1321;
Object symbol5245;
Object objectlayout1322;
Object instancevariable1036;
Object class714;
Object metaclass714;
Object objectlayout1323;
Object symbol5234;
Object objectlayout1324;
Object instancevariable1037;
Object instancevariable1038;
Object class715;
Object metaclass715;
Object objectlayout1325;
Object symbol5265;
Object objectlayout1326;
Object instancevariable1039;
Object class716;
Object metaclass716;
Object objectlayout1327;
Object symbol5255;
Object objectlayout1328;
Object instancevariable1040;
Object instancevariable1041;
Object class717;
Object metaclass717;
Object objectlayout1329;
Object symbol5236;
Object objectlayout1330;
Object instancevariable1042;
Object instancevariable1043;
Object class718;
Object metaclass718;
Object objectlayout1331;
Object symbol5228;
Object objectlayout1332;
Object instancevariable1044;
Object instancevariable1045;
Object class719;
Object metaclass719;
Object objectlayout1333;
Object symbol5295;
Object objectlayout1334;
Object instancevariable1046;
Object class720;
Object metaclass720;
Object objectlayout1335;
Object symbol5276;
Object objectlayout1336;
Object instancevariable1047;
Object class721;
Object metaclass721;
Object objectlayout1337;
Object symbol5237;
Object objectlayout1338;
Object instancevariable1048;
Object instancevariable1049;
Object class722;
Object metaclass722;
Object objectlayout1339;
Object symbol5229;
Object objectlayout1340;
Object instancevariable1050;
Object class723;
Object metaclass723;
Object objectlayout1341;
Object symbol5257;
Object objectlayout1342;
Object class724;
Object metaclass724;
Object objectlayout1343;
Object symbol5277;
Object objectlayout1344;
Object class725;
Object metaclass725;
Object objectlayout1345;
Object symbol5230;
Object objectlayout1346;
Object instancevariable1051;
Object class726;
Object metaclass726;
Object objectlayout1347;
Object symbol5238;
Object objectlayout1348;
Object instancevariable1052;
Object instancevariable1053;
Object class727;
Object metaclass727;
Object objectlayout1349;
Object symbol5269;
Object objectlayout1350;
Object class728;
Object metaclass728;
Object objectlayout1351;
Object symbol5270;
Object objectlayout1352;
Object class729;
Object metaclass729;
Object objectlayout1353;
Object symbol5239;
Object objectlayout1354;
Object instancevariable1054;
Object class730;
Object metaclass730;
Object objectlayout1355;
Object symbol5243;
Object objectlayout1356;
Object instancevariable1055;
Object instancevariable1056;
Object instancevariable1057;
Object instancevariable1058;
Object class731;
Object metaclass731;
Object objectlayout1357;
Object symbol5443;
Object objectlayout1358;
Object class732;
Object metaclass732;
Object objectlayout1359;
Object symbol5282;
Object objectlayout1360;
Object instancevariable1059;
Object instancevariable1060;
Object instancevariable1061;
Object class733;
Object metaclass733;
Object objectlayout1361;
Object instancevariable1062;
Object symbol5206;
Object objectlayout1362;
Object instancevariable1063;
Object class734;
Object metaclass734;
Object objectlayout1363;
Object symbol5203;
Object objectlayout1364;
Object instancevariable1064;
Object class735;
Object metaclass735;
Object objectlayout1365;
Object symbol5533;
Object objectlayout1366;
Object instancevariable1065;
Object instancevariable1066;
Object instancevariable1067;
Object class736;
Object metaclass736;
Object objectlayout1367;
Object symbol5391;
Object objectlayout1368;
Object instancevariable1068;
Object class737;
Object metaclass737;
Object objectlayout1369;
Object symbol5313;
Object objectlayout1370;
Object class738;
Object metaclass738;
Object objectlayout1371;
Object symbol5307;
Object class739;
Object metaclass739;
Object objectlayout1372;
Object instancevariable1069;
Object symbol5308;
Object class740;
Object metaclass740;
Object localvariable4084;
Object array3229;
Object send29582;
Object symbol5218;
Object send29583;
Object method4013;
Object symbol5300;
Object methodclosure4013;
Object instancevariable1070;
Object method4014;
Object symbol5316;
Object methodclosure4014;
Object localvariable4085;
Object array3230;
Object assign3591;
Object method4015;
Object symbol5301;
Object methodclosure4015;
Object instancevariable1071;
Object method4016;
Object symbol5305;
Object methodclosure4016;
Object symbol5311;
Object send29584;
Object symbol5220;
Object method4017;
Object methodclosure4017;
Object classreference782;
Object symbol5555;
Object send29585;
Object send29586;
Object method4018;
Object symbol5309;
Object methodclosure4018;
Object send29587;
Object send29588;
Object method4019;
Object symbol5310;
Object methodclosure4019;
Object localvariable4086;
Object array3231;
Object classreference783;
Object send29589;
Object assign3592;
Object send29590;
Object symbol5556;
Object send29591;
Object send29592;
Object send29593;
Object block1840;
Object block1841;
Object send29594;
Object method4020;
Object symbol5302;
Object methodclosure4020;
Object localvariable4087;
Object localvariable4088;
Object localvariable4089;
Object array3232;
Object send29595;
Object assign3593;
Object symbol5315;
Object send29596;
Object symbol5375;
Object localvariable4090;
Object array3233;
Object localvariable4091;
Object array3234;
Object send29597;
Object send29598;
Object symbol5557;
Object string3437;
Object constant5769;
Object send29599;
Object string3438;
Object constant5770;
Object send29600;
Object send29601;
Object block1842;
Object send29602;
Object block1843;
Object send29603;
Object classreference784;
Object symbol5534;
Object send29604;
Object assign3594;
Object symbol5538;
Object send29605;
Object send29606;
Object symbol5376;
Object send29607;
Object block1844;
Object send29608;
Object method4021;
Object symbol5314;
Object methodclosure4021;
Object instancevariable1072;
Object method4022;
Object methodclosure4022;
Object method4023;
Object symbol5303;
Object methodclosure4023;
Object send29609;
Object method4024;
Object methodclosure4024;
Object localvariable4092;
Object array3235;
Object send29610;
Object symbol5543;
Object send29611;
Object method4025;
Object symbol5312;
Object methodclosure4025;
Object localvariable4093;
Object array3236;
Object variable199;
Object array3237;
Object send29612;
Object send29613;
Object block1845;
Object send29614;
Object send29615;
Object send29616;
Object block1846;
Object send29617;
Object symbol5304;
Object send29618;
Object block1847;
Object send29619;
Object method4026;
Object methodclosure4026;
Object classreference785;
Object instancevariable1073;
Object method4027;
Object symbol5321;
Object methodclosure4027;
Object localvariable4094;
Object array3238;
Object symbol5320;
Object super342;
Object symbol5558;
Object string3439;
Object constant5771;
Object send29620;
Object send29621;
Object send29622;
Object method4028;
Object methodclosure4028;
Object instancevariable1074;
Object method4029;
Object methodclosure4029;
Object classreference786;
Object localvariable4095;
Object array3239;
Object super343;
Object symbol5559;
Object send29623;
Object send29624;
Object send29625;
Object method4030;
Object methodclosure4030;
Object classreference787;
Object classreference788;
Object localvariable4096;
Object array3240;
Object send29626;
Object send29627;
Object method4031;
Object methodclosure4031;
Object method4032;
Object symbol5217;
Object methodclosure4032;
Object send29628;
Object symbol5209;
Object send29629;
Object method4033;
Object symbol5215;
Object methodclosure4033;
Object localvariable4097;
Object array3241;
Object send29630;
Object send29631;
Object method4034;
Object symbol5219;
Object methodclosure4034;
Object method4035;
Object methodclosure4035;
Object method4036;
Object symbol5216;
Object methodclosure4036;
Object symbol5358;
Object send29632;
Object send29633;
Object method4037;
Object methodclosure4037;
Object method4038;
Object methodclosure4038;
Object classreference789;
Object send29634;
Object smallint2012;
Object constant5772;
Object send29635;
Object method4039;
Object symbol5332;
Object methodclosure4039;
Object localvariable4098;
Object array3242;
Object smallint2013;
Object constant5773;
Object symbol5560;
Object send29636;
Object localvariable4099;
Object array3243;
Object send29637;
Object send29638;
Object block1848;
Object send29639;
Object method4040;
Object methodclosure4040;
Object localvariable4100;
Object array3244;
Object super344;
Object string3440;
Object constant5774;
Object send29640;
Object localvariable4101;
Object array3245;
Object send29641;
Object string3441;
Object constant5775;
Object send29642;
Object block1849;
Object send29643;
Object string3442;
Object constant5776;
Object send29644;
Object method4041;
Object methodclosure4041;
Object smallint2014;
Object constant5777;
Object send29645;
Object method4042;
Object symbol5372;
Object methodclosure4042;
Object localvariable4102;
Object array3246;
Object localvariable4103;
Object array3247;
Object send29646;
Object send29647;
Object smallint2015;
Object constant5778;
Object send29648;
Object send29649;
Object assign3595;
Object symbol5373;
Object localvariable4104;
Object localvariable4105;
Object array3248;
Object send29650;
Object block1850;
Object send29651;
Object symbol5378;
Object send29652;
Object method4043;
Object methodclosure4043;
Object super345;
Object method4044;
Object methodclosure4044;
Object localvariable4106;
Object array3249;
Object variable200;
Object array3250;
Object send29653;
Object send29654;
Object block1851;
Object send29655;
Object send29656;
Object send29657;
Object send29658;
Object send29659;
Object block1852;
Object send29660;
Object send29661;
Object send29662;
Object send29663;
Object send29664;
Object block1853;
Object send29665;
Object smallint2016;
Object constant5779;
Object send29666;
Object localvariable4107;
Object array3251;
Object send29667;
Object send29668;
Object send29669;
Object send29670;
Object block1854;
Object send29671;
Object block1855;
Object send29672;
Object block1856;
Object send29673;
Object method4045;
Object methodclosure4045;
Object localvariable4108;
Object array3252;
Object smallint2017;
Object constant5780;
Object send29674;
Object localvariable4109;
Object array3253;
Object symbol5561;
Object send29675;
Object send29676;
Object block1857;
Object send29677;
Object method4046;
Object methodclosure4046;
Object localvariable4110;
Object localvariable4111;
Object array3254;
Object localvariable4112;
Object array3255;
Object assign3596;
Object localvariable4113;
Object array3256;
Object send29678;
Object assign3597;
Object block1858;
Object send29679;
Object method4047;
Object symbol5377;
Object methodclosure4047;
Object localvariable4114;
Object array3257;
Object smallint2018;
Object constant5781;
Object send29680;
Object method4048;
Object symbol5374;
Object methodclosure4048;
Object localvariable4115;
Object array3258;
Object send29681;
Object send29682;
Object method4049;
Object methodclosure4049;
Object send29683;
Object send29684;
Object method4050;
Object symbol5371;
Object methodclosure4050;
Object classreference790;
Object classreference791;
Object classreference792;
Object classreference793;
Object classreference794;
Object classreference795;
Object localvariable4116;
Object localvariable4117;
Object array3259;
Object symbol5562;
Object symbol5563;
Object send29685;
Object send29686;
Object block1859;
Object send29687;
Object method4051;
Object symbol5542;
Object methodclosure4051;
Object localvariable4118;
Object array3260;
Object variable201;
Object array3261;
Object send29688;
Object block1860;
Object send29689;
Object block1861;
Object send29690;
Object method4052;
Object methodclosure4052;
Object classreference796;
Object classreference797;
Object classreference798;
Object classreference799;
Object method4053;
Object symbol5513;
Object methodclosure4053;
Object localvariable4119;
Object array3262;
Object super346;
Object assign3598;
Object assign3599;
Object method4054;
Object symbol5545;
Object methodclosure4054;
Object localvariable4120;
Object array3263;
Object variable202;
Object array3264;
Object localvariable4121;
Object array3265;
Object send29691;
Object method4055;
Object symbol5553;
Object methodclosure4055;
Object localvariable4122;
Object array3266;
Object assign3600;
Object method4056;
Object symbol5554;
Object methodclosure4056;
Object localvariable4123;
Object array3267;
Object method4057;
Object symbol5552;
Object methodclosure4057;
Object classreference800;
Object symbol5516;
Object send29692;
Object symbol5564;
Object classreference801;
Object send29693;
Object block1862;
Object send29694;
Object send29695;
Object block1863;
Object send29696;
Object method4058;
Object symbol5523;
Object methodclosure4058;
Object classreference802;
Object localvariable4124;
Object array3268;
Object localvariable4125;
Object localvariable4126;
Object array3269;
Object symbol5565;
Object send29697;
Object assign3601;
Object send29698;
Object assign3602;
Object symbol5566;
Object send29699;
Object block1864;
Object send29700;
Object method4059;
Object methodclosure4059;
Object symbol5521;
Object send29701;
Object symbol5547;
Object send29702;
Object method4060;
Object symbol5517;
Object methodclosure4060;
Object localvariable4127;
Object array3270;
Object super347;
Object assign3603;
Object assign3604;
Object method4061;
Object methodclosure4061;
Object localvariable4128;
Object array3271;
Object assign3605;
Object method4062;
Object methodclosure4062;
Object method4063;
Object symbol5346;
Object methodclosure4063;
Object localvariable4129;
Object localvariable4130;
Object array3272;
Object localvariable4131;
Object array3273;
Object send29703;
Object block1865;
Object send29704;
Object send29705;
Object assign3606;
Object send29706;
Object block1866;
Object send29707;
Object block1867;
Object send29708;
Object method4064;
Object symbol5546;
Object methodclosure4064;
Object method4065;
Object methodclosure4065;
Object localvariable4132;
Object array3274;
Object send29709;
Object send29710;
Object method4066;
Object methodclosure4066;
Object classreference803;
Object send29711;
Object method4067;
Object symbol5509;
Object methodclosure4067;
Object send29712;
Object method4068;
Object methodclosure4068;
Object localvariable4133;
Object array3275;
Object localvariable4134;
Object localvariable4135;
Object array3276;
Object variable203;
Object array3277;
Object send29713;
Object assign3607;
Object send29714;
Object assign3608;
Object send29715;
Object block1868;
Object send29716;
Object send29717;
Object send29718;
Object block1869;
Object send29719;
Object method4069;
Object methodclosure4069;
Object classreference804;
Object send29720;
Object method4070;
Object methodclosure4070;
Object localvariable4136;
Object array3278;
Object send29721;
Object send29722;
Object method4071;
Object symbol5510;
Object methodclosure4071;
Object localvariable4137;
Object array3279;
Object assign3609;
Object method4072;
Object symbol5518;
Object methodclosure4072;
Object send29723;
Object send29724;
Object method4073;
Object symbol5511;
Object methodclosure4073;
Object variable204;
Object array3280;
Object symbol5519;
Object super348;
Object send29725;
Object block1870;
Object send29726;
Object string3443;
Object constant5782;
Object send29727;
Object string3444;
Object constant5783;
Object send29728;
Object block1871;
Object send29729;
Object method4074;
Object methodclosure4074;
Object localvariable4138;
Object array3281;
Object localvariable4139;
Object array3282;
Object super349;
Object assign3610;
Object assign3611;
Object method4075;
Object methodclosure4075;
Object localvariable4140;
Object array3283;
Object assign3612;
Object method4076;
Object methodclosure4076;
Object method4077;
Object methodclosure4077;
Object localvariable4141;
Object array3284;
Object symbol5514;
Object send29730;
Object send29731;
Object method4078;
Object symbol5550;
Object methodclosure4078;
Object super350;
Object send29732;
Object send29733;
Object method4079;
Object methodclosure4079;
Object localvariable4142;
Object array3285;
Object localvariable4143;
Object localvariable4144;
Object array3286;
Object variable205;
Object array3287;
Object send29734;
Object assign3613;
Object localvariable4145;
Object array3288;
Object send29735;
Object block1872;
Object send29736;
Object send29737;
Object assign3614;
Object send29738;
Object block1873;
Object send29739;
Object symbol5515;
Object send29740;
Object send29741;
Object block1874;
Object send29742;
Object block1875;
Object send29743;
Object send29744;
Object smallint2019;
Object constant5784;
Object send29745;
Object send29746;
Object send29747;
Object block1876;
Object send29748;
Object block1877;
Object send29749;
Object method4080;
Object methodclosure4080;
Object classreference805;
Object send29750;
Object send29751;
Object send29752;
Object method4081;
Object methodclosure4081;
Object send29753;
Object method4082;
Object methodclosure4082;
Object localvariable4146;
Object array3289;
Object symbol5567;
Object send29754;
Object method4083;
Object methodclosure4083;
Object method4084;
Object methodclosure4084;
Object send29755;
Object send29756;
Object method4085;
Object symbol5524;
Object methodclosure4085;
Object send29757;
Object method4086;
Object methodclosure4086;
Object method4087;
Object symbol5505;
Object methodclosure4087;
Object assign3615;
Object method4088;
Object methodclosure4088;
Object localvariable4147;
Object array3290;
Object symbol5568;
Object send29758;
Object localvariable4148;
Object array3291;
Object symbol5569;
Object send29759;
Object symbol5570;
Object send29760;
Object block1878;
Object send29761;
Object block1879;
Object send29762;
Object method4089;
Object symbol5525;
Object methodclosure4089;
Object localvariable4149;
Object array3292;
Object localvariable4150;
Object array3293;
Object super351;
Object assign3616;
Object method4090;
Object methodclosure4090;
Object localvariable4151;
Object array3294;
Object send29763;
Object send29764;
Object method4091;
Object symbol5337;
Object methodclosure4091;
Object super352;
Object send29765;
Object send29766;
Object method4092;
Object methodclosure4092;
Object localvariable4152;
Object array3295;
Object localvariable4153;
Object array3296;
Object variable206;
Object array3297;
Object localvariable4154;
Object array3298;
Object send29767;
Object assign3617;
Object symbol5571;
Object send29768;
Object block1880;
Object send29769;
Object block1881;
Object send29770;
Object block1882;
Object send29771;
Object method4093;
Object methodclosure4093;
Object classreference807;
Object send29772;
Object send29773;
Object send29774;
Object method4094;
Object methodclosure4094;
Object localvariable4155;
Object array3299;
Object send29775;
Object symbol5572;
Object send29776;
Object block1883;
Object send29777;
Object method4095;
Object symbol5506;
Object methodclosure4095;
Object method4096;
Object methodclosure4096;
Object localvariable4156;
Object array3300;
Object assign3618;
Object method4097;
Object symbol5393;
Object methodclosure4097;
Object method4098;
Object methodclosure4098;
Object classreference806;
Object localvariable4157;
Object array3301;
Object localvariable4158;
Object array3302;
Object symbol5352;
Object send29778;
Object assign3619;
Object method4099;
Object methodclosure4099;
Object localvariable4159;
Object array3303;
Object localvariable4160;
Object localvariable4161;
Object array3304;
Object localvariable4162;
Object array3305;
Object localvariable4163;
Object array3306;
Object symbol5529;
Object send29779;
Object assign3620;
Object symbol5573;
Object send29780;
Object method4100;
Object symbol5353;
Object methodclosure4100;
Object localvariable4164;
Object array3307;
Object localvariable4165;
Object localvariable4166;
Object array3308;
Object variable207;
Object array3309;
Object assign3621;
Object symbol5351;
Object send29781;
Object send29782;
Object block1884;
Object send29783;
Object assign3622;
Object symbol5574;
Object send29784;
Object assign3623;
Object symbol5575;
Object send29785;
Object send29786;
Object block1885;
Object send29787;
Object send29788;
Object send29789;
Object block1886;
Object send29790;
Object block1887;
Object send29791;
Object method4101;
Object methodclosure4101;
Object localvariable4167;
Object localvariable4168;
Object array3310;
Object super353;
Object assign3624;
Object send29792;
Object smallint2020;
Object constant5785;
Object send29793;
Object send29794;
Object assign3625;
Object method4102;
Object symbol5348;
Object methodclosure4102;
Object send29795;
Object method4103;
Object methodclosure4103;
Object localvariable4169;
Object array3311;
Object variable208;
Object array3312;
Object smallint2021;
Object constant5786;
Object send29796;
Object send29797;
Object assign3626;
Object send29798;
Object block1888;
Object send29799;
Object smallint2022;
Object constant5787;
Object send29800;
Object send29801;
Object send29802;
Object block1889;
Object send29803;
Object method4104;
Object methodclosure4104;
Object localvariable4170;
Object array3313;
Object symbol5345;
Object send29804;
Object block1890;
Object block1891;
Object send29805;
Object method4105;
Object symbol5347;
Object methodclosure4105;
Object localvariable4171;
Object array3314;
Object localvariable4172;
Object localvariable4173;
Object array3315;
Object variable209;
Object array3316;
Object symbol5576;
Object send29806;
Object assign3627;
Object assign3628;
Object send29807;
Object block1892;
Object send29808;
Object send29809;
Object block1893;
Object send29810;
Object symbol5577;
Object send29811;
Object send29812;
Object send29813;
Object send29814;
Object block1894;
Object send29815;
Object block1895;
Object send29816;
Object block1896;
Object send29817;
Object method4106;
Object methodclosure4106;
Object classreference808;
Object send29818;
Object assign3629;
Object send29819;
Object assign3630;
Object method4107;
Object symbol5528;
Object methodclosure4107;
Object localvariable4174;
Object array3317;
Object assign3631;
Object method4108;
Object symbol5526;
Object methodclosure4108;
Object localvariable4175;
Object array3318;
Object send29820;
Object assign3632;
Object method4109;
Object methodclosure4109;
Object super354;
Object send29821;
Object symbol5578;
Object send29822;
Object assign3633;
Object method4110;
Object methodclosure4110;
Object localvariable4176;
Object array3319;
Object assign3634;
Object method4111;
Object symbol5527;
Object methodclosure4111;
Object localvariable4177;
Object array3320;
Object localvariable4178;
Object array3321;
Object variable210;
Object array3322;
Object send29823;
Object assign3635;
Object symbol5579;
Object block1897;
Object send29824;
Object block1898;
Object send29825;
Object send29826;
Object block1899;
Object send29827;
Object block1900;
Object send29828;
Object method4112;
Object methodclosure4112;
Object classreference809;
Object localvariable4179;
Object array3323;
Object send29829;
Object method4113;
Object methodclosure4113;
Object classreference810;
Object symbol5364;
Object send29830;
Object send29831;
Object method4114;
Object methodclosure4114;
Object localvariable4180;
Object array3324;
Object assign3636;
Object method4115;
Object symbol5363;
Object methodclosure4115;
Object method4116;
Object methodclosure4116;
Object classreference811;
Object localvariable4181;
Object array3325;
Object variable211;
Object array3326;
Object symbol5406;
Object super355;
Object send29832;
Object block1901;
Object send29833;
Object symbol5425;
Object send29834;
Object block1902;
Object send29835;
Object method4117;
Object methodclosure4117;
Object localvariable4182;
Object array3327;
Object symbol5580;
Object send29836;
Object assign3637;
Object method4118;
Object symbol5424;
Object methodclosure4118;
Object method4119;
Object symbol5405;
Object methodclosure4119;
Object localvariable4183;
Object array3328;
Object variable212;
Object array3329;
Object send29837;
Object symbol5581;
Object localvariable4184;
Object array3330;
Object send29838;
Object send29839;
Object send29840;
Object send29841;
Object send29842;
Object send29843;
Object send29844;
Object block1903;
Object send29845;
Object block1904;
Object send29846;
Object block1905;
Object send29847;
Object method4120;
Object methodclosure4120;
Object super356;
Object send29848;
Object assign3638;
Object method4121;
Object methodclosure4121;
Object classreference812;
Object localvariable4185;
Object array3331;
Object assign3639;
Object method4122;
Object symbol5544;
Object methodclosure4122;
Object variable213;
Object array3332;
Object symbol5582;
Object send29849;
Object localvariable4186;
Object array3333;
Object send29850;
Object symbol5583;
Object symbol5357;
Object send29851;
Object block1906;
Object send29852;
Object block1907;
Object send29853;
Object block1908;
Object send29854;
Object block1909;
Object send29855;
Object method4123;
Object methodclosure4123;
Object classreference813;
Object localvariable4187;
Object array3334;
Object assign3640;
Object method4124;
Object methodclosure4124;
Object localvariable4188;
Object array3335;
Object assign3641;
Object method4125;
Object symbol5420;
Object methodclosure4125;
Object method4126;
Object symbol5415;
Object methodclosure4126;
Object method4127;
Object methodclosure4127;
Object localvariable4189;
Object array3336;
Object assign3642;
Object method4128;
Object symbol5417;
Object methodclosure4128;
Object send29856;
Object symbol5584;
Object localvariable4190;
Object array3337;
Object send29857;
Object symbol5328;
Object send29858;
Object block1910;
Object send29859;
Object block1911;
Object send29860;
Object method4129;
Object methodclosure4129;
Object super357;
Object send29861;
Object send29862;
Object send29863;
Object send29864;
Object send29865;
Object send29866;
Object method4130;
Object methodclosure4130;
Object method4131;
Object symbol5419;
Object methodclosure4131;
Object classreference814;
Object classreference815;
Object symbol5369;
Object symbol5423;
Object send29867;
Object send29868;
Object method4132;
Object methodclosure4132;
Object localvariable4191;
Object array3338;
Object assign3643;
Object method4133;
Object symbol5422;
Object methodclosure4133;
Object method4134;
Object methodclosure4134;
Object symbol5324;
Object send29869;
Object symbol5385;
Object send29870;
Object method4135;
Object symbol5412;
Object methodclosure4135;
Object classreference816;
Object localvariable4192;
Object array3339;
Object super358;
Object localvariable4193;
Object array3340;
Object string3445;
Object constant5788;
Object send29871;
Object send29872;
Object send29873;
Object string3446;
Object constant5789;
Object send29874;
Object block1912;
Object send29875;
Object method4136;
Object methodclosure4136;
Object localvariable4194;
Object array3341;
Object send29876;
Object symbol5585;
Object send29877;
Object send29878;
Object method4137;
Object symbol5395;
Object methodclosure4137;
Object method4138;
Object symbol5540;
Object methodclosure4138;
Object localvariable4195;
Object array3342;
Object assign3644;
Object method4139;
Object symbol5539;
Object methodclosure4139;
Object classreference817;
Object send29879;
Object send29880;
Object send29881;
Object method4140;
Object symbol5392;
Object methodclosure4140;
Object super359;
Object method4141;
Object methodclosure4141;
Object localvariable4196;
Object array3343;
Object send29882;
Object send29883;
Object send29884;
Object method4142;
Object methodclosure4142;
Object localvariable4197;
Object array3344;
Object assign3645;
Object method4143;
Object methodclosure4143;
Object localvariable4198;
Object array3345;
Object send29885;
Object symbol5586;
Object send29886;
Object send29887;
Object method4144;
Object symbol5394;
Object methodclosure4144;
Object send29888;
Object send29889;
Object method4145;
Object methodclosure4145;
Object method4146;
Object methodclosure4146;
Object classreference818;
Object localvariable4199;
Object array3346;
Object assign3646;
Object method4147;
Object symbol5426;
Object methodclosure4147;
Object method4148;
Object symbol5427;
Object methodclosure4148;
Object method4149;
Object methodclosure4149;
Object classreference819;
Object method4150;
Object symbol5429;
Object methodclosure4150;
Object localvariable4200;
Object array3347;
Object assign3647;
Object method4151;
Object methodclosure4151;
Object method4152;
Object methodclosure4152;
Object localvariable4201;
Object array3348;
Object assign3648;
Object method4153;
Object symbol5428;
Object methodclosure4153;
Object classreference820;
Object method4154;
Object symbol5400;
Object methodclosure4154;
Object method4155;
Object symbol5397;
Object methodclosure4155;
Object localvariable4202;
Object array3349;
Object assign3649;
Object method4156;
Object symbol5398;
Object methodclosure4156;
Object localvariable4203;
Object array3350;
Object assign3650;
Object method4157;
Object symbol5399;
Object methodclosure4157;
Object classreference821;
Object localvariable4204;
Object array3351;
Object assign3651;
Object method4158;
Object symbol5379;
Object methodclosure4158;
Object localvariable4205;
Object array3352;
Object symbol5380;
Object send29890;
Object send29891;
Object method4159;
Object methodclosure4159;
Object symbol5383;
Object send29892;
Object string3447;
Object constant5790;
Object send29893;
Object send29894;
Object send29895;
Object symbol5587;
Object send29896;
Object symbol5382;
Object send29897;
Object method4160;
Object methodclosure4160;
Object method4161;
Object methodclosure4161;
Object localvariable4206;
Object array3353;
Object assign3652;
Object method4162;
Object symbol5384;
Object methodclosure4162;
Object localvariable4207;
Object array3354;
Object send29898;
Object send29899;
Object method4163;
Object methodclosure4163;
Object classreference822;
Object send29900;
Object symbol5588;
Object send29901;
Object send29902;
Object method4164;
Object symbol5381;
Object methodclosure4164;
Object method4165;
Object methodclosure4165;
Object classreference823;
Object localvariable4208;
Object array3355;
Object assign3653;
Object method4166;
Object symbol5530;
Object methodclosure4166;
Object method4167;
Object symbol5531;
Object methodclosure4167;
Object localvariable4209;
Object array3356;
Object symbol5340;
Object send29903;
Object assign3654;
Object smallint2023;
Object constant5791;
Object send29904;
Object symbol5329;
Object smallint2024;
Object constant5792;
Object send29905;
Object block1913;
Object send29906;
Object smallint2025;
Object constant5793;
Object send29907;
Object smallint2026;
Object constant5794;
Object send29908;
Object block1914;
Object send29909;
Object block1915;
Object send29910;
Object smallint2027;
Object constant5795;
Object send29911;
Object smallint2028;
Object constant5796;
Object send29912;
Object block1916;
Object send29913;
Object block1917;
Object send29914;
Object method4168;
Object symbol5339;
Object methodclosure4168;
Object send29915;
Object method4169;
Object methodclosure4169;
Object classreference824;
Object send29916;
Object send29917;
Object send29918;
Object method4170;
Object symbol5532;
Object methodclosure4170;
Object classreference825;
Object method4171;
Object symbol5325;
Object methodclosure4171;
Object localvariable4210;
Object array3357;
Object assign3655;
Object method4172;
Object symbol5411;
Object methodclosure4172;
Object classreference826;
Object method4173;
Object methodclosure4173;
Object localvariable4211;
Object array3358;
Object send29919;
Object send29920;
Object send29921;
Object smallint2029;
Object constant5797;
Object send29922;
Object method4174;
Object methodclosure4174;
Object send29923;
Object send29924;
Object method4175;
Object symbol5333;
Object methodclosure4175;
Object localvariable4212;
Object array3359;
Object variable214;
Object array3360;
Object send29925;
Object send29926;
Object send29927;
Object block1918;
Object send29928;
Object send29929;
Object assign3656;
Object smallint2030;
Object constant5798;
Object smallint2031;
Object constant5799;
Object send29930;
Object send29931;
Object send29932;
Object block1919;
Object send29933;
Object method4176;
Object symbol5334;
Object methodclosure4176;
Object classreference827;
Object symbol5589;
Object send29934;
Object send29935;
Object super360;
Object send29936;
Object send29937;
Object symbol5408;
Object send29938;
Object send29939;
Object method4177;
Object methodclosure4177;
Object method4178;
Object methodclosure4178;
Object localvariable4213;
Object array3361;
Object assign3657;
Object method4179;
Object symbol5407;
Object methodclosure4179;
Object localvariable4214;
Object array3362;
Object assign3658;
Object method4180;
Object methodclosure4180;
Object super361;
Object method4181;
Object methodclosure4181;
Object localvariable4215;
Object array3363;
Object send29940;
Object assign3659;
Object method4182;
Object symbol5360;
Object methodclosure4182;
Object classreference828;
Object send29941;
Object send29942;
Object method4183;
Object methodclosure4183;
Object localvariable4216;
Object array3364;
Object send29943;
Object method4184;
Object methodclosure4184;
Object localvariable4217;
Object array3365;
Object assign3660;
Object method4185;
Object symbol5386;
Object methodclosure4185;
Object send29944;
Object send29945;
Object method4186;
Object methodclosure4186;
Object send29946;
Object send29947;
Object send29948;
Object method4187;
Object methodclosure4187;
Object classreference829;
Object send29949;
Object send29950;
Object method4188;
Object symbol5387;
Object methodclosure4188;
Object method4189;
Object methodclosure4189;
Object classreference830;
Object send29951;
Object send29952;
Object method4190;
Object methodclosure4190;
Object classreference831;
Object localvariable4218;
Object array3366;
Object assign3661;
Object method4191;
Object symbol5409;
Object methodclosure4191;
Object symbol5590;
Object string3448;
Object constant5800;
Object send29953;
Object string3449;
Object constant5801;
Object send29954;
Object method4192;
Object symbol5403;
Object methodclosure4192;
Object super362;
Object send29955;
Object assign3662;
Object method4193;
Object methodclosure4193;
Object method4194;
Object symbol5410;
Object methodclosure4194;
Object classreference832;
Object classreference833;
Object send29956;
Object symbol5388;
Object symbol5389;
Object send29957;
Object send29958;
Object method4195;
Object symbol5390;
Object methodclosure4195;
Object localvariable4219;
Object array3367;
Object assign3663;
Object method4196;
Object methodclosure4196;
Object method4197;
Object methodclosure4197;
Object classreference834;
Object method4198;
Object methodclosure4198;
Object localvariable4220;
Object array3368;
Object assign3664;
Object method4199;
Object methodclosure4199;
Object localvariable4221;
Object array3369;
Object assign3665;
Object method4200;
Object methodclosure4200;
Object send29959;
Object localvariable4222;
Object array3370;
Object send29960;
Object send29961;
Object block1920;
Object send29962;
Object block1921;
Object send29963;
Object method4201;
Object methodclosure4201;
Object super363;
Object send29964;
Object assign3666;
Object method4202;
Object methodclosure4202;
Object method4203;
Object methodclosure4203;
Object classreference835;
Object classreference836;
Object classreference837;
Object localvariable4223;
Object array3371;
Object string3450;
Object constant5802;
Object send29965;
Object method4204;
Object methodclosure4204;
Object classreference838;
Object method4205;
Object methodclosure4205;
Object localvariable4224;
Object array3372;
Object assign3667;
Object method4206;
Object methodclosure4206;
Object localvariable4225;
Object array3373;
Object send29966;
Object send29967;
Object send29968;
Object send29969;
Object super364;
Object method4207;
Object methodclosure4207;
Object classreference839;
Object classreference840;
Object localvariable4226;
Object array3374;
Object localvariable4227;
Object array3375;
Object assign3668;
Object send29970;
Object assign3669;
Object send29971;
Object smallint2032;
Object constant5803;
Object send29972;
Object send29973;
Object smallint2033;
Object constant5804;
Object send29974;
Object send29975;
Object symbol5591;
Object send29976;
Object send29977;
Object string3451;
Object constant5805;
Object send29978;
Object block1922;
Object send29979;
Object method4208;
Object symbol5404;
Object methodclosure4208;
Object method4209;
Object methodclosure4209;
Object localvariable4228;
Object array3376;
Object send29980;
Object send29981;
Object method4210;
Object methodclosure4210;
Object localvariable4229;
Object array3377;
Object send29982;
Object send29983;
Object send29984;
Object method4211;
Object methodclosure4211;
Object send29985;
Object send29986;
Object method4212;
Object methodclosure4212;
Object send29987;
Object send29988;
Object method4213;
Object methodclosure4213;
Object send29989;
Object method4214;
Object methodclosure4214;
Object classreference841;
Object localvariable4230;
Object array3378;
Object super365;
Object string3452;
Object constant5806;
Object send29990;
Object symbol5418;
Object send29991;
Object send29992;
Object string3453;
Object constant5807;
Object send29993;
Object method4215;
Object methodclosure4215;
Object localvariable4231;
Object array3379;
Object assign3670;
Object method4216;
Object methodclosure4216;
Object localvariable4232;
Object array3380;
Object assign3671;
Object method4217;
Object symbol5413;
Object methodclosure4217;
Object localvariable4233;
Object array3381;
Object assign3672;
Object method4218;
Object methodclosure4218;
Object send29994;
Object send29995;
Object method4219;
Object methodclosure4219;
Object localvariable4234;
Object array3382;
Object assign3673;
Object method4220;
Object symbol5421;
Object methodclosure4220;
Object method4221;
Object methodclosure4221;
Object localvariable4235;
Object array3383;
Object smallint2034;
Object constant5808;
Object symbol5416;
Object constant5809;
Object send29996;
Object smallint2035;
Object constant5810;
Object constant5811;
Object send29997;
Object smallint2036;
Object constant5812;
Object constant5813;
Object send29998;
Object smallint2037;
Object constant5814;
Object constant5815;
Object send29999;
Object send30000;
Object block1923;
Object smallint2038;
Object constant5816;
Object send30001;
Object send30002;
Object method4222;
Object symbol5414;
Object methodclosure4222;
Object method4223;
Object methodclosure4223;
Object method4224;
Object methodclosure4224;
Object method4225;
Object methodclosure4225;
Object classreference842;
Object localvariable4236;
Object array3384;
Object assign3674;
Object method4226;
Object symbol5356;
Object methodclosure4226;
Object method4227;
Object methodclosure4227;
Object localvariable4237;
Object array3385;
Object send30003;
Object method4228;
Object methodclosure4228;
Object method4229;
Object methodclosure4229;
Object string3454;
Object constant5817;
Object method4230;
Object symbol5361;
Object methodclosure4230;
Object send30004;
Object send30005;
Object symbol5592;
Object send30006;
Object assign3675;
Object block1924;
Object send30007;
Object method4231;
Object methodclosure4231;
Object localvariable4238;
Object array3386;
Object localvariable4239;
Object array3387;
Object variable215;
Object array3388;
Object send30008;
Object symbol5593;
Object constant5818;
Object send30009;
Object super366;
Object send30010;
Object block1925;
Object send30011;
Object string3455;
Object constant5819;
Object send30012;
Object send30013;
Object symbol5594;
Object smallint2039;
Object constant5820;
Object send30014;
Object send30015;
Object send30016;
Object send30017;
Object send30018;
Object string3456;
Object constant5821;
Object send30019;
Object send30020;
Object assign3676;
Object send30021;
Object symbol5595;
Object send30022;
Object block1926;
Object send30023;
Object method4232;
Object methodclosure4232;
Object send30024;
Object send30025;
Object smallint2040;
Object constant5822;
Object send30026;
Object send30027;
Object send30028;
Object send30029;
Object send30030;
Object method4233;
Object symbol5362;
Object methodclosure4233;
Object method4234;
Object symbol5359;
Object methodclosure4234;
Object classreference843;
Object send30031;
Object send30032;
Object method4235;
Object methodclosure4235;
Object classreference844;
Object symbol5596;
Object string3457;
Object constant5823;
Object symbol5597;
Object send30033;
Object localvariable4240;
Object array3389;
Object send30034;
Object send30035;
Object block1927;
Object send30036;
Object method4236;
Object symbol5471;
Object methodclosure4236;
Object string3458;
Object constant5824;
Object string3459;
Object constant5825;
Object send30037;
Object send30038;
Object symbol5598;
Object send30039;
Object send30040;
Object send30041;
Object send30042;
Object send30043;
Object string3460;
Object constant5826;
Object send30044;
Object send30045;
Object send30046;
Object localvariable4241;
Object array3390;
Object send30047;
Object localvariable4242;
Object array3391;
Object smallint2041;
Object constant5827;
Object send30048;
Object send30049;
Object send30050;
Object block1928;
Object send30051;
Object send30052;
Object send30053;
Object block1929;
Object send30054;
Object method4237;
Object symbol5488;
Object methodclosure4237;
Object send30055;
Object symbol5599;
Object send30056;
Object send30057;
Object send30058;
Object method4238;
Object symbol5453;
Object methodclosure4238;
Object string3461;
Object constant5828;
Object symbol5600;
Object send30059;
Object symbol5601;
Object send30060;
Object symbol5602;
Object send30061;
Object send30062;
Object send30063;
Object send30064;
Object localvariable4243;
Object array3392;
Object symbol5603;
Object send30065;
Object send30066;
Object localvariable4244;
Object localvariable4245;
Object array3393;
Object send30067;
Object block1930;
Object send30068;
Object block1931;
Object send30069;
Object method4239;
Object symbol5481;
Object methodclosure4239;
Object symbol5604;
Object string3462;
Object constant5829;
Object symbol5605;
Object send30070;
Object symbol5606;
Object send30071;
Object send30072;
Object send30073;
Object send30074;
Object send30075;
Object send30076;
Object method4240;
Object symbol5465;
Object methodclosure4240;
Object constant5830;
Object string3463;
Object constant5831;
Object send30077;
Object block1932;
Object send30078;
Object method4241;
Object symbol5493;
Object methodclosure4241;
Object localvariable4246;
Object array3394;
Object variable216;
Object array3395;
Object symbol5607;
Object send30079;
Object send30080;
Object block1933;
Object send30081;
Object send30082;
Object block1934;
Object send30083;
Object method4242;
Object symbol5435;
Object methodclosure4242;
Object localvariable4247;
Object localvariable4248;
Object array3396;
Object symbol5476;
Object send30084;
Object send30085;
Object symbol5492;
Object send30086;
Object constant5832;
Object string3464;
Object constant5833;
Object symbol5608;
Object send30087;
Object symbol5609;
Object send30088;
Object send30089;
Object send30090;
Object send30091;
Object symbol5610;
Object send30092;
Object send30093;
Object localvariable4249;
Object array3397;
Object send30094;
Object assign3677;
Object smallint2042;
Object constant5834;
Object send30095;
Object assign3678;
Object symbol5611;
Object send30096;
Object localvariable4250;
Object array3398;
Object localvariable4251;
Object array3399;
Object send30097;
Object send30098;
Object block1935;
Object send30099;
Object send30100;
Object assign3679;
Object block1936;
Object send30101;
Object block1937;
Object send30102;
Object send30103;
Object symbol5452;
Object send30104;
Object symbol5472;
Object send30105;
Object symbol5480;
Object send30106;
Object constant5835;
Object send30107;
Object method4243;
Object symbol5463;
Object methodclosure4243;
Object string3465;
Object constant5836;
Object send30108;
Object send30109;
Object localvariable4252;
Object array3400;
Object localvariable4253;
Object array3401;
Object string3466;
Object constant5837;
Object localvariable4254;
Object localvariable4255;
Object array3402;
Object send30110;
Object block1938;
Object send30111;
Object send30112;
Object string3467;
Object constant5838;
Object send30113;
Object block1939;
Object send30114;
Object send30115;
Object block1940;
Object send30116;
Object method4244;
Object symbol5503;
Object methodclosure4244;
Object string3468;
Object constant5839;
Object symbol5612;
Object send30117;
Object symbol5613;
Object send30118;
Object send30119;
Object localvariable4256;
Object array3403;
Object localvariable4257;
Object array3404;
Object send30120;
Object send30121;
Object send30122;
Object smallint2043;
Object constant5840;
Object send30123;
Object send30124;
Object block1941;
Object send30125;
Object send30126;
Object block1942;
Object send30127;
Object method4245;
Object symbol5447;
Object methodclosure4245;
Object string3469;
Object constant5841;
Object symbol5614;
Object send30128;
Object send30129;
Object send30130;
Object send30131;
Object localvariable4258;
Object array3405;
Object localvariable4259;
Object array3406;
Object symbol5615;
Object localvariable4260;
Object array3407;
Object send30132;
Object send30133;
Object block1943;
Object send30134;
Object send30135;
Object send30136;
Object constant5842;
Object send30137;
Object send30138;
Object send30139;
Object constant5843;
Object send30140;
Object send30141;
Object block1944;
Object send30142;
Object send30143;
Object block1945;
Object send30144;
Object method4246;
Object symbol5475;
Object methodclosure4246;
Object localvariable4261;
Object array3408;
Object variable217;
Object array3409;
Object string3470;
Object constant5844;
Object send30145;
Object send30146;
Object send30147;
Object block1946;
Object send30148;
Object string3471;
Object constant5845;
Object send30149;
Object send30150;
Object send30151;
Object block1947;
Object send30152;
Object send30153;
Object send30154;
Object block1948;
Object send30155;
Object method4247;
Object symbol5440;
Object methodclosure4247;
Object super367;
Object send30156;
Object assign3680;
Object send30157;
Object assign3681;
Object smallint2044;
Object constant5846;
Object assign3682;
Object method4248;
Object methodclosure4248;
Object symbol5616;
Object send30158;
Object method4249;
Object symbol5457;
Object methodclosure4249;
Object localvariable4262;
Object localvariable4263;
Object array3410;
Object string3472;
Object constant5847;
Object send30159;
Object send30160;
Object assign3683;
Object string3473;
Object constant5848;
Object send30161;
Object send30162;
Object send30163;
Object send30164;
Object send30165;
Object localvariable4264;
Object array3411;
Object symbol5617;
Object send30166;
Object assign3684;
Object string3474;
Object constant5849;
Object localvariable4265;
Object localvariable4266;
Object array3412;
Object send30167;
Object block1949;
Object send30168;
Object assign3685;
Object localvariable4267;
Object localvariable4268;
Object array3413;
Object string3475;
Object constant5850;
Object send30169;
Object string3476;
Object constant5851;
Object localvariable4269;
Object localvariable4270;
Object array3414;
Object send30170;
Object block1950;
Object send30171;
Object send30172;
Object block1951;
Object send30173;
Object block1952;
Object send30174;
Object method4250;
Object symbol5485;
Object methodclosure4250;
Object send30175;
Object string3477;
Object constant5852;
Object send30176;
Object send30177;
Object send30178;
Object send30179;
Object method4251;
Object symbol5469;
Object methodclosure4251;
Object string3478;
Object constant5853;
Object send30180;
Object localvariable4271;
Object array3415;
Object send30181;
Object block1953;
Object send30182;
Object method4252;
Object symbol5497;
Object methodclosure4252;
Object method4253;
Object symbol5450;
Object methodclosure4253;
Object string3479;
Object constant5854;
Object string3480;
Object constant5855;
Object send30183;
Object send30184;
Object send30185;
Object send30186;
Object localvariable4272;
Object array3416;
Object send30187;
Object send30188;
Object block1954;
Object send30189;
Object method4254;
Object symbol5439;
Object methodclosure4254;
Object localvariable4273;
Object array3417;
Object string3481;
Object constant5856;
Object send30190;
Object assign3686;
Object send30191;
Object send30192;
Object send30193;
Object send30194;
Object method4255;
Object symbol5490;
Object methodclosure4255;
Object string3482;
Object constant5857;
Object send30195;
Object symbol5618;
Object send30196;
Object send30197;
Object send30198;
Object localvariable4274;
Object array3418;
Object localvariable4275;
Object array3419;
Object constant5858;
Object send30199;
Object send30200;
Object localvariable4276;
Object array3420;
Object constant5859;
Object send30201;
Object send30202;
Object constant5860;
Object send30203;
Object string3483;
Object constant5861;
Object send30204;
Object string3484;
Object constant5862;
Object send30205;
Object send30206;
Object send30207;
Object block1955;
Object send30208;
Object send30209;
Object send30210;
Object constant5863;
Object send30211;
Object send30212;
Object block1956;
Object send30213;
Object send30214;
Object block1957;
Object send30215;
Object method4256;
Object symbol5479;
Object methodclosure4256;
Object symbol5434;
Object send30216;
Object symbol5619;
Object constant5864;
Object string3485;
Object constant5865;
Object send30217;
Object send30218;
Object send30219;
Object send30220;
Object send30221;
Object localvariable4277;
Object array3421;
Object smallint2045;
Object constant5866;
Object send30222;
Object localvariable4278;
Object array3422;
Object send30223;
Object send30224;
Object send30225;
Object smallint2046;
Object constant5867;
Object send30226;
Object send30227;
Object send30228;
Object send30229;
Object block1958;
Object send30230;
Object send30231;
Object send30232;
Object block1959;
Object send30233;
Object send30234;
Object symbol5433;
Object send30235;
Object send30236;
Object method4257;
Object symbol5432;
Object methodclosure4257;
Object localvariable4279;
Object array3423;
Object assign3687;
Object method4258;
Object symbol5460;
Object methodclosure4258;
Object string3486;
Object constant5868;
Object send30237;
Object send30238;
Object send30239;
Object send30240;
Object send30241;
Object send30242;
Object localvariable4280;
Object array3424;
Object send30243;
Object send30244;
Object localvariable4281;
Object localvariable4282;
Object array3425;
Object send30245;
Object block1960;
Object send30246;
Object block1961;
Object send30247;
Object method4259;
Object symbol5500;
Object methodclosure4259;
Object string3487;
Object constant5869;
Object send30248;
Object localvariable4283;
Object array3426;
Object send30249;
Object send30250;
Object block1962;
Object send30251;
Object method4260;
Object symbol5444;
Object methodclosure4260;
Object send30252;
Object symbol5620;
Object send30253;
Object send30254;
Object send30255;
Object send30256;
Object symbol5621;
Object send30257;
Object send30258;
Object method4261;
Object methodclosure4261;
Object string3488;
Object constant5870;
Object send30259;
Object symbol5622;
Object send30260;
Object send30261;
Object localvariable4284;
Object array3427;
Object smallint2047;
Object constant5871;
Object send30262;
Object send30263;
Object send30264;
Object block1963;
Object send30265;
Object method4262;
Object symbol5489;
Object methodclosure4262;
Object string3489;
Object constant5872;
Object send30266;
Object send30267;
Object send30268;
Object send30269;
Object string3490;
Object constant5873;
Object send30270;
Object send30271;
Object send30272;
Object method4263;
Object symbol5454;
Object methodclosure4263;
Object string3491;
Object constant5874;
Object symbol5623;
Object send30273;
Object method4264;
Object symbol5482;
Object methodclosure4264;
Object localvariable4285;
Object array3428;
Object string3492;
Object constant5875;
Object send30274;
Object send30275;
Object send30276;
Object send30277;
Object localvariable4286;
Object array3429;
Object send30278;
Object assign3688;
Object smallint2048;
Object constant5876;
Object send30279;
Object localvariable4287;
Object array3430;
Object localvariable4288;
Object array3431;
Object send30280;
Object send30281;
Object block1964;
Object send30282;
Object send30283;
Object assign3689;
Object block1965;
Object send30284;
Object block1966;
Object send30285;
Object method4265;
Object symbol5466;
Object methodclosure4265;
Object send30286;
Object send30287;
Object send30288;
Object method4266;
Object symbol5494;
Object methodclosure4266;
Object string3493;
Object constant5877;
Object symbol5624;
Object send30289;
Object method4267;
Object symbol5436;
Object methodclosure4267;
Object string3494;
Object constant5878;
Object send30290;
Object string3495;
Object constant5879;
Object send30291;
Object send30292;
Object symbol5625;
Object send30293;
Object send30294;
Object localvariable4289;
Object array3432;
Object send30295;
Object send30296;
Object send30297;
Object block1967;
Object send30298;
Object method4268;
Object symbol5464;
Object methodclosure4268;
Object string3496;
Object constant5880;
Object symbol5626;
Object send30299;
Object string3497;
Object constant5881;
Object send30300;
Object send30301;
Object send30302;
Object send30303;
Object string3498;
Object constant5882;
Object send30304;
Object localvariable4290;
Object array3433;
Object send30305;
Object send30306;
Object block1968;
Object send30307;
Object send30308;
Object localvariable4291;
Object localvariable4292;
Object array3434;
Object send30309;
Object block1969;
Object send30310;
Object send30311;
Object block1970;
Object send30312;
Object block1971;
Object send30313;
Object method4269;
Object symbol5448;
Object methodclosure4269;
Object constant5883;
Object string3499;
Object constant5884;
Object send30314;
Object block1972;
Object send30315;
Object method4270;
Object methodclosure4270;
Object localvariable4293;
Object array3435;
Object string3500;
Object constant5885;
Object send30316;
Object symbol5627;
Object send30317;
Object send30318;
Object send30319;
Object localvariable4294;
Object array3436;
Object send30320;
Object assign3690;
Object localvariable4295;
Object array3437;
Object send30321;
Object send30322;
Object send30323;
Object send30324;
Object smallint2049;
Object constant5886;
Object send30325;
Object send30326;
Object send30327;
Object block1973;
Object send30328;
Object send30329;
Object send30330;
Object send30331;
Object block1974;
Object send30332;
Object method4271;
Object symbol5458;
Object methodclosure4271;
Object localvariable4296;
Object array3438;
Object localvariable4297;
Object array3439;
Object send30333;
Object string3501;
Object constant5887;
Object send30334;
Object send30335;
Object send30336;
Object send30337;
Object assign3691;
Object send30338;
Object super368;
Object block1975;
Object send30339;
Object symbol5628;
Object send30340;
Object block1976;
Object send30341;
Object method4272;
Object methodclosure4272;
Object symbol5629;
Object send30342;
Object send30343;
Object send30344;
Object method4273;
Object symbol5486;
Object methodclosure4273;
Object string3502;
Object constant5888;
Object symbol5630;
Object send30345;
Object symbol5631;
Object send30346;
Object send30347;
Object send30348;
Object send30349;
Object send30350;
Object method4274;
Object symbol5498;
Object methodclosure4274;
Object string3503;
Object constant5889;
Object symbol5632;
Object send30351;
Object send30352;
Object send30353;
Object send30354;
Object send30355;
Object send30356;
Object send30357;
Object send30358;
Object method4275;
Object symbol5451;
Object methodclosure4275;
Object send30359;
Object string3504;
Object constant5890;
Object send30360;
Object send30361;
Object send30362;
Object method4276;
Object symbol5491;
Object methodclosure4276;
Object send30363;
Object send30364;
Object send30365;
Object send30366;
Object send30367;
Object method4277;
Object methodclosure4277;
Object string3505;
Object constant5891;
Object string3506;
Object constant5892;
Object send30368;
Object send30369;
Object symbol5633;
Object send30370;
Object send30371;
Object send30372;
Object send30373;
Object send30374;
Object send30375;
Object send30376;
Object send30377;
Object send30378;
Object send30379;
Object string3507;
Object constant5893;
Object send30380;
Object send30381;
Object send30382;
Object localvariable4298;
Object array3440;
Object localvariable4299;
Object array3441;
Object send30383;
Object send30384;
Object block1977;
Object send30385;
Object send30386;
Object smallint2050;
Object constant5894;
Object send30387;
Object send30388;
Object block1978;
Object send30389;
Object send30390;
Object smallint2051;
Object constant5895;
Object send30391;
Object send30392;
Object block1979;
Object send30393;
Object send30394;
Object block1980;
Object send30395;
Object method4278;
Object symbol5461;
Object methodclosure4278;
Object string3508;
Object constant5896;
Object send30396;
Object send30397;
Object symbol5634;
Object send30398;
Object send30399;
Object method4279;
Object symbol5501;
Object methodclosure4279;
Object localvariable4300;
Object array3442;
Object string3509;
Object constant5897;
Object send30400;
Object assign3692;
Object string3510;
Object constant5898;
Object send30401;
Object send30402;
Object symbol5635;
Object send30403;
Object symbol5636;
Object send30404;
Object symbol5637;
Object send30405;
Object symbol5638;
Object send30406;
Object symbol5639;
Object send30407;
Object send30408;
Object send30409;
Object send30410;
Object send30411;
Object send30412;
Object send30413;
Object send30414;
Object send30415;
Object string3511;
Object constant5899;
Object send30416;
Object send30417;
Object send30418;
Object localvariable4301;
Object array3443;
Object send30419;
Object send30420;
Object block1981;
Object send30421;
Object method4280;
Object symbol5445;
Object methodclosure4280;
Object string3512;
Object constant5900;
Object send30422;
Object localvariable4302;
Object array3444;
Object send30423;
Object block1982;
Object send30424;
Object method4281;
Object symbol5473;
Object methodclosure4281;
Object string3513;
Object constant5901;
Object send30425;
Object send30426;
Object symbol5640;
Object send30427;
Object symbol5641;
Object send30428;
Object send30429;
Object send30430;
Object send30431;
Object localvariable4303;
Object array3445;
Object smallint2052;
Object constant5902;
Object send30432;
Object localvariable4304;
Object array3446;
Object send30433;
Object send30434;
Object block1983;
Object send30435;
Object send30436;
Object block1984;
Object send30437;
Object method4282;
Object symbol5455;
Object methodclosure4282;
Object string3514;
Object constant5903;
Object send30438;
Object send30439;
Object send30440;
Object send30441;
Object send30442;
Object send30443;
Object send30444;
Object send30445;
Object send30446;
Object method4283;
Object symbol5483;
Object methodclosure4283;
Object string3515;
Object constant5904;
Object send30447;
Object send30448;
Object method4284;
Object symbol5467;
Object methodclosure4284;
Object send30449;
Object send30450;
Object method4285;
Object symbol5495;
Object methodclosure4285;
Object string3516;
Object constant5905;
Object send30451;
Object method4286;
Object symbol5437;
Object methodclosure4286;
Object string3517;
Object constant5906;
Object send30452;
Object method4287;
Object symbol5449;
Object methodclosure4287;
Object send30453;
Object string3518;
Object constant5907;
Object send30454;
Object send30455;
Object send30456;
Object method4288;
Object symbol5477;
Object methodclosure4288;
Object send30457;
Object send30458;
Object method4289;
Object symbol5430;
Object methodclosure4289;
Object string3519;
Object constant5908;
Object send30459;
Object localvariable4305;
Object array3447;
Object send30460;
Object send30461;
Object block1985;
Object send30462;
Object method4290;
Object symbol5442;
Object methodclosure4290;
Object string3520;
Object constant5909;
Object string3521;
Object constant5910;
Object send30463;
Object send30464;
Object symbol5642;
Object send30465;
Object symbol5643;
Object send30466;
Object send30467;
Object send30468;
Object string3522;
Object constant5911;
Object send30469;
Object send30470;
Object send30471;
Object send30472;
Object method4291;
Object symbol5470;
Object methodclosure4291;
Object string3523;
Object constant5912;
Object string3524;
Object constant5913;
Object send30473;
Object send30474;
Object send30475;
Object send30476;
Object localvariable4306;
Object array3448;
Object send30477;
Object send30478;
Object block1986;
Object send30479;
Object method4292;
Object symbol5459;
Object methodclosure4292;
Object string3525;
Object constant5914;
Object symbol5644;
Object send30480;
Object send30481;
Object send30482;
Object symbol5645;
Object send30483;
Object send30484;
Object send30485;
Object send30486;
Object send30487;
Object send30488;
Object send30489;
Object send30490;
Object localvariable4307;
Object array3449;
Object localvariable4308;
Object array3450;
Object send30491;
Object send30492;
Object smallint2053;
Object constant5915;
Object send30493;
Object send30494;
Object block1987;
Object send30495;
Object send30496;
Object smallint2054;
Object constant5916;
Object send30497;
Object send30498;
Object smallint2055;
Object constant5917;
Object send30499;
Object send30500;
Object send30501;
Object block1988;
Object send30502;
Object send30503;
Object block1989;
Object send30504;
Object send30505;
Object send30506;
Object method4293;
Object symbol5499;
Object methodclosure4293;
Object send30507;
Object symbol5646;
Object send30508;
Object symbol5647;
Object send30509;
Object symbol5648;
Object send30510;
Object symbol5649;
Object send30511;
Object send30512;
Object send30513;
Object send30514;
Object send30515;
Object symbol5650;
Object send30516;
Object send30517;
Object method4294;
Object methodclosure4294;
Object localvariable4309;
Object array3451;
Object string3526;
Object constant5918;
Object send30518;
Object send30519;
Object send30520;
Object symbol5651;
Object send30521;
Object send30522;
Object send30523;
Object symbol5652;
Object send30524;
Object send30525;
Object send30526;
Object send30527;
Object localvariable4310;
Object array3452;
Object smallint2056;
Object constant5919;
Object send30528;
Object symbol5653;
Object send30529;
Object send30530;
Object localvariable4311;
Object array3453;
Object send30531;
Object send30532;
Object send30533;
Object smallint2057;
Object constant5920;
Object send30534;
Object send30535;
Object block1990;
Object send30536;
Object send30537;
Object block1991;
Object send30538;
Object block1992;
Object send30539;
Object send30540;
Object send30541;
Object send30542;
Object method4295;
Object methodclosure4295;
Object constant5921;
Object string3527;
Object constant5922;
Object send30543;
Object block1993;
Object send30544;
Object method4296;
Object methodclosure4296;
Object constant5923;
Object string3528;
Object constant5924;
Object send30545;
Object block1994;
Object send30546;
Object method4297;
Object methodclosure4297;
Object string3529;
Object constant5925;
Object send30547;
Object send30548;
Object send30549;
Object localvariable4312;
Object array3454;
Object localvariable4313;
Object array3455;
Object send30550;
Object send30551;
Object send30552;
Object smallint2058;
Object constant5926;
Object send30553;
Object send30554;
Object send30555;
Object block1995;
Object send30556;
Object send30557;
Object block1996;
Object send30558;
Object method4298;
Object symbol5462;
Object methodclosure4298;
Object string3530;
Object constant5927;
Object symbol5654;
Object send30559;
Object symbol5655;
Object send30560;
Object send30561;
Object symbol5656;
Object send30562;
Object send30563;
Object send30564;
Object method4299;
Object symbol5502;
Object methodclosure4299;
Object string3531;
Object constant5928;
Object send30565;
Object localvariable4314;
Object array3456;
Object send30566;
Object send30567;
Object block1997;
Object send30568;
Object method4300;
Object symbol5446;
Object methodclosure4300;
Object send30569;
Object send30570;
Object method4301;
Object symbol5474;
Object methodclosure4301;
Object send30571;
Object symbol5431;
Object send30572;
Object send30573;
Object send30574;
Object method4302;
Object symbol5456;
Object methodclosure4302;
Object string3532;
Object constant5929;
Object send30575;
Object localvariable4315;
Object array3457;
Object send30576;
Object send30577;
Object block1998;
Object send30578;
Object method4303;
Object symbol5484;
Object methodclosure4303;
Object string3533;
Object constant5930;
Object string3534;
Object constant5931;
Object send30579;
Object send30580;
Object symbol5657;
Object send30581;
Object send30582;
Object localvariable4316;
Object array3458;
Object send30583;
Object send30584;
Object send30585;
Object block1999;
Object send30586;
Object method4304;
Object symbol5468;
Object methodclosure4304;
Object string3535;
Object constant5932;
Object send30587;
Object send30588;
Object localvariable4317;
Object array3459;
Object string3536;
Object constant5933;
Object localvariable4318;
Object localvariable4319;
Object array3460;
Object send30589;
Object string3537;
Object constant5934;
Object send30590;
Object block2000;
Object send30591;
Object block2001;
Object send30592;
Object method4305;
Object symbol5496;
Object methodclosure4305;
Object send30593;
Object send30594;
Object send30595;
Object send30596;
Object send30597;
Object send30598;
Object send30599;
Object symbol5658;
Object send30600;
Object send30601;
Object method4306;
Object symbol5438;
Object methodclosure4306;
Object string3538;
Object constant5935;
Object string3539;
Object constant5936;
Object send30602;
Object send30603;
Object send30604;
Object send30605;
Object send30606;
Object localvariable4320;
Object array3461;
Object localvariable4321;
Object array3462;
Object send30607;
Object block2002;
Object send30608;
Object block2003;
Object send30609;
Object method4307;
Object symbol5478;
Object methodclosure4307;
Object string3540;
Object constant5937;
Object send30610;
Object string3541;
Object constant5938;
Object send30611;
Object send30612;
Object method4308;
Object methodclosure4308;
Object classreference845;
Object localvariable4322;
Object localvariable4323;
Object localvariable4324;
Object array3463;
Object symbol5659;
Object send30613;
Object assign3693;
Object string3542;
Object constant5939;
Object assign3694;
Object send30614;
Object assign3695;
Object send30615;
Object send30616;
Object symbol5660;
Object send30617;
Object symbol5661;
Object send30618;
Object send30619;
Object send30620;
Object send30621;
Object send30622;
Object send30623;
Object send30624;
Object string3543;
Object constant5940;
Object send30625;
Object send30626;
Object send30627;
Object send30628;
Object send30629;
Object send30630;
Object send30631;
Object method4309;
Object symbol5244;
Object methodclosure4309;
Object localvariable4325;
Object localvariable4326;
Object array3464;
Object send30632;
Object assign3696;
Object string3544;
Object constant5941;
Object send30633;
Object assign3697;
Object send30634;
Object send30635;
Object send30636;
Object string3545;
Object constant5942;
Object send30637;
Object send30638;
Object send30639;
Object smallint2059;
Object constant5943;
Object send30640;
Object string3546;
Object constant5944;
Object send30641;
Object assign3698;
Object send30642;
Object send30643;
Object send30644;
Object string3547;
Object constant5945;
Object send30645;
Object send30646;
Object send30647;
Object smallint2060;
Object constant5946;
Object send30648;
Object string3548;
Object constant5947;
Object send30649;
Object assign3699;
Object send30650;
Object send30651;
Object send30652;
Object string3549;
Object constant5948;
Object send30653;
Object send30654;
Object send30655;
Object smallint2061;
Object constant5949;
Object send30656;
Object string3550;
Object constant5950;
Object send30657;
Object assign3700;
Object send30658;
Object send30659;
Object send30660;
Object string3551;
Object constant5951;
Object send30661;
Object send30662;
Object send30663;
Object smallint2062;
Object constant5952;
Object send30664;
Object method4310;
Object symbol5280;
Object methodclosure4310;
Object localvariable4327;
Object localvariable4328;
Object array3465;
Object send30665;
Object assign3701;
Object string3552;
Object constant5953;
Object send30666;
Object assign3702;
Object send30667;
Object send30668;
Object string3553;
Object constant5954;
Object send30669;
Object send30670;
Object send30671;
Object smallint2063;
Object constant5955;
Object send30672;
Object string3554;
Object constant5956;
Object send30673;
Object assign3703;
Object send30674;
Object send30675;
Object send30676;
Object send30677;
Object send30678;
Object send30679;
Object smallint2064;
Object constant5957;
Object send30680;
Object method4311;
Object symbol5264;
Object methodclosure4311;
Object localvariable4329;
Object localvariable4330;
Object localvariable4331;
Object array3466;
Object send30681;
Object assign3704;
Object string3555;
Object constant5958;
Object send30682;
Object assign3705;
Object send30683;
Object assign3706;
Object send30684;
Object send30685;
Object send30686;
Object send30687;
Object send30688;
Object send30689;
Object send30690;
Object send30691;
Object send30692;
Object send30693;
Object string3556;
Object constant5959;
Object send30694;
Object send30695;
Object assign3707;
Object send30696;
Object send30697;
Object send30698;
Object send30699;
Object send30700;
Object send30701;
Object send30702;
Object send30703;
Object send30704;
Object send30705;
Object string3557;
Object constant5960;
Object send30706;
Object send30707;
Object assign3708;
Object send30708;
Object send30709;
Object send30710;
Object send30711;
Object send30712;
Object send30713;
Object send30714;
Object send30715;
Object send30716;
Object send30717;
Object string3558;
Object constant5961;
Object send30718;
Object send30719;
Object send30720;
Object send30721;
Object send30722;
Object method4312;
Object symbol5292;
Object methodclosure4312;
Object localvariable4332;
Object localvariable4333;
Object array3467;
Object send30723;
Object assign3709;
Object string3559;
Object constant5962;
Object send30724;
Object assign3710;
Object send30725;
Object send30726;
Object send30727;
Object send30728;
Object send30729;
Object send30730;
Object send30731;
Object smallint2065;
Object constant5963;
Object send30732;
Object string3560;
Object constant5964;
Object send30733;
Object assign3711;
Object send30734;
Object send30735;
Object send30736;
Object send30737;
Object send30738;
Object send30739;
Object send30740;
Object smallint2066;
Object constant5965;
Object send30741;
Object string3561;
Object constant5966;
Object send30742;
Object assign3712;
Object send30743;
Object send30744;
Object send30745;
Object send30746;
Object send30747;
Object send30748;
Object send30749;
Object smallint2067;
Object constant5967;
Object send30750;
Object method4313;
Object symbol5254;
Object methodclosure4313;
Object localvariable4334;
Object localvariable4335;
Object localvariable4336;
Object array3468;
Object send30751;
Object assign3713;
Object string3562;
Object constant5968;
Object send30752;
Object assign3714;
Object send30753;
Object assign3715;
Object send30754;
Object send30755;
Object send30756;
Object send30757;
Object send30758;
Object send30759;
Object string3563;
Object constant5969;
Object send30760;
Object send30761;
Object send30762;
Object send30763;
Object send30764;
Object send30765;
Object send30766;
Object send30767;
Object send30768;
Object string3564;
Object constant5970;
Object send30769;
Object send30770;
Object send30771;
Object smallint2068;
Object constant5971;
Object send30772;
Object string3565;
Object constant5972;
Object send30773;
Object assign3716;
Object send30774;
Object send30775;
Object send30776;
Object send30777;
Object send30778;
Object send30779;
Object smallint2069;
Object constant5973;
Object send30780;
Object string3566;
Object constant5974;
Object send30781;
Object assign3717;
Object send30782;
Object assign3718;
Object send30783;
Object send30784;
Object send30785;
Object send30786;
Object send30787;
Object send30788;
Object string3567;
Object constant5975;
Object send30789;
Object send30790;
Object send30791;
Object send30792;
Object send30793;
Object string3568;
Object constant5976;
Object send30794;
Object send30795;
Object send30796;
Object send30797;
Object send30798;
Object send30799;
Object send30800;
Object smallint2070;
Object constant5977;
Object send30801;
Object method4314;
Object symbol5246;
Object methodclosure4314;
Object localvariable4337;
Object localvariable4338;
Object localvariable4339;
Object array3469;
Object send30802;
Object assign3719;
Object string3569;
Object constant5978;
Object send30803;
Object assign3720;
Object send30804;
Object assign3721;
Object send30805;
Object send30806;
Object send30807;
Object send30808;
Object send30809;
Object send30810;
Object string3570;
Object constant5979;
Object send30811;
Object send30812;
Object send30813;
Object smallint2071;
Object constant5980;
Object send30814;
Object string3571;
Object constant5981;
Object send30815;
Object assign3722;
Object send30816;
Object send30817;
Object send30818;
Object send30819;
Object send30820;
Object send30821;
Object smallint2072;
Object constant5982;
Object send30822;
Object method4315;
Object symbol5274;
Object methodclosure4315;
Object localvariable4340;
Object localvariable4341;
Object localvariable4342;
Object array3470;
Object send30823;
Object assign3723;
Object string3572;
Object constant5983;
Object send30824;
Object assign3724;
Object send30825;
Object assign3725;
Object send30826;
Object send30827;
Object send30828;
Object send30829;
Object assign3726;
Object send30830;
Object send30831;
Object send30832;
Object send30833;
Object send30834;
Object send30835;
Object send30836;
Object send30837;
Object send30838;
Object send30839;
Object string3573;
Object constant5984;
Object send30840;
Object send30841;
Object assign3727;
Object send30842;
Object send30843;
Object send30844;
Object send30845;
Object send30846;
Object send30847;
Object send30848;
Object send30849;
Object send30850;
Object send30851;
Object string3574;
Object constant5985;
Object send30852;
Object send30853;
Object assign3728;
Object send30854;
Object send30855;
Object send30856;
Object send30857;
Object send30858;
Object send30859;
Object send30860;
Object send30861;
Object send30862;
Object send30863;
Object string3575;
Object constant5986;
Object send30864;
Object send30865;
Object send30866;
Object send30867;
Object send30868;
Object string3576;
Object constant5987;
Object send30869;
Object assign3729;
Object send30870;
Object assign3730;
Object send30871;
Object send30872;
Object send30873;
Object send30874;
Object assign3731;
Object send30875;
Object send30876;
Object send30877;
Object send30878;
Object send30879;
Object send30880;
Object send30881;
Object send30882;
Object send30883;
Object send30884;
Object string3577;
Object constant5988;
Object send30885;
Object send30886;
Object assign3732;
Object send30887;
Object send30888;
Object send30889;
Object send30890;
Object send30891;
Object send30892;
Object send30893;
Object send30894;
Object send30895;
Object send30896;
Object string3578;
Object constant5989;
Object send30897;
Object send30898;
Object assign3733;
Object send30899;
Object send30900;
Object send30901;
Object send30902;
Object send30903;
Object send30904;
Object send30905;
Object send30906;
Object send30907;
Object send30908;
Object string3579;
Object constant5990;
Object send30909;
Object send30910;
Object send30911;
Object send30912;
Object send30913;
Object method4316;
Object symbol5266;
Object methodclosure4316;
Object localvariable4343;
Object localvariable4344;
Object localvariable4345;
Object localvariable4346;
Object array3471;
Object send30914;
Object assign3734;
Object string3580;
Object constant5991;
Object send30915;
Object assign3735;
Object send30916;
Object assign3736;
Object send30917;
Object send30918;
Object send30919;
Object send30920;
Object send30921;
Object assign3737;
Object string3581;
Object constant5992;
Object send30922;
Object assign3738;
Object send30923;
Object assign3739;
Object send30924;
Object send30925;
Object send30926;
Object send30927;
Object send30928;
Object send30929;
Object send30930;
Object send30931;
Object method4317;
Object symbol5294;
Object methodclosure4317;
Object localvariable4347;
Object localvariable4348;
Object localvariable4349;
Object localvariable4350;
Object array3472;
Object send30932;
Object assign3740;
Object string3582;
Object constant5993;
Object send30933;
Object assign3741;
Object send30934;
Object assign3742;
Object send30935;
Object send30936;
Object send30937;
Object send30938;
Object send30939;
Object send30940;
Object localvariable4351;
Object array3473;
Object smallint2073;
Object constant5994;
Object string3583;
Object constant5995;
Object send30941;
Object smallint2074;
Object constant5996;
Object string3584;
Object constant5997;
Object send30942;
Object smallint2075;
Object constant5998;
Object string3585;
Object constant5999;
Object send30943;
Object send30944;
Object block2004;
Object smallint2076;
Object constant6000;
Object send30945;
Object send30946;
Object send30947;
Object send30948;
Object send30949;
Object send30950;
Object send30951;
Object send30952;
Object send30953;
Object send30954;
Object string3586;
Object constant6001;
Object send30955;
Object send30956;
Object send30957;
Object assign3743;
Object send30958;
Object send30959;
Object send30960;
Object send30961;
Object smallint2077;
Object constant6002;
Object send30962;
Object assign3744;
Object send30963;
Object send30964;
Object send30965;
Object send30966;
Object smallint2078;
Object constant6003;
Object send30967;
Object assign3745;
Object send30968;
Object send30969;
Object send30970;
Object send30971;
Object send30972;
Object send30973;
Object send30974;
Object send30975;
Object send30976;
Object smallint2079;
Object constant6004;
Object send30977;
Object method4318;
Object symbol5286;
Object methodclosure4318;
Object localvariable4352;
Object localvariable4353;
Object localvariable4354;
Object array3474;
Object send30978;
Object assign3746;
Object string3587;
Object constant6005;
Object send30979;
Object assign3747;
Object send30980;
Object assign3748;
Object send30981;
Object send30982;
Object send30983;
Object send30984;
Object send30985;
Object send30986;
Object send30987;
Object send30988;
Object send30989;
Object send30990;
Object string3588;
Object constant6006;
Object send30991;
Object send30992;
Object assign3749;
Object send30993;
Object send30994;
Object send30995;
Object send30996;
Object send30997;
Object send30998;
Object send30999;
Object send31000;
Object send31001;
Object send31002;
Object string3589;
Object constant6007;
Object send31003;
Object send31004;
Object assign3750;
Object send31005;
Object send31006;
Object send31007;
Object send31008;
Object send31009;
Object send31010;
Object send31011;
Object send31012;
Object send31013;
Object send31014;
Object string3590;
Object constant6008;
Object send31015;
Object send31016;
Object send31017;
Object send31018;
Object send31019;
Object string3591;
Object constant6009;
Object send31020;
Object assign3751;
Object send31021;
Object assign3752;
Object send31022;
Object send31023;
Object send31024;
Object send31025;
Object send31026;
Object send31027;
Object send31028;
Object send31029;
Object send31030;
Object send31031;
Object string3592;
Object constant6010;
Object send31032;
Object send31033;
Object assign3753;
Object send31034;
Object send31035;
Object send31036;
Object send31037;
Object send31038;
Object send31039;
Object send31040;
Object send31041;
Object send31042;
Object send31043;
Object string3593;
Object constant6011;
Object send31044;
Object send31045;
Object assign3754;
Object send31046;
Object send31047;
Object send31048;
Object send31049;
Object send31050;
Object send31051;
Object send31052;
Object send31053;
Object send31054;
Object send31055;
Object string3594;
Object constant6012;
Object send31056;
Object send31057;
Object send31058;
Object send31059;
Object send31060;
Object method4319;
Object symbol5256;
Object methodclosure4319;
Object localvariable4355;
Object localvariable4356;
Object array3475;
Object send31061;
Object assign3755;
Object string3595;
Object constant6013;
Object send31062;
Object assign3756;
Object send31063;
Object send31064;
Object string3596;
Object constant6014;
Object send31065;
Object send31066;
Object send31067;
Object smallint2080;
Object constant6015;
Object send31068;
Object string3597;
Object constant6016;
Object send31069;
Object assign3757;
Object send31070;
Object send31071;
Object string3598;
Object constant6017;
Object send31072;
Object send31073;
Object send31074;
Object smallint2081;
Object constant6018;
Object send31075;
Object string3599;
Object constant6019;
Object send31076;
Object assign3758;
Object send31077;
Object send31078;
Object send31079;
Object send31080;
Object send31081;
Object send31082;
Object smallint2082;
Object constant6020;
Object send31083;
Object method4320;
Object symbol5248;
Object methodclosure4320;
Object localvariable4357;
Object localvariable4358;
Object array3476;
Object send31084;
Object assign3759;
Object string3600;
Object constant6021;
Object send31085;
Object assign3760;
Object send31086;
Object constant6022;
Object send31087;
Object send31088;
Object send31089;
Object localvariable4359;
Object array3477;
Object smallint2083;
Object constant6023;
Object string3601;
Object constant6024;
Object send31090;
Object smallint2084;
Object constant6025;
Object string3602;
Object constant6026;
Object send31091;
Object smallint2085;
Object constant6027;
Object string3603;
Object constant6028;
Object send31092;
Object send31093;
Object block2005;
Object smallint2086;
Object constant6029;
Object send31094;
Object send31095;
Object send31096;
Object send31097;
Object send31098;
Object smallint2087;
Object constant6030;
Object send31099;
Object string3604;
Object constant6031;
Object send31100;
Object assign3761;
Object send31101;
Object send31102;
Object send31103;
Object send31104;
Object send31105;
Object method4321;
Object symbol5284;
Object methodclosure4321;
Object localvariable4360;
Object localvariable4361;
Object array3478;
Object send31106;
Object assign3762;
Object string3605;
Object constant6032;
Object send31107;
Object assign3763;
Object send31108;
Object send31109;
Object send31110;
Object send31111;
Object send31112;
Object send31113;
Object smallint2088;
Object constant6033;
Object send31114;
Object string3606;
Object constant6034;
Object send31115;
Object assign3764;
Object send31116;
Object send31117;
Object string3607;
Object constant6035;
Object send31118;
Object send31119;
Object send31120;
Object smallint2089;
Object constant6036;
Object send31121;
Object string3608;
Object constant6037;
Object send31122;
Object assign3765;
Object send31123;
Object send31124;
Object string3609;
Object constant6038;
Object send31125;
Object send31126;
Object send31127;
Object smallint2090;
Object constant6039;
Object send31128;
Object string3610;
Object constant6040;
Object send31129;
Object assign3766;
Object send31130;
Object send31131;
Object string3611;
Object constant6041;
Object send31132;
Object send31133;
Object send31134;
Object smallint2091;
Object constant6042;
Object send31135;
Object method4322;
Object symbol5268;
Object methodclosure4322;
Object localvariable4362;
Object localvariable4363;
Object localvariable4364;
Object array3479;
Object send31136;
Object assign3767;
Object string3612;
Object constant6043;
Object send31137;
Object assign3768;
Object send31138;
Object send31139;
Object send31140;
Object send31141;
Object send31142;
Object send31143;
Object smallint2092;
Object constant6044;
Object send31144;
Object string3613;
Object constant6045;
Object send31145;
Object assign3769;
Object send31146;
Object assign3770;
Object send31147;
Object send31148;
Object send31149;
Object send31150;
Object send31151;
Object character21;
Object constant6046;
Object send31152;
Object send31153;
Object send31154;
Object smallint2093;
Object constant6047;
Object send31155;
Object method4323;
Object symbol5296;
Object methodclosure4323;
Object localvariable4365;
Object localvariable4366;
Object localvariable4367;
Object array3480;
Object send31156;
Object assign3771;
Object string3614;
Object constant6048;
Object send31157;
Object assign3772;
Object send31158;
Object assign3773;
Object send31159;
Object send31160;
Object send31161;
Object send31162;
Object send31163;
Object string3615;
Object constant6049;
Object send31164;
Object send31165;
Object send31166;
Object smallint2094;
Object constant6050;
Object send31167;
Object string3616;
Object constant6051;
Object send31168;
Object assign3774;
Object send31169;
Object assign3775;
Object send31170;
Object send31171;
Object send31172;
Object send31173;
Object send31174;
Object string3617;
Object constant6052;
Object send31175;
Object send31176;
Object send31177;
Object smallint2095;
Object constant6053;
Object send31178;
Object string3618;
Object constant6054;
Object send31179;
Object assign3776;
Object send31180;
Object assign3777;
Object send31181;
Object send31182;
Object send31183;
Object send31184;
Object send31185;
Object string3619;
Object constant6055;
Object send31186;
Object send31187;
Object send31188;
Object smallint2096;
Object constant6056;
Object send31189;
Object method4324;
Object symbol5241;
Object methodclosure4324;
Object localvariable4368;
Object localvariable4369;
Object localvariable4370;
Object array3481;
Object send31190;
Object assign3778;
Object string3620;
Object constant6057;
Object assign3779;
Object send31191;
Object assign3780;
Object send31192;
Object send31193;
Object send31194;
Object send31195;
Object send31196;
Object send31197;
Object send31198;
Object send31199;
Object send31200;
Object send31201;
Object send31202;
Object send31203;
Object send31204;
Object send31205;
Object smallint2097;
Object constant6058;
Object send31206;
Object send31207;
Object send31208;
Object send31209;
Object smallint2098;
Object constant6059;
Object send31210;
Object send31211;
Object send31212;
Object send31213;
Object smallint2099;
Object constant6060;
Object send31214;
Object method4325;
Object symbol5261;
Object methodclosure4325;
Object localvariable4371;
Object localvariable4372;
Object localvariable4373;
Object array3482;
Object send31215;
Object assign3781;
Object string3621;
Object constant6061;
Object send31216;
Object assign3782;
Object send31217;
Object assign3783;
Object send31218;
Object send31219;
Object send31220;
Object send31221;
Object send31222;
Object send31223;
Object send31224;
Object send31225;
Object send31226;
Object send31227;
Object send31228;
Object string3622;
Object constant6062;
Object send31229;
Object send31230;
Object assign3784;
Object send31231;
Object send31232;
Object send31233;
Object send31234;
Object send31235;
Object send31236;
Object send31237;
Object send31238;
Object send31239;
Object send31240;
Object send31241;
Object string3623;
Object constant6063;
Object send31242;
Object send31243;
Object send31244;
Object send31245;
Object send31246;
Object send31247;
Object send31248;
Object send31249;
Object string3624;
Object constant6064;
Object send31250;
Object send31251;
Object send31252;
Object smallint2100;
Object constant6065;
Object send31253;
Object string3625;
Object constant6066;
Object send31254;
Object assign3785;
Object send31255;
Object assign3786;
Object send31256;
Object send31257;
Object send31258;
Object send31259;
Object send31260;
Object string3626;
Object constant6067;
Object send31261;
Object send31262;
Object send31263;
Object smallint2101;
Object constant6068;
Object send31264;
Object method4326;
Object symbol5258;
Object methodclosure4326;
Object localvariable4374;
Object localvariable4375;
Object localvariable4376;
Object localvariable4377;
Object array3483;
Object send31265;
Object assign3787;
Object string3627;
Object constant6069;
Object send31266;
Object assign3788;
Object send31267;
Object assign3789;
Object send31268;
Object send31269;
Object send31270;
Object send31271;
Object send31272;
Object constant6070;
Object send31273;
Object send31274;
Object localvariable4378;
Object array3484;
Object smallint2102;
Object constant6071;
Object symbol5662;
Object constant6072;
Object send31275;
Object smallint2103;
Object constant6073;
Object symbol5663;
Object constant6074;
Object send31276;
Object smallint2104;
Object constant6075;
Object symbol5664;
Object constant6076;
Object send31277;
Object send31278;
Object block2006;
Object smallint2105;
Object constant6077;
Object send31279;
Object send31280;
Object send31281;
Object send31282;
Object send31283;
Object assign3790;
Object send31284;
Object send31285;
Object send31286;
Object send31287;
Object smallint2106;
Object constant6078;
Object send31288;
Object assign3791;
Object send31289;
Object send31290;
Object send31291;
Object send31292;
Object smallint2107;
Object constant6079;
Object send31293;
Object assign3792;
Object send31294;
Object send31295;
Object send31296;
Object send31297;
Object send31298;
Object send31299;
Object send31300;
Object string3628;
Object constant6080;
Object send31301;
Object assign3793;
Object send31302;
Object assign3794;
Object send31303;
Object send31304;
Object send31305;
Object send31306;
Object send31307;
Object send31308;
Object string3629;
Object constant6081;
Object send31309;
Object send31310;
Object send31311;
Object smallint2108;
Object constant6082;
Object send31312;
Object string3630;
Object constant6083;
Object send31313;
Object assign3795;
Object send31314;
Object assign3796;
Object send31315;
Object send31316;
Object send31317;
Object send31318;
Object send31319;
Object constant6084;
Object send31320;
Object send31321;
Object localvariable4379;
Object array3485;
Object smallint2109;
Object constant6085;
Object string3631;
Object constant6086;
Object send31322;
Object smallint2110;
Object constant6087;
Object string3632;
Object constant6088;
Object send31323;
Object smallint2111;
Object constant6089;
Object string3633;
Object constant6090;
Object send31324;
Object send31325;
Object block2007;
Object smallint2112;
Object constant6091;
Object send31326;
Object send31327;
Object send31328;
Object send31329;
Object send31330;
Object send31331;
Object send31332;
Object method4327;
Object symbol5278;
Object methodclosure4327;
Object localvariable4380;
Object localvariable4381;
Object localvariable4382;
Object array3486;
Object send31333;
Object assign3797;
Object string3634;
Object constant6092;
Object send31334;
Object assign3798;
Object send31335;
Object assign3799;
Object send31336;
Object send31337;
Object send31338;
Object send31339;
Object send31340;
Object send31341;
Object send31342;
Object send31343;
Object string3635;
Object constant6093;
Object send31344;
Object assign3800;
Object send31345;
Object assign3801;
Object send31346;
Object send31347;
Object send31348;
Object send31349;
Object send31350;
Object send31351;
Object smallint2113;
Object constant6094;
Object send31352;
Object send31353;
Object send31354;
Object send31355;
Object send31356;
Object send31357;
Object send31358;
Object send31359;
Object send31360;
Object send31361;
Object string3636;
Object constant6095;
Object send31362;
Object send31363;
Object smallint2114;
Object constant6096;
Object send31364;
Object send31365;
Object send31366;
Object send31367;
Object send31368;
Object smallint2115;
Object constant6097;
Object send31369;
Object send31370;
Object send31371;
Object string3637;
Object constant6098;
Object send31372;
Object send31373;
Object smallint2116;
Object constant6099;
Object send31374;
Object send31375;
Object send31376;
Object send31377;
Object send31378;
Object smallint2117;
Object constant6100;
Object send31379;
Object send31380;
Object send31381;
Object string3638;
Object constant6101;
Object send31382;
Object send31383;
Object smallint2118;
Object constant6102;
Object send31384;
Object send31385;
Object send31386;
Object send31387;
Object send31388;
Object smallint2119;
Object constant6103;
Object send31389;
Object send31390;
Object send31391;
Object string3639;
Object constant6104;
Object send31392;
Object send31393;
Object smallint2120;
Object constant6105;
Object send31394;
Object send31395;
Object send31396;
Object send31397;
Object method4328;
Object symbol5231;
Object methodclosure4328;
Object localvariable4383;
Object localvariable4384;
Object localvariable4385;
Object array3487;
Object send31398;
Object assign3802;
Object string3640;
Object constant6106;
Object send31399;
Object assign3803;
Object send31400;
Object assign3804;
Object send31401;
Object send31402;
Object send31403;
Object send31404;
Object send31405;
Object send31406;
Object string3641;
Object constant6107;
Object send31407;
Object send31408;
Object send31409;
Object send31410;
Object send31411;
Object send31412;
Object send31413;
Object send31414;
Object string3642;
Object constant6108;
Object send31415;
Object send31416;
Object send31417;
Object send31418;
Object send31419;
Object send31420;
Object send31421;
Object send31422;
Object string3643;
Object constant6109;
Object send31423;
Object send31424;
Object send31425;
Object smallint2121;
Object constant6110;
Object send31426;
Object string3644;
Object constant6111;
Object send31427;
Object assign3805;
Object send31428;
Object assign3806;
Object send31429;
Object send31430;
Object send31431;
Object send31432;
Object send31433;
Object send31434;
Object string3645;
Object constant6112;
Object send31435;
Object send31436;
Object send31437;
Object send31438;
Object send31439;
Object send31440;
Object send31441;
Object send31442;
Object string3646;
Object constant6113;
Object send31443;
Object send31444;
Object assign3807;
Object send31445;
Object send31446;
Object send31447;
Object send31448;
Object send31449;
Object send31450;
Object string3647;
Object constant6114;
Object send31451;
Object send31452;
Object send31453;
Object send31454;
Object send31455;
Object send31456;
Object send31457;
Object send31458;
Object string3648;
Object constant6115;
Object send31459;
Object send31460;
Object send31461;
Object send31462;
Object send31463;
Object send31464;
Object send31465;
Object send31466;
Object string3649;
Object constant6116;
Object send31467;
Object send31468;
Object send31469;
Object smallint2122;
Object constant6117;
Object send31470;
Object method4329;
Object symbol5251;
Object methodclosure4329;
Object localvariable4386;
Object localvariable4387;
Object localvariable4388;
Object array3488;
Object send31471;
Object assign3808;
Object string3650;
Object constant6118;
Object send31472;
Object assign3809;
Object send31473;
Object assign3810;
Object send31474;
Object send31475;
Object send31476;
Object send31477;
Object send31478;
Object send31479;
Object send31480;
Object string3651;
Object constant6119;
Object send31481;
Object assign3811;
Object send31482;
Object assign3812;
Object send31483;
Object send31484;
Object send31485;
Object send31486;
Object send31487;
Object send31488;
Object send31489;
Object string3652;
Object constant6120;
Object send31490;
Object assign3813;
Object send31491;
Object assign3814;
Object send31492;
Object send31493;
Object send31494;
Object send31495;
Object send31496;
Object send31497;
Object send31498;
Object send31499;
Object send31500;
Object send31501;
Object smallint2123;
Object constant6121;
Object send31502;
Object method4330;
Object symbol5271;
Object methodclosure4330;
Object localvariable4389;
Object localvariable4390;
Object array3489;
Object send31503;
Object assign3815;
Object string3653;
Object constant6122;
Object send31504;
Object assign3816;
Object send31505;
Object send31506;
Object string3654;
Object constant6123;
Object send31507;
Object send31508;
Object send31509;
Object smallint2124;
Object constant6124;
Object send31510;
Object string3655;
Object constant6125;
Object send31511;
Object assign3817;
Object send31512;
Object send31513;
Object send31514;
Object send31515;
Object send31516;
Object send31517;
Object smallint2125;
Object constant6126;
Object send31518;
Object method4331;
Object symbol5263;
Object methodclosure4331;
Object localvariable4391;
Object localvariable4392;
Object localvariable4393;
Object localvariable4394;
Object array3490;
Object send31519;
Object assign3818;
Object string3656;
Object constant6127;
Object send31520;
Object assign3819;
Object send31521;
Object assign3820;
Object send31522;
Object send31523;
Object send31524;
Object send31525;
Object send31526;
Object assign3821;
Object string3657;
Object constant6128;
Object send31527;
Object assign3822;
Object send31528;
Object assign3823;
Object send31529;
Object send31530;
Object send31531;
Object send31532;
Object send31533;
Object send31534;
Object send31535;
Object send31536;
Object method4332;
Object symbol5291;
Object methodclosure4332;
Object localvariable4395;
Object localvariable4396;
Object localvariable4397;
Object array3491;
Object send31537;
Object assign3824;
Object string3658;
Object constant6129;
Object send31538;
Object assign3825;
Object send31539;
Object assign3826;
Object send31540;
Object send31541;
Object send31542;
Object send31543;
Object send31544;
Object string3659;
Object constant6130;
Object send31545;
Object send31546;
Object send31547;
Object send31548;
Object send31549;
Object smallint2126;
Object constant6131;
Object send31550;
Object send31551;
Object send31552;
Object send31553;
Object send31554;
Object string3660;
Object constant6132;
Object send31555;
Object send31556;
Object send31557;
Object send31558;
Object smallint2127;
Object constant6133;
Object send31559;
Object string3661;
Object constant6134;
Object send31560;
Object assign3827;
Object send31561;
Object send31562;
Object send31563;
Object send31564;
Object send31565;
Object send31566;
Object smallint2128;
Object constant6135;
Object send31567;
Object string3662;
Object constant6136;
Object send31568;
Object assign3828;
Object send31569;
Object assign3829;
Object send31570;
Object send31571;
Object send31572;
Object send31573;
Object send31574;
Object symbol5665;
Object string3663;
Object constant6137;
Object string3664;
Object constant6138;
Object send31575;
Object send31576;
Object send31577;
Object send31578;
Object send31579;
Object smallint2129;
Object constant6139;
Object send31580;
Object send31581;
Object send31582;
Object send31583;
Object send31584;
Object string3665;
Object constant6140;
Object send31585;
Object send31586;
Object send31587;
Object send31588;
Object send31589;
Object send31590;
Object string3666;
Object constant6141;
Object send31591;
Object send31592;
Object send31593;
Object send31594;
Object smallint2130;
Object constant6142;
Object send31595;
Object method4333;
Object symbol5253;
Object methodclosure4333;
Object localvariable4398;
Object localvariable4399;
Object array3492;
Object send31596;
Object assign3830;
Object string3667;
Object constant6143;
Object send31597;
Object send31598;
Object send31599;
Object assign3831;
Object send31600;
Object send31601;
Object send31602;
Object send31603;
Object send31604;
Object send31605;
Object send31606;
Object send31607;
Object send31608;
Object send31609;
Object send31610;
Object send31611;
Object send31612;
Object send31613;
Object send31614;
Object send31615;
Object string3668;
Object constant6144;
Object send31616;
Object send31617;
Object send31618;
Object send31619;
Object send31620;
Object string3669;
Object constant6145;
Object send31621;
Object send31622;
Object send31623;
Object send31624;
Object string3670;
Object constant6146;
Object send31625;
Object send31626;
Object send31627;
Object send31628;
Object send31629;
Object send31630;
Object send31631;
Object send31632;
Object string3671;
Object constant6147;
Object send31633;
Object method4334;
Object symbol5281;
Object methodclosure4334;
Object localvariable4400;
Object localvariable4401;
Object localvariable4402;
Object array3493;
Object send31634;
Object assign3832;
Object string3672;
Object constant6148;
Object send31635;
Object assign3833;
Object send31636;
Object assign3834;
Object send31637;
Object send31638;
Object send31639;
Object send31640;
Object send31641;
Object send31642;
Object smallint2131;
Object constant6149;
Object send31643;
Object send31644;
Object send31645;
Object send31646;
Object smallint2132;
Object constant6150;
Object send31647;
Object send31648;
Object send31649;
Object send31650;
Object smallint2133;
Object constant6151;
Object send31651;
Object string3673;
Object constant6152;
Object send31652;
Object assign3835;
Object send31653;
Object assign3836;
Object send31654;
Object send31655;
Object send31656;
Object send31657;
Object send31658;
Object send31659;
Object smallint2134;
Object constant6153;
Object send31660;
Object send31661;
Object send31662;
Object send31663;
Object smallint2135;
Object constant6154;
Object send31664;
Object send31665;
Object send31666;
Object send31667;
Object smallint2136;
Object constant6155;
Object send31668;
Object string3674;
Object constant6156;
Object send31669;
Object assign3837;
Object send31670;
Object assign3838;
Object send31671;
Object send31672;
Object send31673;
Object send31674;
Object send31675;
Object send31676;
Object smallint2137;
Object constant6157;
Object send31677;
Object send31678;
Object send31679;
Object send31680;
Object smallint2138;
Object constant6158;
Object send31681;
Object send31682;
Object send31683;
Object send31684;
Object smallint2139;
Object constant6159;
Object send31685;
Object string3675;
Object constant6160;
Object send31686;
Object assign3839;
Object send31687;
Object assign3840;
Object send31688;
Object send31689;
Object send31690;
Object send31691;
Object send31692;
Object send31693;
Object smallint2140;
Object constant6161;
Object send31694;
Object send31695;
Object send31696;
Object send31697;
Object smallint2141;
Object constant6162;
Object send31698;
Object send31699;
Object send31700;
Object send31701;
Object smallint2142;
Object constant6163;
Object send31702;
Object string3676;
Object constant6164;
Object send31703;
Object assign3841;
Object send31704;
Object assign3842;
Object send31705;
Object send31706;
Object send31707;
Object send31708;
Object send31709;
Object send31710;
Object smallint2143;
Object constant6165;
Object send31711;
Object send31712;
Object send31713;
Object send31714;
Object smallint2144;
Object constant6166;
Object send31715;
Object send31716;
Object send31717;
Object send31718;
Object smallint2145;
Object constant6167;
Object send31719;
Object string3677;
Object constant6168;
Object send31720;
Object assign3843;
Object send31721;
Object assign3844;
Object send31722;
Object send31723;
Object send31724;
Object send31725;
Object send31726;
Object send31727;
Object smallint2146;
Object constant6169;
Object send31728;
Object send31729;
Object send31730;
Object send31731;
Object smallint2147;
Object constant6170;
Object send31732;
Object send31733;
Object send31734;
Object send31735;
Object smallint2148;
Object constant6171;
Object send31736;
Object string3678;
Object constant6172;
Object send31737;
Object assign3845;
Object send31738;
Object assign3846;
Object send31739;
Object send31740;
Object send31741;
Object send31742;
Object send31743;
Object send31744;
Object smallint2149;
Object constant6173;
Object send31745;
Object send31746;
Object send31747;
Object send31748;
Object smallint2150;
Object constant6174;
Object send31749;
Object send31750;
Object send31751;
Object send31752;
Object smallint2151;
Object constant6175;
Object send31753;
Object method4335;
Object symbol5273;
Object methodclosure4335;
Object localvariable4403;
Object localvariable4404;
Object localvariable4405;
Object array3494;
Object send31754;
Object assign3847;
Object string3679;
Object constant6176;
Object send31755;
Object assign3848;
Object send31756;
Object assign3849;
Object send31757;
Object send31758;
Object send31759;
Object send31760;
Object send31761;
Object string3680;
Object constant6177;
Object send31762;
Object send31763;
Object send31764;
Object smallint2152;
Object constant6178;
Object send31765;
Object method4336;
Object symbol5293;
Object methodclosure4336;
Object localvariable4406;
Object localvariable4407;
Object localvariable4408;
Object localvariable4409;
Object array3495;
Object send31766;
Object assign3850;
Object string3681;
Object constant6179;
Object send31767;
Object assign3851;
Object send31768;
Object assign3852;
Object send31769;
Object send31770;
Object smallint2153;
Object constant6180;
Object send31771;
Object send31772;
Object send31773;
Object send31774;
Object send31775;
Object send31776;
Object smallint2154;
Object constant6181;
Object send31777;
Object smallint2155;
Object constant6182;
Object send31778;
Object assign3853;
Object send31779;
Object send31780;
Object send31781;
Object send31782;
Object send31783;
Object string3682;
Object constant6183;
Object send31784;
Object smallint2156;
Object constant6184;
Object send31785;
Object assign3854;
Object send31786;
Object send31787;
Object send31788;
Object send31789;
Object send31790;
Object string3683;
Object constant6185;
Object send31791;
Object string3684;
Object constant6186;
Object send31792;
Object assign3855;
Object send31793;
Object assign3856;
Object send31794;
Object send31795;
Object smallint2157;
Object constant6187;
Object send31796;
Object send31797;
Object send31798;
Object send31799;
Object send31800;
Object send31801;
Object smallint2158;
Object constant6188;
Object send31802;
Object send31803;
Object assign3857;
Object send31804;
Object send31805;
Object send31806;
Object send31807;
Object send31808;
Object string3685;
Object constant6189;
Object send31809;
Object smallint2159;
Object constant6190;
Object send31810;
Object assign3858;
Object send31811;
Object send31812;
Object send31813;
Object send31814;
Object send31815;
Object string3686;
Object constant6191;
Object send31816;
Object method4337;
Object symbol5235;
Object methodclosure4337;
Object method4338;
Object symbol5247;
Object methodclosure4338;
Object localvariable4410;
Object localvariable4411;
Object localvariable4412;
Object array3496;
Object send31817;
Object assign3859;
Object string3687;
Object constant6192;
Object send31818;
Object assign3860;
Object send31819;
Object assign3861;
Object send31820;
Object send31821;
Object send31822;
Object send31823;
Object send31824;
Object send31825;
Object send31826;
Object send31827;
Object send31828;
Object send31829;
Object string3688;
Object constant6193;
Object send31830;
Object send31831;
Object assign3862;
Object send31832;
Object send31833;
Object send31834;
Object send31835;
Object send31836;
Object send31837;
Object send31838;
Object send31839;
Object send31840;
Object send31841;
Object string3689;
Object constant6194;
Object send31842;
Object send31843;
Object assign3863;
Object send31844;
Object send31845;
Object send31846;
Object send31847;
Object send31848;
Object send31849;
Object send31850;
Object send31851;
Object send31852;
Object send31853;
Object string3690;
Object constant6195;
Object send31854;
Object send31855;
Object send31856;
Object send31857;
Object send31858;
Object method4339;
Object symbol5275;
Object methodclosure4339;
Object localvariable4413;
Object localvariable4414;
Object localvariable4415;
Object array3497;
Object send31859;
Object assign3864;
Object string3691;
Object constant6196;
Object send31860;
Object assign3865;
Object send31861;
Object assign3866;
Object send31862;
Object send31863;
Object send31864;
Object send31865;
Object send31866;
Object send31867;
Object send31868;
Object send31869;
Object send31870;
Object send31871;
Object send31872;
Object string3692;
Object constant6197;
Object send31873;
Object send31874;
Object assign3867;
Object send31875;
Object send31876;
Object send31877;
Object send31878;
Object send31879;
Object send31880;
Object send31881;
Object send31882;
Object send31883;
Object send31884;
Object send31885;
Object string3693;
Object constant6198;
Object send31886;
Object send31887;
Object send31888;
Object send31889;
Object send31890;
Object send31891;
Object send31892;
Object send31893;
Object string3694;
Object constant6199;
Object send31894;
Object send31895;
Object send31896;
Object smallint2160;
Object constant6200;
Object send31897;
Object string3695;
Object constant6201;
Object send31898;
Object assign3868;
Object send31899;
Object send31900;
Object send31901;
Object send31902;
Object method4340;
Object symbol5267;
Object methodclosure4340;
Object send31903;
Object assign3869;
Object method4341;
Object symbol5283;
Object methodclosure4341;
Object localvariable4416;
Object localvariable4417;
Object localvariable4418;
Object array3498;
Object send31904;
Object assign3870;
Object string3696;
Object constant6202;
Object send31905;
Object assign3871;
Object send31906;
Object assign3872;
Object send31907;
Object send31908;
Object send31909;
Object send31910;
Object send31911;
Object send31912;
Object string3697;
Object constant6203;
Object send31913;
Object send31914;
Object send31915;
Object send31916;
Object send31917;
Object send31918;
Object send31919;
Object send31920;
Object send31921;
Object string3698;
Object constant6204;
Object send31922;
Object send31923;
Object send31924;
Object smallint2161;
Object constant6205;
Object send31925;
Object string3699;
Object constant6206;
Object send31926;
Object assign3873;
Object send31927;
Object send31928;
Object send31929;
Object send31930;
Object send31931;
Object send31932;
Object smallint2162;
Object constant6207;
Object send31933;
Object string3700;
Object constant6208;
Object send31934;
Object assign3874;
Object send31935;
Object assign3875;
Object send31936;
Object send31937;
Object send31938;
Object send31939;
Object send31940;
Object send31941;
Object string3701;
Object constant6209;
Object send31942;
Object send31943;
Object send31944;
Object send31945;
Object send31946;
Object send31947;
Object send31948;
Object send31949;
Object send31950;
Object string3702;
Object constant6210;
Object send31951;
Object send31952;
Object send31953;
Object smallint2163;
Object constant6211;
Object send31954;
Object method4342;
Object symbol5287;
Object methodclosure4342;
Object localvariable4419;
Object localvariable4420;
Object localvariable4421;
Object localvariable4422;
Object array3499;
Object send31955;
Object assign3876;
Object string3703;
Object constant6212;
Object send31956;
Object assign3877;
Object send31957;
Object assign3878;
Object send31958;
Object send31959;
Object send31960;
Object send31961;
Object send31962;
Object send31963;
Object send31964;
Object send31965;
Object send31966;
Object send31967;
Object smallint2164;
Object constant6213;
Object send31968;
Object send31969;
Object smallint2165;
Object constant6214;
Object send31970;
Object assign3879;
Object send31971;
Object send31972;
Object send31973;
Object send31974;
Object smallint2166;
Object constant6215;
Object send31975;
Object assign3880;
Object send31976;
Object send31977;
Object send31978;
Object send31979;
Object smallint2167;
Object constant6216;
Object send31980;
Object assign3881;
Object send31981;
Object send31982;
Object send31983;
Object send31984;
Object smallint2168;
Object constant6217;
Object send31985;
Object assign3882;
Object send31986;
Object send31987;
Object send31988;
Object method4343;
Object symbol5240;
Object methodclosure4343;
Object localvariable4423;
Object localvariable4424;
Object localvariable4425;
Object array3500;
Object send31989;
Object assign3883;
Object string3704;
Object constant6218;
Object send31990;
Object assign3884;
Object send31991;
Object assign3885;
Object send31992;
Object send31993;
Object send31994;
Object send31995;
Object send31996;
Object send31997;
Object send31998;
Object send31999;
Object send32000;
Object send32001;
Object send32002;
Object string3705;
Object constant6219;
Object send32003;
Object send32004;
Object assign3886;
Object send32005;
Object send32006;
Object send32007;
Object send32008;
Object send32009;
Object send32010;
Object send32011;
Object send32012;
Object send32013;
Object send32014;
Object send32015;
Object string3706;
Object constant6220;
Object send32016;
Object send32017;
Object send32018;
Object send32019;
Object send32020;
Object send32021;
Object send32022;
Object send32023;
Object string3707;
Object constant6221;
Object send32024;
Object send32025;
Object send32026;
Object smallint2169;
Object constant6222;
Object send32027;
Object string3708;
Object constant6223;
Object send32028;
Object assign3887;
Object send32029;
Object assign3888;
Object send32030;
Object send32031;
Object send32032;
Object send32033;
Object send32034;
Object string3709;
Object constant6224;
Object send32035;
Object send32036;
Object send32037;
Object smallint2170;
Object constant6225;
Object send32038;
Object string3710;
Object constant6226;
Object send32039;
Object assign3889;
Object send32040;
Object assign3890;
Object send32041;
Object send32042;
Object send32043;
Object send32044;
Object send32045;
Object send32046;
Object string3711;
Object constant6227;
Object send32047;
Object send32048;
Object send32049;
Object send32050;
Object send32051;
Object send32052;
Object send32053;
Object send32054;
Object string3712;
Object constant6228;
Object send32055;
Object send32056;
Object assign3891;
Object send32057;
Object send32058;
Object send32059;
Object send32060;
Object send32061;
Object send32062;
Object string3713;
Object constant6229;
Object send32063;
Object send32064;
Object send32065;
Object send32066;
Object send32067;
Object send32068;
Object send32069;
Object send32070;
Object string3714;
Object constant6230;
Object send32071;
Object send32072;
Object send32073;
Object send32074;
Object send32075;
Object send32076;
Object send32077;
Object send32078;
Object string3715;
Object constant6231;
Object send32079;
Object send32080;
Object send32081;
Object smallint2171;
Object constant6232;
Object send32082;
Object method4344;
Object symbol5260;
Object methodclosure4344;
Object localvariable4426;
Object localvariable4427;
Object localvariable4428;
Object localvariable4429;
Object array3501;
Object send32083;
Object assign3892;
Object string3716;
Object constant6233;
Object send32084;
Object assign3893;
Object send32085;
Object assign3894;
Object send32086;
Object send32087;
Object send32088;
Object send32089;
Object send32090;
Object send32091;
Object localvariable4430;
Object array3502;
Object smallint2172;
Object constant6234;
Object string3717;
Object constant6235;
Object send32092;
Object smallint2173;
Object constant6236;
Object string3718;
Object constant6237;
Object send32093;
Object smallint2174;
Object constant6238;
Object string3719;
Object constant6239;
Object send32094;
Object send32095;
Object block2008;
Object smallint2175;
Object constant6240;
Object send32096;
Object send32097;
Object send32098;
Object send32099;
Object send32100;
Object assign3895;
Object send32101;
Object send32102;
Object send32103;
Object send32104;
Object smallint2176;
Object constant6241;
Object send32105;
Object assign3896;
Object send32106;
Object send32107;
Object send32108;
Object send32109;
Object smallint2177;
Object constant6242;
Object send32110;
Object assign3897;
Object send32111;
Object send32112;
Object send32113;
Object send32114;
Object send32115;
Object smallint2178;
Object constant6243;
Object send32116;
Object method4345;
Object symbol5249;
Object methodclosure4345;
Object localvariable4431;
Object localvariable4432;
Object localvariable4433;
Object array3503;
Object send32117;
Object assign3898;
Object string3720;
Object constant6244;
Object send32118;
Object assign3899;
Object send32119;
Object send32120;
Object send32121;
Object send32122;
Object string3721;
Object constant6245;
Object send32123;
Object assign3900;
Object send32124;
Object assign3901;
Object send32125;
Object send32126;
Object send32127;
Object send32128;
Object send32129;
Object send32130;
Object send32131;
Object send32132;
Object send32133;
Object send32134;
Object string3722;
Object constant6246;
Object send32135;
Object send32136;
Object assign3902;
Object send32137;
Object send32138;
Object send32139;
Object send32140;
Object send32141;
Object send32142;
Object send32143;
Object send32144;
Object send32145;
Object send32146;
Object string3723;
Object constant6247;
Object send32147;
Object send32148;
Object assign3903;
Object send32149;
Object send32150;
Object send32151;
Object send32152;
Object send32153;
Object send32154;
Object send32155;
Object send32156;
Object send32157;
Object send32158;
Object string3724;
Object constant6248;
Object send32159;
Object send32160;
Object send32161;
Object send32162;
Object send32163;
Object method4346;
Object symbol5297;
Object methodclosure4346;
Object localvariable4434;
Object localvariable4435;
Object localvariable4436;
Object array3504;
Object send32164;
Object assign3904;
Object string3725;
Object constant6249;
Object send32165;
Object assign3905;
Object send32166;
Object assign3906;
Object send32167;
Object send32168;
Object send32169;
Object send32170;
Object send32171;
Object string3726;
Object constant6250;
Object send32172;
Object send32173;
Object send32174;
Object smallint2179;
Object constant6251;
Object send32175;
Object string3727;
Object constant6252;
Object send32176;
Object assign3907;
Object send32177;
Object assign3908;
Object send32178;
Object send32179;
Object send32180;
Object send32181;
Object send32182;
Object string3728;
Object constant6253;
Object send32183;
Object send32184;
Object send32185;
Object string3729;
Object constant6254;
Object send32186;
Object send32187;
Object send32188;
Object smallint2180;
Object constant6255;
Object send32189;
Object method4347;
Object symbol5250;
Object methodclosure4347;
Object localvariable4437;
Object localvariable4438;
Object array3505;
Object send32190;
Object assign3909;
Object string3730;
Object constant6256;
Object send32191;
Object assign3910;
Object send32192;
Object constant6257;
Object send32193;
Object send32194;
Object send32195;
Object localvariable4439;
Object array3506;
Object smallint2181;
Object constant6258;
Object string3731;
Object constant6259;
Object send32196;
Object smallint2182;
Object constant6260;
Object string3732;
Object constant6261;
Object send32197;
Object smallint2183;
Object constant6262;
Object string3733;
Object constant6263;
Object send32198;
Object send32199;
Object block2009;
Object smallint2184;
Object constant6264;
Object send32200;
Object send32201;
Object send32202;
Object send32203;
Object send32204;
Object smallint2185;
Object constant6265;
Object send32205;
Object string3734;
Object constant6266;
Object send32206;
Object assign3911;
Object send32207;
Object constant6267;
Object send32208;
Object send32209;
Object send32210;
Object localvariable4440;
Object array3507;
Object smallint2186;
Object constant6268;
Object string3735;
Object constant6269;
Object send32211;
Object smallint2187;
Object constant6270;
Object string3736;
Object constant6271;
Object send32212;
Object smallint2188;
Object constant6272;
Object string3737;
Object constant6273;
Object send32213;
Object send32214;
Object block2010;
Object smallint2189;
Object constant6274;
Object send32215;
Object send32216;
Object send32217;
Object send32218;
Object send32219;
Object smallint2190;
Object constant6275;
Object send32220;
Object method4348;
Object symbol5242;
Object methodclosure4348;
Object localvariable4441;
Object array3508;
Object string3738;
Object constant6276;
Object send32221;
Object send32222;
Object assign3912;
Object string3739;
Object constant6277;
Object send32223;
Object send32224;
Object send32225;
Object send32226;
Object send32227;
Object string3740;
Object constant6278;
Object send32228;
Object send32229;
Object send32230;
Object send32231;
Object method4349;
Object symbol5289;
Object methodclosure4349;
Object localvariable4442;
Object localvariable4443;
Object localvariable4444;
Object array3509;
Object send32232;
Object assign3913;
Object string3741;
Object constant6279;
Object assign3914;
Object send32233;
Object assign3915;
Object send32234;
Object send32235;
Object send32236;
Object send32237;
Object send32238;
Object send32239;
Object send32240;
Object send32241;
Object send32242;
Object send32243;
Object string3742;
Object constant6280;
Object send32244;
Object method4350;
Object symbol5262;
Object methodclosure4350;
Object localvariable4445;
Object localvariable4446;
Object localvariable4447;
Object array3510;
Object send32245;
Object assign3916;
Object string3743;
Object constant6281;
Object assign3917;
Object send32246;
Object assign3918;
Object send32247;
Object send32248;
Object send32249;
Object send32250;
Object send32251;
Object send32252;
Object send32253;
Object send32254;
Object send32255;
Object send32256;
Object send32257;
Object send32258;
Object send32259;
Object send32260;
Object smallint2191;
Object constant6282;
Object send32261;
Object send32262;
Object send32263;
Object send32264;
Object smallint2192;
Object constant6283;
Object send32265;
Object send32266;
Object send32267;
Object send32268;
Object smallint2193;
Object constant6284;
Object send32269;
Object method4351;
Object symbol5290;
Object methodclosure4351;
Object localvariable4448;
Object localvariable4449;
Object array3511;
Object symbol5666;
Object send32270;
Object assign3919;
Object string3744;
Object constant6285;
Object send32271;
Object assign3920;
Object send32272;
Object send32273;
Object string3745;
Object constant6286;
Object send32274;
Object send32275;
Object send32276;
Object smallint2194;
Object constant6287;
Object send32277;
Object string3746;
Object constant6288;
Object send32278;
Object assign3921;
Object send32279;
Object send32280;
Object string3747;
Object constant6289;
Object send32281;
Object send32282;
Object send32283;
Object smallint2195;
Object constant6290;
Object send32284;
Object string3748;
Object constant6291;
Object send32285;
Object assign3922;
Object send32286;
Object send32287;
Object send32288;
Object send32289;
Object send32290;
Object send32291;
Object smallint2196;
Object constant6292;
Object send32292;
Object method4352;
Object symbol5259;
Object methodclosure4352;
Object localvariable4450;
Object localvariable4451;
Object array3512;
Object send32293;
Object assign3923;
Object string3749;
Object constant6293;
Object send32294;
Object assign3924;
Object send32295;
Object send32296;
Object string3750;
Object constant6294;
Object send32297;
Object send32298;
Object send32299;
Object smallint2197;
Object constant6295;
Object send32300;
Object string3751;
Object constant6296;
Object send32301;
Object assign3925;
Object send32302;
Object send32303;
Object string3752;
Object constant6297;
Object send32304;
Object send32305;
Object send32306;
Object smallint2198;
Object constant6298;
Object send32307;
Object string3753;
Object constant6299;
Object send32308;
Object assign3926;
Object send32309;
Object send32310;
Object string3754;
Object constant6300;
Object send32311;
Object send32312;
Object send32313;
Object smallint2199;
Object constant6301;
Object send32314;
Object string3755;
Object constant6302;
Object send32315;
Object assign3927;
Object send32316;
Object send32317;
Object string3756;
Object constant6303;
Object send32318;
Object send32319;
Object send32320;
Object smallint2200;
Object constant6304;
Object send32321;
Object string3757;
Object constant6305;
Object send32322;
Object assign3928;
Object send32323;
Object send32324;
Object string3758;
Object constant6306;
Object send32325;
Object send32326;
Object send32327;
Object smallint2201;
Object constant6307;
Object send32328;
Object string3759;
Object constant6308;
Object send32329;
Object assign3929;
Object send32330;
Object send32331;
Object send32332;
Object send32333;
Object send32334;
Object send32335;
Object smallint2202;
Object constant6309;
Object send32336;
Object method4353;
Object symbol5279;
Object methodclosure4353;
Object classreference846;
Object localvariable4452;
Object array3513;
Object assign3930;
Object method4354;
Object methodclosure4354;
Object localvariable4453;
Object array3514;
Object assign3931;
Object method4355;
Object symbol5536;
Object methodclosure4355;
Object localvariable4454;
Object array3515;
Object super369;
Object string3760;
Object constant6310;
Object send32337;
Object send32338;
Object send32339;
Object string3761;
Object constant6311;
Object send32340;
Object symbol5537;
Object send32341;
Object send32342;
Object string3762;
Object constant6312;
Object send32343;
Object symbol5535;
Object send32344;
Object send32345;
Object method4356;
Object methodclosure4356;
Object localvariable4455;
Object array3516;
Object assign3932;
Object method4357;
Object methodclosure4357;
Object method4358;
Object methodclosure4358;
Object method4359;
Object methodclosure4359;
Object method4360;
Object methodclosure4360;
Object method4361;
Object methodclosure4361;
Object localvariable4456;
Object array3517;
Object send32346;
Object send32347;
Object send32348;
Object method4362;
Object methodclosure4362;
Object classreference847;
Object instancevariable1075;
Object method4363;
Object methodclosure4363;
Object method4364;
Object methodclosure4364;
Object classreference848;
Object localvariable4457;
Object array3518;
Object send32349;
Object method4365;
Object methodclosure4365;
Object localvariable4458;
Object array3519;
Object method4366;
Object methodclosure4366;
Object classreference849;
Object localvariable4459;
Object array3520;
Object method4367;
Object methodclosure4367;
Object localvariable4460;
Object array3521;
Object send32350;
Object method4368;
Object methodclosure4368;
Object classreference850;
Object localvariable4461;
Object array3522;
Object localvariable4462;
Object array3523;
Object variable218;
Object array3524;
Object send32351;
Object constant6313;
Object send32352;
Object super370;
Object send32353;
Object block2011;
Object send32354;
Object string3763;
Object constant6314;
Object send32355;
Object send32356;
Object string3764;
Object constant6315;
Object send32357;
Object send32358;
Object assign3933;
Object send32359;
Object send32360;
Object block2012;
Object send32361;
Object method4369;
Object methodclosure4369;
Object classreference851;
Object classreference852;

void SCParserTest_create_ast() {
objectlayout1267 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable992 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout1267)->values[0] = instancevariable992;
instancevariable993 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout1267)->values[1] = instancevariable993;
instancevariable994 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout1267)->values[2] = instancevariable994;
instancevariable995 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1267)->values[3] = instancevariable995;
instancevariable996 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout1267)->values[4] = instancevariable996;
symbol5368 = (Object)new_Type_Symbol_cached(L"Collection");
class684 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1267);
((Type_Class)class684)->name = (Type_Symbol)symbol5368;
metaclass684 = (Object)HEADER(class684);
objectlayout1268 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1268)->values[0] = instancevariable992;
((Type_Array)objectlayout1268)->values[1] = instancevariable993;
((Type_Array)objectlayout1268)->values[2] = instancevariable994;
((Type_Array)objectlayout1268)->values[3] = instancevariable995;
((Type_Array)objectlayout1268)->values[4] = instancevariable996;
symbol5367 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class685 = (Object)new_Class_withMeta((Object)class684, empty_object_layout, objectlayout1268);
((Type_Class)class685)->name = (Type_Symbol)symbol5367;
metaclass685 = (Object)HEADER(class685);
objectlayout1269 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1269)->values[0] = instancevariable992;
((Type_Array)objectlayout1269)->values[1] = instancevariable993;
((Type_Array)objectlayout1269)->values[2] = instancevariable994;
((Type_Array)objectlayout1269)->values[3] = instancevariable995;
((Type_Array)objectlayout1269)->values[4] = instancevariable996;
symbol5366 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class686 = (Object)new_Class_withMeta((Object)class685, empty_object_layout, objectlayout1269);
((Type_Class)class686)->name = (Type_Symbol)symbol5366;
metaclass686 = (Object)HEADER(class686);
objectlayout1270 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1270)->values[0] = instancevariable992;
((Type_Array)objectlayout1270)->values[1] = instancevariable993;
((Type_Array)objectlayout1270)->values[2] = instancevariable994;
((Type_Array)objectlayout1270)->values[3] = instancevariable995;
((Type_Array)objectlayout1270)->values[4] = instancevariable996;
symbol5233 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout1271 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable997 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout1271)->values[0] = instancevariable997;
instancevariable998 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout1271)->values[1] = instancevariable998;
instancevariable999 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout1271)->values[2] = instancevariable999;
class687 = (Object)new_Class_withMeta((Object)class685, objectlayout1271, objectlayout1270);
((Type_Class)class687)->name = (Type_Symbol)symbol5233;
metaclass687 = (Object)HEADER(class687);
objectlayout1272 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1272)->values[0] = instancevariable992;
((Type_Array)objectlayout1272)->values[1] = instancevariable993;
((Type_Array)objectlayout1272)->values[2] = instancevariable994;
((Type_Array)objectlayout1272)->values[3] = instancevariable995;
((Type_Array)objectlayout1272)->values[4] = instancevariable996;
symbol5541 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout1273 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable1000 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout1273)->values[0] = instancevariable1000;
instancevariable1001 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout1273)->values[1] = instancevariable1001;
class688 = (Object)new_Class_withMeta((Object)class684, objectlayout1273, objectlayout1272);
((Type_Class)class688)->name = (Type_Symbol)symbol5541;
metaclass688 = (Object)HEADER(class688);
objectlayout1274 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1274)->values[0] = instancevariable992;
((Type_Array)objectlayout1274)->values[1] = instancevariable993;
((Type_Array)objectlayout1274)->values[2] = instancevariable994;
((Type_Array)objectlayout1274)->values[3] = instancevariable995;
((Type_Array)objectlayout1274)->values[4] = instancevariable996;
symbol5350 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout1275 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1002 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout1275)->values[0] = instancevariable1002;
instancevariable1003 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout1275)->values[1] = instancevariable1003;
instancevariable1004 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout1275)->values[2] = instancevariable1004;
class689 = (Object)new_Class_withMeta((Object)class684, objectlayout1275, objectlayout1274);
((Type_Class)class689)->name = (Type_Symbol)symbol5350;
metaclass689 = (Object)HEADER(class689);
objectlayout1276 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1276)->values[0] = instancevariable992;
((Type_Array)objectlayout1276)->values[1] = instancevariable993;
((Type_Array)objectlayout1276)->values[2] = instancevariable994;
((Type_Array)objectlayout1276)->values[3] = instancevariable995;
((Type_Array)objectlayout1276)->values[4] = instancevariable996;
symbol5344 = (Object)new_Type_Symbol_cached(L"Stream");
class690 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1276);
((Type_Class)class690)->name = (Type_Symbol)symbol5344;
metaclass690 = (Object)HEADER(class690);
objectlayout1277 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1277)->values[0] = instancevariable992;
((Type_Array)objectlayout1277)->values[1] = instancevariable993;
((Type_Array)objectlayout1277)->values[2] = instancevariable994;
((Type_Array)objectlayout1277)->values[3] = instancevariable995;
((Type_Array)objectlayout1277)->values[4] = instancevariable996;
symbol5343 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout1278 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1005 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout1278)->values[0] = instancevariable1005;
instancevariable1006 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout1278)->values[1] = instancevariable1006;
instancevariable1007 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout1278)->values[2] = instancevariable1007;
class691 = (Object)new_Class_withMeta((Object)class690, objectlayout1278, objectlayout1277);
((Type_Class)class691)->name = (Type_Symbol)symbol5343;
metaclass691 = (Object)HEADER(class691);
objectlayout1279 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1279)->values[0] = instancevariable992;
((Type_Array)objectlayout1279)->values[1] = instancevariable993;
((Type_Array)objectlayout1279)->values[2] = instancevariable994;
((Type_Array)objectlayout1279)->values[3] = instancevariable995;
((Type_Array)objectlayout1279)->values[4] = instancevariable996;
symbol5342 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout1280 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1280)->values[0] = instancevariable1005;
((Type_Array)objectlayout1280)->values[1] = instancevariable1006;
((Type_Array)objectlayout1280)->values[2] = instancevariable1007;
class692 = (Object)new_Class_withMeta((Object)class691, objectlayout1280, objectlayout1279);
((Type_Class)class692)->name = (Type_Symbol)symbol5342;
metaclass692 = (Object)HEADER(class692);
objectlayout1281 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1281)->values[0] = instancevariable992;
((Type_Array)objectlayout1281)->values[1] = instancevariable993;
((Type_Array)objectlayout1281)->values[2] = instancevariable994;
((Type_Array)objectlayout1281)->values[3] = instancevariable995;
((Type_Array)objectlayout1281)->values[4] = instancevariable996;
symbol5504 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout1282 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable1008 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout1282)->values[0] = instancevariable1008;
instancevariable1009 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout1282)->values[1] = instancevariable1009;
class693 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1282, objectlayout1281);
((Type_Class)class693)->name = (Type_Symbol)symbol5504;
metaclass693 = (Object)HEADER(class693);
objectlayout1283 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1283)->values[0] = instancevariable992;
((Type_Array)objectlayout1283)->values[1] = instancevariable993;
((Type_Array)objectlayout1283)->values[2] = instancevariable994;
((Type_Array)objectlayout1283)->values[3] = instancevariable995;
((Type_Array)objectlayout1283)->values[4] = instancevariable996;
symbol5512 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout1284 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1284)->values[0] = instancevariable1008;
((Type_Array)objectlayout1284)->values[1] = instancevariable1009;
instancevariable1010 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout1284)->values[2] = instancevariable1010;
instancevariable1011 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1284)->values[3] = instancevariable1011;
class694 = (Object)new_Class_withMeta((Object)class693, objectlayout1284, objectlayout1283);
((Type_Class)class694)->name = (Type_Symbol)symbol5512;
metaclass694 = (Object)HEADER(class694);
objectlayout1285 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1285)->values[0] = instancevariable992;
((Type_Array)objectlayout1285)->values[1] = instancevariable993;
((Type_Array)objectlayout1285)->values[2] = instancevariable994;
((Type_Array)objectlayout1285)->values[3] = instancevariable995;
((Type_Array)objectlayout1285)->values[4] = instancevariable996;
symbol5508 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout1286 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1286)->values[0] = instancevariable1008;
((Type_Array)objectlayout1286)->values[1] = instancevariable1009;
instancevariable1012 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout1286)->values[2] = instancevariable1012;
instancevariable1013 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1286)->values[3] = instancevariable1013;
class695 = (Object)new_Class_withMeta((Object)class693, objectlayout1286, objectlayout1285);
((Type_Class)class695)->name = (Type_Symbol)symbol5508;
metaclass695 = (Object)HEADER(class695);
objectlayout1287 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1287)->values[0] = instancevariable992;
((Type_Array)objectlayout1287)->values[1] = instancevariable993;
((Type_Array)objectlayout1287)->values[2] = instancevariable994;
((Type_Array)objectlayout1287)->values[3] = instancevariable995;
((Type_Array)objectlayout1287)->values[4] = instancevariable996;
symbol5520 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout1288 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1288)->values[0] = instancevariable1008;
((Type_Array)objectlayout1288)->values[1] = instancevariable1009;
((Type_Array)objectlayout1288)->values[2] = instancevariable1012;
((Type_Array)objectlayout1288)->values[3] = instancevariable1013;
class696 = (Object)new_Class_withMeta((Object)class695, objectlayout1288, objectlayout1287);
((Type_Class)class696)->name = (Type_Symbol)symbol5520;
metaclass696 = (Object)HEADER(class696);
objectlayout1289 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1289)->values[0] = instancevariable992;
((Type_Array)objectlayout1289)->values[1] = instancevariable993;
((Type_Array)objectlayout1289)->values[2] = instancevariable994;
((Type_Array)objectlayout1289)->values[3] = instancevariable995;
((Type_Array)objectlayout1289)->values[4] = instancevariable996;
symbol5551 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class697 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1289);
((Type_Class)class697)->name = (Type_Symbol)symbol5551;
metaclass697 = (Object)HEADER(class697);
objectlayout1290 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1290)->values[0] = instancevariable992;
((Type_Array)objectlayout1290)->values[1] = instancevariable993;
((Type_Array)objectlayout1290)->values[2] = instancevariable994;
((Type_Array)objectlayout1290)->values[3] = instancevariable995;
((Type_Array)objectlayout1290)->values[4] = instancevariable996;
symbol5548 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout1291 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1014 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout1291)->values[0] = instancevariable1014;
class698 = (Object)new_Class_withMeta((Object)class697, objectlayout1291, objectlayout1290);
((Type_Class)class698)->name = (Type_Symbol)symbol5548;
metaclass698 = (Object)HEADER(class698);
objectlayout1292 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1292)->values[0] = instancevariable992;
((Type_Array)objectlayout1292)->values[1] = instancevariable993;
((Type_Array)objectlayout1292)->values[2] = instancevariable994;
((Type_Array)objectlayout1292)->values[3] = instancevariable995;
((Type_Array)objectlayout1292)->values[4] = instancevariable996;
symbol5288 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout1293 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1293)->values[0] = instancevariable1008;
((Type_Array)objectlayout1293)->values[1] = instancevariable1009;
instancevariable1015 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout1293)->values[2] = instancevariable1015;
instancevariable1016 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout1293)->values[3] = instancevariable1016;
instancevariable1017 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout1293)->values[4] = instancevariable1017;
instancevariable1018 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout1293)->values[5] = instancevariable1018;
class699 = (Object)new_Class_withMeta((Object)class693, objectlayout1293, objectlayout1292);
((Type_Class)class699)->name = (Type_Symbol)symbol5288;
metaclass699 = (Object)HEADER(class699);
objectlayout1294 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1294)->values[0] = instancevariable992;
((Type_Array)objectlayout1294)->values[1] = instancevariable993;
((Type_Array)objectlayout1294)->values[2] = instancevariable994;
((Type_Array)objectlayout1294)->values[3] = instancevariable995;
((Type_Array)objectlayout1294)->values[4] = instancevariable996;
symbol5222 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout1295 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1295)->values[0] = instancevariable1005;
((Type_Array)objectlayout1295)->values[1] = instancevariable1006;
((Type_Array)objectlayout1295)->values[2] = instancevariable1007;
instancevariable1019 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout1295)->values[3] = instancevariable1019;
instancevariable1020 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout1295)->values[4] = instancevariable1020;
class700 = (Object)new_Class_withMeta((Object)class692, objectlayout1295, objectlayout1294);
((Type_Class)class700)->name = (Type_Symbol)symbol5222;
metaclass700 = (Object)HEADER(class700);
objectlayout1296 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1296)->values[0] = instancevariable992;
((Type_Array)objectlayout1296)->values[1] = instancevariable993;
((Type_Array)objectlayout1296)->values[2] = instancevariable994;
((Type_Array)objectlayout1296)->values[3] = instancevariable995;
((Type_Array)objectlayout1296)->values[4] = instancevariable996;
symbol5549 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class701 = (Object)new_Class_withMeta((Object)class697, empty_object_layout, objectlayout1296);
((Type_Class)class701)->name = (Type_Symbol)symbol5549;
metaclass701 = (Object)HEADER(class701);
objectlayout1297 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1297)->values[0] = instancevariable992;
((Type_Array)objectlayout1297)->values[1] = instancevariable993;
((Type_Array)objectlayout1297)->values[2] = instancevariable994;
((Type_Array)objectlayout1297)->values[3] = instancevariable995;
((Type_Array)objectlayout1297)->values[4] = instancevariable996;
symbol5522 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout1298 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1298)->values[0] = instancevariable1008;
((Type_Array)objectlayout1298)->values[1] = instancevariable1009;
instancevariable1021 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout1298)->values[2] = instancevariable1021;
instancevariable1022 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1298)->values[3] = instancevariable1022;
class702 = (Object)new_Class_withMeta((Object)class693, objectlayout1298, objectlayout1297);
((Type_Class)class702)->name = (Type_Symbol)symbol5522;
metaclass702 = (Object)HEADER(class702);
objectlayout1299 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1299)->values[0] = instancevariable992;
((Type_Array)objectlayout1299)->values[1] = instancevariable993;
((Type_Array)objectlayout1299)->values[2] = instancevariable994;
((Type_Array)objectlayout1299)->values[3] = instancevariable995;
((Type_Array)objectlayout1299)->values[4] = instancevariable996;
symbol5507 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout1300 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1300)->values[0] = instancevariable1008;
((Type_Array)objectlayout1300)->values[1] = instancevariable1009;
instancevariable1023 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout1300)->values[2] = instancevariable1023;
class703 = (Object)new_Class_withMeta((Object)class693, objectlayout1300, objectlayout1299);
((Type_Class)class703)->name = (Type_Symbol)symbol5507;
metaclass703 = (Object)HEADER(class703);
objectlayout1301 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1301)->values[0] = instancevariable992;
((Type_Array)objectlayout1301)->values[1] = instancevariable993;
((Type_Array)objectlayout1301)->values[2] = instancevariable994;
((Type_Array)objectlayout1301)->values[3] = instancevariable995;
((Type_Array)objectlayout1301)->values[4] = instancevariable996;
instancevariable1024 = (Object)new_AST_InstVariable(5, L"uidCounter");
((Type_Array)objectlayout1301)->values[5] = instancevariable1024;
symbol5355 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout1302 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1025 = (Object)new_AST_InstVariable(0, L"sourceObject");
((Type_Array)objectlayout1302)->values[0] = instancevariable1025;
instancevariable1026 = (Object)new_AST_InstVariable(1, L"uid");
((Type_Array)objectlayout1302)->values[1] = instancevariable1026;
instancevariable1027 = (Object)new_AST_InstVariable(2, L"id");
((Type_Array)objectlayout1302)->values[2] = instancevariable1027;
class704 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1302, objectlayout1301);
((Type_Class)class704)->name = (Type_Symbol)symbol5355;
metaclass704 = (Object)HEADER(class704);
objectlayout1303 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1303)->values[0] = instancevariable992;
((Type_Array)objectlayout1303)->values[1] = instancevariable993;
((Type_Array)objectlayout1303)->values[2] = instancevariable994;
((Type_Array)objectlayout1303)->values[3] = instancevariable995;
((Type_Array)objectlayout1303)->values[4] = instancevariable996;
((Type_Array)objectlayout1303)->values[5] = instancevariable1024;
symbol5354 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout1304 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1304)->values[0] = instancevariable1025;
((Type_Array)objectlayout1304)->values[1] = instancevariable1026;
((Type_Array)objectlayout1304)->values[2] = instancevariable1027;
class705 = (Object)new_Class_withMeta((Object)class704, objectlayout1304, objectlayout1303);
((Type_Class)class705)->name = (Type_Symbol)symbol5354;
metaclass705 = (Object)HEADER(class705);
objectlayout1305 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1305)->values[0] = instancevariable992;
((Type_Array)objectlayout1305)->values[1] = instancevariable993;
((Type_Array)objectlayout1305)->values[2] = instancevariable994;
((Type_Array)objectlayout1305)->values[3] = instancevariable995;
((Type_Array)objectlayout1305)->values[4] = instancevariable996;
((Type_Array)objectlayout1305)->values[5] = instancevariable1024;
symbol5224 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout1306 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1306)->values[0] = instancevariable1025;
((Type_Array)objectlayout1306)->values[1] = instancevariable1026;
((Type_Array)objectlayout1306)->values[2] = instancevariable1027;
instancevariable1028 = (Object)new_AST_InstVariable(3, L"literals");
((Type_Array)objectlayout1306)->values[3] = instancevariable1028;
class706 = (Object)new_Class_withMeta((Object)class705, objectlayout1306, objectlayout1305);
((Type_Class)class706)->name = (Type_Symbol)symbol5224;
metaclass706 = (Object)HEADER(class706);
objectlayout1307 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1307)->values[0] = instancevariable992;
((Type_Array)objectlayout1307)->values[1] = instancevariable993;
((Type_Array)objectlayout1307)->values[2] = instancevariable994;
((Type_Array)objectlayout1307)->values[3] = instancevariable995;
((Type_Array)objectlayout1307)->values[4] = instancevariable996;
((Type_Array)objectlayout1307)->values[5] = instancevariable1024;
symbol5402 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout1308 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1308)->values[0] = instancevariable1025;
((Type_Array)objectlayout1308)->values[1] = instancevariable1026;
((Type_Array)objectlayout1308)->values[2] = instancevariable1027;
instancevariable1029 = (Object)new_AST_InstVariable(3, L"selector");
((Type_Array)objectlayout1308)->values[3] = instancevariable1029;
class707 = (Object)new_Class_withMeta((Object)class704, objectlayout1308, objectlayout1307);
((Type_Class)class707)->name = (Type_Symbol)symbol5402;
metaclass707 = (Object)HEADER(class707);
objectlayout1309 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1309)->values[0] = instancevariable992;
((Type_Array)objectlayout1309)->values[1] = instancevariable993;
((Type_Array)objectlayout1309)->values[2] = instancevariable994;
((Type_Array)objectlayout1309)->values[3] = instancevariable995;
((Type_Array)objectlayout1309)->values[4] = instancevariable996;
((Type_Array)objectlayout1309)->values[5] = instancevariable1024;
symbol5285 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout1310 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1310)->values[0] = instancevariable1025;
((Type_Array)objectlayout1310)->values[1] = instancevariable1026;
((Type_Array)objectlayout1310)->values[2] = instancevariable1027;
((Type_Array)objectlayout1310)->values[3] = instancevariable1029;
instancevariable1030 = (Object)new_AST_InstVariable(4, L"keywords");
((Type_Array)objectlayout1310)->values[4] = instancevariable1030;
class708 = (Object)new_Class_withMeta((Object)class707, objectlayout1310, objectlayout1309);
((Type_Class)class708)->name = (Type_Symbol)symbol5285;
metaclass708 = (Object)HEADER(class708);
objectlayout1311 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1311)->values[0] = instancevariable992;
((Type_Array)objectlayout1311)->values[1] = instancevariable993;
((Type_Array)objectlayout1311)->values[2] = instancevariable994;
((Type_Array)objectlayout1311)->values[3] = instancevariable995;
((Type_Array)objectlayout1311)->values[4] = instancevariable996;
((Type_Array)objectlayout1311)->values[5] = instancevariable1024;
symbol5252 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout1312 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1312)->values[0] = instancevariable1025;
((Type_Array)objectlayout1312)->values[1] = instancevariable1026;
((Type_Array)objectlayout1312)->values[2] = instancevariable1027;
((Type_Array)objectlayout1312)->values[3] = instancevariable1029;
((Type_Array)objectlayout1312)->values[4] = instancevariable1030;
instancevariable1031 = (Object)new_AST_InstVariable(5, L"parameters");
((Type_Array)objectlayout1312)->values[5] = instancevariable1031;
class709 = (Object)new_Class_withMeta((Object)class708, objectlayout1312, objectlayout1311);
((Type_Class)class709)->name = (Type_Symbol)symbol5252;
metaclass709 = (Object)HEADER(class709);
objectlayout1313 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1313)->values[0] = instancevariable992;
((Type_Array)objectlayout1313)->values[1] = instancevariable993;
((Type_Array)objectlayout1313)->values[2] = instancevariable994;
((Type_Array)objectlayout1313)->values[3] = instancevariable995;
((Type_Array)objectlayout1313)->values[4] = instancevariable996;
((Type_Array)objectlayout1313)->values[5] = instancevariable1024;
symbol5396 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout1314 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1314)->values[0] = instancevariable1025;
((Type_Array)objectlayout1314)->values[1] = instancevariable1026;
((Type_Array)objectlayout1314)->values[2] = instancevariable1027;
class710 = (Object)new_Class_withMeta((Object)class704, objectlayout1314, objectlayout1313);
((Type_Class)class710)->name = (Type_Symbol)symbol5396;
metaclass710 = (Object)HEADER(class710);
objectlayout1315 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1315)->values[0] = instancevariable992;
((Type_Array)objectlayout1315)->values[1] = instancevariable993;
((Type_Array)objectlayout1315)->values[2] = instancevariable994;
((Type_Array)objectlayout1315)->values[3] = instancevariable995;
((Type_Array)objectlayout1315)->values[4] = instancevariable996;
((Type_Array)objectlayout1315)->values[5] = instancevariable1024;
symbol5487 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout1316 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1316)->values[0] = instancevariable1025;
((Type_Array)objectlayout1316)->values[1] = instancevariable1026;
((Type_Array)objectlayout1316)->values[2] = instancevariable1027;
instancevariable1032 = (Object)new_AST_InstVariable(3, L"expressions");
((Type_Array)objectlayout1316)->values[3] = instancevariable1032;
class711 = (Object)new_Class_withMeta((Object)class710, objectlayout1316, objectlayout1315);
((Type_Class)class711)->name = (Type_Symbol)symbol5487;
metaclass711 = (Object)HEADER(class711);
objectlayout1317 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1317)->values[0] = instancevariable992;
((Type_Array)objectlayout1317)->values[1] = instancevariable993;
((Type_Array)objectlayout1317)->values[2] = instancevariable994;
((Type_Array)objectlayout1317)->values[3] = instancevariable995;
((Type_Array)objectlayout1317)->values[4] = instancevariable996;
((Type_Array)objectlayout1317)->values[5] = instancevariable1024;
symbol5272 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout1318 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1318)->values[0] = instancevariable1025;
((Type_Array)objectlayout1318)->values[1] = instancevariable1026;
((Type_Array)objectlayout1318)->values[2] = instancevariable1027;
instancevariable1033 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout1318)->values[3] = instancevariable1033;
instancevariable1034 = (Object)new_AST_InstVariable(4, L"temporaries");
((Type_Array)objectlayout1318)->values[4] = instancevariable1034;
instancevariable1035 = (Object)new_AST_InstVariable(5, L"statements");
((Type_Array)objectlayout1318)->values[5] = instancevariable1035;
class712 = (Object)new_Class_withMeta((Object)class704, objectlayout1318, objectlayout1317);
((Type_Class)class712)->name = (Type_Symbol)symbol5272;
metaclass712 = (Object)HEADER(class712);
objectlayout1319 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1319)->values[0] = instancevariable992;
((Type_Array)objectlayout1319)->values[1] = instancevariable993;
((Type_Array)objectlayout1319)->values[2] = instancevariable994;
((Type_Array)objectlayout1319)->values[3] = instancevariable995;
((Type_Array)objectlayout1319)->values[4] = instancevariable996;
((Type_Array)objectlayout1319)->values[5] = instancevariable1024;
symbol5401 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout1320 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1320)->values[0] = instancevariable1025;
((Type_Array)objectlayout1320)->values[1] = instancevariable1026;
((Type_Array)objectlayout1320)->values[2] = instancevariable1027;
((Type_Array)objectlayout1320)->values[3] = instancevariable1029;
class713 = (Object)new_Class_withMeta((Object)class707, objectlayout1320, objectlayout1319);
((Type_Class)class713)->name = (Type_Symbol)symbol5401;
metaclass713 = (Object)HEADER(class713);
objectlayout1321 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1321)->values[0] = instancevariable992;
((Type_Array)objectlayout1321)->values[1] = instancevariable993;
((Type_Array)objectlayout1321)->values[2] = instancevariable994;
((Type_Array)objectlayout1321)->values[3] = instancevariable995;
((Type_Array)objectlayout1321)->values[4] = instancevariable996;
((Type_Array)objectlayout1321)->values[5] = instancevariable1024;
symbol5245 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout1322 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1322)->values[0] = instancevariable1025;
((Type_Array)objectlayout1322)->values[1] = instancevariable1026;
((Type_Array)objectlayout1322)->values[2] = instancevariable1027;
((Type_Array)objectlayout1322)->values[3] = instancevariable1029;
instancevariable1036 = (Object)new_AST_InstVariable(4, L"parameter");
((Type_Array)objectlayout1322)->values[4] = instancevariable1036;
class714 = (Object)new_Class_withMeta((Object)class713, objectlayout1322, objectlayout1321);
((Type_Class)class714)->name = (Type_Symbol)symbol5245;
metaclass714 = (Object)HEADER(class714);
objectlayout1323 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1323)->values[0] = instancevariable992;
((Type_Array)objectlayout1323)->values[1] = instancevariable993;
((Type_Array)objectlayout1323)->values[2] = instancevariable994;
((Type_Array)objectlayout1323)->values[3] = instancevariable995;
((Type_Array)objectlayout1323)->values[4] = instancevariable996;
((Type_Array)objectlayout1323)->values[5] = instancevariable1024;
symbol5234 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout1324 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1324)->values[0] = instancevariable1025;
((Type_Array)objectlayout1324)->values[1] = instancevariable1026;
((Type_Array)objectlayout1324)->values[2] = instancevariable1027;
instancevariable1037 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1324)->values[3] = instancevariable1037;
instancevariable1038 = (Object)new_AST_InstVariable(4, L"type");
((Type_Array)objectlayout1324)->values[4] = instancevariable1038;
class715 = (Object)new_Class_withMeta((Object)class704, objectlayout1324, objectlayout1323);
((Type_Class)class715)->name = (Type_Symbol)symbol5234;
metaclass715 = (Object)HEADER(class715);
objectlayout1325 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1325)->values[0] = instancevariable992;
((Type_Array)objectlayout1325)->values[1] = instancevariable993;
((Type_Array)objectlayout1325)->values[2] = instancevariable994;
((Type_Array)objectlayout1325)->values[3] = instancevariable995;
((Type_Array)objectlayout1325)->values[4] = instancevariable996;
((Type_Array)objectlayout1325)->values[5] = instancevariable1024;
symbol5265 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout1326 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1326)->values[0] = instancevariable1025;
((Type_Array)objectlayout1326)->values[1] = instancevariable1026;
((Type_Array)objectlayout1326)->values[2] = instancevariable1027;
instancevariable1039 = (Object)new_AST_InstVariable(3, L"expression");
((Type_Array)objectlayout1326)->values[3] = instancevariable1039;
class716 = (Object)new_Class_withMeta((Object)class710, objectlayout1326, objectlayout1325);
((Type_Class)class716)->name = (Type_Symbol)symbol5265;
metaclass716 = (Object)HEADER(class716);
objectlayout1327 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1327)->values[0] = instancevariable992;
((Type_Array)objectlayout1327)->values[1] = instancevariable993;
((Type_Array)objectlayout1327)->values[2] = instancevariable994;
((Type_Array)objectlayout1327)->values[3] = instancevariable995;
((Type_Array)objectlayout1327)->values[4] = instancevariable996;
((Type_Array)objectlayout1327)->values[5] = instancevariable1024;
symbol5255 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout1328 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1328)->values[0] = instancevariable1025;
((Type_Array)objectlayout1328)->values[1] = instancevariable1026;
((Type_Array)objectlayout1328)->values[2] = instancevariable1027;
instancevariable1040 = (Object)new_AST_InstVariable(3, L"variable");
((Type_Array)objectlayout1328)->values[3] = instancevariable1040;
instancevariable1041 = (Object)new_AST_InstVariable(4, L"expression");
((Type_Array)objectlayout1328)->values[4] = instancevariable1041;
class717 = (Object)new_Class_withMeta((Object)class710, objectlayout1328, objectlayout1327);
((Type_Class)class717)->name = (Type_Symbol)symbol5255;
metaclass717 = (Object)HEADER(class717);
objectlayout1329 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1329)->values[0] = instancevariable992;
((Type_Array)objectlayout1329)->values[1] = instancevariable993;
((Type_Array)objectlayout1329)->values[2] = instancevariable994;
((Type_Array)objectlayout1329)->values[3] = instancevariable995;
((Type_Array)objectlayout1329)->values[4] = instancevariable996;
((Type_Array)objectlayout1329)->values[5] = instancevariable1024;
symbol5236 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout1330 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1330)->values[0] = instancevariable1025;
((Type_Array)objectlayout1330)->values[1] = instancevariable1026;
((Type_Array)objectlayout1330)->values[2] = instancevariable1027;
instancevariable1042 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout1330)->values[3] = instancevariable1042;
instancevariable1043 = (Object)new_AST_InstVariable(4, L"cascades");
((Type_Array)objectlayout1330)->values[4] = instancevariable1043;
class718 = (Object)new_Class_withMeta((Object)class710, objectlayout1330, objectlayout1329);
((Type_Class)class718)->name = (Type_Symbol)symbol5236;
metaclass718 = (Object)HEADER(class718);
objectlayout1331 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1331)->values[0] = instancevariable992;
((Type_Array)objectlayout1331)->values[1] = instancevariable993;
((Type_Array)objectlayout1331)->values[2] = instancevariable994;
((Type_Array)objectlayout1331)->values[3] = instancevariable995;
((Type_Array)objectlayout1331)->values[4] = instancevariable996;
((Type_Array)objectlayout1331)->values[5] = instancevariable1024;
symbol5228 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout1332 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1332)->values[0] = instancevariable1025;
((Type_Array)objectlayout1332)->values[1] = instancevariable1026;
((Type_Array)objectlayout1332)->values[2] = instancevariable1027;
instancevariable1044 = (Object)new_AST_InstVariable(3, L"number");
((Type_Array)objectlayout1332)->values[3] = instancevariable1044;
instancevariable1045 = (Object)new_AST_InstVariable(4, L"base");
((Type_Array)objectlayout1332)->values[4] = instancevariable1045;
class719 = (Object)new_Class_withMeta((Object)class705, objectlayout1332, objectlayout1331);
((Type_Class)class719)->name = (Type_Symbol)symbol5228;
metaclass719 = (Object)HEADER(class719);
objectlayout1333 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1333)->values[0] = instancevariable992;
((Type_Array)objectlayout1333)->values[1] = instancevariable993;
((Type_Array)objectlayout1333)->values[2] = instancevariable994;
((Type_Array)objectlayout1333)->values[3] = instancevariable995;
((Type_Array)objectlayout1333)->values[4] = instancevariable996;
((Type_Array)objectlayout1333)->values[5] = instancevariable1024;
symbol5295 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout1334 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1334)->values[0] = instancevariable1025;
((Type_Array)objectlayout1334)->values[1] = instancevariable1026;
((Type_Array)objectlayout1334)->values[2] = instancevariable1027;
instancevariable1046 = (Object)new_AST_InstVariable(3, L"char");
((Type_Array)objectlayout1334)->values[3] = instancevariable1046;
class720 = (Object)new_Class_withMeta((Object)class705, objectlayout1334, objectlayout1333);
((Type_Class)class720)->name = (Type_Symbol)symbol5295;
metaclass720 = (Object)HEADER(class720);
objectlayout1335 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1335)->values[0] = instancevariable992;
((Type_Array)objectlayout1335)->values[1] = instancevariable993;
((Type_Array)objectlayout1335)->values[2] = instancevariable994;
((Type_Array)objectlayout1335)->values[3] = instancevariable995;
((Type_Array)objectlayout1335)->values[4] = instancevariable996;
((Type_Array)objectlayout1335)->values[5] = instancevariable1024;
symbol5276 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout1336 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1336)->values[0] = instancevariable1025;
((Type_Array)objectlayout1336)->values[1] = instancevariable1026;
((Type_Array)objectlayout1336)->values[2] = instancevariable1027;
((Type_Array)objectlayout1336)->values[3] = instancevariable1029;
((Type_Array)objectlayout1336)->values[4] = instancevariable1030;
instancevariable1047 = (Object)new_AST_InstVariable(5, L"arguments");
((Type_Array)objectlayout1336)->values[5] = instancevariable1047;
class721 = (Object)new_Class_withMeta((Object)class708, objectlayout1336, objectlayout1335);
((Type_Class)class721)->name = (Type_Symbol)symbol5276;
metaclass721 = (Object)HEADER(class721);
objectlayout1337 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1337)->values[0] = instancevariable992;
((Type_Array)objectlayout1337)->values[1] = instancevariable993;
((Type_Array)objectlayout1337)->values[2] = instancevariable994;
((Type_Array)objectlayout1337)->values[3] = instancevariable995;
((Type_Array)objectlayout1337)->values[4] = instancevariable996;
((Type_Array)objectlayout1337)->values[5] = instancevariable1024;
symbol5237 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout1338 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1338)->values[0] = instancevariable1025;
((Type_Array)objectlayout1338)->values[1] = instancevariable1026;
((Type_Array)objectlayout1338)->values[2] = instancevariable1027;
((Type_Array)objectlayout1338)->values[3] = instancevariable1029;
instancevariable1048 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1338)->values[4] = instancevariable1048;
instancevariable1049 = (Object)new_AST_InstVariable(5, L"argument");
((Type_Array)objectlayout1338)->values[5] = instancevariable1049;
class722 = (Object)new_Class_withMeta((Object)class713, objectlayout1338, objectlayout1337);
((Type_Class)class722)->name = (Type_Symbol)symbol5237;
metaclass722 = (Object)HEADER(class722);
objectlayout1339 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1339)->values[0] = instancevariable992;
((Type_Array)objectlayout1339)->values[1] = instancevariable993;
((Type_Array)objectlayout1339)->values[2] = instancevariable994;
((Type_Array)objectlayout1339)->values[3] = instancevariable995;
((Type_Array)objectlayout1339)->values[4] = instancevariable996;
((Type_Array)objectlayout1339)->values[5] = instancevariable1024;
symbol5229 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout1340 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1340)->values[0] = instancevariable1025;
((Type_Array)objectlayout1340)->values[1] = instancevariable1026;
((Type_Array)objectlayout1340)->values[2] = instancevariable1027;
instancevariable1050 = (Object)new_AST_InstVariable(3, L"symbol");
((Type_Array)objectlayout1340)->values[3] = instancevariable1050;
class723 = (Object)new_Class_withMeta((Object)class705, objectlayout1340, objectlayout1339);
((Type_Class)class723)->name = (Type_Symbol)symbol5229;
metaclass723 = (Object)HEADER(class723);
objectlayout1341 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1341)->values[0] = instancevariable992;
((Type_Array)objectlayout1341)->values[1] = instancevariable993;
((Type_Array)objectlayout1341)->values[2] = instancevariable994;
((Type_Array)objectlayout1341)->values[3] = instancevariable995;
((Type_Array)objectlayout1341)->values[4] = instancevariable996;
((Type_Array)objectlayout1341)->values[5] = instancevariable1024;
symbol5257 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout1342 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1342)->values[0] = instancevariable1025;
((Type_Array)objectlayout1342)->values[1] = instancevariable1026;
((Type_Array)objectlayout1342)->values[2] = instancevariable1027;
((Type_Array)objectlayout1342)->values[3] = instancevariable1029;
class724 = (Object)new_Class_withMeta((Object)class707, objectlayout1342, objectlayout1341);
((Type_Class)class724)->name = (Type_Symbol)symbol5257;
metaclass724 = (Object)HEADER(class724);
objectlayout1343 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1343)->values[0] = instancevariable992;
((Type_Array)objectlayout1343)->values[1] = instancevariable993;
((Type_Array)objectlayout1343)->values[2] = instancevariable994;
((Type_Array)objectlayout1343)->values[3] = instancevariable995;
((Type_Array)objectlayout1343)->values[4] = instancevariable996;
((Type_Array)objectlayout1343)->values[5] = instancevariable1024;
symbol5277 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout1344 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1344)->values[0] = instancevariable1025;
((Type_Array)objectlayout1344)->values[1] = instancevariable1026;
((Type_Array)objectlayout1344)->values[2] = instancevariable1027;
((Type_Array)objectlayout1344)->values[3] = instancevariable1029;
class725 = (Object)new_Class_withMeta((Object)class724, objectlayout1344, objectlayout1343);
((Type_Class)class725)->name = (Type_Symbol)symbol5277;
metaclass725 = (Object)HEADER(class725);
objectlayout1345 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1345)->values[0] = instancevariable992;
((Type_Array)objectlayout1345)->values[1] = instancevariable993;
((Type_Array)objectlayout1345)->values[2] = instancevariable994;
((Type_Array)objectlayout1345)->values[3] = instancevariable995;
((Type_Array)objectlayout1345)->values[4] = instancevariable996;
((Type_Array)objectlayout1345)->values[5] = instancevariable1024;
symbol5230 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout1346 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1346)->values[0] = instancevariable1025;
((Type_Array)objectlayout1346)->values[1] = instancevariable1026;
((Type_Array)objectlayout1346)->values[2] = instancevariable1027;
instancevariable1051 = (Object)new_AST_InstVariable(3, L"string");
((Type_Array)objectlayout1346)->values[3] = instancevariable1051;
class726 = (Object)new_Class_withMeta((Object)class705, objectlayout1346, objectlayout1345);
((Type_Class)class726)->name = (Type_Symbol)symbol5230;
metaclass726 = (Object)HEADER(class726);
objectlayout1347 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1347)->values[0] = instancevariable992;
((Type_Array)objectlayout1347)->values[1] = instancevariable993;
((Type_Array)objectlayout1347)->values[2] = instancevariable994;
((Type_Array)objectlayout1347)->values[3] = instancevariable995;
((Type_Array)objectlayout1347)->values[4] = instancevariable996;
((Type_Array)objectlayout1347)->values[5] = instancevariable1024;
symbol5238 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout1348 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1348)->values[0] = instancevariable1025;
((Type_Array)objectlayout1348)->values[1] = instancevariable1026;
((Type_Array)objectlayout1348)->values[2] = instancevariable1027;
((Type_Array)objectlayout1348)->values[3] = instancevariable1029;
((Type_Array)objectlayout1348)->values[4] = instancevariable1030;
instancevariable1052 = (Object)new_AST_InstVariable(5, L"receiver");
((Type_Array)objectlayout1348)->values[5] = instancevariable1052;
instancevariable1053 = (Object)new_AST_InstVariable(6, L"arguments");
((Type_Array)objectlayout1348)->values[6] = instancevariable1053;
class727 = (Object)new_Class_withMeta((Object)class708, objectlayout1348, objectlayout1347);
((Type_Class)class727)->name = (Type_Symbol)symbol5238;
metaclass727 = (Object)HEADER(class727);
objectlayout1349 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1349)->values[0] = instancevariable992;
((Type_Array)objectlayout1349)->values[1] = instancevariable993;
((Type_Array)objectlayout1349)->values[2] = instancevariable994;
((Type_Array)objectlayout1349)->values[3] = instancevariable995;
((Type_Array)objectlayout1349)->values[4] = instancevariable996;
((Type_Array)objectlayout1349)->values[5] = instancevariable1024;
symbol5269 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout1350 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1350)->values[0] = instancevariable1025;
((Type_Array)objectlayout1350)->values[1] = instancevariable1026;
((Type_Array)objectlayout1350)->values[2] = instancevariable1027;
class728 = (Object)new_Class_withMeta((Object)class704, objectlayout1350, objectlayout1349);
((Type_Class)class728)->name = (Type_Symbol)symbol5269;
metaclass728 = (Object)HEADER(class728);
objectlayout1351 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1351)->values[0] = instancevariable992;
((Type_Array)objectlayout1351)->values[1] = instancevariable993;
((Type_Array)objectlayout1351)->values[2] = instancevariable994;
((Type_Array)objectlayout1351)->values[3] = instancevariable995;
((Type_Array)objectlayout1351)->values[4] = instancevariable996;
((Type_Array)objectlayout1351)->values[5] = instancevariable1024;
symbol5270 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout1352 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1352)->values[0] = instancevariable1025;
((Type_Array)objectlayout1352)->values[1] = instancevariable1026;
((Type_Array)objectlayout1352)->values[2] = instancevariable1027;
class729 = (Object)new_Class_withMeta((Object)class704, objectlayout1352, objectlayout1351);
((Type_Class)class729)->name = (Type_Symbol)symbol5270;
metaclass729 = (Object)HEADER(class729);
objectlayout1353 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1353)->values[0] = instancevariable992;
((Type_Array)objectlayout1353)->values[1] = instancevariable993;
((Type_Array)objectlayout1353)->values[2] = instancevariable994;
((Type_Array)objectlayout1353)->values[3] = instancevariable995;
((Type_Array)objectlayout1353)->values[4] = instancevariable996;
((Type_Array)objectlayout1353)->values[5] = instancevariable1024;
symbol5239 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout1354 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1354)->values[0] = instancevariable1025;
((Type_Array)objectlayout1354)->values[1] = instancevariable1026;
((Type_Array)objectlayout1354)->values[2] = instancevariable1027;
((Type_Array)objectlayout1354)->values[3] = instancevariable1029;
instancevariable1054 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1354)->values[4] = instancevariable1054;
class730 = (Object)new_Class_withMeta((Object)class724, objectlayout1354, objectlayout1353);
((Type_Class)class730)->name = (Type_Symbol)symbol5239;
metaclass730 = (Object)HEADER(class730);
objectlayout1355 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1355)->values[0] = instancevariable992;
((Type_Array)objectlayout1355)->values[1] = instancevariable993;
((Type_Array)objectlayout1355)->values[2] = instancevariable994;
((Type_Array)objectlayout1355)->values[3] = instancevariable995;
((Type_Array)objectlayout1355)->values[4] = instancevariable996;
((Type_Array)objectlayout1355)->values[5] = instancevariable1024;
symbol5243 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout1356 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1356)->values[0] = instancevariable1025;
((Type_Array)objectlayout1356)->values[1] = instancevariable1026;
((Type_Array)objectlayout1356)->values[2] = instancevariable1027;
instancevariable1055 = (Object)new_AST_InstVariable(3, L"message");
((Type_Array)objectlayout1356)->values[3] = instancevariable1055;
instancevariable1056 = (Object)new_AST_InstVariable(4, L"annotations");
((Type_Array)objectlayout1356)->values[4] = instancevariable1056;
instancevariable1057 = (Object)new_AST_InstVariable(5, L"temporaries");
((Type_Array)objectlayout1356)->values[5] = instancevariable1057;
instancevariable1058 = (Object)new_AST_InstVariable(6, L"statements");
((Type_Array)objectlayout1356)->values[6] = instancevariable1058;
class731 = (Object)new_Class_withMeta((Object)class704, objectlayout1356, objectlayout1355);
((Type_Class)class731)->name = (Type_Symbol)symbol5243;
metaclass731 = (Object)HEADER(class731);
objectlayout1357 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1357)->values[0] = instancevariable992;
((Type_Array)objectlayout1357)->values[1] = instancevariable993;
((Type_Array)objectlayout1357)->values[2] = instancevariable994;
((Type_Array)objectlayout1357)->values[3] = instancevariable995;
((Type_Array)objectlayout1357)->values[4] = instancevariable996;
((Type_Array)objectlayout1357)->values[5] = instancevariable1024;
symbol5443 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout1358 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1358)->values[0] = instancevariable1025;
((Type_Array)objectlayout1358)->values[1] = instancevariable1026;
((Type_Array)objectlayout1358)->values[2] = instancevariable1027;
((Type_Array)objectlayout1358)->values[3] = instancevariable1029;
class732 = (Object)new_Class_withMeta((Object)class724, objectlayout1358, objectlayout1357);
((Type_Class)class732)->name = (Type_Symbol)symbol5443;
metaclass732 = (Object)HEADER(class732);
objectlayout1359 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1359)->values[0] = instancevariable992;
((Type_Array)objectlayout1359)->values[1] = instancevariable993;
((Type_Array)objectlayout1359)->values[2] = instancevariable994;
((Type_Array)objectlayout1359)->values[3] = instancevariable995;
((Type_Array)objectlayout1359)->values[4] = instancevariable996;
symbol5282 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout1360 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1059 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout1360)->values[0] = instancevariable1059;
instancevariable1060 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout1360)->values[1] = instancevariable1060;
instancevariable1061 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout1360)->values[2] = instancevariable1061;
class733 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1360, objectlayout1359);
((Type_Class)class733)->name = (Type_Symbol)symbol5282;
metaclass733 = (Object)HEADER(class733);
objectlayout1361 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1361)->values[0] = instancevariable992;
((Type_Array)objectlayout1361)->values[1] = instancevariable993;
((Type_Array)objectlayout1361)->values[2] = instancevariable994;
((Type_Array)objectlayout1361)->values[3] = instancevariable995;
((Type_Array)objectlayout1361)->values[4] = instancevariable996;
instancevariable1062 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout1361)->values[5] = instancevariable1062;
symbol5206 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout1362 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1063 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout1362)->values[0] = instancevariable1063;
class734 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1362, objectlayout1361);
((Type_Class)class734)->name = (Type_Symbol)symbol5206;
metaclass734 = (Object)HEADER(class734);
objectlayout1363 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1363)->values[0] = instancevariable992;
((Type_Array)objectlayout1363)->values[1] = instancevariable993;
((Type_Array)objectlayout1363)->values[2] = instancevariable994;
((Type_Array)objectlayout1363)->values[3] = instancevariable995;
((Type_Array)objectlayout1363)->values[4] = instancevariable996;
((Type_Array)objectlayout1363)->values[5] = instancevariable1062;
symbol5203 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout1364 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout1364)->values[0] = instancevariable1063;
instancevariable1064 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout1364)->values[1] = instancevariable1064;
class735 = (Object)new_Class_withMeta((Object)class734, objectlayout1364, objectlayout1363);
((Type_Class)class735)->name = (Type_Symbol)symbol5203;
metaclass735 = (Object)HEADER(class735);
objectlayout1365 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1365)->values[0] = instancevariable992;
((Type_Array)objectlayout1365)->values[1] = instancevariable993;
((Type_Array)objectlayout1365)->values[2] = instancevariable994;
((Type_Array)objectlayout1365)->values[3] = instancevariable995;
((Type_Array)objectlayout1365)->values[4] = instancevariable996;
((Type_Array)objectlayout1365)->values[5] = instancevariable1024;
symbol5533 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout1366 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1366)->values[0] = instancevariable1025;
((Type_Array)objectlayout1366)->values[1] = instancevariable1026;
((Type_Array)objectlayout1366)->values[2] = instancevariable1027;
instancevariable1065 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1366)->values[3] = instancevariable1065;
instancevariable1066 = (Object)new_AST_InstVariable(4, L"scopeId");
((Type_Array)objectlayout1366)->values[4] = instancevariable1066;
instancevariable1067 = (Object)new_AST_InstVariable(5, L"localId");
((Type_Array)objectlayout1366)->values[5] = instancevariable1067;
class736 = (Object)new_Class_withMeta((Object)class704, objectlayout1366, objectlayout1365);
((Type_Class)class736)->name = (Type_Symbol)symbol5533;
metaclass736 = (Object)HEADER(class736);
objectlayout1367 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1367)->values[0] = instancevariable992;
((Type_Array)objectlayout1367)->values[1] = instancevariable993;
((Type_Array)objectlayout1367)->values[2] = instancevariable994;
((Type_Array)objectlayout1367)->values[3] = instancevariable995;
((Type_Array)objectlayout1367)->values[4] = instancevariable996;
((Type_Array)objectlayout1367)->values[5] = instancevariable1024;
symbol5391 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout1368 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1368)->values[0] = instancevariable1025;
((Type_Array)objectlayout1368)->values[1] = instancevariable1026;
((Type_Array)objectlayout1368)->values[2] = instancevariable1027;
((Type_Array)objectlayout1368)->values[3] = instancevariable1065;
((Type_Array)objectlayout1368)->values[4] = instancevariable1066;
((Type_Array)objectlayout1368)->values[5] = instancevariable1067;
instancevariable1068 = (Object)new_AST_InstVariable(6, L"key");
((Type_Array)objectlayout1368)->values[6] = instancevariable1068;
class737 = (Object)new_Class_withMeta((Object)class736, objectlayout1368, objectlayout1367);
((Type_Class)class737)->name = (Type_Symbol)symbol5391;
metaclass737 = (Object)HEADER(class737);
objectlayout1369 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1369)->values[0] = instancevariable992;
((Type_Array)objectlayout1369)->values[1] = instancevariable993;
((Type_Array)objectlayout1369)->values[2] = instancevariable994;
((Type_Array)objectlayout1369)->values[3] = instancevariable995;
((Type_Array)objectlayout1369)->values[4] = instancevariable996;
((Type_Array)objectlayout1369)->values[5] = instancevariable1024;
symbol5313 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout1370 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1370)->values[0] = instancevariable1025;
((Type_Array)objectlayout1370)->values[1] = instancevariable1026;
((Type_Array)objectlayout1370)->values[2] = instancevariable1027;
((Type_Array)objectlayout1370)->values[3] = instancevariable1065;
((Type_Array)objectlayout1370)->values[4] = instancevariable1066;
((Type_Array)objectlayout1370)->values[5] = instancevariable1067;
class738 = (Object)new_Class_withMeta((Object)class736, objectlayout1370, objectlayout1369);
((Type_Class)class738)->name = (Type_Symbol)symbol5313;
metaclass738 = (Object)HEADER(class738);
objectlayout1371 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1371)->values[0] = instancevariable992;
((Type_Array)objectlayout1371)->values[1] = instancevariable993;
((Type_Array)objectlayout1371)->values[2] = instancevariable994;
((Type_Array)objectlayout1371)->values[3] = instancevariable995;
((Type_Array)objectlayout1371)->values[4] = instancevariable996;
symbol5307 = (Object)new_Type_Symbol_cached(L"Type");
class739 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1371);
((Type_Class)class739)->name = (Type_Symbol)symbol5307;
metaclass739 = (Object)HEADER(class739);
objectlayout1372 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1372)->values[0] = instancevariable992;
((Type_Array)objectlayout1372)->values[1] = instancevariable993;
((Type_Array)objectlayout1372)->values[2] = instancevariable994;
((Type_Array)objectlayout1372)->values[3] = instancevariable995;
((Type_Array)objectlayout1372)->values[4] = instancevariable996;
instancevariable1069 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout1372)->values[5] = instancevariable1069;
symbol5308 = (Object)new_Type_Symbol_cached(L"Nil");
class740 = (Object)new_Class_withMeta((Object)class739, empty_object_layout, objectlayout1372);
((Type_Class)class740)->name = (Type_Symbol)symbol5308;
metaclass740 = (Object)HEADER(class740);

// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable4084 = (Object)new_AST_Variable_named(L"sizeRequested");
array3229 = (Object)new_Type_Array_with(1, (Object)localvariable4084);
// basicNew:
send29582 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable4084);
symbol5218 = (Object)new_Type_Symbol_cached(L"initialize");
// initialize
send29583 = (Object)new_AST_Send((Object)send29582, (Object)symbol5218, 0);
method4013 = (Object)new_AST_Method_with((Type_Array)array3229, (Type_Array)empty_Type_Array, 1, send29583);
symbol5300 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure4013 = (Object)new_Runtime_MethodClosure(method4013);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5300, (Runtime_MethodClosure)methodclosure4013);


// Behavior>>methodDict
//methodDict
// 	^ methods
instancevariable1070 = (Object)new_AST_InstVariable(2, L"methods");
method4014 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1070);
symbol5316 = (Object)new_Type_Symbol_cached(L"methodDict");
methodclosure4014 = (Object)new_Runtime_MethodClosure(method4014);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5316, (Runtime_MethodClosure)methodclosure4014);


// Behavior>>methods:
//methods: anObject
// 	methods := anObject
localvariable4085 = (Object)new_AST_Variable_named(L"anObject");
array3230 = (Object)new_Type_Array_with(1, (Object)localvariable4085);
assign3591 = (Object)new_AST_Assign((Object)instancevariable1070, (Object)localvariable4085);
method4015 = (Object)new_AST_Method_with((Type_Array)array3230, (Type_Array)empty_Type_Array, 2, assign3591, Self);
symbol5301 = (Object)new_Type_Symbol_cached(L"methods:");
methodclosure4015 = (Object)new_Runtime_MethodClosure(method4015);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5301, (Runtime_MethodClosure)methodclosure4015);


// Behavior>>layout
//layout
// 	^ layout
instancevariable1071 = (Object)new_AST_InstVariable(0, L"layout");
method4016 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1071);
symbol5305 = (Object)new_Type_Symbol_cached(L"layout");
methodclosure4016 = (Object)new_Runtime_MethodClosure(method4016);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5305, (Runtime_MethodClosure)methodclosure4016);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
symbol5311 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send29584 = (Object)new_AST_Send((Object)Self, (Object)symbol5311, 0);
symbol5220 = (Object)new_Type_Symbol_cached(L"~=");

// Nil>>isNil
//isNil
// 	^ true
method4017 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure4017 = (Object)new_Runtime_MethodClosure(method4017);
store_method((Type_Class)class740, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure4017);

classreference782 = (Object)new_Organization_ClassReference((Type_Class)class740);
symbol5555 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send29585 = (Object)new_AST_Send((Object)classreference782, (Object)symbol5555, 0);
// ~=
send29586 = (Object)new_AST_Send((Object)send29584, (Object)symbol5220, 1, (Object)send29585);
method4018 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29586);
symbol5309 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
methodclosure4018 = (Object)new_Runtime_MethodClosure(method4018);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5309, (Runtime_MethodClosure)methodclosure4018);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send29587 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send29588 = (Object)new_AST_Send((Object)send29587, (Object)symbol5218, 0);
method4019 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29588);
symbol5310 = (Object)new_Type_Symbol_cached(L"new");
methodclosure4019 = (Object)new_Runtime_MethodClosure(method4019);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5310, (Runtime_MethodClosure)methodclosure4019);


// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable4086 = (Object)new_AST_Variable_named(L"instVars");
array3231 = (Object)new_Type_Array_with(1, (Object)localvariable4086);
classreference783 = (Object)new_Organization_ClassReference((Type_Class)class687);
// new
send29589 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
assign3592 = (Object)new_AST_Assign((Object)localvariable4086, (Object)send29589);
// hasSuperclass
send29590 = (Object)new_AST_Send((Object)Self, (Object)symbol5309, 0);
symbol5556 = (Object)new_Type_Symbol_cached(L"addAll:");
// superclass
send29591 = (Object)new_AST_Send((Object)Self, (Object)symbol5311, 0);
// layout
send29592 = (Object)new_AST_Send((Object)send29591, (Object)symbol5305, 0);
// addAll:
send29593 = (Object)new_AST_Send((Object)localvariable4086, (Object)symbol5556, 1, (Object)send29592);
block1840 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29593);
block1841 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send29594 = (Object)new_AST_Send((Object)send29590, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1840, (Object)block1841);
method4020 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3231, 3, assign3592, send29594, localvariable4086);
symbol5302 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
methodclosure4020 = (Object)new_Runtime_MethodClosure(method4020);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5302, (Runtime_MethodClosure)methodclosure4020);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable4087 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable4088 = (Object)new_AST_Variable_named(L"instVars");
localvariable4089 = (Object)new_AST_Variable_named(L"instVar");
array3232 = (Object)new_Type_Array_with(3, (Object)localvariable4087, (Object)localvariable4088, (Object)localvariable4089);
// parentInstVariables
send29595 = (Object)new_AST_Send((Object)Self, (Object)symbol5302, 0);
assign3593 = (Object)new_AST_Assign((Object)localvariable4088, (Object)send29595);
symbol5315 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
// pInstVarNames
send29596 = (Object)new_AST_Send((Object)Self, (Object)symbol5315, 0);
symbol5375 = (Object)new_Type_Symbol_cached(L"do:");
localvariable4090 = (Object)new_AST_Variable_named(L"each");
array3233 = (Object)new_Type_Array_with(1, (Object)localvariable4090);
localvariable4091 = (Object)new_AST_Variable_named(L"var");
array3234 = (Object)new_Type_Array_with(1, (Object)localvariable4091);
// name
send29597 = (Object)new_AST_Send((Object)localvariable4091, (Object)SMB_name, 0);
// =
send29598 = (Object)new_AST_Send((Object)send29597, (Object)SMB__equal, 1, (Object)localvariable4090);
symbol5557 = (Object)new_Type_Symbol_cached(L"error:");
string3437 = (Object)new_Type_String(L"Double Declaration of \"");
constant5769 = (Object)new_AST_Constant((Object)string3437);
// ,
send29599 = (Object)new_AST_Send((Object)constant5769, (Object)SMB__concat, 1, (Object)localvariable4090);
string3438 = (Object)new_Type_String(L"\"");
constant5770 = (Object)new_AST_Constant((Object)string3438);
// ,
send29600 = (Object)new_AST_Send((Object)send29599, (Object)SMB__concat, 1, (Object)constant5770);
// error:
send29601 = (Object)new_AST_Send((Object)Self, (Object)symbol5557, 1, (Object)send29600);
block1842 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29601);
// ifTrue:
send29602 = (Object)new_AST_Send((Object)send29598, (Object)SMB_ifTrue_, 1, (Object)block1842);
block1843 = (Object)new_AST_Block_with((Type_Array)array3234, (Type_Array)empty_Type_Array, 2, 1, send29602);
// do:
send29603 = (Object)new_AST_Send((Object)localvariable4088, (Object)symbol5375, 1, (Object)block1843);
classreference784 = (Object)new_Organization_ClassReference((Type_Class)class738);
symbol5534 = (Object)new_Type_Symbol_cached(L"named:");
// named:
send29604 = (Object)new_AST_Send((Object)classreference784, (Object)symbol5534, 1, (Object)localvariable4090);
assign3594 = (Object)new_AST_Assign((Object)localvariable4089, (Object)send29604);
symbol5538 = (Object)new_Type_Symbol_cached(L"localId:");
// size
send29605 = (Object)new_AST_Send((Object)localvariable4088, (Object)SMB_size, 0);
// localId:
send29606 = (Object)new_AST_Send((Object)localvariable4089, (Object)symbol5538, 1, (Object)send29605);
symbol5376 = (Object)new_Type_Symbol_cached(L"add:");
// add:
send29607 = (Object)new_AST_Send((Object)localvariable4088, (Object)symbol5376, 1, (Object)localvariable4089);
block1844 = (Object)new_AST_Block_with((Type_Array)array3233, (Type_Array)empty_Type_Array, 1, 4, send29603, assign3594, send29606, send29607);
// do:
send29608 = (Object)new_AST_Send((Object)send29596, (Object)symbol5375, 1, (Object)block1844);
method4021 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3232, 3, assign3593, send29608, localvariable4088);
symbol5314 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure4021 = (Object)new_Runtime_MethodClosure(method4021);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5314, (Runtime_MethodClosure)methodclosure4021);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable1072 = (Object)new_AST_InstVariable(1, L"superclass");
method4022 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1072);
methodclosure4022 = (Object)new_Runtime_MethodClosure(method4022);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5311, (Runtime_MethodClosure)methodclosure4022);


// Behavior>>methods
//methods
// 	^ methods
method4023 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1070);
symbol5303 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure4023 = (Object)new_Runtime_MethodClosure(method4023);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5303, (Runtime_MethodClosure)methodclosure4023);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send29609 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
method4024 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29609);
methodclosure4024 = (Object)new_Runtime_MethodClosure(method4024);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5315, (Runtime_MethodClosure)methodclosure4024);


// Behavior>>includesSelector:
//includesSelector: selector
// 	^ self methodDict includesKey: selector
localvariable4092 = (Object)new_AST_Variable_named(L"selector");
array3235 = (Object)new_Type_Array_with(1, (Object)localvariable4092);
// methodDict
send29610 = (Object)new_AST_Send((Object)Self, (Object)symbol5316, 0);
symbol5543 = (Object)new_Type_Symbol_cached(L"includesKey:");
// includesKey:
send29611 = (Object)new_AST_Send((Object)send29610, (Object)symbol5543, 1, (Object)localvariable4092);
method4025 = (Object)new_AST_Method_with((Type_Array)array3235, (Type_Array)empty_Type_Array, 1, send29611);
symbol5312 = (Object)new_Type_Symbol_cached(L"includesSelector:");
methodclosure4025 = (Object)new_Runtime_MethodClosure(method4025);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5312, (Runtime_MethodClosure)methodclosure4025);


// Behavior>>canUnderstand:
//canUnderstand: selector
// 	(self includesSelector: selector) ifTrue: [^true].
// 	superclass == nil ifTrue: [^false].
// 	^superclass canUnderstand: selector
localvariable4093 = (Object)new_AST_Variable_named(L"selector");
array3236 = (Object)new_Type_Array_with(1, (Object)localvariable4093);
variable199 = (Object)new_AST_Variable_named(L"return");
array3237 = (Object)new_Type_Array_with(1, (Object)variable199);
// includesSelector:
send29612 = (Object)new_AST_Send((Object)Self, (Object)symbol5312, 1, (Object)localvariable4093);
// escape:
send29613 = (Object)new_AST_Send((Object)variable199, (Object)SMB_escape_, 1, (Object)True_Const);
block1845 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29613);
// ifTrue:
send29614 = (Object)new_AST_Send((Object)send29612, (Object)SMB_ifTrue_, 1, (Object)block1845);
// ==
send29615 = (Object)new_AST_Send((Object)instancevariable1072, (Object)SMB__pequal, 1, (Object)Nil_Const);
// escape:
send29616 = (Object)new_AST_Send((Object)variable199, (Object)SMB_escape_, 1, (Object)False_Const);
block1846 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29616);
// ifTrue:
send29617 = (Object)new_AST_Send((Object)send29615, (Object)SMB_ifTrue_, 1, (Object)block1846);
symbol5304 = (Object)new_Type_Symbol_cached(L"canUnderstand:");
// canUnderstand:
send29618 = (Object)new_AST_Send((Object)instancevariable1072, (Object)symbol5304, 1, (Object)localvariable4093);
block1847 = (Object)new_AST_Block_with((Type_Array)array3237, (Type_Array)empty_Type_Array, 1, 3, send29614, send29617, send29618);
// on:
send29619 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1847);
method4026 = (Object)new_AST_Method_with((Type_Array)array3236, (Type_Array)empty_Type_Array, 1, send29619);
methodclosure4026 = (Object)new_Runtime_MethodClosure(method4026);
store_method((Type_Class)Behavior, (Type_Symbol)symbol5304, (Runtime_MethodClosure)methodclosure4026);

classreference785 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Class>>package
//package
// 	^ package
instancevariable1073 = (Object)new_AST_InstVariable(4, L"package");
method4027 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1073);
symbol5321 = (Object)new_Type_Symbol_cached(L"package");
methodclosure4027 = (Object)new_Runtime_MethodClosure(method4027);
store_method((Type_Class)Class, (Type_Symbol)symbol5321, (Runtime_MethodClosure)methodclosure4027);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable4094 = (Object)new_AST_Variable_named(L"aStream");
array3238 = (Object)new_Type_Array_with(1, (Object)localvariable4094);
symbol5320 = (Object)new_Type_Symbol_cached(L"printOn:");
super342 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4094);
symbol5558 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string3439 = (Object)new_Type_String(L" ");
constant5771 = (Object)new_AST_Constant((Object)string3439);
// nextPutAll:
send29620 = (Object)new_AST_Send((Object)localvariable4094, (Object)symbol5558, 1, (Object)constant5771);
// name
send29621 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send29622 = (Object)new_AST_Send((Object)send29621, (Object)symbol5320, 1, (Object)localvariable4094);
method4028 = (Object)new_AST_Method_with((Type_Array)array3238, (Type_Array)empty_Type_Array, 4, super342, send29620, send29622, Self);
methodclosure4028 = (Object)new_Runtime_MethodClosure(method4028);
store_method((Type_Class)Class, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4028);


// Class>>name
//name 
// 	^ name
instancevariable1074 = (Object)new_AST_InstVariable(3, L"name");
method4029 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1074);
methodclosure4029 = (Object)new_Runtime_MethodClosure(method4029);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4029);

classreference786 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable4095 = (Object)new_AST_Variable_named(L"aStream");
array3239 = (Object)new_Type_Array_with(1, (Object)localvariable4095);
super343 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4095);
symbol5559 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send29623 = (Object)new_AST_Send((Object)Self, (Object)symbol5559, 0);
// name
send29624 = (Object)new_AST_Send((Object)send29623, (Object)SMB_name, 0);
// printOn:
send29625 = (Object)new_AST_Send((Object)send29624, (Object)symbol5320, 1, (Object)localvariable4095);
method4030 = (Object)new_AST_Method_with((Type_Array)array3239, (Type_Array)empty_Type_Array, 3, super343, send29625, Self);
methodclosure4030 = (Object)new_Runtime_MethodClosure(method4030);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4030);

classreference787 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);
classreference788 = (Object)new_Organization_ClassReference((Type_Class)Type_Boolean_Class);

// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable4096 = (Object)new_AST_Variable_named(L"anObject");
array3240 = (Object)new_Type_Array_with(1, (Object)localvariable4096);
// =
send29626 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable4096);
// not
send29627 = (Object)new_AST_Send((Object)send29626, (Object)SMB_not, 0);
method4031 = (Object)new_AST_Method_with((Type_Array)array3240, (Type_Array)empty_Type_Array, 1, send29627);
methodclosure4031 = (Object)new_Runtime_MethodClosure(method4031);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol5220, (Runtime_MethodClosure)methodclosure4031);


// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method4032 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol5217 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure4032 = (Object)new_Runtime_MethodClosure(method4032);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol5217, (Runtime_MethodClosure)methodclosure4032);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send29628 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol5209 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send29629 = (Object)new_AST_Send((Object)send29628, (Object)symbol5209, 0);
method4033 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29629);
symbol5215 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure4033 = (Object)new_Runtime_MethodClosure(method4033);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol5215, (Runtime_MethodClosure)methodclosure4033);


// Object>>respondsTo:
//respondsTo: selector
// 	^ self class canUnderstand: selector
localvariable4097 = (Object)new_AST_Variable_named(L"selector");
array3241 = (Object)new_Type_Array_with(1, (Object)localvariable4097);
// class
send29630 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// canUnderstand:
send29631 = (Object)new_AST_Send((Object)send29630, (Object)symbol5304, 1, (Object)localvariable4097);
method4034 = (Object)new_AST_Method_with((Type_Array)array3241, (Type_Array)empty_Type_Array, 1, send29631);
symbol5219 = (Object)new_Type_Symbol_cached(L"respondsTo:");
methodclosure4034 = (Object)new_Runtime_MethodClosure(method4034);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol5219, (Runtime_MethodClosure)methodclosure4034);


// Object>>isNil
//isNil
// 	^ false
method4035 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4035 = (Object)new_Runtime_MethodClosure(method4035);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure4035);


// Object>>yourself
//yourself
// 	^ self
method4036 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol5216 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure4036 = (Object)new_Runtime_MethodClosure(method4036);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol5216, (Runtime_MethodClosure)methodclosure4036);


// Object>>hash
//hash
// 	^ self uid hash
symbol5358 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send29632 = (Object)new_AST_Send((Object)Self, (Object)symbol5358, 0);
// hash
send29633 = (Object)new_AST_Send((Object)send29632, (Object)SMB_hash, 0);
method4037 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29633);
methodclosure4037 = (Object)new_Runtime_MethodClosure(method4037);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure4037);


// Object>>initialize
//initialize
method4038 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4038 = (Object)new_Runtime_MethodClosure(method4038);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4038);

classreference789 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Array>>isEmpty
//isEmpty
// 	^ self size = 0
// size
send29634 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2012 = (Object)new_Type_SmallInt(0);
constant5772 = (Object)new_AST_Constant((Object)smallint2012);
// =
send29635 = (Object)new_AST_Send((Object)send29634, (Object)SMB__equal, 1, (Object)constant5772);
method4039 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29635);
symbol5332 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure4039 = (Object)new_Runtime_MethodClosure(method4039);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5332, (Runtime_MethodClosure)methodclosure4039);


// Array>>do:
//do: aBlockClosure 
// 	1 to: self size do: 
// 		[:index | aBlockClosure value: (self at: index)]
localvariable4098 = (Object)new_AST_Variable_named(L"aBlockClosure");
array3242 = (Object)new_Type_Array_with(1, (Object)localvariable4098);
smallint2013 = (Object)new_Type_SmallInt(1);
constant5773 = (Object)new_AST_Constant((Object)smallint2013);
symbol5560 = (Object)new_Type_Symbol_cached(L"to:do:");
// size
send29636 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable4099 = (Object)new_AST_Variable_named(L"index");
array3243 = (Object)new_Type_Array_with(1, (Object)localvariable4099);
// at:
send29637 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable4099);
// value:
send29638 = (Object)new_AST_Send((Object)localvariable4098, (Object)SMB_value_, 1, (Object)send29637);
block1848 = (Object)new_AST_Block_with((Type_Array)array3243, (Type_Array)empty_Type_Array, 1, 1, send29638);
// to:do:
send29639 = (Object)new_AST_Send((Object)constant5773, (Object)symbol5560, 2, (Object)send29636, (Object)block1848);
method4040 = (Object)new_AST_Method_with((Type_Array)array3242, (Type_Array)empty_Type_Array, 2, send29639, Self);
methodclosure4040 = (Object)new_Runtime_MethodClosure(method4040);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5375, (Runtime_MethodClosure)methodclosure4040);


// Array>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' #( '.
// 	self do: [:each|
// 		each printOn: aStream.
// 		aStream nextPutAll: ' '
// 	].
// 	aStream nextPutAll: ')'.
localvariable4100 = (Object)new_AST_Variable_named(L"aStream");
array3244 = (Object)new_Type_Array_with(1, (Object)localvariable4100);
super344 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4100);
string3440 = (Object)new_Type_String(L" #( ");
constant5774 = (Object)new_AST_Constant((Object)string3440);
// nextPutAll:
send29640 = (Object)new_AST_Send((Object)localvariable4100, (Object)symbol5558, 1, (Object)constant5774);
localvariable4101 = (Object)new_AST_Variable_named(L"each");
array3245 = (Object)new_Type_Array_with(1, (Object)localvariable4101);
// printOn:
send29641 = (Object)new_AST_Send((Object)localvariable4101, (Object)symbol5320, 1, (Object)localvariable4100);
string3441 = (Object)new_Type_String(L" ");
constant5775 = (Object)new_AST_Constant((Object)string3441);
// nextPutAll:
send29642 = (Object)new_AST_Send((Object)localvariable4100, (Object)symbol5558, 1, (Object)constant5775);
block1849 = (Object)new_AST_Block_with((Type_Array)array3245, (Type_Array)empty_Type_Array, 1, 2, send29641, send29642);
// do:
send29643 = (Object)new_AST_Send((Object)Self, (Object)symbol5375, 1, (Object)block1849);
string3442 = (Object)new_Type_String(L")");
constant5776 = (Object)new_AST_Constant((Object)string3442);
// nextPutAll:
send29644 = (Object)new_AST_Send((Object)localvariable4100, (Object)symbol5558, 1, (Object)constant5776);
method4041 = (Object)new_AST_Method_with((Type_Array)array3244, (Type_Array)empty_Type_Array, 5, super344, send29640, send29643, send29644, Self);
methodclosure4041 = (Object)new_Runtime_MethodClosure(method4041);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4041);


// Array>>first
//first
// 	^ self at: 1.
smallint2014 = (Object)new_Type_SmallInt(1);
constant5777 = (Object)new_AST_Constant((Object)smallint2014);
// at:
send29645 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant5777);
method4042 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29645);
symbol5372 = (Object)new_Type_Symbol_cached(L"first");
methodclosure4042 = (Object)new_Runtime_MethodClosure(method4042);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5372, (Runtime_MethodClosure)methodclosure4042);


// Array>>add:
//add: anElement
// 	| result |
// 	result := self class new: self size +1.
// 	self doWithIndex: [:el :i | result at: i put: el ].
// 	result last: anElement.
// 	^ result.
localvariable4102 = (Object)new_AST_Variable_named(L"anElement");
array3246 = (Object)new_Type_Array_with(1, (Object)localvariable4102);
localvariable4103 = (Object)new_AST_Variable_named(L"result");
array3247 = (Object)new_Type_Array_with(1, (Object)localvariable4103);
// class
send29646 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// size
send29647 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2015 = (Object)new_Type_SmallInt(1);
constant5778 = (Object)new_AST_Constant((Object)smallint2015);
// +
send29648 = (Object)new_AST_Send((Object)send29647, (Object)SMB__plus, 1, (Object)constant5778);
// new:
send29649 = (Object)new_AST_Send((Object)send29646, (Object)symbol5300, 1, (Object)send29648);
assign3595 = (Object)new_AST_Assign((Object)localvariable4103, (Object)send29649);
symbol5373 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
localvariable4104 = (Object)new_AST_Variable_named(L"el");
localvariable4105 = (Object)new_AST_Variable_named(L"i");
array3248 = (Object)new_Type_Array_with(2, (Object)localvariable4104, (Object)localvariable4105);
// at:put:
send29650 = (Object)new_AST_Send((Object)localvariable4103, (Object)SMB_at_put_, 2, (Object)localvariable4105, (Object)localvariable4104);
block1850 = (Object)new_AST_Block_with((Type_Array)array3248, (Type_Array)empty_Type_Array, 1, 1, send29650);
// doWithIndex:
send29651 = (Object)new_AST_Send((Object)Self, (Object)symbol5373, 1, (Object)block1850);
symbol5378 = (Object)new_Type_Symbol_cached(L"last:");
// last:
send29652 = (Object)new_AST_Send((Object)localvariable4103, (Object)symbol5378, 1, (Object)localvariable4102);
method4043 = (Object)new_AST_Method_with((Type_Array)array3246, (Type_Array)array3247, 4, assign3595, send29651, send29652, localvariable4103);
methodclosure4043 = (Object)new_Runtime_MethodClosure(method4043);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5376, (Runtime_MethodClosure)methodclosure4043);


// Array>>initialize
//initialize 
// 	super initialize.
super345 = (Object)new_AST_Super((Object)symbol5218, 0);
method4044 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super345, Self);
methodclosure4044 = (Object)new_Runtime_MethodClosure(method4044);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4044);


// Array>>=
//= other
// 	self == other ifTrue: [^ true].
// 	self class = other class ifFalse: [ ^ false].
// 	self size = other size ifFalse: [ ^ false ].
// 	1 to: self size do: [ :index|
// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].
// 	].
// 	^ true.
localvariable4106 = (Object)new_AST_Variable_named(L"other");
array3249 = (Object)new_Type_Array_with(1, (Object)localvariable4106);
variable200 = (Object)new_AST_Variable_named(L"return");
array3250 = (Object)new_Type_Array_with(1, (Object)variable200);
// ==
send29653 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable4106);
// escape:
send29654 = (Object)new_AST_Send((Object)variable200, (Object)SMB_escape_, 1, (Object)True_Const);
block1851 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29654);
// ifTrue:
send29655 = (Object)new_AST_Send((Object)send29653, (Object)SMB_ifTrue_, 1, (Object)block1851);
// class
send29656 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send29657 = (Object)new_AST_Send((Object)localvariable4106, (Object)SMB_class, 0);
// =
send29658 = (Object)new_AST_Send((Object)send29656, (Object)SMB__equal, 1, (Object)send29657);
// escape:
send29659 = (Object)new_AST_Send((Object)variable200, (Object)SMB_escape_, 1, (Object)False_Const);
block1852 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29659);
// ifFalse:
send29660 = (Object)new_AST_Send((Object)send29658, (Object)SMB_ifFalse_, 1, (Object)block1852);
// size
send29661 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// size
send29662 = (Object)new_AST_Send((Object)localvariable4106, (Object)SMB_size, 0);
// =
send29663 = (Object)new_AST_Send((Object)send29661, (Object)SMB__equal, 1, (Object)send29662);
// escape:
send29664 = (Object)new_AST_Send((Object)variable200, (Object)SMB_escape_, 1, (Object)False_Const);
block1853 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29664);
// ifFalse:
send29665 = (Object)new_AST_Send((Object)send29663, (Object)SMB_ifFalse_, 1, (Object)block1853);
smallint2016 = (Object)new_Type_SmallInt(1);
constant5779 = (Object)new_AST_Constant((Object)smallint2016);
// size
send29666 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable4107 = (Object)new_AST_Variable_named(L"index");
array3251 = (Object)new_Type_Array_with(1, (Object)localvariable4107);
// at:
send29667 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable4107);
// at:
send29668 = (Object)new_AST_Send((Object)localvariable4106, (Object)SMB_at_, 1, (Object)localvariable4107);
// =
send29669 = (Object)new_AST_Send((Object)send29667, (Object)SMB__equal, 1, (Object)send29668);
// escape:
send29670 = (Object)new_AST_Send((Object)variable200, (Object)SMB_escape_, 1, (Object)False_Const);
block1854 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29670);
// ifFalse:
send29671 = (Object)new_AST_Send((Object)send29669, (Object)SMB_ifFalse_, 1, (Object)block1854);
block1855 = (Object)new_AST_Block_with((Type_Array)array3251, (Type_Array)empty_Type_Array, 2, 1, send29671);
// to:do:
send29672 = (Object)new_AST_Send((Object)constant5779, (Object)symbol5560, 2, (Object)send29666, (Object)block1855);
block1856 = (Object)new_AST_Block_with((Type_Array)array3250, (Type_Array)empty_Type_Array, 1, 5, send29655, send29660, send29665, send29672, True_Const);
// on:
send29673 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1856);
method4045 = (Object)new_AST_Method_with((Type_Array)array3249, (Type_Array)empty_Type_Array, 1, send29673);
methodclosure4045 = (Object)new_Runtime_MethodClosure(method4045);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4045);


// Array>>doWithIndex:
//doWithIndex: aBlockClosure 
// 	1 to: self size do:
// 		[:index | aBlockClosure value: (self at: index) value: index]
localvariable4108 = (Object)new_AST_Variable_named(L"aBlockClosure");
array3252 = (Object)new_Type_Array_with(1, (Object)localvariable4108);
smallint2017 = (Object)new_Type_SmallInt(1);
constant5780 = (Object)new_AST_Constant((Object)smallint2017);
// size
send29674 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable4109 = (Object)new_AST_Variable_named(L"index");
array3253 = (Object)new_Type_Array_with(1, (Object)localvariable4109);
symbol5561 = (Object)new_Type_Symbol_cached(L"value:value:");
// at:
send29675 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable4109);
// value:value:
send29676 = (Object)new_AST_Send((Object)localvariable4108, (Object)symbol5561, 2, (Object)send29675, (Object)localvariable4109);
block1857 = (Object)new_AST_Block_with((Type_Array)array3253, (Type_Array)empty_Type_Array, 1, 1, send29676);
// to:do:
send29677 = (Object)new_AST_Send((Object)constant5780, (Object)symbol5560, 2, (Object)send29674, (Object)block1857);
method4046 = (Object)new_AST_Method_with((Type_Array)array3252, (Type_Array)empty_Type_Array, 2, send29677, Self);
methodclosure4046 = (Object)new_Runtime_MethodClosure(method4046);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5373, (Runtime_MethodClosure)methodclosure4046);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable4110 = (Object)new_AST_Variable_named(L"thisValue");
localvariable4111 = (Object)new_AST_Variable_named(L"binaryBlock");
array3254 = (Object)new_Type_Array_with(2, (Object)localvariable4110, (Object)localvariable4111);
localvariable4112 = (Object)new_AST_Variable_named(L"nextValue");
array3255 = (Object)new_Type_Array_with(1, (Object)localvariable4112);
assign3596 = (Object)new_AST_Assign((Object)localvariable4112, (Object)localvariable4110);
localvariable4113 = (Object)new_AST_Variable_named(L"each");
array3256 = (Object)new_Type_Array_with(1, (Object)localvariable4113);
// value:value:
send29678 = (Object)new_AST_Send((Object)localvariable4111, (Object)symbol5561, 2, (Object)localvariable4112, (Object)localvariable4113);
assign3597 = (Object)new_AST_Assign((Object)localvariable4112, (Object)send29678);
block1858 = (Object)new_AST_Block_with((Type_Array)array3256, (Type_Array)empty_Type_Array, 1, 1, assign3597);
// do:
send29679 = (Object)new_AST_Send((Object)Self, (Object)symbol5375, 1, (Object)block1858);
method4047 = (Object)new_AST_Method_with((Type_Array)array3254, (Type_Array)array3255, 3, assign3596, send29679, localvariable4112);
symbol5377 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure4047 = (Object)new_Runtime_MethodClosure(method4047);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5377, (Runtime_MethodClosure)methodclosure4047);


// Array>>first:
//first: aValue
// 	^ self at: 1 put: aValue.
localvariable4114 = (Object)new_AST_Variable_named(L"aValue");
array3257 = (Object)new_Type_Array_with(1, (Object)localvariable4114);
smallint2018 = (Object)new_Type_SmallInt(1);
constant5781 = (Object)new_AST_Constant((Object)smallint2018);
// at:put:
send29680 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant5781, (Object)localvariable4114);
method4048 = (Object)new_AST_Method_with((Type_Array)array3257, (Type_Array)empty_Type_Array, 1, send29680);
symbol5374 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure4048 = (Object)new_Runtime_MethodClosure(method4048);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5374, (Runtime_MethodClosure)methodclosure4048);


// Array>>last:
//last: aNode
// 	^ self at: self size put: aNode.
localvariable4115 = (Object)new_AST_Variable_named(L"aNode");
array3258 = (Object)new_Type_Array_with(1, (Object)localvariable4115);
// size
send29681 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:put:
send29682 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send29681, (Object)localvariable4115);
method4049 = (Object)new_AST_Method_with((Type_Array)array3258, (Type_Array)empty_Type_Array, 1, send29682);
methodclosure4049 = (Object)new_Runtime_MethodClosure(method4049);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5378, (Runtime_MethodClosure)methodclosure4049);


// Array>>last
//last
// 	^ self at: self size.
// size
send29683 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:
send29684 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send29683);
method4050 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29684);
symbol5371 = (Object)new_Type_Symbol_cached(L"last");
methodclosure4050 = (Object)new_Runtime_MethodClosure(method4050);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol5371, (Runtime_MethodClosure)methodclosure4050);

classreference790 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);
classreference791 = (Object)new_Organization_ClassReference((Type_Class)class686);
classreference792 = (Object)new_Organization_ClassReference((Type_Class)class685);
classreference793 = (Object)new_Organization_ClassReference((Type_Class)class684);
classreference794 = (Object)new_Organization_ClassReference((Type_Class)class688);
classreference795 = (Object)new_Organization_ClassReference((Type_Class)class689);

// Dictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	^ self at: key ifAbsent: [self at: key put: aBlock value]
localvariable4116 = (Object)new_AST_Variable_named(L"key");
localvariable4117 = (Object)new_AST_Variable_named(L"aBlock");
array3259 = (Object)new_Type_Array_with(2, (Object)localvariable4116, (Object)localvariable4117);
symbol5562 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");
symbol5563 = (Object)new_Type_Symbol_cached(L"value");
// value
send29685 = (Object)new_AST_Send((Object)localvariable4117, (Object)symbol5563, 0);
// at:put:
send29686 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable4116, (Object)send29685);
block1859 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29686);
// at:ifAbsent:
send29687 = (Object)new_AST_Send((Object)Self, (Object)symbol5562, 2, (Object)localvariable4116, (Object)block1859);
method4051 = (Object)new_AST_Method_with((Type_Array)array3259, (Type_Array)empty_Type_Array, 1, send29687);
symbol5542 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
methodclosure4051 = (Object)new_Runtime_MethodClosure(method4051);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol5542, (Runtime_MethodClosure)methodclosure4051);


// Dictionary>>includesKey:
//includesKey: key
// 	self at: key ifAbsent: [ ^ false ].
// 	^ true
localvariable4118 = (Object)new_AST_Variable_named(L"key");
array3260 = (Object)new_Type_Array_with(1, (Object)localvariable4118);
variable201 = (Object)new_AST_Variable_named(L"return");
array3261 = (Object)new_Type_Array_with(1, (Object)variable201);
// escape:
send29688 = (Object)new_AST_Send((Object)variable201, (Object)SMB_escape_, 1, (Object)False_Const);
block1860 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29688);
// at:ifAbsent:
send29689 = (Object)new_AST_Send((Object)Self, (Object)symbol5562, 2, (Object)localvariable4118, (Object)block1860);
block1861 = (Object)new_AST_Block_with((Type_Array)array3261, (Type_Array)empty_Type_Array, 1, 2, send29689, True_Const);
// on:
send29690 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1861);
method4052 = (Object)new_AST_Method_with((Type_Array)array3260, (Type_Array)empty_Type_Array, 1, send29690);
methodclosure4052 = (Object)new_Runtime_MethodClosure(method4052);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol5543, (Runtime_MethodClosure)methodclosure4052);

classreference796 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);
classreference797 = (Object)new_Organization_ClassReference((Type_Class)class690);
classreference798 = (Object)new_Organization_ClassReference((Type_Class)class692);
classreference799 = (Object)new_Organization_ClassReference((Type_Class)class691);

// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method4053 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol5513 = (Object)new_Type_Symbol_cached(L"optional");
methodclosure4053 = (Object)new_Runtime_MethodClosure(method4053);
store_method((Type_Class)class694, (Type_Symbol)symbol5513, (Runtime_MethodClosure)methodclosure4053);


// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable4119 = (Object)new_AST_Variable_named(L"expression");
array3262 = (Object)new_Type_Array_with(1, (Object)localvariable4119);
super346 = (Object)new_AST_Super((Object)symbol5218, 0);
assign3598 = (Object)new_AST_Assign((Object)instancevariable1010, (Object)localvariable4119);
assign3599 = (Object)new_AST_Assign((Object)instancevariable1011, (Object)True_Const);
method4054 = (Object)new_AST_Method_with((Type_Array)array3262, (Type_Array)empty_Type_Array, 4, super346, assign3598, assign3599, Self);
symbol5545 = (Object)new_Type_Symbol_cached(L"initialize:");
methodclosure4054 = (Object)new_Runtime_MethodClosure(method4054);
store_method((Type_Class)class694, (Type_Symbol)symbol5545, (Runtime_MethodClosure)methodclosure4054);


// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable4120 = (Object)new_AST_Variable_named(L"input");
array3263 = (Object)new_Type_Array_with(1, (Object)localvariable4120);
variable202 = (Object)new_AST_Variable_named(L"return");
array3264 = (Object)new_Type_Array_with(1, (Object)variable202);

// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable4121 = (Object)new_AST_Variable_named(L"block");
array3265 = (Object)new_Type_Array_with(1, (Object)localvariable4121);
// value:
send29691 = (Object)new_AST_Send((Object)localvariable4121, (Object)SMB_value_, 1, (Object)instancevariable1014);
method4055 = (Object)new_AST_Method_with((Type_Array)array3265, (Type_Array)empty_Type_Array, 2, send29691, Self);
symbol5553 = (Object)new_Type_Symbol_cached(L"ifMatched:");
methodclosure4055 = (Object)new_Runtime_MethodClosure(method4055);
store_method((Type_Class)class698, (Type_Symbol)symbol5553, (Runtime_MethodClosure)methodclosure4055);


// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable4122 = (Object)new_AST_Variable_named(L"newResult");
array3266 = (Object)new_Type_Array_with(1, (Object)localvariable4122);
assign3600 = (Object)new_AST_Assign((Object)instancevariable1014, (Object)localvariable4122);
method4056 = (Object)new_AST_Method_with((Type_Array)array3266, (Type_Array)empty_Type_Array, 2, assign3600, Self);
symbol5554 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure4056 = (Object)new_Runtime_MethodClosure(method4056);
store_method((Type_Class)class698, (Type_Symbol)symbol5554, (Runtime_MethodClosure)methodclosure4056);


// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable4123 = (Object)new_AST_Variable_named(L"alternative");
array3267 = (Object)new_Type_Array_with(1, (Object)localvariable4123);
method4057 = (Object)new_AST_Method_with((Type_Array)array3267, (Type_Array)empty_Type_Array, 1, instancevariable1014);
symbol5552 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
methodclosure4057 = (Object)new_Runtime_MethodClosure(method4057);
store_method((Type_Class)class698, (Type_Symbol)symbol5552, (Runtime_MethodClosure)methodclosure4057);

classreference800 = (Object)new_Organization_ClassReference((Type_Class)class698);
symbol5516 = (Object)new_Type_Symbol_cached(L"match:");
// match:
send29692 = (Object)new_AST_Send((Object)instancevariable1010, (Object)symbol5516, 1, (Object)localvariable4120);
symbol5564 = (Object)new_Type_Symbol_cached(L"ifNil:");
classreference801 = (Object)new_Organization_ClassReference((Type_Class)class701);
// escape:
send29693 = (Object)new_AST_Send((Object)variable202, (Object)SMB_escape_, 1, (Object)classreference801);
block1862 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29693);
// ifNil:
send29694 = (Object)new_AST_Send((Object)send29692, (Object)symbol5564, 1, (Object)block1862);
// new:
send29695 = (Object)new_AST_Send((Object)classreference800, (Object)symbol5300, 1, (Object)send29694);
block1863 = (Object)new_AST_Block_with((Type_Array)array3264, (Type_Array)empty_Type_Array, 1, 1, send29695);
// on:
send29696 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1863);
method4058 = (Object)new_AST_Method_with((Type_Array)array3263, (Type_Array)empty_Type_Array, 1, send29696);
symbol5523 = (Object)new_Type_Symbol_cached(L"privateMatch:");
methodclosure4058 = (Object)new_Runtime_MethodClosure(method4058);
store_method((Type_Class)class694, (Type_Symbol)symbol5523, (Runtime_MethodClosure)methodclosure4058);

classreference802 = (Object)new_Organization_ClassReference((Type_Class)class694);

// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable4124 = (Object)new_AST_Variable_named(L"input");
array3268 = (Object)new_Type_Array_with(1, (Object)localvariable4124);
localvariable4125 = (Object)new_AST_Variable_named(L"position");
localvariable4126 = (Object)new_AST_Variable_named(L"match");
array3269 = (Object)new_Type_Array_with(2, (Object)localvariable4125, (Object)localvariable4126);
symbol5565 = (Object)new_Type_Symbol_cached(L"position");
// position
send29697 = (Object)new_AST_Send((Object)localvariable4124, (Object)symbol5565, 0);
assign3601 = (Object)new_AST_Assign((Object)localvariable4125, (Object)send29697);
// privateMatch:
send29698 = (Object)new_AST_Send((Object)Self, (Object)symbol5523, 1, (Object)localvariable4124);
assign3602 = (Object)new_AST_Assign((Object)localvariable4126, (Object)send29698);
symbol5566 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send29699 = (Object)new_AST_Send((Object)localvariable4124, (Object)symbol5566, 1, (Object)localvariable4125);
block1864 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29699);
// ifNil:
send29700 = (Object)new_AST_Send((Object)localvariable4126, (Object)symbol5564, 1, (Object)block1864);
method4059 = (Object)new_AST_Method_with((Type_Array)array3268, (Type_Array)array3269, 4, assign3601, assign3602, send29700, localvariable4126);
methodclosure4059 = (Object)new_Runtime_MethodClosure(method4059);
store_method((Type_Class)class693, (Type_Symbol)symbol5516, (Runtime_MethodClosure)methodclosure4059);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
symbol5521 = (Object)new_Type_Symbol_cached(L"plus");
// plus
send29701 = (Object)new_AST_Send((Object)Self, (Object)symbol5521, 0);
symbol5547 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
// skipWhitespace:
send29702 = (Object)new_AST_Send((Object)send29701, (Object)symbol5547, 1, (Object)False_Const);
method4060 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29702);
symbol5517 = (Object)new_Type_Symbol_cached(L"strongPlus");
methodclosure4060 = (Object)new_Runtime_MethodClosure(method4060);
store_method((Type_Class)class693, (Type_Symbol)symbol5517, (Runtime_MethodClosure)methodclosure4060);


// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self

// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable4127 = (Object)new_AST_Variable_named(L"expression");
array3270 = (Object)new_Type_Array_with(1, (Object)localvariable4127);
super347 = (Object)new_AST_Super((Object)symbol5218, 0);
assign3603 = (Object)new_AST_Assign((Object)instancevariable1012, (Object)localvariable4127);
assign3604 = (Object)new_AST_Assign((Object)instancevariable1013, (Object)True_Const);
method4061 = (Object)new_AST_Method_with((Type_Array)array3270, (Type_Array)empty_Type_Array, 4, super347, assign3603, assign3604, Self);
methodclosure4061 = (Object)new_Runtime_MethodClosure(method4061);
store_method((Type_Class)class695, (Type_Symbol)symbol5545, (Runtime_MethodClosure)methodclosure4061);


// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable4128 = (Object)new_AST_Variable_named(L"anObject");
array3271 = (Object)new_Type_Array_with(1, (Object)localvariable4128);
assign3605 = (Object)new_AST_Assign((Object)instancevariable1013, (Object)localvariable4128);
method4062 = (Object)new_AST_Method_with((Type_Array)array3271, (Type_Array)empty_Type_Array, 2, assign3605, Self);
methodclosure4062 = (Object)new_Runtime_MethodClosure(method4062);
store_method((Type_Class)class695, (Type_Symbol)symbol5547, (Runtime_MethodClosure)methodclosure4062);


// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method4063 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1013);
symbol5346 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
methodclosure4063 = (Object)new_Runtime_MethodClosure(method4063);
store_method((Type_Class)class695, (Type_Symbol)symbol5346, (Runtime_MethodClosure)methodclosure4063);


// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable4129 = (Object)new_AST_Variable_named(L"input");
localvariable4130 = (Object)new_AST_Variable_named(L"result");
array3272 = (Object)new_Type_Array_with(2, (Object)localvariable4129, (Object)localvariable4130);
localvariable4131 = (Object)new_AST_Variable_named(L"match");
array3273 = (Object)new_Type_Array_with(1, (Object)localvariable4131);
// skipWhitespace
send29703 = (Object)new_AST_Send((Object)localvariable4129, (Object)symbol5346, 0);
block1865 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29703);
// ifTrue:
send29704 = (Object)new_AST_Send((Object)instancevariable1013, (Object)SMB_ifTrue_, 1, (Object)block1865);
// match:
send29705 = (Object)new_AST_Send((Object)instancevariable1012, (Object)symbol5516, 1, (Object)localvariable4129);
assign3606 = (Object)new_AST_Assign((Object)localvariable4131, (Object)send29705);
// isNil
send29706 = (Object)new_AST_Send((Object)localvariable4131, (Object)SMB_isNil, 0);
block1866 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send29704, assign3606, send29706);
// add:
send29707 = (Object)new_AST_Send((Object)localvariable4130, (Object)symbol5376, 1, (Object)localvariable4131);
block1867 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29707);
// whileFalse:
send29708 = (Object)new_AST_Send((Object)block1866, (Object)SMB_whileFalse_, 1, (Object)block1867);
method4064 = (Object)new_AST_Method_with((Type_Array)array3272, (Type_Array)array3273, 2, send29708, localvariable4130);
symbol5546 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
methodclosure4064 = (Object)new_Runtime_MethodClosure(method4064);
store_method((Type_Class)class695, (Type_Symbol)symbol5546, (Runtime_MethodClosure)methodclosure4064);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method4065 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4065 = (Object)new_Runtime_MethodClosure(method4065);
store_method((Type_Class)class695, (Type_Symbol)symbol5513, (Runtime_MethodClosure)methodclosure4065);


// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable4132 = (Object)new_AST_Variable_named(L"input");
array3274 = (Object)new_Type_Array_with(1, (Object)localvariable4132);
// new
send29709 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
// privateMatch:on:
send29710 = (Object)new_AST_Send((Object)Self, (Object)symbol5546, 2, (Object)localvariable4132, (Object)send29709);
method4066 = (Object)new_AST_Method_with((Type_Array)array3274, (Type_Array)empty_Type_Array, 1, send29710);
methodclosure4066 = (Object)new_Runtime_MethodClosure(method4066);
store_method((Type_Class)class695, (Type_Symbol)symbol5523, (Runtime_MethodClosure)methodclosure4066);

classreference803 = (Object)new_Organization_ClassReference((Type_Class)class695);
// new:
send29711 = (Object)new_AST_Send((Object)classreference803, (Object)symbol5300, 1, (Object)Self);
method4067 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29711);
symbol5509 = (Object)new_Type_Symbol_cached(L"times");
methodclosure4067 = (Object)new_Runtime_MethodClosure(method4067);
store_method((Type_Class)class693, (Type_Symbol)symbol5509, (Runtime_MethodClosure)methodclosure4067);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self

// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send29712 = (Object)new_AST_Send((Object)classreference802, (Object)symbol5300, 1, (Object)Self);
method4068 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29712);
methodclosure4068 = (Object)new_Runtime_MethodClosure(method4068);
store_method((Type_Class)class696, (Type_Symbol)symbol5513, (Runtime_MethodClosure)methodclosure4068);


// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable4133 = (Object)new_AST_Variable_named(L"input");
array3275 = (Object)new_Type_Array_with(1, (Object)localvariable4133);
localvariable4134 = (Object)new_AST_Variable_named(L"result");
localvariable4135 = (Object)new_AST_Variable_named(L"match");
array3276 = (Object)new_Type_Array_with(2, (Object)localvariable4134, (Object)localvariable4135);
variable203 = (Object)new_AST_Variable_named(L"return");
array3277 = (Object)new_Type_Array_with(1, (Object)variable203);
// new
send29713 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
assign3607 = (Object)new_AST_Assign((Object)localvariable4134, (Object)send29713);
// match:
send29714 = (Object)new_AST_Send((Object)instancevariable1012, (Object)symbol5516, 1, (Object)localvariable4133);
assign3608 = (Object)new_AST_Assign((Object)localvariable4135, (Object)send29714);
// escape:
send29715 = (Object)new_AST_Send((Object)variable203, (Object)SMB_escape_, 1, (Object)localvariable4135);
block1868 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29715);
// ifNil:
send29716 = (Object)new_AST_Send((Object)localvariable4135, (Object)symbol5564, 1, (Object)block1868);
// add:
send29717 = (Object)new_AST_Send((Object)localvariable4134, (Object)symbol5376, 1, (Object)localvariable4135);
// privateMatch:on:
send29718 = (Object)new_AST_Send((Object)Self, (Object)symbol5546, 2, (Object)localvariable4133, (Object)localvariable4134);
block1869 = (Object)new_AST_Block_with((Type_Array)array3277, (Type_Array)empty_Type_Array, 1, 5, assign3607, assign3608, send29716, send29717, send29718);
// on:
send29719 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1869);
method4069 = (Object)new_AST_Method_with((Type_Array)array3275, (Type_Array)array3276, 1, send29719);
methodclosure4069 = (Object)new_Runtime_MethodClosure(method4069);
store_method((Type_Class)class696, (Type_Symbol)symbol5523, (Runtime_MethodClosure)methodclosure4069);

classreference804 = (Object)new_Organization_ClassReference((Type_Class)class696);
// new:
send29720 = (Object)new_AST_Send((Object)classreference804, (Object)symbol5300, 1, (Object)Self);
method4070 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29720);
methodclosure4070 = (Object)new_Runtime_MethodClosure(method4070);
store_method((Type_Class)class693, (Type_Symbol)symbol5521, (Runtime_MethodClosure)methodclosure4070);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable4136 = (Object)new_AST_Variable_named(L"other");
array3278 = (Object)new_Type_Array_with(1, (Object)localvariable4136);
// &
send29721 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable4136);
// skipWhitespace:
send29722 = (Object)new_AST_Send((Object)send29721, (Object)symbol5547, 1, (Object)False_Const);
method4071 = (Object)new_AST_Method_with((Type_Array)array3278, (Type_Array)empty_Type_Array, 1, send29722);
symbol5510 = (Object)new_Type_Symbol_cached(L"&&");
methodclosure4071 = (Object)new_Runtime_MethodClosure(method4071);
store_method((Type_Class)class693, (Type_Symbol)symbol5510, (Runtime_MethodClosure)methodclosure4071);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable4137 = (Object)new_AST_Variable_named(L"bool");
array3279 = (Object)new_Type_Array_with(1, (Object)localvariable4137);
assign3609 = (Object)new_AST_Assign((Object)instancevariable1009, (Object)localvariable4137);
method4072 = (Object)new_AST_Method_with((Type_Array)array3279, (Type_Array)empty_Type_Array, 2, assign3609, Self);
symbol5518 = (Object)new_Type_Symbol_cached(L"omit:");
methodclosure4072 = (Object)new_Runtime_MethodClosure(method4072);
store_method((Type_Class)class693, (Type_Symbol)symbol5518, (Runtime_MethodClosure)methodclosure4072);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
// times
send29723 = (Object)new_AST_Send((Object)Self, (Object)symbol5509, 0);
// skipWhitespace:
send29724 = (Object)new_AST_Send((Object)send29723, (Object)symbol5547, 1, (Object)False_Const);
method4073 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29724);
symbol5511 = (Object)new_Type_Symbol_cached(L"strongTimes");
methodclosure4073 = (Object)new_Runtime_MethodClosure(method4073);
store_method((Type_Class)class693, (Type_Symbol)symbol5511, (Runtime_MethodClosure)methodclosure4073);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable204 = (Object)new_AST_Variable_named(L"return");
array3280 = (Object)new_Type_Array_with(1, (Object)variable204);
symbol5519 = (Object)new_Type_Symbol_cached(L"printString");
super348 = (Object)new_AST_Super((Object)symbol5519, 0);
// escape:
send29725 = (Object)new_AST_Send((Object)variable204, (Object)SMB_escape_, 1, (Object)super348);
block1870 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29725);
// ifNil:
send29726 = (Object)new_AST_Send((Object)instancevariable1008, (Object)symbol5564, 1, (Object)block1870);
string3443 = (Object)new_Type_String(L"parser (");
constant5782 = (Object)new_AST_Constant((Object)string3443);
// ,
send29727 = (Object)new_AST_Send((Object)constant5782, (Object)SMB__concat, 1, (Object)instancevariable1008);
string3444 = (Object)new_Type_String(L")");
constant5783 = (Object)new_AST_Constant((Object)string3444);
// ,
send29728 = (Object)new_AST_Send((Object)send29727, (Object)SMB__concat, 1, (Object)constant5783);
block1871 = (Object)new_AST_Block_with((Type_Array)array3280, (Type_Array)empty_Type_Array, 1, 2, send29726, send29728);
// on:
send29729 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1871);
method4074 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29729);
methodclosure4074 = (Object)new_Runtime_MethodClosure(method4074);
store_method((Type_Class)class693, (Type_Symbol)symbol5519, (Runtime_MethodClosure)methodclosure4074);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable4138 = (Object)new_AST_Variable_named(L"expression");
array3281 = (Object)new_Type_Array_with(1, (Object)localvariable4138);

// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable4139 = (Object)new_AST_Variable_named(L"theChildren");
array3282 = (Object)new_Type_Array_with(1, (Object)localvariable4139);
super349 = (Object)new_AST_Super((Object)symbol5218, 0);
assign3610 = (Object)new_AST_Assign((Object)instancevariable1021, (Object)localvariable4139);
assign3611 = (Object)new_AST_Assign((Object)instancevariable1022, (Object)True_Const);
method4075 = (Object)new_AST_Method_with((Type_Array)array3282, (Type_Array)empty_Type_Array, 4, super349, assign3610, assign3611, Self);
methodclosure4075 = (Object)new_Runtime_MethodClosure(method4075);
store_method((Type_Class)class702, (Type_Symbol)symbol5545, (Runtime_MethodClosure)methodclosure4075);


// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable4140 = (Object)new_AST_Variable_named(L"anObject");
array3283 = (Object)new_Type_Array_with(1, (Object)localvariable4140);
assign3612 = (Object)new_AST_Assign((Object)instancevariable1022, (Object)localvariable4140);
method4076 = (Object)new_AST_Method_with((Type_Array)array3283, (Type_Array)empty_Type_Array, 2, assign3612, Self);
methodclosure4076 = (Object)new_Runtime_MethodClosure(method4076);
store_method((Type_Class)class702, (Type_Symbol)symbol5547, (Runtime_MethodClosure)methodclosure4076);


// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method4077 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1022);
methodclosure4077 = (Object)new_Runtime_MethodClosure(method4077);
store_method((Type_Class)class702, (Type_Symbol)symbol5346, (Runtime_MethodClosure)methodclosure4077);


// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable4141 = (Object)new_AST_Variable_named(L"child");
array3284 = (Object)new_Type_Array_with(1, (Object)localvariable4141);
symbol5514 = (Object)new_Type_Symbol_cached(L"asPEG");
// asPEG
send29730 = (Object)new_AST_Send((Object)localvariable4141, (Object)symbol5514, 0);
// add:
send29731 = (Object)new_AST_Send((Object)instancevariable1021, (Object)symbol5376, 1, (Object)send29730);
method4078 = (Object)new_AST_Method_with((Type_Array)array3284, (Type_Array)empty_Type_Array, 2, send29731, Self);
symbol5550 = (Object)new_Type_Symbol_cached(L"<&");
methodclosure4078 = (Object)new_Runtime_MethodClosure(method4078);
store_method((Type_Class)class702, (Type_Symbol)symbol5550, (Runtime_MethodClosure)methodclosure4078);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super350 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send29732 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
// initialize:
send29733 = (Object)new_AST_Send((Object)Self, (Object)symbol5545, 1, (Object)send29732);
method4079 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super350, send29733, Self);
methodclosure4079 = (Object)new_Runtime_MethodClosure(method4079);
store_method((Type_Class)class702, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4079);


// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable4142 = (Object)new_AST_Variable_named(L"input");
array3285 = (Object)new_Type_Array_with(1, (Object)localvariable4142);
localvariable4143 = (Object)new_AST_Variable_named(L"result");
localvariable4144 = (Object)new_AST_Variable_named(L"match");
array3286 = (Object)new_Type_Array_with(2, (Object)localvariable4143, (Object)localvariable4144);
variable205 = (Object)new_AST_Variable_named(L"return");
array3287 = (Object)new_Type_Array_with(1, (Object)variable205);
// new
send29734 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
assign3613 = (Object)new_AST_Assign((Object)localvariable4143, (Object)send29734);
localvariable4145 = (Object)new_AST_Variable_named(L"child");
array3288 = (Object)new_Type_Array_with(1, (Object)localvariable4145);
// skipWhitespace
send29735 = (Object)new_AST_Send((Object)localvariable4142, (Object)symbol5346, 0);
block1872 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29735);
// ifTrue:
send29736 = (Object)new_AST_Send((Object)instancevariable1022, (Object)SMB_ifTrue_, 1, (Object)block1872);
// match:
send29737 = (Object)new_AST_Send((Object)localvariable4145, (Object)symbol5516, 1, (Object)localvariable4142);
assign3614 = (Object)new_AST_Assign((Object)localvariable4144, (Object)send29737);
// escape:
send29738 = (Object)new_AST_Send((Object)variable205, (Object)SMB_escape_, 1, (Object)localvariable4144);
block1873 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29738);
// ifNil:
send29739 = (Object)new_AST_Send((Object)localvariable4144, (Object)symbol5564, 1, (Object)block1873);
symbol5515 = (Object)new_Type_Symbol_cached(L"omit");
// omit
send29740 = (Object)new_AST_Send((Object)localvariable4145, (Object)symbol5515, 0);
// add:
send29741 = (Object)new_AST_Send((Object)localvariable4143, (Object)symbol5376, 1, (Object)localvariable4144);
block1874 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29741);
// ifFalse:
send29742 = (Object)new_AST_Send((Object)send29740, (Object)SMB_ifFalse_, 1, (Object)block1874);
block1875 = (Object)new_AST_Block_with((Type_Array)array3288, (Type_Array)empty_Type_Array, 2, 4, send29736, assign3614, send29739, send29742);
// do:
send29743 = (Object)new_AST_Send((Object)instancevariable1021, (Object)symbol5375, 1, (Object)block1875);
// size
send29744 = (Object)new_AST_Send((Object)localvariable4143, (Object)SMB_size, 0);
smallint2019 = (Object)new_Type_SmallInt(1);
constant5784 = (Object)new_AST_Constant((Object)smallint2019);
// =
send29745 = (Object)new_AST_Send((Object)send29744, (Object)SMB__equal, 1, (Object)constant5784);
// first
send29746 = (Object)new_AST_Send((Object)localvariable4143, (Object)symbol5372, 0);
// escape:
send29747 = (Object)new_AST_Send((Object)variable205, (Object)SMB_escape_, 1, (Object)send29746);
block1876 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29747);
// ifTrue:
send29748 = (Object)new_AST_Send((Object)send29745, (Object)SMB_ifTrue_, 1, (Object)block1876);
block1877 = (Object)new_AST_Block_with((Type_Array)array3287, (Type_Array)empty_Type_Array, 1, 4, assign3613, send29743, send29748, localvariable4143);
// on:
send29749 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1877);
method4080 = (Object)new_AST_Method_with((Type_Array)array3285, (Type_Array)array3286, 1, send29749);
methodclosure4080 = (Object)new_Runtime_MethodClosure(method4080);
store_method((Type_Class)class702, (Type_Symbol)symbol5523, (Runtime_MethodClosure)methodclosure4080);

classreference805 = (Object)new_Organization_ClassReference((Type_Class)class702);
// new
send29750 = (Object)new_AST_Send((Object)classreference805, (Object)symbol5310, 0);
// <&
send29751 = (Object)new_AST_Send((Object)send29750, (Object)symbol5550, 1, (Object)Self);
// <&
send29752 = (Object)new_AST_Send((Object)send29751, (Object)symbol5550, 1, (Object)localvariable4138);
method4081 = (Object)new_AST_Method_with((Type_Array)array3281, (Type_Array)empty_Type_Array, 1, send29752);
methodclosure4081 = (Object)new_Runtime_MethodClosure(method4081);
store_method((Type_Class)class693, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure4081);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send29753 = (Object)new_AST_Send((Object)instancevariable1008, (Object)SMB_hash, 0);
method4082 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29753);
methodclosure4082 = (Object)new_Runtime_MethodClosure(method4082);
store_method((Type_Class)class693, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure4082);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable4146 = (Object)new_AST_Variable_named(L"input");
array3289 = (Object)new_Type_Array_with(1, (Object)localvariable4146);
symbol5567 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send29754 = (Object)new_AST_Send((Object)Self, (Object)symbol5567, 0);
method4083 = (Object)new_AST_Method_with((Type_Array)array3289, (Type_Array)empty_Type_Array, 2, send29754, Self);
methodclosure4083 = (Object)new_Runtime_MethodClosure(method4083);
store_method((Type_Class)class693, (Type_Symbol)symbol5523, (Runtime_MethodClosure)methodclosure4083);


// PEGExpression>>name
//name
// 	^ name
method4084 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1008);
methodclosure4084 = (Object)new_Runtime_MethodClosure(method4084);
store_method((Type_Class)class693, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4084);


// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
// optional
send29755 = (Object)new_AST_Send((Object)Self, (Object)symbol5513, 0);
// skipWhitespace:
send29756 = (Object)new_AST_Send((Object)send29755, (Object)symbol5547, 1, (Object)False_Const);
method4085 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29756);
symbol5524 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure4085 = (Object)new_Runtime_MethodClosure(method4085);
store_method((Type_Class)class693, (Type_Symbol)symbol5524, (Runtime_MethodClosure)methodclosure4085);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send29757 = (Object)new_AST_Send((Object)classreference802, (Object)symbol5300, 1, (Object)Self);
method4086 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29757);
methodclosure4086 = (Object)new_Runtime_MethodClosure(method4086);
store_method((Type_Class)class693, (Type_Symbol)symbol5513, (Runtime_MethodClosure)methodclosure4086);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method4087 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol5505 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure4087 = (Object)new_Runtime_MethodClosure(method4087);
store_method((Type_Class)class693, (Type_Symbol)symbol5505, (Runtime_MethodClosure)methodclosure4087);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign3615 = (Object)new_AST_Assign((Object)instancevariable1009, (Object)False_Const);
method4088 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign3615, Self);
methodclosure4088 = (Object)new_Runtime_MethodClosure(method4088);
store_method((Type_Class)class693, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4088);


// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable4147 = (Object)new_AST_Variable_named(L"input");
array3290 = (Object)new_Type_Array_with(1, (Object)localvariable4147);
symbol5568 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send29758 = (Object)new_AST_Send((Object)Self, (Object)symbol5568, 0);
localvariable4148 = (Object)new_AST_Variable_named(L"receiver");
array3291 = (Object)new_Type_Array_with(1, (Object)localvariable4148);
symbol5569 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send29759 = (Object)new_AST_Send((Object)localvariable4148, (Object)symbol5569, 0);
symbol5570 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send29760 = (Object)new_AST_Send((Object)localvariable4148, (Object)symbol5570, 0);
block1878 = (Object)new_AST_Block_with((Type_Array)array3291, (Type_Array)empty_Type_Array, 2, 2, send29759, send29760);
// value:
send29761 = (Object)new_AST_Send((Object)block1878, (Object)SMB_value_, 1, (Object)classreference806);
block1879 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29761);
// ifTrue:
send29762 = (Object)new_AST_Send((Object)send29758, (Object)SMB_ifTrue_, 1, (Object)block1879);
method4089 = (Object)new_AST_Method_with((Type_Array)array3290, (Type_Array)empty_Type_Array, 2, send29762, Self);
symbol5525 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure4089 = (Object)new_Runtime_MethodClosure(method4089);
store_method((Type_Class)class693, (Type_Symbol)symbol5525, (Runtime_MethodClosure)methodclosure4089);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable4149 = (Object)new_AST_Variable_named(L"expression");
array3292 = (Object)new_Type_Array_with(1, (Object)localvariable4149);

// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable4150 = (Object)new_AST_Variable_named(L"newChildren");
array3293 = (Object)new_Type_Array_with(1, (Object)localvariable4150);
super351 = (Object)new_AST_Super((Object)symbol5218, 0);
assign3616 = (Object)new_AST_Assign((Object)instancevariable1023, (Object)localvariable4150);
method4090 = (Object)new_AST_Method_with((Type_Array)array3293, (Type_Array)empty_Type_Array, 3, super351, assign3616, Self);
methodclosure4090 = (Object)new_Runtime_MethodClosure(method4090);
store_method((Type_Class)class703, (Type_Symbol)symbol5545, (Runtime_MethodClosure)methodclosure4090);


// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable4151 = (Object)new_AST_Variable_named(L"child");
array3294 = (Object)new_Type_Array_with(1, (Object)localvariable4151);
// asPEG
send29763 = (Object)new_AST_Send((Object)localvariable4151, (Object)symbol5514, 0);
// add:
send29764 = (Object)new_AST_Send((Object)instancevariable1023, (Object)symbol5376, 1, (Object)send29763);
method4091 = (Object)new_AST_Method_with((Type_Array)array3294, (Type_Array)empty_Type_Array, 2, send29764, Self);
symbol5337 = (Object)new_Type_Symbol_cached(L"<=");
methodclosure4091 = (Object)new_Runtime_MethodClosure(method4091);
store_method((Type_Class)class703, (Type_Symbol)symbol5337, (Runtime_MethodClosure)methodclosure4091);


// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
super352 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send29765 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
// initialize:
send29766 = (Object)new_AST_Send((Object)Self, (Object)symbol5545, 1, (Object)send29765);
method4092 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super352, send29766, Self);
methodclosure4092 = (Object)new_Runtime_MethodClosure(method4092);
store_method((Type_Class)class703, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4092);


// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable4152 = (Object)new_AST_Variable_named(L"input");
array3295 = (Object)new_Type_Array_with(1, (Object)localvariable4152);
localvariable4153 = (Object)new_AST_Variable_named(L"match");
array3296 = (Object)new_Type_Array_with(1, (Object)localvariable4153);
variable206 = (Object)new_AST_Variable_named(L"return");
array3297 = (Object)new_Type_Array_with(1, (Object)variable206);
localvariable4154 = (Object)new_AST_Variable_named(L"child");
array3298 = (Object)new_Type_Array_with(1, (Object)localvariable4154);
// match:
send29767 = (Object)new_AST_Send((Object)localvariable4154, (Object)symbol5516, 1, (Object)localvariable4152);
assign3617 = (Object)new_AST_Assign((Object)localvariable4153, (Object)send29767);
symbol5571 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
// escape:
send29768 = (Object)new_AST_Send((Object)variable206, (Object)SMB_escape_, 1, (Object)localvariable4153);
block1880 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29768);
// ifNotNil:
send29769 = (Object)new_AST_Send((Object)localvariable4153, (Object)symbol5571, 1, (Object)block1880);
block1881 = (Object)new_AST_Block_with((Type_Array)array3298, (Type_Array)empty_Type_Array, 2, 2, assign3617, send29769);
// do:
send29770 = (Object)new_AST_Send((Object)instancevariable1023, (Object)symbol5375, 1, (Object)block1881);
block1882 = (Object)new_AST_Block_with((Type_Array)array3297, (Type_Array)empty_Type_Array, 1, 2, send29770, Nil_Const);
// on:
send29771 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1882);
method4093 = (Object)new_AST_Method_with((Type_Array)array3295, (Type_Array)array3296, 1, send29771);
methodclosure4093 = (Object)new_Runtime_MethodClosure(method4093);
store_method((Type_Class)class703, (Type_Symbol)symbol5523, (Runtime_MethodClosure)methodclosure4093);

classreference807 = (Object)new_Organization_ClassReference((Type_Class)class703);
// new
send29772 = (Object)new_AST_Send((Object)classreference807, (Object)symbol5310, 0);
// <=
send29773 = (Object)new_AST_Send((Object)send29772, (Object)symbol5337, 1, (Object)Self);
// <=
send29774 = (Object)new_AST_Send((Object)send29773, (Object)symbol5337, 1, (Object)localvariable4149);
method4094 = (Object)new_AST_Method_with((Type_Array)array3292, (Type_Array)empty_Type_Array, 1, send29774);
methodclosure4094 = (Object)new_Runtime_MethodClosure(method4094);
store_method((Type_Class)class693, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure4094);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable4155 = (Object)new_AST_Variable_named(L"input");
array3299 = (Object)new_Type_Array_with(1, (Object)localvariable4155);
// debug
send29775 = (Object)new_AST_Send((Object)Self, (Object)symbol5568, 0);
symbol5572 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send29776 = (Object)new_AST_Send((Object)classreference806, (Object)symbol5572, 0);
block1883 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29776);
// ifTrue:
send29777 = (Object)new_AST_Send((Object)send29775, (Object)SMB_ifTrue_, 1, (Object)block1883);
method4095 = (Object)new_AST_Method_with((Type_Array)array3299, (Type_Array)empty_Type_Array, 2, send29777, Self);
symbol5506 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure4095 = (Object)new_Runtime_MethodClosure(method4095);
store_method((Type_Class)class693, (Type_Symbol)symbol5506, (Runtime_MethodClosure)methodclosure4095);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method4096 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4096 = (Object)new_Runtime_MethodClosure(method4096);
store_method((Type_Class)class693, (Type_Symbol)symbol5514, (Runtime_MethodClosure)methodclosure4096);


// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable4156 = (Object)new_AST_Variable_named(L"aName");
array3300 = (Object)new_Type_Array_with(1, (Object)localvariable4156);
assign3618 = (Object)new_AST_Assign((Object)instancevariable1008, (Object)localvariable4156);
method4097 = (Object)new_AST_Method_with((Type_Array)array3300, (Type_Array)empty_Type_Array, 2, assign3618, Self);
symbol5393 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure4097 = (Object)new_Runtime_MethodClosure(method4097);
store_method((Type_Class)class693, (Type_Symbol)symbol5393, (Runtime_MethodClosure)methodclosure4097);


// PEGExpression>>omit
//omit
// 	^ omit
method4098 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1009);
methodclosure4098 = (Object)new_Runtime_MethodClosure(method4098);
store_method((Type_Class)class693, (Type_Symbol)symbol5515, (Runtime_MethodClosure)methodclosure4098);

classreference806 = (Object)new_Organization_ClassReference((Type_Class)class693);

// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable4157 = (Object)new_AST_Variable_named(L"input");
array3301 = (Object)new_Type_Array_with(1, (Object)localvariable4157);
localvariable4158 = (Object)new_AST_Variable_named(L"result");
array3302 = (Object)new_Type_Array_with(1, (Object)localvariable4158);
symbol5352 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
// memoizeMatch:
send29778 = (Object)new_AST_Send((Object)localvariable4157, (Object)symbol5352, 1, (Object)Self);
assign3619 = (Object)new_AST_Assign((Object)localvariable4158, (Object)send29778);
method4099 = (Object)new_AST_Method_with((Type_Array)array3301, (Type_Array)array3302, 2, assign3619, localvariable4158);
methodclosure4099 = (Object)new_Runtime_MethodClosure(method4099);
store_method((Type_Class)class699, (Type_Symbol)symbol5516, (Runtime_MethodClosure)methodclosure4099);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable4159 = (Object)new_AST_Variable_named(L"input");
array3303 = (Object)new_Type_Array_with(1, (Object)localvariable4159);
localvariable4160 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable4161 = (Object)new_AST_Variable_named(L"result");
array3304 = (Object)new_Type_Array_with(2, (Object)localvariable4160, (Object)localvariable4161);

// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable4162 = (Object)new_AST_Variable_named(L"parser");
array3305 = (Object)new_Type_Array_with(1, (Object)localvariable4162);
localvariable4163 = (Object)new_AST_Variable_named(L"result");
array3306 = (Object)new_Type_Array_with(1, (Object)localvariable4163);
symbol5529 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send29779 = (Object)new_AST_Send((Object)localvariable4162, (Object)symbol5529, 1, (Object)Self);
assign3620 = (Object)new_AST_Assign((Object)localvariable4163, (Object)send29779);
symbol5573 = (Object)new_Type_Symbol_cached(L"@");
// @
send29780 = (Object)new_AST_Send((Object)instancevariable1006, (Object)symbol5573, 1, (Object)localvariable4163);
method4100 = (Object)new_AST_Method_with((Type_Array)array3305, (Type_Array)array3306, 2, assign3620, send29780);
symbol5353 = (Object)new_Type_Symbol_cached(L"doMatch:");
methodclosure4100 = (Object)new_Runtime_MethodClosure(method4100);
store_method((Type_Class)class700, (Type_Symbol)symbol5353, (Runtime_MethodClosure)methodclosure4100);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable4164 = (Object)new_AST_Variable_named(L"parser");
array3307 = (Object)new_Type_Array_with(1, (Object)localvariable4164);
localvariable4165 = (Object)new_AST_Variable_named(L"result");
localvariable4166 = (Object)new_AST_Variable_named(L"doCache");
array3308 = (Object)new_Type_Array_with(2, (Object)localvariable4165, (Object)localvariable4166);
variable207 = (Object)new_AST_Variable_named(L"return");
array3309 = (Object)new_Type_Array_with(1, (Object)variable207);
assign3621 = (Object)new_AST_Assign((Object)localvariable4166, (Object)True_Const);
symbol5351 = (Object)new_Type_Symbol_cached(L"bucket");
// bucket
send29781 = (Object)new_AST_Send((Object)Self, (Object)symbol5351, 0);
// doMatch:
send29782 = (Object)new_AST_Send((Object)Self, (Object)symbol5353, 1, (Object)localvariable4164);
block1884 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29782);
// at:ifAbsentPut:
send29783 = (Object)new_AST_Send((Object)send29781, (Object)symbol5542, 2, (Object)localvariable4164, (Object)block1884);
assign3622 = (Object)new_AST_Assign((Object)localvariable4165, (Object)send29783);
symbol5574 = (Object)new_Type_Symbol_cached(L"x");
// x
send29784 = (Object)new_AST_Send((Object)localvariable4165, (Object)symbol5574, 0);
assign3623 = (Object)new_AST_Assign((Object)instancevariable1006, (Object)send29784);
symbol5575 = (Object)new_Type_Symbol_cached(L"y");
// y
send29785 = (Object)new_AST_Send((Object)localvariable4165, (Object)symbol5575, 0);
// escape:
send29786 = (Object)new_AST_Send((Object)variable207, (Object)SMB_escape_, 1, (Object)send29785);
block1885 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign3622, assign3623, send29786);
// doMatch:
send29787 = (Object)new_AST_Send((Object)Self, (Object)symbol5353, 1, (Object)localvariable4164);
// y
send29788 = (Object)new_AST_Send((Object)send29787, (Object)symbol5575, 0);
// escape:
send29789 = (Object)new_AST_Send((Object)variable207, (Object)SMB_escape_, 1, (Object)send29788);
block1886 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29789);
// ifTrue:ifFalse:
send29790 = (Object)new_AST_Send((Object)localvariable4166, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1885, (Object)block1886);
block1887 = (Object)new_AST_Block_with((Type_Array)array3309, (Type_Array)empty_Type_Array, 1, 3, assign3621, send29790, Self);
// on:
send29791 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1887);
method4101 = (Object)new_AST_Method_with((Type_Array)array3307, (Type_Array)array3308, 1, send29791);
methodclosure4101 = (Object)new_Runtime_MethodClosure(method4101);
store_method((Type_Class)class700, (Type_Symbol)symbol5352, (Runtime_MethodClosure)methodclosure4101);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable4167 = (Object)new_AST_Variable_named(L"aString");
localvariable4168 = (Object)new_AST_Variable_named(L"aSeparator");
array3310 = (Object)new_Type_Array_with(2, (Object)localvariable4167, (Object)localvariable4168);
super353 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable4167);
assign3624 = (Object)new_AST_Assign((Object)instancevariable1019, (Object)localvariable4168);
// size
send29792 = (Object)new_AST_Send((Object)localvariable4167, (Object)SMB_size, 0);
smallint2020 = (Object)new_Type_SmallInt(1);
constant5785 = (Object)new_AST_Constant((Object)smallint2020);
// +
send29793 = (Object)new_AST_Send((Object)send29792, (Object)SMB__plus, 1, (Object)constant5785);
// new:
send29794 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)send29793);
assign3625 = (Object)new_AST_Assign((Object)instancevariable1020, (Object)send29794);
method4102 = (Object)new_AST_Method_with((Type_Array)array3310, (Type_Array)empty_Type_Array, 4, super353, assign3624, assign3625, Self);
symbol5348 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure4102 = (Object)new_Runtime_MethodClosure(method4102);
store_method((Type_Class)class700, (Type_Symbol)symbol5348, (Runtime_MethodClosure)methodclosure4102);


// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
// match:
send29795 = (Object)new_AST_Send((Object)instancevariable1019, (Object)symbol5516, 1, (Object)Self);
method4103 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29795);
methodclosure4103 = (Object)new_Runtime_MethodClosure(method4103);
store_method((Type_Class)class700, (Type_Symbol)symbol5346, (Runtime_MethodClosure)methodclosure4103);


// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable4169 = (Object)new_AST_Variable_named(L"bucket");
array3311 = (Object)new_Type_Array_with(1, (Object)localvariable4169);
variable208 = (Object)new_AST_Variable_named(L"return");
array3312 = (Object)new_Type_Array_with(1, (Object)variable208);
smallint2021 = (Object)new_Type_SmallInt(1);
constant5786 = (Object)new_AST_Constant((Object)smallint2021);
// +
send29796 = (Object)new_AST_Send((Object)instancevariable1006, (Object)SMB__plus, 1, (Object)constant5786);
// at:
send29797 = (Object)new_AST_Send((Object)instancevariable1020, (Object)SMB_at_, 1, (Object)send29796);
assign3626 = (Object)new_AST_Assign((Object)localvariable4169, (Object)send29797);
// escape:
send29798 = (Object)new_AST_Send((Object)variable208, (Object)SMB_escape_, 1, (Object)localvariable4169);
block1888 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29798);
// ifNotNil:
send29799 = (Object)new_AST_Send((Object)localvariable4169, (Object)symbol5571, 1, (Object)block1888);
smallint2022 = (Object)new_Type_SmallInt(1);
constant5787 = (Object)new_AST_Constant((Object)smallint2022);
// +
send29800 = (Object)new_AST_Send((Object)instancevariable1006, (Object)SMB__plus, 1, (Object)constant5787);
// new
send29801 = (Object)new_AST_Send((Object)classreference795, (Object)symbol5310, 0);
// at:put:
send29802 = (Object)new_AST_Send((Object)instancevariable1020, (Object)SMB_at_put_, 2, (Object)send29800, (Object)send29801);
block1889 = (Object)new_AST_Block_with((Type_Array)array3312, (Type_Array)empty_Type_Array, 1, 3, assign3626, send29799, send29802);
// on:
send29803 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1889);
method4104 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3311, 1, send29803);
methodclosure4104 = (Object)new_Runtime_MethodClosure(method4104);
store_method((Type_Class)class700, (Type_Symbol)symbol5351, (Runtime_MethodClosure)methodclosure4104);


// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable4170 = (Object)new_AST_Variable_named(L"otherString");
array3313 = (Object)new_Type_Array_with(1, (Object)localvariable4170);
symbol5345 = (Object)new_Type_Symbol_cached(L"beginsWith:");
// beginsWith:
send29804 = (Object)new_AST_Send((Object)Self, (Object)symbol5345, 1, (Object)localvariable4170);
block1890 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable4170);
block1891 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send29805 = (Object)new_AST_Send((Object)send29804, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1890, (Object)block1891);
method4105 = (Object)new_AST_Method_with((Type_Array)array3313, (Type_Array)empty_Type_Array, 1, send29805);
symbol5347 = (Object)new_Type_Symbol_cached(L"scan:");
methodclosure4105 = (Object)new_Runtime_MethodClosure(method4105);
store_method((Type_Class)class700, (Type_Symbol)symbol5347, (Runtime_MethodClosure)methodclosure4105);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable4171 = (Object)new_AST_Variable_named(L"subCollection");
array3314 = (Object)new_Type_Array_with(1, (Object)localvariable4171);
localvariable4172 = (Object)new_AST_Variable_named(L"pattern");
localvariable4173 = (Object)new_AST_Variable_named(L"startMatch");
array3315 = (Object)new_Type_Array_with(2, (Object)localvariable4172, (Object)localvariable4173);
variable209 = (Object)new_AST_Variable_named(L"return");
array3316 = (Object)new_Type_Array_with(1, (Object)variable209);
symbol5576 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send29806 = (Object)new_AST_Send((Object)localvariable4171, (Object)symbol5576, 0);
assign3627 = (Object)new_AST_Assign((Object)localvariable4172, (Object)send29806);
assign3628 = (Object)new_AST_Assign((Object)localvariable4173, (Object)Nil_Const);
// atEnd
send29807 = (Object)new_AST_Send((Object)localvariable4172, (Object)SMB_atEnd, 0);
block1892 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29807);
// atEnd
send29808 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
// escape:
send29809 = (Object)new_AST_Send((Object)variable209, (Object)SMB_escape_, 1, (Object)False_Const);
block1893 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29809);
// ifTrue:
send29810 = (Object)new_AST_Send((Object)send29808, (Object)SMB_ifTrue_, 1, (Object)block1893);
symbol5577 = (Object)new_Type_Symbol_cached(L"next");
// next
send29811 = (Object)new_AST_Send((Object)Self, (Object)symbol5577, 0);
// next
send29812 = (Object)new_AST_Send((Object)localvariable4172, (Object)symbol5577, 0);
// ~=
send29813 = (Object)new_AST_Send((Object)send29811, (Object)symbol5220, 1, (Object)send29812);
// escape:
send29814 = (Object)new_AST_Send((Object)variable209, (Object)SMB_escape_, 1, (Object)False_Const);
block1894 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29814);
// ifTrue:
send29815 = (Object)new_AST_Send((Object)send29813, (Object)SMB_ifTrue_, 1, (Object)block1894);
block1895 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send29810, send29815);
// whileFalse:
send29816 = (Object)new_AST_Send((Object)block1892, (Object)SMB_whileFalse_, 1, (Object)block1895);
block1896 = (Object)new_AST_Block_with((Type_Array)array3316, (Type_Array)empty_Type_Array, 1, 4, assign3627, assign3628, send29816, True_Const);
// on:
send29817 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1896);
method4106 = (Object)new_AST_Method_with((Type_Array)array3314, (Type_Array)array3315, 1, send29817);
methodclosure4106 = (Object)new_Runtime_MethodClosure(method4106);
store_method((Type_Class)class700, (Type_Symbol)symbol5345, (Runtime_MethodClosure)methodclosure4106);

classreference808 = (Object)new_Organization_ClassReference((Type_Class)class700);
// on:separator:
send29818 = (Object)new_AST_Send((Object)classreference808, (Object)symbol5348, 2, (Object)localvariable4159, (Object)instancevariable1018);
assign3629 = (Object)new_AST_Assign((Object)localvariable4160, (Object)send29818);
// match:
send29819 = (Object)new_AST_Send((Object)Self, (Object)symbol5516, 1, (Object)localvariable4160);
assign3630 = (Object)new_AST_Assign((Object)localvariable4161, (Object)send29819);
method4107 = (Object)new_AST_Method_with((Type_Array)array3303, (Type_Array)array3304, 3, assign3629, assign3630, localvariable4161);
symbol5528 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure4107 = (Object)new_Runtime_MethodClosure(method4107);
store_method((Type_Class)class699, (Type_Symbol)symbol5528, (Runtime_MethodClosure)methodclosure4107);


// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable4174 = (Object)new_AST_Variable_named(L"aSeparator");
array3317 = (Object)new_Type_Array_with(1, (Object)localvariable4174);
assign3631 = (Object)new_AST_Assign((Object)instancevariable1018, (Object)localvariable4174);
method4108 = (Object)new_AST_Method_with((Type_Array)array3317, (Type_Array)empty_Type_Array, 2, assign3631, Self);
symbol5526 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure4108 = (Object)new_Runtime_MethodClosure(method4108);
store_method((Type_Class)class699, (Type_Symbol)symbol5526, (Runtime_MethodClosure)methodclosure4108);


// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable4175 = (Object)new_AST_Variable_named(L"theExpression");
array3318 = (Object)new_Type_Array_with(1, (Object)localvariable4175);
// asPEG
send29820 = (Object)new_AST_Send((Object)localvariable4175, (Object)symbol5514, 0);
assign3632 = (Object)new_AST_Assign((Object)instancevariable1015, (Object)send29820);
method4109 = (Object)new_AST_Method_with((Type_Array)array3318, (Type_Array)empty_Type_Array, 2, assign3632, Self);
methodclosure4109 = (Object)new_Runtime_MethodClosure(method4109);
store_method((Type_Class)class699, (Type_Symbol)symbol5337, (Runtime_MethodClosure)methodclosure4109);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super354 = (Object)new_AST_Super((Object)symbol5218, 0);
// class
send29821 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol5578 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send29822 = (Object)new_AST_Send((Object)send29821, (Object)symbol5578, 0);
assign3633 = (Object)new_AST_Assign((Object)instancevariable1018, (Object)send29822);
method4110 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super354, assign3633, Self);
methodclosure4110 = (Object)new_Runtime_MethodClosure(method4110);
store_method((Type_Class)class699, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4110);


// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable4176 = (Object)new_AST_Variable_named(L"aBlock");
array3319 = (Object)new_Type_Array_with(1, (Object)localvariable4176);
assign3634 = (Object)new_AST_Assign((Object)instancevariable1016, (Object)localvariable4176);
method4111 = (Object)new_AST_Method_with((Type_Array)array3319, (Type_Array)empty_Type_Array, 2, assign3634, Self);
symbol5527 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure4111 = (Object)new_Runtime_MethodClosure(method4111);
store_method((Type_Class)class699, (Type_Symbol)symbol5527, (Runtime_MethodClosure)methodclosure4111);


// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable4177 = (Object)new_AST_Variable_named(L"input");
array3320 = (Object)new_Type_Array_with(1, (Object)localvariable4177);
localvariable4178 = (Object)new_AST_Variable_named(L"match");
array3321 = (Object)new_Type_Array_with(1, (Object)localvariable4178);
variable210 = (Object)new_AST_Variable_named(L"return");
array3322 = (Object)new_Type_Array_with(1, (Object)variable210);
// match:
send29823 = (Object)new_AST_Send((Object)instancevariable1015, (Object)symbol5516, 1, (Object)localvariable4177);
assign3635 = (Object)new_AST_Assign((Object)localvariable4178, (Object)send29823);
symbol5579 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block1897 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable4178);
// escape:
send29824 = (Object)new_AST_Send((Object)variable210, (Object)SMB_escape_, 1, (Object)localvariable4178);
block1898 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29824);
// ifNil:
send29825 = (Object)new_AST_Send((Object)instancevariable1016, (Object)symbol5564, 1, (Object)block1898);
// value:
send29826 = (Object)new_AST_Send((Object)instancevariable1016, (Object)SMB_value_, 1, (Object)localvariable4178);
block1899 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send29825, send29826);
// ifNil:ifNotNil:
send29827 = (Object)new_AST_Send((Object)localvariable4178, (Object)symbol5579, 2, (Object)block1897, (Object)block1899);
block1900 = (Object)new_AST_Block_with((Type_Array)array3322, (Type_Array)empty_Type_Array, 1, 2, assign3635, send29827);
// on:
send29828 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1900);
method4112 = (Object)new_AST_Method_with((Type_Array)array3320, (Type_Array)array3321, 1, send29828);
methodclosure4112 = (Object)new_Runtime_MethodClosure(method4112);
store_method((Type_Class)class699, (Type_Symbol)symbol5529, (Runtime_MethodClosure)methodclosure4112);

classreference809 = (Object)new_Organization_ClassReference((Type_Class)class699);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable4179 = (Object)new_AST_Variable_named(L"alternative");
array3323 = (Object)new_Type_Array_with(1, (Object)localvariable4179);
// subclassResponsibility
send29829 = (Object)new_AST_Send((Object)Self, (Object)symbol5567, 0);
method4113 = (Object)new_AST_Method_with((Type_Array)array3323, (Type_Array)empty_Type_Array, 2, send29829, Self);
methodclosure4113 = (Object)new_Runtime_MethodClosure(method4113);
store_method((Type_Class)class697, (Type_Symbol)symbol5552, (Runtime_MethodClosure)methodclosure4113);

classreference810 = (Object)new_Organization_ClassReference((Type_Class)class697);

// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
symbol5364 = (Object)new_Type_Symbol_cached(L"literals");
// literals
send29830 = (Object)new_AST_Send((Object)Self, (Object)symbol5364, 0);
// isEmpty
send29831 = (Object)new_AST_Send((Object)send29830, (Object)symbol5332, 0);
method4114 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29831);
methodclosure4114 = (Object)new_Runtime_MethodClosure(method4114);
store_method((Type_Class)class706, (Type_Symbol)symbol5332, (Runtime_MethodClosure)methodclosure4114);


// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable4180 = (Object)new_AST_Variable_named(L"aCollection");
array3324 = (Object)new_Type_Array_with(1, (Object)localvariable4180);
assign3636 = (Object)new_AST_Assign((Object)instancevariable1028, (Object)localvariable4180);
method4115 = (Object)new_AST_Method_with((Type_Array)array3324, (Type_Array)empty_Type_Array, 2, assign3636, Self);
symbol5363 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure4115 = (Object)new_Runtime_MethodClosure(method4115);
store_method((Type_Class)class706, (Type_Symbol)symbol5363, (Runtime_MethodClosure)methodclosure4115);


// ASTArray>>literals
//literals
// 	^ literals
method4116 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1028);
methodclosure4116 = (Object)new_Runtime_MethodClosure(method4116);
store_method((Type_Class)class706, (Type_Symbol)symbol5364, (Runtime_MethodClosure)methodclosure4116);

classreference811 = (Object)new_Organization_ClassReference((Type_Class)class706);

// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable4181 = (Object)new_AST_Variable_named(L"aSelector");
array3325 = (Object)new_Type_Array_with(1, (Object)localvariable4181);
variable211 = (Object)new_AST_Variable_named(L"return");
array3326 = (Object)new_Type_Array_with(1, (Object)variable211);
symbol5406 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
super355 = (Object)new_AST_Super((Object)symbol5406, 1, (Object)localvariable4181);
// escape:
send29832 = (Object)new_AST_Send((Object)variable211, (Object)SMB_escape_, 1, (Object)False_Const);
block1901 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29832);
// ifFalse:
send29833 = (Object)new_AST_Send((Object)super355, (Object)SMB_ifFalse_, 1, (Object)block1901);
symbol5425 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
// compatibleArgumentsWith:
send29834 = (Object)new_AST_Send((Object)Self, (Object)symbol5425, 1, (Object)localvariable4181);
block1902 = (Object)new_AST_Block_with((Type_Array)array3326, (Type_Array)empty_Type_Array, 1, 2, send29833, send29834);
// on:
send29835 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1902);
method4117 = (Object)new_AST_Method_with((Type_Array)array3325, (Type_Array)empty_Type_Array, 1, send29835);
methodclosure4117 = (Object)new_Runtime_MethodClosure(method4117);
store_method((Type_Class)class709, (Type_Symbol)symbol5406, (Runtime_MethodClosure)methodclosure4117);


// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable4182 = (Object)new_AST_Variable_named(L"aCollection");
array3327 = (Object)new_Type_Array_with(1, (Object)localvariable4182);
symbol5580 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send29836 = (Object)new_AST_Send((Object)Self, (Object)symbol5580, 0);
assign3637 = (Object)new_AST_Assign((Object)instancevariable1031, (Object)localvariable4182);
method4118 = (Object)new_AST_Method_with((Type_Array)array3327, (Type_Array)empty_Type_Array, 3, send29836, assign3637, Self);
symbol5424 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure4118 = (Object)new_Runtime_MethodClosure(method4118);
store_method((Type_Class)class709, (Type_Symbol)symbol5424, (Runtime_MethodClosure)methodclosure4118);


// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method4119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1031);
symbol5405 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure4119 = (Object)new_Runtime_MethodClosure(method4119);
store_method((Type_Class)class709, (Type_Symbol)symbol5405, (Runtime_MethodClosure)methodclosure4119);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable4183 = (Object)new_AST_Variable_named(L"aSelector");
array3328 = (Object)new_Type_Array_with(1, (Object)localvariable4183);
variable212 = (Object)new_AST_Variable_named(L"return");
array3329 = (Object)new_Type_Array_with(1, (Object)variable212);
// size
send29837 = (Object)new_AST_Send((Object)instancevariable1031, (Object)SMB_size, 0);
symbol5581 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable4184 = (Object)new_AST_Variable_named(L"index");
array3330 = (Object)new_Type_Array_with(1, (Object)localvariable4184);
// at:
send29838 = (Object)new_AST_Send((Object)instancevariable1031, (Object)SMB_at_, 1, (Object)localvariable4184);
// layout
send29839 = (Object)new_AST_Send((Object)send29838, (Object)symbol5305, 0);
// parameters
send29840 = (Object)new_AST_Send((Object)localvariable4183, (Object)symbol5405, 0);
// at:
send29841 = (Object)new_AST_Send((Object)send29840, (Object)SMB_at_, 1, (Object)localvariable4184);
// layout
send29842 = (Object)new_AST_Send((Object)send29841, (Object)symbol5305, 0);
// =
send29843 = (Object)new_AST_Send((Object)send29839, (Object)SMB__equal, 1, (Object)send29842);
// escape:
send29844 = (Object)new_AST_Send((Object)variable212, (Object)SMB_escape_, 1, (Object)False_Const);
block1903 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29844);
// ifFalse:
send29845 = (Object)new_AST_Send((Object)send29843, (Object)SMB_ifFalse_, 1, (Object)block1903);
block1904 = (Object)new_AST_Block_with((Type_Array)array3330, (Type_Array)empty_Type_Array, 2, 1, send29845);
// timesRepeat:
send29846 = (Object)new_AST_Send((Object)send29837, (Object)symbol5581, 1, (Object)block1904);
block1905 = (Object)new_AST_Block_with((Type_Array)array3329, (Type_Array)empty_Type_Array, 1, 2, send29846, True_Const);
// on:
send29847 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1905);
method4120 = (Object)new_AST_Method_with((Type_Array)array3328, (Type_Array)empty_Type_Array, 1, send29847);
methodclosure4120 = (Object)new_Runtime_MethodClosure(method4120);
store_method((Type_Class)class709, (Type_Symbol)symbol5425, (Runtime_MethodClosure)methodclosure4120);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super356 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send29848 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
assign3638 = (Object)new_AST_Assign((Object)instancevariable1031, (Object)send29848);
method4121 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super356, assign3638, Self);
methodclosure4121 = (Object)new_Runtime_MethodClosure(method4121);
store_method((Type_Class)class709, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4121);

classreference812 = (Object)new_Organization_ClassReference((Type_Class)class709);

// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable4185 = (Object)new_AST_Variable_named(L"newExpressions");
array3331 = (Object)new_Type_Array_with(1, (Object)localvariable4185);
assign3639 = (Object)new_AST_Assign((Object)instancevariable1032, (Object)localvariable4185);
method4122 = (Object)new_AST_Method_with((Type_Array)array3331, (Type_Array)empty_Type_Array, 2, assign3639, Self);
symbol5544 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure4122 = (Object)new_Runtime_MethodClosure(method4122);
store_method((Type_Class)class711, (Type_Symbol)symbol5544, (Runtime_MethodClosure)methodclosure4122);


// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable213 = (Object)new_AST_Variable_named(L"return");
array3332 = (Object)new_Type_Array_with(1, (Object)variable213);
symbol5582 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send29849 = (Object)new_AST_Send((Object)Self, (Object)symbol5582, 0);
localvariable4186 = (Object)new_AST_Variable_named(L"el");
array3333 = (Object)new_Type_Array_with(1, (Object)localvariable4186);
// isReturnExpression
send29850 = (Object)new_AST_Send((Object)localvariable4186, (Object)symbol5217, 0);
symbol5583 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
symbol5357 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
// hasReturnExpression
send29851 = (Object)new_AST_Send((Object)localvariable4186, (Object)symbol5357, 0);
block1906 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29851);
// escape:
send29852 = (Object)new_AST_Send((Object)variable213, (Object)SMB_escape_, 1, (Object)True_Const);
block1907 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send29852);
// or:ifTrue:
send29853 = (Object)new_AST_Send((Object)send29850, (Object)symbol5583, 2, (Object)block1906, (Object)block1907);
block1908 = (Object)new_AST_Block_with((Type_Array)array3333, (Type_Array)empty_Type_Array, 2, 1, send29853);
// do:
send29854 = (Object)new_AST_Send((Object)send29849, (Object)symbol5375, 1, (Object)block1908);
block1909 = (Object)new_AST_Block_with((Type_Array)array3332, (Type_Array)empty_Type_Array, 1, 2, send29854, False_Const);
// on:
send29855 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1909);
method4123 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29855);
methodclosure4123 = (Object)new_Runtime_MethodClosure(method4123);
store_method((Type_Class)class711, (Type_Symbol)symbol5357, (Runtime_MethodClosure)methodclosure4123);

classreference813 = (Object)new_Organization_ClassReference((Type_Class)class711);

// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable4187 = (Object)new_AST_Variable_named(L"aCollection");
array3334 = (Object)new_Type_Array_with(1, (Object)localvariable4187);
assign3640 = (Object)new_AST_Assign((Object)instancevariable1033, (Object)localvariable4187);
method4124 = (Object)new_AST_Method_with((Type_Array)array3334, (Type_Array)empty_Type_Array, 2, assign3640, Self);
methodclosure4124 = (Object)new_Runtime_MethodClosure(method4124);
store_method((Type_Class)class712, (Type_Symbol)symbol5424, (Runtime_MethodClosure)methodclosure4124);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable4188 = (Object)new_AST_Variable_named(L"anObject");
array3335 = (Object)new_Type_Array_with(1, (Object)localvariable4188);
assign3641 = (Object)new_AST_Assign((Object)instancevariable1034, (Object)localvariable4188);
method4125 = (Object)new_AST_Method_with((Type_Array)array3335, (Type_Array)empty_Type_Array, 2, assign3641, Self);
symbol5420 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure4125 = (Object)new_Runtime_MethodClosure(method4125);
store_method((Type_Class)class712, (Type_Symbol)symbol5420, (Runtime_MethodClosure)methodclosure4125);


// ASTBlock>>statements
//statements
// 	^ statements
method4126 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1035);
symbol5415 = (Object)new_Type_Symbol_cached(L"statements");
methodclosure4126 = (Object)new_Runtime_MethodClosure(method4126);
store_method((Type_Class)class712, (Type_Symbol)symbol5415, (Runtime_MethodClosure)methodclosure4126);


// ASTBlock>>parameters
//parameters
// 	^ parameters
method4127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1033);
methodclosure4127 = (Object)new_Runtime_MethodClosure(method4127);
store_method((Type_Class)class712, (Type_Symbol)symbol5405, (Runtime_MethodClosure)methodclosure4127);


// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable4189 = (Object)new_AST_Variable_named(L"anObject");
array3336 = (Object)new_Type_Array_with(1, (Object)localvariable4189);
assign3642 = (Object)new_AST_Assign((Object)instancevariable1035, (Object)localvariable4189);
method4128 = (Object)new_AST_Method_with((Type_Array)array3336, (Type_Array)empty_Type_Array, 2, assign3642, Self);
symbol5417 = (Object)new_Type_Symbol_cached(L"statements:");
methodclosure4128 = (Object)new_Runtime_MethodClosure(method4128);
store_method((Type_Class)class712, (Type_Symbol)symbol5417, (Runtime_MethodClosure)methodclosure4128);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// statements
send29856 = (Object)new_AST_Send((Object)Self, (Object)symbol5415, 0);
symbol5584 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable4190 = (Object)new_AST_Variable_named(L"el");
array3337 = (Object)new_Type_Array_with(1, (Object)localvariable4190);
// isReturnExpression
send29857 = (Object)new_AST_Send((Object)localvariable4190, (Object)symbol5217, 0);
symbol5328 = (Object)new_Type_Symbol_cached(L"or:");
// hasReturnExpression
send29858 = (Object)new_AST_Send((Object)localvariable4190, (Object)symbol5357, 0);
block1910 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29858);
// or:
send29859 = (Object)new_AST_Send((Object)send29857, (Object)symbol5328, 1, (Object)block1910);
block1911 = (Object)new_AST_Block_with((Type_Array)array3337, (Type_Array)empty_Type_Array, 1, 1, send29859);
// anySatisfy:
send29860 = (Object)new_AST_Send((Object)send29856, (Object)symbol5584, 1, (Object)block1911);
method4129 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29860);
methodclosure4129 = (Object)new_Runtime_MethodClosure(method4129);
store_method((Type_Class)class712, (Type_Symbol)symbol5357, (Runtime_MethodClosure)methodclosure4129);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super357 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send29861 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5310, 0);
// parameters:
send29862 = (Object)new_AST_Send((Object)Self, (Object)symbol5424, 1, (Object)send29861);
// new
send29863 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5310, 0);
// statements:
send29864 = (Object)new_AST_Send((Object)Self, (Object)symbol5417, 1, (Object)send29863);
// new
send29865 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5310, 0);
// temporaries:
send29866 = (Object)new_AST_Send((Object)Self, (Object)symbol5420, 1, (Object)send29865);
method4130 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super357, send29862, send29864, send29866, Self);
methodclosure4130 = (Object)new_Runtime_MethodClosure(method4130);
store_method((Type_Class)class712, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4130);


// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method4131 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1034);
symbol5419 = (Object)new_Type_Symbol_cached(L"temporaries");
methodclosure4131 = (Object)new_Runtime_MethodClosure(method4131);
store_method((Type_Class)class712, (Type_Symbol)symbol5419, (Runtime_MethodClosure)methodclosure4131);

classreference814 = (Object)new_Organization_ClassReference((Type_Class)class712);
classreference815 = (Object)new_Organization_ClassReference((Type_Class)class710);

// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
symbol5369 = (Object)new_Type_Symbol_cached(L"with:");
symbol5423 = (Object)new_Type_Symbol_cached(L"parameter");
// parameter
send29867 = (Object)new_AST_Send((Object)Self, (Object)symbol5423, 0);
// with:
send29868 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5369, 1, (Object)send29867);
method4132 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29868);
methodclosure4132 = (Object)new_Runtime_MethodClosure(method4132);
store_method((Type_Class)class714, (Type_Symbol)symbol5405, (Runtime_MethodClosure)methodclosure4132);


// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable4191 = (Object)new_AST_Variable_named(L"anObject");
array3338 = (Object)new_Type_Array_with(1, (Object)localvariable4191);
assign3643 = (Object)new_AST_Assign((Object)instancevariable1036, (Object)localvariable4191);
method4133 = (Object)new_AST_Method_with((Type_Array)array3338, (Type_Array)empty_Type_Array, 2, assign3643, Self);
symbol5422 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure4133 = (Object)new_Runtime_MethodClosure(method4133);
store_method((Type_Class)class714, (Type_Symbol)symbol5422, (Runtime_MethodClosure)methodclosure4133);


// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method4134 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1036);
methodclosure4134 = (Object)new_Runtime_MethodClosure(method4134);
store_method((Type_Class)class714, (Type_Symbol)symbol5423, (Runtime_MethodClosure)methodclosure4134);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
symbol5324 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send29869 = (Object)new_AST_Send((Object)Self, (Object)symbol5324, 0);
symbol5385 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send29870 = (Object)new_AST_Send((Object)send29869, (Object)symbol5385, 0);
method4135 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29870);
symbol5412 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
methodclosure4135 = (Object)new_Runtime_MethodClosure(method4135);
store_method((Type_Class)class714, (Type_Symbol)symbol5412, (Runtime_MethodClosure)methodclosure4135);

classreference816 = (Object)new_Organization_ClassReference((Type_Class)class714);

// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable4192 = (Object)new_AST_Variable_named(L"aStream");
array3339 = (Object)new_Type_Array_with(1, (Object)localvariable4192);
super358 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4192);
localvariable4193 = (Object)new_AST_Variable_named(L"receiver");
array3340 = (Object)new_Type_Array_with(1, (Object)localvariable4193);
string3445 = (Object)new_Type_String(L"(");
constant5788 = (Object)new_AST_Constant((Object)string3445);
// nextPutAll:
send29871 = (Object)new_AST_Send((Object)localvariable4193, (Object)symbol5558, 1, (Object)constant5788);
// name
send29872 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// nextPutAll:
send29873 = (Object)new_AST_Send((Object)localvariable4193, (Object)symbol5558, 1, (Object)send29872);
string3446 = (Object)new_Type_String(L")");
constant5789 = (Object)new_AST_Constant((Object)string3446);
// nextPutAll:
send29874 = (Object)new_AST_Send((Object)localvariable4193, (Object)symbol5558, 1, (Object)constant5789);
block1912 = (Object)new_AST_Block_with((Type_Array)array3340, (Type_Array)empty_Type_Array, 1, 3, send29871, send29873, send29874);
// value:
send29875 = (Object)new_AST_Send((Object)block1912, (Object)SMB_value_, 1, (Object)localvariable4192);
method4136 = (Object)new_AST_Method_with((Type_Array)array3339, (Type_Array)empty_Type_Array, 3, super358, send29875, Self);
methodclosure4136 = (Object)new_Runtime_MethodClosure(method4136);
store_method((Type_Class)class715, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4136);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable4194 = (Object)new_AST_Variable_named(L"anObject");
array3341 = (Object)new_Type_Array_with(1, (Object)localvariable4194);
// layout
send29876 = (Object)new_AST_Send((Object)Self, (Object)symbol5305, 0);
symbol5585 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send29877 = (Object)new_AST_Send((Object)localvariable4194, (Object)symbol5305, 0);
// isSameTypeAs:
send29878 = (Object)new_AST_Send((Object)send29876, (Object)symbol5585, 1, (Object)send29877);
method4137 = (Object)new_AST_Method_with((Type_Array)array3341, (Type_Array)empty_Type_Array, 1, send29878);
symbol5395 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure4137 = (Object)new_Runtime_MethodClosure(method4137);
store_method((Type_Class)class715, (Type_Symbol)symbol5395, (Runtime_MethodClosure)methodclosure4137);


// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name

// LocalVariable>>key
//key
// 	^ key
method4138 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1068);
symbol5540 = (Object)new_Type_Symbol_cached(L"key");
methodclosure4138 = (Object)new_Runtime_MethodClosure(method4138);
store_method((Type_Class)class737, (Type_Symbol)symbol5540, (Runtime_MethodClosure)methodclosure4138);


// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable4195 = (Object)new_AST_Variable_named(L"anObject");
array3342 = (Object)new_Type_Array_with(1, (Object)localvariable4195);
assign3644 = (Object)new_AST_Assign((Object)instancevariable1068, (Object)localvariable4195);
method4139 = (Object)new_AST_Method_with((Type_Array)array3342, (Type_Array)empty_Type_Array, 2, assign3644, Self);
symbol5539 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure4139 = (Object)new_Runtime_MethodClosure(method4139);
store_method((Type_Class)class737, (Type_Symbol)symbol5539, (Runtime_MethodClosure)methodclosure4139);

classreference817 = (Object)new_Organization_ClassReference((Type_Class)class737);
// new
send29879 = (Object)new_AST_Send((Object)classreference817, (Object)symbol5310, 0);
// name
send29880 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name:
send29881 = (Object)new_AST_Send((Object)send29879, (Object)symbol5393, 1, (Object)send29880);
method4140 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29881);
symbol5392 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure4140 = (Object)new_Runtime_MethodClosure(method4140);
store_method((Type_Class)class715, (Type_Symbol)symbol5392, (Runtime_MethodClosure)methodclosure4140);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super359 = (Object)new_AST_Super((Object)symbol5218, 0);
method4141 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super359, Self);
methodclosure4141 = (Object)new_Runtime_MethodClosure(method4141);
store_method((Type_Class)class715, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4141);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable4196 = (Object)new_AST_Variable_named(L"other");
array3343 = (Object)new_Type_Array_with(1, (Object)localvariable4196);
// name
send29882 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name
send29883 = (Object)new_AST_Send((Object)localvariable4196, (Object)SMB_name, 0);
// =
send29884 = (Object)new_AST_Send((Object)send29882, (Object)SMB__equal, 1, (Object)send29883);
method4142 = (Object)new_AST_Method_with((Type_Array)array3343, (Type_Array)empty_Type_Array, 1, send29884);
methodclosure4142 = (Object)new_Runtime_MethodClosure(method4142);
store_method((Type_Class)class715, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4142);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable4197 = (Object)new_AST_Variable_named(L"anObject");
array3344 = (Object)new_Type_Array_with(1, (Object)localvariable4197);
assign3645 = (Object)new_AST_Assign((Object)instancevariable1037, (Object)localvariable4197);
method4143 = (Object)new_AST_Method_with((Type_Array)array3344, (Type_Array)empty_Type_Array, 2, assign3645, Self);
methodclosure4143 = (Object)new_Runtime_MethodClosure(method4143);
store_method((Type_Class)class715, (Type_Symbol)symbol5393, (Runtime_MethodClosure)methodclosure4143);


// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable4198 = (Object)new_AST_Variable_named(L"anObject");
array3345 = (Object)new_Type_Array_with(1, (Object)localvariable4198);
// layout
send29885 = (Object)new_AST_Send((Object)Self, (Object)symbol5305, 0);
symbol5586 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send29886 = (Object)new_AST_Send((Object)localvariable4198, (Object)symbol5305, 0);
// combineWith:
send29887 = (Object)new_AST_Send((Object)send29885, (Object)symbol5586, 1, (Object)send29886);
method4144 = (Object)new_AST_Method_with((Type_Array)array3345, (Type_Array)empty_Type_Array, 2, send29887, Self);
symbol5394 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure4144 = (Object)new_Runtime_MethodClosure(method4144);
store_method((Type_Class)class715, (Type_Symbol)symbol5394, (Runtime_MethodClosure)methodclosure4144);


// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send29888 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// hash
send29889 = (Object)new_AST_Send((Object)send29888, (Object)SMB_hash, 0);
method4145 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29889);
methodclosure4145 = (Object)new_Runtime_MethodClosure(method4145);
store_method((Type_Class)class715, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure4145);


// ASTVariable>>name
//name
// 	^ name
method4146 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1037);
methodclosure4146 = (Object)new_Runtime_MethodClosure(method4146);
store_method((Type_Class)class715, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4146);

classreference818 = (Object)new_Organization_ClassReference((Type_Class)class715);

// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable4199 = (Object)new_AST_Variable_named(L"anObject");
array3346 = (Object)new_Type_Array_with(1, (Object)localvariable4199);
assign3646 = (Object)new_AST_Assign((Object)instancevariable1039, (Object)localvariable4199);
method4147 = (Object)new_AST_Method_with((Type_Array)array3346, (Type_Array)empty_Type_Array, 2, assign3646, Self);
symbol5426 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure4147 = (Object)new_Runtime_MethodClosure(method4147);
store_method((Type_Class)class716, (Type_Symbol)symbol5426, (Runtime_MethodClosure)methodclosure4147);


// ASTReturnExpression>>expression
//expression
// 	^ expression
method4148 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1039);
symbol5427 = (Object)new_Type_Symbol_cached(L"expression");
methodclosure4148 = (Object)new_Runtime_MethodClosure(method4148);
store_method((Type_Class)class716, (Type_Symbol)symbol5427, (Runtime_MethodClosure)methodclosure4148);


// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method4149 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure4149 = (Object)new_Runtime_MethodClosure(method4149);
store_method((Type_Class)class716, (Type_Symbol)symbol5217, (Runtime_MethodClosure)methodclosure4149);

classreference819 = (Object)new_Organization_ClassReference((Type_Class)class716);

// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method4150 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1040);
symbol5429 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure4150 = (Object)new_Runtime_MethodClosure(method4150);
store_method((Type_Class)class717, (Type_Symbol)symbol5429, (Runtime_MethodClosure)methodclosure4150);


// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable4200 = (Object)new_AST_Variable_named(L"anObject");
array3347 = (Object)new_Type_Array_with(1, (Object)localvariable4200);
assign3647 = (Object)new_AST_Assign((Object)instancevariable1041, (Object)localvariable4200);
method4151 = (Object)new_AST_Method_with((Type_Array)array3347, (Type_Array)empty_Type_Array, 2, assign3647, Self);
methodclosure4151 = (Object)new_Runtime_MethodClosure(method4151);
store_method((Type_Class)class717, (Type_Symbol)symbol5426, (Runtime_MethodClosure)methodclosure4151);


// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method4152 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1041);
methodclosure4152 = (Object)new_Runtime_MethodClosure(method4152);
store_method((Type_Class)class717, (Type_Symbol)symbol5427, (Runtime_MethodClosure)methodclosure4152);


// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable4201 = (Object)new_AST_Variable_named(L"anObject");
array3348 = (Object)new_Type_Array_with(1, (Object)localvariable4201);
assign3648 = (Object)new_AST_Assign((Object)instancevariable1040, (Object)localvariable4201);
method4153 = (Object)new_AST_Method_with((Type_Array)array3348, (Type_Array)empty_Type_Array, 2, assign3648, Self);
symbol5428 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure4153 = (Object)new_Runtime_MethodClosure(method4153);
store_method((Type_Class)class717, (Type_Symbol)symbol5428, (Runtime_MethodClosure)methodclosure4153);

classreference820 = (Object)new_Organization_ClassReference((Type_Class)class717);

// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method4154 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1042);
symbol5400 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure4154 = (Object)new_Runtime_MethodClosure(method4154);
store_method((Type_Class)class718, (Type_Symbol)symbol5400, (Runtime_MethodClosure)methodclosure4154);


// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method4155 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1043);
symbol5397 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure4155 = (Object)new_Runtime_MethodClosure(method4155);
store_method((Type_Class)class718, (Type_Symbol)symbol5397, (Runtime_MethodClosure)methodclosure4155);


// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable4202 = (Object)new_AST_Variable_named(L"anObject");
array3349 = (Object)new_Type_Array_with(1, (Object)localvariable4202);
assign3649 = (Object)new_AST_Assign((Object)instancevariable1042, (Object)localvariable4202);
method4156 = (Object)new_AST_Method_with((Type_Array)array3349, (Type_Array)empty_Type_Array, 2, assign3649, Self);
symbol5398 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure4156 = (Object)new_Runtime_MethodClosure(method4156);
store_method((Type_Class)class718, (Type_Symbol)symbol5398, (Runtime_MethodClosure)methodclosure4156);


// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable4203 = (Object)new_AST_Variable_named(L"anObject");
array3350 = (Object)new_Type_Array_with(1, (Object)localvariable4203);
assign3650 = (Object)new_AST_Assign((Object)instancevariable1043, (Object)localvariable4203);
method4157 = (Object)new_AST_Method_with((Type_Array)array3350, (Type_Array)empty_Type_Array, 2, assign3650, Self);
symbol5399 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure4157 = (Object)new_Runtime_MethodClosure(method4157);
store_method((Type_Class)class718, (Type_Symbol)symbol5399, (Runtime_MethodClosure)methodclosure4157);

classreference821 = (Object)new_Organization_ClassReference((Type_Class)class718);

// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable4204 = (Object)new_AST_Variable_named(L"anObject");
array3351 = (Object)new_Type_Array_with(1, (Object)localvariable4204);
assign3651 = (Object)new_AST_Assign((Object)instancevariable1044, (Object)localvariable4204);
method4158 = (Object)new_AST_Method_with((Type_Array)array3351, (Type_Array)empty_Type_Array, 2, assign3651, Self);
symbol5379 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure4158 = (Object)new_Runtime_MethodClosure(method4158);
store_method((Type_Class)class719, (Type_Symbol)symbol5379, (Runtime_MethodClosure)methodclosure4158);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable4205 = (Object)new_AST_Variable_named(L"aStream");
array3352 = (Object)new_Type_Array_with(1, (Object)localvariable4205);
symbol5380 = (Object)new_Type_Symbol_cached(L"number");
// number
send29890 = (Object)new_AST_Send((Object)Self, (Object)symbol5380, 0);
// nextPutAll:
send29891 = (Object)new_AST_Send((Object)localvariable4205, (Object)symbol5558, 1, (Object)send29890);
method4159 = (Object)new_AST_Method_with((Type_Array)array3352, (Type_Array)empty_Type_Array, 2, send29891, Self);
methodclosure4159 = (Object)new_Runtime_MethodClosure(method4159);
store_method((Type_Class)class719, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4159);


// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
symbol5383 = (Object)new_Type_Symbol_cached(L"base");
// base
send29892 = (Object)new_AST_Send((Object)Self, (Object)symbol5383, 0);
string3447 = (Object)new_Type_String(L"r");
constant5790 = (Object)new_AST_Constant((Object)string3447);
// ,
send29893 = (Object)new_AST_Send((Object)send29892, (Object)SMB__concat, 1, (Object)constant5790);
// number
send29894 = (Object)new_AST_Send((Object)Self, (Object)symbol5380, 0);
// ,
send29895 = (Object)new_AST_Send((Object)send29893, (Object)SMB__concat, 1, (Object)send29894);
symbol5587 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send29896 = (Object)new_AST_Send((Object)send29895, (Object)symbol5587, 0);
symbol5382 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send29897 = (Object)new_AST_Send((Object)send29896, (Object)symbol5382, 0);
method4160 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29897);
methodclosure4160 = (Object)new_Runtime_MethodClosure(method4160);
store_method((Type_Class)class719, (Type_Symbol)symbol5382, (Runtime_MethodClosure)methodclosure4160);


// ASTNumber>>number
//number
// 	^ number
method4161 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1044);
methodclosure4161 = (Object)new_Runtime_MethodClosure(method4161);
store_method((Type_Class)class719, (Type_Symbol)symbol5380, (Runtime_MethodClosure)methodclosure4161);


// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable4206 = (Object)new_AST_Variable_named(L"anObject");
array3353 = (Object)new_Type_Array_with(1, (Object)localvariable4206);
assign3652 = (Object)new_AST_Assign((Object)instancevariable1045, (Object)localvariable4206);
method4162 = (Object)new_AST_Method_with((Type_Array)array3353, (Type_Array)empty_Type_Array, 2, assign3652, Self);
symbol5384 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure4162 = (Object)new_Runtime_MethodClosure(method4162);
store_method((Type_Class)class719, (Type_Symbol)symbol5384, (Runtime_MethodClosure)methodclosure4162);


// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger

// SmallInt>><=
//<= aSmallInt
// 	^ (self > aSmallInt) not.
localvariable4207 = (Object)new_AST_Variable_named(L"aSmallInt");
array3354 = (Object)new_Type_Array_with(1, (Object)localvariable4207);
// >
send29898 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable4207);
// not
send29899 = (Object)new_AST_Send((Object)send29898, (Object)SMB_not, 0);
method4163 = (Object)new_AST_Method_with((Type_Array)array3354, (Type_Array)empty_Type_Array, 1, send29899);
methodclosure4163 = (Object)new_Runtime_MethodClosure(method4163);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol5337, (Runtime_MethodClosure)methodclosure4163);

classreference822 = (Object)new_Organization_ClassReference((Type_Class)Type_SmallInt_Class);
// new
send29900 = (Object)new_AST_Send((Object)classreference822, (Object)symbol5310, 0);
symbol5588 = (Object)new_Type_Symbol_cached(L"int:");
// asInteger
send29901 = (Object)new_AST_Send((Object)Self, (Object)symbol5382, 0);
// int:
send29902 = (Object)new_AST_Send((Object)send29900, (Object)symbol5588, 1, (Object)send29901);
method4164 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29902);
symbol5381 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure4164 = (Object)new_Runtime_MethodClosure(method4164);
store_method((Type_Class)class719, (Type_Symbol)symbol5381, (Runtime_MethodClosure)methodclosure4164);


// ASTNumber>>base
//base
// 	^ base
method4165 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1045);
methodclosure4165 = (Object)new_Runtime_MethodClosure(method4165);
store_method((Type_Class)class719, (Type_Symbol)symbol5383, (Runtime_MethodClosure)methodclosure4165);

classreference823 = (Object)new_Organization_ClassReference((Type_Class)class719);

// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable4208 = (Object)new_AST_Variable_named(L"aChar");
array3355 = (Object)new_Type_Array_with(1, (Object)localvariable4208);
assign3653 = (Object)new_AST_Assign((Object)instancevariable1046, (Object)localvariable4208);
method4166 = (Object)new_AST_Method_with((Type_Array)array3355, (Type_Array)empty_Type_Array, 2, assign3653, Self);
symbol5530 = (Object)new_Type_Symbol_cached(L"char:");
methodclosure4166 = (Object)new_Runtime_MethodClosure(method4166);
store_method((Type_Class)class720, (Type_Symbol)symbol5530, (Runtime_MethodClosure)methodclosure4166);


// ASTCharacter>>char
//char
// 	^ char
method4167 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1046);
symbol5531 = (Object)new_Type_Symbol_cached(L"char");
methodclosure4167 = (Object)new_Runtime_MethodClosure(method4167);
store_method((Type_Class)class720, (Type_Symbol)symbol5531, (Runtime_MethodClosure)methodclosure4167);


// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char

// Character>>asUppercase
//asUppercase
// 	"If the receiver is lowercase, answer its matching uppercase Character."
// 	"A tentative implementation.  Eventually this should consult the Unicode table."	
// 
// 	| v |
// 	v := self charCode.
// 	(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])
// 		ifTrue: [^ (-32 + self) asCharacter ]
// 		ifFalse: [^ self]
localvariable4209 = (Object)new_AST_Variable_named(L"v");
array3356 = (Object)new_Type_Array_with(1, (Object)localvariable4209);
symbol5340 = (Object)new_Type_Symbol_cached(L"charCode");
// charCode
send29903 = (Object)new_AST_Send((Object)Self, (Object)symbol5340, 0);
assign3654 = (Object)new_AST_Assign((Object)localvariable4209, (Object)send29903);
smallint2023 = (Object)new_Type_SmallInt(97);
constant5791 = (Object)new_AST_Constant((Object)smallint2023);
// <=
send29904 = (Object)new_AST_Send((Object)constant5791, (Object)symbol5337, 1, (Object)localvariable4209);
symbol5329 = (Object)new_Type_Symbol_cached(L"and:");
smallint2024 = (Object)new_Type_SmallInt(122);
constant5792 = (Object)new_AST_Constant((Object)smallint2024);
// <=
send29905 = (Object)new_AST_Send((Object)localvariable4209, (Object)symbol5337, 1, (Object)constant5792);
block1913 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29905);
// and:
send29906 = (Object)new_AST_Send((Object)send29904, (Object)symbol5329, 1, (Object)block1913);
smallint2025 = (Object)new_Type_SmallInt(224);
constant5793 = (Object)new_AST_Constant((Object)smallint2025);
// <=
send29907 = (Object)new_AST_Send((Object)constant5793, (Object)symbol5337, 1, (Object)localvariable4209);
smallint2026 = (Object)new_Type_SmallInt(246);
constant5794 = (Object)new_AST_Constant((Object)smallint2026);
// <=
send29908 = (Object)new_AST_Send((Object)localvariable4209, (Object)symbol5337, 1, (Object)constant5794);
block1914 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29908);
// and:
send29909 = (Object)new_AST_Send((Object)send29907, (Object)symbol5329, 1, (Object)block1914);
block1915 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29909);
// or:
send29910 = (Object)new_AST_Send((Object)send29906, (Object)symbol5328, 1, (Object)block1915);
smallint2027 = (Object)new_Type_SmallInt(248);
constant5795 = (Object)new_AST_Constant((Object)smallint2027);
// <=
send29911 = (Object)new_AST_Send((Object)constant5795, (Object)symbol5337, 1, (Object)localvariable4209);
smallint2028 = (Object)new_Type_SmallInt(254);
constant5796 = (Object)new_AST_Constant((Object)smallint2028);
// <=
send29912 = (Object)new_AST_Send((Object)localvariable4209, (Object)symbol5337, 1, (Object)constant5796);
block1916 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29912);
// and:
send29913 = (Object)new_AST_Send((Object)send29911, (Object)symbol5329, 1, (Object)block1916);
block1917 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29913);
// or:
send29914 = (Object)new_AST_Send((Object)send29910, (Object)symbol5328, 1, (Object)block1917);
method4168 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3356, 3, assign3654, send29914, Self);
symbol5339 = (Object)new_Type_Symbol_cached(L"asUppercase");
methodclosure4168 = (Object)new_Runtime_MethodClosure(method4168);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol5339, (Runtime_MethodClosure)methodclosure4168);


// Character>>charCode
//charCode
// 	^ self asSmallInt.
// asSmallInt
send29915 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
method4169 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29915);
methodclosure4169 = (Object)new_Runtime_MethodClosure(method4169);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol5340, (Runtime_MethodClosure)methodclosure4169);

classreference824 = (Object)new_Organization_ClassReference((Type_Class)Type_Character_Class);
// new
send29916 = (Object)new_AST_Send((Object)classreference824, (Object)symbol5310, 0);
// char
send29917 = (Object)new_AST_Send((Object)Self, (Object)symbol5531, 0);
// char:
send29918 = (Object)new_AST_Send((Object)send29916, (Object)symbol5530, 1, (Object)send29917);
method4170 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29918);
symbol5532 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure4170 = (Object)new_Runtime_MethodClosure(method4170);
store_method((Type_Class)class720, (Type_Symbol)symbol5532, (Runtime_MethodClosure)methodclosure4170);

classreference825 = (Object)new_Organization_ClassReference((Type_Class)class720);

// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method4171 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1047);
symbol5325 = (Object)new_Type_Symbol_cached(L"arguments");
methodclosure4171 = (Object)new_Runtime_MethodClosure(method4171);
store_method((Type_Class)class721, (Type_Symbol)symbol5325, (Runtime_MethodClosure)methodclosure4171);


// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable4210 = (Object)new_AST_Variable_named(L"anObject");
array3357 = (Object)new_Type_Array_with(1, (Object)localvariable4210);
assign3655 = (Object)new_AST_Assign((Object)instancevariable1047, (Object)localvariable4210);
method4172 = (Object)new_AST_Method_with((Type_Array)array3357, (Type_Array)empty_Type_Array, 2, assign3655, Self);
symbol5411 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure4172 = (Object)new_Runtime_MethodClosure(method4172);
store_method((Type_Class)class721, (Type_Symbol)symbol5411, (Runtime_MethodClosure)methodclosure4172);

classreference826 = (Object)new_Organization_ClassReference((Type_Class)class721);

// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method4173 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1048);
methodclosure4173 = (Object)new_Runtime_MethodClosure(method4173);
store_method((Type_Class)class722, (Type_Symbol)symbol5400, (Runtime_MethodClosure)methodclosure4173);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable4211 = (Object)new_AST_Variable_named(L"aStream");
array3358 = (Object)new_Type_Array_with(1, (Object)localvariable4211);
// receiver
send29919 = (Object)new_AST_Send((Object)Self, (Object)symbol5400, 0);
// printOn:
send29920 = (Object)new_AST_Send((Object)send29919, (Object)symbol5320, 1, (Object)localvariable4211);

// String>>isEmpty
//isEmpty 
// 	^ self size = 0.
// size
send29921 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2029 = (Object)new_Type_SmallInt(0);
constant5797 = (Object)new_AST_Constant((Object)smallint2029);
// =
send29922 = (Object)new_AST_Send((Object)send29921, (Object)SMB__equal, 1, (Object)constant5797);
method4174 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29922);
methodclosure4174 = (Object)new_Runtime_MethodClosure(method4174);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol5332, (Runtime_MethodClosure)methodclosure4174);


// String>>copy
//copy
// 	^ self asSymbol asString
// asSymbol
send29923 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSymbol, 0);
// asString
send29924 = (Object)new_AST_Send((Object)send29923, (Object)SMB_asString, 0);
method4175 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29924);
symbol5333 = (Object)new_Type_Symbol_cached(L"copy");
methodclosure4175 = (Object)new_Runtime_MethodClosure(method4175);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol5333, (Runtime_MethodClosure)methodclosure4175);


// String>>capitalized
//capitalized
// 	"Return a copy with the first letter capitalized"
// 	| cap |
// 	self isEmpty ifTrue: [ ^self copy ].
// 	cap := self copy.
// 	cap at: 1 put: (cap at: 1) asUppercase.
// 	^ cap
localvariable4212 = (Object)new_AST_Variable_named(L"cap");
array3359 = (Object)new_Type_Array_with(1, (Object)localvariable4212);
variable214 = (Object)new_AST_Variable_named(L"return");
array3360 = (Object)new_Type_Array_with(1, (Object)variable214);
// isEmpty
send29925 = (Object)new_AST_Send((Object)Self, (Object)symbol5332, 0);
// copy
send29926 = (Object)new_AST_Send((Object)Self, (Object)symbol5333, 0);
// escape:
send29927 = (Object)new_AST_Send((Object)variable214, (Object)SMB_escape_, 1, (Object)send29926);
block1918 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29927);
// ifTrue:
send29928 = (Object)new_AST_Send((Object)send29925, (Object)SMB_ifTrue_, 1, (Object)block1918);
// copy
send29929 = (Object)new_AST_Send((Object)Self, (Object)symbol5333, 0);
assign3656 = (Object)new_AST_Assign((Object)localvariable4212, (Object)send29929);
smallint2030 = (Object)new_Type_SmallInt(1);
constant5798 = (Object)new_AST_Constant((Object)smallint2030);
smallint2031 = (Object)new_Type_SmallInt(1);
constant5799 = (Object)new_AST_Constant((Object)smallint2031);
// at:
send29930 = (Object)new_AST_Send((Object)localvariable4212, (Object)SMB_at_, 1, (Object)constant5799);
// asUppercase
send29931 = (Object)new_AST_Send((Object)send29930, (Object)symbol5339, 0);
// at:put:
send29932 = (Object)new_AST_Send((Object)localvariable4212, (Object)SMB_at_put_, 2, (Object)constant5798, (Object)send29931);
block1919 = (Object)new_AST_Block_with((Type_Array)array3360, (Type_Array)empty_Type_Array, 1, 4, send29928, assign3656, send29932, localvariable4212);
// on:
send29933 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1919);
method4176 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3359, 1, send29933);
symbol5334 = (Object)new_Type_Symbol_cached(L"capitalized");
methodclosure4176 = (Object)new_Runtime_MethodClosure(method4176);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol5334, (Runtime_MethodClosure)methodclosure4176);

classreference827 = (Object)new_Organization_ClassReference((Type_Class)Type_String_Class);
symbol5589 = (Object)new_Type_Symbol_cached(L"space");
// space
send29934 = (Object)new_AST_Send((Object)classreference827, (Object)symbol5589, 0);
// nextPutAll:
send29935 = (Object)new_AST_Send((Object)localvariable4211, (Object)symbol5558, 1, (Object)send29934);
super360 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4211);
// space
send29936 = (Object)new_AST_Send((Object)classreference827, (Object)symbol5589, 0);
// nextPutAll:
send29937 = (Object)new_AST_Send((Object)localvariable4211, (Object)symbol5558, 1, (Object)send29936);
symbol5408 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send29938 = (Object)new_AST_Send((Object)Self, (Object)symbol5408, 0);
// printOn:
send29939 = (Object)new_AST_Send((Object)send29938, (Object)symbol5320, 1, (Object)localvariable4211);
method4177 = (Object)new_AST_Method_with((Type_Array)array3358, (Type_Array)empty_Type_Array, 6, send29920, send29935, super360, send29937, send29939, Self);
methodclosure4177 = (Object)new_Runtime_MethodClosure(method4177);
store_method((Type_Class)class722, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4177);


// ASTBinaryExpression>>argument
//argument
// 	^ argument
method4178 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1049);
methodclosure4178 = (Object)new_Runtime_MethodClosure(method4178);
store_method((Type_Class)class722, (Type_Symbol)symbol5408, (Runtime_MethodClosure)methodclosure4178);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable4213 = (Object)new_AST_Variable_named(L"anObject");
array3361 = (Object)new_Type_Array_with(1, (Object)localvariable4213);
assign3657 = (Object)new_AST_Assign((Object)instancevariable1049, (Object)localvariable4213);
method4179 = (Object)new_AST_Method_with((Type_Array)array3361, (Type_Array)empty_Type_Array, 2, assign3657, Self);
symbol5407 = (Object)new_Type_Symbol_cached(L"argument:");
methodclosure4179 = (Object)new_Runtime_MethodClosure(method4179);
store_method((Type_Class)class722, (Type_Symbol)symbol5407, (Runtime_MethodClosure)methodclosure4179);


// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable4214 = (Object)new_AST_Variable_named(L"anObject");
array3362 = (Object)new_Type_Array_with(1, (Object)localvariable4214);
assign3658 = (Object)new_AST_Assign((Object)instancevariable1048, (Object)localvariable4214);
method4180 = (Object)new_AST_Method_with((Type_Array)array3362, (Type_Array)empty_Type_Array, 2, assign3658, Self);
methodclosure4180 = (Object)new_Runtime_MethodClosure(method4180);
store_method((Type_Class)class722, (Type_Symbol)symbol5398, (Runtime_MethodClosure)methodclosure4180);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super361 = (Object)new_AST_Super((Object)symbol5218, 0);
method4181 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super361, Self);
methodclosure4181 = (Object)new_Runtime_MethodClosure(method4181);
store_method((Type_Class)class722, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4181);


// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	outer argument: receiver.
// 	receiver := outer
localvariable4215 = (Object)new_AST_Variable_named(L"outer");
array3363 = (Object)new_Type_Array_with(1, (Object)localvariable4215);
// argument:
send29940 = (Object)new_AST_Send((Object)localvariable4215, (Object)symbol5407, 1, (Object)instancevariable1048);
assign3659 = (Object)new_AST_Assign((Object)instancevariable1048, (Object)localvariable4215);
method4182 = (Object)new_AST_Method_with((Type_Array)array3363, (Type_Array)empty_Type_Array, 3, send29940, assign3659, Self);
symbol5360 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
methodclosure4182 = (Object)new_Runtime_MethodClosure(method4182);
store_method((Type_Class)class722, (Type_Symbol)symbol5360, (Runtime_MethodClosure)methodclosure4182);

classreference828 = (Object)new_Organization_ClassReference((Type_Class)class722);

// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send29941 = (Object)new_AST_Send((Object)Self, (Object)symbol5385, 0);
// asSymbol
send29942 = (Object)new_AST_Send((Object)send29941, (Object)SMB_asSymbol, 0);
method4183 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29942);
methodclosure4183 = (Object)new_Runtime_MethodClosure(method4183);
store_method((Type_Class)class723, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure4183);


// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable4216 = (Object)new_AST_Variable_named(L"aStream");
array3364 = (Object)new_Type_Array_with(1, (Object)localvariable4216);
// nextPutAll:
send29943 = (Object)new_AST_Send((Object)localvariable4216, (Object)symbol5558, 1, (Object)instancevariable1050);
method4184 = (Object)new_AST_Method_with((Type_Array)array3364, (Type_Array)empty_Type_Array, 2, send29943, Self);
methodclosure4184 = (Object)new_Runtime_MethodClosure(method4184);
store_method((Type_Class)class723, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4184);


// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable4217 = (Object)new_AST_Variable_named(L"aSymbol");
array3365 = (Object)new_Type_Array_with(1, (Object)localvariable4217);
assign3660 = (Object)new_AST_Assign((Object)instancevariable1050, (Object)localvariable4217);
method4185 = (Object)new_AST_Method_with((Type_Array)array3365, (Type_Array)empty_Type_Array, 2, assign3660, Self);
symbol5386 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure4185 = (Object)new_Runtime_MethodClosure(method4185);
store_method((Type_Class)class723, (Type_Symbol)symbol5386, (Runtime_MethodClosure)methodclosure4185);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
// symbol
send29944 = (Object)new_AST_Send((Object)Self, (Object)symbol5385, 0);
// asString
send29945 = (Object)new_AST_Send((Object)send29944, (Object)SMB_asString, 0);
method4186 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29945);
methodclosure4186 = (Object)new_Runtime_MethodClosure(method4186);
store_method((Type_Class)class723, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure4186);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol

// Symbol>>capitalized
//capitalized
// 	^ self asString capitalized asSymbol
// asString
send29946 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);
// capitalized
send29947 = (Object)new_AST_Send((Object)send29946, (Object)symbol5334, 0);
// asSymbol
send29948 = (Object)new_AST_Send((Object)send29947, (Object)SMB_asSymbol, 0);
method4187 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29948);
methodclosure4187 = (Object)new_Runtime_MethodClosure(method4187);
store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol5334, (Runtime_MethodClosure)methodclosure4187);

classreference829 = (Object)new_Organization_ClassReference((Type_Class)Type_Symbol_Class);
// symbol
send29949 = (Object)new_AST_Send((Object)Self, (Object)symbol5385, 0);
// named:
send29950 = (Object)new_AST_Send((Object)classreference829, (Object)symbol5534, 1, (Object)send29949);
method4188 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29950);
symbol5387 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure4188 = (Object)new_Runtime_MethodClosure(method4188);
store_method((Type_Class)class723, (Type_Symbol)symbol5387, (Runtime_MethodClosure)methodclosure4188);


// ASTSymbol>>symbol
//symbol
// 	^ symbol
method4189 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1050);
methodclosure4189 = (Object)new_Runtime_MethodClosure(method4189);
store_method((Type_Class)class723, (Type_Symbol)symbol5385, (Runtime_MethodClosure)methodclosure4189);

classreference830 = (Object)new_Organization_ClassReference((Type_Class)class723);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send29951 = (Object)new_AST_Send((Object)Self, (Object)symbol5324, 0);
// symbol
send29952 = (Object)new_AST_Send((Object)send29951, (Object)symbol5385, 0);
method4190 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29952);
methodclosure4190 = (Object)new_Runtime_MethodClosure(method4190);
store_method((Type_Class)class724, (Type_Symbol)symbol5412, (Runtime_MethodClosure)methodclosure4190);

classreference831 = (Object)new_Organization_ClassReference((Type_Class)class724);

// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable4218 = (Object)new_AST_Variable_named(L"anObject");
array3366 = (Object)new_Type_Array_with(1, (Object)localvariable4218);
assign3661 = (Object)new_AST_Assign((Object)instancevariable1030, (Object)localvariable4218);
method4191 = (Object)new_AST_Method_with((Type_Array)array3366, (Type_Array)empty_Type_Array, 2, assign3661, Self);
symbol5409 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure4191 = (Object)new_Runtime_MethodClosure(method4191);
store_method((Type_Class)class708, (Type_Symbol)symbol5409, (Runtime_MethodClosure)methodclosure4191);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol5590 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string3448 = (Object)new_Type_String(L":");
constant5800 = (Object)new_AST_Constant((Object)string3448);
// joinUsing:
send29953 = (Object)new_AST_Send((Object)instancevariable1030, (Object)symbol5590, 1, (Object)constant5800);
string3449 = (Object)new_Type_String(L":");
constant5801 = (Object)new_AST_Constant((Object)string3449);
// ,
send29954 = (Object)new_AST_Send((Object)send29953, (Object)SMB__concat, 1, (Object)constant5801);
method4192 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29954);
symbol5403 = (Object)new_Type_Symbol_cached(L"selectorName");
methodclosure4192 = (Object)new_Runtime_MethodClosure(method4192);
store_method((Type_Class)class708, (Type_Symbol)symbol5403, (Runtime_MethodClosure)methodclosure4192);


// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super362 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send29955 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
assign3662 = (Object)new_AST_Assign((Object)instancevariable1030, (Object)send29955);
method4193 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super362, assign3662, Self);
methodclosure4193 = (Object)new_Runtime_MethodClosure(method4193);
store_method((Type_Class)class708, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4193);


// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method4194 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1030);
symbol5410 = (Object)new_Type_Symbol_cached(L"keywords");
methodclosure4194 = (Object)new_Runtime_MethodClosure(method4194);
store_method((Type_Class)class708, (Type_Symbol)symbol5410, (Runtime_MethodClosure)methodclosure4194);

classreference832 = (Object)new_Organization_ClassReference((Type_Class)class708);
classreference833 = (Object)new_Organization_ClassReference((Type_Class)class725);

// ASTString>>asPString
//asPString 
// 	^PString new string: self string
// new
send29956 = (Object)new_AST_Send((Object)classreference827, (Object)symbol5310, 0);
symbol5388 = (Object)new_Type_Symbol_cached(L"string:");
symbol5389 = (Object)new_Type_Symbol_cached(L"string");
// string
send29957 = (Object)new_AST_Send((Object)Self, (Object)symbol5389, 0);
// string:
send29958 = (Object)new_AST_Send((Object)send29956, (Object)symbol5388, 1, (Object)send29957);
method4195 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29958);
symbol5390 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure4195 = (Object)new_Runtime_MethodClosure(method4195);
store_method((Type_Class)class726, (Type_Symbol)symbol5390, (Runtime_MethodClosure)methodclosure4195);


// ASTString>>string:
//string: aString
// 	string := aString
localvariable4219 = (Object)new_AST_Variable_named(L"aString");
array3367 = (Object)new_Type_Array_with(1, (Object)localvariable4219);
assign3663 = (Object)new_AST_Assign((Object)instancevariable1051, (Object)localvariable4219);
method4196 = (Object)new_AST_Method_with((Type_Array)array3367, (Type_Array)empty_Type_Array, 2, assign3663, Self);
methodclosure4196 = (Object)new_Runtime_MethodClosure(method4196);
store_method((Type_Class)class726, (Type_Symbol)symbol5388, (Runtime_MethodClosure)methodclosure4196);


// ASTString>>string
//string
// 	^ string
method4197 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1051);
methodclosure4197 = (Object)new_Runtime_MethodClosure(method4197);
store_method((Type_Class)class726, (Type_Symbol)symbol5389, (Runtime_MethodClosure)methodclosure4197);

classreference834 = (Object)new_Organization_ClassReference((Type_Class)class726);

// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method4198 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1052);
methodclosure4198 = (Object)new_Runtime_MethodClosure(method4198);
store_method((Type_Class)class727, (Type_Symbol)symbol5400, (Runtime_MethodClosure)methodclosure4198);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable4220 = (Object)new_AST_Variable_named(L"anObject");
array3368 = (Object)new_Type_Array_with(1, (Object)localvariable4220);
assign3664 = (Object)new_AST_Assign((Object)instancevariable1053, (Object)localvariable4220);
method4199 = (Object)new_AST_Method_with((Type_Array)array3368, (Type_Array)empty_Type_Array, 2, assign3664, Self);
methodclosure4199 = (Object)new_Runtime_MethodClosure(method4199);
store_method((Type_Class)class727, (Type_Symbol)symbol5411, (Runtime_MethodClosure)methodclosure4199);


// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable4221 = (Object)new_AST_Variable_named(L"anObject");
array3369 = (Object)new_Type_Array_with(1, (Object)localvariable4221);
assign3665 = (Object)new_AST_Assign((Object)instancevariable1052, (Object)localvariable4221);
method4200 = (Object)new_AST_Method_with((Type_Array)array3369, (Type_Array)empty_Type_Array, 2, assign3665, Self);
methodclosure4200 = (Object)new_Runtime_MethodClosure(method4200);
store_method((Type_Class)class727, (Type_Symbol)symbol5398, (Runtime_MethodClosure)methodclosure4200);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// arguments
send29959 = (Object)new_AST_Send((Object)Self, (Object)symbol5325, 0);
localvariable4222 = (Object)new_AST_Variable_named(L"el");
array3370 = (Object)new_Type_Array_with(1, (Object)localvariable4222);
// isReturnExpression
send29960 = (Object)new_AST_Send((Object)localvariable4222, (Object)symbol5217, 0);
// hasReturnExpression
send29961 = (Object)new_AST_Send((Object)localvariable4222, (Object)symbol5357, 0);
block1920 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send29961);
// or:
send29962 = (Object)new_AST_Send((Object)send29960, (Object)symbol5328, 1, (Object)block1920);
block1921 = (Object)new_AST_Block_with((Type_Array)array3370, (Type_Array)empty_Type_Array, 1, 1, send29962);
// anySatisfy:
send29963 = (Object)new_AST_Send((Object)send29959, (Object)symbol5584, 1, (Object)block1921);
method4201 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29963);
methodclosure4201 = (Object)new_Runtime_MethodClosure(method4201);
store_method((Type_Class)class727, (Type_Symbol)symbol5357, (Runtime_MethodClosure)methodclosure4201);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super363 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send29964 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
assign3666 = (Object)new_AST_Assign((Object)instancevariable1053, (Object)send29964);
method4202 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super363, assign3666, Self);
methodclosure4202 = (Object)new_Runtime_MethodClosure(method4202);
store_method((Type_Class)class727, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4202);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method4203 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1053);
methodclosure4203 = (Object)new_Runtime_MethodClosure(method4203);
store_method((Type_Class)class727, (Type_Symbol)symbol5325, (Runtime_MethodClosure)methodclosure4203);

classreference835 = (Object)new_Organization_ClassReference((Type_Class)class727);
classreference836 = (Object)new_Organization_ClassReference((Type_Class)class728);
classreference837 = (Object)new_Organization_ClassReference((Type_Class)class705);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable4223 = (Object)new_AST_Variable_named(L"aStream");
array3371 = (Object)new_Type_Array_with(1, (Object)localvariable4223);
string3450 = (Object)new_Type_String(L"self");
constant5802 = (Object)new_AST_Constant((Object)string3450);
// nextPutAll:
send29965 = (Object)new_AST_Send((Object)localvariable4223, (Object)symbol5558, 1, (Object)constant5802);
method4204 = (Object)new_AST_Method_with((Type_Array)array3371, (Type_Array)empty_Type_Array, 2, send29965, Self);
methodclosure4204 = (Object)new_Runtime_MethodClosure(method4204);
store_method((Type_Class)class729, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4204);

classreference838 = (Object)new_Organization_ClassReference((Type_Class)class729);

// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method4205 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1054);
methodclosure4205 = (Object)new_Runtime_MethodClosure(method4205);
store_method((Type_Class)class730, (Type_Symbol)symbol5400, (Runtime_MethodClosure)methodclosure4205);


// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable4224 = (Object)new_AST_Variable_named(L"anObject");
array3372 = (Object)new_Type_Array_with(1, (Object)localvariable4224);
assign3667 = (Object)new_AST_Assign((Object)instancevariable1054, (Object)localvariable4224);
method4206 = (Object)new_AST_Method_with((Type_Array)array3372, (Type_Array)empty_Type_Array, 2, assign3667, Self);
methodclosure4206 = (Object)new_Runtime_MethodClosure(method4206);
store_method((Type_Class)class730, (Type_Symbol)symbol5398, (Runtime_MethodClosure)methodclosure4206);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable4225 = (Object)new_AST_Variable_named(L"aStream");
array3373 = (Object)new_Type_Array_with(1, (Object)localvariable4225);
// receiver
send29966 = (Object)new_AST_Send((Object)Self, (Object)symbol5400, 0);
// printOn:
send29967 = (Object)new_AST_Send((Object)send29966, (Object)symbol5320, 1, (Object)localvariable4225);
// space
send29968 = (Object)new_AST_Send((Object)classreference827, (Object)symbol5589, 0);
// nextPutAll:
send29969 = (Object)new_AST_Send((Object)localvariable4225, (Object)symbol5558, 1, (Object)send29968);
super364 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4225);
method4207 = (Object)new_AST_Method_with((Type_Array)array3373, (Type_Array)empty_Type_Array, 4, send29967, send29969, super364, Self);
methodclosure4207 = (Object)new_Runtime_MethodClosure(method4207);
store_method((Type_Class)class730, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4207);

classreference839 = (Object)new_Organization_ClassReference((Type_Class)class730);
classreference840 = (Object)new_Organization_ClassReference((Type_Class)class713);

// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable4226 = (Object)new_AST_Variable_named(L"anObject");
array3374 = (Object)new_Type_Array_with(1, (Object)localvariable4226);
localvariable4227 = (Object)new_AST_Variable_named(L"string");
array3375 = (Object)new_Type_Array_with(1, (Object)localvariable4227);
assign3668 = (Object)new_AST_Assign((Object)instancevariable1029, (Object)localvariable4226);
// asString
send29970 = (Object)new_AST_Send((Object)instancevariable1029, (Object)SMB_asString, 0);
assign3669 = (Object)new_AST_Assign((Object)localvariable4227, (Object)send29970);
// size
send29971 = (Object)new_AST_Send((Object)localvariable4227, (Object)SMB_size, 0);
smallint2032 = (Object)new_Type_SmallInt(1);
constant5803 = (Object)new_AST_Constant((Object)smallint2032);
// >
send29972 = (Object)new_AST_Send((Object)send29971, (Object)SMB__gt, 1, (Object)constant5803);
// size
send29973 = (Object)new_AST_Send((Object)localvariable4227, (Object)SMB_size, 0);
smallint2033 = (Object)new_Type_SmallInt(1);
constant5804 = (Object)new_AST_Constant((Object)smallint2033);
// -
send29974 = (Object)new_AST_Send((Object)send29973, (Object)SMB__minus, 1, (Object)constant5804);
// at:
send29975 = (Object)new_AST_Send((Object)localvariable4227, (Object)SMB_at_, 1, (Object)send29974);
symbol5591 = (Object)new_Type_Symbol_cached(L"should");
// should
send29976 = (Object)new_AST_Send((Object)send29975, (Object)symbol5591, 0);
// not
send29977 = (Object)new_AST_Send((Object)send29976, (Object)SMB_not, 0);
string3451 = (Object)new_Type_String(L":");
constant5805 = (Object)new_AST_Constant((Object)string3451);
// =
send29978 = (Object)new_AST_Send((Object)send29977, (Object)SMB__equal, 1, (Object)constant5805);
block1922 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send29978);
// ifTrue:
send29979 = (Object)new_AST_Send((Object)send29972, (Object)SMB_ifTrue_, 1, (Object)block1922);
method4208 = (Object)new_AST_Method_with((Type_Array)array3374, (Type_Array)array3375, 4, assign3668, assign3669, send29979, Self);
symbol5404 = (Object)new_Type_Symbol_cached(L"selector:");
methodclosure4208 = (Object)new_Runtime_MethodClosure(method4208);
store_method((Type_Class)class707, (Type_Symbol)symbol5404, (Runtime_MethodClosure)methodclosure4208);


// ASTSelector>>selector
//selector
// 	^ selector
method4209 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1029);
methodclosure4209 = (Object)new_Runtime_MethodClosure(method4209);
store_method((Type_Class)class707, (Type_Symbol)symbol5324, (Runtime_MethodClosure)methodclosure4209);


// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable4228 = (Object)new_AST_Variable_named(L"aStream");
array3376 = (Object)new_Type_Array_with(1, (Object)localvariable4228);
// selector
send29980 = (Object)new_AST_Send((Object)Self, (Object)symbol5324, 0);
// printOn:
send29981 = (Object)new_AST_Send((Object)send29980, (Object)symbol5320, 1, (Object)localvariable4228);
method4210 = (Object)new_AST_Method_with((Type_Array)array3376, (Type_Array)empty_Type_Array, 2, send29981, Self);
methodclosure4210 = (Object)new_Runtime_MethodClosure(method4210);
store_method((Type_Class)class707, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4210);


// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable4229 = (Object)new_AST_Variable_named(L"aSelector");
array3377 = (Object)new_Type_Array_with(1, (Object)localvariable4229);
// selectorName
send29982 = (Object)new_AST_Send((Object)Self, (Object)symbol5403, 0);
// selectorName
send29983 = (Object)new_AST_Send((Object)localvariable4229, (Object)symbol5403, 0);
// =
send29984 = (Object)new_AST_Send((Object)send29982, (Object)SMB__equal, 1, (Object)send29983);
method4211 = (Object)new_AST_Method_with((Type_Array)array3377, (Type_Array)empty_Type_Array, 1, send29984);
methodclosure4211 = (Object)new_Runtime_MethodClosure(method4211);
store_method((Type_Class)class707, (Type_Symbol)symbol5406, (Runtime_MethodClosure)methodclosure4211);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send29985 = (Object)new_AST_Send((Object)Self, (Object)symbol5324, 0);
// asString
send29986 = (Object)new_AST_Send((Object)send29985, (Object)SMB_asString, 0);
method4212 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29986);
methodclosure4212 = (Object)new_Runtime_MethodClosure(method4212);
store_method((Type_Class)class707, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure4212);


// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send29987 = (Object)new_AST_Send((Object)Self, (Object)symbol5324, 0);
// printString
send29988 = (Object)new_AST_Send((Object)send29987, (Object)symbol5519, 0);
method4213 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send29988, Self);
methodclosure4213 = (Object)new_Runtime_MethodClosure(method4213);
store_method((Type_Class)class707, (Type_Symbol)symbol5403, (Runtime_MethodClosure)methodclosure4213);


// ASTSelector>>parameters
//parameters
// 	^ Array new.
// new
send29989 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5310, 0);
method4214 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29989);
methodclosure4214 = (Object)new_Runtime_MethodClosure(method4214);
store_method((Type_Class)class707, (Type_Symbol)symbol5405, (Runtime_MethodClosure)methodclosure4214);

classreference841 = (Object)new_Organization_ClassReference((Type_Class)class707);

// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable4230 = (Object)new_AST_Variable_named(L"aStream");
array3378 = (Object)new_Type_Array_with(1, (Object)localvariable4230);
super365 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4230);
string3452 = (Object)new_Type_String(L"(");
constant5806 = (Object)new_AST_Constant((Object)string3452);
// nextPutAll:
send29990 = (Object)new_AST_Send((Object)localvariable4230, (Object)symbol5558, 1, (Object)constant5806);
symbol5418 = (Object)new_Type_Symbol_cached(L"message");
// message
send29991 = (Object)new_AST_Send((Object)Self, (Object)symbol5418, 0);
// printOn:
send29992 = (Object)new_AST_Send((Object)send29991, (Object)symbol5320, 1, (Object)localvariable4230);
string3453 = (Object)new_Type_String(L")");
constant5807 = (Object)new_AST_Constant((Object)string3453);
// nextPutAll:
send29993 = (Object)new_AST_Send((Object)localvariable4230, (Object)symbol5558, 1, (Object)constant5807);
method4215 = (Object)new_AST_Method_with((Type_Array)array3378, (Type_Array)empty_Type_Array, 5, super365, send29990, send29992, send29993, Self);
methodclosure4215 = (Object)new_Runtime_MethodClosure(method4215);
store_method((Type_Class)class731, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4215);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable4231 = (Object)new_AST_Variable_named(L"anObject");
array3379 = (Object)new_Type_Array_with(1, (Object)localvariable4231);
assign3670 = (Object)new_AST_Assign((Object)instancevariable1057, (Object)localvariable4231);
method4216 = (Object)new_AST_Method_with((Type_Array)array3379, (Type_Array)empty_Type_Array, 2, assign3670, Self);
methodclosure4216 = (Object)new_Runtime_MethodClosure(method4216);
store_method((Type_Class)class731, (Type_Symbol)symbol5420, (Runtime_MethodClosure)methodclosure4216);


// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable4232 = (Object)new_AST_Variable_named(L"anObject");
array3380 = (Object)new_Type_Array_with(1, (Object)localvariable4232);
assign3671 = (Object)new_AST_Assign((Object)instancevariable1055, (Object)localvariable4232);
method4217 = (Object)new_AST_Method_with((Type_Array)array3380, (Type_Array)empty_Type_Array, 2, assign3671, Self);
symbol5413 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure4217 = (Object)new_Runtime_MethodClosure(method4217);
store_method((Type_Class)class731, (Type_Symbol)symbol5413, (Runtime_MethodClosure)methodclosure4217);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable4233 = (Object)new_AST_Variable_named(L"anObject");
array3381 = (Object)new_Type_Array_with(1, (Object)localvariable4233);
assign3672 = (Object)new_AST_Assign((Object)instancevariable1058, (Object)localvariable4233);
method4218 = (Object)new_AST_Method_with((Type_Array)array3381, (Type_Array)empty_Type_Array, 2, assign3672, Self);
methodclosure4218 = (Object)new_Runtime_MethodClosure(method4218);
store_method((Type_Class)class731, (Type_Symbol)symbol5417, (Runtime_MethodClosure)methodclosure4218);


// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
// statements
send29994 = (Object)new_AST_Send((Object)Self, (Object)symbol5415, 0);
// hasReturnExpression
send29995 = (Object)new_AST_Send((Object)send29994, (Object)symbol5357, 0);
method4219 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send29995);
methodclosure4219 = (Object)new_Runtime_MethodClosure(method4219);
store_method((Type_Class)class731, (Type_Symbol)symbol5357, (Runtime_MethodClosure)methodclosure4219);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable4234 = (Object)new_AST_Variable_named(L"anObject");
array3382 = (Object)new_Type_Array_with(1, (Object)localvariable4234);
assign3673 = (Object)new_AST_Assign((Object)instancevariable1056, (Object)localvariable4234);
method4220 = (Object)new_AST_Method_with((Type_Array)array3382, (Type_Array)empty_Type_Array, 2, assign3673, Self);
symbol5421 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure4220 = (Object)new_Runtime_MethodClosure(method4220);
store_method((Type_Class)class731, (Type_Symbol)symbol5421, (Runtime_MethodClosure)methodclosure4220);


// ASTMethod>>message
//message
// 	^ message
method4221 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1055);
methodclosure4221 = (Object)new_Runtime_MethodClosure(method4221);
store_method((Type_Class)class731, (Type_Symbol)symbol5418, (Runtime_MethodClosure)methodclosure4221);


// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable4235 = (Object)new_AST_Variable_named(L"receiver");
array3383 = (Object)new_Type_Array_with(1, (Object)localvariable4235);
smallint2034 = (Object)new_Type_SmallInt(1);
constant5808 = (Object)new_AST_Constant((Object)smallint2034);
symbol5416 = (Object)new_Type_Symbol_cached(L"annotations");
constant5809 = (Object)new_AST_Constant((Object)symbol5416);
// at:put:
send29996 = (Object)new_AST_Send((Object)localvariable4235, (Object)SMB_at_put_, 2, (Object)constant5808, (Object)constant5809);
smallint2035 = (Object)new_Type_SmallInt(2);
constant5810 = (Object)new_AST_Constant((Object)smallint2035);
constant5811 = (Object)new_AST_Constant((Object)symbol5418);
// at:put:
send29997 = (Object)new_AST_Send((Object)localvariable4235, (Object)SMB_at_put_, 2, (Object)constant5810, (Object)constant5811);
smallint2036 = (Object)new_Type_SmallInt(3);
constant5812 = (Object)new_AST_Constant((Object)smallint2036);
constant5813 = (Object)new_AST_Constant((Object)symbol5415);
// at:put:
send29998 = (Object)new_AST_Send((Object)localvariable4235, (Object)SMB_at_put_, 2, (Object)constant5812, (Object)constant5813);
smallint2037 = (Object)new_Type_SmallInt(4);
constant5814 = (Object)new_AST_Constant((Object)smallint2037);
constant5815 = (Object)new_AST_Constant((Object)symbol5419);
// at:put:
send29999 = (Object)new_AST_Send((Object)localvariable4235, (Object)SMB_at_put_, 2, (Object)constant5814, (Object)constant5815);
// yourself
send30000 = (Object)new_AST_Send((Object)localvariable4235, (Object)symbol5216, 0);
block1923 = (Object)new_AST_Block_with((Type_Array)array3383, (Type_Array)empty_Type_Array, 1, 5, send29996, send29997, send29998, send29999, send30000);
smallint2038 = (Object)new_Type_SmallInt(4);
constant5816 = (Object)new_AST_Constant((Object)smallint2038);
// new:
send30001 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant5816);
// value:
send30002 = (Object)new_AST_Send((Object)block1923, (Object)SMB_value_, 1, (Object)send30001);
method4222 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30002);
symbol5414 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure4222 = (Object)new_Runtime_MethodClosure(method4222);
store_method((Type_Class)class731, (Type_Symbol)symbol5414, (Runtime_MethodClosure)methodclosure4222);


// ASTMethod>>statements
//statements
// 	^ statements
method4223 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1058);
methodclosure4223 = (Object)new_Runtime_MethodClosure(method4223);
store_method((Type_Class)class731, (Type_Symbol)symbol5415, (Runtime_MethodClosure)methodclosure4223);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method4224 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1057);
methodclosure4224 = (Object)new_Runtime_MethodClosure(method4224);
store_method((Type_Class)class731, (Type_Symbol)symbol5419, (Runtime_MethodClosure)methodclosure4224);


// ASTMethod>>annotations
//annotations
// 	^ annotations
method4225 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1056);
methodclosure4225 = (Object)new_Runtime_MethodClosure(method4225);
store_method((Type_Class)class731, (Type_Symbol)symbol5416, (Runtime_MethodClosure)methodclosure4225);

classreference842 = (Object)new_Organization_ClassReference((Type_Class)class731);

// ASTNode>>sourceObject:
//sourceObject: anObject
// 	sourceObject := anObject
localvariable4236 = (Object)new_AST_Variable_named(L"anObject");
array3384 = (Object)new_Type_Array_with(1, (Object)localvariable4236);
assign3674 = (Object)new_AST_Assign((Object)instancevariable1025, (Object)localvariable4236);
method4226 = (Object)new_AST_Method_with((Type_Array)array3384, (Type_Array)empty_Type_Array, 2, assign3674, Self);
symbol5356 = (Object)new_Type_Symbol_cached(L"sourceObject:");
methodclosure4226 = (Object)new_Runtime_MethodClosure(method4226);
store_method((Type_Class)class704, (Type_Symbol)symbol5356, (Runtime_MethodClosure)methodclosure4226);


// ASTNode>>isReturnExpression
//isReturnExpression
// 	^ false
method4227 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4227 = (Object)new_Runtime_MethodClosure(method4227);
store_method((Type_Class)class704, (Type_Symbol)symbol5217, (Runtime_MethodClosure)methodclosure4227);


// ASTNode>>argumentOfBinary:
//argumentOfBinary: binary
// 	^ binary argument: self
localvariable4237 = (Object)new_AST_Variable_named(L"binary");
array3385 = (Object)new_Type_Array_with(1, (Object)localvariable4237);
// argument:
send30003 = (Object)new_AST_Send((Object)localvariable4237, (Object)symbol5407, 1, (Object)Self);
method4228 = (Object)new_AST_Method_with((Type_Array)array3385, (Type_Array)empty_Type_Array, 1, send30003);
methodclosure4228 = (Object)new_Runtime_MethodClosure(method4228);
store_method((Type_Class)class704, (Type_Symbol)symbol5360, (Runtime_MethodClosure)methodclosure4228);


// ASTNode>>hasReturnExpression
//hasReturnExpression
// 	^ false
method4229 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4229 = (Object)new_Runtime_MethodClosure(method4229);
store_method((Type_Class)class704, (Type_Symbol)symbol5357, (Runtime_MethodClosure)methodclosure4229);


// ASTNode>>astType
//astType
// 	^ 'Type'
string3454 = (Object)new_Type_String(L"Type");
constant5817 = (Object)new_AST_Constant((Object)string3454);
method4230 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant5817);
symbol5361 = (Object)new_Type_Symbol_cached(L"astType");
methodclosure4230 = (Object)new_Runtime_MethodClosure(method4230);
store_method((Type_Class)class704, (Type_Symbol)symbol5361, (Runtime_MethodClosure)methodclosure4230);


// ASTNode>>uid
//uid
// 	uid isNil ifTrue: [ uid := self class uidFor: self].
// 	^ uid
// isNil
send30004 = (Object)new_AST_Send((Object)instancevariable1026, (Object)SMB_isNil, 0);
// class
send30005 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol5592 = (Object)new_Type_Symbol_cached(L"uidFor:");
// uidFor:
send30006 = (Object)new_AST_Send((Object)send30005, (Object)symbol5592, 1, (Object)Self);
assign3675 = (Object)new_AST_Assign((Object)instancevariable1026, (Object)send30006);
block1924 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign3675);
// ifTrue:
send30007 = (Object)new_AST_Send((Object)send30004, (Object)SMB_ifTrue_, 1, (Object)block1924);
method4231 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send30007, instancevariable1026);
methodclosure4231 = (Object)new_Runtime_MethodClosure(method4231);
store_method((Type_Class)class704, (Type_Symbol)symbol5358, (Runtime_MethodClosure)methodclosure4231);


// ASTNode>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable4238 = (Object)new_AST_Variable_named(L"aMessage");
array3386 = (Object)new_Type_Array_with(1, (Object)localvariable4238);
localvariable4239 = (Object)new_AST_Variable_named(L"selector");
array3387 = (Object)new_Type_Array_with(1, (Object)localvariable4239);
variable215 = (Object)new_AST_Variable_named(L"return");
array3388 = (Object)new_Type_Array_with(1, (Object)variable215);
// selector
send30008 = (Object)new_AST_Send((Object)localvariable4238, (Object)symbol5324, 0);
symbol5593 = (Object)new_Type_Symbol_cached(L"accept:");
constant5818 = (Object)new_AST_Constant((Object)symbol5593);
// =
send30009 = (Object)new_AST_Send((Object)send30008, (Object)SMB__equal, 1, (Object)constant5818);
super366 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable4238);
// escape:
send30010 = (Object)new_AST_Send((Object)variable215, (Object)SMB_escape_, 1, (Object)super366);
block1925 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send30010);
// ifFalse:
send30011 = (Object)new_AST_Send((Object)send30009, (Object)SMB_ifFalse_, 1, (Object)block1925);
string3455 = (Object)new_Type_String(L"visit");
constant5819 = (Object)new_AST_Constant((Object)string3455);
// class
send30012 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send30013 = (Object)new_AST_Send((Object)send30012, (Object)SMB_name, 0);
symbol5594 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");
smallint2039 = (Object)new_Type_SmallInt(4);
constant5820 = (Object)new_AST_Constant((Object)smallint2039);
// class
send30014 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send30015 = (Object)new_AST_Send((Object)send30014, (Object)SMB_name, 0);
// size
send30016 = (Object)new_AST_Send((Object)send30015, (Object)SMB_size, 0);
// copyFrom:to:
send30017 = (Object)new_AST_Send((Object)send30013, (Object)symbol5594, 2, (Object)constant5820, (Object)send30016);
// ,
send30018 = (Object)new_AST_Send((Object)constant5819, (Object)SMB__concat, 1, (Object)send30017);
string3456 = (Object)new_Type_String(L":");
constant5821 = (Object)new_AST_Constant((Object)string3456);
// ,
send30019 = (Object)new_AST_Send((Object)send30018, (Object)SMB__concat, 1, (Object)constant5821);
// asSymbol
send30020 = (Object)new_AST_Send((Object)send30019, (Object)SMB_asSymbol, 0);
assign3676 = (Object)new_AST_Assign((Object)localvariable4239, (Object)send30020);
// argument
send30021 = (Object)new_AST_Send((Object)localvariable4238, (Object)symbol5408, 0);
symbol5595 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send30022 = (Object)new_AST_Send((Object)send30021, (Object)symbol5595, 2, (Object)localvariable4239, (Object)Self);
block1926 = (Object)new_AST_Block_with((Type_Array)array3388, (Type_Array)empty_Type_Array, 1, 3, send30011, assign3676, send30022);
// on:
send30023 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1926);
method4232 = (Object)new_AST_Method_with((Type_Array)array3386, (Type_Array)array3387, 1, send30023);
methodclosure4232 = (Object)new_Runtime_MethodClosure(method4232);
store_method((Type_Class)class704, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4232);


// ASTNode>>astName
//astName
// 	^ (self class name 
// 			copyFrom: 4
// 			to: self class name size) capitalized
// class
send30024 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send30025 = (Object)new_AST_Send((Object)send30024, (Object)SMB_name, 0);
smallint2040 = (Object)new_Type_SmallInt(4);
constant5822 = (Object)new_AST_Constant((Object)smallint2040);
// class
send30026 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send30027 = (Object)new_AST_Send((Object)send30026, (Object)SMB_name, 0);
// size
send30028 = (Object)new_AST_Send((Object)send30027, (Object)SMB_size, 0);
// copyFrom:to:
send30029 = (Object)new_AST_Send((Object)send30025, (Object)symbol5594, 2, (Object)constant5822, (Object)send30028);
// capitalized
send30030 = (Object)new_AST_Send((Object)send30029, (Object)symbol5334, 0);
method4233 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30030);
symbol5362 = (Object)new_Type_Symbol_cached(L"astName");
methodclosure4233 = (Object)new_Runtime_MethodClosure(method4233);
store_method((Type_Class)class704, (Type_Symbol)symbol5362, (Runtime_MethodClosure)methodclosure4233);


// ASTNode>>sourceObject
//sourceObject
// 	^ sourceObject
method4234 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1025);
symbol5359 = (Object)new_Type_Symbol_cached(L"sourceObject");
methodclosure4234 = (Object)new_Runtime_MethodClosure(method4234);
store_method((Type_Class)class704, (Type_Symbol)symbol5359, (Runtime_MethodClosure)methodclosure4234);

classreference843 = (Object)new_Organization_ClassReference((Type_Class)class704);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send30031 = (Object)new_AST_Send((Object)Self, (Object)symbol5324, 0);
// selectorSymbol
send30032 = (Object)new_AST_Send((Object)send30031, (Object)symbol5412, 0);
method4235 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30032);
methodclosure4235 = (Object)new_Runtime_MethodClosure(method4235);
store_method((Type_Class)class732, (Type_Symbol)symbol5412, (Runtime_MethodClosure)methodclosure4235);

classreference844 = (Object)new_Organization_ClassReference((Type_Class)class732);

// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
symbol5596 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
string3457 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant5823 = (Object)new_AST_Constant((Object)string3457);
symbol5597 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send30033 = (Object)new_AST_Send((Object)Self, (Object)symbol5597, 0);
localvariable4240 = (Object)new_AST_Variable_named(L"selector");
array3389 = (Object)new_Type_Array_with(1, (Object)localvariable4240);
// new
send30034 = (Object)new_AST_Send((Object)classreference833, (Object)symbol5310, 0);
// selector:
send30035 = (Object)new_AST_Send((Object)send30034, (Object)symbol5404, 1, (Object)localvariable4240);
block1927 = (Object)new_AST_Block_with((Type_Array)array3389, (Type_Array)empty_Type_Array, 1, 1, send30035);
// named:parsing:semantics:
send30036 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5823, (Object)send30033, (Object)block1927);
method4236 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30036);
symbol5471 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure4236 = (Object)new_Runtime_MethodClosure(method4236);
store_method((Type_Class)class733, (Type_Symbol)symbol5471, (Runtime_MethodClosure)methodclosure4236);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string3458 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant5824 = (Object)new_AST_Constant((Object)string3458);
string3459 = (Object)new_Type_String(L"{");
constant5825 = (Object)new_AST_Constant((Object)string3459);
// asPEG
send30037 = (Object)new_AST_Send((Object)constant5825, (Object)symbol5514, 0);
// omit:
send30038 = (Object)new_AST_Send((Object)send30037, (Object)symbol5518, 1, (Object)True_Const);
symbol5598 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send30039 = (Object)new_AST_Send((Object)Self, (Object)symbol5598, 0);
// times
send30040 = (Object)new_AST_Send((Object)send30039, (Object)symbol5509, 0);
// expression
send30041 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
// <&
send30042 = (Object)new_AST_Send((Object)send30040, (Object)symbol5550, 1, (Object)send30041);
// &
send30043 = (Object)new_AST_Send((Object)send30038, (Object)SMB__and, 1, (Object)send30042);
string3460 = (Object)new_Type_String(L"}");
constant5826 = (Object)new_AST_Constant((Object)string3460);
// asPEG
send30044 = (Object)new_AST_Send((Object)constant5826, (Object)symbol5514, 0);
// omit:
send30045 = (Object)new_AST_Send((Object)send30044, (Object)symbol5518, 1, (Object)True_Const);
// <&
send30046 = (Object)new_AST_Send((Object)send30043, (Object)symbol5550, 1, (Object)send30045);
localvariable4241 = (Object)new_AST_Variable_named(L"result");
array3390 = (Object)new_Type_Array_with(1, (Object)localvariable4241);
// new
send30047 = (Object)new_AST_Send((Object)classreference813, (Object)symbol5310, 0);
localvariable4242 = (Object)new_AST_Variable_named(L"receiver");
array3391 = (Object)new_Type_Array_with(1, (Object)localvariable4242);
smallint2041 = (Object)new_Type_SmallInt(2);
constant5827 = (Object)new_AST_Constant((Object)smallint2041);
// at:
send30048 = (Object)new_AST_Send((Object)localvariable4241, (Object)SMB_at_, 1, (Object)constant5827);
// add:
send30049 = (Object)new_AST_Send((Object)localvariable4242, (Object)symbol5376, 1, (Object)send30048);
// yourself
send30050 = (Object)new_AST_Send((Object)localvariable4242, (Object)symbol5216, 0);
block1928 = (Object)new_AST_Block_with((Type_Array)array3391, (Type_Array)empty_Type_Array, 2, 2, send30049, send30050);
// first
send30051 = (Object)new_AST_Send((Object)localvariable4241, (Object)symbol5372, 0);
// value:
send30052 = (Object)new_AST_Send((Object)block1928, (Object)SMB_value_, 1, (Object)send30051);
// expressions:
send30053 = (Object)new_AST_Send((Object)send30047, (Object)symbol5544, 1, (Object)send30052);
block1929 = (Object)new_AST_Block_with((Type_Array)array3390, (Type_Array)empty_Type_Array, 1, 1, send30053);
// named:parsing:semantics:
send30054 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5824, (Object)send30046, (Object)block1929);
method4237 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30054);
symbol5488 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure4237 = (Object)new_Runtime_MethodClosure(method4237);
store_method((Type_Class)class733, (Type_Symbol)symbol5488, (Runtime_MethodClosure)methodclosure4237);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send30055 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
symbol5599 = (Object)new_Type_Symbol_cached(L"messageExpression");
// messageExpression
send30056 = (Object)new_AST_Send((Object)Self, (Object)symbol5599, 0);
// separator
send30057 = (Object)new_AST_Send((Object)Self, (Object)symbol5578, 0);
// separator:
send30058 = (Object)new_AST_Send((Object)send30056, (Object)symbol5526, 1, (Object)send30057);
method4238 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send30055, send30058);
symbol5453 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure4238 = (Object)new_Runtime_MethodClosure(method4238);
store_method((Type_Class)class733, (Type_Symbol)symbol5453, (Runtime_MethodClosure)methodclosure4238);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string3461 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant5828 = (Object)new_AST_Constant((Object)string3461);
symbol5600 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send30059 = (Object)new_AST_Send((Object)Self, (Object)symbol5600, 0);
symbol5601 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send30060 = (Object)new_AST_Send((Object)Self, (Object)symbol5601, 0);
symbol5602 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send30061 = (Object)new_AST_Send((Object)Self, (Object)symbol5602, 0);
// |
send30062 = (Object)new_AST_Send((Object)send30060, (Object)SMB__or, 1, (Object)send30061);
// strongTimes
send30063 = (Object)new_AST_Send((Object)send30062, (Object)symbol5511, 0);
// &&
send30064 = (Object)new_AST_Send((Object)send30059, (Object)symbol5510, 1, (Object)send30063);
localvariable4243 = (Object)new_AST_Variable_named(L"result");
array3392 = (Object)new_Type_Array_with(1, (Object)localvariable4243);
symbol5603 = (Object)new_Type_Symbol_cached(L"second");
// second
send30065 = (Object)new_AST_Send((Object)localvariable4243, (Object)symbol5603, 0);
// first
send30066 = (Object)new_AST_Send((Object)localvariable4243, (Object)symbol5372, 0);
localvariable4244 = (Object)new_AST_Variable_named(L"c");
localvariable4245 = (Object)new_AST_Variable_named(L"e");
array3393 = (Object)new_Type_Array_with(2, (Object)localvariable4244, (Object)localvariable4245);
// ,
send30067 = (Object)new_AST_Send((Object)localvariable4244, (Object)SMB__concat, 1, (Object)localvariable4245);
block1930 = (Object)new_AST_Block_with((Type_Array)array3393, (Type_Array)empty_Type_Array, 2, 1, send30067);
// inject:into:
send30068 = (Object)new_AST_Send((Object)send30065, (Object)symbol5377, 2, (Object)send30066, (Object)block1930);
block1931 = (Object)new_AST_Block_with((Type_Array)array3392, (Type_Array)empty_Type_Array, 1, 1, send30068);
// named:parsing:semantics:
send30069 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5828, (Object)send30064, (Object)block1931);
method4239 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30069);
symbol5481 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure4239 = (Object)new_Runtime_MethodClosure(method4239);
store_method((Type_Class)class733, (Type_Symbol)symbol5481, (Runtime_MethodClosure)methodclosure4239);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
symbol5604 = (Object)new_Type_Symbol_cached(L"named:parsing:");
string3462 = (Object)new_Type_String(L"TEMPORARIES");
constant5829 = (Object)new_AST_Constant((Object)string3462);
symbol5605 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send30070 = (Object)new_AST_Send((Object)Self, (Object)symbol5605, 0);
symbol5606 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send30071 = (Object)new_AST_Send((Object)Self, (Object)symbol5606, 0);
// times
send30072 = (Object)new_AST_Send((Object)send30071, (Object)symbol5509, 0);
// &
send30073 = (Object)new_AST_Send((Object)send30070, (Object)SMB__and, 1, (Object)send30072);
// bar
send30074 = (Object)new_AST_Send((Object)Self, (Object)symbol5605, 0);
// <&
send30075 = (Object)new_AST_Send((Object)send30073, (Object)symbol5550, 1, (Object)send30074);
// named:parsing:
send30076 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5604, 2, (Object)constant5829, (Object)send30075);
method4240 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30076);
symbol5465 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure4240 = (Object)new_Runtime_MethodClosure(method4240);
store_method((Type_Class)class733, (Type_Symbol)symbol5465, (Runtime_MethodClosure)methodclosure4240);


// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
constant5830 = (Object)new_AST_Constant((Object)symbol5599);
string3463 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant5831 = (Object)new_AST_Constant((Object)string3463);
// named:
send30077 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5534, 1, (Object)constant5831);
block1932 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send30077);
// at:ifAbsentPut:
send30078 = (Object)new_AST_Send((Object)instancevariable1059, (Object)symbol5542, 2, (Object)constant5830, (Object)block1932);
method4241 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30078);
symbol5493 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
methodclosure4241 = (Object)new_Runtime_MethodClosure(method4241);
store_method((Type_Class)class733, (Type_Symbol)symbol5493, (Runtime_MethodClosure)methodclosure4241);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable4246 = (Object)new_AST_Variable_named(L"anObject");
array3394 = (Object)new_Type_Array_with(1, (Object)localvariable4246);
variable216 = (Object)new_AST_Variable_named(L"return");
array3395 = (Object)new_Type_Array_with(1, (Object)variable216);
symbol5607 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send30079 = (Object)new_AST_Send((Object)localvariable4246, (Object)symbol5607, 0);
// escape:
send30080 = (Object)new_AST_Send((Object)variable216, (Object)SMB_escape_, 1, (Object)localvariable4246);
block1933 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send30080);
// ifFalse:
send30081 = (Object)new_AST_Send((Object)send30079, (Object)SMB_ifFalse_, 1, (Object)block1933);
// named:
send30082 = (Object)new_AST_Send((Object)classreference830, (Object)symbol5534, 1, (Object)localvariable4246);
block1934 = (Object)new_AST_Block_with((Type_Array)array3395, (Type_Array)empty_Type_Array, 1, 2, send30081, send30082);
// on:
send30083 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1934);
method4242 = (Object)new_AST_Method_with((Type_Array)array3394, (Type_Array)empty_Type_Array, 1, send30083);
symbol5435 = (Object)new_Type_Symbol_cached(L"createSymbol:");
methodclosure4242 = (Object)new_Runtime_MethodClosure(method4242);
store_method((Type_Class)class733, (Type_Symbol)symbol5435, (Runtime_MethodClosure)methodclosure4242);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable4247 = (Object)new_AST_Variable_named(L"variables");
localvariable4248 = (Object)new_AST_Variable_named(L"expression");
array3396 = (Object)new_Type_Array_with(2, (Object)localvariable4247, (Object)localvariable4248);
symbol5476 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
// preStorePrimary
send30084 = (Object)new_AST_Send((Object)Self, (Object)symbol5476, 0);
// preStoreMessageExpression
send30085 = (Object)new_AST_Send((Object)Self, (Object)symbol5493, 0);
symbol5492 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
// preStoreCascadedMessageExpression
send30086 = (Object)new_AST_Send((Object)Self, (Object)symbol5492, 0);
constant5832 = (Object)new_AST_Constant((Object)symbol5427);
string3464 = (Object)new_Type_String(L"EXPRESSION");
constant5833 = (Object)new_AST_Constant((Object)string3464);
symbol5608 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send30087 = (Object)new_AST_Send((Object)Self, (Object)symbol5608, 0);
symbol5609 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
// cascadedMessageExpression
send30088 = (Object)new_AST_Send((Object)Self, (Object)symbol5609, 0);
// messageExpression
send30089 = (Object)new_AST_Send((Object)Self, (Object)symbol5599, 0);
// |
send30090 = (Object)new_AST_Send((Object)send30088, (Object)SMB__or, 1, (Object)send30089);
// &
send30091 = (Object)new_AST_Send((Object)send30087, (Object)SMB__and, 1, (Object)send30090);
symbol5610 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send30092 = (Object)new_AST_Send((Object)Self, (Object)symbol5610, 0);
// <=
send30093 = (Object)new_AST_Send((Object)send30091, (Object)symbol5337, 1, (Object)send30092);
localvariable4249 = (Object)new_AST_Variable_named(L"result");
array3397 = (Object)new_Type_Array_with(1, (Object)localvariable4249);
// first
send30094 = (Object)new_AST_Send((Object)localvariable4249, (Object)symbol5372, 0);
assign3677 = (Object)new_AST_Assign((Object)localvariable4247, (Object)send30094);
smallint2042 = (Object)new_Type_SmallInt(2);
constant5834 = (Object)new_AST_Constant((Object)smallint2042);
// at:
send30095 = (Object)new_AST_Send((Object)localvariable4249, (Object)SMB_at_, 1, (Object)constant5834);
assign3678 = (Object)new_AST_Assign((Object)localvariable4248, (Object)send30095);
symbol5611 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send30096 = (Object)new_AST_Send((Object)localvariable4247, (Object)symbol5611, 0);
localvariable4250 = (Object)new_AST_Variable_named(L"variable");
array3398 = (Object)new_Type_Array_with(1, (Object)localvariable4250);
localvariable4251 = (Object)new_AST_Variable_named(L"receiver");
array3399 = (Object)new_Type_Array_with(1, (Object)localvariable4251);
// expression:
send30097 = (Object)new_AST_Send((Object)localvariable4251, (Object)symbol5426, 1, (Object)localvariable4248);
// variable:
send30098 = (Object)new_AST_Send((Object)localvariable4251, (Object)symbol5428, 1, (Object)localvariable4250);
block1935 = (Object)new_AST_Block_with((Type_Array)array3399, (Type_Array)empty_Type_Array, 3, 2, send30097, send30098);
// new
send30099 = (Object)new_AST_Send((Object)classreference820, (Object)symbol5310, 0);
// value:
send30100 = (Object)new_AST_Send((Object)block1935, (Object)SMB_value_, 1, (Object)send30099);
assign3679 = (Object)new_AST_Assign((Object)localvariable4248, (Object)send30100);
block1936 = (Object)new_AST_Block_with((Type_Array)array3398, (Type_Array)empty_Type_Array, 2, 1, assign3679);
// do:
send30101 = (Object)new_AST_Send((Object)send30096, (Object)symbol5375, 1, (Object)block1936);
block1937 = (Object)new_AST_Block_with((Type_Array)array3397, (Type_Array)empty_Type_Array, 1, 4, assign3677, assign3678, send30101, localvariable4248);
// named:parsing:semantics:
send30102 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5833, (Object)send30093, (Object)block1937);
// at:put:
send30103 = (Object)new_AST_Send((Object)instancevariable1059, (Object)SMB_at_put_, 2, (Object)constant5832, (Object)send30102);
symbol5452 = (Object)new_Type_Symbol_cached(L"injectPrimary");
// injectPrimary
send30104 = (Object)new_AST_Send((Object)Self, (Object)symbol5452, 0);
symbol5472 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
// injectMessageExpression
send30105 = (Object)new_AST_Send((Object)Self, (Object)symbol5472, 0);
symbol5480 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
// injectCascadedMessageExpression
send30106 = (Object)new_AST_Send((Object)Self, (Object)symbol5480, 0);
constant5835 = (Object)new_AST_Constant((Object)symbol5427);
// at:
send30107 = (Object)new_AST_Send((Object)instancevariable1059, (Object)SMB_at_, 1, (Object)constant5835);
method4243 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3396, 8, send30084, send30085, send30086, send30103, send30104, send30105, send30106, send30107);
symbol5463 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure4243 = (Object)new_Runtime_MethodClosure(method4243);
store_method((Type_Class)class733, (Type_Symbol)symbol5463, (Runtime_MethodClosure)methodclosure4243);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string3465 = (Object)new_Type_String(L"NUMBER");
constant5836 = (Object)new_AST_Constant((Object)string3465);
// decimalDigit
send30108 = (Object)new_AST_Send((Object)Self, (Object)symbol5602, 0);
// plus
send30109 = (Object)new_AST_Send((Object)send30108, (Object)symbol5521, 0);
localvariable4252 = (Object)new_AST_Variable_named(L"result");
array3400 = (Object)new_Type_Array_with(1, (Object)localvariable4252);
localvariable4253 = (Object)new_AST_Variable_named(L"receiver");
array3401 = (Object)new_Type_Array_with(1, (Object)localvariable4253);
string3466 = (Object)new_Type_String(L"");
constant5837 = (Object)new_AST_Constant((Object)string3466);
localvariable4254 = (Object)new_AST_Variable_named(L"c");
localvariable4255 = (Object)new_AST_Variable_named(L"e");
array3402 = (Object)new_Type_Array_with(2, (Object)localvariable4254, (Object)localvariable4255);
// ,
send30110 = (Object)new_AST_Send((Object)localvariable4254, (Object)SMB__concat, 1, (Object)localvariable4255);
block1938 = (Object)new_AST_Block_with((Type_Array)array3402, (Type_Array)empty_Type_Array, 3, 1, send30110);
// inject:into:
send30111 = (Object)new_AST_Send((Object)localvariable4252, (Object)symbol5377, 2, (Object)constant5837, (Object)block1938);
// number:
send30112 = (Object)new_AST_Send((Object)localvariable4253, (Object)symbol5379, 1, (Object)send30111);
string3467 = (Object)new_Type_String(L"10");
constant5838 = (Object)new_AST_Constant((Object)string3467);
// base:
send30113 = (Object)new_AST_Send((Object)localvariable4253, (Object)symbol5384, 1, (Object)constant5838);
block1939 = (Object)new_AST_Block_with((Type_Array)array3401, (Type_Array)empty_Type_Array, 2, 2, send30112, send30113);
// new
send30114 = (Object)new_AST_Send((Object)classreference823, (Object)symbol5310, 0);
// value:
send30115 = (Object)new_AST_Send((Object)block1939, (Object)SMB_value_, 1, (Object)send30114);
block1940 = (Object)new_AST_Block_with((Type_Array)array3400, (Type_Array)empty_Type_Array, 1, 1, send30115);
// named:parsing:semantics:
send30116 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5836, (Object)send30109, (Object)block1940);
method4244 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30116);
symbol5503 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure4244 = (Object)new_Runtime_MethodClosure(method4244);
store_method((Type_Class)class733, (Type_Symbol)symbol5503, (Runtime_MethodClosure)methodclosure4244);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string3468 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant5839 = (Object)new_AST_Constant((Object)string3468);
symbol5612 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send30117 = (Object)new_AST_Send((Object)Self, (Object)symbol5612, 0);
symbol5613 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send30118 = (Object)new_AST_Send((Object)Self, (Object)symbol5613, 0);
// &
send30119 = (Object)new_AST_Send((Object)send30117, (Object)SMB__and, 1, (Object)send30118);
localvariable4256 = (Object)new_AST_Variable_named(L"parts");
array3403 = (Object)new_Type_Array_with(1, (Object)localvariable4256);
localvariable4257 = (Object)new_AST_Variable_named(L"receiver");
array3404 = (Object)new_Type_Array_with(1, (Object)localvariable4257);
// first
send30120 = (Object)new_AST_Send((Object)localvariable4256, (Object)symbol5372, 0);
// createSymbol:
send30121 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)send30120);
// selector:
send30122 = (Object)new_AST_Send((Object)localvariable4257, (Object)symbol5404, 1, (Object)send30121);
smallint2043 = (Object)new_Type_SmallInt(2);
constant5840 = (Object)new_AST_Constant((Object)smallint2043);
// at:
send30123 = (Object)new_AST_Send((Object)localvariable4256, (Object)SMB_at_, 1, (Object)constant5840);
// argument:
send30124 = (Object)new_AST_Send((Object)localvariable4257, (Object)symbol5407, 1, (Object)send30123);
block1941 = (Object)new_AST_Block_with((Type_Array)array3404, (Type_Array)empty_Type_Array, 2, 2, send30122, send30124);
// new
send30125 = (Object)new_AST_Send((Object)classreference828, (Object)symbol5310, 0);
// value:
send30126 = (Object)new_AST_Send((Object)block1941, (Object)SMB_value_, 1, (Object)send30125);
block1942 = (Object)new_AST_Block_with((Type_Array)array3403, (Type_Array)empty_Type_Array, 1, 1, send30126);
// named:parsing:semantics:
send30127 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5839, (Object)send30119, (Object)block1942);
method4245 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30127);
symbol5447 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure4245 = (Object)new_Runtime_MethodClosure(method4245);
store_method((Type_Class)class733, (Type_Symbol)symbol5447, (Runtime_MethodClosure)methodclosure4245);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string3469 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant5841 = (Object)new_AST_Constant((Object)string3469);
symbol5614 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send30128 = (Object)new_AST_Send((Object)Self, (Object)symbol5614, 0);
// primary
send30129 = (Object)new_AST_Send((Object)Self, (Object)symbol5610, 0);
// &
send30130 = (Object)new_AST_Send((Object)send30128, (Object)SMB__and, 1, (Object)send30129);
// plus
send30131 = (Object)new_AST_Send((Object)send30130, (Object)symbol5521, 0);
localvariable4258 = (Object)new_AST_Variable_named(L"result");
array3405 = (Object)new_Type_Array_with(1, (Object)localvariable4258);
localvariable4259 = (Object)new_AST_Variable_named(L"receiver");
array3406 = (Object)new_Type_Array_with(1, (Object)localvariable4259);
symbol5615 = (Object)new_Type_Symbol_cached(L"collect:");
localvariable4260 = (Object)new_AST_Variable_named(L"each");
array3407 = (Object)new_Type_Array_with(1, (Object)localvariable4260);
// first
send30132 = (Object)new_AST_Send((Object)localvariable4260, (Object)symbol5372, 0);
// named:
send30133 = (Object)new_AST_Send((Object)classreference830, (Object)symbol5534, 1, (Object)send30132);
block1943 = (Object)new_AST_Block_with((Type_Array)array3407, (Type_Array)empty_Type_Array, 3, 1, send30133);
// collect:
send30134 = (Object)new_AST_Send((Object)localvariable4258, (Object)symbol5615, 1, (Object)block1943);
// keywords:
send30135 = (Object)new_AST_Send((Object)localvariable4259, (Object)symbol5409, 1, (Object)send30134);
// new
send30136 = (Object)new_AST_Send((Object)classreference832, (Object)symbol5310, 0);
constant5842 = (Object)new_AST_Constant((Object)symbol5372);
// collect:
send30137 = (Object)new_AST_Send((Object)localvariable4258, (Object)symbol5615, 1, (Object)constant5842);
// keywords:
send30138 = (Object)new_AST_Send((Object)send30136, (Object)symbol5409, 1, (Object)send30137);
// selector:
send30139 = (Object)new_AST_Send((Object)localvariable4259, (Object)symbol5404, 1, (Object)send30138);
constant5843 = (Object)new_AST_Constant((Object)symbol5603);
// collect:
send30140 = (Object)new_AST_Send((Object)localvariable4258, (Object)symbol5615, 1, (Object)constant5843);
// arguments:
send30141 = (Object)new_AST_Send((Object)localvariable4259, (Object)symbol5411, 1, (Object)send30140);
block1944 = (Object)new_AST_Block_with((Type_Array)array3406, (Type_Array)empty_Type_Array, 2, 3, send30135, send30139, send30141);
// new
send30142 = (Object)new_AST_Send((Object)classreference826, (Object)symbol5310, 0);
// value:
send30143 = (Object)new_AST_Send((Object)block1944, (Object)SMB_value_, 1, (Object)send30142);
block1945 = (Object)new_AST_Block_with((Type_Array)array3405, (Type_Array)empty_Type_Array, 1, 1, send30143);
// named:parsing:semantics:
send30144 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5841, (Object)send30131, (Object)block1945);
method4246 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30144);
symbol5475 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure4246 = (Object)new_Runtime_MethodClosure(method4246);
store_method((Type_Class)class733, (Type_Symbol)symbol5475, (Runtime_MethodClosure)methodclosure4246);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable4261 = (Object)new_AST_Variable_named(L"name");
array3408 = (Object)new_Type_Array_with(1, (Object)localvariable4261);
variable217 = (Object)new_AST_Variable_named(L"return");
array3409 = (Object)new_Type_Array_with(1, (Object)variable217);
string3470 = (Object)new_Type_String(L"self");
constant5844 = (Object)new_AST_Constant((Object)string3470);
// =
send30145 = (Object)new_AST_Send((Object)localvariable4261, (Object)SMB__equal, 1, (Object)constant5844);
// new
send30146 = (Object)new_AST_Send((Object)classreference838, (Object)symbol5310, 0);
// escape:
send30147 = (Object)new_AST_Send((Object)variable217, (Object)SMB_escape_, 1, (Object)send30146);
block1946 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send30147);
// ifTrue:
send30148 = (Object)new_AST_Send((Object)send30145, (Object)SMB_ifTrue_, 1, (Object)block1946);
string3471 = (Object)new_Type_String(L"super");
constant5845 = (Object)new_AST_Constant((Object)string3471);
// =
send30149 = (Object)new_AST_Send((Object)localvariable4261, (Object)SMB__equal, 1, (Object)constant5845);
// new
send30150 = (Object)new_AST_Send((Object)classreference836, (Object)symbol5310, 0);
// escape:
send30151 = (Object)new_AST_Send((Object)variable217, (Object)SMB_escape_, 1, (Object)send30150);
block1947 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send30151);
// ifTrue:
send30152 = (Object)new_AST_Send((Object)send30149, (Object)SMB_ifTrue_, 1, (Object)block1947);
// new
send30153 = (Object)new_AST_Send((Object)classreference818, (Object)symbol5310, 0);
// name:
send30154 = (Object)new_AST_Send((Object)send30153, (Object)symbol5393, 1, (Object)localvariable4261);
block1948 = (Object)new_AST_Block_with((Type_Array)array3409, (Type_Array)empty_Type_Array, 1, 3, send30148, send30152, send30154);
// on:
send30155 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1948);
method4247 = (Object)new_AST_Method_with((Type_Array)array3408, (Type_Array)empty_Type_Array, 1, send30155);
symbol5440 = (Object)new_Type_Symbol_cached(L"createVariable:");
methodclosure4247 = (Object)new_Runtime_MethodClosure(method4247);
store_method((Type_Class)class733, (Type_Symbol)symbol5440, (Runtime_MethodClosure)methodclosure4247);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super367 = (Object)new_AST_Super((Object)symbol5218, 0);
// new
send30156 = (Object)new_AST_Send((Object)classreference796, (Object)symbol5310, 0);
assign3680 = (Object)new_AST_Assign((Object)instancevariable1059, (Object)send30156);
// new
send30157 = (Object)new_AST_Send((Object)classreference796, (Object)symbol5310, 0);
assign3681 = (Object)new_AST_Assign((Object)instancevariable1061, (Object)send30157);
smallint2044 = (Object)new_Type_SmallInt(0);
constant5846 = (Object)new_AST_Constant((Object)smallint2044);
assign3682 = (Object)new_AST_Assign((Object)instancevariable1060, (Object)constant5846);
method4248 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super367, assign3680, assign3681, assign3682, Self);
methodclosure4248 = (Object)new_Runtime_MethodClosure(method4248);
store_method((Type_Class)class733, (Type_Symbol)symbol5218, (Runtime_MethodClosure)methodclosure4248);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
symbol5616 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send30158 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
method4249 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30158);
symbol5457 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure4249 = (Object)new_Runtime_MethodClosure(method4249);
store_method((Type_Class)class733, (Type_Symbol)symbol5457, (Runtime_MethodClosure)methodclosure4249);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable4262 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable4263 = (Object)new_AST_Variable_named(L"first");
array3410 = (Object)new_Type_Array_with(2, (Object)localvariable4262, (Object)localvariable4263);
string3472 = (Object)new_Type_String(L"\'");
constant5847 = (Object)new_AST_Constant((Object)string3472);
// asPEG
send30159 = (Object)new_AST_Send((Object)constant5847, (Object)symbol5514, 0);
// omit:
send30160 = (Object)new_AST_Send((Object)send30159, (Object)symbol5518, 1, (Object)True_Const);
assign3683 = (Object)new_AST_Assign((Object)localvariable4262, (Object)send30160);
string3473 = (Object)new_Type_String(L"STRING");
constant5848 = (Object)new_AST_Constant((Object)string3473);
// not
send30161 = (Object)new_AST_Send((Object)localvariable4262, (Object)SMB_not, 0);
// strongTimes
send30162 = (Object)new_AST_Send((Object)send30161, (Object)symbol5511, 0);
// &&
send30163 = (Object)new_AST_Send((Object)localvariable4262, (Object)symbol5510, 1, (Object)send30162);
// <&
send30164 = (Object)new_AST_Send((Object)send30163, (Object)symbol5550, 1, (Object)localvariable4262);
// strongPlus
send30165 = (Object)new_AST_Send((Object)send30164, (Object)symbol5517, 0);
localvariable4264 = (Object)new_AST_Variable_named(L"result");
array3411 = (Object)new_Type_Array_with(1, (Object)localvariable4264);
symbol5617 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send30166 = (Object)new_AST_Send((Object)localvariable4264, (Object)symbol5617, 0);
assign3684 = (Object)new_AST_Assign((Object)localvariable4263, (Object)send30166);
string3474 = (Object)new_Type_String(L"");
constant5849 = (Object)new_AST_Constant((Object)string3474);
localvariable4265 = (Object)new_AST_Variable_named(L"c");
localvariable4266 = (Object)new_AST_Variable_named(L"e");
array3412 = (Object)new_Type_Array_with(2, (Object)localvariable4265, (Object)localvariable4266);
// ,
send30167 = (Object)new_AST_Send((Object)localvariable4265, (Object)SMB__concat, 1, (Object)localvariable4266);
block1949 = (Object)new_AST_Block_with((Type_Array)array3412, (Type_Array)empty_Type_Array, 2, 1, send30167);
// inject:into:
send30168 = (Object)new_AST_Send((Object)localvariable4263, (Object)symbol5377, 2, (Object)constant5849, (Object)block1949);
assign3685 = (Object)new_AST_Assign((Object)localvariable4263, (Object)send30168);
localvariable4267 = (Object)new_AST_Variable_named(L"c");
localvariable4268 = (Object)new_AST_Variable_named(L"e");
array3413 = (Object)new_Type_Array_with(2, (Object)localvariable4267, (Object)localvariable4268);
string3475 = (Object)new_Type_String(L"\'");
constant5850 = (Object)new_AST_Constant((Object)string3475);
// ,
send30169 = (Object)new_AST_Send((Object)localvariable4267, (Object)SMB__concat, 1, (Object)constant5850);
string3476 = (Object)new_Type_String(L"");
constant5851 = (Object)new_AST_Constant((Object)string3476);
localvariable4269 = (Object)new_AST_Variable_named(L"ic");
localvariable4270 = (Object)new_AST_Variable_named(L"ie");
array3414 = (Object)new_Type_Array_with(2, (Object)localvariable4269, (Object)localvariable4270);
// ,
send30170 = (Object)new_AST_Send((Object)localvariable4269, (Object)SMB__concat, 1, (Object)localvariable4270);
block1950 = (Object)new_AST_Block_with((Type_Array)array3414, (Type_Array)empty_Type_Array, 3, 1, send30170);
// inject:into:
send30171 = (Object)new_AST_Send((Object)localvariable4268, (Object)symbol5377, 2, (Object)constant5851, (Object)block1950);
// ,
send30172 = (Object)new_AST_Send((Object)send30169, (Object)SMB__concat, 1, (Object)send30171);
block1951 = (Object)new_AST_Block_with((Type_Array)array3413, (Type_Array)empty_Type_Array, 2, 1, send30172);
// inject:into:
send30173 = (Object)new_AST_Send((Object)localvariable4264, (Object)symbol5377, 2, (Object)localvariable4263, (Object)block1951);
block1952 = (Object)new_AST_Block_with((Type_Array)array3411, (Type_Array)empty_Type_Array, 1, 3, assign3684, assign3685, send30173);
// named:parsing:semantics:
send30174 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5848, (Object)send30165, (Object)block1952);
method4250 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3410, 2, assign3683, send30174);
symbol5485 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure4250 = (Object)new_Runtime_MethodClosure(method4250);
store_method((Type_Class)class733, (Type_Symbol)symbol5485, (Runtime_MethodClosure)methodclosure4250);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send30175 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
string3477 = (Object)new_Type_String(L".");
constant5852 = (Object)new_AST_Constant((Object)string3477);
// asPEG
send30176 = (Object)new_AST_Send((Object)constant5852, (Object)symbol5514, 0);
// optional
send30177 = (Object)new_AST_Send((Object)send30176, (Object)symbol5513, 0);
// omit:
send30178 = (Object)new_AST_Send((Object)send30177, (Object)symbol5518, 1, (Object)True_Const);
// &
send30179 = (Object)new_AST_Send((Object)send30175, (Object)SMB__and, 1, (Object)send30178);
method4251 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30179);
symbol5469 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure4251 = (Object)new_Runtime_MethodClosure(method4251);
store_method((Type_Class)class733, (Type_Symbol)symbol5469, (Runtime_MethodClosure)methodclosure4251);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string3478 = (Object)new_Type_String(L"VARIABLE-NAME");
constant5853 = (Object)new_AST_Constant((Object)string3478);
// identifier
send30180 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
localvariable4271 = (Object)new_AST_Variable_named(L"result");
array3415 = (Object)new_Type_Array_with(1, (Object)localvariable4271);
// createVariable:
send30181 = (Object)new_AST_Send((Object)Self, (Object)symbol5440, 1, (Object)localvariable4271);
block1953 = (Object)new_AST_Block_with((Type_Array)array3415, (Type_Array)empty_Type_Array, 1, 1, send30181);
// named:parsing:semantics:
send30182 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5853, (Object)send30180, (Object)block1953);
method4252 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30182);
symbol5497 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure4252 = (Object)new_Runtime_MethodClosure(method4252);
store_method((Type_Class)class733, (Type_Symbol)symbol5497, (Runtime_MethodClosure)methodclosure4252);


// SCParser>>symbols
//symbols
// 	^ symbols
method4253 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1061);
symbol5450 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure4253 = (Object)new_Runtime_MethodClosure(method4253);
store_method((Type_Class)class733, (Type_Symbol)symbol5450, (Runtime_MethodClosure)methodclosure4253);


// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
string3479 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant5854 = (Object)new_AST_Constant((Object)string3479);
string3480 = (Object)new_Type_String(L"#");
constant5855 = (Object)new_AST_Constant((Object)string3480);
// asPEG
send30183 = (Object)new_AST_Send((Object)constant5855, (Object)symbol5514, 0);
// omit:
send30184 = (Object)new_AST_Send((Object)send30183, (Object)symbol5518, 1, (Object)True_Const);
// symbol
send30185 = (Object)new_AST_Send((Object)Self, (Object)symbol5385, 0);
// &&
send30186 = (Object)new_AST_Send((Object)send30184, (Object)symbol5510, 1, (Object)send30185);
localvariable4272 = (Object)new_AST_Variable_named(L"result");
array3416 = (Object)new_Type_Array_with(1, (Object)localvariable4272);
// new
send30187 = (Object)new_AST_Send((Object)classreference830, (Object)symbol5310, 0);
// symbol:
send30188 = (Object)new_AST_Send((Object)send30187, (Object)symbol5386, 1, (Object)localvariable4272);
block1954 = (Object)new_AST_Block_with((Type_Array)array3416, (Type_Array)empty_Type_Array, 1, 1, send30188);
// named:parsing:semantics:
send30189 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5854, (Object)send30186, (Object)block1954);
method4254 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30189);
symbol5439 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure4254 = (Object)new_Runtime_MethodClosure(method4254);
store_method((Type_Class)class733, (Type_Symbol)symbol5439, (Runtime_MethodClosure)methodclosure4254);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable4273 = (Object)new_AST_Variable_named(L"commentBorder");
array3417 = (Object)new_Type_Array_with(1, (Object)localvariable4273);
string3481 = (Object)new_Type_String(L"\"");
constant5856 = (Object)new_AST_Constant((Object)string3481);
// asPEG
send30190 = (Object)new_AST_Send((Object)constant5856, (Object)symbol5514, 0);
assign3686 = (Object)new_AST_Assign((Object)localvariable4273, (Object)send30190);
// not
send30191 = (Object)new_AST_Send((Object)localvariable4273, (Object)SMB_not, 0);
// strongTimes
send30192 = (Object)new_AST_Send((Object)send30191, (Object)symbol5511, 0);
// &&
send30193 = (Object)new_AST_Send((Object)localvariable4273, (Object)symbol5510, 1, (Object)send30192);
// <&
send30194 = (Object)new_AST_Send((Object)send30193, (Object)symbol5550, 1, (Object)localvariable4273);
method4255 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3417, 2, assign3686, send30194);
symbol5490 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure4255 = (Object)new_Runtime_MethodClosure(method4255);
store_method((Type_Class)class733, (Type_Symbol)symbol5490, (Runtime_MethodClosure)methodclosure4255);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string3482 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant5857 = (Object)new_AST_Constant((Object)string3482);
// keyword
send30195 = (Object)new_AST_Send((Object)Self, (Object)symbol5614, 0);
symbol5618 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send30196 = (Object)new_AST_Send((Object)Self, (Object)symbol5618, 0);
// &
send30197 = (Object)new_AST_Send((Object)send30195, (Object)SMB__and, 1, (Object)send30196);
// plus
send30198 = (Object)new_AST_Send((Object)send30197, (Object)symbol5521, 0);
localvariable4274 = (Object)new_AST_Variable_named(L"parts");
array3418 = (Object)new_Type_Array_with(1, (Object)localvariable4274);
localvariable4275 = (Object)new_AST_Variable_named(L"receiver");
array3419 = (Object)new_Type_Array_with(1, (Object)localvariable4275);
constant5858 = (Object)new_AST_Constant((Object)symbol5372);
// collect:
send30199 = (Object)new_AST_Send((Object)localvariable4274, (Object)symbol5615, 1, (Object)constant5858);
// keywords:
send30200 = (Object)new_AST_Send((Object)localvariable4275, (Object)symbol5409, 1, (Object)send30199);
localvariable4276 = (Object)new_AST_Variable_named(L"receiver");
array3420 = (Object)new_Type_Array_with(1, (Object)localvariable4276);
constant5859 = (Object)new_AST_Constant((Object)symbol5372);
// collect:
send30201 = (Object)new_AST_Send((Object)localvariable4274, (Object)symbol5615, 1, (Object)constant5859);
// keywords:
send30202 = (Object)new_AST_Send((Object)localvariable4276, (Object)symbol5409, 1, (Object)send30201);
constant5860 = (Object)new_AST_Constant((Object)symbol5372);
// collect:
send30203 = (Object)new_AST_Send((Object)localvariable4274, (Object)symbol5615, 1, (Object)constant5860);
string3483 = (Object)new_Type_String(L":");
constant5861 = (Object)new_AST_Constant((Object)string3483);
// joinUsing:
send30204 = (Object)new_AST_Send((Object)send30203, (Object)symbol5590, 1, (Object)constant5861);
string3484 = (Object)new_Type_String(L":");
constant5862 = (Object)new_AST_Constant((Object)string3484);
// ,
send30205 = (Object)new_AST_Send((Object)send30204, (Object)SMB__concat, 1, (Object)constant5862);
// createSymbol:
send30206 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)send30205);
// selector:
send30207 = (Object)new_AST_Send((Object)localvariable4276, (Object)symbol5404, 1, (Object)send30206);
block1955 = (Object)new_AST_Block_with((Type_Array)array3420, (Type_Array)empty_Type_Array, 3, 2, send30202, send30207);
// new
send30208 = (Object)new_AST_Send((Object)classreference832, (Object)symbol5310, 0);
// value:
send30209 = (Object)new_AST_Send((Object)block1955, (Object)SMB_value_, 1, (Object)send30208);
// selector:
send30210 = (Object)new_AST_Send((Object)localvariable4275, (Object)symbol5404, 1, (Object)send30209);
constant5863 = (Object)new_AST_Constant((Object)symbol5603);
// collect:
send30211 = (Object)new_AST_Send((Object)localvariable4274, (Object)symbol5615, 1, (Object)constant5863);
// arguments:
send30212 = (Object)new_AST_Send((Object)localvariable4275, (Object)symbol5411, 1, (Object)send30211);
block1956 = (Object)new_AST_Block_with((Type_Array)array3419, (Type_Array)empty_Type_Array, 2, 3, send30200, send30210, send30212);
// new
send30213 = (Object)new_AST_Send((Object)classreference835, (Object)symbol5310, 0);
// value:
send30214 = (Object)new_AST_Send((Object)block1956, (Object)SMB_value_, 1, (Object)send30213);
block1957 = (Object)new_AST_Block_with((Type_Array)array3418, (Type_Array)empty_Type_Array, 1, 1, send30214);
// named:parsing:semantics:
send30215 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5857, (Object)send30198, (Object)block1957);
method4256 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30215);
symbol5479 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure4256 = (Object)new_Runtime_MethodClosure(method4256);
store_method((Type_Class)class733, (Type_Symbol)symbol5479, (Runtime_MethodClosure)methodclosure4256);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new
// 						selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
symbol5434 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
// preStoreBinaryObjectDescription
send30216 = (Object)new_AST_Send((Object)Self, (Object)symbol5434, 0);
symbol5619 = (Object)new_Type_Symbol_cached(L"binaryExpression");
constant5864 = (Object)new_AST_Constant((Object)symbol5619);
string3485 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant5865 = (Object)new_AST_Constant((Object)string3485);
// unaryObjectDescription
send30217 = (Object)new_AST_Send((Object)Self, (Object)symbol5613, 0);
// binarySelector
send30218 = (Object)new_AST_Send((Object)Self, (Object)symbol5612, 0);
// &
send30219 = (Object)new_AST_Send((Object)send30217, (Object)SMB__and, 1, (Object)send30218);
// binaryObjectDescription
send30220 = (Object)new_AST_Send((Object)Self, (Object)symbol5618, 0);
// <&
send30221 = (Object)new_AST_Send((Object)send30219, (Object)symbol5550, 1, (Object)send30220);
localvariable4277 = (Object)new_AST_Variable_named(L"parts");
array3421 = (Object)new_Type_Array_with(1, (Object)localvariable4277);
smallint2045 = (Object)new_Type_SmallInt(3);
constant5866 = (Object)new_AST_Constant((Object)smallint2045);
// at:
send30222 = (Object)new_AST_Send((Object)localvariable4277, (Object)SMB_at_, 1, (Object)constant5866);
localvariable4278 = (Object)new_AST_Variable_named(L"receiver");
array3422 = (Object)new_Type_Array_with(1, (Object)localvariable4278);
// first
send30223 = (Object)new_AST_Send((Object)localvariable4277, (Object)symbol5372, 0);
// receiver:
send30224 = (Object)new_AST_Send((Object)localvariable4278, (Object)symbol5398, 1, (Object)send30223);
// new
send30225 = (Object)new_AST_Send((Object)classreference840, (Object)symbol5310, 0);
smallint2046 = (Object)new_Type_SmallInt(2);
constant5867 = (Object)new_AST_Constant((Object)smallint2046);
// at:
send30226 = (Object)new_AST_Send((Object)localvariable4277, (Object)SMB_at_, 1, (Object)constant5867);
// createSymbol:
send30227 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)send30226);
// selector:
send30228 = (Object)new_AST_Send((Object)send30225, (Object)symbol5404, 1, (Object)send30227);
// selector:
send30229 = (Object)new_AST_Send((Object)localvariable4278, (Object)symbol5404, 1, (Object)send30228);
block1958 = (Object)new_AST_Block_with((Type_Array)array3422, (Type_Array)empty_Type_Array, 2, 2, send30224, send30229);
// new
send30230 = (Object)new_AST_Send((Object)classreference828, (Object)symbol5310, 0);
// value:
send30231 = (Object)new_AST_Send((Object)block1958, (Object)SMB_value_, 1, (Object)send30230);
// argumentOfBinary:
send30232 = (Object)new_AST_Send((Object)send30222, (Object)symbol5360, 1, (Object)send30231);
block1959 = (Object)new_AST_Block_with((Type_Array)array3421, (Type_Array)empty_Type_Array, 1, 1, send30232);
// named:parsing:semantics:
send30233 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5865, (Object)send30221, (Object)block1959);
// at:ifAbsentPut:
send30234 = (Object)new_AST_Send((Object)instancevariable1059, (Object)symbol5542, 2, (Object)constant5864, (Object)send30233);
symbol5433 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
// injectBinaryObjectDescription
send30235 = (Object)new_AST_Send((Object)Self, (Object)symbol5433, 0);
// binaryExpression
send30236 = (Object)new_AST_Send((Object)Self, (Object)symbol5619, 0);
method4257 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send30216, send30234, send30235, send30236);
symbol5432 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure4257 = (Object)new_Runtime_MethodClosure(method4257);
store_method((Type_Class)class733, (Type_Symbol)symbol5432, (Runtime_MethodClosure)methodclosure4257);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable4279 = (Object)new_AST_Variable_named(L"aDictionary");
array3423 = (Object)new_Type_Array_with(1, (Object)localvariable4279);
assign3687 = (Object)new_AST_Assign((Object)instancevariable1059, (Object)localvariable4279);
method4258 = (Object)new_AST_Method_with((Type_Array)array3423, (Type_Array)empty_Type_Array, 2, assign3687, Self);
symbol5460 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure4258 = (Object)new_Runtime_MethodClosure(method4258);
store_method((Type_Class)class733, (Type_Symbol)symbol5460, (Runtime_MethodClosure)methodclosure4258);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string3486 = (Object)new_Type_String(L"IDENTIFIER");
constant5868 = (Object)new_AST_Constant((Object)string3486);
// letter
send30237 = (Object)new_AST_Send((Object)Self, (Object)symbol5601, 0);
// letter
send30238 = (Object)new_AST_Send((Object)Self, (Object)symbol5601, 0);
// decimalDigit
send30239 = (Object)new_AST_Send((Object)Self, (Object)symbol5602, 0);
// |
send30240 = (Object)new_AST_Send((Object)send30238, (Object)SMB__or, 1, (Object)send30239);
// strongTimes
send30241 = (Object)new_AST_Send((Object)send30240, (Object)symbol5511, 0);
// &&
send30242 = (Object)new_AST_Send((Object)send30237, (Object)symbol5510, 1, (Object)send30241);
localvariable4280 = (Object)new_AST_Variable_named(L"result");
array3424 = (Object)new_Type_Array_with(1, (Object)localvariable4280);
// second
send30243 = (Object)new_AST_Send((Object)localvariable4280, (Object)symbol5603, 0);
// first
send30244 = (Object)new_AST_Send((Object)localvariable4280, (Object)symbol5372, 0);
localvariable4281 = (Object)new_AST_Variable_named(L"c");
localvariable4282 = (Object)new_AST_Variable_named(L"e");
array3425 = (Object)new_Type_Array_with(2, (Object)localvariable4281, (Object)localvariable4282);
// ,
send30245 = (Object)new_AST_Send((Object)localvariable4281, (Object)SMB__concat, 1, (Object)localvariable4282);
block1960 = (Object)new_AST_Block_with((Type_Array)array3425, (Type_Array)empty_Type_Array, 2, 1, send30245);
// inject:into:
send30246 = (Object)new_AST_Send((Object)send30243, (Object)symbol5377, 2, (Object)send30244, (Object)block1960);
block1961 = (Object)new_AST_Block_with((Type_Array)array3424, (Type_Array)empty_Type_Array, 1, 1, send30246);
// named:parsing:semantics:
send30247 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5868, (Object)send30242, (Object)block1961);
method4259 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30247);
symbol5500 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure4259 = (Object)new_Runtime_MethodClosure(method4259);
store_method((Type_Class)class733, (Type_Symbol)symbol5500, (Runtime_MethodClosure)methodclosure4259);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string3487 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant5869 = (Object)new_AST_Constant((Object)string3487);
// unarySelector
send30248 = (Object)new_AST_Send((Object)Self, (Object)symbol5597, 0);
localvariable4283 = (Object)new_AST_Variable_named(L"selector");
array3426 = (Object)new_Type_Array_with(1, (Object)localvariable4283);
// new
send30249 = (Object)new_AST_Send((Object)classreference844, (Object)symbol5310, 0);
// selector:
send30250 = (Object)new_AST_Send((Object)send30249, (Object)symbol5404, 1, (Object)localvariable4283);
block1962 = (Object)new_AST_Block_with((Type_Array)array3426, (Type_Array)empty_Type_Array, 1, 1, send30250);
// named:parsing:semantics:
send30251 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5869, (Object)send30248, (Object)block1962);
method4260 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30251);
symbol5444 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure4260 = (Object)new_Runtime_MethodClosure(method4260);
store_method((Type_Class)class733, (Type_Symbol)symbol5444, (Runtime_MethodClosure)methodclosure4260);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send30252 = (Object)new_AST_Send((Object)Self, (Object)symbol5599, 0);
symbol5620 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send30253 = (Object)new_AST_Send((Object)Self, (Object)symbol5620, 0);
// binaryExpression
send30254 = (Object)new_AST_Send((Object)Self, (Object)symbol5619, 0);
// |
send30255 = (Object)new_AST_Send((Object)send30253, (Object)SMB__or, 1, (Object)send30254);
// <=
send30256 = (Object)new_AST_Send((Object)send30252, (Object)symbol5337, 1, (Object)send30255);
symbol5621 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send30257 = (Object)new_AST_Send((Object)Self, (Object)symbol5621, 0);
// <=
send30258 = (Object)new_AST_Send((Object)send30256, (Object)symbol5337, 1, (Object)send30257);
method4261 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30258);
methodclosure4261 = (Object)new_Runtime_MethodClosure(method4261);
store_method((Type_Class)class733, (Type_Symbol)symbol5472, (Runtime_MethodClosure)methodclosure4261);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string3488 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant5870 = (Object)new_AST_Constant((Object)string3488);
// binaryObjectDescription
send30259 = (Object)new_AST_Send((Object)Self, (Object)symbol5618, 0);
symbol5622 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send30260 = (Object)new_AST_Send((Object)Self, (Object)symbol5622, 0);
// &
send30261 = (Object)new_AST_Send((Object)send30259, (Object)SMB__and, 1, (Object)send30260);
localvariable4284 = (Object)new_AST_Variable_named(L"parts");
array3427 = (Object)new_Type_Array_with(1, (Object)localvariable4284);
smallint2047 = (Object)new_Type_SmallInt(2);
constant5871 = (Object)new_AST_Constant((Object)smallint2047);
// at:
send30262 = (Object)new_AST_Send((Object)localvariable4284, (Object)SMB_at_, 1, (Object)constant5871);
// first
send30263 = (Object)new_AST_Send((Object)localvariable4284, (Object)symbol5372, 0);
// receiver:
send30264 = (Object)new_AST_Send((Object)send30262, (Object)symbol5398, 1, (Object)send30263);
block1963 = (Object)new_AST_Block_with((Type_Array)array3427, (Type_Array)empty_Type_Array, 1, 1, send30264);
// named:parsing:semantics:
send30265 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5870, (Object)send30261, (Object)block1963);
method4262 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30265);
symbol5489 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure4262 = (Object)new_Runtime_MethodClosure(method4262);
store_method((Type_Class)class733, (Type_Symbol)symbol5489, (Runtime_MethodClosure)methodclosure4262);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string3489 = (Object)new_Type_String(L"(");
constant5872 = (Object)new_AST_Constant((Object)string3489);
// asPEG
send30266 = (Object)new_AST_Send((Object)constant5872, (Object)symbol5514, 0);
// omit:
send30267 = (Object)new_AST_Send((Object)send30266, (Object)symbol5518, 1, (Object)True_Const);
// expression
send30268 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
// &
send30269 = (Object)new_AST_Send((Object)send30267, (Object)SMB__and, 1, (Object)send30268);
string3490 = (Object)new_Type_String(L")");
constant5873 = (Object)new_AST_Constant((Object)string3490);
// asPEG
send30270 = (Object)new_AST_Send((Object)constant5873, (Object)symbol5514, 0);
// omit:
send30271 = (Object)new_AST_Send((Object)send30270, (Object)symbol5518, 1, (Object)True_Const);
// <&
send30272 = (Object)new_AST_Send((Object)send30269, (Object)symbol5550, 1, (Object)send30271);
method4263 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30272);
symbol5454 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure4263 = (Object)new_Runtime_MethodClosure(method4263);
store_method((Type_Class)class733, (Type_Symbol)symbol5454, (Runtime_MethodClosure)methodclosure4263);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string3491 = (Object)new_Type_String(L"0-9");
constant5874 = (Object)new_AST_Constant((Object)string3491);
symbol5623 = (Object)new_Type_Symbol_cached(L"asPEGRange");
// asPEGRange
send30273 = (Object)new_AST_Send((Object)constant5874, (Object)symbol5623, 0);
method4264 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30273);
symbol5482 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure4264 = (Object)new_Runtime_MethodClosure(method4264);
store_method((Type_Class)class733, (Type_Symbol)symbol5482, (Runtime_MethodClosure)methodclosure4264);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable4285 = (Object)new_AST_Variable_named(L"result");
array3428 = (Object)new_Type_Array_with(1, (Object)localvariable4285);
string3492 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant5875 = (Object)new_AST_Constant((Object)string3492);
// primary
send30274 = (Object)new_AST_Send((Object)Self, (Object)symbol5610, 0);
// unarySelector
send30275 = (Object)new_AST_Send((Object)Self, (Object)symbol5597, 0);
// plus
send30276 = (Object)new_AST_Send((Object)send30275, (Object)symbol5521, 0);
// &
send30277 = (Object)new_AST_Send((Object)send30274, (Object)SMB__and, 1, (Object)send30276);
localvariable4286 = (Object)new_AST_Variable_named(L"parts");
array3429 = (Object)new_Type_Array_with(1, (Object)localvariable4286);
// first
send30278 = (Object)new_AST_Send((Object)localvariable4286, (Object)symbol5372, 0);
assign3688 = (Object)new_AST_Assign((Object)localvariable4285, (Object)send30278);
smallint2048 = (Object)new_Type_SmallInt(2);
constant5876 = (Object)new_AST_Constant((Object)smallint2048);
// at:
send30279 = (Object)new_AST_Send((Object)localvariable4286, (Object)SMB_at_, 1, (Object)constant5876);
localvariable4287 = (Object)new_AST_Variable_named(L"selector");
array3430 = (Object)new_Type_Array_with(1, (Object)localvariable4287);
localvariable4288 = (Object)new_AST_Variable_named(L"receiver");
array3431 = (Object)new_Type_Array_with(1, (Object)localvariable4288);
// receiver:
send30280 = (Object)new_AST_Send((Object)localvariable4288, (Object)symbol5398, 1, (Object)localvariable4285);
// selector:
send30281 = (Object)new_AST_Send((Object)localvariable4288, (Object)symbol5404, 1, (Object)localvariable4287);
block1964 = (Object)new_AST_Block_with((Type_Array)array3431, (Type_Array)empty_Type_Array, 3, 2, send30280, send30281);
// new
send30282 = (Object)new_AST_Send((Object)classreference839, (Object)symbol5310, 0);
// value:
send30283 = (Object)new_AST_Send((Object)block1964, (Object)SMB_value_, 1, (Object)send30282);
assign3689 = (Object)new_AST_Assign((Object)localvariable4285, (Object)send30283);
block1965 = (Object)new_AST_Block_with((Type_Array)array3430, (Type_Array)empty_Type_Array, 2, 1, assign3689);
// do:
send30284 = (Object)new_AST_Send((Object)send30279, (Object)symbol5375, 1, (Object)block1965);
block1966 = (Object)new_AST_Block_with((Type_Array)array3429, (Type_Array)empty_Type_Array, 1, 3, assign3688, send30284, localvariable4285);
// named:parsing:semantics:
send30285 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5875, (Object)send30277, (Object)block1966);
method4265 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3428, 1, send30285);
symbol5466 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure4265 = (Object)new_Runtime_MethodClosure(method4265);
store_method((Type_Class)class733, (Type_Symbol)symbol5466, (Runtime_MethodClosure)methodclosure4265);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
// unaryExpression
send30286 = (Object)new_AST_Send((Object)Self, (Object)symbol5621, 0);
// primary
send30287 = (Object)new_AST_Send((Object)Self, (Object)symbol5610, 0);
// |
send30288 = (Object)new_AST_Send((Object)send30286, (Object)SMB__or, 1, (Object)send30287);
method4266 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30288);
symbol5494 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure4266 = (Object)new_Runtime_MethodClosure(method4266);
store_method((Type_Class)class733, (Type_Symbol)symbol5494, (Runtime_MethodClosure)methodclosure4266);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string3493 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant5877 = (Object)new_AST_Constant((Object)string3493);
symbol5624 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
// asPEGChoice
send30289 = (Object)new_AST_Send((Object)constant5877, (Object)symbol5624, 0);
method4267 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30289);
symbol5436 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure4267 = (Object)new_Runtime_MethodClosure(method4267);
store_method((Type_Class)class733, (Type_Symbol)symbol5436, (Runtime_MethodClosure)methodclosure4267);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string3494 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant5878 = (Object)new_AST_Constant((Object)string3494);
// identifier
send30290 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
string3495 = (Object)new_Type_String(L":");
constant5879 = (Object)new_AST_Constant((Object)string3495);
// asPEG
send30291 = (Object)new_AST_Send((Object)constant5879, (Object)symbol5514, 0);
// not
send30292 = (Object)new_AST_Send((Object)send30291, (Object)SMB_not, 0);
symbol5625 = (Object)new_Type_Symbol_cached(L"consume:");
// consume:
send30293 = (Object)new_AST_Send((Object)send30292, (Object)symbol5625, 1, (Object)False_Const);
// &&
send30294 = (Object)new_AST_Send((Object)send30290, (Object)symbol5510, 1, (Object)send30293);
localvariable4289 = (Object)new_AST_Variable_named(L"selector");
array3432 = (Object)new_Type_Array_with(1, (Object)localvariable4289);
// new
send30295 = (Object)new_AST_Send((Object)classreference831, (Object)symbol5310, 0);
// createSymbol:
send30296 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)localvariable4289);
// selector:
send30297 = (Object)new_AST_Send((Object)send30295, (Object)symbol5404, 1, (Object)send30296);
block1967 = (Object)new_AST_Block_with((Type_Array)array3432, (Type_Array)empty_Type_Array, 1, 1, send30297);
// named:parsing:semantics:
send30298 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5878, (Object)send30294, (Object)block1967);
method4268 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30298);
symbol5464 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure4268 = (Object)new_Runtime_MethodClosure(method4268);
store_method((Type_Class)class733, (Type_Symbol)symbol5464, (Runtime_MethodClosure)methodclosure4268);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string3496 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant5880 = (Object)new_AST_Constant((Object)string3496);
symbol5626 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send30299 = (Object)new_AST_Send((Object)Self, (Object)symbol5626, 0);
string3497 = (Object)new_Type_String(L"-");
constant5881 = (Object)new_AST_Constant((Object)string3497);
// |
send30300 = (Object)new_AST_Send((Object)send30299, (Object)SMB__or, 1, (Object)constant5881);
// specialCharacter
send30301 = (Object)new_AST_Send((Object)Self, (Object)symbol5626, 0);
// strongTimes
send30302 = (Object)new_AST_Send((Object)send30301, (Object)symbol5511, 0);
// &&
send30303 = (Object)new_AST_Send((Object)send30300, (Object)symbol5510, 1, (Object)send30302);
string3498 = (Object)new_Type_String(L"|");
constant5882 = (Object)new_AST_Constant((Object)string3498);
// |
send30304 = (Object)new_AST_Send((Object)send30303, (Object)SMB__or, 1, (Object)constant5882);
localvariable4290 = (Object)new_AST_Variable_named(L"result");
array3433 = (Object)new_Type_Array_with(1, (Object)localvariable4290);
// isString
send30305 = (Object)new_AST_Send((Object)localvariable4290, (Object)symbol5607, 0);
// createSymbol:
send30306 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)localvariable4290);
block1968 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send30306);
// second
send30307 = (Object)new_AST_Send((Object)localvariable4290, (Object)symbol5603, 0);
// first
send30308 = (Object)new_AST_Send((Object)localvariable4290, (Object)symbol5372, 0);
localvariable4291 = (Object)new_AST_Variable_named(L"c");
localvariable4292 = (Object)new_AST_Variable_named(L"e");
array3434 = (Object)new_Type_Array_with(2, (Object)localvariable4291, (Object)localvariable4292);
// ,
send30309 = (Object)new_AST_Send((Object)localvariable4291, (Object)SMB__concat, 1, (Object)localvariable4292);
block1969 = (Object)new_AST_Block_with((Type_Array)array3434, (Type_Array)empty_Type_Array, 3, 1, send30309);
// inject:into:
send30310 = (Object)new_AST_Send((Object)send30307, (Object)symbol5377, 2, (Object)send30308, (Object)block1969);
// createSymbol:
send30311 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)send30310);
block1970 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send30311);
// ifTrue:ifFalse:
send30312 = (Object)new_AST_Send((Object)send30305, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1968, (Object)block1970);
block1971 = (Object)new_AST_Block_with((Type_Array)array3433, (Type_Array)empty_Type_Array, 1, 1, send30312);
// named:parsing:semantics:
send30313 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5880, (Object)send30304, (Object)block1971);
method4269 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30313);
symbol5448 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure4269 = (Object)new_Runtime_MethodClosure(method4269);
store_method((Type_Class)class733, (Type_Symbol)symbol5448, (Runtime_MethodClosure)methodclosure4269);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant5883 = (Object)new_AST_Constant((Object)symbol5610);
string3499 = (Object)new_Type_String(L"PRIMARY");
constant5884 = (Object)new_AST_Constant((Object)string3499);
// named:
send30314 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5534, 1, (Object)constant5884);
block1972 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send30314);
// at:ifAbsentPut:
send30315 = (Object)new_AST_Send((Object)instancevariable1059, (Object)symbol5542, 2, (Object)constant5883, (Object)block1972);
method4270 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30315);
methodclosure4270 = (Object)new_Runtime_MethodClosure(method4270);
store_method((Type_Class)class733, (Type_Symbol)symbol5476, (Runtime_MethodClosure)methodclosure4270);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable4293 = (Object)new_AST_Variable_named(L"result");
array3435 = (Object)new_Type_Array_with(1, (Object)localvariable4293);
string3500 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant5885 = (Object)new_AST_Constant((Object)string3500);
// keyword
send30316 = (Object)new_AST_Send((Object)Self, (Object)symbol5614, 0);
symbol5627 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send30317 = (Object)new_AST_Send((Object)Self, (Object)symbol5627, 0);
// &
send30318 = (Object)new_AST_Send((Object)send30316, (Object)SMB__and, 1, (Object)send30317);
// plus
send30319 = (Object)new_AST_Send((Object)send30318, (Object)symbol5521, 0);
localvariable4294 = (Object)new_AST_Variable_named(L"pairs");
array3436 = (Object)new_Type_Array_with(1, (Object)localvariable4294);
// new
send30320 = (Object)new_AST_Send((Object)classreference812, (Object)symbol5310, 0);
assign3690 = (Object)new_AST_Assign((Object)localvariable4293, (Object)send30320);
localvariable4295 = (Object)new_AST_Variable_named(L"pair");
array3437 = (Object)new_Type_Array_with(1, (Object)localvariable4295);
// keywords
send30321 = (Object)new_AST_Send((Object)localvariable4293, (Object)symbol5410, 0);
// first
send30322 = (Object)new_AST_Send((Object)localvariable4295, (Object)symbol5372, 0);
// add:
send30323 = (Object)new_AST_Send((Object)send30321, (Object)symbol5376, 1, (Object)send30322);
// parameters
send30324 = (Object)new_AST_Send((Object)localvariable4293, (Object)symbol5405, 0);
smallint2049 = (Object)new_Type_SmallInt(2);
constant5886 = (Object)new_AST_Constant((Object)smallint2049);
// at:
send30325 = (Object)new_AST_Send((Object)localvariable4295, (Object)SMB_at_, 1, (Object)constant5886);
// createVariable:
send30326 = (Object)new_AST_Send((Object)Self, (Object)symbol5440, 1, (Object)send30325);
// add:
send30327 = (Object)new_AST_Send((Object)send30324, (Object)symbol5376, 1, (Object)send30326);
block1973 = (Object)new_AST_Block_with((Type_Array)array3437, (Type_Array)empty_Type_Array, 2, 2, send30323, send30327);
// do:
send30328 = (Object)new_AST_Send((Object)localvariable4294, (Object)symbol5375, 1, (Object)block1973);
// selectorName
send30329 = (Object)new_AST_Send((Object)localvariable4293, (Object)symbol5403, 0);
// named:
send30330 = (Object)new_AST_Send((Object)classreference830, (Object)symbol5534, 1, (Object)send30329);
// selector:
send30331 = (Object)new_AST_Send((Object)localvariable4293, (Object)symbol5404, 1, (Object)send30330);
block1974 = (Object)new_AST_Block_with((Type_Array)array3436, (Type_Array)empty_Type_Array, 1, 4, assign3690, send30328, send30331, localvariable4293);
// named:parsing:semantics:
send30332 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5885, (Object)send30319, (Object)block1974);
method4271 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3435, 1, send30332);
symbol5458 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure4271 = (Object)new_Runtime_MethodClosure(method4271);
store_method((Type_Class)class733, (Type_Symbol)symbol5458, (Runtime_MethodClosure)methodclosure4271);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
//             ifFalse: [ super doesNotUnderstand: message ].
//         self perform: selector
// 	]
localvariable4296 = (Object)new_AST_Variable_named(L"message");
array3438 = (Object)new_Type_Array_with(1, (Object)localvariable4296);
localvariable4297 = (Object)new_AST_Variable_named(L"selector");
array3439 = (Object)new_Type_Array_with(1, (Object)localvariable4297);
// selector
send30333 = (Object)new_AST_Send((Object)localvariable4296, (Object)symbol5324, 0);
string3501 = (Object)new_Type_String(L"initialize");
constant5887 = (Object)new_AST_Constant((Object)string3501);
// selector
send30334 = (Object)new_AST_Send((Object)localvariable4296, (Object)symbol5324, 0);
// capitalized
send30335 = (Object)new_AST_Send((Object)send30334, (Object)symbol5334, 0);
// ,
send30336 = (Object)new_AST_Send((Object)constant5887, (Object)SMB__concat, 1, (Object)send30335);
// asSymbol
send30337 = (Object)new_AST_Send((Object)send30336, (Object)SMB_asSymbol, 0);
assign3691 = (Object)new_AST_Assign((Object)localvariable4297, (Object)send30337);
// respondsTo:
send30338 = (Object)new_AST_Send((Object)Self, (Object)symbol5219, 1, (Object)localvariable4297);
super368 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable4296);
block1975 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super368);
// ifFalse:
send30339 = (Object)new_AST_Send((Object)send30338, (Object)SMB_ifFalse_, 1, (Object)block1975);
symbol5628 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send30340 = (Object)new_AST_Send((Object)Self, (Object)symbol5628, 1, (Object)localvariable4297);
block1976 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, assign3691, send30339, send30340);
// at:ifAbsentPut:
send30341 = (Object)new_AST_Send((Object)instancevariable1059, (Object)symbol5542, 2, (Object)send30333, (Object)block1976);
method4272 = (Object)new_AST_Method_with((Type_Array)array3438, (Type_Array)array3439, 1, send30341);
methodclosure4272 = (Object)new_Runtime_MethodClosure(method4272);
store_method((Type_Class)class733, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4272);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol5629 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send30342 = (Object)new_AST_Send((Object)Self, (Object)symbol5629, 0);
// uppercase
send30343 = (Object)new_AST_Send((Object)Self, (Object)symbol5600, 0);
// |
send30344 = (Object)new_AST_Send((Object)send30342, (Object)SMB__or, 1, (Object)send30343);
method4273 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30344);
symbol5486 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure4273 = (Object)new_Runtime_MethodClosure(method4273);
store_method((Type_Class)class733, (Type_Symbol)symbol5486, (Runtime_MethodClosure)methodclosure4273);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
string3502 = (Object)new_Type_String(L"COMMENT");
constant5888 = (Object)new_AST_Constant((Object)string3502);
symbol5630 = (Object)new_Type_Symbol_cached(L"separators");
// separators
send30345 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5630, 0);
symbol5631 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send30346 = (Object)new_AST_Send((Object)Self, (Object)symbol5631, 0);
// |
send30347 = (Object)new_AST_Send((Object)send30345, (Object)SMB__or, 1, (Object)send30346);
// strongTimes
send30348 = (Object)new_AST_Send((Object)send30347, (Object)symbol5511, 0);
// omit:
send30349 = (Object)new_AST_Send((Object)send30348, (Object)symbol5518, 1, (Object)True_Const);
// named:parsing:
send30350 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5604, 2, (Object)constant5888, (Object)send30349);
method4274 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30350);
symbol5498 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure4274 = (Object)new_Runtime_MethodClosure(method4274);
store_method((Type_Class)class733, (Type_Symbol)symbol5498, (Runtime_MethodClosure)methodclosure4274);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string3503 = (Object)new_Type_String(L"SYMBOL");
constant5889 = (Object)new_AST_Constant((Object)string3503);
symbol5632 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send30351 = (Object)new_AST_Send((Object)Self, (Object)symbol5632, 0);
// identifier
send30352 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
// binarySelector
send30353 = (Object)new_AST_Send((Object)Self, (Object)symbol5612, 0);
// <=
send30354 = (Object)new_AST_Send((Object)send30352, (Object)symbol5337, 1, (Object)send30353);
// |
send30355 = (Object)new_AST_Send((Object)send30351, (Object)SMB__or, 1, (Object)send30354);
// string
send30356 = (Object)new_AST_Send((Object)Self, (Object)symbol5389, 0);
// <=
send30357 = (Object)new_AST_Send((Object)send30355, (Object)symbol5337, 1, (Object)send30356);
// named:parsing:
send30358 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5604, 2, (Object)constant5889, (Object)send30357);
method4275 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30358);
symbol5451 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure4275 = (Object)new_Runtime_MethodClosure(method4275);
store_method((Type_Class)class733, (Type_Symbol)symbol5451, (Runtime_MethodClosure)methodclosure4275);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send30359 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
string3504 = (Object)new_Type_String(L":");
constant5890 = (Object)new_AST_Constant((Object)string3504);
// asPEG
send30360 = (Object)new_AST_Send((Object)constant5890, (Object)symbol5514, 0);
// omit:
send30361 = (Object)new_AST_Send((Object)send30360, (Object)symbol5518, 1, (Object)True_Const);
// &&
send30362 = (Object)new_AST_Send((Object)send30359, (Object)symbol5510, 1, (Object)send30361);
method4276 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30362);
symbol5491 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure4276 = (Object)new_Runtime_MethodClosure(method4276);
store_method((Type_Class)class733, (Type_Symbol)symbol5491, (Runtime_MethodClosure)methodclosure4276);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send30363 = (Object)new_AST_Send((Object)Self, (Object)symbol5618, 0);
// binaryExpression
send30364 = (Object)new_AST_Send((Object)Self, (Object)symbol5619, 0);
// <=
send30365 = (Object)new_AST_Send((Object)send30363, (Object)symbol5337, 1, (Object)send30364);
// unaryObjectDescription
send30366 = (Object)new_AST_Send((Object)Self, (Object)symbol5613, 0);
// |
send30367 = (Object)new_AST_Send((Object)send30365, (Object)SMB__or, 1, (Object)send30366);
method4277 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30367);
methodclosure4277 = (Object)new_Runtime_MethodClosure(method4277);
store_method((Type_Class)class733, (Type_Symbol)symbol5433, (Runtime_MethodClosure)methodclosure4277);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
string3505 = (Object)new_Type_String(L"BLOCK");
constant5891 = (Object)new_AST_Constant((Object)string3505);
string3506 = (Object)new_Type_String(L"[");
constant5892 = (Object)new_AST_Constant((Object)string3506);
// asPEG
send30368 = (Object)new_AST_Send((Object)constant5892, (Object)symbol5514, 0);
// omit:
send30369 = (Object)new_AST_Send((Object)send30368, (Object)symbol5518, 1, (Object)True_Const);
symbol5633 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send30370 = (Object)new_AST_Send((Object)Self, (Object)symbol5633, 0);
// bar
send30371 = (Object)new_AST_Send((Object)Self, (Object)symbol5605, 0);
// &
send30372 = (Object)new_AST_Send((Object)send30370, (Object)SMB__and, 1, (Object)send30371);
// optional
send30373 = (Object)new_AST_Send((Object)send30372, (Object)symbol5513, 0);
// temporaries
send30374 = (Object)new_AST_Send((Object)Self, (Object)symbol5419, 0);
// optional
send30375 = (Object)new_AST_Send((Object)send30374, (Object)symbol5513, 0);
// statements
send30376 = (Object)new_AST_Send((Object)Self, (Object)symbol5415, 0);
// <&
send30377 = (Object)new_AST_Send((Object)send30375, (Object)symbol5550, 1, (Object)send30376);
// <&
send30378 = (Object)new_AST_Send((Object)send30373, (Object)symbol5550, 1, (Object)send30377);
// &
send30379 = (Object)new_AST_Send((Object)send30369, (Object)SMB__and, 1, (Object)send30378);
string3507 = (Object)new_Type_String(L"]");
constant5893 = (Object)new_AST_Constant((Object)string3507);
// asPEG
send30380 = (Object)new_AST_Send((Object)constant5893, (Object)symbol5514, 0);
// omit:
send30381 = (Object)new_AST_Send((Object)send30380, (Object)symbol5518, 1, (Object)True_Const);
// <&
send30382 = (Object)new_AST_Send((Object)send30379, (Object)symbol5550, 1, (Object)send30381);
localvariable4298 = (Object)new_AST_Variable_named(L"result");
array3440 = (Object)new_Type_Array_with(1, (Object)localvariable4298);
localvariable4299 = (Object)new_AST_Variable_named(L"receiver");
array3441 = (Object)new_Type_Array_with(1, (Object)localvariable4299);
// first
send30383 = (Object)new_AST_Send((Object)localvariable4298, (Object)symbol5372, 0);
// new
send30384 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
block1977 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send30384);
// resultIfFailed:
send30385 = (Object)new_AST_Send((Object)send30383, (Object)symbol5552, 1, (Object)block1977);
// parameters:
send30386 = (Object)new_AST_Send((Object)localvariable4299, (Object)symbol5424, 1, (Object)send30385);
smallint2050 = (Object)new_Type_SmallInt(2);
constant5894 = (Object)new_AST_Constant((Object)smallint2050);
// at:
send30387 = (Object)new_AST_Send((Object)localvariable4298, (Object)SMB_at_, 1, (Object)constant5894);
// new
send30388 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
block1978 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send30388);
// resultIfFailed:
send30389 = (Object)new_AST_Send((Object)send30387, (Object)symbol5552, 1, (Object)block1978);
// temporaries:
send30390 = (Object)new_AST_Send((Object)localvariable4299, (Object)symbol5420, 1, (Object)send30389);
smallint2051 = (Object)new_Type_SmallInt(3);
constant5895 = (Object)new_AST_Constant((Object)smallint2051);
// at:
send30391 = (Object)new_AST_Send((Object)localvariable4298, (Object)SMB_at_, 1, (Object)constant5895);
// statements:
send30392 = (Object)new_AST_Send((Object)localvariable4299, (Object)symbol5417, 1, (Object)send30391);
block1979 = (Object)new_AST_Block_with((Type_Array)array3441, (Type_Array)empty_Type_Array, 2, 3, send30386, send30390, send30392);
// new
send30393 = (Object)new_AST_Send((Object)classreference814, (Object)symbol5310, 0);
// value:
send30394 = (Object)new_AST_Send((Object)block1979, (Object)SMB_value_, 1, (Object)send30393);
block1980 = (Object)new_AST_Block_with((Type_Array)array3440, (Type_Array)empty_Type_Array, 1, 1, send30394);
// named:parsing:semantics:
send30395 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5891, (Object)send30382, (Object)block1980);
method4278 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30395);
symbol5461 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure4278 = (Object)new_Runtime_MethodClosure(method4278);
store_method((Type_Class)class733, (Type_Symbol)symbol5461, (Runtime_MethodClosure)methodclosure4278);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string3508 = (Object)new_Type_String(L"#");
constant5896 = (Object)new_AST_Constant((Object)string3508);
// asPEG
send30396 = (Object)new_AST_Send((Object)constant5896, (Object)symbol5514, 0);
// omit:
send30397 = (Object)new_AST_Send((Object)send30396, (Object)symbol5518, 1, (Object)True_Const);
symbol5634 = (Object)new_Type_Symbol_cached(L"array");
// array
send30398 = (Object)new_AST_Send((Object)Self, (Object)symbol5634, 0);
// &
send30399 = (Object)new_AST_Send((Object)send30397, (Object)SMB__and, 1, (Object)send30398);
method4279 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30399);
symbol5501 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure4279 = (Object)new_Runtime_MethodClosure(method4279);
store_method((Type_Class)class733, (Type_Symbol)symbol5501, (Runtime_MethodClosure)methodclosure4279);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable4300 = (Object)new_AST_Variable_named(L"array");
array3442 = (Object)new_Type_Array_with(1, (Object)localvariable4300);
string3509 = (Object)new_Type_String(L"ARRAY");
constant5897 = (Object)new_AST_Constant((Object)string3509);
// named:
send30400 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5534, 1, (Object)constant5897);
assign3692 = (Object)new_AST_Assign((Object)localvariable4300, (Object)send30400);
string3510 = (Object)new_Type_String(L"(");
constant5898 = (Object)new_AST_Constant((Object)string3510);
// asPEG
send30401 = (Object)new_AST_Send((Object)constant5898, (Object)symbol5514, 0);
// omit:
send30402 = (Object)new_AST_Send((Object)send30401, (Object)symbol5518, 1, (Object)True_Const);
symbol5635 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send30403 = (Object)new_AST_Send((Object)Self, (Object)symbol5635, 0);
symbol5636 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send30404 = (Object)new_AST_Send((Object)Self, (Object)symbol5636, 0);
symbol5637 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send30405 = (Object)new_AST_Send((Object)Self, (Object)symbol5637, 0);
symbol5638 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send30406 = (Object)new_AST_Send((Object)Self, (Object)symbol5638, 0);
symbol5639 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send30407 = (Object)new_AST_Send((Object)Self, (Object)symbol5639, 0);
// <=
send30408 = (Object)new_AST_Send((Object)send30406, (Object)symbol5337, 1, (Object)send30407);
// <=
send30409 = (Object)new_AST_Send((Object)send30405, (Object)symbol5337, 1, (Object)send30408);
// <=
send30410 = (Object)new_AST_Send((Object)send30404, (Object)symbol5337, 1, (Object)send30409);
// |
send30411 = (Object)new_AST_Send((Object)send30403, (Object)SMB__or, 1, (Object)send30410);
// <=
send30412 = (Object)new_AST_Send((Object)send30411, (Object)symbol5337, 1, (Object)localvariable4300);
// times
send30413 = (Object)new_AST_Send((Object)send30412, (Object)symbol5509, 0);
// &
send30414 = (Object)new_AST_Send((Object)send30402, (Object)SMB__and, 1, (Object)send30413);
// <=
send30415 = (Object)new_AST_Send((Object)localvariable4300, (Object)symbol5337, 1, (Object)send30414);
string3511 = (Object)new_Type_String(L")");
constant5899 = (Object)new_AST_Constant((Object)string3511);
// asPEG
send30416 = (Object)new_AST_Send((Object)constant5899, (Object)symbol5514, 0);
// omit:
send30417 = (Object)new_AST_Send((Object)send30416, (Object)symbol5518, 1, (Object)True_Const);
// <&
send30418 = (Object)new_AST_Send((Object)send30415, (Object)symbol5550, 1, (Object)send30417);
localvariable4301 = (Object)new_AST_Variable_named(L"result");
array3443 = (Object)new_Type_Array_with(1, (Object)localvariable4301);
// new
send30419 = (Object)new_AST_Send((Object)classreference811, (Object)symbol5310, 0);
// literals:
send30420 = (Object)new_AST_Send((Object)send30419, (Object)symbol5363, 1, (Object)localvariable4301);
block1981 = (Object)new_AST_Block_with((Type_Array)array3443, (Type_Array)empty_Type_Array, 1, 1, send30420);
// semantics:
send30421 = (Object)new_AST_Send((Object)localvariable4300, (Object)symbol5527, 1, (Object)block1981);
method4280 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3442, 4, assign3692, send30418, send30421, localvariable4300);
symbol5445 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure4280 = (Object)new_Runtime_MethodClosure(method4280);
store_method((Type_Class)class733, (Type_Symbol)symbol5445, (Runtime_MethodClosure)methodclosure4280);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
string3512 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant5900 = (Object)new_AST_Constant((Object)string3512);
// identifier
send30422 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
localvariable4302 = (Object)new_AST_Variable_named(L"result");
array3444 = (Object)new_Type_Array_with(1, (Object)localvariable4302);
// createVariable:
send30423 = (Object)new_AST_Send((Object)Self, (Object)symbol5440, 1, (Object)localvariable4302);
block1982 = (Object)new_AST_Block_with((Type_Array)array3444, (Type_Array)empty_Type_Array, 1, 1, send30423);
// named:parsing:semantics:
send30424 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5900, (Object)send30422, (Object)block1982);
method4281 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30424);
symbol5473 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure4281 = (Object)new_Runtime_MethodClosure(method4281);
store_method((Type_Class)class733, (Type_Symbol)symbol5473, (Runtime_MethodClosure)methodclosure4281);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
string3513 = (Object)new_Type_String(L"STATEMENTS");
constant5901 = (Object)new_AST_Constant((Object)string3513);
// subExpression
send30425 = (Object)new_AST_Send((Object)Self, (Object)symbol5598, 0);
// times
send30426 = (Object)new_AST_Send((Object)send30425, (Object)symbol5509, 0);
symbol5640 = (Object)new_Type_Symbol_cached(L"return");
// return
send30427 = (Object)new_AST_Send((Object)Self, (Object)symbol5640, 0);
symbol5641 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send30428 = (Object)new_AST_Send((Object)Self, (Object)symbol5641, 0);
// |
send30429 = (Object)new_AST_Send((Object)send30427, (Object)SMB__or, 1, (Object)send30428);
// optional
send30430 = (Object)new_AST_Send((Object)send30429, (Object)symbol5513, 0);
// &
send30431 = (Object)new_AST_Send((Object)send30426, (Object)SMB__and, 1, (Object)send30430);
localvariable4303 = (Object)new_AST_Variable_named(L"result");
array3445 = (Object)new_Type_Array_with(1, (Object)localvariable4303);
smallint2052 = (Object)new_Type_SmallInt(2);
constant5902 = (Object)new_AST_Constant((Object)smallint2052);
// at:
send30432 = (Object)new_AST_Send((Object)localvariable4303, (Object)SMB_at_, 1, (Object)constant5902);
localvariable4304 = (Object)new_AST_Variable_named(L"exp");
array3446 = (Object)new_Type_Array_with(1, (Object)localvariable4304);
// first
send30433 = (Object)new_AST_Send((Object)localvariable4303, (Object)symbol5372, 0);
// add:
send30434 = (Object)new_AST_Send((Object)send30433, (Object)symbol5376, 1, (Object)localvariable4304);
block1983 = (Object)new_AST_Block_with((Type_Array)array3446, (Type_Array)empty_Type_Array, 2, 1, send30434);
// ifMatched:
send30435 = (Object)new_AST_Send((Object)send30432, (Object)symbol5553, 1, (Object)block1983);
// first
send30436 = (Object)new_AST_Send((Object)localvariable4303, (Object)symbol5372, 0);
block1984 = (Object)new_AST_Block_with((Type_Array)array3445, (Type_Array)empty_Type_Array, 1, 2, send30435, send30436);
// named:parsing:semantics:
send30437 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5901, (Object)send30431, (Object)block1984);
method4282 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30437);
symbol5455 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure4282 = (Object)new_Runtime_MethodClosure(method4282);
store_method((Type_Class)class733, (Type_Symbol)symbol5455, (Runtime_MethodClosure)methodclosure4282);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string3514 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant5903 = (Object)new_AST_Constant((Object)string3514);
// asPEGChoice
send30438 = (Object)new_AST_Send((Object)constant5903, (Object)symbol5624, 0);
// separators
send30439 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5630, 0);
// decimalDigit
send30440 = (Object)new_AST_Send((Object)Self, (Object)symbol5602, 0);
// letter
send30441 = (Object)new_AST_Send((Object)Self, (Object)symbol5601, 0);
// <=
send30442 = (Object)new_AST_Send((Object)send30440, (Object)symbol5337, 1, (Object)send30441);
// <=
send30443 = (Object)new_AST_Send((Object)send30439, (Object)symbol5337, 1, (Object)send30442);
// |
send30444 = (Object)new_AST_Send((Object)send30438, (Object)SMB__or, 1, (Object)send30443);
// specialCharacter
send30445 = (Object)new_AST_Send((Object)Self, (Object)symbol5626, 0);
// <=
send30446 = (Object)new_AST_Send((Object)send30444, (Object)symbol5337, 1, (Object)send30445);
method4283 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30446);
symbol5483 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure4283 = (Object)new_Runtime_MethodClosure(method4283);
store_method((Type_Class)class733, (Type_Symbol)symbol5483, (Runtime_MethodClosure)methodclosure4283);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string3515 = (Object)new_Type_String(L"|");
constant5904 = (Object)new_AST_Constant((Object)string3515);
// asPEG
send30447 = (Object)new_AST_Send((Object)constant5904, (Object)symbol5514, 0);
// omit:
send30448 = (Object)new_AST_Send((Object)send30447, (Object)symbol5518, 1, (Object)True_Const);
method4284 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30448);
symbol5467 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure4284 = (Object)new_Runtime_MethodClosure(method4284);
store_method((Type_Class)class733, (Type_Symbol)symbol5467, (Runtime_MethodClosure)methodclosure4284);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send30449 = (Object)new_AST_Send((Object)Self, (Object)symbol5619, 0);
// binaryObjectDescription
send30450 = (Object)new_AST_Send((Object)Self, (Object)symbol5618, 0);
method4285 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send30449, send30450);
symbol5495 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure4285 = (Object)new_Runtime_MethodClosure(method4285);
store_method((Type_Class)class733, (Type_Symbol)symbol5495, (Runtime_MethodClosure)methodclosure4285);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string3516 = (Object)new_Type_String(L"a-z");
constant5905 = (Object)new_AST_Constant((Object)string3516);
// asPEGRange
send30451 = (Object)new_AST_Send((Object)constant5905, (Object)symbol5623, 0);
method4286 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30451);
symbol5437 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure4286 = (Object)new_Runtime_MethodClosure(method4286);
store_method((Type_Class)class733, (Type_Symbol)symbol5437, (Runtime_MethodClosure)methodclosure4286);


// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string3517 = (Object)new_Type_String(L"A-Z");
constant5906 = (Object)new_AST_Constant((Object)string3517);
// asPEGRange
send30452 = (Object)new_AST_Send((Object)constant5906, (Object)symbol5623, 0);
method4287 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30452);
symbol5449 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure4287 = (Object)new_Runtime_MethodClosure(method4287);
store_method((Type_Class)class733, (Type_Symbol)symbol5449, (Runtime_MethodClosure)methodclosure4287);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send30453 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
string3518 = (Object)new_Type_String(L".");
constant5907 = (Object)new_AST_Constant((Object)string3518);
// asPEG
send30454 = (Object)new_AST_Send((Object)constant5907, (Object)symbol5514, 0);
// omit:
send30455 = (Object)new_AST_Send((Object)send30454, (Object)symbol5518, 1, (Object)True_Const);
// &
send30456 = (Object)new_AST_Send((Object)send30453, (Object)SMB__and, 1, (Object)send30455);
method4288 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30456);
symbol5477 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure4288 = (Object)new_Runtime_MethodClosure(method4288);
store_method((Type_Class)class733, (Type_Symbol)symbol5477, (Runtime_MethodClosure)methodclosure4288);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send30457 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
// cascadedMessageExpression
send30458 = (Object)new_AST_Send((Object)Self, (Object)symbol5609, 0);
method4289 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send30457, send30458);
symbol5430 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure4289 = (Object)new_Runtime_MethodClosure(method4289);
store_method((Type_Class)class733, (Type_Symbol)symbol5430, (Runtime_MethodClosure)methodclosure4289);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string3519 = (Object)new_Type_String(L"STRING-CONSTANT");
constant5908 = (Object)new_AST_Constant((Object)string3519);
// string
send30459 = (Object)new_AST_Send((Object)Self, (Object)symbol5389, 0);
localvariable4305 = (Object)new_AST_Variable_named(L"result");
array3447 = (Object)new_Type_Array_with(1, (Object)localvariable4305);
// new
send30460 = (Object)new_AST_Send((Object)classreference834, (Object)symbol5310, 0);
// string:
send30461 = (Object)new_AST_Send((Object)send30460, (Object)symbol5388, 1, (Object)localvariable4305);
block1985 = (Object)new_AST_Block_with((Type_Array)array3447, (Type_Array)empty_Type_Array, 1, 1, send30461);
// named:parsing:semantics:
send30462 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5908, (Object)send30459, (Object)block1985);
method4290 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30462);
symbol5442 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure4290 = (Object)new_Runtime_MethodClosure(method4290);
store_method((Type_Class)class733, (Type_Symbol)symbol5442, (Runtime_MethodClosure)methodclosure4290);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
string3520 = (Object)new_Type_String(L"ANNOTATION");
constant5909 = (Object)new_AST_Constant((Object)string3520);
string3521 = (Object)new_Type_String(L"<");
constant5910 = (Object)new_AST_Constant((Object)string3521);
// asPEG
send30463 = (Object)new_AST_Send((Object)constant5910, (Object)symbol5514, 0);
// omit:
send30464 = (Object)new_AST_Send((Object)send30463, (Object)symbol5518, 1, (Object)True_Const);
symbol5642 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send30465 = (Object)new_AST_Send((Object)Self, (Object)symbol5642, 0);
symbol5643 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send30466 = (Object)new_AST_Send((Object)Self, (Object)symbol5643, 0);
// |
send30467 = (Object)new_AST_Send((Object)send30465, (Object)SMB__or, 1, (Object)send30466);
// &
send30468 = (Object)new_AST_Send((Object)send30464, (Object)SMB__and, 1, (Object)send30467);
string3522 = (Object)new_Type_String(L">");
constant5911 = (Object)new_AST_Constant((Object)string3522);
// asPEG
send30469 = (Object)new_AST_Send((Object)constant5911, (Object)symbol5514, 0);
// omit:
send30470 = (Object)new_AST_Send((Object)send30469, (Object)symbol5518, 1, (Object)True_Const);
// <&
send30471 = (Object)new_AST_Send((Object)send30468, (Object)symbol5550, 1, (Object)send30470);
// named:parsing:
send30472 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5604, 2, (Object)constant5909, (Object)send30471);
method4291 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30472);
symbol5470 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure4291 = (Object)new_Runtime_MethodClosure(method4291);
store_method((Type_Class)class733, (Type_Symbol)symbol5470, (Runtime_MethodClosure)methodclosure4291);


// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string3523 = (Object)new_Type_String(L"RETURN");
constant5912 = (Object)new_AST_Constant((Object)string3523);
string3524 = (Object)new_Type_String(L"^");
constant5913 = (Object)new_AST_Constant((Object)string3524);
// asPEG
send30473 = (Object)new_AST_Send((Object)constant5913, (Object)symbol5514, 0);
// omit:
send30474 = (Object)new_AST_Send((Object)send30473, (Object)symbol5518, 1, (Object)True_Const);
// finalExpression
send30475 = (Object)new_AST_Send((Object)Self, (Object)symbol5641, 0);
// &
send30476 = (Object)new_AST_Send((Object)send30474, (Object)SMB__and, 1, (Object)send30475);
localvariable4306 = (Object)new_AST_Variable_named(L"expression");
array3448 = (Object)new_Type_Array_with(1, (Object)localvariable4306);
// new
send30477 = (Object)new_AST_Send((Object)classreference819, (Object)symbol5310, 0);
// expression:
send30478 = (Object)new_AST_Send((Object)send30477, (Object)symbol5426, 1, (Object)localvariable4306);
block1986 = (Object)new_AST_Block_with((Type_Array)array3448, (Type_Array)empty_Type_Array, 1, 1, send30478);
// named:parsing:semantics:
send30479 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5912, (Object)send30476, (Object)block1986);
method4292 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30479);
symbol5459 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure4292 = (Object)new_Runtime_MethodClosure(method4292);
store_method((Type_Class)class733, (Type_Symbol)symbol5459, (Runtime_MethodClosure)methodclosure4292);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string3525 = (Object)new_Type_String(L"METHOD");
constant5914 = (Object)new_AST_Constant((Object)string3525);
symbol5644 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send30480 = (Object)new_AST_Send((Object)Self, (Object)symbol5644, 0);
// temporaries
send30481 = (Object)new_AST_Send((Object)Self, (Object)symbol5419, 0);
// optional
send30482 = (Object)new_AST_Send((Object)send30481, (Object)symbol5513, 0);
symbol5645 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send30483 = (Object)new_AST_Send((Object)Self, (Object)symbol5645, 0);
// times
send30484 = (Object)new_AST_Send((Object)send30483, (Object)symbol5509, 0);
// statements
send30485 = (Object)new_AST_Send((Object)Self, (Object)symbol5415, 0);
// <&
send30486 = (Object)new_AST_Send((Object)send30484, (Object)symbol5550, 1, (Object)send30485);
// <&
send30487 = (Object)new_AST_Send((Object)send30482, (Object)symbol5550, 1, (Object)send30486);
// &
send30488 = (Object)new_AST_Send((Object)send30480, (Object)SMB__and, 1, (Object)send30487);
// separator
send30489 = (Object)new_AST_Send((Object)Self, (Object)symbol5578, 0);
// <&
send30490 = (Object)new_AST_Send((Object)send30488, (Object)symbol5550, 1, (Object)send30489);
localvariable4307 = (Object)new_AST_Variable_named(L"parts");
array3449 = (Object)new_Type_Array_with(1, (Object)localvariable4307);
localvariable4308 = (Object)new_AST_Variable_named(L"receiver");
array3450 = (Object)new_Type_Array_with(1, (Object)localvariable4308);
// first
send30491 = (Object)new_AST_Send((Object)localvariable4307, (Object)symbol5372, 0);
// message:
send30492 = (Object)new_AST_Send((Object)localvariable4308, (Object)symbol5413, 1, (Object)send30491);
smallint2053 = (Object)new_Type_SmallInt(2);
constant5915 = (Object)new_AST_Constant((Object)smallint2053);
// at:
send30493 = (Object)new_AST_Send((Object)localvariable4307, (Object)SMB_at_, 1, (Object)constant5915);
// new
send30494 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5310, 0);
block1987 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send30494);
// resultIfFailed:
send30495 = (Object)new_AST_Send((Object)send30493, (Object)symbol5552, 1, (Object)block1987);
// temporaries:
send30496 = (Object)new_AST_Send((Object)localvariable4308, (Object)symbol5420, 1, (Object)send30495);
smallint2054 = (Object)new_Type_SmallInt(3);
constant5916 = (Object)new_AST_Constant((Object)smallint2054);
// at:
send30497 = (Object)new_AST_Send((Object)localvariable4307, (Object)SMB_at_, 1, (Object)constant5916);
// annotations:
send30498 = (Object)new_AST_Send((Object)localvariable4308, (Object)symbol5421, 1, (Object)send30497);
smallint2055 = (Object)new_Type_SmallInt(4);
constant5917 = (Object)new_AST_Constant((Object)smallint2055);
// at:
send30499 = (Object)new_AST_Send((Object)localvariable4307, (Object)SMB_at_, 1, (Object)constant5917);
// statements:
send30500 = (Object)new_AST_Send((Object)localvariable4308, (Object)symbol5417, 1, (Object)send30499);
// yourself
send30501 = (Object)new_AST_Send((Object)localvariable4308, (Object)symbol5216, 0);
block1988 = (Object)new_AST_Block_with((Type_Array)array3450, (Type_Array)empty_Type_Array, 2, 5, send30492, send30496, send30498, send30500, send30501);
// new
send30502 = (Object)new_AST_Send((Object)classreference842, (Object)symbol5310, 0);
// value:
send30503 = (Object)new_AST_Send((Object)block1988, (Object)SMB_value_, 1, (Object)send30502);
block1989 = (Object)new_AST_Block_with((Type_Array)array3449, (Type_Array)empty_Type_Array, 1, 1, send30503);
// named:parsing:semantics:
send30504 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5914, (Object)send30490, (Object)block1989);
// separator
send30505 = (Object)new_AST_Send((Object)Self, (Object)symbol5578, 0);
// separator:
send30506 = (Object)new_AST_Send((Object)send30504, (Object)symbol5526, 1, (Object)send30505);
method4293 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30506);
symbol5499 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure4293 = (Object)new_Runtime_MethodClosure(method4293);
store_method((Type_Class)class733, (Type_Symbol)symbol5499, (Runtime_MethodClosure)methodclosure4293);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
// primary
send30507 = (Object)new_AST_Send((Object)Self, (Object)symbol5610, 0);
symbol5646 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send30508 = (Object)new_AST_Send((Object)Self, (Object)symbol5646, 0);
symbol5647 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send30509 = (Object)new_AST_Send((Object)Self, (Object)symbol5647, 0);
symbol5648 = (Object)new_Type_Symbol_cached(L"block");
// block
send30510 = (Object)new_AST_Send((Object)Self, (Object)symbol5648, 0);
symbol5649 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send30511 = (Object)new_AST_Send((Object)Self, (Object)symbol5649, 0);
// <=
send30512 = (Object)new_AST_Send((Object)send30510, (Object)symbol5337, 1, (Object)send30511);
// <=
send30513 = (Object)new_AST_Send((Object)send30509, (Object)symbol5337, 1, (Object)send30512);
// |
send30514 = (Object)new_AST_Send((Object)send30508, (Object)SMB__or, 1, (Object)send30513);
// <=
send30515 = (Object)new_AST_Send((Object)send30507, (Object)symbol5337, 1, (Object)send30514);
symbol5650 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send30516 = (Object)new_AST_Send((Object)Self, (Object)symbol5650, 0);
// <=
send30517 = (Object)new_AST_Send((Object)send30515, (Object)symbol5337, 1, (Object)send30516);
method4294 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30517);
methodclosure4294 = (Object)new_Runtime_MethodClosure(method4294);
store_method((Type_Class)class733, (Type_Symbol)symbol5452, (Runtime_MethodClosure)methodclosure4294);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable4309 = (Object)new_AST_Variable_named(L"receiver");
array3451 = (Object)new_Type_Array_with(1, (Object)localvariable4309);
string3526 = (Object)new_Type_String(L";");
constant5918 = (Object)new_AST_Constant((Object)string3526);
// asPEG
send30518 = (Object)new_AST_Send((Object)constant5918, (Object)symbol5514, 0);
// omit:
send30519 = (Object)new_AST_Send((Object)send30518, (Object)symbol5518, 1, (Object)True_Const);
// keywordMessageExpression
send30520 = (Object)new_AST_Send((Object)Self, (Object)symbol5622, 0);
symbol5651 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send30521 = (Object)new_AST_Send((Object)Self, (Object)symbol5651, 0);
// |
send30522 = (Object)new_AST_Send((Object)send30520, (Object)SMB__or, 1, (Object)send30521);
// &
send30523 = (Object)new_AST_Send((Object)send30519, (Object)SMB__and, 1, (Object)send30522);
symbol5652 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send30524 = (Object)new_AST_Send((Object)Self, (Object)symbol5652, 0);
// <=
send30525 = (Object)new_AST_Send((Object)send30523, (Object)symbol5337, 1, (Object)send30524);
// plus
send30526 = (Object)new_AST_Send((Object)send30525, (Object)symbol5521, 0);
// &
send30527 = (Object)new_AST_Send((Object)localvariable4309, (Object)SMB__and, 1, (Object)send30526);
localvariable4310 = (Object)new_AST_Variable_named(L"parts");
array3452 = (Object)new_Type_Array_with(1, (Object)localvariable4310);
smallint2056 = (Object)new_Type_SmallInt(2);
constant5919 = (Object)new_AST_Constant((Object)smallint2056);
// at:
send30528 = (Object)new_AST_Send((Object)localvariable4310, (Object)SMB_at_, 1, (Object)constant5919);
symbol5653 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send30529 = (Object)new_AST_Send((Object)localvariable4310, (Object)symbol5372, 0);
// addFirst:
send30530 = (Object)new_AST_Send((Object)send30528, (Object)symbol5653, 1, (Object)send30529);
localvariable4311 = (Object)new_AST_Variable_named(L"receiver");
array3453 = (Object)new_Type_Array_with(1, (Object)localvariable4311);
// first
send30531 = (Object)new_AST_Send((Object)localvariable4310, (Object)symbol5372, 0);
// receiver
send30532 = (Object)new_AST_Send((Object)send30531, (Object)symbol5400, 0);
// receiver:
send30533 = (Object)new_AST_Send((Object)localvariable4311, (Object)symbol5398, 1, (Object)send30532);
smallint2057 = (Object)new_Type_SmallInt(2);
constant5920 = (Object)new_AST_Constant((Object)smallint2057);
// at:
send30534 = (Object)new_AST_Send((Object)localvariable4310, (Object)SMB_at_, 1, (Object)constant5920);
// cascades:
send30535 = (Object)new_AST_Send((Object)localvariable4311, (Object)symbol5399, 1, (Object)send30534);
block1990 = (Object)new_AST_Block_with((Type_Array)array3453, (Type_Array)empty_Type_Array, 3, 2, send30533, send30535);
// new
send30536 = (Object)new_AST_Send((Object)classreference821, (Object)symbol5310, 0);
// value:
send30537 = (Object)new_AST_Send((Object)block1990, (Object)SMB_value_, 1, (Object)send30536);
block1991 = (Object)new_AST_Block_with((Type_Array)array3452, (Type_Array)empty_Type_Array, 2, 2, send30530, send30537);
// semantics:
send30538 = (Object)new_AST_Send((Object)localvariable4309, (Object)symbol5527, 1, (Object)block1991);
block1992 = (Object)new_AST_Block_with((Type_Array)array3451, (Type_Array)empty_Type_Array, 1, 2, send30527, send30538);
// cascadedMessageExpression
send30539 = (Object)new_AST_Send((Object)Self, (Object)symbol5609, 0);
// messageExpression
send30540 = (Object)new_AST_Send((Object)Self, (Object)symbol5599, 0);
// <=
send30541 = (Object)new_AST_Send((Object)send30539, (Object)symbol5337, 1, (Object)send30540);
// value:
send30542 = (Object)new_AST_Send((Object)block1992, (Object)SMB_value_, 1, (Object)send30541);
method4295 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30542);
methodclosure4295 = (Object)new_Runtime_MethodClosure(method4295);
store_method((Type_Class)class733, (Type_Symbol)symbol5480, (Runtime_MethodClosure)methodclosure4295);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
constant5921 = (Object)new_AST_Constant((Object)symbol5609);
string3527 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant5922 = (Object)new_AST_Constant((Object)string3527);
// named:
send30543 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5534, 1, (Object)constant5922);
block1993 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send30543);
// at:ifAbsentPut:
send30544 = (Object)new_AST_Send((Object)instancevariable1059, (Object)symbol5542, 2, (Object)constant5921, (Object)block1993);
method4296 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30544);
methodclosure4296 = (Object)new_Runtime_MethodClosure(method4296);
store_method((Type_Class)class733, (Type_Symbol)symbol5492, (Runtime_MethodClosure)methodclosure4296);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant5923 = (Object)new_AST_Constant((Object)symbol5618);
string3528 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant5924 = (Object)new_AST_Constant((Object)string3528);
// named:
send30545 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5534, 1, (Object)constant5924);
block1994 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send30545);
// at:ifAbsentPut:
send30546 = (Object)new_AST_Send((Object)instancevariable1059, (Object)symbol5542, 2, (Object)constant5923, (Object)block1994);
method4297 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30546);
methodclosure4297 = (Object)new_Runtime_MethodClosure(method4297);
store_method((Type_Class)class733, (Type_Symbol)symbol5434, (Runtime_MethodClosure)methodclosure4297);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string3529 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant5925 = (Object)new_AST_Constant((Object)string3529);
// binarySelector
send30547 = (Object)new_AST_Send((Object)Self, (Object)symbol5612, 0);
// parameterName
send30548 = (Object)new_AST_Send((Object)Self, (Object)symbol5627, 0);
// &
send30549 = (Object)new_AST_Send((Object)send30547, (Object)SMB__and, 1, (Object)send30548);
localvariable4312 = (Object)new_AST_Variable_named(L"result");
array3454 = (Object)new_Type_Array_with(1, (Object)localvariable4312);
localvariable4313 = (Object)new_AST_Variable_named(L"receiver");
array3455 = (Object)new_Type_Array_with(1, (Object)localvariable4313);
// first
send30550 = (Object)new_AST_Send((Object)localvariable4312, (Object)symbol5372, 0);
// createSymbol:
send30551 = (Object)new_AST_Send((Object)Self, (Object)symbol5435, 1, (Object)send30550);
// selector:
send30552 = (Object)new_AST_Send((Object)localvariable4313, (Object)symbol5404, 1, (Object)send30551);
smallint2058 = (Object)new_Type_SmallInt(2);
constant5926 = (Object)new_AST_Constant((Object)smallint2058);
// at:
send30553 = (Object)new_AST_Send((Object)localvariable4312, (Object)SMB_at_, 1, (Object)constant5926);
// createVariable:
send30554 = (Object)new_AST_Send((Object)Self, (Object)symbol5440, 1, (Object)send30553);
// parameter:
send30555 = (Object)new_AST_Send((Object)localvariable4313, (Object)symbol5422, 1, (Object)send30554);
block1995 = (Object)new_AST_Block_with((Type_Array)array3455, (Type_Array)empty_Type_Array, 2, 2, send30552, send30555);
// new
send30556 = (Object)new_AST_Send((Object)classreference816, (Object)symbol5310, 0);
// value:
send30557 = (Object)new_AST_Send((Object)block1995, (Object)SMB_value_, 1, (Object)send30556);
block1996 = (Object)new_AST_Block_with((Type_Array)array3454, (Type_Array)empty_Type_Array, 1, 1, send30557);
// named:parsing:semantics:
send30558 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5925, (Object)send30549, (Object)block1996);
method4298 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30558);
symbol5462 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure4298 = (Object)new_Runtime_MethodClosure(method4298);
store_method((Type_Class)class733, (Type_Symbol)symbol5462, (Runtime_MethodClosure)methodclosure4298);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string3530 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant5927 = (Object)new_AST_Constant((Object)string3530);
symbol5654 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send30559 = (Object)new_AST_Send((Object)Self, (Object)symbol5654, 0);
symbol5655 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send30560 = (Object)new_AST_Send((Object)Self, (Object)symbol5655, 0);
// |
send30561 = (Object)new_AST_Send((Object)send30559, (Object)SMB__or, 1, (Object)send30560);
symbol5656 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send30562 = (Object)new_AST_Send((Object)Self, (Object)symbol5656, 0);
// <=
send30563 = (Object)new_AST_Send((Object)send30561, (Object)symbol5337, 1, (Object)send30562);
// named:parsing:
send30564 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5604, 2, (Object)constant5927, (Object)send30563);
method4299 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30564);
symbol5502 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure4299 = (Object)new_Runtime_MethodClosure(method4299);
store_method((Type_Class)class733, (Type_Symbol)symbol5502, (Runtime_MethodClosure)methodclosure4299);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string3531 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant5928 = (Object)new_AST_Constant((Object)string3531);
// unarySelector
send30565 = (Object)new_AST_Send((Object)Self, (Object)symbol5597, 0);
localvariable4314 = (Object)new_AST_Variable_named(L"selector");
array3456 = (Object)new_Type_Array_with(1, (Object)localvariable4314);
// new
send30566 = (Object)new_AST_Send((Object)classreference839, (Object)symbol5310, 0);
// selector:
send30567 = (Object)new_AST_Send((Object)send30566, (Object)symbol5404, 1, (Object)localvariable4314);
block1997 = (Object)new_AST_Block_with((Type_Array)array3456, (Type_Array)empty_Type_Array, 1, 1, send30567);
// named:parsing:semantics:
send30568 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5928, (Object)send30565, (Object)block1997);
method4300 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30568);
symbol5446 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure4300 = (Object)new_Runtime_MethodClosure(method4300);
store_method((Type_Class)class733, (Type_Symbol)symbol5446, (Runtime_MethodClosure)methodclosure4300);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send30569 = (Object)new_AST_Send((Object)Self, (Object)symbol5427, 0);
// primary
send30570 = (Object)new_AST_Send((Object)Self, (Object)symbol5610, 0);
method4301 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send30569, send30570);
symbol5474 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure4301 = (Object)new_Runtime_MethodClosure(method4301);
store_method((Type_Class)class733, (Type_Symbol)symbol5474, (Runtime_MethodClosure)methodclosure4301);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
// variableName
send30571 = (Object)new_AST_Send((Object)Self, (Object)symbol5606, 0);
symbol5431 = (Object)new_Type_Symbol_cached(L"assignmentOp");
// assignmentOp
send30572 = (Object)new_AST_Send((Object)Self, (Object)symbol5431, 0);
// &
send30573 = (Object)new_AST_Send((Object)send30571, (Object)SMB__and, 1, (Object)send30572);
// times
send30574 = (Object)new_AST_Send((Object)send30573, (Object)symbol5509, 0);
method4302 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30574);
symbol5456 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure4302 = (Object)new_Runtime_MethodClosure(method4302);
store_method((Type_Class)class733, (Type_Symbol)symbol5456, (Runtime_MethodClosure)methodclosure4302);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string3532 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant5929 = (Object)new_AST_Constant((Object)string3532);
// symbol
send30575 = (Object)new_AST_Send((Object)Self, (Object)symbol5385, 0);
localvariable4315 = (Object)new_AST_Variable_named(L"symbol");
array3457 = (Object)new_Type_Array_with(1, (Object)localvariable4315);
// new
send30576 = (Object)new_AST_Send((Object)classreference830, (Object)symbol5310, 0);
// symbol:
send30577 = (Object)new_AST_Send((Object)send30576, (Object)symbol5386, 1, (Object)localvariable4315);
block1998 = (Object)new_AST_Block_with((Type_Array)array3457, (Type_Array)empty_Type_Array, 1, 1, send30577);
// named:parsing:semantics:
send30578 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5929, (Object)send30575, (Object)block1998);
method4303 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30578);
symbol5484 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure4303 = (Object)new_Runtime_MethodClosure(method4303);
store_method((Type_Class)class733, (Type_Symbol)symbol5484, (Runtime_MethodClosure)methodclosure4303);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string3533 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant5930 = (Object)new_AST_Constant((Object)string3533);
string3534 = (Object)new_Type_String(L"$");
constant5931 = (Object)new_AST_Constant((Object)string3534);
// asPEG
send30579 = (Object)new_AST_Send((Object)constant5931, (Object)symbol5514, 0);
// omit:
send30580 = (Object)new_AST_Send((Object)send30579, (Object)symbol5518, 1, (Object)True_Const);
symbol5657 = (Object)new_Type_Symbol_cached(L"character");
// character
send30581 = (Object)new_AST_Send((Object)Self, (Object)symbol5657, 0);
// &&
send30582 = (Object)new_AST_Send((Object)send30580, (Object)symbol5510, 1, (Object)send30581);
localvariable4316 = (Object)new_AST_Variable_named(L"char");
array3458 = (Object)new_Type_Array_with(1, (Object)localvariable4316);
// new
send30583 = (Object)new_AST_Send((Object)classreference825, (Object)symbol5310, 0);
// first
send30584 = (Object)new_AST_Send((Object)localvariable4316, (Object)symbol5372, 0);
// char:
send30585 = (Object)new_AST_Send((Object)send30583, (Object)symbol5530, 1, (Object)send30584);
block1999 = (Object)new_AST_Block_with((Type_Array)array3458, (Type_Array)empty_Type_Array, 1, 1, send30585);
// named:parsing:semantics:
send30586 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5930, (Object)send30582, (Object)block1999);
method4304 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30586);
symbol5468 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure4304 = (Object)new_Runtime_MethodClosure(method4304);
store_method((Type_Class)class733, (Type_Symbol)symbol5468, (Runtime_MethodClosure)methodclosure4304);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string3535 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant5932 = (Object)new_AST_Constant((Object)string3535);
// keyword
send30587 = (Object)new_AST_Send((Object)Self, (Object)symbol5614, 0);
// strongPlus
send30588 = (Object)new_AST_Send((Object)send30587, (Object)symbol5517, 0);
localvariable4317 = (Object)new_AST_Variable_named(L"result");
array3459 = (Object)new_Type_Array_with(1, (Object)localvariable4317);
string3536 = (Object)new_Type_String(L"");
constant5933 = (Object)new_AST_Constant((Object)string3536);
localvariable4318 = (Object)new_AST_Variable_named(L"c");
localvariable4319 = (Object)new_AST_Variable_named(L"e");
array3460 = (Object)new_Type_Array_with(2, (Object)localvariable4318, (Object)localvariable4319);
// ,
send30589 = (Object)new_AST_Send((Object)localvariable4318, (Object)SMB__concat, 1, (Object)localvariable4319);
string3537 = (Object)new_Type_String(L":");
constant5934 = (Object)new_AST_Constant((Object)string3537);
// ,
send30590 = (Object)new_AST_Send((Object)send30589, (Object)SMB__concat, 1, (Object)constant5934);
block2000 = (Object)new_AST_Block_with((Type_Array)array3460, (Type_Array)empty_Type_Array, 2, 1, send30590);
// inject:into:
send30591 = (Object)new_AST_Send((Object)localvariable4317, (Object)symbol5377, 2, (Object)constant5933, (Object)block2000);
block2001 = (Object)new_AST_Block_with((Type_Array)array3459, (Type_Array)empty_Type_Array, 1, 1, send30591);
// named:parsing:semantics:
send30592 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5932, (Object)send30588, (Object)block2001);
method4305 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30592);
symbol5496 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure4305 = (Object)new_Runtime_MethodClosure(method4305);
store_method((Type_Class)class733, (Type_Symbol)symbol5496, (Runtime_MethodClosure)methodclosure4305);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
// numberConstant
send30593 = (Object)new_AST_Send((Object)Self, (Object)symbol5635, 0);
// symbolConstant
send30594 = (Object)new_AST_Send((Object)Self, (Object)symbol5638, 0);
// characterConstant
send30595 = (Object)new_AST_Send((Object)Self, (Object)symbol5639, 0);
// stringConstant
send30596 = (Object)new_AST_Send((Object)Self, (Object)symbol5636, 0);
// <=
send30597 = (Object)new_AST_Send((Object)send30595, (Object)symbol5337, 1, (Object)send30596);
// <=
send30598 = (Object)new_AST_Send((Object)send30594, (Object)symbol5337, 1, (Object)send30597);
// |
send30599 = (Object)new_AST_Send((Object)send30593, (Object)SMB__or, 1, (Object)send30598);
symbol5658 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send30600 = (Object)new_AST_Send((Object)Self, (Object)symbol5658, 0);
// <=
send30601 = (Object)new_AST_Send((Object)send30599, (Object)symbol5337, 1, (Object)send30600);
method4306 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30601);
symbol5438 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure4306 = (Object)new_Runtime_MethodClosure(method4306);
store_method((Type_Class)class733, (Type_Symbol)symbol5438, (Runtime_MethodClosure)methodclosure4306);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string3538 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant5935 = (Object)new_AST_Constant((Object)string3538);
string3539 = (Object)new_Type_String(L":");
constant5936 = (Object)new_AST_Constant((Object)string3539);
// asPEG
send30602 = (Object)new_AST_Send((Object)constant5936, (Object)symbol5514, 0);
// omit:
send30603 = (Object)new_AST_Send((Object)send30602, (Object)symbol5518, 1, (Object)True_Const);
// identifier
send30604 = (Object)new_AST_Send((Object)Self, (Object)symbol5616, 0);
// &
send30605 = (Object)new_AST_Send((Object)send30603, (Object)SMB__and, 1, (Object)send30604);
// plus
send30606 = (Object)new_AST_Send((Object)send30605, (Object)symbol5521, 0);
localvariable4320 = (Object)new_AST_Variable_named(L"result");
array3461 = (Object)new_Type_Array_with(1, (Object)localvariable4320);
localvariable4321 = (Object)new_AST_Variable_named(L"variable");
array3462 = (Object)new_Type_Array_with(1, (Object)localvariable4321);
// createVariable:
send30607 = (Object)new_AST_Send((Object)Self, (Object)symbol5440, 1, (Object)localvariable4321);
block2002 = (Object)new_AST_Block_with((Type_Array)array3462, (Type_Array)empty_Type_Array, 2, 1, send30607);
// collect:
send30608 = (Object)new_AST_Send((Object)localvariable4320, (Object)symbol5615, 1, (Object)block2002);
block2003 = (Object)new_AST_Block_with((Type_Array)array3461, (Type_Array)empty_Type_Array, 1, 1, send30608);
// named:parsing:semantics:
send30609 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5596, 3, (Object)constant5935, (Object)send30606, (Object)block2003);
method4307 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30609);
symbol5478 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure4307 = (Object)new_Runtime_MethodClosure(method4307);
store_method((Type_Class)class733, (Type_Symbol)symbol5478, (Runtime_MethodClosure)methodclosure4307);


// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string3540 = (Object)new_Type_String(L":=");
constant5937 = (Object)new_AST_Constant((Object)string3540);
// asPEG
send30610 = (Object)new_AST_Send((Object)constant5937, (Object)symbol5514, 0);
string3541 = (Object)new_Type_String(L"_");
constant5938 = (Object)new_AST_Constant((Object)string3541);
// |
send30611 = (Object)new_AST_Send((Object)send30610, (Object)SMB__or, 1, (Object)constant5938);
// omit:
send30612 = (Object)new_AST_Send((Object)send30611, (Object)symbol5518, 1, (Object)True_Const);
method4308 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send30612);
methodclosure4308 = (Object)new_Runtime_MethodClosure(method4308);
store_method((Type_Class)class733, (Type_Symbol)symbol5431, (Runtime_MethodClosure)methodclosure4308);

classreference845 = (Object)new_Organization_ClassReference((Type_Class)class733);

// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable4322 = (Object)new_AST_Variable_named(L"parser");
localvariable4323 = (Object)new_AST_Variable_named(L"string");
localvariable4324 = (Object)new_AST_Variable_named(L"result");
array3463 = (Object)new_Type_Array_with(3, (Object)localvariable4322, (Object)localvariable4323, (Object)localvariable4324);
symbol5659 = (Object)new_Type_Symbol_cached(L"method");
// method
send30613 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5659, 0);
assign3693 = (Object)new_AST_Assign((Object)localvariable4322, (Object)send30613);
string3542 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant5939 = (Object)new_AST_Constant((Object)string3542);
assign3694 = (Object)new_AST_Assign((Object)localvariable4323, (Object)constant5939);
// parse:
send30614 = (Object)new_AST_Send((Object)localvariable4322, (Object)symbol5528, 1, (Object)localvariable4323);
assign3695 = (Object)new_AST_Assign((Object)localvariable4324, (Object)send30614);
// hasReturnExpression
send30615 = (Object)new_AST_Send((Object)localvariable4324, (Object)symbol5357, 0);
// should
send30616 = (Object)new_AST_Send((Object)send30615, (Object)symbol5591, 0);
symbol5660 = (Object)new_Type_Symbol_cached(L"be");
// be
send30617 = (Object)new_AST_Send((Object)send30616, (Object)symbol5660, 0);
symbol5661 = (Object)new_Type_Symbol_cached(L"true");
// true
send30618 = (Object)new_AST_Send((Object)send30617, (Object)symbol5661, 0);
// class
send30619 = (Object)new_AST_Send((Object)localvariable4324, (Object)SMB_class, 0);
// should
send30620 = (Object)new_AST_Send((Object)send30619, (Object)symbol5591, 0);
// =
send30621 = (Object)new_AST_Send((Object)send30620, (Object)SMB__equal, 1, (Object)classreference842);
// message
send30622 = (Object)new_AST_Send((Object)localvariable4324, (Object)symbol5418, 0);
// asString
send30623 = (Object)new_AST_Send((Object)send30622, (Object)SMB_asString, 0);
// should
send30624 = (Object)new_AST_Send((Object)send30623, (Object)symbol5591, 0);
string3543 = (Object)new_Type_String(L"withA:withB:withC:");
constant5940 = (Object)new_AST_Constant((Object)string3543);
// =
send30625 = (Object)new_AST_Send((Object)send30624, (Object)SMB__equal, 1, (Object)constant5940);
// statements
send30626 = (Object)new_AST_Send((Object)localvariable4324, (Object)symbol5415, 0);
// last
send30627 = (Object)new_AST_Send((Object)send30626, (Object)symbol5371, 0);
// hasReturnExpression
send30628 = (Object)new_AST_Send((Object)send30627, (Object)symbol5357, 0);
// should
send30629 = (Object)new_AST_Send((Object)send30628, (Object)symbol5591, 0);
// be
send30630 = (Object)new_AST_Send((Object)send30629, (Object)symbol5660, 0);
// true
send30631 = (Object)new_AST_Send((Object)send30630, (Object)symbol5661, 0);
method4309 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3463, 8, assign3693, assign3694, assign3695, send30618, send30621, send30625, send30631, Self);
symbol5244 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure4309 = (Object)new_Runtime_MethodClosure(method4309);
store_method((Type_Class)class735, (Type_Symbol)symbol5244, (Runtime_MethodClosure)methodclosure4309);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable4325 = (Object)new_AST_Variable_named(L"parser");
localvariable4326 = (Object)new_AST_Variable_named(L"string");
array3464 = (Object)new_Type_Array_with(2, (Object)localvariable4325, (Object)localvariable4326);
// binarySelector
send30632 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5612, 0);
assign3696 = (Object)new_AST_Assign((Object)localvariable4325, (Object)send30632);
string3544 = (Object)new_Type_String(L"+= a");
constant5941 = (Object)new_AST_Constant((Object)string3544);
// on:
send30633 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5941);
assign3697 = (Object)new_AST_Assign((Object)localvariable4326, (Object)send30633);
// match:
send30634 = (Object)new_AST_Send((Object)localvariable4325, (Object)symbol5516, 1, (Object)localvariable4326);
// printString
send30635 = (Object)new_AST_Send((Object)send30634, (Object)symbol5519, 0);
// should
send30636 = (Object)new_AST_Send((Object)send30635, (Object)symbol5591, 0);
string3545 = (Object)new_Type_String(L"+=");
constant5942 = (Object)new_AST_Constant((Object)string3545);
// =
send30637 = (Object)new_AST_Send((Object)send30636, (Object)SMB__equal, 1, (Object)constant5942);
// position
send30638 = (Object)new_AST_Send((Object)localvariable4326, (Object)symbol5565, 0);
// should
send30639 = (Object)new_AST_Send((Object)send30638, (Object)symbol5591, 0);
smallint2059 = (Object)new_Type_SmallInt(2);
constant5943 = (Object)new_AST_Constant((Object)smallint2059);
// =
send30640 = (Object)new_AST_Send((Object)send30639, (Object)SMB__equal, 1, (Object)constant5943);
string3546 = (Object)new_Type_String(L"|= a");
constant5944 = (Object)new_AST_Constant((Object)string3546);
// on:
send30641 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5944);
assign3698 = (Object)new_AST_Assign((Object)localvariable4326, (Object)send30641);
// match:
send30642 = (Object)new_AST_Send((Object)localvariable4325, (Object)symbol5516, 1, (Object)localvariable4326);
// printString
send30643 = (Object)new_AST_Send((Object)send30642, (Object)symbol5519, 0);
// should
send30644 = (Object)new_AST_Send((Object)send30643, (Object)symbol5591, 0);
string3547 = (Object)new_Type_String(L"|");
constant5945 = (Object)new_AST_Constant((Object)string3547);
// =
send30645 = (Object)new_AST_Send((Object)send30644, (Object)SMB__equal, 1, (Object)constant5945);
// position
send30646 = (Object)new_AST_Send((Object)localvariable4326, (Object)symbol5565, 0);
// should
send30647 = (Object)new_AST_Send((Object)send30646, (Object)symbol5591, 0);
smallint2060 = (Object)new_Type_SmallInt(1);
constant5946 = (Object)new_AST_Constant((Object)smallint2060);
// =
send30648 = (Object)new_AST_Send((Object)send30647, (Object)SMB__equal, 1, (Object)constant5946);
string3548 = (Object)new_Type_String(L"-= a");
constant5947 = (Object)new_AST_Constant((Object)string3548);
// on:
send30649 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5947);
assign3699 = (Object)new_AST_Assign((Object)localvariable4326, (Object)send30649);
// match:
send30650 = (Object)new_AST_Send((Object)localvariable4325, (Object)symbol5516, 1, (Object)localvariable4326);
// printString
send30651 = (Object)new_AST_Send((Object)send30650, (Object)symbol5519, 0);
// should
send30652 = (Object)new_AST_Send((Object)send30651, (Object)symbol5591, 0);
string3549 = (Object)new_Type_String(L"-=");
constant5948 = (Object)new_AST_Constant((Object)string3549);
// =
send30653 = (Object)new_AST_Send((Object)send30652, (Object)SMB__equal, 1, (Object)constant5948);
// position
send30654 = (Object)new_AST_Send((Object)localvariable4326, (Object)symbol5565, 0);
// should
send30655 = (Object)new_AST_Send((Object)send30654, (Object)symbol5591, 0);
smallint2061 = (Object)new_Type_SmallInt(2);
constant5949 = (Object)new_AST_Constant((Object)smallint2061);
// =
send30656 = (Object)new_AST_Send((Object)send30655, (Object)SMB__equal, 1, (Object)constant5949);
string3550 = (Object)new_Type_String(L"=- a");
constant5950 = (Object)new_AST_Constant((Object)string3550);
// on:
send30657 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5950);
assign3700 = (Object)new_AST_Assign((Object)localvariable4326, (Object)send30657);
// match:
send30658 = (Object)new_AST_Send((Object)localvariable4325, (Object)symbol5516, 1, (Object)localvariable4326);
// printString
send30659 = (Object)new_AST_Send((Object)send30658, (Object)symbol5519, 0);
// should
send30660 = (Object)new_AST_Send((Object)send30659, (Object)symbol5591, 0);
string3551 = (Object)new_Type_String(L"=");
constant5951 = (Object)new_AST_Constant((Object)string3551);
// =
send30661 = (Object)new_AST_Send((Object)send30660, (Object)SMB__equal, 1, (Object)constant5951);
// position
send30662 = (Object)new_AST_Send((Object)localvariable4326, (Object)symbol5565, 0);
// should
send30663 = (Object)new_AST_Send((Object)send30662, (Object)symbol5591, 0);
smallint2062 = (Object)new_Type_SmallInt(1);
constant5952 = (Object)new_AST_Constant((Object)smallint2062);
// =
send30664 = (Object)new_AST_Send((Object)send30663, (Object)SMB__equal, 1, (Object)constant5952);
method4310 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3464, 14, assign3696, assign3697, send30637, send30640, assign3698, send30645, send30648, assign3699, send30653, send30656, assign3700, send30661, send30664, Self);
symbol5280 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure4310 = (Object)new_Runtime_MethodClosure(method4310);
store_method((Type_Class)class735, (Type_Symbol)symbol5280, (Runtime_MethodClosure)methodclosure4310);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable4327 = (Object)new_AST_Variable_named(L"parser");
localvariable4328 = (Object)new_AST_Variable_named(L"string");
array3465 = (Object)new_Type_Array_with(2, (Object)localvariable4327, (Object)localvariable4328);
// keyword
send30665 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5614, 0);
assign3701 = (Object)new_AST_Assign((Object)localvariable4327, (Object)send30665);
string3552 = (Object)new_Type_String(L"abcd: ");
constant5953 = (Object)new_AST_Constant((Object)string3552);
// on:
send30666 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5953);
assign3702 = (Object)new_AST_Assign((Object)localvariable4328, (Object)send30666);
// match:
send30667 = (Object)new_AST_Send((Object)localvariable4327, (Object)symbol5516, 1, (Object)localvariable4328);
// should
send30668 = (Object)new_AST_Send((Object)send30667, (Object)symbol5591, 0);
string3553 = (Object)new_Type_String(L"abcd");
constant5954 = (Object)new_AST_Constant((Object)string3553);
// =
send30669 = (Object)new_AST_Send((Object)send30668, (Object)SMB__equal, 1, (Object)constant5954);
// position
send30670 = (Object)new_AST_Send((Object)localvariable4328, (Object)symbol5565, 0);
// should
send30671 = (Object)new_AST_Send((Object)send30670, (Object)symbol5591, 0);
smallint2063 = (Object)new_Type_SmallInt(5);
constant5955 = (Object)new_AST_Constant((Object)smallint2063);
// =
send30672 = (Object)new_AST_Send((Object)send30671, (Object)SMB__equal, 1, (Object)constant5955);
string3554 = (Object)new_Type_String(L"abcd ");
constant5956 = (Object)new_AST_Constant((Object)string3554);
// on:
send30673 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5956);
assign3703 = (Object)new_AST_Assign((Object)localvariable4328, (Object)send30673);
// match:
send30674 = (Object)new_AST_Send((Object)localvariable4327, (Object)symbol5516, 1, (Object)localvariable4328);
// should
send30675 = (Object)new_AST_Send((Object)send30674, (Object)symbol5591, 0);
// be
send30676 = (Object)new_AST_Send((Object)send30675, (Object)symbol5660, 0);
// isNil
send30677 = (Object)new_AST_Send((Object)send30676, (Object)SMB_isNil, 0);
// position
send30678 = (Object)new_AST_Send((Object)localvariable4328, (Object)symbol5565, 0);
// should
send30679 = (Object)new_AST_Send((Object)send30678, (Object)symbol5591, 0);
smallint2064 = (Object)new_Type_SmallInt(0);
constant5957 = (Object)new_AST_Constant((Object)smallint2064);
// =
send30680 = (Object)new_AST_Send((Object)send30679, (Object)SMB__equal, 1, (Object)constant5957);
method4311 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3465, 8, assign3701, assign3702, send30669, send30672, assign3703, send30677, send30680, Self);
symbol5264 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure4311 = (Object)new_Runtime_MethodClosure(method4311);
store_method((Type_Class)class735, (Type_Symbol)symbol5264, (Runtime_MethodClosure)methodclosure4311);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable4329 = (Object)new_AST_Variable_named(L"parser");
localvariable4330 = (Object)new_AST_Variable_named(L"string");
localvariable4331 = (Object)new_AST_Variable_named(L"result");
array3466 = (Object)new_Type_Array_with(3, (Object)localvariable4329, (Object)localvariable4330, (Object)localvariable4331);
// expression
send30681 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5427, 0);
assign3704 = (Object)new_AST_Assign((Object)localvariable4329, (Object)send30681);
string3555 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5958 = (Object)new_AST_Constant((Object)string3555);
// on:
send30682 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5958);
assign3705 = (Object)new_AST_Assign((Object)localvariable4330, (Object)send30682);
// match:
send30683 = (Object)new_AST_Send((Object)localvariable4329, (Object)symbol5516, 1, (Object)localvariable4330);
assign3706 = (Object)new_AST_Assign((Object)localvariable4331, (Object)send30683);
// class
send30684 = (Object)new_AST_Send((Object)localvariable4331, (Object)SMB_class, 0);
// should
send30685 = (Object)new_AST_Send((Object)send30684, (Object)symbol5591, 0);
// =
send30686 = (Object)new_AST_Send((Object)send30685, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30687 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5429, 0);
// class
send30688 = (Object)new_AST_Send((Object)send30687, (Object)SMB_class, 0);
// should
send30689 = (Object)new_AST_Send((Object)send30688, (Object)symbol5591, 0);
// =
send30690 = (Object)new_AST_Send((Object)send30689, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30691 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5429, 0);
// name
send30692 = (Object)new_AST_Send((Object)send30691, (Object)SMB_name, 0);
// should
send30693 = (Object)new_AST_Send((Object)send30692, (Object)symbol5591, 0);
string3556 = (Object)new_Type_String(L"a");
constant5959 = (Object)new_AST_Constant((Object)string3556);
// =
send30694 = (Object)new_AST_Send((Object)send30693, (Object)SMB__equal, 1, (Object)constant5959);
// expression
send30695 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5427, 0);
assign3707 = (Object)new_AST_Assign((Object)localvariable4331, (Object)send30695);
// class
send30696 = (Object)new_AST_Send((Object)localvariable4331, (Object)SMB_class, 0);
// should
send30697 = (Object)new_AST_Send((Object)send30696, (Object)symbol5591, 0);
// =
send30698 = (Object)new_AST_Send((Object)send30697, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30699 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5429, 0);
// class
send30700 = (Object)new_AST_Send((Object)send30699, (Object)SMB_class, 0);
// should
send30701 = (Object)new_AST_Send((Object)send30700, (Object)symbol5591, 0);
// =
send30702 = (Object)new_AST_Send((Object)send30701, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30703 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5429, 0);
// name
send30704 = (Object)new_AST_Send((Object)send30703, (Object)SMB_name, 0);
// should
send30705 = (Object)new_AST_Send((Object)send30704, (Object)symbol5591, 0);
string3557 = (Object)new_Type_String(L"b");
constant5960 = (Object)new_AST_Constant((Object)string3557);
// =
send30706 = (Object)new_AST_Send((Object)send30705, (Object)SMB__equal, 1, (Object)constant5960);
// expression
send30707 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5427, 0);
assign3708 = (Object)new_AST_Assign((Object)localvariable4331, (Object)send30707);
// class
send30708 = (Object)new_AST_Send((Object)localvariable4331, (Object)SMB_class, 0);
// should
send30709 = (Object)new_AST_Send((Object)send30708, (Object)symbol5591, 0);
// =
send30710 = (Object)new_AST_Send((Object)send30709, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30711 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5429, 0);
// class
send30712 = (Object)new_AST_Send((Object)send30711, (Object)SMB_class, 0);
// should
send30713 = (Object)new_AST_Send((Object)send30712, (Object)symbol5591, 0);
// =
send30714 = (Object)new_AST_Send((Object)send30713, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30715 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5429, 0);
// name
send30716 = (Object)new_AST_Send((Object)send30715, (Object)SMB_name, 0);
// should
send30717 = (Object)new_AST_Send((Object)send30716, (Object)symbol5591, 0);
string3558 = (Object)new_Type_String(L"c");
constant5961 = (Object)new_AST_Constant((Object)string3558);
// =
send30718 = (Object)new_AST_Send((Object)send30717, (Object)SMB__equal, 1, (Object)constant5961);
// expression
send30719 = (Object)new_AST_Send((Object)localvariable4331, (Object)symbol5427, 0);
// class
send30720 = (Object)new_AST_Send((Object)send30719, (Object)SMB_class, 0);
// should
send30721 = (Object)new_AST_Send((Object)send30720, (Object)symbol5591, 0);
// =
send30722 = (Object)new_AST_Send((Object)send30721, (Object)SMB__equal, 1, (Object)classreference835);
method4312 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3466, 16, assign3704, assign3705, assign3706, send30686, send30690, send30694, assign3707, send30698, send30702, send30706, assign3708, send30710, send30714, send30718, send30722, Self);
symbol5292 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure4312 = (Object)new_Runtime_MethodClosure(method4312);
store_method((Type_Class)class735, (Type_Symbol)symbol5292, (Runtime_MethodClosure)methodclosure4312);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable4332 = (Object)new_AST_Variable_named(L"parser");
localvariable4333 = (Object)new_AST_Variable_named(L"string");
array3467 = (Object)new_Type_Array_with(2, (Object)localvariable4332, (Object)localvariable4333);
// separator
send30723 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5578, 0);
assign3709 = (Object)new_AST_Assign((Object)localvariable4332, (Object)send30723);
string3559 = (Object)new_Type_String(L"\"Test\"");
constant5962 = (Object)new_AST_Constant((Object)string3559);
// on:
send30724 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5962);
assign3710 = (Object)new_AST_Assign((Object)localvariable4333, (Object)send30724);
// match:
send30725 = (Object)new_AST_Send((Object)localvariable4332, (Object)symbol5516, 1, (Object)localvariable4333);
// should
send30726 = (Object)new_AST_Send((Object)send30725, (Object)symbol5591, 0);
// not
send30727 = (Object)new_AST_Send((Object)send30726, (Object)SMB_not, 0);
// be
send30728 = (Object)new_AST_Send((Object)send30727, (Object)symbol5660, 0);
// isNil
send30729 = (Object)new_AST_Send((Object)send30728, (Object)SMB_isNil, 0);
// position
send30730 = (Object)new_AST_Send((Object)localvariable4333, (Object)symbol5565, 0);
// should
send30731 = (Object)new_AST_Send((Object)send30730, (Object)symbol5591, 0);
smallint2065 = (Object)new_Type_SmallInt(6);
constant5963 = (Object)new_AST_Constant((Object)smallint2065);
// =
send30732 = (Object)new_AST_Send((Object)send30731, (Object)SMB__equal, 1, (Object)constant5963);
string3560 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant5964 = (Object)new_AST_Constant((Object)string3560);
// on:
send30733 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5964);
assign3711 = (Object)new_AST_Assign((Object)localvariable4333, (Object)send30733);
// match:
send30734 = (Object)new_AST_Send((Object)localvariable4332, (Object)symbol5516, 1, (Object)localvariable4333);
// should
send30735 = (Object)new_AST_Send((Object)send30734, (Object)symbol5591, 0);
// not
send30736 = (Object)new_AST_Send((Object)send30735, (Object)SMB_not, 0);
// be
send30737 = (Object)new_AST_Send((Object)send30736, (Object)symbol5660, 0);
// isNil
send30738 = (Object)new_AST_Send((Object)send30737, (Object)SMB_isNil, 0);
// position
send30739 = (Object)new_AST_Send((Object)localvariable4333, (Object)symbol5565, 0);
// should
send30740 = (Object)new_AST_Send((Object)send30739, (Object)symbol5591, 0);
smallint2066 = (Object)new_Type_SmallInt(18);
constant5965 = (Object)new_AST_Constant((Object)smallint2066);
// =
send30741 = (Object)new_AST_Send((Object)send30740, (Object)SMB__equal, 1, (Object)constant5965);
string3561 = (Object)new_Type_String(L"");
constant5966 = (Object)new_AST_Constant((Object)string3561);
// on:
send30742 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5966);
assign3712 = (Object)new_AST_Assign((Object)localvariable4333, (Object)send30742);
// match:
send30743 = (Object)new_AST_Send((Object)localvariable4332, (Object)symbol5516, 1, (Object)localvariable4333);
// should
send30744 = (Object)new_AST_Send((Object)send30743, (Object)symbol5591, 0);
// not
send30745 = (Object)new_AST_Send((Object)send30744, (Object)SMB_not, 0);
// be
send30746 = (Object)new_AST_Send((Object)send30745, (Object)symbol5660, 0);
// isNil
send30747 = (Object)new_AST_Send((Object)send30746, (Object)SMB_isNil, 0);
// position
send30748 = (Object)new_AST_Send((Object)localvariable4333, (Object)symbol5565, 0);
// should
send30749 = (Object)new_AST_Send((Object)send30748, (Object)symbol5591, 0);
smallint2067 = (Object)new_Type_SmallInt(0);
constant5967 = (Object)new_AST_Constant((Object)smallint2067);
// =
send30750 = (Object)new_AST_Send((Object)send30749, (Object)SMB__equal, 1, (Object)constant5967);
method4313 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3467, 11, assign3709, assign3710, send30729, send30732, assign3711, send30738, send30741, assign3712, send30747, send30750, Self);
symbol5254 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure4313 = (Object)new_Runtime_MethodClosure(method4313);
store_method((Type_Class)class735, (Type_Symbol)symbol5254, (Runtime_MethodClosure)methodclosure4313);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable4334 = (Object)new_AST_Variable_named(L"parser");
localvariable4335 = (Object)new_AST_Variable_named(L"string");
localvariable4336 = (Object)new_AST_Variable_named(L"result");
array3468 = (Object)new_Type_Array_with(3, (Object)localvariable4334, (Object)localvariable4335, (Object)localvariable4336);
// binaryMessageDefinition
send30751 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5655, 0);
assign3713 = (Object)new_AST_Assign((Object)localvariable4334, (Object)send30751);
string3562 = (Object)new_Type_String(L"+= a");
constant5968 = (Object)new_AST_Constant((Object)string3562);
// on:
send30752 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5968);
assign3714 = (Object)new_AST_Assign((Object)localvariable4335, (Object)send30752);
// match:
send30753 = (Object)new_AST_Send((Object)localvariable4334, (Object)symbol5516, 1, (Object)localvariable4335);
assign3715 = (Object)new_AST_Assign((Object)localvariable4336, (Object)send30753);
// class
send30754 = (Object)new_AST_Send((Object)localvariable4336, (Object)SMB_class, 0);
// should
send30755 = (Object)new_AST_Send((Object)send30754, (Object)symbol5591, 0);
// =
send30756 = (Object)new_AST_Send((Object)send30755, (Object)SMB__equal, 1, (Object)classreference816);
// selector
send30757 = (Object)new_AST_Send((Object)localvariable4336, (Object)symbol5324, 0);
// printString
send30758 = (Object)new_AST_Send((Object)send30757, (Object)symbol5519, 0);
// should
send30759 = (Object)new_AST_Send((Object)send30758, (Object)symbol5591, 0);
string3563 = (Object)new_Type_String(L"+=");
constant5969 = (Object)new_AST_Constant((Object)string3563);
// =
send30760 = (Object)new_AST_Send((Object)send30759, (Object)SMB__equal, 1, (Object)constant5969);
// parameter
send30761 = (Object)new_AST_Send((Object)localvariable4336, (Object)symbol5423, 0);
// class
send30762 = (Object)new_AST_Send((Object)send30761, (Object)SMB_class, 0);
// should
send30763 = (Object)new_AST_Send((Object)send30762, (Object)symbol5591, 0);
// =
send30764 = (Object)new_AST_Send((Object)send30763, (Object)SMB__equal, 1, (Object)classreference818);
// parameter
send30765 = (Object)new_AST_Send((Object)localvariable4336, (Object)symbol5423, 0);
// name
send30766 = (Object)new_AST_Send((Object)send30765, (Object)SMB_name, 0);
// asString
send30767 = (Object)new_AST_Send((Object)send30766, (Object)SMB_asString, 0);
// should
send30768 = (Object)new_AST_Send((Object)send30767, (Object)symbol5591, 0);
string3564 = (Object)new_Type_String(L"a");
constant5970 = (Object)new_AST_Constant((Object)string3564);
// =
send30769 = (Object)new_AST_Send((Object)send30768, (Object)SMB__equal, 1, (Object)constant5970);
// position
send30770 = (Object)new_AST_Send((Object)localvariable4335, (Object)symbol5565, 0);
// should
send30771 = (Object)new_AST_Send((Object)send30770, (Object)symbol5591, 0);
smallint2068 = (Object)new_Type_SmallInt(4);
constant5971 = (Object)new_AST_Constant((Object)smallint2068);
// =
send30772 = (Object)new_AST_Send((Object)send30771, (Object)SMB__equal, 1, (Object)constant5971);
string3565 = (Object)new_Type_String(L"|= a");
constant5972 = (Object)new_AST_Constant((Object)string3565);
// on:
send30773 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5972);
assign3716 = (Object)new_AST_Assign((Object)localvariable4335, (Object)send30773);
// match:
send30774 = (Object)new_AST_Send((Object)localvariable4334, (Object)symbol5516, 1, (Object)localvariable4335);
// should
send30775 = (Object)new_AST_Send((Object)send30774, (Object)symbol5591, 0);
// be
send30776 = (Object)new_AST_Send((Object)send30775, (Object)symbol5660, 0);
// isNil
send30777 = (Object)new_AST_Send((Object)send30776, (Object)SMB_isNil, 0);
// position
send30778 = (Object)new_AST_Send((Object)localvariable4335, (Object)symbol5565, 0);
// should
send30779 = (Object)new_AST_Send((Object)send30778, (Object)symbol5591, 0);
smallint2069 = (Object)new_Type_SmallInt(0);
constant5973 = (Object)new_AST_Constant((Object)smallint2069);
// =
send30780 = (Object)new_AST_Send((Object)send30779, (Object)SMB__equal, 1, (Object)constant5973);
string3566 = (Object)new_Type_String(L"-= abc d");
constant5974 = (Object)new_AST_Constant((Object)string3566);
// on:
send30781 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5974);
assign3717 = (Object)new_AST_Assign((Object)localvariable4335, (Object)send30781);
// match:
send30782 = (Object)new_AST_Send((Object)localvariable4334, (Object)symbol5516, 1, (Object)localvariable4335);
assign3718 = (Object)new_AST_Assign((Object)localvariable4336, (Object)send30782);
// class
send30783 = (Object)new_AST_Send((Object)localvariable4336, (Object)SMB_class, 0);
// should
send30784 = (Object)new_AST_Send((Object)send30783, (Object)symbol5591, 0);
// =
send30785 = (Object)new_AST_Send((Object)send30784, (Object)SMB__equal, 1, (Object)classreference816);
// selector
send30786 = (Object)new_AST_Send((Object)localvariable4336, (Object)symbol5324, 0);
// printString
send30787 = (Object)new_AST_Send((Object)send30786, (Object)symbol5519, 0);
// should
send30788 = (Object)new_AST_Send((Object)send30787, (Object)symbol5591, 0);
string3567 = (Object)new_Type_String(L"-=");
constant5975 = (Object)new_AST_Constant((Object)string3567);
// =
send30789 = (Object)new_AST_Send((Object)send30788, (Object)SMB__equal, 1, (Object)constant5975);
// parameter
send30790 = (Object)new_AST_Send((Object)localvariable4336, (Object)symbol5423, 0);
// name
send30791 = (Object)new_AST_Send((Object)send30790, (Object)SMB_name, 0);
// asString
send30792 = (Object)new_AST_Send((Object)send30791, (Object)SMB_asString, 0);
// should
send30793 = (Object)new_AST_Send((Object)send30792, (Object)symbol5591, 0);
string3568 = (Object)new_Type_String(L"abc");
constant5976 = (Object)new_AST_Constant((Object)string3568);
// =
send30794 = (Object)new_AST_Send((Object)send30793, (Object)SMB__equal, 1, (Object)constant5976);
// parameter
send30795 = (Object)new_AST_Send((Object)localvariable4336, (Object)symbol5423, 0);
// class
send30796 = (Object)new_AST_Send((Object)send30795, (Object)SMB_class, 0);
// should
send30797 = (Object)new_AST_Send((Object)send30796, (Object)symbol5591, 0);
// =
send30798 = (Object)new_AST_Send((Object)send30797, (Object)SMB__equal, 1, (Object)classreference818);
// position
send30799 = (Object)new_AST_Send((Object)localvariable4335, (Object)symbol5565, 0);
// should
send30800 = (Object)new_AST_Send((Object)send30799, (Object)symbol5591, 0);
smallint2070 = (Object)new_Type_SmallInt(6);
constant5977 = (Object)new_AST_Constant((Object)smallint2070);
// =
send30801 = (Object)new_AST_Send((Object)send30800, (Object)SMB__equal, 1, (Object)constant5977);
method4314 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3468, 19, assign3713, assign3714, assign3715, send30756, send30760, send30764, send30769, send30772, assign3716, send30777, send30780, assign3717, assign3718, send30785, send30789, send30794, send30798, send30801, Self);
symbol5246 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure4314 = (Object)new_Runtime_MethodClosure(method4314);
store_method((Type_Class)class735, (Type_Symbol)symbol5246, (Runtime_MethodClosure)methodclosure4314);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable4337 = (Object)new_AST_Variable_named(L"parser");
localvariable4338 = (Object)new_AST_Variable_named(L"string");
localvariable4339 = (Object)new_AST_Variable_named(L"result");
array3469 = (Object)new_Type_Array_with(3, (Object)localvariable4337, (Object)localvariable4338, (Object)localvariable4339);
// unarySelector
send30802 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5597, 0);
assign3719 = (Object)new_AST_Assign((Object)localvariable4337, (Object)send30802);
string3569 = (Object)new_Type_String(L"abcd bla");
constant5978 = (Object)new_AST_Constant((Object)string3569);
// on:
send30803 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5978);
assign3720 = (Object)new_AST_Assign((Object)localvariable4338, (Object)send30803);
// match:
send30804 = (Object)new_AST_Send((Object)localvariable4337, (Object)symbol5516, 1, (Object)localvariable4338);
assign3721 = (Object)new_AST_Assign((Object)localvariable4339, (Object)send30804);
// class
send30805 = (Object)new_AST_Send((Object)localvariable4339, (Object)SMB_class, 0);
// should
send30806 = (Object)new_AST_Send((Object)send30805, (Object)symbol5591, 0);
// =
send30807 = (Object)new_AST_Send((Object)send30806, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send30808 = (Object)new_AST_Send((Object)localvariable4339, (Object)symbol5324, 0);
// printString
send30809 = (Object)new_AST_Send((Object)send30808, (Object)symbol5519, 0);
// should
send30810 = (Object)new_AST_Send((Object)send30809, (Object)symbol5591, 0);
string3570 = (Object)new_Type_String(L"abcd");
constant5979 = (Object)new_AST_Constant((Object)string3570);
// =
send30811 = (Object)new_AST_Send((Object)send30810, (Object)SMB__equal, 1, (Object)constant5979);
// position
send30812 = (Object)new_AST_Send((Object)localvariable4338, (Object)symbol5565, 0);
// should
send30813 = (Object)new_AST_Send((Object)send30812, (Object)symbol5591, 0);
smallint2071 = (Object)new_Type_SmallInt(4);
constant5980 = (Object)new_AST_Constant((Object)smallint2071);
// =
send30814 = (Object)new_AST_Send((Object)send30813, (Object)SMB__equal, 1, (Object)constant5980);
string3571 = (Object)new_Type_String(L"abcd: bla");
constant5981 = (Object)new_AST_Constant((Object)string3571);
// on:
send30815 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5981);
assign3722 = (Object)new_AST_Assign((Object)localvariable4338, (Object)send30815);
// match:
send30816 = (Object)new_AST_Send((Object)localvariable4337, (Object)symbol5516, 1, (Object)localvariable4338);
// should
send30817 = (Object)new_AST_Send((Object)send30816, (Object)symbol5591, 0);
// be
send30818 = (Object)new_AST_Send((Object)send30817, (Object)symbol5660, 0);
// isNil
send30819 = (Object)new_AST_Send((Object)send30818, (Object)SMB_isNil, 0);
// position
send30820 = (Object)new_AST_Send((Object)localvariable4338, (Object)symbol5565, 0);
// should
send30821 = (Object)new_AST_Send((Object)send30820, (Object)symbol5591, 0);
smallint2072 = (Object)new_Type_SmallInt(0);
constant5982 = (Object)new_AST_Constant((Object)smallint2072);
// =
send30822 = (Object)new_AST_Send((Object)send30821, (Object)SMB__equal, 1, (Object)constant5982);
method4315 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3469, 10, assign3719, assign3720, assign3721, send30807, send30811, send30814, assign3722, send30819, send30822, Self);
symbol5274 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure4315 = (Object)new_Runtime_MethodClosure(method4315);
store_method((Type_Class)class735, (Type_Symbol)symbol5274, (Runtime_MethodClosure)methodclosure4315);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable4340 = (Object)new_AST_Variable_named(L"parser");
localvariable4341 = (Object)new_AST_Variable_named(L"string");
localvariable4342 = (Object)new_AST_Variable_named(L"result");
array3470 = (Object)new_Type_Array_with(3, (Object)localvariable4340, (Object)localvariable4341, (Object)localvariable4342);
// return
send30823 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5640, 0);
assign3723 = (Object)new_AST_Assign((Object)localvariable4340, (Object)send30823);
string3572 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5983 = (Object)new_AST_Constant((Object)string3572);
// on:
send30824 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5983);
assign3724 = (Object)new_AST_Assign((Object)localvariable4341, (Object)send30824);
// match:
send30825 = (Object)new_AST_Send((Object)localvariable4340, (Object)symbol5516, 1, (Object)localvariable4341);
assign3725 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30825);
// class
send30826 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30827 = (Object)new_AST_Send((Object)send30826, (Object)symbol5591, 0);
// =
send30828 = (Object)new_AST_Send((Object)send30827, (Object)SMB__equal, 1, (Object)classreference819);
// expression
send30829 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
assign3726 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30829);
// class
send30830 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30831 = (Object)new_AST_Send((Object)send30830, (Object)symbol5591, 0);
// =
send30832 = (Object)new_AST_Send((Object)send30831, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30833 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// class
send30834 = (Object)new_AST_Send((Object)send30833, (Object)SMB_class, 0);
// should
send30835 = (Object)new_AST_Send((Object)send30834, (Object)symbol5591, 0);
// =
send30836 = (Object)new_AST_Send((Object)send30835, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30837 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// name
send30838 = (Object)new_AST_Send((Object)send30837, (Object)SMB_name, 0);
// should
send30839 = (Object)new_AST_Send((Object)send30838, (Object)symbol5591, 0);
string3573 = (Object)new_Type_String(L"a");
constant5984 = (Object)new_AST_Constant((Object)string3573);
// =
send30840 = (Object)new_AST_Send((Object)send30839, (Object)SMB__equal, 1, (Object)constant5984);
// expression
send30841 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
assign3727 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30841);
// class
send30842 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30843 = (Object)new_AST_Send((Object)send30842, (Object)symbol5591, 0);
// =
send30844 = (Object)new_AST_Send((Object)send30843, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30845 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// class
send30846 = (Object)new_AST_Send((Object)send30845, (Object)SMB_class, 0);
// should
send30847 = (Object)new_AST_Send((Object)send30846, (Object)symbol5591, 0);
// =
send30848 = (Object)new_AST_Send((Object)send30847, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30849 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// name
send30850 = (Object)new_AST_Send((Object)send30849, (Object)SMB_name, 0);
// should
send30851 = (Object)new_AST_Send((Object)send30850, (Object)symbol5591, 0);
string3574 = (Object)new_Type_String(L"b");
constant5985 = (Object)new_AST_Constant((Object)string3574);
// =
send30852 = (Object)new_AST_Send((Object)send30851, (Object)SMB__equal, 1, (Object)constant5985);
// expression
send30853 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
assign3728 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30853);
// class
send30854 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30855 = (Object)new_AST_Send((Object)send30854, (Object)symbol5591, 0);
// =
send30856 = (Object)new_AST_Send((Object)send30855, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30857 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// class
send30858 = (Object)new_AST_Send((Object)send30857, (Object)SMB_class, 0);
// should
send30859 = (Object)new_AST_Send((Object)send30858, (Object)symbol5591, 0);
// =
send30860 = (Object)new_AST_Send((Object)send30859, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30861 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// name
send30862 = (Object)new_AST_Send((Object)send30861, (Object)SMB_name, 0);
// should
send30863 = (Object)new_AST_Send((Object)send30862, (Object)symbol5591, 0);
string3575 = (Object)new_Type_String(L"c");
constant5986 = (Object)new_AST_Constant((Object)string3575);
// =
send30864 = (Object)new_AST_Send((Object)send30863, (Object)SMB__equal, 1, (Object)constant5986);
// expression
send30865 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
// class
send30866 = (Object)new_AST_Send((Object)send30865, (Object)SMB_class, 0);
// should
send30867 = (Object)new_AST_Send((Object)send30866, (Object)symbol5591, 0);
// =
send30868 = (Object)new_AST_Send((Object)send30867, (Object)SMB__equal, 1, (Object)classreference835);
string3576 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant5987 = (Object)new_AST_Constant((Object)string3576);
// on:
send30869 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5987);
assign3729 = (Object)new_AST_Assign((Object)localvariable4341, (Object)send30869);
// match:
send30870 = (Object)new_AST_Send((Object)localvariable4340, (Object)symbol5516, 1, (Object)localvariable4341);
assign3730 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30870);
// class
send30871 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30872 = (Object)new_AST_Send((Object)send30871, (Object)symbol5591, 0);
// =
send30873 = (Object)new_AST_Send((Object)send30872, (Object)SMB__equal, 1, (Object)classreference819);
// expression
send30874 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
assign3731 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30874);
// class
send30875 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30876 = (Object)new_AST_Send((Object)send30875, (Object)symbol5591, 0);
// =
send30877 = (Object)new_AST_Send((Object)send30876, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30878 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// class
send30879 = (Object)new_AST_Send((Object)send30878, (Object)SMB_class, 0);
// should
send30880 = (Object)new_AST_Send((Object)send30879, (Object)symbol5591, 0);
// =
send30881 = (Object)new_AST_Send((Object)send30880, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30882 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// name
send30883 = (Object)new_AST_Send((Object)send30882, (Object)SMB_name, 0);
// should
send30884 = (Object)new_AST_Send((Object)send30883, (Object)symbol5591, 0);
string3577 = (Object)new_Type_String(L"a");
constant5988 = (Object)new_AST_Constant((Object)string3577);
// =
send30885 = (Object)new_AST_Send((Object)send30884, (Object)SMB__equal, 1, (Object)constant5988);
// expression
send30886 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
assign3732 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30886);
// class
send30887 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30888 = (Object)new_AST_Send((Object)send30887, (Object)symbol5591, 0);
// =
send30889 = (Object)new_AST_Send((Object)send30888, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30890 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// class
send30891 = (Object)new_AST_Send((Object)send30890, (Object)SMB_class, 0);
// should
send30892 = (Object)new_AST_Send((Object)send30891, (Object)symbol5591, 0);
// =
send30893 = (Object)new_AST_Send((Object)send30892, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30894 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// name
send30895 = (Object)new_AST_Send((Object)send30894, (Object)SMB_name, 0);
// should
send30896 = (Object)new_AST_Send((Object)send30895, (Object)symbol5591, 0);
string3578 = (Object)new_Type_String(L"b");
constant5989 = (Object)new_AST_Constant((Object)string3578);
// =
send30897 = (Object)new_AST_Send((Object)send30896, (Object)SMB__equal, 1, (Object)constant5989);
// expression
send30898 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
assign3733 = (Object)new_AST_Assign((Object)localvariable4342, (Object)send30898);
// class
send30899 = (Object)new_AST_Send((Object)localvariable4342, (Object)SMB_class, 0);
// should
send30900 = (Object)new_AST_Send((Object)send30899, (Object)symbol5591, 0);
// =
send30901 = (Object)new_AST_Send((Object)send30900, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30902 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// class
send30903 = (Object)new_AST_Send((Object)send30902, (Object)SMB_class, 0);
// should
send30904 = (Object)new_AST_Send((Object)send30903, (Object)symbol5591, 0);
// =
send30905 = (Object)new_AST_Send((Object)send30904, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30906 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5429, 0);
// name
send30907 = (Object)new_AST_Send((Object)send30906, (Object)SMB_name, 0);
// should
send30908 = (Object)new_AST_Send((Object)send30907, (Object)symbol5591, 0);
string3579 = (Object)new_Type_String(L"c");
constant5990 = (Object)new_AST_Constant((Object)string3579);
// =
send30909 = (Object)new_AST_Send((Object)send30908, (Object)SMB__equal, 1, (Object)constant5990);
// expression
send30910 = (Object)new_AST_Send((Object)localvariable4342, (Object)symbol5427, 0);
// class
send30911 = (Object)new_AST_Send((Object)send30910, (Object)SMB_class, 0);
// should
send30912 = (Object)new_AST_Send((Object)send30911, (Object)symbol5591, 0);
// =
send30913 = (Object)new_AST_Send((Object)send30912, (Object)SMB__equal, 1, (Object)classreference835);
method4316 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3470, 34, assign3723, assign3724, assign3725, send30828, assign3726, send30832, send30836, send30840, assign3727, send30844, send30848, send30852, assign3728, send30856, send30860, send30864, send30868, assign3729, assign3730, send30873, assign3731, send30877, send30881, send30885, assign3732, send30889, send30893, send30897, assign3733, send30901, send30905, send30909, send30913, Self);
symbol5266 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure4316 = (Object)new_Runtime_MethodClosure(method4316);
store_method((Type_Class)class735, (Type_Symbol)symbol5266, (Runtime_MethodClosure)methodclosure4316);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable4343 = (Object)new_AST_Variable_named(L"parser");
localvariable4344 = (Object)new_AST_Variable_named(L"string");
localvariable4345 = (Object)new_AST_Variable_named(L"message");
localvariable4346 = (Object)new_AST_Variable_named(L"return");
array3471 = (Object)new_Type_Array_with(4, (Object)localvariable4343, (Object)localvariable4344, (Object)localvariable4345, (Object)localvariable4346);
// messageExpression
send30914 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5599, 0);
assign3734 = (Object)new_AST_Assign((Object)localvariable4343, (Object)send30914);
string3580 = (Object)new_Type_String(L"self do: this and: that");
constant5991 = (Object)new_AST_Constant((Object)string3580);
// on:
send30915 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5991);
assign3735 = (Object)new_AST_Assign((Object)localvariable4344, (Object)send30915);
// match:
send30916 = (Object)new_AST_Send((Object)localvariable4343, (Object)symbol5516, 1, (Object)localvariable4344);
assign3736 = (Object)new_AST_Assign((Object)localvariable4345, (Object)send30916);
// receiver
send30917 = (Object)new_AST_Send((Object)localvariable4345, (Object)symbol5400, 0);
// class
send30918 = (Object)new_AST_Send((Object)send30917, (Object)SMB_class, 0);
// should
send30919 = (Object)new_AST_Send((Object)send30918, (Object)symbol5591, 0);
// =
send30920 = (Object)new_AST_Send((Object)send30919, (Object)SMB__equal, 1, (Object)classreference838);
// return
send30921 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5640, 0);
assign3737 = (Object)new_AST_Assign((Object)localvariable4343, (Object)send30921);
string3581 = (Object)new_Type_String(L"^ self do: this and: that");
constant5992 = (Object)new_AST_Constant((Object)string3581);
// on:
send30922 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5992);
assign3738 = (Object)new_AST_Assign((Object)localvariable4344, (Object)send30922);
// match:
send30923 = (Object)new_AST_Send((Object)localvariable4343, (Object)symbol5516, 1, (Object)localvariable4344);
assign3739 = (Object)new_AST_Assign((Object)localvariable4346, (Object)send30923);
// class
send30924 = (Object)new_AST_Send((Object)localvariable4346, (Object)SMB_class, 0);
// should
send30925 = (Object)new_AST_Send((Object)send30924, (Object)symbol5591, 0);
// =
send30926 = (Object)new_AST_Send((Object)send30925, (Object)SMB__equal, 1, (Object)classreference819);
// expression
send30927 = (Object)new_AST_Send((Object)localvariable4346, (Object)symbol5427, 0);
// receiver
send30928 = (Object)new_AST_Send((Object)send30927, (Object)symbol5400, 0);
// class
send30929 = (Object)new_AST_Send((Object)send30928, (Object)SMB_class, 0);
// should
send30930 = (Object)new_AST_Send((Object)send30929, (Object)symbol5591, 0);
// =
send30931 = (Object)new_AST_Send((Object)send30930, (Object)SMB__equal, 1, (Object)classreference838);
method4317 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3471, 10, assign3734, assign3735, assign3736, send30920, assign3737, assign3738, assign3739, send30926, send30931, Self);
symbol5294 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure4317 = (Object)new_Runtime_MethodClosure(method4317);
store_method((Type_Class)class735, (Type_Symbol)symbol5294, (Runtime_MethodClosure)methodclosure4317);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable4347 = (Object)new_AST_Variable_named(L"parser");
localvariable4348 = (Object)new_AST_Variable_named(L"string");
localvariable4349 = (Object)new_AST_Variable_named(L"result");
localvariable4350 = (Object)new_AST_Variable_named(L"arg");
array3472 = (Object)new_Type_Array_with(4, (Object)localvariable4347, (Object)localvariable4348, (Object)localvariable4349, (Object)localvariable4350);
// keywordExpression
send30932 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5620, 0);
assign3740 = (Object)new_AST_Assign((Object)localvariable4347, (Object)send30932);
string3582 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5993 = (Object)new_AST_Constant((Object)string3582);
// on:
send30933 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant5993);
assign3741 = (Object)new_AST_Assign((Object)localvariable4348, (Object)send30933);
// match:
send30934 = (Object)new_AST_Send((Object)localvariable4347, (Object)symbol5516, 1, (Object)localvariable4348);
assign3742 = (Object)new_AST_Assign((Object)localvariable4349, (Object)send30934);
// class
send30935 = (Object)new_AST_Send((Object)localvariable4349, (Object)SMB_class, 0);
// should
send30936 = (Object)new_AST_Send((Object)send30935, (Object)symbol5591, 0);
// =
send30937 = (Object)new_AST_Send((Object)send30936, (Object)SMB__equal, 1, (Object)classreference835);
// keywords
send30938 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5410, 0);
// asArray
send30939 = (Object)new_AST_Send((Object)send30938, (Object)SMB_asArray, 0);
// should
send30940 = (Object)new_AST_Send((Object)send30939, (Object)symbol5591, 0);
localvariable4351 = (Object)new_AST_Variable_named(L"receiver");
array3473 = (Object)new_Type_Array_with(1, (Object)localvariable4351);
smallint2073 = (Object)new_Type_SmallInt(1);
constant5994 = (Object)new_AST_Constant((Object)smallint2073);
string3583 = (Object)new_Type_String(L"abc");
constant5995 = (Object)new_AST_Constant((Object)string3583);
// at:put:
send30941 = (Object)new_AST_Send((Object)localvariable4351, (Object)SMB_at_put_, 2, (Object)constant5994, (Object)constant5995);
smallint2074 = (Object)new_Type_SmallInt(2);
constant5996 = (Object)new_AST_Constant((Object)smallint2074);
string3584 = (Object)new_Type_String(L"def");
constant5997 = (Object)new_AST_Constant((Object)string3584);
// at:put:
send30942 = (Object)new_AST_Send((Object)localvariable4351, (Object)SMB_at_put_, 2, (Object)constant5996, (Object)constant5997);
smallint2075 = (Object)new_Type_SmallInt(3);
constant5998 = (Object)new_AST_Constant((Object)smallint2075);
string3585 = (Object)new_Type_String(L"ghi");
constant5999 = (Object)new_AST_Constant((Object)string3585);
// at:put:
send30943 = (Object)new_AST_Send((Object)localvariable4351, (Object)SMB_at_put_, 2, (Object)constant5998, (Object)constant5999);
// yourself
send30944 = (Object)new_AST_Send((Object)localvariable4351, (Object)symbol5216, 0);
block2004 = (Object)new_AST_Block_with((Type_Array)array3473, (Type_Array)empty_Type_Array, 1, 4, send30941, send30942, send30943, send30944);
smallint2076 = (Object)new_Type_SmallInt(3);
constant6000 = (Object)new_AST_Constant((Object)smallint2076);
// new:
send30945 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6000);
// value:
send30946 = (Object)new_AST_Send((Object)block2004, (Object)SMB_value_, 1, (Object)send30945);
// =
send30947 = (Object)new_AST_Send((Object)send30940, (Object)SMB__equal, 1, (Object)send30946);
// selector
send30948 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5324, 0);
// class
send30949 = (Object)new_AST_Send((Object)send30948, (Object)SMB_class, 0);
// should
send30950 = (Object)new_AST_Send((Object)send30949, (Object)symbol5591, 0);
// =
send30951 = (Object)new_AST_Send((Object)send30950, (Object)SMB__equal, 1, (Object)classreference832);
// selector
send30952 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5324, 0);
// printString
send30953 = (Object)new_AST_Send((Object)send30952, (Object)symbol5519, 0);
// should
send30954 = (Object)new_AST_Send((Object)send30953, (Object)symbol5591, 0);
string3586 = (Object)new_Type_String(L"abc:def:ghi:");
constant6001 = (Object)new_AST_Constant((Object)string3586);
// =
send30955 = (Object)new_AST_Send((Object)send30954, (Object)SMB__equal, 1, (Object)constant6001);
// arguments
send30956 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5325, 0);
// first
send30957 = (Object)new_AST_Send((Object)send30956, (Object)symbol5372, 0);
assign3743 = (Object)new_AST_Assign((Object)localvariable4350, (Object)send30957);
// class
send30958 = (Object)new_AST_Send((Object)localvariable4350, (Object)SMB_class, 0);
// should
send30959 = (Object)new_AST_Send((Object)send30958, (Object)symbol5591, 0);
// =
send30960 = (Object)new_AST_Send((Object)send30959, (Object)SMB__equal, 1, (Object)classreference823);
// arguments
send30961 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5325, 0);
smallint2077 = (Object)new_Type_SmallInt(2);
constant6002 = (Object)new_AST_Constant((Object)smallint2077);
// at:
send30962 = (Object)new_AST_Send((Object)send30961, (Object)SMB_at_, 1, (Object)constant6002);
assign3744 = (Object)new_AST_Assign((Object)localvariable4350, (Object)send30962);
// class
send30963 = (Object)new_AST_Send((Object)localvariable4350, (Object)SMB_class, 0);
// should
send30964 = (Object)new_AST_Send((Object)send30963, (Object)symbol5591, 0);
// =
send30965 = (Object)new_AST_Send((Object)send30964, (Object)SMB__equal, 1, (Object)classreference828);
// arguments
send30966 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5325, 0);
smallint2078 = (Object)new_Type_SmallInt(3);
constant6003 = (Object)new_AST_Constant((Object)smallint2078);
// at:
send30967 = (Object)new_AST_Send((Object)send30966, (Object)SMB_at_, 1, (Object)constant6003);
assign3745 = (Object)new_AST_Assign((Object)localvariable4350, (Object)send30967);
// class
send30968 = (Object)new_AST_Send((Object)localvariable4350, (Object)SMB_class, 0);
// should
send30969 = (Object)new_AST_Send((Object)send30968, (Object)symbol5591, 0);
// =
send30970 = (Object)new_AST_Send((Object)send30969, (Object)SMB__equal, 1, (Object)classreference839);
// receiver
send30971 = (Object)new_AST_Send((Object)localvariable4349, (Object)symbol5400, 0);
// class
send30972 = (Object)new_AST_Send((Object)send30971, (Object)SMB_class, 0);
// should
send30973 = (Object)new_AST_Send((Object)send30972, (Object)symbol5591, 0);
// =
send30974 = (Object)new_AST_Send((Object)send30973, (Object)SMB__equal, 1, (Object)classreference828);
// position
send30975 = (Object)new_AST_Send((Object)localvariable4348, (Object)symbol5565, 0);
// should
send30976 = (Object)new_AST_Send((Object)send30975, (Object)symbol5591, 0);
smallint2079 = (Object)new_Type_SmallInt(29);
constant6004 = (Object)new_AST_Constant((Object)smallint2079);
// =
send30977 = (Object)new_AST_Send((Object)send30976, (Object)SMB__equal, 1, (Object)constant6004);
method4318 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3472, 16, assign3740, assign3741, assign3742, send30937, send30947, send30951, send30955, assign3743, send30960, assign3744, send30965, assign3745, send30970, send30974, send30977, Self);
symbol5286 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure4318 = (Object)new_Runtime_MethodClosure(method4318);
store_method((Type_Class)class735, (Type_Symbol)symbol5286, (Runtime_MethodClosure)methodclosure4318);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable4352 = (Object)new_AST_Variable_named(L"parser");
localvariable4353 = (Object)new_AST_Variable_named(L"string");
localvariable4354 = (Object)new_AST_Variable_named(L"result");
array3474 = (Object)new_Type_Array_with(3, (Object)localvariable4352, (Object)localvariable4353, (Object)localvariable4354);
// finalExpression
send30978 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5641, 0);
assign3746 = (Object)new_AST_Assign((Object)localvariable4352, (Object)send30978);
string3587 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant6005 = (Object)new_AST_Constant((Object)string3587);
// on:
send30979 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6005);
assign3747 = (Object)new_AST_Assign((Object)localvariable4353, (Object)send30979);
// match:
send30980 = (Object)new_AST_Send((Object)localvariable4352, (Object)symbol5516, 1, (Object)localvariable4353);
assign3748 = (Object)new_AST_Assign((Object)localvariable4354, (Object)send30980);
// class
send30981 = (Object)new_AST_Send((Object)localvariable4354, (Object)SMB_class, 0);
// should
send30982 = (Object)new_AST_Send((Object)send30981, (Object)symbol5591, 0);
// =
send30983 = (Object)new_AST_Send((Object)send30982, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30984 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// class
send30985 = (Object)new_AST_Send((Object)send30984, (Object)SMB_class, 0);
// should
send30986 = (Object)new_AST_Send((Object)send30985, (Object)symbol5591, 0);
// =
send30987 = (Object)new_AST_Send((Object)send30986, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send30988 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// name
send30989 = (Object)new_AST_Send((Object)send30988, (Object)SMB_name, 0);
// should
send30990 = (Object)new_AST_Send((Object)send30989, (Object)symbol5591, 0);
string3588 = (Object)new_Type_String(L"a");
constant6006 = (Object)new_AST_Constant((Object)string3588);
// =
send30991 = (Object)new_AST_Send((Object)send30990, (Object)SMB__equal, 1, (Object)constant6006);
// expression
send30992 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5427, 0);
assign3749 = (Object)new_AST_Assign((Object)localvariable4354, (Object)send30992);
// class
send30993 = (Object)new_AST_Send((Object)localvariable4354, (Object)SMB_class, 0);
// should
send30994 = (Object)new_AST_Send((Object)send30993, (Object)symbol5591, 0);
// =
send30995 = (Object)new_AST_Send((Object)send30994, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send30996 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// class
send30997 = (Object)new_AST_Send((Object)send30996, (Object)SMB_class, 0);
// should
send30998 = (Object)new_AST_Send((Object)send30997, (Object)symbol5591, 0);
// =
send30999 = (Object)new_AST_Send((Object)send30998, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31000 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// name
send31001 = (Object)new_AST_Send((Object)send31000, (Object)SMB_name, 0);
// should
send31002 = (Object)new_AST_Send((Object)send31001, (Object)symbol5591, 0);
string3589 = (Object)new_Type_String(L"b");
constant6007 = (Object)new_AST_Constant((Object)string3589);
// =
send31003 = (Object)new_AST_Send((Object)send31002, (Object)SMB__equal, 1, (Object)constant6007);
// expression
send31004 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5427, 0);
assign3750 = (Object)new_AST_Assign((Object)localvariable4354, (Object)send31004);
// class
send31005 = (Object)new_AST_Send((Object)localvariable4354, (Object)SMB_class, 0);
// should
send31006 = (Object)new_AST_Send((Object)send31005, (Object)symbol5591, 0);
// =
send31007 = (Object)new_AST_Send((Object)send31006, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31008 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// class
send31009 = (Object)new_AST_Send((Object)send31008, (Object)SMB_class, 0);
// should
send31010 = (Object)new_AST_Send((Object)send31009, (Object)symbol5591, 0);
// =
send31011 = (Object)new_AST_Send((Object)send31010, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31012 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// name
send31013 = (Object)new_AST_Send((Object)send31012, (Object)SMB_name, 0);
// should
send31014 = (Object)new_AST_Send((Object)send31013, (Object)symbol5591, 0);
string3590 = (Object)new_Type_String(L"c");
constant6008 = (Object)new_AST_Constant((Object)string3590);
// =
send31015 = (Object)new_AST_Send((Object)send31014, (Object)SMB__equal, 1, (Object)constant6008);
// expression
send31016 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5427, 0);
// class
send31017 = (Object)new_AST_Send((Object)send31016, (Object)SMB_class, 0);
// should
send31018 = (Object)new_AST_Send((Object)send31017, (Object)symbol5591, 0);
// =
send31019 = (Object)new_AST_Send((Object)send31018, (Object)SMB__equal, 1, (Object)classreference835);
string3591 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant6009 = (Object)new_AST_Constant((Object)string3591);
// on:
send31020 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6009);
assign3751 = (Object)new_AST_Assign((Object)localvariable4353, (Object)send31020);
// match:
send31021 = (Object)new_AST_Send((Object)localvariable4352, (Object)symbol5516, 1, (Object)localvariable4353);
assign3752 = (Object)new_AST_Assign((Object)localvariable4354, (Object)send31021);
// class
send31022 = (Object)new_AST_Send((Object)localvariable4354, (Object)SMB_class, 0);
// should
send31023 = (Object)new_AST_Send((Object)send31022, (Object)symbol5591, 0);
// =
send31024 = (Object)new_AST_Send((Object)send31023, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31025 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// class
send31026 = (Object)new_AST_Send((Object)send31025, (Object)SMB_class, 0);
// should
send31027 = (Object)new_AST_Send((Object)send31026, (Object)symbol5591, 0);
// =
send31028 = (Object)new_AST_Send((Object)send31027, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31029 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// name
send31030 = (Object)new_AST_Send((Object)send31029, (Object)SMB_name, 0);
// should
send31031 = (Object)new_AST_Send((Object)send31030, (Object)symbol5591, 0);
string3592 = (Object)new_Type_String(L"a");
constant6010 = (Object)new_AST_Constant((Object)string3592);
// =
send31032 = (Object)new_AST_Send((Object)send31031, (Object)SMB__equal, 1, (Object)constant6010);
// expression
send31033 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5427, 0);
assign3753 = (Object)new_AST_Assign((Object)localvariable4354, (Object)send31033);
// class
send31034 = (Object)new_AST_Send((Object)localvariable4354, (Object)SMB_class, 0);
// should
send31035 = (Object)new_AST_Send((Object)send31034, (Object)symbol5591, 0);
// =
send31036 = (Object)new_AST_Send((Object)send31035, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31037 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// class
send31038 = (Object)new_AST_Send((Object)send31037, (Object)SMB_class, 0);
// should
send31039 = (Object)new_AST_Send((Object)send31038, (Object)symbol5591, 0);
// =
send31040 = (Object)new_AST_Send((Object)send31039, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31041 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// name
send31042 = (Object)new_AST_Send((Object)send31041, (Object)SMB_name, 0);
// should
send31043 = (Object)new_AST_Send((Object)send31042, (Object)symbol5591, 0);
string3593 = (Object)new_Type_String(L"b");
constant6011 = (Object)new_AST_Constant((Object)string3593);
// =
send31044 = (Object)new_AST_Send((Object)send31043, (Object)SMB__equal, 1, (Object)constant6011);
// expression
send31045 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5427, 0);
assign3754 = (Object)new_AST_Assign((Object)localvariable4354, (Object)send31045);
// class
send31046 = (Object)new_AST_Send((Object)localvariable4354, (Object)SMB_class, 0);
// should
send31047 = (Object)new_AST_Send((Object)send31046, (Object)symbol5591, 0);
// =
send31048 = (Object)new_AST_Send((Object)send31047, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31049 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// class
send31050 = (Object)new_AST_Send((Object)send31049, (Object)SMB_class, 0);
// should
send31051 = (Object)new_AST_Send((Object)send31050, (Object)symbol5591, 0);
// =
send31052 = (Object)new_AST_Send((Object)send31051, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31053 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5429, 0);
// name
send31054 = (Object)new_AST_Send((Object)send31053, (Object)SMB_name, 0);
// should
send31055 = (Object)new_AST_Send((Object)send31054, (Object)symbol5591, 0);
string3594 = (Object)new_Type_String(L"c");
constant6012 = (Object)new_AST_Constant((Object)string3594);
// =
send31056 = (Object)new_AST_Send((Object)send31055, (Object)SMB__equal, 1, (Object)constant6012);
// expression
send31057 = (Object)new_AST_Send((Object)localvariable4354, (Object)symbol5427, 0);
// class
send31058 = (Object)new_AST_Send((Object)send31057, (Object)SMB_class, 0);
// should
send31059 = (Object)new_AST_Send((Object)send31058, (Object)symbol5591, 0);
// =
send31060 = (Object)new_AST_Send((Object)send31059, (Object)SMB__equal, 1, (Object)classreference835);
method4319 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3474, 30, assign3746, assign3747, assign3748, send30983, send30987, send30991, assign3749, send30995, send30999, send31003, assign3750, send31007, send31011, send31015, send31019, assign3751, assign3752, send31024, send31028, send31032, assign3753, send31036, send31040, send31044, assign3754, send31048, send31052, send31056, send31060, Self);
symbol5256 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure4319 = (Object)new_Runtime_MethodClosure(method4319);
store_method((Type_Class)class735, (Type_Symbol)symbol5256, (Runtime_MethodClosure)methodclosure4319);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable4355 = (Object)new_AST_Variable_named(L"parser");
localvariable4356 = (Object)new_AST_Variable_named(L"string");
array3475 = (Object)new_Type_Array_with(2, (Object)localvariable4355, (Object)localvariable4356);
// identifier
send31061 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5616, 0);
assign3755 = (Object)new_AST_Assign((Object)localvariable4355, (Object)send31061);
string3595 = (Object)new_Type_String(L"abcd ");
constant6013 = (Object)new_AST_Constant((Object)string3595);
// on:
send31062 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6013);
assign3756 = (Object)new_AST_Assign((Object)localvariable4356, (Object)send31062);
// match:
send31063 = (Object)new_AST_Send((Object)localvariable4355, (Object)symbol5516, 1, (Object)localvariable4356);
// should
send31064 = (Object)new_AST_Send((Object)send31063, (Object)symbol5591, 0);
string3596 = (Object)new_Type_String(L"abcd");
constant6014 = (Object)new_AST_Constant((Object)string3596);
// =
send31065 = (Object)new_AST_Send((Object)send31064, (Object)SMB__equal, 1, (Object)constant6014);
// position
send31066 = (Object)new_AST_Send((Object)localvariable4356, (Object)symbol5565, 0);
// should
send31067 = (Object)new_AST_Send((Object)send31066, (Object)symbol5591, 0);
smallint2080 = (Object)new_Type_SmallInt(4);
constant6015 = (Object)new_AST_Constant((Object)smallint2080);
// =
send31068 = (Object)new_AST_Send((Object)send31067, (Object)SMB__equal, 1, (Object)constant6015);
string3597 = (Object)new_Type_String(L"AbCd145 ");
constant6016 = (Object)new_AST_Constant((Object)string3597);
// on:
send31069 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6016);
assign3757 = (Object)new_AST_Assign((Object)localvariable4356, (Object)send31069);
// match:
send31070 = (Object)new_AST_Send((Object)localvariable4355, (Object)symbol5516, 1, (Object)localvariable4356);
// should
send31071 = (Object)new_AST_Send((Object)send31070, (Object)symbol5591, 0);
string3598 = (Object)new_Type_String(L"AbCd145");
constant6017 = (Object)new_AST_Constant((Object)string3598);
// =
send31072 = (Object)new_AST_Send((Object)send31071, (Object)SMB__equal, 1, (Object)constant6017);
// position
send31073 = (Object)new_AST_Send((Object)localvariable4356, (Object)symbol5565, 0);
// should
send31074 = (Object)new_AST_Send((Object)send31073, (Object)symbol5591, 0);
smallint2081 = (Object)new_Type_SmallInt(7);
constant6018 = (Object)new_AST_Constant((Object)smallint2081);
// =
send31075 = (Object)new_AST_Send((Object)send31074, (Object)SMB__equal, 1, (Object)constant6018);
string3599 = (Object)new_Type_String(L"1a");
constant6019 = (Object)new_AST_Constant((Object)string3599);
// on:
send31076 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6019);
assign3758 = (Object)new_AST_Assign((Object)localvariable4356, (Object)send31076);
// match:
send31077 = (Object)new_AST_Send((Object)localvariable4355, (Object)symbol5516, 1, (Object)localvariable4356);
// should
send31078 = (Object)new_AST_Send((Object)send31077, (Object)symbol5591, 0);
// be
send31079 = (Object)new_AST_Send((Object)send31078, (Object)symbol5660, 0);
// isNil
send31080 = (Object)new_AST_Send((Object)send31079, (Object)SMB_isNil, 0);
// position
send31081 = (Object)new_AST_Send((Object)localvariable4356, (Object)symbol5565, 0);
// should
send31082 = (Object)new_AST_Send((Object)send31081, (Object)symbol5591, 0);
smallint2082 = (Object)new_Type_SmallInt(0);
constant6020 = (Object)new_AST_Constant((Object)smallint2082);
// =
send31083 = (Object)new_AST_Send((Object)send31082, (Object)SMB__equal, 1, (Object)constant6020);
method4320 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3475, 11, assign3755, assign3756, send31065, send31068, assign3757, send31072, send31075, assign3758, send31080, send31083, Self);
symbol5248 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure4320 = (Object)new_Runtime_MethodClosure(method4320);
store_method((Type_Class)class735, (Type_Symbol)symbol5248, (Runtime_MethodClosure)methodclosure4320);


// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable4357 = (Object)new_AST_Variable_named(L"parser");
localvariable4358 = (Object)new_AST_Variable_named(L"string");
array3476 = (Object)new_Type_Array_with(2, (Object)localvariable4357, (Object)localvariable4358);
// assignmentExpressions
send31084 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5608, 0);
assign3759 = (Object)new_AST_Assign((Object)localvariable4357, (Object)send31084);
string3600 = (Object)new_Type_String(L"a :=  b:= c := d");
constant6021 = (Object)new_AST_Constant((Object)string3600);
// on:
send31085 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6021);
assign3760 = (Object)new_AST_Assign((Object)localvariable4358, (Object)send31085);
// match:
send31086 = (Object)new_AST_Send((Object)localvariable4357, (Object)symbol5516, 1, (Object)localvariable4358);
constant6022 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send31087 = (Object)new_AST_Send((Object)send31086, (Object)symbol5615, 1, (Object)constant6022);
// asArray
send31088 = (Object)new_AST_Send((Object)send31087, (Object)SMB_asArray, 0);
// should
send31089 = (Object)new_AST_Send((Object)send31088, (Object)symbol5591, 0);
localvariable4359 = (Object)new_AST_Variable_named(L"receiver");
array3477 = (Object)new_Type_Array_with(1, (Object)localvariable4359);
smallint2083 = (Object)new_Type_SmallInt(1);
constant6023 = (Object)new_AST_Constant((Object)smallint2083);
string3601 = (Object)new_Type_String(L"a");
constant6024 = (Object)new_AST_Constant((Object)string3601);
// at:put:
send31090 = (Object)new_AST_Send((Object)localvariable4359, (Object)SMB_at_put_, 2, (Object)constant6023, (Object)constant6024);
smallint2084 = (Object)new_Type_SmallInt(2);
constant6025 = (Object)new_AST_Constant((Object)smallint2084);
string3602 = (Object)new_Type_String(L"b");
constant6026 = (Object)new_AST_Constant((Object)string3602);
// at:put:
send31091 = (Object)new_AST_Send((Object)localvariable4359, (Object)SMB_at_put_, 2, (Object)constant6025, (Object)constant6026);
smallint2085 = (Object)new_Type_SmallInt(3);
constant6027 = (Object)new_AST_Constant((Object)smallint2085);
string3603 = (Object)new_Type_String(L"c");
constant6028 = (Object)new_AST_Constant((Object)string3603);
// at:put:
send31092 = (Object)new_AST_Send((Object)localvariable4359, (Object)SMB_at_put_, 2, (Object)constant6027, (Object)constant6028);
// yourself
send31093 = (Object)new_AST_Send((Object)localvariable4359, (Object)symbol5216, 0);
block2005 = (Object)new_AST_Block_with((Type_Array)array3477, (Type_Array)empty_Type_Array, 1, 4, send31090, send31091, send31092, send31093);
smallint2086 = (Object)new_Type_SmallInt(3);
constant6029 = (Object)new_AST_Constant((Object)smallint2086);
// new:
send31094 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6029);
// value:
send31095 = (Object)new_AST_Send((Object)block2005, (Object)SMB_value_, 1, (Object)send31094);
// =
send31096 = (Object)new_AST_Send((Object)send31089, (Object)SMB__equal, 1, (Object)send31095);
// position
send31097 = (Object)new_AST_Send((Object)localvariable4358, (Object)symbol5565, 0);
// should
send31098 = (Object)new_AST_Send((Object)send31097, (Object)symbol5591, 0);
smallint2087 = (Object)new_Type_SmallInt(15);
constant6030 = (Object)new_AST_Constant((Object)smallint2087);
// =
send31099 = (Object)new_AST_Send((Object)send31098, (Object)SMB__equal, 1, (Object)constant6030);
string3604 = (Object)new_Type_String(L"");
constant6031 = (Object)new_AST_Constant((Object)string3604);
// on:
send31100 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6031);
assign3761 = (Object)new_AST_Assign((Object)localvariable4358, (Object)send31100);
// match:
send31101 = (Object)new_AST_Send((Object)localvariable4357, (Object)symbol5516, 1, (Object)localvariable4358);
// should
send31102 = (Object)new_AST_Send((Object)send31101, (Object)symbol5591, 0);
// not
send31103 = (Object)new_AST_Send((Object)send31102, (Object)SMB_not, 0);
// be
send31104 = (Object)new_AST_Send((Object)send31103, (Object)symbol5660, 0);
// isNil
send31105 = (Object)new_AST_Send((Object)send31104, (Object)SMB_isNil, 0);
method4321 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3476, 7, assign3759, assign3760, send31096, send31099, assign3761, send31105, Self);
symbol5284 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure4321 = (Object)new_Runtime_MethodClosure(method4321);
store_method((Type_Class)class735, (Type_Symbol)symbol5284, (Runtime_MethodClosure)methodclosure4321);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable4360 = (Object)new_AST_Variable_named(L"parser");
localvariable4361 = (Object)new_AST_Variable_named(L"string");
array3478 = (Object)new_Type_Array_with(2, (Object)localvariable4360, (Object)localvariable4361);
// string
send31106 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5389, 0);
assign3762 = (Object)new_AST_Assign((Object)localvariable4360, (Object)send31106);
string3605 = (Object)new_Type_String(L"");
constant6032 = (Object)new_AST_Constant((Object)string3605);
// on:
send31107 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6032);
assign3763 = (Object)new_AST_Assign((Object)localvariable4361, (Object)send31107);
// match:
send31108 = (Object)new_AST_Send((Object)localvariable4360, (Object)symbol5516, 1, (Object)localvariable4361);
// should
send31109 = (Object)new_AST_Send((Object)send31108, (Object)symbol5591, 0);
// be
send31110 = (Object)new_AST_Send((Object)send31109, (Object)symbol5660, 0);
// isNil
send31111 = (Object)new_AST_Send((Object)send31110, (Object)SMB_isNil, 0);
// position
send31112 = (Object)new_AST_Send((Object)localvariable4361, (Object)symbol5565, 0);
// should
send31113 = (Object)new_AST_Send((Object)send31112, (Object)symbol5591, 0);
smallint2088 = (Object)new_Type_SmallInt(0);
constant6033 = (Object)new_AST_Constant((Object)smallint2088);
// =
send31114 = (Object)new_AST_Send((Object)send31113, (Object)SMB__equal, 1, (Object)constant6033);
string3606 = (Object)new_Type_String(L"\'abc\'");
constant6034 = (Object)new_AST_Constant((Object)string3606);
// on:
send31115 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6034);
assign3764 = (Object)new_AST_Assign((Object)localvariable4361, (Object)send31115);
// match:
send31116 = (Object)new_AST_Send((Object)localvariable4360, (Object)symbol5516, 1, (Object)localvariable4361);
// should
send31117 = (Object)new_AST_Send((Object)send31116, (Object)symbol5591, 0);
string3607 = (Object)new_Type_String(L"abc");
constant6035 = (Object)new_AST_Constant((Object)string3607);
// =
send31118 = (Object)new_AST_Send((Object)send31117, (Object)SMB__equal, 1, (Object)constant6035);
// position
send31119 = (Object)new_AST_Send((Object)localvariable4361, (Object)symbol5565, 0);
// should
send31120 = (Object)new_AST_Send((Object)send31119, (Object)symbol5591, 0);
smallint2089 = (Object)new_Type_SmallInt(5);
constant6036 = (Object)new_AST_Constant((Object)smallint2089);
// =
send31121 = (Object)new_AST_Send((Object)send31120, (Object)SMB__equal, 1, (Object)constant6036);
string3608 = (Object)new_Type_String(L"\'abc\'\'");
constant6037 = (Object)new_AST_Constant((Object)string3608);
// on:
send31122 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6037);
assign3765 = (Object)new_AST_Assign((Object)localvariable4361, (Object)send31122);
// match:
send31123 = (Object)new_AST_Send((Object)localvariable4360, (Object)symbol5516, 1, (Object)localvariable4361);
// should
send31124 = (Object)new_AST_Send((Object)send31123, (Object)symbol5591, 0);
string3609 = (Object)new_Type_String(L"abc");
constant6038 = (Object)new_AST_Constant((Object)string3609);
// =
send31125 = (Object)new_AST_Send((Object)send31124, (Object)SMB__equal, 1, (Object)constant6038);
// position
send31126 = (Object)new_AST_Send((Object)localvariable4361, (Object)symbol5565, 0);
// should
send31127 = (Object)new_AST_Send((Object)send31126, (Object)symbol5591, 0);
smallint2090 = (Object)new_Type_SmallInt(5);
constant6039 = (Object)new_AST_Constant((Object)smallint2090);
// =
send31128 = (Object)new_AST_Send((Object)send31127, (Object)SMB__equal, 1, (Object)constant6039);
string3610 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant6040 = (Object)new_AST_Constant((Object)string3610);
// on:
send31129 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6040);
assign3766 = (Object)new_AST_Assign((Object)localvariable4361, (Object)send31129);
// match:
send31130 = (Object)new_AST_Send((Object)localvariable4360, (Object)symbol5516, 1, (Object)localvariable4361);
// should
send31131 = (Object)new_AST_Send((Object)send31130, (Object)symbol5591, 0);
string3611 = (Object)new_Type_String(L"abc\'d");
constant6041 = (Object)new_AST_Constant((Object)string3611);
// =
send31132 = (Object)new_AST_Send((Object)send31131, (Object)SMB__equal, 1, (Object)constant6041);
// position
send31133 = (Object)new_AST_Send((Object)localvariable4361, (Object)symbol5565, 0);
// should
send31134 = (Object)new_AST_Send((Object)send31133, (Object)symbol5591, 0);
smallint2091 = (Object)new_Type_SmallInt(8);
constant6042 = (Object)new_AST_Constant((Object)smallint2091);
// =
send31135 = (Object)new_AST_Send((Object)send31134, (Object)SMB__equal, 1, (Object)constant6042);
method4322 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3478, 14, assign3762, assign3763, send31111, send31114, assign3764, send31118, send31121, assign3765, send31125, send31128, assign3766, send31132, send31135, Self);
symbol5268 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure4322 = (Object)new_Runtime_MethodClosure(method4322);
store_method((Type_Class)class735, (Type_Symbol)symbol5268, (Runtime_MethodClosure)methodclosure4322);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable4362 = (Object)new_AST_Variable_named(L"parser");
localvariable4363 = (Object)new_AST_Variable_named(L"string");
localvariable4364 = (Object)new_AST_Variable_named(L"result");
array3479 = (Object)new_Type_Array_with(3, (Object)localvariable4362, (Object)localvariable4363, (Object)localvariable4364);
// characterConstant
send31136 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5639, 0);
assign3767 = (Object)new_AST_Assign((Object)localvariable4362, (Object)send31136);
string3612 = (Object)new_Type_String(L"a");
constant6043 = (Object)new_AST_Constant((Object)string3612);
// on:
send31137 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6043);
assign3768 = (Object)new_AST_Assign((Object)localvariable4363, (Object)send31137);
// match:
send31138 = (Object)new_AST_Send((Object)localvariable4362, (Object)symbol5516, 1, (Object)localvariable4363);
// should
send31139 = (Object)new_AST_Send((Object)send31138, (Object)symbol5591, 0);
// be
send31140 = (Object)new_AST_Send((Object)send31139, (Object)symbol5660, 0);
// isNil
send31141 = (Object)new_AST_Send((Object)send31140, (Object)SMB_isNil, 0);
// position
send31142 = (Object)new_AST_Send((Object)localvariable4363, (Object)symbol5565, 0);
// should
send31143 = (Object)new_AST_Send((Object)send31142, (Object)symbol5591, 0);
smallint2092 = (Object)new_Type_SmallInt(0);
constant6044 = (Object)new_AST_Constant((Object)smallint2092);
// =
send31144 = (Object)new_AST_Send((Object)send31143, (Object)SMB__equal, 1, (Object)constant6044);
string3613 = (Object)new_Type_String(L"$_");
constant6045 = (Object)new_AST_Constant((Object)string3613);
// on:
send31145 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6045);
assign3769 = (Object)new_AST_Assign((Object)localvariable4363, (Object)send31145);
// match:
send31146 = (Object)new_AST_Send((Object)localvariable4362, (Object)symbol5516, 1, (Object)localvariable4363);
assign3770 = (Object)new_AST_Assign((Object)localvariable4364, (Object)send31146);
// class
send31147 = (Object)new_AST_Send((Object)localvariable4364, (Object)SMB_class, 0);
// should
send31148 = (Object)new_AST_Send((Object)send31147, (Object)symbol5591, 0);
// =
send31149 = (Object)new_AST_Send((Object)send31148, (Object)SMB__equal, 1, (Object)classreference825);
// char
send31150 = (Object)new_AST_Send((Object)localvariable4364, (Object)symbol5531, 0);
// should
send31151 = (Object)new_AST_Send((Object)send31150, (Object)symbol5591, 0);
character21 = (Object)new_Type_Character(L'_');
constant6046 = (Object)new_AST_Constant((Object)character21);
// =
send31152 = (Object)new_AST_Send((Object)send31151, (Object)SMB__equal, 1, (Object)constant6046);
// position
send31153 = (Object)new_AST_Send((Object)localvariable4363, (Object)symbol5565, 0);
// should
send31154 = (Object)new_AST_Send((Object)send31153, (Object)symbol5591, 0);
smallint2093 = (Object)new_Type_SmallInt(2);
constant6047 = (Object)new_AST_Constant((Object)smallint2093);
// =
send31155 = (Object)new_AST_Send((Object)send31154, (Object)SMB__equal, 1, (Object)constant6047);
method4323 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3479, 10, assign3767, assign3768, send31141, send31144, assign3769, assign3770, send31149, send31152, send31155, Self);
symbol5296 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure4323 = (Object)new_Runtime_MethodClosure(method4323);
store_method((Type_Class)class735, (Type_Symbol)symbol5296, (Runtime_MethodClosure)methodclosure4323);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable4365 = (Object)new_AST_Variable_named(L"parser");
localvariable4366 = (Object)new_AST_Variable_named(L"string");
localvariable4367 = (Object)new_AST_Variable_named(L"result");
array3480 = (Object)new_Type_Array_with(3, (Object)localvariable4365, (Object)localvariable4366, (Object)localvariable4367);
// stringConstant
send31156 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5636, 0);
assign3771 = (Object)new_AST_Assign((Object)localvariable4365, (Object)send31156);
string3614 = (Object)new_Type_String(L"\'abc\'");
constant6048 = (Object)new_AST_Constant((Object)string3614);
// on:
send31157 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6048);
assign3772 = (Object)new_AST_Assign((Object)localvariable4366, (Object)send31157);
// match:
send31158 = (Object)new_AST_Send((Object)localvariable4365, (Object)symbol5516, 1, (Object)localvariable4366);
assign3773 = (Object)new_AST_Assign((Object)localvariable4367, (Object)send31158);
// class
send31159 = (Object)new_AST_Send((Object)localvariable4367, (Object)SMB_class, 0);
// should
send31160 = (Object)new_AST_Send((Object)send31159, (Object)symbol5591, 0);
// =
send31161 = (Object)new_AST_Send((Object)send31160, (Object)SMB__equal, 1, (Object)classreference834);
// string
send31162 = (Object)new_AST_Send((Object)localvariable4367, (Object)symbol5389, 0);
// should
send31163 = (Object)new_AST_Send((Object)send31162, (Object)symbol5591, 0);
string3615 = (Object)new_Type_String(L"abc");
constant6049 = (Object)new_AST_Constant((Object)string3615);
// =
send31164 = (Object)new_AST_Send((Object)send31163, (Object)SMB__equal, 1, (Object)constant6049);
// position
send31165 = (Object)new_AST_Send((Object)localvariable4366, (Object)symbol5565, 0);
// should
send31166 = (Object)new_AST_Send((Object)send31165, (Object)symbol5591, 0);
smallint2094 = (Object)new_Type_SmallInt(5);
constant6050 = (Object)new_AST_Constant((Object)smallint2094);
// =
send31167 = (Object)new_AST_Send((Object)send31166, (Object)SMB__equal, 1, (Object)constant6050);
string3616 = (Object)new_Type_String(L"\'abc\'\'");
constant6051 = (Object)new_AST_Constant((Object)string3616);
// on:
send31168 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6051);
assign3774 = (Object)new_AST_Assign((Object)localvariable4366, (Object)send31168);
// match:
send31169 = (Object)new_AST_Send((Object)localvariable4365, (Object)symbol5516, 1, (Object)localvariable4366);
assign3775 = (Object)new_AST_Assign((Object)localvariable4367, (Object)send31169);
// class
send31170 = (Object)new_AST_Send((Object)localvariable4367, (Object)SMB_class, 0);
// should
send31171 = (Object)new_AST_Send((Object)send31170, (Object)symbol5591, 0);
// =
send31172 = (Object)new_AST_Send((Object)send31171, (Object)SMB__equal, 1, (Object)classreference834);
// string
send31173 = (Object)new_AST_Send((Object)localvariable4367, (Object)symbol5389, 0);
// should
send31174 = (Object)new_AST_Send((Object)send31173, (Object)symbol5591, 0);
string3617 = (Object)new_Type_String(L"abc");
constant6052 = (Object)new_AST_Constant((Object)string3617);
// =
send31175 = (Object)new_AST_Send((Object)send31174, (Object)SMB__equal, 1, (Object)constant6052);
// position
send31176 = (Object)new_AST_Send((Object)localvariable4366, (Object)symbol5565, 0);
// should
send31177 = (Object)new_AST_Send((Object)send31176, (Object)symbol5591, 0);
smallint2095 = (Object)new_Type_SmallInt(5);
constant6053 = (Object)new_AST_Constant((Object)smallint2095);
// =
send31178 = (Object)new_AST_Send((Object)send31177, (Object)SMB__equal, 1, (Object)constant6053);
string3618 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant6054 = (Object)new_AST_Constant((Object)string3618);
// on:
send31179 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6054);
assign3776 = (Object)new_AST_Assign((Object)localvariable4366, (Object)send31179);
// match:
send31180 = (Object)new_AST_Send((Object)localvariable4365, (Object)symbol5516, 1, (Object)localvariable4366);
assign3777 = (Object)new_AST_Assign((Object)localvariable4367, (Object)send31180);
// class
send31181 = (Object)new_AST_Send((Object)localvariable4367, (Object)SMB_class, 0);
// should
send31182 = (Object)new_AST_Send((Object)send31181, (Object)symbol5591, 0);
// =
send31183 = (Object)new_AST_Send((Object)send31182, (Object)SMB__equal, 1, (Object)classreference834);
// string
send31184 = (Object)new_AST_Send((Object)localvariable4367, (Object)symbol5389, 0);
// should
send31185 = (Object)new_AST_Send((Object)send31184, (Object)symbol5591, 0);
string3619 = (Object)new_Type_String(L"abc\'d");
constant6055 = (Object)new_AST_Constant((Object)string3619);
// =
send31186 = (Object)new_AST_Send((Object)send31185, (Object)SMB__equal, 1, (Object)constant6055);
// position
send31187 = (Object)new_AST_Send((Object)localvariable4366, (Object)symbol5565, 0);
// should
send31188 = (Object)new_AST_Send((Object)send31187, (Object)symbol5591, 0);
smallint2096 = (Object)new_Type_SmallInt(8);
constant6056 = (Object)new_AST_Constant((Object)smallint2096);
// =
send31189 = (Object)new_AST_Send((Object)send31188, (Object)SMB__equal, 1, (Object)constant6056);
method4324 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3480, 17, assign3771, assign3772, assign3773, send31161, send31164, send31167, assign3774, assign3775, send31172, send31175, send31178, assign3776, assign3777, send31183, send31186, send31189, Self);
symbol5241 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure4324 = (Object)new_Runtime_MethodClosure(method4324);
store_method((Type_Class)class735, (Type_Symbol)symbol5241, (Runtime_MethodClosure)methodclosure4324);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable4368 = (Object)new_AST_Variable_named(L"parser");
localvariable4369 = (Object)new_AST_Variable_named(L"string");
localvariable4370 = (Object)new_AST_Variable_named(L"result");
array3481 = (Object)new_Type_Array_with(3, (Object)localvariable4368, (Object)localvariable4369, (Object)localvariable4370);
// method
send31190 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5659, 0);
assign3778 = (Object)new_AST_Assign((Object)localvariable4368, (Object)send31190);
string3620 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant6057 = (Object)new_AST_Constant((Object)string3620);
assign3779 = (Object)new_AST_Assign((Object)localvariable4369, (Object)constant6057);
// parse:
send31191 = (Object)new_AST_Send((Object)localvariable4368, (Object)symbol5528, 1, (Object)localvariable4369);
assign3780 = (Object)new_AST_Assign((Object)localvariable4370, (Object)send31191);
// hasReturnExpression
send31192 = (Object)new_AST_Send((Object)localvariable4370, (Object)symbol5357, 0);
// should
send31193 = (Object)new_AST_Send((Object)send31192, (Object)symbol5591, 0);
// be
send31194 = (Object)new_AST_Send((Object)send31193, (Object)symbol5660, 0);
// true
send31195 = (Object)new_AST_Send((Object)send31194, (Object)symbol5661, 0);
// class
send31196 = (Object)new_AST_Send((Object)localvariable4370, (Object)SMB_class, 0);
// should
send31197 = (Object)new_AST_Send((Object)send31196, (Object)symbol5591, 0);
// =
send31198 = (Object)new_AST_Send((Object)send31197, (Object)SMB__equal, 1, (Object)classreference842);
// message
send31199 = (Object)new_AST_Send((Object)localvariable4370, (Object)symbol5418, 0);
// class
send31200 = (Object)new_AST_Send((Object)send31199, (Object)SMB_class, 0);
// should
send31201 = (Object)new_AST_Send((Object)send31200, (Object)symbol5591, 0);
// =
send31202 = (Object)new_AST_Send((Object)send31201, (Object)SMB__equal, 1, (Object)classreference812);
// temporaries
send31203 = (Object)new_AST_Send((Object)localvariable4370, (Object)symbol5419, 0);
// size
send31204 = (Object)new_AST_Send((Object)send31203, (Object)SMB_size, 0);
// should
send31205 = (Object)new_AST_Send((Object)send31204, (Object)symbol5591, 0);
smallint2097 = (Object)new_Type_SmallInt(3);
constant6058 = (Object)new_AST_Constant((Object)smallint2097);
// =
send31206 = (Object)new_AST_Send((Object)send31205, (Object)SMB__equal, 1, (Object)constant6058);
// annotations
send31207 = (Object)new_AST_Send((Object)localvariable4370, (Object)symbol5416, 0);
// size
send31208 = (Object)new_AST_Send((Object)send31207, (Object)SMB_size, 0);
// should
send31209 = (Object)new_AST_Send((Object)send31208, (Object)symbol5591, 0);
smallint2098 = (Object)new_Type_SmallInt(3);
constant6059 = (Object)new_AST_Constant((Object)smallint2098);
// =
send31210 = (Object)new_AST_Send((Object)send31209, (Object)SMB__equal, 1, (Object)constant6059);
// statements
send31211 = (Object)new_AST_Send((Object)localvariable4370, (Object)symbol5415, 0);
// size
send31212 = (Object)new_AST_Send((Object)send31211, (Object)SMB_size, 0);
// should
send31213 = (Object)new_AST_Send((Object)send31212, (Object)symbol5591, 0);
smallint2099 = (Object)new_Type_SmallInt(2);
constant6060 = (Object)new_AST_Constant((Object)smallint2099);
// =
send31214 = (Object)new_AST_Send((Object)send31213, (Object)SMB__equal, 1, (Object)constant6060);
method4325 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3481, 10, assign3778, assign3779, assign3780, send31195, send31198, send31202, send31206, send31210, send31214, Self);
symbol5261 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure4325 = (Object)new_Runtime_MethodClosure(method4325);
store_method((Type_Class)class735, (Type_Symbol)symbol5261, (Runtime_MethodClosure)methodclosure4325);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable4371 = (Object)new_AST_Variable_named(L"parser");
localvariable4372 = (Object)new_AST_Variable_named(L"string");
localvariable4373 = (Object)new_AST_Variable_named(L"result");
array3482 = (Object)new_Type_Array_with(3, (Object)localvariable4371, (Object)localvariable4372, (Object)localvariable4373);
// unaryObjectDescription
send31215 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5613, 0);
assign3781 = (Object)new_AST_Assign((Object)localvariable4371, (Object)send31215);
string3621 = (Object)new_Type_String(L"abc def ghi ");
constant6061 = (Object)new_AST_Constant((Object)string3621);
// on:
send31216 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6061);
assign3782 = (Object)new_AST_Assign((Object)localvariable4372, (Object)send31216);
// match:
send31217 = (Object)new_AST_Send((Object)localvariable4371, (Object)symbol5516, 1, (Object)localvariable4372);
assign3783 = (Object)new_AST_Assign((Object)localvariable4373, (Object)send31217);
// class
send31218 = (Object)new_AST_Send((Object)localvariable4373, (Object)SMB_class, 0);
// should
send31219 = (Object)new_AST_Send((Object)send31218, (Object)symbol5591, 0);
// =
send31220 = (Object)new_AST_Send((Object)send31219, (Object)SMB__equal, 1, (Object)classreference839);
// selector
send31221 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5324, 0);
// class
send31222 = (Object)new_AST_Send((Object)send31221, (Object)SMB_class, 0);
// should
send31223 = (Object)new_AST_Send((Object)send31222, (Object)symbol5591, 0);
// =
send31224 = (Object)new_AST_Send((Object)send31223, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send31225 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5324, 0);
// selector
send31226 = (Object)new_AST_Send((Object)send31225, (Object)symbol5324, 0);
// printString
send31227 = (Object)new_AST_Send((Object)send31226, (Object)symbol5519, 0);
// should
send31228 = (Object)new_AST_Send((Object)send31227, (Object)symbol5591, 0);
string3622 = (Object)new_Type_String(L"ghi");
constant6062 = (Object)new_AST_Constant((Object)string3622);
// =
send31229 = (Object)new_AST_Send((Object)send31228, (Object)SMB__equal, 1, (Object)constant6062);
// receiver
send31230 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5400, 0);
assign3784 = (Object)new_AST_Assign((Object)localvariable4373, (Object)send31230);
// class
send31231 = (Object)new_AST_Send((Object)localvariable4373, (Object)SMB_class, 0);
// should
send31232 = (Object)new_AST_Send((Object)send31231, (Object)symbol5591, 0);
// =
send31233 = (Object)new_AST_Send((Object)send31232, (Object)SMB__equal, 1, (Object)classreference839);
// selector
send31234 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5324, 0);
// class
send31235 = (Object)new_AST_Send((Object)send31234, (Object)SMB_class, 0);
// should
send31236 = (Object)new_AST_Send((Object)send31235, (Object)symbol5591, 0);
// =
send31237 = (Object)new_AST_Send((Object)send31236, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send31238 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5324, 0);
// selector
send31239 = (Object)new_AST_Send((Object)send31238, (Object)symbol5324, 0);
// printString
send31240 = (Object)new_AST_Send((Object)send31239, (Object)symbol5519, 0);
// should
send31241 = (Object)new_AST_Send((Object)send31240, (Object)symbol5591, 0);
string3623 = (Object)new_Type_String(L"def");
constant6063 = (Object)new_AST_Constant((Object)string3623);
// =
send31242 = (Object)new_AST_Send((Object)send31241, (Object)SMB__equal, 1, (Object)constant6063);
// receiver
send31243 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5400, 0);
// class
send31244 = (Object)new_AST_Send((Object)send31243, (Object)SMB_class, 0);
// should
send31245 = (Object)new_AST_Send((Object)send31244, (Object)symbol5591, 0);
// =
send31246 = (Object)new_AST_Send((Object)send31245, (Object)SMB__equal, 1, (Object)classreference818);
// receiver
send31247 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5400, 0);
// name
send31248 = (Object)new_AST_Send((Object)send31247, (Object)SMB_name, 0);
// should
send31249 = (Object)new_AST_Send((Object)send31248, (Object)symbol5591, 0);
string3624 = (Object)new_Type_String(L"abc");
constant6064 = (Object)new_AST_Constant((Object)string3624);
// =
send31250 = (Object)new_AST_Send((Object)send31249, (Object)SMB__equal, 1, (Object)constant6064);
// position
send31251 = (Object)new_AST_Send((Object)localvariable4372, (Object)symbol5565, 0);
// should
send31252 = (Object)new_AST_Send((Object)send31251, (Object)symbol5591, 0);
smallint2100 = (Object)new_Type_SmallInt(12);
constant6065 = (Object)new_AST_Constant((Object)smallint2100);
// =
send31253 = (Object)new_AST_Send((Object)send31252, (Object)SMB__equal, 1, (Object)constant6065);
string3625 = (Object)new_Type_String(L"3");
constant6066 = (Object)new_AST_Constant((Object)string3625);
// on:
send31254 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6066);
assign3785 = (Object)new_AST_Assign((Object)localvariable4372, (Object)send31254);
// match:
send31255 = (Object)new_AST_Send((Object)localvariable4371, (Object)symbol5516, 1, (Object)localvariable4372);
assign3786 = (Object)new_AST_Assign((Object)localvariable4373, (Object)send31255);
// class
send31256 = (Object)new_AST_Send((Object)localvariable4373, (Object)SMB_class, 0);
// should
send31257 = (Object)new_AST_Send((Object)send31256, (Object)symbol5591, 0);
// =
send31258 = (Object)new_AST_Send((Object)send31257, (Object)SMB__equal, 1, (Object)classreference823);
// number
send31259 = (Object)new_AST_Send((Object)localvariable4373, (Object)symbol5380, 0);
// should
send31260 = (Object)new_AST_Send((Object)send31259, (Object)symbol5591, 0);
string3626 = (Object)new_Type_String(L"3");
constant6067 = (Object)new_AST_Constant((Object)string3626);
// =
send31261 = (Object)new_AST_Send((Object)send31260, (Object)SMB__equal, 1, (Object)constant6067);
// position
send31262 = (Object)new_AST_Send((Object)localvariable4372, (Object)symbol5565, 0);
// should
send31263 = (Object)new_AST_Send((Object)send31262, (Object)symbol5591, 0);
smallint2101 = (Object)new_Type_SmallInt(1);
constant6068 = (Object)new_AST_Constant((Object)smallint2101);
// =
send31264 = (Object)new_AST_Send((Object)send31263, (Object)SMB__equal, 1, (Object)constant6068);
method4326 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3482, 19, assign3781, assign3782, assign3783, send31220, send31224, send31229, assign3784, send31233, send31237, send31242, send31246, send31250, send31253, assign3785, assign3786, send31258, send31261, send31264, Self);
symbol5258 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure4326 = (Object)new_Runtime_MethodClosure(method4326);
store_method((Type_Class)class735, (Type_Symbol)symbol5258, (Runtime_MethodClosure)methodclosure4326);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable4374 = (Object)new_AST_Variable_named(L"parser");
localvariable4375 = (Object)new_AST_Variable_named(L"string");
localvariable4376 = (Object)new_AST_Variable_named(L"result");
localvariable4377 = (Object)new_AST_Variable_named(L"arg");
array3483 = (Object)new_Type_Array_with(4, (Object)localvariable4374, (Object)localvariable4375, (Object)localvariable4376, (Object)localvariable4377);
// annotation
send31265 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5645, 0);
assign3787 = (Object)new_AST_Assign((Object)localvariable4374, (Object)send31265);
string3627 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant6069 = (Object)new_AST_Constant((Object)string3627);
// on:
send31266 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6069);
assign3788 = (Object)new_AST_Assign((Object)localvariable4375, (Object)send31266);
// match:
send31267 = (Object)new_AST_Send((Object)localvariable4374, (Object)symbol5516, 1, (Object)localvariable4375);
assign3789 = (Object)new_AST_Assign((Object)localvariable4376, (Object)send31267);
// class
send31268 = (Object)new_AST_Send((Object)localvariable4376, (Object)SMB_class, 0);
// should
send31269 = (Object)new_AST_Send((Object)send31268, (Object)symbol5591, 0);
// =
send31270 = (Object)new_AST_Send((Object)send31269, (Object)SMB__equal, 1, (Object)classreference826);
// keywords
send31271 = (Object)new_AST_Send((Object)localvariable4376, (Object)symbol5410, 0);
// asArray
send31272 = (Object)new_AST_Send((Object)send31271, (Object)SMB_asArray, 0);
constant6070 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send31273 = (Object)new_AST_Send((Object)send31272, (Object)symbol5615, 1, (Object)constant6070);
// should
send31274 = (Object)new_AST_Send((Object)send31273, (Object)symbol5591, 0);
localvariable4378 = (Object)new_AST_Variable_named(L"receiver");
array3484 = (Object)new_Type_Array_with(1, (Object)localvariable4378);
smallint2102 = (Object)new_Type_SmallInt(1);
constant6071 = (Object)new_AST_Constant((Object)smallint2102);
symbol5662 = (Object)new_Type_Symbol_cached(L"abc");
constant6072 = (Object)new_AST_Constant((Object)symbol5662);
// at:put:
send31275 = (Object)new_AST_Send((Object)localvariable4378, (Object)SMB_at_put_, 2, (Object)constant6071, (Object)constant6072);
smallint2103 = (Object)new_Type_SmallInt(2);
constant6073 = (Object)new_AST_Constant((Object)smallint2103);
symbol5663 = (Object)new_Type_Symbol_cached(L"def");
constant6074 = (Object)new_AST_Constant((Object)symbol5663);
// at:put:
send31276 = (Object)new_AST_Send((Object)localvariable4378, (Object)SMB_at_put_, 2, (Object)constant6073, (Object)constant6074);
smallint2104 = (Object)new_Type_SmallInt(3);
constant6075 = (Object)new_AST_Constant((Object)smallint2104);
symbol5664 = (Object)new_Type_Symbol_cached(L"ghi");
constant6076 = (Object)new_AST_Constant((Object)symbol5664);
// at:put:
send31277 = (Object)new_AST_Send((Object)localvariable4378, (Object)SMB_at_put_, 2, (Object)constant6075, (Object)constant6076);
// yourself
send31278 = (Object)new_AST_Send((Object)localvariable4378, (Object)symbol5216, 0);
block2006 = (Object)new_AST_Block_with((Type_Array)array3484, (Type_Array)empty_Type_Array, 1, 4, send31275, send31276, send31277, send31278);
smallint2105 = (Object)new_Type_SmallInt(3);
constant6077 = (Object)new_AST_Constant((Object)smallint2105);
// new:
send31279 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6077);
// value:
send31280 = (Object)new_AST_Send((Object)block2006, (Object)SMB_value_, 1, (Object)send31279);
// =
send31281 = (Object)new_AST_Send((Object)send31274, (Object)SMB__equal, 1, (Object)send31280);
// arguments
send31282 = (Object)new_AST_Send((Object)localvariable4376, (Object)symbol5325, 0);
// first
send31283 = (Object)new_AST_Send((Object)send31282, (Object)symbol5372, 0);
assign3790 = (Object)new_AST_Assign((Object)localvariable4377, (Object)send31283);
// class
send31284 = (Object)new_AST_Send((Object)localvariable4377, (Object)SMB_class, 0);
// should
send31285 = (Object)new_AST_Send((Object)send31284, (Object)symbol5591, 0);
// =
send31286 = (Object)new_AST_Send((Object)send31285, (Object)SMB__equal, 1, (Object)classreference823);
// arguments
send31287 = (Object)new_AST_Send((Object)localvariable4376, (Object)symbol5325, 0);
smallint2106 = (Object)new_Type_SmallInt(2);
constant6078 = (Object)new_AST_Constant((Object)smallint2106);
// at:
send31288 = (Object)new_AST_Send((Object)send31287, (Object)SMB_at_, 1, (Object)constant6078);
assign3791 = (Object)new_AST_Assign((Object)localvariable4377, (Object)send31288);
// class
send31289 = (Object)new_AST_Send((Object)localvariable4377, (Object)SMB_class, 0);
// should
send31290 = (Object)new_AST_Send((Object)send31289, (Object)symbol5591, 0);
// =
send31291 = (Object)new_AST_Send((Object)send31290, (Object)SMB__equal, 1, (Object)classreference828);
// arguments
send31292 = (Object)new_AST_Send((Object)localvariable4376, (Object)symbol5325, 0);
smallint2107 = (Object)new_Type_SmallInt(3);
constant6079 = (Object)new_AST_Constant((Object)smallint2107);
// at:
send31293 = (Object)new_AST_Send((Object)send31292, (Object)SMB_at_, 1, (Object)constant6079);
assign3792 = (Object)new_AST_Assign((Object)localvariable4377, (Object)send31293);
// class
send31294 = (Object)new_AST_Send((Object)localvariable4377, (Object)SMB_class, 0);
// should
send31295 = (Object)new_AST_Send((Object)send31294, (Object)symbol5591, 0);
// =
send31296 = (Object)new_AST_Send((Object)send31295, (Object)SMB__equal, 1, (Object)classreference839);
// atEnd
send31297 = (Object)new_AST_Send((Object)localvariable4375, (Object)SMB_atEnd, 0);
// should
send31298 = (Object)new_AST_Send((Object)send31297, (Object)symbol5591, 0);
// be
send31299 = (Object)new_AST_Send((Object)send31298, (Object)symbol5660, 0);
// true
send31300 = (Object)new_AST_Send((Object)send31299, (Object)symbol5661, 0);
string3628 = (Object)new_Type_String(L"<abc> ");
constant6080 = (Object)new_AST_Constant((Object)string3628);
// on:
send31301 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6080);
assign3793 = (Object)new_AST_Assign((Object)localvariable4375, (Object)send31301);
// match:
send31302 = (Object)new_AST_Send((Object)localvariable4374, (Object)symbol5516, 1, (Object)localvariable4375);
assign3794 = (Object)new_AST_Assign((Object)localvariable4376, (Object)send31302);
// class
send31303 = (Object)new_AST_Send((Object)localvariable4376, (Object)SMB_class, 0);
// should
send31304 = (Object)new_AST_Send((Object)send31303, (Object)symbol5591, 0);
// =
send31305 = (Object)new_AST_Send((Object)send31304, (Object)SMB__equal, 1, (Object)classreference833);
// selector
send31306 = (Object)new_AST_Send((Object)localvariable4376, (Object)symbol5324, 0);
// asString
send31307 = (Object)new_AST_Send((Object)send31306, (Object)SMB_asString, 0);
// should
send31308 = (Object)new_AST_Send((Object)send31307, (Object)symbol5591, 0);
string3629 = (Object)new_Type_String(L"abc");
constant6081 = (Object)new_AST_Constant((Object)string3629);
// =
send31309 = (Object)new_AST_Send((Object)send31308, (Object)SMB__equal, 1, (Object)constant6081);
// position
send31310 = (Object)new_AST_Send((Object)localvariable4375, (Object)symbol5565, 0);
// should
send31311 = (Object)new_AST_Send((Object)send31310, (Object)symbol5591, 0);
smallint2108 = (Object)new_Type_SmallInt(5);
constant6082 = (Object)new_AST_Constant((Object)smallint2108);
// =
send31312 = (Object)new_AST_Send((Object)send31311, (Object)SMB__equal, 1, (Object)constant6082);
string3630 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant6083 = (Object)new_AST_Constant((Object)string3630);
// on:
send31313 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6083);
assign3795 = (Object)new_AST_Assign((Object)localvariable4375, (Object)send31313);
// match:
send31314 = (Object)new_AST_Send((Object)localvariable4374, (Object)symbol5516, 1, (Object)localvariable4375);
assign3796 = (Object)new_AST_Assign((Object)localvariable4376, (Object)send31314);
// class
send31315 = (Object)new_AST_Send((Object)localvariable4376, (Object)SMB_class, 0);
// should
send31316 = (Object)new_AST_Send((Object)send31315, (Object)symbol5591, 0);
// =
send31317 = (Object)new_AST_Send((Object)send31316, (Object)SMB__equal, 1, (Object)classreference826);
// keywords
send31318 = (Object)new_AST_Send((Object)localvariable4376, (Object)symbol5410, 0);
// asArray
send31319 = (Object)new_AST_Send((Object)send31318, (Object)SMB_asArray, 0);
constant6084 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send31320 = (Object)new_AST_Send((Object)send31319, (Object)symbol5615, 1, (Object)constant6084);
// should
send31321 = (Object)new_AST_Send((Object)send31320, (Object)symbol5591, 0);
localvariable4379 = (Object)new_AST_Variable_named(L"receiver");
array3485 = (Object)new_Type_Array_with(1, (Object)localvariable4379);
smallint2109 = (Object)new_Type_SmallInt(1);
constant6085 = (Object)new_AST_Constant((Object)smallint2109);
string3631 = (Object)new_Type_String(L"temps");
constant6086 = (Object)new_AST_Constant((Object)string3631);
// at:put:
send31322 = (Object)new_AST_Send((Object)localvariable4379, (Object)SMB_at_put_, 2, (Object)constant6085, (Object)constant6086);
smallint2110 = (Object)new_Type_SmallInt(2);
constant6087 = (Object)new_AST_Constant((Object)smallint2110);
string3632 = (Object)new_Type_String(L"annotations");
constant6088 = (Object)new_AST_Constant((Object)string3632);
// at:put:
send31323 = (Object)new_AST_Send((Object)localvariable4379, (Object)SMB_at_put_, 2, (Object)constant6087, (Object)constant6088);
smallint2111 = (Object)new_Type_SmallInt(3);
constant6089 = (Object)new_AST_Constant((Object)smallint2111);
string3633 = (Object)new_Type_String(L"statements");
constant6090 = (Object)new_AST_Constant((Object)string3633);
// at:put:
send31324 = (Object)new_AST_Send((Object)localvariable4379, (Object)SMB_at_put_, 2, (Object)constant6089, (Object)constant6090);
// yourself
send31325 = (Object)new_AST_Send((Object)localvariable4379, (Object)symbol5216, 0);
block2007 = (Object)new_AST_Block_with((Type_Array)array3485, (Type_Array)empty_Type_Array, 1, 4, send31322, send31323, send31324, send31325);
smallint2112 = (Object)new_Type_SmallInt(3);
constant6091 = (Object)new_AST_Constant((Object)smallint2112);
// new:
send31326 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6091);
// value:
send31327 = (Object)new_AST_Send((Object)block2007, (Object)SMB_value_, 1, (Object)send31326);
// =
send31328 = (Object)new_AST_Send((Object)send31321, (Object)SMB__equal, 1, (Object)send31327);
// atEnd
send31329 = (Object)new_AST_Send((Object)localvariable4375, (Object)SMB_atEnd, 0);
// should
send31330 = (Object)new_AST_Send((Object)send31329, (Object)symbol5591, 0);
// be
send31331 = (Object)new_AST_Send((Object)send31330, (Object)symbol5660, 0);
// true
send31332 = (Object)new_AST_Send((Object)send31331, (Object)symbol5661, 0);
method4327 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3483, 23, assign3787, assign3788, assign3789, send31270, send31281, assign3790, send31286, assign3791, send31291, assign3792, send31296, send31300, assign3793, assign3794, send31305, send31309, send31312, assign3795, assign3796, send31317, send31328, send31332, Self);
symbol5278 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure4327 = (Object)new_Runtime_MethodClosure(method4327);
store_method((Type_Class)class735, (Type_Symbol)symbol5278, (Runtime_MethodClosure)methodclosure4327);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable4380 = (Object)new_AST_Variable_named(L"parser");
localvariable4381 = (Object)new_AST_Variable_named(L"string");
localvariable4382 = (Object)new_AST_Variable_named(L"result");
array3486 = (Object)new_Type_Array_with(3, (Object)localvariable4380, (Object)localvariable4381, (Object)localvariable4382);
// array
send31333 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5634, 0);
assign3797 = (Object)new_AST_Assign((Object)localvariable4380, (Object)send31333);
string3634 = (Object)new_Type_String(L"()");
constant6092 = (Object)new_AST_Constant((Object)string3634);
// on:
send31334 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6092);
assign3798 = (Object)new_AST_Assign((Object)localvariable4381, (Object)send31334);
// match:
send31335 = (Object)new_AST_Send((Object)localvariable4380, (Object)symbol5516, 1, (Object)localvariable4381);
assign3799 = (Object)new_AST_Assign((Object)localvariable4382, (Object)send31335);
// class
send31336 = (Object)new_AST_Send((Object)localvariable4382, (Object)SMB_class, 0);
// should
send31337 = (Object)new_AST_Send((Object)send31336, (Object)symbol5591, 0);
// =
send31338 = (Object)new_AST_Send((Object)send31337, (Object)SMB__equal, 1, (Object)classreference811);
// literals
send31339 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
// asArray
send31340 = (Object)new_AST_Send((Object)send31339, (Object)SMB_asArray, 0);
// should
send31341 = (Object)new_AST_Send((Object)send31340, (Object)symbol5591, 0);
// new
send31342 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5310, 0);
// =
send31343 = (Object)new_AST_Send((Object)send31341, (Object)SMB__equal, 1, (Object)send31342);
string3635 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant6093 = (Object)new_AST_Constant((Object)string3635);
// on:
send31344 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6093);
assign3800 = (Object)new_AST_Assign((Object)localvariable4381, (Object)send31344);
// match:
send31345 = (Object)new_AST_Send((Object)localvariable4380, (Object)symbol5516, 1, (Object)localvariable4381);
assign3801 = (Object)new_AST_Assign((Object)localvariable4382, (Object)send31345);
// class
send31346 = (Object)new_AST_Send((Object)localvariable4382, (Object)SMB_class, 0);
// should
send31347 = (Object)new_AST_Send((Object)send31346, (Object)symbol5591, 0);
// =
send31348 = (Object)new_AST_Send((Object)send31347, (Object)SMB__equal, 1, (Object)classreference811);
// literals
send31349 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
// size
send31350 = (Object)new_AST_Send((Object)send31349, (Object)SMB_size, 0);
// should
send31351 = (Object)new_AST_Send((Object)send31350, (Object)symbol5591, 0);
smallint2113 = (Object)new_Type_SmallInt(5);
constant6094 = (Object)new_AST_Constant((Object)smallint2113);
// =
send31352 = (Object)new_AST_Send((Object)send31351, (Object)SMB__equal, 1, (Object)constant6094);
// literals
send31353 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
// first
send31354 = (Object)new_AST_Send((Object)send31353, (Object)symbol5372, 0);
// class
send31355 = (Object)new_AST_Send((Object)send31354, (Object)SMB_class, 0);
// should
send31356 = (Object)new_AST_Send((Object)send31355, (Object)symbol5591, 0);
// =
send31357 = (Object)new_AST_Send((Object)send31356, (Object)SMB__equal, 1, (Object)classreference823);
// literals
send31358 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
// first
send31359 = (Object)new_AST_Send((Object)send31358, (Object)symbol5372, 0);
// number
send31360 = (Object)new_AST_Send((Object)send31359, (Object)symbol5380, 0);
// should
send31361 = (Object)new_AST_Send((Object)send31360, (Object)symbol5591, 0);
string3636 = (Object)new_Type_String(L"1");
constant6095 = (Object)new_AST_Constant((Object)string3636);
// =
send31362 = (Object)new_AST_Send((Object)send31361, (Object)SMB__equal, 1, (Object)constant6095);
// literals
send31363 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2114 = (Object)new_Type_SmallInt(2);
constant6096 = (Object)new_AST_Constant((Object)smallint2114);
// at:
send31364 = (Object)new_AST_Send((Object)send31363, (Object)SMB_at_, 1, (Object)constant6096);
// class
send31365 = (Object)new_AST_Send((Object)send31364, (Object)SMB_class, 0);
// should
send31366 = (Object)new_AST_Send((Object)send31365, (Object)symbol5591, 0);
// =
send31367 = (Object)new_AST_Send((Object)send31366, (Object)SMB__equal, 1, (Object)classreference830);
// literals
send31368 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2115 = (Object)new_Type_SmallInt(2);
constant6097 = (Object)new_AST_Constant((Object)smallint2115);
// at:
send31369 = (Object)new_AST_Send((Object)send31368, (Object)SMB_at_, 1, (Object)constant6097);
// symbol
send31370 = (Object)new_AST_Send((Object)send31369, (Object)symbol5385, 0);
// should
send31371 = (Object)new_AST_Send((Object)send31370, (Object)symbol5591, 0);
string3637 = (Object)new_Type_String(L"a");
constant6098 = (Object)new_AST_Constant((Object)string3637);
// =
send31372 = (Object)new_AST_Send((Object)send31371, (Object)SMB__equal, 1, (Object)constant6098);
// literals
send31373 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2116 = (Object)new_Type_SmallInt(3);
constant6099 = (Object)new_AST_Constant((Object)smallint2116);
// at:
send31374 = (Object)new_AST_Send((Object)send31373, (Object)SMB_at_, 1, (Object)constant6099);
// class
send31375 = (Object)new_AST_Send((Object)send31374, (Object)SMB_class, 0);
// should
send31376 = (Object)new_AST_Send((Object)send31375, (Object)symbol5591, 0);
// =
send31377 = (Object)new_AST_Send((Object)send31376, (Object)SMB__equal, 1, (Object)classreference830);
// literals
send31378 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2117 = (Object)new_Type_SmallInt(3);
constant6100 = (Object)new_AST_Constant((Object)smallint2117);
// at:
send31379 = (Object)new_AST_Send((Object)send31378, (Object)SMB_at_, 1, (Object)constant6100);
// symbol
send31380 = (Object)new_AST_Send((Object)send31379, (Object)symbol5385, 0);
// should
send31381 = (Object)new_AST_Send((Object)send31380, (Object)symbol5591, 0);
string3638 = (Object)new_Type_String(L"a");
constant6101 = (Object)new_AST_Constant((Object)string3638);
// =
send31382 = (Object)new_AST_Send((Object)send31381, (Object)SMB__equal, 1, (Object)constant6101);
// literals
send31383 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2118 = (Object)new_Type_SmallInt(4);
constant6102 = (Object)new_AST_Constant((Object)smallint2118);
// at:
send31384 = (Object)new_AST_Send((Object)send31383, (Object)SMB_at_, 1, (Object)constant6102);
// class
send31385 = (Object)new_AST_Send((Object)send31384, (Object)SMB_class, 0);
// should
send31386 = (Object)new_AST_Send((Object)send31385, (Object)symbol5591, 0);
// =
send31387 = (Object)new_AST_Send((Object)send31386, (Object)SMB__equal, 1, (Object)classreference834);
// literals
send31388 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2119 = (Object)new_Type_SmallInt(4);
constant6103 = (Object)new_AST_Constant((Object)smallint2119);
// at:
send31389 = (Object)new_AST_Send((Object)send31388, (Object)SMB_at_, 1, (Object)constant6103);
// string
send31390 = (Object)new_AST_Send((Object)send31389, (Object)symbol5389, 0);
// should
send31391 = (Object)new_AST_Send((Object)send31390, (Object)symbol5591, 0);
string3639 = (Object)new_Type_String(L"b");
constant6104 = (Object)new_AST_Constant((Object)string3639);
// =
send31392 = (Object)new_AST_Send((Object)send31391, (Object)SMB__equal, 1, (Object)constant6104);
// literals
send31393 = (Object)new_AST_Send((Object)localvariable4382, (Object)symbol5364, 0);
smallint2120 = (Object)new_Type_SmallInt(5);
constant6105 = (Object)new_AST_Constant((Object)smallint2120);
// at:
send31394 = (Object)new_AST_Send((Object)send31393, (Object)SMB_at_, 1, (Object)constant6105);
// class
send31395 = (Object)new_AST_Send((Object)send31394, (Object)SMB_class, 0);
// should
send31396 = (Object)new_AST_Send((Object)send31395, (Object)symbol5591, 0);
// =
send31397 = (Object)new_AST_Send((Object)send31396, (Object)SMB__equal, 1, (Object)classreference811);
method4328 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3486, 19, assign3797, assign3798, assign3799, send31338, send31343, assign3800, assign3801, send31348, send31352, send31357, send31362, send31367, send31372, send31377, send31382, send31387, send31392, send31397, Self);
symbol5231 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure4328 = (Object)new_Runtime_MethodClosure(method4328);
store_method((Type_Class)class735, (Type_Symbol)symbol5231, (Runtime_MethodClosure)methodclosure4328);


// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable4383 = (Object)new_AST_Variable_named(L"parser");
localvariable4384 = (Object)new_AST_Variable_named(L"string");
localvariable4385 = (Object)new_AST_Variable_named(L"result");
array3487 = (Object)new_Type_Array_with(3, (Object)localvariable4383, (Object)localvariable4384, (Object)localvariable4385);
// binaryObjectDescription
send31398 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5618, 0);
assign3802 = (Object)new_AST_Assign((Object)localvariable4383, (Object)send31398);
string3640 = (Object)new_Type_String(L"abc + ghi ");
constant6106 = (Object)new_AST_Constant((Object)string3640);
// on:
send31399 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6106);
assign3803 = (Object)new_AST_Assign((Object)localvariable4384, (Object)send31399);
// match:
send31400 = (Object)new_AST_Send((Object)localvariable4383, (Object)symbol5516, 1, (Object)localvariable4384);
assign3804 = (Object)new_AST_Assign((Object)localvariable4385, (Object)send31400);
// class
send31401 = (Object)new_AST_Send((Object)localvariable4385, (Object)SMB_class, 0);
// should
send31402 = (Object)new_AST_Send((Object)send31401, (Object)symbol5591, 0);
// =
send31403 = (Object)new_AST_Send((Object)send31402, (Object)SMB__equal, 1, (Object)classreference828);
// selector
send31404 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5324, 0);
// printString
send31405 = (Object)new_AST_Send((Object)send31404, (Object)symbol5519, 0);
// should
send31406 = (Object)new_AST_Send((Object)send31405, (Object)symbol5591, 0);
string3641 = (Object)new_Type_String(L"+");
constant6107 = (Object)new_AST_Constant((Object)string3641);
// =
send31407 = (Object)new_AST_Send((Object)send31406, (Object)SMB__equal, 1, (Object)constant6107);
// receiver
send31408 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5400, 0);
// class
send31409 = (Object)new_AST_Send((Object)send31408, (Object)SMB_class, 0);
// should
send31410 = (Object)new_AST_Send((Object)send31409, (Object)symbol5591, 0);
// =
send31411 = (Object)new_AST_Send((Object)send31410, (Object)SMB__equal, 1, (Object)classreference818);
// receiver
send31412 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5400, 0);
// name
send31413 = (Object)new_AST_Send((Object)send31412, (Object)SMB_name, 0);
// should
send31414 = (Object)new_AST_Send((Object)send31413, (Object)symbol5591, 0);
string3642 = (Object)new_Type_String(L"abc");
constant6108 = (Object)new_AST_Constant((Object)string3642);
// =
send31415 = (Object)new_AST_Send((Object)send31414, (Object)SMB__equal, 1, (Object)constant6108);
// argument
send31416 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5408, 0);
// class
send31417 = (Object)new_AST_Send((Object)send31416, (Object)SMB_class, 0);
// should
send31418 = (Object)new_AST_Send((Object)send31417, (Object)symbol5591, 0);
// =
send31419 = (Object)new_AST_Send((Object)send31418, (Object)SMB__equal, 1, (Object)classreference818);
// argument
send31420 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5408, 0);
// name
send31421 = (Object)new_AST_Send((Object)send31420, (Object)SMB_name, 0);
// should
send31422 = (Object)new_AST_Send((Object)send31421, (Object)symbol5591, 0);
string3643 = (Object)new_Type_String(L"ghi");
constant6109 = (Object)new_AST_Constant((Object)string3643);
// =
send31423 = (Object)new_AST_Send((Object)send31422, (Object)SMB__equal, 1, (Object)constant6109);
// position
send31424 = (Object)new_AST_Send((Object)localvariable4384, (Object)symbol5565, 0);
// should
send31425 = (Object)new_AST_Send((Object)send31424, (Object)symbol5591, 0);
smallint2121 = (Object)new_Type_SmallInt(9);
constant6110 = (Object)new_AST_Constant((Object)smallint2121);
// =
send31426 = (Object)new_AST_Send((Object)send31425, (Object)SMB__equal, 1, (Object)constant6110);
string3644 = (Object)new_Type_String(L"abc + ghi * c ");
constant6111 = (Object)new_AST_Constant((Object)string3644);
// on:
send31427 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6111);
assign3805 = (Object)new_AST_Assign((Object)localvariable4384, (Object)send31427);
// match:
send31428 = (Object)new_AST_Send((Object)localvariable4383, (Object)symbol5516, 1, (Object)localvariable4384);
assign3806 = (Object)new_AST_Assign((Object)localvariable4385, (Object)send31428);
// class
send31429 = (Object)new_AST_Send((Object)localvariable4385, (Object)SMB_class, 0);
// should
send31430 = (Object)new_AST_Send((Object)send31429, (Object)symbol5591, 0);
// =
send31431 = (Object)new_AST_Send((Object)send31430, (Object)SMB__equal, 1, (Object)classreference828);
// selector
send31432 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5324, 0);
// printString
send31433 = (Object)new_AST_Send((Object)send31432, (Object)symbol5519, 0);
// should
send31434 = (Object)new_AST_Send((Object)send31433, (Object)symbol5591, 0);
string3645 = (Object)new_Type_String(L"*");
constant6112 = (Object)new_AST_Constant((Object)string3645);
// =
send31435 = (Object)new_AST_Send((Object)send31434, (Object)SMB__equal, 1, (Object)constant6112);
// argument
send31436 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5408, 0);
// class
send31437 = (Object)new_AST_Send((Object)send31436, (Object)SMB_class, 0);
// should
send31438 = (Object)new_AST_Send((Object)send31437, (Object)symbol5591, 0);
// =
send31439 = (Object)new_AST_Send((Object)send31438, (Object)SMB__equal, 1, (Object)classreference818);
// argument
send31440 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5408, 0);
// name
send31441 = (Object)new_AST_Send((Object)send31440, (Object)SMB_name, 0);
// should
send31442 = (Object)new_AST_Send((Object)send31441, (Object)symbol5591, 0);
string3646 = (Object)new_Type_String(L"c");
constant6113 = (Object)new_AST_Constant((Object)string3646);
// =
send31443 = (Object)new_AST_Send((Object)send31442, (Object)SMB__equal, 1, (Object)constant6113);
// receiver
send31444 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5400, 0);
assign3807 = (Object)new_AST_Assign((Object)localvariable4385, (Object)send31444);
// class
send31445 = (Object)new_AST_Send((Object)localvariable4385, (Object)SMB_class, 0);
// should
send31446 = (Object)new_AST_Send((Object)send31445, (Object)symbol5591, 0);
// =
send31447 = (Object)new_AST_Send((Object)send31446, (Object)SMB__equal, 1, (Object)classreference828);
// selector
send31448 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5324, 0);
// printString
send31449 = (Object)new_AST_Send((Object)send31448, (Object)symbol5519, 0);
// should
send31450 = (Object)new_AST_Send((Object)send31449, (Object)symbol5591, 0);
string3647 = (Object)new_Type_String(L"+");
constant6114 = (Object)new_AST_Constant((Object)string3647);
// =
send31451 = (Object)new_AST_Send((Object)send31450, (Object)SMB__equal, 1, (Object)constant6114);
// receiver
send31452 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5400, 0);
// class
send31453 = (Object)new_AST_Send((Object)send31452, (Object)SMB_class, 0);
// should
send31454 = (Object)new_AST_Send((Object)send31453, (Object)symbol5591, 0);
// =
send31455 = (Object)new_AST_Send((Object)send31454, (Object)SMB__equal, 1, (Object)classreference818);
// receiver
send31456 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5400, 0);
// name
send31457 = (Object)new_AST_Send((Object)send31456, (Object)SMB_name, 0);
// should
send31458 = (Object)new_AST_Send((Object)send31457, (Object)symbol5591, 0);
string3648 = (Object)new_Type_String(L"abc");
constant6115 = (Object)new_AST_Constant((Object)string3648);
// =
send31459 = (Object)new_AST_Send((Object)send31458, (Object)SMB__equal, 1, (Object)constant6115);
// argument
send31460 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5408, 0);
// class
send31461 = (Object)new_AST_Send((Object)send31460, (Object)SMB_class, 0);
// should
send31462 = (Object)new_AST_Send((Object)send31461, (Object)symbol5591, 0);
// =
send31463 = (Object)new_AST_Send((Object)send31462, (Object)SMB__equal, 1, (Object)classreference818);
// argument
send31464 = (Object)new_AST_Send((Object)localvariable4385, (Object)symbol5408, 0);
// name
send31465 = (Object)new_AST_Send((Object)send31464, (Object)SMB_name, 0);
// should
send31466 = (Object)new_AST_Send((Object)send31465, (Object)symbol5591, 0);
string3649 = (Object)new_Type_String(L"ghi");
constant6116 = (Object)new_AST_Constant((Object)string3649);
// =
send31467 = (Object)new_AST_Send((Object)send31466, (Object)SMB__equal, 1, (Object)constant6116);
// position
send31468 = (Object)new_AST_Send((Object)localvariable4384, (Object)symbol5565, 0);
// should
send31469 = (Object)new_AST_Send((Object)send31468, (Object)symbol5591, 0);
smallint2122 = (Object)new_Type_SmallInt(13);
constant6117 = (Object)new_AST_Constant((Object)smallint2122);
// =
send31470 = (Object)new_AST_Send((Object)send31469, (Object)SMB__equal, 1, (Object)constant6117);
method4329 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3487, 25, assign3802, assign3803, assign3804, send31403, send31407, send31411, send31415, send31419, send31423, send31426, assign3805, assign3806, send31431, send31435, send31439, send31443, assign3807, send31447, send31451, send31455, send31459, send31463, send31467, send31470, Self);
symbol5251 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure4329 = (Object)new_Runtime_MethodClosure(method4329);
store_method((Type_Class)class735, (Type_Symbol)symbol5251, (Runtime_MethodClosure)methodclosure4329);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable4386 = (Object)new_AST_Variable_named(L"parser");
localvariable4387 = (Object)new_AST_Variable_named(L"string");
localvariable4388 = (Object)new_AST_Variable_named(L"result");
array3488 = (Object)new_Type_Array_with(3, (Object)localvariable4386, (Object)localvariable4387, (Object)localvariable4388);
// messageExpression
send31471 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5599, 0);
assign3808 = (Object)new_AST_Assign((Object)localvariable4386, (Object)send31471);
string3650 = (Object)new_Type_String(L"super+4");
constant6118 = (Object)new_AST_Constant((Object)string3650);
// on:
send31472 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6118);
assign3809 = (Object)new_AST_Assign((Object)localvariable4387, (Object)send31472);
// match:
send31473 = (Object)new_AST_Send((Object)localvariable4386, (Object)symbol5516, 1, (Object)localvariable4387);
assign3810 = (Object)new_AST_Assign((Object)localvariable4388, (Object)send31473);
// class
send31474 = (Object)new_AST_Send((Object)localvariable4388, (Object)SMB_class, 0);
// should
send31475 = (Object)new_AST_Send((Object)send31474, (Object)symbol5591, 0);
// =
send31476 = (Object)new_AST_Send((Object)send31475, (Object)SMB__equal, 1, (Object)classreference828);
// receiver
send31477 = (Object)new_AST_Send((Object)localvariable4388, (Object)symbol5400, 0);
// class
send31478 = (Object)new_AST_Send((Object)send31477, (Object)SMB_class, 0);
// should
send31479 = (Object)new_AST_Send((Object)send31478, (Object)symbol5591, 0);
// =
send31480 = (Object)new_AST_Send((Object)send31479, (Object)SMB__equal, 1, (Object)classreference836);
string3651 = (Object)new_Type_String(L"self a: 4 b: 3");
constant6119 = (Object)new_AST_Constant((Object)string3651);
// on:
send31481 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6119);
assign3811 = (Object)new_AST_Assign((Object)localvariable4387, (Object)send31481);
// match:
send31482 = (Object)new_AST_Send((Object)localvariable4386, (Object)symbol5516, 1, (Object)localvariable4387);
assign3812 = (Object)new_AST_Assign((Object)localvariable4388, (Object)send31482);
// class
send31483 = (Object)new_AST_Send((Object)localvariable4388, (Object)SMB_class, 0);
// should
send31484 = (Object)new_AST_Send((Object)send31483, (Object)symbol5591, 0);
// =
send31485 = (Object)new_AST_Send((Object)send31484, (Object)SMB__equal, 1, (Object)classreference835);
// receiver
send31486 = (Object)new_AST_Send((Object)localvariable4388, (Object)symbol5400, 0);
// class
send31487 = (Object)new_AST_Send((Object)send31486, (Object)SMB_class, 0);
// should
send31488 = (Object)new_AST_Send((Object)send31487, (Object)symbol5591, 0);
// =
send31489 = (Object)new_AST_Send((Object)send31488, (Object)SMB__equal, 1, (Object)classreference838);
string3652 = (Object)new_Type_String(L"2 d");
constant6120 = (Object)new_AST_Constant((Object)string3652);
// on:
send31490 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6120);
assign3813 = (Object)new_AST_Assign((Object)localvariable4387, (Object)send31490);
// match:
send31491 = (Object)new_AST_Send((Object)localvariable4386, (Object)symbol5516, 1, (Object)localvariable4387);
assign3814 = (Object)new_AST_Assign((Object)localvariable4388, (Object)send31491);
// class
send31492 = (Object)new_AST_Send((Object)localvariable4388, (Object)SMB_class, 0);
// should
send31493 = (Object)new_AST_Send((Object)send31492, (Object)symbol5591, 0);
// =
send31494 = (Object)new_AST_Send((Object)send31493, (Object)SMB__equal, 1, (Object)classreference839);
// receiver
send31495 = (Object)new_AST_Send((Object)localvariable4388, (Object)symbol5400, 0);
// class
send31496 = (Object)new_AST_Send((Object)send31495, (Object)SMB_class, 0);
// should
send31497 = (Object)new_AST_Send((Object)send31496, (Object)symbol5591, 0);
// =
send31498 = (Object)new_AST_Send((Object)send31497, (Object)SMB__equal, 1, (Object)classreference823);
// receiver
send31499 = (Object)new_AST_Send((Object)localvariable4388, (Object)symbol5400, 0);
// asInteger
send31500 = (Object)new_AST_Send((Object)send31499, (Object)symbol5382, 0);
// should
send31501 = (Object)new_AST_Send((Object)send31500, (Object)symbol5591, 0);
smallint2123 = (Object)new_Type_SmallInt(2);
constant6121 = (Object)new_AST_Constant((Object)smallint2123);
// =
send31502 = (Object)new_AST_Send((Object)send31501, (Object)SMB__equal, 1, (Object)constant6121);
method4330 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3488, 15, assign3808, assign3809, assign3810, send31476, send31480, assign3811, assign3812, send31485, send31489, assign3813, assign3814, send31494, send31498, send31502, Self);
symbol5271 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure4330 = (Object)new_Runtime_MethodClosure(method4330);
store_method((Type_Class)class735, (Type_Symbol)symbol5271, (Runtime_MethodClosure)methodclosure4330);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable4389 = (Object)new_AST_Variable_named(L"parser");
localvariable4390 = (Object)new_AST_Variable_named(L"string");
array3489 = (Object)new_Type_Array_with(2, (Object)localvariable4389, (Object)localvariable4390);
// symbolKeywords
send31503 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5632, 0);
assign3815 = (Object)new_AST_Assign((Object)localvariable4389, (Object)send31503);
string3653 = (Object)new_Type_String(L"abcd:def: ");
constant6122 = (Object)new_AST_Constant((Object)string3653);
// on:
send31504 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6122);
assign3816 = (Object)new_AST_Assign((Object)localvariable4390, (Object)send31504);
// match:
send31505 = (Object)new_AST_Send((Object)localvariable4389, (Object)symbol5516, 1, (Object)localvariable4390);
// should
send31506 = (Object)new_AST_Send((Object)send31505, (Object)symbol5591, 0);
string3654 = (Object)new_Type_String(L"abcd:def:");
constant6123 = (Object)new_AST_Constant((Object)string3654);
// =
send31507 = (Object)new_AST_Send((Object)send31506, (Object)SMB__equal, 1, (Object)constant6123);
// position
send31508 = (Object)new_AST_Send((Object)localvariable4390, (Object)symbol5565, 0);
// should
send31509 = (Object)new_AST_Send((Object)send31508, (Object)symbol5591, 0);
smallint2124 = (Object)new_Type_SmallInt(9);
constant6124 = (Object)new_AST_Constant((Object)smallint2124);
// =
send31510 = (Object)new_AST_Send((Object)send31509, (Object)SMB__equal, 1, (Object)constant6124);
string3655 = (Object)new_Type_String(L"abcd ");
constant6125 = (Object)new_AST_Constant((Object)string3655);
// on:
send31511 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6125);
assign3817 = (Object)new_AST_Assign((Object)localvariable4390, (Object)send31511);
// match:
send31512 = (Object)new_AST_Send((Object)localvariable4389, (Object)symbol5516, 1, (Object)localvariable4390);
// should
send31513 = (Object)new_AST_Send((Object)send31512, (Object)symbol5591, 0);
// be
send31514 = (Object)new_AST_Send((Object)send31513, (Object)symbol5660, 0);
// isNil
send31515 = (Object)new_AST_Send((Object)send31514, (Object)SMB_isNil, 0);
// position
send31516 = (Object)new_AST_Send((Object)localvariable4390, (Object)symbol5565, 0);
// should
send31517 = (Object)new_AST_Send((Object)send31516, (Object)symbol5591, 0);
smallint2125 = (Object)new_Type_SmallInt(0);
constant6126 = (Object)new_AST_Constant((Object)smallint2125);
// =
send31518 = (Object)new_AST_Send((Object)send31517, (Object)SMB__equal, 1, (Object)constant6126);
method4331 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3489, 8, assign3815, assign3816, send31507, send31510, assign3817, send31515, send31518, Self);
symbol5263 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure4331 = (Object)new_Runtime_MethodClosure(method4331);
store_method((Type_Class)class735, (Type_Symbol)symbol5263, (Runtime_MethodClosure)methodclosure4331);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable4391 = (Object)new_AST_Variable_named(L"parser");
localvariable4392 = (Object)new_AST_Variable_named(L"string");
localvariable4393 = (Object)new_AST_Variable_named(L"message");
localvariable4394 = (Object)new_AST_Variable_named(L"return");
array3490 = (Object)new_Type_Array_with(4, (Object)localvariable4391, (Object)localvariable4392, (Object)localvariable4393, (Object)localvariable4394);
// messageExpression
send31519 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5599, 0);
assign3818 = (Object)new_AST_Assign((Object)localvariable4391, (Object)send31519);
string3656 = (Object)new_Type_String(L"super do: this and: that");
constant6127 = (Object)new_AST_Constant((Object)string3656);
// on:
send31520 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6127);
assign3819 = (Object)new_AST_Assign((Object)localvariable4392, (Object)send31520);
// match:
send31521 = (Object)new_AST_Send((Object)localvariable4391, (Object)symbol5516, 1, (Object)localvariable4392);
assign3820 = (Object)new_AST_Assign((Object)localvariable4393, (Object)send31521);
// receiver
send31522 = (Object)new_AST_Send((Object)localvariable4393, (Object)symbol5400, 0);
// class
send31523 = (Object)new_AST_Send((Object)send31522, (Object)SMB_class, 0);
// should
send31524 = (Object)new_AST_Send((Object)send31523, (Object)symbol5591, 0);
// =
send31525 = (Object)new_AST_Send((Object)send31524, (Object)SMB__equal, 1, (Object)classreference836);
// return
send31526 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5640, 0);
assign3821 = (Object)new_AST_Assign((Object)localvariable4391, (Object)send31526);
string3657 = (Object)new_Type_String(L"^ super do: this and: that");
constant6128 = (Object)new_AST_Constant((Object)string3657);
// on:
send31527 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6128);
assign3822 = (Object)new_AST_Assign((Object)localvariable4392, (Object)send31527);
// match:
send31528 = (Object)new_AST_Send((Object)localvariable4391, (Object)symbol5516, 1, (Object)localvariable4392);
assign3823 = (Object)new_AST_Assign((Object)localvariable4394, (Object)send31528);
// class
send31529 = (Object)new_AST_Send((Object)localvariable4394, (Object)SMB_class, 0);
// should
send31530 = (Object)new_AST_Send((Object)send31529, (Object)symbol5591, 0);
// =
send31531 = (Object)new_AST_Send((Object)send31530, (Object)SMB__equal, 1, (Object)classreference819);
// expression
send31532 = (Object)new_AST_Send((Object)localvariable4394, (Object)symbol5427, 0);
// receiver
send31533 = (Object)new_AST_Send((Object)send31532, (Object)symbol5400, 0);
// class
send31534 = (Object)new_AST_Send((Object)send31533, (Object)SMB_class, 0);
// should
send31535 = (Object)new_AST_Send((Object)send31534, (Object)symbol5591, 0);
// =
send31536 = (Object)new_AST_Send((Object)send31535, (Object)SMB__equal, 1, (Object)classreference836);
method4332 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3490, 10, assign3818, assign3819, assign3820, send31525, assign3821, assign3822, assign3823, send31531, send31536, Self);
symbol5291 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure4332 = (Object)new_Runtime_MethodClosure(method4332);
store_method((Type_Class)class735, (Type_Symbol)symbol5291, (Runtime_MethodClosure)methodclosure4332);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable4395 = (Object)new_AST_Variable_named(L"parser");
localvariable4396 = (Object)new_AST_Variable_named(L"string");
localvariable4397 = (Object)new_AST_Variable_named(L"result");
array3491 = (Object)new_Type_Array_with(3, (Object)localvariable4395, (Object)localvariable4396, (Object)localvariable4397);
// keywordsArguments
send31537 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5654, 0);
assign3824 = (Object)new_AST_Assign((Object)localvariable4395, (Object)send31537);
string3658 = (Object)new_Type_String(L"test: ab");
constant6129 = (Object)new_AST_Constant((Object)string3658);
// on:
send31538 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6129);
assign3825 = (Object)new_AST_Assign((Object)localvariable4396, (Object)send31538);
// match:
send31539 = (Object)new_AST_Send((Object)localvariable4395, (Object)symbol5516, 1, (Object)localvariable4396);
assign3826 = (Object)new_AST_Assign((Object)localvariable4397, (Object)send31539);
// class
send31540 = (Object)new_AST_Send((Object)localvariable4397, (Object)SMB_class, 0);
// should
send31541 = (Object)new_AST_Send((Object)send31540, (Object)symbol5591, 0);
// =
send31542 = (Object)new_AST_Send((Object)send31541, (Object)SMB__equal, 1, (Object)classreference812);
// keywords
send31543 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5410, 0);
// should
send31544 = (Object)new_AST_Send((Object)send31543, (Object)symbol5591, 0);
string3659 = (Object)new_Type_String(L"test");
constant6130 = (Object)new_AST_Constant((Object)string3659);
// with:
send31545 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5369, 1, (Object)constant6130);
// =
send31546 = (Object)new_AST_Send((Object)send31544, (Object)SMB__equal, 1, (Object)send31545);
// parameters
send31547 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5405, 0);
// size
send31548 = (Object)new_AST_Send((Object)send31547, (Object)SMB_size, 0);
// should
send31549 = (Object)new_AST_Send((Object)send31548, (Object)symbol5591, 0);
smallint2126 = (Object)new_Type_SmallInt(1);
constant6131 = (Object)new_AST_Constant((Object)smallint2126);
// =
send31550 = (Object)new_AST_Send((Object)send31549, (Object)SMB__equal, 1, (Object)constant6131);
// parameters
send31551 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5405, 0);
// first
send31552 = (Object)new_AST_Send((Object)send31551, (Object)symbol5372, 0);
// should
send31553 = (Object)new_AST_Send((Object)send31552, (Object)symbol5591, 0);
// new
send31554 = (Object)new_AST_Send((Object)classreference818, (Object)symbol5310, 0);
string3660 = (Object)new_Type_String(L"ab");
constant6132 = (Object)new_AST_Constant((Object)string3660);
// name:
send31555 = (Object)new_AST_Send((Object)send31554, (Object)symbol5393, 1, (Object)constant6132);
// =
send31556 = (Object)new_AST_Send((Object)send31553, (Object)SMB__equal, 1, (Object)send31555);
// position
send31557 = (Object)new_AST_Send((Object)localvariable4396, (Object)symbol5565, 0);
// should
send31558 = (Object)new_AST_Send((Object)send31557, (Object)symbol5591, 0);
smallint2127 = (Object)new_Type_SmallInt(8);
constant6133 = (Object)new_AST_Constant((Object)smallint2127);
// =
send31559 = (Object)new_AST_Send((Object)send31558, (Object)SMB__equal, 1, (Object)constant6133);
string3661 = (Object)new_Type_String(L"bla a");
constant6134 = (Object)new_AST_Constant((Object)string3661);
// on:
send31560 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6134);
assign3827 = (Object)new_AST_Assign((Object)localvariable4396, (Object)send31560);
// match:
send31561 = (Object)new_AST_Send((Object)localvariable4395, (Object)symbol5516, 1, (Object)localvariable4396);
// should
send31562 = (Object)new_AST_Send((Object)send31561, (Object)symbol5591, 0);
// be
send31563 = (Object)new_AST_Send((Object)send31562, (Object)symbol5660, 0);
// isNil
send31564 = (Object)new_AST_Send((Object)send31563, (Object)SMB_isNil, 0);
// position
send31565 = (Object)new_AST_Send((Object)localvariable4396, (Object)symbol5565, 0);
// should
send31566 = (Object)new_AST_Send((Object)send31565, (Object)symbol5591, 0);
smallint2128 = (Object)new_Type_SmallInt(0);
constant6135 = (Object)new_AST_Constant((Object)smallint2128);
// =
send31567 = (Object)new_AST_Send((Object)send31566, (Object)SMB__equal, 1, (Object)constant6135);
string3662 = (Object)new_Type_String(L"test: d bla: c boe");
constant6136 = (Object)new_AST_Constant((Object)string3662);
// on:
send31568 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6136);
assign3828 = (Object)new_AST_Assign((Object)localvariable4396, (Object)send31568);
// match:
send31569 = (Object)new_AST_Send((Object)localvariable4395, (Object)symbol5516, 1, (Object)localvariable4396);
assign3829 = (Object)new_AST_Assign((Object)localvariable4397, (Object)send31569);
// class
send31570 = (Object)new_AST_Send((Object)localvariable4397, (Object)SMB_class, 0);
// should
send31571 = (Object)new_AST_Send((Object)send31570, (Object)symbol5591, 0);
// =
send31572 = (Object)new_AST_Send((Object)send31571, (Object)SMB__equal, 1, (Object)classreference812);
// keywords
send31573 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5410, 0);
// should
send31574 = (Object)new_AST_Send((Object)send31573, (Object)symbol5591, 0);
symbol5665 = (Object)new_Type_Symbol_cached(L"with:with:");
string3663 = (Object)new_Type_String(L"test");
constant6137 = (Object)new_AST_Constant((Object)string3663);
string3664 = (Object)new_Type_String(L"bla");
constant6138 = (Object)new_AST_Constant((Object)string3664);
// with:with:
send31575 = (Object)new_AST_Send((Object)classreference783, (Object)symbol5665, 2, (Object)constant6137, (Object)constant6138);
// =
send31576 = (Object)new_AST_Send((Object)send31574, (Object)SMB__equal, 1, (Object)send31575);
// parameters
send31577 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5405, 0);
// size
send31578 = (Object)new_AST_Send((Object)send31577, (Object)SMB_size, 0);
// should
send31579 = (Object)new_AST_Send((Object)send31578, (Object)symbol5591, 0);
smallint2129 = (Object)new_Type_SmallInt(2);
constant6139 = (Object)new_AST_Constant((Object)smallint2129);
// =
send31580 = (Object)new_AST_Send((Object)send31579, (Object)SMB__equal, 1, (Object)constant6139);
// parameters
send31581 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5405, 0);
// first
send31582 = (Object)new_AST_Send((Object)send31581, (Object)symbol5372, 0);
// should
send31583 = (Object)new_AST_Send((Object)send31582, (Object)symbol5591, 0);
// new
send31584 = (Object)new_AST_Send((Object)classreference818, (Object)symbol5310, 0);
string3665 = (Object)new_Type_String(L"d");
constant6140 = (Object)new_AST_Constant((Object)string3665);
// name:
send31585 = (Object)new_AST_Send((Object)send31584, (Object)symbol5393, 1, (Object)constant6140);
// =
send31586 = (Object)new_AST_Send((Object)send31583, (Object)SMB__equal, 1, (Object)send31585);
// parameters
send31587 = (Object)new_AST_Send((Object)localvariable4397, (Object)symbol5405, 0);
// second
send31588 = (Object)new_AST_Send((Object)send31587, (Object)symbol5603, 0);
// should
send31589 = (Object)new_AST_Send((Object)send31588, (Object)symbol5591, 0);
// new
send31590 = (Object)new_AST_Send((Object)classreference818, (Object)symbol5310, 0);
string3666 = (Object)new_Type_String(L"c");
constant6141 = (Object)new_AST_Constant((Object)string3666);
// name:
send31591 = (Object)new_AST_Send((Object)send31590, (Object)symbol5393, 1, (Object)constant6141);
// =
send31592 = (Object)new_AST_Send((Object)send31589, (Object)SMB__equal, 1, (Object)send31591);
// position
send31593 = (Object)new_AST_Send((Object)localvariable4396, (Object)symbol5565, 0);
// should
send31594 = (Object)new_AST_Send((Object)send31593, (Object)symbol5591, 0);
smallint2130 = (Object)new_Type_SmallInt(15);
constant6142 = (Object)new_AST_Constant((Object)smallint2130);
// =
send31595 = (Object)new_AST_Send((Object)send31594, (Object)SMB__equal, 1, (Object)constant6142);
method4333 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3491, 20, assign3824, assign3825, assign3826, send31542, send31546, send31550, send31556, send31559, assign3827, send31564, send31567, assign3828, assign3829, send31572, send31576, send31580, send31586, send31592, send31595, Self);
symbol5253 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure4333 = (Object)new_Runtime_MethodClosure(method4333);
store_method((Type_Class)class735, (Type_Symbol)symbol5253, (Runtime_MethodClosure)methodclosure4333);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable4398 = (Object)new_AST_Variable_named(L"parser");
localvariable4399 = (Object)new_AST_Variable_named(L"ast");
array3492 = (Object)new_Type_Array_with(2, (Object)localvariable4398, (Object)localvariable4399);
// statements
send31596 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5415, 0);
assign3830 = (Object)new_AST_Assign((Object)localvariable4398, (Object)send31596);
string3667 = (Object)new_Type_String(L"2 fib + 3 ");
constant6143 = (Object)new_AST_Constant((Object)string3667);
// on:
send31597 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6143);
// match:
send31598 = (Object)new_AST_Send((Object)localvariable4398, (Object)symbol5516, 1, (Object)send31597);
// first
send31599 = (Object)new_AST_Send((Object)send31598, (Object)symbol5372, 0);
assign3831 = (Object)new_AST_Assign((Object)localvariable4399, (Object)send31599);
// class
send31600 = (Object)new_AST_Send((Object)localvariable4399, (Object)SMB_class, 0);
// should
send31601 = (Object)new_AST_Send((Object)send31600, (Object)symbol5591, 0);
// =
send31602 = (Object)new_AST_Send((Object)send31601, (Object)SMB__equal, 1, (Object)classreference828);
// receiver
send31603 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5400, 0);
// class
send31604 = (Object)new_AST_Send((Object)send31603, (Object)SMB_class, 0);
// should
send31605 = (Object)new_AST_Send((Object)send31604, (Object)symbol5591, 0);
// =
send31606 = (Object)new_AST_Send((Object)send31605, (Object)SMB__equal, 1, (Object)classreference839);
// receiver
send31607 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5400, 0);
// receiver
send31608 = (Object)new_AST_Send((Object)send31607, (Object)symbol5400, 0);
// class
send31609 = (Object)new_AST_Send((Object)send31608, (Object)SMB_class, 0);
// should
send31610 = (Object)new_AST_Send((Object)send31609, (Object)symbol5591, 0);
// =
send31611 = (Object)new_AST_Send((Object)send31610, (Object)SMB__equal, 1, (Object)classreference823);
// receiver
send31612 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5400, 0);
// receiver
send31613 = (Object)new_AST_Send((Object)send31612, (Object)symbol5400, 0);
// number
send31614 = (Object)new_AST_Send((Object)send31613, (Object)symbol5380, 0);
// should
send31615 = (Object)new_AST_Send((Object)send31614, (Object)symbol5591, 0);
string3668 = (Object)new_Type_String(L"2");
constant6144 = (Object)new_AST_Constant((Object)string3668);
// =
send31616 = (Object)new_AST_Send((Object)send31615, (Object)SMB__equal, 1, (Object)constant6144);
// receiver
send31617 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5400, 0);
// selector
send31618 = (Object)new_AST_Send((Object)send31617, (Object)symbol5324, 0);
// asString
send31619 = (Object)new_AST_Send((Object)send31618, (Object)SMB_asString, 0);
// should
send31620 = (Object)new_AST_Send((Object)send31619, (Object)symbol5591, 0);
string3669 = (Object)new_Type_String(L"fib");
constant6145 = (Object)new_AST_Constant((Object)string3669);
// =
send31621 = (Object)new_AST_Send((Object)send31620, (Object)SMB__equal, 1, (Object)constant6145);
// selector
send31622 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5324, 0);
// asString
send31623 = (Object)new_AST_Send((Object)send31622, (Object)SMB_asString, 0);
// should
send31624 = (Object)new_AST_Send((Object)send31623, (Object)symbol5591, 0);
string3670 = (Object)new_Type_String(L"+");
constant6146 = (Object)new_AST_Constant((Object)string3670);
// =
send31625 = (Object)new_AST_Send((Object)send31624, (Object)SMB__equal, 1, (Object)constant6146);
// argument
send31626 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5408, 0);
// class
send31627 = (Object)new_AST_Send((Object)send31626, (Object)SMB_class, 0);
// should
send31628 = (Object)new_AST_Send((Object)send31627, (Object)symbol5591, 0);
// =
send31629 = (Object)new_AST_Send((Object)send31628, (Object)SMB__equal, 1, (Object)classreference823);
// argument
send31630 = (Object)new_AST_Send((Object)localvariable4399, (Object)symbol5408, 0);
// number
send31631 = (Object)new_AST_Send((Object)send31630, (Object)symbol5380, 0);
// should
send31632 = (Object)new_AST_Send((Object)send31631, (Object)symbol5591, 0);
string3671 = (Object)new_Type_String(L"3");
constant6147 = (Object)new_AST_Constant((Object)string3671);
// =
send31633 = (Object)new_AST_Send((Object)send31632, (Object)SMB__equal, 1, (Object)constant6147);
method4334 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3492, 11, assign3830, assign3831, send31602, send31606, send31611, send31616, send31621, send31625, send31629, send31633, Self);
symbol5281 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure4334 = (Object)new_Runtime_MethodClosure(method4334);
store_method((Type_Class)class735, (Type_Symbol)symbol5281, (Runtime_MethodClosure)methodclosure4334);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable4400 = (Object)new_AST_Variable_named(L"parser");
localvariable4401 = (Object)new_AST_Variable_named(L"string");
localvariable4402 = (Object)new_AST_Variable_named(L"result");
array3493 = (Object)new_Type_Array_with(3, (Object)localvariable4400, (Object)localvariable4401, (Object)localvariable4402);
// block
send31634 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5648, 0);
assign3832 = (Object)new_AST_Assign((Object)localvariable4400, (Object)send31634);
string3672 = (Object)new_Type_String(L"[]");
constant6148 = (Object)new_AST_Constant((Object)string3672);
// on:
send31635 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6148);
assign3833 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31635);
// match:
send31636 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3834 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31636);
// class
send31637 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31638 = (Object)new_AST_Send((Object)send31637, (Object)symbol5591, 0);
// =
send31639 = (Object)new_AST_Send((Object)send31638, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31640 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31641 = (Object)new_AST_Send((Object)send31640, (Object)SMB_size, 0);
// should
send31642 = (Object)new_AST_Send((Object)send31641, (Object)symbol5591, 0);
smallint2131 = (Object)new_Type_SmallInt(0);
constant6149 = (Object)new_AST_Constant((Object)smallint2131);
// =
send31643 = (Object)new_AST_Send((Object)send31642, (Object)SMB__equal, 1, (Object)constant6149);
// parameters
send31644 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31645 = (Object)new_AST_Send((Object)send31644, (Object)SMB_size, 0);
// should
send31646 = (Object)new_AST_Send((Object)send31645, (Object)symbol5591, 0);
smallint2132 = (Object)new_Type_SmallInt(0);
constant6150 = (Object)new_AST_Constant((Object)smallint2132);
// =
send31647 = (Object)new_AST_Send((Object)send31646, (Object)SMB__equal, 1, (Object)constant6150);
// statements
send31648 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31649 = (Object)new_AST_Send((Object)send31648, (Object)SMB_size, 0);
// should
send31650 = (Object)new_AST_Send((Object)send31649, (Object)symbol5591, 0);
smallint2133 = (Object)new_Type_SmallInt(0);
constant6151 = (Object)new_AST_Constant((Object)smallint2133);
// =
send31651 = (Object)new_AST_Send((Object)send31650, (Object)SMB__equal, 1, (Object)constant6151);
string3673 = (Object)new_Type_String(L"[||]");
constant6152 = (Object)new_AST_Constant((Object)string3673);
// on:
send31652 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6152);
assign3835 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31652);
// match:
send31653 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3836 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31653);
// class
send31654 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31655 = (Object)new_AST_Send((Object)send31654, (Object)symbol5591, 0);
// =
send31656 = (Object)new_AST_Send((Object)send31655, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31657 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31658 = (Object)new_AST_Send((Object)send31657, (Object)SMB_size, 0);
// should
send31659 = (Object)new_AST_Send((Object)send31658, (Object)symbol5591, 0);
smallint2134 = (Object)new_Type_SmallInt(0);
constant6153 = (Object)new_AST_Constant((Object)smallint2134);
// =
send31660 = (Object)new_AST_Send((Object)send31659, (Object)SMB__equal, 1, (Object)constant6153);
// parameters
send31661 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31662 = (Object)new_AST_Send((Object)send31661, (Object)SMB_size, 0);
// should
send31663 = (Object)new_AST_Send((Object)send31662, (Object)symbol5591, 0);
smallint2135 = (Object)new_Type_SmallInt(0);
constant6154 = (Object)new_AST_Constant((Object)smallint2135);
// =
send31664 = (Object)new_AST_Send((Object)send31663, (Object)SMB__equal, 1, (Object)constant6154);
// statements
send31665 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31666 = (Object)new_AST_Send((Object)send31665, (Object)SMB_size, 0);
// should
send31667 = (Object)new_AST_Send((Object)send31666, (Object)symbol5591, 0);
smallint2136 = (Object)new_Type_SmallInt(0);
constant6155 = (Object)new_AST_Constant((Object)smallint2136);
// =
send31668 = (Object)new_AST_Send((Object)send31667, (Object)SMB__equal, 1, (Object)constant6155);
string3674 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant6156 = (Object)new_AST_Constant((Object)string3674);
// on:
send31669 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6156);
assign3837 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31669);
// match:
send31670 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3838 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31670);
// class
send31671 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31672 = (Object)new_AST_Send((Object)send31671, (Object)symbol5591, 0);
// =
send31673 = (Object)new_AST_Send((Object)send31672, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31674 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31675 = (Object)new_AST_Send((Object)send31674, (Object)SMB_size, 0);
// should
send31676 = (Object)new_AST_Send((Object)send31675, (Object)symbol5591, 0);
smallint2137 = (Object)new_Type_SmallInt(0);
constant6157 = (Object)new_AST_Constant((Object)smallint2137);
// =
send31677 = (Object)new_AST_Send((Object)send31676, (Object)SMB__equal, 1, (Object)constant6157);
// parameters
send31678 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31679 = (Object)new_AST_Send((Object)send31678, (Object)SMB_size, 0);
// should
send31680 = (Object)new_AST_Send((Object)send31679, (Object)symbol5591, 0);
smallint2138 = (Object)new_Type_SmallInt(4);
constant6158 = (Object)new_AST_Constant((Object)smallint2138);
// =
send31681 = (Object)new_AST_Send((Object)send31680, (Object)SMB__equal, 1, (Object)constant6158);
// statements
send31682 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31683 = (Object)new_AST_Send((Object)send31682, (Object)SMB_size, 0);
// should
send31684 = (Object)new_AST_Send((Object)send31683, (Object)symbol5591, 0);
smallint2139 = (Object)new_Type_SmallInt(0);
constant6159 = (Object)new_AST_Constant((Object)smallint2139);
// =
send31685 = (Object)new_AST_Send((Object)send31684, (Object)SMB__equal, 1, (Object)constant6159);
string3675 = (Object)new_Type_String(L"[ | a   f d| ]");
constant6160 = (Object)new_AST_Constant((Object)string3675);
// on:
send31686 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6160);
assign3839 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31686);
// match:
send31687 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3840 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31687);
// class
send31688 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31689 = (Object)new_AST_Send((Object)send31688, (Object)symbol5591, 0);
// =
send31690 = (Object)new_AST_Send((Object)send31689, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31691 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31692 = (Object)new_AST_Send((Object)send31691, (Object)SMB_size, 0);
// should
send31693 = (Object)new_AST_Send((Object)send31692, (Object)symbol5591, 0);
smallint2140 = (Object)new_Type_SmallInt(3);
constant6161 = (Object)new_AST_Constant((Object)smallint2140);
// =
send31694 = (Object)new_AST_Send((Object)send31693, (Object)SMB__equal, 1, (Object)constant6161);
// parameters
send31695 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31696 = (Object)new_AST_Send((Object)send31695, (Object)SMB_size, 0);
// should
send31697 = (Object)new_AST_Send((Object)send31696, (Object)symbol5591, 0);
smallint2141 = (Object)new_Type_SmallInt(0);
constant6162 = (Object)new_AST_Constant((Object)smallint2141);
// =
send31698 = (Object)new_AST_Send((Object)send31697, (Object)SMB__equal, 1, (Object)constant6162);
// statements
send31699 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31700 = (Object)new_AST_Send((Object)send31699, (Object)SMB_size, 0);
// should
send31701 = (Object)new_AST_Send((Object)send31700, (Object)symbol5591, 0);
smallint2142 = (Object)new_Type_SmallInt(0);
constant6163 = (Object)new_AST_Constant((Object)smallint2142);
// =
send31702 = (Object)new_AST_Send((Object)send31701, (Object)SMB__equal, 1, (Object)constant6163);
string3676 = (Object)new_Type_String(L"[ || b. d ]");
constant6164 = (Object)new_AST_Constant((Object)string3676);
// on:
send31703 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6164);
assign3841 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31703);
// match:
send31704 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3842 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31704);
// class
send31705 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31706 = (Object)new_AST_Send((Object)send31705, (Object)symbol5591, 0);
// =
send31707 = (Object)new_AST_Send((Object)send31706, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31708 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31709 = (Object)new_AST_Send((Object)send31708, (Object)SMB_size, 0);
// should
send31710 = (Object)new_AST_Send((Object)send31709, (Object)symbol5591, 0);
smallint2143 = (Object)new_Type_SmallInt(0);
constant6165 = (Object)new_AST_Constant((Object)smallint2143);
// =
send31711 = (Object)new_AST_Send((Object)send31710, (Object)SMB__equal, 1, (Object)constant6165);
// parameters
send31712 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31713 = (Object)new_AST_Send((Object)send31712, (Object)SMB_size, 0);
// should
send31714 = (Object)new_AST_Send((Object)send31713, (Object)symbol5591, 0);
smallint2144 = (Object)new_Type_SmallInt(0);
constant6166 = (Object)new_AST_Constant((Object)smallint2144);
// =
send31715 = (Object)new_AST_Send((Object)send31714, (Object)SMB__equal, 1, (Object)constant6166);
// statements
send31716 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31717 = (Object)new_AST_Send((Object)send31716, (Object)SMB_size, 0);
// should
send31718 = (Object)new_AST_Send((Object)send31717, (Object)symbol5591, 0);
smallint2145 = (Object)new_Type_SmallInt(2);
constant6167 = (Object)new_AST_Constant((Object)smallint2145);
// =
send31719 = (Object)new_AST_Send((Object)send31718, (Object)SMB__equal, 1, (Object)constant6167);
string3677 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant6168 = (Object)new_AST_Constant((Object)string3677);
// on:
send31720 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6168);
assign3843 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31720);
// match:
send31721 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3844 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31721);
// class
send31722 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31723 = (Object)new_AST_Send((Object)send31722, (Object)symbol5591, 0);
// =
send31724 = (Object)new_AST_Send((Object)send31723, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31725 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31726 = (Object)new_AST_Send((Object)send31725, (Object)SMB_size, 0);
// should
send31727 = (Object)new_AST_Send((Object)send31726, (Object)symbol5591, 0);
smallint2146 = (Object)new_Type_SmallInt(0);
constant6169 = (Object)new_AST_Constant((Object)smallint2146);
// =
send31728 = (Object)new_AST_Send((Object)send31727, (Object)SMB__equal, 1, (Object)constant6169);
// parameters
send31729 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31730 = (Object)new_AST_Send((Object)send31729, (Object)SMB_size, 0);
// should
send31731 = (Object)new_AST_Send((Object)send31730, (Object)symbol5591, 0);
smallint2147 = (Object)new_Type_SmallInt(0);
constant6170 = (Object)new_AST_Constant((Object)smallint2147);
// =
send31732 = (Object)new_AST_Send((Object)send31731, (Object)SMB__equal, 1, (Object)constant6170);
// statements
send31733 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31734 = (Object)new_AST_Send((Object)send31733, (Object)SMB_size, 0);
// should
send31735 = (Object)new_AST_Send((Object)send31734, (Object)symbol5591, 0);
smallint2148 = (Object)new_Type_SmallInt(2);
constant6171 = (Object)new_AST_Constant((Object)smallint2148);
// =
send31736 = (Object)new_AST_Send((Object)send31735, (Object)SMB__equal, 1, (Object)constant6171);
string3678 = (Object)new_Type_String(L"[ || b. d. ]");
constant6172 = (Object)new_AST_Constant((Object)string3678);
// on:
send31737 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6172);
assign3845 = (Object)new_AST_Assign((Object)localvariable4401, (Object)send31737);
// match:
send31738 = (Object)new_AST_Send((Object)localvariable4400, (Object)symbol5516, 1, (Object)localvariable4401);
assign3846 = (Object)new_AST_Assign((Object)localvariable4402, (Object)send31738);
// class
send31739 = (Object)new_AST_Send((Object)localvariable4402, (Object)SMB_class, 0);
// should
send31740 = (Object)new_AST_Send((Object)send31739, (Object)symbol5591, 0);
// =
send31741 = (Object)new_AST_Send((Object)send31740, (Object)SMB__equal, 1, (Object)classreference814);
// temporaries
send31742 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5419, 0);
// size
send31743 = (Object)new_AST_Send((Object)send31742, (Object)SMB_size, 0);
// should
send31744 = (Object)new_AST_Send((Object)send31743, (Object)symbol5591, 0);
smallint2149 = (Object)new_Type_SmallInt(0);
constant6173 = (Object)new_AST_Constant((Object)smallint2149);
// =
send31745 = (Object)new_AST_Send((Object)send31744, (Object)SMB__equal, 1, (Object)constant6173);
// parameters
send31746 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5405, 0);
// size
send31747 = (Object)new_AST_Send((Object)send31746, (Object)SMB_size, 0);
// should
send31748 = (Object)new_AST_Send((Object)send31747, (Object)symbol5591, 0);
smallint2150 = (Object)new_Type_SmallInt(0);
constant6174 = (Object)new_AST_Constant((Object)smallint2150);
// =
send31749 = (Object)new_AST_Send((Object)send31748, (Object)SMB__equal, 1, (Object)constant6174);
// statements
send31750 = (Object)new_AST_Send((Object)localvariable4402, (Object)symbol5415, 0);
// size
send31751 = (Object)new_AST_Send((Object)send31750, (Object)SMB_size, 0);
// should
send31752 = (Object)new_AST_Send((Object)send31751, (Object)symbol5591, 0);
smallint2151 = (Object)new_Type_SmallInt(2);
constant6175 = (Object)new_AST_Constant((Object)smallint2151);
// =
send31753 = (Object)new_AST_Send((Object)send31752, (Object)SMB__equal, 1, (Object)constant6175);
method4335 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3493, 44, assign3832, assign3833, assign3834, send31639, send31643, send31647, send31651, assign3835, assign3836, send31656, send31660, send31664, send31668, assign3837, assign3838, send31673, send31677, send31681, send31685, assign3839, assign3840, send31690, send31694, send31698, send31702, assign3841, assign3842, send31707, send31711, send31715, send31719, assign3843, assign3844, send31724, send31728, send31732, send31736, assign3845, assign3846, send31741, send31745, send31749, send31753, Self);
symbol5273 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure4335 = (Object)new_Runtime_MethodClosure(method4335);
store_method((Type_Class)class735, (Type_Symbol)symbol5273, (Runtime_MethodClosure)methodclosure4335);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable4403 = (Object)new_AST_Variable_named(L"parser");
localvariable4404 = (Object)new_AST_Variable_named(L"string");
localvariable4405 = (Object)new_AST_Variable_named(L"result");
array3494 = (Object)new_Type_Array_with(3, (Object)localvariable4403, (Object)localvariable4404, (Object)localvariable4405);
// symbolConstant
send31754 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5638, 0);
assign3847 = (Object)new_AST_Assign((Object)localvariable4403, (Object)send31754);
string3679 = (Object)new_Type_String(L"#abc");
constant6176 = (Object)new_AST_Constant((Object)string3679);
// on:
send31755 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6176);
assign3848 = (Object)new_AST_Assign((Object)localvariable4404, (Object)send31755);
// match:
send31756 = (Object)new_AST_Send((Object)localvariable4403, (Object)symbol5516, 1, (Object)localvariable4404);
assign3849 = (Object)new_AST_Assign((Object)localvariable4405, (Object)send31756);
// class
send31757 = (Object)new_AST_Send((Object)localvariable4405, (Object)SMB_class, 0);
// should
send31758 = (Object)new_AST_Send((Object)send31757, (Object)symbol5591, 0);
// =
send31759 = (Object)new_AST_Send((Object)send31758, (Object)SMB__equal, 1, (Object)classreference830);
// symbol
send31760 = (Object)new_AST_Send((Object)localvariable4405, (Object)symbol5385, 0);
// should
send31761 = (Object)new_AST_Send((Object)send31760, (Object)symbol5591, 0);
string3680 = (Object)new_Type_String(L"abc");
constant6177 = (Object)new_AST_Constant((Object)string3680);
// =
send31762 = (Object)new_AST_Send((Object)send31761, (Object)SMB__equal, 1, (Object)constant6177);
// position
send31763 = (Object)new_AST_Send((Object)localvariable4404, (Object)symbol5565, 0);
// should
send31764 = (Object)new_AST_Send((Object)send31763, (Object)symbol5591, 0);
smallint2152 = (Object)new_Type_SmallInt(4);
constant6178 = (Object)new_AST_Constant((Object)smallint2152);
// =
send31765 = (Object)new_AST_Send((Object)send31764, (Object)SMB__equal, 1, (Object)constant6178);
method4336 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3494, 7, assign3847, assign3848, assign3849, send31759, send31762, send31765, Self);
symbol5293 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure4336 = (Object)new_Runtime_MethodClosure(method4336);
store_method((Type_Class)class735, (Type_Symbol)symbol5293, (Runtime_MethodClosure)methodclosure4336);


// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable4406 = (Object)new_AST_Variable_named(L"string");
localvariable4407 = (Object)new_AST_Variable_named(L"result");
localvariable4408 = (Object)new_AST_Variable_named(L"var");
localvariable4409 = (Object)new_AST_Variable_named(L"parser");
array3495 = (Object)new_Type_Array_with(4, (Object)localvariable4406, (Object)localvariable4407, (Object)localvariable4408, (Object)localvariable4409);
// blockArguments
send31766 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5633, 0);
assign3850 = (Object)new_AST_Assign((Object)localvariable4409, (Object)send31766);
string3681 = (Object)new_Type_String(L":abcd :def");
constant6179 = (Object)new_AST_Constant((Object)string3681);
// on:
send31767 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6179);
assign3851 = (Object)new_AST_Assign((Object)localvariable4406, (Object)send31767);
// match:
send31768 = (Object)new_AST_Send((Object)localvariable4409, (Object)symbol5516, 1, (Object)localvariable4406);
assign3852 = (Object)new_AST_Assign((Object)localvariable4407, (Object)send31768);
// position
send31769 = (Object)new_AST_Send((Object)localvariable4406, (Object)symbol5565, 0);
// should
send31770 = (Object)new_AST_Send((Object)send31769, (Object)symbol5591, 0);
smallint2153 = (Object)new_Type_SmallInt(10);
constant6180 = (Object)new_AST_Constant((Object)smallint2153);
// =
send31771 = (Object)new_AST_Send((Object)send31770, (Object)SMB__equal, 1, (Object)constant6180);
// class
send31772 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_class, 0);
// should
send31773 = (Object)new_AST_Send((Object)send31772, (Object)symbol5591, 0);
// =
send31774 = (Object)new_AST_Send((Object)send31773, (Object)SMB__equal, 1, (Object)classreference783);
// size
send31775 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_size, 0);
// should
send31776 = (Object)new_AST_Send((Object)send31775, (Object)symbol5591, 0);
smallint2154 = (Object)new_Type_SmallInt(2);
constant6181 = (Object)new_AST_Constant((Object)smallint2154);
// =
send31777 = (Object)new_AST_Send((Object)send31776, (Object)SMB__equal, 1, (Object)constant6181);
smallint2155 = (Object)new_Type_SmallInt(1);
constant6182 = (Object)new_AST_Constant((Object)smallint2155);
// at:
send31778 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_at_, 1, (Object)constant6182);
assign3853 = (Object)new_AST_Assign((Object)localvariable4408, (Object)send31778);
// class
send31779 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_class, 0);
// should
send31780 = (Object)new_AST_Send((Object)send31779, (Object)symbol5591, 0);
// =
send31781 = (Object)new_AST_Send((Object)send31780, (Object)SMB__equal, 1, (Object)classreference818);
// name
send31782 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_name, 0);
// should
send31783 = (Object)new_AST_Send((Object)send31782, (Object)symbol5591, 0);
string3682 = (Object)new_Type_String(L"abcd");
constant6183 = (Object)new_AST_Constant((Object)string3682);
// =
send31784 = (Object)new_AST_Send((Object)send31783, (Object)SMB__equal, 1, (Object)constant6183);
smallint2156 = (Object)new_Type_SmallInt(2);
constant6184 = (Object)new_AST_Constant((Object)smallint2156);
// at:
send31785 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_at_, 1, (Object)constant6184);
assign3854 = (Object)new_AST_Assign((Object)localvariable4408, (Object)send31785);
// class
send31786 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_class, 0);
// should
send31787 = (Object)new_AST_Send((Object)send31786, (Object)symbol5591, 0);
// =
send31788 = (Object)new_AST_Send((Object)send31787, (Object)SMB__equal, 1, (Object)classreference818);
// name
send31789 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_name, 0);
// should
send31790 = (Object)new_AST_Send((Object)send31789, (Object)symbol5591, 0);
string3683 = (Object)new_Type_String(L"def");
constant6185 = (Object)new_AST_Constant((Object)string3683);
// =
send31791 = (Object)new_AST_Send((Object)send31790, (Object)SMB__equal, 1, (Object)constant6185);
string3684 = (Object)new_Type_String(L" :  abcd:   def ");
constant6186 = (Object)new_AST_Constant((Object)string3684);
// on:
send31792 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6186);
assign3855 = (Object)new_AST_Assign((Object)localvariable4406, (Object)send31792);
// match:
send31793 = (Object)new_AST_Send((Object)localvariable4409, (Object)symbol5516, 1, (Object)localvariable4406);
assign3856 = (Object)new_AST_Assign((Object)localvariable4407, (Object)send31793);
// position
send31794 = (Object)new_AST_Send((Object)localvariable4406, (Object)symbol5565, 0);
// should
send31795 = (Object)new_AST_Send((Object)send31794, (Object)symbol5591, 0);
smallint2157 = (Object)new_Type_SmallInt(16);
constant6187 = (Object)new_AST_Constant((Object)smallint2157);
// =
send31796 = (Object)new_AST_Send((Object)send31795, (Object)SMB__equal, 1, (Object)constant6187);
// class
send31797 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_class, 0);
// should
send31798 = (Object)new_AST_Send((Object)send31797, (Object)symbol5591, 0);
// =
send31799 = (Object)new_AST_Send((Object)send31798, (Object)SMB__equal, 1, (Object)classreference783);
// size
send31800 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_size, 0);
// should
send31801 = (Object)new_AST_Send((Object)send31800, (Object)symbol5591, 0);
smallint2158 = (Object)new_Type_SmallInt(2);
constant6188 = (Object)new_AST_Constant((Object)smallint2158);
// =
send31802 = (Object)new_AST_Send((Object)send31801, (Object)SMB__equal, 1, (Object)constant6188);
// first
send31803 = (Object)new_AST_Send((Object)localvariable4407, (Object)symbol5372, 0);
assign3857 = (Object)new_AST_Assign((Object)localvariable4408, (Object)send31803);
// class
send31804 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_class, 0);
// should
send31805 = (Object)new_AST_Send((Object)send31804, (Object)symbol5591, 0);
// =
send31806 = (Object)new_AST_Send((Object)send31805, (Object)SMB__equal, 1, (Object)classreference818);
// name
send31807 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_name, 0);
// should
send31808 = (Object)new_AST_Send((Object)send31807, (Object)symbol5591, 0);
string3685 = (Object)new_Type_String(L"abcd");
constant6189 = (Object)new_AST_Constant((Object)string3685);
// =
send31809 = (Object)new_AST_Send((Object)send31808, (Object)SMB__equal, 1, (Object)constant6189);
smallint2159 = (Object)new_Type_SmallInt(2);
constant6190 = (Object)new_AST_Constant((Object)smallint2159);
// at:
send31810 = (Object)new_AST_Send((Object)localvariable4407, (Object)SMB_at_, 1, (Object)constant6190);
assign3858 = (Object)new_AST_Assign((Object)localvariable4408, (Object)send31810);
// class
send31811 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_class, 0);
// should
send31812 = (Object)new_AST_Send((Object)send31811, (Object)symbol5591, 0);
// =
send31813 = (Object)new_AST_Send((Object)send31812, (Object)SMB__equal, 1, (Object)classreference818);
// name
send31814 = (Object)new_AST_Send((Object)localvariable4408, (Object)SMB_name, 0);
// should
send31815 = (Object)new_AST_Send((Object)send31814, (Object)symbol5591, 0);
string3686 = (Object)new_Type_String(L"def");
constant6191 = (Object)new_AST_Constant((Object)string3686);
// =
send31816 = (Object)new_AST_Send((Object)send31815, (Object)SMB__equal, 1, (Object)constant6191);
method4337 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3495, 24, assign3850, assign3851, assign3852, send31771, send31774, send31777, assign3853, send31781, send31784, assign3854, send31788, send31791, assign3855, assign3856, send31796, send31799, send31802, assign3857, send31806, send31809, assign3858, send31813, send31816, Self);
symbol5235 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure4337 = (Object)new_Runtime_MethodClosure(method4337);
store_method((Type_Class)class735, (Type_Symbol)symbol5235, (Runtime_MethodClosure)methodclosure4337);


// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method4338 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol5247 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure4338 = (Object)new_Runtime_MethodClosure(method4338);
store_method((Type_Class)class735, (Type_Symbol)symbol5247, (Runtime_MethodClosure)methodclosure4338);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable4410 = (Object)new_AST_Variable_named(L"parser");
localvariable4411 = (Object)new_AST_Variable_named(L"string");
localvariable4412 = (Object)new_AST_Variable_named(L"result");
array3496 = (Object)new_Type_Array_with(3, (Object)localvariable4410, (Object)localvariable4411, (Object)localvariable4412);
// expression
send31817 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5427, 0);
assign3859 = (Object)new_AST_Assign((Object)localvariable4410, (Object)send31817);
string3687 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant6192 = (Object)new_AST_Constant((Object)string3687);
// on:
send31818 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6192);
assign3860 = (Object)new_AST_Assign((Object)localvariable4411, (Object)send31818);
// match:
send31819 = (Object)new_AST_Send((Object)localvariable4410, (Object)symbol5516, 1, (Object)localvariable4411);
assign3861 = (Object)new_AST_Assign((Object)localvariable4412, (Object)send31819);
// class
send31820 = (Object)new_AST_Send((Object)localvariable4412, (Object)SMB_class, 0);
// should
send31821 = (Object)new_AST_Send((Object)send31820, (Object)symbol5591, 0);
// =
send31822 = (Object)new_AST_Send((Object)send31821, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31823 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5429, 0);
// class
send31824 = (Object)new_AST_Send((Object)send31823, (Object)SMB_class, 0);
// should
send31825 = (Object)new_AST_Send((Object)send31824, (Object)symbol5591, 0);
// =
send31826 = (Object)new_AST_Send((Object)send31825, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31827 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5429, 0);
// name
send31828 = (Object)new_AST_Send((Object)send31827, (Object)SMB_name, 0);
// should
send31829 = (Object)new_AST_Send((Object)send31828, (Object)symbol5591, 0);
string3688 = (Object)new_Type_String(L"a");
constant6193 = (Object)new_AST_Constant((Object)string3688);
// =
send31830 = (Object)new_AST_Send((Object)send31829, (Object)SMB__equal, 1, (Object)constant6193);
// expression
send31831 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5427, 0);
assign3862 = (Object)new_AST_Assign((Object)localvariable4412, (Object)send31831);
// class
send31832 = (Object)new_AST_Send((Object)localvariable4412, (Object)SMB_class, 0);
// should
send31833 = (Object)new_AST_Send((Object)send31832, (Object)symbol5591, 0);
// =
send31834 = (Object)new_AST_Send((Object)send31833, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31835 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5429, 0);
// class
send31836 = (Object)new_AST_Send((Object)send31835, (Object)SMB_class, 0);
// should
send31837 = (Object)new_AST_Send((Object)send31836, (Object)symbol5591, 0);
// =
send31838 = (Object)new_AST_Send((Object)send31837, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31839 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5429, 0);
// name
send31840 = (Object)new_AST_Send((Object)send31839, (Object)SMB_name, 0);
// should
send31841 = (Object)new_AST_Send((Object)send31840, (Object)symbol5591, 0);
string3689 = (Object)new_Type_String(L"b");
constant6194 = (Object)new_AST_Constant((Object)string3689);
// =
send31842 = (Object)new_AST_Send((Object)send31841, (Object)SMB__equal, 1, (Object)constant6194);
// expression
send31843 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5427, 0);
assign3863 = (Object)new_AST_Assign((Object)localvariable4412, (Object)send31843);
// class
send31844 = (Object)new_AST_Send((Object)localvariable4412, (Object)SMB_class, 0);
// should
send31845 = (Object)new_AST_Send((Object)send31844, (Object)symbol5591, 0);
// =
send31846 = (Object)new_AST_Send((Object)send31845, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send31847 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5429, 0);
// class
send31848 = (Object)new_AST_Send((Object)send31847, (Object)SMB_class, 0);
// should
send31849 = (Object)new_AST_Send((Object)send31848, (Object)symbol5591, 0);
// =
send31850 = (Object)new_AST_Send((Object)send31849, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send31851 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5429, 0);
// name
send31852 = (Object)new_AST_Send((Object)send31851, (Object)SMB_name, 0);
// should
send31853 = (Object)new_AST_Send((Object)send31852, (Object)symbol5591, 0);
string3690 = (Object)new_Type_String(L"c");
constant6195 = (Object)new_AST_Constant((Object)string3690);
// =
send31854 = (Object)new_AST_Send((Object)send31853, (Object)SMB__equal, 1, (Object)constant6195);
// expression
send31855 = (Object)new_AST_Send((Object)localvariable4412, (Object)symbol5427, 0);
// class
send31856 = (Object)new_AST_Send((Object)send31855, (Object)SMB_class, 0);
// should
send31857 = (Object)new_AST_Send((Object)send31856, (Object)symbol5591, 0);
// =
send31858 = (Object)new_AST_Send((Object)send31857, (Object)SMB__equal, 1, (Object)classreference835);
method4339 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3496, 16, assign3859, assign3860, assign3861, send31822, send31826, send31830, assign3862, send31834, send31838, send31842, assign3863, send31846, send31850, send31854, send31858, Self);
symbol5275 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure4339 = (Object)new_Runtime_MethodClosure(method4339);
store_method((Type_Class)class735, (Type_Symbol)symbol5275, (Runtime_MethodClosure)methodclosure4339);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable4413 = (Object)new_AST_Variable_named(L"parser");
localvariable4414 = (Object)new_AST_Variable_named(L"string");
localvariable4415 = (Object)new_AST_Variable_named(L"result");
array3497 = (Object)new_Type_Array_with(3, (Object)localvariable4413, (Object)localvariable4414, (Object)localvariable4415);
// unaryExpression
send31859 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5621, 0);
assign3864 = (Object)new_AST_Assign((Object)localvariable4413, (Object)send31859);
string3691 = (Object)new_Type_String(L"abc def ghi ");
constant6196 = (Object)new_AST_Constant((Object)string3691);
// on:
send31860 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6196);
assign3865 = (Object)new_AST_Assign((Object)localvariable4414, (Object)send31860);
// match:
send31861 = (Object)new_AST_Send((Object)localvariable4413, (Object)symbol5516, 1, (Object)localvariable4414);
assign3866 = (Object)new_AST_Assign((Object)localvariable4415, (Object)send31861);
// class
send31862 = (Object)new_AST_Send((Object)localvariable4415, (Object)SMB_class, 0);
// should
send31863 = (Object)new_AST_Send((Object)send31862, (Object)symbol5591, 0);
// =
send31864 = (Object)new_AST_Send((Object)send31863, (Object)SMB__equal, 1, (Object)classreference839);
// selector
send31865 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5324, 0);
// class
send31866 = (Object)new_AST_Send((Object)send31865, (Object)SMB_class, 0);
// should
send31867 = (Object)new_AST_Send((Object)send31866, (Object)symbol5591, 0);
// =
send31868 = (Object)new_AST_Send((Object)send31867, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send31869 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5324, 0);
// selector
send31870 = (Object)new_AST_Send((Object)send31869, (Object)symbol5324, 0);
// printString
send31871 = (Object)new_AST_Send((Object)send31870, (Object)symbol5519, 0);
// should
send31872 = (Object)new_AST_Send((Object)send31871, (Object)symbol5591, 0);
string3692 = (Object)new_Type_String(L"ghi");
constant6197 = (Object)new_AST_Constant((Object)string3692);
// =
send31873 = (Object)new_AST_Send((Object)send31872, (Object)SMB__equal, 1, (Object)constant6197);
// receiver
send31874 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5400, 0);
assign3867 = (Object)new_AST_Assign((Object)localvariable4415, (Object)send31874);
// class
send31875 = (Object)new_AST_Send((Object)localvariable4415, (Object)SMB_class, 0);
// should
send31876 = (Object)new_AST_Send((Object)send31875, (Object)symbol5591, 0);
// =
send31877 = (Object)new_AST_Send((Object)send31876, (Object)SMB__equal, 1, (Object)classreference839);
// selector
send31878 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5324, 0);
// class
send31879 = (Object)new_AST_Send((Object)send31878, (Object)SMB_class, 0);
// should
send31880 = (Object)new_AST_Send((Object)send31879, (Object)symbol5591, 0);
// =
send31881 = (Object)new_AST_Send((Object)send31880, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send31882 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5324, 0);
// selector
send31883 = (Object)new_AST_Send((Object)send31882, (Object)symbol5324, 0);
// printString
send31884 = (Object)new_AST_Send((Object)send31883, (Object)symbol5519, 0);
// should
send31885 = (Object)new_AST_Send((Object)send31884, (Object)symbol5591, 0);
string3693 = (Object)new_Type_String(L"def");
constant6198 = (Object)new_AST_Constant((Object)string3693);
// =
send31886 = (Object)new_AST_Send((Object)send31885, (Object)SMB__equal, 1, (Object)constant6198);
// receiver
send31887 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5400, 0);
// class
send31888 = (Object)new_AST_Send((Object)send31887, (Object)SMB_class, 0);
// should
send31889 = (Object)new_AST_Send((Object)send31888, (Object)symbol5591, 0);
// =
send31890 = (Object)new_AST_Send((Object)send31889, (Object)SMB__equal, 1, (Object)classreference818);
// receiver
send31891 = (Object)new_AST_Send((Object)localvariable4415, (Object)symbol5400, 0);
// name
send31892 = (Object)new_AST_Send((Object)send31891, (Object)SMB_name, 0);
// should
send31893 = (Object)new_AST_Send((Object)send31892, (Object)symbol5591, 0);
string3694 = (Object)new_Type_String(L"abc");
constant6199 = (Object)new_AST_Constant((Object)string3694);
// =
send31894 = (Object)new_AST_Send((Object)send31893, (Object)SMB__equal, 1, (Object)constant6199);
// position
send31895 = (Object)new_AST_Send((Object)localvariable4414, (Object)symbol5565, 0);
// should
send31896 = (Object)new_AST_Send((Object)send31895, (Object)symbol5591, 0);
smallint2160 = (Object)new_Type_SmallInt(12);
constant6200 = (Object)new_AST_Constant((Object)smallint2160);
// =
send31897 = (Object)new_AST_Send((Object)send31896, (Object)SMB__equal, 1, (Object)constant6200);
string3695 = (Object)new_Type_String(L"abc");
constant6201 = (Object)new_AST_Constant((Object)string3695);
// on:
send31898 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6201);
assign3868 = (Object)new_AST_Assign((Object)localvariable4414, (Object)send31898);
// match:
send31899 = (Object)new_AST_Send((Object)localvariable4413, (Object)symbol5516, 1, (Object)localvariable4414);
// should
send31900 = (Object)new_AST_Send((Object)send31899, (Object)symbol5591, 0);
// be
send31901 = (Object)new_AST_Send((Object)send31900, (Object)symbol5660, 0);
// isNil
send31902 = (Object)new_AST_Send((Object)send31901, (Object)SMB_isNil, 0);
method4340 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3497, 16, assign3864, assign3865, assign3866, send31864, send31868, send31873, assign3867, send31877, send31881, send31886, send31890, send31894, send31897, assign3868, send31902, Self);
symbol5267 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure4340 = (Object)new_Runtime_MethodClosure(method4340);
store_method((Type_Class)class735, (Type_Symbol)symbol5267, (Runtime_MethodClosure)methodclosure4340);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new
// new
send31903 = (Object)new_AST_Send((Object)classreference845, (Object)symbol5310, 0);
assign3869 = (Object)new_AST_Assign((Object)instancevariable1064, (Object)send31903);
method4341 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign3869, Self);
symbol5283 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure4341 = (Object)new_Runtime_MethodClosure(method4341);
store_method((Type_Class)class735, (Type_Symbol)symbol5283, (Runtime_MethodClosure)methodclosure4341);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable4416 = (Object)new_AST_Variable_named(L"parser");
localvariable4417 = (Object)new_AST_Variable_named(L"string");
localvariable4418 = (Object)new_AST_Variable_named(L"result");
array3498 = (Object)new_Type_Array_with(3, (Object)localvariable4416, (Object)localvariable4417, (Object)localvariable4418);
// binaryMessageDefinition
send31904 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5655, 0);
assign3870 = (Object)new_AST_Assign((Object)localvariable4416, (Object)send31904);
string3696 = (Object)new_Type_String(L"+= a");
constant6202 = (Object)new_AST_Constant((Object)string3696);
// on:
send31905 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6202);
assign3871 = (Object)new_AST_Assign((Object)localvariable4417, (Object)send31905);
// match:
send31906 = (Object)new_AST_Send((Object)localvariable4416, (Object)symbol5516, 1, (Object)localvariable4417);
assign3872 = (Object)new_AST_Assign((Object)localvariable4418, (Object)send31906);
// class
send31907 = (Object)new_AST_Send((Object)localvariable4418, (Object)SMB_class, 0);
// should
send31908 = (Object)new_AST_Send((Object)send31907, (Object)symbol5591, 0);
// =
send31909 = (Object)new_AST_Send((Object)send31908, (Object)SMB__equal, 1, (Object)classreference816);
// selector
send31910 = (Object)new_AST_Send((Object)localvariable4418, (Object)symbol5324, 0);
// printString
send31911 = (Object)new_AST_Send((Object)send31910, (Object)symbol5519, 0);
// should
send31912 = (Object)new_AST_Send((Object)send31911, (Object)symbol5591, 0);
string3697 = (Object)new_Type_String(L"+=");
constant6203 = (Object)new_AST_Constant((Object)string3697);
// =
send31913 = (Object)new_AST_Send((Object)send31912, (Object)SMB__equal, 1, (Object)constant6203);
// parameter
send31914 = (Object)new_AST_Send((Object)localvariable4418, (Object)symbol5423, 0);
// class
send31915 = (Object)new_AST_Send((Object)send31914, (Object)SMB_class, 0);
// should
send31916 = (Object)new_AST_Send((Object)send31915, (Object)symbol5591, 0);
// =
send31917 = (Object)new_AST_Send((Object)send31916, (Object)SMB__equal, 1, (Object)classreference818);
// parameter
send31918 = (Object)new_AST_Send((Object)localvariable4418, (Object)symbol5423, 0);
// name
send31919 = (Object)new_AST_Send((Object)send31918, (Object)SMB_name, 0);
// asString
send31920 = (Object)new_AST_Send((Object)send31919, (Object)SMB_asString, 0);
// should
send31921 = (Object)new_AST_Send((Object)send31920, (Object)symbol5591, 0);
string3698 = (Object)new_Type_String(L"a");
constant6204 = (Object)new_AST_Constant((Object)string3698);
// =
send31922 = (Object)new_AST_Send((Object)send31921, (Object)SMB__equal, 1, (Object)constant6204);
// position
send31923 = (Object)new_AST_Send((Object)localvariable4417, (Object)symbol5565, 0);
// should
send31924 = (Object)new_AST_Send((Object)send31923, (Object)symbol5591, 0);
smallint2161 = (Object)new_Type_SmallInt(4);
constant6205 = (Object)new_AST_Constant((Object)smallint2161);
// =
send31925 = (Object)new_AST_Send((Object)send31924, (Object)SMB__equal, 1, (Object)constant6205);
string3699 = (Object)new_Type_String(L"|= a");
constant6206 = (Object)new_AST_Constant((Object)string3699);
// on:
send31926 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6206);
assign3873 = (Object)new_AST_Assign((Object)localvariable4417, (Object)send31926);
// match:
send31927 = (Object)new_AST_Send((Object)localvariable4416, (Object)symbol5516, 1, (Object)localvariable4417);
// should
send31928 = (Object)new_AST_Send((Object)send31927, (Object)symbol5591, 0);
// be
send31929 = (Object)new_AST_Send((Object)send31928, (Object)symbol5660, 0);
// isNil
send31930 = (Object)new_AST_Send((Object)send31929, (Object)SMB_isNil, 0);
// position
send31931 = (Object)new_AST_Send((Object)localvariable4417, (Object)symbol5565, 0);
// should
send31932 = (Object)new_AST_Send((Object)send31931, (Object)symbol5591, 0);
smallint2162 = (Object)new_Type_SmallInt(0);
constant6207 = (Object)new_AST_Constant((Object)smallint2162);
// =
send31933 = (Object)new_AST_Send((Object)send31932, (Object)SMB__equal, 1, (Object)constant6207);
string3700 = (Object)new_Type_String(L"-= abc d");
constant6208 = (Object)new_AST_Constant((Object)string3700);
// on:
send31934 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6208);
assign3874 = (Object)new_AST_Assign((Object)localvariable4417, (Object)send31934);
// match:
send31935 = (Object)new_AST_Send((Object)localvariable4416, (Object)symbol5516, 1, (Object)localvariable4417);
assign3875 = (Object)new_AST_Assign((Object)localvariable4418, (Object)send31935);
// class
send31936 = (Object)new_AST_Send((Object)localvariable4418, (Object)SMB_class, 0);
// should
send31937 = (Object)new_AST_Send((Object)send31936, (Object)symbol5591, 0);
// =
send31938 = (Object)new_AST_Send((Object)send31937, (Object)SMB__equal, 1, (Object)classreference816);
// selector
send31939 = (Object)new_AST_Send((Object)localvariable4418, (Object)symbol5324, 0);
// printString
send31940 = (Object)new_AST_Send((Object)send31939, (Object)symbol5519, 0);
// should
send31941 = (Object)new_AST_Send((Object)send31940, (Object)symbol5591, 0);
string3701 = (Object)new_Type_String(L"-=");
constant6209 = (Object)new_AST_Constant((Object)string3701);
// =
send31942 = (Object)new_AST_Send((Object)send31941, (Object)SMB__equal, 1, (Object)constant6209);
// parameter
send31943 = (Object)new_AST_Send((Object)localvariable4418, (Object)symbol5423, 0);
// class
send31944 = (Object)new_AST_Send((Object)send31943, (Object)SMB_class, 0);
// should
send31945 = (Object)new_AST_Send((Object)send31944, (Object)symbol5591, 0);
// =
send31946 = (Object)new_AST_Send((Object)send31945, (Object)SMB__equal, 1, (Object)classreference818);
// parameter
send31947 = (Object)new_AST_Send((Object)localvariable4418, (Object)symbol5423, 0);
// name
send31948 = (Object)new_AST_Send((Object)send31947, (Object)SMB_name, 0);
// asString
send31949 = (Object)new_AST_Send((Object)send31948, (Object)SMB_asString, 0);
// should
send31950 = (Object)new_AST_Send((Object)send31949, (Object)symbol5591, 0);
string3702 = (Object)new_Type_String(L"abc");
constant6210 = (Object)new_AST_Constant((Object)string3702);
// =
send31951 = (Object)new_AST_Send((Object)send31950, (Object)SMB__equal, 1, (Object)constant6210);
// position
send31952 = (Object)new_AST_Send((Object)localvariable4417, (Object)symbol5565, 0);
// should
send31953 = (Object)new_AST_Send((Object)send31952, (Object)symbol5591, 0);
smallint2163 = (Object)new_Type_SmallInt(6);
constant6211 = (Object)new_AST_Constant((Object)smallint2163);
// =
send31954 = (Object)new_AST_Send((Object)send31953, (Object)SMB__equal, 1, (Object)constant6211);
method4342 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3498, 19, assign3870, assign3871, assign3872, send31909, send31913, send31917, send31922, send31925, assign3873, send31930, send31933, assign3874, assign3875, send31938, send31942, send31946, send31951, send31954, Self);
symbol5287 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure4342 = (Object)new_Runtime_MethodClosure(method4342);
store_method((Type_Class)class735, (Type_Symbol)symbol5287, (Runtime_MethodClosure)methodclosure4342);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable4419 = (Object)new_AST_Variable_named(L"parser");
localvariable4420 = (Object)new_AST_Variable_named(L"string");
localvariable4421 = (Object)new_AST_Variable_named(L"result");
localvariable4422 = (Object)new_AST_Variable_named(L"expression");
array3499 = (Object)new_Type_Array_with(4, (Object)localvariable4419, (Object)localvariable4420, (Object)localvariable4421, (Object)localvariable4422);
// cascadedMessageExpression
send31955 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5609, 0);
assign3876 = (Object)new_AST_Assign((Object)localvariable4419, (Object)send31955);
string3703 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant6212 = (Object)new_AST_Constant((Object)string3703);
// on:
send31956 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6212);
assign3877 = (Object)new_AST_Assign((Object)localvariable4420, (Object)send31956);
// match:
send31957 = (Object)new_AST_Send((Object)localvariable4419, (Object)symbol5516, 1, (Object)localvariable4420);
assign3878 = (Object)new_AST_Assign((Object)localvariable4421, (Object)send31957);
// class
send31958 = (Object)new_AST_Send((Object)localvariable4421, (Object)SMB_class, 0);
// should
send31959 = (Object)new_AST_Send((Object)send31958, (Object)symbol5591, 0);
// =
send31960 = (Object)new_AST_Send((Object)send31959, (Object)SMB__equal, 1, (Object)classreference821);
// receiver
send31961 = (Object)new_AST_Send((Object)localvariable4421, (Object)symbol5400, 0);
// class
send31962 = (Object)new_AST_Send((Object)send31961, (Object)SMB_class, 0);
// should
send31963 = (Object)new_AST_Send((Object)send31962, (Object)symbol5591, 0);
// =
send31964 = (Object)new_AST_Send((Object)send31963, (Object)SMB__equal, 1, (Object)classreference823);
// cascades
send31965 = (Object)new_AST_Send((Object)localvariable4421, (Object)symbol5397, 0);
// size
send31966 = (Object)new_AST_Send((Object)send31965, (Object)SMB_size, 0);
// should
send31967 = (Object)new_AST_Send((Object)send31966, (Object)symbol5591, 0);
smallint2164 = (Object)new_Type_SmallInt(4);
constant6213 = (Object)new_AST_Constant((Object)smallint2164);
// =
send31968 = (Object)new_AST_Send((Object)send31967, (Object)SMB__equal, 1, (Object)constant6213);
// cascades
send31969 = (Object)new_AST_Send((Object)localvariable4421, (Object)symbol5397, 0);
smallint2165 = (Object)new_Type_SmallInt(1);
constant6214 = (Object)new_AST_Constant((Object)smallint2165);
// at:
send31970 = (Object)new_AST_Send((Object)send31969, (Object)SMB_at_, 1, (Object)constant6214);
assign3879 = (Object)new_AST_Assign((Object)localvariable4422, (Object)send31970);
// class
send31971 = (Object)new_AST_Send((Object)localvariable4422, (Object)SMB_class, 0);
// should
send31972 = (Object)new_AST_Send((Object)send31971, (Object)symbol5591, 0);
// =
send31973 = (Object)new_AST_Send((Object)send31972, (Object)SMB__equal, 1, (Object)classreference828);
// cascades
send31974 = (Object)new_AST_Send((Object)localvariable4421, (Object)symbol5397, 0);
smallint2166 = (Object)new_Type_SmallInt(2);
constant6215 = (Object)new_AST_Constant((Object)smallint2166);
// at:
send31975 = (Object)new_AST_Send((Object)send31974, (Object)SMB_at_, 1, (Object)constant6215);
assign3880 = (Object)new_AST_Assign((Object)localvariable4422, (Object)send31975);
// class
send31976 = (Object)new_AST_Send((Object)localvariable4422, (Object)SMB_class, 0);
// should
send31977 = (Object)new_AST_Send((Object)send31976, (Object)symbol5591, 0);
// =
send31978 = (Object)new_AST_Send((Object)send31977, (Object)SMB__equal, 1, (Object)classreference835);
// cascades
send31979 = (Object)new_AST_Send((Object)localvariable4421, (Object)symbol5397, 0);
smallint2167 = (Object)new_Type_SmallInt(3);
constant6216 = (Object)new_AST_Constant((Object)smallint2167);
// at:
send31980 = (Object)new_AST_Send((Object)send31979, (Object)SMB_at_, 1, (Object)constant6216);
assign3881 = (Object)new_AST_Assign((Object)localvariable4422, (Object)send31980);
// class
send31981 = (Object)new_AST_Send((Object)localvariable4422, (Object)SMB_class, 0);
// should
send31982 = (Object)new_AST_Send((Object)send31981, (Object)symbol5591, 0);
// =
send31983 = (Object)new_AST_Send((Object)send31982, (Object)SMB__equal, 1, (Object)classreference835);
// cascades
send31984 = (Object)new_AST_Send((Object)localvariable4421, (Object)symbol5397, 0);
smallint2168 = (Object)new_Type_SmallInt(4);
constant6217 = (Object)new_AST_Constant((Object)smallint2168);
// at:
send31985 = (Object)new_AST_Send((Object)send31984, (Object)SMB_at_, 1, (Object)constant6217);
assign3882 = (Object)new_AST_Assign((Object)localvariable4422, (Object)send31985);
// class
send31986 = (Object)new_AST_Send((Object)localvariable4422, (Object)SMB_class, 0);
// should
send31987 = (Object)new_AST_Send((Object)send31986, (Object)symbol5591, 0);
// =
send31988 = (Object)new_AST_Send((Object)send31987, (Object)SMB__equal, 1, (Object)classreference839);
method4343 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3499, 15, assign3876, assign3877, assign3878, send31960, send31964, send31968, assign3879, send31973, assign3880, send31978, assign3881, send31983, assign3882, send31988, Self);
symbol5240 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure4343 = (Object)new_Runtime_MethodClosure(method4343);
store_method((Type_Class)class735, (Type_Symbol)symbol5240, (Runtime_MethodClosure)methodclosure4343);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable4423 = (Object)new_AST_Variable_named(L"parser");
localvariable4424 = (Object)new_AST_Variable_named(L"string");
localvariable4425 = (Object)new_AST_Variable_named(L"result");
array3500 = (Object)new_Type_Array_with(3, (Object)localvariable4423, (Object)localvariable4424, (Object)localvariable4425);
// binaryObjectDescription
send31989 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5618, 0);
assign3883 = (Object)new_AST_Assign((Object)localvariable4423, (Object)send31989);
string3704 = (Object)new_Type_String(L"abc def ghi ");
constant6218 = (Object)new_AST_Constant((Object)string3704);
// on:
send31990 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6218);
assign3884 = (Object)new_AST_Assign((Object)localvariable4424, (Object)send31990);
// match:
send31991 = (Object)new_AST_Send((Object)localvariable4423, (Object)symbol5516, 1, (Object)localvariable4424);
assign3885 = (Object)new_AST_Assign((Object)localvariable4425, (Object)send31991);
// class
send31992 = (Object)new_AST_Send((Object)localvariable4425, (Object)SMB_class, 0);
// should
send31993 = (Object)new_AST_Send((Object)send31992, (Object)symbol5591, 0);
// =
send31994 = (Object)new_AST_Send((Object)send31993, (Object)SMB__equal, 1, (Object)classreference839);
// selector
send31995 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5324, 0);
// class
send31996 = (Object)new_AST_Send((Object)send31995, (Object)SMB_class, 0);
// should
send31997 = (Object)new_AST_Send((Object)send31996, (Object)symbol5591, 0);
// =
send31998 = (Object)new_AST_Send((Object)send31997, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send31999 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5324, 0);
// selector
send32000 = (Object)new_AST_Send((Object)send31999, (Object)symbol5324, 0);
// asString
send32001 = (Object)new_AST_Send((Object)send32000, (Object)SMB_asString, 0);
// should
send32002 = (Object)new_AST_Send((Object)send32001, (Object)symbol5591, 0);
string3705 = (Object)new_Type_String(L"ghi");
constant6219 = (Object)new_AST_Constant((Object)string3705);
// =
send32003 = (Object)new_AST_Send((Object)send32002, (Object)SMB__equal, 1, (Object)constant6219);
// receiver
send32004 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5400, 0);
assign3886 = (Object)new_AST_Assign((Object)localvariable4425, (Object)send32004);
// class
send32005 = (Object)new_AST_Send((Object)localvariable4425, (Object)SMB_class, 0);
// should
send32006 = (Object)new_AST_Send((Object)send32005, (Object)symbol5591, 0);
// =
send32007 = (Object)new_AST_Send((Object)send32006, (Object)SMB__equal, 1, (Object)classreference839);
// selector
send32008 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5324, 0);
// class
send32009 = (Object)new_AST_Send((Object)send32008, (Object)SMB_class, 0);
// should
send32010 = (Object)new_AST_Send((Object)send32009, (Object)symbol5591, 0);
// =
send32011 = (Object)new_AST_Send((Object)send32010, (Object)SMB__equal, 1, (Object)classreference831);
// selector
send32012 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5324, 0);
// selector
send32013 = (Object)new_AST_Send((Object)send32012, (Object)symbol5324, 0);
// asString
send32014 = (Object)new_AST_Send((Object)send32013, (Object)SMB_asString, 0);
// should
send32015 = (Object)new_AST_Send((Object)send32014, (Object)symbol5591, 0);
string3706 = (Object)new_Type_String(L"def");
constant6220 = (Object)new_AST_Constant((Object)string3706);
// =
send32016 = (Object)new_AST_Send((Object)send32015, (Object)SMB__equal, 1, (Object)constant6220);
// receiver
send32017 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5400, 0);
// class
send32018 = (Object)new_AST_Send((Object)send32017, (Object)SMB_class, 0);
// should
send32019 = (Object)new_AST_Send((Object)send32018, (Object)symbol5591, 0);
// =
send32020 = (Object)new_AST_Send((Object)send32019, (Object)SMB__equal, 1, (Object)classreference818);
// receiver
send32021 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5400, 0);
// name
send32022 = (Object)new_AST_Send((Object)send32021, (Object)SMB_name, 0);
// should
send32023 = (Object)new_AST_Send((Object)send32022, (Object)symbol5591, 0);
string3707 = (Object)new_Type_String(L"abc");
constant6221 = (Object)new_AST_Constant((Object)string3707);
// =
send32024 = (Object)new_AST_Send((Object)send32023, (Object)SMB__equal, 1, (Object)constant6221);
// position
send32025 = (Object)new_AST_Send((Object)localvariable4424, (Object)symbol5565, 0);
// should
send32026 = (Object)new_AST_Send((Object)send32025, (Object)symbol5591, 0);
smallint2169 = (Object)new_Type_SmallInt(12);
constant6222 = (Object)new_AST_Constant((Object)smallint2169);
// =
send32027 = (Object)new_AST_Send((Object)send32026, (Object)SMB__equal, 1, (Object)constant6222);
string3708 = (Object)new_Type_String(L"3");
constant6223 = (Object)new_AST_Constant((Object)string3708);
// on:
send32028 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6223);
assign3887 = (Object)new_AST_Assign((Object)localvariable4424, (Object)send32028);
// match:
send32029 = (Object)new_AST_Send((Object)localvariable4423, (Object)symbol5516, 1, (Object)localvariable4424);
assign3888 = (Object)new_AST_Assign((Object)localvariable4425, (Object)send32029);
// class
send32030 = (Object)new_AST_Send((Object)localvariable4425, (Object)SMB_class, 0);
// should
send32031 = (Object)new_AST_Send((Object)send32030, (Object)symbol5591, 0);
// =
send32032 = (Object)new_AST_Send((Object)send32031, (Object)SMB__equal, 1, (Object)classreference823);
// number
send32033 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5380, 0);
// should
send32034 = (Object)new_AST_Send((Object)send32033, (Object)symbol5591, 0);
string3709 = (Object)new_Type_String(L"3");
constant6224 = (Object)new_AST_Constant((Object)string3709);
// =
send32035 = (Object)new_AST_Send((Object)send32034, (Object)SMB__equal, 1, (Object)constant6224);
// position
send32036 = (Object)new_AST_Send((Object)localvariable4424, (Object)symbol5565, 0);
// should
send32037 = (Object)new_AST_Send((Object)send32036, (Object)symbol5591, 0);
smallint2170 = (Object)new_Type_SmallInt(1);
constant6225 = (Object)new_AST_Constant((Object)smallint2170);
// =
send32038 = (Object)new_AST_Send((Object)send32037, (Object)SMB__equal, 1, (Object)constant6225);
string3710 = (Object)new_Type_String(L"abc + ghi * c ");
constant6226 = (Object)new_AST_Constant((Object)string3710);
// on:
send32039 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6226);
assign3889 = (Object)new_AST_Assign((Object)localvariable4424, (Object)send32039);
// match:
send32040 = (Object)new_AST_Send((Object)localvariable4423, (Object)symbol5516, 1, (Object)localvariable4424);
assign3890 = (Object)new_AST_Assign((Object)localvariable4425, (Object)send32040);
// class
send32041 = (Object)new_AST_Send((Object)localvariable4425, (Object)SMB_class, 0);
// should
send32042 = (Object)new_AST_Send((Object)send32041, (Object)symbol5591, 0);
// =
send32043 = (Object)new_AST_Send((Object)send32042, (Object)SMB__equal, 1, (Object)classreference828);
// selector
send32044 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5324, 0);
// printString
send32045 = (Object)new_AST_Send((Object)send32044, (Object)symbol5519, 0);
// should
send32046 = (Object)new_AST_Send((Object)send32045, (Object)symbol5591, 0);
string3711 = (Object)new_Type_String(L"*");
constant6227 = (Object)new_AST_Constant((Object)string3711);
// =
send32047 = (Object)new_AST_Send((Object)send32046, (Object)SMB__equal, 1, (Object)constant6227);
// argument
send32048 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5408, 0);
// class
send32049 = (Object)new_AST_Send((Object)send32048, (Object)SMB_class, 0);
// should
send32050 = (Object)new_AST_Send((Object)send32049, (Object)symbol5591, 0);
// =
send32051 = (Object)new_AST_Send((Object)send32050, (Object)SMB__equal, 1, (Object)classreference818);
// argument
send32052 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5408, 0);
// name
send32053 = (Object)new_AST_Send((Object)send32052, (Object)SMB_name, 0);
// should
send32054 = (Object)new_AST_Send((Object)send32053, (Object)symbol5591, 0);
string3712 = (Object)new_Type_String(L"c");
constant6228 = (Object)new_AST_Constant((Object)string3712);
// =
send32055 = (Object)new_AST_Send((Object)send32054, (Object)SMB__equal, 1, (Object)constant6228);
// receiver
send32056 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5400, 0);
assign3891 = (Object)new_AST_Assign((Object)localvariable4425, (Object)send32056);
// class
send32057 = (Object)new_AST_Send((Object)localvariable4425, (Object)SMB_class, 0);
// should
send32058 = (Object)new_AST_Send((Object)send32057, (Object)symbol5591, 0);
// =
send32059 = (Object)new_AST_Send((Object)send32058, (Object)SMB__equal, 1, (Object)classreference828);
// selector
send32060 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5324, 0);
// printString
send32061 = (Object)new_AST_Send((Object)send32060, (Object)symbol5519, 0);
// should
send32062 = (Object)new_AST_Send((Object)send32061, (Object)symbol5591, 0);
string3713 = (Object)new_Type_String(L"+");
constant6229 = (Object)new_AST_Constant((Object)string3713);
// =
send32063 = (Object)new_AST_Send((Object)send32062, (Object)SMB__equal, 1, (Object)constant6229);
// receiver
send32064 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5400, 0);
// class
send32065 = (Object)new_AST_Send((Object)send32064, (Object)SMB_class, 0);
// should
send32066 = (Object)new_AST_Send((Object)send32065, (Object)symbol5591, 0);
// =
send32067 = (Object)new_AST_Send((Object)send32066, (Object)SMB__equal, 1, (Object)classreference818);
// receiver
send32068 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5400, 0);
// name
send32069 = (Object)new_AST_Send((Object)send32068, (Object)SMB_name, 0);
// should
send32070 = (Object)new_AST_Send((Object)send32069, (Object)symbol5591, 0);
string3714 = (Object)new_Type_String(L"abc");
constant6230 = (Object)new_AST_Constant((Object)string3714);
// =
send32071 = (Object)new_AST_Send((Object)send32070, (Object)SMB__equal, 1, (Object)constant6230);
// argument
send32072 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5408, 0);
// class
send32073 = (Object)new_AST_Send((Object)send32072, (Object)SMB_class, 0);
// should
send32074 = (Object)new_AST_Send((Object)send32073, (Object)symbol5591, 0);
// =
send32075 = (Object)new_AST_Send((Object)send32074, (Object)SMB__equal, 1, (Object)classreference818);
// argument
send32076 = (Object)new_AST_Send((Object)localvariable4425, (Object)symbol5408, 0);
// name
send32077 = (Object)new_AST_Send((Object)send32076, (Object)SMB_name, 0);
// should
send32078 = (Object)new_AST_Send((Object)send32077, (Object)symbol5591, 0);
string3715 = (Object)new_Type_String(L"ghi");
constant6231 = (Object)new_AST_Constant((Object)string3715);
// =
send32079 = (Object)new_AST_Send((Object)send32078, (Object)SMB__equal, 1, (Object)constant6231);
// position
send32080 = (Object)new_AST_Send((Object)localvariable4424, (Object)symbol5565, 0);
// should
send32081 = (Object)new_AST_Send((Object)send32080, (Object)symbol5591, 0);
smallint2171 = (Object)new_Type_SmallInt(13);
constant6232 = (Object)new_AST_Constant((Object)smallint2171);
// =
send32082 = (Object)new_AST_Send((Object)send32081, (Object)SMB__equal, 1, (Object)constant6232);
method4344 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3500, 33, assign3883, assign3884, assign3885, send31994, send31998, send32003, assign3886, send32007, send32011, send32016, send32020, send32024, send32027, assign3887, assign3888, send32032, send32035, send32038, assign3889, assign3890, send32043, send32047, send32051, send32055, assign3891, send32059, send32063, send32067, send32071, send32075, send32079, send32082, Self);
symbol5260 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure4344 = (Object)new_Runtime_MethodClosure(method4344);
store_method((Type_Class)class735, (Type_Symbol)symbol5260, (Runtime_MethodClosure)methodclosure4344);


// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable4426 = (Object)new_AST_Variable_named(L"parser");
localvariable4427 = (Object)new_AST_Variable_named(L"string");
localvariable4428 = (Object)new_AST_Variable_named(L"result");
localvariable4429 = (Object)new_AST_Variable_named(L"arg");
array3501 = (Object)new_Type_Array_with(4, (Object)localvariable4426, (Object)localvariable4427, (Object)localvariable4428, (Object)localvariable4429);
// keywordMessageExpression
send32083 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5622, 0);
assign3892 = (Object)new_AST_Assign((Object)localvariable4426, (Object)send32083);
string3716 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant6233 = (Object)new_AST_Constant((Object)string3716);
// on:
send32084 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6233);
assign3893 = (Object)new_AST_Assign((Object)localvariable4427, (Object)send32084);
// match:
send32085 = (Object)new_AST_Send((Object)localvariable4426, (Object)symbol5516, 1, (Object)localvariable4427);
assign3894 = (Object)new_AST_Assign((Object)localvariable4428, (Object)send32085);
// class
send32086 = (Object)new_AST_Send((Object)localvariable4428, (Object)SMB_class, 0);
// should
send32087 = (Object)new_AST_Send((Object)send32086, (Object)symbol5591, 0);
// =
send32088 = (Object)new_AST_Send((Object)send32087, (Object)SMB__equal, 1, (Object)classreference835);
// keywords
send32089 = (Object)new_AST_Send((Object)localvariable4428, (Object)symbol5410, 0);
// asArray
send32090 = (Object)new_AST_Send((Object)send32089, (Object)SMB_asArray, 0);
// should
send32091 = (Object)new_AST_Send((Object)send32090, (Object)symbol5591, 0);
localvariable4430 = (Object)new_AST_Variable_named(L"receiver");
array3502 = (Object)new_Type_Array_with(1, (Object)localvariable4430);
smallint2172 = (Object)new_Type_SmallInt(1);
constant6234 = (Object)new_AST_Constant((Object)smallint2172);
string3717 = (Object)new_Type_String(L"abc");
constant6235 = (Object)new_AST_Constant((Object)string3717);
// at:put:
send32092 = (Object)new_AST_Send((Object)localvariable4430, (Object)SMB_at_put_, 2, (Object)constant6234, (Object)constant6235);
smallint2173 = (Object)new_Type_SmallInt(2);
constant6236 = (Object)new_AST_Constant((Object)smallint2173);
string3718 = (Object)new_Type_String(L"def");
constant6237 = (Object)new_AST_Constant((Object)string3718);
// at:put:
send32093 = (Object)new_AST_Send((Object)localvariable4430, (Object)SMB_at_put_, 2, (Object)constant6236, (Object)constant6237);
smallint2174 = (Object)new_Type_SmallInt(3);
constant6238 = (Object)new_AST_Constant((Object)smallint2174);
string3719 = (Object)new_Type_String(L"ghi");
constant6239 = (Object)new_AST_Constant((Object)string3719);
// at:put:
send32094 = (Object)new_AST_Send((Object)localvariable4430, (Object)SMB_at_put_, 2, (Object)constant6238, (Object)constant6239);
// yourself
send32095 = (Object)new_AST_Send((Object)localvariable4430, (Object)symbol5216, 0);
block2008 = (Object)new_AST_Block_with((Type_Array)array3502, (Type_Array)empty_Type_Array, 1, 4, send32092, send32093, send32094, send32095);
smallint2175 = (Object)new_Type_SmallInt(3);
constant6240 = (Object)new_AST_Constant((Object)smallint2175);
// new:
send32096 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6240);
// value:
send32097 = (Object)new_AST_Send((Object)block2008, (Object)SMB_value_, 1, (Object)send32096);
// =
send32098 = (Object)new_AST_Send((Object)send32091, (Object)SMB__equal, 1, (Object)send32097);
// arguments
send32099 = (Object)new_AST_Send((Object)localvariable4428, (Object)symbol5325, 0);
// first
send32100 = (Object)new_AST_Send((Object)send32099, (Object)symbol5372, 0);
assign3895 = (Object)new_AST_Assign((Object)localvariable4429, (Object)send32100);
// class
send32101 = (Object)new_AST_Send((Object)localvariable4429, (Object)SMB_class, 0);
// should
send32102 = (Object)new_AST_Send((Object)send32101, (Object)symbol5591, 0);
// =
send32103 = (Object)new_AST_Send((Object)send32102, (Object)SMB__equal, 1, (Object)classreference823);
// arguments
send32104 = (Object)new_AST_Send((Object)localvariable4428, (Object)symbol5325, 0);
smallint2176 = (Object)new_Type_SmallInt(2);
constant6241 = (Object)new_AST_Constant((Object)smallint2176);
// at:
send32105 = (Object)new_AST_Send((Object)send32104, (Object)SMB_at_, 1, (Object)constant6241);
assign3896 = (Object)new_AST_Assign((Object)localvariable4429, (Object)send32105);
// class
send32106 = (Object)new_AST_Send((Object)localvariable4429, (Object)SMB_class, 0);
// should
send32107 = (Object)new_AST_Send((Object)send32106, (Object)symbol5591, 0);
// =
send32108 = (Object)new_AST_Send((Object)send32107, (Object)SMB__equal, 1, (Object)classreference828);
// arguments
send32109 = (Object)new_AST_Send((Object)localvariable4428, (Object)symbol5325, 0);
smallint2177 = (Object)new_Type_SmallInt(3);
constant6242 = (Object)new_AST_Constant((Object)smallint2177);
// at:
send32110 = (Object)new_AST_Send((Object)send32109, (Object)SMB_at_, 1, (Object)constant6242);
assign3897 = (Object)new_AST_Assign((Object)localvariable4429, (Object)send32110);
// class
send32111 = (Object)new_AST_Send((Object)localvariable4429, (Object)SMB_class, 0);
// should
send32112 = (Object)new_AST_Send((Object)send32111, (Object)symbol5591, 0);
// =
send32113 = (Object)new_AST_Send((Object)send32112, (Object)SMB__equal, 1, (Object)classreference839);
// position
send32114 = (Object)new_AST_Send((Object)localvariable4427, (Object)symbol5565, 0);
// should
send32115 = (Object)new_AST_Send((Object)send32114, (Object)symbol5591, 0);
smallint2178 = (Object)new_Type_SmallInt(25);
constant6243 = (Object)new_AST_Constant((Object)smallint2178);
// =
send32116 = (Object)new_AST_Send((Object)send32115, (Object)SMB__equal, 1, (Object)constant6243);
method4345 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3501, 13, assign3892, assign3893, assign3894, send32088, send32098, assign3895, send32103, assign3896, send32108, assign3897, send32113, send32116, Self);
symbol5249 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure4345 = (Object)new_Runtime_MethodClosure(method4345);
store_method((Type_Class)class735, (Type_Symbol)symbol5249, (Runtime_MethodClosure)methodclosure4345);


// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable4431 = (Object)new_AST_Variable_named(L"parser");
localvariable4432 = (Object)new_AST_Variable_named(L"string");
localvariable4433 = (Object)new_AST_Variable_named(L"result");
array3503 = (Object)new_Type_Array_with(3, (Object)localvariable4431, (Object)localvariable4432, (Object)localvariable4433);
// subExpression
send32117 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5598, 0);
assign3898 = (Object)new_AST_Assign((Object)localvariable4431, (Object)send32117);
string3720 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant6244 = (Object)new_AST_Constant((Object)string3720);
// on:
send32118 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6244);
assign3899 = (Object)new_AST_Assign((Object)localvariable4432, (Object)send32118);
// match:
send32119 = (Object)new_AST_Send((Object)localvariable4431, (Object)symbol5516, 1, (Object)localvariable4432);
// should
send32120 = (Object)new_AST_Send((Object)send32119, (Object)symbol5591, 0);
// be
send32121 = (Object)new_AST_Send((Object)send32120, (Object)symbol5660, 0);
// isNil
send32122 = (Object)new_AST_Send((Object)send32121, (Object)SMB_isNil, 0);
string3721 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant6245 = (Object)new_AST_Constant((Object)string3721);
// on:
send32123 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6245);
assign3900 = (Object)new_AST_Assign((Object)localvariable4432, (Object)send32123);
// match:
send32124 = (Object)new_AST_Send((Object)localvariable4431, (Object)symbol5516, 1, (Object)localvariable4432);
assign3901 = (Object)new_AST_Assign((Object)localvariable4433, (Object)send32124);
// class
send32125 = (Object)new_AST_Send((Object)localvariable4433, (Object)SMB_class, 0);
// should
send32126 = (Object)new_AST_Send((Object)send32125, (Object)symbol5591, 0);
// =
send32127 = (Object)new_AST_Send((Object)send32126, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send32128 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5429, 0);
// class
send32129 = (Object)new_AST_Send((Object)send32128, (Object)SMB_class, 0);
// should
send32130 = (Object)new_AST_Send((Object)send32129, (Object)symbol5591, 0);
// =
send32131 = (Object)new_AST_Send((Object)send32130, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send32132 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5429, 0);
// name
send32133 = (Object)new_AST_Send((Object)send32132, (Object)SMB_name, 0);
// should
send32134 = (Object)new_AST_Send((Object)send32133, (Object)symbol5591, 0);
string3722 = (Object)new_Type_String(L"a");
constant6246 = (Object)new_AST_Constant((Object)string3722);
// =
send32135 = (Object)new_AST_Send((Object)send32134, (Object)SMB__equal, 1, (Object)constant6246);
// expression
send32136 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5427, 0);
assign3902 = (Object)new_AST_Assign((Object)localvariable4433, (Object)send32136);
// class
send32137 = (Object)new_AST_Send((Object)localvariable4433, (Object)SMB_class, 0);
// should
send32138 = (Object)new_AST_Send((Object)send32137, (Object)symbol5591, 0);
// =
send32139 = (Object)new_AST_Send((Object)send32138, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send32140 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5429, 0);
// class
send32141 = (Object)new_AST_Send((Object)send32140, (Object)SMB_class, 0);
// should
send32142 = (Object)new_AST_Send((Object)send32141, (Object)symbol5591, 0);
// =
send32143 = (Object)new_AST_Send((Object)send32142, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send32144 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5429, 0);
// name
send32145 = (Object)new_AST_Send((Object)send32144, (Object)SMB_name, 0);
// should
send32146 = (Object)new_AST_Send((Object)send32145, (Object)symbol5591, 0);
string3723 = (Object)new_Type_String(L"b");
constant6247 = (Object)new_AST_Constant((Object)string3723);
// =
send32147 = (Object)new_AST_Send((Object)send32146, (Object)SMB__equal, 1, (Object)constant6247);
// expression
send32148 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5427, 0);
assign3903 = (Object)new_AST_Assign((Object)localvariable4433, (Object)send32148);
// class
send32149 = (Object)new_AST_Send((Object)localvariable4433, (Object)SMB_class, 0);
// should
send32150 = (Object)new_AST_Send((Object)send32149, (Object)symbol5591, 0);
// =
send32151 = (Object)new_AST_Send((Object)send32150, (Object)SMB__equal, 1, (Object)classreference820);
// variable
send32152 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5429, 0);
// class
send32153 = (Object)new_AST_Send((Object)send32152, (Object)SMB_class, 0);
// should
send32154 = (Object)new_AST_Send((Object)send32153, (Object)symbol5591, 0);
// =
send32155 = (Object)new_AST_Send((Object)send32154, (Object)SMB__equal, 1, (Object)classreference818);
// variable
send32156 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5429, 0);
// name
send32157 = (Object)new_AST_Send((Object)send32156, (Object)SMB_name, 0);
// should
send32158 = (Object)new_AST_Send((Object)send32157, (Object)symbol5591, 0);
string3724 = (Object)new_Type_String(L"c");
constant6248 = (Object)new_AST_Constant((Object)string3724);
// =
send32159 = (Object)new_AST_Send((Object)send32158, (Object)SMB__equal, 1, (Object)constant6248);
// expression
send32160 = (Object)new_AST_Send((Object)localvariable4433, (Object)symbol5427, 0);
// class
send32161 = (Object)new_AST_Send((Object)send32160, (Object)SMB_class, 0);
// should
send32162 = (Object)new_AST_Send((Object)send32161, (Object)symbol5591, 0);
// =
send32163 = (Object)new_AST_Send((Object)send32162, (Object)SMB__equal, 1, (Object)classreference835);
method4346 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3503, 18, assign3898, assign3899, send32122, assign3900, assign3901, send32127, send32131, send32135, assign3902, send32139, send32143, send32147, assign3903, send32151, send32155, send32159, send32163, Self);
symbol5297 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure4346 = (Object)new_Runtime_MethodClosure(method4346);
store_method((Type_Class)class735, (Type_Symbol)symbol5297, (Runtime_MethodClosure)methodclosure4346);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable4434 = (Object)new_AST_Variable_named(L"parser");
localvariable4435 = (Object)new_AST_Variable_named(L"string");
localvariable4436 = (Object)new_AST_Variable_named(L"result");
array3504 = (Object)new_Type_Array_with(3, (Object)localvariable4434, (Object)localvariable4435, (Object)localvariable4436);
// primary
send32164 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5610, 0);
assign3904 = (Object)new_AST_Assign((Object)localvariable4434, (Object)send32164);
string3725 = (Object)new_Type_String(L"abc ");
constant6249 = (Object)new_AST_Constant((Object)string3725);
// on:
send32165 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6249);
assign3905 = (Object)new_AST_Assign((Object)localvariable4435, (Object)send32165);
// match:
send32166 = (Object)new_AST_Send((Object)localvariable4434, (Object)symbol5516, 1, (Object)localvariable4435);
assign3906 = (Object)new_AST_Assign((Object)localvariable4436, (Object)send32166);
// class
send32167 = (Object)new_AST_Send((Object)localvariable4436, (Object)SMB_class, 0);
// should
send32168 = (Object)new_AST_Send((Object)send32167, (Object)symbol5591, 0);
// =
send32169 = (Object)new_AST_Send((Object)send32168, (Object)SMB__equal, 1, (Object)classreference818);
// name
send32170 = (Object)new_AST_Send((Object)localvariable4436, (Object)SMB_name, 0);
// should
send32171 = (Object)new_AST_Send((Object)send32170, (Object)symbol5591, 0);
string3726 = (Object)new_Type_String(L"abc");
constant6250 = (Object)new_AST_Constant((Object)string3726);
// =
send32172 = (Object)new_AST_Send((Object)send32171, (Object)SMB__equal, 1, (Object)constant6250);
// position
send32173 = (Object)new_AST_Send((Object)localvariable4435, (Object)symbol5565, 0);
// should
send32174 = (Object)new_AST_Send((Object)send32173, (Object)symbol5591, 0);
smallint2179 = (Object)new_Type_SmallInt(3);
constant6251 = (Object)new_AST_Constant((Object)smallint2179);
// =
send32175 = (Object)new_AST_Send((Object)send32174, (Object)SMB__equal, 1, (Object)constant6251);
string3727 = (Object)new_Type_String(L"3");
constant6252 = (Object)new_AST_Constant((Object)string3727);
// on:
send32176 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6252);
assign3907 = (Object)new_AST_Assign((Object)localvariable4435, (Object)send32176);
// match:
send32177 = (Object)new_AST_Send((Object)localvariable4434, (Object)symbol5516, 1, (Object)localvariable4435);
assign3908 = (Object)new_AST_Assign((Object)localvariable4436, (Object)send32177);
// class
send32178 = (Object)new_AST_Send((Object)localvariable4436, (Object)SMB_class, 0);
// should
send32179 = (Object)new_AST_Send((Object)send32178, (Object)symbol5591, 0);
// =
send32180 = (Object)new_AST_Send((Object)send32179, (Object)SMB__equal, 1, (Object)classreference823);
// number
send32181 = (Object)new_AST_Send((Object)localvariable4436, (Object)symbol5380, 0);
// should
send32182 = (Object)new_AST_Send((Object)send32181, (Object)symbol5591, 0);
string3728 = (Object)new_Type_String(L"3");
constant6253 = (Object)new_AST_Constant((Object)string3728);
// =
send32183 = (Object)new_AST_Send((Object)send32182, (Object)SMB__equal, 1, (Object)constant6253);
// base
send32184 = (Object)new_AST_Send((Object)localvariable4436, (Object)symbol5383, 0);
// should
send32185 = (Object)new_AST_Send((Object)send32184, (Object)symbol5591, 0);
string3729 = (Object)new_Type_String(L"10");
constant6254 = (Object)new_AST_Constant((Object)string3729);
// =
send32186 = (Object)new_AST_Send((Object)send32185, (Object)SMB__equal, 1, (Object)constant6254);
// position
send32187 = (Object)new_AST_Send((Object)localvariable4435, (Object)symbol5565, 0);
// should
send32188 = (Object)new_AST_Send((Object)send32187, (Object)symbol5591, 0);
smallint2180 = (Object)new_Type_SmallInt(1);
constant6255 = (Object)new_AST_Constant((Object)smallint2180);
// =
send32189 = (Object)new_AST_Send((Object)send32188, (Object)SMB__equal, 1, (Object)constant6255);
method4347 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3504, 13, assign3904, assign3905, assign3906, send32169, send32172, send32175, assign3907, assign3908, send32180, send32183, send32186, send32189, Self);
symbol5250 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure4347 = (Object)new_Runtime_MethodClosure(method4347);
store_method((Type_Class)class735, (Type_Symbol)symbol5250, (Runtime_MethodClosure)methodclosure4347);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable4437 = (Object)new_AST_Variable_named(L"parser");
localvariable4438 = (Object)new_AST_Variable_named(L"string");
array3505 = (Object)new_Type_Array_with(2, (Object)localvariable4437, (Object)localvariable4438);
// temporaries
send32190 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5419, 0);
assign3909 = (Object)new_AST_Assign((Object)localvariable4437, (Object)send32190);
string3730 = (Object)new_Type_String(L"|a b c|");
constant6256 = (Object)new_AST_Constant((Object)string3730);
// on:
send32191 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6256);
assign3910 = (Object)new_AST_Assign((Object)localvariable4438, (Object)send32191);
// match:
send32192 = (Object)new_AST_Send((Object)localvariable4437, (Object)symbol5516, 1, (Object)localvariable4438);
constant6257 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send32193 = (Object)new_AST_Send((Object)send32192, (Object)symbol5615, 1, (Object)constant6257);
// asArray
send32194 = (Object)new_AST_Send((Object)send32193, (Object)SMB_asArray, 0);
// should
send32195 = (Object)new_AST_Send((Object)send32194, (Object)symbol5591, 0);
localvariable4439 = (Object)new_AST_Variable_named(L"receiver");
array3506 = (Object)new_Type_Array_with(1, (Object)localvariable4439);
smallint2181 = (Object)new_Type_SmallInt(1);
constant6258 = (Object)new_AST_Constant((Object)smallint2181);
string3731 = (Object)new_Type_String(L"a");
constant6259 = (Object)new_AST_Constant((Object)string3731);
// at:put:
send32196 = (Object)new_AST_Send((Object)localvariable4439, (Object)SMB_at_put_, 2, (Object)constant6258, (Object)constant6259);
smallint2182 = (Object)new_Type_SmallInt(2);
constant6260 = (Object)new_AST_Constant((Object)smallint2182);
string3732 = (Object)new_Type_String(L"b");
constant6261 = (Object)new_AST_Constant((Object)string3732);
// at:put:
send32197 = (Object)new_AST_Send((Object)localvariable4439, (Object)SMB_at_put_, 2, (Object)constant6260, (Object)constant6261);
smallint2183 = (Object)new_Type_SmallInt(3);
constant6262 = (Object)new_AST_Constant((Object)smallint2183);
string3733 = (Object)new_Type_String(L"c");
constant6263 = (Object)new_AST_Constant((Object)string3733);
// at:put:
send32198 = (Object)new_AST_Send((Object)localvariable4439, (Object)SMB_at_put_, 2, (Object)constant6262, (Object)constant6263);
// yourself
send32199 = (Object)new_AST_Send((Object)localvariable4439, (Object)symbol5216, 0);
block2009 = (Object)new_AST_Block_with((Type_Array)array3506, (Type_Array)empty_Type_Array, 1, 4, send32196, send32197, send32198, send32199);
smallint2184 = (Object)new_Type_SmallInt(3);
constant6264 = (Object)new_AST_Constant((Object)smallint2184);
// new:
send32200 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6264);
// value:
send32201 = (Object)new_AST_Send((Object)block2009, (Object)SMB_value_, 1, (Object)send32200);
// =
send32202 = (Object)new_AST_Send((Object)send32195, (Object)SMB__equal, 1, (Object)send32201);
// position
send32203 = (Object)new_AST_Send((Object)localvariable4438, (Object)symbol5565, 0);
// should
send32204 = (Object)new_AST_Send((Object)send32203, (Object)symbol5591, 0);
smallint2185 = (Object)new_Type_SmallInt(7);
constant6265 = (Object)new_AST_Constant((Object)smallint2185);
// =
send32205 = (Object)new_AST_Send((Object)send32204, (Object)SMB__equal, 1, (Object)constant6265);
string3734 = (Object)new_Type_String(L"|  a b c  |");
constant6266 = (Object)new_AST_Constant((Object)string3734);
// on:
send32206 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6266);
assign3911 = (Object)new_AST_Assign((Object)localvariable4438, (Object)send32206);
// match:
send32207 = (Object)new_AST_Send((Object)localvariable4437, (Object)symbol5516, 1, (Object)localvariable4438);
constant6267 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send32208 = (Object)new_AST_Send((Object)send32207, (Object)symbol5615, 1, (Object)constant6267);
// asArray
send32209 = (Object)new_AST_Send((Object)send32208, (Object)SMB_asArray, 0);
// should
send32210 = (Object)new_AST_Send((Object)send32209, (Object)symbol5591, 0);
localvariable4440 = (Object)new_AST_Variable_named(L"receiver");
array3507 = (Object)new_Type_Array_with(1, (Object)localvariable4440);
smallint2186 = (Object)new_Type_SmallInt(1);
constant6268 = (Object)new_AST_Constant((Object)smallint2186);
string3735 = (Object)new_Type_String(L"a");
constant6269 = (Object)new_AST_Constant((Object)string3735);
// at:put:
send32211 = (Object)new_AST_Send((Object)localvariable4440, (Object)SMB_at_put_, 2, (Object)constant6268, (Object)constant6269);
smallint2187 = (Object)new_Type_SmallInt(2);
constant6270 = (Object)new_AST_Constant((Object)smallint2187);
string3736 = (Object)new_Type_String(L"b");
constant6271 = (Object)new_AST_Constant((Object)string3736);
// at:put:
send32212 = (Object)new_AST_Send((Object)localvariable4440, (Object)SMB_at_put_, 2, (Object)constant6270, (Object)constant6271);
smallint2188 = (Object)new_Type_SmallInt(3);
constant6272 = (Object)new_AST_Constant((Object)smallint2188);
string3737 = (Object)new_Type_String(L"c");
constant6273 = (Object)new_AST_Constant((Object)string3737);
// at:put:
send32213 = (Object)new_AST_Send((Object)localvariable4440, (Object)SMB_at_put_, 2, (Object)constant6272, (Object)constant6273);
// yourself
send32214 = (Object)new_AST_Send((Object)localvariable4440, (Object)symbol5216, 0);
block2010 = (Object)new_AST_Block_with((Type_Array)array3507, (Type_Array)empty_Type_Array, 1, 4, send32211, send32212, send32213, send32214);
smallint2189 = (Object)new_Type_SmallInt(3);
constant6274 = (Object)new_AST_Constant((Object)smallint2189);
// new:
send32215 = (Object)new_AST_Send((Object)classreference790, (Object)symbol5300, 1, (Object)constant6274);
// value:
send32216 = (Object)new_AST_Send((Object)block2010, (Object)SMB_value_, 1, (Object)send32215);
// =
send32217 = (Object)new_AST_Send((Object)send32210, (Object)SMB__equal, 1, (Object)send32216);
// position
send32218 = (Object)new_AST_Send((Object)localvariable4438, (Object)symbol5565, 0);
// should
send32219 = (Object)new_AST_Send((Object)send32218, (Object)symbol5591, 0);
smallint2190 = (Object)new_Type_SmallInt(11);
constant6275 = (Object)new_AST_Constant((Object)smallint2190);
// =
send32220 = (Object)new_AST_Send((Object)send32219, (Object)SMB__equal, 1, (Object)constant6275);
method4348 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3505, 8, assign3909, assign3910, send32202, send32205, assign3911, send32217, send32220, Self);
symbol5242 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure4348 = (Object)new_Runtime_MethodClosure(method4348);
store_method((Type_Class)class735, (Type_Symbol)symbol5242, (Runtime_MethodClosure)methodclosure4348);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable4441 = (Object)new_AST_Variable_named(L"parser");
array3508 = (Object)new_Type_Array_with(1, (Object)localvariable4441);
string3738 = (Object)new_Type_String(L"COMMENT");
constant6276 = (Object)new_AST_Constant((Object)string3738);
// commentFormat
send32221 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5631, 0);
// named:parsing:
send32222 = (Object)new_AST_Send((Object)classreference809, (Object)symbol5604, 2, (Object)constant6276, (Object)send32221);
assign3912 = (Object)new_AST_Assign((Object)localvariable4441, (Object)send32222);
string3739 = (Object)new_Type_String(L"\"Test\"");
constant6277 = (Object)new_AST_Constant((Object)string3739);
// parse:
send32223 = (Object)new_AST_Send((Object)localvariable4441, (Object)symbol5528, 1, (Object)constant6277);
// should
send32224 = (Object)new_AST_Send((Object)send32223, (Object)symbol5591, 0);
// not
send32225 = (Object)new_AST_Send((Object)send32224, (Object)SMB_not, 0);
// be
send32226 = (Object)new_AST_Send((Object)send32225, (Object)symbol5660, 0);
// isNil
send32227 = (Object)new_AST_Send((Object)send32226, (Object)SMB_isNil, 0);
string3740 = (Object)new_Type_String(L"\"Test");
constant6278 = (Object)new_AST_Constant((Object)string3740);
// parse:
send32228 = (Object)new_AST_Send((Object)localvariable4441, (Object)symbol5528, 1, (Object)constant6278);
// should
send32229 = (Object)new_AST_Send((Object)send32228, (Object)symbol5591, 0);
// be
send32230 = (Object)new_AST_Send((Object)send32229, (Object)symbol5660, 0);
// isNil
send32231 = (Object)new_AST_Send((Object)send32230, (Object)SMB_isNil, 0);
method4349 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3508, 4, assign3912, send32227, send32231, Self);
symbol5289 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure4349 = (Object)new_Runtime_MethodClosure(method4349);
store_method((Type_Class)class735, (Type_Symbol)symbol5289, (Runtime_MethodClosure)methodclosure4349);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable4442 = (Object)new_AST_Variable_named(L"parser");
localvariable4443 = (Object)new_AST_Variable_named(L"string");
localvariable4444 = (Object)new_AST_Variable_named(L"result");
array3509 = (Object)new_Type_Array_with(3, (Object)localvariable4442, (Object)localvariable4443, (Object)localvariable4444);
// method
send32232 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5659, 0);
assign3913 = (Object)new_AST_Assign((Object)localvariable4442, (Object)send32232);
string3741 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant6279 = (Object)new_AST_Constant((Object)string3741);
assign3914 = (Object)new_AST_Assign((Object)localvariable4443, (Object)constant6279);
// parse:
send32233 = (Object)new_AST_Send((Object)localvariable4442, (Object)symbol5528, 1, (Object)localvariable4443);
assign3915 = (Object)new_AST_Assign((Object)localvariable4444, (Object)send32233);
// hasReturnExpression
send32234 = (Object)new_AST_Send((Object)localvariable4444, (Object)symbol5357, 0);
// should
send32235 = (Object)new_AST_Send((Object)send32234, (Object)symbol5591, 0);
// be
send32236 = (Object)new_AST_Send((Object)send32235, (Object)symbol5660, 0);
// true
send32237 = (Object)new_AST_Send((Object)send32236, (Object)symbol5661, 0);
// class
send32238 = (Object)new_AST_Send((Object)localvariable4444, (Object)SMB_class, 0);
// should
send32239 = (Object)new_AST_Send((Object)send32238, (Object)symbol5591, 0);
// =
send32240 = (Object)new_AST_Send((Object)send32239, (Object)SMB__equal, 1, (Object)classreference842);
// message
send32241 = (Object)new_AST_Send((Object)localvariable4444, (Object)symbol5418, 0);
// asString
send32242 = (Object)new_AST_Send((Object)send32241, (Object)SMB_asString, 0);
// should
send32243 = (Object)new_AST_Send((Object)send32242, (Object)symbol5591, 0);
string3742 = (Object)new_Type_String(L"withA:withB:withC:");
constant6280 = (Object)new_AST_Constant((Object)string3742);
// =
send32244 = (Object)new_AST_Send((Object)send32243, (Object)SMB__equal, 1, (Object)constant6280);
method4350 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3509, 7, assign3913, assign3914, assign3915, send32237, send32240, send32244, Self);
symbol5262 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure4350 = (Object)new_Runtime_MethodClosure(method4350);
store_method((Type_Class)class735, (Type_Symbol)symbol5262, (Runtime_MethodClosure)methodclosure4350);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable4445 = (Object)new_AST_Variable_named(L"parser");
localvariable4446 = (Object)new_AST_Variable_named(L"string");
localvariable4447 = (Object)new_AST_Variable_named(L"result");
array3510 = (Object)new_Type_Array_with(3, (Object)localvariable4445, (Object)localvariable4446, (Object)localvariable4447);
// method
send32245 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5659, 0);
assign3916 = (Object)new_AST_Assign((Object)localvariable4445, (Object)send32245);
string3743 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant6281 = (Object)new_AST_Constant((Object)string3743);
assign3917 = (Object)new_AST_Assign((Object)localvariable4446, (Object)constant6281);
// parse:
send32246 = (Object)new_AST_Send((Object)localvariable4445, (Object)symbol5528, 1, (Object)localvariable4446);
assign3918 = (Object)new_AST_Assign((Object)localvariable4447, (Object)send32246);
// hasReturnExpression
send32247 = (Object)new_AST_Send((Object)localvariable4447, (Object)symbol5357, 0);
// should
send32248 = (Object)new_AST_Send((Object)send32247, (Object)symbol5591, 0);
// be
send32249 = (Object)new_AST_Send((Object)send32248, (Object)symbol5660, 0);
// true
send32250 = (Object)new_AST_Send((Object)send32249, (Object)symbol5661, 0);
// class
send32251 = (Object)new_AST_Send((Object)localvariable4447, (Object)SMB_class, 0);
// should
send32252 = (Object)new_AST_Send((Object)send32251, (Object)symbol5591, 0);
// =
send32253 = (Object)new_AST_Send((Object)send32252, (Object)SMB__equal, 1, (Object)classreference842);
// message
send32254 = (Object)new_AST_Send((Object)localvariable4447, (Object)symbol5418, 0);
// class
send32255 = (Object)new_AST_Send((Object)send32254, (Object)SMB_class, 0);
// should
send32256 = (Object)new_AST_Send((Object)send32255, (Object)symbol5591, 0);
// =
send32257 = (Object)new_AST_Send((Object)send32256, (Object)SMB__equal, 1, (Object)classreference812);
// temporaries
send32258 = (Object)new_AST_Send((Object)localvariable4447, (Object)symbol5419, 0);
// size
send32259 = (Object)new_AST_Send((Object)send32258, (Object)SMB_size, 0);
// should
send32260 = (Object)new_AST_Send((Object)send32259, (Object)symbol5591, 0);
smallint2191 = (Object)new_Type_SmallInt(3);
constant6282 = (Object)new_AST_Constant((Object)smallint2191);
// =
send32261 = (Object)new_AST_Send((Object)send32260, (Object)SMB__equal, 1, (Object)constant6282);
// annotations
send32262 = (Object)new_AST_Send((Object)localvariable4447, (Object)symbol5416, 0);
// size
send32263 = (Object)new_AST_Send((Object)send32262, (Object)SMB_size, 0);
// should
send32264 = (Object)new_AST_Send((Object)send32263, (Object)symbol5591, 0);
smallint2192 = (Object)new_Type_SmallInt(3);
constant6283 = (Object)new_AST_Constant((Object)smallint2192);
// =
send32265 = (Object)new_AST_Send((Object)send32264, (Object)SMB__equal, 1, (Object)constant6283);
// statements
send32266 = (Object)new_AST_Send((Object)localvariable4447, (Object)symbol5415, 0);
// size
send32267 = (Object)new_AST_Send((Object)send32266, (Object)SMB_size, 0);
// should
send32268 = (Object)new_AST_Send((Object)send32267, (Object)symbol5591, 0);
smallint2193 = (Object)new_Type_SmallInt(2);
constant6284 = (Object)new_AST_Constant((Object)smallint2193);
// =
send32269 = (Object)new_AST_Send((Object)send32268, (Object)SMB__equal, 1, (Object)constant6284);
method4351 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3510, 10, assign3916, assign3917, assign3918, send32250, send32253, send32257, send32261, send32265, send32269, Self);
symbol5290 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure4351 = (Object)new_Runtime_MethodClosure(method4351);
store_method((Type_Class)class735, (Type_Symbol)symbol5290, (Runtime_MethodClosure)methodclosure4351);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable4448 = (Object)new_AST_Variable_named(L"parser");
localvariable4449 = (Object)new_AST_Variable_named(L"string");
array3511 = (Object)new_Type_Array_with(2, (Object)localvariable4448, (Object)localvariable4449);
symbol5666 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send32270 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5666, 0);
assign3919 = (Object)new_AST_Assign((Object)localvariable4448, (Object)send32270);
string3744 = (Object)new_Type_String(L"Abcd ");
constant6285 = (Object)new_AST_Constant((Object)string3744);
// on:
send32271 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6285);
assign3920 = (Object)new_AST_Assign((Object)localvariable4449, (Object)send32271);
// match:
send32272 = (Object)new_AST_Send((Object)localvariable4448, (Object)symbol5516, 1, (Object)localvariable4449);
// should
send32273 = (Object)new_AST_Send((Object)send32272, (Object)symbol5591, 0);
string3745 = (Object)new_Type_String(L"Abcd");
constant6286 = (Object)new_AST_Constant((Object)string3745);
// =
send32274 = (Object)new_AST_Send((Object)send32273, (Object)SMB__equal, 1, (Object)constant6286);
// position
send32275 = (Object)new_AST_Send((Object)localvariable4449, (Object)symbol5565, 0);
// should
send32276 = (Object)new_AST_Send((Object)send32275, (Object)symbol5591, 0);
smallint2194 = (Object)new_Type_SmallInt(4);
constant6287 = (Object)new_AST_Constant((Object)smallint2194);
// =
send32277 = (Object)new_AST_Send((Object)send32276, (Object)SMB__equal, 1, (Object)constant6287);
string3746 = (Object)new_Type_String(L"AbCd145 ");
constant6288 = (Object)new_AST_Constant((Object)string3746);
// on:
send32278 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6288);
assign3921 = (Object)new_AST_Assign((Object)localvariable4449, (Object)send32278);
// match:
send32279 = (Object)new_AST_Send((Object)localvariable4448, (Object)symbol5516, 1, (Object)localvariable4449);
// should
send32280 = (Object)new_AST_Send((Object)send32279, (Object)symbol5591, 0);
string3747 = (Object)new_Type_String(L"AbCd145");
constant6289 = (Object)new_AST_Constant((Object)string3747);
// =
send32281 = (Object)new_AST_Send((Object)send32280, (Object)SMB__equal, 1, (Object)constant6289);
// position
send32282 = (Object)new_AST_Send((Object)localvariable4449, (Object)symbol5565, 0);
// should
send32283 = (Object)new_AST_Send((Object)send32282, (Object)symbol5591, 0);
smallint2195 = (Object)new_Type_SmallInt(7);
constant6290 = (Object)new_AST_Constant((Object)smallint2195);
// =
send32284 = (Object)new_AST_Send((Object)send32283, (Object)SMB__equal, 1, (Object)constant6290);
string3748 = (Object)new_Type_String(L"abcdD");
constant6291 = (Object)new_AST_Constant((Object)string3748);
// on:
send32285 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6291);
assign3922 = (Object)new_AST_Assign((Object)localvariable4449, (Object)send32285);
// match:
send32286 = (Object)new_AST_Send((Object)localvariable4448, (Object)symbol5516, 1, (Object)localvariable4449);
// should
send32287 = (Object)new_AST_Send((Object)send32286, (Object)symbol5591, 0);
// be
send32288 = (Object)new_AST_Send((Object)send32287, (Object)symbol5660, 0);
// isNil
send32289 = (Object)new_AST_Send((Object)send32288, (Object)SMB_isNil, 0);
// position
send32290 = (Object)new_AST_Send((Object)localvariable4449, (Object)symbol5565, 0);
// should
send32291 = (Object)new_AST_Send((Object)send32290, (Object)symbol5591, 0);
smallint2196 = (Object)new_Type_SmallInt(0);
constant6292 = (Object)new_AST_Constant((Object)smallint2196);
// =
send32292 = (Object)new_AST_Send((Object)send32291, (Object)SMB__equal, 1, (Object)constant6292);
method4352 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3511, 11, assign3919, assign3920, send32274, send32277, assign3921, send32281, send32284, assign3922, send32289, send32292, Self);
symbol5259 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure4352 = (Object)new_Runtime_MethodClosure(method4352);
store_method((Type_Class)class735, (Type_Symbol)symbol5259, (Runtime_MethodClosure)methodclosure4352);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable4450 = (Object)new_AST_Variable_named(L"parser");
localvariable4451 = (Object)new_AST_Variable_named(L"string");
array3512 = (Object)new_Type_Array_with(2, (Object)localvariable4450, (Object)localvariable4451);
// character
send32293 = (Object)new_AST_Send((Object)instancevariable1064, (Object)symbol5657, 0);
assign3923 = (Object)new_AST_Assign((Object)localvariable4450, (Object)send32293);
string3749 = (Object)new_Type_String(L"--");
constant6293 = (Object)new_AST_Constant((Object)string3749);
// on:
send32294 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6293);
assign3924 = (Object)new_AST_Assign((Object)localvariable4451, (Object)send32294);
// match:
send32295 = (Object)new_AST_Send((Object)localvariable4450, (Object)symbol5516, 1, (Object)localvariable4451);
// should
send32296 = (Object)new_AST_Send((Object)send32295, (Object)symbol5591, 0);
string3750 = (Object)new_Type_String(L"-");
constant6294 = (Object)new_AST_Constant((Object)string3750);
// =
send32297 = (Object)new_AST_Send((Object)send32296, (Object)SMB__equal, 1, (Object)constant6294);
// position
send32298 = (Object)new_AST_Send((Object)localvariable4451, (Object)symbol5565, 0);
// should
send32299 = (Object)new_AST_Send((Object)send32298, (Object)symbol5591, 0);
smallint2197 = (Object)new_Type_SmallInt(1);
constant6295 = (Object)new_AST_Constant((Object)smallint2197);
// =
send32300 = (Object)new_AST_Send((Object)send32299, (Object)SMB__equal, 1, (Object)constant6295);
string3751 = (Object)new_Type_String(L"__");
constant6296 = (Object)new_AST_Constant((Object)string3751);
// on:
send32301 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6296);
assign3925 = (Object)new_AST_Assign((Object)localvariable4451, (Object)send32301);
// match:
send32302 = (Object)new_AST_Send((Object)localvariable4450, (Object)symbol5516, 1, (Object)localvariable4451);
// should
send32303 = (Object)new_AST_Send((Object)send32302, (Object)symbol5591, 0);
string3752 = (Object)new_Type_String(L"_");
constant6297 = (Object)new_AST_Constant((Object)string3752);
// =
send32304 = (Object)new_AST_Send((Object)send32303, (Object)SMB__equal, 1, (Object)constant6297);
// position
send32305 = (Object)new_AST_Send((Object)localvariable4451, (Object)symbol5565, 0);
// should
send32306 = (Object)new_AST_Send((Object)send32305, (Object)symbol5591, 0);
smallint2198 = (Object)new_Type_SmallInt(1);
constant6298 = (Object)new_AST_Constant((Object)smallint2198);
// =
send32307 = (Object)new_AST_Send((Object)send32306, (Object)SMB__equal, 1, (Object)constant6298);
string3753 = (Object)new_Type_String(L"4");
constant6299 = (Object)new_AST_Constant((Object)string3753);
// on:
send32308 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6299);
assign3926 = (Object)new_AST_Assign((Object)localvariable4451, (Object)send32308);
// match:
send32309 = (Object)new_AST_Send((Object)localvariable4450, (Object)symbol5516, 1, (Object)localvariable4451);
// should
send32310 = (Object)new_AST_Send((Object)send32309, (Object)symbol5591, 0);
string3754 = (Object)new_Type_String(L"4");
constant6300 = (Object)new_AST_Constant((Object)string3754);
// =
send32311 = (Object)new_AST_Send((Object)send32310, (Object)SMB__equal, 1, (Object)constant6300);
// position
send32312 = (Object)new_AST_Send((Object)localvariable4451, (Object)symbol5565, 0);
// should
send32313 = (Object)new_AST_Send((Object)send32312, (Object)symbol5591, 0);
smallint2199 = (Object)new_Type_SmallInt(1);
constant6301 = (Object)new_AST_Constant((Object)smallint2199);
// =
send32314 = (Object)new_AST_Send((Object)send32313, (Object)SMB__equal, 1, (Object)constant6301);
string3755 = (Object)new_Type_String(L"p");
constant6302 = (Object)new_AST_Constant((Object)string3755);
// on:
send32315 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6302);
assign3927 = (Object)new_AST_Assign((Object)localvariable4451, (Object)send32315);
// match:
send32316 = (Object)new_AST_Send((Object)localvariable4450, (Object)symbol5516, 1, (Object)localvariable4451);
// should
send32317 = (Object)new_AST_Send((Object)send32316, (Object)symbol5591, 0);
string3756 = (Object)new_Type_String(L"p");
constant6303 = (Object)new_AST_Constant((Object)string3756);
// =
send32318 = (Object)new_AST_Send((Object)send32317, (Object)SMB__equal, 1, (Object)constant6303);
// position
send32319 = (Object)new_AST_Send((Object)localvariable4451, (Object)symbol5565, 0);
// should
send32320 = (Object)new_AST_Send((Object)send32319, (Object)symbol5591, 0);
smallint2200 = (Object)new_Type_SmallInt(1);
constant6304 = (Object)new_AST_Constant((Object)smallint2200);
// =
send32321 = (Object)new_AST_Send((Object)send32320, (Object)SMB__equal, 1, (Object)constant6304);
string3757 = (Object)new_Type_String(L"&");
constant6305 = (Object)new_AST_Constant((Object)string3757);
// on:
send32322 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6305);
assign3928 = (Object)new_AST_Assign((Object)localvariable4451, (Object)send32322);
// match:
send32323 = (Object)new_AST_Send((Object)localvariable4450, (Object)symbol5516, 1, (Object)localvariable4451);
// should
send32324 = (Object)new_AST_Send((Object)send32323, (Object)symbol5591, 0);
string3758 = (Object)new_Type_String(L"&");
constant6306 = (Object)new_AST_Constant((Object)string3758);
// =
send32325 = (Object)new_AST_Send((Object)send32324, (Object)SMB__equal, 1, (Object)constant6306);
// position
send32326 = (Object)new_AST_Send((Object)localvariable4451, (Object)symbol5565, 0);
// should
send32327 = (Object)new_AST_Send((Object)send32326, (Object)symbol5591, 0);
smallint2201 = (Object)new_Type_SmallInt(1);
constant6307 = (Object)new_AST_Constant((Object)smallint2201);
// =
send32328 = (Object)new_AST_Send((Object)send32327, (Object)SMB__equal, 1, (Object)constant6307);
string3759 = (Object)new_Type_String(L"\'");
constant6308 = (Object)new_AST_Constant((Object)string3759);
// on:
send32329 = (Object)new_AST_Send((Object)classreference808, (Object)SMB_on_, 1, (Object)constant6308);
assign3929 = (Object)new_AST_Assign((Object)localvariable4451, (Object)send32329);
// match:
send32330 = (Object)new_AST_Send((Object)localvariable4450, (Object)symbol5516, 1, (Object)localvariable4451);
// should
send32331 = (Object)new_AST_Send((Object)send32330, (Object)symbol5591, 0);
// be
send32332 = (Object)new_AST_Send((Object)send32331, (Object)symbol5660, 0);
// isNil
send32333 = (Object)new_AST_Send((Object)send32332, (Object)SMB_isNil, 0);
// position
send32334 = (Object)new_AST_Send((Object)localvariable4451, (Object)symbol5565, 0);
// should
send32335 = (Object)new_AST_Send((Object)send32334, (Object)symbol5591, 0);
smallint2202 = (Object)new_Type_SmallInt(0);
constant6309 = (Object)new_AST_Constant((Object)smallint2202);
// =
send32336 = (Object)new_AST_Send((Object)send32335, (Object)SMB__equal, 1, (Object)constant6309);
method4353 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3512, 20, assign3923, assign3924, send32297, send32300, assign3925, send32304, send32307, assign3926, send32311, send32314, assign3927, send32318, send32321, assign3928, send32325, send32328, assign3929, send32333, send32336, Self);
symbol5279 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure4353 = (Object)new_Runtime_MethodClosure(method4353);
store_method((Type_Class)class735, (Type_Symbol)symbol5279, (Runtime_MethodClosure)methodclosure4353);

classreference846 = (Object)new_Organization_ClassReference((Type_Class)class735);

// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable4452 = (Object)new_AST_Variable_named(L"anObject");
array3513 = (Object)new_Type_Array_with(1, (Object)localvariable4452);
assign3930 = (Object)new_AST_Assign((Object)instancevariable1065, (Object)localvariable4452);
method4354 = (Object)new_AST_Method_with((Type_Array)array3513, (Type_Array)empty_Type_Array, 2, assign3930, Self);
methodclosure4354 = (Object)new_Runtime_MethodClosure(method4354);
store_method((Type_Class)class736, (Type_Symbol)symbol5393, (Runtime_MethodClosure)methodclosure4354);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable4453 = (Object)new_AST_Variable_named(L"anObject");
array3514 = (Object)new_Type_Array_with(1, (Object)localvariable4453);
assign3931 = (Object)new_AST_Assign((Object)instancevariable1066, (Object)localvariable4453);
method4355 = (Object)new_AST_Method_with((Type_Array)array3514, (Type_Array)empty_Type_Array, 2, assign3931, Self);
symbol5536 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure4355 = (Object)new_Runtime_MethodClosure(method4355);
store_method((Type_Class)class736, (Type_Symbol)symbol5536, (Runtime_MethodClosure)methodclosure4355);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable4454 = (Object)new_AST_Variable_named(L"aStream");
array3515 = (Object)new_Type_Array_with(1, (Object)localvariable4454);
super369 = (Object)new_AST_Super((Object)symbol5320, 1, (Object)localvariable4454);
string3760 = (Object)new_Type_String(L" ");
constant6310 = (Object)new_AST_Constant((Object)string3760);
// nextPutAll:
send32337 = (Object)new_AST_Send((Object)localvariable4454, (Object)symbol5558, 1, (Object)constant6310);
// name
send32338 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send32339 = (Object)new_AST_Send((Object)send32338, (Object)symbol5320, 1, (Object)localvariable4454);
string3761 = (Object)new_Type_String(L" ");
constant6311 = (Object)new_AST_Constant((Object)string3761);
// nextPutAll:
send32340 = (Object)new_AST_Send((Object)localvariable4454, (Object)symbol5558, 1, (Object)constant6311);
symbol5537 = (Object)new_Type_Symbol_cached(L"scopeId");
// scopeId
send32341 = (Object)new_AST_Send((Object)Self, (Object)symbol5537, 0);
// printOn:
send32342 = (Object)new_AST_Send((Object)send32341, (Object)symbol5320, 1, (Object)localvariable4454);
string3762 = (Object)new_Type_String(L"@");
constant6312 = (Object)new_AST_Constant((Object)string3762);
// nextPutAll:
send32343 = (Object)new_AST_Send((Object)localvariable4454, (Object)symbol5558, 1, (Object)constant6312);
symbol5535 = (Object)new_Type_Symbol_cached(L"localId");
// localId
send32344 = (Object)new_AST_Send((Object)Self, (Object)symbol5535, 0);
// printOn:
send32345 = (Object)new_AST_Send((Object)send32344, (Object)symbol5320, 1, (Object)localvariable4454);
method4356 = (Object)new_AST_Method_with((Type_Array)array3515, (Type_Array)empty_Type_Array, 8, super369, send32337, send32339, send32340, send32342, send32343, send32345, Self);
methodclosure4356 = (Object)new_Runtime_MethodClosure(method4356);
store_method((Type_Class)class736, (Type_Symbol)symbol5320, (Runtime_MethodClosure)methodclosure4356);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable4455 = (Object)new_AST_Variable_named(L"anObject");
array3516 = (Object)new_Type_Array_with(1, (Object)localvariable4455);
assign3932 = (Object)new_AST_Assign((Object)instancevariable1067, (Object)localvariable4455);
method4357 = (Object)new_AST_Method_with((Type_Array)array3516, (Type_Array)empty_Type_Array, 2, assign3932, Self);
methodclosure4357 = (Object)new_Runtime_MethodClosure(method4357);
store_method((Type_Class)class736, (Type_Symbol)symbol5538, (Runtime_MethodClosure)methodclosure4357);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method4358 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4358 = (Object)new_Runtime_MethodClosure(method4358);
store_method((Type_Class)class736, (Type_Symbol)symbol5392, (Runtime_MethodClosure)methodclosure4358);


// Variable>>localId
//localId
// 	^ localId
method4359 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1067);
methodclosure4359 = (Object)new_Runtime_MethodClosure(method4359);
store_method((Type_Class)class736, (Type_Symbol)symbol5535, (Runtime_MethodClosure)methodclosure4359);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method4360 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1066);
methodclosure4360 = (Object)new_Runtime_MethodClosure(method4360);
store_method((Type_Class)class736, (Type_Symbol)symbol5537, (Runtime_MethodClosure)methodclosure4360);


// Variable>>name
//name
// 	^ name
method4361 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1065);
methodclosure4361 = (Object)new_Runtime_MethodClosure(method4361);
store_method((Type_Class)class736, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4361);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable4456 = (Object)new_AST_Variable_named(L"aSymbol");
array3517 = (Object)new_Type_Array_with(1, (Object)localvariable4456);
// new
send32346 = (Object)new_AST_Send((Object)Self, (Object)symbol5310, 0);
// asSymbol
send32347 = (Object)new_AST_Send((Object)localvariable4456, (Object)SMB_asSymbol, 0);
// name:
send32348 = (Object)new_AST_Send((Object)send32346, (Object)symbol5393, 1, (Object)send32347);
method4362 = (Object)new_AST_Method_with((Type_Array)array3517, (Type_Array)empty_Type_Array, 1, send32348);
methodclosure4362 = (Object)new_Runtime_MethodClosure(method4362);
store_method((Type_Class)metaclass736, (Type_Symbol)symbol5534, (Runtime_MethodClosure)methodclosure4362);

classreference847 = (Object)new_Organization_ClassReference((Type_Class)class736);

// Message>>selector
//selector 
// 	^ selector
instancevariable1075 = (Object)new_AST_InstVariable(0, L"selector");
method4363 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1075);
methodclosure4363 = (Object)new_Runtime_MethodClosure(method4363);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol5324, (Runtime_MethodClosure)methodclosure4363);


// Message>>arguments
//arguments
// 	^ self
method4364 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4364 = (Object)new_Runtime_MethodClosure(method4364);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol5325, (Runtime_MethodClosure)methodclosure4364);

classreference848 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// False>>or:
//or: aBlock
// 	^ aBlock value.
localvariable4457 = (Object)new_AST_Variable_named(L"aBlock");
array3518 = (Object)new_Type_Array_with(1, (Object)localvariable4457);
// value
send32349 = (Object)new_AST_Send((Object)localvariable4457, (Object)symbol5563, 0);
method4365 = (Object)new_AST_Method_with((Type_Array)array3518, (Type_Array)empty_Type_Array, 1, send32349);
methodclosure4365 = (Object)new_Runtime_MethodClosure(method4365);
store_method((Type_Class)False_Class, (Type_Symbol)symbol5328, (Runtime_MethodClosure)methodclosure4365);


// False>>and:
//and: aBoolean
// 	^ self
localvariable4458 = (Object)new_AST_Variable_named(L"aBoolean");
array3519 = (Object)new_Type_Array_with(1, (Object)localvariable4458);
method4366 = (Object)new_AST_Method_with((Type_Array)array3519, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4366 = (Object)new_Runtime_MethodClosure(method4366);
store_method((Type_Class)False_Class, (Type_Symbol)symbol5329, (Runtime_MethodClosure)methodclosure4366);

classreference849 = (Object)new_Organization_ClassReference((Type_Class)False_Class);

// True>>or:
//or: aBoolean
// 	^ self.
localvariable4459 = (Object)new_AST_Variable_named(L"aBoolean");
array3520 = (Object)new_Type_Array_with(1, (Object)localvariable4459);
method4367 = (Object)new_AST_Method_with((Type_Array)array3520, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4367 = (Object)new_Runtime_MethodClosure(method4367);
store_method((Type_Class)True_Class, (Type_Symbol)symbol5328, (Runtime_MethodClosure)methodclosure4367);


// True>>and:
//and: aBlock
// 	^ aBlock value.
localvariable4460 = (Object)new_AST_Variable_named(L"aBlock");
array3521 = (Object)new_Type_Array_with(1, (Object)localvariable4460);
// value
send32350 = (Object)new_AST_Send((Object)localvariable4460, (Object)symbol5563, 0);
method4368 = (Object)new_AST_Method_with((Type_Array)array3521, (Type_Array)empty_Type_Array, 1, send32350);
methodclosure4368 = (Object)new_Runtime_MethodClosure(method4368);
store_method((Type_Class)True_Class, (Type_Symbol)symbol5329, (Runtime_MethodClosure)methodclosure4368);

classreference850 = (Object)new_Organization_ClassReference((Type_Class)True_Class);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable4461 = (Object)new_AST_Variable_named(L"aMessage");
array3522 = (Object)new_Type_Array_with(1, (Object)localvariable4461);
localvariable4462 = (Object)new_AST_Variable_named(L"selector");
array3523 = (Object)new_Type_Array_with(1, (Object)localvariable4462);
variable218 = (Object)new_AST_Variable_named(L"return");
array3524 = (Object)new_Type_Array_with(1, (Object)variable218);
// selector
send32351 = (Object)new_AST_Send((Object)localvariable4461, (Object)symbol5324, 0);
constant6313 = (Object)new_AST_Constant((Object)symbol5593);
// =
send32352 = (Object)new_AST_Send((Object)send32351, (Object)SMB__equal, 1, (Object)constant6313);
super370 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable4461);
// escape:
send32353 = (Object)new_AST_Send((Object)variable218, (Object)SMB_escape_, 1, (Object)super370);
block2011 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send32353);
// ifFalse:
send32354 = (Object)new_AST_Send((Object)send32352, (Object)SMB_ifFalse_, 1, (Object)block2011);
string3763 = (Object)new_Type_String(L"visit");
constant6314 = (Object)new_AST_Constant((Object)string3763);
// objectName
send32355 = (Object)new_AST_Send((Object)Self, (Object)symbol5215, 0);
// ,
send32356 = (Object)new_AST_Send((Object)constant6314, (Object)SMB__concat, 1, (Object)send32355);
string3764 = (Object)new_Type_String(L":");
constant6315 = (Object)new_AST_Constant((Object)string3764);
// ,
send32357 = (Object)new_AST_Send((Object)send32356, (Object)SMB__concat, 1, (Object)constant6315);
// asSymbol
send32358 = (Object)new_AST_Send((Object)send32357, (Object)SMB_asSymbol, 0);
assign3933 = (Object)new_AST_Assign((Object)localvariable4462, (Object)send32358);
// argument
send32359 = (Object)new_AST_Send((Object)localvariable4461, (Object)symbol5408, 0);
// perform:with:
send32360 = (Object)new_AST_Send((Object)send32359, (Object)symbol5595, 2, (Object)localvariable4462, (Object)Self);
block2012 = (Object)new_AST_Block_with((Type_Array)array3524, (Type_Array)empty_Type_Array, 1, 3, send32354, assign3933, send32360);
// on:
send32361 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block2012);
method4369 = (Object)new_AST_Method_with((Type_Array)array3522, (Type_Array)array3523, 1, send32361);
methodclosure4369 = (Object)new_Runtime_MethodClosure(method4369);
store_method((Type_Class)class739, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4369);

classreference851 = (Object)new_Organization_ClassReference((Type_Class)class739);
classreference852 = (Object)new_Organization_ClassReference((Type_Class)class734);
}


/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send32362 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5283, 0);
Object result = (Object)Eval((Object)send32362);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send32363 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5278, 0);
Object result = (Object)Eval((Object)send32363);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send32364 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5231, 0);
Object result = (Object)Eval((Object)send32364);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send32365 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5284, 0);
Object result = (Object)Eval((Object)send32365);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send32366 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5287, 0);
Object result = (Object)Eval((Object)send32366);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send32367 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5251, 0);
Object result = (Object)Eval((Object)send32367);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send32368 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5246, 0);
Object result = (Object)Eval((Object)send32368);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send32369 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5260, 0);
Object result = (Object)Eval((Object)send32369);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send32370 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5280, 0);
Object result = (Object)Eval((Object)send32370);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send32371 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5273, 0);
Object result = (Object)Eval((Object)send32371);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send32372 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5235, 0);
Object result = (Object)Eval((Object)send32372);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send32373 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5259, 0);
Object result = (Object)Eval((Object)send32373);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send32374 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5240, 0);
Object result = (Object)Eval((Object)send32374);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send32375 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5279, 0);
Object result = (Object)Eval((Object)send32375);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send32376 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5296, 0);
Object result = (Object)Eval((Object)send32376);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send32377 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5289, 0);
Object result = (Object)Eval((Object)send32377);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send32378 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5292, 0);
Object result = (Object)Eval((Object)send32378);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send32379 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5256, 0);
Object result = (Object)Eval((Object)send32379);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send32380 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5248, 0);
Object result = (Object)Eval((Object)send32380);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send32381 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5264, 0);
Object result = (Object)Eval((Object)send32381);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send32382 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5286, 0);
Object result = (Object)Eval((Object)send32382);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send32383 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5249, 0);
Object result = (Object)Eval((Object)send32383);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send32384 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5253, 0);
Object result = (Object)Eval((Object)send32384);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send32385 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5271, 0);
Object result = (Object)Eval((Object)send32385);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send32386 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5290, 0);
Object result = (Object)Eval((Object)send32386);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send32387 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5261, 0);
Object result = (Object)Eval((Object)send32387);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send32388 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5262, 0);
Object result = (Object)Eval((Object)send32388);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send32389 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5244, 0);
Object result = (Object)Eval((Object)send32389);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send32390 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5250, 0);
Object result = (Object)Eval((Object)send32390);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send32391 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5266, 0);
Object result = (Object)Eval((Object)send32391);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send32392 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5275, 0);
Object result = (Object)Eval((Object)send32392);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send32393 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5294, 0);
Object result = (Object)Eval((Object)send32393);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send32394 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5254, 0);
Object result = (Object)Eval((Object)send32394);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send32395 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5268, 0);
Object result = (Object)Eval((Object)send32395);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send32396 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5241, 0);
Object result = (Object)Eval((Object)send32396);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send32397 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5297, 0);
Object result = (Object)Eval((Object)send32397);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send32398 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5291, 0);
Object result = (Object)Eval((Object)send32398);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send32399 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5293, 0);
Object result = (Object)Eval((Object)send32399);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send32400 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5263, 0);
Object result = (Object)Eval((Object)send32400);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send32401 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5242, 0);
Object result = (Object)Eval((Object)send32401);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send32402 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5281, 0);
Object result = (Object)Eval((Object)send32402);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send32403 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5267, 0);
Object result = (Object)Eval((Object)send32403);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send32404 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5258, 0);
Object result = (Object)Eval((Object)send32404);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send32405 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5274, 0);
Object result = (Object)Eval((Object)send32405);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send32406 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5247, 0);
Object result = (Object)Eval((Object)send32406);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send32407 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol5283, 0);
Eval((Object)send32407);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class735;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})