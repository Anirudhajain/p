// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object objectlayout1180;
Object instancevariable1499;
Object instancevariable1500;
Object instancevariable1501;
Object instancevariable1502;
Object instancevariable1503;
Object instancevariable1504;
Object symbol3894;
Object objectlayout1181;
Object instancevariable1505;
Object class736;
Object metaclass736;
Object objectlayout1182;
Object symbol4012;
Object class737;
Object metaclass737;
Object objectlayout1183;
Object symbol4011;
Object objectlayout1184;
Object instancevariable1506;
Object instancevariable1507;
Object instancevariable1508;
Object class738;
Object metaclass738;
Object objectlayout1185;
Object symbol4010;
Object objectlayout1186;
Object class739;
Object metaclass739;
Object objectlayout1187;
Object symbol3909;
Object objectlayout1188;
Object instancevariable1509;
Object instancevariable1510;
Object class740;
Object metaclass740;
Object objectlayout1189;
Object symbol4180;
Object objectlayout1190;
Object instancevariable1511;
Object instancevariable1512;
Object class741;
Object metaclass741;
Object objectlayout1191;
Object symbol4184;
Object objectlayout1192;
Object instancevariable1513;
Object instancevariable1514;
Object class742;
Object metaclass742;
Object objectlayout1193;
Object symbol4188;
Object objectlayout1194;
Object instancevariable1515;
Object class743;
Object metaclass743;
Object objectlayout1195;
Object symbol4193;
Object objectlayout1196;
Object class744;
Object metaclass744;
Object objectlayout1197;
Object symbol4226;
Object class745;
Object metaclass745;
Object objectlayout1198;
Object symbol4221;
Object objectlayout1199;
Object instancevariable1516;
Object class746;
Object metaclass746;
Object objectlayout1200;
Object symbol4222;
Object class747;
Object metaclass747;
Object objectlayout1201;
Object symbol4182;
Object objectlayout1202;
Object instancevariable1517;
Object instancevariable1518;
Object class748;
Object metaclass748;
Object objectlayout1203;
Object symbol4199;
Object objectlayout1204;
Object instancevariable1519;
Object instancevariable1520;
Object class749;
Object metaclass749;
Object objectlayout1205;
Object symbol3971;
Object objectlayout1206;
Object instancevariable1521;
Object instancevariable1522;
Object instancevariable1523;
Object instancevariable1524;
Object class750;
Object metaclass750;
Object objectlayout1207;
Object symbol3891;
Object objectlayout1208;
Object instancevariable1525;
Object class751;
Object metaclass751;
Object objectlayout1209;
Object symbol3964;
Object objectlayout1210;
Object instancevariable1526;
Object instancevariable1527;
Object instancevariable1528;
Object class752;
Object metaclass752;
Object objectlayout1211;
Object instancevariable1529;
Object symbol4023;
Object objectlayout1212;
Object instancevariable1530;
Object instancevariable1531;
Object instancevariable1532;
Object class753;
Object metaclass753;
Object objectlayout1213;
Object symbol3951;
Object objectlayout1214;
Object class754;
Object metaclass754;
Object objectlayout1215;
Object symbol3921;
Object objectlayout1216;
Object instancevariable1533;
Object instancevariable1534;
Object class755;
Object metaclass755;
Object objectlayout1217;
Object symbol3952;
Object objectlayout1218;
Object class756;
Object metaclass756;
Object objectlayout1219;
Object symbol4022;
Object objectlayout1220;
Object class757;
Object metaclass757;
Object objectlayout1221;
Object symbol4073;
Object objectlayout1222;
Object instancevariable1535;
Object class758;
Object metaclass758;
Object objectlayout1223;
Object symbol3926;
Object objectlayout1224;
Object instancevariable1536;
Object class759;
Object metaclass759;
Object objectlayout1225;
Object symbol3922;
Object objectlayout1226;
Object instancevariable1537;
Object instancevariable1538;
Object class760;
Object metaclass760;
Object objectlayout1227;
Object symbol3942;
Object objectlayout1228;
Object instancevariable1539;
Object class761;
Object metaclass761;
Object objectlayout1229;
Object symbol3934;
Object objectlayout1230;
Object instancevariable1540;
Object class762;
Object metaclass762;
Object objectlayout1231;
Object symbol4063;
Object objectlayout1232;
Object class763;
Object metaclass763;
Object objectlayout1233;
Object symbol3962;
Object objectlayout1234;
Object instancevariable1541;
Object instancevariable1542;
Object class764;
Object metaclass764;
Object objectlayout1235;
Object symbol4130;
Object objectlayout1236;
Object instancevariable1543;
Object class765;
Object metaclass765;
Object objectlayout1237;
Object symbol3924;
Object objectlayout1238;
Object class766;
Object metaclass766;
Object objectlayout1239;
Object symbol3935;
Object objectlayout1240;
Object class767;
Object metaclass767;
Object objectlayout1241;
Object symbol3916;
Object objectlayout1242;
Object instancevariable1544;
Object instancevariable1545;
Object class768;
Object metaclass768;
Object objectlayout1243;
Object symbol3944;
Object objectlayout1244;
Object instancevariable1546;
Object instancevariable1547;
Object instancevariable1548;
Object instancevariable1549;
Object class769;
Object metaclass769;
Object objectlayout1245;
Object symbol4084;
Object objectlayout1246;
Object class770;
Object metaclass770;
Object objectlayout1247;
Object symbol3956;
Object objectlayout1248;
Object instancevariable1550;
Object class771;
Object metaclass771;
Object objectlayout1249;
Object symbol3917;
Object objectlayout1250;
Object instancevariable1551;
Object class772;
Object metaclass772;
Object objectlayout1251;
Object symbol4133;
Object objectlayout1252;
Object class773;
Object metaclass773;
Object objectlayout1253;
Object symbol3918;
Object objectlayout1254;
Object instancevariable1552;
Object class774;
Object metaclass774;
Object objectlayout1255;
Object symbol3946;
Object objectlayout1256;
Object instancevariable1553;
Object class775;
Object metaclass775;
Object objectlayout1257;
Object symbol3930;
Object objectlayout1258;
Object instancevariable1554;
Object class776;
Object metaclass776;
Object objectlayout1259;
Object symbol3927;
Object objectlayout1260;
Object instancevariable1555;
Object instancevariable1556;
Object class777;
Object metaclass777;
Object objectlayout1261;
Object symbol3967;
Object objectlayout1262;
Object instancevariable1557;
Object instancevariable1558;
Object instancevariable1559;
Object class778;
Object metaclass778;
Object objectlayout1263;
Object symbol3928;
Object objectlayout1264;
Object instancevariable1560;
Object class779;
Object metaclass779;
Object objectlayout1265;
Object symbol3912;
Object objectlayout1266;
Object instancevariable1561;
Object class780;
Object metaclass780;
Object objectlayout1267;
Object symbol3920;
Object objectlayout1268;
Object instancevariable1562;
Object instancevariable1563;
Object class781;
Object metaclass781;
Object objectlayout1269;
Object symbol3997;
Object class782;
Object metaclass782;
Object objectlayout1270;
Object symbol4061;
Object objectlayout1271;
Object instancevariable1564;
Object class783;
Object metaclass783;
Object objectlayout1272;
Object symbol4091;
Object objectlayout1273;
Object instancevariable1565;
Object class784;
Object metaclass784;
Object objectlayout1274;
Object instancevariable1566;
Object symbol3998;
Object class785;
Object metaclass785;
Object objectlayout1275;
Object symbol4053;
Object objectlayout1276;
Object instancevariable1567;
Object class786;
Object metaclass786;
Object objectlayout1277;
Object instancevariable1568;
Object symbol4056;
Object objectlayout1278;
Object instancevariable1569;
Object class787;
Object metaclass787;
Object objectlayout1279;
Object symbol4207;
Object objectlayout1280;
Object instancevariable1570;
Object instancevariable1571;
Object instancevariable1572;
Object class788;
Object metaclass788;
Object objectlayout1281;
Object symbol4068;
Object objectlayout1282;
Object instancevariable1573;
Object class789;
Object metaclass789;
Object objectlayout1283;
Object symbol3989;
Object objectlayout1284;
Object class790;
Object metaclass790;
Object objectlayout1285;
Object symbol4037;
Object class791;
Object metaclass791;
Object objectlayout1286;
Object symbol4217;
Object objectlayout1287;
Object instancevariable1574;
Object instancevariable1575;
Object class792;
Object metaclass792;
Object objectlayout1288;
Object symbol4017;
Object objectlayout1289;
Object instancevariable1576;
Object instancevariable1577;
Object instancevariable1578;
Object class793;
Object metaclass793;
Object objectlayout1290;
Object symbol4036;
Object class794;
Object metaclass794;
Object objectlayout1291;
Object symbol4035;
Object class795;
Object metaclass795;
Object objectlayout1292;
Object symbol3958;
Object objectlayout1293;
Object instancevariable1579;
Object instancevariable1580;
Object instancevariable1581;
Object class796;
Object metaclass796;
Object classreference1319;
Object localvariable3387;
Object array2866;
Object localvariable3388;
Object array2867;
Object symbol4205;
Object send22349;
Object assign2698;
Object symbol4230;
Object send22350;
Object method4514;
Object symbol4019;
Object methodclosure4502;
Object localvariable3389;
Object array2868;
Object localvariable3390;
Object localvariable3391;
Object array2869;
Object variable176;
Object array2870;
Object symbol4231;
Object send22351;
Object assign2699;
Object assign2700;
Object send22352;
Object block1360;
Object send22353;
Object send22354;
Object block1361;
Object send22355;
Object symbol4232;
Object send22356;
Object symbol3907;
Object send22357;
Object send22358;
Object send22359;
Object block1362;
Object send22360;
Object block1363;
Object send22361;
Object block1364;
Object send22362;
Object method4515;
Object symbol4013;
Object methodclosure4503;
Object localvariable3392;
Object array2871;
Object localvariable3393;
Object localvariable3394;
Object array2872;
Object variable177;
Object array2873;
Object assign2701;
Object symbol4018;
Object send22363;
Object symbol4218;
Object send22364;
Object block1365;
Object send22365;
Object assign2702;
Object symbol4233;
Object send22366;
Object assign2703;
Object symbol4234;
Object send22367;
Object send22368;
Object block1366;
Object send22369;
Object send22370;
Object send22371;
Object block1367;
Object send22372;
Object block1368;
Object send22373;
Object method4516;
Object symbol4020;
Object methodclosure4504;
Object localvariable3395;
Object array2874;
Object send22374;
Object block1369;
Object block1370;
Object send22375;
Object method4517;
Object symbol4014;
Object methodclosure4505;
Object localvariable3396;
Object array2875;
Object variable178;
Object array2876;
Object smallint2370;
Object constant5206;
Object send22376;
Object send22377;
Object assign2704;
Object symbol4235;
Object send22378;
Object block1371;
Object send22379;
Object smallint2371;
Object constant5207;
Object send22380;
Object classreference1320;
Object symbol3994;
Object send22381;
Object send22382;
Object block1372;
Object send22383;
Object method4518;
Object methodclosure4506;
Object symbol4196;
Object send22384;
Object method4519;
Object symbol4021;
Object methodclosure4507;
Object localvariable3397;
Object localvariable3398;
Object array2877;
Object super350;
Object assign2705;
Object smallint2372;
Object constant5208;
Object send22385;
Object method4520;
Object symbol4041;
Object methodclosure4508;
Object localvariable3399;
Object array2878;
Object localvariable3400;
Object array2879;
Object send22386;
Object symbol3987;
Object send22387;
Object smallint2373;
Object constant5209;
Object send22388;
Object send22389;
Object assign2706;
Object symbol4042;
Object localvariable3401;
Object localvariable3402;
Object array2880;
Object send22390;
Object block1373;
Object send22391;
Object symbol4047;
Object send22392;
Object method4521;
Object symbol4045;
Object methodclosure4509;
Object localvariable3403;
Object array2881;
Object smallint2374;
Object constant5210;
Object symbol4236;
Object send22393;
Object localvariable3404;
Object array2882;
Object symbol4237;
Object send22394;
Object send22395;
Object block1374;
Object send22396;
Object method4522;
Object methodclosure4510;
Object symbol3906;
Object super351;
Object method4523;
Object methodclosure4511;
Object localvariable3405;
Object localvariable3406;
Object array2883;
Object localvariable3407;
Object array2884;
Object assign2707;
Object symbol4044;
Object localvariable3408;
Object array2885;
Object send22397;
Object assign2708;
Object block1375;
Object send22398;
Object method4524;
Object symbol4046;
Object methodclosure4512;
Object localvariable3409;
Object array2886;
Object symbol4003;
Object super352;
Object symbol4238;
Object string2450;
Object constant5211;
Object send22399;
Object localvariable3410;
Object array2887;
Object send22400;
Object string2451;
Object constant5212;
Object send22401;
Object block1376;
Object send22402;
Object string2452;
Object constant5213;
Object send22403;
Object method4525;
Object methodclosure4513;
Object localvariable3411;
Object array2888;
Object variable179;
Object array2889;
Object send22404;
Object send22405;
Object block1377;
Object send22406;
Object send22407;
Object send22408;
Object send22409;
Object send22410;
Object block1378;
Object send22411;
Object send22412;
Object send22413;
Object send22414;
Object send22415;
Object block1379;
Object send22416;
Object smallint2375;
Object constant5214;
Object send22417;
Object localvariable3412;
Object array2890;
Object send22418;
Object send22419;
Object send22420;
Object send22421;
Object block1380;
Object send22422;
Object block1381;
Object send22423;
Object block1382;
Object send22424;
Object method4526;
Object methodclosure4514;
Object localvariable3413;
Object array2891;
Object smallint2376;
Object constant5215;
Object send22425;
Object method4527;
Object symbol4043;
Object methodclosure4515;
Object send22426;
Object smallint2377;
Object constant5216;
Object send22427;
Object method4528;
Object symbol4031;
Object methodclosure4516;
Object localvariable3414;
Object array2892;
Object send22428;
Object send22429;
Object method4529;
Object methodclosure4517;
Object send22430;
Object send22431;
Object method4530;
Object symbol4040;
Object methodclosure4518;
Object localvariable3415;
Object array2893;
Object smallint2378;
Object constant5217;
Object send22432;
Object localvariable3416;
Object array2894;
Object send22433;
Object send22434;
Object block1383;
Object send22435;
Object method4531;
Object methodclosure4519;
Object classreference1321;
Object send22436;
Object smallint2379;
Object constant5218;
Object send22437;
Object send22438;
Object assign2709;
Object method4532;
Object symbol4015;
Object methodclosure4520;
Object classreference1322;
Object localvariable3417;
Object array2895;
Object assign2710;
Object method4533;
Object symbol4223;
Object methodclosure4521;
Object localvariable3418;
Object array2896;
Object symbol4224;
Object classreference1323;
Object send22439;
Object send22440;
Object method4534;
Object symbol4195;
Object methodclosure4522;
Object method4535;
Object symbol4183;
Object methodclosure4523;
Object localvariable3419;
Object array2897;
Object super353;
Object assign2711;
Object assign2712;
Object method4536;
Object symbol4220;
Object methodclosure4524;
Object localvariable3420;
Object localvariable3421;
Object array2898;
Object localvariable3422;
Object array2899;
Object send22441;
Object block1384;
Object send22442;
Object send22443;
Object assign2713;
Object send22444;
Object block1385;
Object send22445;
Object block1386;
Object send22446;
Object method4537;
Object methodclosure4525;
Object method4538;
Object methodclosure4526;
Object classreference1324;
Object send22447;
Object method4539;
Object symbol4185;
Object methodclosure4527;
Object method4540;
Object methodclosure4528;
Object localvariable3423;
Object array2900;
Object super354;
Object assign2714;
Object assign2715;
Object method4541;
Object methodclosure4529;
Object localvariable3424;
Object array2901;
Object variable180;
Object array2902;
Object localvariable3425;
Object array2903;
Object send22448;
Object method4542;
Object symbol4228;
Object methodclosure4530;
Object localvariable3426;
Object array2904;
Object method4543;
Object symbol4227;
Object methodclosure4531;
Object localvariable3427;
Object array2905;
Object assign2716;
Object method4544;
Object symbol4229;
Object methodclosure4532;
Object classreference1325;
Object send22449;
Object symbol4239;
Object classreference1326;
Object send22450;
Object block1387;
Object send22451;
Object send22452;
Object block1388;
Object send22453;
Object method4545;
Object methodclosure4533;
Object classreference1327;
Object send22454;
Object method4546;
Object methodclosure4534;
Object localvariable3428;
Object array2906;
Object localvariable3429;
Object localvariable3430;
Object array2907;
Object variable181;
Object array2908;
Object send22455;
Object assign2717;
Object send22456;
Object assign2718;
Object send22457;
Object block1389;
Object send22458;
Object send22459;
Object send22460;
Object block1390;
Object send22461;
Object method4547;
Object methodclosure4535;
Object classreference1328;
Object send22462;
Object method4548;
Object symbol4194;
Object methodclosure4536;
Object send22463;
Object send22464;
Object method4549;
Object symbol4186;
Object methodclosure4537;
Object localvariable3431;
Object array2909;
Object symbol4240;
Object send22465;
Object method4550;
Object methodclosure4538;
Object method4551;
Object symbol4187;
Object methodclosure4539;
Object localvariable3432;
Object array2910;
Object localvariable3433;
Object array2911;
Object assign2719;
Object method4552;
Object methodclosure4540;
Object localvariable3434;
Object array2912;
Object symbol4189;
Object send22466;
Object send22467;
Object method4553;
Object symbol4225;
Object methodclosure4541;
Object localvariable3435;
Object array2913;
Object localvariable3436;
Object localvariable3437;
Object array2914;
Object variable182;
Object array2915;
Object send22468;
Object assign2720;
Object localvariable3438;
Object array2916;
Object send22469;
Object block1391;
Object send22470;
Object send22471;
Object assign2721;
Object send22472;
Object block1392;
Object send22473;
Object symbol4192;
Object send22474;
Object send22475;
Object block1393;
Object send22476;
Object block1394;
Object send22477;
Object send22478;
Object smallint2380;
Object constant5219;
Object send22479;
Object send22480;
Object send22481;
Object block1395;
Object send22482;
Object block1396;
Object send22483;
Object method4554;
Object methodclosure4542;
Object localvariable3439;
Object array2917;
Object super355;
Object assign2722;
Object assign2723;
Object method4555;
Object methodclosure4543;
Object super356;
Object send22484;
Object send22485;
Object method4556;
Object methodclosure4544;
Object method4557;
Object methodclosure4545;
Object classreference1329;
Object send22486;
Object send22487;
Object send22488;
Object method4558;
Object methodclosure4546;
Object send22489;
Object method4559;
Object methodclosure4547;
Object localvariable3440;
Object array2918;
Object localvariable3441;
Object localvariable3442;
Object array2919;
Object symbol4241;
Object send22490;
Object assign2724;
Object send22491;
Object assign2725;
Object symbol4242;
Object send22492;
Object block1397;
Object send22493;
Object method4560;
Object methodclosure4548;
Object method4561;
Object methodclosure4549;
Object send22494;
Object send22495;
Object method4562;
Object symbol4197;
Object methodclosure4550;
Object method4563;
Object methodclosure4551;
Object localvariable3443;
Object array2920;
Object assign2726;
Object method4564;
Object symbol4181;
Object methodclosure4552;
Object assign2727;
Object method4565;
Object methodclosure4553;
Object localvariable3444;
Object array2921;
Object send22496;
Object send22497;
Object method4566;
Object symbol4190;
Object methodclosure4554;
Object localvariable3445;
Object array2922;
Object localvariable3446;
Object array2923;
Object super357;
Object assign2728;
Object method4567;
Object methodclosure4555;
Object super358;
Object send22498;
Object send22499;
Object method4568;
Object methodclosure4556;
Object localvariable3447;
Object array2924;
Object send22500;
Object send22501;
Object method4569;
Object symbol4206;
Object methodclosure4557;
Object localvariable3448;
Object array2925;
Object localvariable3449;
Object array2926;
Object variable183;
Object array2927;
Object localvariable3450;
Object array2928;
Object send22502;
Object assign2729;
Object send22503;
Object block1398;
Object send22504;
Object block1399;
Object send22505;
Object block1400;
Object send22506;
Object method4570;
Object methodclosure4558;
Object classreference1330;
Object send22507;
Object send22508;
Object send22509;
Object method4571;
Object methodclosure4559;
Object variable184;
Object array2929;
Object symbol4198;
Object super359;
Object send22510;
Object block1401;
Object send22511;
Object string2453;
Object constant5220;
Object send22512;
Object string2454;
Object constant5221;
Object send22513;
Object block1402;
Object send22514;
Object method4572;
Object methodclosure4560;
Object send22515;
Object send22516;
Object method4573;
Object symbol4200;
Object methodclosure4561;
Object localvariable3451;
Object array2930;
Object symbol4243;
Object send22517;
Object symbol4244;
Object send22518;
Object block1403;
Object send22519;
Object method4574;
Object symbol4191;
Object methodclosure4562;
Object send22520;
Object method4575;
Object methodclosure4563;
Object localvariable3452;
Object array2931;
Object assign2730;
Object method4576;
Object symbol4071;
Object methodclosure4564;
Object localvariable3453;
Object array2932;
Object send22521;
Object localvariable3454;
Object array2933;
Object symbol4245;
Object send22522;
Object symbol4246;
Object send22523;
Object block1404;
Object send22524;
Object block1405;
Object send22525;
Object method4577;
Object symbol4201;
Object methodclosure4565;
Object method4578;
Object methodclosure4566;
Object classreference1331;
Object localvariable3455;
Object array2934;
Object send22526;
Object method4579;
Object methodclosure4567;
Object classreference1332;
Object localvariable3456;
Object array2935;
Object localvariable3457;
Object array2936;
Object variable185;
Object array2937;
Object send22527;
Object assign2731;
Object symbol4247;
Object block1406;
Object send22528;
Object block1407;
Object send22529;
Object send22530;
Object block1408;
Object send22531;
Object block1409;
Object send22532;
Object method4580;
Object methodclosure4568;
Object localvariable3458;
Object array2938;
Object assign2732;
Object method4581;
Object symbol4204;
Object methodclosure4569;
Object localvariable3459;
Object array2939;
Object assign2733;
Object method4582;
Object symbol4202;
Object methodclosure4570;
Object super360;
Object send22533;
Object symbol4248;
Object send22534;
Object assign2734;
Object method4583;
Object methodclosure4571;
Object localvariable3460;
Object array2940;
Object send22535;
Object assign2735;
Object method4584;
Object methodclosure4572;
Object localvariable3461;
Object array2941;
Object localvariable3462;
Object localvariable3463;
Object array2942;
Object send22536;
Object assign2736;
Object send22537;
Object assign2737;
Object method4585;
Object symbol4203;
Object methodclosure4573;
Object localvariable3464;
Object array2943;
Object localvariable3465;
Object array2944;
Object send22538;
Object assign2738;
Object method4586;
Object methodclosure4574;
Object classreference1333;
Object localvariable3466;
Object localvariable3467;
Object localvariable3468;
Object array2945;
Object symbol4249;
Object send22539;
Object assign2739;
Object string2455;
Object constant5222;
Object send22540;
Object assign2740;
Object send22541;
Object symbol4250;
Object send22542;
Object symbol4251;
Object send22543;
Object send22544;
Object string2456;
Object constant5223;
Object send22545;
Object assign2741;
Object send22546;
Object assign2742;
Object send22547;
Object send22548;
Object localvariable3469;
Object array2946;
Object assign2743;
Object method4587;
Object symbol4067;
Object methodclosure4575;
Object method4588;
Object symbol4064;
Object methodclosure4576;
Object localvariable3470;
Object array2947;
Object assign2744;
Object method4589;
Object symbol4065;
Object methodclosure4577;
Object method4590;
Object symbol4066;
Object methodclosure4578;
Object classreference1334;
Object send22549;
Object send22550;
Object send22551;
Object send22552;
Object localvariable3471;
Object array2948;
Object symbol3992;
Object send22553;
Object symbol4252;
Object send22554;
Object send22555;
Object method4591;
Object symbol4072;
Object methodclosure4579;
Object localvariable3472;
Object array2949;
Object assign2745;
Object method4592;
Object symbol4215;
Object methodclosure4580;
Object method4593;
Object symbol4216;
Object methodclosure4581;
Object classreference1335;
Object send22556;
Object send22557;
Object send22558;
Object method4594;
Object symbol4069;
Object methodclosure4582;
Object super361;
Object method4595;
Object methodclosure4583;
Object localvariable3473;
Object array2950;
Object super362;
Object localvariable3474;
Object array2951;
Object string2457;
Object constant5224;
Object send22559;
Object send22560;
Object send22561;
Object string2458;
Object constant5225;
Object send22562;
Object block1410;
Object send22563;
Object method4596;
Object methodclosure4584;
Object localvariable3475;
Object array2952;
Object send22564;
Object send22565;
Object send22566;
Object method4597;
Object methodclosure4585;
Object localvariable3476;
Object array2953;
Object send22567;
Object symbol4253;
Object send22568;
Object send22569;
Object method4598;
Object symbol4070;
Object methodclosure4586;
Object localvariable3477;
Object array2954;
Object assign2746;
Object method4599;
Object methodclosure4587;
Object send22570;
Object send22571;
Object method4600;
Object methodclosure4588;
Object method4601;
Object methodclosure4589;
Object classreference1336;
Object send22572;
Object send22573;
Object send22574;
Object send22575;
Object string2459;
Object constant5226;
Object send22576;
Object send22577;
Object assign2747;
Object send22578;
Object send22579;
Object send22580;
Object send22581;
Object send22582;
Object send22583;
Object send22584;
Object send22585;
Object send22586;
Object send22587;
Object string2460;
Object constant5227;
Object send22588;
Object send22589;
Object assign2748;
Object send22590;
Object send22591;
Object send22592;
Object send22593;
Object send22594;
Object send22595;
Object send22596;
Object send22597;
Object send22598;
Object send22599;
Object string2461;
Object constant5228;
Object send22600;
Object send22601;
Object send22602;
Object send22603;
Object localvariable3478;
Object array2955;
Object assign2749;
Object method4602;
Object symbol4080;
Object methodclosure4590;
Object method4603;
Object symbol4008;
Object methodclosure4591;
Object localvariable3479;
Object array2956;
Object assign2750;
Object method4604;
Object symbol4081;
Object methodclosure4592;
Object super363;
Object send22604;
Object assign2751;
Object method4605;
Object methodclosure4593;
Object send22605;
Object symbol4254;
Object localvariable3480;
Object array2957;
Object symbol3903;
Object send22606;
Object symbol4255;
Object symbol4025;
Object send22607;
Object block1411;
Object send22608;
Object block1412;
Object send22609;
Object method4606;
Object methodclosure4594;
Object method4607;
Object symbol4082;
Object methodclosure4595;
Object classreference1337;
Object send22610;
Object method4608;
Object symbol3932;
Object methodclosure4596;
Object method4609;
Object symbol3960;
Object methodclosure4597;
Object localvariable3481;
Object localvariable3482;
Object localvariable3483;
Object localvariable3484;
Object array2958;
Object symbol4256;
Object send22611;
Object assign2752;
Object string2462;
Object constant5229;
Object send22612;
Object assign2753;
Object send22613;
Object assign2754;
Object send22614;
Object send22615;
Object send22616;
Object symbol4078;
Object send22617;
Object send22618;
Object send22619;
Object localvariable3485;
Object array2959;
Object smallint2381;
Object constant5230;
Object string2463;
Object constant5231;
Object send22620;
Object smallint2382;
Object constant5232;
Object string2464;
Object constant5233;
Object send22621;
Object smallint2383;
Object constant5234;
Object string2465;
Object constant5235;
Object send22622;
Object symbol3904;
Object send22623;
Object block1413;
Object smallint2384;
Object constant5236;
Object send22624;
Object send22625;
Object send22626;
Object symbol4007;
Object send22627;
Object send22628;
Object send22629;
Object super364;
Object send22630;
Object assign2755;
Object method4610;
Object methodclosure4598;
Object method4611;
Object methodclosure4599;
Object localvariable3486;
Object array2960;
Object assign2756;
Object method4612;
Object symbol4079;
Object methodclosure4600;
Object symbol4257;
Object string2466;
Object constant5237;
Object send22631;
Object string2467;
Object constant5238;
Object send22632;
Object method4613;
Object symbol4077;
Object methodclosure4601;
Object classreference1338;
Object send22633;
Object send22634;
Object send22635;
Object send22636;
Object string2468;
Object constant5239;
Object send22637;
Object send22638;
Object send22639;
Object assign2757;
Object send22640;
Object send22641;
Object localvariable3487;
Object array2961;
Object assign2758;
Object method4614;
Object symbol4049;
Object methodclosure4602;
Object method4615;
Object symbol4213;
Object methodclosure4603;
Object localvariable3488;
Object array2962;
Object assign2759;
Object method4616;
Object symbol4214;
Object methodclosure4604;
Object localvariable3489;
Object array2963;
Object send22642;
Object send22643;
Object send22644;
Object symbol4258;
Object send22645;
Object send22646;
Object send22647;
Object block1414;
Object send22648;
Object method4617;
Object methodclosure4605;
Object classreference1339;
Object send22649;
Object symbol4050;
Object send22650;
Object send22651;
Object method4618;
Object symbol4054;
Object methodclosure4606;
Object method4619;
Object symbol4051;
Object methodclosure4607;
Object method4620;
Object symbol4048;
Object methodclosure4608;
Object localvariable3490;
Object array2964;
Object send22652;
Object send22653;
Object method4621;
Object methodclosure4609;
Object localvariable3491;
Object array2965;
Object assign2760;
Object method4622;
Object symbol4052;
Object methodclosure4610;
Object send22654;
Object string2469;
Object constant5240;
Object send22655;
Object send22656;
Object send22657;
Object symbol4259;
Object send22658;
Object send22659;
Object method4623;
Object methodclosure4611;
Object classreference1340;
Object send22660;
Object send22661;
Object smallint2385;
Object constant5241;
Object send22662;
Object assign2761;
Object send22663;
Object send22664;
Object localvariable3492;
Object array2966;
Object assign2762;
Object method4624;
Object methodclosure4612;
Object method4625;
Object symbol4086;
Object methodclosure4613;
Object localvariable3493;
Object array2967;
Object symbol4085;
Object send22665;
Object assign2763;
Object method4626;
Object symbol4024;
Object methodclosure4614;
Object localvariable3494;
Object array2968;
Object assign2764;
Object method4627;
Object methodclosure4615;
Object super365;
Object method4628;
Object methodclosure4616;
Object localvariable3495;
Object array2969;
Object send22666;
Object send22667;
Object symbol4260;
Object send22668;
Object send22669;
Object super366;
Object send22670;
Object send22671;
Object send22672;
Object send22673;
Object method4629;
Object methodclosure4617;
Object method4630;
Object methodclosure4618;
Object classreference1341;
Object send22674;
Object send22675;
Object smallint2386;
Object constant5242;
Object send22676;
Object assign2765;
Object send22677;
Object send22678;
Object method4631;
Object methodclosure4619;
Object localvariable3496;
Object array2970;
Object send22679;
Object send22680;
Object send22681;
Object send22682;
Object super367;
Object method4632;
Object methodclosure4620;
Object localvariable3497;
Object array2971;
Object assign2766;
Object method4633;
Object methodclosure4621;
Object classreference1342;
Object send22683;
Object send22684;
Object send22685;
Object send22686;
Object send22687;
Object send22688;
Object send22689;
Object smallint2387;
Object constant5243;
Object send22690;
Object method4634;
Object symbol3929;
Object methodclosure4622;
Object localvariable3498;
Object localvariable3499;
Object array2972;
Object send22691;
Object assign2767;
Object string2470;
Object constant5244;
Object send22692;
Object assign2768;
Object send22693;
Object send22694;
Object send22695;
Object send22696;
Object send22697;
Object send22698;
Object send22699;
Object smallint2388;
Object constant5245;
Object send22700;
Object string2471;
Object constant5246;
Object send22701;
Object assign2769;
Object send22702;
Object send22703;
Object send22704;
Object send22705;
Object send22706;
Object send22707;
Object send22708;
Object smallint2389;
Object constant5247;
Object send22709;
Object string2472;
Object constant5248;
Object send22710;
Object assign2770;
Object send22711;
Object send22712;
Object send22713;
Object send22714;
Object send22715;
Object send22716;
Object send22717;
Object smallint2390;
Object constant5249;
Object send22718;
Object method4635;
Object symbol3979;
Object methodclosure4623;
Object localvariable3500;
Object localvariable3501;
Object array2973;
Object symbol4261;
Object send22719;
Object assign2771;
Object string2473;
Object constant5250;
Object send22720;
Object assign2772;
Object send22721;
Object send22722;
Object send22723;
Object string2474;
Object constant5251;
Object send22724;
Object send22725;
Object send22726;
Object smallint2391;
Object constant5252;
Object send22727;
Object string2475;
Object constant5253;
Object send22728;
Object assign2773;
Object send22729;
Object send22730;
Object send22731;
Object string2476;
Object constant5254;
Object send22732;
Object send22733;
Object send22734;
Object smallint2392;
Object constant5255;
Object send22735;
Object string2477;
Object constant5256;
Object send22736;
Object assign2774;
Object send22737;
Object send22738;
Object send22739;
Object string2478;
Object constant5257;
Object send22740;
Object send22741;
Object send22742;
Object smallint2393;
Object constant5258;
Object send22743;
Object string2479;
Object constant5259;
Object send22744;
Object assign2775;
Object send22745;
Object send22746;
Object send22747;
Object string2480;
Object constant5260;
Object send22748;
Object send22749;
Object send22750;
Object smallint2394;
Object constant5261;
Object send22751;
Object method4636;
Object symbol3949;
Object methodclosure4624;
Object localvariable3502;
Object array2974;
Object symbol4262;
Object string2481;
Object constant5262;
Object symbol4263;
Object send22752;
Object send22753;
Object assign2776;
Object string2482;
Object constant5263;
Object send22754;
Object send22755;
Object send22756;
Object send22757;
Object send22758;
Object string2483;
Object constant5264;
Object send22759;
Object send22760;
Object send22761;
Object send22762;
Object method4637;
Object symbol3972;
Object methodclosure4625;
Object localvariable3503;
Object localvariable3504;
Object array2975;
Object symbol4099;
Object send22763;
Object assign2777;
Object string2484;
Object constant5265;
Object send22764;
Object assign2778;
Object send22765;
Object symbol4264;
Object constant5266;
Object send22766;
Object send22767;
Object send22768;
Object localvariable3505;
Object array2976;
Object smallint2395;
Object constant5267;
Object string2485;
Object constant5268;
Object send22769;
Object smallint2396;
Object constant5269;
Object string2486;
Object constant5270;
Object send22770;
Object smallint2397;
Object constant5271;
Object string2487;
Object constant5272;
Object send22771;
Object send22772;
Object block1415;
Object smallint2398;
Object constant5273;
Object send22773;
Object send22774;
Object send22775;
Object send22776;
Object send22777;
Object smallint2399;
Object constant5274;
Object send22778;
Object string2488;
Object constant5275;
Object send22779;
Object assign2779;
Object send22780;
Object constant5276;
Object send22781;
Object send22782;
Object send22783;
Object localvariable3506;
Object array2977;
Object smallint2400;
Object constant5277;
Object string2489;
Object constant5278;
Object send22784;
Object smallint2401;
Object constant5279;
Object string2490;
Object constant5280;
Object send22785;
Object smallint2402;
Object constant5281;
Object string2491;
Object constant5282;
Object send22786;
Object send22787;
Object block1416;
Object smallint2403;
Object constant5283;
Object send22788;
Object send22789;
Object send22790;
Object send22791;
Object send22792;
Object smallint2404;
Object constant5284;
Object send22793;
Object method4638;
Object symbol3969;
Object methodclosure4626;
Object localvariable3507;
Object localvariable3508;
Object localvariable3509;
Object array2978;
Object symbol4265;
Object send22794;
Object assign2780;
Object string2492;
Object constant5285;
Object assign2781;
Object send22795;
Object assign2782;
Object send22796;
Object send22797;
Object send22798;
Object symbol4266;
Object send22799;
Object send22800;
Object send22801;
Object localvariable3510;
Object array2979;
Object assign2783;
Object method4639;
Object symbol4093;
Object methodclosure4627;
Object method4640;
Object symbol4097;
Object methodclosure4628;
Object localvariable3511;
Object array2980;
Object super368;
Object string2493;
Object constant5286;
Object send22802;
Object send22803;
Object send22804;
Object string2494;
Object constant5287;
Object send22805;
Object method4641;
Object methodclosure4629;
Object localvariable3512;
Object array2981;
Object assign2784;
Object method4642;
Object symbol4098;
Object methodclosure4630;
Object method4643;
Object symbol4094;
Object methodclosure4631;
Object localvariable3513;
Object array2982;
Object assign2785;
Object method4644;
Object symbol4100;
Object methodclosure4632;
Object method4645;
Object symbol4095;
Object methodclosure4633;
Object method4646;
Object methodclosure4634;
Object localvariable3514;
Object array2983;
Object assign2786;
Object method4647;
Object symbol4101;
Object methodclosure4635;
Object localvariable3515;
Object array2984;
Object smallint2405;
Object constant5288;
Object constant5289;
Object send22806;
Object smallint2406;
Object constant5290;
Object constant5291;
Object send22807;
Object smallint2407;
Object constant5292;
Object constant5293;
Object send22808;
Object smallint2408;
Object constant5294;
Object constant5295;
Object send22809;
Object send22810;
Object block1417;
Object smallint2409;
Object constant5296;
Object send22811;
Object send22812;
Object method4648;
Object symbol4096;
Object methodclosure4636;
Object send22813;
Object send22814;
Object method4649;
Object methodclosure4637;
Object classreference1343;
Object send22815;
Object send22816;
Object send22817;
Object send22818;
Object method4650;
Object symbol4076;
Object methodclosure4638;
Object localvariable3516;
Object array2985;
Object variable186;
Object array2986;
Object symbol4074;
Object super369;
Object send22819;
Object block1418;
Object send22820;
Object symbol4103;
Object send22821;
Object block1419;
Object send22822;
Object method4651;
Object methodclosure4639;
Object localvariable3517;
Object array2987;
Object symbol4267;
Object send22823;
Object assign2787;
Object method4652;
Object symbol4102;
Object methodclosure4640;
Object super370;
Object send22824;
Object assign2788;
Object method4653;
Object methodclosure4641;
Object localvariable3518;
Object array2988;
Object variable187;
Object array2989;
Object send22825;
Object symbol4268;
Object localvariable3519;
Object array2990;
Object send22826;
Object send22827;
Object send22828;
Object send22829;
Object send22830;
Object send22831;
Object send22832;
Object block1420;
Object send22833;
Object block1421;
Object send22834;
Object block1422;
Object send22835;
Object method4654;
Object methodclosure4642;
Object classreference1344;
Object send22836;
Object send22837;
Object send22838;
Object send22839;
Object smallint2410;
Object constant5297;
Object send22840;
Object send22841;
Object send22842;
Object send22843;
Object smallint2411;
Object constant5298;
Object send22844;
Object send22845;
Object send22846;
Object send22847;
Object smallint2412;
Object constant5299;
Object send22848;
Object method4655;
Object symbol3980;
Object methodclosure4643;
Object localvariable3520;
Object localvariable3521;
Object localvariable3522;
Object array2991;
Object symbol4269;
Object send22849;
Object assign2789;
Object string2495;
Object constant5300;
Object send22850;
Object assign2790;
Object send22851;
Object assign2791;
Object send22852;
Object send22853;
Object send22854;
Object send22855;
Object send22856;
Object send22857;
Object send22858;
Object symbol4055;
Object send22859;
Object method4656;
Object symbol4083;
Object methodclosure4644;
Object classreference1345;
Object send22860;
Object send22861;
Object send22862;
Object send22863;
Object send22864;
Object string2496;
Object constant5301;
Object send22865;
Object send22866;
Object assign2792;
Object send22867;
Object send22868;
Object send22869;
Object send22870;
Object send22871;
Object send22872;
Object send22873;
Object send22874;
Object send22875;
Object send22876;
Object send22877;
Object string2497;
Object constant5302;
Object send22878;
Object send22879;
Object send22880;
Object send22881;
Object send22882;
Object send22883;
Object send22884;
Object send22885;
Object string2498;
Object constant5303;
Object send22886;
Object send22887;
Object send22888;
Object smallint2413;
Object constant5304;
Object send22889;
Object string2499;
Object constant5305;
Object send22890;
Object assign2793;
Object send22891;
Object send22892;
Object send22893;
Object send22894;
Object method4657;
Object symbol3954;
Object methodclosure4645;
Object localvariable3523;
Object localvariable3524;
Object localvariable3525;
Object array2992;
Object symbol4270;
Object send22895;
Object assign2794;
Object string2500;
Object constant5306;
Object send22896;
Object assign2795;
Object send22897;
Object assign2796;
Object send22898;
Object send22899;
Object send22900;
Object send22901;
Object send22902;
Object send22903;
Object send22904;
Object send22905;
Object send22906;
Object send22907;
Object string2501;
Object constant5307;
Object send22908;
Object send22909;
Object assign2797;
Object send22910;
Object send22911;
Object send22912;
Object send22913;
Object send22914;
Object send22915;
Object send22916;
Object send22917;
Object send22918;
Object send22919;
Object string2502;
Object constant5308;
Object send22920;
Object send22921;
Object assign2798;
Object send22922;
Object send22923;
Object send22924;
Object send22925;
Object send22926;
Object send22927;
Object send22928;
Object send22929;
Object send22930;
Object send22931;
Object string2503;
Object constant5309;
Object send22932;
Object send22933;
Object send22934;
Object send22935;
Object send22936;
Object string2504;
Object constant5310;
Object send22937;
Object assign2799;
Object send22938;
Object assign2800;
Object send22939;
Object send22940;
Object send22941;
Object send22942;
Object send22943;
Object send22944;
Object send22945;
Object send22946;
Object send22947;
Object send22948;
Object string2505;
Object constant5311;
Object send22949;
Object send22950;
Object assign2801;
Object send22951;
Object send22952;
Object send22953;
Object send22954;
Object send22955;
Object send22956;
Object send22957;
Object send22958;
Object send22959;
Object send22960;
Object string2506;
Object constant5312;
Object send22961;
Object send22962;
Object assign2802;
Object send22963;
Object send22964;
Object send22965;
Object send22966;
Object send22967;
Object send22968;
Object send22969;
Object send22970;
Object send22971;
Object send22972;
Object string2507;
Object constant5313;
Object send22973;
Object send22974;
Object send22975;
Object send22976;
Object send22977;
Object method4658;
Object symbol3982;
Object methodclosure4646;
Object localvariable3526;
Object localvariable3527;
Object localvariable3528;
Object localvariable3529;
Object array2993;
Object symbol4271;
Object send22978;
Object assign2803;
Object string2508;
Object constant5314;
Object send22979;
Object assign2804;
Object send22980;
Object assign2805;
Object send22981;
Object send22982;
Object send22983;
Object localvariable3530;
Object array2994;
Object string2509;
Object constant5315;
Object send22984;
Object method4659;
Object methodclosure4647;
Object classreference1346;
Object send22985;
Object symbol4272;
Object send22986;
Object assign2806;
Object string2510;
Object constant5316;
Object send22987;
Object assign2807;
Object send22988;
Object assign2808;
Object send22989;
Object send22990;
Object method4660;
Object methodclosure4648;
Object method4661;
Object methodclosure4649;
Object localvariable3531;
Object array2995;
Object assign2809;
Object method4662;
Object methodclosure4650;
Object classreference1347;
Object send22991;
Object send22992;
Object send22993;
Object send22994;
Object send22995;
Object send22996;
Object method4663;
Object symbol3974;
Object methodclosure4651;
Object localvariable3532;
Object localvariable3533;
Object localvariable3534;
Object localvariable3535;
Object array2996;
Object symbol4273;
Object send22997;
Object assign2810;
Object string2511;
Object constant5317;
Object send22998;
Object assign2811;
Object send22999;
Object assign2812;
Object send23000;
Object send23001;
Object method4664;
Object methodclosure4652;
Object localvariable3536;
Object array2997;
Object assign2813;
Object method4665;
Object methodclosure4653;
Object classreference1348;
Object send23002;
Object send23003;
Object send23004;
Object constant5318;
Object send23005;
Object send23006;
Object localvariable3537;
Object array2998;
Object smallint2414;
Object constant5319;
Object symbol4274;
Object constant5320;
Object send23007;
Object smallint2415;
Object constant5321;
Object symbol4275;
Object constant5322;
Object send23008;
Object smallint2416;
Object constant5323;
Object symbol4276;
Object constant5324;
Object send23009;
Object send23010;
Object block1423;
Object smallint2417;
Object constant5325;
Object send23011;
Object send23012;
Object send23013;
Object send23014;
Object send23015;
Object assign2814;
Object send23016;
Object send23017;
Object send23018;
Object send23019;
Object smallint2418;
Object constant5326;
Object send23020;
Object assign2815;
Object send23021;
Object send23022;
Object send23023;
Object send23024;
Object smallint2419;
Object constant5327;
Object send23025;
Object assign2816;
Object send23026;
Object send23027;
Object send23028;
Object send23029;
Object send23030;
Object send23031;
Object send23032;
Object string2512;
Object constant5328;
Object send23033;
Object assign2817;
Object send23034;
Object assign2818;
Object send23035;
Object send23036;
Object classreference1349;
Object send23037;
Object send23038;
Object send23039;
Object send23040;
Object string2513;
Object constant5329;
Object send23041;
Object send23042;
Object send23043;
Object smallint2420;
Object constant5330;
Object send23044;
Object string2514;
Object constant5331;
Object send23045;
Object assign2819;
Object send23046;
Object assign2820;
Object send23047;
Object send23048;
Object send23049;
Object send23050;
Object send23051;
Object constant5332;
Object send23052;
Object send23053;
Object localvariable3538;
Object array2999;
Object smallint2421;
Object constant5333;
Object string2515;
Object constant5334;
Object send23054;
Object smallint2422;
Object constant5335;
Object string2516;
Object constant5336;
Object send23055;
Object smallint2423;
Object constant5337;
Object string2517;
Object constant5338;
Object send23056;
Object send23057;
Object block1424;
Object smallint2424;
Object constant5339;
Object send23058;
Object send23059;
Object send23060;
Object send23061;
Object send23062;
Object send23063;
Object send23064;
Object method4666;
Object symbol3936;
Object methodclosure4654;
Object localvariable3539;
Object localvariable3540;
Object localvariable3541;
Object localvariable3542;
Object array3000;
Object symbol4277;
Object send23065;
Object assign2821;
Object string2518;
Object constant5340;
Object send23066;
Object assign2822;
Object send23067;
Object assign2823;
Object send23068;
Object send23069;
Object smallint2425;
Object constant5341;
Object send23070;
Object send23071;
Object send23072;
Object send23073;
Object send23074;
Object send23075;
Object smallint2426;
Object constant5342;
Object send23076;
Object smallint2427;
Object constant5343;
Object send23077;
Object assign2824;
Object send23078;
Object send23079;
Object send23080;
Object send23081;
Object send23082;
Object string2519;
Object constant5344;
Object send23083;
Object smallint2428;
Object constant5345;
Object send23084;
Object assign2825;
Object send23085;
Object send23086;
Object send23087;
Object send23088;
Object send23089;
Object string2520;
Object constant5346;
Object send23090;
Object string2521;
Object constant5347;
Object send23091;
Object assign2826;
Object send23092;
Object assign2827;
Object send23093;
Object send23094;
Object smallint2429;
Object constant5348;
Object send23095;
Object send23096;
Object send23097;
Object send23098;
Object send23099;
Object send23100;
Object smallint2430;
Object constant5349;
Object send23101;
Object send23102;
Object assign2828;
Object send23103;
Object send23104;
Object send23105;
Object send23106;
Object send23107;
Object string2522;
Object constant5350;
Object send23108;
Object smallint2431;
Object constant5351;
Object send23109;
Object assign2829;
Object send23110;
Object send23111;
Object send23112;
Object send23113;
Object send23114;
Object string2523;
Object constant5352;
Object send23115;
Object method4667;
Object symbol3984;
Object methodclosure4655;
Object localvariable3543;
Object localvariable3544;
Object array3001;
Object symbol4278;
Object send23116;
Object assign2830;
Object string2524;
Object constant5353;
Object send23117;
Object assign2831;
Object send23118;
Object send23119;
Object string2525;
Object constant5354;
Object send23120;
Object send23121;
Object send23122;
Object smallint2432;
Object constant5355;
Object send23123;
Object string2526;
Object constant5356;
Object send23124;
Object assign2832;
Object send23125;
Object send23126;
Object string2527;
Object constant5357;
Object send23127;
Object send23128;
Object send23129;
Object smallint2433;
Object constant5358;
Object send23130;
Object string2528;
Object constant5359;
Object send23131;
Object assign2833;
Object send23132;
Object send23133;
Object send23134;
Object send23135;
Object send23136;
Object send23137;
Object smallint2434;
Object constant5360;
Object send23138;
Object method4668;
Object symbol3976;
Object methodclosure4656;
Object localvariable3545;
Object localvariable3546;
Object array3002;
Object send23139;
Object assign2834;
Object string2529;
Object constant5361;
Object send23140;
Object send23141;
Object send23142;
Object assign2835;
Object send23143;
Object send23144;
Object send23145;
Object send23146;
Object send23147;
Object send23148;
Object send23149;
Object send23150;
Object send23151;
Object send23152;
Object send23153;
Object send23154;
Object send23155;
Object send23156;
Object send23157;
Object send23158;
Object string2530;
Object constant5362;
Object send23159;
Object send23160;
Object send23161;
Object send23162;
Object send23163;
Object string2531;
Object constant5363;
Object send23164;
Object send23165;
Object send23166;
Object send23167;
Object string2532;
Object constant5364;
Object send23168;
Object send23169;
Object send23170;
Object send23171;
Object send23172;
Object send23173;
Object send23174;
Object send23175;
Object string2533;
Object constant5365;
Object send23176;
Object method4669;
Object symbol3938;
Object methodclosure4657;
Object localvariable3547;
Object localvariable3548;
Object localvariable3549;
Object array3003;
Object symbol4279;
Object send23177;
Object assign2836;
Object string2534;
Object constant5366;
Object send23178;
Object assign2837;
Object send23179;
Object assign2838;
Object send23180;
Object send23181;
Object send23182;
Object send23183;
Object send23184;
Object send23185;
Object send23186;
Object send23187;
Object send23188;
Object send23189;
Object send23190;
Object string2535;
Object constant5367;
Object send23191;
Object send23192;
Object assign2839;
Object send23193;
Object send23194;
Object send23195;
Object send23196;
Object send23197;
Object send23198;
Object send23199;
Object send23200;
Object send23201;
Object send23202;
Object send23203;
Object string2536;
Object constant5368;
Object send23204;
Object send23205;
Object send23206;
Object send23207;
Object send23208;
Object send23209;
Object send23210;
Object send23211;
Object string2537;
Object constant5369;
Object send23212;
Object send23213;
Object send23214;
Object smallint2435;
Object constant5370;
Object send23215;
Object string2538;
Object constant5371;
Object send23216;
Object assign2840;
Object send23217;
Object assign2841;
Object send23218;
Object send23219;
Object send23220;
Object send23221;
Object send23222;
Object string2539;
Object constant5372;
Object send23223;
Object send23224;
Object send23225;
Object smallint2436;
Object constant5373;
Object send23226;
Object method4670;
Object symbol3966;
Object methodclosure4658;
Object localvariable3550;
Object localvariable3551;
Object localvariable3552;
Object array3004;
Object symbol4280;
Object send23227;
Object assign2842;
Object string2540;
Object constant5374;
Object send23228;
Object assign2843;
Object send23229;
Object assign2844;
Object send23230;
Object send23231;
Object method4671;
Object symbol4060;
Object methodclosure4659;
Object localvariable3553;
Object array3005;
Object assign2845;
Object method4672;
Object symbol4059;
Object methodclosure4660;
Object localvariable3554;
Object array3006;
Object send23232;
Object send23233;
Object method4673;
Object methodclosure4661;
Object method4674;
Object methodclosure4662;
Object localvariable3555;
Object array3007;
Object assign2846;
Object method4675;
Object methodclosure4663;
Object localvariable3556;
Object array3008;
Object send23234;
Object send23235;
Object send23236;
Object send23237;
Object send23238;
Object send23239;
Object block1425;
Object send23240;
Object method4676;
Object methodclosure4664;
Object classreference1350;
Object send23241;
Object send23242;
Object send23243;
Object method4677;
Object symbol4062;
Object methodclosure4665;
Object classreference1351;
Object send23244;
Object send23245;
Object send23246;
Object string2541;
Object constant5375;
Object send23247;
Object send23248;
Object send23249;
Object smallint2437;
Object constant5376;
Object send23250;
Object string2542;
Object constant5377;
Object send23251;
Object assign2847;
Object send23252;
Object assign2848;
Object send23253;
Object send23254;
Object send23255;
Object send23256;
Object send23257;
Object string2543;
Object constant5378;
Object send23258;
Object send23259;
Object send23260;
Object smallint2438;
Object constant5379;
Object send23261;
Object string2544;
Object constant5380;
Object send23262;
Object assign2849;
Object send23263;
Object assign2850;
Object send23264;
Object send23265;
Object send23266;
Object send23267;
Object send23268;
Object string2545;
Object constant5381;
Object send23269;
Object send23270;
Object send23271;
Object smallint2439;
Object constant5382;
Object send23272;
Object method4678;
Object symbol3978;
Object methodclosure4666;
Object localvariable3557;
Object localvariable3558;
Object localvariable3559;
Object array3009;
Object symbol4281;
Object send23273;
Object assign2851;
Object string2546;
Object constant5383;
Object send23274;
Object assign2852;
Object send23275;
Object assign2853;
Object send23276;
Object send23277;
Object method4679;
Object symbol4088;
Object methodclosure4667;
Object send23278;
Object send23279;
Object method4680;
Object methodclosure4668;
Object symbol4038;
Object send23280;
Object send23281;
Object method4681;
Object methodclosure4669;
Object localvariable3560;
Object array3010;
Object assign2854;
Object method4682;
Object symbol4087;
Object methodclosure4670;
Object classreference1352;
Object send23282;
Object send23283;
Object send23284;
Object send23285;
Object string2547;
Object constant5384;
Object send23286;
Object send23287;
Object send23288;
Object send23289;
Object send23290;
Object send23291;
Object send23292;
Object send23293;
Object send23294;
Object string2548;
Object constant5385;
Object send23295;
Object send23296;
Object send23297;
Object smallint2440;
Object constant5386;
Object send23298;
Object string2549;
Object constant5387;
Object send23299;
Object assign2855;
Object send23300;
Object send23301;
Object send23302;
Object send23303;
Object send23304;
Object send23305;
Object smallint2441;
Object constant5388;
Object send23306;
Object string2550;
Object constant5389;
Object send23307;
Object assign2856;
Object send23308;
Object assign2857;
Object send23309;
Object send23310;
Object send23311;
Object send23312;
Object send23313;
Object send23314;
Object string2551;
Object constant5390;
Object send23315;
Object send23316;
Object send23317;
Object send23318;
Object send23319;
Object string2552;
Object constant5391;
Object send23320;
Object send23321;
Object send23322;
Object send23323;
Object send23324;
Object send23325;
Object send23326;
Object smallint2442;
Object constant5392;
Object send23327;
Object method4683;
Object symbol3931;
Object methodclosure4671;
Object localvariable3561;
Object localvariable3562;
Object array3011;
Object send23328;
Object assign2858;
Object string2553;
Object constant5393;
Object send23329;
Object assign2859;
Object send23330;
Object send23331;
Object send23332;
Object send23333;
Object send23334;
Object send23335;
Object smallint2443;
Object constant5394;
Object send23336;
Object string2554;
Object constant5395;
Object send23337;
Object assign2860;
Object send23338;
Object send23339;
Object string2555;
Object constant5396;
Object send23340;
Object send23341;
Object send23342;
Object smallint2444;
Object constant5397;
Object send23343;
Object string2556;
Object constant5398;
Object send23344;
Object assign2861;
Object send23345;
Object send23346;
Object string2557;
Object constant5399;
Object send23347;
Object send23348;
Object send23349;
Object smallint2445;
Object constant5400;
Object send23350;
Object string2558;
Object constant5401;
Object send23351;
Object assign2862;
Object send23352;
Object send23353;
Object string2559;
Object constant5402;
Object send23354;
Object send23355;
Object send23356;
Object smallint2446;
Object constant5403;
Object send23357;
Object method4684;
Object symbol3948;
Object methodclosure4672;
Object localvariable3563;
Object localvariable3564;
Object localvariable3565;
Object array3012;
Object symbol4282;
Object send23358;
Object assign2863;
Object string2560;
Object constant5404;
Object send23359;
Object assign2864;
Object send23360;
Object assign2865;
Object send23361;
Object send23362;
Object method4685;
Object methodclosure4673;
Object localvariable3566;
Object array3013;
Object assign2866;
Object method4686;
Object methodclosure4674;
Object localvariable3567;
Object array3014;
Object assign2867;
Object method4687;
Object methodclosure4675;
Object method4688;
Object methodclosure4676;
Object localvariable3568;
Object array3015;
Object assign2868;
Object method4689;
Object methodclosure4677;
Object super371;
Object send23363;
Object send23364;
Object send23365;
Object send23366;
Object send23367;
Object send23368;
Object method4690;
Object methodclosure4678;
Object send23369;
Object localvariable3569;
Object array3016;
Object send23370;
Object send23371;
Object block1426;
Object send23372;
Object block1427;
Object send23373;
Object method4691;
Object methodclosure4679;
Object method4692;
Object methodclosure4680;
Object classreference1353;
Object send23374;
Object send23375;
Object send23376;
Object send23377;
Object smallint2447;
Object constant5405;
Object send23378;
Object send23379;
Object send23380;
Object send23381;
Object smallint2448;
Object constant5406;
Object send23382;
Object send23383;
Object send23384;
Object send23385;
Object smallint2449;
Object constant5407;
Object send23386;
Object string2561;
Object constant5408;
Object send23387;
Object assign2869;
Object send23388;
Object assign2870;
Object send23389;
Object send23390;
Object send23391;
Object send23392;
Object send23393;
Object send23394;
Object smallint2450;
Object constant5409;
Object send23395;
Object send23396;
Object send23397;
Object send23398;
Object smallint2451;
Object constant5410;
Object send23399;
Object send23400;
Object send23401;
Object send23402;
Object smallint2452;
Object constant5411;
Object send23403;
Object string2562;
Object constant5412;
Object send23404;
Object assign2871;
Object send23405;
Object assign2872;
Object send23406;
Object send23407;
Object send23408;
Object send23409;
Object send23410;
Object send23411;
Object smallint2453;
Object constant5413;
Object send23412;
Object send23413;
Object send23414;
Object send23415;
Object smallint2454;
Object constant5414;
Object send23416;
Object send23417;
Object send23418;
Object send23419;
Object smallint2455;
Object constant5415;
Object send23420;
Object string2563;
Object constant5416;
Object send23421;
Object assign2873;
Object send23422;
Object assign2874;
Object send23423;
Object send23424;
Object send23425;
Object send23426;
Object send23427;
Object send23428;
Object smallint2456;
Object constant5417;
Object send23429;
Object send23430;
Object send23431;
Object send23432;
Object smallint2457;
Object constant5418;
Object send23433;
Object send23434;
Object send23435;
Object send23436;
Object smallint2458;
Object constant5419;
Object send23437;
Object string2564;
Object constant5420;
Object send23438;
Object assign2875;
Object send23439;
Object assign2876;
Object send23440;
Object send23441;
Object send23442;
Object send23443;
Object send23444;
Object send23445;
Object smallint2459;
Object constant5421;
Object send23446;
Object send23447;
Object send23448;
Object send23449;
Object smallint2460;
Object constant5422;
Object send23450;
Object send23451;
Object send23452;
Object send23453;
Object smallint2461;
Object constant5423;
Object send23454;
Object string2565;
Object constant5424;
Object send23455;
Object assign2877;
Object send23456;
Object assign2878;
Object send23457;
Object send23458;
Object send23459;
Object send23460;
Object send23461;
Object send23462;
Object smallint2462;
Object constant5425;
Object send23463;
Object send23464;
Object send23465;
Object send23466;
Object smallint2463;
Object constant5426;
Object send23467;
Object send23468;
Object send23469;
Object send23470;
Object smallint2464;
Object constant5427;
Object send23471;
Object string2566;
Object constant5428;
Object send23472;
Object assign2879;
Object send23473;
Object assign2880;
Object send23474;
Object send23475;
Object send23476;
Object send23477;
Object send23478;
Object send23479;
Object smallint2465;
Object constant5429;
Object send23480;
Object send23481;
Object send23482;
Object send23483;
Object smallint2466;
Object constant5430;
Object send23484;
Object send23485;
Object send23486;
Object send23487;
Object smallint2467;
Object constant5431;
Object send23488;
Object method4693;
Object symbol3968;
Object methodclosure4681;
Object localvariable3570;
Object localvariable3571;
Object array3017;
Object symbol4283;
Object send23489;
Object assign2881;
Object string2567;
Object constant5432;
Object send23490;
Object assign2882;
Object send23491;
Object send23492;
Object string2568;
Object constant5433;
Object send23493;
Object send23494;
Object send23495;
Object smallint2468;
Object constant5434;
Object send23496;
Object string2569;
Object constant5435;
Object send23497;
Object assign2883;
Object send23498;
Object send23499;
Object send23500;
Object send23501;
Object send23502;
Object send23503;
Object smallint2469;
Object constant5436;
Object send23504;
Object method4694;
Object symbol3941;
Object methodclosure4682;
Object localvariable3572;
Object localvariable3573;
Object localvariable3574;
Object array3018;
Object symbol4284;
Object send23505;
Object assign2884;
Object string2570;
Object constant5437;
Object send23506;
Object assign2885;
Object send23507;
Object assign2886;
Object send23508;
Object send23509;
Object method4695;
Object methodclosure4683;
Object localvariable3575;
Object array3019;
Object send23510;
Object assign2887;
Object method4696;
Object symbol4058;
Object methodclosure4684;
Object method4697;
Object methodclosure4685;
Object method4698;
Object symbol4057;
Object methodclosure4686;
Object send23511;
Object send23512;
Object method4699;
Object methodclosure4687;
Object localvariable3576;
Object array3020;
Object string2571;
Object constant5438;
Object send23513;
Object send23514;
Object send23515;
Object method4700;
Object methodclosure4688;
Object send23516;
Object method4701;
Object methodclosure4689;
Object localvariable3577;
Object array3021;
Object symbol4285;
Object send23517;
Object send23518;
Object send23519;
Object send23520;
Object send23521;
Object block1428;
Object send23522;
Object method4702;
Object methodclosure4690;
Object classreference1354;
Object symbol4208;
Object send23523;
Object send23524;
Object method4703;
Object methodclosure4691;
Object send23525;
Object send23526;
Object method4704;
Object methodclosure4692;
Object localvariable3578;
Object array3022;
Object send23527;
Object method4705;
Object methodclosure4693;
Object send23528;
Object send23529;
Object method4706;
Object methodclosure4694;
Object localvariable3579;
Object array3023;
Object assign2888;
Object method4707;
Object methodclosure4695;
Object classreference1355;
Object send23530;
Object send23531;
Object send23532;
Object string2572;
Object constant5439;
Object send23533;
Object send23534;
Object send23535;
Object smallint2470;
Object constant5440;
Object send23536;
Object method4708;
Object symbol3933;
Object methodclosure4696;
Object localvariable3580;
Object localvariable3581;
Object localvariable3582;
Object array3024;
Object symbol4286;
Object send23537;
Object assign2889;
Object string2573;
Object constant5441;
Object send23538;
Object assign2890;
Object send23539;
Object assign2891;
Object send23540;
Object send23541;
Object send23542;
Object send23543;
Object send23544;
Object string2574;
Object constant5442;
Object send23545;
Object send23546;
Object send23547;
Object smallint2471;
Object constant5443;
Object send23548;
Object string2575;
Object constant5444;
Object send23549;
Object assign2892;
Object send23550;
Object assign2893;
Object send23551;
Object send23552;
Object send23553;
Object send23554;
Object send23555;
Object string2576;
Object constant5445;
Object send23556;
Object send23557;
Object send23558;
Object string2577;
Object constant5446;
Object send23559;
Object send23560;
Object send23561;
Object smallint2472;
Object constant5447;
Object send23562;
Object method4709;
Object symbol3961;
Object methodclosure4697;
Object localvariable3583;
Object localvariable3584;
Object localvariable3585;
Object array3025;
Object send23563;
Object assign2894;
Object string2578;
Object constant5448;
Object send23564;
Object assign2895;
Object send23565;
Object assign2896;
Object send23566;
Object send23567;
Object send23568;
Object send23569;
Object send23570;
Object send23571;
Object classreference1356;
Object send23572;
Object string2579;
Object constant5449;
Object send23573;
Object assign2897;
Object send23574;
Object assign2898;
Object send23575;
Object send23576;
Object send23577;
Object send23578;
Object send23579;
Object send23580;
Object send23581;
Object string2580;
Object constant5450;
Object send23582;
Object assign2899;
Object send23583;
Object assign2900;
Object send23584;
Object send23585;
Object send23586;
Object send23587;
Object send23588;
Object send23589;
Object send23590;
Object send23591;
Object send23592;
Object send23593;
Object smallint2473;
Object constant5451;
Object send23594;
Object method4710;
Object symbol3953;
Object methodclosure4698;
Object localvariable3586;
Object localvariable3587;
Object localvariable3588;
Object array3026;
Object send23595;
Object assign2901;
Object string2581;
Object constant5452;
Object send23596;
Object assign2902;
Object send23597;
Object assign2903;
Object send23598;
Object send23599;
Object send23600;
Object send23601;
Object send23602;
Object send23603;
Object string2582;
Object constant5453;
Object send23604;
Object send23605;
Object send23606;
Object send23607;
Object send23608;
Object send23609;
Object send23610;
Object send23611;
Object send23612;
Object string2583;
Object constant5454;
Object send23613;
Object send23614;
Object send23615;
Object smallint2474;
Object constant5455;
Object send23616;
Object string2584;
Object constant5456;
Object send23617;
Object assign2904;
Object send23618;
Object send23619;
Object send23620;
Object send23621;
Object send23622;
Object send23623;
Object smallint2475;
Object constant5457;
Object send23624;
Object string2585;
Object constant5458;
Object send23625;
Object assign2905;
Object send23626;
Object assign2906;
Object send23627;
Object send23628;
Object send23629;
Object send23630;
Object send23631;
Object send23632;
Object string2586;
Object constant5459;
Object send23633;
Object send23634;
Object send23635;
Object send23636;
Object send23637;
Object send23638;
Object send23639;
Object send23640;
Object send23641;
Object string2587;
Object constant5460;
Object send23642;
Object send23643;
Object send23644;
Object smallint2476;
Object constant5461;
Object send23645;
Object method4711;
Object symbol3981;
Object methodclosure4699;
Object localvariable3589;
Object localvariable3590;
Object localvariable3591;
Object array3027;
Object send23646;
Object assign2907;
Object string2588;
Object constant5462;
Object assign2908;
Object send23647;
Object assign2909;
Object send23648;
Object send23649;
Object send23650;
Object send23651;
Object send23652;
Object send23653;
Object send23654;
Object send23655;
Object send23656;
Object send23657;
Object send23658;
Object send23659;
Object send23660;
Object send23661;
Object smallint2477;
Object constant5463;
Object send23662;
Object send23663;
Object send23664;
Object send23665;
Object smallint2478;
Object constant5464;
Object send23666;
Object send23667;
Object send23668;
Object send23669;
Object smallint2479;
Object constant5465;
Object send23670;
Object method4712;
Object symbol3973;
Object methodclosure4700;
Object localvariable3592;
Object localvariable3593;
Object localvariable3594;
Object array3028;
Object send23671;
Object assign2910;
Object string2589;
Object constant5466;
Object send23672;
Object assign2911;
Object send23673;
Object assign2912;
Object send23674;
Object send23675;
Object send23676;
Object send23677;
Object send23678;
Object send23679;
Object send23680;
Object send23681;
Object send23682;
Object send23683;
Object string2590;
Object constant5467;
Object send23684;
Object send23685;
Object assign2913;
Object send23686;
Object send23687;
Object send23688;
Object send23689;
Object send23690;
Object send23691;
Object send23692;
Object send23693;
Object send23694;
Object send23695;
Object string2591;
Object constant5468;
Object send23696;
Object send23697;
Object assign2914;
Object send23698;
Object send23699;
Object send23700;
Object send23701;
Object send23702;
Object send23703;
Object send23704;
Object send23705;
Object send23706;
Object send23707;
Object string2592;
Object constant5469;
Object send23708;
Object send23709;
Object send23710;
Object send23711;
Object send23712;
Object method4713;
Object symbol3923;
Object methodclosure4701;
Object localvariable3595;
Object localvariable3596;
Object localvariable3597;
Object array3029;
Object symbol4287;
Object send23713;
Object assign2915;
Object string2593;
Object constant5470;
Object send23714;
Object assign2916;
Object send23715;
Object send23716;
Object send23717;
Object send23718;
Object send23719;
Object send23720;
Object smallint2480;
Object constant5471;
Object send23721;
Object string2594;
Object constant5472;
Object send23722;
Object assign2917;
Object send23723;
Object assign2918;
Object send23724;
Object send23725;
Object localvariable3598;
Object array3030;
Object send23726;
Object send23727;
Object symbol4090;
Object send23728;
Object send23729;
Object send23730;
Object block1429;
Object send23731;
Object method4714;
Object methodclosure4702;
Object method4715;
Object methodclosure4703;
Object localvariable3599;
Object array3031;
Object symbol4288;
Object send23732;
Object assign2919;
Object method4716;
Object symbol4089;
Object methodclosure4704;
Object classreference1357;
Object send23733;
Object send23734;
Object send23735;
Object method4717;
Object symbol4092;
Object methodclosure4705;
Object method4718;
Object methodclosure4706;
Object localvariable3600;
Object array3032;
Object assign2920;
Object method4719;
Object methodclosure4707;
Object classreference1358;
Object send23736;
Object send23737;
Object send23738;
Object character120;
Object constant5473;
Object send23739;
Object send23740;
Object send23741;
Object smallint2481;
Object constant5474;
Object send23742;
Object method4720;
Object symbol3943;
Object methodclosure4708;
Object localvariable3601;
Object localvariable3602;
Object localvariable3603;
Object localvariable3604;
Object array3033;
Object symbol4289;
Object send23743;
Object assign2921;
Object string2595;
Object constant5475;
Object send23744;
Object assign2922;
Object send23745;
Object assign2923;
Object send23746;
Object send23747;
Object method4721;
Object methodclosure4709;
Object localvariable3605;
Object array3034;
Object assign2924;
Object method4722;
Object symbol4104;
Object methodclosure4710;
Object method4723;
Object symbol4105;
Object methodclosure4711;
Object localvariable3606;
Object array3035;
Object assign2925;
Object method4724;
Object methodclosure4712;
Object classreference1359;
Object send23748;
Object send23749;
Object send23750;
Object send23751;
Object send23752;
Object send23753;
Object send23754;
Object send23755;
Object smallint2482;
Object constant5476;
Object send23756;
Object send23757;
Object smallint2483;
Object constant5477;
Object send23758;
Object assign2926;
Object send23759;
Object send23760;
Object send23761;
Object send23762;
Object smallint2484;
Object constant5478;
Object send23763;
Object assign2927;
Object send23764;
Object send23765;
Object send23766;
Object send23767;
Object smallint2485;
Object constant5479;
Object send23768;
Object assign2928;
Object send23769;
Object send23770;
Object send23771;
Object send23772;
Object smallint2486;
Object constant5480;
Object send23773;
Object assign2929;
Object send23774;
Object send23775;
Object send23776;
Object method4725;
Object symbol3963;
Object methodclosure4713;
Object localvariable3607;
Object localvariable3608;
Object localvariable3609;
Object array3036;
Object send23777;
Object assign2930;
Object string2596;
Object constant5481;
Object send23778;
Object assign2931;
Object send23779;
Object assign2932;
Object send23780;
Object send23781;
Object send23782;
Object send23783;
Object send23784;
Object send23785;
Object send23786;
Object send23787;
Object send23788;
Object send23789;
Object string2597;
Object constant5482;
Object send23790;
Object send23791;
Object assign2933;
Object send23792;
Object send23793;
Object send23794;
Object send23795;
Object send23796;
Object send23797;
Object send23798;
Object send23799;
Object send23800;
Object send23801;
Object string2598;
Object constant5483;
Object send23802;
Object send23803;
Object assign2934;
Object send23804;
Object send23805;
Object send23806;
Object send23807;
Object send23808;
Object send23809;
Object send23810;
Object send23811;
Object send23812;
Object send23813;
Object string2599;
Object constant5484;
Object send23814;
Object send23815;
Object send23816;
Object send23817;
Object send23818;
Object method4726;
Object symbol3955;
Object methodclosure4714;
Object localvariable3610;
Object localvariable3611;
Object localvariable3612;
Object localvariable3613;
Object array3037;
Object send23819;
Object assign2935;
Object string2600;
Object constant5485;
Object send23820;
Object assign2936;
Object send23821;
Object assign2937;
Object send23822;
Object send23823;
Object send23824;
Object send23825;
Object send23826;
Object assign2938;
Object string2601;
Object constant5486;
Object send23827;
Object assign2939;
Object send23828;
Object assign2940;
Object send23829;
Object send23830;
Object send23831;
Object send23832;
Object send23833;
Object send23834;
Object send23835;
Object send23836;
Object method4727;
Object symbol3983;
Object methodclosure4715;
Object localvariable3614;
Object localvariable3615;
Object localvariable3616;
Object array3038;
Object send23837;
Object assign2941;
Object string2602;
Object constant5487;
Object assign2942;
Object send23838;
Object assign2943;
Object send23839;
Object send23840;
Object send23841;
Object send23842;
Object send23843;
Object send23844;
Object send23845;
Object send23846;
Object send23847;
Object send23848;
Object string2603;
Object constant5488;
Object send23849;
Object send23850;
Object send23851;
Object send23852;
Object send23853;
Object send23854;
Object send23855;
Object method4728;
Object symbol3975;
Object methodclosure4716;
Object localvariable3617;
Object localvariable3618;
Object localvariable3619;
Object array3039;
Object symbol4290;
Object send23856;
Object assign2944;
Object string2604;
Object constant5489;
Object send23857;
Object assign2945;
Object send23858;
Object assign2946;
Object send23859;
Object send23860;
Object send23861;
Object send23862;
Object send23863;
Object send23864;
Object string2605;
Object constant5490;
Object send23865;
Object send23866;
Object send23867;
Object smallint2487;
Object constant5491;
Object send23868;
Object string2606;
Object constant5492;
Object send23869;
Object assign2947;
Object send23870;
Object send23871;
Object send23872;
Object send23873;
Object send23874;
Object send23875;
Object smallint2488;
Object constant5493;
Object send23876;
Object method4729;
Object symbol3925;
Object methodclosure4717;
Object localvariable3620;
Object localvariable3621;
Object localvariable3622;
Object array3040;
Object send23877;
Object assign2948;
Object string2607;
Object constant5494;
Object assign2949;
Object send23878;
Object assign2950;
Object send23879;
Object send23880;
Object send23881;
Object send23882;
Object send23883;
Object send23884;
Object send23885;
Object send23886;
Object send23887;
Object send23888;
Object string2608;
Object constant5495;
Object send23889;
Object method4730;
Object symbol3945;
Object methodclosure4718;
Object localvariable3623;
Object localvariable3624;
Object localvariable3625;
Object array3041;
Object symbol4291;
Object send23890;
Object assign2951;
Object string2609;
Object constant5496;
Object send23891;
Object assign2952;
Object send23892;
Object assign2953;
Object send23893;
Object send23894;
Object send23895;
Object send23896;
Object send23897;
Object send23898;
Object string2610;
Object constant5497;
Object send23899;
Object send23900;
Object send23901;
Object send23902;
Object send23903;
Object send23904;
Object send23905;
Object send23906;
Object string2611;
Object constant5498;
Object send23907;
Object send23908;
Object send23909;
Object send23910;
Object send23911;
Object send23912;
Object send23913;
Object send23914;
Object string2612;
Object constant5499;
Object send23915;
Object send23916;
Object send23917;
Object smallint2489;
Object constant5500;
Object send23918;
Object string2613;
Object constant5501;
Object send23919;
Object assign2954;
Object send23920;
Object assign2955;
Object send23921;
Object send23922;
Object send23923;
Object send23924;
Object send23925;
Object send23926;
Object string2614;
Object constant5502;
Object send23927;
Object send23928;
Object send23929;
Object send23930;
Object send23931;
Object send23932;
Object send23933;
Object send23934;
Object string2615;
Object constant5503;
Object send23935;
Object send23936;
Object assign2956;
Object send23937;
Object send23938;
Object send23939;
Object send23940;
Object send23941;
Object send23942;
Object string2616;
Object constant5504;
Object send23943;
Object send23944;
Object send23945;
Object send23946;
Object send23947;
Object send23948;
Object send23949;
Object send23950;
Object string2617;
Object constant5505;
Object send23951;
Object send23952;
Object send23953;
Object send23954;
Object send23955;
Object send23956;
Object send23957;
Object send23958;
Object string2618;
Object constant5506;
Object send23959;
Object send23960;
Object send23961;
Object smallint2490;
Object constant5507;
Object send23962;
Object method4731;
Object symbol3937;
Object methodclosure4719;
Object string2619;
Object constant5508;
Object send23963;
Object string2620;
Object constant5509;
Object send23964;
Object send23965;
Object method4732;
Object symbol4126;
Object methodclosure4720;
Object symbol4292;
Object string2621;
Object constant5510;
Object send23966;
Object localvariable3626;
Object array3042;
Object symbol4111;
Object send23967;
Object block1430;
Object send23968;
Object method4733;
Object symbol4138;
Object methodclosure4721;
Object string2622;
Object constant5511;
Object symbol4293;
Object send23969;
Object method4734;
Object symbol4166;
Object methodclosure4722;
Object string2623;
Object constant5512;
Object string2624;
Object constant5513;
Object send23970;
Object send23971;
Object symbol4294;
Object send23972;
Object symbol4295;
Object send23973;
Object send23974;
Object send23975;
Object string2625;
Object constant5514;
Object send23976;
Object send23977;
Object send23978;
Object send23979;
Object method4735;
Object symbol4178;
Object methodclosure4723;
Object send23980;
Object string2626;
Object constant5515;
Object send23981;
Object send23982;
Object send23983;
Object method4736;
Object symbol4108;
Object methodclosure4724;
Object string2627;
Object constant5516;
Object string2628;
Object constant5517;
Object send23984;
Object send23985;
Object send23986;
Object send23987;
Object send23988;
Object send23989;
Object send23990;
Object string2629;
Object constant5518;
Object send23991;
Object send23992;
Object send23993;
Object localvariable3627;
Object array3043;
Object localvariable3628;
Object array3044;
Object assign2957;
Object method4737;
Object symbol4219;
Object methodclosure4725;
Object variable188;
Object array3045;
Object symbol4296;
Object send23994;
Object localvariable3629;
Object array3046;
Object send23995;
Object symbol4297;
Object send23996;
Object block1431;
Object send23997;
Object block1432;
Object send23998;
Object block1433;
Object send23999;
Object block1434;
Object send24000;
Object method4738;
Object methodclosure4726;
Object classreference1360;
Object send24001;
Object localvariable3630;
Object array3047;
Object smallint2491;
Object constant5519;
Object send24002;
Object send24003;
Object send24004;
Object block1435;
Object send24005;
Object send24006;
Object send24007;
Object block1436;
Object send24008;
Object method4739;
Object symbol4131;
Object methodclosure4727;
Object string2630;
Object constant5520;
Object symbol4298;
Object send24009;
Object send24010;
Object localvariable3631;
Object array3048;
Object localvariable3632;
Object array3049;
Object string2631;
Object constant5521;
Object localvariable3633;
Object localvariable3634;
Object array3050;
Object send24011;
Object block1437;
Object send24012;
Object send24013;
Object string2632;
Object constant5522;
Object send24014;
Object block1438;
Object send24015;
Object send24016;
Object block1439;
Object send24017;
Object method4740;
Object symbol4148;
Object methodclosure4728;
Object string2633;
Object constant5523;
Object string2634;
Object constant5524;
Object send24018;
Object send24019;
Object symbol4299;
Object send24020;
Object send24021;
Object localvariable3635;
Object array3051;
Object send24022;
Object send24023;
Object send24024;
Object block1440;
Object send24025;
Object method4741;
Object symbol4113;
Object methodclosure4729;
Object send24026;
Object string2635;
Object constant5525;
Object send24027;
Object send24028;
Object send24029;
Object send24030;
Object method4742;
Object symbol4141;
Object methodclosure4730;
Object string2636;
Object constant5526;
Object send24031;
Object send24032;
Object send24033;
Object send24034;
Object string2637;
Object constant5527;
Object send24035;
Object send24036;
Object send24037;
Object method4743;
Object symbol4153;
Object methodclosure4731;
Object string2638;
Object constant5528;
Object symbol4300;
Object send24038;
Object send24039;
Object send24040;
Object symbol4301;
Object send24041;
Object send24042;
Object send24043;
Object method4744;
Object symbol4123;
Object methodclosure4732;
Object string2639;
Object constant5529;
Object send24044;
Object send24045;
Object send24046;
Object send24047;
Object localvariable3636;
Object array3052;
Object localvariable3637;
Object array3053;
Object constant5530;
Object send24048;
Object send24049;
Object symbol4075;
Object localvariable3638;
Object array3054;
Object constant5531;
Object send24050;
Object send24051;
Object symbol4161;
Object constant5532;
Object send24052;
Object string2640;
Object constant5533;
Object send24053;
Object string2641;
Object constant5534;
Object send24054;
Object send24055;
Object send24056;
Object block1441;
Object send24057;
Object send24058;
Object send24059;
Object symbol4302;
Object constant5535;
Object send24060;
Object send24061;
Object block1442;
Object send24062;
Object send24063;
Object block1443;
Object send24064;
Object method4745;
Object symbol4135;
Object methodclosure4733;
Object string2642;
Object constant5536;
Object send24065;
Object send24066;
Object send24067;
Object send24068;
Object send24069;
Object send24070;
Object send24071;
Object localvariable3639;
Object array3055;
Object smallint2492;
Object constant5537;
Object send24072;
Object localvariable3640;
Object array3056;
Object send24073;
Object send24074;
Object block1444;
Object send24075;
Object send24076;
Object block1445;
Object send24077;
Object method4746;
Object symbol4163;
Object methodclosure4734;
Object string2643;
Object constant5538;
Object send24078;
Object localvariable3641;
Object array3057;
Object send24079;
Object send24080;
Object block1446;
Object send24081;
Object method4747;
Object symbol4117;
Object methodclosure4735;
Object string2644;
Object constant5539;
Object send24082;
Object symbol4303;
Object send24083;
Object send24084;
Object localvariable3642;
Object array3058;
Object smallint2493;
Object constant5540;
Object send24085;
Object send24086;
Object send24087;
Object block1447;
Object send24088;
Object method4748;
Object symbol4145;
Object methodclosure4736;
Object string2645;
Object constant5541;
Object send24089;
Object send24090;
Object send24091;
Object localvariable3643;
Object array3059;
Object localvariable3644;
Object array3060;
Object send24092;
Object send24093;
Object send24094;
Object smallint2494;
Object constant5542;
Object send24095;
Object send24096;
Object block1448;
Object send24097;
Object send24098;
Object block1449;
Object send24099;
Object method4749;
Object symbol4173;
Object methodclosure4737;
Object send24100;
Object send24101;
Object send24102;
Object send24103;
Object method4750;
Object symbol4157;
Object methodclosure4738;
Object string2646;
Object constant5543;
Object send24104;
Object localvariable3645;
Object array3061;
Object send24105;
Object send24106;
Object block1450;
Object send24107;
Object method4751;
Object symbol4110;
Object methodclosure4739;
Object send24108;
Object send24109;
Object send24110;
Object method4752;
Object symbol4127;
Object methodclosure4740;
Object localvariable3646;
Object localvariable3647;
Object array3062;
Object string2647;
Object constant5544;
Object send24111;
Object send24112;
Object assign2958;
Object string2648;
Object constant5545;
Object send24113;
Object send24114;
Object send24115;
Object send24116;
Object send24117;
Object localvariable3648;
Object array3063;
Object symbol4304;
Object send24118;
Object assign2959;
Object string2649;
Object constant5546;
Object localvariable3649;
Object localvariable3650;
Object array3064;
Object send24119;
Object block1451;
Object send24120;
Object assign2960;
Object localvariable3651;
Object localvariable3652;
Object array3065;
Object string2650;
Object constant5547;
Object send24121;
Object string2651;
Object constant5548;
Object localvariable3653;
Object localvariable3654;
Object array3066;
Object send24122;
Object block1452;
Object send24123;
Object send24124;
Object block1453;
Object send24125;
Object block1454;
Object send24126;
Object method4753;
Object symbol4150;
Object methodclosure4741;
Object send24127;
Object symbol4305;
Object send24128;
Object send24129;
Object send24130;
Object send24131;
Object method4754;
Object symbol4139;
Object methodclosure4742;
Object string2652;
Object constant5549;
Object send24132;
Object method4755;
Object symbol4167;
Object methodclosure4743;
Object string2653;
Object constant5550;
Object string2654;
Object constant5551;
Object send24133;
Object send24134;
Object send24135;
Object symbol4306;
Object send24136;
Object send24137;
Object send24138;
Object send24139;
Object send24140;
Object send24141;
Object send24142;
Object send24143;
Object send24144;
Object string2655;
Object constant5552;
Object send24145;
Object send24146;
Object send24147;
Object localvariable3655;
Object array3067;
Object localvariable3656;
Object array3068;
Object send24148;
Object send24149;
Object block1455;
Object send24150;
Object send24151;
Object smallint2495;
Object constant5553;
Object send24152;
Object send24153;
Object block1456;
Object send24154;
Object send24155;
Object smallint2496;
Object constant5554;
Object send24156;
Object send24157;
Object block1457;
Object send24158;
Object send24159;
Object block1458;
Object send24160;
Object method4756;
Object symbol4120;
Object methodclosure4744;
Object symbol4158;
Object send24161;
Object constant5555;
Object string2656;
Object constant5556;
Object send24162;
Object send24163;
Object send24164;
Object send24165;
Object send24166;
Object localvariable3657;
Object array3069;
Object smallint2497;
Object constant5557;
Object send24167;
Object localvariable3658;
Object array3070;
Object send24168;
Object send24169;
Object classreference1361;
Object send24170;
Object smallint2498;
Object constant5558;
Object send24171;
Object send24172;
Object send24173;
Object send24174;
Object block1459;
Object send24175;
Object send24176;
Object send24177;
Object block1460;
Object send24178;
Object send24179;
Object send24180;
Object send24181;
Object method4757;
Object symbol4179;
Object methodclosure4745;
Object symbol4307;
Object send24182;
Object symbol4308;
Object send24183;
Object send24184;
Object method4758;
Object symbol4109;
Object methodclosure4746;
Object string2657;
Object constant5559;
Object symbol4309;
Object send24185;
Object send24186;
Object send24187;
Object send24188;
Object send24189;
Object send24190;
Object method4759;
Object symbol4132;
Object methodclosure4747;
Object send24191;
Object method4760;
Object symbol4160;
Object methodclosure4748;
Object localvariable3659;
Object localvariable3660;
Object array3071;
Object symbol4137;
Object send24192;
Object symbol4164;
Object send24193;
Object symbol4146;
Object send24194;
Object constant5560;
Object string2658;
Object constant5561;
Object symbol4310;
Object send24195;
Object send24196;
Object send24197;
Object send24198;
Object send24199;
Object send24200;
Object send24201;
Object localvariable3661;
Object array3072;
Object send24202;
Object assign2961;
Object smallint2499;
Object constant5562;
Object send24203;
Object assign2962;
Object symbol4311;
Object send24204;
Object localvariable3662;
Object array3073;
Object localvariable3663;
Object array3074;
Object send24205;
Object send24206;
Object block1461;
Object send24207;
Object send24208;
Object assign2963;
Object block1462;
Object send24209;
Object block1463;
Object send24210;
Object send24211;
Object symbol4128;
Object send24212;
Object symbol4176;
Object send24213;
Object symbol4119;
Object send24214;
Object constant5563;
Object send24215;
Object method4761;
Object symbol4149;
Object methodclosure4749;
Object string2659;
Object constant5564;
Object symbol4312;
Object send24216;
Object method4762;
Object symbol4142;
Object methodclosure4750;
Object string2660;
Object constant5565;
Object send24217;
Object send24218;
Object method4763;
Object symbol4170;
Object methodclosure4751;
Object string2661;
Object constant5566;
Object send24219;
Object string2662;
Object constant5567;
Object send24220;
Object send24221;
Object symbol4313;
Object send24222;
Object send24223;
Object localvariable3664;
Object array3075;
Object send24224;
Object send24225;
Object send24226;
Object block1464;
Object send24227;
Object method4764;
Object symbol4154;
Object methodclosure4752;
Object localvariable3665;
Object array3076;
Object localvariable3666;
Object array3077;
Object send24228;
Object string2663;
Object constant5568;
Object send24229;
Object symbol4314;
Object send24230;
Object send24231;
Object send24232;
Object assign2964;
Object symbol4315;
Object send24233;
Object super372;
Object block1465;
Object send24234;
Object symbol4316;
Object send24235;
Object block1466;
Object send24236;
Object method4765;
Object methodclosure4753;
Object send24237;
Object send24238;
Object method4766;
Object symbol4124;
Object methodclosure4754;
Object localvariable3667;
Object array3078;
Object assign2965;
Object method4767;
Object symbol4136;
Object methodclosure4755;
Object constant5569;
Object string2664;
Object constant5570;
Object send24239;
Object block1467;
Object send24240;
Object method4768;
Object methodclosure4756;
Object send24241;
Object send24242;
Object send24243;
Object send24244;
Object send24245;
Object send24246;
Object send24247;
Object method4769;
Object methodclosure4757;
Object string2665;
Object constant5571;
Object string2666;
Object constant5572;
Object send24248;
Object send24249;
Object send24250;
Object send24251;
Object localvariable3668;
Object array3079;
Object send24252;
Object send24253;
Object block1468;
Object send24254;
Object method4770;
Object symbol4106;
Object methodclosure4758;
Object string2667;
Object constant5573;
Object string2668;
Object constant5574;
Object send24255;
Object send24256;
Object send24257;
Object send24258;
Object localvariable3669;
Object array3080;
Object send24259;
Object send24260;
Object block1469;
Object send24261;
Object method4771;
Object symbol4118;
Object methodclosure4759;
Object constant5575;
Object string2669;
Object constant5576;
Object send24262;
Object block1470;
Object send24263;
Object method4772;
Object methodclosure4760;
Object string2670;
Object constant5577;
Object send24264;
Object localvariable3670;
Object array3081;
Object send24265;
Object send24266;
Object block1471;
Object send24267;
Object method4773;
Object symbol4174;
Object methodclosure4761;
Object constant5578;
Object string2671;
Object constant5579;
Object send24268;
Object block1472;
Object send24269;
Object method4774;
Object methodclosure4762;
Object localvariable3671;
Object array3082;
Object variable189;
Object array3083;
Object string2672;
Object constant5580;
Object send24270;
Object send24271;
Object send24272;
Object block1473;
Object send24273;
Object string2673;
Object constant5581;
Object send24274;
Object send24275;
Object send24276;
Object block1474;
Object send24277;
Object send24278;
Object send24279;
Object block1475;
Object send24280;
Object method4775;
Object methodclosure4763;
Object send24281;
Object symbol4317;
Object send24282;
Object symbol4318;
Object send24283;
Object send24284;
Object symbol4319;
Object send24285;
Object send24286;
Object send24287;
Object send24288;
Object send24289;
Object symbol4320;
Object send24290;
Object send24291;
Object method4776;
Object methodclosure4764;
Object string2674;
Object constant5582;
Object send24292;
Object symbol4321;
Object send24293;
Object send24294;
Object localvariable3672;
Object array3084;
Object localvariable3673;
Object array3085;
Object send24295;
Object send24296;
Object send24297;
Object smallint2500;
Object constant5583;
Object send24298;
Object send24299;
Object send24300;
Object block1476;
Object send24301;
Object send24302;
Object block1477;
Object send24303;
Object method4777;
Object symbol4151;
Object methodclosure4765;
Object method4778;
Object symbol4168;
Object methodclosure4766;
Object send24304;
Object send24305;
Object method4779;
Object symbol4121;
Object methodclosure4767;
Object localvariable3674;
Object array3086;
Object variable190;
Object array3087;
Object symbol4322;
Object send24306;
Object send24307;
Object block1478;
Object send24308;
Object send24309;
Object block1479;
Object send24310;
Object method4780;
Object methodclosure4768;
Object super373;
Object localvariable3675;
Object localvariable3676;
Object array3088;
Object symbol4323;
Object symbol4324;
Object send24311;
Object send24312;
Object block1480;
Object send24313;
Object method4781;
Object methodclosure4769;
Object classreference1362;
Object send24314;
Object assign2966;
Object send24315;
Object assign2967;
Object smallint2501;
Object constant5584;
Object assign2968;
Object method4782;
Object methodclosure4770;
Object localvariable3677;
Object array3089;
Object string2675;
Object constant5585;
Object send24316;
Object send24317;
Object send24318;
Object send24319;
Object localvariable3678;
Object array3090;
Object send24320;
Object assign2969;
Object localvariable3679;
Object array3091;
Object send24321;
Object send24322;
Object send24323;
Object send24324;
Object smallint2502;
Object constant5586;
Object send24325;
Object send24326;
Object send24327;
Object block1481;
Object send24328;
Object send24329;
Object send24330;
Object send24331;
Object block1482;
Object send24332;
Object method4783;
Object symbol4115;
Object methodclosure4771;
Object string2676;
Object constant5587;
Object send24333;
Object localvariable3680;
Object array3092;
Object send24334;
Object send24335;
Object block1483;
Object send24336;
Object method4784;
Object symbol4143;
Object methodclosure4772;
Object string2677;
Object constant5588;
Object symbol4325;
Object send24337;
Object send24338;
Object send24339;
Object send24340;
Object send24341;
Object send24342;
Object send24343;
Object send24344;
Object send24345;
Object send24346;
Object send24347;
Object localvariable3681;
Object array3093;
Object localvariable3682;
Object array3094;
Object send24348;
Object send24349;
Object smallint2503;
Object constant5589;
Object send24350;
Object send24351;
Object block1484;
Object send24352;
Object send24353;
Object smallint2504;
Object constant5590;
Object send24354;
Object send24355;
Object smallint2505;
Object constant5591;
Object send24356;
Object send24357;
Object send24358;
Object block1485;
Object send24359;
Object send24360;
Object block1486;
Object send24361;
Object send24362;
Object send24363;
Object method4785;
Object symbol4171;
Object methodclosure4773;
Object string2678;
Object constant5592;
Object string2679;
Object constant5593;
Object send24364;
Object send24365;
Object send24366;
Object send24367;
Object send24368;
Object localvariable3683;
Object array3095;
Object localvariable3684;
Object array3096;
Object send24369;
Object block1487;
Object send24370;
Object block1488;
Object send24371;
Object method4786;
Object symbol4155;
Object methodclosure4774;
Object localvariable3685;
Object array3097;
Object string2680;
Object constant5594;
Object send24372;
Object send24373;
Object send24374;
Object send24375;
Object localvariable3686;
Object array3098;
Object send24376;
Object assign2970;
Object smallint2506;
Object constant5595;
Object send24377;
Object localvariable3687;
Object array3099;
Object localvariable3688;
Object array3100;
Object send24378;
Object send24379;
Object block1489;
Object send24380;
Object send24381;
Object assign2971;
Object block1490;
Object send24382;
Object block1491;
Object send24383;
Object method4787;
Object symbol4125;
Object methodclosure4775;
Object constant5596;
Object string2681;
Object constant5597;
Object send24384;
Object block1492;
Object send24385;
Object method4788;
Object methodclosure4776;
Object string2682;
Object constant5598;
Object send24386;
Object send24387;
Object send24388;
Object symbol4326;
Object send24389;
Object send24390;
Object send24391;
Object send24392;
Object symbol4327;
Object send24393;
Object send24394;
Object method4789;
Object symbol4165;
Object methodclosure4777;
Object string2683;
Object constant5599;
Object send24395;
Object symbol4328;
Object send24396;
Object send24397;
Object send24398;
Object send24399;
Object send24400;
Object send24401;
Object method4790;
Object symbol4177;
Object methodclosure4778;
Object string2684;
Object constant5600;
Object send24402;
Object send24403;
Object send24404;
Object send24405;
Object localvariable3689;
Object array3101;
Object localvariable3690;
Object array3102;
Object localvariable3691;
Object array3103;
Object send24406;
Object send24407;
Object block1493;
Object send24408;
Object send24409;
Object send24410;
Object constant5601;
Object send24411;
Object send24412;
Object send24413;
Object constant5602;
Object send24414;
Object send24415;
Object block1494;
Object send24416;
Object send24417;
Object block1495;
Object send24418;
Object method4791;
Object symbol4107;
Object methodclosure4779;
Object localvariable3692;
Object array3104;
Object string2685;
Object constant5603;
Object send24419;
Object send24420;
Object send24421;
Object symbol4329;
Object send24422;
Object send24423;
Object send24424;
Object symbol4330;
Object send24425;
Object send24426;
Object send24427;
Object send24428;
Object localvariable3693;
Object array3105;
Object smallint2507;
Object constant5604;
Object send24429;
Object symbol4331;
Object send24430;
Object send24431;
Object localvariable3694;
Object array3106;
Object send24432;
Object send24433;
Object send24434;
Object smallint2508;
Object constant5605;
Object send24435;
Object send24436;
Object block1496;
Object send24437;
Object send24438;
Object block1497;
Object send24439;
Object block1498;
Object send24440;
Object send24441;
Object send24442;
Object send24443;
Object method4792;
Object methodclosure4780;
Object symbol4332;
Object send24444;
Object send24445;
Object send24446;
Object send24447;
Object send24448;
Object send24449;
Object send24450;
Object symbol4333;
Object send24451;
Object send24452;
Object method4793;
Object symbol4147;
Object methodclosure4781;
Object string2686;
Object constant5606;
Object send24453;
Object send24454;
Object localvariable3695;
Object array3107;
Object string2687;
Object constant5607;
Object localvariable3696;
Object localvariable3697;
Object array3108;
Object send24455;
Object string2688;
Object constant5608;
Object send24456;
Object block1499;
Object send24457;
Object block1500;
Object send24458;
Object method4794;
Object symbol4175;
Object methodclosure4782;
Object send24459;
Object string2689;
Object constant5609;
Object send24460;
Object send24461;
Object send24462;
Object method4795;
Object symbol4159;
Object methodclosure4783;
Object string2690;
Object constant5610;
Object send24463;
Object string2691;
Object constant5611;
Object send24464;
Object send24465;
Object send24466;
Object send24467;
Object string2692;
Object constant5612;
Object send24468;
Object localvariable3698;
Object array3109;
Object send24469;
Object send24470;
Object block1501;
Object send24471;
Object send24472;
Object localvariable3699;
Object localvariable3700;
Object array3110;
Object send24473;
Object block1502;
Object send24474;
Object send24475;
Object block1503;
Object send24476;
Object block1504;
Object send24477;
Object method4796;
Object symbol4112;
Object methodclosure4784;
Object string2693;
Object constant5613;
Object send24478;
Object method4797;
Object symbol4140;
Object methodclosure4785;
Object string2694;
Object constant5614;
Object send24479;
Object send24480;
Object send24481;
Object send24482;
Object send24483;
Object send24484;
Object localvariable3701;
Object array3111;
Object send24485;
Object send24486;
Object localvariable3702;
Object localvariable3703;
Object array3112;
Object send24487;
Object block1505;
Object send24488;
Object block1506;
Object send24489;
Object method4798;
Object symbol4129;
Object methodclosure4786;
Object send24490;
Object send24491;
Object method4799;
Object symbol4152;
Object methodclosure4787;
Object string2695;
Object constant5615;
Object send24492;
Object send24493;
Object send24494;
Object send24495;
Object send24496;
Object send24497;
Object localvariable3704;
Object array3113;
Object send24498;
Object send24499;
Object localvariable3705;
Object localvariable3706;
Object array3114;
Object send24500;
Object block1507;
Object send24501;
Object block1508;
Object send24502;
Object method4800;
Object symbol4169;
Object methodclosure4788;
Object send24503;
Object send24504;
Object send24505;
Object send24506;
Object method4801;
Object symbol4122;
Object methodclosure4789;
Object string2696;
Object constant5616;
Object send24507;
Object localvariable3707;
Object array3115;
Object send24508;
Object send24509;
Object method4802;
Object methodclosure4790;
Object classreference1363;
Object send24510;
Object send24511;
Object block1509;
Object send24512;
Object method4803;
Object symbol4134;
Object methodclosure4791;
Object string2697;
Object constant5617;
Object symbol4334;
Object send24513;
Object send24514;
Object send24515;
Object send24516;
Object send24517;
Object send24518;
Object send24519;
Object send24520;
Object method4804;
Object symbol4162;
Object methodclosure4792;
Object string2698;
Object constant5618;
Object send24521;
Object send24522;
Object symbol4335;
Object send24523;
Object send24524;
Object method4805;
Object symbol4116;
Object methodclosure4793;
Object localvariable3708;
Object array3116;
Object string2699;
Object constant5619;
Object send24525;
Object assign2972;
Object string2700;
Object constant5620;
Object send24526;
Object send24527;
Object send24528;
Object send24529;
Object symbol4336;
Object send24530;
Object send24531;
Object send24532;
Object send24533;
Object send24534;
Object send24535;
Object send24536;
Object send24537;
Object send24538;
Object send24539;
Object send24540;
Object string2701;
Object constant5621;
Object send24541;
Object send24542;
Object send24543;
Object localvariable3709;
Object array3117;
Object symbol4033;
Object send24544;
Object send24545;
Object method4806;
Object methodclosure4794;
Object localvariable3710;
Object array3118;
Object assign2973;
Object method4807;
Object symbol4032;
Object methodclosure4795;
Object method4808;
Object methodclosure4796;
Object classreference1364;
Object send24546;
Object send24547;
Object block1510;
Object send24548;
Object method4809;
Object symbol4144;
Object methodclosure4797;
Object localvariable3711;
Object array3119;
Object string2702;
Object constant5622;
Object send24549;
Object assign2974;
Object send24550;
Object send24551;
Object send24552;
Object send24553;
Object method4810;
Object symbol4172;
Object methodclosure4798;
Object string2703;
Object constant5623;
Object send24554;
Object localvariable3712;
Object array3120;
Object send24555;
Object block1511;
Object send24556;
Object method4811;
Object symbol4156;
Object methodclosure4799;
Object classreference1365;
Object send24557;
Object assign2975;
Object method4812;
Object symbol3965;
Object methodclosure4800;
Object localvariable3713;
Object localvariable3714;
Object array3121;
Object send24558;
Object assign2976;
Object string2704;
Object constant5624;
Object send24559;
Object assign2977;
Object send24560;
Object send24561;
Object string2705;
Object constant5625;
Object send24562;
Object send24563;
Object send24564;
Object smallint2509;
Object constant5626;
Object send24565;
Object string2706;
Object constant5627;
Object send24566;
Object assign2978;
Object send24567;
Object send24568;
Object send24569;
Object send24570;
Object send24571;
Object send24572;
Object smallint2510;
Object constant5628;
Object send24573;
Object method4813;
Object symbol3910;
Object methodclosure4801;
Object localvariable3715;
Object localvariable3716;
Object array3122;
Object send24574;
Object assign2979;
Object string2707;
Object constant5629;
Object send24575;
Object assign2980;
Object send24576;
Object send24577;
Object string2708;
Object constant5630;
Object send24578;
Object send24579;
Object send24580;
Object smallint2511;
Object constant5631;
Object send24581;
Object string2709;
Object constant5632;
Object send24582;
Object assign2981;
Object send24583;
Object send24584;
Object string2710;
Object constant5633;
Object send24585;
Object send24586;
Object send24587;
Object smallint2512;
Object constant5634;
Object send24588;
Object string2711;
Object constant5635;
Object send24589;
Object assign2982;
Object send24590;
Object send24591;
Object string2712;
Object constant5636;
Object send24592;
Object send24593;
Object send24594;
Object smallint2513;
Object constant5637;
Object send24595;
Object string2713;
Object constant5638;
Object send24596;
Object assign2983;
Object send24597;
Object send24598;
Object string2714;
Object constant5639;
Object send24599;
Object send24600;
Object send24601;
Object smallint2514;
Object constant5640;
Object send24602;
Object string2715;
Object constant5641;
Object send24603;
Object assign2984;
Object send24604;
Object send24605;
Object string2716;
Object constant5642;
Object send24606;
Object send24607;
Object send24608;
Object smallint2515;
Object constant5643;
Object send24609;
Object string2717;
Object constant5644;
Object send24610;
Object assign2985;
Object send24611;
Object send24612;
Object send24613;
Object send24614;
Object send24615;
Object send24616;
Object smallint2516;
Object constant5645;
Object send24617;
Object method4814;
Object symbol3977;
Object methodclosure4802;
Object localvariable3717;
Object localvariable3718;
Object localvariable3719;
Object array3123;
Object send24618;
Object assign2986;
Object string2718;
Object constant5646;
Object send24619;
Object assign2987;
Object send24620;
Object assign2988;
Object send24621;
Object send24622;
Object send24623;
Object send24624;
Object send24625;
Object send24626;
Object send24627;
Object send24628;
Object send24629;
Object send24630;
Object send24631;
Object string2719;
Object constant5647;
Object send24632;
Object send24633;
Object assign2989;
Object send24634;
Object send24635;
Object send24636;
Object send24637;
Object send24638;
Object send24639;
Object send24640;
Object send24641;
Object send24642;
Object send24643;
Object send24644;
Object string2720;
Object constant5648;
Object send24645;
Object send24646;
Object send24647;
Object send24648;
Object send24649;
Object send24650;
Object send24651;
Object send24652;
Object string2721;
Object constant5649;
Object send24653;
Object send24654;
Object send24655;
Object smallint2517;
Object constant5650;
Object send24656;
Object string2722;
Object constant5651;
Object send24657;
Object assign2990;
Object send24658;
Object assign2991;
Object send24659;
Object send24660;
Object send24661;
Object send24662;
Object send24663;
Object string2723;
Object constant5652;
Object send24664;
Object send24665;
Object send24666;
Object smallint2518;
Object constant5653;
Object send24667;
Object string2724;
Object constant5654;
Object send24668;
Object assign2992;
Object send24669;
Object assign2993;
Object send24670;
Object send24671;
Object send24672;
Object send24673;
Object send24674;
Object send24675;
Object string2725;
Object constant5655;
Object send24676;
Object send24677;
Object send24678;
Object send24679;
Object send24680;
Object send24681;
Object send24682;
Object send24683;
Object string2726;
Object constant5656;
Object send24684;
Object send24685;
Object assign2994;
Object send24686;
Object send24687;
Object send24688;
Object send24689;
Object send24690;
Object send24691;
Object string2727;
Object constant5657;
Object send24692;
Object send24693;
Object send24694;
Object send24695;
Object send24696;
Object send24697;
Object send24698;
Object send24699;
Object string2728;
Object constant5658;
Object send24700;
Object send24701;
Object send24702;
Object send24703;
Object send24704;
Object send24705;
Object send24706;
Object send24707;
Object string2729;
Object constant5659;
Object send24708;
Object send24709;
Object send24710;
Object smallint2519;
Object constant5660;
Object send24711;
Object method4815;
Object symbol3950;
Object methodclosure4803;
Object localvariable3720;
Object localvariable3721;
Object localvariable3722;
Object array3124;
Object send24712;
Object assign2995;
Object string2730;
Object constant5661;
Object send24713;
Object assign2996;
Object send24714;
Object assign2997;
Object send24715;
Object send24716;
Object send24717;
Object send24718;
Object send24719;
Object send24720;
Object send24721;
Object send24722;
Object string2731;
Object constant5662;
Object send24723;
Object assign2998;
Object send24724;
Object assign2999;
Object send24725;
Object send24726;
Object send24727;
Object send24728;
Object send24729;
Object send24730;
Object smallint2520;
Object constant5663;
Object send24731;
Object send24732;
Object send24733;
Object send24734;
Object send24735;
Object send24736;
Object send24737;
Object send24738;
Object send24739;
Object send24740;
Object string2732;
Object constant5664;
Object send24741;
Object send24742;
Object smallint2521;
Object constant5665;
Object send24743;
Object send24744;
Object send24745;
Object send24746;
Object send24747;
Object smallint2522;
Object constant5666;
Object send24748;
Object send24749;
Object send24750;
Object string2733;
Object constant5667;
Object send24751;
Object send24752;
Object smallint2523;
Object constant5668;
Object send24753;
Object send24754;
Object send24755;
Object send24756;
Object send24757;
Object smallint2524;
Object constant5669;
Object send24758;
Object send24759;
Object send24760;
Object string2734;
Object constant5670;
Object send24761;
Object send24762;
Object smallint2525;
Object constant5671;
Object send24763;
Object send24764;
Object send24765;
Object send24766;
Object send24767;
Object smallint2526;
Object constant5672;
Object send24768;
Object send24769;
Object send24770;
Object string2735;
Object constant5673;
Object send24771;
Object send24772;
Object smallint2527;
Object constant5674;
Object send24773;
Object send24774;
Object send24775;
Object send24776;
Object method4816;
Object symbol3919;
Object methodclosure4804;
Object localvariable3723;
Object localvariable3724;
Object localvariable3725;
Object array3125;
Object send24777;
Object assign3000;
Object string2736;
Object constant5675;
Object send24778;
Object assign3001;
Object send24779;
Object assign3002;
Object send24780;
Object send24781;
Object send24782;
Object send24783;
Object assign3003;
Object send24784;
Object send24785;
Object send24786;
Object send24787;
Object send24788;
Object send24789;
Object send24790;
Object send24791;
Object send24792;
Object send24793;
Object string2737;
Object constant5676;
Object send24794;
Object send24795;
Object assign3004;
Object send24796;
Object send24797;
Object send24798;
Object send24799;
Object send24800;
Object send24801;
Object send24802;
Object send24803;
Object send24804;
Object send24805;
Object string2738;
Object constant5677;
Object send24806;
Object send24807;
Object assign3005;
Object send24808;
Object send24809;
Object send24810;
Object send24811;
Object send24812;
Object send24813;
Object send24814;
Object send24815;
Object send24816;
Object send24817;
Object string2739;
Object constant5678;
Object send24818;
Object send24819;
Object send24820;
Object send24821;
Object send24822;
Object string2740;
Object constant5679;
Object send24823;
Object assign3006;
Object send24824;
Object assign3007;
Object send24825;
Object send24826;
Object send24827;
Object send24828;
Object assign3008;
Object send24829;
Object send24830;
Object send24831;
Object send24832;
Object send24833;
Object send24834;
Object send24835;
Object send24836;
Object send24837;
Object send24838;
Object string2741;
Object constant5680;
Object send24839;
Object send24840;
Object assign3009;
Object send24841;
Object send24842;
Object send24843;
Object send24844;
Object send24845;
Object send24846;
Object send24847;
Object send24848;
Object send24849;
Object send24850;
Object string2742;
Object constant5681;
Object send24851;
Object send24852;
Object assign3010;
Object send24853;
Object send24854;
Object send24855;
Object send24856;
Object send24857;
Object send24858;
Object send24859;
Object send24860;
Object send24861;
Object send24862;
Object string2743;
Object constant5682;
Object send24863;
Object send24864;
Object send24865;
Object send24866;
Object send24867;
Object method4817;
Object symbol3947;
Object methodclosure4805;
Object localvariable3726;
Object localvariable3727;
Object localvariable3728;
Object localvariable3729;
Object array3126;
Object send24868;
Object assign3011;
Object string2744;
Object constant5683;
Object send24869;
Object assign3012;
Object send24870;
Object assign3013;
Object send24871;
Object send24872;
Object send24873;
Object send24874;
Object send24875;
Object send24876;
Object localvariable3730;
Object array3127;
Object smallint2528;
Object constant5684;
Object string2745;
Object constant5685;
Object send24877;
Object smallint2529;
Object constant5686;
Object string2746;
Object constant5687;
Object send24878;
Object smallint2530;
Object constant5688;
Object string2747;
Object constant5689;
Object send24879;
Object send24880;
Object block1512;
Object smallint2531;
Object constant5690;
Object send24881;
Object send24882;
Object send24883;
Object send24884;
Object send24885;
Object assign3014;
Object send24886;
Object send24887;
Object send24888;
Object send24889;
Object smallint2532;
Object constant5691;
Object send24890;
Object assign3015;
Object send24891;
Object send24892;
Object send24893;
Object send24894;
Object smallint2533;
Object constant5692;
Object send24895;
Object assign3016;
Object send24896;
Object send24897;
Object send24898;
Object send24899;
Object send24900;
Object smallint2534;
Object constant5693;
Object send24901;
Object method4818;
Object symbol3939;
Object methodclosure4806;
Object localvariable3731;
Object localvariable3732;
Object array3128;
Object symbol4337;
Object send24902;
Object assign3017;
Object string2748;
Object constant5694;
Object send24903;
Object assign3018;
Object send24904;
Object send24905;
Object string2749;
Object constant5695;
Object send24906;
Object send24907;
Object send24908;
Object smallint2535;
Object constant5696;
Object send24909;
Object string2750;
Object constant5697;
Object send24910;
Object assign3019;
Object send24911;
Object send24912;
Object string2751;
Object constant5698;
Object send24913;
Object send24914;
Object send24915;
Object smallint2536;
Object constant5699;
Object send24916;
Object string2752;
Object constant5700;
Object send24917;
Object assign3020;
Object send24918;
Object send24919;
Object send24920;
Object send24921;
Object send24922;
Object send24923;
Object smallint2537;
Object constant5701;
Object send24924;
Object method4819;
Object symbol3970;
Object methodclosure4807;
Object localvariable3733;
Object localvariable3734;
Object localvariable3735;
Object array3129;
Object send24925;
Object assign3021;
Object string2753;
Object constant5702;
Object send24926;
Object assign3022;
Object send24927;
Object assign3023;
Object send24928;
Object send24929;
Object send24930;
Object send24931;
Object send24932;
Object string2754;
Object constant5703;
Object send24933;
Object send24934;
Object send24935;
Object send24936;
Object send24937;
Object smallint2538;
Object constant5704;
Object send24938;
Object send24939;
Object send24940;
Object send24941;
Object send24942;
Object string2755;
Object constant5705;
Object send24943;
Object send24944;
Object send24945;
Object send24946;
Object smallint2539;
Object constant5706;
Object send24947;
Object string2756;
Object constant5707;
Object send24948;
Object assign3024;
Object send24949;
Object send24950;
Object send24951;
Object send24952;
Object send24953;
Object send24954;
Object smallint2540;
Object constant5708;
Object send24955;
Object string2757;
Object constant5709;
Object send24956;
Object assign3025;
Object send24957;
Object assign3026;
Object send24958;
Object send24959;
Object send24960;
Object send24961;
Object send24962;
Object symbol4338;
Object string2758;
Object constant5710;
Object string2759;
Object constant5711;
Object send24963;
Object send24964;
Object send24965;
Object send24966;
Object send24967;
Object smallint2541;
Object constant5712;
Object send24968;
Object send24969;
Object send24970;
Object send24971;
Object send24972;
Object string2760;
Object constant5713;
Object send24973;
Object send24974;
Object send24975;
Object send24976;
Object send24977;
Object send24978;
Object string2761;
Object constant5714;
Object send24979;
Object send24980;
Object send24981;
Object send24982;
Object smallint2542;
Object constant5715;
Object send24983;
Object method4820;
Object symbol3959;
Object methodclosure4808;
Object localvariable3736;
Object localvariable3737;
Object array3130;
Object send24984;
Object assign3027;
Object string2762;
Object constant5716;
Object send24985;
Object assign3028;
Object send24986;
Object constant5717;
Object send24987;
Object send24988;
Object send24989;
Object localvariable3738;
Object array3131;
Object smallint2543;
Object constant5718;
Object string2763;
Object constant5719;
Object send24990;
Object smallint2544;
Object constant5720;
Object string2764;
Object constant5721;
Object send24991;
Object smallint2545;
Object constant5722;
Object string2765;
Object constant5723;
Object send24992;
Object send24993;
Object block1513;
Object smallint2546;
Object constant5724;
Object send24994;
Object send24995;
Object send24996;
Object send24997;
Object send24998;
Object smallint2547;
Object constant5725;
Object send24999;
Object string2766;
Object constant5726;
Object send25000;
Object assign3029;
Object send25001;
Object send25002;
Object send25003;
Object send25004;
Object send25005;
Object method4821;
Object symbol3940;
Object methodclosure4809;
Object classreference1366;
Object classreference1367;
Object localvariable3739;
Object array3132;
Object send25006;
Object send25007;
Object send25008;
Object method4822;
Object methodclosure4810;
Object send25009;
Object method4823;
Object methodclosure4811;
Object send25010;
Object send25011;
Object method4824;
Object methodclosure4812;
Object localvariable3740;
Object array3133;
Object localvariable3741;
Object array3134;
Object assign3030;
Object send25012;
Object assign3031;
Object send25013;
Object smallint2548;
Object constant5727;
Object send25014;
Object send25015;
Object smallint2549;
Object constant5728;
Object send25016;
Object send25017;
Object send25018;
Object send25019;
Object string2767;
Object constant5729;
Object send25020;
Object block1514;
Object send25021;
Object method4825;
Object methodclosure4813;
Object method4826;
Object methodclosure4814;
Object localvariable3742;
Object array3135;
Object send25022;
Object send25023;
Object method4827;
Object methodclosure4815;
Object send25024;
Object send25025;
Object method4828;
Object methodclosure4816;
Object classreference1368;
Object method4829;
Object symbol4026;
Object methodclosure4817;
Object send25026;
Object send25027;
Object symbol4339;
Object send25028;
Object assign3032;
Object block1515;
Object send25029;
Object method4830;
Object symbol4030;
Object methodclosure4818;
Object send25030;
Object send25031;
Object symbol4340;
Object smallint2550;
Object constant5730;
Object send25032;
Object send25033;
Object send25034;
Object send25035;
Object send25036;
Object method4831;
Object symbol4027;
Object methodclosure4819;
Object method4832;
Object methodclosure4820;
Object localvariable3743;
Object array3136;
Object send25037;
Object method4833;
Object methodclosure4821;
Object localvariable3744;
Object array3137;
Object localvariable3745;
Object array3138;
Object variable191;
Object array3139;
Object send25038;
Object symbol4341;
Object constant5731;
Object send25039;
Object super374;
Object send25040;
Object block1516;
Object send25041;
Object string2768;
Object constant5732;
Object send25042;
Object send25043;
Object smallint2551;
Object constant5733;
Object send25044;
Object send25045;
Object send25046;
Object send25047;
Object send25048;
Object string2769;
Object constant5734;
Object send25049;
Object send25050;
Object assign3033;
Object send25051;
Object symbol4342;
Object send25052;
Object block1517;
Object send25053;
Object method4834;
Object methodclosure4822;
Object localvariable3746;
Object array3140;
Object assign3034;
Object method4835;
Object symbol4028;
Object methodclosure4823;
Object string2770;
Object constant5735;
Object method4836;
Object symbol4029;
Object methodclosure4824;
Object method4837;
Object methodclosure4825;
Object classreference1369;
Object classreference1370;
Object instancevariable1582;
Object method4838;
Object methodclosure4826;
Object method4839;
Object methodclosure4827;
Object classreference1371;
Object method4840;
Object methodclosure4828;
Object classreference1372;
Object localvariable3747;
Object array3141;
Object localvariable3748;
Object array3142;
Object variable192;
Object array3143;
Object send25054;
Object constant5736;
Object send25055;
Object super375;
Object send25056;
Object block1518;
Object send25057;
Object string2771;
Object constant5737;
Object symbol3905;
Object send25058;
Object send25059;
Object string2772;
Object constant5738;
Object send25060;
Object send25061;
Object assign3035;
Object send25062;
Object send25063;
Object block1519;
Object send25064;
Object method4841;
Object methodclosure4829;
Object classreference1373;
Object classreference1374;
Object method4842;
Object symbol4212;
Object methodclosure4830;
Object method4843;
Object symbol4211;
Object methodclosure4831;
Object method4844;
Object methodclosure4832;
Object localvariable3749;
Object array3144;
Object assign3036;
Object method4845;
Object methodclosure4833;
Object localvariable3750;
Object array3145;
Object assign3037;
Object method4846;
Object symbol4210;
Object methodclosure4834;
Object localvariable3751;
Object array3146;
Object super376;
Object string2773;
Object constant5739;
Object send25065;
Object send25066;
Object send25067;
Object string2774;
Object constant5740;
Object send25068;
Object send25069;
Object send25070;
Object string2775;
Object constant5741;
Object send25071;
Object send25072;
Object send25073;
Object method4847;
Object methodclosure4835;
Object localvariable3752;
Object array3147;
Object assign3038;
Object method4848;
Object symbol4209;
Object methodclosure4836;
Object method4849;
Object methodclosure4837;
Object localvariable3753;
Object array3148;
Object send25074;
Object send25075;
Object send25076;
Object method4850;
Object methodclosure4838;
Object classreference1375;
Object instancevariable1583;
Object method4851;
Object symbol4004;
Object methodclosure4839;
Object localvariable3754;
Object array3149;
Object super377;
Object string2776;
Object constant5742;
Object send25077;
Object send25078;
Object send25079;
Object method4852;
Object methodclosure4840;
Object instancevariable1584;
Object method4853;
Object methodclosure4841;
Object classreference1376;
Object localvariable3755;
Object array3150;
Object super378;
Object symbol4343;
Object send25080;
Object send25081;
Object send25082;
Object method4854;
Object methodclosure4842;
Object classreference1377;
Object instancevariable1585;
Object method4855;
Object symbol3991;
Object methodclosure4843;
Object instancevariable1586;
Object method4856;
Object methodclosure4844;
Object localvariable3756;
Object array3151;
Object send25083;
Object assign3039;
Object symbol3999;
Object send25084;
Object symbol4344;
Object symbol3995;
Object send25085;
Object send25086;
Object send25087;
Object block1520;
Object block1521;
Object send25088;
Object method4857;
Object symbol3996;
Object methodclosure4845;
Object send25089;
Object method4858;
Object symbol3993;
Object methodclosure4846;
Object localvariable3757;
Object localvariable3758;
Object localvariable3759;
Object array3152;
Object send25090;
Object assign3040;
Object send25091;
Object localvariable3760;
Object array3153;
Object localvariable3761;
Object array3154;
Object send25092;
Object send25093;
Object symbol4345;
Object string2777;
Object constant5743;
Object send25094;
Object string2778;
Object constant5744;
Object send25095;
Object send25096;
Object block1522;
Object send25097;
Object block1523;
Object send25098;
Object send25099;
Object assign3041;
Object send25100;
Object send25101;
Object send25102;
Object block1524;
Object send25103;
Object method4859;
Object symbol3990;
Object methodclosure4847;
Object send25104;
Object send25105;
Object method4860;
Object methodclosure4848;
Object instancevariable1587;
Object method4861;
Object methodclosure4849;
Object send25106;
Object symbol4346;
Object send25107;
Object send25108;
Object method4862;
Object methodclosure4850;
Object localvariable3762;
Object array3155;
Object send25109;
Object send25110;
Object method4863;
Object methodclosure4851;
Object classreference1378;
Object method4864;
Object methodclosure4852;
Object send25111;
Object symbol3897;
Object send25112;
Object method4865;
Object methodclosure4853;
Object localvariable3763;
Object array3156;
Object send25113;
Object send25114;
Object method4866;
Object methodclosure4854;
Object localvariable3764;
Object array3157;
Object localvariable3765;
Object array3158;
Object variable193;
Object array3159;
Object send25115;
Object constant5745;
Object send25116;
Object super379;
Object send25117;
Object block1525;
Object send25118;
Object string2779;
Object constant5746;
Object send25119;
Object send25120;
Object string2780;
Object constant5747;
Object send25121;
Object send25122;
Object assign3042;
Object send25123;
Object send25124;
Object block1526;
Object send25125;
Object method4867;
Object methodclosure4855;
Object method4868;
Object methodclosure4856;
Object method4869;
Object methodclosure4857;
Object method4870;
Object methodclosure4858;
Object send25126;
Object send25127;
Object method4871;
Object methodclosure4859;
Object classreference1379;
Object classreference1380;
Object classreference1381;
Object classreference1382;
Object classreference1383;
Object classreference1384;
Object classreference1385;
Object classreference1386;

void SCParserTest_create_ast() {
objectlayout1180 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
instancevariable1499 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout1180)->values[0] = instancevariable1499;
instancevariable1500 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout1180)->values[1] = instancevariable1500;
instancevariable1501 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout1180)->values[2] = instancevariable1501;
instancevariable1502 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1180)->values[3] = instancevariable1502;
instancevariable1503 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout1180)->values[4] = instancevariable1503;
instancevariable1504 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout1180)->values[5] = instancevariable1504;
symbol3894 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout1181 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1505 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout1181)->values[0] = instancevariable1505;
class736 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1181, objectlayout1180);
((Type_Class)class736)->name = (Type_Symbol)symbol3894;
metaclass736 = (Object)HEADER(class736);
objectlayout1182 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1182)->values[0] = instancevariable1499;
((Type_Array)objectlayout1182)->values[1] = instancevariable1500;
((Type_Array)objectlayout1182)->values[2] = instancevariable1501;
((Type_Array)objectlayout1182)->values[3] = instancevariable1502;
((Type_Array)objectlayout1182)->values[4] = instancevariable1503;
symbol4012 = (Object)new_Type_Symbol_cached(L"Stream");
class737 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1182);
((Type_Class)class737)->name = (Type_Symbol)symbol4012;
metaclass737 = (Object)HEADER(class737);
objectlayout1183 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1183)->values[0] = instancevariable1499;
((Type_Array)objectlayout1183)->values[1] = instancevariable1500;
((Type_Array)objectlayout1183)->values[2] = instancevariable1501;
((Type_Array)objectlayout1183)->values[3] = instancevariable1502;
((Type_Array)objectlayout1183)->values[4] = instancevariable1503;
symbol4011 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout1184 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1506 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout1184)->values[0] = instancevariable1506;
instancevariable1507 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout1184)->values[1] = instancevariable1507;
instancevariable1508 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout1184)->values[2] = instancevariable1508;
class738 = (Object)new_Class_withMeta((Object)class737, objectlayout1184, objectlayout1183);
((Type_Class)class738)->name = (Type_Symbol)symbol4011;
metaclass738 = (Object)HEADER(class738);
objectlayout1185 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1185)->values[0] = instancevariable1499;
((Type_Array)objectlayout1185)->values[1] = instancevariable1500;
((Type_Array)objectlayout1185)->values[2] = instancevariable1501;
((Type_Array)objectlayout1185)->values[3] = instancevariable1502;
((Type_Array)objectlayout1185)->values[4] = instancevariable1503;
symbol4010 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout1186 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1186)->values[0] = instancevariable1506;
((Type_Array)objectlayout1186)->values[1] = instancevariable1507;
((Type_Array)objectlayout1186)->values[2] = instancevariable1508;
class739 = (Object)new_Class_withMeta((Object)class738, objectlayout1186, objectlayout1185);
((Type_Class)class739)->name = (Type_Symbol)symbol4010;
metaclass739 = (Object)HEADER(class739);
objectlayout1187 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1187)->values[0] = instancevariable1499;
((Type_Array)objectlayout1187)->values[1] = instancevariable1500;
((Type_Array)objectlayout1187)->values[2] = instancevariable1501;
((Type_Array)objectlayout1187)->values[3] = instancevariable1502;
((Type_Array)objectlayout1187)->values[4] = instancevariable1503;
symbol3909 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout1188 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1188)->values[0] = instancevariable1506;
((Type_Array)objectlayout1188)->values[1] = instancevariable1507;
((Type_Array)objectlayout1188)->values[2] = instancevariable1508;
instancevariable1509 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout1188)->values[3] = instancevariable1509;
instancevariable1510 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout1188)->values[4] = instancevariable1510;
class740 = (Object)new_Class_withMeta((Object)class739, objectlayout1188, objectlayout1187);
((Type_Class)class740)->name = (Type_Symbol)symbol3909;
metaclass740 = (Object)HEADER(class740);
objectlayout1189 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1189)->values[0] = instancevariable1499;
((Type_Array)objectlayout1189)->values[1] = instancevariable1500;
((Type_Array)objectlayout1189)->values[2] = instancevariable1501;
((Type_Array)objectlayout1189)->values[3] = instancevariable1502;
((Type_Array)objectlayout1189)->values[4] = instancevariable1503;
symbol4180 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout1190 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable1511 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout1190)->values[0] = instancevariable1511;
instancevariable1512 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout1190)->values[1] = instancevariable1512;
class741 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1190, objectlayout1189);
((Type_Class)class741)->name = (Type_Symbol)symbol4180;
metaclass741 = (Object)HEADER(class741);
objectlayout1191 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1191)->values[0] = instancevariable1499;
((Type_Array)objectlayout1191)->values[1] = instancevariable1500;
((Type_Array)objectlayout1191)->values[2] = instancevariable1501;
((Type_Array)objectlayout1191)->values[3] = instancevariable1502;
((Type_Array)objectlayout1191)->values[4] = instancevariable1503;
symbol4184 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout1192 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1192)->values[0] = instancevariable1511;
((Type_Array)objectlayout1192)->values[1] = instancevariable1512;
instancevariable1513 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout1192)->values[2] = instancevariable1513;
instancevariable1514 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1192)->values[3] = instancevariable1514;
class742 = (Object)new_Class_withMeta((Object)class741, objectlayout1192, objectlayout1191);
((Type_Class)class742)->name = (Type_Symbol)symbol4184;
metaclass742 = (Object)HEADER(class742);
objectlayout1193 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1193)->values[0] = instancevariable1499;
((Type_Array)objectlayout1193)->values[1] = instancevariable1500;
((Type_Array)objectlayout1193)->values[2] = instancevariable1501;
((Type_Array)objectlayout1193)->values[3] = instancevariable1502;
((Type_Array)objectlayout1193)->values[4] = instancevariable1503;
symbol4188 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout1194 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1194)->values[0] = instancevariable1511;
((Type_Array)objectlayout1194)->values[1] = instancevariable1512;
instancevariable1515 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout1194)->values[2] = instancevariable1515;
class743 = (Object)new_Class_withMeta((Object)class741, objectlayout1194, objectlayout1193);
((Type_Class)class743)->name = (Type_Symbol)symbol4188;
metaclass743 = (Object)HEADER(class743);
objectlayout1195 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1195)->values[0] = instancevariable1499;
((Type_Array)objectlayout1195)->values[1] = instancevariable1500;
((Type_Array)objectlayout1195)->values[2] = instancevariable1501;
((Type_Array)objectlayout1195)->values[3] = instancevariable1502;
((Type_Array)objectlayout1195)->values[4] = instancevariable1503;
symbol4193 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout1196 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1196)->values[0] = instancevariable1511;
((Type_Array)objectlayout1196)->values[1] = instancevariable1512;
((Type_Array)objectlayout1196)->values[2] = instancevariable1513;
((Type_Array)objectlayout1196)->values[3] = instancevariable1514;
class744 = (Object)new_Class_withMeta((Object)class742, objectlayout1196, objectlayout1195);
((Type_Class)class744)->name = (Type_Symbol)symbol4193;
metaclass744 = (Object)HEADER(class744);
objectlayout1197 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1197)->values[0] = instancevariable1499;
((Type_Array)objectlayout1197)->values[1] = instancevariable1500;
((Type_Array)objectlayout1197)->values[2] = instancevariable1501;
((Type_Array)objectlayout1197)->values[3] = instancevariable1502;
((Type_Array)objectlayout1197)->values[4] = instancevariable1503;
symbol4226 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class745 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1197);
((Type_Class)class745)->name = (Type_Symbol)symbol4226;
metaclass745 = (Object)HEADER(class745);
objectlayout1198 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1198)->values[0] = instancevariable1499;
((Type_Array)objectlayout1198)->values[1] = instancevariable1500;
((Type_Array)objectlayout1198)->values[2] = instancevariable1501;
((Type_Array)objectlayout1198)->values[3] = instancevariable1502;
((Type_Array)objectlayout1198)->values[4] = instancevariable1503;
symbol4221 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout1199 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1516 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout1199)->values[0] = instancevariable1516;
class746 = (Object)new_Class_withMeta((Object)class745, objectlayout1199, objectlayout1198);
((Type_Class)class746)->name = (Type_Symbol)symbol4221;
metaclass746 = (Object)HEADER(class746);
objectlayout1200 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1200)->values[0] = instancevariable1499;
((Type_Array)objectlayout1200)->values[1] = instancevariable1500;
((Type_Array)objectlayout1200)->values[2] = instancevariable1501;
((Type_Array)objectlayout1200)->values[3] = instancevariable1502;
((Type_Array)objectlayout1200)->values[4] = instancevariable1503;
symbol4222 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class747 = (Object)new_Class_withMeta((Object)class745, empty_object_layout, objectlayout1200);
((Type_Class)class747)->name = (Type_Symbol)symbol4222;
metaclass747 = (Object)HEADER(class747);
objectlayout1201 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1201)->values[0] = instancevariable1499;
((Type_Array)objectlayout1201)->values[1] = instancevariable1500;
((Type_Array)objectlayout1201)->values[2] = instancevariable1501;
((Type_Array)objectlayout1201)->values[3] = instancevariable1502;
((Type_Array)objectlayout1201)->values[4] = instancevariable1503;
symbol4182 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout1202 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1202)->values[0] = instancevariable1511;
((Type_Array)objectlayout1202)->values[1] = instancevariable1512;
instancevariable1517 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout1202)->values[2] = instancevariable1517;
instancevariable1518 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1202)->values[3] = instancevariable1518;
class748 = (Object)new_Class_withMeta((Object)class741, objectlayout1202, objectlayout1201);
((Type_Class)class748)->name = (Type_Symbol)symbol4182;
metaclass748 = (Object)HEADER(class748);
objectlayout1203 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1203)->values[0] = instancevariable1499;
((Type_Array)objectlayout1203)->values[1] = instancevariable1500;
((Type_Array)objectlayout1203)->values[2] = instancevariable1501;
((Type_Array)objectlayout1203)->values[3] = instancevariable1502;
((Type_Array)objectlayout1203)->values[4] = instancevariable1503;
symbol4199 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout1204 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1204)->values[0] = instancevariable1511;
((Type_Array)objectlayout1204)->values[1] = instancevariable1512;
instancevariable1519 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout1204)->values[2] = instancevariable1519;
instancevariable1520 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout1204)->values[3] = instancevariable1520;
class749 = (Object)new_Class_withMeta((Object)class741, objectlayout1204, objectlayout1203);
((Type_Class)class749)->name = (Type_Symbol)symbol4199;
metaclass749 = (Object)HEADER(class749);
objectlayout1205 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1205)->values[0] = instancevariable1499;
((Type_Array)objectlayout1205)->values[1] = instancevariable1500;
((Type_Array)objectlayout1205)->values[2] = instancevariable1501;
((Type_Array)objectlayout1205)->values[3] = instancevariable1502;
((Type_Array)objectlayout1205)->values[4] = instancevariable1503;
symbol3971 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout1206 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1206)->values[0] = instancevariable1511;
((Type_Array)objectlayout1206)->values[1] = instancevariable1512;
instancevariable1521 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout1206)->values[2] = instancevariable1521;
instancevariable1522 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout1206)->values[3] = instancevariable1522;
instancevariable1523 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout1206)->values[4] = instancevariable1523;
instancevariable1524 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout1206)->values[5] = instancevariable1524;
class750 = (Object)new_Class_withMeta((Object)class741, objectlayout1206, objectlayout1205);
((Type_Class)class750)->name = (Type_Symbol)symbol3971;
metaclass750 = (Object)HEADER(class750);
objectlayout1207 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1207)->values[0] = instancevariable1499;
((Type_Array)objectlayout1207)->values[1] = instancevariable1500;
((Type_Array)objectlayout1207)->values[2] = instancevariable1501;
((Type_Array)objectlayout1207)->values[3] = instancevariable1502;
((Type_Array)objectlayout1207)->values[4] = instancevariable1503;
((Type_Array)objectlayout1207)->values[5] = instancevariable1504;
symbol3891 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout1208 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout1208)->values[0] = instancevariable1505;
instancevariable1525 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout1208)->values[1] = instancevariable1525;
class751 = (Object)new_Class_withMeta((Object)class736, objectlayout1208, objectlayout1207);
((Type_Class)class751)->name = (Type_Symbol)symbol3891;
metaclass751 = (Object)HEADER(class751);
objectlayout1209 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1209)->values[0] = instancevariable1499;
((Type_Array)objectlayout1209)->values[1] = instancevariable1500;
((Type_Array)objectlayout1209)->values[2] = instancevariable1501;
((Type_Array)objectlayout1209)->values[3] = instancevariable1502;
((Type_Array)objectlayout1209)->values[4] = instancevariable1503;
symbol3964 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout1210 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1526 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout1210)->values[0] = instancevariable1526;
instancevariable1527 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout1210)->values[1] = instancevariable1527;
instancevariable1528 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout1210)->values[2] = instancevariable1528;
class752 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1210, objectlayout1209);
((Type_Class)class752)->name = (Type_Symbol)symbol3964;
metaclass752 = (Object)HEADER(class752);
objectlayout1211 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1211)->values[0] = instancevariable1499;
((Type_Array)objectlayout1211)->values[1] = instancevariable1500;
((Type_Array)objectlayout1211)->values[2] = instancevariable1501;
((Type_Array)objectlayout1211)->values[3] = instancevariable1502;
((Type_Array)objectlayout1211)->values[4] = instancevariable1503;
instancevariable1529 = (Object)new_AST_InstVariable(5, L"uidCounter");
((Type_Array)objectlayout1211)->values[5] = instancevariable1529;
symbol4023 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout1212 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1530 = (Object)new_AST_InstVariable(0, L"sourceObject");
((Type_Array)objectlayout1212)->values[0] = instancevariable1530;
instancevariable1531 = (Object)new_AST_InstVariable(1, L"uid");
((Type_Array)objectlayout1212)->values[1] = instancevariable1531;
instancevariable1532 = (Object)new_AST_InstVariable(2, L"id");
((Type_Array)objectlayout1212)->values[2] = instancevariable1532;
class753 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout1212, objectlayout1211);
((Type_Class)class753)->name = (Type_Symbol)symbol4023;
metaclass753 = (Object)HEADER(class753);
objectlayout1213 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1213)->values[0] = instancevariable1499;
((Type_Array)objectlayout1213)->values[1] = instancevariable1500;
((Type_Array)objectlayout1213)->values[2] = instancevariable1501;
((Type_Array)objectlayout1213)->values[3] = instancevariable1502;
((Type_Array)objectlayout1213)->values[4] = instancevariable1503;
((Type_Array)objectlayout1213)->values[5] = instancevariable1529;
symbol3951 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout1214 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1214)->values[0] = instancevariable1530;
((Type_Array)objectlayout1214)->values[1] = instancevariable1531;
((Type_Array)objectlayout1214)->values[2] = instancevariable1532;
class754 = (Object)new_Class_withMeta((Object)class753, objectlayout1214, objectlayout1213);
((Type_Class)class754)->name = (Type_Symbol)symbol3951;
metaclass754 = (Object)HEADER(class754);
objectlayout1215 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1215)->values[0] = instancevariable1499;
((Type_Array)objectlayout1215)->values[1] = instancevariable1500;
((Type_Array)objectlayout1215)->values[2] = instancevariable1501;
((Type_Array)objectlayout1215)->values[3] = instancevariable1502;
((Type_Array)objectlayout1215)->values[4] = instancevariable1503;
((Type_Array)objectlayout1215)->values[5] = instancevariable1529;
symbol3921 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout1216 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1216)->values[0] = instancevariable1530;
((Type_Array)objectlayout1216)->values[1] = instancevariable1531;
((Type_Array)objectlayout1216)->values[2] = instancevariable1532;
instancevariable1533 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1216)->values[3] = instancevariable1533;
instancevariable1534 = (Object)new_AST_InstVariable(4, L"type");
((Type_Array)objectlayout1216)->values[4] = instancevariable1534;
class755 = (Object)new_Class_withMeta((Object)class753, objectlayout1216, objectlayout1215);
((Type_Class)class755)->name = (Type_Symbol)symbol3921;
metaclass755 = (Object)HEADER(class755);
objectlayout1217 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1217)->values[0] = instancevariable1499;
((Type_Array)objectlayout1217)->values[1] = instancevariable1500;
((Type_Array)objectlayout1217)->values[2] = instancevariable1501;
((Type_Array)objectlayout1217)->values[3] = instancevariable1502;
((Type_Array)objectlayout1217)->values[4] = instancevariable1503;
((Type_Array)objectlayout1217)->values[5] = instancevariable1529;
symbol3952 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout1218 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1218)->values[0] = instancevariable1530;
((Type_Array)objectlayout1218)->values[1] = instancevariable1531;
((Type_Array)objectlayout1218)->values[2] = instancevariable1532;
class756 = (Object)new_Class_withMeta((Object)class753, objectlayout1218, objectlayout1217);
((Type_Class)class756)->name = (Type_Symbol)symbol3952;
metaclass756 = (Object)HEADER(class756);
objectlayout1219 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1219)->values[0] = instancevariable1499;
((Type_Array)objectlayout1219)->values[1] = instancevariable1500;
((Type_Array)objectlayout1219)->values[2] = instancevariable1501;
((Type_Array)objectlayout1219)->values[3] = instancevariable1502;
((Type_Array)objectlayout1219)->values[4] = instancevariable1503;
((Type_Array)objectlayout1219)->values[5] = instancevariable1529;
symbol4022 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout1220 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1220)->values[0] = instancevariable1530;
((Type_Array)objectlayout1220)->values[1] = instancevariable1531;
((Type_Array)objectlayout1220)->values[2] = instancevariable1532;
class757 = (Object)new_Class_withMeta((Object)class753, objectlayout1220, objectlayout1219);
((Type_Class)class757)->name = (Type_Symbol)symbol4022;
metaclass757 = (Object)HEADER(class757);
objectlayout1221 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1221)->values[0] = instancevariable1499;
((Type_Array)objectlayout1221)->values[1] = instancevariable1500;
((Type_Array)objectlayout1221)->values[2] = instancevariable1501;
((Type_Array)objectlayout1221)->values[3] = instancevariable1502;
((Type_Array)objectlayout1221)->values[4] = instancevariable1503;
((Type_Array)objectlayout1221)->values[5] = instancevariable1529;
symbol4073 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout1222 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1222)->values[0] = instancevariable1530;
((Type_Array)objectlayout1222)->values[1] = instancevariable1531;
((Type_Array)objectlayout1222)->values[2] = instancevariable1532;
instancevariable1535 = (Object)new_AST_InstVariable(3, L"selector");
((Type_Array)objectlayout1222)->values[3] = instancevariable1535;
class758 = (Object)new_Class_withMeta((Object)class753, objectlayout1222, objectlayout1221);
((Type_Class)class758)->name = (Type_Symbol)symbol4073;
metaclass758 = (Object)HEADER(class758);
objectlayout1223 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1223)->values[0] = instancevariable1499;
((Type_Array)objectlayout1223)->values[1] = instancevariable1500;
((Type_Array)objectlayout1223)->values[2] = instancevariable1501;
((Type_Array)objectlayout1223)->values[3] = instancevariable1502;
((Type_Array)objectlayout1223)->values[4] = instancevariable1503;
((Type_Array)objectlayout1223)->values[5] = instancevariable1529;
symbol3926 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout1224 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1224)->values[0] = instancevariable1530;
((Type_Array)objectlayout1224)->values[1] = instancevariable1531;
((Type_Array)objectlayout1224)->values[2] = instancevariable1532;
((Type_Array)objectlayout1224)->values[3] = instancevariable1535;
instancevariable1536 = (Object)new_AST_InstVariable(4, L"keywords");
((Type_Array)objectlayout1224)->values[4] = instancevariable1536;
class759 = (Object)new_Class_withMeta((Object)class758, objectlayout1224, objectlayout1223);
((Type_Class)class759)->name = (Type_Symbol)symbol3926;
metaclass759 = (Object)HEADER(class759);
objectlayout1225 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1225)->values[0] = instancevariable1499;
((Type_Array)objectlayout1225)->values[1] = instancevariable1500;
((Type_Array)objectlayout1225)->values[2] = instancevariable1501;
((Type_Array)objectlayout1225)->values[3] = instancevariable1502;
((Type_Array)objectlayout1225)->values[4] = instancevariable1503;
((Type_Array)objectlayout1225)->values[5] = instancevariable1529;
symbol3922 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout1226 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1226)->values[0] = instancevariable1530;
((Type_Array)objectlayout1226)->values[1] = instancevariable1531;
((Type_Array)objectlayout1226)->values[2] = instancevariable1532;
((Type_Array)objectlayout1226)->values[3] = instancevariable1535;
((Type_Array)objectlayout1226)->values[4] = instancevariable1536;
instancevariable1537 = (Object)new_AST_InstVariable(5, L"receiver");
((Type_Array)objectlayout1226)->values[5] = instancevariable1537;
instancevariable1538 = (Object)new_AST_InstVariable(6, L"arguments");
((Type_Array)objectlayout1226)->values[6] = instancevariable1538;
class760 = (Object)new_Class_withMeta((Object)class759, objectlayout1226, objectlayout1225);
((Type_Class)class760)->name = (Type_Symbol)symbol3922;
metaclass760 = (Object)HEADER(class760);
objectlayout1227 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1227)->values[0] = instancevariable1499;
((Type_Array)objectlayout1227)->values[1] = instancevariable1500;
((Type_Array)objectlayout1227)->values[2] = instancevariable1501;
((Type_Array)objectlayout1227)->values[3] = instancevariable1502;
((Type_Array)objectlayout1227)->values[4] = instancevariable1503;
((Type_Array)objectlayout1227)->values[5] = instancevariable1529;
symbol3942 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout1228 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1228)->values[0] = instancevariable1530;
((Type_Array)objectlayout1228)->values[1] = instancevariable1531;
((Type_Array)objectlayout1228)->values[2] = instancevariable1532;
instancevariable1539 = (Object)new_AST_InstVariable(3, L"char");
((Type_Array)objectlayout1228)->values[3] = instancevariable1539;
class761 = (Object)new_Class_withMeta((Object)class757, objectlayout1228, objectlayout1227);
((Type_Class)class761)->name = (Type_Symbol)symbol3942;
metaclass761 = (Object)HEADER(class761);
objectlayout1229 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1229)->values[0] = instancevariable1499;
((Type_Array)objectlayout1229)->values[1] = instancevariable1500;
((Type_Array)objectlayout1229)->values[2] = instancevariable1501;
((Type_Array)objectlayout1229)->values[3] = instancevariable1502;
((Type_Array)objectlayout1229)->values[4] = instancevariable1503;
((Type_Array)objectlayout1229)->values[5] = instancevariable1529;
symbol3934 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout1230 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1230)->values[0] = instancevariable1530;
((Type_Array)objectlayout1230)->values[1] = instancevariable1531;
((Type_Array)objectlayout1230)->values[2] = instancevariable1532;
((Type_Array)objectlayout1230)->values[3] = instancevariable1535;
((Type_Array)objectlayout1230)->values[4] = instancevariable1536;
instancevariable1540 = (Object)new_AST_InstVariable(5, L"arguments");
((Type_Array)objectlayout1230)->values[5] = instancevariable1540;
class762 = (Object)new_Class_withMeta((Object)class759, objectlayout1230, objectlayout1229);
((Type_Class)class762)->name = (Type_Symbol)symbol3934;
metaclass762 = (Object)HEADER(class762);
objectlayout1231 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1231)->values[0] = instancevariable1499;
((Type_Array)objectlayout1231)->values[1] = instancevariable1500;
((Type_Array)objectlayout1231)->values[2] = instancevariable1501;
((Type_Array)objectlayout1231)->values[3] = instancevariable1502;
((Type_Array)objectlayout1231)->values[4] = instancevariable1503;
((Type_Array)objectlayout1231)->values[5] = instancevariable1529;
symbol4063 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout1232 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout1232)->values[0] = instancevariable1530;
((Type_Array)objectlayout1232)->values[1] = instancevariable1531;
((Type_Array)objectlayout1232)->values[2] = instancevariable1532;
class763 = (Object)new_Class_withMeta((Object)class753, objectlayout1232, objectlayout1231);
((Type_Class)class763)->name = (Type_Symbol)symbol4063;
metaclass763 = (Object)HEADER(class763);
objectlayout1233 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1233)->values[0] = instancevariable1499;
((Type_Array)objectlayout1233)->values[1] = instancevariable1500;
((Type_Array)objectlayout1233)->values[2] = instancevariable1501;
((Type_Array)objectlayout1233)->values[3] = instancevariable1502;
((Type_Array)objectlayout1233)->values[4] = instancevariable1503;
((Type_Array)objectlayout1233)->values[5] = instancevariable1529;
symbol3962 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout1234 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1234)->values[0] = instancevariable1530;
((Type_Array)objectlayout1234)->values[1] = instancevariable1531;
((Type_Array)objectlayout1234)->values[2] = instancevariable1532;
instancevariable1541 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout1234)->values[3] = instancevariable1541;
instancevariable1542 = (Object)new_AST_InstVariable(4, L"cascades");
((Type_Array)objectlayout1234)->values[4] = instancevariable1542;
class764 = (Object)new_Class_withMeta((Object)class763, objectlayout1234, objectlayout1233);
((Type_Class)class764)->name = (Type_Symbol)symbol3962;
metaclass764 = (Object)HEADER(class764);
objectlayout1235 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1235)->values[0] = instancevariable1499;
((Type_Array)objectlayout1235)->values[1] = instancevariable1500;
((Type_Array)objectlayout1235)->values[2] = instancevariable1501;
((Type_Array)objectlayout1235)->values[3] = instancevariable1502;
((Type_Array)objectlayout1235)->values[4] = instancevariable1503;
((Type_Array)objectlayout1235)->values[5] = instancevariable1529;
symbol4130 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout1236 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1236)->values[0] = instancevariable1530;
((Type_Array)objectlayout1236)->values[1] = instancevariable1531;
((Type_Array)objectlayout1236)->values[2] = instancevariable1532;
instancevariable1543 = (Object)new_AST_InstVariable(3, L"expressions");
((Type_Array)objectlayout1236)->values[3] = instancevariable1543;
class765 = (Object)new_Class_withMeta((Object)class763, objectlayout1236, objectlayout1235);
((Type_Class)class765)->name = (Type_Symbol)symbol4130;
metaclass765 = (Object)HEADER(class765);
objectlayout1237 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1237)->values[0] = instancevariable1499;
((Type_Array)objectlayout1237)->values[1] = instancevariable1500;
((Type_Array)objectlayout1237)->values[2] = instancevariable1501;
((Type_Array)objectlayout1237)->values[3] = instancevariable1502;
((Type_Array)objectlayout1237)->values[4] = instancevariable1503;
((Type_Array)objectlayout1237)->values[5] = instancevariable1529;
symbol3924 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout1238 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1238)->values[0] = instancevariable1530;
((Type_Array)objectlayout1238)->values[1] = instancevariable1531;
((Type_Array)objectlayout1238)->values[2] = instancevariable1532;
((Type_Array)objectlayout1238)->values[3] = instancevariable1535;
class766 = (Object)new_Class_withMeta((Object)class758, objectlayout1238, objectlayout1237);
((Type_Class)class766)->name = (Type_Symbol)symbol3924;
metaclass766 = (Object)HEADER(class766);
objectlayout1239 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1239)->values[0] = instancevariable1499;
((Type_Array)objectlayout1239)->values[1] = instancevariable1500;
((Type_Array)objectlayout1239)->values[2] = instancevariable1501;
((Type_Array)objectlayout1239)->values[3] = instancevariable1502;
((Type_Array)objectlayout1239)->values[4] = instancevariable1503;
((Type_Array)objectlayout1239)->values[5] = instancevariable1529;
symbol3935 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout1240 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1240)->values[0] = instancevariable1530;
((Type_Array)objectlayout1240)->values[1] = instancevariable1531;
((Type_Array)objectlayout1240)->values[2] = instancevariable1532;
((Type_Array)objectlayout1240)->values[3] = instancevariable1535;
class767 = (Object)new_Class_withMeta((Object)class766, objectlayout1240, objectlayout1239);
((Type_Class)class767)->name = (Type_Symbol)symbol3935;
metaclass767 = (Object)HEADER(class767);
objectlayout1241 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1241)->values[0] = instancevariable1499;
((Type_Array)objectlayout1241)->values[1] = instancevariable1500;
((Type_Array)objectlayout1241)->values[2] = instancevariable1501;
((Type_Array)objectlayout1241)->values[3] = instancevariable1502;
((Type_Array)objectlayout1241)->values[4] = instancevariable1503;
((Type_Array)objectlayout1241)->values[5] = instancevariable1529;
symbol3916 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout1242 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1242)->values[0] = instancevariable1530;
((Type_Array)objectlayout1242)->values[1] = instancevariable1531;
((Type_Array)objectlayout1242)->values[2] = instancevariable1532;
instancevariable1544 = (Object)new_AST_InstVariable(3, L"number");
((Type_Array)objectlayout1242)->values[3] = instancevariable1544;
instancevariable1545 = (Object)new_AST_InstVariable(4, L"base");
((Type_Array)objectlayout1242)->values[4] = instancevariable1545;
class768 = (Object)new_Class_withMeta((Object)class757, objectlayout1242, objectlayout1241);
((Type_Class)class768)->name = (Type_Symbol)symbol3916;
metaclass768 = (Object)HEADER(class768);
objectlayout1243 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1243)->values[0] = instancevariable1499;
((Type_Array)objectlayout1243)->values[1] = instancevariable1500;
((Type_Array)objectlayout1243)->values[2] = instancevariable1501;
((Type_Array)objectlayout1243)->values[3] = instancevariable1502;
((Type_Array)objectlayout1243)->values[4] = instancevariable1503;
((Type_Array)objectlayout1243)->values[5] = instancevariable1529;
symbol3944 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout1244 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1244)->values[0] = instancevariable1530;
((Type_Array)objectlayout1244)->values[1] = instancevariable1531;
((Type_Array)objectlayout1244)->values[2] = instancevariable1532;
instancevariable1546 = (Object)new_AST_InstVariable(3, L"message");
((Type_Array)objectlayout1244)->values[3] = instancevariable1546;
instancevariable1547 = (Object)new_AST_InstVariable(4, L"annotations");
((Type_Array)objectlayout1244)->values[4] = instancevariable1547;
instancevariable1548 = (Object)new_AST_InstVariable(5, L"temporaries");
((Type_Array)objectlayout1244)->values[5] = instancevariable1548;
instancevariable1549 = (Object)new_AST_InstVariable(6, L"statements");
((Type_Array)objectlayout1244)->values[6] = instancevariable1549;
class769 = (Object)new_Class_withMeta((Object)class753, objectlayout1244, objectlayout1243);
((Type_Class)class769)->name = (Type_Symbol)symbol3944;
metaclass769 = (Object)HEADER(class769);
objectlayout1245 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1245)->values[0] = instancevariable1499;
((Type_Array)objectlayout1245)->values[1] = instancevariable1500;
((Type_Array)objectlayout1245)->values[2] = instancevariable1501;
((Type_Array)objectlayout1245)->values[3] = instancevariable1502;
((Type_Array)objectlayout1245)->values[4] = instancevariable1503;
((Type_Array)objectlayout1245)->values[5] = instancevariable1529;
symbol4084 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout1246 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1246)->values[0] = instancevariable1530;
((Type_Array)objectlayout1246)->values[1] = instancevariable1531;
((Type_Array)objectlayout1246)->values[2] = instancevariable1532;
((Type_Array)objectlayout1246)->values[3] = instancevariable1535;
class770 = (Object)new_Class_withMeta((Object)class758, objectlayout1246, objectlayout1245);
((Type_Class)class770)->name = (Type_Symbol)symbol4084;
metaclass770 = (Object)HEADER(class770);
objectlayout1247 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1247)->values[0] = instancevariable1499;
((Type_Array)objectlayout1247)->values[1] = instancevariable1500;
((Type_Array)objectlayout1247)->values[2] = instancevariable1501;
((Type_Array)objectlayout1247)->values[3] = instancevariable1502;
((Type_Array)objectlayout1247)->values[4] = instancevariable1503;
((Type_Array)objectlayout1247)->values[5] = instancevariable1529;
symbol3956 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout1248 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1248)->values[0] = instancevariable1530;
((Type_Array)objectlayout1248)->values[1] = instancevariable1531;
((Type_Array)objectlayout1248)->values[2] = instancevariable1532;
((Type_Array)objectlayout1248)->values[3] = instancevariable1535;
((Type_Array)objectlayout1248)->values[4] = instancevariable1536;
instancevariable1550 = (Object)new_AST_InstVariable(5, L"parameters");
((Type_Array)objectlayout1248)->values[5] = instancevariable1550;
class771 = (Object)new_Class_withMeta((Object)class759, objectlayout1248, objectlayout1247);
((Type_Class)class771)->name = (Type_Symbol)symbol3956;
metaclass771 = (Object)HEADER(class771);
objectlayout1249 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1249)->values[0] = instancevariable1499;
((Type_Array)objectlayout1249)->values[1] = instancevariable1500;
((Type_Array)objectlayout1249)->values[2] = instancevariable1501;
((Type_Array)objectlayout1249)->values[3] = instancevariable1502;
((Type_Array)objectlayout1249)->values[4] = instancevariable1503;
((Type_Array)objectlayout1249)->values[5] = instancevariable1529;
symbol3917 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout1250 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1250)->values[0] = instancevariable1530;
((Type_Array)objectlayout1250)->values[1] = instancevariable1531;
((Type_Array)objectlayout1250)->values[2] = instancevariable1532;
instancevariable1551 = (Object)new_AST_InstVariable(3, L"symbol");
((Type_Array)objectlayout1250)->values[3] = instancevariable1551;
class772 = (Object)new_Class_withMeta((Object)class757, objectlayout1250, objectlayout1249);
((Type_Class)class772)->name = (Type_Symbol)symbol3917;
metaclass772 = (Object)HEADER(class772);
objectlayout1251 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1251)->values[0] = instancevariable1499;
((Type_Array)objectlayout1251)->values[1] = instancevariable1500;
((Type_Array)objectlayout1251)->values[2] = instancevariable1501;
((Type_Array)objectlayout1251)->values[3] = instancevariable1502;
((Type_Array)objectlayout1251)->values[4] = instancevariable1503;
((Type_Array)objectlayout1251)->values[5] = instancevariable1529;
symbol4133 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout1252 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1252)->values[0] = instancevariable1530;
((Type_Array)objectlayout1252)->values[1] = instancevariable1531;
((Type_Array)objectlayout1252)->values[2] = instancevariable1532;
((Type_Array)objectlayout1252)->values[3] = instancevariable1535;
class773 = (Object)new_Class_withMeta((Object)class766, objectlayout1252, objectlayout1251);
((Type_Class)class773)->name = (Type_Symbol)symbol4133;
metaclass773 = (Object)HEADER(class773);
objectlayout1253 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1253)->values[0] = instancevariable1499;
((Type_Array)objectlayout1253)->values[1] = instancevariable1500;
((Type_Array)objectlayout1253)->values[2] = instancevariable1501;
((Type_Array)objectlayout1253)->values[3] = instancevariable1502;
((Type_Array)objectlayout1253)->values[4] = instancevariable1503;
((Type_Array)objectlayout1253)->values[5] = instancevariable1529;
symbol3918 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout1254 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1254)->values[0] = instancevariable1530;
((Type_Array)objectlayout1254)->values[1] = instancevariable1531;
((Type_Array)objectlayout1254)->values[2] = instancevariable1532;
instancevariable1552 = (Object)new_AST_InstVariable(3, L"string");
((Type_Array)objectlayout1254)->values[3] = instancevariable1552;
class774 = (Object)new_Class_withMeta((Object)class757, objectlayout1254, objectlayout1253);
((Type_Class)class774)->name = (Type_Symbol)symbol3918;
metaclass774 = (Object)HEADER(class774);
objectlayout1255 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1255)->values[0] = instancevariable1499;
((Type_Array)objectlayout1255)->values[1] = instancevariable1500;
((Type_Array)objectlayout1255)->values[2] = instancevariable1501;
((Type_Array)objectlayout1255)->values[3] = instancevariable1502;
((Type_Array)objectlayout1255)->values[4] = instancevariable1503;
((Type_Array)objectlayout1255)->values[5] = instancevariable1529;
symbol3946 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout1256 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1256)->values[0] = instancevariable1530;
((Type_Array)objectlayout1256)->values[1] = instancevariable1531;
((Type_Array)objectlayout1256)->values[2] = instancevariable1532;
instancevariable1553 = (Object)new_AST_InstVariable(3, L"expression");
((Type_Array)objectlayout1256)->values[3] = instancevariable1553;
class775 = (Object)new_Class_withMeta((Object)class763, objectlayout1256, objectlayout1255);
((Type_Class)class775)->name = (Type_Symbol)symbol3946;
metaclass775 = (Object)HEADER(class775);
objectlayout1257 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1257)->values[0] = instancevariable1499;
((Type_Array)objectlayout1257)->values[1] = instancevariable1500;
((Type_Array)objectlayout1257)->values[2] = instancevariable1501;
((Type_Array)objectlayout1257)->values[3] = instancevariable1502;
((Type_Array)objectlayout1257)->values[4] = instancevariable1503;
((Type_Array)objectlayout1257)->values[5] = instancevariable1529;
symbol3930 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout1258 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1258)->values[0] = instancevariable1530;
((Type_Array)objectlayout1258)->values[1] = instancevariable1531;
((Type_Array)objectlayout1258)->values[2] = instancevariable1532;
((Type_Array)objectlayout1258)->values[3] = instancevariable1535;
instancevariable1554 = (Object)new_AST_InstVariable(4, L"parameter");
((Type_Array)objectlayout1258)->values[4] = instancevariable1554;
class776 = (Object)new_Class_withMeta((Object)class770, objectlayout1258, objectlayout1257);
((Type_Class)class776)->name = (Type_Symbol)symbol3930;
metaclass776 = (Object)HEADER(class776);
objectlayout1259 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1259)->values[0] = instancevariable1499;
((Type_Array)objectlayout1259)->values[1] = instancevariable1500;
((Type_Array)objectlayout1259)->values[2] = instancevariable1501;
((Type_Array)objectlayout1259)->values[3] = instancevariable1502;
((Type_Array)objectlayout1259)->values[4] = instancevariable1503;
((Type_Array)objectlayout1259)->values[5] = instancevariable1529;
symbol3927 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout1260 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1260)->values[0] = instancevariable1530;
((Type_Array)objectlayout1260)->values[1] = instancevariable1531;
((Type_Array)objectlayout1260)->values[2] = instancevariable1532;
((Type_Array)objectlayout1260)->values[3] = instancevariable1535;
instancevariable1555 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1260)->values[4] = instancevariable1555;
instancevariable1556 = (Object)new_AST_InstVariable(5, L"argument");
((Type_Array)objectlayout1260)->values[5] = instancevariable1556;
class777 = (Object)new_Class_withMeta((Object)class770, objectlayout1260, objectlayout1259);
((Type_Class)class777)->name = (Type_Symbol)symbol3927;
metaclass777 = (Object)HEADER(class777);
objectlayout1261 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1261)->values[0] = instancevariable1499;
((Type_Array)objectlayout1261)->values[1] = instancevariable1500;
((Type_Array)objectlayout1261)->values[2] = instancevariable1501;
((Type_Array)objectlayout1261)->values[3] = instancevariable1502;
((Type_Array)objectlayout1261)->values[4] = instancevariable1503;
((Type_Array)objectlayout1261)->values[5] = instancevariable1529;
symbol3967 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout1262 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1262)->values[0] = instancevariable1530;
((Type_Array)objectlayout1262)->values[1] = instancevariable1531;
((Type_Array)objectlayout1262)->values[2] = instancevariable1532;
instancevariable1557 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout1262)->values[3] = instancevariable1557;
instancevariable1558 = (Object)new_AST_InstVariable(4, L"temporaries");
((Type_Array)objectlayout1262)->values[4] = instancevariable1558;
instancevariable1559 = (Object)new_AST_InstVariable(5, L"statements");
((Type_Array)objectlayout1262)->values[5] = instancevariable1559;
class778 = (Object)new_Class_withMeta((Object)class753, objectlayout1262, objectlayout1261);
((Type_Class)class778)->name = (Type_Symbol)symbol3967;
metaclass778 = (Object)HEADER(class778);
objectlayout1263 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1263)->values[0] = instancevariable1499;
((Type_Array)objectlayout1263)->values[1] = instancevariable1500;
((Type_Array)objectlayout1263)->values[2] = instancevariable1501;
((Type_Array)objectlayout1263)->values[3] = instancevariable1502;
((Type_Array)objectlayout1263)->values[4] = instancevariable1503;
((Type_Array)objectlayout1263)->values[5] = instancevariable1529;
symbol3928 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout1264 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1264)->values[0] = instancevariable1530;
((Type_Array)objectlayout1264)->values[1] = instancevariable1531;
((Type_Array)objectlayout1264)->values[2] = instancevariable1532;
((Type_Array)objectlayout1264)->values[3] = instancevariable1535;
instancevariable1560 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout1264)->values[4] = instancevariable1560;
class779 = (Object)new_Class_withMeta((Object)class766, objectlayout1264, objectlayout1263);
((Type_Class)class779)->name = (Type_Symbol)symbol3928;
metaclass779 = (Object)HEADER(class779);
objectlayout1265 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1265)->values[0] = instancevariable1499;
((Type_Array)objectlayout1265)->values[1] = instancevariable1500;
((Type_Array)objectlayout1265)->values[2] = instancevariable1501;
((Type_Array)objectlayout1265)->values[3] = instancevariable1502;
((Type_Array)objectlayout1265)->values[4] = instancevariable1503;
((Type_Array)objectlayout1265)->values[5] = instancevariable1529;
symbol3912 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout1266 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout1266)->values[0] = instancevariable1530;
((Type_Array)objectlayout1266)->values[1] = instancevariable1531;
((Type_Array)objectlayout1266)->values[2] = instancevariable1532;
instancevariable1561 = (Object)new_AST_InstVariable(3, L"literals");
((Type_Array)objectlayout1266)->values[3] = instancevariable1561;
class780 = (Object)new_Class_withMeta((Object)class757, objectlayout1266, objectlayout1265);
((Type_Class)class780)->name = (Type_Symbol)symbol3912;
metaclass780 = (Object)HEADER(class780);
objectlayout1267 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1267)->values[0] = instancevariable1499;
((Type_Array)objectlayout1267)->values[1] = instancevariable1500;
((Type_Array)objectlayout1267)->values[2] = instancevariable1501;
((Type_Array)objectlayout1267)->values[3] = instancevariable1502;
((Type_Array)objectlayout1267)->values[4] = instancevariable1503;
((Type_Array)objectlayout1267)->values[5] = instancevariable1529;
symbol3920 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout1268 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1268)->values[0] = instancevariable1530;
((Type_Array)objectlayout1268)->values[1] = instancevariable1531;
((Type_Array)objectlayout1268)->values[2] = instancevariable1532;
instancevariable1562 = (Object)new_AST_InstVariable(3, L"variable");
((Type_Array)objectlayout1268)->values[3] = instancevariable1562;
instancevariable1563 = (Object)new_AST_InstVariable(4, L"expression");
((Type_Array)objectlayout1268)->values[4] = instancevariable1563;
class781 = (Object)new_Class_withMeta((Object)class763, objectlayout1268, objectlayout1267);
((Type_Class)class781)->name = (Type_Symbol)symbol3920;
metaclass781 = (Object)HEADER(class781);
objectlayout1269 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1269)->values[0] = instancevariable1499;
((Type_Array)objectlayout1269)->values[1] = instancevariable1500;
((Type_Array)objectlayout1269)->values[2] = instancevariable1501;
((Type_Array)objectlayout1269)->values[3] = instancevariable1502;
((Type_Array)objectlayout1269)->values[4] = instancevariable1503;
symbol3997 = (Object)new_Type_Symbol_cached(L"Type");
class782 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1269);
((Type_Class)class782)->name = (Type_Symbol)symbol3997;
metaclass782 = (Object)HEADER(class782);
objectlayout1270 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1270)->values[0] = instancevariable1499;
((Type_Array)objectlayout1270)->values[1] = instancevariable1500;
((Type_Array)objectlayout1270)->values[2] = instancevariable1501;
((Type_Array)objectlayout1270)->values[3] = instancevariable1502;
((Type_Array)objectlayout1270)->values[4] = instancevariable1503;
symbol4061 = (Object)new_Type_Symbol_cached(L"String");
objectlayout1271 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1564 = (Object)new_AST_InstVariable(0, L"string");
((Type_Array)objectlayout1271)->values[0] = instancevariable1564;
class783 = (Object)new_Class_withMeta((Object)class782, objectlayout1271, objectlayout1270);
((Type_Class)class783)->name = (Type_Symbol)symbol4061;
metaclass783 = (Object)HEADER(class783);
objectlayout1272 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1272)->values[0] = instancevariable1499;
((Type_Array)objectlayout1272)->values[1] = instancevariable1500;
((Type_Array)objectlayout1272)->values[2] = instancevariable1501;
((Type_Array)objectlayout1272)->values[3] = instancevariable1502;
((Type_Array)objectlayout1272)->values[4] = instancevariable1503;
symbol4091 = (Object)new_Type_Symbol_cached(L"Character");
objectlayout1273 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1565 = (Object)new_AST_InstVariable(0, L"char");
((Type_Array)objectlayout1273)->values[0] = instancevariable1565;
class784 = (Object)new_Class_withMeta((Object)class782, objectlayout1273, objectlayout1272);
((Type_Class)class784)->name = (Type_Symbol)symbol4091;
metaclass784 = (Object)HEADER(class784);
objectlayout1274 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1274)->values[0] = instancevariable1499;
((Type_Array)objectlayout1274)->values[1] = instancevariable1500;
((Type_Array)objectlayout1274)->values[2] = instancevariable1501;
((Type_Array)objectlayout1274)->values[3] = instancevariable1502;
((Type_Array)objectlayout1274)->values[4] = instancevariable1503;
instancevariable1566 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout1274)->values[5] = instancevariable1566;
symbol3998 = (Object)new_Type_Symbol_cached(L"Nil");
class785 = (Object)new_Class_withMeta((Object)class782, empty_object_layout, objectlayout1274);
((Type_Class)class785)->name = (Type_Symbol)symbol3998;
metaclass785 = (Object)HEADER(class785);
objectlayout1275 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1275)->values[0] = instancevariable1499;
((Type_Array)objectlayout1275)->values[1] = instancevariable1500;
((Type_Array)objectlayout1275)->values[2] = instancevariable1501;
((Type_Array)objectlayout1275)->values[3] = instancevariable1502;
((Type_Array)objectlayout1275)->values[4] = instancevariable1503;
symbol4053 = (Object)new_Type_Symbol_cached(L"SmallInt");
objectlayout1276 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1567 = (Object)new_AST_InstVariable(0, L"int");
((Type_Array)objectlayout1276)->values[0] = instancevariable1567;
class786 = (Object)new_Class_withMeta((Object)class782, objectlayout1276, objectlayout1275);
((Type_Class)class786)->name = (Type_Symbol)symbol4053;
metaclass786 = (Object)HEADER(class786);
objectlayout1277 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1277)->values[0] = instancevariable1499;
((Type_Array)objectlayout1277)->values[1] = instancevariable1500;
((Type_Array)objectlayout1277)->values[2] = instancevariable1501;
((Type_Array)objectlayout1277)->values[3] = instancevariable1502;
((Type_Array)objectlayout1277)->values[4] = instancevariable1503;
instancevariable1568 = (Object)new_AST_InstVariable(5, L"symbolDictionary");
((Type_Array)objectlayout1277)->values[5] = instancevariable1568;
symbol4056 = (Object)new_Type_Symbol_cached(L"Symbol");
objectlayout1278 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable1569 = (Object)new_AST_InstVariable(0, L"symbol");
((Type_Array)objectlayout1278)->values[0] = instancevariable1569;
class787 = (Object)new_Class_withMeta((Object)class782, objectlayout1278, objectlayout1277);
((Type_Class)class787)->name = (Type_Symbol)symbol4056;
metaclass787 = (Object)HEADER(class787);
objectlayout1279 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1279)->values[0] = instancevariable1499;
((Type_Array)objectlayout1279)->values[1] = instancevariable1500;
((Type_Array)objectlayout1279)->values[2] = instancevariable1501;
((Type_Array)objectlayout1279)->values[3] = instancevariable1502;
((Type_Array)objectlayout1279)->values[4] = instancevariable1503;
((Type_Array)objectlayout1279)->values[5] = instancevariable1529;
symbol4207 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout1280 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1280)->values[0] = instancevariable1530;
((Type_Array)objectlayout1280)->values[1] = instancevariable1531;
((Type_Array)objectlayout1280)->values[2] = instancevariable1532;
instancevariable1570 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout1280)->values[3] = instancevariable1570;
instancevariable1571 = (Object)new_AST_InstVariable(4, L"scopeId");
((Type_Array)objectlayout1280)->values[4] = instancevariable1571;
instancevariable1572 = (Object)new_AST_InstVariable(5, L"localId");
((Type_Array)objectlayout1280)->values[5] = instancevariable1572;
class788 = (Object)new_Class_withMeta((Object)class753, objectlayout1280, objectlayout1279);
((Type_Class)class788)->name = (Type_Symbol)symbol4207;
metaclass788 = (Object)HEADER(class788);
objectlayout1281 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1281)->values[0] = instancevariable1499;
((Type_Array)objectlayout1281)->values[1] = instancevariable1500;
((Type_Array)objectlayout1281)->values[2] = instancevariable1501;
((Type_Array)objectlayout1281)->values[3] = instancevariable1502;
((Type_Array)objectlayout1281)->values[4] = instancevariable1503;
((Type_Array)objectlayout1281)->values[5] = instancevariable1529;
symbol4068 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout1282 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout1282)->values[0] = instancevariable1530;
((Type_Array)objectlayout1282)->values[1] = instancevariable1531;
((Type_Array)objectlayout1282)->values[2] = instancevariable1532;
((Type_Array)objectlayout1282)->values[3] = instancevariable1570;
((Type_Array)objectlayout1282)->values[4] = instancevariable1571;
((Type_Array)objectlayout1282)->values[5] = instancevariable1572;
instancevariable1573 = (Object)new_AST_InstVariable(6, L"key");
((Type_Array)objectlayout1282)->values[6] = instancevariable1573;
class789 = (Object)new_Class_withMeta((Object)class788, objectlayout1282, objectlayout1281);
((Type_Class)class789)->name = (Type_Symbol)symbol4068;
metaclass789 = (Object)HEADER(class789);
objectlayout1283 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1283)->values[0] = instancevariable1499;
((Type_Array)objectlayout1283)->values[1] = instancevariable1500;
((Type_Array)objectlayout1283)->values[2] = instancevariable1501;
((Type_Array)objectlayout1283)->values[3] = instancevariable1502;
((Type_Array)objectlayout1283)->values[4] = instancevariable1503;
((Type_Array)objectlayout1283)->values[5] = instancevariable1529;
symbol3989 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout1284 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout1284)->values[0] = instancevariable1530;
((Type_Array)objectlayout1284)->values[1] = instancevariable1531;
((Type_Array)objectlayout1284)->values[2] = instancevariable1532;
((Type_Array)objectlayout1284)->values[3] = instancevariable1570;
((Type_Array)objectlayout1284)->values[4] = instancevariable1571;
((Type_Array)objectlayout1284)->values[5] = instancevariable1572;
class790 = (Object)new_Class_withMeta((Object)class788, objectlayout1284, objectlayout1283);
((Type_Class)class790)->name = (Type_Symbol)symbol3989;
metaclass790 = (Object)HEADER(class790);
objectlayout1285 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1285)->values[0] = instancevariable1499;
((Type_Array)objectlayout1285)->values[1] = instancevariable1500;
((Type_Array)objectlayout1285)->values[2] = instancevariable1501;
((Type_Array)objectlayout1285)->values[3] = instancevariable1502;
((Type_Array)objectlayout1285)->values[4] = instancevariable1503;
symbol4037 = (Object)new_Type_Symbol_cached(L"Collection");
class791 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout1285);
((Type_Class)class791)->name = (Type_Symbol)symbol4037;
metaclass791 = (Object)HEADER(class791);
objectlayout1286 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1286)->values[0] = instancevariable1499;
((Type_Array)objectlayout1286)->values[1] = instancevariable1500;
((Type_Array)objectlayout1286)->values[2] = instancevariable1501;
((Type_Array)objectlayout1286)->values[3] = instancevariable1502;
((Type_Array)objectlayout1286)->values[4] = instancevariable1503;
symbol4217 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout1287 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable1574 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout1287)->values[0] = instancevariable1574;
instancevariable1575 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout1287)->values[1] = instancevariable1575;
class792 = (Object)new_Class_withMeta((Object)class791, objectlayout1287, objectlayout1286);
((Type_Class)class792)->name = (Type_Symbol)symbol4217;
metaclass792 = (Object)HEADER(class792);
objectlayout1288 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1288)->values[0] = instancevariable1499;
((Type_Array)objectlayout1288)->values[1] = instancevariable1500;
((Type_Array)objectlayout1288)->values[2] = instancevariable1501;
((Type_Array)objectlayout1288)->values[3] = instancevariable1502;
((Type_Array)objectlayout1288)->values[4] = instancevariable1503;
symbol4017 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout1289 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1576 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout1289)->values[0] = instancevariable1576;
instancevariable1577 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout1289)->values[1] = instancevariable1577;
instancevariable1578 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout1289)->values[2] = instancevariable1578;
class793 = (Object)new_Class_withMeta((Object)class791, objectlayout1289, objectlayout1288);
((Type_Class)class793)->name = (Type_Symbol)symbol4017;
metaclass793 = (Object)HEADER(class793);
objectlayout1290 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1290)->values[0] = instancevariable1499;
((Type_Array)objectlayout1290)->values[1] = instancevariable1500;
((Type_Array)objectlayout1290)->values[2] = instancevariable1501;
((Type_Array)objectlayout1290)->values[3] = instancevariable1502;
((Type_Array)objectlayout1290)->values[4] = instancevariable1503;
symbol4036 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class794 = (Object)new_Class_withMeta((Object)class791, empty_object_layout, objectlayout1290);
((Type_Class)class794)->name = (Type_Symbol)symbol4036;
metaclass794 = (Object)HEADER(class794);
objectlayout1291 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1291)->values[0] = instancevariable1499;
((Type_Array)objectlayout1291)->values[1] = instancevariable1500;
((Type_Array)objectlayout1291)->values[2] = instancevariable1501;
((Type_Array)objectlayout1291)->values[3] = instancevariable1502;
((Type_Array)objectlayout1291)->values[4] = instancevariable1503;
symbol4035 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class795 = (Object)new_Class_withMeta((Object)class794, empty_object_layout, objectlayout1291);
((Type_Class)class795)->name = (Type_Symbol)symbol4035;
metaclass795 = (Object)HEADER(class795);
objectlayout1292 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout1292)->values[0] = instancevariable1499;
((Type_Array)objectlayout1292)->values[1] = instancevariable1500;
((Type_Array)objectlayout1292)->values[2] = instancevariable1501;
((Type_Array)objectlayout1292)->values[3] = instancevariable1502;
((Type_Array)objectlayout1292)->values[4] = instancevariable1503;
symbol3958 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout1293 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable1579 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout1293)->values[0] = instancevariable1579;
instancevariable1580 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout1293)->values[1] = instancevariable1580;
instancevariable1581 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout1293)->values[2] = instancevariable1581;
class796 = (Object)new_Class_withMeta((Object)class794, objectlayout1293, objectlayout1292);
((Type_Class)class796)->name = (Type_Symbol)symbol3958;
metaclass796 = (Object)HEADER(class796);
classreference1319 = (Object)new_Organization_ClassReference((Type_Class)class736);

// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable3387 = (Object)new_AST_Variable_named(L"parser");
array2866 = (Object)new_Type_Array_with(1, (Object)localvariable3387);
localvariable3388 = (Object)new_AST_Variable_named(L"result");
array2867 = (Object)new_Type_Array_with(1, (Object)localvariable3388);
symbol4205 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send22349 = (Object)new_AST_Send((Object)localvariable3387, (Object)symbol4205, 1, (Object)Self);
assign2698 = (Object)new_AST_Assign((Object)localvariable3388, (Object)send22349);
symbol4230 = (Object)new_Type_Symbol_cached(L"@");
// @
send22350 = (Object)new_AST_Send((Object)instancevariable1507, (Object)symbol4230, 1, (Object)localvariable3388);
method4514 = (Object)new_AST_Method_with((Type_Array)array2866, (Type_Array)array2867, 2, assign2698, send22350);
symbol4019 = (Object)new_Type_Symbol_cached(L"doMatch:");
methodclosure4502 = (Object)new_Runtime_MethodClosure(method4514);
store_method((Type_Class)class740, (Type_Symbol)symbol4019, (Runtime_MethodClosure)methodclosure4502);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable3389 = (Object)new_AST_Variable_named(L"subCollection");
array2868 = (Object)new_Type_Array_with(1, (Object)localvariable3389);
localvariable3390 = (Object)new_AST_Variable_named(L"pattern");
localvariable3391 = (Object)new_AST_Variable_named(L"startMatch");
array2869 = (Object)new_Type_Array_with(2, (Object)localvariable3390, (Object)localvariable3391);
variable176 = (Object)new_AST_Variable_named(L"return");
array2870 = (Object)new_Type_Array_with(1, (Object)variable176);
symbol4231 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send22351 = (Object)new_AST_Send((Object)localvariable3389, (Object)symbol4231, 0);
assign2699 = (Object)new_AST_Assign((Object)localvariable3390, (Object)send22351);
assign2700 = (Object)new_AST_Assign((Object)localvariable3391, (Object)Nil_Const);
// atEnd
send22352 = (Object)new_AST_Send((Object)localvariable3390, (Object)SMB_atEnd, 0);
block1360 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22352);
// atEnd
send22353 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
// escape:
send22354 = (Object)new_AST_Send((Object)variable176, (Object)SMB_escape_, 1, (Object)False_Const);
block1361 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22354);
// ifTrue:
send22355 = (Object)new_AST_Send((Object)send22353, (Object)SMB_ifTrue_, 1, (Object)block1361);
symbol4232 = (Object)new_Type_Symbol_cached(L"next");
// next
send22356 = (Object)new_AST_Send((Object)Self, (Object)symbol4232, 0);
symbol3907 = (Object)new_Type_Symbol_cached(L"~=");
// next
send22357 = (Object)new_AST_Send((Object)localvariable3390, (Object)symbol4232, 0);
// ~=
send22358 = (Object)new_AST_Send((Object)send22356, (Object)symbol3907, 1, (Object)send22357);
// escape:
send22359 = (Object)new_AST_Send((Object)variable176, (Object)SMB_escape_, 1, (Object)False_Const);
block1362 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22359);
// ifTrue:
send22360 = (Object)new_AST_Send((Object)send22358, (Object)SMB_ifTrue_, 1, (Object)block1362);
block1363 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send22355, send22360);
// whileFalse:
send22361 = (Object)new_AST_Send((Object)block1360, (Object)SMB_whileFalse_, 1, (Object)block1363);
block1364 = (Object)new_AST_Block_with((Type_Array)array2870, (Type_Array)empty_Type_Array, 1, 4, assign2699, assign2700, send22361, True_Const);
// on:
send22362 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1364);
method4515 = (Object)new_AST_Method_with((Type_Array)array2868, (Type_Array)array2869, 1, send22362);
symbol4013 = (Object)new_Type_Symbol_cached(L"beginsWith:");
methodclosure4503 = (Object)new_Runtime_MethodClosure(method4515);
store_method((Type_Class)class740, (Type_Symbol)symbol4013, (Runtime_MethodClosure)methodclosure4503);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable3392 = (Object)new_AST_Variable_named(L"parser");
array2871 = (Object)new_Type_Array_with(1, (Object)localvariable3392);
localvariable3393 = (Object)new_AST_Variable_named(L"result");
localvariable3394 = (Object)new_AST_Variable_named(L"doCache");
array2872 = (Object)new_Type_Array_with(2, (Object)localvariable3393, (Object)localvariable3394);
variable177 = (Object)new_AST_Variable_named(L"return");
array2873 = (Object)new_Type_Array_with(1, (Object)variable177);
assign2701 = (Object)new_AST_Assign((Object)localvariable3394, (Object)True_Const);
symbol4018 = (Object)new_Type_Symbol_cached(L"bucket");
// bucket
send22363 = (Object)new_AST_Send((Object)Self, (Object)symbol4018, 0);
symbol4218 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
// doMatch:
send22364 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 1, (Object)localvariable3392);
block1365 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22364);
// at:ifAbsentPut:
send22365 = (Object)new_AST_Send((Object)send22363, (Object)symbol4218, 2, (Object)localvariable3392, (Object)block1365);
assign2702 = (Object)new_AST_Assign((Object)localvariable3393, (Object)send22365);
symbol4233 = (Object)new_Type_Symbol_cached(L"x");
// x
send22366 = (Object)new_AST_Send((Object)localvariable3393, (Object)symbol4233, 0);
assign2703 = (Object)new_AST_Assign((Object)instancevariable1507, (Object)send22366);
symbol4234 = (Object)new_Type_Symbol_cached(L"y");
// y
send22367 = (Object)new_AST_Send((Object)localvariable3393, (Object)symbol4234, 0);
// escape:
send22368 = (Object)new_AST_Send((Object)variable177, (Object)SMB_escape_, 1, (Object)send22367);
block1366 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign2702, assign2703, send22368);
// doMatch:
send22369 = (Object)new_AST_Send((Object)Self, (Object)symbol4019, 1, (Object)localvariable3392);
// y
send22370 = (Object)new_AST_Send((Object)send22369, (Object)symbol4234, 0);
// escape:
send22371 = (Object)new_AST_Send((Object)variable177, (Object)SMB_escape_, 1, (Object)send22370);
block1367 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22371);
// ifTrue:ifFalse:
send22372 = (Object)new_AST_Send((Object)localvariable3394, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1366, (Object)block1367);
block1368 = (Object)new_AST_Block_with((Type_Array)array2873, (Type_Array)empty_Type_Array, 1, 3, assign2701, send22372, Self);
// on:
send22373 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1368);
method4516 = (Object)new_AST_Method_with((Type_Array)array2871, (Type_Array)array2872, 1, send22373);
symbol4020 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
methodclosure4504 = (Object)new_Runtime_MethodClosure(method4516);
store_method((Type_Class)class740, (Type_Symbol)symbol4020, (Runtime_MethodClosure)methodclosure4504);


// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable3395 = (Object)new_AST_Variable_named(L"otherString");
array2874 = (Object)new_Type_Array_with(1, (Object)localvariable3395);
// beginsWith:
send22374 = (Object)new_AST_Send((Object)Self, (Object)symbol4013, 1, (Object)localvariable3395);
block1369 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable3395);
block1370 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send22375 = (Object)new_AST_Send((Object)send22374, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1369, (Object)block1370);
method4517 = (Object)new_AST_Method_with((Type_Array)array2874, (Type_Array)empty_Type_Array, 1, send22375);
symbol4014 = (Object)new_Type_Symbol_cached(L"scan:");
methodclosure4505 = (Object)new_Runtime_MethodClosure(method4517);
store_method((Type_Class)class740, (Type_Symbol)symbol4014, (Runtime_MethodClosure)methodclosure4505);


// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable3396 = (Object)new_AST_Variable_named(L"bucket");
array2875 = (Object)new_Type_Array_with(1, (Object)localvariable3396);
variable178 = (Object)new_AST_Variable_named(L"return");
array2876 = (Object)new_Type_Array_with(1, (Object)variable178);
smallint2370 = (Object)new_Type_SmallInt(1);
constant5206 = (Object)new_AST_Constant((Object)smallint2370);
// +
send22376 = (Object)new_AST_Send((Object)instancevariable1507, (Object)SMB__plus, 1, (Object)constant5206);
// at:
send22377 = (Object)new_AST_Send((Object)instancevariable1510, (Object)SMB_at_, 1, (Object)send22376);
assign2704 = (Object)new_AST_Assign((Object)localvariable3396, (Object)send22377);
symbol4235 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
// escape:
send22378 = (Object)new_AST_Send((Object)variable178, (Object)SMB_escape_, 1, (Object)localvariable3396);
block1371 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22378);
// ifNotNil:
send22379 = (Object)new_AST_Send((Object)localvariable3396, (Object)symbol4235, 1, (Object)block1371);
smallint2371 = (Object)new_Type_SmallInt(1);
constant5207 = (Object)new_AST_Constant((Object)smallint2371);
// +
send22380 = (Object)new_AST_Send((Object)instancevariable1507, (Object)SMB__plus, 1, (Object)constant5207);
classreference1320 = (Object)new_Organization_ClassReference((Type_Class)class793);
symbol3994 = (Object)new_Type_Symbol_cached(L"new");
// new
send22381 = (Object)new_AST_Send((Object)classreference1320, (Object)symbol3994, 0);
// at:put:
send22382 = (Object)new_AST_Send((Object)instancevariable1510, (Object)SMB_at_put_, 2, (Object)send22380, (Object)send22381);
block1372 = (Object)new_AST_Block_with((Type_Array)array2876, (Type_Array)empty_Type_Array, 1, 3, assign2704, send22379, send22382);
// on:
send22383 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1372);
method4518 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2875, 1, send22383);
methodclosure4506 = (Object)new_Runtime_MethodClosure(method4518);
store_method((Type_Class)class740, (Type_Symbol)symbol4018, (Runtime_MethodClosure)methodclosure4506);


// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
symbol4196 = (Object)new_Type_Symbol_cached(L"match:");
// match:
send22384 = (Object)new_AST_Send((Object)instancevariable1509, (Object)symbol4196, 1, (Object)Self);
method4519 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22384);
symbol4021 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
methodclosure4507 = (Object)new_Runtime_MethodClosure(method4519);
store_method((Type_Class)class740, (Type_Symbol)symbol4021, (Runtime_MethodClosure)methodclosure4507);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable3397 = (Object)new_AST_Variable_named(L"aString");
localvariable3398 = (Object)new_AST_Variable_named(L"aSeparator");
array2877 = (Object)new_Type_Array_with(2, (Object)localvariable3397, (Object)localvariable3398);
super350 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable3397);
assign2705 = (Object)new_AST_Assign((Object)instancevariable1509, (Object)localvariable3398);

// Array>>first
//first
// 	^ self at: 1.
smallint2372 = (Object)new_Type_SmallInt(1);
constant5208 = (Object)new_AST_Constant((Object)smallint2372);
// at:
send22385 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant5208);
method4520 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22385);
symbol4041 = (Object)new_Type_Symbol_cached(L"first");
methodclosure4508 = (Object)new_Runtime_MethodClosure(method4520);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4041, (Runtime_MethodClosure)methodclosure4508);


// Array>>add:
//add: anElement
// 	| result |
// 	result := self class new: self size +1.
// 	self doWithIndex: [:el :i | result at: i put: el ].
// 	result last: anElement.
// 	^ result.
localvariable3399 = (Object)new_AST_Variable_named(L"anElement");
array2878 = (Object)new_Type_Array_with(1, (Object)localvariable3399);
localvariable3400 = (Object)new_AST_Variable_named(L"result");
array2879 = (Object)new_Type_Array_with(1, (Object)localvariable3400);
// class
send22386 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol3987 = (Object)new_Type_Symbol_cached(L"new:");
// size
send22387 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2373 = (Object)new_Type_SmallInt(1);
constant5209 = (Object)new_AST_Constant((Object)smallint2373);
// +
send22388 = (Object)new_AST_Send((Object)send22387, (Object)SMB__plus, 1, (Object)constant5209);
// new:
send22389 = (Object)new_AST_Send((Object)send22386, (Object)symbol3987, 1, (Object)send22388);
assign2706 = (Object)new_AST_Assign((Object)localvariable3400, (Object)send22389);
symbol4042 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
localvariable3401 = (Object)new_AST_Variable_named(L"el");
localvariable3402 = (Object)new_AST_Variable_named(L"i");
array2880 = (Object)new_Type_Array_with(2, (Object)localvariable3401, (Object)localvariable3402);
// at:put:
send22390 = (Object)new_AST_Send((Object)localvariable3400, (Object)SMB_at_put_, 2, (Object)localvariable3402, (Object)localvariable3401);
block1373 = (Object)new_AST_Block_with((Type_Array)array2880, (Type_Array)empty_Type_Array, 1, 1, send22390);
// doWithIndex:
send22391 = (Object)new_AST_Send((Object)Self, (Object)symbol4042, 1, (Object)block1373);
symbol4047 = (Object)new_Type_Symbol_cached(L"last:");
// last:
send22392 = (Object)new_AST_Send((Object)localvariable3400, (Object)symbol4047, 1, (Object)localvariable3399);
method4521 = (Object)new_AST_Method_with((Type_Array)array2878, (Type_Array)array2879, 4, assign2706, send22391, send22392, localvariable3400);
symbol4045 = (Object)new_Type_Symbol_cached(L"add:");
methodclosure4509 = (Object)new_Runtime_MethodClosure(method4521);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4045, (Runtime_MethodClosure)methodclosure4509);


// Array>>doWithIndex:
//doWithIndex: aBlockClosure 
// 	1 to: self size do:
// 		[:index | aBlockClosure value: (self at: index) value: index]
localvariable3403 = (Object)new_AST_Variable_named(L"aBlockClosure");
array2881 = (Object)new_Type_Array_with(1, (Object)localvariable3403);
smallint2374 = (Object)new_Type_SmallInt(1);
constant5210 = (Object)new_AST_Constant((Object)smallint2374);
symbol4236 = (Object)new_Type_Symbol_cached(L"to:do:");
// size
send22393 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable3404 = (Object)new_AST_Variable_named(L"index");
array2882 = (Object)new_Type_Array_with(1, (Object)localvariable3404);
symbol4237 = (Object)new_Type_Symbol_cached(L"value:value:");
// at:
send22394 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable3404);
// value:value:
send22395 = (Object)new_AST_Send((Object)localvariable3403, (Object)symbol4237, 2, (Object)send22394, (Object)localvariable3404);
block1374 = (Object)new_AST_Block_with((Type_Array)array2882, (Type_Array)empty_Type_Array, 1, 1, send22395);
// to:do:
send22396 = (Object)new_AST_Send((Object)constant5210, (Object)symbol4236, 2, (Object)send22393, (Object)block1374);
method4522 = (Object)new_AST_Method_with((Type_Array)array2881, (Type_Array)empty_Type_Array, 2, send22396, Self);
methodclosure4510 = (Object)new_Runtime_MethodClosure(method4522);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4042, (Runtime_MethodClosure)methodclosure4510);


// Array>>initialize
//initialize 
// 	super initialize.
symbol3906 = (Object)new_Type_Symbol_cached(L"initialize");
super351 = (Object)new_AST_Super((Object)symbol3906, 0);
method4523 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super351, Self);
methodclosure4511 = (Object)new_Runtime_MethodClosure(method4523);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4511);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable3405 = (Object)new_AST_Variable_named(L"thisValue");
localvariable3406 = (Object)new_AST_Variable_named(L"binaryBlock");
array2883 = (Object)new_Type_Array_with(2, (Object)localvariable3405, (Object)localvariable3406);
localvariable3407 = (Object)new_AST_Variable_named(L"nextValue");
array2884 = (Object)new_Type_Array_with(1, (Object)localvariable3407);
assign2707 = (Object)new_AST_Assign((Object)localvariable3407, (Object)localvariable3405);
symbol4044 = (Object)new_Type_Symbol_cached(L"do:");
localvariable3408 = (Object)new_AST_Variable_named(L"each");
array2885 = (Object)new_Type_Array_with(1, (Object)localvariable3408);
// value:value:
send22397 = (Object)new_AST_Send((Object)localvariable3406, (Object)symbol4237, 2, (Object)localvariable3407, (Object)localvariable3408);
assign2708 = (Object)new_AST_Assign((Object)localvariable3407, (Object)send22397);
block1375 = (Object)new_AST_Block_with((Type_Array)array2885, (Type_Array)empty_Type_Array, 1, 1, assign2708);
// do:
send22398 = (Object)new_AST_Send((Object)Self, (Object)symbol4044, 1, (Object)block1375);
method4524 = (Object)new_AST_Method_with((Type_Array)array2883, (Type_Array)array2884, 3, assign2707, send22398, localvariable3407);
symbol4046 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure4512 = (Object)new_Runtime_MethodClosure(method4524);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4046, (Runtime_MethodClosure)methodclosure4512);


// Array>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' #( '.
// 	self do: [:each|
// 		each printOn: aStream.
// 		aStream nextPutAll: ' '
// 	].
// 	aStream nextPutAll: ')'.
localvariable3409 = (Object)new_AST_Variable_named(L"aStream");
array2886 = (Object)new_Type_Array_with(1, (Object)localvariable3409);
symbol4003 = (Object)new_Type_Symbol_cached(L"printOn:");
super352 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3409);
symbol4238 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string2450 = (Object)new_Type_String(L" #( ");
constant5211 = (Object)new_AST_Constant((Object)string2450);
// nextPutAll:
send22399 = (Object)new_AST_Send((Object)localvariable3409, (Object)symbol4238, 1, (Object)constant5211);
localvariable3410 = (Object)new_AST_Variable_named(L"each");
array2887 = (Object)new_Type_Array_with(1, (Object)localvariable3410);
// printOn:
send22400 = (Object)new_AST_Send((Object)localvariable3410, (Object)symbol4003, 1, (Object)localvariable3409);
string2451 = (Object)new_Type_String(L" ");
constant5212 = (Object)new_AST_Constant((Object)string2451);
// nextPutAll:
send22401 = (Object)new_AST_Send((Object)localvariable3409, (Object)symbol4238, 1, (Object)constant5212);
block1376 = (Object)new_AST_Block_with((Type_Array)array2887, (Type_Array)empty_Type_Array, 1, 2, send22400, send22401);
// do:
send22402 = (Object)new_AST_Send((Object)Self, (Object)symbol4044, 1, (Object)block1376);
string2452 = (Object)new_Type_String(L")");
constant5213 = (Object)new_AST_Constant((Object)string2452);
// nextPutAll:
send22403 = (Object)new_AST_Send((Object)localvariable3409, (Object)symbol4238, 1, (Object)constant5213);
method4525 = (Object)new_AST_Method_with((Type_Array)array2886, (Type_Array)empty_Type_Array, 5, super352, send22399, send22402, send22403, Self);
methodclosure4513 = (Object)new_Runtime_MethodClosure(method4525);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4513);


// Array>>=
//= other
// 	self == other ifTrue: [^ true].
// 	self class = other class ifFalse: [ ^ false].
// 	self size = other size ifFalse: [ ^ false ].
// 	1 to: self size do: [ :index|
// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].
// 	].
// 	^ true.
localvariable3411 = (Object)new_AST_Variable_named(L"other");
array2888 = (Object)new_Type_Array_with(1, (Object)localvariable3411);
variable179 = (Object)new_AST_Variable_named(L"return");
array2889 = (Object)new_Type_Array_with(1, (Object)variable179);
// ==
send22404 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable3411);
// escape:
send22405 = (Object)new_AST_Send((Object)variable179, (Object)SMB_escape_, 1, (Object)True_Const);
block1377 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22405);
// ifTrue:
send22406 = (Object)new_AST_Send((Object)send22404, (Object)SMB_ifTrue_, 1, (Object)block1377);
// class
send22407 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send22408 = (Object)new_AST_Send((Object)localvariable3411, (Object)SMB_class, 0);
// =
send22409 = (Object)new_AST_Send((Object)send22407, (Object)SMB__equal, 1, (Object)send22408);
// escape:
send22410 = (Object)new_AST_Send((Object)variable179, (Object)SMB_escape_, 1, (Object)False_Const);
block1378 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22410);
// ifFalse:
send22411 = (Object)new_AST_Send((Object)send22409, (Object)SMB_ifFalse_, 1, (Object)block1378);
// size
send22412 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// size
send22413 = (Object)new_AST_Send((Object)localvariable3411, (Object)SMB_size, 0);
// =
send22414 = (Object)new_AST_Send((Object)send22412, (Object)SMB__equal, 1, (Object)send22413);
// escape:
send22415 = (Object)new_AST_Send((Object)variable179, (Object)SMB_escape_, 1, (Object)False_Const);
block1379 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22415);
// ifFalse:
send22416 = (Object)new_AST_Send((Object)send22414, (Object)SMB_ifFalse_, 1, (Object)block1379);
smallint2375 = (Object)new_Type_SmallInt(1);
constant5214 = (Object)new_AST_Constant((Object)smallint2375);
// size
send22417 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable3412 = (Object)new_AST_Variable_named(L"index");
array2890 = (Object)new_Type_Array_with(1, (Object)localvariable3412);
// at:
send22418 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable3412);
// at:
send22419 = (Object)new_AST_Send((Object)localvariable3411, (Object)SMB_at_, 1, (Object)localvariable3412);
// =
send22420 = (Object)new_AST_Send((Object)send22418, (Object)SMB__equal, 1, (Object)send22419);
// escape:
send22421 = (Object)new_AST_Send((Object)variable179, (Object)SMB_escape_, 1, (Object)False_Const);
block1380 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22421);
// ifFalse:
send22422 = (Object)new_AST_Send((Object)send22420, (Object)SMB_ifFalse_, 1, (Object)block1380);
block1381 = (Object)new_AST_Block_with((Type_Array)array2890, (Type_Array)empty_Type_Array, 2, 1, send22422);
// to:do:
send22423 = (Object)new_AST_Send((Object)constant5214, (Object)symbol4236, 2, (Object)send22417, (Object)block1381);
block1382 = (Object)new_AST_Block_with((Type_Array)array2889, (Type_Array)empty_Type_Array, 1, 5, send22406, send22411, send22416, send22423, True_Const);
// on:
send22424 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1382);
method4526 = (Object)new_AST_Method_with((Type_Array)array2888, (Type_Array)empty_Type_Array, 1, send22424);
methodclosure4514 = (Object)new_Runtime_MethodClosure(method4526);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4514);


// Array>>first:
//first: aValue
// 	^ self at: 1 put: aValue.
localvariable3413 = (Object)new_AST_Variable_named(L"aValue");
array2891 = (Object)new_Type_Array_with(1, (Object)localvariable3413);
smallint2376 = (Object)new_Type_SmallInt(1);
constant5215 = (Object)new_AST_Constant((Object)smallint2376);
// at:put:
send22425 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant5215, (Object)localvariable3413);
method4527 = (Object)new_AST_Method_with((Type_Array)array2891, (Type_Array)empty_Type_Array, 1, send22425);
symbol4043 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure4515 = (Object)new_Runtime_MethodClosure(method4527);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4043, (Runtime_MethodClosure)methodclosure4515);


// Array>>isEmpty
//isEmpty
// 	^ self size = 0
// size
send22426 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint2377 = (Object)new_Type_SmallInt(0);
constant5216 = (Object)new_AST_Constant((Object)smallint2377);
// =
send22427 = (Object)new_AST_Send((Object)send22426, (Object)SMB__equal, 1, (Object)constant5216);
method4528 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22427);
symbol4031 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure4516 = (Object)new_Runtime_MethodClosure(method4528);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4031, (Runtime_MethodClosure)methodclosure4516);


// Array>>last:
//last: aNode
// 	^ self at: self size put: aNode.
localvariable3414 = (Object)new_AST_Variable_named(L"aNode");
array2892 = (Object)new_Type_Array_with(1, (Object)localvariable3414);
// size
send22428 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:put:
send22429 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send22428, (Object)localvariable3414);
method4529 = (Object)new_AST_Method_with((Type_Array)array2892, (Type_Array)empty_Type_Array, 1, send22429);
methodclosure4517 = (Object)new_Runtime_MethodClosure(method4529);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4047, (Runtime_MethodClosure)methodclosure4517);


// Array>>last
//last
// 	^ self at: self size.
// size
send22430 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:
send22431 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send22430);
method4530 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22431);
symbol4040 = (Object)new_Type_Symbol_cached(L"last");
methodclosure4518 = (Object)new_Runtime_MethodClosure(method4530);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4040, (Runtime_MethodClosure)methodclosure4518);


// Array>>do:
//do: aBlockClosure 
// 	1 to: self size do: 
// 		[:index | aBlockClosure value: (self at: index)]
localvariable3415 = (Object)new_AST_Variable_named(L"aBlockClosure");
array2893 = (Object)new_Type_Array_with(1, (Object)localvariable3415);
smallint2378 = (Object)new_Type_SmallInt(1);
constant5217 = (Object)new_AST_Constant((Object)smallint2378);
// size
send22432 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable3416 = (Object)new_AST_Variable_named(L"index");
array2894 = (Object)new_Type_Array_with(1, (Object)localvariable3416);
// at:
send22433 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable3416);
// value:
send22434 = (Object)new_AST_Send((Object)localvariable3415, (Object)SMB_value_, 1, (Object)send22433);
block1383 = (Object)new_AST_Block_with((Type_Array)array2894, (Type_Array)empty_Type_Array, 1, 1, send22434);
// to:do:
send22435 = (Object)new_AST_Send((Object)constant5217, (Object)symbol4236, 2, (Object)send22432, (Object)block1383);
method4531 = (Object)new_AST_Method_with((Type_Array)array2893, (Type_Array)empty_Type_Array, 2, send22435, Self);
methodclosure4519 = (Object)new_Runtime_MethodClosure(method4531);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol4044, (Runtime_MethodClosure)methodclosure4519);

classreference1321 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);
// size
send22436 = (Object)new_AST_Send((Object)localvariable3397, (Object)SMB_size, 0);
smallint2379 = (Object)new_Type_SmallInt(1);
constant5218 = (Object)new_AST_Constant((Object)smallint2379);
// +
send22437 = (Object)new_AST_Send((Object)send22436, (Object)SMB__plus, 1, (Object)constant5218);
// new:
send22438 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)send22437);
assign2709 = (Object)new_AST_Assign((Object)instancevariable1510, (Object)send22438);
method4532 = (Object)new_AST_Method_with((Type_Array)array2877, (Type_Array)empty_Type_Array, 4, super350, assign2705, assign2709, Self);
symbol4015 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure4520 = (Object)new_Runtime_MethodClosure(method4532);
store_method((Type_Class)class740, (Type_Symbol)symbol4015, (Runtime_MethodClosure)methodclosure4520);

classreference1322 = (Object)new_Organization_ClassReference((Type_Class)class740);

// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self

// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable3417 = (Object)new_AST_Variable_named(L"anObject");
array2895 = (Object)new_Type_Array_with(1, (Object)localvariable3417);
assign2710 = (Object)new_AST_Assign((Object)instancevariable1514, (Object)localvariable3417);
method4533 = (Object)new_AST_Method_with((Type_Array)array2895, (Type_Array)empty_Type_Array, 2, assign2710, Self);
symbol4223 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
methodclosure4521 = (Object)new_Runtime_MethodClosure(method4533);
store_method((Type_Class)class742, (Type_Symbol)symbol4223, (Runtime_MethodClosure)methodclosure4521);


// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable3418 = (Object)new_AST_Variable_named(L"input");
array2896 = (Object)new_Type_Array_with(1, (Object)localvariable3418);
symbol4224 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
classreference1323 = (Object)new_Organization_ClassReference((Type_Class)class796);
// new
send22439 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
// privateMatch:on:
send22440 = (Object)new_AST_Send((Object)Self, (Object)symbol4224, 2, (Object)localvariable3418, (Object)send22439);
method4534 = (Object)new_AST_Method_with((Type_Array)array2896, (Type_Array)empty_Type_Array, 1, send22440);
symbol4195 = (Object)new_Type_Symbol_cached(L"privateMatch:");
methodclosure4522 = (Object)new_Runtime_MethodClosure(method4534);
store_method((Type_Class)class742, (Type_Symbol)symbol4195, (Runtime_MethodClosure)methodclosure4522);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method4535 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4183 = (Object)new_Type_Symbol_cached(L"optional");
methodclosure4523 = (Object)new_Runtime_MethodClosure(method4535);
store_method((Type_Class)class742, (Type_Symbol)symbol4183, (Runtime_MethodClosure)methodclosure4523);


// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable3419 = (Object)new_AST_Variable_named(L"expression");
array2897 = (Object)new_Type_Array_with(1, (Object)localvariable3419);
super353 = (Object)new_AST_Super((Object)symbol3906, 0);
assign2711 = (Object)new_AST_Assign((Object)instancevariable1513, (Object)localvariable3419);
assign2712 = (Object)new_AST_Assign((Object)instancevariable1514, (Object)True_Const);
method4536 = (Object)new_AST_Method_with((Type_Array)array2897, (Type_Array)empty_Type_Array, 4, super353, assign2711, assign2712, Self);
symbol4220 = (Object)new_Type_Symbol_cached(L"initialize:");
methodclosure4524 = (Object)new_Runtime_MethodClosure(method4536);
store_method((Type_Class)class742, (Type_Symbol)symbol4220, (Runtime_MethodClosure)methodclosure4524);


// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable3420 = (Object)new_AST_Variable_named(L"input");
localvariable3421 = (Object)new_AST_Variable_named(L"result");
array2898 = (Object)new_Type_Array_with(2, (Object)localvariable3420, (Object)localvariable3421);
localvariable3422 = (Object)new_AST_Variable_named(L"match");
array2899 = (Object)new_Type_Array_with(1, (Object)localvariable3422);
// skipWhitespace
send22441 = (Object)new_AST_Send((Object)localvariable3420, (Object)symbol4021, 0);
block1384 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22441);
// ifTrue:
send22442 = (Object)new_AST_Send((Object)instancevariable1514, (Object)SMB_ifTrue_, 1, (Object)block1384);
// match:
send22443 = (Object)new_AST_Send((Object)instancevariable1513, (Object)symbol4196, 1, (Object)localvariable3420);
assign2713 = (Object)new_AST_Assign((Object)localvariable3422, (Object)send22443);
// isNil
send22444 = (Object)new_AST_Send((Object)localvariable3422, (Object)SMB_isNil, 0);
block1385 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send22442, assign2713, send22444);
// add:
send22445 = (Object)new_AST_Send((Object)localvariable3421, (Object)symbol4045, 1, (Object)localvariable3422);
block1386 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send22445);
// whileFalse:
send22446 = (Object)new_AST_Send((Object)block1385, (Object)SMB_whileFalse_, 1, (Object)block1386);
method4537 = (Object)new_AST_Method_with((Type_Array)array2898, (Type_Array)array2899, 2, send22446, localvariable3421);
methodclosure4525 = (Object)new_Runtime_MethodClosure(method4537);
store_method((Type_Class)class742, (Type_Symbol)symbol4224, (Runtime_MethodClosure)methodclosure4525);


// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method4538 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1514);
methodclosure4526 = (Object)new_Runtime_MethodClosure(method4538);
store_method((Type_Class)class742, (Type_Symbol)symbol4021, (Runtime_MethodClosure)methodclosure4526);

classreference1324 = (Object)new_Organization_ClassReference((Type_Class)class742);
// new:
send22447 = (Object)new_AST_Send((Object)classreference1324, (Object)symbol3987, 1, (Object)Self);
method4539 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22447);
symbol4185 = (Object)new_Type_Symbol_cached(L"times");
methodclosure4527 = (Object)new_Runtime_MethodClosure(method4539);
store_method((Type_Class)class741, (Type_Symbol)symbol4185, (Runtime_MethodClosure)methodclosure4527);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self

// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self

// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method4540 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4528 = (Object)new_Runtime_MethodClosure(method4540);
store_method((Type_Class)class748, (Type_Symbol)symbol4183, (Runtime_MethodClosure)methodclosure4528);


// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable3423 = (Object)new_AST_Variable_named(L"expression");
array2900 = (Object)new_Type_Array_with(1, (Object)localvariable3423);
super354 = (Object)new_AST_Super((Object)symbol3906, 0);
assign2714 = (Object)new_AST_Assign((Object)instancevariable1517, (Object)localvariable3423);
assign2715 = (Object)new_AST_Assign((Object)instancevariable1518, (Object)True_Const);
method4541 = (Object)new_AST_Method_with((Type_Array)array2900, (Type_Array)empty_Type_Array, 4, super354, assign2714, assign2715, Self);
methodclosure4529 = (Object)new_Runtime_MethodClosure(method4541);
store_method((Type_Class)class748, (Type_Symbol)symbol4220, (Runtime_MethodClosure)methodclosure4529);


// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable3424 = (Object)new_AST_Variable_named(L"input");
array2901 = (Object)new_Type_Array_with(1, (Object)localvariable3424);
variable180 = (Object)new_AST_Variable_named(L"return");
array2902 = (Object)new_Type_Array_with(1, (Object)variable180);

// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable3425 = (Object)new_AST_Variable_named(L"block");
array2903 = (Object)new_Type_Array_with(1, (Object)localvariable3425);
// value:
send22448 = (Object)new_AST_Send((Object)localvariable3425, (Object)SMB_value_, 1, (Object)instancevariable1516);
method4542 = (Object)new_AST_Method_with((Type_Array)array2903, (Type_Array)empty_Type_Array, 2, send22448, Self);
symbol4228 = (Object)new_Type_Symbol_cached(L"ifMatched:");
methodclosure4530 = (Object)new_Runtime_MethodClosure(method4542);
store_method((Type_Class)class746, (Type_Symbol)symbol4228, (Runtime_MethodClosure)methodclosure4530);


// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable3426 = (Object)new_AST_Variable_named(L"alternative");
array2904 = (Object)new_Type_Array_with(1, (Object)localvariable3426);
method4543 = (Object)new_AST_Method_with((Type_Array)array2904, (Type_Array)empty_Type_Array, 1, instancevariable1516);
symbol4227 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
methodclosure4531 = (Object)new_Runtime_MethodClosure(method4543);
store_method((Type_Class)class746, (Type_Symbol)symbol4227, (Runtime_MethodClosure)methodclosure4531);


// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable3427 = (Object)new_AST_Variable_named(L"newResult");
array2905 = (Object)new_Type_Array_with(1, (Object)localvariable3427);
assign2716 = (Object)new_AST_Assign((Object)instancevariable1516, (Object)localvariable3427);
method4544 = (Object)new_AST_Method_with((Type_Array)array2905, (Type_Array)empty_Type_Array, 2, assign2716, Self);
symbol4229 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure4532 = (Object)new_Runtime_MethodClosure(method4544);
store_method((Type_Class)class746, (Type_Symbol)symbol4229, (Runtime_MethodClosure)methodclosure4532);

classreference1325 = (Object)new_Organization_ClassReference((Type_Class)class746);
// match:
send22449 = (Object)new_AST_Send((Object)instancevariable1517, (Object)symbol4196, 1, (Object)localvariable3424);
symbol4239 = (Object)new_Type_Symbol_cached(L"ifNil:");
classreference1326 = (Object)new_Organization_ClassReference((Type_Class)class747);
// escape:
send22450 = (Object)new_AST_Send((Object)variable180, (Object)SMB_escape_, 1, (Object)classreference1326);
block1387 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22450);
// ifNil:
send22451 = (Object)new_AST_Send((Object)send22449, (Object)symbol4239, 1, (Object)block1387);
// new:
send22452 = (Object)new_AST_Send((Object)classreference1325, (Object)symbol3987, 1, (Object)send22451);
block1388 = (Object)new_AST_Block_with((Type_Array)array2902, (Type_Array)empty_Type_Array, 1, 1, send22452);
// on:
send22453 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1388);
method4545 = (Object)new_AST_Method_with((Type_Array)array2901, (Type_Array)empty_Type_Array, 1, send22453);
methodclosure4533 = (Object)new_Runtime_MethodClosure(method4545);
store_method((Type_Class)class748, (Type_Symbol)symbol4195, (Runtime_MethodClosure)methodclosure4533);

classreference1327 = (Object)new_Organization_ClassReference((Type_Class)class748);
// new:
send22454 = (Object)new_AST_Send((Object)classreference1327, (Object)symbol3987, 1, (Object)Self);
method4546 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22454);
methodclosure4534 = (Object)new_Runtime_MethodClosure(method4546);
store_method((Type_Class)class744, (Type_Symbol)symbol4183, (Runtime_MethodClosure)methodclosure4534);


// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable3428 = (Object)new_AST_Variable_named(L"input");
array2906 = (Object)new_Type_Array_with(1, (Object)localvariable3428);
localvariable3429 = (Object)new_AST_Variable_named(L"result");
localvariable3430 = (Object)new_AST_Variable_named(L"match");
array2907 = (Object)new_Type_Array_with(2, (Object)localvariable3429, (Object)localvariable3430);
variable181 = (Object)new_AST_Variable_named(L"return");
array2908 = (Object)new_Type_Array_with(1, (Object)variable181);
// new
send22455 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
assign2717 = (Object)new_AST_Assign((Object)localvariable3429, (Object)send22455);
// match:
send22456 = (Object)new_AST_Send((Object)instancevariable1513, (Object)symbol4196, 1, (Object)localvariable3428);
assign2718 = (Object)new_AST_Assign((Object)localvariable3430, (Object)send22456);
// escape:
send22457 = (Object)new_AST_Send((Object)variable181, (Object)SMB_escape_, 1, (Object)localvariable3430);
block1389 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22457);
// ifNil:
send22458 = (Object)new_AST_Send((Object)localvariable3430, (Object)symbol4239, 1, (Object)block1389);
// add:
send22459 = (Object)new_AST_Send((Object)localvariable3429, (Object)symbol4045, 1, (Object)localvariable3430);
// privateMatch:on:
send22460 = (Object)new_AST_Send((Object)Self, (Object)symbol4224, 2, (Object)localvariable3428, (Object)localvariable3429);
block1390 = (Object)new_AST_Block_with((Type_Array)array2908, (Type_Array)empty_Type_Array, 1, 5, assign2717, assign2718, send22458, send22459, send22460);
// on:
send22461 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1390);
method4547 = (Object)new_AST_Method_with((Type_Array)array2906, (Type_Array)array2907, 1, send22461);
methodclosure4535 = (Object)new_Runtime_MethodClosure(method4547);
store_method((Type_Class)class744, (Type_Symbol)symbol4195, (Runtime_MethodClosure)methodclosure4535);

classreference1328 = (Object)new_Organization_ClassReference((Type_Class)class744);
// new:
send22462 = (Object)new_AST_Send((Object)classreference1328, (Object)symbol3987, 1, (Object)Self);
method4548 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22462);
symbol4194 = (Object)new_Type_Symbol_cached(L"plus");
methodclosure4536 = (Object)new_Runtime_MethodClosure(method4548);
store_method((Type_Class)class741, (Type_Symbol)symbol4194, (Runtime_MethodClosure)methodclosure4536);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
// times
send22463 = (Object)new_AST_Send((Object)Self, (Object)symbol4185, 0);
// skipWhitespace:
send22464 = (Object)new_AST_Send((Object)send22463, (Object)symbol4223, 1, (Object)False_Const);
method4549 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22464);
symbol4186 = (Object)new_Type_Symbol_cached(L"strongTimes");
methodclosure4537 = (Object)new_Runtime_MethodClosure(method4549);
store_method((Type_Class)class741, (Type_Symbol)symbol4186, (Runtime_MethodClosure)methodclosure4537);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable3431 = (Object)new_AST_Variable_named(L"input");
array2909 = (Object)new_Type_Array_with(1, (Object)localvariable3431);
symbol4240 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send22465 = (Object)new_AST_Send((Object)Self, (Object)symbol4240, 0);
method4550 = (Object)new_AST_Method_with((Type_Array)array2909, (Type_Array)empty_Type_Array, 2, send22465, Self);
methodclosure4538 = (Object)new_Runtime_MethodClosure(method4550);
store_method((Type_Class)class741, (Type_Symbol)symbol4195, (Runtime_MethodClosure)methodclosure4538);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method4551 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4187 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure4539 = (Object)new_Runtime_MethodClosure(method4551);
store_method((Type_Class)class741, (Type_Symbol)symbol4187, (Runtime_MethodClosure)methodclosure4539);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable3432 = (Object)new_AST_Variable_named(L"expression");
array2910 = (Object)new_Type_Array_with(1, (Object)localvariable3432);

// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable3433 = (Object)new_AST_Variable_named(L"anObject");
array2911 = (Object)new_Type_Array_with(1, (Object)localvariable3433);
assign2719 = (Object)new_AST_Assign((Object)instancevariable1520, (Object)localvariable3433);
method4552 = (Object)new_AST_Method_with((Type_Array)array2911, (Type_Array)empty_Type_Array, 2, assign2719, Self);
methodclosure4540 = (Object)new_Runtime_MethodClosure(method4552);
store_method((Type_Class)class749, (Type_Symbol)symbol4223, (Runtime_MethodClosure)methodclosure4540);


// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable3434 = (Object)new_AST_Variable_named(L"child");
array2912 = (Object)new_Type_Array_with(1, (Object)localvariable3434);
symbol4189 = (Object)new_Type_Symbol_cached(L"asPEG");
// asPEG
send22466 = (Object)new_AST_Send((Object)localvariable3434, (Object)symbol4189, 0);
// add:
send22467 = (Object)new_AST_Send((Object)instancevariable1519, (Object)symbol4045, 1, (Object)send22466);
method4553 = (Object)new_AST_Method_with((Type_Array)array2912, (Type_Array)empty_Type_Array, 2, send22467, Self);
symbol4225 = (Object)new_Type_Symbol_cached(L"<&");
methodclosure4541 = (Object)new_Runtime_MethodClosure(method4553);
store_method((Type_Class)class749, (Type_Symbol)symbol4225, (Runtime_MethodClosure)methodclosure4541);


// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable3435 = (Object)new_AST_Variable_named(L"input");
array2913 = (Object)new_Type_Array_with(1, (Object)localvariable3435);
localvariable3436 = (Object)new_AST_Variable_named(L"result");
localvariable3437 = (Object)new_AST_Variable_named(L"match");
array2914 = (Object)new_Type_Array_with(2, (Object)localvariable3436, (Object)localvariable3437);
variable182 = (Object)new_AST_Variable_named(L"return");
array2915 = (Object)new_Type_Array_with(1, (Object)variable182);
// new
send22468 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
assign2720 = (Object)new_AST_Assign((Object)localvariable3436, (Object)send22468);
localvariable3438 = (Object)new_AST_Variable_named(L"child");
array2916 = (Object)new_Type_Array_with(1, (Object)localvariable3438);
// skipWhitespace
send22469 = (Object)new_AST_Send((Object)localvariable3435, (Object)symbol4021, 0);
block1391 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22469);
// ifTrue:
send22470 = (Object)new_AST_Send((Object)instancevariable1520, (Object)SMB_ifTrue_, 1, (Object)block1391);
// match:
send22471 = (Object)new_AST_Send((Object)localvariable3438, (Object)symbol4196, 1, (Object)localvariable3435);
assign2721 = (Object)new_AST_Assign((Object)localvariable3437, (Object)send22471);
// escape:
send22472 = (Object)new_AST_Send((Object)variable182, (Object)SMB_escape_, 1, (Object)localvariable3437);
block1392 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22472);
// ifNil:
send22473 = (Object)new_AST_Send((Object)localvariable3437, (Object)symbol4239, 1, (Object)block1392);
symbol4192 = (Object)new_Type_Symbol_cached(L"omit");
// omit
send22474 = (Object)new_AST_Send((Object)localvariable3438, (Object)symbol4192, 0);
// add:
send22475 = (Object)new_AST_Send((Object)localvariable3436, (Object)symbol4045, 1, (Object)localvariable3437);
block1393 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22475);
// ifFalse:
send22476 = (Object)new_AST_Send((Object)send22474, (Object)SMB_ifFalse_, 1, (Object)block1393);
block1394 = (Object)new_AST_Block_with((Type_Array)array2916, (Type_Array)empty_Type_Array, 2, 4, send22470, assign2721, send22473, send22476);
// do:
send22477 = (Object)new_AST_Send((Object)instancevariable1519, (Object)symbol4044, 1, (Object)block1394);
// size
send22478 = (Object)new_AST_Send((Object)localvariable3436, (Object)SMB_size, 0);
smallint2380 = (Object)new_Type_SmallInt(1);
constant5219 = (Object)new_AST_Constant((Object)smallint2380);
// =
send22479 = (Object)new_AST_Send((Object)send22478, (Object)SMB__equal, 1, (Object)constant5219);
// first
send22480 = (Object)new_AST_Send((Object)localvariable3436, (Object)symbol4041, 0);
// escape:
send22481 = (Object)new_AST_Send((Object)variable182, (Object)SMB_escape_, 1, (Object)send22480);
block1395 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22481);
// ifTrue:
send22482 = (Object)new_AST_Send((Object)send22479, (Object)SMB_ifTrue_, 1, (Object)block1395);
block1396 = (Object)new_AST_Block_with((Type_Array)array2915, (Type_Array)empty_Type_Array, 1, 4, assign2720, send22477, send22482, localvariable3436);
// on:
send22483 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1396);
method4554 = (Object)new_AST_Method_with((Type_Array)array2913, (Type_Array)array2914, 1, send22483);
methodclosure4542 = (Object)new_Runtime_MethodClosure(method4554);
store_method((Type_Class)class749, (Type_Symbol)symbol4195, (Runtime_MethodClosure)methodclosure4542);


// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable3439 = (Object)new_AST_Variable_named(L"theChildren");
array2917 = (Object)new_Type_Array_with(1, (Object)localvariable3439);
super355 = (Object)new_AST_Super((Object)symbol3906, 0);
assign2722 = (Object)new_AST_Assign((Object)instancevariable1519, (Object)localvariable3439);
assign2723 = (Object)new_AST_Assign((Object)instancevariable1520, (Object)True_Const);
method4555 = (Object)new_AST_Method_with((Type_Array)array2917, (Type_Array)empty_Type_Array, 4, super355, assign2722, assign2723, Self);
methodclosure4543 = (Object)new_Runtime_MethodClosure(method4555);
store_method((Type_Class)class749, (Type_Symbol)symbol4220, (Runtime_MethodClosure)methodclosure4543);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super356 = (Object)new_AST_Super((Object)symbol3906, 0);
// new
send22484 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
// initialize:
send22485 = (Object)new_AST_Send((Object)Self, (Object)symbol4220, 1, (Object)send22484);
method4556 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super356, send22485, Self);
methodclosure4544 = (Object)new_Runtime_MethodClosure(method4556);
store_method((Type_Class)class749, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4544);


// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method4557 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1520);
methodclosure4545 = (Object)new_Runtime_MethodClosure(method4557);
store_method((Type_Class)class749, (Type_Symbol)symbol4021, (Runtime_MethodClosure)methodclosure4545);

classreference1329 = (Object)new_Organization_ClassReference((Type_Class)class749);
// new
send22486 = (Object)new_AST_Send((Object)classreference1329, (Object)symbol3994, 0);
// <&
send22487 = (Object)new_AST_Send((Object)send22486, (Object)symbol4225, 1, (Object)Self);
// <&
send22488 = (Object)new_AST_Send((Object)send22487, (Object)symbol4225, 1, (Object)localvariable3432);
method4558 = (Object)new_AST_Method_with((Type_Array)array2910, (Type_Array)empty_Type_Array, 1, send22488);
methodclosure4546 = (Object)new_Runtime_MethodClosure(method4558);
store_method((Type_Class)class741, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure4546);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send22489 = (Object)new_AST_Send((Object)instancevariable1511, (Object)SMB_hash, 0);
method4559 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22489);
methodclosure4547 = (Object)new_Runtime_MethodClosure(method4559);
store_method((Type_Class)class741, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure4547);


// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable3440 = (Object)new_AST_Variable_named(L"input");
array2918 = (Object)new_Type_Array_with(1, (Object)localvariable3440);
localvariable3441 = (Object)new_AST_Variable_named(L"position");
localvariable3442 = (Object)new_AST_Variable_named(L"match");
array2919 = (Object)new_Type_Array_with(2, (Object)localvariable3441, (Object)localvariable3442);
symbol4241 = (Object)new_Type_Symbol_cached(L"position");
// position
send22490 = (Object)new_AST_Send((Object)localvariable3440, (Object)symbol4241, 0);
assign2724 = (Object)new_AST_Assign((Object)localvariable3441, (Object)send22490);
// privateMatch:
send22491 = (Object)new_AST_Send((Object)Self, (Object)symbol4195, 1, (Object)localvariable3440);
assign2725 = (Object)new_AST_Assign((Object)localvariable3442, (Object)send22491);
symbol4242 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send22492 = (Object)new_AST_Send((Object)localvariable3440, (Object)symbol4242, 1, (Object)localvariable3441);
block1397 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send22492);
// ifNil:
send22493 = (Object)new_AST_Send((Object)localvariable3442, (Object)symbol4239, 1, (Object)block1397);
method4560 = (Object)new_AST_Method_with((Type_Array)array2918, (Type_Array)array2919, 4, assign2724, assign2725, send22493, localvariable3442);
methodclosure4548 = (Object)new_Runtime_MethodClosure(method4560);
store_method((Type_Class)class741, (Type_Symbol)symbol4196, (Runtime_MethodClosure)methodclosure4548);


// PEGExpression>>name
//name
// 	^ name
method4561 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1511);
methodclosure4549 = (Object)new_Runtime_MethodClosure(method4561);
store_method((Type_Class)class741, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4549);


// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
// optional
send22494 = (Object)new_AST_Send((Object)Self, (Object)symbol4183, 0);
// skipWhitespace:
send22495 = (Object)new_AST_Send((Object)send22494, (Object)symbol4223, 1, (Object)False_Const);
method4562 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22495);
symbol4197 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure4550 = (Object)new_Runtime_MethodClosure(method4562);
store_method((Type_Class)class741, (Type_Symbol)symbol4197, (Runtime_MethodClosure)methodclosure4550);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method4563 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4551 = (Object)new_Runtime_MethodClosure(method4563);
store_method((Type_Class)class741, (Type_Symbol)symbol4189, (Runtime_MethodClosure)methodclosure4551);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable3443 = (Object)new_AST_Variable_named(L"bool");
array2920 = (Object)new_Type_Array_with(1, (Object)localvariable3443);
assign2726 = (Object)new_AST_Assign((Object)instancevariable1512, (Object)localvariable3443);
method4564 = (Object)new_AST_Method_with((Type_Array)array2920, (Type_Array)empty_Type_Array, 2, assign2726, Self);
symbol4181 = (Object)new_Type_Symbol_cached(L"omit:");
methodclosure4552 = (Object)new_Runtime_MethodClosure(method4564);
store_method((Type_Class)class741, (Type_Symbol)symbol4181, (Runtime_MethodClosure)methodclosure4552);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign2727 = (Object)new_AST_Assign((Object)instancevariable1512, (Object)False_Const);
method4565 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign2727, Self);
methodclosure4553 = (Object)new_Runtime_MethodClosure(method4565);
store_method((Type_Class)class741, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4553);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable3444 = (Object)new_AST_Variable_named(L"other");
array2921 = (Object)new_Type_Array_with(1, (Object)localvariable3444);
// &
send22496 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable3444);
// skipWhitespace:
send22497 = (Object)new_AST_Send((Object)send22496, (Object)symbol4223, 1, (Object)False_Const);
method4566 = (Object)new_AST_Method_with((Type_Array)array2921, (Type_Array)empty_Type_Array, 1, send22497);
symbol4190 = (Object)new_Type_Symbol_cached(L"&&");
methodclosure4554 = (Object)new_Runtime_MethodClosure(method4566);
store_method((Type_Class)class741, (Type_Symbol)symbol4190, (Runtime_MethodClosure)methodclosure4554);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable3445 = (Object)new_AST_Variable_named(L"expression");
array2922 = (Object)new_Type_Array_with(1, (Object)localvariable3445);

// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable3446 = (Object)new_AST_Variable_named(L"newChildren");
array2923 = (Object)new_Type_Array_with(1, (Object)localvariable3446);
super357 = (Object)new_AST_Super((Object)symbol3906, 0);
assign2728 = (Object)new_AST_Assign((Object)instancevariable1515, (Object)localvariable3446);
method4567 = (Object)new_AST_Method_with((Type_Array)array2923, (Type_Array)empty_Type_Array, 3, super357, assign2728, Self);
methodclosure4555 = (Object)new_Runtime_MethodClosure(method4567);
store_method((Type_Class)class743, (Type_Symbol)symbol4220, (Runtime_MethodClosure)methodclosure4555);


// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
super358 = (Object)new_AST_Super((Object)symbol3906, 0);
// new
send22498 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
// initialize:
send22499 = (Object)new_AST_Send((Object)Self, (Object)symbol4220, 1, (Object)send22498);
method4568 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super358, send22499, Self);
methodclosure4556 = (Object)new_Runtime_MethodClosure(method4568);
store_method((Type_Class)class743, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4556);


// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable3447 = (Object)new_AST_Variable_named(L"child");
array2924 = (Object)new_Type_Array_with(1, (Object)localvariable3447);
// asPEG
send22500 = (Object)new_AST_Send((Object)localvariable3447, (Object)symbol4189, 0);
// add:
send22501 = (Object)new_AST_Send((Object)instancevariable1515, (Object)symbol4045, 1, (Object)send22500);
method4569 = (Object)new_AST_Method_with((Type_Array)array2924, (Type_Array)empty_Type_Array, 2, send22501, Self);
symbol4206 = (Object)new_Type_Symbol_cached(L"<=");
methodclosure4557 = (Object)new_Runtime_MethodClosure(method4569);
store_method((Type_Class)class743, (Type_Symbol)symbol4206, (Runtime_MethodClosure)methodclosure4557);


// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable3448 = (Object)new_AST_Variable_named(L"input");
array2925 = (Object)new_Type_Array_with(1, (Object)localvariable3448);
localvariable3449 = (Object)new_AST_Variable_named(L"match");
array2926 = (Object)new_Type_Array_with(1, (Object)localvariable3449);
variable183 = (Object)new_AST_Variable_named(L"return");
array2927 = (Object)new_Type_Array_with(1, (Object)variable183);
localvariable3450 = (Object)new_AST_Variable_named(L"child");
array2928 = (Object)new_Type_Array_with(1, (Object)localvariable3450);
// match:
send22502 = (Object)new_AST_Send((Object)localvariable3450, (Object)symbol4196, 1, (Object)localvariable3448);
assign2729 = (Object)new_AST_Assign((Object)localvariable3449, (Object)send22502);
// escape:
send22503 = (Object)new_AST_Send((Object)variable183, (Object)SMB_escape_, 1, (Object)localvariable3449);
block1398 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22503);
// ifNotNil:
send22504 = (Object)new_AST_Send((Object)localvariable3449, (Object)symbol4235, 1, (Object)block1398);
block1399 = (Object)new_AST_Block_with((Type_Array)array2928, (Type_Array)empty_Type_Array, 2, 2, assign2729, send22504);
// do:
send22505 = (Object)new_AST_Send((Object)instancevariable1515, (Object)symbol4044, 1, (Object)block1399);
block1400 = (Object)new_AST_Block_with((Type_Array)array2927, (Type_Array)empty_Type_Array, 1, 2, send22505, Nil_Const);
// on:
send22506 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1400);
method4570 = (Object)new_AST_Method_with((Type_Array)array2925, (Type_Array)array2926, 1, send22506);
methodclosure4558 = (Object)new_Runtime_MethodClosure(method4570);
store_method((Type_Class)class743, (Type_Symbol)symbol4195, (Runtime_MethodClosure)methodclosure4558);

classreference1330 = (Object)new_Organization_ClassReference((Type_Class)class743);
// new
send22507 = (Object)new_AST_Send((Object)classreference1330, (Object)symbol3994, 0);
// <=
send22508 = (Object)new_AST_Send((Object)send22507, (Object)symbol4206, 1, (Object)Self);
// <=
send22509 = (Object)new_AST_Send((Object)send22508, (Object)symbol4206, 1, (Object)localvariable3445);
method4571 = (Object)new_AST_Method_with((Type_Array)array2922, (Type_Array)empty_Type_Array, 1, send22509);
methodclosure4559 = (Object)new_Runtime_MethodClosure(method4571);
store_method((Type_Class)class741, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure4559);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable184 = (Object)new_AST_Variable_named(L"return");
array2929 = (Object)new_Type_Array_with(1, (Object)variable184);
symbol4198 = (Object)new_Type_Symbol_cached(L"printString");
super359 = (Object)new_AST_Super((Object)symbol4198, 0);
// escape:
send22510 = (Object)new_AST_Send((Object)variable184, (Object)SMB_escape_, 1, (Object)super359);
block1401 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22510);
// ifNil:
send22511 = (Object)new_AST_Send((Object)instancevariable1511, (Object)symbol4239, 1, (Object)block1401);
string2453 = (Object)new_Type_String(L"parser (");
constant5220 = (Object)new_AST_Constant((Object)string2453);
// ,
send22512 = (Object)new_AST_Send((Object)constant5220, (Object)SMB__concat, 1, (Object)instancevariable1511);
string2454 = (Object)new_Type_String(L")");
constant5221 = (Object)new_AST_Constant((Object)string2454);
// ,
send22513 = (Object)new_AST_Send((Object)send22512, (Object)SMB__concat, 1, (Object)constant5221);
block1402 = (Object)new_AST_Block_with((Type_Array)array2929, (Type_Array)empty_Type_Array, 1, 2, send22511, send22513);
// on:
send22514 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1402);
method4572 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22514);
methodclosure4560 = (Object)new_Runtime_MethodClosure(method4572);
store_method((Type_Class)class741, (Type_Symbol)symbol4198, (Runtime_MethodClosure)methodclosure4560);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
// plus
send22515 = (Object)new_AST_Send((Object)Self, (Object)symbol4194, 0);
// skipWhitespace:
send22516 = (Object)new_AST_Send((Object)send22515, (Object)symbol4223, 1, (Object)False_Const);
method4573 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22516);
symbol4200 = (Object)new_Type_Symbol_cached(L"strongPlus");
methodclosure4561 = (Object)new_Runtime_MethodClosure(method4573);
store_method((Type_Class)class741, (Type_Symbol)symbol4200, (Runtime_MethodClosure)methodclosure4561);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable3451 = (Object)new_AST_Variable_named(L"input");
array2930 = (Object)new_Type_Array_with(1, (Object)localvariable3451);
symbol4243 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send22517 = (Object)new_AST_Send((Object)Self, (Object)symbol4243, 0);
symbol4244 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send22518 = (Object)new_AST_Send((Object)classreference1331, (Object)symbol4244, 0);
block1403 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send22518);
// ifTrue:
send22519 = (Object)new_AST_Send((Object)send22517, (Object)SMB_ifTrue_, 1, (Object)block1403);
method4574 = (Object)new_AST_Method_with((Type_Array)array2930, (Type_Array)empty_Type_Array, 2, send22519, Self);
symbol4191 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure4562 = (Object)new_Runtime_MethodClosure(method4574);
store_method((Type_Class)class741, (Type_Symbol)symbol4191, (Runtime_MethodClosure)methodclosure4562);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send22520 = (Object)new_AST_Send((Object)classreference1327, (Object)symbol3987, 1, (Object)Self);
method4575 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22520);
methodclosure4563 = (Object)new_Runtime_MethodClosure(method4575);
store_method((Type_Class)class741, (Type_Symbol)symbol4183, (Runtime_MethodClosure)methodclosure4563);


// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable3452 = (Object)new_AST_Variable_named(L"aName");
array2931 = (Object)new_Type_Array_with(1, (Object)localvariable3452);
assign2730 = (Object)new_AST_Assign((Object)instancevariable1511, (Object)localvariable3452);
method4576 = (Object)new_AST_Method_with((Type_Array)array2931, (Type_Array)empty_Type_Array, 2, assign2730, Self);
symbol4071 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure4564 = (Object)new_Runtime_MethodClosure(method4576);
store_method((Type_Class)class741, (Type_Symbol)symbol4071, (Runtime_MethodClosure)methodclosure4564);


// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable3453 = (Object)new_AST_Variable_named(L"input");
array2932 = (Object)new_Type_Array_with(1, (Object)localvariable3453);
// debug
send22521 = (Object)new_AST_Send((Object)Self, (Object)symbol4243, 0);
localvariable3454 = (Object)new_AST_Variable_named(L"receiver");
array2933 = (Object)new_Type_Array_with(1, (Object)localvariable3454);
symbol4245 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send22522 = (Object)new_AST_Send((Object)localvariable3454, (Object)symbol4245, 0);
symbol4246 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send22523 = (Object)new_AST_Send((Object)localvariable3454, (Object)symbol4246, 0);
block1404 = (Object)new_AST_Block_with((Type_Array)array2933, (Type_Array)empty_Type_Array, 2, 2, send22522, send22523);
// value:
send22524 = (Object)new_AST_Send((Object)block1404, (Object)SMB_value_, 1, (Object)classreference1331);
block1405 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send22524);
// ifTrue:
send22525 = (Object)new_AST_Send((Object)send22521, (Object)SMB_ifTrue_, 1, (Object)block1405);
method4577 = (Object)new_AST_Method_with((Type_Array)array2932, (Type_Array)empty_Type_Array, 2, send22525, Self);
symbol4201 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure4565 = (Object)new_Runtime_MethodClosure(method4577);
store_method((Type_Class)class741, (Type_Symbol)symbol4201, (Runtime_MethodClosure)methodclosure4565);


// PEGExpression>>omit
//omit
// 	^ omit
method4578 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1512);
methodclosure4566 = (Object)new_Runtime_MethodClosure(method4578);
store_method((Type_Class)class741, (Type_Symbol)symbol4192, (Runtime_MethodClosure)methodclosure4566);

classreference1331 = (Object)new_Organization_ClassReference((Type_Class)class741);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable3455 = (Object)new_AST_Variable_named(L"alternative");
array2934 = (Object)new_Type_Array_with(1, (Object)localvariable3455);
// subclassResponsibility
send22526 = (Object)new_AST_Send((Object)Self, (Object)symbol4240, 0);
method4579 = (Object)new_AST_Method_with((Type_Array)array2934, (Type_Array)empty_Type_Array, 2, send22526, Self);
methodclosure4567 = (Object)new_Runtime_MethodClosure(method4579);
store_method((Type_Class)class745, (Type_Symbol)symbol4227, (Runtime_MethodClosure)methodclosure4567);

classreference1332 = (Object)new_Organization_ClassReference((Type_Class)class745);

// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable3456 = (Object)new_AST_Variable_named(L"input");
array2935 = (Object)new_Type_Array_with(1, (Object)localvariable3456);
localvariable3457 = (Object)new_AST_Variable_named(L"match");
array2936 = (Object)new_Type_Array_with(1, (Object)localvariable3457);
variable185 = (Object)new_AST_Variable_named(L"return");
array2937 = (Object)new_Type_Array_with(1, (Object)variable185);
// match:
send22527 = (Object)new_AST_Send((Object)instancevariable1521, (Object)symbol4196, 1, (Object)localvariable3456);
assign2731 = (Object)new_AST_Assign((Object)localvariable3457, (Object)send22527);
symbol4247 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block1406 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable3457);
// escape:
send22528 = (Object)new_AST_Send((Object)variable185, (Object)SMB_escape_, 1, (Object)localvariable3457);
block1407 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22528);
// ifNil:
send22529 = (Object)new_AST_Send((Object)instancevariable1522, (Object)symbol4239, 1, (Object)block1407);
// value:
send22530 = (Object)new_AST_Send((Object)instancevariable1522, (Object)SMB_value_, 1, (Object)localvariable3457);
block1408 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send22529, send22530);
// ifNil:ifNotNil:
send22531 = (Object)new_AST_Send((Object)localvariable3457, (Object)symbol4247, 2, (Object)block1406, (Object)block1408);
block1409 = (Object)new_AST_Block_with((Type_Array)array2937, (Type_Array)empty_Type_Array, 1, 2, assign2731, send22531);
// on:
send22532 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1409);
method4580 = (Object)new_AST_Method_with((Type_Array)array2935, (Type_Array)array2936, 1, send22532);
methodclosure4568 = (Object)new_Runtime_MethodClosure(method4580);
store_method((Type_Class)class750, (Type_Symbol)symbol4205, (Runtime_MethodClosure)methodclosure4568);


// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable3458 = (Object)new_AST_Variable_named(L"aBlock");
array2938 = (Object)new_Type_Array_with(1, (Object)localvariable3458);
assign2732 = (Object)new_AST_Assign((Object)instancevariable1522, (Object)localvariable3458);
method4581 = (Object)new_AST_Method_with((Type_Array)array2938, (Type_Array)empty_Type_Array, 2, assign2732, Self);
symbol4204 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure4569 = (Object)new_Runtime_MethodClosure(method4581);
store_method((Type_Class)class750, (Type_Symbol)symbol4204, (Runtime_MethodClosure)methodclosure4569);


// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable3459 = (Object)new_AST_Variable_named(L"aSeparator");
array2939 = (Object)new_Type_Array_with(1, (Object)localvariable3459);
assign2733 = (Object)new_AST_Assign((Object)instancevariable1524, (Object)localvariable3459);
method4582 = (Object)new_AST_Method_with((Type_Array)array2939, (Type_Array)empty_Type_Array, 2, assign2733, Self);
symbol4202 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure4570 = (Object)new_Runtime_MethodClosure(method4582);
store_method((Type_Class)class750, (Type_Symbol)symbol4202, (Runtime_MethodClosure)methodclosure4570);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super360 = (Object)new_AST_Super((Object)symbol3906, 0);
// class
send22533 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol4248 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send22534 = (Object)new_AST_Send((Object)send22533, (Object)symbol4248, 0);
assign2734 = (Object)new_AST_Assign((Object)instancevariable1524, (Object)send22534);
method4583 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super360, assign2734, Self);
methodclosure4571 = (Object)new_Runtime_MethodClosure(method4583);
store_method((Type_Class)class750, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4571);


// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable3460 = (Object)new_AST_Variable_named(L"theExpression");
array2940 = (Object)new_Type_Array_with(1, (Object)localvariable3460);
// asPEG
send22535 = (Object)new_AST_Send((Object)localvariable3460, (Object)symbol4189, 0);
assign2735 = (Object)new_AST_Assign((Object)instancevariable1521, (Object)send22535);
method4584 = (Object)new_AST_Method_with((Type_Array)array2940, (Type_Array)empty_Type_Array, 2, assign2735, Self);
methodclosure4572 = (Object)new_Runtime_MethodClosure(method4584);
store_method((Type_Class)class750, (Type_Symbol)symbol4206, (Runtime_MethodClosure)methodclosure4572);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable3461 = (Object)new_AST_Variable_named(L"input");
array2941 = (Object)new_Type_Array_with(1, (Object)localvariable3461);
localvariable3462 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable3463 = (Object)new_AST_Variable_named(L"result");
array2942 = (Object)new_Type_Array_with(2, (Object)localvariable3462, (Object)localvariable3463);
// on:separator:
send22536 = (Object)new_AST_Send((Object)classreference1322, (Object)symbol4015, 2, (Object)localvariable3461, (Object)instancevariable1524);
assign2736 = (Object)new_AST_Assign((Object)localvariable3462, (Object)send22536);
// match:
send22537 = (Object)new_AST_Send((Object)Self, (Object)symbol4196, 1, (Object)localvariable3462);
assign2737 = (Object)new_AST_Assign((Object)localvariable3463, (Object)send22537);
method4585 = (Object)new_AST_Method_with((Type_Array)array2941, (Type_Array)array2942, 3, assign2736, assign2737, localvariable3463);
symbol4203 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure4573 = (Object)new_Runtime_MethodClosure(method4585);
store_method((Type_Class)class750, (Type_Symbol)symbol4203, (Runtime_MethodClosure)methodclosure4573);


// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable3464 = (Object)new_AST_Variable_named(L"input");
array2943 = (Object)new_Type_Array_with(1, (Object)localvariable3464);
localvariable3465 = (Object)new_AST_Variable_named(L"result");
array2944 = (Object)new_Type_Array_with(1, (Object)localvariable3465);
// memoizeMatch:
send22538 = (Object)new_AST_Send((Object)localvariable3464, (Object)symbol4020, 1, (Object)Self);
assign2738 = (Object)new_AST_Assign((Object)localvariable3465, (Object)send22538);
method4586 = (Object)new_AST_Method_with((Type_Array)array2943, (Type_Array)array2944, 2, assign2738, localvariable3465);
methodclosure4574 = (Object)new_Runtime_MethodClosure(method4586);
store_method((Type_Class)class750, (Type_Symbol)symbol4196, (Runtime_MethodClosure)methodclosure4574);

classreference1333 = (Object)new_Organization_ClassReference((Type_Class)class750);

// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3466 = (Object)new_AST_Variable_named(L"parser");
localvariable3467 = (Object)new_AST_Variable_named(L"string");
localvariable3468 = (Object)new_AST_Variable_named(L"result");
array2945 = (Object)new_Type_Array_with(3, (Object)localvariable3466, (Object)localvariable3467, (Object)localvariable3468);
symbol4249 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send22539 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4249, 0);
assign2739 = (Object)new_AST_Assign((Object)localvariable3466, (Object)send22539);
string2455 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5222 = (Object)new_AST_Constant((Object)string2455);
// on:
send22540 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5222);
assign2740 = (Object)new_AST_Assign((Object)localvariable3467, (Object)send22540);
// match:
send22541 = (Object)new_AST_Send((Object)localvariable3466, (Object)symbol4196, 1, (Object)localvariable3467);
symbol4250 = (Object)new_Type_Symbol_cached(L"should");
// should
send22542 = (Object)new_AST_Send((Object)send22541, (Object)symbol4250, 0);
symbol4251 = (Object)new_Type_Symbol_cached(L"be");
// be
send22543 = (Object)new_AST_Send((Object)send22542, (Object)symbol4251, 0);
// isNil
send22544 = (Object)new_AST_Send((Object)send22543, (Object)SMB_isNil, 0);
string2456 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant5223 = (Object)new_AST_Constant((Object)string2456);
// on:
send22545 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5223);
assign2741 = (Object)new_AST_Assign((Object)localvariable3467, (Object)send22545);
// match:
send22546 = (Object)new_AST_Send((Object)localvariable3466, (Object)symbol4196, 1, (Object)localvariable3467);
assign2742 = (Object)new_AST_Assign((Object)localvariable3468, (Object)send22546);
// class
send22547 = (Object)new_AST_Send((Object)localvariable3468, (Object)SMB_class, 0);
// should
send22548 = (Object)new_AST_Send((Object)send22547, (Object)symbol4250, 0);

// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable3469 = (Object)new_AST_Variable_named(L"anObject");
array2946 = (Object)new_Type_Array_with(1, (Object)localvariable3469);
assign2743 = (Object)new_AST_Assign((Object)instancevariable1562, (Object)localvariable3469);
method4587 = (Object)new_AST_Method_with((Type_Array)array2946, (Type_Array)empty_Type_Array, 2, assign2743, Self);
symbol4067 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure4575 = (Object)new_Runtime_MethodClosure(method4587);
store_method((Type_Class)class781, (Type_Symbol)symbol4067, (Runtime_MethodClosure)methodclosure4575);


// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method4588 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1563);
symbol4064 = (Object)new_Type_Symbol_cached(L"expression");
methodclosure4576 = (Object)new_Runtime_MethodClosure(method4588);
store_method((Type_Class)class781, (Type_Symbol)symbol4064, (Runtime_MethodClosure)methodclosure4576);


// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable3470 = (Object)new_AST_Variable_named(L"anObject");
array2947 = (Object)new_Type_Array_with(1, (Object)localvariable3470);
assign2744 = (Object)new_AST_Assign((Object)instancevariable1563, (Object)localvariable3470);
method4589 = (Object)new_AST_Method_with((Type_Array)array2947, (Type_Array)empty_Type_Array, 2, assign2744, Self);
symbol4065 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure4577 = (Object)new_Runtime_MethodClosure(method4589);
store_method((Type_Class)class781, (Type_Symbol)symbol4065, (Runtime_MethodClosure)methodclosure4577);


// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method4590 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1562);
symbol4066 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure4578 = (Object)new_Runtime_MethodClosure(method4590);
store_method((Type_Class)class781, (Type_Symbol)symbol4066, (Runtime_MethodClosure)methodclosure4578);

classreference1334 = (Object)new_Organization_ClassReference((Type_Class)class781);
// =
send22549 = (Object)new_AST_Send((Object)send22548, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22550 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4066, 0);
// class
send22551 = (Object)new_AST_Send((Object)send22550, (Object)SMB_class, 0);
// should
send22552 = (Object)new_AST_Send((Object)send22551, (Object)symbol4250, 0);

// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable3471 = (Object)new_AST_Variable_named(L"anObject");
array2948 = (Object)new_Type_Array_with(1, (Object)localvariable3471);
symbol3992 = (Object)new_Type_Symbol_cached(L"layout");
// layout
send22553 = (Object)new_AST_Send((Object)Self, (Object)symbol3992, 0);
symbol4252 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send22554 = (Object)new_AST_Send((Object)localvariable3471, (Object)symbol3992, 0);
// combineWith:
send22555 = (Object)new_AST_Send((Object)send22553, (Object)symbol4252, 1, (Object)send22554);
method4591 = (Object)new_AST_Method_with((Type_Array)array2948, (Type_Array)empty_Type_Array, 2, send22555, Self);
symbol4072 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure4579 = (Object)new_Runtime_MethodClosure(method4591);
store_method((Type_Class)class755, (Type_Symbol)symbol4072, (Runtime_MethodClosure)methodclosure4579);


// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name

// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable3472 = (Object)new_AST_Variable_named(L"anObject");
array2949 = (Object)new_Type_Array_with(1, (Object)localvariable3472);
assign2745 = (Object)new_AST_Assign((Object)instancevariable1573, (Object)localvariable3472);
method4592 = (Object)new_AST_Method_with((Type_Array)array2949, (Type_Array)empty_Type_Array, 2, assign2745, Self);
symbol4215 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure4580 = (Object)new_Runtime_MethodClosure(method4592);
store_method((Type_Class)class789, (Type_Symbol)symbol4215, (Runtime_MethodClosure)methodclosure4580);


// LocalVariable>>key
//key
// 	^ key
method4593 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1573);
symbol4216 = (Object)new_Type_Symbol_cached(L"key");
methodclosure4581 = (Object)new_Runtime_MethodClosure(method4593);
store_method((Type_Class)class789, (Type_Symbol)symbol4216, (Runtime_MethodClosure)methodclosure4581);

classreference1335 = (Object)new_Organization_ClassReference((Type_Class)class789);
// new
send22556 = (Object)new_AST_Send((Object)classreference1335, (Object)symbol3994, 0);
// name
send22557 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name:
send22558 = (Object)new_AST_Send((Object)send22556, (Object)symbol4071, 1, (Object)send22557);
method4594 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22558);
symbol4069 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure4582 = (Object)new_Runtime_MethodClosure(method4594);
store_method((Type_Class)class755, (Type_Symbol)symbol4069, (Runtime_MethodClosure)methodclosure4582);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super361 = (Object)new_AST_Super((Object)symbol3906, 0);
method4595 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super361, Self);
methodclosure4583 = (Object)new_Runtime_MethodClosure(method4595);
store_method((Type_Class)class755, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4583);


// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable3473 = (Object)new_AST_Variable_named(L"aStream");
array2950 = (Object)new_Type_Array_with(1, (Object)localvariable3473);
super362 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3473);
localvariable3474 = (Object)new_AST_Variable_named(L"receiver");
array2951 = (Object)new_Type_Array_with(1, (Object)localvariable3474);
string2457 = (Object)new_Type_String(L"(");
constant5224 = (Object)new_AST_Constant((Object)string2457);
// nextPutAll:
send22559 = (Object)new_AST_Send((Object)localvariable3474, (Object)symbol4238, 1, (Object)constant5224);
// name
send22560 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// nextPutAll:
send22561 = (Object)new_AST_Send((Object)localvariable3474, (Object)symbol4238, 1, (Object)send22560);
string2458 = (Object)new_Type_String(L")");
constant5225 = (Object)new_AST_Constant((Object)string2458);
// nextPutAll:
send22562 = (Object)new_AST_Send((Object)localvariable3474, (Object)symbol4238, 1, (Object)constant5225);
block1410 = (Object)new_AST_Block_with((Type_Array)array2951, (Type_Array)empty_Type_Array, 1, 3, send22559, send22561, send22562);
// value:
send22563 = (Object)new_AST_Send((Object)block1410, (Object)SMB_value_, 1, (Object)localvariable3473);
method4596 = (Object)new_AST_Method_with((Type_Array)array2950, (Type_Array)empty_Type_Array, 3, super362, send22563, Self);
methodclosure4584 = (Object)new_Runtime_MethodClosure(method4596);
store_method((Type_Class)class755, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4584);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable3475 = (Object)new_AST_Variable_named(L"other");
array2952 = (Object)new_Type_Array_with(1, (Object)localvariable3475);
// name
send22564 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name
send22565 = (Object)new_AST_Send((Object)localvariable3475, (Object)SMB_name, 0);
// =
send22566 = (Object)new_AST_Send((Object)send22564, (Object)SMB__equal, 1, (Object)send22565);
method4597 = (Object)new_AST_Method_with((Type_Array)array2952, (Type_Array)empty_Type_Array, 1, send22566);
methodclosure4585 = (Object)new_Runtime_MethodClosure(method4597);
store_method((Type_Class)class755, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4585);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable3476 = (Object)new_AST_Variable_named(L"anObject");
array2953 = (Object)new_Type_Array_with(1, (Object)localvariable3476);
// layout
send22567 = (Object)new_AST_Send((Object)Self, (Object)symbol3992, 0);
symbol4253 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send22568 = (Object)new_AST_Send((Object)localvariable3476, (Object)symbol3992, 0);
// isSameTypeAs:
send22569 = (Object)new_AST_Send((Object)send22567, (Object)symbol4253, 1, (Object)send22568);
method4598 = (Object)new_AST_Method_with((Type_Array)array2953, (Type_Array)empty_Type_Array, 1, send22569);
symbol4070 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure4586 = (Object)new_Runtime_MethodClosure(method4598);
store_method((Type_Class)class755, (Type_Symbol)symbol4070, (Runtime_MethodClosure)methodclosure4586);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable3477 = (Object)new_AST_Variable_named(L"anObject");
array2954 = (Object)new_Type_Array_with(1, (Object)localvariable3477);
assign2746 = (Object)new_AST_Assign((Object)instancevariable1533, (Object)localvariable3477);
method4599 = (Object)new_AST_Method_with((Type_Array)array2954, (Type_Array)empty_Type_Array, 2, assign2746, Self);
methodclosure4587 = (Object)new_Runtime_MethodClosure(method4599);
store_method((Type_Class)class755, (Type_Symbol)symbol4071, (Runtime_MethodClosure)methodclosure4587);


// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send22570 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// hash
send22571 = (Object)new_AST_Send((Object)send22570, (Object)SMB_hash, 0);
method4600 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22571);
methodclosure4588 = (Object)new_Runtime_MethodClosure(method4600);
store_method((Type_Class)class755, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure4588);


// ASTVariable>>name
//name
// 	^ name
method4601 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1533);
methodclosure4589 = (Object)new_Runtime_MethodClosure(method4601);
store_method((Type_Class)class755, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4589);

classreference1336 = (Object)new_Organization_ClassReference((Type_Class)class755);
// =
send22572 = (Object)new_AST_Send((Object)send22552, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22573 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4066, 0);
// name
send22574 = (Object)new_AST_Send((Object)send22573, (Object)SMB_name, 0);
// should
send22575 = (Object)new_AST_Send((Object)send22574, (Object)symbol4250, 0);
string2459 = (Object)new_Type_String(L"a");
constant5226 = (Object)new_AST_Constant((Object)string2459);
// =
send22576 = (Object)new_AST_Send((Object)send22575, (Object)SMB__equal, 1, (Object)constant5226);
// expression
send22577 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4064, 0);
assign2747 = (Object)new_AST_Assign((Object)localvariable3468, (Object)send22577);
// class
send22578 = (Object)new_AST_Send((Object)localvariable3468, (Object)SMB_class, 0);
// should
send22579 = (Object)new_AST_Send((Object)send22578, (Object)symbol4250, 0);
// =
send22580 = (Object)new_AST_Send((Object)send22579, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22581 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4066, 0);
// class
send22582 = (Object)new_AST_Send((Object)send22581, (Object)SMB_class, 0);
// should
send22583 = (Object)new_AST_Send((Object)send22582, (Object)symbol4250, 0);
// =
send22584 = (Object)new_AST_Send((Object)send22583, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22585 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4066, 0);
// name
send22586 = (Object)new_AST_Send((Object)send22585, (Object)SMB_name, 0);
// should
send22587 = (Object)new_AST_Send((Object)send22586, (Object)symbol4250, 0);
string2460 = (Object)new_Type_String(L"b");
constant5227 = (Object)new_AST_Constant((Object)string2460);
// =
send22588 = (Object)new_AST_Send((Object)send22587, (Object)SMB__equal, 1, (Object)constant5227);
// expression
send22589 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4064, 0);
assign2748 = (Object)new_AST_Assign((Object)localvariable3468, (Object)send22589);
// class
send22590 = (Object)new_AST_Send((Object)localvariable3468, (Object)SMB_class, 0);
// should
send22591 = (Object)new_AST_Send((Object)send22590, (Object)symbol4250, 0);
// =
send22592 = (Object)new_AST_Send((Object)send22591, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22593 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4066, 0);
// class
send22594 = (Object)new_AST_Send((Object)send22593, (Object)SMB_class, 0);
// should
send22595 = (Object)new_AST_Send((Object)send22594, (Object)symbol4250, 0);
// =
send22596 = (Object)new_AST_Send((Object)send22595, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22597 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4066, 0);
// name
send22598 = (Object)new_AST_Send((Object)send22597, (Object)SMB_name, 0);
// should
send22599 = (Object)new_AST_Send((Object)send22598, (Object)symbol4250, 0);
string2461 = (Object)new_Type_String(L"c");
constant5228 = (Object)new_AST_Constant((Object)string2461);
// =
send22600 = (Object)new_AST_Send((Object)send22599, (Object)SMB__equal, 1, (Object)constant5228);
// expression
send22601 = (Object)new_AST_Send((Object)localvariable3468, (Object)symbol4064, 0);
// class
send22602 = (Object)new_AST_Send((Object)send22601, (Object)SMB_class, 0);
// should
send22603 = (Object)new_AST_Send((Object)send22602, (Object)symbol4250, 0);

// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable3478 = (Object)new_AST_Variable_named(L"anObject");
array2955 = (Object)new_Type_Array_with(1, (Object)localvariable3478);
assign2749 = (Object)new_AST_Assign((Object)instancevariable1537, (Object)localvariable3478);
method4602 = (Object)new_AST_Method_with((Type_Array)array2955, (Type_Array)empty_Type_Array, 2, assign2749, Self);
symbol4080 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure4590 = (Object)new_Runtime_MethodClosure(method4602);
store_method((Type_Class)class760, (Type_Symbol)symbol4080, (Runtime_MethodClosure)methodclosure4590);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method4603 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1538);
symbol4008 = (Object)new_Type_Symbol_cached(L"arguments");
methodclosure4591 = (Object)new_Runtime_MethodClosure(method4603);
store_method((Type_Class)class760, (Type_Symbol)symbol4008, (Runtime_MethodClosure)methodclosure4591);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable3479 = (Object)new_AST_Variable_named(L"anObject");
array2956 = (Object)new_Type_Array_with(1, (Object)localvariable3479);
assign2750 = (Object)new_AST_Assign((Object)instancevariable1538, (Object)localvariable3479);
method4604 = (Object)new_AST_Method_with((Type_Array)array2956, (Type_Array)empty_Type_Array, 2, assign2750, Self);
symbol4081 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure4592 = (Object)new_Runtime_MethodClosure(method4604);
store_method((Type_Class)class760, (Type_Symbol)symbol4081, (Runtime_MethodClosure)methodclosure4592);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super363 = (Object)new_AST_Super((Object)symbol3906, 0);
// new
send22604 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
assign2751 = (Object)new_AST_Assign((Object)instancevariable1538, (Object)send22604);
method4605 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super363, assign2751, Self);
methodclosure4593 = (Object)new_Runtime_MethodClosure(method4605);
store_method((Type_Class)class760, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4593);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// arguments
send22605 = (Object)new_AST_Send((Object)Self, (Object)symbol4008, 0);
symbol4254 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable3480 = (Object)new_AST_Variable_named(L"el");
array2957 = (Object)new_Type_Array_with(1, (Object)localvariable3480);
symbol3903 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
// isReturnExpression
send22606 = (Object)new_AST_Send((Object)localvariable3480, (Object)symbol3903, 0);
symbol4255 = (Object)new_Type_Symbol_cached(L"or:");
symbol4025 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
// hasReturnExpression
send22607 = (Object)new_AST_Send((Object)localvariable3480, (Object)symbol4025, 0);
block1411 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22607);
// or:
send22608 = (Object)new_AST_Send((Object)send22606, (Object)symbol4255, 1, (Object)block1411);
block1412 = (Object)new_AST_Block_with((Type_Array)array2957, (Type_Array)empty_Type_Array, 1, 1, send22608);
// anySatisfy:
send22609 = (Object)new_AST_Send((Object)send22605, (Object)symbol4254, 1, (Object)block1412);
method4606 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22609);
methodclosure4594 = (Object)new_Runtime_MethodClosure(method4606);
store_method((Type_Class)class760, (Type_Symbol)symbol4025, (Runtime_MethodClosure)methodclosure4594);


// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method4607 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1537);
symbol4082 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure4595 = (Object)new_Runtime_MethodClosure(method4607);
store_method((Type_Class)class760, (Type_Symbol)symbol4082, (Runtime_MethodClosure)methodclosure4595);

classreference1337 = (Object)new_Organization_ClassReference((Type_Class)class760);
// =
send22610 = (Object)new_AST_Send((Object)send22603, (Object)SMB__equal, 1, (Object)classreference1337);
method4608 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2945, 18, assign2739, assign2740, send22544, assign2741, assign2742, send22549, send22572, send22576, assign2747, send22580, send22584, send22588, assign2748, send22592, send22596, send22600, send22610, Self);
symbol3932 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure4596 = (Object)new_Runtime_MethodClosure(method4608);
store_method((Type_Class)class751, (Type_Symbol)symbol3932, (Runtime_MethodClosure)methodclosure4596);


// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method4609 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol3960 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure4597 = (Object)new_Runtime_MethodClosure(method4609);
store_method((Type_Class)class751, (Type_Symbol)symbol3960, (Runtime_MethodClosure)methodclosure4597);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable3481 = (Object)new_AST_Variable_named(L"parser");
localvariable3482 = (Object)new_AST_Variable_named(L"string");
localvariable3483 = (Object)new_AST_Variable_named(L"result");
localvariable3484 = (Object)new_AST_Variable_named(L"arg");
array2958 = (Object)new_Type_Array_with(4, (Object)localvariable3481, (Object)localvariable3482, (Object)localvariable3483, (Object)localvariable3484);
symbol4256 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send22611 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4256, 0);
assign2752 = (Object)new_AST_Assign((Object)localvariable3481, (Object)send22611);
string2462 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5229 = (Object)new_AST_Constant((Object)string2462);
// on:
send22612 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5229);
assign2753 = (Object)new_AST_Assign((Object)localvariable3482, (Object)send22612);
// match:
send22613 = (Object)new_AST_Send((Object)localvariable3481, (Object)symbol4196, 1, (Object)localvariable3482);
assign2754 = (Object)new_AST_Assign((Object)localvariable3483, (Object)send22613);
// class
send22614 = (Object)new_AST_Send((Object)localvariable3483, (Object)SMB_class, 0);
// should
send22615 = (Object)new_AST_Send((Object)send22614, (Object)symbol4250, 0);
// =
send22616 = (Object)new_AST_Send((Object)send22615, (Object)SMB__equal, 1, (Object)classreference1337);
symbol4078 = (Object)new_Type_Symbol_cached(L"keywords");
// keywords
send22617 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4078, 0);
// asArray
send22618 = (Object)new_AST_Send((Object)send22617, (Object)SMB_asArray, 0);
// should
send22619 = (Object)new_AST_Send((Object)send22618, (Object)symbol4250, 0);
localvariable3485 = (Object)new_AST_Variable_named(L"receiver");
array2959 = (Object)new_Type_Array_with(1, (Object)localvariable3485);
smallint2381 = (Object)new_Type_SmallInt(1);
constant5230 = (Object)new_AST_Constant((Object)smallint2381);
string2463 = (Object)new_Type_String(L"abc");
constant5231 = (Object)new_AST_Constant((Object)string2463);
// at:put:
send22620 = (Object)new_AST_Send((Object)localvariable3485, (Object)SMB_at_put_, 2, (Object)constant5230, (Object)constant5231);
smallint2382 = (Object)new_Type_SmallInt(2);
constant5232 = (Object)new_AST_Constant((Object)smallint2382);
string2464 = (Object)new_Type_String(L"def");
constant5233 = (Object)new_AST_Constant((Object)string2464);
// at:put:
send22621 = (Object)new_AST_Send((Object)localvariable3485, (Object)SMB_at_put_, 2, (Object)constant5232, (Object)constant5233);
smallint2383 = (Object)new_Type_SmallInt(3);
constant5234 = (Object)new_AST_Constant((Object)smallint2383);
string2465 = (Object)new_Type_String(L"ghi");
constant5235 = (Object)new_AST_Constant((Object)string2465);
// at:put:
send22622 = (Object)new_AST_Send((Object)localvariable3485, (Object)SMB_at_put_, 2, (Object)constant5234, (Object)constant5235);
symbol3904 = (Object)new_Type_Symbol_cached(L"yourself");
// yourself
send22623 = (Object)new_AST_Send((Object)localvariable3485, (Object)symbol3904, 0);
block1413 = (Object)new_AST_Block_with((Type_Array)array2959, (Type_Array)empty_Type_Array, 1, 4, send22620, send22621, send22622, send22623);
smallint2384 = (Object)new_Type_SmallInt(3);
constant5236 = (Object)new_AST_Constant((Object)smallint2384);
// new:
send22624 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5236);
// value:
send22625 = (Object)new_AST_Send((Object)block1413, (Object)SMB_value_, 1, (Object)send22624);
// =
send22626 = (Object)new_AST_Send((Object)send22619, (Object)SMB__equal, 1, (Object)send22625);
symbol4007 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send22627 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4007, 0);
// class
send22628 = (Object)new_AST_Send((Object)send22627, (Object)SMB_class, 0);
// should
send22629 = (Object)new_AST_Send((Object)send22628, (Object)symbol4250, 0);

// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super364 = (Object)new_AST_Super((Object)symbol3906, 0);
// new
send22630 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
assign2755 = (Object)new_AST_Assign((Object)instancevariable1536, (Object)send22630);
method4610 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super364, assign2755, Self);
methodclosure4598 = (Object)new_Runtime_MethodClosure(method4610);
store_method((Type_Class)class759, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4598);


// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method4611 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1536);
methodclosure4599 = (Object)new_Runtime_MethodClosure(method4611);
store_method((Type_Class)class759, (Type_Symbol)symbol4078, (Runtime_MethodClosure)methodclosure4599);


// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable3486 = (Object)new_AST_Variable_named(L"anObject");
array2960 = (Object)new_Type_Array_with(1, (Object)localvariable3486);
assign2756 = (Object)new_AST_Assign((Object)instancevariable1536, (Object)localvariable3486);
method4612 = (Object)new_AST_Method_with((Type_Array)array2960, (Type_Array)empty_Type_Array, 2, assign2756, Self);
symbol4079 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure4600 = (Object)new_Runtime_MethodClosure(method4612);
store_method((Type_Class)class759, (Type_Symbol)symbol4079, (Runtime_MethodClosure)methodclosure4600);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol4257 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string2466 = (Object)new_Type_String(L":");
constant5237 = (Object)new_AST_Constant((Object)string2466);
// joinUsing:
send22631 = (Object)new_AST_Send((Object)instancevariable1536, (Object)symbol4257, 1, (Object)constant5237);
string2467 = (Object)new_Type_String(L":");
constant5238 = (Object)new_AST_Constant((Object)string2467);
// ,
send22632 = (Object)new_AST_Send((Object)send22631, (Object)SMB__concat, 1, (Object)constant5238);
method4613 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22632);
symbol4077 = (Object)new_Type_Symbol_cached(L"selectorName");
methodclosure4601 = (Object)new_Runtime_MethodClosure(method4613);
store_method((Type_Class)class759, (Type_Symbol)symbol4077, (Runtime_MethodClosure)methodclosure4601);

classreference1338 = (Object)new_Organization_ClassReference((Type_Class)class759);
// =
send22633 = (Object)new_AST_Send((Object)send22629, (Object)SMB__equal, 1, (Object)classreference1338);
// selector
send22634 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4007, 0);
// printString
send22635 = (Object)new_AST_Send((Object)send22634, (Object)symbol4198, 0);
// should
send22636 = (Object)new_AST_Send((Object)send22635, (Object)symbol4250, 0);
string2468 = (Object)new_Type_String(L"abc:def:ghi:");
constant5239 = (Object)new_AST_Constant((Object)string2468);
// =
send22637 = (Object)new_AST_Send((Object)send22636, (Object)SMB__equal, 1, (Object)constant5239);
// arguments
send22638 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4008, 0);
// first
send22639 = (Object)new_AST_Send((Object)send22638, (Object)symbol4041, 0);
assign2757 = (Object)new_AST_Assign((Object)localvariable3484, (Object)send22639);
// class
send22640 = (Object)new_AST_Send((Object)localvariable3484, (Object)SMB_class, 0);
// should
send22641 = (Object)new_AST_Send((Object)send22640, (Object)symbol4250, 0);

// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable3487 = (Object)new_AST_Variable_named(L"anObject");
array2961 = (Object)new_Type_Array_with(1, (Object)localvariable3487);
assign2758 = (Object)new_AST_Assign((Object)instancevariable1545, (Object)localvariable3487);
method4614 = (Object)new_AST_Method_with((Type_Array)array2961, (Type_Array)empty_Type_Array, 2, assign2758, Self);
symbol4049 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure4602 = (Object)new_Runtime_MethodClosure(method4614);
store_method((Type_Class)class768, (Type_Symbol)symbol4049, (Runtime_MethodClosure)methodclosure4602);


// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger

// SmallInt>>int
//int
// 	^ int
method4615 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1567);
symbol4213 = (Object)new_Type_Symbol_cached(L"int");
methodclosure4603 = (Object)new_Runtime_MethodClosure(method4615);
store_method((Type_Class)class786, (Type_Symbol)symbol4213, (Runtime_MethodClosure)methodclosure4603);


// SmallInt>>int:
//int: anObject
// 	int := anObject
localvariable3488 = (Object)new_AST_Variable_named(L"anObject");
array2962 = (Object)new_Type_Array_with(1, (Object)localvariable3488);
assign2759 = (Object)new_AST_Assign((Object)instancevariable1567, (Object)localvariable3488);
method4616 = (Object)new_AST_Method_with((Type_Array)array2962, (Type_Array)empty_Type_Array, 2, assign2759, Self);
symbol4214 = (Object)new_Type_Symbol_cached(L"int:");
methodclosure4604 = (Object)new_Runtime_MethodClosure(method4616);
store_method((Type_Class)class786, (Type_Symbol)symbol4214, (Runtime_MethodClosure)methodclosure4604);


// SmallInt>>=
//= other
// 	^ self class = other class and: [ self int = other int ]
localvariable3489 = (Object)new_AST_Variable_named(L"other");
array2963 = (Object)new_Type_Array_with(1, (Object)localvariable3489);
// class
send22642 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send22643 = (Object)new_AST_Send((Object)localvariable3489, (Object)SMB_class, 0);
// =
send22644 = (Object)new_AST_Send((Object)send22642, (Object)SMB__equal, 1, (Object)send22643);
symbol4258 = (Object)new_Type_Symbol_cached(L"and:");
// int
send22645 = (Object)new_AST_Send((Object)Self, (Object)symbol4213, 0);
// int
send22646 = (Object)new_AST_Send((Object)localvariable3489, (Object)symbol4213, 0);
// =
send22647 = (Object)new_AST_Send((Object)send22645, (Object)SMB__equal, 1, (Object)send22646);
block1414 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send22647);
// and:
send22648 = (Object)new_AST_Send((Object)send22644, (Object)symbol4258, 1, (Object)block1414);
method4617 = (Object)new_AST_Method_with((Type_Array)array2963, (Type_Array)empty_Type_Array, 1, send22648);
methodclosure4605 = (Object)new_Runtime_MethodClosure(method4617);
store_method((Type_Class)class786, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4605);

classreference1339 = (Object)new_Organization_ClassReference((Type_Class)class786);
// new
send22649 = (Object)new_AST_Send((Object)classreference1339, (Object)symbol3994, 0);
symbol4050 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send22650 = (Object)new_AST_Send((Object)Self, (Object)symbol4050, 0);
// int:
send22651 = (Object)new_AST_Send((Object)send22649, (Object)symbol4214, 1, (Object)send22650);
method4618 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22651);
symbol4054 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure4606 = (Object)new_Runtime_MethodClosure(method4618);
store_method((Type_Class)class768, (Type_Symbol)symbol4054, (Runtime_MethodClosure)methodclosure4606);


// ASTNumber>>base
//base
// 	^ base
method4619 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1545);
symbol4051 = (Object)new_Type_Symbol_cached(L"base");
methodclosure4607 = (Object)new_Runtime_MethodClosure(method4619);
store_method((Type_Class)class768, (Type_Symbol)symbol4051, (Runtime_MethodClosure)methodclosure4607);


// ASTNumber>>number
//number
// 	^ number
method4620 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1544);
symbol4048 = (Object)new_Type_Symbol_cached(L"number");
methodclosure4608 = (Object)new_Runtime_MethodClosure(method4620);
store_method((Type_Class)class768, (Type_Symbol)symbol4048, (Runtime_MethodClosure)methodclosure4608);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable3490 = (Object)new_AST_Variable_named(L"aStream");
array2964 = (Object)new_Type_Array_with(1, (Object)localvariable3490);
// number
send22652 = (Object)new_AST_Send((Object)Self, (Object)symbol4048, 0);
// nextPutAll:
send22653 = (Object)new_AST_Send((Object)localvariable3490, (Object)symbol4238, 1, (Object)send22652);
method4621 = (Object)new_AST_Method_with((Type_Array)array2964, (Type_Array)empty_Type_Array, 2, send22653, Self);
methodclosure4609 = (Object)new_Runtime_MethodClosure(method4621);
store_method((Type_Class)class768, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4609);


// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable3491 = (Object)new_AST_Variable_named(L"anObject");
array2965 = (Object)new_Type_Array_with(1, (Object)localvariable3491);
assign2760 = (Object)new_AST_Assign((Object)instancevariable1544, (Object)localvariable3491);
method4622 = (Object)new_AST_Method_with((Type_Array)array2965, (Type_Array)empty_Type_Array, 2, assign2760, Self);
symbol4052 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure4610 = (Object)new_Runtime_MethodClosure(method4622);
store_method((Type_Class)class768, (Type_Symbol)symbol4052, (Runtime_MethodClosure)methodclosure4610);


// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
// base
send22654 = (Object)new_AST_Send((Object)Self, (Object)symbol4051, 0);
string2469 = (Object)new_Type_String(L"r");
constant5240 = (Object)new_AST_Constant((Object)string2469);
// ,
send22655 = (Object)new_AST_Send((Object)send22654, (Object)SMB__concat, 1, (Object)constant5240);
// number
send22656 = (Object)new_AST_Send((Object)Self, (Object)symbol4048, 0);
// ,
send22657 = (Object)new_AST_Send((Object)send22655, (Object)SMB__concat, 1, (Object)send22656);
symbol4259 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send22658 = (Object)new_AST_Send((Object)send22657, (Object)symbol4259, 0);
// asInteger
send22659 = (Object)new_AST_Send((Object)send22658, (Object)symbol4050, 0);
method4623 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22659);
methodclosure4611 = (Object)new_Runtime_MethodClosure(method4623);
store_method((Type_Class)class768, (Type_Symbol)symbol4050, (Runtime_MethodClosure)methodclosure4611);

classreference1340 = (Object)new_Organization_ClassReference((Type_Class)class768);
// =
send22660 = (Object)new_AST_Send((Object)send22641, (Object)SMB__equal, 1, (Object)classreference1340);
// arguments
send22661 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4008, 0);
smallint2385 = (Object)new_Type_SmallInt(2);
constant5241 = (Object)new_AST_Constant((Object)smallint2385);
// at:
send22662 = (Object)new_AST_Send((Object)send22661, (Object)SMB_at_, 1, (Object)constant5241);
assign2761 = (Object)new_AST_Assign((Object)localvariable3484, (Object)send22662);
// class
send22663 = (Object)new_AST_Send((Object)localvariable3484, (Object)SMB_class, 0);
// should
send22664 = (Object)new_AST_Send((Object)send22663, (Object)symbol4250, 0);

// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable3492 = (Object)new_AST_Variable_named(L"anObject");
array2966 = (Object)new_Type_Array_with(1, (Object)localvariable3492);
assign2762 = (Object)new_AST_Assign((Object)instancevariable1555, (Object)localvariable3492);
method4624 = (Object)new_AST_Method_with((Type_Array)array2966, (Type_Array)empty_Type_Array, 2, assign2762, Self);
methodclosure4612 = (Object)new_Runtime_MethodClosure(method4624);
store_method((Type_Class)class777, (Type_Symbol)symbol4080, (Runtime_MethodClosure)methodclosure4612);


// ASTBinaryExpression>>argument
//argument
// 	^ argument
method4625 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1556);
symbol4086 = (Object)new_Type_Symbol_cached(L"argument");
methodclosure4613 = (Object)new_Runtime_MethodClosure(method4625);
store_method((Type_Class)class777, (Type_Symbol)symbol4086, (Runtime_MethodClosure)methodclosure4613);


// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	outer argument: receiver.
// 	receiver := outer
localvariable3493 = (Object)new_AST_Variable_named(L"outer");
array2967 = (Object)new_Type_Array_with(1, (Object)localvariable3493);
symbol4085 = (Object)new_Type_Symbol_cached(L"argument:");
// argument:
send22665 = (Object)new_AST_Send((Object)localvariable3493, (Object)symbol4085, 1, (Object)instancevariable1555);
assign2763 = (Object)new_AST_Assign((Object)instancevariable1555, (Object)localvariable3493);
method4626 = (Object)new_AST_Method_with((Type_Array)array2967, (Type_Array)empty_Type_Array, 3, send22665, assign2763, Self);
symbol4024 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
methodclosure4614 = (Object)new_Runtime_MethodClosure(method4626);
store_method((Type_Class)class777, (Type_Symbol)symbol4024, (Runtime_MethodClosure)methodclosure4614);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable3494 = (Object)new_AST_Variable_named(L"anObject");
array2968 = (Object)new_Type_Array_with(1, (Object)localvariable3494);
assign2764 = (Object)new_AST_Assign((Object)instancevariable1556, (Object)localvariable3494);
method4627 = (Object)new_AST_Method_with((Type_Array)array2968, (Type_Array)empty_Type_Array, 2, assign2764, Self);
methodclosure4615 = (Object)new_Runtime_MethodClosure(method4627);
store_method((Type_Class)class777, (Type_Symbol)symbol4085, (Runtime_MethodClosure)methodclosure4615);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super365 = (Object)new_AST_Super((Object)symbol3906, 0);
method4628 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super365, Self);
methodclosure4616 = (Object)new_Runtime_MethodClosure(method4628);
store_method((Type_Class)class777, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4616);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable3495 = (Object)new_AST_Variable_named(L"aStream");
array2969 = (Object)new_Type_Array_with(1, (Object)localvariable3495);
// receiver
send22666 = (Object)new_AST_Send((Object)Self, (Object)symbol4082, 0);
// printOn:
send22667 = (Object)new_AST_Send((Object)send22666, (Object)symbol4003, 1, (Object)localvariable3495);
symbol4260 = (Object)new_Type_Symbol_cached(L"space");
// space
send22668 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol4260, 0);
// nextPutAll:
send22669 = (Object)new_AST_Send((Object)localvariable3495, (Object)symbol4238, 1, (Object)send22668);
super366 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3495);
// space
send22670 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol4260, 0);
// nextPutAll:
send22671 = (Object)new_AST_Send((Object)localvariable3495, (Object)symbol4238, 1, (Object)send22670);
// argument
send22672 = (Object)new_AST_Send((Object)Self, (Object)symbol4086, 0);
// printOn:
send22673 = (Object)new_AST_Send((Object)send22672, (Object)symbol4003, 1, (Object)localvariable3495);
method4629 = (Object)new_AST_Method_with((Type_Array)array2969, (Type_Array)empty_Type_Array, 6, send22667, send22669, super366, send22671, send22673, Self);
methodclosure4617 = (Object)new_Runtime_MethodClosure(method4629);
store_method((Type_Class)class777, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4617);


// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method4630 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1555);
methodclosure4618 = (Object)new_Runtime_MethodClosure(method4630);
store_method((Type_Class)class777, (Type_Symbol)symbol4082, (Runtime_MethodClosure)methodclosure4618);

classreference1341 = (Object)new_Organization_ClassReference((Type_Class)class777);
// =
send22674 = (Object)new_AST_Send((Object)send22664, (Object)SMB__equal, 1, (Object)classreference1341);
// arguments
send22675 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4008, 0);
smallint2386 = (Object)new_Type_SmallInt(3);
constant5242 = (Object)new_AST_Constant((Object)smallint2386);
// at:
send22676 = (Object)new_AST_Send((Object)send22675, (Object)SMB_at_, 1, (Object)constant5242);
assign2765 = (Object)new_AST_Assign((Object)localvariable3484, (Object)send22676);
// class
send22677 = (Object)new_AST_Send((Object)localvariable3484, (Object)SMB_class, 0);
// should
send22678 = (Object)new_AST_Send((Object)send22677, (Object)symbol4250, 0);

// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method4631 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1560);
methodclosure4619 = (Object)new_Runtime_MethodClosure(method4631);
store_method((Type_Class)class779, (Type_Symbol)symbol4082, (Runtime_MethodClosure)methodclosure4619);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable3496 = (Object)new_AST_Variable_named(L"aStream");
array2970 = (Object)new_Type_Array_with(1, (Object)localvariable3496);
// receiver
send22679 = (Object)new_AST_Send((Object)Self, (Object)symbol4082, 0);
// printOn:
send22680 = (Object)new_AST_Send((Object)send22679, (Object)symbol4003, 1, (Object)localvariable3496);
// space
send22681 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol4260, 0);
// nextPutAll:
send22682 = (Object)new_AST_Send((Object)localvariable3496, (Object)symbol4238, 1, (Object)send22681);
super367 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3496);
method4632 = (Object)new_AST_Method_with((Type_Array)array2970, (Type_Array)empty_Type_Array, 4, send22680, send22682, super367, Self);
methodclosure4620 = (Object)new_Runtime_MethodClosure(method4632);
store_method((Type_Class)class779, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4620);


// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable3497 = (Object)new_AST_Variable_named(L"anObject");
array2971 = (Object)new_Type_Array_with(1, (Object)localvariable3497);
assign2766 = (Object)new_AST_Assign((Object)instancevariable1560, (Object)localvariable3497);
method4633 = (Object)new_AST_Method_with((Type_Array)array2971, (Type_Array)empty_Type_Array, 2, assign2766, Self);
methodclosure4621 = (Object)new_Runtime_MethodClosure(method4633);
store_method((Type_Class)class779, (Type_Symbol)symbol4080, (Runtime_MethodClosure)methodclosure4621);

classreference1342 = (Object)new_Organization_ClassReference((Type_Class)class779);
// =
send22683 = (Object)new_AST_Send((Object)send22678, (Object)SMB__equal, 1, (Object)classreference1342);
// receiver
send22684 = (Object)new_AST_Send((Object)localvariable3483, (Object)symbol4082, 0);
// class
send22685 = (Object)new_AST_Send((Object)send22684, (Object)SMB_class, 0);
// should
send22686 = (Object)new_AST_Send((Object)send22685, (Object)symbol4250, 0);
// =
send22687 = (Object)new_AST_Send((Object)send22686, (Object)SMB__equal, 1, (Object)classreference1341);
// position
send22688 = (Object)new_AST_Send((Object)localvariable3482, (Object)symbol4241, 0);
// should
send22689 = (Object)new_AST_Send((Object)send22688, (Object)symbol4250, 0);
smallint2387 = (Object)new_Type_SmallInt(29);
constant5243 = (Object)new_AST_Constant((Object)smallint2387);
// =
send22690 = (Object)new_AST_Send((Object)send22689, (Object)SMB__equal, 1, (Object)constant5243);
method4634 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2958, 16, assign2752, assign2753, assign2754, send22616, send22626, send22633, send22637, assign2757, send22660, assign2761, send22674, assign2765, send22683, send22687, send22690, Self);
symbol3929 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure4622 = (Object)new_Runtime_MethodClosure(method4634);
store_method((Type_Class)class751, (Type_Symbol)symbol3929, (Runtime_MethodClosure)methodclosure4622);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable3498 = (Object)new_AST_Variable_named(L"parser");
localvariable3499 = (Object)new_AST_Variable_named(L"string");
array2972 = (Object)new_Type_Array_with(2, (Object)localvariable3498, (Object)localvariable3499);
// separator
send22691 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4248, 0);
assign2767 = (Object)new_AST_Assign((Object)localvariable3498, (Object)send22691);
string2470 = (Object)new_Type_String(L"\"Test\"");
constant5244 = (Object)new_AST_Constant((Object)string2470);
// on:
send22692 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5244);
assign2768 = (Object)new_AST_Assign((Object)localvariable3499, (Object)send22692);
// match:
send22693 = (Object)new_AST_Send((Object)localvariable3498, (Object)symbol4196, 1, (Object)localvariable3499);
// should
send22694 = (Object)new_AST_Send((Object)send22693, (Object)symbol4250, 0);
// not
send22695 = (Object)new_AST_Send((Object)send22694, (Object)SMB_not, 0);
// be
send22696 = (Object)new_AST_Send((Object)send22695, (Object)symbol4251, 0);
// isNil
send22697 = (Object)new_AST_Send((Object)send22696, (Object)SMB_isNil, 0);
// position
send22698 = (Object)new_AST_Send((Object)localvariable3499, (Object)symbol4241, 0);
// should
send22699 = (Object)new_AST_Send((Object)send22698, (Object)symbol4250, 0);
smallint2388 = (Object)new_Type_SmallInt(6);
constant5245 = (Object)new_AST_Constant((Object)smallint2388);
// =
send22700 = (Object)new_AST_Send((Object)send22699, (Object)SMB__equal, 1, (Object)constant5245);
string2471 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant5246 = (Object)new_AST_Constant((Object)string2471);
// on:
send22701 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5246);
assign2769 = (Object)new_AST_Assign((Object)localvariable3499, (Object)send22701);
// match:
send22702 = (Object)new_AST_Send((Object)localvariable3498, (Object)symbol4196, 1, (Object)localvariable3499);
// should
send22703 = (Object)new_AST_Send((Object)send22702, (Object)symbol4250, 0);
// not
send22704 = (Object)new_AST_Send((Object)send22703, (Object)SMB_not, 0);
// be
send22705 = (Object)new_AST_Send((Object)send22704, (Object)symbol4251, 0);
// isNil
send22706 = (Object)new_AST_Send((Object)send22705, (Object)SMB_isNil, 0);
// position
send22707 = (Object)new_AST_Send((Object)localvariable3499, (Object)symbol4241, 0);
// should
send22708 = (Object)new_AST_Send((Object)send22707, (Object)symbol4250, 0);
smallint2389 = (Object)new_Type_SmallInt(18);
constant5247 = (Object)new_AST_Constant((Object)smallint2389);
// =
send22709 = (Object)new_AST_Send((Object)send22708, (Object)SMB__equal, 1, (Object)constant5247);
string2472 = (Object)new_Type_String(L"");
constant5248 = (Object)new_AST_Constant((Object)string2472);
// on:
send22710 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5248);
assign2770 = (Object)new_AST_Assign((Object)localvariable3499, (Object)send22710);
// match:
send22711 = (Object)new_AST_Send((Object)localvariable3498, (Object)symbol4196, 1, (Object)localvariable3499);
// should
send22712 = (Object)new_AST_Send((Object)send22711, (Object)symbol4250, 0);
// not
send22713 = (Object)new_AST_Send((Object)send22712, (Object)SMB_not, 0);
// be
send22714 = (Object)new_AST_Send((Object)send22713, (Object)symbol4251, 0);
// isNil
send22715 = (Object)new_AST_Send((Object)send22714, (Object)SMB_isNil, 0);
// position
send22716 = (Object)new_AST_Send((Object)localvariable3499, (Object)symbol4241, 0);
// should
send22717 = (Object)new_AST_Send((Object)send22716, (Object)symbol4250, 0);
smallint2390 = (Object)new_Type_SmallInt(0);
constant5249 = (Object)new_AST_Constant((Object)smallint2390);
// =
send22718 = (Object)new_AST_Send((Object)send22717, (Object)SMB__equal, 1, (Object)constant5249);
method4635 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2972, 11, assign2767, assign2768, send22697, send22700, assign2769, send22706, send22709, assign2770, send22715, send22718, Self);
symbol3979 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure4623 = (Object)new_Runtime_MethodClosure(method4635);
store_method((Type_Class)class751, (Type_Symbol)symbol3979, (Runtime_MethodClosure)methodclosure4623);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable3500 = (Object)new_AST_Variable_named(L"parser");
localvariable3501 = (Object)new_AST_Variable_named(L"string");
array2973 = (Object)new_Type_Array_with(2, (Object)localvariable3500, (Object)localvariable3501);
symbol4261 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send22719 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4261, 0);
assign2771 = (Object)new_AST_Assign((Object)localvariable3500, (Object)send22719);
string2473 = (Object)new_Type_String(L"+= a");
constant5250 = (Object)new_AST_Constant((Object)string2473);
// on:
send22720 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5250);
assign2772 = (Object)new_AST_Assign((Object)localvariable3501, (Object)send22720);
// match:
send22721 = (Object)new_AST_Send((Object)localvariable3500, (Object)symbol4196, 1, (Object)localvariable3501);
// printString
send22722 = (Object)new_AST_Send((Object)send22721, (Object)symbol4198, 0);
// should
send22723 = (Object)new_AST_Send((Object)send22722, (Object)symbol4250, 0);
string2474 = (Object)new_Type_String(L"+=");
constant5251 = (Object)new_AST_Constant((Object)string2474);
// =
send22724 = (Object)new_AST_Send((Object)send22723, (Object)SMB__equal, 1, (Object)constant5251);
// position
send22725 = (Object)new_AST_Send((Object)localvariable3501, (Object)symbol4241, 0);
// should
send22726 = (Object)new_AST_Send((Object)send22725, (Object)symbol4250, 0);
smallint2391 = (Object)new_Type_SmallInt(2);
constant5252 = (Object)new_AST_Constant((Object)smallint2391);
// =
send22727 = (Object)new_AST_Send((Object)send22726, (Object)SMB__equal, 1, (Object)constant5252);
string2475 = (Object)new_Type_String(L"|= a");
constant5253 = (Object)new_AST_Constant((Object)string2475);
// on:
send22728 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5253);
assign2773 = (Object)new_AST_Assign((Object)localvariable3501, (Object)send22728);
// match:
send22729 = (Object)new_AST_Send((Object)localvariable3500, (Object)symbol4196, 1, (Object)localvariable3501);
// printString
send22730 = (Object)new_AST_Send((Object)send22729, (Object)symbol4198, 0);
// should
send22731 = (Object)new_AST_Send((Object)send22730, (Object)symbol4250, 0);
string2476 = (Object)new_Type_String(L"|");
constant5254 = (Object)new_AST_Constant((Object)string2476);
// =
send22732 = (Object)new_AST_Send((Object)send22731, (Object)SMB__equal, 1, (Object)constant5254);
// position
send22733 = (Object)new_AST_Send((Object)localvariable3501, (Object)symbol4241, 0);
// should
send22734 = (Object)new_AST_Send((Object)send22733, (Object)symbol4250, 0);
smallint2392 = (Object)new_Type_SmallInt(1);
constant5255 = (Object)new_AST_Constant((Object)smallint2392);
// =
send22735 = (Object)new_AST_Send((Object)send22734, (Object)SMB__equal, 1, (Object)constant5255);
string2477 = (Object)new_Type_String(L"-= a");
constant5256 = (Object)new_AST_Constant((Object)string2477);
// on:
send22736 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5256);
assign2774 = (Object)new_AST_Assign((Object)localvariable3501, (Object)send22736);
// match:
send22737 = (Object)new_AST_Send((Object)localvariable3500, (Object)symbol4196, 1, (Object)localvariable3501);
// printString
send22738 = (Object)new_AST_Send((Object)send22737, (Object)symbol4198, 0);
// should
send22739 = (Object)new_AST_Send((Object)send22738, (Object)symbol4250, 0);
string2478 = (Object)new_Type_String(L"-=");
constant5257 = (Object)new_AST_Constant((Object)string2478);
// =
send22740 = (Object)new_AST_Send((Object)send22739, (Object)SMB__equal, 1, (Object)constant5257);
// position
send22741 = (Object)new_AST_Send((Object)localvariable3501, (Object)symbol4241, 0);
// should
send22742 = (Object)new_AST_Send((Object)send22741, (Object)symbol4250, 0);
smallint2393 = (Object)new_Type_SmallInt(2);
constant5258 = (Object)new_AST_Constant((Object)smallint2393);
// =
send22743 = (Object)new_AST_Send((Object)send22742, (Object)SMB__equal, 1, (Object)constant5258);
string2479 = (Object)new_Type_String(L"=- a");
constant5259 = (Object)new_AST_Constant((Object)string2479);
// on:
send22744 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5259);
assign2775 = (Object)new_AST_Assign((Object)localvariable3501, (Object)send22744);
// match:
send22745 = (Object)new_AST_Send((Object)localvariable3500, (Object)symbol4196, 1, (Object)localvariable3501);
// printString
send22746 = (Object)new_AST_Send((Object)send22745, (Object)symbol4198, 0);
// should
send22747 = (Object)new_AST_Send((Object)send22746, (Object)symbol4250, 0);
string2480 = (Object)new_Type_String(L"=");
constant5260 = (Object)new_AST_Constant((Object)string2480);
// =
send22748 = (Object)new_AST_Send((Object)send22747, (Object)SMB__equal, 1, (Object)constant5260);
// position
send22749 = (Object)new_AST_Send((Object)localvariable3501, (Object)symbol4241, 0);
// should
send22750 = (Object)new_AST_Send((Object)send22749, (Object)symbol4250, 0);
smallint2394 = (Object)new_Type_SmallInt(1);
constant5261 = (Object)new_AST_Constant((Object)smallint2394);
// =
send22751 = (Object)new_AST_Send((Object)send22750, (Object)SMB__equal, 1, (Object)constant5261);
method4636 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2973, 14, assign2771, assign2772, send22724, send22727, assign2773, send22732, send22735, assign2774, send22740, send22743, assign2775, send22748, send22751, Self);
symbol3949 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure4624 = (Object)new_Runtime_MethodClosure(method4636);
store_method((Type_Class)class751, (Type_Symbol)symbol3949, (Runtime_MethodClosure)methodclosure4624);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable3502 = (Object)new_AST_Variable_named(L"parser");
array2974 = (Object)new_Type_Array_with(1, (Object)localvariable3502);
symbol4262 = (Object)new_Type_Symbol_cached(L"named:parsing:");
string2481 = (Object)new_Type_String(L"COMMENT");
constant5262 = (Object)new_AST_Constant((Object)string2481);
symbol4263 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send22752 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4263, 0);
// named:parsing:
send22753 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4262, 2, (Object)constant5262, (Object)send22752);
assign2776 = (Object)new_AST_Assign((Object)localvariable3502, (Object)send22753);
string2482 = (Object)new_Type_String(L"\"Test\"");
constant5263 = (Object)new_AST_Constant((Object)string2482);
// parse:
send22754 = (Object)new_AST_Send((Object)localvariable3502, (Object)symbol4203, 1, (Object)constant5263);
// should
send22755 = (Object)new_AST_Send((Object)send22754, (Object)symbol4250, 0);
// not
send22756 = (Object)new_AST_Send((Object)send22755, (Object)SMB_not, 0);
// be
send22757 = (Object)new_AST_Send((Object)send22756, (Object)symbol4251, 0);
// isNil
send22758 = (Object)new_AST_Send((Object)send22757, (Object)SMB_isNil, 0);
string2483 = (Object)new_Type_String(L"\"Test");
constant5264 = (Object)new_AST_Constant((Object)string2483);
// parse:
send22759 = (Object)new_AST_Send((Object)localvariable3502, (Object)symbol4203, 1, (Object)constant5264);
// should
send22760 = (Object)new_AST_Send((Object)send22759, (Object)symbol4250, 0);
// be
send22761 = (Object)new_AST_Send((Object)send22760, (Object)symbol4251, 0);
// isNil
send22762 = (Object)new_AST_Send((Object)send22761, (Object)SMB_isNil, 0);
method4637 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2974, 4, assign2776, send22758, send22762, Self);
symbol3972 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure4625 = (Object)new_Runtime_MethodClosure(method4637);
store_method((Type_Class)class751, (Type_Symbol)symbol3972, (Runtime_MethodClosure)methodclosure4625);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable3503 = (Object)new_AST_Variable_named(L"parser");
localvariable3504 = (Object)new_AST_Variable_named(L"string");
array2975 = (Object)new_Type_Array_with(2, (Object)localvariable3503, (Object)localvariable3504);
symbol4099 = (Object)new_Type_Symbol_cached(L"temporaries");
// temporaries
send22763 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4099, 0);
assign2777 = (Object)new_AST_Assign((Object)localvariable3503, (Object)send22763);
string2484 = (Object)new_Type_String(L"|a b c|");
constant5265 = (Object)new_AST_Constant((Object)string2484);
// on:
send22764 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5265);
assign2778 = (Object)new_AST_Assign((Object)localvariable3504, (Object)send22764);
// match:
send22765 = (Object)new_AST_Send((Object)localvariable3503, (Object)symbol4196, 1, (Object)localvariable3504);
symbol4264 = (Object)new_Type_Symbol_cached(L"collect:");
constant5266 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send22766 = (Object)new_AST_Send((Object)send22765, (Object)symbol4264, 1, (Object)constant5266);
// asArray
send22767 = (Object)new_AST_Send((Object)send22766, (Object)SMB_asArray, 0);
// should
send22768 = (Object)new_AST_Send((Object)send22767, (Object)symbol4250, 0);
localvariable3505 = (Object)new_AST_Variable_named(L"receiver");
array2976 = (Object)new_Type_Array_with(1, (Object)localvariable3505);
smallint2395 = (Object)new_Type_SmallInt(1);
constant5267 = (Object)new_AST_Constant((Object)smallint2395);
string2485 = (Object)new_Type_String(L"a");
constant5268 = (Object)new_AST_Constant((Object)string2485);
// at:put:
send22769 = (Object)new_AST_Send((Object)localvariable3505, (Object)SMB_at_put_, 2, (Object)constant5267, (Object)constant5268);
smallint2396 = (Object)new_Type_SmallInt(2);
constant5269 = (Object)new_AST_Constant((Object)smallint2396);
string2486 = (Object)new_Type_String(L"b");
constant5270 = (Object)new_AST_Constant((Object)string2486);
// at:put:
send22770 = (Object)new_AST_Send((Object)localvariable3505, (Object)SMB_at_put_, 2, (Object)constant5269, (Object)constant5270);
smallint2397 = (Object)new_Type_SmallInt(3);
constant5271 = (Object)new_AST_Constant((Object)smallint2397);
string2487 = (Object)new_Type_String(L"c");
constant5272 = (Object)new_AST_Constant((Object)string2487);
// at:put:
send22771 = (Object)new_AST_Send((Object)localvariable3505, (Object)SMB_at_put_, 2, (Object)constant5271, (Object)constant5272);
// yourself
send22772 = (Object)new_AST_Send((Object)localvariable3505, (Object)symbol3904, 0);
block1415 = (Object)new_AST_Block_with((Type_Array)array2976, (Type_Array)empty_Type_Array, 1, 4, send22769, send22770, send22771, send22772);
smallint2398 = (Object)new_Type_SmallInt(3);
constant5273 = (Object)new_AST_Constant((Object)smallint2398);
// new:
send22773 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5273);
// value:
send22774 = (Object)new_AST_Send((Object)block1415, (Object)SMB_value_, 1, (Object)send22773);
// =
send22775 = (Object)new_AST_Send((Object)send22768, (Object)SMB__equal, 1, (Object)send22774);
// position
send22776 = (Object)new_AST_Send((Object)localvariable3504, (Object)symbol4241, 0);
// should
send22777 = (Object)new_AST_Send((Object)send22776, (Object)symbol4250, 0);
smallint2399 = (Object)new_Type_SmallInt(7);
constant5274 = (Object)new_AST_Constant((Object)smallint2399);
// =
send22778 = (Object)new_AST_Send((Object)send22777, (Object)SMB__equal, 1, (Object)constant5274);
string2488 = (Object)new_Type_String(L"|  a b c  |");
constant5275 = (Object)new_AST_Constant((Object)string2488);
// on:
send22779 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5275);
assign2779 = (Object)new_AST_Assign((Object)localvariable3504, (Object)send22779);
// match:
send22780 = (Object)new_AST_Send((Object)localvariable3503, (Object)symbol4196, 1, (Object)localvariable3504);
constant5276 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send22781 = (Object)new_AST_Send((Object)send22780, (Object)symbol4264, 1, (Object)constant5276);
// asArray
send22782 = (Object)new_AST_Send((Object)send22781, (Object)SMB_asArray, 0);
// should
send22783 = (Object)new_AST_Send((Object)send22782, (Object)symbol4250, 0);
localvariable3506 = (Object)new_AST_Variable_named(L"receiver");
array2977 = (Object)new_Type_Array_with(1, (Object)localvariable3506);
smallint2400 = (Object)new_Type_SmallInt(1);
constant5277 = (Object)new_AST_Constant((Object)smallint2400);
string2489 = (Object)new_Type_String(L"a");
constant5278 = (Object)new_AST_Constant((Object)string2489);
// at:put:
send22784 = (Object)new_AST_Send((Object)localvariable3506, (Object)SMB_at_put_, 2, (Object)constant5277, (Object)constant5278);
smallint2401 = (Object)new_Type_SmallInt(2);
constant5279 = (Object)new_AST_Constant((Object)smallint2401);
string2490 = (Object)new_Type_String(L"b");
constant5280 = (Object)new_AST_Constant((Object)string2490);
// at:put:
send22785 = (Object)new_AST_Send((Object)localvariable3506, (Object)SMB_at_put_, 2, (Object)constant5279, (Object)constant5280);
smallint2402 = (Object)new_Type_SmallInt(3);
constant5281 = (Object)new_AST_Constant((Object)smallint2402);
string2491 = (Object)new_Type_String(L"c");
constant5282 = (Object)new_AST_Constant((Object)string2491);
// at:put:
send22786 = (Object)new_AST_Send((Object)localvariable3506, (Object)SMB_at_put_, 2, (Object)constant5281, (Object)constant5282);
// yourself
send22787 = (Object)new_AST_Send((Object)localvariable3506, (Object)symbol3904, 0);
block1416 = (Object)new_AST_Block_with((Type_Array)array2977, (Type_Array)empty_Type_Array, 1, 4, send22784, send22785, send22786, send22787);
smallint2403 = (Object)new_Type_SmallInt(3);
constant5283 = (Object)new_AST_Constant((Object)smallint2403);
// new:
send22788 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5283);
// value:
send22789 = (Object)new_AST_Send((Object)block1416, (Object)SMB_value_, 1, (Object)send22788);
// =
send22790 = (Object)new_AST_Send((Object)send22783, (Object)SMB__equal, 1, (Object)send22789);
// position
send22791 = (Object)new_AST_Send((Object)localvariable3504, (Object)symbol4241, 0);
// should
send22792 = (Object)new_AST_Send((Object)send22791, (Object)symbol4250, 0);
smallint2404 = (Object)new_Type_SmallInt(11);
constant5284 = (Object)new_AST_Constant((Object)smallint2404);
// =
send22793 = (Object)new_AST_Send((Object)send22792, (Object)SMB__equal, 1, (Object)constant5284);
method4638 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2975, 8, assign2777, assign2778, send22775, send22778, assign2779, send22790, send22793, Self);
symbol3969 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure4626 = (Object)new_Runtime_MethodClosure(method4638);
store_method((Type_Class)class751, (Type_Symbol)symbol3969, (Runtime_MethodClosure)methodclosure4626);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable3507 = (Object)new_AST_Variable_named(L"parser");
localvariable3508 = (Object)new_AST_Variable_named(L"string");
localvariable3509 = (Object)new_AST_Variable_named(L"result");
array2978 = (Object)new_Type_Array_with(3, (Object)localvariable3507, (Object)localvariable3508, (Object)localvariable3509);
symbol4265 = (Object)new_Type_Symbol_cached(L"method");
// method
send22794 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4265, 0);
assign2780 = (Object)new_AST_Assign((Object)localvariable3507, (Object)send22794);
string2492 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant5285 = (Object)new_AST_Constant((Object)string2492);
assign2781 = (Object)new_AST_Assign((Object)localvariable3508, (Object)constant5285);
// parse:
send22795 = (Object)new_AST_Send((Object)localvariable3507, (Object)symbol4203, 1, (Object)localvariable3508);
assign2782 = (Object)new_AST_Assign((Object)localvariable3509, (Object)send22795);
// hasReturnExpression
send22796 = (Object)new_AST_Send((Object)localvariable3509, (Object)symbol4025, 0);
// should
send22797 = (Object)new_AST_Send((Object)send22796, (Object)symbol4250, 0);
// be
send22798 = (Object)new_AST_Send((Object)send22797, (Object)symbol4251, 0);
symbol4266 = (Object)new_Type_Symbol_cached(L"true");
// true
send22799 = (Object)new_AST_Send((Object)send22798, (Object)symbol4266, 0);
// class
send22800 = (Object)new_AST_Send((Object)localvariable3509, (Object)SMB_class, 0);
// should
send22801 = (Object)new_AST_Send((Object)send22800, (Object)symbol4250, 0);

// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable3510 = (Object)new_AST_Variable_named(L"anObject");
array2979 = (Object)new_Type_Array_with(1, (Object)localvariable3510);
assign2783 = (Object)new_AST_Assign((Object)instancevariable1546, (Object)localvariable3510);
method4639 = (Object)new_AST_Method_with((Type_Array)array2979, (Type_Array)empty_Type_Array, 2, assign2783, Self);
symbol4093 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure4627 = (Object)new_Runtime_MethodClosure(method4639);
store_method((Type_Class)class769, (Type_Symbol)symbol4093, (Runtime_MethodClosure)methodclosure4627);


// ASTMethod>>message
//message
// 	^ message
method4640 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1546);
symbol4097 = (Object)new_Type_Symbol_cached(L"message");
methodclosure4628 = (Object)new_Runtime_MethodClosure(method4640);
store_method((Type_Class)class769, (Type_Symbol)symbol4097, (Runtime_MethodClosure)methodclosure4628);


// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable3511 = (Object)new_AST_Variable_named(L"aStream");
array2980 = (Object)new_Type_Array_with(1, (Object)localvariable3511);
super368 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3511);
string2493 = (Object)new_Type_String(L"(");
constant5286 = (Object)new_AST_Constant((Object)string2493);
// nextPutAll:
send22802 = (Object)new_AST_Send((Object)localvariable3511, (Object)symbol4238, 1, (Object)constant5286);
// message
send22803 = (Object)new_AST_Send((Object)Self, (Object)symbol4097, 0);
// printOn:
send22804 = (Object)new_AST_Send((Object)send22803, (Object)symbol4003, 1, (Object)localvariable3511);
string2494 = (Object)new_Type_String(L")");
constant5287 = (Object)new_AST_Constant((Object)string2494);
// nextPutAll:
send22805 = (Object)new_AST_Send((Object)localvariable3511, (Object)symbol4238, 1, (Object)constant5287);
method4641 = (Object)new_AST_Method_with((Type_Array)array2980, (Type_Array)empty_Type_Array, 5, super368, send22802, send22804, send22805, Self);
methodclosure4629 = (Object)new_Runtime_MethodClosure(method4641);
store_method((Type_Class)class769, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4629);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable3512 = (Object)new_AST_Variable_named(L"anObject");
array2981 = (Object)new_Type_Array_with(1, (Object)localvariable3512);
assign2784 = (Object)new_AST_Assign((Object)instancevariable1549, (Object)localvariable3512);
method4642 = (Object)new_AST_Method_with((Type_Array)array2981, (Type_Array)empty_Type_Array, 2, assign2784, Self);
symbol4098 = (Object)new_Type_Symbol_cached(L"statements:");
methodclosure4630 = (Object)new_Runtime_MethodClosure(method4642);
store_method((Type_Class)class769, (Type_Symbol)symbol4098, (Runtime_MethodClosure)methodclosure4630);


// ASTMethod>>statements
//statements
// 	^ statements
method4643 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1549);
symbol4094 = (Object)new_Type_Symbol_cached(L"statements");
methodclosure4631 = (Object)new_Runtime_MethodClosure(method4643);
store_method((Type_Class)class769, (Type_Symbol)symbol4094, (Runtime_MethodClosure)methodclosure4631);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable3513 = (Object)new_AST_Variable_named(L"anObject");
array2982 = (Object)new_Type_Array_with(1, (Object)localvariable3513);
assign2785 = (Object)new_AST_Assign((Object)instancevariable1548, (Object)localvariable3513);
method4644 = (Object)new_AST_Method_with((Type_Array)array2982, (Type_Array)empty_Type_Array, 2, assign2785, Self);
symbol4100 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure4632 = (Object)new_Runtime_MethodClosure(method4644);
store_method((Type_Class)class769, (Type_Symbol)symbol4100, (Runtime_MethodClosure)methodclosure4632);


// ASTMethod>>annotations
//annotations
// 	^ annotations
method4645 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1547);
symbol4095 = (Object)new_Type_Symbol_cached(L"annotations");
methodclosure4633 = (Object)new_Runtime_MethodClosure(method4645);
store_method((Type_Class)class769, (Type_Symbol)symbol4095, (Runtime_MethodClosure)methodclosure4633);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method4646 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1548);
methodclosure4634 = (Object)new_Runtime_MethodClosure(method4646);
store_method((Type_Class)class769, (Type_Symbol)symbol4099, (Runtime_MethodClosure)methodclosure4634);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable3514 = (Object)new_AST_Variable_named(L"anObject");
array2983 = (Object)new_Type_Array_with(1, (Object)localvariable3514);
assign2786 = (Object)new_AST_Assign((Object)instancevariable1547, (Object)localvariable3514);
method4647 = (Object)new_AST_Method_with((Type_Array)array2983, (Type_Array)empty_Type_Array, 2, assign2786, Self);
symbol4101 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure4635 = (Object)new_Runtime_MethodClosure(method4647);
store_method((Type_Class)class769, (Type_Symbol)symbol4101, (Runtime_MethodClosure)methodclosure4635);


// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable3515 = (Object)new_AST_Variable_named(L"receiver");
array2984 = (Object)new_Type_Array_with(1, (Object)localvariable3515);
smallint2405 = (Object)new_Type_SmallInt(1);
constant5288 = (Object)new_AST_Constant((Object)smallint2405);
constant5289 = (Object)new_AST_Constant((Object)symbol4095);
// at:put:
send22806 = (Object)new_AST_Send((Object)localvariable3515, (Object)SMB_at_put_, 2, (Object)constant5288, (Object)constant5289);
smallint2406 = (Object)new_Type_SmallInt(2);
constant5290 = (Object)new_AST_Constant((Object)smallint2406);
constant5291 = (Object)new_AST_Constant((Object)symbol4097);
// at:put:
send22807 = (Object)new_AST_Send((Object)localvariable3515, (Object)SMB_at_put_, 2, (Object)constant5290, (Object)constant5291);
smallint2407 = (Object)new_Type_SmallInt(3);
constant5292 = (Object)new_AST_Constant((Object)smallint2407);
constant5293 = (Object)new_AST_Constant((Object)symbol4094);
// at:put:
send22808 = (Object)new_AST_Send((Object)localvariable3515, (Object)SMB_at_put_, 2, (Object)constant5292, (Object)constant5293);
smallint2408 = (Object)new_Type_SmallInt(4);
constant5294 = (Object)new_AST_Constant((Object)smallint2408);
constant5295 = (Object)new_AST_Constant((Object)symbol4099);
// at:put:
send22809 = (Object)new_AST_Send((Object)localvariable3515, (Object)SMB_at_put_, 2, (Object)constant5294, (Object)constant5295);
// yourself
send22810 = (Object)new_AST_Send((Object)localvariable3515, (Object)symbol3904, 0);
block1417 = (Object)new_AST_Block_with((Type_Array)array2984, (Type_Array)empty_Type_Array, 1, 5, send22806, send22807, send22808, send22809, send22810);
smallint2409 = (Object)new_Type_SmallInt(4);
constant5296 = (Object)new_AST_Constant((Object)smallint2409);
// new:
send22811 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5296);
// value:
send22812 = (Object)new_AST_Send((Object)block1417, (Object)SMB_value_, 1, (Object)send22811);
method4648 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22812);
symbol4096 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure4636 = (Object)new_Runtime_MethodClosure(method4648);
store_method((Type_Class)class769, (Type_Symbol)symbol4096, (Runtime_MethodClosure)methodclosure4636);


// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
// statements
send22813 = (Object)new_AST_Send((Object)Self, (Object)symbol4094, 0);
// hasReturnExpression
send22814 = (Object)new_AST_Send((Object)send22813, (Object)symbol4025, 0);
method4649 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22814);
methodclosure4637 = (Object)new_Runtime_MethodClosure(method4649);
store_method((Type_Class)class769, (Type_Symbol)symbol4025, (Runtime_MethodClosure)methodclosure4637);

classreference1343 = (Object)new_Organization_ClassReference((Type_Class)class769);
// =
send22815 = (Object)new_AST_Send((Object)send22801, (Object)SMB__equal, 1, (Object)classreference1343);
// message
send22816 = (Object)new_AST_Send((Object)localvariable3509, (Object)symbol4097, 0);
// class
send22817 = (Object)new_AST_Send((Object)send22816, (Object)SMB_class, 0);
// should
send22818 = (Object)new_AST_Send((Object)send22817, (Object)symbol4250, 0);

// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method4650 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1550);
symbol4076 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure4638 = (Object)new_Runtime_MethodClosure(method4650);
store_method((Type_Class)class771, (Type_Symbol)symbol4076, (Runtime_MethodClosure)methodclosure4638);


// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable3516 = (Object)new_AST_Variable_named(L"aSelector");
array2985 = (Object)new_Type_Array_with(1, (Object)localvariable3516);
variable186 = (Object)new_AST_Variable_named(L"return");
array2986 = (Object)new_Type_Array_with(1, (Object)variable186);
symbol4074 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
super369 = (Object)new_AST_Super((Object)symbol4074, 1, (Object)localvariable3516);
// escape:
send22819 = (Object)new_AST_Send((Object)variable186, (Object)SMB_escape_, 1, (Object)False_Const);
block1418 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send22819);
// ifFalse:
send22820 = (Object)new_AST_Send((Object)super369, (Object)SMB_ifFalse_, 1, (Object)block1418);
symbol4103 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
// compatibleArgumentsWith:
send22821 = (Object)new_AST_Send((Object)Self, (Object)symbol4103, 1, (Object)localvariable3516);
block1419 = (Object)new_AST_Block_with((Type_Array)array2986, (Type_Array)empty_Type_Array, 1, 2, send22820, send22821);
// on:
send22822 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1419);
method4651 = (Object)new_AST_Method_with((Type_Array)array2985, (Type_Array)empty_Type_Array, 1, send22822);
methodclosure4639 = (Object)new_Runtime_MethodClosure(method4651);
store_method((Type_Class)class771, (Type_Symbol)symbol4074, (Runtime_MethodClosure)methodclosure4639);


// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable3517 = (Object)new_AST_Variable_named(L"aCollection");
array2987 = (Object)new_Type_Array_with(1, (Object)localvariable3517);
symbol4267 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send22823 = (Object)new_AST_Send((Object)Self, (Object)symbol4267, 0);
assign2787 = (Object)new_AST_Assign((Object)instancevariable1550, (Object)localvariable3517);
method4652 = (Object)new_AST_Method_with((Type_Array)array2987, (Type_Array)empty_Type_Array, 3, send22823, assign2787, Self);
symbol4102 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure4640 = (Object)new_Runtime_MethodClosure(method4652);
store_method((Type_Class)class771, (Type_Symbol)symbol4102, (Runtime_MethodClosure)methodclosure4640);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super370 = (Object)new_AST_Super((Object)symbol3906, 0);
// new
send22824 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
assign2788 = (Object)new_AST_Assign((Object)instancevariable1550, (Object)send22824);
method4653 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super370, assign2788, Self);
methodclosure4641 = (Object)new_Runtime_MethodClosure(method4653);
store_method((Type_Class)class771, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4641);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable3518 = (Object)new_AST_Variable_named(L"aSelector");
array2988 = (Object)new_Type_Array_with(1, (Object)localvariable3518);
variable187 = (Object)new_AST_Variable_named(L"return");
array2989 = (Object)new_Type_Array_with(1, (Object)variable187);
// size
send22825 = (Object)new_AST_Send((Object)instancevariable1550, (Object)SMB_size, 0);
symbol4268 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable3519 = (Object)new_AST_Variable_named(L"index");
array2990 = (Object)new_Type_Array_with(1, (Object)localvariable3519);
// at:
send22826 = (Object)new_AST_Send((Object)instancevariable1550, (Object)SMB_at_, 1, (Object)localvariable3519);
// layout
send22827 = (Object)new_AST_Send((Object)send22826, (Object)symbol3992, 0);
// parameters
send22828 = (Object)new_AST_Send((Object)localvariable3518, (Object)symbol4076, 0);
// at:
send22829 = (Object)new_AST_Send((Object)send22828, (Object)SMB_at_, 1, (Object)localvariable3519);
// layout
send22830 = (Object)new_AST_Send((Object)send22829, (Object)symbol3992, 0);
// =
send22831 = (Object)new_AST_Send((Object)send22827, (Object)SMB__equal, 1, (Object)send22830);
// escape:
send22832 = (Object)new_AST_Send((Object)variable187, (Object)SMB_escape_, 1, (Object)False_Const);
block1420 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send22832);
// ifFalse:
send22833 = (Object)new_AST_Send((Object)send22831, (Object)SMB_ifFalse_, 1, (Object)block1420);
block1421 = (Object)new_AST_Block_with((Type_Array)array2990, (Type_Array)empty_Type_Array, 2, 1, send22833);
// timesRepeat:
send22834 = (Object)new_AST_Send((Object)send22825, (Object)symbol4268, 1, (Object)block1421);
block1422 = (Object)new_AST_Block_with((Type_Array)array2989, (Type_Array)empty_Type_Array, 1, 2, send22834, True_Const);
// on:
send22835 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1422);
method4654 = (Object)new_AST_Method_with((Type_Array)array2988, (Type_Array)empty_Type_Array, 1, send22835);
methodclosure4642 = (Object)new_Runtime_MethodClosure(method4654);
store_method((Type_Class)class771, (Type_Symbol)symbol4103, (Runtime_MethodClosure)methodclosure4642);

classreference1344 = (Object)new_Organization_ClassReference((Type_Class)class771);
// =
send22836 = (Object)new_AST_Send((Object)send22818, (Object)SMB__equal, 1, (Object)classreference1344);
// temporaries
send22837 = (Object)new_AST_Send((Object)localvariable3509, (Object)symbol4099, 0);
// size
send22838 = (Object)new_AST_Send((Object)send22837, (Object)SMB_size, 0);
// should
send22839 = (Object)new_AST_Send((Object)send22838, (Object)symbol4250, 0);
smallint2410 = (Object)new_Type_SmallInt(3);
constant5297 = (Object)new_AST_Constant((Object)smallint2410);
// =
send22840 = (Object)new_AST_Send((Object)send22839, (Object)SMB__equal, 1, (Object)constant5297);
// annotations
send22841 = (Object)new_AST_Send((Object)localvariable3509, (Object)symbol4095, 0);
// size
send22842 = (Object)new_AST_Send((Object)send22841, (Object)SMB_size, 0);
// should
send22843 = (Object)new_AST_Send((Object)send22842, (Object)symbol4250, 0);
smallint2411 = (Object)new_Type_SmallInt(3);
constant5298 = (Object)new_AST_Constant((Object)smallint2411);
// =
send22844 = (Object)new_AST_Send((Object)send22843, (Object)SMB__equal, 1, (Object)constant5298);
// statements
send22845 = (Object)new_AST_Send((Object)localvariable3509, (Object)symbol4094, 0);
// size
send22846 = (Object)new_AST_Send((Object)send22845, (Object)SMB_size, 0);
// should
send22847 = (Object)new_AST_Send((Object)send22846, (Object)symbol4250, 0);
smallint2412 = (Object)new_Type_SmallInt(2);
constant5299 = (Object)new_AST_Constant((Object)smallint2412);
// =
send22848 = (Object)new_AST_Send((Object)send22847, (Object)SMB__equal, 1, (Object)constant5299);
method4655 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2978, 10, assign2780, assign2781, assign2782, send22799, send22815, send22836, send22840, send22844, send22848, Self);
symbol3980 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure4643 = (Object)new_Runtime_MethodClosure(method4655);
store_method((Type_Class)class751, (Type_Symbol)symbol3980, (Runtime_MethodClosure)methodclosure4643);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable3520 = (Object)new_AST_Variable_named(L"parser");
localvariable3521 = (Object)new_AST_Variable_named(L"string");
localvariable3522 = (Object)new_AST_Variable_named(L"result");
array2991 = (Object)new_Type_Array_with(3, (Object)localvariable3520, (Object)localvariable3521, (Object)localvariable3522);
symbol4269 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send22849 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4269, 0);
assign2789 = (Object)new_AST_Assign((Object)localvariable3520, (Object)send22849);
string2495 = (Object)new_Type_String(L"abc def ghi ");
constant5300 = (Object)new_AST_Constant((Object)string2495);
// on:
send22850 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5300);
assign2790 = (Object)new_AST_Assign((Object)localvariable3521, (Object)send22850);
// match:
send22851 = (Object)new_AST_Send((Object)localvariable3520, (Object)symbol4196, 1, (Object)localvariable3521);
assign2791 = (Object)new_AST_Assign((Object)localvariable3522, (Object)send22851);
// class
send22852 = (Object)new_AST_Send((Object)localvariable3522, (Object)SMB_class, 0);
// should
send22853 = (Object)new_AST_Send((Object)send22852, (Object)symbol4250, 0);
// =
send22854 = (Object)new_AST_Send((Object)send22853, (Object)SMB__equal, 1, (Object)classreference1342);
// selector
send22855 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4007, 0);
// class
send22856 = (Object)new_AST_Send((Object)send22855, (Object)SMB_class, 0);
// should
send22857 = (Object)new_AST_Send((Object)send22856, (Object)symbol4250, 0);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send22858 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
symbol4055 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send22859 = (Object)new_AST_Send((Object)send22858, (Object)symbol4055, 0);
method4656 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send22859);
symbol4083 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
methodclosure4644 = (Object)new_Runtime_MethodClosure(method4656);
store_method((Type_Class)class766, (Type_Symbol)symbol4083, (Runtime_MethodClosure)methodclosure4644);

classreference1345 = (Object)new_Organization_ClassReference((Type_Class)class766);
// =
send22860 = (Object)new_AST_Send((Object)send22857, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send22861 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4007, 0);
// selector
send22862 = (Object)new_AST_Send((Object)send22861, (Object)symbol4007, 0);
// printString
send22863 = (Object)new_AST_Send((Object)send22862, (Object)symbol4198, 0);
// should
send22864 = (Object)new_AST_Send((Object)send22863, (Object)symbol4250, 0);
string2496 = (Object)new_Type_String(L"ghi");
constant5301 = (Object)new_AST_Constant((Object)string2496);
// =
send22865 = (Object)new_AST_Send((Object)send22864, (Object)SMB__equal, 1, (Object)constant5301);
// receiver
send22866 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4082, 0);
assign2792 = (Object)new_AST_Assign((Object)localvariable3522, (Object)send22866);
// class
send22867 = (Object)new_AST_Send((Object)localvariable3522, (Object)SMB_class, 0);
// should
send22868 = (Object)new_AST_Send((Object)send22867, (Object)symbol4250, 0);
// =
send22869 = (Object)new_AST_Send((Object)send22868, (Object)SMB__equal, 1, (Object)classreference1342);
// selector
send22870 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4007, 0);
// class
send22871 = (Object)new_AST_Send((Object)send22870, (Object)SMB_class, 0);
// should
send22872 = (Object)new_AST_Send((Object)send22871, (Object)symbol4250, 0);
// =
send22873 = (Object)new_AST_Send((Object)send22872, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send22874 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4007, 0);
// selector
send22875 = (Object)new_AST_Send((Object)send22874, (Object)symbol4007, 0);
// printString
send22876 = (Object)new_AST_Send((Object)send22875, (Object)symbol4198, 0);
// should
send22877 = (Object)new_AST_Send((Object)send22876, (Object)symbol4250, 0);
string2497 = (Object)new_Type_String(L"def");
constant5302 = (Object)new_AST_Constant((Object)string2497);
// =
send22878 = (Object)new_AST_Send((Object)send22877, (Object)SMB__equal, 1, (Object)constant5302);
// receiver
send22879 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4082, 0);
// class
send22880 = (Object)new_AST_Send((Object)send22879, (Object)SMB_class, 0);
// should
send22881 = (Object)new_AST_Send((Object)send22880, (Object)symbol4250, 0);
// =
send22882 = (Object)new_AST_Send((Object)send22881, (Object)SMB__equal, 1, (Object)classreference1336);
// receiver
send22883 = (Object)new_AST_Send((Object)localvariable3522, (Object)symbol4082, 0);
// name
send22884 = (Object)new_AST_Send((Object)send22883, (Object)SMB_name, 0);
// should
send22885 = (Object)new_AST_Send((Object)send22884, (Object)symbol4250, 0);
string2498 = (Object)new_Type_String(L"abc");
constant5303 = (Object)new_AST_Constant((Object)string2498);
// =
send22886 = (Object)new_AST_Send((Object)send22885, (Object)SMB__equal, 1, (Object)constant5303);
// position
send22887 = (Object)new_AST_Send((Object)localvariable3521, (Object)symbol4241, 0);
// should
send22888 = (Object)new_AST_Send((Object)send22887, (Object)symbol4250, 0);
smallint2413 = (Object)new_Type_SmallInt(12);
constant5304 = (Object)new_AST_Constant((Object)smallint2413);
// =
send22889 = (Object)new_AST_Send((Object)send22888, (Object)SMB__equal, 1, (Object)constant5304);
string2499 = (Object)new_Type_String(L"abc");
constant5305 = (Object)new_AST_Constant((Object)string2499);
// on:
send22890 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5305);
assign2793 = (Object)new_AST_Assign((Object)localvariable3521, (Object)send22890);
// match:
send22891 = (Object)new_AST_Send((Object)localvariable3520, (Object)symbol4196, 1, (Object)localvariable3521);
// should
send22892 = (Object)new_AST_Send((Object)send22891, (Object)symbol4250, 0);
// be
send22893 = (Object)new_AST_Send((Object)send22892, (Object)symbol4251, 0);
// isNil
send22894 = (Object)new_AST_Send((Object)send22893, (Object)SMB_isNil, 0);
method4657 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2991, 16, assign2789, assign2790, assign2791, send22854, send22860, send22865, assign2792, send22869, send22873, send22878, send22882, send22886, send22889, assign2793, send22894, Self);
symbol3954 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure4645 = (Object)new_Runtime_MethodClosure(method4657);
store_method((Type_Class)class751, (Type_Symbol)symbol3954, (Runtime_MethodClosure)methodclosure4645);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3523 = (Object)new_AST_Variable_named(L"parser");
localvariable3524 = (Object)new_AST_Variable_named(L"string");
localvariable3525 = (Object)new_AST_Variable_named(L"result");
array2992 = (Object)new_Type_Array_with(3, (Object)localvariable3523, (Object)localvariable3524, (Object)localvariable3525);
symbol4270 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send22895 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4270, 0);
assign2794 = (Object)new_AST_Assign((Object)localvariable3523, (Object)send22895);
string2500 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5306 = (Object)new_AST_Constant((Object)string2500);
// on:
send22896 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5306);
assign2795 = (Object)new_AST_Assign((Object)localvariable3524, (Object)send22896);
// match:
send22897 = (Object)new_AST_Send((Object)localvariable3523, (Object)symbol4196, 1, (Object)localvariable3524);
assign2796 = (Object)new_AST_Assign((Object)localvariable3525, (Object)send22897);
// class
send22898 = (Object)new_AST_Send((Object)localvariable3525, (Object)SMB_class, 0);
// should
send22899 = (Object)new_AST_Send((Object)send22898, (Object)symbol4250, 0);
// =
send22900 = (Object)new_AST_Send((Object)send22899, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22901 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// class
send22902 = (Object)new_AST_Send((Object)send22901, (Object)SMB_class, 0);
// should
send22903 = (Object)new_AST_Send((Object)send22902, (Object)symbol4250, 0);
// =
send22904 = (Object)new_AST_Send((Object)send22903, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22905 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// name
send22906 = (Object)new_AST_Send((Object)send22905, (Object)SMB_name, 0);
// should
send22907 = (Object)new_AST_Send((Object)send22906, (Object)symbol4250, 0);
string2501 = (Object)new_Type_String(L"a");
constant5307 = (Object)new_AST_Constant((Object)string2501);
// =
send22908 = (Object)new_AST_Send((Object)send22907, (Object)SMB__equal, 1, (Object)constant5307);
// expression
send22909 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4064, 0);
assign2797 = (Object)new_AST_Assign((Object)localvariable3525, (Object)send22909);
// class
send22910 = (Object)new_AST_Send((Object)localvariable3525, (Object)SMB_class, 0);
// should
send22911 = (Object)new_AST_Send((Object)send22910, (Object)symbol4250, 0);
// =
send22912 = (Object)new_AST_Send((Object)send22911, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22913 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// class
send22914 = (Object)new_AST_Send((Object)send22913, (Object)SMB_class, 0);
// should
send22915 = (Object)new_AST_Send((Object)send22914, (Object)symbol4250, 0);
// =
send22916 = (Object)new_AST_Send((Object)send22915, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22917 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// name
send22918 = (Object)new_AST_Send((Object)send22917, (Object)SMB_name, 0);
// should
send22919 = (Object)new_AST_Send((Object)send22918, (Object)symbol4250, 0);
string2502 = (Object)new_Type_String(L"b");
constant5308 = (Object)new_AST_Constant((Object)string2502);
// =
send22920 = (Object)new_AST_Send((Object)send22919, (Object)SMB__equal, 1, (Object)constant5308);
// expression
send22921 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4064, 0);
assign2798 = (Object)new_AST_Assign((Object)localvariable3525, (Object)send22921);
// class
send22922 = (Object)new_AST_Send((Object)localvariable3525, (Object)SMB_class, 0);
// should
send22923 = (Object)new_AST_Send((Object)send22922, (Object)symbol4250, 0);
// =
send22924 = (Object)new_AST_Send((Object)send22923, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22925 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// class
send22926 = (Object)new_AST_Send((Object)send22925, (Object)SMB_class, 0);
// should
send22927 = (Object)new_AST_Send((Object)send22926, (Object)symbol4250, 0);
// =
send22928 = (Object)new_AST_Send((Object)send22927, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22929 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// name
send22930 = (Object)new_AST_Send((Object)send22929, (Object)SMB_name, 0);
// should
send22931 = (Object)new_AST_Send((Object)send22930, (Object)symbol4250, 0);
string2503 = (Object)new_Type_String(L"c");
constant5309 = (Object)new_AST_Constant((Object)string2503);
// =
send22932 = (Object)new_AST_Send((Object)send22931, (Object)SMB__equal, 1, (Object)constant5309);
// expression
send22933 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4064, 0);
// class
send22934 = (Object)new_AST_Send((Object)send22933, (Object)SMB_class, 0);
// should
send22935 = (Object)new_AST_Send((Object)send22934, (Object)symbol4250, 0);
// =
send22936 = (Object)new_AST_Send((Object)send22935, (Object)SMB__equal, 1, (Object)classreference1337);
string2504 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant5310 = (Object)new_AST_Constant((Object)string2504);
// on:
send22937 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5310);
assign2799 = (Object)new_AST_Assign((Object)localvariable3524, (Object)send22937);
// match:
send22938 = (Object)new_AST_Send((Object)localvariable3523, (Object)symbol4196, 1, (Object)localvariable3524);
assign2800 = (Object)new_AST_Assign((Object)localvariable3525, (Object)send22938);
// class
send22939 = (Object)new_AST_Send((Object)localvariable3525, (Object)SMB_class, 0);
// should
send22940 = (Object)new_AST_Send((Object)send22939, (Object)symbol4250, 0);
// =
send22941 = (Object)new_AST_Send((Object)send22940, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22942 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// class
send22943 = (Object)new_AST_Send((Object)send22942, (Object)SMB_class, 0);
// should
send22944 = (Object)new_AST_Send((Object)send22943, (Object)symbol4250, 0);
// =
send22945 = (Object)new_AST_Send((Object)send22944, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22946 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// name
send22947 = (Object)new_AST_Send((Object)send22946, (Object)SMB_name, 0);
// should
send22948 = (Object)new_AST_Send((Object)send22947, (Object)symbol4250, 0);
string2505 = (Object)new_Type_String(L"a");
constant5311 = (Object)new_AST_Constant((Object)string2505);
// =
send22949 = (Object)new_AST_Send((Object)send22948, (Object)SMB__equal, 1, (Object)constant5311);
// expression
send22950 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4064, 0);
assign2801 = (Object)new_AST_Assign((Object)localvariable3525, (Object)send22950);
// class
send22951 = (Object)new_AST_Send((Object)localvariable3525, (Object)SMB_class, 0);
// should
send22952 = (Object)new_AST_Send((Object)send22951, (Object)symbol4250, 0);
// =
send22953 = (Object)new_AST_Send((Object)send22952, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22954 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// class
send22955 = (Object)new_AST_Send((Object)send22954, (Object)SMB_class, 0);
// should
send22956 = (Object)new_AST_Send((Object)send22955, (Object)symbol4250, 0);
// =
send22957 = (Object)new_AST_Send((Object)send22956, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22958 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// name
send22959 = (Object)new_AST_Send((Object)send22958, (Object)SMB_name, 0);
// should
send22960 = (Object)new_AST_Send((Object)send22959, (Object)symbol4250, 0);
string2506 = (Object)new_Type_String(L"b");
constant5312 = (Object)new_AST_Constant((Object)string2506);
// =
send22961 = (Object)new_AST_Send((Object)send22960, (Object)SMB__equal, 1, (Object)constant5312);
// expression
send22962 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4064, 0);
assign2802 = (Object)new_AST_Assign((Object)localvariable3525, (Object)send22962);
// class
send22963 = (Object)new_AST_Send((Object)localvariable3525, (Object)SMB_class, 0);
// should
send22964 = (Object)new_AST_Send((Object)send22963, (Object)symbol4250, 0);
// =
send22965 = (Object)new_AST_Send((Object)send22964, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send22966 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// class
send22967 = (Object)new_AST_Send((Object)send22966, (Object)SMB_class, 0);
// should
send22968 = (Object)new_AST_Send((Object)send22967, (Object)symbol4250, 0);
// =
send22969 = (Object)new_AST_Send((Object)send22968, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send22970 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4066, 0);
// name
send22971 = (Object)new_AST_Send((Object)send22970, (Object)SMB_name, 0);
// should
send22972 = (Object)new_AST_Send((Object)send22971, (Object)symbol4250, 0);
string2507 = (Object)new_Type_String(L"c");
constant5313 = (Object)new_AST_Constant((Object)string2507);
// =
send22973 = (Object)new_AST_Send((Object)send22972, (Object)SMB__equal, 1, (Object)constant5313);
// expression
send22974 = (Object)new_AST_Send((Object)localvariable3525, (Object)symbol4064, 0);
// class
send22975 = (Object)new_AST_Send((Object)send22974, (Object)SMB_class, 0);
// should
send22976 = (Object)new_AST_Send((Object)send22975, (Object)symbol4250, 0);
// =
send22977 = (Object)new_AST_Send((Object)send22976, (Object)SMB__equal, 1, (Object)classreference1337);
method4658 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2992, 30, assign2794, assign2795, assign2796, send22900, send22904, send22908, assign2797, send22912, send22916, send22920, assign2798, send22924, send22928, send22932, send22936, assign2799, assign2800, send22941, send22945, send22949, assign2801, send22953, send22957, send22961, assign2802, send22965, send22969, send22973, send22977, Self);
symbol3982 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure4646 = (Object)new_Runtime_MethodClosure(method4658);
store_method((Type_Class)class751, (Type_Symbol)symbol3982, (Runtime_MethodClosure)methodclosure4646);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable3526 = (Object)new_AST_Variable_named(L"parser");
localvariable3527 = (Object)new_AST_Variable_named(L"string");
localvariable3528 = (Object)new_AST_Variable_named(L"message");
localvariable3529 = (Object)new_AST_Variable_named(L"return");
array2993 = (Object)new_Type_Array_with(4, (Object)localvariable3526, (Object)localvariable3527, (Object)localvariable3528, (Object)localvariable3529);
symbol4271 = (Object)new_Type_Symbol_cached(L"messageExpression");
// messageExpression
send22978 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4271, 0);
assign2803 = (Object)new_AST_Assign((Object)localvariable3526, (Object)send22978);
string2508 = (Object)new_Type_String(L"self do: this and: that");
constant5314 = (Object)new_AST_Constant((Object)string2508);
// on:
send22979 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5314);
assign2804 = (Object)new_AST_Assign((Object)localvariable3527, (Object)send22979);
// match:
send22980 = (Object)new_AST_Send((Object)localvariable3526, (Object)symbol4196, 1, (Object)localvariable3527);
assign2805 = (Object)new_AST_Assign((Object)localvariable3528, (Object)send22980);
// receiver
send22981 = (Object)new_AST_Send((Object)localvariable3528, (Object)symbol4082, 0);
// class
send22982 = (Object)new_AST_Send((Object)send22981, (Object)SMB_class, 0);
// should
send22983 = (Object)new_AST_Send((Object)send22982, (Object)symbol4250, 0);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable3530 = (Object)new_AST_Variable_named(L"aStream");
array2994 = (Object)new_Type_Array_with(1, (Object)localvariable3530);
string2509 = (Object)new_Type_String(L"self");
constant5315 = (Object)new_AST_Constant((Object)string2509);
// nextPutAll:
send22984 = (Object)new_AST_Send((Object)localvariable3530, (Object)symbol4238, 1, (Object)constant5315);
method4659 = (Object)new_AST_Method_with((Type_Array)array2994, (Type_Array)empty_Type_Array, 2, send22984, Self);
methodclosure4647 = (Object)new_Runtime_MethodClosure(method4659);
store_method((Type_Class)class756, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4647);

classreference1346 = (Object)new_Organization_ClassReference((Type_Class)class756);
// =
send22985 = (Object)new_AST_Send((Object)send22983, (Object)SMB__equal, 1, (Object)classreference1346);
symbol4272 = (Object)new_Type_Symbol_cached(L"return");
// return
send22986 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4272, 0);
assign2806 = (Object)new_AST_Assign((Object)localvariable3526, (Object)send22986);
string2510 = (Object)new_Type_String(L"^ self do: this and: that");
constant5316 = (Object)new_AST_Constant((Object)string2510);
// on:
send22987 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5316);
assign2807 = (Object)new_AST_Assign((Object)localvariable3527, (Object)send22987);
// match:
send22988 = (Object)new_AST_Send((Object)localvariable3526, (Object)symbol4196, 1, (Object)localvariable3527);
assign2808 = (Object)new_AST_Assign((Object)localvariable3529, (Object)send22988);
// class
send22989 = (Object)new_AST_Send((Object)localvariable3529, (Object)SMB_class, 0);
// should
send22990 = (Object)new_AST_Send((Object)send22989, (Object)symbol4250, 0);

// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method4660 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure4648 = (Object)new_Runtime_MethodClosure(method4660);
store_method((Type_Class)class775, (Type_Symbol)symbol3903, (Runtime_MethodClosure)methodclosure4648);


// ASTReturnExpression>>expression
//expression
// 	^ expression
method4661 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1553);
methodclosure4649 = (Object)new_Runtime_MethodClosure(method4661);
store_method((Type_Class)class775, (Type_Symbol)symbol4064, (Runtime_MethodClosure)methodclosure4649);


// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable3531 = (Object)new_AST_Variable_named(L"anObject");
array2995 = (Object)new_Type_Array_with(1, (Object)localvariable3531);
assign2809 = (Object)new_AST_Assign((Object)instancevariable1553, (Object)localvariable3531);
method4662 = (Object)new_AST_Method_with((Type_Array)array2995, (Type_Array)empty_Type_Array, 2, assign2809, Self);
methodclosure4650 = (Object)new_Runtime_MethodClosure(method4662);
store_method((Type_Class)class775, (Type_Symbol)symbol4065, (Runtime_MethodClosure)methodclosure4650);

classreference1347 = (Object)new_Organization_ClassReference((Type_Class)class775);
// =
send22991 = (Object)new_AST_Send((Object)send22990, (Object)SMB__equal, 1, (Object)classreference1347);
// expression
send22992 = (Object)new_AST_Send((Object)localvariable3529, (Object)symbol4064, 0);
// receiver
send22993 = (Object)new_AST_Send((Object)send22992, (Object)symbol4082, 0);
// class
send22994 = (Object)new_AST_Send((Object)send22993, (Object)SMB_class, 0);
// should
send22995 = (Object)new_AST_Send((Object)send22994, (Object)symbol4250, 0);
// =
send22996 = (Object)new_AST_Send((Object)send22995, (Object)SMB__equal, 1, (Object)classreference1346);
method4663 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2993, 10, assign2803, assign2804, assign2805, send22985, assign2806, assign2807, assign2808, send22991, send22996, Self);
symbol3974 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure4651 = (Object)new_Runtime_MethodClosure(method4663);
store_method((Type_Class)class751, (Type_Symbol)symbol3974, (Runtime_MethodClosure)methodclosure4651);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable3532 = (Object)new_AST_Variable_named(L"parser");
localvariable3533 = (Object)new_AST_Variable_named(L"string");
localvariable3534 = (Object)new_AST_Variable_named(L"result");
localvariable3535 = (Object)new_AST_Variable_named(L"arg");
array2996 = (Object)new_Type_Array_with(4, (Object)localvariable3532, (Object)localvariable3533, (Object)localvariable3534, (Object)localvariable3535);
symbol4273 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send22997 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4273, 0);
assign2810 = (Object)new_AST_Assign((Object)localvariable3532, (Object)send22997);
string2511 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant5317 = (Object)new_AST_Constant((Object)string2511);
// on:
send22998 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5317);
assign2811 = (Object)new_AST_Assign((Object)localvariable3533, (Object)send22998);
// match:
send22999 = (Object)new_AST_Send((Object)localvariable3532, (Object)symbol4196, 1, (Object)localvariable3533);
assign2812 = (Object)new_AST_Assign((Object)localvariable3534, (Object)send22999);
// class
send23000 = (Object)new_AST_Send((Object)localvariable3534, (Object)SMB_class, 0);
// should
send23001 = (Object)new_AST_Send((Object)send23000, (Object)symbol4250, 0);

// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method4664 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1540);
methodclosure4652 = (Object)new_Runtime_MethodClosure(method4664);
store_method((Type_Class)class762, (Type_Symbol)symbol4008, (Runtime_MethodClosure)methodclosure4652);


// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable3536 = (Object)new_AST_Variable_named(L"anObject");
array2997 = (Object)new_Type_Array_with(1, (Object)localvariable3536);
assign2813 = (Object)new_AST_Assign((Object)instancevariable1540, (Object)localvariable3536);
method4665 = (Object)new_AST_Method_with((Type_Array)array2997, (Type_Array)empty_Type_Array, 2, assign2813, Self);
methodclosure4653 = (Object)new_Runtime_MethodClosure(method4665);
store_method((Type_Class)class762, (Type_Symbol)symbol4081, (Runtime_MethodClosure)methodclosure4653);

classreference1348 = (Object)new_Organization_ClassReference((Type_Class)class762);
// =
send23002 = (Object)new_AST_Send((Object)send23001, (Object)SMB__equal, 1, (Object)classreference1348);
// keywords
send23003 = (Object)new_AST_Send((Object)localvariable3534, (Object)symbol4078, 0);
// asArray
send23004 = (Object)new_AST_Send((Object)send23003, (Object)SMB_asArray, 0);
constant5318 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send23005 = (Object)new_AST_Send((Object)send23004, (Object)symbol4264, 1, (Object)constant5318);
// should
send23006 = (Object)new_AST_Send((Object)send23005, (Object)symbol4250, 0);
localvariable3537 = (Object)new_AST_Variable_named(L"receiver");
array2998 = (Object)new_Type_Array_with(1, (Object)localvariable3537);
smallint2414 = (Object)new_Type_SmallInt(1);
constant5319 = (Object)new_AST_Constant((Object)smallint2414);
symbol4274 = (Object)new_Type_Symbol_cached(L"abc");
constant5320 = (Object)new_AST_Constant((Object)symbol4274);
// at:put:
send23007 = (Object)new_AST_Send((Object)localvariable3537, (Object)SMB_at_put_, 2, (Object)constant5319, (Object)constant5320);
smallint2415 = (Object)new_Type_SmallInt(2);
constant5321 = (Object)new_AST_Constant((Object)smallint2415);
symbol4275 = (Object)new_Type_Symbol_cached(L"def");
constant5322 = (Object)new_AST_Constant((Object)symbol4275);
// at:put:
send23008 = (Object)new_AST_Send((Object)localvariable3537, (Object)SMB_at_put_, 2, (Object)constant5321, (Object)constant5322);
smallint2416 = (Object)new_Type_SmallInt(3);
constant5323 = (Object)new_AST_Constant((Object)smallint2416);
symbol4276 = (Object)new_Type_Symbol_cached(L"ghi");
constant5324 = (Object)new_AST_Constant((Object)symbol4276);
// at:put:
send23009 = (Object)new_AST_Send((Object)localvariable3537, (Object)SMB_at_put_, 2, (Object)constant5323, (Object)constant5324);
// yourself
send23010 = (Object)new_AST_Send((Object)localvariable3537, (Object)symbol3904, 0);
block1423 = (Object)new_AST_Block_with((Type_Array)array2998, (Type_Array)empty_Type_Array, 1, 4, send23007, send23008, send23009, send23010);
smallint2417 = (Object)new_Type_SmallInt(3);
constant5325 = (Object)new_AST_Constant((Object)smallint2417);
// new:
send23011 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5325);
// value:
send23012 = (Object)new_AST_Send((Object)block1423, (Object)SMB_value_, 1, (Object)send23011);
// =
send23013 = (Object)new_AST_Send((Object)send23006, (Object)SMB__equal, 1, (Object)send23012);
// arguments
send23014 = (Object)new_AST_Send((Object)localvariable3534, (Object)symbol4008, 0);
// first
send23015 = (Object)new_AST_Send((Object)send23014, (Object)symbol4041, 0);
assign2814 = (Object)new_AST_Assign((Object)localvariable3535, (Object)send23015);
// class
send23016 = (Object)new_AST_Send((Object)localvariable3535, (Object)SMB_class, 0);
// should
send23017 = (Object)new_AST_Send((Object)send23016, (Object)symbol4250, 0);
// =
send23018 = (Object)new_AST_Send((Object)send23017, (Object)SMB__equal, 1, (Object)classreference1340);
// arguments
send23019 = (Object)new_AST_Send((Object)localvariable3534, (Object)symbol4008, 0);
smallint2418 = (Object)new_Type_SmallInt(2);
constant5326 = (Object)new_AST_Constant((Object)smallint2418);
// at:
send23020 = (Object)new_AST_Send((Object)send23019, (Object)SMB_at_, 1, (Object)constant5326);
assign2815 = (Object)new_AST_Assign((Object)localvariable3535, (Object)send23020);
// class
send23021 = (Object)new_AST_Send((Object)localvariable3535, (Object)SMB_class, 0);
// should
send23022 = (Object)new_AST_Send((Object)send23021, (Object)symbol4250, 0);
// =
send23023 = (Object)new_AST_Send((Object)send23022, (Object)SMB__equal, 1, (Object)classreference1341);
// arguments
send23024 = (Object)new_AST_Send((Object)localvariable3534, (Object)symbol4008, 0);
smallint2419 = (Object)new_Type_SmallInt(3);
constant5327 = (Object)new_AST_Constant((Object)smallint2419);
// at:
send23025 = (Object)new_AST_Send((Object)send23024, (Object)SMB_at_, 1, (Object)constant5327);
assign2816 = (Object)new_AST_Assign((Object)localvariable3535, (Object)send23025);
// class
send23026 = (Object)new_AST_Send((Object)localvariable3535, (Object)SMB_class, 0);
// should
send23027 = (Object)new_AST_Send((Object)send23026, (Object)symbol4250, 0);
// =
send23028 = (Object)new_AST_Send((Object)send23027, (Object)SMB__equal, 1, (Object)classreference1342);
// atEnd
send23029 = (Object)new_AST_Send((Object)localvariable3533, (Object)SMB_atEnd, 0);
// should
send23030 = (Object)new_AST_Send((Object)send23029, (Object)symbol4250, 0);
// be
send23031 = (Object)new_AST_Send((Object)send23030, (Object)symbol4251, 0);
// true
send23032 = (Object)new_AST_Send((Object)send23031, (Object)symbol4266, 0);
string2512 = (Object)new_Type_String(L"<abc> ");
constant5328 = (Object)new_AST_Constant((Object)string2512);
// on:
send23033 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5328);
assign2817 = (Object)new_AST_Assign((Object)localvariable3533, (Object)send23033);
// match:
send23034 = (Object)new_AST_Send((Object)localvariable3532, (Object)symbol4196, 1, (Object)localvariable3533);
assign2818 = (Object)new_AST_Assign((Object)localvariable3534, (Object)send23034);
// class
send23035 = (Object)new_AST_Send((Object)localvariable3534, (Object)SMB_class, 0);
// should
send23036 = (Object)new_AST_Send((Object)send23035, (Object)symbol4250, 0);
classreference1349 = (Object)new_Organization_ClassReference((Type_Class)class767);
// =
send23037 = (Object)new_AST_Send((Object)send23036, (Object)SMB__equal, 1, (Object)classreference1349);
// selector
send23038 = (Object)new_AST_Send((Object)localvariable3534, (Object)symbol4007, 0);
// asString
send23039 = (Object)new_AST_Send((Object)send23038, (Object)SMB_asString, 0);
// should
send23040 = (Object)new_AST_Send((Object)send23039, (Object)symbol4250, 0);
string2513 = (Object)new_Type_String(L"abc");
constant5329 = (Object)new_AST_Constant((Object)string2513);
// =
send23041 = (Object)new_AST_Send((Object)send23040, (Object)SMB__equal, 1, (Object)constant5329);
// position
send23042 = (Object)new_AST_Send((Object)localvariable3533, (Object)symbol4241, 0);
// should
send23043 = (Object)new_AST_Send((Object)send23042, (Object)symbol4250, 0);
smallint2420 = (Object)new_Type_SmallInt(5);
constant5330 = (Object)new_AST_Constant((Object)smallint2420);
// =
send23044 = (Object)new_AST_Send((Object)send23043, (Object)SMB__equal, 1, (Object)constant5330);
string2514 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant5331 = (Object)new_AST_Constant((Object)string2514);
// on:
send23045 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5331);
assign2819 = (Object)new_AST_Assign((Object)localvariable3533, (Object)send23045);
// match:
send23046 = (Object)new_AST_Send((Object)localvariable3532, (Object)symbol4196, 1, (Object)localvariable3533);
assign2820 = (Object)new_AST_Assign((Object)localvariable3534, (Object)send23046);
// class
send23047 = (Object)new_AST_Send((Object)localvariable3534, (Object)SMB_class, 0);
// should
send23048 = (Object)new_AST_Send((Object)send23047, (Object)symbol4250, 0);
// =
send23049 = (Object)new_AST_Send((Object)send23048, (Object)SMB__equal, 1, (Object)classreference1348);
// keywords
send23050 = (Object)new_AST_Send((Object)localvariable3534, (Object)symbol4078, 0);
// asArray
send23051 = (Object)new_AST_Send((Object)send23050, (Object)SMB_asArray, 0);
constant5332 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send23052 = (Object)new_AST_Send((Object)send23051, (Object)symbol4264, 1, (Object)constant5332);
// should
send23053 = (Object)new_AST_Send((Object)send23052, (Object)symbol4250, 0);
localvariable3538 = (Object)new_AST_Variable_named(L"receiver");
array2999 = (Object)new_Type_Array_with(1, (Object)localvariable3538);
smallint2421 = (Object)new_Type_SmallInt(1);
constant5333 = (Object)new_AST_Constant((Object)smallint2421);
string2515 = (Object)new_Type_String(L"temps");
constant5334 = (Object)new_AST_Constant((Object)string2515);
// at:put:
send23054 = (Object)new_AST_Send((Object)localvariable3538, (Object)SMB_at_put_, 2, (Object)constant5333, (Object)constant5334);
smallint2422 = (Object)new_Type_SmallInt(2);
constant5335 = (Object)new_AST_Constant((Object)smallint2422);
string2516 = (Object)new_Type_String(L"annotations");
constant5336 = (Object)new_AST_Constant((Object)string2516);
// at:put:
send23055 = (Object)new_AST_Send((Object)localvariable3538, (Object)SMB_at_put_, 2, (Object)constant5335, (Object)constant5336);
smallint2423 = (Object)new_Type_SmallInt(3);
constant5337 = (Object)new_AST_Constant((Object)smallint2423);
string2517 = (Object)new_Type_String(L"statements");
constant5338 = (Object)new_AST_Constant((Object)string2517);
// at:put:
send23056 = (Object)new_AST_Send((Object)localvariable3538, (Object)SMB_at_put_, 2, (Object)constant5337, (Object)constant5338);
// yourself
send23057 = (Object)new_AST_Send((Object)localvariable3538, (Object)symbol3904, 0);
block1424 = (Object)new_AST_Block_with((Type_Array)array2999, (Type_Array)empty_Type_Array, 1, 4, send23054, send23055, send23056, send23057);
smallint2424 = (Object)new_Type_SmallInt(3);
constant5339 = (Object)new_AST_Constant((Object)smallint2424);
// new:
send23058 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5339);
// value:
send23059 = (Object)new_AST_Send((Object)block1424, (Object)SMB_value_, 1, (Object)send23058);
// =
send23060 = (Object)new_AST_Send((Object)send23053, (Object)SMB__equal, 1, (Object)send23059);
// atEnd
send23061 = (Object)new_AST_Send((Object)localvariable3533, (Object)SMB_atEnd, 0);
// should
send23062 = (Object)new_AST_Send((Object)send23061, (Object)symbol4250, 0);
// be
send23063 = (Object)new_AST_Send((Object)send23062, (Object)symbol4251, 0);
// true
send23064 = (Object)new_AST_Send((Object)send23063, (Object)symbol4266, 0);
method4666 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array2996, 23, assign2810, assign2811, assign2812, send23002, send23013, assign2814, send23018, assign2815, send23023, assign2816, send23028, send23032, assign2817, assign2818, send23037, send23041, send23044, assign2819, assign2820, send23049, send23060, send23064, Self);
symbol3936 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure4654 = (Object)new_Runtime_MethodClosure(method4666);
store_method((Type_Class)class751, (Type_Symbol)symbol3936, (Runtime_MethodClosure)methodclosure4654);


// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable3539 = (Object)new_AST_Variable_named(L"string");
localvariable3540 = (Object)new_AST_Variable_named(L"result");
localvariable3541 = (Object)new_AST_Variable_named(L"var");
localvariable3542 = (Object)new_AST_Variable_named(L"parser");
array3000 = (Object)new_Type_Array_with(4, (Object)localvariable3539, (Object)localvariable3540, (Object)localvariable3541, (Object)localvariable3542);
symbol4277 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send23065 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4277, 0);
assign2821 = (Object)new_AST_Assign((Object)localvariable3542, (Object)send23065);
string2518 = (Object)new_Type_String(L":abcd :def");
constant5340 = (Object)new_AST_Constant((Object)string2518);
// on:
send23066 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5340);
assign2822 = (Object)new_AST_Assign((Object)localvariable3539, (Object)send23066);
// match:
send23067 = (Object)new_AST_Send((Object)localvariable3542, (Object)symbol4196, 1, (Object)localvariable3539);
assign2823 = (Object)new_AST_Assign((Object)localvariable3540, (Object)send23067);
// position
send23068 = (Object)new_AST_Send((Object)localvariable3539, (Object)symbol4241, 0);
// should
send23069 = (Object)new_AST_Send((Object)send23068, (Object)symbol4250, 0);
smallint2425 = (Object)new_Type_SmallInt(10);
constant5341 = (Object)new_AST_Constant((Object)smallint2425);
// =
send23070 = (Object)new_AST_Send((Object)send23069, (Object)SMB__equal, 1, (Object)constant5341);
// class
send23071 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_class, 0);
// should
send23072 = (Object)new_AST_Send((Object)send23071, (Object)symbol4250, 0);
// =
send23073 = (Object)new_AST_Send((Object)send23072, (Object)SMB__equal, 1, (Object)classreference1323);
// size
send23074 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_size, 0);
// should
send23075 = (Object)new_AST_Send((Object)send23074, (Object)symbol4250, 0);
smallint2426 = (Object)new_Type_SmallInt(2);
constant5342 = (Object)new_AST_Constant((Object)smallint2426);
// =
send23076 = (Object)new_AST_Send((Object)send23075, (Object)SMB__equal, 1, (Object)constant5342);
smallint2427 = (Object)new_Type_SmallInt(1);
constant5343 = (Object)new_AST_Constant((Object)smallint2427);
// at:
send23077 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_at_, 1, (Object)constant5343);
assign2824 = (Object)new_AST_Assign((Object)localvariable3541, (Object)send23077);
// class
send23078 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_class, 0);
// should
send23079 = (Object)new_AST_Send((Object)send23078, (Object)symbol4250, 0);
// =
send23080 = (Object)new_AST_Send((Object)send23079, (Object)SMB__equal, 1, (Object)classreference1336);
// name
send23081 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_name, 0);
// should
send23082 = (Object)new_AST_Send((Object)send23081, (Object)symbol4250, 0);
string2519 = (Object)new_Type_String(L"abcd");
constant5344 = (Object)new_AST_Constant((Object)string2519);
// =
send23083 = (Object)new_AST_Send((Object)send23082, (Object)SMB__equal, 1, (Object)constant5344);
smallint2428 = (Object)new_Type_SmallInt(2);
constant5345 = (Object)new_AST_Constant((Object)smallint2428);
// at:
send23084 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_at_, 1, (Object)constant5345);
assign2825 = (Object)new_AST_Assign((Object)localvariable3541, (Object)send23084);
// class
send23085 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_class, 0);
// should
send23086 = (Object)new_AST_Send((Object)send23085, (Object)symbol4250, 0);
// =
send23087 = (Object)new_AST_Send((Object)send23086, (Object)SMB__equal, 1, (Object)classreference1336);
// name
send23088 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_name, 0);
// should
send23089 = (Object)new_AST_Send((Object)send23088, (Object)symbol4250, 0);
string2520 = (Object)new_Type_String(L"def");
constant5346 = (Object)new_AST_Constant((Object)string2520);
// =
send23090 = (Object)new_AST_Send((Object)send23089, (Object)SMB__equal, 1, (Object)constant5346);
string2521 = (Object)new_Type_String(L" :  abcd:   def ");
constant5347 = (Object)new_AST_Constant((Object)string2521);
// on:
send23091 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5347);
assign2826 = (Object)new_AST_Assign((Object)localvariable3539, (Object)send23091);
// match:
send23092 = (Object)new_AST_Send((Object)localvariable3542, (Object)symbol4196, 1, (Object)localvariable3539);
assign2827 = (Object)new_AST_Assign((Object)localvariable3540, (Object)send23092);
// position
send23093 = (Object)new_AST_Send((Object)localvariable3539, (Object)symbol4241, 0);
// should
send23094 = (Object)new_AST_Send((Object)send23093, (Object)symbol4250, 0);
smallint2429 = (Object)new_Type_SmallInt(16);
constant5348 = (Object)new_AST_Constant((Object)smallint2429);
// =
send23095 = (Object)new_AST_Send((Object)send23094, (Object)SMB__equal, 1, (Object)constant5348);
// class
send23096 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_class, 0);
// should
send23097 = (Object)new_AST_Send((Object)send23096, (Object)symbol4250, 0);
// =
send23098 = (Object)new_AST_Send((Object)send23097, (Object)SMB__equal, 1, (Object)classreference1323);
// size
send23099 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_size, 0);
// should
send23100 = (Object)new_AST_Send((Object)send23099, (Object)symbol4250, 0);
smallint2430 = (Object)new_Type_SmallInt(2);
constant5349 = (Object)new_AST_Constant((Object)smallint2430);
// =
send23101 = (Object)new_AST_Send((Object)send23100, (Object)SMB__equal, 1, (Object)constant5349);
// first
send23102 = (Object)new_AST_Send((Object)localvariable3540, (Object)symbol4041, 0);
assign2828 = (Object)new_AST_Assign((Object)localvariable3541, (Object)send23102);
// class
send23103 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_class, 0);
// should
send23104 = (Object)new_AST_Send((Object)send23103, (Object)symbol4250, 0);
// =
send23105 = (Object)new_AST_Send((Object)send23104, (Object)SMB__equal, 1, (Object)classreference1336);
// name
send23106 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_name, 0);
// should
send23107 = (Object)new_AST_Send((Object)send23106, (Object)symbol4250, 0);
string2522 = (Object)new_Type_String(L"abcd");
constant5350 = (Object)new_AST_Constant((Object)string2522);
// =
send23108 = (Object)new_AST_Send((Object)send23107, (Object)SMB__equal, 1, (Object)constant5350);
smallint2431 = (Object)new_Type_SmallInt(2);
constant5351 = (Object)new_AST_Constant((Object)smallint2431);
// at:
send23109 = (Object)new_AST_Send((Object)localvariable3540, (Object)SMB_at_, 1, (Object)constant5351);
assign2829 = (Object)new_AST_Assign((Object)localvariable3541, (Object)send23109);
// class
send23110 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_class, 0);
// should
send23111 = (Object)new_AST_Send((Object)send23110, (Object)symbol4250, 0);
// =
send23112 = (Object)new_AST_Send((Object)send23111, (Object)SMB__equal, 1, (Object)classreference1336);
// name
send23113 = (Object)new_AST_Send((Object)localvariable3541, (Object)SMB_name, 0);
// should
send23114 = (Object)new_AST_Send((Object)send23113, (Object)symbol4250, 0);
string2523 = (Object)new_Type_String(L"def");
constant5352 = (Object)new_AST_Constant((Object)string2523);
// =
send23115 = (Object)new_AST_Send((Object)send23114, (Object)SMB__equal, 1, (Object)constant5352);
method4667 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3000, 24, assign2821, assign2822, assign2823, send23070, send23073, send23076, assign2824, send23080, send23083, assign2825, send23087, send23090, assign2826, assign2827, send23095, send23098, send23101, assign2828, send23105, send23108, assign2829, send23112, send23115, Self);
symbol3984 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure4655 = (Object)new_Runtime_MethodClosure(method4667);
store_method((Type_Class)class751, (Type_Symbol)symbol3984, (Runtime_MethodClosure)methodclosure4655);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3543 = (Object)new_AST_Variable_named(L"parser");
localvariable3544 = (Object)new_AST_Variable_named(L"string");
array3001 = (Object)new_Type_Array_with(2, (Object)localvariable3543, (Object)localvariable3544);
symbol4278 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send23116 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4278, 0);
assign2830 = (Object)new_AST_Assign((Object)localvariable3543, (Object)send23116);
string2524 = (Object)new_Type_String(L"abcd ");
constant5353 = (Object)new_AST_Constant((Object)string2524);
// on:
send23117 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5353);
assign2831 = (Object)new_AST_Assign((Object)localvariable3544, (Object)send23117);
// match:
send23118 = (Object)new_AST_Send((Object)localvariable3543, (Object)symbol4196, 1, (Object)localvariable3544);
// should
send23119 = (Object)new_AST_Send((Object)send23118, (Object)symbol4250, 0);
string2525 = (Object)new_Type_String(L"abcd");
constant5354 = (Object)new_AST_Constant((Object)string2525);
// =
send23120 = (Object)new_AST_Send((Object)send23119, (Object)SMB__equal, 1, (Object)constant5354);
// position
send23121 = (Object)new_AST_Send((Object)localvariable3544, (Object)symbol4241, 0);
// should
send23122 = (Object)new_AST_Send((Object)send23121, (Object)symbol4250, 0);
smallint2432 = (Object)new_Type_SmallInt(4);
constant5355 = (Object)new_AST_Constant((Object)smallint2432);
// =
send23123 = (Object)new_AST_Send((Object)send23122, (Object)SMB__equal, 1, (Object)constant5355);
string2526 = (Object)new_Type_String(L"AbCd145 ");
constant5356 = (Object)new_AST_Constant((Object)string2526);
// on:
send23124 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5356);
assign2832 = (Object)new_AST_Assign((Object)localvariable3544, (Object)send23124);
// match:
send23125 = (Object)new_AST_Send((Object)localvariable3543, (Object)symbol4196, 1, (Object)localvariable3544);
// should
send23126 = (Object)new_AST_Send((Object)send23125, (Object)symbol4250, 0);
string2527 = (Object)new_Type_String(L"AbCd145");
constant5357 = (Object)new_AST_Constant((Object)string2527);
// =
send23127 = (Object)new_AST_Send((Object)send23126, (Object)SMB__equal, 1, (Object)constant5357);
// position
send23128 = (Object)new_AST_Send((Object)localvariable3544, (Object)symbol4241, 0);
// should
send23129 = (Object)new_AST_Send((Object)send23128, (Object)symbol4250, 0);
smallint2433 = (Object)new_Type_SmallInt(7);
constant5358 = (Object)new_AST_Constant((Object)smallint2433);
// =
send23130 = (Object)new_AST_Send((Object)send23129, (Object)SMB__equal, 1, (Object)constant5358);
string2528 = (Object)new_Type_String(L"1a");
constant5359 = (Object)new_AST_Constant((Object)string2528);
// on:
send23131 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5359);
assign2833 = (Object)new_AST_Assign((Object)localvariable3544, (Object)send23131);
// match:
send23132 = (Object)new_AST_Send((Object)localvariable3543, (Object)symbol4196, 1, (Object)localvariable3544);
// should
send23133 = (Object)new_AST_Send((Object)send23132, (Object)symbol4250, 0);
// be
send23134 = (Object)new_AST_Send((Object)send23133, (Object)symbol4251, 0);
// isNil
send23135 = (Object)new_AST_Send((Object)send23134, (Object)SMB_isNil, 0);
// position
send23136 = (Object)new_AST_Send((Object)localvariable3544, (Object)symbol4241, 0);
// should
send23137 = (Object)new_AST_Send((Object)send23136, (Object)symbol4250, 0);
smallint2434 = (Object)new_Type_SmallInt(0);
constant5360 = (Object)new_AST_Constant((Object)smallint2434);
// =
send23138 = (Object)new_AST_Send((Object)send23137, (Object)SMB__equal, 1, (Object)constant5360);
method4668 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3001, 11, assign2830, assign2831, send23120, send23123, assign2832, send23127, send23130, assign2833, send23135, send23138, Self);
symbol3976 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure4656 = (Object)new_Runtime_MethodClosure(method4668);
store_method((Type_Class)class751, (Type_Symbol)symbol3976, (Runtime_MethodClosure)methodclosure4656);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable3545 = (Object)new_AST_Variable_named(L"parser");
localvariable3546 = (Object)new_AST_Variable_named(L"ast");
array3002 = (Object)new_Type_Array_with(2, (Object)localvariable3545, (Object)localvariable3546);
// statements
send23139 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4094, 0);
assign2834 = (Object)new_AST_Assign((Object)localvariable3545, (Object)send23139);
string2529 = (Object)new_Type_String(L"2 fib + 3 ");
constant5361 = (Object)new_AST_Constant((Object)string2529);
// on:
send23140 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5361);
// match:
send23141 = (Object)new_AST_Send((Object)localvariable3545, (Object)symbol4196, 1, (Object)send23140);
// first
send23142 = (Object)new_AST_Send((Object)send23141, (Object)symbol4041, 0);
assign2835 = (Object)new_AST_Assign((Object)localvariable3546, (Object)send23142);
// class
send23143 = (Object)new_AST_Send((Object)localvariable3546, (Object)SMB_class, 0);
// should
send23144 = (Object)new_AST_Send((Object)send23143, (Object)symbol4250, 0);
// =
send23145 = (Object)new_AST_Send((Object)send23144, (Object)SMB__equal, 1, (Object)classreference1341);
// receiver
send23146 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4082, 0);
// class
send23147 = (Object)new_AST_Send((Object)send23146, (Object)SMB_class, 0);
// should
send23148 = (Object)new_AST_Send((Object)send23147, (Object)symbol4250, 0);
// =
send23149 = (Object)new_AST_Send((Object)send23148, (Object)SMB__equal, 1, (Object)classreference1342);
// receiver
send23150 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4082, 0);
// receiver
send23151 = (Object)new_AST_Send((Object)send23150, (Object)symbol4082, 0);
// class
send23152 = (Object)new_AST_Send((Object)send23151, (Object)SMB_class, 0);
// should
send23153 = (Object)new_AST_Send((Object)send23152, (Object)symbol4250, 0);
// =
send23154 = (Object)new_AST_Send((Object)send23153, (Object)SMB__equal, 1, (Object)classreference1340);
// receiver
send23155 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4082, 0);
// receiver
send23156 = (Object)new_AST_Send((Object)send23155, (Object)symbol4082, 0);
// number
send23157 = (Object)new_AST_Send((Object)send23156, (Object)symbol4048, 0);
// should
send23158 = (Object)new_AST_Send((Object)send23157, (Object)symbol4250, 0);
string2530 = (Object)new_Type_String(L"2");
constant5362 = (Object)new_AST_Constant((Object)string2530);
// =
send23159 = (Object)new_AST_Send((Object)send23158, (Object)SMB__equal, 1, (Object)constant5362);
// receiver
send23160 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4082, 0);
// selector
send23161 = (Object)new_AST_Send((Object)send23160, (Object)symbol4007, 0);
// asString
send23162 = (Object)new_AST_Send((Object)send23161, (Object)SMB_asString, 0);
// should
send23163 = (Object)new_AST_Send((Object)send23162, (Object)symbol4250, 0);
string2531 = (Object)new_Type_String(L"fib");
constant5363 = (Object)new_AST_Constant((Object)string2531);
// =
send23164 = (Object)new_AST_Send((Object)send23163, (Object)SMB__equal, 1, (Object)constant5363);
// selector
send23165 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4007, 0);
// asString
send23166 = (Object)new_AST_Send((Object)send23165, (Object)SMB_asString, 0);
// should
send23167 = (Object)new_AST_Send((Object)send23166, (Object)symbol4250, 0);
string2532 = (Object)new_Type_String(L"+");
constant5364 = (Object)new_AST_Constant((Object)string2532);
// =
send23168 = (Object)new_AST_Send((Object)send23167, (Object)SMB__equal, 1, (Object)constant5364);
// argument
send23169 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4086, 0);
// class
send23170 = (Object)new_AST_Send((Object)send23169, (Object)SMB_class, 0);
// should
send23171 = (Object)new_AST_Send((Object)send23170, (Object)symbol4250, 0);
// =
send23172 = (Object)new_AST_Send((Object)send23171, (Object)SMB__equal, 1, (Object)classreference1340);
// argument
send23173 = (Object)new_AST_Send((Object)localvariable3546, (Object)symbol4086, 0);
// number
send23174 = (Object)new_AST_Send((Object)send23173, (Object)symbol4048, 0);
// should
send23175 = (Object)new_AST_Send((Object)send23174, (Object)symbol4250, 0);
string2533 = (Object)new_Type_String(L"3");
constant5365 = (Object)new_AST_Constant((Object)string2533);
// =
send23176 = (Object)new_AST_Send((Object)send23175, (Object)SMB__equal, 1, (Object)constant5365);
method4669 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3002, 11, assign2834, assign2835, send23145, send23149, send23154, send23159, send23164, send23168, send23172, send23176, Self);
symbol3938 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure4657 = (Object)new_Runtime_MethodClosure(method4669);
store_method((Type_Class)class751, (Type_Symbol)symbol3938, (Runtime_MethodClosure)methodclosure4657);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable3547 = (Object)new_AST_Variable_named(L"parser");
localvariable3548 = (Object)new_AST_Variable_named(L"string");
localvariable3549 = (Object)new_AST_Variable_named(L"result");
array3003 = (Object)new_Type_Array_with(3, (Object)localvariable3547, (Object)localvariable3548, (Object)localvariable3549);
symbol4279 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send23177 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4279, 0);
assign2836 = (Object)new_AST_Assign((Object)localvariable3547, (Object)send23177);
string2534 = (Object)new_Type_String(L"abc def ghi ");
constant5366 = (Object)new_AST_Constant((Object)string2534);
// on:
send23178 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5366);
assign2837 = (Object)new_AST_Assign((Object)localvariable3548, (Object)send23178);
// match:
send23179 = (Object)new_AST_Send((Object)localvariable3547, (Object)symbol4196, 1, (Object)localvariable3548);
assign2838 = (Object)new_AST_Assign((Object)localvariable3549, (Object)send23179);
// class
send23180 = (Object)new_AST_Send((Object)localvariable3549, (Object)SMB_class, 0);
// should
send23181 = (Object)new_AST_Send((Object)send23180, (Object)symbol4250, 0);
// =
send23182 = (Object)new_AST_Send((Object)send23181, (Object)SMB__equal, 1, (Object)classreference1342);
// selector
send23183 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4007, 0);
// class
send23184 = (Object)new_AST_Send((Object)send23183, (Object)SMB_class, 0);
// should
send23185 = (Object)new_AST_Send((Object)send23184, (Object)symbol4250, 0);
// =
send23186 = (Object)new_AST_Send((Object)send23185, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send23187 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4007, 0);
// selector
send23188 = (Object)new_AST_Send((Object)send23187, (Object)symbol4007, 0);
// printString
send23189 = (Object)new_AST_Send((Object)send23188, (Object)symbol4198, 0);
// should
send23190 = (Object)new_AST_Send((Object)send23189, (Object)symbol4250, 0);
string2535 = (Object)new_Type_String(L"ghi");
constant5367 = (Object)new_AST_Constant((Object)string2535);
// =
send23191 = (Object)new_AST_Send((Object)send23190, (Object)SMB__equal, 1, (Object)constant5367);
// receiver
send23192 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4082, 0);
assign2839 = (Object)new_AST_Assign((Object)localvariable3549, (Object)send23192);
// class
send23193 = (Object)new_AST_Send((Object)localvariable3549, (Object)SMB_class, 0);
// should
send23194 = (Object)new_AST_Send((Object)send23193, (Object)symbol4250, 0);
// =
send23195 = (Object)new_AST_Send((Object)send23194, (Object)SMB__equal, 1, (Object)classreference1342);
// selector
send23196 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4007, 0);
// class
send23197 = (Object)new_AST_Send((Object)send23196, (Object)SMB_class, 0);
// should
send23198 = (Object)new_AST_Send((Object)send23197, (Object)symbol4250, 0);
// =
send23199 = (Object)new_AST_Send((Object)send23198, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send23200 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4007, 0);
// selector
send23201 = (Object)new_AST_Send((Object)send23200, (Object)symbol4007, 0);
// printString
send23202 = (Object)new_AST_Send((Object)send23201, (Object)symbol4198, 0);
// should
send23203 = (Object)new_AST_Send((Object)send23202, (Object)symbol4250, 0);
string2536 = (Object)new_Type_String(L"def");
constant5368 = (Object)new_AST_Constant((Object)string2536);
// =
send23204 = (Object)new_AST_Send((Object)send23203, (Object)SMB__equal, 1, (Object)constant5368);
// receiver
send23205 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4082, 0);
// class
send23206 = (Object)new_AST_Send((Object)send23205, (Object)SMB_class, 0);
// should
send23207 = (Object)new_AST_Send((Object)send23206, (Object)symbol4250, 0);
// =
send23208 = (Object)new_AST_Send((Object)send23207, (Object)SMB__equal, 1, (Object)classreference1336);
// receiver
send23209 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4082, 0);
// name
send23210 = (Object)new_AST_Send((Object)send23209, (Object)SMB_name, 0);
// should
send23211 = (Object)new_AST_Send((Object)send23210, (Object)symbol4250, 0);
string2537 = (Object)new_Type_String(L"abc");
constant5369 = (Object)new_AST_Constant((Object)string2537);
// =
send23212 = (Object)new_AST_Send((Object)send23211, (Object)SMB__equal, 1, (Object)constant5369);
// position
send23213 = (Object)new_AST_Send((Object)localvariable3548, (Object)symbol4241, 0);
// should
send23214 = (Object)new_AST_Send((Object)send23213, (Object)symbol4250, 0);
smallint2435 = (Object)new_Type_SmallInt(12);
constant5370 = (Object)new_AST_Constant((Object)smallint2435);
// =
send23215 = (Object)new_AST_Send((Object)send23214, (Object)SMB__equal, 1, (Object)constant5370);
string2538 = (Object)new_Type_String(L"3");
constant5371 = (Object)new_AST_Constant((Object)string2538);
// on:
send23216 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5371);
assign2840 = (Object)new_AST_Assign((Object)localvariable3548, (Object)send23216);
// match:
send23217 = (Object)new_AST_Send((Object)localvariable3547, (Object)symbol4196, 1, (Object)localvariable3548);
assign2841 = (Object)new_AST_Assign((Object)localvariable3549, (Object)send23217);
// class
send23218 = (Object)new_AST_Send((Object)localvariable3549, (Object)SMB_class, 0);
// should
send23219 = (Object)new_AST_Send((Object)send23218, (Object)symbol4250, 0);
// =
send23220 = (Object)new_AST_Send((Object)send23219, (Object)SMB__equal, 1, (Object)classreference1340);
// number
send23221 = (Object)new_AST_Send((Object)localvariable3549, (Object)symbol4048, 0);
// should
send23222 = (Object)new_AST_Send((Object)send23221, (Object)symbol4250, 0);
string2539 = (Object)new_Type_String(L"3");
constant5372 = (Object)new_AST_Constant((Object)string2539);
// =
send23223 = (Object)new_AST_Send((Object)send23222, (Object)SMB__equal, 1, (Object)constant5372);
// position
send23224 = (Object)new_AST_Send((Object)localvariable3548, (Object)symbol4241, 0);
// should
send23225 = (Object)new_AST_Send((Object)send23224, (Object)symbol4250, 0);
smallint2436 = (Object)new_Type_SmallInt(1);
constant5373 = (Object)new_AST_Constant((Object)smallint2436);
// =
send23226 = (Object)new_AST_Send((Object)send23225, (Object)SMB__equal, 1, (Object)constant5373);
method4670 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3003, 19, assign2836, assign2837, assign2838, send23182, send23186, send23191, assign2839, send23195, send23199, send23204, send23208, send23212, send23215, assign2840, assign2841, send23220, send23223, send23226, Self);
symbol3966 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure4658 = (Object)new_Runtime_MethodClosure(method4670);
store_method((Type_Class)class751, (Type_Symbol)symbol3966, (Runtime_MethodClosure)methodclosure4658);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable3550 = (Object)new_AST_Variable_named(L"parser");
localvariable3551 = (Object)new_AST_Variable_named(L"string");
localvariable3552 = (Object)new_AST_Variable_named(L"result");
array3004 = (Object)new_Type_Array_with(3, (Object)localvariable3550, (Object)localvariable3551, (Object)localvariable3552);
symbol4280 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send23227 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4280, 0);
assign2842 = (Object)new_AST_Assign((Object)localvariable3550, (Object)send23227);
string2540 = (Object)new_Type_String(L"\'abc\'");
constant5374 = (Object)new_AST_Constant((Object)string2540);
// on:
send23228 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5374);
assign2843 = (Object)new_AST_Assign((Object)localvariable3551, (Object)send23228);
// match:
send23229 = (Object)new_AST_Send((Object)localvariable3550, (Object)symbol4196, 1, (Object)localvariable3551);
assign2844 = (Object)new_AST_Assign((Object)localvariable3552, (Object)send23229);
// class
send23230 = (Object)new_AST_Send((Object)localvariable3552, (Object)SMB_class, 0);
// should
send23231 = (Object)new_AST_Send((Object)send23230, (Object)symbol4250, 0);

// ASTString>>string
//string
// 	^ string
method4671 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1552);
symbol4060 = (Object)new_Type_Symbol_cached(L"string");
methodclosure4659 = (Object)new_Runtime_MethodClosure(method4671);
store_method((Type_Class)class774, (Type_Symbol)symbol4060, (Runtime_MethodClosure)methodclosure4659);


// ASTString>>string:
//string: aString
// 	string := aString
localvariable3553 = (Object)new_AST_Variable_named(L"aString");
array3005 = (Object)new_Type_Array_with(1, (Object)localvariable3553);
assign2845 = (Object)new_AST_Assign((Object)instancevariable1552, (Object)localvariable3553);
method4672 = (Object)new_AST_Method_with((Type_Array)array3005, (Type_Array)empty_Type_Array, 2, assign2845, Self);
symbol4059 = (Object)new_Type_Symbol_cached(L"string:");
methodclosure4660 = (Object)new_Runtime_MethodClosure(method4672);
store_method((Type_Class)class774, (Type_Symbol)symbol4059, (Runtime_MethodClosure)methodclosure4660);


// ASTString>>asPString
//asPString 
// 	^PString new string: self string

// String>>printOn:
//printOn: aStream
// 	self string printOn: aStream.
localvariable3554 = (Object)new_AST_Variable_named(L"aStream");
array3006 = (Object)new_Type_Array_with(1, (Object)localvariable3554);
// string
send23232 = (Object)new_AST_Send((Object)Self, (Object)symbol4060, 0);
// printOn:
send23233 = (Object)new_AST_Send((Object)send23232, (Object)symbol4003, 1, (Object)localvariable3554);
method4673 = (Object)new_AST_Method_with((Type_Array)array3006, (Type_Array)empty_Type_Array, 2, send23233, Self);
methodclosure4661 = (Object)new_Runtime_MethodClosure(method4673);
store_method((Type_Class)class783, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4661);


// String>>string
//string
// 	^string
method4674 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1564);
methodclosure4662 = (Object)new_Runtime_MethodClosure(method4674);
store_method((Type_Class)class783, (Type_Symbol)symbol4060, (Runtime_MethodClosure)methodclosure4662);


// String>>string:
//string: aString
// 	string := aString 
localvariable3555 = (Object)new_AST_Variable_named(L"aString");
array3007 = (Object)new_Type_Array_with(1, (Object)localvariable3555);
assign2846 = (Object)new_AST_Assign((Object)instancevariable1564, (Object)localvariable3555);
method4675 = (Object)new_AST_Method_with((Type_Array)array3007, (Type_Array)empty_Type_Array, 2, assign2846, Self);
methodclosure4663 = (Object)new_Runtime_MethodClosure(method4675);
store_method((Type_Class)class783, (Type_Symbol)symbol4059, (Runtime_MethodClosure)methodclosure4663);


// String>>=
//= other
// 	^ self class = other class and: [ self string = other string ].
localvariable3556 = (Object)new_AST_Variable_named(L"other");
array3008 = (Object)new_Type_Array_with(1, (Object)localvariable3556);
// class
send23234 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send23235 = (Object)new_AST_Send((Object)localvariable3556, (Object)SMB_class, 0);
// =
send23236 = (Object)new_AST_Send((Object)send23234, (Object)SMB__equal, 1, (Object)send23235);
// string
send23237 = (Object)new_AST_Send((Object)Self, (Object)symbol4060, 0);
// string
send23238 = (Object)new_AST_Send((Object)localvariable3556, (Object)symbol4060, 0);
// =
send23239 = (Object)new_AST_Send((Object)send23237, (Object)SMB__equal, 1, (Object)send23238);
block1425 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23239);
// and:
send23240 = (Object)new_AST_Send((Object)send23236, (Object)symbol4258, 1, (Object)block1425);
method4676 = (Object)new_AST_Method_with((Type_Array)array3008, (Type_Array)empty_Type_Array, 1, send23240);
methodclosure4664 = (Object)new_Runtime_MethodClosure(method4676);
store_method((Type_Class)class783, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4664);

classreference1350 = (Object)new_Organization_ClassReference((Type_Class)class783);
// new
send23241 = (Object)new_AST_Send((Object)classreference1350, (Object)symbol3994, 0);
// string
send23242 = (Object)new_AST_Send((Object)Self, (Object)symbol4060, 0);
// string:
send23243 = (Object)new_AST_Send((Object)send23241, (Object)symbol4059, 1, (Object)send23242);
method4677 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23243);
symbol4062 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure4665 = (Object)new_Runtime_MethodClosure(method4677);
store_method((Type_Class)class774, (Type_Symbol)symbol4062, (Runtime_MethodClosure)methodclosure4665);

classreference1351 = (Object)new_Organization_ClassReference((Type_Class)class774);
// =
send23244 = (Object)new_AST_Send((Object)send23231, (Object)SMB__equal, 1, (Object)classreference1351);
// string
send23245 = (Object)new_AST_Send((Object)localvariable3552, (Object)symbol4060, 0);
// should
send23246 = (Object)new_AST_Send((Object)send23245, (Object)symbol4250, 0);
string2541 = (Object)new_Type_String(L"abc");
constant5375 = (Object)new_AST_Constant((Object)string2541);
// =
send23247 = (Object)new_AST_Send((Object)send23246, (Object)SMB__equal, 1, (Object)constant5375);
// position
send23248 = (Object)new_AST_Send((Object)localvariable3551, (Object)symbol4241, 0);
// should
send23249 = (Object)new_AST_Send((Object)send23248, (Object)symbol4250, 0);
smallint2437 = (Object)new_Type_SmallInt(5);
constant5376 = (Object)new_AST_Constant((Object)smallint2437);
// =
send23250 = (Object)new_AST_Send((Object)send23249, (Object)SMB__equal, 1, (Object)constant5376);
string2542 = (Object)new_Type_String(L"\'abc\'\'");
constant5377 = (Object)new_AST_Constant((Object)string2542);
// on:
send23251 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5377);
assign2847 = (Object)new_AST_Assign((Object)localvariable3551, (Object)send23251);
// match:
send23252 = (Object)new_AST_Send((Object)localvariable3550, (Object)symbol4196, 1, (Object)localvariable3551);
assign2848 = (Object)new_AST_Assign((Object)localvariable3552, (Object)send23252);
// class
send23253 = (Object)new_AST_Send((Object)localvariable3552, (Object)SMB_class, 0);
// should
send23254 = (Object)new_AST_Send((Object)send23253, (Object)symbol4250, 0);
// =
send23255 = (Object)new_AST_Send((Object)send23254, (Object)SMB__equal, 1, (Object)classreference1351);
// string
send23256 = (Object)new_AST_Send((Object)localvariable3552, (Object)symbol4060, 0);
// should
send23257 = (Object)new_AST_Send((Object)send23256, (Object)symbol4250, 0);
string2543 = (Object)new_Type_String(L"abc");
constant5378 = (Object)new_AST_Constant((Object)string2543);
// =
send23258 = (Object)new_AST_Send((Object)send23257, (Object)SMB__equal, 1, (Object)constant5378);
// position
send23259 = (Object)new_AST_Send((Object)localvariable3551, (Object)symbol4241, 0);
// should
send23260 = (Object)new_AST_Send((Object)send23259, (Object)symbol4250, 0);
smallint2438 = (Object)new_Type_SmallInt(5);
constant5379 = (Object)new_AST_Constant((Object)smallint2438);
// =
send23261 = (Object)new_AST_Send((Object)send23260, (Object)SMB__equal, 1, (Object)constant5379);
string2544 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant5380 = (Object)new_AST_Constant((Object)string2544);
// on:
send23262 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5380);
assign2849 = (Object)new_AST_Assign((Object)localvariable3551, (Object)send23262);
// match:
send23263 = (Object)new_AST_Send((Object)localvariable3550, (Object)symbol4196, 1, (Object)localvariable3551);
assign2850 = (Object)new_AST_Assign((Object)localvariable3552, (Object)send23263);
// class
send23264 = (Object)new_AST_Send((Object)localvariable3552, (Object)SMB_class, 0);
// should
send23265 = (Object)new_AST_Send((Object)send23264, (Object)symbol4250, 0);
// =
send23266 = (Object)new_AST_Send((Object)send23265, (Object)SMB__equal, 1, (Object)classreference1351);
// string
send23267 = (Object)new_AST_Send((Object)localvariable3552, (Object)symbol4060, 0);
// should
send23268 = (Object)new_AST_Send((Object)send23267, (Object)symbol4250, 0);
string2545 = (Object)new_Type_String(L"abc\'d");
constant5381 = (Object)new_AST_Constant((Object)string2545);
// =
send23269 = (Object)new_AST_Send((Object)send23268, (Object)SMB__equal, 1, (Object)constant5381);
// position
send23270 = (Object)new_AST_Send((Object)localvariable3551, (Object)symbol4241, 0);
// should
send23271 = (Object)new_AST_Send((Object)send23270, (Object)symbol4250, 0);
smallint2439 = (Object)new_Type_SmallInt(8);
constant5382 = (Object)new_AST_Constant((Object)smallint2439);
// =
send23272 = (Object)new_AST_Send((Object)send23271, (Object)SMB__equal, 1, (Object)constant5382);
method4678 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3004, 17, assign2842, assign2843, assign2844, send23244, send23247, send23250, assign2847, assign2848, send23255, send23258, send23261, assign2849, assign2850, send23266, send23269, send23272, Self);
symbol3978 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure4666 = (Object)new_Runtime_MethodClosure(method4678);
store_method((Type_Class)class751, (Type_Symbol)symbol3978, (Runtime_MethodClosure)methodclosure4666);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable3557 = (Object)new_AST_Variable_named(L"parser");
localvariable3558 = (Object)new_AST_Variable_named(L"string");
localvariable3559 = (Object)new_AST_Variable_named(L"result");
array3009 = (Object)new_Type_Array_with(3, (Object)localvariable3557, (Object)localvariable3558, (Object)localvariable3559);
symbol4281 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send23273 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4281, 0);
assign2851 = (Object)new_AST_Assign((Object)localvariable3557, (Object)send23273);
string2546 = (Object)new_Type_String(L"+= a");
constant5383 = (Object)new_AST_Constant((Object)string2546);
// on:
send23274 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5383);
assign2852 = (Object)new_AST_Assign((Object)localvariable3558, (Object)send23274);
// match:
send23275 = (Object)new_AST_Send((Object)localvariable3557, (Object)symbol4196, 1, (Object)localvariable3558);
assign2853 = (Object)new_AST_Assign((Object)localvariable3559, (Object)send23275);
// class
send23276 = (Object)new_AST_Send((Object)localvariable3559, (Object)SMB_class, 0);
// should
send23277 = (Object)new_AST_Send((Object)send23276, (Object)symbol4250, 0);

// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method4679 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1554);
symbol4088 = (Object)new_Type_Symbol_cached(L"parameter");
methodclosure4667 = (Object)new_Runtime_MethodClosure(method4679);
store_method((Type_Class)class776, (Type_Symbol)symbol4088, (Runtime_MethodClosure)methodclosure4667);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send23278 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// symbol
send23279 = (Object)new_AST_Send((Object)send23278, (Object)symbol4055, 0);
method4680 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23279);
methodclosure4668 = (Object)new_Runtime_MethodClosure(method4680);
store_method((Type_Class)class776, (Type_Symbol)symbol4083, (Runtime_MethodClosure)methodclosure4668);


// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
symbol4038 = (Object)new_Type_Symbol_cached(L"with:");
// parameter
send23280 = (Object)new_AST_Send((Object)Self, (Object)symbol4088, 0);
// with:
send23281 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol4038, 1, (Object)send23280);
method4681 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23281);
methodclosure4669 = (Object)new_Runtime_MethodClosure(method4681);
store_method((Type_Class)class776, (Type_Symbol)symbol4076, (Runtime_MethodClosure)methodclosure4669);


// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable3560 = (Object)new_AST_Variable_named(L"anObject");
array3010 = (Object)new_Type_Array_with(1, (Object)localvariable3560);
assign2854 = (Object)new_AST_Assign((Object)instancevariable1554, (Object)localvariable3560);
method4682 = (Object)new_AST_Method_with((Type_Array)array3010, (Type_Array)empty_Type_Array, 2, assign2854, Self);
symbol4087 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure4670 = (Object)new_Runtime_MethodClosure(method4682);
store_method((Type_Class)class776, (Type_Symbol)symbol4087, (Runtime_MethodClosure)methodclosure4670);

classreference1352 = (Object)new_Organization_ClassReference((Type_Class)class776);
// =
send23282 = (Object)new_AST_Send((Object)send23277, (Object)SMB__equal, 1, (Object)classreference1352);
// selector
send23283 = (Object)new_AST_Send((Object)localvariable3559, (Object)symbol4007, 0);
// printString
send23284 = (Object)new_AST_Send((Object)send23283, (Object)symbol4198, 0);
// should
send23285 = (Object)new_AST_Send((Object)send23284, (Object)symbol4250, 0);
string2547 = (Object)new_Type_String(L"+=");
constant5384 = (Object)new_AST_Constant((Object)string2547);
// =
send23286 = (Object)new_AST_Send((Object)send23285, (Object)SMB__equal, 1, (Object)constant5384);
// parameter
send23287 = (Object)new_AST_Send((Object)localvariable3559, (Object)symbol4088, 0);
// class
send23288 = (Object)new_AST_Send((Object)send23287, (Object)SMB_class, 0);
// should
send23289 = (Object)new_AST_Send((Object)send23288, (Object)symbol4250, 0);
// =
send23290 = (Object)new_AST_Send((Object)send23289, (Object)SMB__equal, 1, (Object)classreference1336);
// parameter
send23291 = (Object)new_AST_Send((Object)localvariable3559, (Object)symbol4088, 0);
// name
send23292 = (Object)new_AST_Send((Object)send23291, (Object)SMB_name, 0);
// asString
send23293 = (Object)new_AST_Send((Object)send23292, (Object)SMB_asString, 0);
// should
send23294 = (Object)new_AST_Send((Object)send23293, (Object)symbol4250, 0);
string2548 = (Object)new_Type_String(L"a");
constant5385 = (Object)new_AST_Constant((Object)string2548);
// =
send23295 = (Object)new_AST_Send((Object)send23294, (Object)SMB__equal, 1, (Object)constant5385);
// position
send23296 = (Object)new_AST_Send((Object)localvariable3558, (Object)symbol4241, 0);
// should
send23297 = (Object)new_AST_Send((Object)send23296, (Object)symbol4250, 0);
smallint2440 = (Object)new_Type_SmallInt(4);
constant5386 = (Object)new_AST_Constant((Object)smallint2440);
// =
send23298 = (Object)new_AST_Send((Object)send23297, (Object)SMB__equal, 1, (Object)constant5386);
string2549 = (Object)new_Type_String(L"|= a");
constant5387 = (Object)new_AST_Constant((Object)string2549);
// on:
send23299 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5387);
assign2855 = (Object)new_AST_Assign((Object)localvariable3558, (Object)send23299);
// match:
send23300 = (Object)new_AST_Send((Object)localvariable3557, (Object)symbol4196, 1, (Object)localvariable3558);
// should
send23301 = (Object)new_AST_Send((Object)send23300, (Object)symbol4250, 0);
// be
send23302 = (Object)new_AST_Send((Object)send23301, (Object)symbol4251, 0);
// isNil
send23303 = (Object)new_AST_Send((Object)send23302, (Object)SMB_isNil, 0);
// position
send23304 = (Object)new_AST_Send((Object)localvariable3558, (Object)symbol4241, 0);
// should
send23305 = (Object)new_AST_Send((Object)send23304, (Object)symbol4250, 0);
smallint2441 = (Object)new_Type_SmallInt(0);
constant5388 = (Object)new_AST_Constant((Object)smallint2441);
// =
send23306 = (Object)new_AST_Send((Object)send23305, (Object)SMB__equal, 1, (Object)constant5388);
string2550 = (Object)new_Type_String(L"-= abc d");
constant5389 = (Object)new_AST_Constant((Object)string2550);
// on:
send23307 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5389);
assign2856 = (Object)new_AST_Assign((Object)localvariable3558, (Object)send23307);
// match:
send23308 = (Object)new_AST_Send((Object)localvariable3557, (Object)symbol4196, 1, (Object)localvariable3558);
assign2857 = (Object)new_AST_Assign((Object)localvariable3559, (Object)send23308);
// class
send23309 = (Object)new_AST_Send((Object)localvariable3559, (Object)SMB_class, 0);
// should
send23310 = (Object)new_AST_Send((Object)send23309, (Object)symbol4250, 0);
// =
send23311 = (Object)new_AST_Send((Object)send23310, (Object)SMB__equal, 1, (Object)classreference1352);
// selector
send23312 = (Object)new_AST_Send((Object)localvariable3559, (Object)symbol4007, 0);
// printString
send23313 = (Object)new_AST_Send((Object)send23312, (Object)symbol4198, 0);
// should
send23314 = (Object)new_AST_Send((Object)send23313, (Object)symbol4250, 0);
string2551 = (Object)new_Type_String(L"-=");
constant5390 = (Object)new_AST_Constant((Object)string2551);
// =
send23315 = (Object)new_AST_Send((Object)send23314, (Object)SMB__equal, 1, (Object)constant5390);
// parameter
send23316 = (Object)new_AST_Send((Object)localvariable3559, (Object)symbol4088, 0);
// name
send23317 = (Object)new_AST_Send((Object)send23316, (Object)SMB_name, 0);
// asString
send23318 = (Object)new_AST_Send((Object)send23317, (Object)SMB_asString, 0);
// should
send23319 = (Object)new_AST_Send((Object)send23318, (Object)symbol4250, 0);
string2552 = (Object)new_Type_String(L"abc");
constant5391 = (Object)new_AST_Constant((Object)string2552);
// =
send23320 = (Object)new_AST_Send((Object)send23319, (Object)SMB__equal, 1, (Object)constant5391);
// parameter
send23321 = (Object)new_AST_Send((Object)localvariable3559, (Object)symbol4088, 0);
// class
send23322 = (Object)new_AST_Send((Object)send23321, (Object)SMB_class, 0);
// should
send23323 = (Object)new_AST_Send((Object)send23322, (Object)symbol4250, 0);
// =
send23324 = (Object)new_AST_Send((Object)send23323, (Object)SMB__equal, 1, (Object)classreference1336);
// position
send23325 = (Object)new_AST_Send((Object)localvariable3558, (Object)symbol4241, 0);
// should
send23326 = (Object)new_AST_Send((Object)send23325, (Object)symbol4250, 0);
smallint2442 = (Object)new_Type_SmallInt(6);
constant5392 = (Object)new_AST_Constant((Object)smallint2442);
// =
send23327 = (Object)new_AST_Send((Object)send23326, (Object)SMB__equal, 1, (Object)constant5392);
method4683 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3009, 19, assign2851, assign2852, assign2853, send23282, send23286, send23290, send23295, send23298, assign2855, send23303, send23306, assign2856, assign2857, send23311, send23315, send23320, send23324, send23327, Self);
symbol3931 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure4671 = (Object)new_Runtime_MethodClosure(method4683);
store_method((Type_Class)class751, (Type_Symbol)symbol3931, (Runtime_MethodClosure)methodclosure4671);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable3561 = (Object)new_AST_Variable_named(L"parser");
localvariable3562 = (Object)new_AST_Variable_named(L"string");
array3011 = (Object)new_Type_Array_with(2, (Object)localvariable3561, (Object)localvariable3562);
// string
send23328 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4060, 0);
assign2858 = (Object)new_AST_Assign((Object)localvariable3561, (Object)send23328);
string2553 = (Object)new_Type_String(L"");
constant5393 = (Object)new_AST_Constant((Object)string2553);
// on:
send23329 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5393);
assign2859 = (Object)new_AST_Assign((Object)localvariable3562, (Object)send23329);
// match:
send23330 = (Object)new_AST_Send((Object)localvariable3561, (Object)symbol4196, 1, (Object)localvariable3562);
// should
send23331 = (Object)new_AST_Send((Object)send23330, (Object)symbol4250, 0);
// be
send23332 = (Object)new_AST_Send((Object)send23331, (Object)symbol4251, 0);
// isNil
send23333 = (Object)new_AST_Send((Object)send23332, (Object)SMB_isNil, 0);
// position
send23334 = (Object)new_AST_Send((Object)localvariable3562, (Object)symbol4241, 0);
// should
send23335 = (Object)new_AST_Send((Object)send23334, (Object)symbol4250, 0);
smallint2443 = (Object)new_Type_SmallInt(0);
constant5394 = (Object)new_AST_Constant((Object)smallint2443);
// =
send23336 = (Object)new_AST_Send((Object)send23335, (Object)SMB__equal, 1, (Object)constant5394);
string2554 = (Object)new_Type_String(L"\'abc\'");
constant5395 = (Object)new_AST_Constant((Object)string2554);
// on:
send23337 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5395);
assign2860 = (Object)new_AST_Assign((Object)localvariable3562, (Object)send23337);
// match:
send23338 = (Object)new_AST_Send((Object)localvariable3561, (Object)symbol4196, 1, (Object)localvariable3562);
// should
send23339 = (Object)new_AST_Send((Object)send23338, (Object)symbol4250, 0);
string2555 = (Object)new_Type_String(L"abc");
constant5396 = (Object)new_AST_Constant((Object)string2555);
// =
send23340 = (Object)new_AST_Send((Object)send23339, (Object)SMB__equal, 1, (Object)constant5396);
// position
send23341 = (Object)new_AST_Send((Object)localvariable3562, (Object)symbol4241, 0);
// should
send23342 = (Object)new_AST_Send((Object)send23341, (Object)symbol4250, 0);
smallint2444 = (Object)new_Type_SmallInt(5);
constant5397 = (Object)new_AST_Constant((Object)smallint2444);
// =
send23343 = (Object)new_AST_Send((Object)send23342, (Object)SMB__equal, 1, (Object)constant5397);
string2556 = (Object)new_Type_String(L"\'abc\'\'");
constant5398 = (Object)new_AST_Constant((Object)string2556);
// on:
send23344 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5398);
assign2861 = (Object)new_AST_Assign((Object)localvariable3562, (Object)send23344);
// match:
send23345 = (Object)new_AST_Send((Object)localvariable3561, (Object)symbol4196, 1, (Object)localvariable3562);
// should
send23346 = (Object)new_AST_Send((Object)send23345, (Object)symbol4250, 0);
string2557 = (Object)new_Type_String(L"abc");
constant5399 = (Object)new_AST_Constant((Object)string2557);
// =
send23347 = (Object)new_AST_Send((Object)send23346, (Object)SMB__equal, 1, (Object)constant5399);
// position
send23348 = (Object)new_AST_Send((Object)localvariable3562, (Object)symbol4241, 0);
// should
send23349 = (Object)new_AST_Send((Object)send23348, (Object)symbol4250, 0);
smallint2445 = (Object)new_Type_SmallInt(5);
constant5400 = (Object)new_AST_Constant((Object)smallint2445);
// =
send23350 = (Object)new_AST_Send((Object)send23349, (Object)SMB__equal, 1, (Object)constant5400);
string2558 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant5401 = (Object)new_AST_Constant((Object)string2558);
// on:
send23351 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5401);
assign2862 = (Object)new_AST_Assign((Object)localvariable3562, (Object)send23351);
// match:
send23352 = (Object)new_AST_Send((Object)localvariable3561, (Object)symbol4196, 1, (Object)localvariable3562);
// should
send23353 = (Object)new_AST_Send((Object)send23352, (Object)symbol4250, 0);
string2559 = (Object)new_Type_String(L"abc\'d");
constant5402 = (Object)new_AST_Constant((Object)string2559);
// =
send23354 = (Object)new_AST_Send((Object)send23353, (Object)SMB__equal, 1, (Object)constant5402);
// position
send23355 = (Object)new_AST_Send((Object)localvariable3562, (Object)symbol4241, 0);
// should
send23356 = (Object)new_AST_Send((Object)send23355, (Object)symbol4250, 0);
smallint2446 = (Object)new_Type_SmallInt(8);
constant5403 = (Object)new_AST_Constant((Object)smallint2446);
// =
send23357 = (Object)new_AST_Send((Object)send23356, (Object)SMB__equal, 1, (Object)constant5403);
method4684 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3011, 14, assign2858, assign2859, send23333, send23336, assign2860, send23340, send23343, assign2861, send23347, send23350, assign2862, send23354, send23357, Self);
symbol3948 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure4672 = (Object)new_Runtime_MethodClosure(method4684);
store_method((Type_Class)class751, (Type_Symbol)symbol3948, (Runtime_MethodClosure)methodclosure4672);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable3563 = (Object)new_AST_Variable_named(L"parser");
localvariable3564 = (Object)new_AST_Variable_named(L"string");
localvariable3565 = (Object)new_AST_Variable_named(L"result");
array3012 = (Object)new_Type_Array_with(3, (Object)localvariable3563, (Object)localvariable3564, (Object)localvariable3565);
symbol4282 = (Object)new_Type_Symbol_cached(L"block");
// block
send23358 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4282, 0);
assign2863 = (Object)new_AST_Assign((Object)localvariable3563, (Object)send23358);
string2560 = (Object)new_Type_String(L"[]");
constant5404 = (Object)new_AST_Constant((Object)string2560);
// on:
send23359 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5404);
assign2864 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23359);
// match:
send23360 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2865 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23360);
// class
send23361 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23362 = (Object)new_AST_Send((Object)send23361, (Object)symbol4250, 0);

// ASTBlock>>parameters
//parameters
// 	^ parameters
method4685 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1557);
methodclosure4673 = (Object)new_Runtime_MethodClosure(method4685);
store_method((Type_Class)class778, (Type_Symbol)symbol4076, (Runtime_MethodClosure)methodclosure4673);


// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable3566 = (Object)new_AST_Variable_named(L"anObject");
array3013 = (Object)new_Type_Array_with(1, (Object)localvariable3566);
assign2866 = (Object)new_AST_Assign((Object)instancevariable1559, (Object)localvariable3566);
method4686 = (Object)new_AST_Method_with((Type_Array)array3013, (Type_Array)empty_Type_Array, 2, assign2866, Self);
methodclosure4674 = (Object)new_Runtime_MethodClosure(method4686);
store_method((Type_Class)class778, (Type_Symbol)symbol4098, (Runtime_MethodClosure)methodclosure4674);


// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable3567 = (Object)new_AST_Variable_named(L"aCollection");
array3014 = (Object)new_Type_Array_with(1, (Object)localvariable3567);
assign2867 = (Object)new_AST_Assign((Object)instancevariable1557, (Object)localvariable3567);
method4687 = (Object)new_AST_Method_with((Type_Array)array3014, (Type_Array)empty_Type_Array, 2, assign2867, Self);
methodclosure4675 = (Object)new_Runtime_MethodClosure(method4687);
store_method((Type_Class)class778, (Type_Symbol)symbol4102, (Runtime_MethodClosure)methodclosure4675);


// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method4688 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1558);
methodclosure4676 = (Object)new_Runtime_MethodClosure(method4688);
store_method((Type_Class)class778, (Type_Symbol)symbol4099, (Runtime_MethodClosure)methodclosure4676);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable3568 = (Object)new_AST_Variable_named(L"anObject");
array3015 = (Object)new_Type_Array_with(1, (Object)localvariable3568);
assign2868 = (Object)new_AST_Assign((Object)instancevariable1558, (Object)localvariable3568);
method4689 = (Object)new_AST_Method_with((Type_Array)array3015, (Type_Array)empty_Type_Array, 2, assign2868, Self);
methodclosure4677 = (Object)new_Runtime_MethodClosure(method4689);
store_method((Type_Class)class778, (Type_Symbol)symbol4100, (Runtime_MethodClosure)methodclosure4677);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super371 = (Object)new_AST_Super((Object)symbol3906, 0);
// new
send23363 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3994, 0);
// parameters:
send23364 = (Object)new_AST_Send((Object)Self, (Object)symbol4102, 1, (Object)send23363);
// new
send23365 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3994, 0);
// statements:
send23366 = (Object)new_AST_Send((Object)Self, (Object)symbol4098, 1, (Object)send23365);
// new
send23367 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3994, 0);
// temporaries:
send23368 = (Object)new_AST_Send((Object)Self, (Object)symbol4100, 1, (Object)send23367);
method4690 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super371, send23364, send23366, send23368, Self);
methodclosure4678 = (Object)new_Runtime_MethodClosure(method4690);
store_method((Type_Class)class778, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4678);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// statements
send23369 = (Object)new_AST_Send((Object)Self, (Object)symbol4094, 0);
localvariable3569 = (Object)new_AST_Variable_named(L"el");
array3016 = (Object)new_Type_Array_with(1, (Object)localvariable3569);
// isReturnExpression
send23370 = (Object)new_AST_Send((Object)localvariable3569, (Object)symbol3903, 0);
// hasReturnExpression
send23371 = (Object)new_AST_Send((Object)localvariable3569, (Object)symbol4025, 0);
block1426 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send23371);
// or:
send23372 = (Object)new_AST_Send((Object)send23370, (Object)symbol4255, 1, (Object)block1426);
block1427 = (Object)new_AST_Block_with((Type_Array)array3016, (Type_Array)empty_Type_Array, 1, 1, send23372);
// anySatisfy:
send23373 = (Object)new_AST_Send((Object)send23369, (Object)symbol4254, 1, (Object)block1427);
method4691 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23373);
methodclosure4679 = (Object)new_Runtime_MethodClosure(method4691);
store_method((Type_Class)class778, (Type_Symbol)symbol4025, (Runtime_MethodClosure)methodclosure4679);


// ASTBlock>>statements
//statements
// 	^ statements
method4692 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1559);
methodclosure4680 = (Object)new_Runtime_MethodClosure(method4692);
store_method((Type_Class)class778, (Type_Symbol)symbol4094, (Runtime_MethodClosure)methodclosure4680);

classreference1353 = (Object)new_Organization_ClassReference((Type_Class)class778);
// =
send23374 = (Object)new_AST_Send((Object)send23362, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23375 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23376 = (Object)new_AST_Send((Object)send23375, (Object)SMB_size, 0);
// should
send23377 = (Object)new_AST_Send((Object)send23376, (Object)symbol4250, 0);
smallint2447 = (Object)new_Type_SmallInt(0);
constant5405 = (Object)new_AST_Constant((Object)smallint2447);
// =
send23378 = (Object)new_AST_Send((Object)send23377, (Object)SMB__equal, 1, (Object)constant5405);
// parameters
send23379 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23380 = (Object)new_AST_Send((Object)send23379, (Object)SMB_size, 0);
// should
send23381 = (Object)new_AST_Send((Object)send23380, (Object)symbol4250, 0);
smallint2448 = (Object)new_Type_SmallInt(0);
constant5406 = (Object)new_AST_Constant((Object)smallint2448);
// =
send23382 = (Object)new_AST_Send((Object)send23381, (Object)SMB__equal, 1, (Object)constant5406);
// statements
send23383 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23384 = (Object)new_AST_Send((Object)send23383, (Object)SMB_size, 0);
// should
send23385 = (Object)new_AST_Send((Object)send23384, (Object)symbol4250, 0);
smallint2449 = (Object)new_Type_SmallInt(0);
constant5407 = (Object)new_AST_Constant((Object)smallint2449);
// =
send23386 = (Object)new_AST_Send((Object)send23385, (Object)SMB__equal, 1, (Object)constant5407);
string2561 = (Object)new_Type_String(L"[||]");
constant5408 = (Object)new_AST_Constant((Object)string2561);
// on:
send23387 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5408);
assign2869 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23387);
// match:
send23388 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2870 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23388);
// class
send23389 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23390 = (Object)new_AST_Send((Object)send23389, (Object)symbol4250, 0);
// =
send23391 = (Object)new_AST_Send((Object)send23390, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23392 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23393 = (Object)new_AST_Send((Object)send23392, (Object)SMB_size, 0);
// should
send23394 = (Object)new_AST_Send((Object)send23393, (Object)symbol4250, 0);
smallint2450 = (Object)new_Type_SmallInt(0);
constant5409 = (Object)new_AST_Constant((Object)smallint2450);
// =
send23395 = (Object)new_AST_Send((Object)send23394, (Object)SMB__equal, 1, (Object)constant5409);
// parameters
send23396 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23397 = (Object)new_AST_Send((Object)send23396, (Object)SMB_size, 0);
// should
send23398 = (Object)new_AST_Send((Object)send23397, (Object)symbol4250, 0);
smallint2451 = (Object)new_Type_SmallInt(0);
constant5410 = (Object)new_AST_Constant((Object)smallint2451);
// =
send23399 = (Object)new_AST_Send((Object)send23398, (Object)SMB__equal, 1, (Object)constant5410);
// statements
send23400 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23401 = (Object)new_AST_Send((Object)send23400, (Object)SMB_size, 0);
// should
send23402 = (Object)new_AST_Send((Object)send23401, (Object)symbol4250, 0);
smallint2452 = (Object)new_Type_SmallInt(0);
constant5411 = (Object)new_AST_Constant((Object)smallint2452);
// =
send23403 = (Object)new_AST_Send((Object)send23402, (Object)SMB__equal, 1, (Object)constant5411);
string2562 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant5412 = (Object)new_AST_Constant((Object)string2562);
// on:
send23404 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5412);
assign2871 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23404);
// match:
send23405 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2872 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23405);
// class
send23406 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23407 = (Object)new_AST_Send((Object)send23406, (Object)symbol4250, 0);
// =
send23408 = (Object)new_AST_Send((Object)send23407, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23409 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23410 = (Object)new_AST_Send((Object)send23409, (Object)SMB_size, 0);
// should
send23411 = (Object)new_AST_Send((Object)send23410, (Object)symbol4250, 0);
smallint2453 = (Object)new_Type_SmallInt(0);
constant5413 = (Object)new_AST_Constant((Object)smallint2453);
// =
send23412 = (Object)new_AST_Send((Object)send23411, (Object)SMB__equal, 1, (Object)constant5413);
// parameters
send23413 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23414 = (Object)new_AST_Send((Object)send23413, (Object)SMB_size, 0);
// should
send23415 = (Object)new_AST_Send((Object)send23414, (Object)symbol4250, 0);
smallint2454 = (Object)new_Type_SmallInt(4);
constant5414 = (Object)new_AST_Constant((Object)smallint2454);
// =
send23416 = (Object)new_AST_Send((Object)send23415, (Object)SMB__equal, 1, (Object)constant5414);
// statements
send23417 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23418 = (Object)new_AST_Send((Object)send23417, (Object)SMB_size, 0);
// should
send23419 = (Object)new_AST_Send((Object)send23418, (Object)symbol4250, 0);
smallint2455 = (Object)new_Type_SmallInt(0);
constant5415 = (Object)new_AST_Constant((Object)smallint2455);
// =
send23420 = (Object)new_AST_Send((Object)send23419, (Object)SMB__equal, 1, (Object)constant5415);
string2563 = (Object)new_Type_String(L"[ | a   f d| ]");
constant5416 = (Object)new_AST_Constant((Object)string2563);
// on:
send23421 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5416);
assign2873 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23421);
// match:
send23422 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2874 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23422);
// class
send23423 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23424 = (Object)new_AST_Send((Object)send23423, (Object)symbol4250, 0);
// =
send23425 = (Object)new_AST_Send((Object)send23424, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23426 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23427 = (Object)new_AST_Send((Object)send23426, (Object)SMB_size, 0);
// should
send23428 = (Object)new_AST_Send((Object)send23427, (Object)symbol4250, 0);
smallint2456 = (Object)new_Type_SmallInt(3);
constant5417 = (Object)new_AST_Constant((Object)smallint2456);
// =
send23429 = (Object)new_AST_Send((Object)send23428, (Object)SMB__equal, 1, (Object)constant5417);
// parameters
send23430 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23431 = (Object)new_AST_Send((Object)send23430, (Object)SMB_size, 0);
// should
send23432 = (Object)new_AST_Send((Object)send23431, (Object)symbol4250, 0);
smallint2457 = (Object)new_Type_SmallInt(0);
constant5418 = (Object)new_AST_Constant((Object)smallint2457);
// =
send23433 = (Object)new_AST_Send((Object)send23432, (Object)SMB__equal, 1, (Object)constant5418);
// statements
send23434 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23435 = (Object)new_AST_Send((Object)send23434, (Object)SMB_size, 0);
// should
send23436 = (Object)new_AST_Send((Object)send23435, (Object)symbol4250, 0);
smallint2458 = (Object)new_Type_SmallInt(0);
constant5419 = (Object)new_AST_Constant((Object)smallint2458);
// =
send23437 = (Object)new_AST_Send((Object)send23436, (Object)SMB__equal, 1, (Object)constant5419);
string2564 = (Object)new_Type_String(L"[ || b. d ]");
constant5420 = (Object)new_AST_Constant((Object)string2564);
// on:
send23438 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5420);
assign2875 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23438);
// match:
send23439 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2876 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23439);
// class
send23440 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23441 = (Object)new_AST_Send((Object)send23440, (Object)symbol4250, 0);
// =
send23442 = (Object)new_AST_Send((Object)send23441, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23443 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23444 = (Object)new_AST_Send((Object)send23443, (Object)SMB_size, 0);
// should
send23445 = (Object)new_AST_Send((Object)send23444, (Object)symbol4250, 0);
smallint2459 = (Object)new_Type_SmallInt(0);
constant5421 = (Object)new_AST_Constant((Object)smallint2459);
// =
send23446 = (Object)new_AST_Send((Object)send23445, (Object)SMB__equal, 1, (Object)constant5421);
// parameters
send23447 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23448 = (Object)new_AST_Send((Object)send23447, (Object)SMB_size, 0);
// should
send23449 = (Object)new_AST_Send((Object)send23448, (Object)symbol4250, 0);
smallint2460 = (Object)new_Type_SmallInt(0);
constant5422 = (Object)new_AST_Constant((Object)smallint2460);
// =
send23450 = (Object)new_AST_Send((Object)send23449, (Object)SMB__equal, 1, (Object)constant5422);
// statements
send23451 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23452 = (Object)new_AST_Send((Object)send23451, (Object)SMB_size, 0);
// should
send23453 = (Object)new_AST_Send((Object)send23452, (Object)symbol4250, 0);
smallint2461 = (Object)new_Type_SmallInt(2);
constant5423 = (Object)new_AST_Constant((Object)smallint2461);
// =
send23454 = (Object)new_AST_Send((Object)send23453, (Object)SMB__equal, 1, (Object)constant5423);
string2565 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant5424 = (Object)new_AST_Constant((Object)string2565);
// on:
send23455 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5424);
assign2877 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23455);
// match:
send23456 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2878 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23456);
// class
send23457 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23458 = (Object)new_AST_Send((Object)send23457, (Object)symbol4250, 0);
// =
send23459 = (Object)new_AST_Send((Object)send23458, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23460 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23461 = (Object)new_AST_Send((Object)send23460, (Object)SMB_size, 0);
// should
send23462 = (Object)new_AST_Send((Object)send23461, (Object)symbol4250, 0);
smallint2462 = (Object)new_Type_SmallInt(0);
constant5425 = (Object)new_AST_Constant((Object)smallint2462);
// =
send23463 = (Object)new_AST_Send((Object)send23462, (Object)SMB__equal, 1, (Object)constant5425);
// parameters
send23464 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23465 = (Object)new_AST_Send((Object)send23464, (Object)SMB_size, 0);
// should
send23466 = (Object)new_AST_Send((Object)send23465, (Object)symbol4250, 0);
smallint2463 = (Object)new_Type_SmallInt(0);
constant5426 = (Object)new_AST_Constant((Object)smallint2463);
// =
send23467 = (Object)new_AST_Send((Object)send23466, (Object)SMB__equal, 1, (Object)constant5426);
// statements
send23468 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23469 = (Object)new_AST_Send((Object)send23468, (Object)SMB_size, 0);
// should
send23470 = (Object)new_AST_Send((Object)send23469, (Object)symbol4250, 0);
smallint2464 = (Object)new_Type_SmallInt(2);
constant5427 = (Object)new_AST_Constant((Object)smallint2464);
// =
send23471 = (Object)new_AST_Send((Object)send23470, (Object)SMB__equal, 1, (Object)constant5427);
string2566 = (Object)new_Type_String(L"[ || b. d. ]");
constant5428 = (Object)new_AST_Constant((Object)string2566);
// on:
send23472 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5428);
assign2879 = (Object)new_AST_Assign((Object)localvariable3564, (Object)send23472);
// match:
send23473 = (Object)new_AST_Send((Object)localvariable3563, (Object)symbol4196, 1, (Object)localvariable3564);
assign2880 = (Object)new_AST_Assign((Object)localvariable3565, (Object)send23473);
// class
send23474 = (Object)new_AST_Send((Object)localvariable3565, (Object)SMB_class, 0);
// should
send23475 = (Object)new_AST_Send((Object)send23474, (Object)symbol4250, 0);
// =
send23476 = (Object)new_AST_Send((Object)send23475, (Object)SMB__equal, 1, (Object)classreference1353);
// temporaries
send23477 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4099, 0);
// size
send23478 = (Object)new_AST_Send((Object)send23477, (Object)SMB_size, 0);
// should
send23479 = (Object)new_AST_Send((Object)send23478, (Object)symbol4250, 0);
smallint2465 = (Object)new_Type_SmallInt(0);
constant5429 = (Object)new_AST_Constant((Object)smallint2465);
// =
send23480 = (Object)new_AST_Send((Object)send23479, (Object)SMB__equal, 1, (Object)constant5429);
// parameters
send23481 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4076, 0);
// size
send23482 = (Object)new_AST_Send((Object)send23481, (Object)SMB_size, 0);
// should
send23483 = (Object)new_AST_Send((Object)send23482, (Object)symbol4250, 0);
smallint2466 = (Object)new_Type_SmallInt(0);
constant5430 = (Object)new_AST_Constant((Object)smallint2466);
// =
send23484 = (Object)new_AST_Send((Object)send23483, (Object)SMB__equal, 1, (Object)constant5430);
// statements
send23485 = (Object)new_AST_Send((Object)localvariable3565, (Object)symbol4094, 0);
// size
send23486 = (Object)new_AST_Send((Object)send23485, (Object)SMB_size, 0);
// should
send23487 = (Object)new_AST_Send((Object)send23486, (Object)symbol4250, 0);
smallint2467 = (Object)new_Type_SmallInt(2);
constant5431 = (Object)new_AST_Constant((Object)smallint2467);
// =
send23488 = (Object)new_AST_Send((Object)send23487, (Object)SMB__equal, 1, (Object)constant5431);
method4693 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3012, 44, assign2863, assign2864, assign2865, send23374, send23378, send23382, send23386, assign2869, assign2870, send23391, send23395, send23399, send23403, assign2871, assign2872, send23408, send23412, send23416, send23420, assign2873, assign2874, send23425, send23429, send23433, send23437, assign2875, assign2876, send23442, send23446, send23450, send23454, assign2877, assign2878, send23459, send23463, send23467, send23471, assign2879, assign2880, send23476, send23480, send23484, send23488, Self);
symbol3968 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure4681 = (Object)new_Runtime_MethodClosure(method4693);
store_method((Type_Class)class751, (Type_Symbol)symbol3968, (Runtime_MethodClosure)methodclosure4681);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3570 = (Object)new_AST_Variable_named(L"parser");
localvariable3571 = (Object)new_AST_Variable_named(L"string");
array3017 = (Object)new_Type_Array_with(2, (Object)localvariable3570, (Object)localvariable3571);
symbol4283 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send23489 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4283, 0);
assign2881 = (Object)new_AST_Assign((Object)localvariable3570, (Object)send23489);
string2567 = (Object)new_Type_String(L"abcd: ");
constant5432 = (Object)new_AST_Constant((Object)string2567);
// on:
send23490 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5432);
assign2882 = (Object)new_AST_Assign((Object)localvariable3571, (Object)send23490);
// match:
send23491 = (Object)new_AST_Send((Object)localvariable3570, (Object)symbol4196, 1, (Object)localvariable3571);
// should
send23492 = (Object)new_AST_Send((Object)send23491, (Object)symbol4250, 0);
string2568 = (Object)new_Type_String(L"abcd");
constant5433 = (Object)new_AST_Constant((Object)string2568);
// =
send23493 = (Object)new_AST_Send((Object)send23492, (Object)SMB__equal, 1, (Object)constant5433);
// position
send23494 = (Object)new_AST_Send((Object)localvariable3571, (Object)symbol4241, 0);
// should
send23495 = (Object)new_AST_Send((Object)send23494, (Object)symbol4250, 0);
smallint2468 = (Object)new_Type_SmallInt(5);
constant5434 = (Object)new_AST_Constant((Object)smallint2468);
// =
send23496 = (Object)new_AST_Send((Object)send23495, (Object)SMB__equal, 1, (Object)constant5434);
string2569 = (Object)new_Type_String(L"abcd ");
constant5435 = (Object)new_AST_Constant((Object)string2569);
// on:
send23497 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5435);
assign2883 = (Object)new_AST_Assign((Object)localvariable3571, (Object)send23497);
// match:
send23498 = (Object)new_AST_Send((Object)localvariable3570, (Object)symbol4196, 1, (Object)localvariable3571);
// should
send23499 = (Object)new_AST_Send((Object)send23498, (Object)symbol4250, 0);
// be
send23500 = (Object)new_AST_Send((Object)send23499, (Object)symbol4251, 0);
// isNil
send23501 = (Object)new_AST_Send((Object)send23500, (Object)SMB_isNil, 0);
// position
send23502 = (Object)new_AST_Send((Object)localvariable3571, (Object)symbol4241, 0);
// should
send23503 = (Object)new_AST_Send((Object)send23502, (Object)symbol4250, 0);
smallint2469 = (Object)new_Type_SmallInt(0);
constant5436 = (Object)new_AST_Constant((Object)smallint2469);
// =
send23504 = (Object)new_AST_Send((Object)send23503, (Object)SMB__equal, 1, (Object)constant5436);
method4694 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3017, 8, assign2881, assign2882, send23493, send23496, assign2883, send23501, send23504, Self);
symbol3941 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure4682 = (Object)new_Runtime_MethodClosure(method4694);
store_method((Type_Class)class751, (Type_Symbol)symbol3941, (Runtime_MethodClosure)methodclosure4682);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable3572 = (Object)new_AST_Variable_named(L"parser");
localvariable3573 = (Object)new_AST_Variable_named(L"string");
localvariable3574 = (Object)new_AST_Variable_named(L"result");
array3018 = (Object)new_Type_Array_with(3, (Object)localvariable3572, (Object)localvariable3573, (Object)localvariable3574);
symbol4284 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send23505 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4284, 0);
assign2884 = (Object)new_AST_Assign((Object)localvariable3572, (Object)send23505);
string2570 = (Object)new_Type_String(L"#abc");
constant5437 = (Object)new_AST_Constant((Object)string2570);
// on:
send23506 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5437);
assign2885 = (Object)new_AST_Assign((Object)localvariable3573, (Object)send23506);
// match:
send23507 = (Object)new_AST_Send((Object)localvariable3572, (Object)symbol4196, 1, (Object)localvariable3573);
assign2886 = (Object)new_AST_Assign((Object)localvariable3574, (Object)send23507);
// class
send23508 = (Object)new_AST_Send((Object)localvariable3574, (Object)SMB_class, 0);
// should
send23509 = (Object)new_AST_Send((Object)send23508, (Object)symbol4250, 0);

// ASTSymbol>>symbol
//symbol
// 	^ symbol
method4695 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1551);
methodclosure4683 = (Object)new_Runtime_MethodClosure(method4695);
store_method((Type_Class)class772, (Type_Symbol)symbol4055, (Runtime_MethodClosure)methodclosure4683);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol

// Symbol>>symbol:
//symbol: anObject
// 	symbol := anObject asSymbol
localvariable3575 = (Object)new_AST_Variable_named(L"anObject");
array3019 = (Object)new_Type_Array_with(1, (Object)localvariable3575);
// asSymbol
send23510 = (Object)new_AST_Send((Object)localvariable3575, (Object)SMB_asSymbol, 0);
assign2887 = (Object)new_AST_Assign((Object)instancevariable1569, (Object)send23510);
method4696 = (Object)new_AST_Method_with((Type_Array)array3019, (Type_Array)empty_Type_Array, 2, assign2887, Self);
symbol4058 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure4684 = (Object)new_Runtime_MethodClosure(method4696);
store_method((Type_Class)class787, (Type_Symbol)symbol4058, (Runtime_MethodClosure)methodclosure4684);


// Symbol>>symbol
//symbol
// 	^ symbol
method4697 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1569);
methodclosure4685 = (Object)new_Runtime_MethodClosure(method4697);
store_method((Type_Class)class787, (Type_Symbol)symbol4055, (Runtime_MethodClosure)methodclosure4685);


// Symbol>>asPSymbol
//asPSymbol
// 	^ self
method4698 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol4057 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure4686 = (Object)new_Runtime_MethodClosure(method4698);
store_method((Type_Class)class787, (Type_Symbol)symbol4057, (Runtime_MethodClosure)methodclosure4686);


// Symbol>>asString
//asString
// 	^ self symbol asString
// symbol
send23511 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// asString
send23512 = (Object)new_AST_Send((Object)send23511, (Object)SMB_asString, 0);
method4699 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23512);
methodclosure4687 = (Object)new_Runtime_MethodClosure(method4699);
store_method((Type_Class)class787, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure4687);


// Symbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: ' P'.
// 	self symbol printOn: aStream .
localvariable3576 = (Object)new_AST_Variable_named(L"aStream");
array3020 = (Object)new_Type_Array_with(1, (Object)localvariable3576);
string2571 = (Object)new_Type_String(L" P");
constant5438 = (Object)new_AST_Constant((Object)string2571);
// nextPutAll:
send23513 = (Object)new_AST_Send((Object)localvariable3576, (Object)symbol4238, 1, (Object)constant5438);
// symbol
send23514 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// printOn:
send23515 = (Object)new_AST_Send((Object)send23514, (Object)symbol4003, 1, (Object)localvariable3576);
method4700 = (Object)new_AST_Method_with((Type_Array)array3020, (Type_Array)empty_Type_Array, 3, send23513, send23515, Self);
methodclosure4688 = (Object)new_Runtime_MethodClosure(method4700);
store_method((Type_Class)class787, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4688);


// Symbol>>asSymbol
//asSymbol
// 	^ self symbol
// symbol
send23516 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
method4701 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23516);
methodclosure4689 = (Object)new_Runtime_MethodClosure(method4701);
store_method((Type_Class)class787, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure4689);


// Symbol>>=
//= other
// 	^(other isKindOf: self class) and: [self symbol = other symbol]
localvariable3577 = (Object)new_AST_Variable_named(L"other");
array3021 = (Object)new_Type_Array_with(1, (Object)localvariable3577);
symbol4285 = (Object)new_Type_Symbol_cached(L"isKindOf:");
// class
send23517 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// isKindOf:
send23518 = (Object)new_AST_Send((Object)localvariable3577, (Object)symbol4285, 1, (Object)send23517);
// symbol
send23519 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// symbol
send23520 = (Object)new_AST_Send((Object)localvariable3577, (Object)symbol4055, 0);
// =
send23521 = (Object)new_AST_Send((Object)send23519, (Object)SMB__equal, 1, (Object)send23520);
block1428 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23521);
// and:
send23522 = (Object)new_AST_Send((Object)send23518, (Object)symbol4258, 1, (Object)block1428);
method4702 = (Object)new_AST_Method_with((Type_Array)array3021, (Type_Array)empty_Type_Array, 1, send23522);
methodclosure4690 = (Object)new_Runtime_MethodClosure(method4702);
store_method((Type_Class)class787, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4690);

classreference1354 = (Object)new_Organization_ClassReference((Type_Class)class787);
symbol4208 = (Object)new_Type_Symbol_cached(L"named:");
// symbol
send23523 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// named:
send23524 = (Object)new_AST_Send((Object)classreference1354, (Object)symbol4208, 1, (Object)send23523);
method4703 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23524);
methodclosure4691 = (Object)new_Runtime_MethodClosure(method4703);
store_method((Type_Class)class772, (Type_Symbol)symbol4057, (Runtime_MethodClosure)methodclosure4691);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
// symbol
send23525 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// asString
send23526 = (Object)new_AST_Send((Object)send23525, (Object)SMB_asString, 0);
method4704 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23526);
methodclosure4692 = (Object)new_Runtime_MethodClosure(method4704);
store_method((Type_Class)class772, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure4692);


// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable3578 = (Object)new_AST_Variable_named(L"aStream");
array3022 = (Object)new_Type_Array_with(1, (Object)localvariable3578);
// nextPutAll:
send23527 = (Object)new_AST_Send((Object)localvariable3578, (Object)symbol4238, 1, (Object)instancevariable1551);
method4705 = (Object)new_AST_Method_with((Type_Array)array3022, (Type_Array)empty_Type_Array, 2, send23527, Self);
methodclosure4693 = (Object)new_Runtime_MethodClosure(method4705);
store_method((Type_Class)class772, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4693);


// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send23528 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// asSymbol
send23529 = (Object)new_AST_Send((Object)send23528, (Object)SMB_asSymbol, 0);
method4706 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23529);
methodclosure4694 = (Object)new_Runtime_MethodClosure(method4706);
store_method((Type_Class)class772, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure4694);


// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable3579 = (Object)new_AST_Variable_named(L"aSymbol");
array3023 = (Object)new_Type_Array_with(1, (Object)localvariable3579);
assign2888 = (Object)new_AST_Assign((Object)instancevariable1551, (Object)localvariable3579);
method4707 = (Object)new_AST_Method_with((Type_Array)array3023, (Type_Array)empty_Type_Array, 2, assign2888, Self);
methodclosure4695 = (Object)new_Runtime_MethodClosure(method4707);
store_method((Type_Class)class772, (Type_Symbol)symbol4058, (Runtime_MethodClosure)methodclosure4695);

classreference1355 = (Object)new_Organization_ClassReference((Type_Class)class772);
// =
send23530 = (Object)new_AST_Send((Object)send23509, (Object)SMB__equal, 1, (Object)classreference1355);
// symbol
send23531 = (Object)new_AST_Send((Object)localvariable3574, (Object)symbol4055, 0);
// should
send23532 = (Object)new_AST_Send((Object)send23531, (Object)symbol4250, 0);
string2572 = (Object)new_Type_String(L"abc");
constant5439 = (Object)new_AST_Constant((Object)string2572);
// =
send23533 = (Object)new_AST_Send((Object)send23532, (Object)SMB__equal, 1, (Object)constant5439);
// position
send23534 = (Object)new_AST_Send((Object)localvariable3573, (Object)symbol4241, 0);
// should
send23535 = (Object)new_AST_Send((Object)send23534, (Object)symbol4250, 0);
smallint2470 = (Object)new_Type_SmallInt(4);
constant5440 = (Object)new_AST_Constant((Object)smallint2470);
// =
send23536 = (Object)new_AST_Send((Object)send23535, (Object)SMB__equal, 1, (Object)constant5440);
method4708 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3018, 7, assign2884, assign2885, assign2886, send23530, send23533, send23536, Self);
symbol3933 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure4696 = (Object)new_Runtime_MethodClosure(method4708);
store_method((Type_Class)class751, (Type_Symbol)symbol3933, (Runtime_MethodClosure)methodclosure4696);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable3580 = (Object)new_AST_Variable_named(L"parser");
localvariable3581 = (Object)new_AST_Variable_named(L"string");
localvariable3582 = (Object)new_AST_Variable_named(L"result");
array3024 = (Object)new_Type_Array_with(3, (Object)localvariable3580, (Object)localvariable3581, (Object)localvariable3582);
symbol4286 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send23537 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4286, 0);
assign2889 = (Object)new_AST_Assign((Object)localvariable3580, (Object)send23537);
string2573 = (Object)new_Type_String(L"abc ");
constant5441 = (Object)new_AST_Constant((Object)string2573);
// on:
send23538 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5441);
assign2890 = (Object)new_AST_Assign((Object)localvariable3581, (Object)send23538);
// match:
send23539 = (Object)new_AST_Send((Object)localvariable3580, (Object)symbol4196, 1, (Object)localvariable3581);
assign2891 = (Object)new_AST_Assign((Object)localvariable3582, (Object)send23539);
// class
send23540 = (Object)new_AST_Send((Object)localvariable3582, (Object)SMB_class, 0);
// should
send23541 = (Object)new_AST_Send((Object)send23540, (Object)symbol4250, 0);
// =
send23542 = (Object)new_AST_Send((Object)send23541, (Object)SMB__equal, 1, (Object)classreference1336);
// name
send23543 = (Object)new_AST_Send((Object)localvariable3582, (Object)SMB_name, 0);
// should
send23544 = (Object)new_AST_Send((Object)send23543, (Object)symbol4250, 0);
string2574 = (Object)new_Type_String(L"abc");
constant5442 = (Object)new_AST_Constant((Object)string2574);
// =
send23545 = (Object)new_AST_Send((Object)send23544, (Object)SMB__equal, 1, (Object)constant5442);
// position
send23546 = (Object)new_AST_Send((Object)localvariable3581, (Object)symbol4241, 0);
// should
send23547 = (Object)new_AST_Send((Object)send23546, (Object)symbol4250, 0);
smallint2471 = (Object)new_Type_SmallInt(3);
constant5443 = (Object)new_AST_Constant((Object)smallint2471);
// =
send23548 = (Object)new_AST_Send((Object)send23547, (Object)SMB__equal, 1, (Object)constant5443);
string2575 = (Object)new_Type_String(L"3");
constant5444 = (Object)new_AST_Constant((Object)string2575);
// on:
send23549 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5444);
assign2892 = (Object)new_AST_Assign((Object)localvariable3581, (Object)send23549);
// match:
send23550 = (Object)new_AST_Send((Object)localvariable3580, (Object)symbol4196, 1, (Object)localvariable3581);
assign2893 = (Object)new_AST_Assign((Object)localvariable3582, (Object)send23550);
// class
send23551 = (Object)new_AST_Send((Object)localvariable3582, (Object)SMB_class, 0);
// should
send23552 = (Object)new_AST_Send((Object)send23551, (Object)symbol4250, 0);
// =
send23553 = (Object)new_AST_Send((Object)send23552, (Object)SMB__equal, 1, (Object)classreference1340);
// number
send23554 = (Object)new_AST_Send((Object)localvariable3582, (Object)symbol4048, 0);
// should
send23555 = (Object)new_AST_Send((Object)send23554, (Object)symbol4250, 0);
string2576 = (Object)new_Type_String(L"3");
constant5445 = (Object)new_AST_Constant((Object)string2576);
// =
send23556 = (Object)new_AST_Send((Object)send23555, (Object)SMB__equal, 1, (Object)constant5445);
// base
send23557 = (Object)new_AST_Send((Object)localvariable3582, (Object)symbol4051, 0);
// should
send23558 = (Object)new_AST_Send((Object)send23557, (Object)symbol4250, 0);
string2577 = (Object)new_Type_String(L"10");
constant5446 = (Object)new_AST_Constant((Object)string2577);
// =
send23559 = (Object)new_AST_Send((Object)send23558, (Object)SMB__equal, 1, (Object)constant5446);
// position
send23560 = (Object)new_AST_Send((Object)localvariable3581, (Object)symbol4241, 0);
// should
send23561 = (Object)new_AST_Send((Object)send23560, (Object)symbol4250, 0);
smallint2472 = (Object)new_Type_SmallInt(1);
constant5447 = (Object)new_AST_Constant((Object)smallint2472);
// =
send23562 = (Object)new_AST_Send((Object)send23561, (Object)SMB__equal, 1, (Object)constant5447);
method4709 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3024, 13, assign2889, assign2890, assign2891, send23542, send23545, send23548, assign2892, assign2893, send23553, send23556, send23559, send23562, Self);
symbol3961 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure4697 = (Object)new_Runtime_MethodClosure(method4709);
store_method((Type_Class)class751, (Type_Symbol)symbol3961, (Runtime_MethodClosure)methodclosure4697);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable3583 = (Object)new_AST_Variable_named(L"parser");
localvariable3584 = (Object)new_AST_Variable_named(L"string");
localvariable3585 = (Object)new_AST_Variable_named(L"result");
array3025 = (Object)new_Type_Array_with(3, (Object)localvariable3583, (Object)localvariable3584, (Object)localvariable3585);
// messageExpression
send23563 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4271, 0);
assign2894 = (Object)new_AST_Assign((Object)localvariable3583, (Object)send23563);
string2578 = (Object)new_Type_String(L"super+4");
constant5448 = (Object)new_AST_Constant((Object)string2578);
// on:
send23564 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5448);
assign2895 = (Object)new_AST_Assign((Object)localvariable3584, (Object)send23564);
// match:
send23565 = (Object)new_AST_Send((Object)localvariable3583, (Object)symbol4196, 1, (Object)localvariable3584);
assign2896 = (Object)new_AST_Assign((Object)localvariable3585, (Object)send23565);
// class
send23566 = (Object)new_AST_Send((Object)localvariable3585, (Object)SMB_class, 0);
// should
send23567 = (Object)new_AST_Send((Object)send23566, (Object)symbol4250, 0);
// =
send23568 = (Object)new_AST_Send((Object)send23567, (Object)SMB__equal, 1, (Object)classreference1341);
// receiver
send23569 = (Object)new_AST_Send((Object)localvariable3585, (Object)symbol4082, 0);
// class
send23570 = (Object)new_AST_Send((Object)send23569, (Object)SMB_class, 0);
// should
send23571 = (Object)new_AST_Send((Object)send23570, (Object)symbol4250, 0);
classreference1356 = (Object)new_Organization_ClassReference((Type_Class)class754);
// =
send23572 = (Object)new_AST_Send((Object)send23571, (Object)SMB__equal, 1, (Object)classreference1356);
string2579 = (Object)new_Type_String(L"self a: 4 b: 3");
constant5449 = (Object)new_AST_Constant((Object)string2579);
// on:
send23573 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5449);
assign2897 = (Object)new_AST_Assign((Object)localvariable3584, (Object)send23573);
// match:
send23574 = (Object)new_AST_Send((Object)localvariable3583, (Object)symbol4196, 1, (Object)localvariable3584);
assign2898 = (Object)new_AST_Assign((Object)localvariable3585, (Object)send23574);
// class
send23575 = (Object)new_AST_Send((Object)localvariable3585, (Object)SMB_class, 0);
// should
send23576 = (Object)new_AST_Send((Object)send23575, (Object)symbol4250, 0);
// =
send23577 = (Object)new_AST_Send((Object)send23576, (Object)SMB__equal, 1, (Object)classreference1337);
// receiver
send23578 = (Object)new_AST_Send((Object)localvariable3585, (Object)symbol4082, 0);
// class
send23579 = (Object)new_AST_Send((Object)send23578, (Object)SMB_class, 0);
// should
send23580 = (Object)new_AST_Send((Object)send23579, (Object)symbol4250, 0);
// =
send23581 = (Object)new_AST_Send((Object)send23580, (Object)SMB__equal, 1, (Object)classreference1346);
string2580 = (Object)new_Type_String(L"2 d");
constant5450 = (Object)new_AST_Constant((Object)string2580);
// on:
send23582 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5450);
assign2899 = (Object)new_AST_Assign((Object)localvariable3584, (Object)send23582);
// match:
send23583 = (Object)new_AST_Send((Object)localvariable3583, (Object)symbol4196, 1, (Object)localvariable3584);
assign2900 = (Object)new_AST_Assign((Object)localvariable3585, (Object)send23583);
// class
send23584 = (Object)new_AST_Send((Object)localvariable3585, (Object)SMB_class, 0);
// should
send23585 = (Object)new_AST_Send((Object)send23584, (Object)symbol4250, 0);
// =
send23586 = (Object)new_AST_Send((Object)send23585, (Object)SMB__equal, 1, (Object)classreference1342);
// receiver
send23587 = (Object)new_AST_Send((Object)localvariable3585, (Object)symbol4082, 0);
// class
send23588 = (Object)new_AST_Send((Object)send23587, (Object)SMB_class, 0);
// should
send23589 = (Object)new_AST_Send((Object)send23588, (Object)symbol4250, 0);
// =
send23590 = (Object)new_AST_Send((Object)send23589, (Object)SMB__equal, 1, (Object)classreference1340);
// receiver
send23591 = (Object)new_AST_Send((Object)localvariable3585, (Object)symbol4082, 0);
// asInteger
send23592 = (Object)new_AST_Send((Object)send23591, (Object)symbol4050, 0);
// should
send23593 = (Object)new_AST_Send((Object)send23592, (Object)symbol4250, 0);
smallint2473 = (Object)new_Type_SmallInt(2);
constant5451 = (Object)new_AST_Constant((Object)smallint2473);
// =
send23594 = (Object)new_AST_Send((Object)send23593, (Object)SMB__equal, 1, (Object)constant5451);
method4710 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3025, 15, assign2894, assign2895, assign2896, send23568, send23572, assign2897, assign2898, send23577, send23581, assign2899, assign2900, send23586, send23590, send23594, Self);
symbol3953 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure4698 = (Object)new_Runtime_MethodClosure(method4710);
store_method((Type_Class)class751, (Type_Symbol)symbol3953, (Runtime_MethodClosure)methodclosure4698);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable3586 = (Object)new_AST_Variable_named(L"parser");
localvariable3587 = (Object)new_AST_Variable_named(L"string");
localvariable3588 = (Object)new_AST_Variable_named(L"result");
array3026 = (Object)new_Type_Array_with(3, (Object)localvariable3586, (Object)localvariable3587, (Object)localvariable3588);
// binaryMessageDefinition
send23595 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4281, 0);
assign2901 = (Object)new_AST_Assign((Object)localvariable3586, (Object)send23595);
string2581 = (Object)new_Type_String(L"+= a");
constant5452 = (Object)new_AST_Constant((Object)string2581);
// on:
send23596 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5452);
assign2902 = (Object)new_AST_Assign((Object)localvariable3587, (Object)send23596);
// match:
send23597 = (Object)new_AST_Send((Object)localvariable3586, (Object)symbol4196, 1, (Object)localvariable3587);
assign2903 = (Object)new_AST_Assign((Object)localvariable3588, (Object)send23597);
// class
send23598 = (Object)new_AST_Send((Object)localvariable3588, (Object)SMB_class, 0);
// should
send23599 = (Object)new_AST_Send((Object)send23598, (Object)symbol4250, 0);
// =
send23600 = (Object)new_AST_Send((Object)send23599, (Object)SMB__equal, 1, (Object)classreference1352);
// selector
send23601 = (Object)new_AST_Send((Object)localvariable3588, (Object)symbol4007, 0);
// printString
send23602 = (Object)new_AST_Send((Object)send23601, (Object)symbol4198, 0);
// should
send23603 = (Object)new_AST_Send((Object)send23602, (Object)symbol4250, 0);
string2582 = (Object)new_Type_String(L"+=");
constant5453 = (Object)new_AST_Constant((Object)string2582);
// =
send23604 = (Object)new_AST_Send((Object)send23603, (Object)SMB__equal, 1, (Object)constant5453);
// parameter
send23605 = (Object)new_AST_Send((Object)localvariable3588, (Object)symbol4088, 0);
// class
send23606 = (Object)new_AST_Send((Object)send23605, (Object)SMB_class, 0);
// should
send23607 = (Object)new_AST_Send((Object)send23606, (Object)symbol4250, 0);
// =
send23608 = (Object)new_AST_Send((Object)send23607, (Object)SMB__equal, 1, (Object)classreference1336);
// parameter
send23609 = (Object)new_AST_Send((Object)localvariable3588, (Object)symbol4088, 0);
// name
send23610 = (Object)new_AST_Send((Object)send23609, (Object)SMB_name, 0);
// asString
send23611 = (Object)new_AST_Send((Object)send23610, (Object)SMB_asString, 0);
// should
send23612 = (Object)new_AST_Send((Object)send23611, (Object)symbol4250, 0);
string2583 = (Object)new_Type_String(L"a");
constant5454 = (Object)new_AST_Constant((Object)string2583);
// =
send23613 = (Object)new_AST_Send((Object)send23612, (Object)SMB__equal, 1, (Object)constant5454);
// position
send23614 = (Object)new_AST_Send((Object)localvariable3587, (Object)symbol4241, 0);
// should
send23615 = (Object)new_AST_Send((Object)send23614, (Object)symbol4250, 0);
smallint2474 = (Object)new_Type_SmallInt(4);
constant5455 = (Object)new_AST_Constant((Object)smallint2474);
// =
send23616 = (Object)new_AST_Send((Object)send23615, (Object)SMB__equal, 1, (Object)constant5455);
string2584 = (Object)new_Type_String(L"|= a");
constant5456 = (Object)new_AST_Constant((Object)string2584);
// on:
send23617 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5456);
assign2904 = (Object)new_AST_Assign((Object)localvariable3587, (Object)send23617);
// match:
send23618 = (Object)new_AST_Send((Object)localvariable3586, (Object)symbol4196, 1, (Object)localvariable3587);
// should
send23619 = (Object)new_AST_Send((Object)send23618, (Object)symbol4250, 0);
// be
send23620 = (Object)new_AST_Send((Object)send23619, (Object)symbol4251, 0);
// isNil
send23621 = (Object)new_AST_Send((Object)send23620, (Object)SMB_isNil, 0);
// position
send23622 = (Object)new_AST_Send((Object)localvariable3587, (Object)symbol4241, 0);
// should
send23623 = (Object)new_AST_Send((Object)send23622, (Object)symbol4250, 0);
smallint2475 = (Object)new_Type_SmallInt(0);
constant5457 = (Object)new_AST_Constant((Object)smallint2475);
// =
send23624 = (Object)new_AST_Send((Object)send23623, (Object)SMB__equal, 1, (Object)constant5457);
string2585 = (Object)new_Type_String(L"-= abc d");
constant5458 = (Object)new_AST_Constant((Object)string2585);
// on:
send23625 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5458);
assign2905 = (Object)new_AST_Assign((Object)localvariable3587, (Object)send23625);
// match:
send23626 = (Object)new_AST_Send((Object)localvariable3586, (Object)symbol4196, 1, (Object)localvariable3587);
assign2906 = (Object)new_AST_Assign((Object)localvariable3588, (Object)send23626);
// class
send23627 = (Object)new_AST_Send((Object)localvariable3588, (Object)SMB_class, 0);
// should
send23628 = (Object)new_AST_Send((Object)send23627, (Object)symbol4250, 0);
// =
send23629 = (Object)new_AST_Send((Object)send23628, (Object)SMB__equal, 1, (Object)classreference1352);
// selector
send23630 = (Object)new_AST_Send((Object)localvariable3588, (Object)symbol4007, 0);
// printString
send23631 = (Object)new_AST_Send((Object)send23630, (Object)symbol4198, 0);
// should
send23632 = (Object)new_AST_Send((Object)send23631, (Object)symbol4250, 0);
string2586 = (Object)new_Type_String(L"-=");
constant5459 = (Object)new_AST_Constant((Object)string2586);
// =
send23633 = (Object)new_AST_Send((Object)send23632, (Object)SMB__equal, 1, (Object)constant5459);
// parameter
send23634 = (Object)new_AST_Send((Object)localvariable3588, (Object)symbol4088, 0);
// class
send23635 = (Object)new_AST_Send((Object)send23634, (Object)SMB_class, 0);
// should
send23636 = (Object)new_AST_Send((Object)send23635, (Object)symbol4250, 0);
// =
send23637 = (Object)new_AST_Send((Object)send23636, (Object)SMB__equal, 1, (Object)classreference1336);
// parameter
send23638 = (Object)new_AST_Send((Object)localvariable3588, (Object)symbol4088, 0);
// name
send23639 = (Object)new_AST_Send((Object)send23638, (Object)SMB_name, 0);
// asString
send23640 = (Object)new_AST_Send((Object)send23639, (Object)SMB_asString, 0);
// should
send23641 = (Object)new_AST_Send((Object)send23640, (Object)symbol4250, 0);
string2587 = (Object)new_Type_String(L"abc");
constant5460 = (Object)new_AST_Constant((Object)string2587);
// =
send23642 = (Object)new_AST_Send((Object)send23641, (Object)SMB__equal, 1, (Object)constant5460);
// position
send23643 = (Object)new_AST_Send((Object)localvariable3587, (Object)symbol4241, 0);
// should
send23644 = (Object)new_AST_Send((Object)send23643, (Object)symbol4250, 0);
smallint2476 = (Object)new_Type_SmallInt(6);
constant5461 = (Object)new_AST_Constant((Object)smallint2476);
// =
send23645 = (Object)new_AST_Send((Object)send23644, (Object)SMB__equal, 1, (Object)constant5461);
method4711 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3026, 19, assign2901, assign2902, assign2903, send23600, send23604, send23608, send23613, send23616, assign2904, send23621, send23624, assign2905, assign2906, send23629, send23633, send23637, send23642, send23645, Self);
symbol3981 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure4699 = (Object)new_Runtime_MethodClosure(method4711);
store_method((Type_Class)class751, (Type_Symbol)symbol3981, (Runtime_MethodClosure)methodclosure4699);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable3589 = (Object)new_AST_Variable_named(L"parser");
localvariable3590 = (Object)new_AST_Variable_named(L"string");
localvariable3591 = (Object)new_AST_Variable_named(L"result");
array3027 = (Object)new_Type_Array_with(3, (Object)localvariable3589, (Object)localvariable3590, (Object)localvariable3591);
// method
send23646 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4265, 0);
assign2907 = (Object)new_AST_Assign((Object)localvariable3589, (Object)send23646);
string2588 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant5462 = (Object)new_AST_Constant((Object)string2588);
assign2908 = (Object)new_AST_Assign((Object)localvariable3590, (Object)constant5462);
// parse:
send23647 = (Object)new_AST_Send((Object)localvariable3589, (Object)symbol4203, 1, (Object)localvariable3590);
assign2909 = (Object)new_AST_Assign((Object)localvariable3591, (Object)send23647);
// hasReturnExpression
send23648 = (Object)new_AST_Send((Object)localvariable3591, (Object)symbol4025, 0);
// should
send23649 = (Object)new_AST_Send((Object)send23648, (Object)symbol4250, 0);
// be
send23650 = (Object)new_AST_Send((Object)send23649, (Object)symbol4251, 0);
// true
send23651 = (Object)new_AST_Send((Object)send23650, (Object)symbol4266, 0);
// class
send23652 = (Object)new_AST_Send((Object)localvariable3591, (Object)SMB_class, 0);
// should
send23653 = (Object)new_AST_Send((Object)send23652, (Object)symbol4250, 0);
// =
send23654 = (Object)new_AST_Send((Object)send23653, (Object)SMB__equal, 1, (Object)classreference1343);
// message
send23655 = (Object)new_AST_Send((Object)localvariable3591, (Object)symbol4097, 0);
// class
send23656 = (Object)new_AST_Send((Object)send23655, (Object)SMB_class, 0);
// should
send23657 = (Object)new_AST_Send((Object)send23656, (Object)symbol4250, 0);
// =
send23658 = (Object)new_AST_Send((Object)send23657, (Object)SMB__equal, 1, (Object)classreference1344);
// temporaries
send23659 = (Object)new_AST_Send((Object)localvariable3591, (Object)symbol4099, 0);
// size
send23660 = (Object)new_AST_Send((Object)send23659, (Object)SMB_size, 0);
// should
send23661 = (Object)new_AST_Send((Object)send23660, (Object)symbol4250, 0);
smallint2477 = (Object)new_Type_SmallInt(3);
constant5463 = (Object)new_AST_Constant((Object)smallint2477);
// =
send23662 = (Object)new_AST_Send((Object)send23661, (Object)SMB__equal, 1, (Object)constant5463);
// annotations
send23663 = (Object)new_AST_Send((Object)localvariable3591, (Object)symbol4095, 0);
// size
send23664 = (Object)new_AST_Send((Object)send23663, (Object)SMB_size, 0);
// should
send23665 = (Object)new_AST_Send((Object)send23664, (Object)symbol4250, 0);
smallint2478 = (Object)new_Type_SmallInt(3);
constant5464 = (Object)new_AST_Constant((Object)smallint2478);
// =
send23666 = (Object)new_AST_Send((Object)send23665, (Object)SMB__equal, 1, (Object)constant5464);
// statements
send23667 = (Object)new_AST_Send((Object)localvariable3591, (Object)symbol4094, 0);
// size
send23668 = (Object)new_AST_Send((Object)send23667, (Object)SMB_size, 0);
// should
send23669 = (Object)new_AST_Send((Object)send23668, (Object)symbol4250, 0);
smallint2479 = (Object)new_Type_SmallInt(2);
constant5465 = (Object)new_AST_Constant((Object)smallint2479);
// =
send23670 = (Object)new_AST_Send((Object)send23669, (Object)SMB__equal, 1, (Object)constant5465);
method4712 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3027, 10, assign2907, assign2908, assign2909, send23651, send23654, send23658, send23662, send23666, send23670, Self);
symbol3973 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure4700 = (Object)new_Runtime_MethodClosure(method4712);
store_method((Type_Class)class751, (Type_Symbol)symbol3973, (Runtime_MethodClosure)methodclosure4700);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3592 = (Object)new_AST_Variable_named(L"parser");
localvariable3593 = (Object)new_AST_Variable_named(L"string");
localvariable3594 = (Object)new_AST_Variable_named(L"result");
array3028 = (Object)new_Type_Array_with(3, (Object)localvariable3592, (Object)localvariable3593, (Object)localvariable3594);
// expression
send23671 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4064, 0);
assign2910 = (Object)new_AST_Assign((Object)localvariable3592, (Object)send23671);
string2589 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant5466 = (Object)new_AST_Constant((Object)string2589);
// on:
send23672 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5466);
assign2911 = (Object)new_AST_Assign((Object)localvariable3593, (Object)send23672);
// match:
send23673 = (Object)new_AST_Send((Object)localvariable3592, (Object)symbol4196, 1, (Object)localvariable3593);
assign2912 = (Object)new_AST_Assign((Object)localvariable3594, (Object)send23673);
// class
send23674 = (Object)new_AST_Send((Object)localvariable3594, (Object)SMB_class, 0);
// should
send23675 = (Object)new_AST_Send((Object)send23674, (Object)symbol4250, 0);
// =
send23676 = (Object)new_AST_Send((Object)send23675, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send23677 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4066, 0);
// class
send23678 = (Object)new_AST_Send((Object)send23677, (Object)SMB_class, 0);
// should
send23679 = (Object)new_AST_Send((Object)send23678, (Object)symbol4250, 0);
// =
send23680 = (Object)new_AST_Send((Object)send23679, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send23681 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4066, 0);
// name
send23682 = (Object)new_AST_Send((Object)send23681, (Object)SMB_name, 0);
// should
send23683 = (Object)new_AST_Send((Object)send23682, (Object)symbol4250, 0);
string2590 = (Object)new_Type_String(L"a");
constant5467 = (Object)new_AST_Constant((Object)string2590);
// =
send23684 = (Object)new_AST_Send((Object)send23683, (Object)SMB__equal, 1, (Object)constant5467);
// expression
send23685 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4064, 0);
assign2913 = (Object)new_AST_Assign((Object)localvariable3594, (Object)send23685);
// class
send23686 = (Object)new_AST_Send((Object)localvariable3594, (Object)SMB_class, 0);
// should
send23687 = (Object)new_AST_Send((Object)send23686, (Object)symbol4250, 0);
// =
send23688 = (Object)new_AST_Send((Object)send23687, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send23689 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4066, 0);
// class
send23690 = (Object)new_AST_Send((Object)send23689, (Object)SMB_class, 0);
// should
send23691 = (Object)new_AST_Send((Object)send23690, (Object)symbol4250, 0);
// =
send23692 = (Object)new_AST_Send((Object)send23691, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send23693 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4066, 0);
// name
send23694 = (Object)new_AST_Send((Object)send23693, (Object)SMB_name, 0);
// should
send23695 = (Object)new_AST_Send((Object)send23694, (Object)symbol4250, 0);
string2591 = (Object)new_Type_String(L"b");
constant5468 = (Object)new_AST_Constant((Object)string2591);
// =
send23696 = (Object)new_AST_Send((Object)send23695, (Object)SMB__equal, 1, (Object)constant5468);
// expression
send23697 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4064, 0);
assign2914 = (Object)new_AST_Assign((Object)localvariable3594, (Object)send23697);
// class
send23698 = (Object)new_AST_Send((Object)localvariable3594, (Object)SMB_class, 0);
// should
send23699 = (Object)new_AST_Send((Object)send23698, (Object)symbol4250, 0);
// =
send23700 = (Object)new_AST_Send((Object)send23699, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send23701 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4066, 0);
// class
send23702 = (Object)new_AST_Send((Object)send23701, (Object)SMB_class, 0);
// should
send23703 = (Object)new_AST_Send((Object)send23702, (Object)symbol4250, 0);
// =
send23704 = (Object)new_AST_Send((Object)send23703, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send23705 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4066, 0);
// name
send23706 = (Object)new_AST_Send((Object)send23705, (Object)SMB_name, 0);
// should
send23707 = (Object)new_AST_Send((Object)send23706, (Object)symbol4250, 0);
string2592 = (Object)new_Type_String(L"c");
constant5469 = (Object)new_AST_Constant((Object)string2592);
// =
send23708 = (Object)new_AST_Send((Object)send23707, (Object)SMB__equal, 1, (Object)constant5469);
// expression
send23709 = (Object)new_AST_Send((Object)localvariable3594, (Object)symbol4064, 0);
// class
send23710 = (Object)new_AST_Send((Object)send23709, (Object)SMB_class, 0);
// should
send23711 = (Object)new_AST_Send((Object)send23710, (Object)symbol4250, 0);
// =
send23712 = (Object)new_AST_Send((Object)send23711, (Object)SMB__equal, 1, (Object)classreference1337);
method4713 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3028, 16, assign2910, assign2911, assign2912, send23676, send23680, send23684, assign2913, send23688, send23692, send23696, assign2914, send23700, send23704, send23708, send23712, Self);
symbol3923 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure4701 = (Object)new_Runtime_MethodClosure(method4713);
store_method((Type_Class)class751, (Type_Symbol)symbol3923, (Runtime_MethodClosure)methodclosure4701);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable3595 = (Object)new_AST_Variable_named(L"parser");
localvariable3596 = (Object)new_AST_Variable_named(L"string");
localvariable3597 = (Object)new_AST_Variable_named(L"result");
array3029 = (Object)new_Type_Array_with(3, (Object)localvariable3595, (Object)localvariable3596, (Object)localvariable3597);
symbol4287 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send23713 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4287, 0);
assign2915 = (Object)new_AST_Assign((Object)localvariable3595, (Object)send23713);
string2593 = (Object)new_Type_String(L"a");
constant5470 = (Object)new_AST_Constant((Object)string2593);
// on:
send23714 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5470);
assign2916 = (Object)new_AST_Assign((Object)localvariable3596, (Object)send23714);
// match:
send23715 = (Object)new_AST_Send((Object)localvariable3595, (Object)symbol4196, 1, (Object)localvariable3596);
// should
send23716 = (Object)new_AST_Send((Object)send23715, (Object)symbol4250, 0);
// be
send23717 = (Object)new_AST_Send((Object)send23716, (Object)symbol4251, 0);
// isNil
send23718 = (Object)new_AST_Send((Object)send23717, (Object)SMB_isNil, 0);
// position
send23719 = (Object)new_AST_Send((Object)localvariable3596, (Object)symbol4241, 0);
// should
send23720 = (Object)new_AST_Send((Object)send23719, (Object)symbol4250, 0);
smallint2480 = (Object)new_Type_SmallInt(0);
constant5471 = (Object)new_AST_Constant((Object)smallint2480);
// =
send23721 = (Object)new_AST_Send((Object)send23720, (Object)SMB__equal, 1, (Object)constant5471);
string2594 = (Object)new_Type_String(L"$_");
constant5472 = (Object)new_AST_Constant((Object)string2594);
// on:
send23722 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5472);
assign2917 = (Object)new_AST_Assign((Object)localvariable3596, (Object)send23722);
// match:
send23723 = (Object)new_AST_Send((Object)localvariable3595, (Object)symbol4196, 1, (Object)localvariable3596);
assign2918 = (Object)new_AST_Assign((Object)localvariable3597, (Object)send23723);
// class
send23724 = (Object)new_AST_Send((Object)localvariable3597, (Object)SMB_class, 0);
// should
send23725 = (Object)new_AST_Send((Object)send23724, (Object)symbol4250, 0);

// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char

// Character>>=
//= other
// 	^ (other isKindOf: self class) and: [ self char = other char ].
localvariable3598 = (Object)new_AST_Variable_named(L"other");
array3030 = (Object)new_Type_Array_with(1, (Object)localvariable3598);
// class
send23726 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// isKindOf:
send23727 = (Object)new_AST_Send((Object)localvariable3598, (Object)symbol4285, 1, (Object)send23726);
symbol4090 = (Object)new_Type_Symbol_cached(L"char");
// char
send23728 = (Object)new_AST_Send((Object)Self, (Object)symbol4090, 0);
// char
send23729 = (Object)new_AST_Send((Object)localvariable3598, (Object)symbol4090, 0);
// =
send23730 = (Object)new_AST_Send((Object)send23728, (Object)SMB__equal, 1, (Object)send23729);
block1429 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send23730);
// and:
send23731 = (Object)new_AST_Send((Object)send23727, (Object)symbol4258, 1, (Object)block1429);
method4714 = (Object)new_AST_Method_with((Type_Array)array3030, (Type_Array)empty_Type_Array, 1, send23731);
methodclosure4702 = (Object)new_Runtime_MethodClosure(method4714);
store_method((Type_Class)class784, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure4702);


// Character>>char
//char
// 	^ char
method4715 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1565);
methodclosure4703 = (Object)new_Runtime_MethodClosure(method4715);
store_method((Type_Class)class784, (Type_Symbol)symbol4090, (Runtime_MethodClosure)methodclosure4703);


// Character>>char:
//char: anObject
// 	char := anObject reallyAsCharacter.
localvariable3599 = (Object)new_AST_Variable_named(L"anObject");
array3031 = (Object)new_Type_Array_with(1, (Object)localvariable3599);
symbol4288 = (Object)new_Type_Symbol_cached(L"reallyAsCharacter");
// reallyAsCharacter
send23732 = (Object)new_AST_Send((Object)localvariable3599, (Object)symbol4288, 0);
assign2919 = (Object)new_AST_Assign((Object)instancevariable1565, (Object)send23732);
method4716 = (Object)new_AST_Method_with((Type_Array)array3031, (Type_Array)empty_Type_Array, 2, assign2919, Self);
symbol4089 = (Object)new_Type_Symbol_cached(L"char:");
methodclosure4704 = (Object)new_Runtime_MethodClosure(method4716);
store_method((Type_Class)class784, (Type_Symbol)symbol4089, (Runtime_MethodClosure)methodclosure4704);

classreference1357 = (Object)new_Organization_ClassReference((Type_Class)class784);
// new
send23733 = (Object)new_AST_Send((Object)classreference1357, (Object)symbol3994, 0);
// char
send23734 = (Object)new_AST_Send((Object)Self, (Object)symbol4090, 0);
// char:
send23735 = (Object)new_AST_Send((Object)send23733, (Object)symbol4089, 1, (Object)send23734);
method4717 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23735);
symbol4092 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure4705 = (Object)new_Runtime_MethodClosure(method4717);
store_method((Type_Class)class761, (Type_Symbol)symbol4092, (Runtime_MethodClosure)methodclosure4705);


// ASTCharacter>>char
//char
// 	^ char
method4718 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1539);
methodclosure4706 = (Object)new_Runtime_MethodClosure(method4718);
store_method((Type_Class)class761, (Type_Symbol)symbol4090, (Runtime_MethodClosure)methodclosure4706);


// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable3600 = (Object)new_AST_Variable_named(L"aChar");
array3032 = (Object)new_Type_Array_with(1, (Object)localvariable3600);
assign2920 = (Object)new_AST_Assign((Object)instancevariable1539, (Object)localvariable3600);
method4719 = (Object)new_AST_Method_with((Type_Array)array3032, (Type_Array)empty_Type_Array, 2, assign2920, Self);
methodclosure4707 = (Object)new_Runtime_MethodClosure(method4719);
store_method((Type_Class)class761, (Type_Symbol)symbol4089, (Runtime_MethodClosure)methodclosure4707);

classreference1358 = (Object)new_Organization_ClassReference((Type_Class)class761);
// =
send23736 = (Object)new_AST_Send((Object)send23725, (Object)SMB__equal, 1, (Object)classreference1358);
// char
send23737 = (Object)new_AST_Send((Object)localvariable3597, (Object)symbol4090, 0);
// should
send23738 = (Object)new_AST_Send((Object)send23737, (Object)symbol4250, 0);
character120 = (Object)new_Type_Character(L'_');
constant5473 = (Object)new_AST_Constant((Object)character120);
// =
send23739 = (Object)new_AST_Send((Object)send23738, (Object)SMB__equal, 1, (Object)constant5473);
// position
send23740 = (Object)new_AST_Send((Object)localvariable3596, (Object)symbol4241, 0);
// should
send23741 = (Object)new_AST_Send((Object)send23740, (Object)symbol4250, 0);
smallint2481 = (Object)new_Type_SmallInt(2);
constant5474 = (Object)new_AST_Constant((Object)smallint2481);
// =
send23742 = (Object)new_AST_Send((Object)send23741, (Object)SMB__equal, 1, (Object)constant5474);
method4720 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3029, 10, assign2915, assign2916, send23718, send23721, assign2917, assign2918, send23736, send23739, send23742, Self);
symbol3943 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure4708 = (Object)new_Runtime_MethodClosure(method4720);
store_method((Type_Class)class751, (Type_Symbol)symbol3943, (Runtime_MethodClosure)methodclosure4708);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable3601 = (Object)new_AST_Variable_named(L"parser");
localvariable3602 = (Object)new_AST_Variable_named(L"string");
localvariable3603 = (Object)new_AST_Variable_named(L"result");
localvariable3604 = (Object)new_AST_Variable_named(L"expression");
array3033 = (Object)new_Type_Array_with(4, (Object)localvariable3601, (Object)localvariable3602, (Object)localvariable3603, (Object)localvariable3604);
symbol4289 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
// cascadedMessageExpression
send23743 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4289, 0);
assign2921 = (Object)new_AST_Assign((Object)localvariable3601, (Object)send23743);
string2595 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant5475 = (Object)new_AST_Constant((Object)string2595);
// on:
send23744 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5475);
assign2922 = (Object)new_AST_Assign((Object)localvariable3602, (Object)send23744);
// match:
send23745 = (Object)new_AST_Send((Object)localvariable3601, (Object)symbol4196, 1, (Object)localvariable3602);
assign2923 = (Object)new_AST_Assign((Object)localvariable3603, (Object)send23745);
// class
send23746 = (Object)new_AST_Send((Object)localvariable3603, (Object)SMB_class, 0);
// should
send23747 = (Object)new_AST_Send((Object)send23746, (Object)symbol4250, 0);

// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method4721 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1541);
methodclosure4709 = (Object)new_Runtime_MethodClosure(method4721);
store_method((Type_Class)class764, (Type_Symbol)symbol4082, (Runtime_MethodClosure)methodclosure4709);


// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable3605 = (Object)new_AST_Variable_named(L"anObject");
array3034 = (Object)new_Type_Array_with(1, (Object)localvariable3605);
assign2924 = (Object)new_AST_Assign((Object)instancevariable1542, (Object)localvariable3605);
method4722 = (Object)new_AST_Method_with((Type_Array)array3034, (Type_Array)empty_Type_Array, 2, assign2924, Self);
symbol4104 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure4710 = (Object)new_Runtime_MethodClosure(method4722);
store_method((Type_Class)class764, (Type_Symbol)symbol4104, (Runtime_MethodClosure)methodclosure4710);


// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method4723 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1542);
symbol4105 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure4711 = (Object)new_Runtime_MethodClosure(method4723);
store_method((Type_Class)class764, (Type_Symbol)symbol4105, (Runtime_MethodClosure)methodclosure4711);


// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable3606 = (Object)new_AST_Variable_named(L"anObject");
array3035 = (Object)new_Type_Array_with(1, (Object)localvariable3606);
assign2925 = (Object)new_AST_Assign((Object)instancevariable1541, (Object)localvariable3606);
method4724 = (Object)new_AST_Method_with((Type_Array)array3035, (Type_Array)empty_Type_Array, 2, assign2925, Self);
methodclosure4712 = (Object)new_Runtime_MethodClosure(method4724);
store_method((Type_Class)class764, (Type_Symbol)symbol4080, (Runtime_MethodClosure)methodclosure4712);

classreference1359 = (Object)new_Organization_ClassReference((Type_Class)class764);
// =
send23748 = (Object)new_AST_Send((Object)send23747, (Object)SMB__equal, 1, (Object)classreference1359);
// receiver
send23749 = (Object)new_AST_Send((Object)localvariable3603, (Object)symbol4082, 0);
// class
send23750 = (Object)new_AST_Send((Object)send23749, (Object)SMB_class, 0);
// should
send23751 = (Object)new_AST_Send((Object)send23750, (Object)symbol4250, 0);
// =
send23752 = (Object)new_AST_Send((Object)send23751, (Object)SMB__equal, 1, (Object)classreference1340);
// cascades
send23753 = (Object)new_AST_Send((Object)localvariable3603, (Object)symbol4105, 0);
// size
send23754 = (Object)new_AST_Send((Object)send23753, (Object)SMB_size, 0);
// should
send23755 = (Object)new_AST_Send((Object)send23754, (Object)symbol4250, 0);
smallint2482 = (Object)new_Type_SmallInt(4);
constant5476 = (Object)new_AST_Constant((Object)smallint2482);
// =
send23756 = (Object)new_AST_Send((Object)send23755, (Object)SMB__equal, 1, (Object)constant5476);
// cascades
send23757 = (Object)new_AST_Send((Object)localvariable3603, (Object)symbol4105, 0);
smallint2483 = (Object)new_Type_SmallInt(1);
constant5477 = (Object)new_AST_Constant((Object)smallint2483);
// at:
send23758 = (Object)new_AST_Send((Object)send23757, (Object)SMB_at_, 1, (Object)constant5477);
assign2926 = (Object)new_AST_Assign((Object)localvariable3604, (Object)send23758);
// class
send23759 = (Object)new_AST_Send((Object)localvariable3604, (Object)SMB_class, 0);
// should
send23760 = (Object)new_AST_Send((Object)send23759, (Object)symbol4250, 0);
// =
send23761 = (Object)new_AST_Send((Object)send23760, (Object)SMB__equal, 1, (Object)classreference1341);
// cascades
send23762 = (Object)new_AST_Send((Object)localvariable3603, (Object)symbol4105, 0);
smallint2484 = (Object)new_Type_SmallInt(2);
constant5478 = (Object)new_AST_Constant((Object)smallint2484);
// at:
send23763 = (Object)new_AST_Send((Object)send23762, (Object)SMB_at_, 1, (Object)constant5478);
assign2927 = (Object)new_AST_Assign((Object)localvariable3604, (Object)send23763);
// class
send23764 = (Object)new_AST_Send((Object)localvariable3604, (Object)SMB_class, 0);
// should
send23765 = (Object)new_AST_Send((Object)send23764, (Object)symbol4250, 0);
// =
send23766 = (Object)new_AST_Send((Object)send23765, (Object)SMB__equal, 1, (Object)classreference1337);
// cascades
send23767 = (Object)new_AST_Send((Object)localvariable3603, (Object)symbol4105, 0);
smallint2485 = (Object)new_Type_SmallInt(3);
constant5479 = (Object)new_AST_Constant((Object)smallint2485);
// at:
send23768 = (Object)new_AST_Send((Object)send23767, (Object)SMB_at_, 1, (Object)constant5479);
assign2928 = (Object)new_AST_Assign((Object)localvariable3604, (Object)send23768);
// class
send23769 = (Object)new_AST_Send((Object)localvariable3604, (Object)SMB_class, 0);
// should
send23770 = (Object)new_AST_Send((Object)send23769, (Object)symbol4250, 0);
// =
send23771 = (Object)new_AST_Send((Object)send23770, (Object)SMB__equal, 1, (Object)classreference1337);
// cascades
send23772 = (Object)new_AST_Send((Object)localvariable3603, (Object)symbol4105, 0);
smallint2486 = (Object)new_Type_SmallInt(4);
constant5480 = (Object)new_AST_Constant((Object)smallint2486);
// at:
send23773 = (Object)new_AST_Send((Object)send23772, (Object)SMB_at_, 1, (Object)constant5480);
assign2929 = (Object)new_AST_Assign((Object)localvariable3604, (Object)send23773);
// class
send23774 = (Object)new_AST_Send((Object)localvariable3604, (Object)SMB_class, 0);
// should
send23775 = (Object)new_AST_Send((Object)send23774, (Object)symbol4250, 0);
// =
send23776 = (Object)new_AST_Send((Object)send23775, (Object)SMB__equal, 1, (Object)classreference1342);
method4725 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3033, 15, assign2921, assign2922, assign2923, send23748, send23752, send23756, assign2926, send23761, assign2927, send23766, assign2928, send23771, assign2929, send23776, Self);
symbol3963 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure4713 = (Object)new_Runtime_MethodClosure(method4725);
store_method((Type_Class)class751, (Type_Symbol)symbol3963, (Runtime_MethodClosure)methodclosure4713);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3607 = (Object)new_AST_Variable_named(L"parser");
localvariable3608 = (Object)new_AST_Variable_named(L"string");
localvariable3609 = (Object)new_AST_Variable_named(L"result");
array3036 = (Object)new_Type_Array_with(3, (Object)localvariable3607, (Object)localvariable3608, (Object)localvariable3609);
// expression
send23777 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4064, 0);
assign2930 = (Object)new_AST_Assign((Object)localvariable3607, (Object)send23777);
string2596 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5481 = (Object)new_AST_Constant((Object)string2596);
// on:
send23778 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5481);
assign2931 = (Object)new_AST_Assign((Object)localvariable3608, (Object)send23778);
// match:
send23779 = (Object)new_AST_Send((Object)localvariable3607, (Object)symbol4196, 1, (Object)localvariable3608);
assign2932 = (Object)new_AST_Assign((Object)localvariable3609, (Object)send23779);
// class
send23780 = (Object)new_AST_Send((Object)localvariable3609, (Object)SMB_class, 0);
// should
send23781 = (Object)new_AST_Send((Object)send23780, (Object)symbol4250, 0);
// =
send23782 = (Object)new_AST_Send((Object)send23781, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send23783 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4066, 0);
// class
send23784 = (Object)new_AST_Send((Object)send23783, (Object)SMB_class, 0);
// should
send23785 = (Object)new_AST_Send((Object)send23784, (Object)symbol4250, 0);
// =
send23786 = (Object)new_AST_Send((Object)send23785, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send23787 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4066, 0);
// name
send23788 = (Object)new_AST_Send((Object)send23787, (Object)SMB_name, 0);
// should
send23789 = (Object)new_AST_Send((Object)send23788, (Object)symbol4250, 0);
string2597 = (Object)new_Type_String(L"a");
constant5482 = (Object)new_AST_Constant((Object)string2597);
// =
send23790 = (Object)new_AST_Send((Object)send23789, (Object)SMB__equal, 1, (Object)constant5482);
// expression
send23791 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4064, 0);
assign2933 = (Object)new_AST_Assign((Object)localvariable3609, (Object)send23791);
// class
send23792 = (Object)new_AST_Send((Object)localvariable3609, (Object)SMB_class, 0);
// should
send23793 = (Object)new_AST_Send((Object)send23792, (Object)symbol4250, 0);
// =
send23794 = (Object)new_AST_Send((Object)send23793, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send23795 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4066, 0);
// class
send23796 = (Object)new_AST_Send((Object)send23795, (Object)SMB_class, 0);
// should
send23797 = (Object)new_AST_Send((Object)send23796, (Object)symbol4250, 0);
// =
send23798 = (Object)new_AST_Send((Object)send23797, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send23799 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4066, 0);
// name
send23800 = (Object)new_AST_Send((Object)send23799, (Object)SMB_name, 0);
// should
send23801 = (Object)new_AST_Send((Object)send23800, (Object)symbol4250, 0);
string2598 = (Object)new_Type_String(L"b");
constant5483 = (Object)new_AST_Constant((Object)string2598);
// =
send23802 = (Object)new_AST_Send((Object)send23801, (Object)SMB__equal, 1, (Object)constant5483);
// expression
send23803 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4064, 0);
assign2934 = (Object)new_AST_Assign((Object)localvariable3609, (Object)send23803);
// class
send23804 = (Object)new_AST_Send((Object)localvariable3609, (Object)SMB_class, 0);
// should
send23805 = (Object)new_AST_Send((Object)send23804, (Object)symbol4250, 0);
// =
send23806 = (Object)new_AST_Send((Object)send23805, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send23807 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4066, 0);
// class
send23808 = (Object)new_AST_Send((Object)send23807, (Object)SMB_class, 0);
// should
send23809 = (Object)new_AST_Send((Object)send23808, (Object)symbol4250, 0);
// =
send23810 = (Object)new_AST_Send((Object)send23809, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send23811 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4066, 0);
// name
send23812 = (Object)new_AST_Send((Object)send23811, (Object)SMB_name, 0);
// should
send23813 = (Object)new_AST_Send((Object)send23812, (Object)symbol4250, 0);
string2599 = (Object)new_Type_String(L"c");
constant5484 = (Object)new_AST_Constant((Object)string2599);
// =
send23814 = (Object)new_AST_Send((Object)send23813, (Object)SMB__equal, 1, (Object)constant5484);
// expression
send23815 = (Object)new_AST_Send((Object)localvariable3609, (Object)symbol4064, 0);
// class
send23816 = (Object)new_AST_Send((Object)send23815, (Object)SMB_class, 0);
// should
send23817 = (Object)new_AST_Send((Object)send23816, (Object)symbol4250, 0);
// =
send23818 = (Object)new_AST_Send((Object)send23817, (Object)SMB__equal, 1, (Object)classreference1337);
method4726 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3036, 16, assign2930, assign2931, assign2932, send23782, send23786, send23790, assign2933, send23794, send23798, send23802, assign2934, send23806, send23810, send23814, send23818, Self);
symbol3955 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure4714 = (Object)new_Runtime_MethodClosure(method4726);
store_method((Type_Class)class751, (Type_Symbol)symbol3955, (Runtime_MethodClosure)methodclosure4714);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable3610 = (Object)new_AST_Variable_named(L"parser");
localvariable3611 = (Object)new_AST_Variable_named(L"string");
localvariable3612 = (Object)new_AST_Variable_named(L"message");
localvariable3613 = (Object)new_AST_Variable_named(L"return");
array3037 = (Object)new_Type_Array_with(4, (Object)localvariable3610, (Object)localvariable3611, (Object)localvariable3612, (Object)localvariable3613);
// messageExpression
send23819 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4271, 0);
assign2935 = (Object)new_AST_Assign((Object)localvariable3610, (Object)send23819);
string2600 = (Object)new_Type_String(L"super do: this and: that");
constant5485 = (Object)new_AST_Constant((Object)string2600);
// on:
send23820 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5485);
assign2936 = (Object)new_AST_Assign((Object)localvariable3611, (Object)send23820);
// match:
send23821 = (Object)new_AST_Send((Object)localvariable3610, (Object)symbol4196, 1, (Object)localvariable3611);
assign2937 = (Object)new_AST_Assign((Object)localvariable3612, (Object)send23821);
// receiver
send23822 = (Object)new_AST_Send((Object)localvariable3612, (Object)symbol4082, 0);
// class
send23823 = (Object)new_AST_Send((Object)send23822, (Object)SMB_class, 0);
// should
send23824 = (Object)new_AST_Send((Object)send23823, (Object)symbol4250, 0);
// =
send23825 = (Object)new_AST_Send((Object)send23824, (Object)SMB__equal, 1, (Object)classreference1356);
// return
send23826 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4272, 0);
assign2938 = (Object)new_AST_Assign((Object)localvariable3610, (Object)send23826);
string2601 = (Object)new_Type_String(L"^ super do: this and: that");
constant5486 = (Object)new_AST_Constant((Object)string2601);
// on:
send23827 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5486);
assign2939 = (Object)new_AST_Assign((Object)localvariable3611, (Object)send23827);
// match:
send23828 = (Object)new_AST_Send((Object)localvariable3610, (Object)symbol4196, 1, (Object)localvariable3611);
assign2940 = (Object)new_AST_Assign((Object)localvariable3613, (Object)send23828);
// class
send23829 = (Object)new_AST_Send((Object)localvariable3613, (Object)SMB_class, 0);
// should
send23830 = (Object)new_AST_Send((Object)send23829, (Object)symbol4250, 0);
// =
send23831 = (Object)new_AST_Send((Object)send23830, (Object)SMB__equal, 1, (Object)classreference1347);
// expression
send23832 = (Object)new_AST_Send((Object)localvariable3613, (Object)symbol4064, 0);
// receiver
send23833 = (Object)new_AST_Send((Object)send23832, (Object)symbol4082, 0);
// class
send23834 = (Object)new_AST_Send((Object)send23833, (Object)SMB_class, 0);
// should
send23835 = (Object)new_AST_Send((Object)send23834, (Object)symbol4250, 0);
// =
send23836 = (Object)new_AST_Send((Object)send23835, (Object)SMB__equal, 1, (Object)classreference1356);
method4727 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3037, 10, assign2935, assign2936, assign2937, send23825, assign2938, assign2939, assign2940, send23831, send23836, Self);
symbol3983 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure4715 = (Object)new_Runtime_MethodClosure(method4727);
store_method((Type_Class)class751, (Type_Symbol)symbol3983, (Runtime_MethodClosure)methodclosure4715);


// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable3614 = (Object)new_AST_Variable_named(L"parser");
localvariable3615 = (Object)new_AST_Variable_named(L"string");
localvariable3616 = (Object)new_AST_Variable_named(L"result");
array3038 = (Object)new_Type_Array_with(3, (Object)localvariable3614, (Object)localvariable3615, (Object)localvariable3616);
// method
send23837 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4265, 0);
assign2941 = (Object)new_AST_Assign((Object)localvariable3614, (Object)send23837);
string2602 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant5487 = (Object)new_AST_Constant((Object)string2602);
assign2942 = (Object)new_AST_Assign((Object)localvariable3615, (Object)constant5487);
// parse:
send23838 = (Object)new_AST_Send((Object)localvariable3614, (Object)symbol4203, 1, (Object)localvariable3615);
assign2943 = (Object)new_AST_Assign((Object)localvariable3616, (Object)send23838);
// hasReturnExpression
send23839 = (Object)new_AST_Send((Object)localvariable3616, (Object)symbol4025, 0);
// should
send23840 = (Object)new_AST_Send((Object)send23839, (Object)symbol4250, 0);
// be
send23841 = (Object)new_AST_Send((Object)send23840, (Object)symbol4251, 0);
// true
send23842 = (Object)new_AST_Send((Object)send23841, (Object)symbol4266, 0);
// class
send23843 = (Object)new_AST_Send((Object)localvariable3616, (Object)SMB_class, 0);
// should
send23844 = (Object)new_AST_Send((Object)send23843, (Object)symbol4250, 0);
// =
send23845 = (Object)new_AST_Send((Object)send23844, (Object)SMB__equal, 1, (Object)classreference1343);
// message
send23846 = (Object)new_AST_Send((Object)localvariable3616, (Object)symbol4097, 0);
// asString
send23847 = (Object)new_AST_Send((Object)send23846, (Object)SMB_asString, 0);
// should
send23848 = (Object)new_AST_Send((Object)send23847, (Object)symbol4250, 0);
string2603 = (Object)new_Type_String(L"withA:withB:withC:");
constant5488 = (Object)new_AST_Constant((Object)string2603);
// =
send23849 = (Object)new_AST_Send((Object)send23848, (Object)SMB__equal, 1, (Object)constant5488);
// statements
send23850 = (Object)new_AST_Send((Object)localvariable3616, (Object)symbol4094, 0);
// last
send23851 = (Object)new_AST_Send((Object)send23850, (Object)symbol4040, 0);
// hasReturnExpression
send23852 = (Object)new_AST_Send((Object)send23851, (Object)symbol4025, 0);
// should
send23853 = (Object)new_AST_Send((Object)send23852, (Object)symbol4250, 0);
// be
send23854 = (Object)new_AST_Send((Object)send23853, (Object)symbol4251, 0);
// true
send23855 = (Object)new_AST_Send((Object)send23854, (Object)symbol4266, 0);
method4728 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3038, 8, assign2941, assign2942, assign2943, send23842, send23845, send23849, send23855, Self);
symbol3975 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure4716 = (Object)new_Runtime_MethodClosure(method4728);
store_method((Type_Class)class751, (Type_Symbol)symbol3975, (Runtime_MethodClosure)methodclosure4716);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3617 = (Object)new_AST_Variable_named(L"parser");
localvariable3618 = (Object)new_AST_Variable_named(L"string");
localvariable3619 = (Object)new_AST_Variable_named(L"result");
array3039 = (Object)new_Type_Array_with(3, (Object)localvariable3617, (Object)localvariable3618, (Object)localvariable3619);
symbol4290 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send23856 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4290, 0);
assign2944 = (Object)new_AST_Assign((Object)localvariable3617, (Object)send23856);
string2604 = (Object)new_Type_String(L"abcd bla");
constant5489 = (Object)new_AST_Constant((Object)string2604);
// on:
send23857 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5489);
assign2945 = (Object)new_AST_Assign((Object)localvariable3618, (Object)send23857);
// match:
send23858 = (Object)new_AST_Send((Object)localvariable3617, (Object)symbol4196, 1, (Object)localvariable3618);
assign2946 = (Object)new_AST_Assign((Object)localvariable3619, (Object)send23858);
// class
send23859 = (Object)new_AST_Send((Object)localvariable3619, (Object)SMB_class, 0);
// should
send23860 = (Object)new_AST_Send((Object)send23859, (Object)symbol4250, 0);
// =
send23861 = (Object)new_AST_Send((Object)send23860, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send23862 = (Object)new_AST_Send((Object)localvariable3619, (Object)symbol4007, 0);
// printString
send23863 = (Object)new_AST_Send((Object)send23862, (Object)symbol4198, 0);
// should
send23864 = (Object)new_AST_Send((Object)send23863, (Object)symbol4250, 0);
string2605 = (Object)new_Type_String(L"abcd");
constant5490 = (Object)new_AST_Constant((Object)string2605);
// =
send23865 = (Object)new_AST_Send((Object)send23864, (Object)SMB__equal, 1, (Object)constant5490);
// position
send23866 = (Object)new_AST_Send((Object)localvariable3618, (Object)symbol4241, 0);
// should
send23867 = (Object)new_AST_Send((Object)send23866, (Object)symbol4250, 0);
smallint2487 = (Object)new_Type_SmallInt(4);
constant5491 = (Object)new_AST_Constant((Object)smallint2487);
// =
send23868 = (Object)new_AST_Send((Object)send23867, (Object)SMB__equal, 1, (Object)constant5491);
string2606 = (Object)new_Type_String(L"abcd: bla");
constant5492 = (Object)new_AST_Constant((Object)string2606);
// on:
send23869 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5492);
assign2947 = (Object)new_AST_Assign((Object)localvariable3618, (Object)send23869);
// match:
send23870 = (Object)new_AST_Send((Object)localvariable3617, (Object)symbol4196, 1, (Object)localvariable3618);
// should
send23871 = (Object)new_AST_Send((Object)send23870, (Object)symbol4250, 0);
// be
send23872 = (Object)new_AST_Send((Object)send23871, (Object)symbol4251, 0);
// isNil
send23873 = (Object)new_AST_Send((Object)send23872, (Object)SMB_isNil, 0);
// position
send23874 = (Object)new_AST_Send((Object)localvariable3618, (Object)symbol4241, 0);
// should
send23875 = (Object)new_AST_Send((Object)send23874, (Object)symbol4250, 0);
smallint2488 = (Object)new_Type_SmallInt(0);
constant5493 = (Object)new_AST_Constant((Object)smallint2488);
// =
send23876 = (Object)new_AST_Send((Object)send23875, (Object)SMB__equal, 1, (Object)constant5493);
method4729 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3039, 10, assign2944, assign2945, assign2946, send23861, send23865, send23868, assign2947, send23873, send23876, Self);
symbol3925 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure4717 = (Object)new_Runtime_MethodClosure(method4729);
store_method((Type_Class)class751, (Type_Symbol)symbol3925, (Runtime_MethodClosure)methodclosure4717);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable3620 = (Object)new_AST_Variable_named(L"parser");
localvariable3621 = (Object)new_AST_Variable_named(L"string");
localvariable3622 = (Object)new_AST_Variable_named(L"result");
array3040 = (Object)new_Type_Array_with(3, (Object)localvariable3620, (Object)localvariable3621, (Object)localvariable3622);
// method
send23877 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4265, 0);
assign2948 = (Object)new_AST_Assign((Object)localvariable3620, (Object)send23877);
string2607 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant5494 = (Object)new_AST_Constant((Object)string2607);
assign2949 = (Object)new_AST_Assign((Object)localvariable3621, (Object)constant5494);
// parse:
send23878 = (Object)new_AST_Send((Object)localvariable3620, (Object)symbol4203, 1, (Object)localvariable3621);
assign2950 = (Object)new_AST_Assign((Object)localvariable3622, (Object)send23878);
// hasReturnExpression
send23879 = (Object)new_AST_Send((Object)localvariable3622, (Object)symbol4025, 0);
// should
send23880 = (Object)new_AST_Send((Object)send23879, (Object)symbol4250, 0);
// be
send23881 = (Object)new_AST_Send((Object)send23880, (Object)symbol4251, 0);
// true
send23882 = (Object)new_AST_Send((Object)send23881, (Object)symbol4266, 0);
// class
send23883 = (Object)new_AST_Send((Object)localvariable3622, (Object)SMB_class, 0);
// should
send23884 = (Object)new_AST_Send((Object)send23883, (Object)symbol4250, 0);
// =
send23885 = (Object)new_AST_Send((Object)send23884, (Object)SMB__equal, 1, (Object)classreference1343);
// message
send23886 = (Object)new_AST_Send((Object)localvariable3622, (Object)symbol4097, 0);
// asString
send23887 = (Object)new_AST_Send((Object)send23886, (Object)SMB_asString, 0);
// should
send23888 = (Object)new_AST_Send((Object)send23887, (Object)symbol4250, 0);
string2608 = (Object)new_Type_String(L"withA:withB:withC:");
constant5495 = (Object)new_AST_Constant((Object)string2608);
// =
send23889 = (Object)new_AST_Send((Object)send23888, (Object)SMB__equal, 1, (Object)constant5495);
method4730 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3040, 7, assign2948, assign2949, assign2950, send23882, send23885, send23889, Self);
symbol3945 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure4718 = (Object)new_Runtime_MethodClosure(method4730);
store_method((Type_Class)class751, (Type_Symbol)symbol3945, (Runtime_MethodClosure)methodclosure4718);


// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable3623 = (Object)new_AST_Variable_named(L"parser");
localvariable3624 = (Object)new_AST_Variable_named(L"string");
localvariable3625 = (Object)new_AST_Variable_named(L"result");
array3041 = (Object)new_Type_Array_with(3, (Object)localvariable3623, (Object)localvariable3624, (Object)localvariable3625);
symbol4291 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send23890 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4291, 0);
assign2951 = (Object)new_AST_Assign((Object)localvariable3623, (Object)send23890);
string2609 = (Object)new_Type_String(L"abc + ghi ");
constant5496 = (Object)new_AST_Constant((Object)string2609);
// on:
send23891 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5496);
assign2952 = (Object)new_AST_Assign((Object)localvariable3624, (Object)send23891);
// match:
send23892 = (Object)new_AST_Send((Object)localvariable3623, (Object)symbol4196, 1, (Object)localvariable3624);
assign2953 = (Object)new_AST_Assign((Object)localvariable3625, (Object)send23892);
// class
send23893 = (Object)new_AST_Send((Object)localvariable3625, (Object)SMB_class, 0);
// should
send23894 = (Object)new_AST_Send((Object)send23893, (Object)symbol4250, 0);
// =
send23895 = (Object)new_AST_Send((Object)send23894, (Object)SMB__equal, 1, (Object)classreference1341);
// selector
send23896 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4007, 0);
// printString
send23897 = (Object)new_AST_Send((Object)send23896, (Object)symbol4198, 0);
// should
send23898 = (Object)new_AST_Send((Object)send23897, (Object)symbol4250, 0);
string2610 = (Object)new_Type_String(L"+");
constant5497 = (Object)new_AST_Constant((Object)string2610);
// =
send23899 = (Object)new_AST_Send((Object)send23898, (Object)SMB__equal, 1, (Object)constant5497);
// receiver
send23900 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4082, 0);
// class
send23901 = (Object)new_AST_Send((Object)send23900, (Object)SMB_class, 0);
// should
send23902 = (Object)new_AST_Send((Object)send23901, (Object)symbol4250, 0);
// =
send23903 = (Object)new_AST_Send((Object)send23902, (Object)SMB__equal, 1, (Object)classreference1336);
// receiver
send23904 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4082, 0);
// name
send23905 = (Object)new_AST_Send((Object)send23904, (Object)SMB_name, 0);
// should
send23906 = (Object)new_AST_Send((Object)send23905, (Object)symbol4250, 0);
string2611 = (Object)new_Type_String(L"abc");
constant5498 = (Object)new_AST_Constant((Object)string2611);
// =
send23907 = (Object)new_AST_Send((Object)send23906, (Object)SMB__equal, 1, (Object)constant5498);
// argument
send23908 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4086, 0);
// class
send23909 = (Object)new_AST_Send((Object)send23908, (Object)SMB_class, 0);
// should
send23910 = (Object)new_AST_Send((Object)send23909, (Object)symbol4250, 0);
// =
send23911 = (Object)new_AST_Send((Object)send23910, (Object)SMB__equal, 1, (Object)classreference1336);
// argument
send23912 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4086, 0);
// name
send23913 = (Object)new_AST_Send((Object)send23912, (Object)SMB_name, 0);
// should
send23914 = (Object)new_AST_Send((Object)send23913, (Object)symbol4250, 0);
string2612 = (Object)new_Type_String(L"ghi");
constant5499 = (Object)new_AST_Constant((Object)string2612);
// =
send23915 = (Object)new_AST_Send((Object)send23914, (Object)SMB__equal, 1, (Object)constant5499);
// position
send23916 = (Object)new_AST_Send((Object)localvariable3624, (Object)symbol4241, 0);
// should
send23917 = (Object)new_AST_Send((Object)send23916, (Object)symbol4250, 0);
smallint2489 = (Object)new_Type_SmallInt(9);
constant5500 = (Object)new_AST_Constant((Object)smallint2489);
// =
send23918 = (Object)new_AST_Send((Object)send23917, (Object)SMB__equal, 1, (Object)constant5500);
string2613 = (Object)new_Type_String(L"abc + ghi * c ");
constant5501 = (Object)new_AST_Constant((Object)string2613);
// on:
send23919 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5501);
assign2954 = (Object)new_AST_Assign((Object)localvariable3624, (Object)send23919);
// match:
send23920 = (Object)new_AST_Send((Object)localvariable3623, (Object)symbol4196, 1, (Object)localvariable3624);
assign2955 = (Object)new_AST_Assign((Object)localvariable3625, (Object)send23920);
// class
send23921 = (Object)new_AST_Send((Object)localvariable3625, (Object)SMB_class, 0);
// should
send23922 = (Object)new_AST_Send((Object)send23921, (Object)symbol4250, 0);
// =
send23923 = (Object)new_AST_Send((Object)send23922, (Object)SMB__equal, 1, (Object)classreference1341);
// selector
send23924 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4007, 0);
// printString
send23925 = (Object)new_AST_Send((Object)send23924, (Object)symbol4198, 0);
// should
send23926 = (Object)new_AST_Send((Object)send23925, (Object)symbol4250, 0);
string2614 = (Object)new_Type_String(L"*");
constant5502 = (Object)new_AST_Constant((Object)string2614);
// =
send23927 = (Object)new_AST_Send((Object)send23926, (Object)SMB__equal, 1, (Object)constant5502);
// argument
send23928 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4086, 0);
// class
send23929 = (Object)new_AST_Send((Object)send23928, (Object)SMB_class, 0);
// should
send23930 = (Object)new_AST_Send((Object)send23929, (Object)symbol4250, 0);
// =
send23931 = (Object)new_AST_Send((Object)send23930, (Object)SMB__equal, 1, (Object)classreference1336);
// argument
send23932 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4086, 0);
// name
send23933 = (Object)new_AST_Send((Object)send23932, (Object)SMB_name, 0);
// should
send23934 = (Object)new_AST_Send((Object)send23933, (Object)symbol4250, 0);
string2615 = (Object)new_Type_String(L"c");
constant5503 = (Object)new_AST_Constant((Object)string2615);
// =
send23935 = (Object)new_AST_Send((Object)send23934, (Object)SMB__equal, 1, (Object)constant5503);
// receiver
send23936 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4082, 0);
assign2956 = (Object)new_AST_Assign((Object)localvariable3625, (Object)send23936);
// class
send23937 = (Object)new_AST_Send((Object)localvariable3625, (Object)SMB_class, 0);
// should
send23938 = (Object)new_AST_Send((Object)send23937, (Object)symbol4250, 0);
// =
send23939 = (Object)new_AST_Send((Object)send23938, (Object)SMB__equal, 1, (Object)classreference1341);
// selector
send23940 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4007, 0);
// printString
send23941 = (Object)new_AST_Send((Object)send23940, (Object)symbol4198, 0);
// should
send23942 = (Object)new_AST_Send((Object)send23941, (Object)symbol4250, 0);
string2616 = (Object)new_Type_String(L"+");
constant5504 = (Object)new_AST_Constant((Object)string2616);
// =
send23943 = (Object)new_AST_Send((Object)send23942, (Object)SMB__equal, 1, (Object)constant5504);
// receiver
send23944 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4082, 0);
// class
send23945 = (Object)new_AST_Send((Object)send23944, (Object)SMB_class, 0);
// should
send23946 = (Object)new_AST_Send((Object)send23945, (Object)symbol4250, 0);
// =
send23947 = (Object)new_AST_Send((Object)send23946, (Object)SMB__equal, 1, (Object)classreference1336);
// receiver
send23948 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4082, 0);
// name
send23949 = (Object)new_AST_Send((Object)send23948, (Object)SMB_name, 0);
// should
send23950 = (Object)new_AST_Send((Object)send23949, (Object)symbol4250, 0);
string2617 = (Object)new_Type_String(L"abc");
constant5505 = (Object)new_AST_Constant((Object)string2617);
// =
send23951 = (Object)new_AST_Send((Object)send23950, (Object)SMB__equal, 1, (Object)constant5505);
// argument
send23952 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4086, 0);
// class
send23953 = (Object)new_AST_Send((Object)send23952, (Object)SMB_class, 0);
// should
send23954 = (Object)new_AST_Send((Object)send23953, (Object)symbol4250, 0);
// =
send23955 = (Object)new_AST_Send((Object)send23954, (Object)SMB__equal, 1, (Object)classreference1336);
// argument
send23956 = (Object)new_AST_Send((Object)localvariable3625, (Object)symbol4086, 0);
// name
send23957 = (Object)new_AST_Send((Object)send23956, (Object)SMB_name, 0);
// should
send23958 = (Object)new_AST_Send((Object)send23957, (Object)symbol4250, 0);
string2618 = (Object)new_Type_String(L"ghi");
constant5506 = (Object)new_AST_Constant((Object)string2618);
// =
send23959 = (Object)new_AST_Send((Object)send23958, (Object)SMB__equal, 1, (Object)constant5506);
// position
send23960 = (Object)new_AST_Send((Object)localvariable3624, (Object)symbol4241, 0);
// should
send23961 = (Object)new_AST_Send((Object)send23960, (Object)symbol4250, 0);
smallint2490 = (Object)new_Type_SmallInt(13);
constant5507 = (Object)new_AST_Constant((Object)smallint2490);
// =
send23962 = (Object)new_AST_Send((Object)send23961, (Object)SMB__equal, 1, (Object)constant5507);
method4731 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3041, 25, assign2951, assign2952, assign2953, send23895, send23899, send23903, send23907, send23911, send23915, send23918, assign2954, assign2955, send23923, send23927, send23931, send23935, assign2956, send23939, send23943, send23947, send23951, send23955, send23959, send23962, Self);
symbol3937 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure4719 = (Object)new_Runtime_MethodClosure(method4731);
store_method((Type_Class)class751, (Type_Symbol)symbol3937, (Runtime_MethodClosure)methodclosure4719);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new

// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string2619 = (Object)new_Type_String(L":=");
constant5508 = (Object)new_AST_Constant((Object)string2619);
// asPEG
send23963 = (Object)new_AST_Send((Object)constant5508, (Object)symbol4189, 0);
string2620 = (Object)new_Type_String(L"_");
constant5509 = (Object)new_AST_Constant((Object)string2620);
// |
send23964 = (Object)new_AST_Send((Object)send23963, (Object)SMB__or, 1, (Object)constant5509);
// omit:
send23965 = (Object)new_AST_Send((Object)send23964, (Object)symbol4181, 1, (Object)True_Const);
method4732 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23965);
symbol4126 = (Object)new_Type_Symbol_cached(L"assignmentOp");
methodclosure4720 = (Object)new_Runtime_MethodClosure(method4732);
store_method((Type_Class)class752, (Type_Symbol)symbol4126, (Runtime_MethodClosure)methodclosure4720);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
symbol4292 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
string2621 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant5510 = (Object)new_AST_Constant((Object)string2621);
// identifier
send23966 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
localvariable3626 = (Object)new_AST_Variable_named(L"result");
array3042 = (Object)new_Type_Array_with(1, (Object)localvariable3626);
symbol4111 = (Object)new_Type_Symbol_cached(L"createVariable:");
// createVariable:
send23967 = (Object)new_AST_Send((Object)Self, (Object)symbol4111, 1, (Object)localvariable3626);
block1430 = (Object)new_AST_Block_with((Type_Array)array3042, (Type_Array)empty_Type_Array, 1, 1, send23967);
// named:parsing:semantics:
send23968 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5510, (Object)send23966, (Object)block1430);
method4733 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23968);
symbol4138 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure4721 = (Object)new_Runtime_MethodClosure(method4733);
store_method((Type_Class)class752, (Type_Symbol)symbol4138, (Runtime_MethodClosure)methodclosure4721);


// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string2622 = (Object)new_Type_String(L"A-Z");
constant5511 = (Object)new_AST_Constant((Object)string2622);
symbol4293 = (Object)new_Type_Symbol_cached(L"asPEGRange");
// asPEGRange
send23969 = (Object)new_AST_Send((Object)constant5511, (Object)symbol4293, 0);
method4734 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23969);
symbol4166 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure4722 = (Object)new_Runtime_MethodClosure(method4734);
store_method((Type_Class)class752, (Type_Symbol)symbol4166, (Runtime_MethodClosure)methodclosure4722);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
string2623 = (Object)new_Type_String(L"ANNOTATION");
constant5512 = (Object)new_AST_Constant((Object)string2623);
string2624 = (Object)new_Type_String(L"<");
constant5513 = (Object)new_AST_Constant((Object)string2624);
// asPEG
send23970 = (Object)new_AST_Send((Object)constant5513, (Object)symbol4189, 0);
// omit:
send23971 = (Object)new_AST_Send((Object)send23970, (Object)symbol4181, 1, (Object)True_Const);
symbol4294 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send23972 = (Object)new_AST_Send((Object)Self, (Object)symbol4294, 0);
symbol4295 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send23973 = (Object)new_AST_Send((Object)Self, (Object)symbol4295, 0);
// |
send23974 = (Object)new_AST_Send((Object)send23972, (Object)SMB__or, 1, (Object)send23973);
// &
send23975 = (Object)new_AST_Send((Object)send23971, (Object)SMB__and, 1, (Object)send23974);
string2625 = (Object)new_Type_String(L">");
constant5514 = (Object)new_AST_Constant((Object)string2625);
// asPEG
send23976 = (Object)new_AST_Send((Object)constant5514, (Object)symbol4189, 0);
// omit:
send23977 = (Object)new_AST_Send((Object)send23976, (Object)symbol4181, 1, (Object)True_Const);
// <&
send23978 = (Object)new_AST_Send((Object)send23975, (Object)symbol4225, 1, (Object)send23977);
// named:parsing:
send23979 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4262, 2, (Object)constant5512, (Object)send23978);
method4735 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23979);
symbol4178 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure4723 = (Object)new_Runtime_MethodClosure(method4735);
store_method((Type_Class)class752, (Type_Symbol)symbol4178, (Runtime_MethodClosure)methodclosure4723);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send23980 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
string2626 = (Object)new_Type_String(L":");
constant5515 = (Object)new_AST_Constant((Object)string2626);
// asPEG
send23981 = (Object)new_AST_Send((Object)constant5515, (Object)symbol4189, 0);
// omit:
send23982 = (Object)new_AST_Send((Object)send23981, (Object)symbol4181, 1, (Object)True_Const);
// &&
send23983 = (Object)new_AST_Send((Object)send23980, (Object)symbol4190, 1, (Object)send23982);
method4736 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send23983);
symbol4108 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure4724 = (Object)new_Runtime_MethodClosure(method4736);
store_method((Type_Class)class752, (Type_Symbol)symbol4108, (Runtime_MethodClosure)methodclosure4724);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string2627 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant5516 = (Object)new_AST_Constant((Object)string2627);
string2628 = (Object)new_Type_String(L"{");
constant5517 = (Object)new_AST_Constant((Object)string2628);
// asPEG
send23984 = (Object)new_AST_Send((Object)constant5517, (Object)symbol4189, 0);
// omit:
send23985 = (Object)new_AST_Send((Object)send23984, (Object)symbol4181, 1, (Object)True_Const);
// subExpression
send23986 = (Object)new_AST_Send((Object)Self, (Object)symbol4249, 0);
// times
send23987 = (Object)new_AST_Send((Object)send23986, (Object)symbol4185, 0);
// expression
send23988 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
// <&
send23989 = (Object)new_AST_Send((Object)send23987, (Object)symbol4225, 1, (Object)send23988);
// &
send23990 = (Object)new_AST_Send((Object)send23985, (Object)SMB__and, 1, (Object)send23989);
string2629 = (Object)new_Type_String(L"}");
constant5518 = (Object)new_AST_Constant((Object)string2629);
// asPEG
send23991 = (Object)new_AST_Send((Object)constant5518, (Object)symbol4189, 0);
// omit:
send23992 = (Object)new_AST_Send((Object)send23991, (Object)symbol4181, 1, (Object)True_Const);
// <&
send23993 = (Object)new_AST_Send((Object)send23990, (Object)symbol4225, 1, (Object)send23992);
localvariable3627 = (Object)new_AST_Variable_named(L"result");
array3043 = (Object)new_Type_Array_with(1, (Object)localvariable3627);

// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable3628 = (Object)new_AST_Variable_named(L"newExpressions");
array3044 = (Object)new_Type_Array_with(1, (Object)localvariable3628);
assign2957 = (Object)new_AST_Assign((Object)instancevariable1543, (Object)localvariable3628);
method4737 = (Object)new_AST_Method_with((Type_Array)array3044, (Type_Array)empty_Type_Array, 2, assign2957, Self);
symbol4219 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure4725 = (Object)new_Runtime_MethodClosure(method4737);
store_method((Type_Class)class765, (Type_Symbol)symbol4219, (Runtime_MethodClosure)methodclosure4725);


// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable188 = (Object)new_AST_Variable_named(L"return");
array3045 = (Object)new_Type_Array_with(1, (Object)variable188);
symbol4296 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send23994 = (Object)new_AST_Send((Object)Self, (Object)symbol4296, 0);
localvariable3629 = (Object)new_AST_Variable_named(L"el");
array3046 = (Object)new_Type_Array_with(1, (Object)localvariable3629);
// isReturnExpression
send23995 = (Object)new_AST_Send((Object)localvariable3629, (Object)symbol3903, 0);
symbol4297 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
// hasReturnExpression
send23996 = (Object)new_AST_Send((Object)localvariable3629, (Object)symbol4025, 0);
block1431 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23996);
// escape:
send23997 = (Object)new_AST_Send((Object)variable188, (Object)SMB_escape_, 1, (Object)True_Const);
block1432 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send23997);
// or:ifTrue:
send23998 = (Object)new_AST_Send((Object)send23995, (Object)symbol4297, 2, (Object)block1431, (Object)block1432);
block1433 = (Object)new_AST_Block_with((Type_Array)array3046, (Type_Array)empty_Type_Array, 2, 1, send23998);
// do:
send23999 = (Object)new_AST_Send((Object)send23994, (Object)symbol4044, 1, (Object)block1433);
block1434 = (Object)new_AST_Block_with((Type_Array)array3045, (Type_Array)empty_Type_Array, 1, 2, send23999, False_Const);
// on:
send24000 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1434);
method4738 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24000);
methodclosure4726 = (Object)new_Runtime_MethodClosure(method4738);
store_method((Type_Class)class765, (Type_Symbol)symbol4025, (Runtime_MethodClosure)methodclosure4726);

classreference1360 = (Object)new_Organization_ClassReference((Type_Class)class765);
// new
send24001 = (Object)new_AST_Send((Object)classreference1360, (Object)symbol3994, 0);
localvariable3630 = (Object)new_AST_Variable_named(L"receiver");
array3047 = (Object)new_Type_Array_with(1, (Object)localvariable3630);
smallint2491 = (Object)new_Type_SmallInt(2);
constant5519 = (Object)new_AST_Constant((Object)smallint2491);
// at:
send24002 = (Object)new_AST_Send((Object)localvariable3627, (Object)SMB_at_, 1, (Object)constant5519);
// add:
send24003 = (Object)new_AST_Send((Object)localvariable3630, (Object)symbol4045, 1, (Object)send24002);
// yourself
send24004 = (Object)new_AST_Send((Object)localvariable3630, (Object)symbol3904, 0);
block1435 = (Object)new_AST_Block_with((Type_Array)array3047, (Type_Array)empty_Type_Array, 2, 2, send24003, send24004);
// first
send24005 = (Object)new_AST_Send((Object)localvariable3627, (Object)symbol4041, 0);
// value:
send24006 = (Object)new_AST_Send((Object)block1435, (Object)SMB_value_, 1, (Object)send24005);
// expressions:
send24007 = (Object)new_AST_Send((Object)send24001, (Object)symbol4219, 1, (Object)send24006);
block1436 = (Object)new_AST_Block_with((Type_Array)array3043, (Type_Array)empty_Type_Array, 1, 1, send24007);
// named:parsing:semantics:
send24008 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5516, (Object)send23993, (Object)block1436);
method4739 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24008);
symbol4131 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure4727 = (Object)new_Runtime_MethodClosure(method4739);
store_method((Type_Class)class752, (Type_Symbol)symbol4131, (Runtime_MethodClosure)methodclosure4727);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string2630 = (Object)new_Type_String(L"NUMBER");
constant5520 = (Object)new_AST_Constant((Object)string2630);
symbol4298 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send24009 = (Object)new_AST_Send((Object)Self, (Object)symbol4298, 0);
// plus
send24010 = (Object)new_AST_Send((Object)send24009, (Object)symbol4194, 0);
localvariable3631 = (Object)new_AST_Variable_named(L"result");
array3048 = (Object)new_Type_Array_with(1, (Object)localvariable3631);
localvariable3632 = (Object)new_AST_Variable_named(L"receiver");
array3049 = (Object)new_Type_Array_with(1, (Object)localvariable3632);
string2631 = (Object)new_Type_String(L"");
constant5521 = (Object)new_AST_Constant((Object)string2631);
localvariable3633 = (Object)new_AST_Variable_named(L"c");
localvariable3634 = (Object)new_AST_Variable_named(L"e");
array3050 = (Object)new_Type_Array_with(2, (Object)localvariable3633, (Object)localvariable3634);
// ,
send24011 = (Object)new_AST_Send((Object)localvariable3633, (Object)SMB__concat, 1, (Object)localvariable3634);
block1437 = (Object)new_AST_Block_with((Type_Array)array3050, (Type_Array)empty_Type_Array, 3, 1, send24011);
// inject:into:
send24012 = (Object)new_AST_Send((Object)localvariable3631, (Object)symbol4046, 2, (Object)constant5521, (Object)block1437);
// number:
send24013 = (Object)new_AST_Send((Object)localvariable3632, (Object)symbol4052, 1, (Object)send24012);
string2632 = (Object)new_Type_String(L"10");
constant5522 = (Object)new_AST_Constant((Object)string2632);
// base:
send24014 = (Object)new_AST_Send((Object)localvariable3632, (Object)symbol4049, 1, (Object)constant5522);
block1438 = (Object)new_AST_Block_with((Type_Array)array3049, (Type_Array)empty_Type_Array, 2, 2, send24013, send24014);
// new
send24015 = (Object)new_AST_Send((Object)classreference1340, (Object)symbol3994, 0);
// value:
send24016 = (Object)new_AST_Send((Object)block1438, (Object)SMB_value_, 1, (Object)send24015);
block1439 = (Object)new_AST_Block_with((Type_Array)array3048, (Type_Array)empty_Type_Array, 1, 1, send24016);
// named:parsing:semantics:
send24017 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5520, (Object)send24010, (Object)block1439);
method4740 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24017);
symbol4148 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure4728 = (Object)new_Runtime_MethodClosure(method4740);
store_method((Type_Class)class752, (Type_Symbol)symbol4148, (Runtime_MethodClosure)methodclosure4728);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string2633 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant5523 = (Object)new_AST_Constant((Object)string2633);
string2634 = (Object)new_Type_String(L"$");
constant5524 = (Object)new_AST_Constant((Object)string2634);
// asPEG
send24018 = (Object)new_AST_Send((Object)constant5524, (Object)symbol4189, 0);
// omit:
send24019 = (Object)new_AST_Send((Object)send24018, (Object)symbol4181, 1, (Object)True_Const);
symbol4299 = (Object)new_Type_Symbol_cached(L"character");
// character
send24020 = (Object)new_AST_Send((Object)Self, (Object)symbol4299, 0);
// &&
send24021 = (Object)new_AST_Send((Object)send24019, (Object)symbol4190, 1, (Object)send24020);
localvariable3635 = (Object)new_AST_Variable_named(L"char");
array3051 = (Object)new_Type_Array_with(1, (Object)localvariable3635);
// new
send24022 = (Object)new_AST_Send((Object)classreference1358, (Object)symbol3994, 0);
// first
send24023 = (Object)new_AST_Send((Object)localvariable3635, (Object)symbol4041, 0);
// char:
send24024 = (Object)new_AST_Send((Object)send24022, (Object)symbol4089, 1, (Object)send24023);
block1440 = (Object)new_AST_Block_with((Type_Array)array3051, (Type_Array)empty_Type_Array, 1, 1, send24024);
// named:parsing:semantics:
send24025 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5523, (Object)send24021, (Object)block1440);
method4741 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24025);
symbol4113 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure4729 = (Object)new_Runtime_MethodClosure(method4741);
store_method((Type_Class)class752, (Type_Symbol)symbol4113, (Runtime_MethodClosure)methodclosure4729);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send24026 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
string2635 = (Object)new_Type_String(L".");
constant5525 = (Object)new_AST_Constant((Object)string2635);
// asPEG
send24027 = (Object)new_AST_Send((Object)constant5525, (Object)symbol4189, 0);
// optional
send24028 = (Object)new_AST_Send((Object)send24027, (Object)symbol4183, 0);
// omit:
send24029 = (Object)new_AST_Send((Object)send24028, (Object)symbol4181, 1, (Object)True_Const);
// &
send24030 = (Object)new_AST_Send((Object)send24026, (Object)SMB__and, 1, (Object)send24029);
method4742 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24030);
symbol4141 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure4730 = (Object)new_Runtime_MethodClosure(method4742);
store_method((Type_Class)class752, (Type_Symbol)symbol4141, (Runtime_MethodClosure)methodclosure4730);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string2636 = (Object)new_Type_String(L"(");
constant5526 = (Object)new_AST_Constant((Object)string2636);
// asPEG
send24031 = (Object)new_AST_Send((Object)constant5526, (Object)symbol4189, 0);
// omit:
send24032 = (Object)new_AST_Send((Object)send24031, (Object)symbol4181, 1, (Object)True_Const);
// expression
send24033 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
// &
send24034 = (Object)new_AST_Send((Object)send24032, (Object)SMB__and, 1, (Object)send24033);
string2637 = (Object)new_Type_String(L")");
constant5527 = (Object)new_AST_Constant((Object)string2637);
// asPEG
send24035 = (Object)new_AST_Send((Object)constant5527, (Object)symbol4189, 0);
// omit:
send24036 = (Object)new_AST_Send((Object)send24035, (Object)symbol4181, 1, (Object)True_Const);
// <&
send24037 = (Object)new_AST_Send((Object)send24034, (Object)symbol4225, 1, (Object)send24036);
method4743 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24037);
symbol4153 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure4731 = (Object)new_Runtime_MethodClosure(method4743);
store_method((Type_Class)class752, (Type_Symbol)symbol4153, (Runtime_MethodClosure)methodclosure4731);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string2638 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant5528 = (Object)new_AST_Constant((Object)string2638);
symbol4300 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send24038 = (Object)new_AST_Send((Object)Self, (Object)symbol4300, 0);
// binaryMessageDefinition
send24039 = (Object)new_AST_Send((Object)Self, (Object)symbol4281, 0);
// |
send24040 = (Object)new_AST_Send((Object)send24038, (Object)SMB__or, 1, (Object)send24039);
symbol4301 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send24041 = (Object)new_AST_Send((Object)Self, (Object)symbol4301, 0);
// <=
send24042 = (Object)new_AST_Send((Object)send24040, (Object)symbol4206, 1, (Object)send24041);
// named:parsing:
send24043 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4262, 2, (Object)constant5528, (Object)send24042);
method4744 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24043);
symbol4123 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure4732 = (Object)new_Runtime_MethodClosure(method4744);
store_method((Type_Class)class752, (Type_Symbol)symbol4123, (Runtime_MethodClosure)methodclosure4732);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string2639 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant5529 = (Object)new_AST_Constant((Object)string2639);
// keyword
send24044 = (Object)new_AST_Send((Object)Self, (Object)symbol4283, 0);
// binaryObjectDescription
send24045 = (Object)new_AST_Send((Object)Self, (Object)symbol4291, 0);
// &
send24046 = (Object)new_AST_Send((Object)send24044, (Object)SMB__and, 1, (Object)send24045);
// plus
send24047 = (Object)new_AST_Send((Object)send24046, (Object)symbol4194, 0);
localvariable3636 = (Object)new_AST_Variable_named(L"parts");
array3052 = (Object)new_Type_Array_with(1, (Object)localvariable3636);
localvariable3637 = (Object)new_AST_Variable_named(L"receiver");
array3053 = (Object)new_Type_Array_with(1, (Object)localvariable3637);
constant5530 = (Object)new_AST_Constant((Object)symbol4041);
// collect:
send24048 = (Object)new_AST_Send((Object)localvariable3636, (Object)symbol4264, 1, (Object)constant5530);
// keywords:
send24049 = (Object)new_AST_Send((Object)localvariable3637, (Object)symbol4079, 1, (Object)send24048);
symbol4075 = (Object)new_Type_Symbol_cached(L"selector:");
localvariable3638 = (Object)new_AST_Variable_named(L"receiver");
array3054 = (Object)new_Type_Array_with(1, (Object)localvariable3638);
constant5531 = (Object)new_AST_Constant((Object)symbol4041);
// collect:
send24050 = (Object)new_AST_Send((Object)localvariable3636, (Object)symbol4264, 1, (Object)constant5531);
// keywords:
send24051 = (Object)new_AST_Send((Object)localvariable3638, (Object)symbol4079, 1, (Object)send24050);
symbol4161 = (Object)new_Type_Symbol_cached(L"createSymbol:");
constant5532 = (Object)new_AST_Constant((Object)symbol4041);
// collect:
send24052 = (Object)new_AST_Send((Object)localvariable3636, (Object)symbol4264, 1, (Object)constant5532);
string2640 = (Object)new_Type_String(L":");
constant5533 = (Object)new_AST_Constant((Object)string2640);
// joinUsing:
send24053 = (Object)new_AST_Send((Object)send24052, (Object)symbol4257, 1, (Object)constant5533);
string2641 = (Object)new_Type_String(L":");
constant5534 = (Object)new_AST_Constant((Object)string2641);
// ,
send24054 = (Object)new_AST_Send((Object)send24053, (Object)SMB__concat, 1, (Object)constant5534);
// createSymbol:
send24055 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)send24054);
// selector:
send24056 = (Object)new_AST_Send((Object)localvariable3638, (Object)symbol4075, 1, (Object)send24055);
block1441 = (Object)new_AST_Block_with((Type_Array)array3054, (Type_Array)empty_Type_Array, 3, 2, send24051, send24056);
// new
send24057 = (Object)new_AST_Send((Object)classreference1338, (Object)symbol3994, 0);
// value:
send24058 = (Object)new_AST_Send((Object)block1441, (Object)SMB_value_, 1, (Object)send24057);
// selector:
send24059 = (Object)new_AST_Send((Object)localvariable3637, (Object)symbol4075, 1, (Object)send24058);
symbol4302 = (Object)new_Type_Symbol_cached(L"second");
constant5535 = (Object)new_AST_Constant((Object)symbol4302);
// collect:
send24060 = (Object)new_AST_Send((Object)localvariable3636, (Object)symbol4264, 1, (Object)constant5535);
// arguments:
send24061 = (Object)new_AST_Send((Object)localvariable3637, (Object)symbol4081, 1, (Object)send24060);
block1442 = (Object)new_AST_Block_with((Type_Array)array3053, (Type_Array)empty_Type_Array, 2, 3, send24049, send24059, send24061);
// new
send24062 = (Object)new_AST_Send((Object)classreference1337, (Object)symbol3994, 0);
// value:
send24063 = (Object)new_AST_Send((Object)block1442, (Object)SMB_value_, 1, (Object)send24062);
block1443 = (Object)new_AST_Block_with((Type_Array)array3052, (Type_Array)empty_Type_Array, 1, 1, send24063);
// named:parsing:semantics:
send24064 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5529, (Object)send24047, (Object)block1443);
method4745 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24064);
symbol4135 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure4733 = (Object)new_Runtime_MethodClosure(method4745);
store_method((Type_Class)class752, (Type_Symbol)symbol4135, (Runtime_MethodClosure)methodclosure4733);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
string2642 = (Object)new_Type_String(L"STATEMENTS");
constant5536 = (Object)new_AST_Constant((Object)string2642);
// subExpression
send24065 = (Object)new_AST_Send((Object)Self, (Object)symbol4249, 0);
// times
send24066 = (Object)new_AST_Send((Object)send24065, (Object)symbol4185, 0);
// return
send24067 = (Object)new_AST_Send((Object)Self, (Object)symbol4272, 0);
// finalExpression
send24068 = (Object)new_AST_Send((Object)Self, (Object)symbol4270, 0);
// |
send24069 = (Object)new_AST_Send((Object)send24067, (Object)SMB__or, 1, (Object)send24068);
// optional
send24070 = (Object)new_AST_Send((Object)send24069, (Object)symbol4183, 0);
// &
send24071 = (Object)new_AST_Send((Object)send24066, (Object)SMB__and, 1, (Object)send24070);
localvariable3639 = (Object)new_AST_Variable_named(L"result");
array3055 = (Object)new_Type_Array_with(1, (Object)localvariable3639);
smallint2492 = (Object)new_Type_SmallInt(2);
constant5537 = (Object)new_AST_Constant((Object)smallint2492);
// at:
send24072 = (Object)new_AST_Send((Object)localvariable3639, (Object)SMB_at_, 1, (Object)constant5537);
localvariable3640 = (Object)new_AST_Variable_named(L"exp");
array3056 = (Object)new_Type_Array_with(1, (Object)localvariable3640);
// first
send24073 = (Object)new_AST_Send((Object)localvariable3639, (Object)symbol4041, 0);
// add:
send24074 = (Object)new_AST_Send((Object)send24073, (Object)symbol4045, 1, (Object)localvariable3640);
block1444 = (Object)new_AST_Block_with((Type_Array)array3056, (Type_Array)empty_Type_Array, 2, 1, send24074);
// ifMatched:
send24075 = (Object)new_AST_Send((Object)send24072, (Object)symbol4228, 1, (Object)block1444);
// first
send24076 = (Object)new_AST_Send((Object)localvariable3639, (Object)symbol4041, 0);
block1445 = (Object)new_AST_Block_with((Type_Array)array3055, (Type_Array)empty_Type_Array, 1, 2, send24075, send24076);
// named:parsing:semantics:
send24077 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5536, (Object)send24071, (Object)block1445);
method4746 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24077);
symbol4163 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure4734 = (Object)new_Runtime_MethodClosure(method4746);
store_method((Type_Class)class752, (Type_Symbol)symbol4163, (Runtime_MethodClosure)methodclosure4734);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string2643 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant5538 = (Object)new_AST_Constant((Object)string2643);
// unarySelector
send24078 = (Object)new_AST_Send((Object)Self, (Object)symbol4290, 0);
localvariable3641 = (Object)new_AST_Variable_named(L"selector");
array3057 = (Object)new_Type_Array_with(1, (Object)localvariable3641);
// new
send24079 = (Object)new_AST_Send((Object)classreference1342, (Object)symbol3994, 0);
// selector:
send24080 = (Object)new_AST_Send((Object)send24079, (Object)symbol4075, 1, (Object)localvariable3641);
block1446 = (Object)new_AST_Block_with((Type_Array)array3057, (Type_Array)empty_Type_Array, 1, 1, send24080);
// named:parsing:semantics:
send24081 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5538, (Object)send24078, (Object)block1446);
method4747 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24081);
symbol4117 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure4735 = (Object)new_Runtime_MethodClosure(method4747);
store_method((Type_Class)class752, (Type_Symbol)symbol4117, (Runtime_MethodClosure)methodclosure4735);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string2644 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant5539 = (Object)new_AST_Constant((Object)string2644);
// binaryObjectDescription
send24082 = (Object)new_AST_Send((Object)Self, (Object)symbol4291, 0);
symbol4303 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send24083 = (Object)new_AST_Send((Object)Self, (Object)symbol4303, 0);
// &
send24084 = (Object)new_AST_Send((Object)send24082, (Object)SMB__and, 1, (Object)send24083);
localvariable3642 = (Object)new_AST_Variable_named(L"parts");
array3058 = (Object)new_Type_Array_with(1, (Object)localvariable3642);
smallint2493 = (Object)new_Type_SmallInt(2);
constant5540 = (Object)new_AST_Constant((Object)smallint2493);
// at:
send24085 = (Object)new_AST_Send((Object)localvariable3642, (Object)SMB_at_, 1, (Object)constant5540);
// first
send24086 = (Object)new_AST_Send((Object)localvariable3642, (Object)symbol4041, 0);
// receiver:
send24087 = (Object)new_AST_Send((Object)send24085, (Object)symbol4080, 1, (Object)send24086);
block1447 = (Object)new_AST_Block_with((Type_Array)array3058, (Type_Array)empty_Type_Array, 1, 1, send24087);
// named:parsing:semantics:
send24088 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5539, (Object)send24084, (Object)block1447);
method4748 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24088);
symbol4145 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure4736 = (Object)new_Runtime_MethodClosure(method4748);
store_method((Type_Class)class752, (Type_Symbol)symbol4145, (Runtime_MethodClosure)methodclosure4736);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string2645 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant5541 = (Object)new_AST_Constant((Object)string2645);
// binarySelector
send24089 = (Object)new_AST_Send((Object)Self, (Object)symbol4261, 0);
// unaryObjectDescription
send24090 = (Object)new_AST_Send((Object)Self, (Object)symbol4279, 0);
// &
send24091 = (Object)new_AST_Send((Object)send24089, (Object)SMB__and, 1, (Object)send24090);
localvariable3643 = (Object)new_AST_Variable_named(L"parts");
array3059 = (Object)new_Type_Array_with(1, (Object)localvariable3643);
localvariable3644 = (Object)new_AST_Variable_named(L"receiver");
array3060 = (Object)new_Type_Array_with(1, (Object)localvariable3644);
// first
send24092 = (Object)new_AST_Send((Object)localvariable3643, (Object)symbol4041, 0);
// createSymbol:
send24093 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)send24092);
// selector:
send24094 = (Object)new_AST_Send((Object)localvariable3644, (Object)symbol4075, 1, (Object)send24093);
smallint2494 = (Object)new_Type_SmallInt(2);
constant5542 = (Object)new_AST_Constant((Object)smallint2494);
// at:
send24095 = (Object)new_AST_Send((Object)localvariable3643, (Object)SMB_at_, 1, (Object)constant5542);
// argument:
send24096 = (Object)new_AST_Send((Object)localvariable3644, (Object)symbol4085, 1, (Object)send24095);
block1448 = (Object)new_AST_Block_with((Type_Array)array3060, (Type_Array)empty_Type_Array, 2, 2, send24094, send24096);
// new
send24097 = (Object)new_AST_Send((Object)classreference1341, (Object)symbol3994, 0);
// value:
send24098 = (Object)new_AST_Send((Object)block1448, (Object)SMB_value_, 1, (Object)send24097);
block1449 = (Object)new_AST_Block_with((Type_Array)array3059, (Type_Array)empty_Type_Array, 1, 1, send24098);
// named:parsing:semantics:
send24099 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5541, (Object)send24091, (Object)block1449);
method4749 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24099);
symbol4173 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure4737 = (Object)new_Runtime_MethodClosure(method4749);
store_method((Type_Class)class752, (Type_Symbol)symbol4173, (Runtime_MethodClosure)methodclosure4737);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send24100 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
// messageExpression
send24101 = (Object)new_AST_Send((Object)Self, (Object)symbol4271, 0);
// separator
send24102 = (Object)new_AST_Send((Object)Self, (Object)symbol4248, 0);
// separator:
send24103 = (Object)new_AST_Send((Object)send24101, (Object)symbol4202, 1, (Object)send24102);
method4750 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send24100, send24103);
symbol4157 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure4738 = (Object)new_Runtime_MethodClosure(method4750);
store_method((Type_Class)class752, (Type_Symbol)symbol4157, (Runtime_MethodClosure)methodclosure4738);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string2646 = (Object)new_Type_String(L"STRING-CONSTANT");
constant5543 = (Object)new_AST_Constant((Object)string2646);
// string
send24104 = (Object)new_AST_Send((Object)Self, (Object)symbol4060, 0);
localvariable3645 = (Object)new_AST_Variable_named(L"result");
array3061 = (Object)new_Type_Array_with(1, (Object)localvariable3645);
// new
send24105 = (Object)new_AST_Send((Object)classreference1351, (Object)symbol3994, 0);
// string:
send24106 = (Object)new_AST_Send((Object)send24105, (Object)symbol4059, 1, (Object)localvariable3645);
block1450 = (Object)new_AST_Block_with((Type_Array)array3061, (Type_Array)empty_Type_Array, 1, 1, send24106);
// named:parsing:semantics:
send24107 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5543, (Object)send24104, (Object)block1450);
method4751 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24107);
symbol4110 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure4739 = (Object)new_Runtime_MethodClosure(method4751);
store_method((Type_Class)class752, (Type_Symbol)symbol4110, (Runtime_MethodClosure)methodclosure4739);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
// unaryExpression
send24108 = (Object)new_AST_Send((Object)Self, (Object)symbol4269, 0);
// primary
send24109 = (Object)new_AST_Send((Object)Self, (Object)symbol4286, 0);
// |
send24110 = (Object)new_AST_Send((Object)send24108, (Object)SMB__or, 1, (Object)send24109);
method4752 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24110);
symbol4127 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure4740 = (Object)new_Runtime_MethodClosure(method4752);
store_method((Type_Class)class752, (Type_Symbol)symbol4127, (Runtime_MethodClosure)methodclosure4740);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable3646 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable3647 = (Object)new_AST_Variable_named(L"first");
array3062 = (Object)new_Type_Array_with(2, (Object)localvariable3646, (Object)localvariable3647);
string2647 = (Object)new_Type_String(L"\'");
constant5544 = (Object)new_AST_Constant((Object)string2647);
// asPEG
send24111 = (Object)new_AST_Send((Object)constant5544, (Object)symbol4189, 0);
// omit:
send24112 = (Object)new_AST_Send((Object)send24111, (Object)symbol4181, 1, (Object)True_Const);
assign2958 = (Object)new_AST_Assign((Object)localvariable3646, (Object)send24112);
string2648 = (Object)new_Type_String(L"STRING");
constant5545 = (Object)new_AST_Constant((Object)string2648);
// not
send24113 = (Object)new_AST_Send((Object)localvariable3646, (Object)SMB_not, 0);
// strongTimes
send24114 = (Object)new_AST_Send((Object)send24113, (Object)symbol4186, 0);
// &&
send24115 = (Object)new_AST_Send((Object)localvariable3646, (Object)symbol4190, 1, (Object)send24114);
// <&
send24116 = (Object)new_AST_Send((Object)send24115, (Object)symbol4225, 1, (Object)localvariable3646);
// strongPlus
send24117 = (Object)new_AST_Send((Object)send24116, (Object)symbol4200, 0);
localvariable3648 = (Object)new_AST_Variable_named(L"result");
array3063 = (Object)new_Type_Array_with(1, (Object)localvariable3648);
symbol4304 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send24118 = (Object)new_AST_Send((Object)localvariable3648, (Object)symbol4304, 0);
assign2959 = (Object)new_AST_Assign((Object)localvariable3647, (Object)send24118);
string2649 = (Object)new_Type_String(L"");
constant5546 = (Object)new_AST_Constant((Object)string2649);
localvariable3649 = (Object)new_AST_Variable_named(L"c");
localvariable3650 = (Object)new_AST_Variable_named(L"e");
array3064 = (Object)new_Type_Array_with(2, (Object)localvariable3649, (Object)localvariable3650);
// ,
send24119 = (Object)new_AST_Send((Object)localvariable3649, (Object)SMB__concat, 1, (Object)localvariable3650);
block1451 = (Object)new_AST_Block_with((Type_Array)array3064, (Type_Array)empty_Type_Array, 2, 1, send24119);
// inject:into:
send24120 = (Object)new_AST_Send((Object)localvariable3647, (Object)symbol4046, 2, (Object)constant5546, (Object)block1451);
assign2960 = (Object)new_AST_Assign((Object)localvariable3647, (Object)send24120);
localvariable3651 = (Object)new_AST_Variable_named(L"c");
localvariable3652 = (Object)new_AST_Variable_named(L"e");
array3065 = (Object)new_Type_Array_with(2, (Object)localvariable3651, (Object)localvariable3652);
string2650 = (Object)new_Type_String(L"\'");
constant5547 = (Object)new_AST_Constant((Object)string2650);
// ,
send24121 = (Object)new_AST_Send((Object)localvariable3651, (Object)SMB__concat, 1, (Object)constant5547);
string2651 = (Object)new_Type_String(L"");
constant5548 = (Object)new_AST_Constant((Object)string2651);
localvariable3653 = (Object)new_AST_Variable_named(L"ic");
localvariable3654 = (Object)new_AST_Variable_named(L"ie");
array3066 = (Object)new_Type_Array_with(2, (Object)localvariable3653, (Object)localvariable3654);
// ,
send24122 = (Object)new_AST_Send((Object)localvariable3653, (Object)SMB__concat, 1, (Object)localvariable3654);
block1452 = (Object)new_AST_Block_with((Type_Array)array3066, (Type_Array)empty_Type_Array, 3, 1, send24122);
// inject:into:
send24123 = (Object)new_AST_Send((Object)localvariable3652, (Object)symbol4046, 2, (Object)constant5548, (Object)block1452);
// ,
send24124 = (Object)new_AST_Send((Object)send24121, (Object)SMB__concat, 1, (Object)send24123);
block1453 = (Object)new_AST_Block_with((Type_Array)array3065, (Type_Array)empty_Type_Array, 2, 1, send24124);
// inject:into:
send24125 = (Object)new_AST_Send((Object)localvariable3648, (Object)symbol4046, 2, (Object)localvariable3647, (Object)block1453);
block1454 = (Object)new_AST_Block_with((Type_Array)array3063, (Type_Array)empty_Type_Array, 1, 3, assign2959, assign2960, send24125);
// named:parsing:semantics:
send24126 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5545, (Object)send24117, (Object)block1454);
method4753 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3062, 2, assign2958, send24126);
symbol4150 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure4741 = (Object)new_Runtime_MethodClosure(method4753);
store_method((Type_Class)class752, (Type_Symbol)symbol4150, (Runtime_MethodClosure)methodclosure4741);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send24127 = (Object)new_AST_Send((Object)Self, (Object)symbol4291, 0);
symbol4305 = (Object)new_Type_Symbol_cached(L"binaryExpression");
// binaryExpression
send24128 = (Object)new_AST_Send((Object)Self, (Object)symbol4305, 0);
// <=
send24129 = (Object)new_AST_Send((Object)send24127, (Object)symbol4206, 1, (Object)send24128);
// unaryObjectDescription
send24130 = (Object)new_AST_Send((Object)Self, (Object)symbol4279, 0);
// |
send24131 = (Object)new_AST_Send((Object)send24129, (Object)SMB__or, 1, (Object)send24130);
method4754 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24131);
symbol4139 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
methodclosure4742 = (Object)new_Runtime_MethodClosure(method4754);
store_method((Type_Class)class752, (Type_Symbol)symbol4139, (Runtime_MethodClosure)methodclosure4742);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string2652 = (Object)new_Type_String(L"0-9");
constant5549 = (Object)new_AST_Constant((Object)string2652);
// asPEGRange
send24132 = (Object)new_AST_Send((Object)constant5549, (Object)symbol4293, 0);
method4755 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24132);
symbol4167 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure4743 = (Object)new_Runtime_MethodClosure(method4755);
store_method((Type_Class)class752, (Type_Symbol)symbol4167, (Runtime_MethodClosure)methodclosure4743);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
string2653 = (Object)new_Type_String(L"BLOCK");
constant5550 = (Object)new_AST_Constant((Object)string2653);
string2654 = (Object)new_Type_String(L"[");
constant5551 = (Object)new_AST_Constant((Object)string2654);
// asPEG
send24133 = (Object)new_AST_Send((Object)constant5551, (Object)symbol4189, 0);
// omit:
send24134 = (Object)new_AST_Send((Object)send24133, (Object)symbol4181, 1, (Object)True_Const);
// blockArguments
send24135 = (Object)new_AST_Send((Object)Self, (Object)symbol4277, 0);
symbol4306 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send24136 = (Object)new_AST_Send((Object)Self, (Object)symbol4306, 0);
// &
send24137 = (Object)new_AST_Send((Object)send24135, (Object)SMB__and, 1, (Object)send24136);
// optional
send24138 = (Object)new_AST_Send((Object)send24137, (Object)symbol4183, 0);
// temporaries
send24139 = (Object)new_AST_Send((Object)Self, (Object)symbol4099, 0);
// optional
send24140 = (Object)new_AST_Send((Object)send24139, (Object)symbol4183, 0);
// statements
send24141 = (Object)new_AST_Send((Object)Self, (Object)symbol4094, 0);
// <&
send24142 = (Object)new_AST_Send((Object)send24140, (Object)symbol4225, 1, (Object)send24141);
// <&
send24143 = (Object)new_AST_Send((Object)send24138, (Object)symbol4225, 1, (Object)send24142);
// &
send24144 = (Object)new_AST_Send((Object)send24134, (Object)SMB__and, 1, (Object)send24143);
string2655 = (Object)new_Type_String(L"]");
constant5552 = (Object)new_AST_Constant((Object)string2655);
// asPEG
send24145 = (Object)new_AST_Send((Object)constant5552, (Object)symbol4189, 0);
// omit:
send24146 = (Object)new_AST_Send((Object)send24145, (Object)symbol4181, 1, (Object)True_Const);
// <&
send24147 = (Object)new_AST_Send((Object)send24144, (Object)symbol4225, 1, (Object)send24146);
localvariable3655 = (Object)new_AST_Variable_named(L"result");
array3067 = (Object)new_Type_Array_with(1, (Object)localvariable3655);
localvariable3656 = (Object)new_AST_Variable_named(L"receiver");
array3068 = (Object)new_Type_Array_with(1, (Object)localvariable3656);
// first
send24148 = (Object)new_AST_Send((Object)localvariable3655, (Object)symbol4041, 0);
// new
send24149 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
block1455 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send24149);
// resultIfFailed:
send24150 = (Object)new_AST_Send((Object)send24148, (Object)symbol4227, 1, (Object)block1455);
// parameters:
send24151 = (Object)new_AST_Send((Object)localvariable3656, (Object)symbol4102, 1, (Object)send24150);
smallint2495 = (Object)new_Type_SmallInt(2);
constant5553 = (Object)new_AST_Constant((Object)smallint2495);
// at:
send24152 = (Object)new_AST_Send((Object)localvariable3655, (Object)SMB_at_, 1, (Object)constant5553);
// new
send24153 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
block1456 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send24153);
// resultIfFailed:
send24154 = (Object)new_AST_Send((Object)send24152, (Object)symbol4227, 1, (Object)block1456);
// temporaries:
send24155 = (Object)new_AST_Send((Object)localvariable3656, (Object)symbol4100, 1, (Object)send24154);
smallint2496 = (Object)new_Type_SmallInt(3);
constant5554 = (Object)new_AST_Constant((Object)smallint2496);
// at:
send24156 = (Object)new_AST_Send((Object)localvariable3655, (Object)SMB_at_, 1, (Object)constant5554);
// statements:
send24157 = (Object)new_AST_Send((Object)localvariable3656, (Object)symbol4098, 1, (Object)send24156);
block1457 = (Object)new_AST_Block_with((Type_Array)array3068, (Type_Array)empty_Type_Array, 2, 3, send24151, send24155, send24157);
// new
send24158 = (Object)new_AST_Send((Object)classreference1353, (Object)symbol3994, 0);
// value:
send24159 = (Object)new_AST_Send((Object)block1457, (Object)SMB_value_, 1, (Object)send24158);
block1458 = (Object)new_AST_Block_with((Type_Array)array3067, (Type_Array)empty_Type_Array, 1, 1, send24159);
// named:parsing:semantics:
send24160 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5550, (Object)send24147, (Object)block1458);
method4756 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24160);
symbol4120 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure4744 = (Object)new_Runtime_MethodClosure(method4756);
store_method((Type_Class)class752, (Type_Symbol)symbol4120, (Runtime_MethodClosure)methodclosure4744);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new
// 						selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
symbol4158 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
// preStoreBinaryObjectDescription
send24161 = (Object)new_AST_Send((Object)Self, (Object)symbol4158, 0);
constant5555 = (Object)new_AST_Constant((Object)symbol4305);
string2656 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant5556 = (Object)new_AST_Constant((Object)string2656);
// unaryObjectDescription
send24162 = (Object)new_AST_Send((Object)Self, (Object)symbol4279, 0);
// binarySelector
send24163 = (Object)new_AST_Send((Object)Self, (Object)symbol4261, 0);
// &
send24164 = (Object)new_AST_Send((Object)send24162, (Object)SMB__and, 1, (Object)send24163);
// binaryObjectDescription
send24165 = (Object)new_AST_Send((Object)Self, (Object)symbol4291, 0);
// <&
send24166 = (Object)new_AST_Send((Object)send24164, (Object)symbol4225, 1, (Object)send24165);
localvariable3657 = (Object)new_AST_Variable_named(L"parts");
array3069 = (Object)new_Type_Array_with(1, (Object)localvariable3657);
smallint2497 = (Object)new_Type_SmallInt(3);
constant5557 = (Object)new_AST_Constant((Object)smallint2497);
// at:
send24167 = (Object)new_AST_Send((Object)localvariable3657, (Object)SMB_at_, 1, (Object)constant5557);
localvariable3658 = (Object)new_AST_Variable_named(L"receiver");
array3070 = (Object)new_Type_Array_with(1, (Object)localvariable3658);
// first
send24168 = (Object)new_AST_Send((Object)localvariable3657, (Object)symbol4041, 0);
// receiver:
send24169 = (Object)new_AST_Send((Object)localvariable3658, (Object)symbol4080, 1, (Object)send24168);
classreference1361 = (Object)new_Organization_ClassReference((Type_Class)class770);
// new
send24170 = (Object)new_AST_Send((Object)classreference1361, (Object)symbol3994, 0);
smallint2498 = (Object)new_Type_SmallInt(2);
constant5558 = (Object)new_AST_Constant((Object)smallint2498);
// at:
send24171 = (Object)new_AST_Send((Object)localvariable3657, (Object)SMB_at_, 1, (Object)constant5558);
// createSymbol:
send24172 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)send24171);
// selector:
send24173 = (Object)new_AST_Send((Object)send24170, (Object)symbol4075, 1, (Object)send24172);
// selector:
send24174 = (Object)new_AST_Send((Object)localvariable3658, (Object)symbol4075, 1, (Object)send24173);
block1459 = (Object)new_AST_Block_with((Type_Array)array3070, (Type_Array)empty_Type_Array, 2, 2, send24169, send24174);
// new
send24175 = (Object)new_AST_Send((Object)classreference1341, (Object)symbol3994, 0);
// value:
send24176 = (Object)new_AST_Send((Object)block1459, (Object)SMB_value_, 1, (Object)send24175);
// argumentOfBinary:
send24177 = (Object)new_AST_Send((Object)send24167, (Object)symbol4024, 1, (Object)send24176);
block1460 = (Object)new_AST_Block_with((Type_Array)array3069, (Type_Array)empty_Type_Array, 1, 1, send24177);
// named:parsing:semantics:
send24178 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5556, (Object)send24166, (Object)block1460);
// at:ifAbsentPut:
send24179 = (Object)new_AST_Send((Object)instancevariable1526, (Object)symbol4218, 2, (Object)constant5555, (Object)send24178);
// injectBinaryObjectDescription
send24180 = (Object)new_AST_Send((Object)Self, (Object)symbol4139, 0);
// binaryExpression
send24181 = (Object)new_AST_Send((Object)Self, (Object)symbol4305, 0);
method4757 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send24161, send24179, send24180, send24181);
symbol4179 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure4745 = (Object)new_Runtime_MethodClosure(method4757);
store_method((Type_Class)class752, (Type_Symbol)symbol4179, (Runtime_MethodClosure)methodclosure4745);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol4307 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send24182 = (Object)new_AST_Send((Object)Self, (Object)symbol4307, 0);
symbol4308 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send24183 = (Object)new_AST_Send((Object)Self, (Object)symbol4308, 0);
// |
send24184 = (Object)new_AST_Send((Object)send24182, (Object)SMB__or, 1, (Object)send24183);
method4758 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24184);
symbol4109 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure4746 = (Object)new_Runtime_MethodClosure(method4758);
store_method((Type_Class)class752, (Type_Symbol)symbol4109, (Runtime_MethodClosure)methodclosure4746);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
string2657 = (Object)new_Type_String(L"COMMENT");
constant5559 = (Object)new_AST_Constant((Object)string2657);
symbol4309 = (Object)new_Type_Symbol_cached(L"separators");
// separators
send24185 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4309, 0);
// commentFormat
send24186 = (Object)new_AST_Send((Object)Self, (Object)symbol4263, 0);
// |
send24187 = (Object)new_AST_Send((Object)send24185, (Object)SMB__or, 1, (Object)send24186);
// strongTimes
send24188 = (Object)new_AST_Send((Object)send24187, (Object)symbol4186, 0);
// omit:
send24189 = (Object)new_AST_Send((Object)send24188, (Object)symbol4181, 1, (Object)True_Const);
// named:parsing:
send24190 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4262, 2, (Object)constant5559, (Object)send24189);
method4759 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24190);
symbol4132 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure4747 = (Object)new_Runtime_MethodClosure(method4759);
store_method((Type_Class)class752, (Type_Symbol)symbol4132, (Runtime_MethodClosure)methodclosure4747);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
// identifier
send24191 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
method4760 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24191);
symbol4160 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure4748 = (Object)new_Runtime_MethodClosure(method4760);
store_method((Type_Class)class752, (Type_Symbol)symbol4160, (Runtime_MethodClosure)methodclosure4748);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable3659 = (Object)new_AST_Variable_named(L"variables");
localvariable3660 = (Object)new_AST_Variable_named(L"expression");
array3071 = (Object)new_Type_Array_with(2, (Object)localvariable3659, (Object)localvariable3660);
symbol4137 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
// preStorePrimary
send24192 = (Object)new_AST_Send((Object)Self, (Object)symbol4137, 0);
symbol4164 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
// preStoreMessageExpression
send24193 = (Object)new_AST_Send((Object)Self, (Object)symbol4164, 0);
symbol4146 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
// preStoreCascadedMessageExpression
send24194 = (Object)new_AST_Send((Object)Self, (Object)symbol4146, 0);
constant5560 = (Object)new_AST_Constant((Object)symbol4064);
string2658 = (Object)new_Type_String(L"EXPRESSION");
constant5561 = (Object)new_AST_Constant((Object)string2658);
symbol4310 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send24195 = (Object)new_AST_Send((Object)Self, (Object)symbol4310, 0);
// cascadedMessageExpression
send24196 = (Object)new_AST_Send((Object)Self, (Object)symbol4289, 0);
// messageExpression
send24197 = (Object)new_AST_Send((Object)Self, (Object)symbol4271, 0);
// |
send24198 = (Object)new_AST_Send((Object)send24196, (Object)SMB__or, 1, (Object)send24197);
// &
send24199 = (Object)new_AST_Send((Object)send24195, (Object)SMB__and, 1, (Object)send24198);
// primary
send24200 = (Object)new_AST_Send((Object)Self, (Object)symbol4286, 0);
// <=
send24201 = (Object)new_AST_Send((Object)send24199, (Object)symbol4206, 1, (Object)send24200);
localvariable3661 = (Object)new_AST_Variable_named(L"result");
array3072 = (Object)new_Type_Array_with(1, (Object)localvariable3661);
// first
send24202 = (Object)new_AST_Send((Object)localvariable3661, (Object)symbol4041, 0);
assign2961 = (Object)new_AST_Assign((Object)localvariable3659, (Object)send24202);
smallint2499 = (Object)new_Type_SmallInt(2);
constant5562 = (Object)new_AST_Constant((Object)smallint2499);
// at:
send24203 = (Object)new_AST_Send((Object)localvariable3661, (Object)SMB_at_, 1, (Object)constant5562);
assign2962 = (Object)new_AST_Assign((Object)localvariable3660, (Object)send24203);
symbol4311 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send24204 = (Object)new_AST_Send((Object)localvariable3659, (Object)symbol4311, 0);
localvariable3662 = (Object)new_AST_Variable_named(L"variable");
array3073 = (Object)new_Type_Array_with(1, (Object)localvariable3662);
localvariable3663 = (Object)new_AST_Variable_named(L"receiver");
array3074 = (Object)new_Type_Array_with(1, (Object)localvariable3663);
// expression:
send24205 = (Object)new_AST_Send((Object)localvariable3663, (Object)symbol4065, 1, (Object)localvariable3660);
// variable:
send24206 = (Object)new_AST_Send((Object)localvariable3663, (Object)symbol4067, 1, (Object)localvariable3662);
block1461 = (Object)new_AST_Block_with((Type_Array)array3074, (Type_Array)empty_Type_Array, 3, 2, send24205, send24206);
// new
send24207 = (Object)new_AST_Send((Object)classreference1334, (Object)symbol3994, 0);
// value:
send24208 = (Object)new_AST_Send((Object)block1461, (Object)SMB_value_, 1, (Object)send24207);
assign2963 = (Object)new_AST_Assign((Object)localvariable3660, (Object)send24208);
block1462 = (Object)new_AST_Block_with((Type_Array)array3073, (Type_Array)empty_Type_Array, 2, 1, assign2963);
// do:
send24209 = (Object)new_AST_Send((Object)send24204, (Object)symbol4044, 1, (Object)block1462);
block1463 = (Object)new_AST_Block_with((Type_Array)array3072, (Type_Array)empty_Type_Array, 1, 4, assign2961, assign2962, send24209, localvariable3660);
// named:parsing:semantics:
send24210 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5561, (Object)send24201, (Object)block1463);
// at:put:
send24211 = (Object)new_AST_Send((Object)instancevariable1526, (Object)SMB_at_put_, 2, (Object)constant5560, (Object)send24210);
symbol4128 = (Object)new_Type_Symbol_cached(L"injectPrimary");
// injectPrimary
send24212 = (Object)new_AST_Send((Object)Self, (Object)symbol4128, 0);
symbol4176 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
// injectMessageExpression
send24213 = (Object)new_AST_Send((Object)Self, (Object)symbol4176, 0);
symbol4119 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
// injectCascadedMessageExpression
send24214 = (Object)new_AST_Send((Object)Self, (Object)symbol4119, 0);
constant5563 = (Object)new_AST_Constant((Object)symbol4064);
// at:
send24215 = (Object)new_AST_Send((Object)instancevariable1526, (Object)SMB_at_, 1, (Object)constant5563);
method4761 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3071, 8, send24192, send24193, send24194, send24211, send24212, send24213, send24214, send24215);
symbol4149 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure4749 = (Object)new_Runtime_MethodClosure(method4761);
store_method((Type_Class)class752, (Type_Symbol)symbol4149, (Runtime_MethodClosure)methodclosure4749);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string2659 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant5564 = (Object)new_AST_Constant((Object)string2659);
symbol4312 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
// asPEGChoice
send24216 = (Object)new_AST_Send((Object)constant5564, (Object)symbol4312, 0);
method4762 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24216);
symbol4142 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure4750 = (Object)new_Runtime_MethodClosure(method4762);
store_method((Type_Class)class752, (Type_Symbol)symbol4142, (Runtime_MethodClosure)methodclosure4750);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string2660 = (Object)new_Type_String(L"|");
constant5565 = (Object)new_AST_Constant((Object)string2660);
// asPEG
send24217 = (Object)new_AST_Send((Object)constant5565, (Object)symbol4189, 0);
// omit:
send24218 = (Object)new_AST_Send((Object)send24217, (Object)symbol4181, 1, (Object)True_Const);
method4763 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24218);
symbol4170 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure4751 = (Object)new_Runtime_MethodClosure(method4763);
store_method((Type_Class)class752, (Type_Symbol)symbol4170, (Runtime_MethodClosure)methodclosure4751);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string2661 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant5566 = (Object)new_AST_Constant((Object)string2661);
// identifier
send24219 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
string2662 = (Object)new_Type_String(L":");
constant5567 = (Object)new_AST_Constant((Object)string2662);
// asPEG
send24220 = (Object)new_AST_Send((Object)constant5567, (Object)symbol4189, 0);
// not
send24221 = (Object)new_AST_Send((Object)send24220, (Object)SMB_not, 0);
symbol4313 = (Object)new_Type_Symbol_cached(L"consume:");
// consume:
send24222 = (Object)new_AST_Send((Object)send24221, (Object)symbol4313, 1, (Object)False_Const);
// &&
send24223 = (Object)new_AST_Send((Object)send24219, (Object)symbol4190, 1, (Object)send24222);
localvariable3664 = (Object)new_AST_Variable_named(L"selector");
array3075 = (Object)new_Type_Array_with(1, (Object)localvariable3664);
// new
send24224 = (Object)new_AST_Send((Object)classreference1345, (Object)symbol3994, 0);
// createSymbol:
send24225 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)localvariable3664);
// selector:
send24226 = (Object)new_AST_Send((Object)send24224, (Object)symbol4075, 1, (Object)send24225);
block1464 = (Object)new_AST_Block_with((Type_Array)array3075, (Type_Array)empty_Type_Array, 1, 1, send24226);
// named:parsing:semantics:
send24227 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5566, (Object)send24223, (Object)block1464);
method4764 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24227);
symbol4154 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure4752 = (Object)new_Runtime_MethodClosure(method4764);
store_method((Type_Class)class752, (Type_Symbol)symbol4154, (Runtime_MethodClosure)methodclosure4752);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
//             ifFalse: [ super doesNotUnderstand: message ].
//         self perform: selector
// 	]
localvariable3665 = (Object)new_AST_Variable_named(L"message");
array3076 = (Object)new_Type_Array_with(1, (Object)localvariable3665);
localvariable3666 = (Object)new_AST_Variable_named(L"selector");
array3077 = (Object)new_Type_Array_with(1, (Object)localvariable3666);
// selector
send24228 = (Object)new_AST_Send((Object)localvariable3665, (Object)symbol4007, 0);
string2663 = (Object)new_Type_String(L"initialize");
constant5568 = (Object)new_AST_Constant((Object)string2663);
// selector
send24229 = (Object)new_AST_Send((Object)localvariable3665, (Object)symbol4007, 0);
symbol4314 = (Object)new_Type_Symbol_cached(L"capitalized");
// capitalized
send24230 = (Object)new_AST_Send((Object)send24229, (Object)symbol4314, 0);
// ,
send24231 = (Object)new_AST_Send((Object)constant5568, (Object)SMB__concat, 1, (Object)send24230);
// asSymbol
send24232 = (Object)new_AST_Send((Object)send24231, (Object)SMB_asSymbol, 0);
assign2964 = (Object)new_AST_Assign((Object)localvariable3666, (Object)send24232);
symbol4315 = (Object)new_Type_Symbol_cached(L"respondsTo:");
// respondsTo:
send24233 = (Object)new_AST_Send((Object)Self, (Object)symbol4315, 1, (Object)localvariable3666);
super372 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3665);
block1465 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super372);
// ifFalse:
send24234 = (Object)new_AST_Send((Object)send24233, (Object)SMB_ifFalse_, 1, (Object)block1465);
symbol4316 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send24235 = (Object)new_AST_Send((Object)Self, (Object)symbol4316, 1, (Object)localvariable3666);
block1466 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, assign2964, send24234, send24235);
// at:ifAbsentPut:
send24236 = (Object)new_AST_Send((Object)instancevariable1526, (Object)symbol4218, 2, (Object)send24228, (Object)block1466);
method4765 = (Object)new_AST_Method_with((Type_Array)array3076, (Type_Array)array3077, 1, send24236);
methodclosure4753 = (Object)new_Runtime_MethodClosure(method4765);
store_method((Type_Class)class752, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4753);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send24237 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
// primary
send24238 = (Object)new_AST_Send((Object)Self, (Object)symbol4286, 0);
method4766 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send24237, send24238);
symbol4124 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure4754 = (Object)new_Runtime_MethodClosure(method4766);
store_method((Type_Class)class752, (Type_Symbol)symbol4124, (Runtime_MethodClosure)methodclosure4754);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable3667 = (Object)new_AST_Variable_named(L"aDictionary");
array3078 = (Object)new_Type_Array_with(1, (Object)localvariable3667);
assign2965 = (Object)new_AST_Assign((Object)instancevariable1526, (Object)localvariable3667);
method4767 = (Object)new_AST_Method_with((Type_Array)array3078, (Type_Array)empty_Type_Array, 2, assign2965, Self);
symbol4136 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure4755 = (Object)new_Runtime_MethodClosure(method4767);
store_method((Type_Class)class752, (Type_Symbol)symbol4136, (Runtime_MethodClosure)methodclosure4755);


// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
constant5569 = (Object)new_AST_Constant((Object)symbol4271);
string2664 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant5570 = (Object)new_AST_Constant((Object)string2664);
// named:
send24239 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4208, 1, (Object)constant5570);
block1467 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send24239);
// at:ifAbsentPut:
send24240 = (Object)new_AST_Send((Object)instancevariable1526, (Object)symbol4218, 2, (Object)constant5569, (Object)block1467);
method4768 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24240);
methodclosure4756 = (Object)new_Runtime_MethodClosure(method4768);
store_method((Type_Class)class752, (Type_Symbol)symbol4164, (Runtime_MethodClosure)methodclosure4756);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send24241 = (Object)new_AST_Send((Object)Self, (Object)symbol4271, 0);
// keywordExpression
send24242 = (Object)new_AST_Send((Object)Self, (Object)symbol4256, 0);
// binaryExpression
send24243 = (Object)new_AST_Send((Object)Self, (Object)symbol4305, 0);
// |
send24244 = (Object)new_AST_Send((Object)send24242, (Object)SMB__or, 1, (Object)send24243);
// <=
send24245 = (Object)new_AST_Send((Object)send24241, (Object)symbol4206, 1, (Object)send24244);
// unaryExpression
send24246 = (Object)new_AST_Send((Object)Self, (Object)symbol4269, 0);
// <=
send24247 = (Object)new_AST_Send((Object)send24245, (Object)symbol4206, 1, (Object)send24246);
method4769 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24247);
methodclosure4757 = (Object)new_Runtime_MethodClosure(method4769);
store_method((Type_Class)class752, (Type_Symbol)symbol4176, (Runtime_MethodClosure)methodclosure4757);


// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string2665 = (Object)new_Type_String(L"RETURN");
constant5571 = (Object)new_AST_Constant((Object)string2665);
string2666 = (Object)new_Type_String(L"^");
constant5572 = (Object)new_AST_Constant((Object)string2666);
// asPEG
send24248 = (Object)new_AST_Send((Object)constant5572, (Object)symbol4189, 0);
// omit:
send24249 = (Object)new_AST_Send((Object)send24248, (Object)symbol4181, 1, (Object)True_Const);
// finalExpression
send24250 = (Object)new_AST_Send((Object)Self, (Object)symbol4270, 0);
// &
send24251 = (Object)new_AST_Send((Object)send24249, (Object)SMB__and, 1, (Object)send24250);
localvariable3668 = (Object)new_AST_Variable_named(L"expression");
array3079 = (Object)new_Type_Array_with(1, (Object)localvariable3668);
// new
send24252 = (Object)new_AST_Send((Object)classreference1347, (Object)symbol3994, 0);
// expression:
send24253 = (Object)new_AST_Send((Object)send24252, (Object)symbol4065, 1, (Object)localvariable3668);
block1468 = (Object)new_AST_Block_with((Type_Array)array3079, (Type_Array)empty_Type_Array, 1, 1, send24253);
// named:parsing:semantics:
send24254 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5571, (Object)send24251, (Object)block1468);
method4770 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24254);
symbol4106 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure4758 = (Object)new_Runtime_MethodClosure(method4770);
store_method((Type_Class)class752, (Type_Symbol)symbol4106, (Runtime_MethodClosure)methodclosure4758);


// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
string2667 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant5573 = (Object)new_AST_Constant((Object)string2667);
string2668 = (Object)new_Type_String(L"#");
constant5574 = (Object)new_AST_Constant((Object)string2668);
// asPEG
send24255 = (Object)new_AST_Send((Object)constant5574, (Object)symbol4189, 0);
// omit:
send24256 = (Object)new_AST_Send((Object)send24255, (Object)symbol4181, 1, (Object)True_Const);
// symbol
send24257 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
// &&
send24258 = (Object)new_AST_Send((Object)send24256, (Object)symbol4190, 1, (Object)send24257);
localvariable3669 = (Object)new_AST_Variable_named(L"result");
array3080 = (Object)new_Type_Array_with(1, (Object)localvariable3669);
// new
send24259 = (Object)new_AST_Send((Object)classreference1355, (Object)symbol3994, 0);
// symbol:
send24260 = (Object)new_AST_Send((Object)send24259, (Object)symbol4058, 1, (Object)localvariable3669);
block1469 = (Object)new_AST_Block_with((Type_Array)array3080, (Type_Array)empty_Type_Array, 1, 1, send24260);
// named:parsing:semantics:
send24261 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5573, (Object)send24258, (Object)block1469);
method4771 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24261);
symbol4118 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure4759 = (Object)new_Runtime_MethodClosure(method4771);
store_method((Type_Class)class752, (Type_Symbol)symbol4118, (Runtime_MethodClosure)methodclosure4759);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
constant5575 = (Object)new_AST_Constant((Object)symbol4289);
string2669 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant5576 = (Object)new_AST_Constant((Object)string2669);
// named:
send24262 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4208, 1, (Object)constant5576);
block1470 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send24262);
// at:ifAbsentPut:
send24263 = (Object)new_AST_Send((Object)instancevariable1526, (Object)symbol4218, 2, (Object)constant5575, (Object)block1470);
method4772 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24263);
methodclosure4760 = (Object)new_Runtime_MethodClosure(method4772);
store_method((Type_Class)class752, (Type_Symbol)symbol4146, (Runtime_MethodClosure)methodclosure4760);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string2670 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant5577 = (Object)new_AST_Constant((Object)string2670);
// symbol
send24264 = (Object)new_AST_Send((Object)Self, (Object)symbol4055, 0);
localvariable3670 = (Object)new_AST_Variable_named(L"symbol");
array3081 = (Object)new_Type_Array_with(1, (Object)localvariable3670);
// new
send24265 = (Object)new_AST_Send((Object)classreference1355, (Object)symbol3994, 0);
// symbol:
send24266 = (Object)new_AST_Send((Object)send24265, (Object)symbol4058, 1, (Object)localvariable3670);
block1471 = (Object)new_AST_Block_with((Type_Array)array3081, (Type_Array)empty_Type_Array, 1, 1, send24266);
// named:parsing:semantics:
send24267 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5577, (Object)send24264, (Object)block1471);
method4773 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24267);
symbol4174 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure4761 = (Object)new_Runtime_MethodClosure(method4773);
store_method((Type_Class)class752, (Type_Symbol)symbol4174, (Runtime_MethodClosure)methodclosure4761);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant5578 = (Object)new_AST_Constant((Object)symbol4291);
string2671 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant5579 = (Object)new_AST_Constant((Object)string2671);
// named:
send24268 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4208, 1, (Object)constant5579);
block1472 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send24268);
// at:ifAbsentPut:
send24269 = (Object)new_AST_Send((Object)instancevariable1526, (Object)symbol4218, 2, (Object)constant5578, (Object)block1472);
method4774 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24269);
methodclosure4762 = (Object)new_Runtime_MethodClosure(method4774);
store_method((Type_Class)class752, (Type_Symbol)symbol4158, (Runtime_MethodClosure)methodclosure4762);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable3671 = (Object)new_AST_Variable_named(L"name");
array3082 = (Object)new_Type_Array_with(1, (Object)localvariable3671);
variable189 = (Object)new_AST_Variable_named(L"return");
array3083 = (Object)new_Type_Array_with(1, (Object)variable189);
string2672 = (Object)new_Type_String(L"self");
constant5580 = (Object)new_AST_Constant((Object)string2672);
// =
send24270 = (Object)new_AST_Send((Object)localvariable3671, (Object)SMB__equal, 1, (Object)constant5580);
// new
send24271 = (Object)new_AST_Send((Object)classreference1346, (Object)symbol3994, 0);
// escape:
send24272 = (Object)new_AST_Send((Object)variable189, (Object)SMB_escape_, 1, (Object)send24271);
block1473 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24272);
// ifTrue:
send24273 = (Object)new_AST_Send((Object)send24270, (Object)SMB_ifTrue_, 1, (Object)block1473);
string2673 = (Object)new_Type_String(L"super");
constant5581 = (Object)new_AST_Constant((Object)string2673);
// =
send24274 = (Object)new_AST_Send((Object)localvariable3671, (Object)SMB__equal, 1, (Object)constant5581);
// new
send24275 = (Object)new_AST_Send((Object)classreference1356, (Object)symbol3994, 0);
// escape:
send24276 = (Object)new_AST_Send((Object)variable189, (Object)SMB_escape_, 1, (Object)send24275);
block1474 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24276);
// ifTrue:
send24277 = (Object)new_AST_Send((Object)send24274, (Object)SMB_ifTrue_, 1, (Object)block1474);
// new
send24278 = (Object)new_AST_Send((Object)classreference1336, (Object)symbol3994, 0);
// name:
send24279 = (Object)new_AST_Send((Object)send24278, (Object)symbol4071, 1, (Object)localvariable3671);
block1475 = (Object)new_AST_Block_with((Type_Array)array3083, (Type_Array)empty_Type_Array, 1, 3, send24273, send24277, send24279);
// on:
send24280 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1475);
method4775 = (Object)new_AST_Method_with((Type_Array)array3082, (Type_Array)empty_Type_Array, 1, send24280);
methodclosure4763 = (Object)new_Runtime_MethodClosure(method4775);
store_method((Type_Class)class752, (Type_Symbol)symbol4111, (Runtime_MethodClosure)methodclosure4763);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
// primary
send24281 = (Object)new_AST_Send((Object)Self, (Object)symbol4286, 0);
symbol4317 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send24282 = (Object)new_AST_Send((Object)Self, (Object)symbol4317, 0);
symbol4318 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send24283 = (Object)new_AST_Send((Object)Self, (Object)symbol4318, 0);
// block
send24284 = (Object)new_AST_Send((Object)Self, (Object)symbol4282, 0);
symbol4319 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send24285 = (Object)new_AST_Send((Object)Self, (Object)symbol4319, 0);
// <=
send24286 = (Object)new_AST_Send((Object)send24284, (Object)symbol4206, 1, (Object)send24285);
// <=
send24287 = (Object)new_AST_Send((Object)send24283, (Object)symbol4206, 1, (Object)send24286);
// |
send24288 = (Object)new_AST_Send((Object)send24282, (Object)SMB__or, 1, (Object)send24287);
// <=
send24289 = (Object)new_AST_Send((Object)send24281, (Object)symbol4206, 1, (Object)send24288);
symbol4320 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send24290 = (Object)new_AST_Send((Object)Self, (Object)symbol4320, 0);
// <=
send24291 = (Object)new_AST_Send((Object)send24289, (Object)symbol4206, 1, (Object)send24290);
method4776 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24291);
methodclosure4764 = (Object)new_Runtime_MethodClosure(method4776);
store_method((Type_Class)class752, (Type_Symbol)symbol4128, (Runtime_MethodClosure)methodclosure4764);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string2674 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant5582 = (Object)new_AST_Constant((Object)string2674);
// binarySelector
send24292 = (Object)new_AST_Send((Object)Self, (Object)symbol4261, 0);
symbol4321 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send24293 = (Object)new_AST_Send((Object)Self, (Object)symbol4321, 0);
// &
send24294 = (Object)new_AST_Send((Object)send24292, (Object)SMB__and, 1, (Object)send24293);
localvariable3672 = (Object)new_AST_Variable_named(L"result");
array3084 = (Object)new_Type_Array_with(1, (Object)localvariable3672);
localvariable3673 = (Object)new_AST_Variable_named(L"receiver");
array3085 = (Object)new_Type_Array_with(1, (Object)localvariable3673);
// first
send24295 = (Object)new_AST_Send((Object)localvariable3672, (Object)symbol4041, 0);
// createSymbol:
send24296 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)send24295);
// selector:
send24297 = (Object)new_AST_Send((Object)localvariable3673, (Object)symbol4075, 1, (Object)send24296);
smallint2500 = (Object)new_Type_SmallInt(2);
constant5583 = (Object)new_AST_Constant((Object)smallint2500);
// at:
send24298 = (Object)new_AST_Send((Object)localvariable3672, (Object)SMB_at_, 1, (Object)constant5583);
// createVariable:
send24299 = (Object)new_AST_Send((Object)Self, (Object)symbol4111, 1, (Object)send24298);
// parameter:
send24300 = (Object)new_AST_Send((Object)localvariable3673, (Object)symbol4087, 1, (Object)send24299);
block1476 = (Object)new_AST_Block_with((Type_Array)array3085, (Type_Array)empty_Type_Array, 2, 2, send24297, send24300);
// new
send24301 = (Object)new_AST_Send((Object)classreference1352, (Object)symbol3994, 0);
// value:
send24302 = (Object)new_AST_Send((Object)block1476, (Object)SMB_value_, 1, (Object)send24301);
block1477 = (Object)new_AST_Block_with((Type_Array)array3084, (Type_Array)empty_Type_Array, 1, 1, send24302);
// named:parsing:semantics:
send24303 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5582, (Object)send24294, (Object)block1477);
method4777 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24303);
symbol4151 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure4765 = (Object)new_Runtime_MethodClosure(method4777);
store_method((Type_Class)class752, (Type_Symbol)symbol4151, (Runtime_MethodClosure)methodclosure4765);


// SCParser>>symbols
//symbols
// 	^ symbols
method4778 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1528);
symbol4168 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure4766 = (Object)new_Runtime_MethodClosure(method4778);
store_method((Type_Class)class752, (Type_Symbol)symbol4168, (Runtime_MethodClosure)methodclosure4766);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send24304 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
// cascadedMessageExpression
send24305 = (Object)new_AST_Send((Object)Self, (Object)symbol4289, 0);
method4779 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send24304, send24305);
symbol4121 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure4767 = (Object)new_Runtime_MethodClosure(method4779);
store_method((Type_Class)class752, (Type_Symbol)symbol4121, (Runtime_MethodClosure)methodclosure4767);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable3674 = (Object)new_AST_Variable_named(L"anObject");
array3086 = (Object)new_Type_Array_with(1, (Object)localvariable3674);
variable190 = (Object)new_AST_Variable_named(L"return");
array3087 = (Object)new_Type_Array_with(1, (Object)variable190);
symbol4322 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send24306 = (Object)new_AST_Send((Object)localvariable3674, (Object)symbol4322, 0);
// escape:
send24307 = (Object)new_AST_Send((Object)variable190, (Object)SMB_escape_, 1, (Object)localvariable3674);
block1478 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24307);
// ifFalse:
send24308 = (Object)new_AST_Send((Object)send24306, (Object)SMB_ifFalse_, 1, (Object)block1478);
// named:
send24309 = (Object)new_AST_Send((Object)classreference1355, (Object)symbol4208, 1, (Object)localvariable3674);
block1479 = (Object)new_AST_Block_with((Type_Array)array3087, (Type_Array)empty_Type_Array, 1, 2, send24308, send24309);
// on:
send24310 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1479);
method4780 = (Object)new_AST_Method_with((Type_Array)array3086, (Type_Array)empty_Type_Array, 1, send24310);
methodclosure4768 = (Object)new_Runtime_MethodClosure(method4780);
store_method((Type_Class)class752, (Type_Symbol)symbol4161, (Runtime_MethodClosure)methodclosure4768);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super373 = (Object)new_AST_Super((Object)symbol3906, 0);

// Dictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	^ self at: key ifAbsent: [self at: key put: aBlock value]
localvariable3675 = (Object)new_AST_Variable_named(L"key");
localvariable3676 = (Object)new_AST_Variable_named(L"aBlock");
array3088 = (Object)new_Type_Array_with(2, (Object)localvariable3675, (Object)localvariable3676);
symbol4323 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");
symbol4324 = (Object)new_Type_Symbol_cached(L"value");
// value
send24311 = (Object)new_AST_Send((Object)localvariable3676, (Object)symbol4324, 0);
// at:put:
send24312 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable3675, (Object)send24311);
block1480 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send24312);
// at:ifAbsent:
send24313 = (Object)new_AST_Send((Object)Self, (Object)symbol4323, 2, (Object)localvariable3675, (Object)block1480);
method4781 = (Object)new_AST_Method_with((Type_Array)array3088, (Type_Array)empty_Type_Array, 1, send24313);
methodclosure4769 = (Object)new_Runtime_MethodClosure(method4781);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol4218, (Runtime_MethodClosure)methodclosure4769);

classreference1362 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);
// new
send24314 = (Object)new_AST_Send((Object)classreference1362, (Object)symbol3994, 0);
assign2966 = (Object)new_AST_Assign((Object)instancevariable1526, (Object)send24314);
// new
send24315 = (Object)new_AST_Send((Object)classreference1362, (Object)symbol3994, 0);
assign2967 = (Object)new_AST_Assign((Object)instancevariable1528, (Object)send24315);
smallint2501 = (Object)new_Type_SmallInt(0);
constant5584 = (Object)new_AST_Constant((Object)smallint2501);
assign2968 = (Object)new_AST_Assign((Object)instancevariable1527, (Object)constant5584);
method4782 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super373, assign2966, assign2967, assign2968, Self);
methodclosure4770 = (Object)new_Runtime_MethodClosure(method4782);
store_method((Type_Class)class752, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4770);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable3677 = (Object)new_AST_Variable_named(L"result");
array3089 = (Object)new_Type_Array_with(1, (Object)localvariable3677);
string2675 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant5585 = (Object)new_AST_Constant((Object)string2675);
// keyword
send24316 = (Object)new_AST_Send((Object)Self, (Object)symbol4283, 0);
// parameterName
send24317 = (Object)new_AST_Send((Object)Self, (Object)symbol4321, 0);
// &
send24318 = (Object)new_AST_Send((Object)send24316, (Object)SMB__and, 1, (Object)send24317);
// plus
send24319 = (Object)new_AST_Send((Object)send24318, (Object)symbol4194, 0);
localvariable3678 = (Object)new_AST_Variable_named(L"pairs");
array3090 = (Object)new_Type_Array_with(1, (Object)localvariable3678);
// new
send24320 = (Object)new_AST_Send((Object)classreference1344, (Object)symbol3994, 0);
assign2969 = (Object)new_AST_Assign((Object)localvariable3677, (Object)send24320);
localvariable3679 = (Object)new_AST_Variable_named(L"pair");
array3091 = (Object)new_Type_Array_with(1, (Object)localvariable3679);
// keywords
send24321 = (Object)new_AST_Send((Object)localvariable3677, (Object)symbol4078, 0);
// first
send24322 = (Object)new_AST_Send((Object)localvariable3679, (Object)symbol4041, 0);
// add:
send24323 = (Object)new_AST_Send((Object)send24321, (Object)symbol4045, 1, (Object)send24322);
// parameters
send24324 = (Object)new_AST_Send((Object)localvariable3677, (Object)symbol4076, 0);
smallint2502 = (Object)new_Type_SmallInt(2);
constant5586 = (Object)new_AST_Constant((Object)smallint2502);
// at:
send24325 = (Object)new_AST_Send((Object)localvariable3679, (Object)SMB_at_, 1, (Object)constant5586);
// createVariable:
send24326 = (Object)new_AST_Send((Object)Self, (Object)symbol4111, 1, (Object)send24325);
// add:
send24327 = (Object)new_AST_Send((Object)send24324, (Object)symbol4045, 1, (Object)send24326);
block1481 = (Object)new_AST_Block_with((Type_Array)array3091, (Type_Array)empty_Type_Array, 2, 2, send24323, send24327);
// do:
send24328 = (Object)new_AST_Send((Object)localvariable3678, (Object)symbol4044, 1, (Object)block1481);
// selectorName
send24329 = (Object)new_AST_Send((Object)localvariable3677, (Object)symbol4077, 0);
// named:
send24330 = (Object)new_AST_Send((Object)classreference1355, (Object)symbol4208, 1, (Object)send24329);
// selector:
send24331 = (Object)new_AST_Send((Object)localvariable3677, (Object)symbol4075, 1, (Object)send24330);
block1482 = (Object)new_AST_Block_with((Type_Array)array3090, (Type_Array)empty_Type_Array, 1, 4, assign2969, send24328, send24331, localvariable3677);
// named:parsing:semantics:
send24332 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5585, (Object)send24319, (Object)block1482);
method4783 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3089, 1, send24332);
symbol4115 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure4771 = (Object)new_Runtime_MethodClosure(method4783);
store_method((Type_Class)class752, (Type_Symbol)symbol4115, (Runtime_MethodClosure)methodclosure4771);


// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
string2676 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant5587 = (Object)new_AST_Constant((Object)string2676);
// unarySelector
send24333 = (Object)new_AST_Send((Object)Self, (Object)symbol4290, 0);
localvariable3680 = (Object)new_AST_Variable_named(L"selector");
array3092 = (Object)new_Type_Array_with(1, (Object)localvariable3680);
// new
send24334 = (Object)new_AST_Send((Object)classreference1349, (Object)symbol3994, 0);
// selector:
send24335 = (Object)new_AST_Send((Object)send24334, (Object)symbol4075, 1, (Object)localvariable3680);
block1483 = (Object)new_AST_Block_with((Type_Array)array3092, (Type_Array)empty_Type_Array, 1, 1, send24335);
// named:parsing:semantics:
send24336 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5587, (Object)send24333, (Object)block1483);
method4784 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24336);
symbol4143 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure4772 = (Object)new_Runtime_MethodClosure(method4784);
store_method((Type_Class)class752, (Type_Symbol)symbol4143, (Runtime_MethodClosure)methodclosure4772);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string2677 = (Object)new_Type_String(L"METHOD");
constant5588 = (Object)new_AST_Constant((Object)string2677);
symbol4325 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send24337 = (Object)new_AST_Send((Object)Self, (Object)symbol4325, 0);
// temporaries
send24338 = (Object)new_AST_Send((Object)Self, (Object)symbol4099, 0);
// optional
send24339 = (Object)new_AST_Send((Object)send24338, (Object)symbol4183, 0);
// annotation
send24340 = (Object)new_AST_Send((Object)Self, (Object)symbol4273, 0);
// times
send24341 = (Object)new_AST_Send((Object)send24340, (Object)symbol4185, 0);
// statements
send24342 = (Object)new_AST_Send((Object)Self, (Object)symbol4094, 0);
// <&
send24343 = (Object)new_AST_Send((Object)send24341, (Object)symbol4225, 1, (Object)send24342);
// <&
send24344 = (Object)new_AST_Send((Object)send24339, (Object)symbol4225, 1, (Object)send24343);
// &
send24345 = (Object)new_AST_Send((Object)send24337, (Object)SMB__and, 1, (Object)send24344);
// separator
send24346 = (Object)new_AST_Send((Object)Self, (Object)symbol4248, 0);
// <&
send24347 = (Object)new_AST_Send((Object)send24345, (Object)symbol4225, 1, (Object)send24346);
localvariable3681 = (Object)new_AST_Variable_named(L"parts");
array3093 = (Object)new_Type_Array_with(1, (Object)localvariable3681);
localvariable3682 = (Object)new_AST_Variable_named(L"receiver");
array3094 = (Object)new_Type_Array_with(1, (Object)localvariable3682);
// first
send24348 = (Object)new_AST_Send((Object)localvariable3681, (Object)symbol4041, 0);
// message:
send24349 = (Object)new_AST_Send((Object)localvariable3682, (Object)symbol4093, 1, (Object)send24348);
smallint2503 = (Object)new_Type_SmallInt(2);
constant5589 = (Object)new_AST_Constant((Object)smallint2503);
// at:
send24350 = (Object)new_AST_Send((Object)localvariable3681, (Object)SMB_at_, 1, (Object)constant5589);
// new
send24351 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
block1484 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send24351);
// resultIfFailed:
send24352 = (Object)new_AST_Send((Object)send24350, (Object)symbol4227, 1, (Object)block1484);
// temporaries:
send24353 = (Object)new_AST_Send((Object)localvariable3682, (Object)symbol4100, 1, (Object)send24352);
smallint2504 = (Object)new_Type_SmallInt(3);
constant5590 = (Object)new_AST_Constant((Object)smallint2504);
// at:
send24354 = (Object)new_AST_Send((Object)localvariable3681, (Object)SMB_at_, 1, (Object)constant5590);
// annotations:
send24355 = (Object)new_AST_Send((Object)localvariable3682, (Object)symbol4101, 1, (Object)send24354);
smallint2505 = (Object)new_Type_SmallInt(4);
constant5591 = (Object)new_AST_Constant((Object)smallint2505);
// at:
send24356 = (Object)new_AST_Send((Object)localvariable3681, (Object)SMB_at_, 1, (Object)constant5591);
// statements:
send24357 = (Object)new_AST_Send((Object)localvariable3682, (Object)symbol4098, 1, (Object)send24356);
// yourself
send24358 = (Object)new_AST_Send((Object)localvariable3682, (Object)symbol3904, 0);
block1485 = (Object)new_AST_Block_with((Type_Array)array3094, (Type_Array)empty_Type_Array, 2, 5, send24349, send24353, send24355, send24357, send24358);
// new
send24359 = (Object)new_AST_Send((Object)classreference1343, (Object)symbol3994, 0);
// value:
send24360 = (Object)new_AST_Send((Object)block1485, (Object)SMB_value_, 1, (Object)send24359);
block1486 = (Object)new_AST_Block_with((Type_Array)array3093, (Type_Array)empty_Type_Array, 1, 1, send24360);
// named:parsing:semantics:
send24361 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5588, (Object)send24347, (Object)block1486);
// separator
send24362 = (Object)new_AST_Send((Object)Self, (Object)symbol4248, 0);
// separator:
send24363 = (Object)new_AST_Send((Object)send24361, (Object)symbol4202, 1, (Object)send24362);
method4785 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24363);
symbol4171 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure4773 = (Object)new_Runtime_MethodClosure(method4785);
store_method((Type_Class)class752, (Type_Symbol)symbol4171, (Runtime_MethodClosure)methodclosure4773);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string2678 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant5592 = (Object)new_AST_Constant((Object)string2678);
string2679 = (Object)new_Type_String(L":");
constant5593 = (Object)new_AST_Constant((Object)string2679);
// asPEG
send24364 = (Object)new_AST_Send((Object)constant5593, (Object)symbol4189, 0);
// omit:
send24365 = (Object)new_AST_Send((Object)send24364, (Object)symbol4181, 1, (Object)True_Const);
// identifier
send24366 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
// &
send24367 = (Object)new_AST_Send((Object)send24365, (Object)SMB__and, 1, (Object)send24366);
// plus
send24368 = (Object)new_AST_Send((Object)send24367, (Object)symbol4194, 0);
localvariable3683 = (Object)new_AST_Variable_named(L"result");
array3095 = (Object)new_Type_Array_with(1, (Object)localvariable3683);
localvariable3684 = (Object)new_AST_Variable_named(L"variable");
array3096 = (Object)new_Type_Array_with(1, (Object)localvariable3684);
// createVariable:
send24369 = (Object)new_AST_Send((Object)Self, (Object)symbol4111, 1, (Object)localvariable3684);
block1487 = (Object)new_AST_Block_with((Type_Array)array3096, (Type_Array)empty_Type_Array, 2, 1, send24369);
// collect:
send24370 = (Object)new_AST_Send((Object)localvariable3683, (Object)symbol4264, 1, (Object)block1487);
block1488 = (Object)new_AST_Block_with((Type_Array)array3095, (Type_Array)empty_Type_Array, 1, 1, send24370);
// named:parsing:semantics:
send24371 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5592, (Object)send24368, (Object)block1488);
method4786 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24371);
symbol4155 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure4774 = (Object)new_Runtime_MethodClosure(method4786);
store_method((Type_Class)class752, (Type_Symbol)symbol4155, (Runtime_MethodClosure)methodclosure4774);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable3685 = (Object)new_AST_Variable_named(L"result");
array3097 = (Object)new_Type_Array_with(1, (Object)localvariable3685);
string2680 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant5594 = (Object)new_AST_Constant((Object)string2680);
// primary
send24372 = (Object)new_AST_Send((Object)Self, (Object)symbol4286, 0);
// unarySelector
send24373 = (Object)new_AST_Send((Object)Self, (Object)symbol4290, 0);
// plus
send24374 = (Object)new_AST_Send((Object)send24373, (Object)symbol4194, 0);
// &
send24375 = (Object)new_AST_Send((Object)send24372, (Object)SMB__and, 1, (Object)send24374);
localvariable3686 = (Object)new_AST_Variable_named(L"parts");
array3098 = (Object)new_Type_Array_with(1, (Object)localvariable3686);
// first
send24376 = (Object)new_AST_Send((Object)localvariable3686, (Object)symbol4041, 0);
assign2970 = (Object)new_AST_Assign((Object)localvariable3685, (Object)send24376);
smallint2506 = (Object)new_Type_SmallInt(2);
constant5595 = (Object)new_AST_Constant((Object)smallint2506);
// at:
send24377 = (Object)new_AST_Send((Object)localvariable3686, (Object)SMB_at_, 1, (Object)constant5595);
localvariable3687 = (Object)new_AST_Variable_named(L"selector");
array3099 = (Object)new_Type_Array_with(1, (Object)localvariable3687);
localvariable3688 = (Object)new_AST_Variable_named(L"receiver");
array3100 = (Object)new_Type_Array_with(1, (Object)localvariable3688);
// receiver:
send24378 = (Object)new_AST_Send((Object)localvariable3688, (Object)symbol4080, 1, (Object)localvariable3685);
// selector:
send24379 = (Object)new_AST_Send((Object)localvariable3688, (Object)symbol4075, 1, (Object)localvariable3687);
block1489 = (Object)new_AST_Block_with((Type_Array)array3100, (Type_Array)empty_Type_Array, 3, 2, send24378, send24379);
// new
send24380 = (Object)new_AST_Send((Object)classreference1342, (Object)symbol3994, 0);
// value:
send24381 = (Object)new_AST_Send((Object)block1489, (Object)SMB_value_, 1, (Object)send24380);
assign2971 = (Object)new_AST_Assign((Object)localvariable3685, (Object)send24381);
block1490 = (Object)new_AST_Block_with((Type_Array)array3099, (Type_Array)empty_Type_Array, 2, 1, assign2971);
// do:
send24382 = (Object)new_AST_Send((Object)send24377, (Object)symbol4044, 1, (Object)block1490);
block1491 = (Object)new_AST_Block_with((Type_Array)array3098, (Type_Array)empty_Type_Array, 1, 3, assign2970, send24382, localvariable3685);
// named:parsing:semantics:
send24383 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5594, (Object)send24375, (Object)block1491);
method4787 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3097, 1, send24383);
symbol4125 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure4775 = (Object)new_Runtime_MethodClosure(method4787);
store_method((Type_Class)class752, (Type_Symbol)symbol4125, (Runtime_MethodClosure)methodclosure4775);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant5596 = (Object)new_AST_Constant((Object)symbol4286);
string2681 = (Object)new_Type_String(L"PRIMARY");
constant5597 = (Object)new_AST_Constant((Object)string2681);
// named:
send24384 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4208, 1, (Object)constant5597);
block1492 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send24384);
// at:ifAbsentPut:
send24385 = (Object)new_AST_Send((Object)instancevariable1526, (Object)symbol4218, 2, (Object)constant5596, (Object)block1492);
method4788 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24385);
methodclosure4776 = (Object)new_Runtime_MethodClosure(method4788);
store_method((Type_Class)class752, (Type_Symbol)symbol4137, (Runtime_MethodClosure)methodclosure4776);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string2682 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant5598 = (Object)new_AST_Constant((Object)string2682);
// asPEGChoice
send24386 = (Object)new_AST_Send((Object)constant5598, (Object)symbol4312, 0);
// separators
send24387 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4309, 0);
// decimalDigit
send24388 = (Object)new_AST_Send((Object)Self, (Object)symbol4298, 0);
symbol4326 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send24389 = (Object)new_AST_Send((Object)Self, (Object)symbol4326, 0);
// <=
send24390 = (Object)new_AST_Send((Object)send24388, (Object)symbol4206, 1, (Object)send24389);
// <=
send24391 = (Object)new_AST_Send((Object)send24387, (Object)symbol4206, 1, (Object)send24390);
// |
send24392 = (Object)new_AST_Send((Object)send24386, (Object)SMB__or, 1, (Object)send24391);
symbol4327 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send24393 = (Object)new_AST_Send((Object)Self, (Object)symbol4327, 0);
// <=
send24394 = (Object)new_AST_Send((Object)send24392, (Object)symbol4206, 1, (Object)send24393);
method4789 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24394);
symbol4165 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure4777 = (Object)new_Runtime_MethodClosure(method4789);
store_method((Type_Class)class752, (Type_Symbol)symbol4165, (Runtime_MethodClosure)methodclosure4777);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
string2683 = (Object)new_Type_String(L"TEMPORARIES");
constant5599 = (Object)new_AST_Constant((Object)string2683);
// bar
send24395 = (Object)new_AST_Send((Object)Self, (Object)symbol4306, 0);
symbol4328 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send24396 = (Object)new_AST_Send((Object)Self, (Object)symbol4328, 0);
// times
send24397 = (Object)new_AST_Send((Object)send24396, (Object)symbol4185, 0);
// &
send24398 = (Object)new_AST_Send((Object)send24395, (Object)SMB__and, 1, (Object)send24397);
// bar
send24399 = (Object)new_AST_Send((Object)Self, (Object)symbol4306, 0);
// <&
send24400 = (Object)new_AST_Send((Object)send24398, (Object)symbol4225, 1, (Object)send24399);
// named:parsing:
send24401 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4262, 2, (Object)constant5599, (Object)send24400);
method4790 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24401);
symbol4177 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure4778 = (Object)new_Runtime_MethodClosure(method4790);
store_method((Type_Class)class752, (Type_Symbol)symbol4177, (Runtime_MethodClosure)methodclosure4778);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string2684 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant5600 = (Object)new_AST_Constant((Object)string2684);
// keyword
send24402 = (Object)new_AST_Send((Object)Self, (Object)symbol4283, 0);
// primary
send24403 = (Object)new_AST_Send((Object)Self, (Object)symbol4286, 0);
// &
send24404 = (Object)new_AST_Send((Object)send24402, (Object)SMB__and, 1, (Object)send24403);
// plus
send24405 = (Object)new_AST_Send((Object)send24404, (Object)symbol4194, 0);
localvariable3689 = (Object)new_AST_Variable_named(L"result");
array3101 = (Object)new_Type_Array_with(1, (Object)localvariable3689);
localvariable3690 = (Object)new_AST_Variable_named(L"receiver");
array3102 = (Object)new_Type_Array_with(1, (Object)localvariable3690);
localvariable3691 = (Object)new_AST_Variable_named(L"each");
array3103 = (Object)new_Type_Array_with(1, (Object)localvariable3691);
// first
send24406 = (Object)new_AST_Send((Object)localvariable3691, (Object)symbol4041, 0);
// named:
send24407 = (Object)new_AST_Send((Object)classreference1355, (Object)symbol4208, 1, (Object)send24406);
block1493 = (Object)new_AST_Block_with((Type_Array)array3103, (Type_Array)empty_Type_Array, 3, 1, send24407);
// collect:
send24408 = (Object)new_AST_Send((Object)localvariable3689, (Object)symbol4264, 1, (Object)block1493);
// keywords:
send24409 = (Object)new_AST_Send((Object)localvariable3690, (Object)symbol4079, 1, (Object)send24408);
// new
send24410 = (Object)new_AST_Send((Object)classreference1338, (Object)symbol3994, 0);
constant5601 = (Object)new_AST_Constant((Object)symbol4041);
// collect:
send24411 = (Object)new_AST_Send((Object)localvariable3689, (Object)symbol4264, 1, (Object)constant5601);
// keywords:
send24412 = (Object)new_AST_Send((Object)send24410, (Object)symbol4079, 1, (Object)send24411);
// selector:
send24413 = (Object)new_AST_Send((Object)localvariable3690, (Object)symbol4075, 1, (Object)send24412);
constant5602 = (Object)new_AST_Constant((Object)symbol4302);
// collect:
send24414 = (Object)new_AST_Send((Object)localvariable3689, (Object)symbol4264, 1, (Object)constant5602);
// arguments:
send24415 = (Object)new_AST_Send((Object)localvariable3690, (Object)symbol4081, 1, (Object)send24414);
block1494 = (Object)new_AST_Block_with((Type_Array)array3102, (Type_Array)empty_Type_Array, 2, 3, send24409, send24413, send24415);
// new
send24416 = (Object)new_AST_Send((Object)classreference1348, (Object)symbol3994, 0);
// value:
send24417 = (Object)new_AST_Send((Object)block1494, (Object)SMB_value_, 1, (Object)send24416);
block1495 = (Object)new_AST_Block_with((Type_Array)array3101, (Type_Array)empty_Type_Array, 1, 1, send24417);
// named:parsing:semantics:
send24418 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5600, (Object)send24405, (Object)block1495);
method4791 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24418);
symbol4107 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure4779 = (Object)new_Runtime_MethodClosure(method4791);
store_method((Type_Class)class752, (Type_Symbol)symbol4107, (Runtime_MethodClosure)methodclosure4779);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable3692 = (Object)new_AST_Variable_named(L"receiver");
array3104 = (Object)new_Type_Array_with(1, (Object)localvariable3692);
string2685 = (Object)new_Type_String(L";");
constant5603 = (Object)new_AST_Constant((Object)string2685);
// asPEG
send24419 = (Object)new_AST_Send((Object)constant5603, (Object)symbol4189, 0);
// omit:
send24420 = (Object)new_AST_Send((Object)send24419, (Object)symbol4181, 1, (Object)True_Const);
// keywordMessageExpression
send24421 = (Object)new_AST_Send((Object)Self, (Object)symbol4303, 0);
symbol4329 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send24422 = (Object)new_AST_Send((Object)Self, (Object)symbol4329, 0);
// |
send24423 = (Object)new_AST_Send((Object)send24421, (Object)SMB__or, 1, (Object)send24422);
// &
send24424 = (Object)new_AST_Send((Object)send24420, (Object)SMB__and, 1, (Object)send24423);
symbol4330 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send24425 = (Object)new_AST_Send((Object)Self, (Object)symbol4330, 0);
// <=
send24426 = (Object)new_AST_Send((Object)send24424, (Object)symbol4206, 1, (Object)send24425);
// plus
send24427 = (Object)new_AST_Send((Object)send24426, (Object)symbol4194, 0);
// &
send24428 = (Object)new_AST_Send((Object)localvariable3692, (Object)SMB__and, 1, (Object)send24427);
localvariable3693 = (Object)new_AST_Variable_named(L"parts");
array3105 = (Object)new_Type_Array_with(1, (Object)localvariable3693);
smallint2507 = (Object)new_Type_SmallInt(2);
constant5604 = (Object)new_AST_Constant((Object)smallint2507);
// at:
send24429 = (Object)new_AST_Send((Object)localvariable3693, (Object)SMB_at_, 1, (Object)constant5604);
symbol4331 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send24430 = (Object)new_AST_Send((Object)localvariable3693, (Object)symbol4041, 0);
// addFirst:
send24431 = (Object)new_AST_Send((Object)send24429, (Object)symbol4331, 1, (Object)send24430);
localvariable3694 = (Object)new_AST_Variable_named(L"receiver");
array3106 = (Object)new_Type_Array_with(1, (Object)localvariable3694);
// first
send24432 = (Object)new_AST_Send((Object)localvariable3693, (Object)symbol4041, 0);
// receiver
send24433 = (Object)new_AST_Send((Object)send24432, (Object)symbol4082, 0);
// receiver:
send24434 = (Object)new_AST_Send((Object)localvariable3694, (Object)symbol4080, 1, (Object)send24433);
smallint2508 = (Object)new_Type_SmallInt(2);
constant5605 = (Object)new_AST_Constant((Object)smallint2508);
// at:
send24435 = (Object)new_AST_Send((Object)localvariable3693, (Object)SMB_at_, 1, (Object)constant5605);
// cascades:
send24436 = (Object)new_AST_Send((Object)localvariable3694, (Object)symbol4104, 1, (Object)send24435);
block1496 = (Object)new_AST_Block_with((Type_Array)array3106, (Type_Array)empty_Type_Array, 3, 2, send24434, send24436);
// new
send24437 = (Object)new_AST_Send((Object)classreference1359, (Object)symbol3994, 0);
// value:
send24438 = (Object)new_AST_Send((Object)block1496, (Object)SMB_value_, 1, (Object)send24437);
block1497 = (Object)new_AST_Block_with((Type_Array)array3105, (Type_Array)empty_Type_Array, 2, 2, send24431, send24438);
// semantics:
send24439 = (Object)new_AST_Send((Object)localvariable3692, (Object)symbol4204, 1, (Object)block1497);
block1498 = (Object)new_AST_Block_with((Type_Array)array3104, (Type_Array)empty_Type_Array, 1, 2, send24428, send24439);
// cascadedMessageExpression
send24440 = (Object)new_AST_Send((Object)Self, (Object)symbol4289, 0);
// messageExpression
send24441 = (Object)new_AST_Send((Object)Self, (Object)symbol4271, 0);
// <=
send24442 = (Object)new_AST_Send((Object)send24440, (Object)symbol4206, 1, (Object)send24441);
// value:
send24443 = (Object)new_AST_Send((Object)block1498, (Object)SMB_value_, 1, (Object)send24442);
method4792 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24443);
methodclosure4780 = (Object)new_Runtime_MethodClosure(method4792);
store_method((Type_Class)class752, (Type_Symbol)symbol4119, (Runtime_MethodClosure)methodclosure4780);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
symbol4332 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send24444 = (Object)new_AST_Send((Object)Self, (Object)symbol4332, 0);
// symbolConstant
send24445 = (Object)new_AST_Send((Object)Self, (Object)symbol4284, 0);
// characterConstant
send24446 = (Object)new_AST_Send((Object)Self, (Object)symbol4287, 0);
// stringConstant
send24447 = (Object)new_AST_Send((Object)Self, (Object)symbol4280, 0);
// <=
send24448 = (Object)new_AST_Send((Object)send24446, (Object)symbol4206, 1, (Object)send24447);
// <=
send24449 = (Object)new_AST_Send((Object)send24445, (Object)symbol4206, 1, (Object)send24448);
// |
send24450 = (Object)new_AST_Send((Object)send24444, (Object)SMB__or, 1, (Object)send24449);
symbol4333 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send24451 = (Object)new_AST_Send((Object)Self, (Object)symbol4333, 0);
// <=
send24452 = (Object)new_AST_Send((Object)send24450, (Object)symbol4206, 1, (Object)send24451);
method4793 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24452);
symbol4147 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure4781 = (Object)new_Runtime_MethodClosure(method4793);
store_method((Type_Class)class752, (Type_Symbol)symbol4147, (Runtime_MethodClosure)methodclosure4781);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string2686 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant5606 = (Object)new_AST_Constant((Object)string2686);
// keyword
send24453 = (Object)new_AST_Send((Object)Self, (Object)symbol4283, 0);
// strongPlus
send24454 = (Object)new_AST_Send((Object)send24453, (Object)symbol4200, 0);
localvariable3695 = (Object)new_AST_Variable_named(L"result");
array3107 = (Object)new_Type_Array_with(1, (Object)localvariable3695);
string2687 = (Object)new_Type_String(L"");
constant5607 = (Object)new_AST_Constant((Object)string2687);
localvariable3696 = (Object)new_AST_Variable_named(L"c");
localvariable3697 = (Object)new_AST_Variable_named(L"e");
array3108 = (Object)new_Type_Array_with(2, (Object)localvariable3696, (Object)localvariable3697);
// ,
send24455 = (Object)new_AST_Send((Object)localvariable3696, (Object)SMB__concat, 1, (Object)localvariable3697);
string2688 = (Object)new_Type_String(L":");
constant5608 = (Object)new_AST_Constant((Object)string2688);
// ,
send24456 = (Object)new_AST_Send((Object)send24455, (Object)SMB__concat, 1, (Object)constant5608);
block1499 = (Object)new_AST_Block_with((Type_Array)array3108, (Type_Array)empty_Type_Array, 2, 1, send24456);
// inject:into:
send24457 = (Object)new_AST_Send((Object)localvariable3695, (Object)symbol4046, 2, (Object)constant5607, (Object)block1499);
block1500 = (Object)new_AST_Block_with((Type_Array)array3107, (Type_Array)empty_Type_Array, 1, 1, send24457);
// named:parsing:semantics:
send24458 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5606, (Object)send24454, (Object)block1500);
method4794 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24458);
symbol4175 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure4782 = (Object)new_Runtime_MethodClosure(method4794);
store_method((Type_Class)class752, (Type_Symbol)symbol4175, (Runtime_MethodClosure)methodclosure4782);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send24459 = (Object)new_AST_Send((Object)Self, (Object)symbol4064, 0);
string2689 = (Object)new_Type_String(L".");
constant5609 = (Object)new_AST_Constant((Object)string2689);
// asPEG
send24460 = (Object)new_AST_Send((Object)constant5609, (Object)symbol4189, 0);
// omit:
send24461 = (Object)new_AST_Send((Object)send24460, (Object)symbol4181, 1, (Object)True_Const);
// &
send24462 = (Object)new_AST_Send((Object)send24459, (Object)SMB__and, 1, (Object)send24461);
method4795 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24462);
symbol4159 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure4783 = (Object)new_Runtime_MethodClosure(method4795);
store_method((Type_Class)class752, (Type_Symbol)symbol4159, (Runtime_MethodClosure)methodclosure4783);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string2690 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant5610 = (Object)new_AST_Constant((Object)string2690);
// specialCharacter
send24463 = (Object)new_AST_Send((Object)Self, (Object)symbol4327, 0);
string2691 = (Object)new_Type_String(L"-");
constant5611 = (Object)new_AST_Constant((Object)string2691);
// |
send24464 = (Object)new_AST_Send((Object)send24463, (Object)SMB__or, 1, (Object)constant5611);
// specialCharacter
send24465 = (Object)new_AST_Send((Object)Self, (Object)symbol4327, 0);
// strongTimes
send24466 = (Object)new_AST_Send((Object)send24465, (Object)symbol4186, 0);
// &&
send24467 = (Object)new_AST_Send((Object)send24464, (Object)symbol4190, 1, (Object)send24466);
string2692 = (Object)new_Type_String(L"|");
constant5612 = (Object)new_AST_Constant((Object)string2692);
// |
send24468 = (Object)new_AST_Send((Object)send24467, (Object)SMB__or, 1, (Object)constant5612);
localvariable3698 = (Object)new_AST_Variable_named(L"result");
array3109 = (Object)new_Type_Array_with(1, (Object)localvariable3698);
// isString
send24469 = (Object)new_AST_Send((Object)localvariable3698, (Object)symbol4322, 0);
// createSymbol:
send24470 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)localvariable3698);
block1501 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24470);
// second
send24471 = (Object)new_AST_Send((Object)localvariable3698, (Object)symbol4302, 0);
// first
send24472 = (Object)new_AST_Send((Object)localvariable3698, (Object)symbol4041, 0);
localvariable3699 = (Object)new_AST_Variable_named(L"c");
localvariable3700 = (Object)new_AST_Variable_named(L"e");
array3110 = (Object)new_Type_Array_with(2, (Object)localvariable3699, (Object)localvariable3700);
// ,
send24473 = (Object)new_AST_Send((Object)localvariable3699, (Object)SMB__concat, 1, (Object)localvariable3700);
block1502 = (Object)new_AST_Block_with((Type_Array)array3110, (Type_Array)empty_Type_Array, 3, 1, send24473);
// inject:into:
send24474 = (Object)new_AST_Send((Object)send24471, (Object)symbol4046, 2, (Object)send24472, (Object)block1502);
// createSymbol:
send24475 = (Object)new_AST_Send((Object)Self, (Object)symbol4161, 1, (Object)send24474);
block1503 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send24475);
// ifTrue:ifFalse:
send24476 = (Object)new_AST_Send((Object)send24469, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1501, (Object)block1503);
block1504 = (Object)new_AST_Block_with((Type_Array)array3109, (Type_Array)empty_Type_Array, 1, 1, send24476);
// named:parsing:semantics:
send24477 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5610, (Object)send24468, (Object)block1504);
method4796 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24477);
symbol4112 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure4784 = (Object)new_Runtime_MethodClosure(method4796);
store_method((Type_Class)class752, (Type_Symbol)symbol4112, (Runtime_MethodClosure)methodclosure4784);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string2693 = (Object)new_Type_String(L"a-z");
constant5613 = (Object)new_AST_Constant((Object)string2693);
// asPEGRange
send24478 = (Object)new_AST_Send((Object)constant5613, (Object)symbol4293, 0);
method4797 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24478);
symbol4140 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure4785 = (Object)new_Runtime_MethodClosure(method4797);
store_method((Type_Class)class752, (Type_Symbol)symbol4140, (Runtime_MethodClosure)methodclosure4785);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string2694 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant5614 = (Object)new_AST_Constant((Object)string2694);
// uppercase
send24479 = (Object)new_AST_Send((Object)Self, (Object)symbol4308, 0);
// letter
send24480 = (Object)new_AST_Send((Object)Self, (Object)symbol4326, 0);
// decimalDigit
send24481 = (Object)new_AST_Send((Object)Self, (Object)symbol4298, 0);
// |
send24482 = (Object)new_AST_Send((Object)send24480, (Object)SMB__or, 1, (Object)send24481);
// strongTimes
send24483 = (Object)new_AST_Send((Object)send24482, (Object)symbol4186, 0);
// &&
send24484 = (Object)new_AST_Send((Object)send24479, (Object)symbol4190, 1, (Object)send24483);
localvariable3701 = (Object)new_AST_Variable_named(L"result");
array3111 = (Object)new_Type_Array_with(1, (Object)localvariable3701);
// second
send24485 = (Object)new_AST_Send((Object)localvariable3701, (Object)symbol4302, 0);
// first
send24486 = (Object)new_AST_Send((Object)localvariable3701, (Object)symbol4041, 0);
localvariable3702 = (Object)new_AST_Variable_named(L"c");
localvariable3703 = (Object)new_AST_Variable_named(L"e");
array3112 = (Object)new_Type_Array_with(2, (Object)localvariable3702, (Object)localvariable3703);
// ,
send24487 = (Object)new_AST_Send((Object)localvariable3702, (Object)SMB__concat, 1, (Object)localvariable3703);
block1505 = (Object)new_AST_Block_with((Type_Array)array3112, (Type_Array)empty_Type_Array, 2, 1, send24487);
// inject:into:
send24488 = (Object)new_AST_Send((Object)send24485, (Object)symbol4046, 2, (Object)send24486, (Object)block1505);
block1506 = (Object)new_AST_Block_with((Type_Array)array3111, (Type_Array)empty_Type_Array, 1, 1, send24488);
// named:parsing:semantics:
send24489 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5614, (Object)send24484, (Object)block1506);
method4798 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24489);
symbol4129 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure4786 = (Object)new_Runtime_MethodClosure(method4798);
store_method((Type_Class)class752, (Type_Symbol)symbol4129, (Runtime_MethodClosure)methodclosure4786);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send24490 = (Object)new_AST_Send((Object)Self, (Object)symbol4305, 0);
// binaryObjectDescription
send24491 = (Object)new_AST_Send((Object)Self, (Object)symbol4291, 0);
method4799 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send24490, send24491);
symbol4152 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure4787 = (Object)new_Runtime_MethodClosure(method4799);
store_method((Type_Class)class752, (Type_Symbol)symbol4152, (Runtime_MethodClosure)methodclosure4787);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string2695 = (Object)new_Type_String(L"IDENTIFIER");
constant5615 = (Object)new_AST_Constant((Object)string2695);
// letter
send24492 = (Object)new_AST_Send((Object)Self, (Object)symbol4326, 0);
// letter
send24493 = (Object)new_AST_Send((Object)Self, (Object)symbol4326, 0);
// decimalDigit
send24494 = (Object)new_AST_Send((Object)Self, (Object)symbol4298, 0);
// |
send24495 = (Object)new_AST_Send((Object)send24493, (Object)SMB__or, 1, (Object)send24494);
// strongTimes
send24496 = (Object)new_AST_Send((Object)send24495, (Object)symbol4186, 0);
// &&
send24497 = (Object)new_AST_Send((Object)send24492, (Object)symbol4190, 1, (Object)send24496);
localvariable3704 = (Object)new_AST_Variable_named(L"result");
array3113 = (Object)new_Type_Array_with(1, (Object)localvariable3704);
// second
send24498 = (Object)new_AST_Send((Object)localvariable3704, (Object)symbol4302, 0);
// first
send24499 = (Object)new_AST_Send((Object)localvariable3704, (Object)symbol4041, 0);
localvariable3705 = (Object)new_AST_Variable_named(L"c");
localvariable3706 = (Object)new_AST_Variable_named(L"e");
array3114 = (Object)new_Type_Array_with(2, (Object)localvariable3705, (Object)localvariable3706);
// ,
send24500 = (Object)new_AST_Send((Object)localvariable3705, (Object)SMB__concat, 1, (Object)localvariable3706);
block1507 = (Object)new_AST_Block_with((Type_Array)array3114, (Type_Array)empty_Type_Array, 2, 1, send24500);
// inject:into:
send24501 = (Object)new_AST_Send((Object)send24498, (Object)symbol4046, 2, (Object)send24499, (Object)block1507);
block1508 = (Object)new_AST_Block_with((Type_Array)array3113, (Type_Array)empty_Type_Array, 1, 1, send24501);
// named:parsing:semantics:
send24502 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5615, (Object)send24497, (Object)block1508);
method4800 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24502);
symbol4169 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure4788 = (Object)new_Runtime_MethodClosure(method4800);
store_method((Type_Class)class752, (Type_Symbol)symbol4169, (Runtime_MethodClosure)methodclosure4788);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
// variableName
send24503 = (Object)new_AST_Send((Object)Self, (Object)symbol4328, 0);
// assignmentOp
send24504 = (Object)new_AST_Send((Object)Self, (Object)symbol4126, 0);
// &
send24505 = (Object)new_AST_Send((Object)send24503, (Object)SMB__and, 1, (Object)send24504);
// times
send24506 = (Object)new_AST_Send((Object)send24505, (Object)symbol4185, 0);
method4801 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24506);
symbol4122 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure4789 = (Object)new_Runtime_MethodClosure(method4801);
store_method((Type_Class)class752, (Type_Symbol)symbol4122, (Runtime_MethodClosure)methodclosure4789);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string2696 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant5616 = (Object)new_AST_Constant((Object)string2696);
// unarySelector
send24507 = (Object)new_AST_Send((Object)Self, (Object)symbol4290, 0);
localvariable3707 = (Object)new_AST_Variable_named(L"selector");
array3115 = (Object)new_Type_Array_with(1, (Object)localvariable3707);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send24508 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// selectorSymbol
send24509 = (Object)new_AST_Send((Object)send24508, (Object)symbol4083, 0);
method4802 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24509);
methodclosure4790 = (Object)new_Runtime_MethodClosure(method4802);
store_method((Type_Class)class773, (Type_Symbol)symbol4083, (Runtime_MethodClosure)methodclosure4790);

classreference1363 = (Object)new_Organization_ClassReference((Type_Class)class773);
// new
send24510 = (Object)new_AST_Send((Object)classreference1363, (Object)symbol3994, 0);
// selector:
send24511 = (Object)new_AST_Send((Object)send24510, (Object)symbol4075, 1, (Object)localvariable3707);
block1509 = (Object)new_AST_Block_with((Type_Array)array3115, (Type_Array)empty_Type_Array, 1, 1, send24511);
// named:parsing:semantics:
send24512 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5616, (Object)send24507, (Object)block1509);
method4803 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24512);
symbol4134 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure4791 = (Object)new_Runtime_MethodClosure(method4803);
store_method((Type_Class)class752, (Type_Symbol)symbol4134, (Runtime_MethodClosure)methodclosure4791);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string2697 = (Object)new_Type_String(L"SYMBOL");
constant5617 = (Object)new_AST_Constant((Object)string2697);
symbol4334 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send24513 = (Object)new_AST_Send((Object)Self, (Object)symbol4334, 0);
// identifier
send24514 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
// binarySelector
send24515 = (Object)new_AST_Send((Object)Self, (Object)symbol4261, 0);
// <=
send24516 = (Object)new_AST_Send((Object)send24514, (Object)symbol4206, 1, (Object)send24515);
// |
send24517 = (Object)new_AST_Send((Object)send24513, (Object)SMB__or, 1, (Object)send24516);
// string
send24518 = (Object)new_AST_Send((Object)Self, (Object)symbol4060, 0);
// <=
send24519 = (Object)new_AST_Send((Object)send24517, (Object)symbol4206, 1, (Object)send24518);
// named:parsing:
send24520 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4262, 2, (Object)constant5617, (Object)send24519);
method4804 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24520);
symbol4162 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure4792 = (Object)new_Runtime_MethodClosure(method4804);
store_method((Type_Class)class752, (Type_Symbol)symbol4162, (Runtime_MethodClosure)methodclosure4792);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string2698 = (Object)new_Type_String(L"#");
constant5618 = (Object)new_AST_Constant((Object)string2698);
// asPEG
send24521 = (Object)new_AST_Send((Object)constant5618, (Object)symbol4189, 0);
// omit:
send24522 = (Object)new_AST_Send((Object)send24521, (Object)symbol4181, 1, (Object)True_Const);
symbol4335 = (Object)new_Type_Symbol_cached(L"array");
// array
send24523 = (Object)new_AST_Send((Object)Self, (Object)symbol4335, 0);
// &
send24524 = (Object)new_AST_Send((Object)send24522, (Object)SMB__and, 1, (Object)send24523);
method4805 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24524);
symbol4116 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure4793 = (Object)new_Runtime_MethodClosure(method4805);
store_method((Type_Class)class752, (Type_Symbol)symbol4116, (Runtime_MethodClosure)methodclosure4793);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable3708 = (Object)new_AST_Variable_named(L"array");
array3116 = (Object)new_Type_Array_with(1, (Object)localvariable3708);
string2699 = (Object)new_Type_String(L"ARRAY");
constant5619 = (Object)new_AST_Constant((Object)string2699);
// named:
send24525 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4208, 1, (Object)constant5619);
assign2972 = (Object)new_AST_Assign((Object)localvariable3708, (Object)send24525);
string2700 = (Object)new_Type_String(L"(");
constant5620 = (Object)new_AST_Constant((Object)string2700);
// asPEG
send24526 = (Object)new_AST_Send((Object)constant5620, (Object)symbol4189, 0);
// omit:
send24527 = (Object)new_AST_Send((Object)send24526, (Object)symbol4181, 1, (Object)True_Const);
// numberConstant
send24528 = (Object)new_AST_Send((Object)Self, (Object)symbol4332, 0);
// stringConstant
send24529 = (Object)new_AST_Send((Object)Self, (Object)symbol4280, 0);
symbol4336 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send24530 = (Object)new_AST_Send((Object)Self, (Object)symbol4336, 0);
// symbolConstant
send24531 = (Object)new_AST_Send((Object)Self, (Object)symbol4284, 0);
// characterConstant
send24532 = (Object)new_AST_Send((Object)Self, (Object)symbol4287, 0);
// <=
send24533 = (Object)new_AST_Send((Object)send24531, (Object)symbol4206, 1, (Object)send24532);
// <=
send24534 = (Object)new_AST_Send((Object)send24530, (Object)symbol4206, 1, (Object)send24533);
// <=
send24535 = (Object)new_AST_Send((Object)send24529, (Object)symbol4206, 1, (Object)send24534);
// |
send24536 = (Object)new_AST_Send((Object)send24528, (Object)SMB__or, 1, (Object)send24535);
// <=
send24537 = (Object)new_AST_Send((Object)send24536, (Object)symbol4206, 1, (Object)localvariable3708);
// times
send24538 = (Object)new_AST_Send((Object)send24537, (Object)symbol4185, 0);
// &
send24539 = (Object)new_AST_Send((Object)send24527, (Object)SMB__and, 1, (Object)send24538);
// <=
send24540 = (Object)new_AST_Send((Object)localvariable3708, (Object)symbol4206, 1, (Object)send24539);
string2701 = (Object)new_Type_String(L")");
constant5621 = (Object)new_AST_Constant((Object)string2701);
// asPEG
send24541 = (Object)new_AST_Send((Object)constant5621, (Object)symbol4189, 0);
// omit:
send24542 = (Object)new_AST_Send((Object)send24541, (Object)symbol4181, 1, (Object)True_Const);
// <&
send24543 = (Object)new_AST_Send((Object)send24540, (Object)symbol4225, 1, (Object)send24542);
localvariable3709 = (Object)new_AST_Variable_named(L"result");
array3117 = (Object)new_Type_Array_with(1, (Object)localvariable3709);

// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
symbol4033 = (Object)new_Type_Symbol_cached(L"literals");
// literals
send24544 = (Object)new_AST_Send((Object)Self, (Object)symbol4033, 0);
// isEmpty
send24545 = (Object)new_AST_Send((Object)send24544, (Object)symbol4031, 0);
method4806 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24545);
methodclosure4794 = (Object)new_Runtime_MethodClosure(method4806);
store_method((Type_Class)class780, (Type_Symbol)symbol4031, (Runtime_MethodClosure)methodclosure4794);


// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable3710 = (Object)new_AST_Variable_named(L"aCollection");
array3118 = (Object)new_Type_Array_with(1, (Object)localvariable3710);
assign2973 = (Object)new_AST_Assign((Object)instancevariable1561, (Object)localvariable3710);
method4807 = (Object)new_AST_Method_with((Type_Array)array3118, (Type_Array)empty_Type_Array, 2, assign2973, Self);
symbol4032 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure4795 = (Object)new_Runtime_MethodClosure(method4807);
store_method((Type_Class)class780, (Type_Symbol)symbol4032, (Runtime_MethodClosure)methodclosure4795);


// ASTArray>>literals
//literals
// 	^ literals
method4808 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1561);
methodclosure4796 = (Object)new_Runtime_MethodClosure(method4808);
store_method((Type_Class)class780, (Type_Symbol)symbol4033, (Runtime_MethodClosure)methodclosure4796);

classreference1364 = (Object)new_Organization_ClassReference((Type_Class)class780);
// new
send24546 = (Object)new_AST_Send((Object)classreference1364, (Object)symbol3994, 0);
// literals:
send24547 = (Object)new_AST_Send((Object)send24546, (Object)symbol4032, 1, (Object)localvariable3709);
block1510 = (Object)new_AST_Block_with((Type_Array)array3117, (Type_Array)empty_Type_Array, 1, 1, send24547);
// semantics:
send24548 = (Object)new_AST_Send((Object)localvariable3708, (Object)symbol4204, 1, (Object)block1510);
method4809 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3116, 4, assign2972, send24543, send24548, localvariable3708);
symbol4144 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure4797 = (Object)new_Runtime_MethodClosure(method4809);
store_method((Type_Class)class752, (Type_Symbol)symbol4144, (Runtime_MethodClosure)methodclosure4797);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable3711 = (Object)new_AST_Variable_named(L"commentBorder");
array3119 = (Object)new_Type_Array_with(1, (Object)localvariable3711);
string2702 = (Object)new_Type_String(L"\"");
constant5622 = (Object)new_AST_Constant((Object)string2702);
// asPEG
send24549 = (Object)new_AST_Send((Object)constant5622, (Object)symbol4189, 0);
assign2974 = (Object)new_AST_Assign((Object)localvariable3711, (Object)send24549);
// not
send24550 = (Object)new_AST_Send((Object)localvariable3711, (Object)SMB_not, 0);
// strongTimes
send24551 = (Object)new_AST_Send((Object)send24550, (Object)symbol4186, 0);
// &&
send24552 = (Object)new_AST_Send((Object)localvariable3711, (Object)symbol4190, 1, (Object)send24551);
// <&
send24553 = (Object)new_AST_Send((Object)send24552, (Object)symbol4225, 1, (Object)localvariable3711);
method4810 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3119, 2, assign2974, send24553);
symbol4172 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure4798 = (Object)new_Runtime_MethodClosure(method4810);
store_method((Type_Class)class752, (Type_Symbol)symbol4172, (Runtime_MethodClosure)methodclosure4798);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string2703 = (Object)new_Type_String(L"VARIABLE-NAME");
constant5623 = (Object)new_AST_Constant((Object)string2703);
// identifier
send24554 = (Object)new_AST_Send((Object)Self, (Object)symbol4278, 0);
localvariable3712 = (Object)new_AST_Variable_named(L"result");
array3120 = (Object)new_Type_Array_with(1, (Object)localvariable3712);
// createVariable:
send24555 = (Object)new_AST_Send((Object)Self, (Object)symbol4111, 1, (Object)localvariable3712);
block1511 = (Object)new_AST_Block_with((Type_Array)array3120, (Type_Array)empty_Type_Array, 1, 1, send24555);
// named:parsing:semantics:
send24556 = (Object)new_AST_Send((Object)classreference1333, (Object)symbol4292, 3, (Object)constant5623, (Object)send24554, (Object)block1511);
method4811 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send24556);
symbol4156 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure4799 = (Object)new_Runtime_MethodClosure(method4811);
store_method((Type_Class)class752, (Type_Symbol)symbol4156, (Runtime_MethodClosure)methodclosure4799);

classreference1365 = (Object)new_Organization_ClassReference((Type_Class)class752);
// new
send24557 = (Object)new_AST_Send((Object)classreference1365, (Object)symbol3994, 0);
assign2975 = (Object)new_AST_Assign((Object)instancevariable1525, (Object)send24557);
method4812 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign2975, Self);
symbol3965 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure4800 = (Object)new_Runtime_MethodClosure(method4812);
store_method((Type_Class)class751, (Type_Symbol)symbol3965, (Runtime_MethodClosure)methodclosure4800);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3713 = (Object)new_AST_Variable_named(L"parser");
localvariable3714 = (Object)new_AST_Variable_named(L"string");
array3121 = (Object)new_Type_Array_with(2, (Object)localvariable3713, (Object)localvariable3714);
// symbolKeywords
send24558 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4334, 0);
assign2976 = (Object)new_AST_Assign((Object)localvariable3713, (Object)send24558);
string2704 = (Object)new_Type_String(L"abcd:def: ");
constant5624 = (Object)new_AST_Constant((Object)string2704);
// on:
send24559 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5624);
assign2977 = (Object)new_AST_Assign((Object)localvariable3714, (Object)send24559);
// match:
send24560 = (Object)new_AST_Send((Object)localvariable3713, (Object)symbol4196, 1, (Object)localvariable3714);
// should
send24561 = (Object)new_AST_Send((Object)send24560, (Object)symbol4250, 0);
string2705 = (Object)new_Type_String(L"abcd:def:");
constant5625 = (Object)new_AST_Constant((Object)string2705);
// =
send24562 = (Object)new_AST_Send((Object)send24561, (Object)SMB__equal, 1, (Object)constant5625);
// position
send24563 = (Object)new_AST_Send((Object)localvariable3714, (Object)symbol4241, 0);
// should
send24564 = (Object)new_AST_Send((Object)send24563, (Object)symbol4250, 0);
smallint2509 = (Object)new_Type_SmallInt(9);
constant5626 = (Object)new_AST_Constant((Object)smallint2509);
// =
send24565 = (Object)new_AST_Send((Object)send24564, (Object)SMB__equal, 1, (Object)constant5626);
string2706 = (Object)new_Type_String(L"abcd ");
constant5627 = (Object)new_AST_Constant((Object)string2706);
// on:
send24566 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5627);
assign2978 = (Object)new_AST_Assign((Object)localvariable3714, (Object)send24566);
// match:
send24567 = (Object)new_AST_Send((Object)localvariable3713, (Object)symbol4196, 1, (Object)localvariable3714);
// should
send24568 = (Object)new_AST_Send((Object)send24567, (Object)symbol4250, 0);
// be
send24569 = (Object)new_AST_Send((Object)send24568, (Object)symbol4251, 0);
// isNil
send24570 = (Object)new_AST_Send((Object)send24569, (Object)SMB_isNil, 0);
// position
send24571 = (Object)new_AST_Send((Object)localvariable3714, (Object)symbol4241, 0);
// should
send24572 = (Object)new_AST_Send((Object)send24571, (Object)symbol4250, 0);
smallint2510 = (Object)new_Type_SmallInt(0);
constant5628 = (Object)new_AST_Constant((Object)smallint2510);
// =
send24573 = (Object)new_AST_Send((Object)send24572, (Object)SMB__equal, 1, (Object)constant5628);
method4813 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3121, 8, assign2976, assign2977, send24562, send24565, assign2978, send24570, send24573, Self);
symbol3910 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure4801 = (Object)new_Runtime_MethodClosure(method4813);
store_method((Type_Class)class751, (Type_Symbol)symbol3910, (Runtime_MethodClosure)methodclosure4801);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3715 = (Object)new_AST_Variable_named(L"parser");
localvariable3716 = (Object)new_AST_Variable_named(L"string");
array3122 = (Object)new_Type_Array_with(2, (Object)localvariable3715, (Object)localvariable3716);
// character
send24574 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4299, 0);
assign2979 = (Object)new_AST_Assign((Object)localvariable3715, (Object)send24574);
string2707 = (Object)new_Type_String(L"--");
constant5629 = (Object)new_AST_Constant((Object)string2707);
// on:
send24575 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5629);
assign2980 = (Object)new_AST_Assign((Object)localvariable3716, (Object)send24575);
// match:
send24576 = (Object)new_AST_Send((Object)localvariable3715, (Object)symbol4196, 1, (Object)localvariable3716);
// should
send24577 = (Object)new_AST_Send((Object)send24576, (Object)symbol4250, 0);
string2708 = (Object)new_Type_String(L"-");
constant5630 = (Object)new_AST_Constant((Object)string2708);
// =
send24578 = (Object)new_AST_Send((Object)send24577, (Object)SMB__equal, 1, (Object)constant5630);
// position
send24579 = (Object)new_AST_Send((Object)localvariable3716, (Object)symbol4241, 0);
// should
send24580 = (Object)new_AST_Send((Object)send24579, (Object)symbol4250, 0);
smallint2511 = (Object)new_Type_SmallInt(1);
constant5631 = (Object)new_AST_Constant((Object)smallint2511);
// =
send24581 = (Object)new_AST_Send((Object)send24580, (Object)SMB__equal, 1, (Object)constant5631);
string2709 = (Object)new_Type_String(L"__");
constant5632 = (Object)new_AST_Constant((Object)string2709);
// on:
send24582 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5632);
assign2981 = (Object)new_AST_Assign((Object)localvariable3716, (Object)send24582);
// match:
send24583 = (Object)new_AST_Send((Object)localvariable3715, (Object)symbol4196, 1, (Object)localvariable3716);
// should
send24584 = (Object)new_AST_Send((Object)send24583, (Object)symbol4250, 0);
string2710 = (Object)new_Type_String(L"_");
constant5633 = (Object)new_AST_Constant((Object)string2710);
// =
send24585 = (Object)new_AST_Send((Object)send24584, (Object)SMB__equal, 1, (Object)constant5633);
// position
send24586 = (Object)new_AST_Send((Object)localvariable3716, (Object)symbol4241, 0);
// should
send24587 = (Object)new_AST_Send((Object)send24586, (Object)symbol4250, 0);
smallint2512 = (Object)new_Type_SmallInt(1);
constant5634 = (Object)new_AST_Constant((Object)smallint2512);
// =
send24588 = (Object)new_AST_Send((Object)send24587, (Object)SMB__equal, 1, (Object)constant5634);
string2711 = (Object)new_Type_String(L"4");
constant5635 = (Object)new_AST_Constant((Object)string2711);
// on:
send24589 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5635);
assign2982 = (Object)new_AST_Assign((Object)localvariable3716, (Object)send24589);
// match:
send24590 = (Object)new_AST_Send((Object)localvariable3715, (Object)symbol4196, 1, (Object)localvariable3716);
// should
send24591 = (Object)new_AST_Send((Object)send24590, (Object)symbol4250, 0);
string2712 = (Object)new_Type_String(L"4");
constant5636 = (Object)new_AST_Constant((Object)string2712);
// =
send24592 = (Object)new_AST_Send((Object)send24591, (Object)SMB__equal, 1, (Object)constant5636);
// position
send24593 = (Object)new_AST_Send((Object)localvariable3716, (Object)symbol4241, 0);
// should
send24594 = (Object)new_AST_Send((Object)send24593, (Object)symbol4250, 0);
smallint2513 = (Object)new_Type_SmallInt(1);
constant5637 = (Object)new_AST_Constant((Object)smallint2513);
// =
send24595 = (Object)new_AST_Send((Object)send24594, (Object)SMB__equal, 1, (Object)constant5637);
string2713 = (Object)new_Type_String(L"p");
constant5638 = (Object)new_AST_Constant((Object)string2713);
// on:
send24596 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5638);
assign2983 = (Object)new_AST_Assign((Object)localvariable3716, (Object)send24596);
// match:
send24597 = (Object)new_AST_Send((Object)localvariable3715, (Object)symbol4196, 1, (Object)localvariable3716);
// should
send24598 = (Object)new_AST_Send((Object)send24597, (Object)symbol4250, 0);
string2714 = (Object)new_Type_String(L"p");
constant5639 = (Object)new_AST_Constant((Object)string2714);
// =
send24599 = (Object)new_AST_Send((Object)send24598, (Object)SMB__equal, 1, (Object)constant5639);
// position
send24600 = (Object)new_AST_Send((Object)localvariable3716, (Object)symbol4241, 0);
// should
send24601 = (Object)new_AST_Send((Object)send24600, (Object)symbol4250, 0);
smallint2514 = (Object)new_Type_SmallInt(1);
constant5640 = (Object)new_AST_Constant((Object)smallint2514);
// =
send24602 = (Object)new_AST_Send((Object)send24601, (Object)SMB__equal, 1, (Object)constant5640);
string2715 = (Object)new_Type_String(L"&");
constant5641 = (Object)new_AST_Constant((Object)string2715);
// on:
send24603 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5641);
assign2984 = (Object)new_AST_Assign((Object)localvariable3716, (Object)send24603);
// match:
send24604 = (Object)new_AST_Send((Object)localvariable3715, (Object)symbol4196, 1, (Object)localvariable3716);
// should
send24605 = (Object)new_AST_Send((Object)send24604, (Object)symbol4250, 0);
string2716 = (Object)new_Type_String(L"&");
constant5642 = (Object)new_AST_Constant((Object)string2716);
// =
send24606 = (Object)new_AST_Send((Object)send24605, (Object)SMB__equal, 1, (Object)constant5642);
// position
send24607 = (Object)new_AST_Send((Object)localvariable3716, (Object)symbol4241, 0);
// should
send24608 = (Object)new_AST_Send((Object)send24607, (Object)symbol4250, 0);
smallint2515 = (Object)new_Type_SmallInt(1);
constant5643 = (Object)new_AST_Constant((Object)smallint2515);
// =
send24609 = (Object)new_AST_Send((Object)send24608, (Object)SMB__equal, 1, (Object)constant5643);
string2717 = (Object)new_Type_String(L"\'");
constant5644 = (Object)new_AST_Constant((Object)string2717);
// on:
send24610 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5644);
assign2985 = (Object)new_AST_Assign((Object)localvariable3716, (Object)send24610);
// match:
send24611 = (Object)new_AST_Send((Object)localvariable3715, (Object)symbol4196, 1, (Object)localvariable3716);
// should
send24612 = (Object)new_AST_Send((Object)send24611, (Object)symbol4250, 0);
// be
send24613 = (Object)new_AST_Send((Object)send24612, (Object)symbol4251, 0);
// isNil
send24614 = (Object)new_AST_Send((Object)send24613, (Object)SMB_isNil, 0);
// position
send24615 = (Object)new_AST_Send((Object)localvariable3716, (Object)symbol4241, 0);
// should
send24616 = (Object)new_AST_Send((Object)send24615, (Object)symbol4250, 0);
smallint2516 = (Object)new_Type_SmallInt(0);
constant5645 = (Object)new_AST_Constant((Object)smallint2516);
// =
send24617 = (Object)new_AST_Send((Object)send24616, (Object)SMB__equal, 1, (Object)constant5645);
method4814 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3122, 20, assign2979, assign2980, send24578, send24581, assign2981, send24585, send24588, assign2982, send24592, send24595, assign2983, send24599, send24602, assign2984, send24606, send24609, assign2985, send24614, send24617, Self);
symbol3977 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure4802 = (Object)new_Runtime_MethodClosure(method4814);
store_method((Type_Class)class751, (Type_Symbol)symbol3977, (Runtime_MethodClosure)methodclosure4802);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable3717 = (Object)new_AST_Variable_named(L"parser");
localvariable3718 = (Object)new_AST_Variable_named(L"string");
localvariable3719 = (Object)new_AST_Variable_named(L"result");
array3123 = (Object)new_Type_Array_with(3, (Object)localvariable3717, (Object)localvariable3718, (Object)localvariable3719);
// binaryObjectDescription
send24618 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4291, 0);
assign2986 = (Object)new_AST_Assign((Object)localvariable3717, (Object)send24618);
string2718 = (Object)new_Type_String(L"abc def ghi ");
constant5646 = (Object)new_AST_Constant((Object)string2718);
// on:
send24619 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5646);
assign2987 = (Object)new_AST_Assign((Object)localvariable3718, (Object)send24619);
// match:
send24620 = (Object)new_AST_Send((Object)localvariable3717, (Object)symbol4196, 1, (Object)localvariable3718);
assign2988 = (Object)new_AST_Assign((Object)localvariable3719, (Object)send24620);
// class
send24621 = (Object)new_AST_Send((Object)localvariable3719, (Object)SMB_class, 0);
// should
send24622 = (Object)new_AST_Send((Object)send24621, (Object)symbol4250, 0);
// =
send24623 = (Object)new_AST_Send((Object)send24622, (Object)SMB__equal, 1, (Object)classreference1342);
// selector
send24624 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4007, 0);
// class
send24625 = (Object)new_AST_Send((Object)send24624, (Object)SMB_class, 0);
// should
send24626 = (Object)new_AST_Send((Object)send24625, (Object)symbol4250, 0);
// =
send24627 = (Object)new_AST_Send((Object)send24626, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send24628 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4007, 0);
// selector
send24629 = (Object)new_AST_Send((Object)send24628, (Object)symbol4007, 0);
// asString
send24630 = (Object)new_AST_Send((Object)send24629, (Object)SMB_asString, 0);
// should
send24631 = (Object)new_AST_Send((Object)send24630, (Object)symbol4250, 0);
string2719 = (Object)new_Type_String(L"ghi");
constant5647 = (Object)new_AST_Constant((Object)string2719);
// =
send24632 = (Object)new_AST_Send((Object)send24631, (Object)SMB__equal, 1, (Object)constant5647);
// receiver
send24633 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4082, 0);
assign2989 = (Object)new_AST_Assign((Object)localvariable3719, (Object)send24633);
// class
send24634 = (Object)new_AST_Send((Object)localvariable3719, (Object)SMB_class, 0);
// should
send24635 = (Object)new_AST_Send((Object)send24634, (Object)symbol4250, 0);
// =
send24636 = (Object)new_AST_Send((Object)send24635, (Object)SMB__equal, 1, (Object)classreference1342);
// selector
send24637 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4007, 0);
// class
send24638 = (Object)new_AST_Send((Object)send24637, (Object)SMB_class, 0);
// should
send24639 = (Object)new_AST_Send((Object)send24638, (Object)symbol4250, 0);
// =
send24640 = (Object)new_AST_Send((Object)send24639, (Object)SMB__equal, 1, (Object)classreference1345);
// selector
send24641 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4007, 0);
// selector
send24642 = (Object)new_AST_Send((Object)send24641, (Object)symbol4007, 0);
// asString
send24643 = (Object)new_AST_Send((Object)send24642, (Object)SMB_asString, 0);
// should
send24644 = (Object)new_AST_Send((Object)send24643, (Object)symbol4250, 0);
string2720 = (Object)new_Type_String(L"def");
constant5648 = (Object)new_AST_Constant((Object)string2720);
// =
send24645 = (Object)new_AST_Send((Object)send24644, (Object)SMB__equal, 1, (Object)constant5648);
// receiver
send24646 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4082, 0);
// class
send24647 = (Object)new_AST_Send((Object)send24646, (Object)SMB_class, 0);
// should
send24648 = (Object)new_AST_Send((Object)send24647, (Object)symbol4250, 0);
// =
send24649 = (Object)new_AST_Send((Object)send24648, (Object)SMB__equal, 1, (Object)classreference1336);
// receiver
send24650 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4082, 0);
// name
send24651 = (Object)new_AST_Send((Object)send24650, (Object)SMB_name, 0);
// should
send24652 = (Object)new_AST_Send((Object)send24651, (Object)symbol4250, 0);
string2721 = (Object)new_Type_String(L"abc");
constant5649 = (Object)new_AST_Constant((Object)string2721);
// =
send24653 = (Object)new_AST_Send((Object)send24652, (Object)SMB__equal, 1, (Object)constant5649);
// position
send24654 = (Object)new_AST_Send((Object)localvariable3718, (Object)symbol4241, 0);
// should
send24655 = (Object)new_AST_Send((Object)send24654, (Object)symbol4250, 0);
smallint2517 = (Object)new_Type_SmallInt(12);
constant5650 = (Object)new_AST_Constant((Object)smallint2517);
// =
send24656 = (Object)new_AST_Send((Object)send24655, (Object)SMB__equal, 1, (Object)constant5650);
string2722 = (Object)new_Type_String(L"3");
constant5651 = (Object)new_AST_Constant((Object)string2722);
// on:
send24657 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5651);
assign2990 = (Object)new_AST_Assign((Object)localvariable3718, (Object)send24657);
// match:
send24658 = (Object)new_AST_Send((Object)localvariable3717, (Object)symbol4196, 1, (Object)localvariable3718);
assign2991 = (Object)new_AST_Assign((Object)localvariable3719, (Object)send24658);
// class
send24659 = (Object)new_AST_Send((Object)localvariable3719, (Object)SMB_class, 0);
// should
send24660 = (Object)new_AST_Send((Object)send24659, (Object)symbol4250, 0);
// =
send24661 = (Object)new_AST_Send((Object)send24660, (Object)SMB__equal, 1, (Object)classreference1340);
// number
send24662 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4048, 0);
// should
send24663 = (Object)new_AST_Send((Object)send24662, (Object)symbol4250, 0);
string2723 = (Object)new_Type_String(L"3");
constant5652 = (Object)new_AST_Constant((Object)string2723);
// =
send24664 = (Object)new_AST_Send((Object)send24663, (Object)SMB__equal, 1, (Object)constant5652);
// position
send24665 = (Object)new_AST_Send((Object)localvariable3718, (Object)symbol4241, 0);
// should
send24666 = (Object)new_AST_Send((Object)send24665, (Object)symbol4250, 0);
smallint2518 = (Object)new_Type_SmallInt(1);
constant5653 = (Object)new_AST_Constant((Object)smallint2518);
// =
send24667 = (Object)new_AST_Send((Object)send24666, (Object)SMB__equal, 1, (Object)constant5653);
string2724 = (Object)new_Type_String(L"abc + ghi * c ");
constant5654 = (Object)new_AST_Constant((Object)string2724);
// on:
send24668 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5654);
assign2992 = (Object)new_AST_Assign((Object)localvariable3718, (Object)send24668);
// match:
send24669 = (Object)new_AST_Send((Object)localvariable3717, (Object)symbol4196, 1, (Object)localvariable3718);
assign2993 = (Object)new_AST_Assign((Object)localvariable3719, (Object)send24669);
// class
send24670 = (Object)new_AST_Send((Object)localvariable3719, (Object)SMB_class, 0);
// should
send24671 = (Object)new_AST_Send((Object)send24670, (Object)symbol4250, 0);
// =
send24672 = (Object)new_AST_Send((Object)send24671, (Object)SMB__equal, 1, (Object)classreference1341);
// selector
send24673 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4007, 0);
// printString
send24674 = (Object)new_AST_Send((Object)send24673, (Object)symbol4198, 0);
// should
send24675 = (Object)new_AST_Send((Object)send24674, (Object)symbol4250, 0);
string2725 = (Object)new_Type_String(L"*");
constant5655 = (Object)new_AST_Constant((Object)string2725);
// =
send24676 = (Object)new_AST_Send((Object)send24675, (Object)SMB__equal, 1, (Object)constant5655);
// argument
send24677 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4086, 0);
// class
send24678 = (Object)new_AST_Send((Object)send24677, (Object)SMB_class, 0);
// should
send24679 = (Object)new_AST_Send((Object)send24678, (Object)symbol4250, 0);
// =
send24680 = (Object)new_AST_Send((Object)send24679, (Object)SMB__equal, 1, (Object)classreference1336);
// argument
send24681 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4086, 0);
// name
send24682 = (Object)new_AST_Send((Object)send24681, (Object)SMB_name, 0);
// should
send24683 = (Object)new_AST_Send((Object)send24682, (Object)symbol4250, 0);
string2726 = (Object)new_Type_String(L"c");
constant5656 = (Object)new_AST_Constant((Object)string2726);
// =
send24684 = (Object)new_AST_Send((Object)send24683, (Object)SMB__equal, 1, (Object)constant5656);
// receiver
send24685 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4082, 0);
assign2994 = (Object)new_AST_Assign((Object)localvariable3719, (Object)send24685);
// class
send24686 = (Object)new_AST_Send((Object)localvariable3719, (Object)SMB_class, 0);
// should
send24687 = (Object)new_AST_Send((Object)send24686, (Object)symbol4250, 0);
// =
send24688 = (Object)new_AST_Send((Object)send24687, (Object)SMB__equal, 1, (Object)classreference1341);
// selector
send24689 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4007, 0);
// printString
send24690 = (Object)new_AST_Send((Object)send24689, (Object)symbol4198, 0);
// should
send24691 = (Object)new_AST_Send((Object)send24690, (Object)symbol4250, 0);
string2727 = (Object)new_Type_String(L"+");
constant5657 = (Object)new_AST_Constant((Object)string2727);
// =
send24692 = (Object)new_AST_Send((Object)send24691, (Object)SMB__equal, 1, (Object)constant5657);
// receiver
send24693 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4082, 0);
// class
send24694 = (Object)new_AST_Send((Object)send24693, (Object)SMB_class, 0);
// should
send24695 = (Object)new_AST_Send((Object)send24694, (Object)symbol4250, 0);
// =
send24696 = (Object)new_AST_Send((Object)send24695, (Object)SMB__equal, 1, (Object)classreference1336);
// receiver
send24697 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4082, 0);
// name
send24698 = (Object)new_AST_Send((Object)send24697, (Object)SMB_name, 0);
// should
send24699 = (Object)new_AST_Send((Object)send24698, (Object)symbol4250, 0);
string2728 = (Object)new_Type_String(L"abc");
constant5658 = (Object)new_AST_Constant((Object)string2728);
// =
send24700 = (Object)new_AST_Send((Object)send24699, (Object)SMB__equal, 1, (Object)constant5658);
// argument
send24701 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4086, 0);
// class
send24702 = (Object)new_AST_Send((Object)send24701, (Object)SMB_class, 0);
// should
send24703 = (Object)new_AST_Send((Object)send24702, (Object)symbol4250, 0);
// =
send24704 = (Object)new_AST_Send((Object)send24703, (Object)SMB__equal, 1, (Object)classreference1336);
// argument
send24705 = (Object)new_AST_Send((Object)localvariable3719, (Object)symbol4086, 0);
// name
send24706 = (Object)new_AST_Send((Object)send24705, (Object)SMB_name, 0);
// should
send24707 = (Object)new_AST_Send((Object)send24706, (Object)symbol4250, 0);
string2729 = (Object)new_Type_String(L"ghi");
constant5659 = (Object)new_AST_Constant((Object)string2729);
// =
send24708 = (Object)new_AST_Send((Object)send24707, (Object)SMB__equal, 1, (Object)constant5659);
// position
send24709 = (Object)new_AST_Send((Object)localvariable3718, (Object)symbol4241, 0);
// should
send24710 = (Object)new_AST_Send((Object)send24709, (Object)symbol4250, 0);
smallint2519 = (Object)new_Type_SmallInt(13);
constant5660 = (Object)new_AST_Constant((Object)smallint2519);
// =
send24711 = (Object)new_AST_Send((Object)send24710, (Object)SMB__equal, 1, (Object)constant5660);
method4815 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3123, 33, assign2986, assign2987, assign2988, send24623, send24627, send24632, assign2989, send24636, send24640, send24645, send24649, send24653, send24656, assign2990, assign2991, send24661, send24664, send24667, assign2992, assign2993, send24672, send24676, send24680, send24684, assign2994, send24688, send24692, send24696, send24700, send24704, send24708, send24711, Self);
symbol3950 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure4803 = (Object)new_Runtime_MethodClosure(method4815);
store_method((Type_Class)class751, (Type_Symbol)symbol3950, (Runtime_MethodClosure)methodclosure4803);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable3720 = (Object)new_AST_Variable_named(L"parser");
localvariable3721 = (Object)new_AST_Variable_named(L"string");
localvariable3722 = (Object)new_AST_Variable_named(L"result");
array3124 = (Object)new_Type_Array_with(3, (Object)localvariable3720, (Object)localvariable3721, (Object)localvariable3722);
// array
send24712 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4335, 0);
assign2995 = (Object)new_AST_Assign((Object)localvariable3720, (Object)send24712);
string2730 = (Object)new_Type_String(L"()");
constant5661 = (Object)new_AST_Constant((Object)string2730);
// on:
send24713 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5661);
assign2996 = (Object)new_AST_Assign((Object)localvariable3721, (Object)send24713);
// match:
send24714 = (Object)new_AST_Send((Object)localvariable3720, (Object)symbol4196, 1, (Object)localvariable3721);
assign2997 = (Object)new_AST_Assign((Object)localvariable3722, (Object)send24714);
// class
send24715 = (Object)new_AST_Send((Object)localvariable3722, (Object)SMB_class, 0);
// should
send24716 = (Object)new_AST_Send((Object)send24715, (Object)symbol4250, 0);
// =
send24717 = (Object)new_AST_Send((Object)send24716, (Object)SMB__equal, 1, (Object)classreference1364);
// literals
send24718 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
// asArray
send24719 = (Object)new_AST_Send((Object)send24718, (Object)SMB_asArray, 0);
// should
send24720 = (Object)new_AST_Send((Object)send24719, (Object)symbol4250, 0);
// new
send24721 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3994, 0);
// =
send24722 = (Object)new_AST_Send((Object)send24720, (Object)SMB__equal, 1, (Object)send24721);
string2731 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant5662 = (Object)new_AST_Constant((Object)string2731);
// on:
send24723 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5662);
assign2998 = (Object)new_AST_Assign((Object)localvariable3721, (Object)send24723);
// match:
send24724 = (Object)new_AST_Send((Object)localvariable3720, (Object)symbol4196, 1, (Object)localvariable3721);
assign2999 = (Object)new_AST_Assign((Object)localvariable3722, (Object)send24724);
// class
send24725 = (Object)new_AST_Send((Object)localvariable3722, (Object)SMB_class, 0);
// should
send24726 = (Object)new_AST_Send((Object)send24725, (Object)symbol4250, 0);
// =
send24727 = (Object)new_AST_Send((Object)send24726, (Object)SMB__equal, 1, (Object)classreference1364);
// literals
send24728 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
// size
send24729 = (Object)new_AST_Send((Object)send24728, (Object)SMB_size, 0);
// should
send24730 = (Object)new_AST_Send((Object)send24729, (Object)symbol4250, 0);
smallint2520 = (Object)new_Type_SmallInt(5);
constant5663 = (Object)new_AST_Constant((Object)smallint2520);
// =
send24731 = (Object)new_AST_Send((Object)send24730, (Object)SMB__equal, 1, (Object)constant5663);
// literals
send24732 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
// first
send24733 = (Object)new_AST_Send((Object)send24732, (Object)symbol4041, 0);
// class
send24734 = (Object)new_AST_Send((Object)send24733, (Object)SMB_class, 0);
// should
send24735 = (Object)new_AST_Send((Object)send24734, (Object)symbol4250, 0);
// =
send24736 = (Object)new_AST_Send((Object)send24735, (Object)SMB__equal, 1, (Object)classreference1340);
// literals
send24737 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
// first
send24738 = (Object)new_AST_Send((Object)send24737, (Object)symbol4041, 0);
// number
send24739 = (Object)new_AST_Send((Object)send24738, (Object)symbol4048, 0);
// should
send24740 = (Object)new_AST_Send((Object)send24739, (Object)symbol4250, 0);
string2732 = (Object)new_Type_String(L"1");
constant5664 = (Object)new_AST_Constant((Object)string2732);
// =
send24741 = (Object)new_AST_Send((Object)send24740, (Object)SMB__equal, 1, (Object)constant5664);
// literals
send24742 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2521 = (Object)new_Type_SmallInt(2);
constant5665 = (Object)new_AST_Constant((Object)smallint2521);
// at:
send24743 = (Object)new_AST_Send((Object)send24742, (Object)SMB_at_, 1, (Object)constant5665);
// class
send24744 = (Object)new_AST_Send((Object)send24743, (Object)SMB_class, 0);
// should
send24745 = (Object)new_AST_Send((Object)send24744, (Object)symbol4250, 0);
// =
send24746 = (Object)new_AST_Send((Object)send24745, (Object)SMB__equal, 1, (Object)classreference1355);
// literals
send24747 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2522 = (Object)new_Type_SmallInt(2);
constant5666 = (Object)new_AST_Constant((Object)smallint2522);
// at:
send24748 = (Object)new_AST_Send((Object)send24747, (Object)SMB_at_, 1, (Object)constant5666);
// symbol
send24749 = (Object)new_AST_Send((Object)send24748, (Object)symbol4055, 0);
// should
send24750 = (Object)new_AST_Send((Object)send24749, (Object)symbol4250, 0);
string2733 = (Object)new_Type_String(L"a");
constant5667 = (Object)new_AST_Constant((Object)string2733);
// =
send24751 = (Object)new_AST_Send((Object)send24750, (Object)SMB__equal, 1, (Object)constant5667);
// literals
send24752 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2523 = (Object)new_Type_SmallInt(3);
constant5668 = (Object)new_AST_Constant((Object)smallint2523);
// at:
send24753 = (Object)new_AST_Send((Object)send24752, (Object)SMB_at_, 1, (Object)constant5668);
// class
send24754 = (Object)new_AST_Send((Object)send24753, (Object)SMB_class, 0);
// should
send24755 = (Object)new_AST_Send((Object)send24754, (Object)symbol4250, 0);
// =
send24756 = (Object)new_AST_Send((Object)send24755, (Object)SMB__equal, 1, (Object)classreference1355);
// literals
send24757 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2524 = (Object)new_Type_SmallInt(3);
constant5669 = (Object)new_AST_Constant((Object)smallint2524);
// at:
send24758 = (Object)new_AST_Send((Object)send24757, (Object)SMB_at_, 1, (Object)constant5669);
// symbol
send24759 = (Object)new_AST_Send((Object)send24758, (Object)symbol4055, 0);
// should
send24760 = (Object)new_AST_Send((Object)send24759, (Object)symbol4250, 0);
string2734 = (Object)new_Type_String(L"a");
constant5670 = (Object)new_AST_Constant((Object)string2734);
// =
send24761 = (Object)new_AST_Send((Object)send24760, (Object)SMB__equal, 1, (Object)constant5670);
// literals
send24762 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2525 = (Object)new_Type_SmallInt(4);
constant5671 = (Object)new_AST_Constant((Object)smallint2525);
// at:
send24763 = (Object)new_AST_Send((Object)send24762, (Object)SMB_at_, 1, (Object)constant5671);
// class
send24764 = (Object)new_AST_Send((Object)send24763, (Object)SMB_class, 0);
// should
send24765 = (Object)new_AST_Send((Object)send24764, (Object)symbol4250, 0);
// =
send24766 = (Object)new_AST_Send((Object)send24765, (Object)SMB__equal, 1, (Object)classreference1351);
// literals
send24767 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2526 = (Object)new_Type_SmallInt(4);
constant5672 = (Object)new_AST_Constant((Object)smallint2526);
// at:
send24768 = (Object)new_AST_Send((Object)send24767, (Object)SMB_at_, 1, (Object)constant5672);
// string
send24769 = (Object)new_AST_Send((Object)send24768, (Object)symbol4060, 0);
// should
send24770 = (Object)new_AST_Send((Object)send24769, (Object)symbol4250, 0);
string2735 = (Object)new_Type_String(L"b");
constant5673 = (Object)new_AST_Constant((Object)string2735);
// =
send24771 = (Object)new_AST_Send((Object)send24770, (Object)SMB__equal, 1, (Object)constant5673);
// literals
send24772 = (Object)new_AST_Send((Object)localvariable3722, (Object)symbol4033, 0);
smallint2527 = (Object)new_Type_SmallInt(5);
constant5674 = (Object)new_AST_Constant((Object)smallint2527);
// at:
send24773 = (Object)new_AST_Send((Object)send24772, (Object)SMB_at_, 1, (Object)constant5674);
// class
send24774 = (Object)new_AST_Send((Object)send24773, (Object)SMB_class, 0);
// should
send24775 = (Object)new_AST_Send((Object)send24774, (Object)symbol4250, 0);
// =
send24776 = (Object)new_AST_Send((Object)send24775, (Object)SMB__equal, 1, (Object)classreference1364);
method4816 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3124, 19, assign2995, assign2996, assign2997, send24717, send24722, assign2998, assign2999, send24727, send24731, send24736, send24741, send24746, send24751, send24756, send24761, send24766, send24771, send24776, Self);
symbol3919 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure4804 = (Object)new_Runtime_MethodClosure(method4816);
store_method((Type_Class)class751, (Type_Symbol)symbol3919, (Runtime_MethodClosure)methodclosure4804);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable3723 = (Object)new_AST_Variable_named(L"parser");
localvariable3724 = (Object)new_AST_Variable_named(L"string");
localvariable3725 = (Object)new_AST_Variable_named(L"result");
array3125 = (Object)new_Type_Array_with(3, (Object)localvariable3723, (Object)localvariable3724, (Object)localvariable3725);
// return
send24777 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4272, 0);
assign3000 = (Object)new_AST_Assign((Object)localvariable3723, (Object)send24777);
string2736 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant5675 = (Object)new_AST_Constant((Object)string2736);
// on:
send24778 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5675);
assign3001 = (Object)new_AST_Assign((Object)localvariable3724, (Object)send24778);
// match:
send24779 = (Object)new_AST_Send((Object)localvariable3723, (Object)symbol4196, 1, (Object)localvariable3724);
assign3002 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24779);
// class
send24780 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24781 = (Object)new_AST_Send((Object)send24780, (Object)symbol4250, 0);
// =
send24782 = (Object)new_AST_Send((Object)send24781, (Object)SMB__equal, 1, (Object)classreference1347);
// expression
send24783 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
assign3003 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24783);
// class
send24784 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24785 = (Object)new_AST_Send((Object)send24784, (Object)symbol4250, 0);
// =
send24786 = (Object)new_AST_Send((Object)send24785, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send24787 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// class
send24788 = (Object)new_AST_Send((Object)send24787, (Object)SMB_class, 0);
// should
send24789 = (Object)new_AST_Send((Object)send24788, (Object)symbol4250, 0);
// =
send24790 = (Object)new_AST_Send((Object)send24789, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send24791 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// name
send24792 = (Object)new_AST_Send((Object)send24791, (Object)SMB_name, 0);
// should
send24793 = (Object)new_AST_Send((Object)send24792, (Object)symbol4250, 0);
string2737 = (Object)new_Type_String(L"a");
constant5676 = (Object)new_AST_Constant((Object)string2737);
// =
send24794 = (Object)new_AST_Send((Object)send24793, (Object)SMB__equal, 1, (Object)constant5676);
// expression
send24795 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
assign3004 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24795);
// class
send24796 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24797 = (Object)new_AST_Send((Object)send24796, (Object)symbol4250, 0);
// =
send24798 = (Object)new_AST_Send((Object)send24797, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send24799 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// class
send24800 = (Object)new_AST_Send((Object)send24799, (Object)SMB_class, 0);
// should
send24801 = (Object)new_AST_Send((Object)send24800, (Object)symbol4250, 0);
// =
send24802 = (Object)new_AST_Send((Object)send24801, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send24803 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// name
send24804 = (Object)new_AST_Send((Object)send24803, (Object)SMB_name, 0);
// should
send24805 = (Object)new_AST_Send((Object)send24804, (Object)symbol4250, 0);
string2738 = (Object)new_Type_String(L"b");
constant5677 = (Object)new_AST_Constant((Object)string2738);
// =
send24806 = (Object)new_AST_Send((Object)send24805, (Object)SMB__equal, 1, (Object)constant5677);
// expression
send24807 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
assign3005 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24807);
// class
send24808 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24809 = (Object)new_AST_Send((Object)send24808, (Object)symbol4250, 0);
// =
send24810 = (Object)new_AST_Send((Object)send24809, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send24811 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// class
send24812 = (Object)new_AST_Send((Object)send24811, (Object)SMB_class, 0);
// should
send24813 = (Object)new_AST_Send((Object)send24812, (Object)symbol4250, 0);
// =
send24814 = (Object)new_AST_Send((Object)send24813, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send24815 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// name
send24816 = (Object)new_AST_Send((Object)send24815, (Object)SMB_name, 0);
// should
send24817 = (Object)new_AST_Send((Object)send24816, (Object)symbol4250, 0);
string2739 = (Object)new_Type_String(L"c");
constant5678 = (Object)new_AST_Constant((Object)string2739);
// =
send24818 = (Object)new_AST_Send((Object)send24817, (Object)SMB__equal, 1, (Object)constant5678);
// expression
send24819 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
// class
send24820 = (Object)new_AST_Send((Object)send24819, (Object)SMB_class, 0);
// should
send24821 = (Object)new_AST_Send((Object)send24820, (Object)symbol4250, 0);
// =
send24822 = (Object)new_AST_Send((Object)send24821, (Object)SMB__equal, 1, (Object)classreference1337);
string2740 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant5679 = (Object)new_AST_Constant((Object)string2740);
// on:
send24823 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5679);
assign3006 = (Object)new_AST_Assign((Object)localvariable3724, (Object)send24823);
// match:
send24824 = (Object)new_AST_Send((Object)localvariable3723, (Object)symbol4196, 1, (Object)localvariable3724);
assign3007 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24824);
// class
send24825 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24826 = (Object)new_AST_Send((Object)send24825, (Object)symbol4250, 0);
// =
send24827 = (Object)new_AST_Send((Object)send24826, (Object)SMB__equal, 1, (Object)classreference1347);
// expression
send24828 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
assign3008 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24828);
// class
send24829 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24830 = (Object)new_AST_Send((Object)send24829, (Object)symbol4250, 0);
// =
send24831 = (Object)new_AST_Send((Object)send24830, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send24832 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// class
send24833 = (Object)new_AST_Send((Object)send24832, (Object)SMB_class, 0);
// should
send24834 = (Object)new_AST_Send((Object)send24833, (Object)symbol4250, 0);
// =
send24835 = (Object)new_AST_Send((Object)send24834, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send24836 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// name
send24837 = (Object)new_AST_Send((Object)send24836, (Object)SMB_name, 0);
// should
send24838 = (Object)new_AST_Send((Object)send24837, (Object)symbol4250, 0);
string2741 = (Object)new_Type_String(L"a");
constant5680 = (Object)new_AST_Constant((Object)string2741);
// =
send24839 = (Object)new_AST_Send((Object)send24838, (Object)SMB__equal, 1, (Object)constant5680);
// expression
send24840 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
assign3009 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24840);
// class
send24841 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24842 = (Object)new_AST_Send((Object)send24841, (Object)symbol4250, 0);
// =
send24843 = (Object)new_AST_Send((Object)send24842, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send24844 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// class
send24845 = (Object)new_AST_Send((Object)send24844, (Object)SMB_class, 0);
// should
send24846 = (Object)new_AST_Send((Object)send24845, (Object)symbol4250, 0);
// =
send24847 = (Object)new_AST_Send((Object)send24846, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send24848 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// name
send24849 = (Object)new_AST_Send((Object)send24848, (Object)SMB_name, 0);
// should
send24850 = (Object)new_AST_Send((Object)send24849, (Object)symbol4250, 0);
string2742 = (Object)new_Type_String(L"b");
constant5681 = (Object)new_AST_Constant((Object)string2742);
// =
send24851 = (Object)new_AST_Send((Object)send24850, (Object)SMB__equal, 1, (Object)constant5681);
// expression
send24852 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
assign3010 = (Object)new_AST_Assign((Object)localvariable3725, (Object)send24852);
// class
send24853 = (Object)new_AST_Send((Object)localvariable3725, (Object)SMB_class, 0);
// should
send24854 = (Object)new_AST_Send((Object)send24853, (Object)symbol4250, 0);
// =
send24855 = (Object)new_AST_Send((Object)send24854, (Object)SMB__equal, 1, (Object)classreference1334);
// variable
send24856 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// class
send24857 = (Object)new_AST_Send((Object)send24856, (Object)SMB_class, 0);
// should
send24858 = (Object)new_AST_Send((Object)send24857, (Object)symbol4250, 0);
// =
send24859 = (Object)new_AST_Send((Object)send24858, (Object)SMB__equal, 1, (Object)classreference1336);
// variable
send24860 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4066, 0);
// name
send24861 = (Object)new_AST_Send((Object)send24860, (Object)SMB_name, 0);
// should
send24862 = (Object)new_AST_Send((Object)send24861, (Object)symbol4250, 0);
string2743 = (Object)new_Type_String(L"c");
constant5682 = (Object)new_AST_Constant((Object)string2743);
// =
send24863 = (Object)new_AST_Send((Object)send24862, (Object)SMB__equal, 1, (Object)constant5682);
// expression
send24864 = (Object)new_AST_Send((Object)localvariable3725, (Object)symbol4064, 0);
// class
send24865 = (Object)new_AST_Send((Object)send24864, (Object)SMB_class, 0);
// should
send24866 = (Object)new_AST_Send((Object)send24865, (Object)symbol4250, 0);
// =
send24867 = (Object)new_AST_Send((Object)send24866, (Object)SMB__equal, 1, (Object)classreference1337);
method4817 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3125, 34, assign3000, assign3001, assign3002, send24782, assign3003, send24786, send24790, send24794, assign3004, send24798, send24802, send24806, assign3005, send24810, send24814, send24818, send24822, assign3006, assign3007, send24827, assign3008, send24831, send24835, send24839, assign3009, send24843, send24847, send24851, assign3010, send24855, send24859, send24863, send24867, Self);
symbol3947 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure4805 = (Object)new_Runtime_MethodClosure(method4817);
store_method((Type_Class)class751, (Type_Symbol)symbol3947, (Runtime_MethodClosure)methodclosure4805);


// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable3726 = (Object)new_AST_Variable_named(L"parser");
localvariable3727 = (Object)new_AST_Variable_named(L"string");
localvariable3728 = (Object)new_AST_Variable_named(L"result");
localvariable3729 = (Object)new_AST_Variable_named(L"arg");
array3126 = (Object)new_Type_Array_with(4, (Object)localvariable3726, (Object)localvariable3727, (Object)localvariable3728, (Object)localvariable3729);
// keywordMessageExpression
send24868 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4303, 0);
assign3011 = (Object)new_AST_Assign((Object)localvariable3726, (Object)send24868);
string2744 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant5683 = (Object)new_AST_Constant((Object)string2744);
// on:
send24869 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5683);
assign3012 = (Object)new_AST_Assign((Object)localvariable3727, (Object)send24869);
// match:
send24870 = (Object)new_AST_Send((Object)localvariable3726, (Object)symbol4196, 1, (Object)localvariable3727);
assign3013 = (Object)new_AST_Assign((Object)localvariable3728, (Object)send24870);
// class
send24871 = (Object)new_AST_Send((Object)localvariable3728, (Object)SMB_class, 0);
// should
send24872 = (Object)new_AST_Send((Object)send24871, (Object)symbol4250, 0);
// =
send24873 = (Object)new_AST_Send((Object)send24872, (Object)SMB__equal, 1, (Object)classreference1337);
// keywords
send24874 = (Object)new_AST_Send((Object)localvariable3728, (Object)symbol4078, 0);
// asArray
send24875 = (Object)new_AST_Send((Object)send24874, (Object)SMB_asArray, 0);
// should
send24876 = (Object)new_AST_Send((Object)send24875, (Object)symbol4250, 0);
localvariable3730 = (Object)new_AST_Variable_named(L"receiver");
array3127 = (Object)new_Type_Array_with(1, (Object)localvariable3730);
smallint2528 = (Object)new_Type_SmallInt(1);
constant5684 = (Object)new_AST_Constant((Object)smallint2528);
string2745 = (Object)new_Type_String(L"abc");
constant5685 = (Object)new_AST_Constant((Object)string2745);
// at:put:
send24877 = (Object)new_AST_Send((Object)localvariable3730, (Object)SMB_at_put_, 2, (Object)constant5684, (Object)constant5685);
smallint2529 = (Object)new_Type_SmallInt(2);
constant5686 = (Object)new_AST_Constant((Object)smallint2529);
string2746 = (Object)new_Type_String(L"def");
constant5687 = (Object)new_AST_Constant((Object)string2746);
// at:put:
send24878 = (Object)new_AST_Send((Object)localvariable3730, (Object)SMB_at_put_, 2, (Object)constant5686, (Object)constant5687);
smallint2530 = (Object)new_Type_SmallInt(3);
constant5688 = (Object)new_AST_Constant((Object)smallint2530);
string2747 = (Object)new_Type_String(L"ghi");
constant5689 = (Object)new_AST_Constant((Object)string2747);
// at:put:
send24879 = (Object)new_AST_Send((Object)localvariable3730, (Object)SMB_at_put_, 2, (Object)constant5688, (Object)constant5689);
// yourself
send24880 = (Object)new_AST_Send((Object)localvariable3730, (Object)symbol3904, 0);
block1512 = (Object)new_AST_Block_with((Type_Array)array3127, (Type_Array)empty_Type_Array, 1, 4, send24877, send24878, send24879, send24880);
smallint2531 = (Object)new_Type_SmallInt(3);
constant5690 = (Object)new_AST_Constant((Object)smallint2531);
// new:
send24881 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5690);
// value:
send24882 = (Object)new_AST_Send((Object)block1512, (Object)SMB_value_, 1, (Object)send24881);
// =
send24883 = (Object)new_AST_Send((Object)send24876, (Object)SMB__equal, 1, (Object)send24882);
// arguments
send24884 = (Object)new_AST_Send((Object)localvariable3728, (Object)symbol4008, 0);
// first
send24885 = (Object)new_AST_Send((Object)send24884, (Object)symbol4041, 0);
assign3014 = (Object)new_AST_Assign((Object)localvariable3729, (Object)send24885);
// class
send24886 = (Object)new_AST_Send((Object)localvariable3729, (Object)SMB_class, 0);
// should
send24887 = (Object)new_AST_Send((Object)send24886, (Object)symbol4250, 0);
// =
send24888 = (Object)new_AST_Send((Object)send24887, (Object)SMB__equal, 1, (Object)classreference1340);
// arguments
send24889 = (Object)new_AST_Send((Object)localvariable3728, (Object)symbol4008, 0);
smallint2532 = (Object)new_Type_SmallInt(2);
constant5691 = (Object)new_AST_Constant((Object)smallint2532);
// at:
send24890 = (Object)new_AST_Send((Object)send24889, (Object)SMB_at_, 1, (Object)constant5691);
assign3015 = (Object)new_AST_Assign((Object)localvariable3729, (Object)send24890);
// class
send24891 = (Object)new_AST_Send((Object)localvariable3729, (Object)SMB_class, 0);
// should
send24892 = (Object)new_AST_Send((Object)send24891, (Object)symbol4250, 0);
// =
send24893 = (Object)new_AST_Send((Object)send24892, (Object)SMB__equal, 1, (Object)classreference1341);
// arguments
send24894 = (Object)new_AST_Send((Object)localvariable3728, (Object)symbol4008, 0);
smallint2533 = (Object)new_Type_SmallInt(3);
constant5692 = (Object)new_AST_Constant((Object)smallint2533);
// at:
send24895 = (Object)new_AST_Send((Object)send24894, (Object)SMB_at_, 1, (Object)constant5692);
assign3016 = (Object)new_AST_Assign((Object)localvariable3729, (Object)send24895);
// class
send24896 = (Object)new_AST_Send((Object)localvariable3729, (Object)SMB_class, 0);
// should
send24897 = (Object)new_AST_Send((Object)send24896, (Object)symbol4250, 0);
// =
send24898 = (Object)new_AST_Send((Object)send24897, (Object)SMB__equal, 1, (Object)classreference1342);
// position
send24899 = (Object)new_AST_Send((Object)localvariable3727, (Object)symbol4241, 0);
// should
send24900 = (Object)new_AST_Send((Object)send24899, (Object)symbol4250, 0);
smallint2534 = (Object)new_Type_SmallInt(25);
constant5693 = (Object)new_AST_Constant((Object)smallint2534);
// =
send24901 = (Object)new_AST_Send((Object)send24900, (Object)SMB__equal, 1, (Object)constant5693);
method4818 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3126, 13, assign3011, assign3012, assign3013, send24873, send24883, assign3014, send24888, assign3015, send24893, assign3016, send24898, send24901, Self);
symbol3939 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure4806 = (Object)new_Runtime_MethodClosure(method4818);
store_method((Type_Class)class751, (Type_Symbol)symbol3939, (Runtime_MethodClosure)methodclosure4806);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable3731 = (Object)new_AST_Variable_named(L"parser");
localvariable3732 = (Object)new_AST_Variable_named(L"string");
array3128 = (Object)new_Type_Array_with(2, (Object)localvariable3731, (Object)localvariable3732);
symbol4337 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send24902 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4337, 0);
assign3017 = (Object)new_AST_Assign((Object)localvariable3731, (Object)send24902);
string2748 = (Object)new_Type_String(L"Abcd ");
constant5694 = (Object)new_AST_Constant((Object)string2748);
// on:
send24903 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5694);
assign3018 = (Object)new_AST_Assign((Object)localvariable3732, (Object)send24903);
// match:
send24904 = (Object)new_AST_Send((Object)localvariable3731, (Object)symbol4196, 1, (Object)localvariable3732);
// should
send24905 = (Object)new_AST_Send((Object)send24904, (Object)symbol4250, 0);
string2749 = (Object)new_Type_String(L"Abcd");
constant5695 = (Object)new_AST_Constant((Object)string2749);
// =
send24906 = (Object)new_AST_Send((Object)send24905, (Object)SMB__equal, 1, (Object)constant5695);
// position
send24907 = (Object)new_AST_Send((Object)localvariable3732, (Object)symbol4241, 0);
// should
send24908 = (Object)new_AST_Send((Object)send24907, (Object)symbol4250, 0);
smallint2535 = (Object)new_Type_SmallInt(4);
constant5696 = (Object)new_AST_Constant((Object)smallint2535);
// =
send24909 = (Object)new_AST_Send((Object)send24908, (Object)SMB__equal, 1, (Object)constant5696);
string2750 = (Object)new_Type_String(L"AbCd145 ");
constant5697 = (Object)new_AST_Constant((Object)string2750);
// on:
send24910 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5697);
assign3019 = (Object)new_AST_Assign((Object)localvariable3732, (Object)send24910);
// match:
send24911 = (Object)new_AST_Send((Object)localvariable3731, (Object)symbol4196, 1, (Object)localvariable3732);
// should
send24912 = (Object)new_AST_Send((Object)send24911, (Object)symbol4250, 0);
string2751 = (Object)new_Type_String(L"AbCd145");
constant5698 = (Object)new_AST_Constant((Object)string2751);
// =
send24913 = (Object)new_AST_Send((Object)send24912, (Object)SMB__equal, 1, (Object)constant5698);
// position
send24914 = (Object)new_AST_Send((Object)localvariable3732, (Object)symbol4241, 0);
// should
send24915 = (Object)new_AST_Send((Object)send24914, (Object)symbol4250, 0);
smallint2536 = (Object)new_Type_SmallInt(7);
constant5699 = (Object)new_AST_Constant((Object)smallint2536);
// =
send24916 = (Object)new_AST_Send((Object)send24915, (Object)SMB__equal, 1, (Object)constant5699);
string2752 = (Object)new_Type_String(L"abcdD");
constant5700 = (Object)new_AST_Constant((Object)string2752);
// on:
send24917 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5700);
assign3020 = (Object)new_AST_Assign((Object)localvariable3732, (Object)send24917);
// match:
send24918 = (Object)new_AST_Send((Object)localvariable3731, (Object)symbol4196, 1, (Object)localvariable3732);
// should
send24919 = (Object)new_AST_Send((Object)send24918, (Object)symbol4250, 0);
// be
send24920 = (Object)new_AST_Send((Object)send24919, (Object)symbol4251, 0);
// isNil
send24921 = (Object)new_AST_Send((Object)send24920, (Object)SMB_isNil, 0);
// position
send24922 = (Object)new_AST_Send((Object)localvariable3732, (Object)symbol4241, 0);
// should
send24923 = (Object)new_AST_Send((Object)send24922, (Object)symbol4250, 0);
smallint2537 = (Object)new_Type_SmallInt(0);
constant5701 = (Object)new_AST_Constant((Object)smallint2537);
// =
send24924 = (Object)new_AST_Send((Object)send24923, (Object)SMB__equal, 1, (Object)constant5701);
method4819 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3128, 11, assign3017, assign3018, send24906, send24909, assign3019, send24913, send24916, assign3020, send24921, send24924, Self);
symbol3970 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure4807 = (Object)new_Runtime_MethodClosure(method4819);
store_method((Type_Class)class751, (Type_Symbol)symbol3970, (Runtime_MethodClosure)methodclosure4807);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable3733 = (Object)new_AST_Variable_named(L"parser");
localvariable3734 = (Object)new_AST_Variable_named(L"string");
localvariable3735 = (Object)new_AST_Variable_named(L"result");
array3129 = (Object)new_Type_Array_with(3, (Object)localvariable3733, (Object)localvariable3734, (Object)localvariable3735);
// keywordsArguments
send24925 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4300, 0);
assign3021 = (Object)new_AST_Assign((Object)localvariable3733, (Object)send24925);
string2753 = (Object)new_Type_String(L"test: ab");
constant5702 = (Object)new_AST_Constant((Object)string2753);
// on:
send24926 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5702);
assign3022 = (Object)new_AST_Assign((Object)localvariable3734, (Object)send24926);
// match:
send24927 = (Object)new_AST_Send((Object)localvariable3733, (Object)symbol4196, 1, (Object)localvariable3734);
assign3023 = (Object)new_AST_Assign((Object)localvariable3735, (Object)send24927);
// class
send24928 = (Object)new_AST_Send((Object)localvariable3735, (Object)SMB_class, 0);
// should
send24929 = (Object)new_AST_Send((Object)send24928, (Object)symbol4250, 0);
// =
send24930 = (Object)new_AST_Send((Object)send24929, (Object)SMB__equal, 1, (Object)classreference1344);
// keywords
send24931 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4078, 0);
// should
send24932 = (Object)new_AST_Send((Object)send24931, (Object)symbol4250, 0);
string2754 = (Object)new_Type_String(L"test");
constant5703 = (Object)new_AST_Constant((Object)string2754);
// with:
send24933 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol4038, 1, (Object)constant5703);
// =
send24934 = (Object)new_AST_Send((Object)send24932, (Object)SMB__equal, 1, (Object)send24933);
// parameters
send24935 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4076, 0);
// size
send24936 = (Object)new_AST_Send((Object)send24935, (Object)SMB_size, 0);
// should
send24937 = (Object)new_AST_Send((Object)send24936, (Object)symbol4250, 0);
smallint2538 = (Object)new_Type_SmallInt(1);
constant5704 = (Object)new_AST_Constant((Object)smallint2538);
// =
send24938 = (Object)new_AST_Send((Object)send24937, (Object)SMB__equal, 1, (Object)constant5704);
// parameters
send24939 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4076, 0);
// first
send24940 = (Object)new_AST_Send((Object)send24939, (Object)symbol4041, 0);
// should
send24941 = (Object)new_AST_Send((Object)send24940, (Object)symbol4250, 0);
// new
send24942 = (Object)new_AST_Send((Object)classreference1336, (Object)symbol3994, 0);
string2755 = (Object)new_Type_String(L"ab");
constant5705 = (Object)new_AST_Constant((Object)string2755);
// name:
send24943 = (Object)new_AST_Send((Object)send24942, (Object)symbol4071, 1, (Object)constant5705);
// =
send24944 = (Object)new_AST_Send((Object)send24941, (Object)SMB__equal, 1, (Object)send24943);
// position
send24945 = (Object)new_AST_Send((Object)localvariable3734, (Object)symbol4241, 0);
// should
send24946 = (Object)new_AST_Send((Object)send24945, (Object)symbol4250, 0);
smallint2539 = (Object)new_Type_SmallInt(8);
constant5706 = (Object)new_AST_Constant((Object)smallint2539);
// =
send24947 = (Object)new_AST_Send((Object)send24946, (Object)SMB__equal, 1, (Object)constant5706);
string2756 = (Object)new_Type_String(L"bla a");
constant5707 = (Object)new_AST_Constant((Object)string2756);
// on:
send24948 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5707);
assign3024 = (Object)new_AST_Assign((Object)localvariable3734, (Object)send24948);
// match:
send24949 = (Object)new_AST_Send((Object)localvariable3733, (Object)symbol4196, 1, (Object)localvariable3734);
// should
send24950 = (Object)new_AST_Send((Object)send24949, (Object)symbol4250, 0);
// be
send24951 = (Object)new_AST_Send((Object)send24950, (Object)symbol4251, 0);
// isNil
send24952 = (Object)new_AST_Send((Object)send24951, (Object)SMB_isNil, 0);
// position
send24953 = (Object)new_AST_Send((Object)localvariable3734, (Object)symbol4241, 0);
// should
send24954 = (Object)new_AST_Send((Object)send24953, (Object)symbol4250, 0);
smallint2540 = (Object)new_Type_SmallInt(0);
constant5708 = (Object)new_AST_Constant((Object)smallint2540);
// =
send24955 = (Object)new_AST_Send((Object)send24954, (Object)SMB__equal, 1, (Object)constant5708);
string2757 = (Object)new_Type_String(L"test: d bla: c boe");
constant5709 = (Object)new_AST_Constant((Object)string2757);
// on:
send24956 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5709);
assign3025 = (Object)new_AST_Assign((Object)localvariable3734, (Object)send24956);
// match:
send24957 = (Object)new_AST_Send((Object)localvariable3733, (Object)symbol4196, 1, (Object)localvariable3734);
assign3026 = (Object)new_AST_Assign((Object)localvariable3735, (Object)send24957);
// class
send24958 = (Object)new_AST_Send((Object)localvariable3735, (Object)SMB_class, 0);
// should
send24959 = (Object)new_AST_Send((Object)send24958, (Object)symbol4250, 0);
// =
send24960 = (Object)new_AST_Send((Object)send24959, (Object)SMB__equal, 1, (Object)classreference1344);
// keywords
send24961 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4078, 0);
// should
send24962 = (Object)new_AST_Send((Object)send24961, (Object)symbol4250, 0);
symbol4338 = (Object)new_Type_Symbol_cached(L"with:with:");
string2758 = (Object)new_Type_String(L"test");
constant5710 = (Object)new_AST_Constant((Object)string2758);
string2759 = (Object)new_Type_String(L"bla");
constant5711 = (Object)new_AST_Constant((Object)string2759);
// with:with:
send24963 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol4338, 2, (Object)constant5710, (Object)constant5711);
// =
send24964 = (Object)new_AST_Send((Object)send24962, (Object)SMB__equal, 1, (Object)send24963);
// parameters
send24965 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4076, 0);
// size
send24966 = (Object)new_AST_Send((Object)send24965, (Object)SMB_size, 0);
// should
send24967 = (Object)new_AST_Send((Object)send24966, (Object)symbol4250, 0);
smallint2541 = (Object)new_Type_SmallInt(2);
constant5712 = (Object)new_AST_Constant((Object)smallint2541);
// =
send24968 = (Object)new_AST_Send((Object)send24967, (Object)SMB__equal, 1, (Object)constant5712);
// parameters
send24969 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4076, 0);
// first
send24970 = (Object)new_AST_Send((Object)send24969, (Object)symbol4041, 0);
// should
send24971 = (Object)new_AST_Send((Object)send24970, (Object)symbol4250, 0);
// new
send24972 = (Object)new_AST_Send((Object)classreference1336, (Object)symbol3994, 0);
string2760 = (Object)new_Type_String(L"d");
constant5713 = (Object)new_AST_Constant((Object)string2760);
// name:
send24973 = (Object)new_AST_Send((Object)send24972, (Object)symbol4071, 1, (Object)constant5713);
// =
send24974 = (Object)new_AST_Send((Object)send24971, (Object)SMB__equal, 1, (Object)send24973);
// parameters
send24975 = (Object)new_AST_Send((Object)localvariable3735, (Object)symbol4076, 0);
// second
send24976 = (Object)new_AST_Send((Object)send24975, (Object)symbol4302, 0);
// should
send24977 = (Object)new_AST_Send((Object)send24976, (Object)symbol4250, 0);
// new
send24978 = (Object)new_AST_Send((Object)classreference1336, (Object)symbol3994, 0);
string2761 = (Object)new_Type_String(L"c");
constant5714 = (Object)new_AST_Constant((Object)string2761);
// name:
send24979 = (Object)new_AST_Send((Object)send24978, (Object)symbol4071, 1, (Object)constant5714);
// =
send24980 = (Object)new_AST_Send((Object)send24977, (Object)SMB__equal, 1, (Object)send24979);
// position
send24981 = (Object)new_AST_Send((Object)localvariable3734, (Object)symbol4241, 0);
// should
send24982 = (Object)new_AST_Send((Object)send24981, (Object)symbol4250, 0);
smallint2542 = (Object)new_Type_SmallInt(15);
constant5715 = (Object)new_AST_Constant((Object)smallint2542);
// =
send24983 = (Object)new_AST_Send((Object)send24982, (Object)SMB__equal, 1, (Object)constant5715);
method4820 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3129, 20, assign3021, assign3022, assign3023, send24930, send24934, send24938, send24944, send24947, assign3024, send24952, send24955, assign3025, assign3026, send24960, send24964, send24968, send24974, send24980, send24983, Self);
symbol3959 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure4808 = (Object)new_Runtime_MethodClosure(method4820);
store_method((Type_Class)class751, (Type_Symbol)symbol3959, (Runtime_MethodClosure)methodclosure4808);


// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable3736 = (Object)new_AST_Variable_named(L"parser");
localvariable3737 = (Object)new_AST_Variable_named(L"string");
array3130 = (Object)new_Type_Array_with(2, (Object)localvariable3736, (Object)localvariable3737);
// assignmentExpressions
send24984 = (Object)new_AST_Send((Object)instancevariable1525, (Object)symbol4310, 0);
assign3027 = (Object)new_AST_Assign((Object)localvariable3736, (Object)send24984);
string2762 = (Object)new_Type_String(L"a :=  b:= c := d");
constant5716 = (Object)new_AST_Constant((Object)string2762);
// on:
send24985 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5716);
assign3028 = (Object)new_AST_Assign((Object)localvariable3737, (Object)send24985);
// match:
send24986 = (Object)new_AST_Send((Object)localvariable3736, (Object)symbol4196, 1, (Object)localvariable3737);
constant5717 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send24987 = (Object)new_AST_Send((Object)send24986, (Object)symbol4264, 1, (Object)constant5717);
// asArray
send24988 = (Object)new_AST_Send((Object)send24987, (Object)SMB_asArray, 0);
// should
send24989 = (Object)new_AST_Send((Object)send24988, (Object)symbol4250, 0);
localvariable3738 = (Object)new_AST_Variable_named(L"receiver");
array3131 = (Object)new_Type_Array_with(1, (Object)localvariable3738);
smallint2543 = (Object)new_Type_SmallInt(1);
constant5718 = (Object)new_AST_Constant((Object)smallint2543);
string2763 = (Object)new_Type_String(L"a");
constant5719 = (Object)new_AST_Constant((Object)string2763);
// at:put:
send24990 = (Object)new_AST_Send((Object)localvariable3738, (Object)SMB_at_put_, 2, (Object)constant5718, (Object)constant5719);
smallint2544 = (Object)new_Type_SmallInt(2);
constant5720 = (Object)new_AST_Constant((Object)smallint2544);
string2764 = (Object)new_Type_String(L"b");
constant5721 = (Object)new_AST_Constant((Object)string2764);
// at:put:
send24991 = (Object)new_AST_Send((Object)localvariable3738, (Object)SMB_at_put_, 2, (Object)constant5720, (Object)constant5721);
smallint2545 = (Object)new_Type_SmallInt(3);
constant5722 = (Object)new_AST_Constant((Object)smallint2545);
string2765 = (Object)new_Type_String(L"c");
constant5723 = (Object)new_AST_Constant((Object)string2765);
// at:put:
send24992 = (Object)new_AST_Send((Object)localvariable3738, (Object)SMB_at_put_, 2, (Object)constant5722, (Object)constant5723);
// yourself
send24993 = (Object)new_AST_Send((Object)localvariable3738, (Object)symbol3904, 0);
block1513 = (Object)new_AST_Block_with((Type_Array)array3131, (Type_Array)empty_Type_Array, 1, 4, send24990, send24991, send24992, send24993);
smallint2546 = (Object)new_Type_SmallInt(3);
constant5724 = (Object)new_AST_Constant((Object)smallint2546);
// new:
send24994 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3987, 1, (Object)constant5724);
// value:
send24995 = (Object)new_AST_Send((Object)block1513, (Object)SMB_value_, 1, (Object)send24994);
// =
send24996 = (Object)new_AST_Send((Object)send24989, (Object)SMB__equal, 1, (Object)send24995);
// position
send24997 = (Object)new_AST_Send((Object)localvariable3737, (Object)symbol4241, 0);
// should
send24998 = (Object)new_AST_Send((Object)send24997, (Object)symbol4250, 0);
smallint2547 = (Object)new_Type_SmallInt(15);
constant5725 = (Object)new_AST_Constant((Object)smallint2547);
// =
send24999 = (Object)new_AST_Send((Object)send24998, (Object)SMB__equal, 1, (Object)constant5725);
string2766 = (Object)new_Type_String(L"");
constant5726 = (Object)new_AST_Constant((Object)string2766);
// on:
send25000 = (Object)new_AST_Send((Object)classreference1322, (Object)SMB_on_, 1, (Object)constant5726);
assign3029 = (Object)new_AST_Assign((Object)localvariable3737, (Object)send25000);
// match:
send25001 = (Object)new_AST_Send((Object)localvariable3736, (Object)symbol4196, 1, (Object)localvariable3737);
// should
send25002 = (Object)new_AST_Send((Object)send25001, (Object)symbol4250, 0);
// not
send25003 = (Object)new_AST_Send((Object)send25002, (Object)SMB_not, 0);
// be
send25004 = (Object)new_AST_Send((Object)send25003, (Object)symbol4251, 0);
// isNil
send25005 = (Object)new_AST_Send((Object)send25004, (Object)SMB_isNil, 0);
method4821 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3130, 7, assign3027, assign3028, send24996, send24999, assign3029, send25005, Self);
symbol3940 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure4809 = (Object)new_Runtime_MethodClosure(method4821);
store_method((Type_Class)class751, (Type_Symbol)symbol3940, (Runtime_MethodClosure)methodclosure4809);

classreference1366 = (Object)new_Organization_ClassReference((Type_Class)class751);
classreference1367 = (Object)new_Organization_ClassReference((Type_Class)class757);

// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable3739 = (Object)new_AST_Variable_named(L"aSelector");
array3132 = (Object)new_Type_Array_with(1, (Object)localvariable3739);
// selectorName
send25006 = (Object)new_AST_Send((Object)Self, (Object)symbol4077, 0);
// selectorName
send25007 = (Object)new_AST_Send((Object)localvariable3739, (Object)symbol4077, 0);
// =
send25008 = (Object)new_AST_Send((Object)send25006, (Object)SMB__equal, 1, (Object)send25007);
method4822 = (Object)new_AST_Method_with((Type_Array)array3132, (Type_Array)empty_Type_Array, 1, send25008);
methodclosure4810 = (Object)new_Runtime_MethodClosure(method4822);
store_method((Type_Class)class758, (Type_Symbol)symbol4074, (Runtime_MethodClosure)methodclosure4810);


// ASTSelector>>parameters
//parameters
// 	^ Array new.
// new
send25009 = (Object)new_AST_Send((Object)classreference1321, (Object)symbol3994, 0);
method4823 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25009);
methodclosure4811 = (Object)new_Runtime_MethodClosure(method4823);
store_method((Type_Class)class758, (Type_Symbol)symbol4076, (Runtime_MethodClosure)methodclosure4811);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send25010 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// asString
send25011 = (Object)new_AST_Send((Object)send25010, (Object)SMB_asString, 0);
method4824 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25011);
methodclosure4812 = (Object)new_Runtime_MethodClosure(method4824);
store_method((Type_Class)class758, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure4812);


// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable3740 = (Object)new_AST_Variable_named(L"anObject");
array3133 = (Object)new_Type_Array_with(1, (Object)localvariable3740);
localvariable3741 = (Object)new_AST_Variable_named(L"string");
array3134 = (Object)new_Type_Array_with(1, (Object)localvariable3741);
assign3030 = (Object)new_AST_Assign((Object)instancevariable1535, (Object)localvariable3740);
// asString
send25012 = (Object)new_AST_Send((Object)instancevariable1535, (Object)SMB_asString, 0);
assign3031 = (Object)new_AST_Assign((Object)localvariable3741, (Object)send25012);
// size
send25013 = (Object)new_AST_Send((Object)localvariable3741, (Object)SMB_size, 0);
smallint2548 = (Object)new_Type_SmallInt(1);
constant5727 = (Object)new_AST_Constant((Object)smallint2548);
// >
send25014 = (Object)new_AST_Send((Object)send25013, (Object)SMB__gt, 1, (Object)constant5727);
// size
send25015 = (Object)new_AST_Send((Object)localvariable3741, (Object)SMB_size, 0);
smallint2549 = (Object)new_Type_SmallInt(1);
constant5728 = (Object)new_AST_Constant((Object)smallint2549);
// -
send25016 = (Object)new_AST_Send((Object)send25015, (Object)SMB__minus, 1, (Object)constant5728);
// at:
send25017 = (Object)new_AST_Send((Object)localvariable3741, (Object)SMB_at_, 1, (Object)send25016);
// should
send25018 = (Object)new_AST_Send((Object)send25017, (Object)symbol4250, 0);
// not
send25019 = (Object)new_AST_Send((Object)send25018, (Object)SMB_not, 0);
string2767 = (Object)new_Type_String(L":");
constant5729 = (Object)new_AST_Constant((Object)string2767);
// =
send25020 = (Object)new_AST_Send((Object)send25019, (Object)SMB__equal, 1, (Object)constant5729);
block1514 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send25020);
// ifTrue:
send25021 = (Object)new_AST_Send((Object)send25014, (Object)SMB_ifTrue_, 1, (Object)block1514);
method4825 = (Object)new_AST_Method_with((Type_Array)array3133, (Type_Array)array3134, 4, assign3030, assign3031, send25021, Self);
methodclosure4813 = (Object)new_Runtime_MethodClosure(method4825);
store_method((Type_Class)class758, (Type_Symbol)symbol4075, (Runtime_MethodClosure)methodclosure4813);


// ASTSelector>>selector
//selector
// 	^ selector
method4826 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1535);
methodclosure4814 = (Object)new_Runtime_MethodClosure(method4826);
store_method((Type_Class)class758, (Type_Symbol)symbol4007, (Runtime_MethodClosure)methodclosure4814);


// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable3742 = (Object)new_AST_Variable_named(L"aStream");
array3135 = (Object)new_Type_Array_with(1, (Object)localvariable3742);
// selector
send25022 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// printOn:
send25023 = (Object)new_AST_Send((Object)send25022, (Object)symbol4003, 1, (Object)localvariable3742);
method4827 = (Object)new_AST_Method_with((Type_Array)array3135, (Type_Array)empty_Type_Array, 2, send25023, Self);
methodclosure4815 = (Object)new_Runtime_MethodClosure(method4827);
store_method((Type_Class)class758, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4815);


// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send25024 = (Object)new_AST_Send((Object)Self, (Object)symbol4007, 0);
// printString
send25025 = (Object)new_AST_Send((Object)send25024, (Object)symbol4198, 0);
method4828 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send25025, Self);
methodclosure4816 = (Object)new_Runtime_MethodClosure(method4828);
store_method((Type_Class)class758, (Type_Symbol)symbol4077, (Runtime_MethodClosure)methodclosure4816);

classreference1368 = (Object)new_Organization_ClassReference((Type_Class)class758);

// ASTNode>>sourceObject
//sourceObject
// 	^ sourceObject
method4829 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1530);
symbol4026 = (Object)new_Type_Symbol_cached(L"sourceObject");
methodclosure4817 = (Object)new_Runtime_MethodClosure(method4829);
store_method((Type_Class)class753, (Type_Symbol)symbol4026, (Runtime_MethodClosure)methodclosure4817);


// ASTNode>>uid
//uid
// 	uid isNil ifTrue: [ uid := self class uidFor: self].
// 	^ uid
// isNil
send25026 = (Object)new_AST_Send((Object)instancevariable1531, (Object)SMB_isNil, 0);
// class
send25027 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol4339 = (Object)new_Type_Symbol_cached(L"uidFor:");
// uidFor:
send25028 = (Object)new_AST_Send((Object)send25027, (Object)symbol4339, 1, (Object)Self);
assign3032 = (Object)new_AST_Assign((Object)instancevariable1531, (Object)send25028);
block1515 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign3032);
// ifTrue:
send25029 = (Object)new_AST_Send((Object)send25026, (Object)SMB_ifTrue_, 1, (Object)block1515);
method4830 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send25029, instancevariable1531);
symbol4030 = (Object)new_Type_Symbol_cached(L"uid");
methodclosure4818 = (Object)new_Runtime_MethodClosure(method4830);
store_method((Type_Class)class753, (Type_Symbol)symbol4030, (Runtime_MethodClosure)methodclosure4818);


// ASTNode>>astName
//astName
// 	^ (self class name 
// 			copyFrom: 4
// 			to: self class name size) capitalized
// class
send25030 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send25031 = (Object)new_AST_Send((Object)send25030, (Object)SMB_name, 0);
symbol4340 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");
smallint2550 = (Object)new_Type_SmallInt(4);
constant5730 = (Object)new_AST_Constant((Object)smallint2550);
// class
send25032 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send25033 = (Object)new_AST_Send((Object)send25032, (Object)SMB_name, 0);
// size
send25034 = (Object)new_AST_Send((Object)send25033, (Object)SMB_size, 0);
// copyFrom:to:
send25035 = (Object)new_AST_Send((Object)send25031, (Object)symbol4340, 2, (Object)constant5730, (Object)send25034);
// capitalized
send25036 = (Object)new_AST_Send((Object)send25035, (Object)symbol4314, 0);
method4831 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25036);
symbol4027 = (Object)new_Type_Symbol_cached(L"astName");
methodclosure4819 = (Object)new_Runtime_MethodClosure(method4831);
store_method((Type_Class)class753, (Type_Symbol)symbol4027, (Runtime_MethodClosure)methodclosure4819);


// ASTNode>>isReturnExpression
//isReturnExpression
// 	^ false
method4832 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4820 = (Object)new_Runtime_MethodClosure(method4832);
store_method((Type_Class)class753, (Type_Symbol)symbol3903, (Runtime_MethodClosure)methodclosure4820);


// ASTNode>>argumentOfBinary:
//argumentOfBinary: binary
// 	^ binary argument: self
localvariable3743 = (Object)new_AST_Variable_named(L"binary");
array3136 = (Object)new_Type_Array_with(1, (Object)localvariable3743);
// argument:
send25037 = (Object)new_AST_Send((Object)localvariable3743, (Object)symbol4085, 1, (Object)Self);
method4833 = (Object)new_AST_Method_with((Type_Array)array3136, (Type_Array)empty_Type_Array, 1, send25037);
methodclosure4821 = (Object)new_Runtime_MethodClosure(method4833);
store_method((Type_Class)class753, (Type_Symbol)symbol4024, (Runtime_MethodClosure)methodclosure4821);


// ASTNode>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable3744 = (Object)new_AST_Variable_named(L"aMessage");
array3137 = (Object)new_Type_Array_with(1, (Object)localvariable3744);
localvariable3745 = (Object)new_AST_Variable_named(L"selector");
array3138 = (Object)new_Type_Array_with(1, (Object)localvariable3745);
variable191 = (Object)new_AST_Variable_named(L"return");
array3139 = (Object)new_Type_Array_with(1, (Object)variable191);
// selector
send25038 = (Object)new_AST_Send((Object)localvariable3744, (Object)symbol4007, 0);
symbol4341 = (Object)new_Type_Symbol_cached(L"accept:");
constant5731 = (Object)new_AST_Constant((Object)symbol4341);
// =
send25039 = (Object)new_AST_Send((Object)send25038, (Object)SMB__equal, 1, (Object)constant5731);
super374 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3744);
// escape:
send25040 = (Object)new_AST_Send((Object)variable191, (Object)SMB_escape_, 1, (Object)super374);
block1516 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send25040);
// ifFalse:
send25041 = (Object)new_AST_Send((Object)send25039, (Object)SMB_ifFalse_, 1, (Object)block1516);
string2768 = (Object)new_Type_String(L"visit");
constant5732 = (Object)new_AST_Constant((Object)string2768);
// class
send25042 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send25043 = (Object)new_AST_Send((Object)send25042, (Object)SMB_name, 0);
smallint2551 = (Object)new_Type_SmallInt(4);
constant5733 = (Object)new_AST_Constant((Object)smallint2551);
// class
send25044 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send25045 = (Object)new_AST_Send((Object)send25044, (Object)SMB_name, 0);
// size
send25046 = (Object)new_AST_Send((Object)send25045, (Object)SMB_size, 0);
// copyFrom:to:
send25047 = (Object)new_AST_Send((Object)send25043, (Object)symbol4340, 2, (Object)constant5733, (Object)send25046);
// ,
send25048 = (Object)new_AST_Send((Object)constant5732, (Object)SMB__concat, 1, (Object)send25047);
string2769 = (Object)new_Type_String(L":");
constant5734 = (Object)new_AST_Constant((Object)string2769);
// ,
send25049 = (Object)new_AST_Send((Object)send25048, (Object)SMB__concat, 1, (Object)constant5734);
// asSymbol
send25050 = (Object)new_AST_Send((Object)send25049, (Object)SMB_asSymbol, 0);
assign3033 = (Object)new_AST_Assign((Object)localvariable3745, (Object)send25050);
// argument
send25051 = (Object)new_AST_Send((Object)localvariable3744, (Object)symbol4086, 0);
symbol4342 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send25052 = (Object)new_AST_Send((Object)send25051, (Object)symbol4342, 2, (Object)localvariable3745, (Object)Self);
block1517 = (Object)new_AST_Block_with((Type_Array)array3139, (Type_Array)empty_Type_Array, 1, 3, send25041, assign3033, send25052);
// on:
send25053 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1517);
method4834 = (Object)new_AST_Method_with((Type_Array)array3137, (Type_Array)array3138, 1, send25053);
methodclosure4822 = (Object)new_Runtime_MethodClosure(method4834);
store_method((Type_Class)class753, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4822);


// ASTNode>>sourceObject:
//sourceObject: anObject
// 	sourceObject := anObject
localvariable3746 = (Object)new_AST_Variable_named(L"anObject");
array3140 = (Object)new_Type_Array_with(1, (Object)localvariable3746);
assign3034 = (Object)new_AST_Assign((Object)instancevariable1530, (Object)localvariable3746);
method4835 = (Object)new_AST_Method_with((Type_Array)array3140, (Type_Array)empty_Type_Array, 2, assign3034, Self);
symbol4028 = (Object)new_Type_Symbol_cached(L"sourceObject:");
methodclosure4823 = (Object)new_Runtime_MethodClosure(method4835);
store_method((Type_Class)class753, (Type_Symbol)symbol4028, (Runtime_MethodClosure)methodclosure4823);


// ASTNode>>astType
//astType
// 	^ 'Type'
string2770 = (Object)new_Type_String(L"Type");
constant5735 = (Object)new_AST_Constant((Object)string2770);
method4836 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant5735);
symbol4029 = (Object)new_Type_Symbol_cached(L"astType");
methodclosure4824 = (Object)new_Runtime_MethodClosure(method4836);
store_method((Type_Class)class753, (Type_Symbol)symbol4029, (Runtime_MethodClosure)methodclosure4824);


// ASTNode>>hasReturnExpression
//hasReturnExpression
// 	^ false
method4837 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4825 = (Object)new_Runtime_MethodClosure(method4837);
store_method((Type_Class)class753, (Type_Symbol)symbol4025, (Runtime_MethodClosure)methodclosure4825);

classreference1369 = (Object)new_Organization_ClassReference((Type_Class)class753);
classreference1370 = (Object)new_Organization_ClassReference((Type_Class)class763);

// Message>>selector
//selector 
// 	^ selector
instancevariable1582 = (Object)new_AST_InstVariable(0, L"selector");
method4838 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1582);
methodclosure4826 = (Object)new_Runtime_MethodClosure(method4838);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol4007, (Runtime_MethodClosure)methodclosure4826);


// Message>>arguments
//arguments
// 	^ self
method4839 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4827 = (Object)new_Runtime_MethodClosure(method4839);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol4008, (Runtime_MethodClosure)methodclosure4827);

classreference1371 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// Nil>>isNil
//isNil
// 	^ true
method4840 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure4828 = (Object)new_Runtime_MethodClosure(method4840);
store_method((Type_Class)class785, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure4828);

classreference1372 = (Object)new_Organization_ClassReference((Type_Class)class785);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable3747 = (Object)new_AST_Variable_named(L"aMessage");
array3141 = (Object)new_Type_Array_with(1, (Object)localvariable3747);
localvariable3748 = (Object)new_AST_Variable_named(L"selector");
array3142 = (Object)new_Type_Array_with(1, (Object)localvariable3748);
variable192 = (Object)new_AST_Variable_named(L"return");
array3143 = (Object)new_Type_Array_with(1, (Object)variable192);
// selector
send25054 = (Object)new_AST_Send((Object)localvariable3747, (Object)symbol4007, 0);
constant5736 = (Object)new_AST_Constant((Object)symbol4341);
// =
send25055 = (Object)new_AST_Send((Object)send25054, (Object)SMB__equal, 1, (Object)constant5736);
super375 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3747);
// escape:
send25056 = (Object)new_AST_Send((Object)variable192, (Object)SMB_escape_, 1, (Object)super375);
block1518 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send25056);
// ifFalse:
send25057 = (Object)new_AST_Send((Object)send25055, (Object)SMB_ifFalse_, 1, (Object)block1518);
string2771 = (Object)new_Type_String(L"visit");
constant5737 = (Object)new_AST_Constant((Object)string2771);
symbol3905 = (Object)new_Type_Symbol_cached(L"objectName");
// objectName
send25058 = (Object)new_AST_Send((Object)Self, (Object)symbol3905, 0);
// ,
send25059 = (Object)new_AST_Send((Object)constant5737, (Object)SMB__concat, 1, (Object)send25058);
string2772 = (Object)new_Type_String(L":");
constant5738 = (Object)new_AST_Constant((Object)string2772);
// ,
send25060 = (Object)new_AST_Send((Object)send25059, (Object)SMB__concat, 1, (Object)constant5738);
// asSymbol
send25061 = (Object)new_AST_Send((Object)send25060, (Object)SMB_asSymbol, 0);
assign3035 = (Object)new_AST_Assign((Object)localvariable3748, (Object)send25061);
// argument
send25062 = (Object)new_AST_Send((Object)localvariable3747, (Object)symbol4086, 0);
// perform:with:
send25063 = (Object)new_AST_Send((Object)send25062, (Object)symbol4342, 2, (Object)localvariable3748, (Object)Self);
block1519 = (Object)new_AST_Block_with((Type_Array)array3143, (Type_Array)empty_Type_Array, 1, 3, send25057, assign3035, send25063);
// on:
send25064 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1519);
method4841 = (Object)new_AST_Method_with((Type_Array)array3141, (Type_Array)array3142, 1, send25064);
methodclosure4829 = (Object)new_Runtime_MethodClosure(method4841);
store_method((Type_Class)class782, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4829);

classreference1373 = (Object)new_Organization_ClassReference((Type_Class)class782);
classreference1374 = (Object)new_Organization_ClassReference((Type_Class)class790);

// Variable>>scopeId
//scopeId
// 	^ scopeId
method4842 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1571);
symbol4212 = (Object)new_Type_Symbol_cached(L"scopeId");
methodclosure4830 = (Object)new_Runtime_MethodClosure(method4842);
store_method((Type_Class)class788, (Type_Symbol)symbol4212, (Runtime_MethodClosure)methodclosure4830);


// Variable>>localId
//localId
// 	^ localId
method4843 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1572);
symbol4211 = (Object)new_Type_Symbol_cached(L"localId");
methodclosure4831 = (Object)new_Runtime_MethodClosure(method4843);
store_method((Type_Class)class788, (Type_Symbol)symbol4211, (Runtime_MethodClosure)methodclosure4831);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method4844 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4832 = (Object)new_Runtime_MethodClosure(method4844);
store_method((Type_Class)class788, (Type_Symbol)symbol4069, (Runtime_MethodClosure)methodclosure4832);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable3749 = (Object)new_AST_Variable_named(L"anObject");
array3144 = (Object)new_Type_Array_with(1, (Object)localvariable3749);
assign3036 = (Object)new_AST_Assign((Object)instancevariable1570, (Object)localvariable3749);
method4845 = (Object)new_AST_Method_with((Type_Array)array3144, (Type_Array)empty_Type_Array, 2, assign3036, Self);
methodclosure4833 = (Object)new_Runtime_MethodClosure(method4845);
store_method((Type_Class)class788, (Type_Symbol)symbol4071, (Runtime_MethodClosure)methodclosure4833);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable3750 = (Object)new_AST_Variable_named(L"anObject");
array3145 = (Object)new_Type_Array_with(1, (Object)localvariable3750);
assign3037 = (Object)new_AST_Assign((Object)instancevariable1572, (Object)localvariable3750);
method4846 = (Object)new_AST_Method_with((Type_Array)array3145, (Type_Array)empty_Type_Array, 2, assign3037, Self);
symbol4210 = (Object)new_Type_Symbol_cached(L"localId:");
methodclosure4834 = (Object)new_Runtime_MethodClosure(method4846);
store_method((Type_Class)class788, (Type_Symbol)symbol4210, (Runtime_MethodClosure)methodclosure4834);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable3751 = (Object)new_AST_Variable_named(L"aStream");
array3146 = (Object)new_Type_Array_with(1, (Object)localvariable3751);
super376 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3751);
string2773 = (Object)new_Type_String(L" ");
constant5739 = (Object)new_AST_Constant((Object)string2773);
// nextPutAll:
send25065 = (Object)new_AST_Send((Object)localvariable3751, (Object)symbol4238, 1, (Object)constant5739);
// name
send25066 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send25067 = (Object)new_AST_Send((Object)send25066, (Object)symbol4003, 1, (Object)localvariable3751);
string2774 = (Object)new_Type_String(L" ");
constant5740 = (Object)new_AST_Constant((Object)string2774);
// nextPutAll:
send25068 = (Object)new_AST_Send((Object)localvariable3751, (Object)symbol4238, 1, (Object)constant5740);
// scopeId
send25069 = (Object)new_AST_Send((Object)Self, (Object)symbol4212, 0);
// printOn:
send25070 = (Object)new_AST_Send((Object)send25069, (Object)symbol4003, 1, (Object)localvariable3751);
string2775 = (Object)new_Type_String(L"@");
constant5741 = (Object)new_AST_Constant((Object)string2775);
// nextPutAll:
send25071 = (Object)new_AST_Send((Object)localvariable3751, (Object)symbol4238, 1, (Object)constant5741);
// localId
send25072 = (Object)new_AST_Send((Object)Self, (Object)symbol4211, 0);
// printOn:
send25073 = (Object)new_AST_Send((Object)send25072, (Object)symbol4003, 1, (Object)localvariable3751);
method4847 = (Object)new_AST_Method_with((Type_Array)array3146, (Type_Array)empty_Type_Array, 8, super376, send25065, send25067, send25068, send25070, send25071, send25073, Self);
methodclosure4835 = (Object)new_Runtime_MethodClosure(method4847);
store_method((Type_Class)class788, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4835);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable3752 = (Object)new_AST_Variable_named(L"anObject");
array3147 = (Object)new_Type_Array_with(1, (Object)localvariable3752);
assign3038 = (Object)new_AST_Assign((Object)instancevariable1571, (Object)localvariable3752);
method4848 = (Object)new_AST_Method_with((Type_Array)array3147, (Type_Array)empty_Type_Array, 2, assign3038, Self);
symbol4209 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure4836 = (Object)new_Runtime_MethodClosure(method4848);
store_method((Type_Class)class788, (Type_Symbol)symbol4209, (Runtime_MethodClosure)methodclosure4836);


// Variable>>name
//name
// 	^ name
method4849 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1570);
methodclosure4837 = (Object)new_Runtime_MethodClosure(method4849);
store_method((Type_Class)class788, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4837);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable3753 = (Object)new_AST_Variable_named(L"aSymbol");
array3148 = (Object)new_Type_Array_with(1, (Object)localvariable3753);
// new
send25074 = (Object)new_AST_Send((Object)Self, (Object)symbol3994, 0);
// asSymbol
send25075 = (Object)new_AST_Send((Object)localvariable3753, (Object)SMB_asSymbol, 0);
// name:
send25076 = (Object)new_AST_Send((Object)send25074, (Object)symbol4071, 1, (Object)send25075);
method4850 = (Object)new_AST_Method_with((Type_Array)array3148, (Type_Array)empty_Type_Array, 1, send25076);
methodclosure4838 = (Object)new_Runtime_MethodClosure(method4850);
store_method((Type_Class)metaclass788, (Type_Symbol)symbol4208, (Runtime_MethodClosure)methodclosure4838);

classreference1375 = (Object)new_Organization_ClassReference((Type_Class)class788);

// Class>>package
//package
// 	^ package
instancevariable1583 = (Object)new_AST_InstVariable(4, L"package");
method4851 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1583);
symbol4004 = (Object)new_Type_Symbol_cached(L"package");
methodclosure4839 = (Object)new_Runtime_MethodClosure(method4851);
store_method((Type_Class)Class, (Type_Symbol)symbol4004, (Runtime_MethodClosure)methodclosure4839);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable3754 = (Object)new_AST_Variable_named(L"aStream");
array3149 = (Object)new_Type_Array_with(1, (Object)localvariable3754);
super377 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3754);
string2776 = (Object)new_Type_String(L" ");
constant5742 = (Object)new_AST_Constant((Object)string2776);
// nextPutAll:
send25077 = (Object)new_AST_Send((Object)localvariable3754, (Object)symbol4238, 1, (Object)constant5742);
// name
send25078 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send25079 = (Object)new_AST_Send((Object)send25078, (Object)symbol4003, 1, (Object)localvariable3754);
method4852 = (Object)new_AST_Method_with((Type_Array)array3149, (Type_Array)empty_Type_Array, 4, super377, send25077, send25079, Self);
methodclosure4840 = (Object)new_Runtime_MethodClosure(method4852);
store_method((Type_Class)Class, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4840);


// Class>>name
//name 
// 	^ name
instancevariable1584 = (Object)new_AST_InstVariable(3, L"name");
method4853 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1584);
methodclosure4841 = (Object)new_Runtime_MethodClosure(method4853);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure4841);

classreference1376 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable3755 = (Object)new_AST_Variable_named(L"aStream");
array3150 = (Object)new_Type_Array_with(1, (Object)localvariable3755);
super378 = (Object)new_AST_Super((Object)symbol4003, 1, (Object)localvariable3755);
symbol4343 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send25080 = (Object)new_AST_Send((Object)Self, (Object)symbol4343, 0);
// name
send25081 = (Object)new_AST_Send((Object)send25080, (Object)SMB_name, 0);
// printOn:
send25082 = (Object)new_AST_Send((Object)send25081, (Object)symbol4003, 1, (Object)localvariable3755);
method4854 = (Object)new_AST_Method_with((Type_Array)array3150, (Type_Array)empty_Type_Array, 3, super378, send25082, Self);
methodclosure4842 = (Object)new_Runtime_MethodClosure(method4854);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol4003, (Runtime_MethodClosure)methodclosure4842);

classreference1377 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Behavior>>methods
//methods
// 	^ methods
instancevariable1585 = (Object)new_AST_InstVariable(2, L"methods");
method4855 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1585);
symbol3991 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure4843 = (Object)new_Runtime_MethodClosure(method4855);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3991, (Runtime_MethodClosure)methodclosure4843);


// Behavior>>layout
//layout
// 	^ layout
instancevariable1586 = (Object)new_AST_InstVariable(0, L"layout");
method4856 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1586);
methodclosure4844 = (Object)new_Runtime_MethodClosure(method4856);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3992, (Runtime_MethodClosure)methodclosure4844);


// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable3756 = (Object)new_AST_Variable_named(L"instVars");
array3151 = (Object)new_Type_Array_with(1, (Object)localvariable3756);
// new
send25083 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
assign3039 = (Object)new_AST_Assign((Object)localvariable3756, (Object)send25083);
symbol3999 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
// hasSuperclass
send25084 = (Object)new_AST_Send((Object)Self, (Object)symbol3999, 0);
symbol4344 = (Object)new_Type_Symbol_cached(L"addAll:");
symbol3995 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send25085 = (Object)new_AST_Send((Object)Self, (Object)symbol3995, 0);
// layout
send25086 = (Object)new_AST_Send((Object)send25085, (Object)symbol3992, 0);
// addAll:
send25087 = (Object)new_AST_Send((Object)localvariable3756, (Object)symbol4344, 1, (Object)send25086);
block1520 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send25087);
block1521 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send25088 = (Object)new_AST_Send((Object)send25084, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block1520, (Object)block1521);
method4857 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3151, 3, assign3039, send25088, localvariable3756);
symbol3996 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
methodclosure4845 = (Object)new_Runtime_MethodClosure(method4857);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3996, (Runtime_MethodClosure)methodclosure4845);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send25089 = (Object)new_AST_Send((Object)classreference1323, (Object)symbol3994, 0);
method4858 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25089);
symbol3993 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
methodclosure4846 = (Object)new_Runtime_MethodClosure(method4858);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3993, (Runtime_MethodClosure)methodclosure4846);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable3757 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable3758 = (Object)new_AST_Variable_named(L"instVars");
localvariable3759 = (Object)new_AST_Variable_named(L"instVar");
array3152 = (Object)new_Type_Array_with(3, (Object)localvariable3757, (Object)localvariable3758, (Object)localvariable3759);
// parentInstVariables
send25090 = (Object)new_AST_Send((Object)Self, (Object)symbol3996, 0);
assign3040 = (Object)new_AST_Assign((Object)localvariable3758, (Object)send25090);
// pInstVarNames
send25091 = (Object)new_AST_Send((Object)Self, (Object)symbol3993, 0);
localvariable3760 = (Object)new_AST_Variable_named(L"each");
array3153 = (Object)new_Type_Array_with(1, (Object)localvariable3760);
localvariable3761 = (Object)new_AST_Variable_named(L"var");
array3154 = (Object)new_Type_Array_with(1, (Object)localvariable3761);
// name
send25092 = (Object)new_AST_Send((Object)localvariable3761, (Object)SMB_name, 0);
// =
send25093 = (Object)new_AST_Send((Object)send25092, (Object)SMB__equal, 1, (Object)localvariable3760);
symbol4345 = (Object)new_Type_Symbol_cached(L"error:");
string2777 = (Object)new_Type_String(L"Double Declaration of \"");
constant5743 = (Object)new_AST_Constant((Object)string2777);
// ,
send25094 = (Object)new_AST_Send((Object)constant5743, (Object)SMB__concat, 1, (Object)localvariable3760);
string2778 = (Object)new_Type_String(L"\"");
constant5744 = (Object)new_AST_Constant((Object)string2778);
// ,
send25095 = (Object)new_AST_Send((Object)send25094, (Object)SMB__concat, 1, (Object)constant5744);
// error:
send25096 = (Object)new_AST_Send((Object)Self, (Object)symbol4345, 1, (Object)send25095);
block1522 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send25096);
// ifTrue:
send25097 = (Object)new_AST_Send((Object)send25093, (Object)SMB_ifTrue_, 1, (Object)block1522);
block1523 = (Object)new_AST_Block_with((Type_Array)array3154, (Type_Array)empty_Type_Array, 2, 1, send25097);
// do:
send25098 = (Object)new_AST_Send((Object)localvariable3758, (Object)symbol4044, 1, (Object)block1523);
// named:
send25099 = (Object)new_AST_Send((Object)classreference1374, (Object)symbol4208, 1, (Object)localvariable3760);
assign3041 = (Object)new_AST_Assign((Object)localvariable3759, (Object)send25099);
// size
send25100 = (Object)new_AST_Send((Object)localvariable3758, (Object)SMB_size, 0);
// localId:
send25101 = (Object)new_AST_Send((Object)localvariable3759, (Object)symbol4210, 1, (Object)send25100);
// add:
send25102 = (Object)new_AST_Send((Object)localvariable3758, (Object)symbol4045, 1, (Object)localvariable3759);
block1524 = (Object)new_AST_Block_with((Type_Array)array3153, (Type_Array)empty_Type_Array, 1, 4, send25098, assign3041, send25101, send25102);
// do:
send25103 = (Object)new_AST_Send((Object)send25091, (Object)symbol4044, 1, (Object)block1524);
method4859 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array3152, 3, assign3040, send25103, localvariable3758);
symbol3990 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure4847 = (Object)new_Runtime_MethodClosure(method4859);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3990, (Runtime_MethodClosure)methodclosure4847);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send25104 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send25105 = (Object)new_AST_Send((Object)send25104, (Object)symbol3906, 0);
method4860 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25105);
methodclosure4848 = (Object)new_Runtime_MethodClosure(method4860);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3994, (Runtime_MethodClosure)methodclosure4848);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable1587 = (Object)new_AST_InstVariable(1, L"superclass");
method4861 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1587);
methodclosure4849 = (Object)new_Runtime_MethodClosure(method4861);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3995, (Runtime_MethodClosure)methodclosure4849);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
// superclass
send25106 = (Object)new_AST_Send((Object)Self, (Object)symbol3995, 0);
symbol4346 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send25107 = (Object)new_AST_Send((Object)classreference1372, (Object)symbol4346, 0);
// ~=
send25108 = (Object)new_AST_Send((Object)send25106, (Object)symbol3907, 1, (Object)send25107);
method4862 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25108);
methodclosure4850 = (Object)new_Runtime_MethodClosure(method4862);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3999, (Runtime_MethodClosure)methodclosure4850);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable3762 = (Object)new_AST_Variable_named(L"sizeRequested");
array3155 = (Object)new_Type_Array_with(1, (Object)localvariable3762);
// basicNew:
send25109 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable3762);
// initialize
send25110 = (Object)new_AST_Send((Object)send25109, (Object)symbol3906, 0);
method4863 = (Object)new_AST_Method_with((Type_Array)array3155, (Type_Array)empty_Type_Array, 1, send25110);
methodclosure4851 = (Object)new_Runtime_MethodClosure(method4863);
store_method((Type_Class)Behavior, (Type_Symbol)symbol3987, (Runtime_MethodClosure)methodclosure4851);

classreference1378 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method4864 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4852 = (Object)new_Runtime_MethodClosure(method4864);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3903, (Runtime_MethodClosure)methodclosure4852);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send25111 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol3897 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send25112 = (Object)new_AST_Send((Object)send25111, (Object)symbol3897, 0);
method4865 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25112);
methodclosure4853 = (Object)new_Runtime_MethodClosure(method4865);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3905, (Runtime_MethodClosure)methodclosure4853);


// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable3763 = (Object)new_AST_Variable_named(L"anObject");
array3156 = (Object)new_Type_Array_with(1, (Object)localvariable3763);
// =
send25113 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable3763);
// not
send25114 = (Object)new_AST_Send((Object)send25113, (Object)SMB_not, 0);
method4866 = (Object)new_AST_Method_with((Type_Array)array3156, (Type_Array)empty_Type_Array, 1, send25114);
methodclosure4854 = (Object)new_Runtime_MethodClosure(method4866);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3907, (Runtime_MethodClosure)methodclosure4854);


// Object>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable3764 = (Object)new_AST_Variable_named(L"aMessage");
array3157 = (Object)new_Type_Array_with(1, (Object)localvariable3764);
localvariable3765 = (Object)new_AST_Variable_named(L"selector");
array3158 = (Object)new_Type_Array_with(1, (Object)localvariable3765);
variable193 = (Object)new_AST_Variable_named(L"return");
array3159 = (Object)new_Type_Array_with(1, (Object)variable193);
// selector
send25115 = (Object)new_AST_Send((Object)localvariable3764, (Object)symbol4007, 0);
constant5745 = (Object)new_AST_Constant((Object)symbol4341);
// =
send25116 = (Object)new_AST_Send((Object)send25115, (Object)SMB__equal, 1, (Object)constant5745);
super379 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable3764);
// escape:
send25117 = (Object)new_AST_Send((Object)variable193, (Object)SMB_escape_, 1, (Object)super379);
block1525 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send25117);
// ifFalse:
send25118 = (Object)new_AST_Send((Object)send25116, (Object)SMB_ifFalse_, 1, (Object)block1525);
string2779 = (Object)new_Type_String(L"visit");
constant5746 = (Object)new_AST_Constant((Object)string2779);
// objectName
send25119 = (Object)new_AST_Send((Object)Self, (Object)symbol3905, 0);
// ,
send25120 = (Object)new_AST_Send((Object)constant5746, (Object)SMB__concat, 1, (Object)send25119);
string2780 = (Object)new_Type_String(L":");
constant5747 = (Object)new_AST_Constant((Object)string2780);
// ,
send25121 = (Object)new_AST_Send((Object)send25120, (Object)SMB__concat, 1, (Object)constant5747);
// asSymbol
send25122 = (Object)new_AST_Send((Object)send25121, (Object)SMB_asSymbol, 0);
assign3042 = (Object)new_AST_Assign((Object)localvariable3765, (Object)send25122);
// argument
send25123 = (Object)new_AST_Send((Object)localvariable3764, (Object)symbol4086, 0);
// perform:with:
send25124 = (Object)new_AST_Send((Object)send25123, (Object)symbol4342, 2, (Object)localvariable3765, (Object)Self);
block1526 = (Object)new_AST_Block_with((Type_Array)array3159, (Type_Array)empty_Type_Array, 1, 3, send25118, assign3042, send25124);
// on:
send25125 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block1526);
method4867 = (Object)new_AST_Method_with((Type_Array)array3157, (Type_Array)array3158, 1, send25125);
methodclosure4855 = (Object)new_Runtime_MethodClosure(method4867);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure4855);


// Object>>yourself
//yourself
// 	^ self
method4868 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4856 = (Object)new_Runtime_MethodClosure(method4868);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3904, (Runtime_MethodClosure)methodclosure4856);


// Object>>isNil
//isNil
// 	^ false
method4869 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure4857 = (Object)new_Runtime_MethodClosure(method4869);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure4857);


// Object>>initialize
//initialize
method4870 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure4858 = (Object)new_Runtime_MethodClosure(method4870);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol3906, (Runtime_MethodClosure)methodclosure4858);


// Object>>hash
//hash
// 	^ self uid hash
// uid
send25126 = (Object)new_AST_Send((Object)Self, (Object)symbol4030, 0);
// hash
send25127 = (Object)new_AST_Send((Object)send25126, (Object)SMB_hash, 0);
method4871 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send25127);
methodclosure4859 = (Object)new_Runtime_MethodClosure(method4871);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure4859);

classreference1379 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
classreference1380 = (Object)new_Organization_ClassReference((Type_Class)class792);
classreference1381 = (Object)new_Organization_ClassReference((Type_Class)class795);
classreference1382 = (Object)new_Organization_ClassReference((Type_Class)class794);
classreference1383 = (Object)new_Organization_ClassReference((Type_Class)class791);
classreference1384 = (Object)new_Organization_ClassReference((Type_Class)class738);
classreference1385 = (Object)new_Organization_ClassReference((Type_Class)class737);
classreference1386 = (Object)new_Organization_ClassReference((Type_Class)class739);
}


/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send25128 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3965, 0);
Object result = (Object)Eval((Object)send25128);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send25129 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3936, 0);
Object result = (Object)Eval((Object)send25129);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send25130 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3919, 0);
Object result = (Object)Eval((Object)send25130);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send25131 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3940, 0);
Object result = (Object)Eval((Object)send25131);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send25132 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3981, 0);
Object result = (Object)Eval((Object)send25132);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send25133 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3937, 0);
Object result = (Object)Eval((Object)send25133);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send25134 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3931, 0);
Object result = (Object)Eval((Object)send25134);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send25135 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3950, 0);
Object result = (Object)Eval((Object)send25135);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send25136 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3949, 0);
Object result = (Object)Eval((Object)send25136);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send25137 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3968, 0);
Object result = (Object)Eval((Object)send25137);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send25138 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3984, 0);
Object result = (Object)Eval((Object)send25138);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send25139 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3970, 0);
Object result = (Object)Eval((Object)send25139);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send25140 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3963, 0);
Object result = (Object)Eval((Object)send25140);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send25141 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3977, 0);
Object result = (Object)Eval((Object)send25141);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send25142 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3943, 0);
Object result = (Object)Eval((Object)send25142);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send25143 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3972, 0);
Object result = (Object)Eval((Object)send25143);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send25144 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3955, 0);
Object result = (Object)Eval((Object)send25144);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send25145 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3982, 0);
Object result = (Object)Eval((Object)send25145);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send25146 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3976, 0);
Object result = (Object)Eval((Object)send25146);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send25147 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3941, 0);
Object result = (Object)Eval((Object)send25147);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send25148 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3929, 0);
Object result = (Object)Eval((Object)send25148);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send25149 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3939, 0);
Object result = (Object)Eval((Object)send25149);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send25150 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3959, 0);
Object result = (Object)Eval((Object)send25150);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send25151 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3953, 0);
Object result = (Object)Eval((Object)send25151);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send25152 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3973, 0);
Object result = (Object)Eval((Object)send25152);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send25153 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3980, 0);
Object result = (Object)Eval((Object)send25153);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send25154 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3945, 0);
Object result = (Object)Eval((Object)send25154);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send25155 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3975, 0);
Object result = (Object)Eval((Object)send25155);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send25156 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3961, 0);
Object result = (Object)Eval((Object)send25156);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send25157 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3947, 0);
Object result = (Object)Eval((Object)send25157);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send25158 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3923, 0);
Object result = (Object)Eval((Object)send25158);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send25159 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3974, 0);
Object result = (Object)Eval((Object)send25159);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send25160 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3979, 0);
Object result = (Object)Eval((Object)send25160);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send25161 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3948, 0);
Object result = (Object)Eval((Object)send25161);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send25162 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3978, 0);
Object result = (Object)Eval((Object)send25162);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send25163 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3932, 0);
Object result = (Object)Eval((Object)send25163);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send25164 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3983, 0);
Object result = (Object)Eval((Object)send25164);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send25165 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3933, 0);
Object result = (Object)Eval((Object)send25165);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send25166 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3910, 0);
Object result = (Object)Eval((Object)send25166);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send25167 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3969, 0);
Object result = (Object)Eval((Object)send25167);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send25168 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3938, 0);
Object result = (Object)Eval((Object)send25168);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send25169 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3954, 0);
Object result = (Object)Eval((Object)send25169);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send25170 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3966, 0);
Object result = (Object)Eval((Object)send25170);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send25171 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3925, 0);
Object result = (Object)Eval((Object)send25171);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send25172 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3960, 0);
Object result = (Object)Eval((Object)send25172);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send25173 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol3965, 0);
Eval((Object)send25173);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class751;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})