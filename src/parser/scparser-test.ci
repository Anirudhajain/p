// Auto generated Tests from SCParserTest// Test Object to put test methods inType_Class SCParserTest_TestCase_Class;Object SCParserTest_test_Class_Instance;// Test Method symbolType_Symbol SCParserTest_SMB_runTestCase;Object objectlayout10005;Object instancevariable16359;Object instancevariable16360;Object instancevariable16361;Object instancevariable16362;Object instancevariable16363;Object instancevariable16364;Object symbol43993;Object objectlayout10006;Object instancevariable16365;Object class6700;Object metaclass5901;Object objectlayout10007;Object instancevariable16366;Object symbol44163;Object objectlayout10008;Object instancevariable16367;Object instancevariable16368;Object instancevariable16369;Object class6701;Object metaclass5902;Object objectlayout10009;Object symbol44209;Object objectlayout10010;Object instancevariable16370;Object class6702;Object metaclass5903;Object objectlayout10011;Object symbol44058;Object objectlayout10012;Object instancevariable16371;Object class6703;Object metaclass5904;Object objectlayout10013;Object symbol44049;Object objectlayout10014;Object instancevariable16372;Object class6704;Object metaclass5905;Object objectlayout10015;Object symbol44027;Object objectlayout10016;Object class6705;Object metaclass5906;Object objectlayout10017;Object symbol44252;Object objectlayout10018;Object class6706;Object metaclass5907;Object objectlayout10019;Object symbol44199;Object objectlayout10020;Object class6707;Object metaclass5908;Object objectlayout10021;Object symbol44022;Object objectlayout10022;Object instancevariable16373;Object instancevariable16374;Object class6708;Object metaclass5909;Object objectlayout10023;Object symbol44162;Object objectlayout10024;Object class6709;Object metaclass5910;Object objectlayout10025;Object symbol44014;Object objectlayout10026;Object instancevariable16375;Object class6710;Object metaclass5911;Object objectlayout10027;Object symbol44034;Object objectlayout10028;Object class6711;Object metaclass5912;Object objectlayout10029;Object symbol44318;Object objectlayout10030;Object instancevariable16376;Object class6712;Object metaclass5913;Object objectlayout10031;Object symbol44023;Object objectlayout10032;Object instancevariable16377;Object instancevariable16378;Object class6713;Object metaclass5914;Object objectlayout10033;Object symbol44082;Object objectlayout10034;Object instancevariable16379;Object class6714;Object metaclass5915;Object objectlayout10035;Object symbol44043;Object objectlayout10036;Object instancevariable16380;Object instancevariable16381;Object instancevariable16382;Object class6715;Object metaclass5916;Object objectlayout10037;Object symbol44035;Object objectlayout10038;Object instancevariable16383;Object class6716;Object metaclass5917;Object objectlayout10039;Object symbol44024;Object objectlayout10040;Object instancevariable16384;Object instancevariable16385;Object class6717;Object metaclass5918;Object objectlayout10041;Object symbol44045;Object objectlayout10042;Object instancevariable16386;Object instancevariable16387;Object class6718;Object metaclass5919;Object objectlayout10043;Object symbol44026;Object objectlayout10044;Object instancevariable16388;Object class6719;Object metaclass5920;Object objectlayout10045;Object symbol44018;Object objectlayout10046;Object instancevariable16389;Object instancevariable16390;Object class6720;Object metaclass5921;Object objectlayout10047;Object symbol44220;Object objectlayout10048;Object class6721;Object metaclass5922;Object objectlayout10049;Object symbol44030;Object objectlayout10050;Object instancevariable16391;Object class6722;Object metaclass5923;Object objectlayout10051;Object symbol44038;Object objectlayout10052;Object instancevariable16392;Object instancevariable16393;Object instancevariable16394;Object instancevariable16395;Object class6723;Object metaclass5924;Object objectlayout10053;Object symbol44019;Object objectlayout10054;Object instancevariable16396;Object class6724;Object metaclass5925;Object objectlayout10055;Object symbol44047;Object objectlayout10056;Object class6725;Object metaclass5926;Object objectlayout10057;Object symbol44066;Object objectlayout10058;Object instancevariable16397;Object class6726;Object metaclass5927;Object objectlayout10059;Object symbol44020;Object objectlayout10060;Object instancevariable16398;Object class6727;Object metaclass5928;Object objectlayout10061;Object symbol44067;Object objectlayout10062;Object class6728;Object metaclass5929;Object objectlayout10063;Object symbol44032;Object objectlayout10064;Object instancevariable16399;Object instancevariable16400;Object class6729;Object metaclass5930;Object objectlayout10065;Object symbol44139;Object objectlayout10066;Object instancevariable16401;Object class6730;Object metaclass5931;Object objectlayout10067;Object symbol44101;Object class6731;Object metaclass5932;Object objectlayout10068;Object symbol44355;Object objectlayout10069;Object instancevariable16402;Object instancevariable16403;Object instancevariable16404;Object class6732;Object metaclass5933;Object objectlayout10070;Object symbol44099;Object objectlayout10071;Object class6733;Object metaclass5934;Object objectlayout10072;Object symbol44206;Object objectlayout10073;Object instancevariable16405;Object class6734;Object metaclass5935;Object objectlayout10074;Object symbol44070;Object objectlayout10075;Object instancevariable16406;Object instancevariable16407;Object instancevariable16408;Object class6735;Object metaclass5936;Object objectlayout10076;Object symbol43990;Object objectlayout10077;Object instancevariable16409;Object class6736;Object metaclass5937;Object objectlayout10078;Object symbol44320;Object objectlayout10079;Object instancevariable16410;Object instancevariable16411;Object class6737;Object metaclass5938;Object objectlayout10080;Object symbol44364;Object objectlayout10081;Object instancevariable16412;Object class6738;Object metaclass5939;Object objectlayout10082;Object symbol44378;Object class6739;Object metaclass5940;Object objectlayout10083;Object symbol44337;Object objectlayout10084;Object instancevariable16413;Object instancevariable16414;Object class6740;Object metaclass5941;Object objectlayout10085;Object symbol44333;Object objectlayout10086;Object instancevariable16415;Object instancevariable16416;Object class6741;Object metaclass5942;Object objectlayout10087;Object symbol44130;Object objectlayout10088;Object instancevariable16417;Object class6742;Object metaclass5943;Object objectlayout10089;Object symbol44339;Object objectlayout10090;Object instancevariable16418;Object instancevariable16419;Object class6743;Object metaclass5944;Object objectlayout10091;Object symbol44334;Object objectlayout10092;Object class6744;Object metaclass5945;Object objectlayout10093;Object symbol44123;Object objectlayout10094;Object instancevariable16420;Object instancevariable16421;Object class6745;Object metaclass5946;Object objectlayout10095;Object symbol44374;Object objectlayout10096;Object instancevariable16422;Object class6746;Object metaclass5947;Object objectlayout10097;Object symbol44152;Object class6747;Object metaclass5948;Object objectlayout10098;Object symbol44151;Object objectlayout10099;Object instancevariable16423;Object instancevariable16424;Object instancevariable16425;Object class6748;Object metaclass5949;Object objectlayout10100;Object symbol44150;Object objectlayout10101;Object class6749;Object metaclass5950;Object objectlayout10102;Object symbol44012;Object objectlayout10103;Object instancevariable16426;Object instancevariable16427;Object class6750;Object metaclass5951;Object objectlayout10104;Object instancevariable16428;Object instancevariable16429;Object symbol44075;Object objectlayout10105;Object instancevariable16430;Object instancevariable16431;Object instancevariable16432;Object instancevariable16433;Object class6751;Object metaclass5952;Object objectlayout10106;Object symbol44375;Object class6752;Object metaclass5953;Object objectlayout10107;Object symbol44125;Object objectlayout10108;Object instancevariable16434;Object class6753;Object metaclass5954;Object objectlayout10109;Object symbol44176;Object class6754;Object metaclass5955;Object objectlayout10110;Object symbol44175;Object class6755;Object metaclass5956;Object objectlayout10111;Object symbol44041;Object objectlayout10112;Object instancevariable16435;Object instancevariable16436;Object instancevariable16437;Object class6756;Object metaclass5957;Object objectlayout10113;Object symbol44174;Object class6757;Object metaclass5958;Object objectlayout10114;Object symbol44367;Object objectlayout10115;Object instancevariable16438;Object instancevariable16439;Object class6758;Object metaclass5959;Object objectlayout10116;Object symbol44159;Object objectlayout10117;Object instancevariable16440;Object instancevariable16441;Object instancevariable16442;Object class6759;Object metaclass5960;Object classreference13384;Object classreference13385;Object classreference13386;Object localvariable26900;Object array23988;Object method40913;Object string26399;Object string26400;Object smallint26239;Object smallint26240;Object info5170;Object symbol44005;Object methodclosure40816;Object localvariable26901;Object array23989;Object send160210;Object string26401;Object string26402;Object smallint26241;Object smallint26242;Object info5171;Object symbol44093;Object send160211;Object method40914;Object symbol44009;Object methodclosure40817;Object localvariable26902;Object array23990;Object send160212;Object string26403;Object string26404;Object smallint26243;Object smallint26244;Object info5172;Object send160213;Object method40915;Object symbol44010;Object methodclosure40818;Object method40916;Object string26405;Object string26406;Object smallint26245;Object smallint26246;Object info5173;Object symbol44006;Object methodclosure40819;Object method40917;Object string26407;Object string26408;Object smallint26247;Object smallint26248;Object info5174;Object methodclosure40820;Object send160214;Object string26409;Object string26410;Object smallint26249;Object smallint26250;Object info5175;Object symbol43998;Object send160215;Object method40918;Object symbol44007;Object methodclosure40821;Object method40919;Object string26411;Object string26412;Object smallint26251;Object smallint26252;Object info5176;Object symbol44004;Object methodclosure40822;Object method40920;Object string26413;Object string26414;Object smallint26253;Object smallint26254;Object info5177;Object symbol44008;Object methodclosure40823;Object symbol44164;Object send160216;Object string26415;Object string26416;Object smallint26255;Object smallint26256;Object info5178;Object send160217;Object method40921;Object methodclosure40824;Object classreference13387;Object localvariable26903;Object array23991;Object symbol44111;Object super2454;Object symbol44382;Object string26417;Object constant34557;Object send160218;Object string26418;Object string26419;Object smallint26257;Object smallint26258;Object info5179;Object send160219;Object send160220;Object method40922;Object methodclosure40825;Object instancevariable16443;Object method40923;Object string26420;Object string26421;Object smallint26259;Object smallint26260;Object info5180;Object symbol44112;Object methodclosure40826;Object instancevariable16444;Object method40924;Object string26422;Object string26423;Object smallint26261;Object smallint26262;Object info5181;Object methodclosure40827;Object symbol44001;Object send160221;Object string26424;Object string26425;Object smallint26263;Object smallint26264;Object info5182;Object method40925;Object methodclosure40828;Object localvariable26904;Object array23992;Object string26426;Object constant34558;Object send160222;Object string26427;Object string26428;Object smallint26265;Object smallint26266;Object info5183;Object send160223;Object symbol44383;Object string26429;Object constant34559;Object send160224;Object smallint26267;Object constant34560;Object send160225;Object send160226;Object send160227;Object send160228;Object symbol44132;Object send160229;Object send160230;Object method40926;Object symbol43997;Object methodclosure40829;Object string26430;Object constant34561;Object send160231;Object string26431;Object string26432;Object smallint26268;Object smallint26269;Object info5184;Object method40927;Object symbol44003;Object methodclosure40830;Object method40928;Object string26433;Object string26434;Object smallint26270;Object smallint26271;Object info5185;Object symbol44002;Object methodclosure40831;Object send160232;Object string26435;Object string26436;Object smallint26272;Object smallint26273;Object info5186;Object string26437;Object constant34562;Object send160233;Object method40929;Object symbol43996;Object methodclosure40832;Object send160234;Object string26438;Object string26439;Object smallint26274;Object smallint26275;Object info5187;Object string26440;Object constant34563;Object send160235;Object smallint26276;Object constant34564;Object send160236;Object send160237;Object send160238;Object send160239;Object send160240;Object send160241;Object method40930;Object methodclosure40833;Object classreference13388;Object localvariable26905;Object array23993;Object super2455;Object symbol44384;Object send160242;Object string26441;Object string26442;Object smallint26277;Object smallint26278;Object info5188;Object send160243;Object send160244;Object method40931;Object methodclosure40834;Object method40932;Object string26443;Object string26444;Object smallint26279;Object smallint26280;Object info5189;Object methodclosure40835;Object symbol44385;Object constant34565;Object method40933;Object string26445;Object string26446;Object smallint26281;Object smallint26282;Object info5190;Object symbol44109;Object methodclosure40836;Object localvariable26906;Object array23994;Object symbol44095;Object send160245;Object string26447;Object string26448;Object smallint26283;Object smallint26284;Object info5191;Object symbol44386;Object send160246;Object method40934;Object symbol44110;Object methodclosure40837;Object classreference13389;Object send160247;Object string26449;Object string26450;Object smallint26285;Object smallint26286;Object info5192;Object symbol44387;Object smallint26287;Object constant34566;Object send160248;Object symbol44137;Object smallint26288;Object constant34567;Object send160249;Object assign20114;Object smallint26289;Object constant34568;Object send160250;Object assign20115;Object method40935;Object symbol44241;Object methodclosure40838;Object send160251;Object string26451;Object string26452;Object smallint26290;Object smallint26291;Object info5193;Object smallint26292;Object constant34569;Object send160252;Object method40936;Object symbol44239;Object methodclosure40839;Object localvariable26907;Object localvariable26908;Object array23995;Object variable1849;Object array23996;Object send160253;Object string26453;Object string26454;Object smallint26293;Object smallint26294;Object info5194;Object assign20116;Object send160254;Object send160255;Object send160256;Object smallint26295;Object constant34570;Object send160257;Object symbol44238;Object send160258;Object block11670;Object send160259;Object smallint26296;Object constant34571;Object send160260;Object assign20117;Object smallint26297;Object constant34572;Object send160261;Object send160262;Object block11671;Object send160263;Object smallint26298;Object constant34573;Object symbol44135;Object localvariable26909;Object array23997;Object send160264;Object send160265;Object send160266;Object send160267;Object send160268;Object block11672;Object send160269;Object smallint26299;Object constant34574;Object assign20118;Object assign20119;Object block11673;Object send160270;Object method40937;Object symbol44237;Object methodclosure40840;Object localvariable26910;Object array23998;Object symbol44236;Object send160271;Object string26455;Object string26456;Object smallint26300;Object smallint26301;Object info5195;Object method40938;Object symbol44183;Object methodclosure40841;Object send160272;Object string26457;Object string26458;Object smallint26302;Object smallint26303;Object info5196;Object smallint26304;Object constant34575;Object send160273;Object method40939;Object methodclosure40842;Object localvariable26911;Object array23999;Object assign20120;Object send160274;Object string26459;Object string26460;Object smallint26305;Object smallint26306;Object info5197;Object method40940;Object symbol44240;Object methodclosure40843;Object localvariable26912;Object array24000;Object classreference13390;Object smallint26307;Object constant34576;Object send160275;Object string26461;Object string26462;Object smallint26308;Object smallint26309;Object info5198;Object method40941;Object symbol44180;Object methodclosure40844;Object localvariable26913;Object localvariable26914;Object array24001;Object localvariable26915;Object array24002;Object assign20121;Object symbol44127;Object localvariable26916;Object array24003;Object symbol44388;Object send160276;Object string26463;Object string26464;Object smallint26310;Object smallint26311;Object info5199;Object assign20122;Object block11674;Object send160277;Object method40942;Object symbol44184;Object methodclosure40845;Object localvariable26917;Object array24004;Object smallint26312;Object constant34577;Object send160278;Object string26465;Object string26466;Object smallint26313;Object smallint26314;Object info5200;Object localvariable26918;Object array24005;Object send160279;Object send160280;Object block11675;Object send160281;Object method40943;Object symbol44181;Object methodclosure40846;Object localvariable26919;Object localvariable26920;Object localvariable26921;Object localvariable26922;Object array24006;Object localvariable26923;Object localvariable26924;Object array24007;Object send160282;Object string26467;Object string26468;Object smallint26315;Object smallint26316;Object info5201;Object assign20123;Object smallint26317;Object constant34578;Object send160283;Object assign20124;Object smallint26318;Object constant34579;Object send160284;Object assign20125;Object symbol44136;Object send160285;Object block11676;Object send160286;Object send160287;Object send160288;Object block11677;Object send160289;Object method40944;Object symbol44185;Object methodclosure40847;Object localvariable26925;Object array24008;Object variable1850;Object array24009;Object send160290;Object string26469;Object string26470;Object smallint26319;Object smallint26320;Object info5202;Object send160291;Object block11678;Object send160292;Object send160293;Object send160294;Object send160295;Object send160296;Object block11679;Object send160297;Object send160298;Object send160299;Object send160300;Object send160301;Object block11680;Object send160302;Object smallint26321;Object constant34580;Object send160303;Object localvariable26926;Object array24010;Object send160304;Object send160305;Object send160306;Object send160307;Object block11681;Object send160308;Object block11682;Object send160309;Object block11683;Object send160310;Object method40945;Object methodclosure40848;Object localvariable26927;Object array24011;Object smallint26322;Object constant34581;Object send160311;Object string26471;Object string26472;Object smallint26323;Object smallint26324;Object info5203;Object method40946;Object symbol44182;Object methodclosure40849;Object localvariable26928;Object array24012;Object smallint26325;Object constant34582;Object send160312;Object string26473;Object string26474;Object smallint26326;Object smallint26327;Object info5204;Object localvariable26929;Object array24013;Object send160313;Object send160314;Object block11684;Object send160315;Object method40947;Object methodclosure40850;Object localvariable26930;Object array24014;Object super2456;Object string26475;Object constant34583;Object send160316;Object string26476;Object string26477;Object smallint26328;Object smallint26329;Object info5205;Object localvariable26931;Object array24015;Object send160317;Object string26478;Object constant34584;Object send160318;Object block11685;Object send160319;Object string26479;Object constant34585;Object send160320;Object method40948;Object methodclosure40851;Object localvariable26932;Object array24016;Object send160321;Object string26480;Object string26481;Object smallint26330;Object smallint26331;Object info5206;Object send160322;Object method40949;Object symbol44186;Object methodclosure40852;Object super2457;Object method40950;Object string26482;Object string26483;Object smallint26332;Object smallint26333;Object info5207;Object methodclosure40853;Object send160323;Object string26484;Object string26485;Object smallint26334;Object smallint26335;Object info5208;Object send160324;Object method40951;Object symbol44179;Object methodclosure40854;Object localvariable26933;Object array24017;Object localvariable26934;Object array24018;Object send160325;Object string26486;Object string26487;Object smallint26336;Object smallint26337;Object info5209;Object symbol44091;Object send160326;Object smallint26338;Object constant34586;Object send160327;Object send160328;Object assign20126;Object localvariable26935;Object localvariable26936;Object array24019;Object send160329;Object block11686;Object send160330;Object send160331;Object method40952;Object methodclosure40855;Object send160332;Object string26488;Object string26489;Object smallint26339;Object smallint26340;Object info5210;Object smallint26341;Object constant34587;Object send160333;Object method40953;Object symbol44129;Object methodclosure40856;Object localvariable26937;Object array24020;Object localvariable26938;Object array24021;Object send160334;Object string26490;Object string26491;Object smallint26342;Object smallint26343;Object info5211;Object send160335;Object assign20127;Object smallint26344;Object constant34588;Object send160336;Object localvariable26939;Object array24022;Object send160337;Object send160338;Object block11687;Object send160339;Object method40954;Object symbol44177;Object methodclosure40857;Object localvariable26940;Object array24023;Object localvariable26941;Object array24024;Object smallint26345;Object constant34589;Object send160340;Object string26492;Object string26493;Object smallint26346;Object smallint26347;Object info5212;Object assign20128;Object smallint26348;Object constant34590;Object send160341;Object method40955;Object symbol44178;Object methodclosure40858;Object send160342;Object string26494;Object string26495;Object smallint26349;Object smallint26350;Object info5213;Object send160343;Object send160344;Object send160345;Object assign20129;Object smallint26351;Object constant34591;Object send160346;Object smallint26352;Object constant34592;Object send160347;Object assign20130;Object method40956;Object methodclosure40859;Object localvariable26942;Object array24025;Object send160348;Object string26496;Object string26497;Object smallint26353;Object smallint26354;Object info5214;Object send160349;Object send160350;Object block11688;Object send160351;Object smallint26355;Object constant34593;Object send160352;Object assign20131;Object send160353;Object method40957;Object methodclosure40860;Object localvariable26943;Object localvariable26944;Object array24026;Object send160354;Object string26498;Object string26499;Object smallint26356;Object smallint26357;Object info5215;Object symbol44389;Object symbol44235;Object send160355;Object send160356;Object method40958;Object methodclosure40861;Object localvariable26945;Object array24027;Object localvariable26946;Object array24028;Object send160357;Object string26500;Object string26501;Object smallint26358;Object smallint26359;Object info5216;Object send160358;Object assign20132;Object symbol44390;Object send160359;Object method40959;Object methodclosure40862;Object localvariable26947;Object array24029;Object send160360;Object string26502;Object string26503;Object smallint26360;Object smallint26361;Object info5217;Object send160361;Object send160362;Object method40960;Object methodclosure40863;Object smallint26362;Object constant34594;Object send160363;Object string26504;Object string26505;Object smallint26363;Object smallint26364;Object info5218;Object method40961;Object methodclosure40864;Object localvariable26948;Object array24030;Object localvariable26949;Object array24031;Object send160364;Object string26506;Object string26507;Object smallint26365;Object smallint26366;Object info5219;Object assign20133;Object symbol44391;Object send160365;Object send160366;Object method40962;Object symbol44234;Object methodclosure40865;Object send160367;Object string26508;Object string26509;Object smallint26367;Object smallint26368;Object info5220;Object method40963;Object symbol44105;Object methodclosure40866;Object classreference13391;Object send160368;Object string26510;Object string26511;Object smallint26369;Object smallint26370;Object info5221;Object method40964;Object methodclosure40867;Object instancevariable16445;Object method40965;Object string26512;Object string26513;Object smallint26371;Object smallint26372;Object info5222;Object symbol44092;Object methodclosure40868;Object localvariable26950;Object array24032;Object assign20134;Object method40966;Object string26514;Object string26515;Object smallint26373;Object smallint26374;Object info5223;Object symbol44096;Object methodclosure40869;Object localvariable26951;Object array24033;Object send160369;Object string26516;Object string26517;Object smallint26375;Object smallint26376;Object info5224;Object assign20135;Object symbol44103;Object send160370;Object symbol44097;Object send160371;Object symbol44094;Object send160372;Object send160373;Object block11689;Object block11690;Object send160374;Object method40967;Object symbol44106;Object methodclosure40870;Object instancevariable16446;Object method40968;Object string26518;Object string26519;Object smallint26377;Object smallint26378;Object info5225;Object methodclosure40871;Object localvariable26952;Object array24034;Object variable1851;Object array24035;Object symbol44104;Object send160375;Object string26520;Object string26521;Object smallint26379;Object smallint26380;Object info5226;Object send160376;Object block11691;Object send160377;Object send160378;Object send160379;Object block11692;Object send160380;Object send160381;Object block11693;Object send160382;Object method40969;Object methodclosure40872;Object send160383;Object string26522;Object string26523;Object smallint26381;Object smallint26382;Object info5227;Object classreference13392;Object localvariable26953;Object array24036;Object symbol44392;Object send160384;Object string26524;Object string26525;Object smallint26383;Object smallint26384;Object info5228;Object method40970;Object methodclosure40873;Object method40971;Object string26526;Object string26527;Object smallint26385;Object smallint26386;Object info5229;Object methodclosure40874;Object symbol44393;Object send160385;Object send160386;Object method40972;Object methodclosure40875;Object instancevariable16447;Object method40973;Object string26528;Object string26529;Object smallint26387;Object smallint26388;Object info5230;Object methodclosure40876;Object localvariable26954;Object localvariable26955;Object localvariable26956;Object array24037;Object send160387;Object string26530;Object string26531;Object smallint26389;Object smallint26390;Object info5231;Object assign20136;Object send160388;Object localvariable26957;Object array24038;Object localvariable26958;Object array24039;Object send160389;Object send160390;Object symbol44394;Object string26532;Object constant34595;Object send160391;Object string26533;Object constant34596;Object send160392;Object send160393;Object block11694;Object send160394;Object block11695;Object send160395;Object classreference13393;Object symbol44345;Object send160396;Object assign20137;Object symbol44356;Object send160397;Object send160398;Object send160399;Object block11696;Object send160400;Object method40974;Object symbol44100;Object methodclosure40877;Object method40975;Object string26534;Object string26535;Object smallint26391;Object smallint26392;Object info5232;Object symbol44107;Object methodclosure40878;Object localvariable26959;Object array24040;Object send160401;Object string26536;Object string26537;Object smallint26393;Object smallint26394;Object info5233;Object symbol44369;Object send160402;Object method40976;Object methodclosure40879;Object send160403;Object string26538;Object string26539;Object smallint26395;Object smallint26396;Object info5234;Object send160404;Object method40977;Object methodclosure40880;Object localvariable26960;Object array24041;Object send160405;Object string26540;Object string26541;Object smallint26397;Object smallint26398;Object info5235;Object send160406;Object method40978;Object methodclosure40881;Object symbol44395;Object send160407;Object string26542;Object string26543;Object smallint26399;Object smallint26400;Object info5236;Object method40979;Object symbol44090;Object methodclosure40882;Object classreference13394;Object method40980;Object string26544;Object string26545;Object smallint26401;Object smallint26402;Object info5237;Object symbol44211;Object methodclosure40883;Object localvariable26961;Object array24042;Object variable1852;Object array24043;Object send160408;Object string26546;Object string26547;Object smallint26403;Object smallint26404;Object info5238;Object symbol44396;Object localvariable26962;Object array24044;Object send160409;Object send160410;Object send160411;Object send160412;Object send160413;Object send160414;Object send160415;Object block11697;Object send160416;Object block11698;Object send160417;Object block11699;Object send160418;Object method40981;Object symbol44245;Object methodclosure40884;Object localvariable26963;Object array24045;Object variable1853;Object array24046;Object symbol44213;Object super2458;Object send160419;Object string26548;Object string26549;Object smallint26405;Object smallint26406;Object info5239;Object block11700;Object send160420;Object send160421;Object block11701;Object send160422;Object method40982;Object methodclosure40885;Object super2459;Object send160423;Object string26550;Object string26551;Object smallint26407;Object smallint26408;Object info5240;Object assign20138;Object method40983;Object methodclosure40886;Object localvariable26964;Object array24047;Object send160424;Object string26552;Object string26553;Object smallint26409;Object smallint26410;Object info5241;Object assign20139;Object method40984;Object symbol44242;Object methodclosure40887;Object classreference13395;Object symbol44115;Object send160425;Object string26554;Object string26555;Object smallint26411;Object smallint26412;Object info5242;Object symbol44219;Object send160426;Object method40985;Object methodclosure40888;Object classreference13396;Object method40986;Object string26556;Object string26557;Object smallint26413;Object smallint26414;Object info5243;Object symbol44202;Object methodclosure40889;Object localvariable26965;Object array24048;Object assign20140;Object method40987;Object string26558;Object string26559;Object smallint26415;Object smallint26416;Object info5244;Object symbol44203;Object methodclosure40890;Object method40988;Object string26560;Object string26561;Object smallint26417;Object smallint26418;Object info5245;Object symbol44200;Object methodclosure40891;Object localvariable26966;Object array24049;Object assign20141;Object method40989;Object string26562;Object string26563;Object smallint26419;Object smallint26420;Object info5246;Object symbol44201;Object methodclosure40892;Object classreference13397;Object localvariable26967;Object array24050;Object assign20142;Object method40990;Object string26564;Object string26565;Object smallint26421;Object smallint26422;Object info5247;Object symbol44171;Object methodclosure40893;Object method40991;Object string26566;Object string26567;Object smallint26423;Object smallint26424;Object info5248;Object symbol44172;Object methodclosure40894;Object send160427;Object string26568;Object string26569;Object smallint26425;Object smallint26426;Object info5249;Object send160428;Object method40992;Object methodclosure40895;Object classreference13398;Object localvariable26968;Object array24051;Object string26570;Object constant34597;Object send160429;Object string26571;Object string26572;Object smallint26427;Object smallint26428;Object info5250;Object method40993;Object methodclosure40896;Object classreference13399;Object localvariable26969;Object array24052;Object assign20143;Object method40994;Object string26573;Object string26574;Object smallint26429;Object smallint26430;Object info5251;Object symbol44370;Object methodclosure40897;Object variable1854;Object array24053;Object symbol44397;Object send160430;Object string26575;Object string26576;Object smallint26431;Object smallint26432;Object info5252;Object localvariable26970;Object array24054;Object send160431;Object symbol44398;Object symbol44169;Object send160432;Object block11702;Object send160433;Object block11703;Object send160434;Object block11704;Object send160435;Object block11705;Object send160436;Object method40995;Object methodclosure40898;Object classreference13400;Object send160437;Object string26577;Object string26578;Object smallint26433;Object smallint26434;Object info5253;Object send160438;Object method40996;Object methodclosure40899;Object classreference13401;Object method40997;Object string26579;Object string26580;Object smallint26435;Object smallint26436;Object info5254;Object symbol44365;Object methodclosure40900;Object localvariable26971;Object array24055;Object assign20144;Object method40998;Object string26581;Object string26582;Object smallint26437;Object smallint26438;Object info5255;Object symbol44366;Object methodclosure40901;Object send160439;Object string26583;Object string26584;Object smallint26439;Object smallint26440;Object info5256;Object symbol44204;Object send160440;Object send160441;Object method40999;Object symbol44207;Object methodclosure40902;Object localvariable26972;Object array24056;Object send160442;Object string26585;Object string26586;Object smallint26441;Object smallint26442;Object info5257;Object send160443;Object send160444;Object method41000;Object methodclosure40903;Object localvariable26973;Object array24057;Object super2460;Object localvariable26974;Object array24058;Object string26587;Object constant34598;Object send160445;Object string26588;Object string26589;Object smallint26443;Object smallint26444;Object info5258;Object send160446;Object send160447;Object string26590;Object constant34599;Object send160448;Object block11706;Object send160449;Object method41001;Object methodclosure40904;Object localvariable26975;Object array24059;Object assign20145;Object method41002;Object string26591;Object string26592;Object smallint26445;Object smallint26446;Object info5259;Object methodclosure40905;Object localvariable26976;Object array24060;Object send160450;Object string26593;Object string26594;Object smallint26447;Object smallint26448;Object info5260;Object symbol44399;Object send160451;Object send160452;Object method41003;Object symbol44208;Object methodclosure40906;Object super2461;Object method41004;Object string26595;Object string26596;Object smallint26449;Object smallint26450;Object info5261;Object methodclosure40907;Object localvariable26977;Object array24061;Object send160453;Object string26597;Object string26598;Object smallint26451;Object smallint26452;Object info5262;Object symbol44400;Object send160454;Object send160455;Object method41005;Object symbol44205;Object methodclosure40908;Object method41006;Object string26599;Object string26600;Object smallint26453;Object smallint26454;Object info5263;Object methodclosure40909;Object classreference13402;Object method41007;Object string26601;Object string26602;Object smallint26455;Object smallint26456;Object info5264;Object symbol44352;Object methodclosure40910;Object classreference13403;Object send160456;Object string26603;Object string26604;Object smallint26457;Object smallint26458;Object info5265;Object method41008;Object symbol44147;Object methodclosure40911;Object localvariable26978;Object array24062;Object variable1855;Object array24063;Object send160457;Object string26605;Object string26606;Object smallint26459;Object smallint26460;Object info5266;Object send160458;Object block11707;Object send160459;Object block11708;Object send160460;Object block11709;Object send160461;Object method41009;Object methodclosure40912;Object send160462;Object string26607;Object string26608;Object smallint26461;Object smallint26462;Object info5267;Object symbol44131;Object send160463;Object method41010;Object methodclosure40913;Object localvariable26979;Object array24064;Object send160464;Object string26609;Object string26610;Object smallint26463;Object smallint26464;Object info5268;Object send160465;Object method41011;Object methodclosure40914;Object localvariable26980;Object array24065;Object variable1856;Object array24066;Object send160466;Object string26611;Object string26612;Object smallint26465;Object smallint26466;Object info5269;Object assign20146;Object smallint26467;Object constant34600;Object send160467;Object symbol44120;Object smallint26468;Object constant34601;Object send160468;Object block11710;Object send160469;Object symbol44119;Object smallint26469;Object constant34602;Object send160470;Object smallint26470;Object constant34603;Object send160471;Object block11711;Object send160472;Object block11712;Object send160473;Object smallint26471;Object constant34604;Object send160474;Object smallint26472;Object constant34605;Object send160475;Object block11713;Object send160476;Object block11714;Object send160477;Object smallint26473;Object constant34606;Object smallint26474;Object constant34607;Object send160478;Object send160479;Object send160480;Object send160481;Object send160482;Object block11715;Object send160483;Object block11716;Object send160484;Object block11717;Object send160485;Object method41012;Object symbol44146;Object methodclosure40915;Object localvariable26981;Object array24067;Object variable1857;Object array24068;Object send160486;Object string26613;Object string26614;Object smallint26475;Object smallint26476;Object info5270;Object send160487;Object block11718;Object send160488;Object block11719;Object send160489;Object block11720;Object send160490;Object method41013;Object symbol44148;Object methodclosure40916;Object localvariable26982;Object array24069;Object send160491;Object string26615;Object string26616;Object smallint26477;Object smallint26478;Object info5271;Object send160492;Object method41014;Object methodclosure40917;Object smallint26479;Object constant34608;Object send160493;Object string26617;Object string26618;Object smallint26480;Object smallint26481;Object info5272;Object method41015;Object symbol44143;Object methodclosure40918;Object smallint26482;Object constant34609;Object send160494;Object string26619;Object string26620;Object smallint26483;Object smallint26484;Object info5273;Object method41016;Object symbol44144;Object methodclosure40919;Object smallint26485;Object constant34610;Object send160495;Object string26621;Object string26622;Object smallint26486;Object smallint26487;Object info5274;Object method41017;Object symbol44145;Object methodclosure40920;Object send160496;Object string26623;Object string26624;Object smallint26488;Object smallint26489;Object info5275;Object symbol44354;Object send160497;Object send160498;Object method41018;Object symbol44353;Object methodclosure40921;Object localvariable26983;Object array24070;Object assign20147;Object method41019;Object string26625;Object string26626;Object smallint26490;Object smallint26491;Object info5276;Object methodclosure40922;Object classreference13404;Object method41020;Object string26627;Object string26628;Object smallint26492;Object smallint26493;Object info5277;Object symbol44225;Object methodclosure40923;Object method41021;Object string26629;Object string26630;Object smallint26494;Object smallint26495;Object info5278;Object methodclosure40924;Object send160499;Object string26631;Object string26632;Object smallint26496;Object smallint26497;Object info5279;Object symbol44401;Object localvariable26984;Object array24071;Object send160500;Object send160501;Object block11721;Object send160502;Object block11722;Object send160503;Object method41022;Object methodclosure40925;Object localvariable26985;Object array24072;Object assign20148;Object method41023;Object string26633;Object string26634;Object smallint26498;Object smallint26499;Object info5280;Object symbol44231;Object methodclosure40926;Object super2462;Object send160504;Object string26635;Object string26636;Object smallint26500;Object smallint26501;Object info5281;Object send160505;Object symbol44228;Object send160506;Object send160507;Object send160508;Object send160509;Object method41024;Object methodclosure40927;Object localvariable26986;Object array24073;Object assign20149;Object method41025;Object string26637;Object string26638;Object smallint26502;Object smallint26503;Object info5282;Object methodclosure40928;Object localvariable26987;Object array24074;Object assign20150;Object method41026;Object string26639;Object string26640;Object smallint26504;Object smallint26505;Object info5283;Object methodclosure40929;Object method41027;Object string26641;Object string26642;Object smallint26506;Object smallint26507;Object info5284;Object symbol44230;Object methodclosure40930;Object classreference13405;Object method41028;Object string26643;Object string26644;Object smallint26508;Object smallint26509;Object info5285;Object methodclosure40931;Object method41029;Object string26645;Object string26646;Object smallint26510;Object smallint26511;Object info5286;Object methodclosure40932;Object localvariable26988;Object array24075;Object assign20151;Object method41030;Object string26647;Object string26648;Object smallint26512;Object smallint26513;Object info5287;Object methodclosure40933;Object classreference13406;Object localvariable26989;Object array24076;Object assign20152;Object method41031;Object string26649;Object string26650;Object smallint26514;Object smallint26515;Object info5288;Object symbol44217;Object methodclosure40934;Object symbol44116;Object send160510;Object string26651;Object string26652;Object smallint26516;Object smallint26517;Object info5289;Object localvariable26990;Object array24077;Object send160511;Object send160512;Object block11723;Object send160513;Object block11724;Object send160514;Object method41032;Object methodclosure40935;Object super2463;Object send160515;Object string26653;Object string26654;Object smallint26518;Object smallint26519;Object info5290;Object assign20153;Object method41033;Object methodclosure40936;Object method41034;Object string26655;Object string26656;Object smallint26520;Object smallint26521;Object info5291;Object methodclosure40937;Object localvariable26991;Object array24078;Object assign20154;Object method41035;Object string26657;Object string26658;Object smallint26522;Object smallint26523;Object info5292;Object symbol44216;Object methodclosure40938;Object method41036;Object string26659;Object string26660;Object smallint26524;Object smallint26525;Object info5293;Object symbol44218;Object methodclosure40939;Object classreference13407;Object classreference13408;Object localvariable26992;Object array24079;Object assign20155;Object method41037;Object string26661;Object string26662;Object smallint26526;Object smallint26527;Object info5294;Object methodclosure40940;Object localvariable26993;Object array24080;Object assign20156;Object method41038;Object string26663;Object string26664;Object smallint26528;Object smallint26529;Object info5295;Object symbol44243;Object methodclosure40941;Object method41039;Object string26665;Object string26666;Object smallint26530;Object smallint26531;Object info5296;Object methodclosure40942;Object method41040;Object string26667;Object string26668;Object smallint26532;Object smallint26533;Object info5297;Object symbol44244;Object methodclosure40943;Object classreference13409;Object method41041;Object string26669;Object string26670;Object smallint26534;Object smallint26535;Object info5298;Object methodclosure40944;Object send160516;Object string26671;Object string26672;Object smallint26536;Object smallint26537;Object info5299;Object method41042;Object methodclosure40945;Object localvariable26994;Object array24081;Object send160517;Object string26673;Object string26674;Object smallint26538;Object smallint26539;Object info5300;Object send160518;Object method41043;Object methodclosure40946;Object localvariable26995;Object array24082;Object symbol44210;Object send160519;Object string26675;Object string26676;Object smallint26540;Object smallint26541;Object info5301;Object send160520;Object send160521;Object method41044;Object methodclosure40947;Object send160522;Object string26677;Object string26678;Object smallint26542;Object smallint26543;Object info5302;Object send160523;Object method41045;Object methodclosure40948;Object send160524;Object string26679;Object string26680;Object smallint26544;Object smallint26545;Object info5303;Object symbol44332;Object send160525;Object method41046;Object methodclosure40949;Object localvariable26996;Object array24083;Object localvariable26997;Object array24084;Object assign20157;Object send160526;Object string26681;Object string26682;Object smallint26546;Object smallint26547;Object info5304;Object assign20158;Object send160527;Object smallint26548;Object constant34611;Object send160528;Object send160529;Object smallint26549;Object constant34612;Object send160530;Object send160531;Object symbol44402;Object send160532;Object send160533;Object string26683;Object constant34613;Object send160534;Object block11725;Object send160535;Object method41047;Object symbol44212;Object methodclosure40950;Object classreference13410;Object localvariable26998;Object array24085;Object send160536;Object string26684;Object string26685;Object smallint26550;Object smallint26551;Object info5305;Object send160537;Object classreference13411;Object send160538;Object string26686;Object string26687;Object smallint26552;Object smallint26553;Object info5306;Object smallint26554;Object constant34614;Object send160539;Object method41048;Object methodclosure40951;Object classreference13412;Object send160540;Object string26688;Object string26689;Object smallint26555;Object smallint26556;Object info5307;Object smallint26557;Object constant34615;Object send160541;Object string26690;Object constant34616;Object send160542;Object block11726;Object send160543;Object classreference13413;Object localvariable26999;Object array24086;Object super2464;Object assign20159;Object method41049;Object string26691;Object string26692;Object smallint26558;Object smallint26559;Object info5308;Object symbol44363;Object methodclosure40952;Object localvariable27000;Object array24087;Object localvariable27001;Object array24088;Object variable1858;Object array24089;Object symbol44329;Object send160544;Object string26693;Object string26694;Object smallint26560;Object smallint26561;Object info5309;Object assign20160;Object symbol44376;Object send160545;Object send160546;Object block11727;Object send160547;Object symbol44403;Object send160548;Object symbol44404;Object localvariable27002;Object array24090;Object send160549;Object block11728;Object send160550;Object send160551;Object block11729;Object send160552;Object block11730;Object send160553;Object method41050;Object symbol44325;Object methodclosure40953;Object send160554;Object string26695;Object string26696;Object smallint26562;Object smallint26563;Object info5310;Object method41051;Object methodclosure40954;Object localvariable27003;Object array24091;Object send160555;Object string26697;Object string26698;Object smallint26564;Object smallint26565;Object info5311;Object assign20161;Object method41052;Object symbol44377;Object methodclosure40955;Object send160556;Object method41053;Object methodclosure40956;Object localvariable27004;Object array24092;Object symbol44156;Object send160557;Object string26699;Object string26700;Object smallint26566;Object smallint26567;Object info5312;Object method41054;Object methodclosure40957;Object localvariable27005;Object array24093;Object super2465;Object assign20162;Object string26701;Object constant34617;Object send160558;Object string26702;Object string26703;Object smallint26568;Object smallint26569;Object info5313;Object string26704;Object constant34618;Object send160559;Object send160560;Object method41055;Object methodclosure40958;Object send160561;Object string26705;Object string26706;Object smallint26570;Object smallint26571;Object info5314;Object method41056;Object methodclosure40959;Object localvariable27006;Object array24094;Object classreference13414;Object super2466;Object send160562;Object string26707;Object string26708;Object smallint26572;Object smallint26573;Object info5315;Object send160563;Object method41057;Object methodclosure40960;Object localvariable27007;Object array24095;Object super2467;Object assign20163;Object method41058;Object string26709;Object string26710;Object smallint26574;Object smallint26575;Object info5316;Object methodclosure40961;Object localvariable27008;Object array24096;Object localvariable27009;Object array24097;Object variable1859;Object array24098;Object localvariable27010;Object array24099;Object send160564;Object string26711;Object string26712;Object smallint26576;Object smallint26577;Object info5317;Object assign20164;Object send160565;Object block11731;Object send160566;Object block11732;Object send160567;Object block11733;Object send160568;Object method41059;Object methodclosure40962;Object localvariable27011;Object array24100;Object send160569;Object string26713;Object string26714;Object smallint26578;Object smallint26579;Object info5318;Object send160570;Object method41060;Object methodclosure40963;Object send160571;Object string26715;Object string26716;Object smallint26580;Object smallint26581;Object info5319;Object assign20165;Object localvariable27012;Object array24101;Object send160572;Object send160573;Object block11734;Object send160574;Object method41061;Object symbol44126;Object methodclosure40964;Object send160575;Object string26717;Object string26718;Object smallint26582;Object smallint26583;Object info5320;Object send160576;Object method41062;Object symbol44128;Object methodclosure40965;Object send160577;Object string26719;Object string26720;Object smallint26584;Object smallint26585;Object info5321;Object smallint26586;Object constant34619;Object send160578;Object smallint26587;Object constant34620;Object send160579;Object character686;Object constant34621;Object send160580;Object block11735;Object send160581;Object string26721;Object constant34622;Object send160582;Object string26722;Object constant34623;Object send160583;Object send160584;Object block11736;Object send160585;Object classreference13415;Object localvariable27013;Object array24102;Object assign20166;Object method41063;Object string26723;Object string26724;Object smallint26588;Object smallint26589;Object info5322;Object symbol44361;Object methodclosure40966;Object localvariable27014;Object array24103;Object localvariable27015;Object array24104;Object variable1860;Object array24105;Object send160586;Object string26725;Object string26726;Object smallint26590;Object smallint26591;Object info5323;Object assign20167;Object send160587;Object block11737;Object send160588;Object symbol44405;Object send160589;Object send160590;Object block11738;Object send160591;Object send160592;Object send160593;Object block11739;Object send160594;Object block11740;Object send160595;Object method41064;Object methodclosure40967;Object localvariable27016;Object array24106;Object assign20168;Object method41065;Object string26727;Object string26728;Object smallint26592;Object smallint26593;Object info5324;Object symbol44362;Object methodclosure40968;Object localvariable27017;Object localvariable27018;Object array24107;Object localvariable27019;Object array24108;Object send160596;Object string26729;Object string26730;Object smallint26594;Object smallint26595;Object info5325;Object send160597;Object send160598;Object send160599;Object block11741;Object send160600;Object send160601;Object method41066;Object symbol44360;Object methodclosure40969;Object smallint26596;Object constant34624;Object send160602;Object smallint26597;Object constant34625;Object send160603;Object send160604;Object method41067;Object symbol44124;Object methodclosure40970;Object localvariable27020;Object array24109;Object variable1861;Object array24110;Object send160605;Object string26731;Object string26732;Object smallint26598;Object smallint26599;Object info5326;Object send160606;Object send160607;Object block11742;Object send160608;Object send160609;Object assign20169;Object smallint26600;Object constant34626;Object smallint26601;Object constant34627;Object send160610;Object send160611;Object send160612;Object block11743;Object send160613;Object method41068;Object methodclosure40971;Object localvariable27021;Object array24111;Object smallint26602;Object constant34628;Object send160614;Object string26733;Object string26734;Object smallint26603;Object smallint26604;Object info5327;Object localvariable27022;Object array24112;Object send160615;Object send160616;Object block11744;Object send160617;Object method41069;Object methodclosure40972;Object send160618;Object send160619;Object super2468;Object method41070;Object methodclosure40973;Object method41071;Object string26735;Object string26736;Object smallint26605;Object smallint26606;Object info5328;Object methodclosure40974;Object localvariable27023;Object array24113;Object assign20170;Object method41072;Object string26737;Object string26738;Object smallint26607;Object smallint26608;Object info5329;Object methodclosure40975;Object classreference13416;Object symbol44189;Object send160620;Object string26739;Object string26740;Object smallint26609;Object smallint26610;Object info5330;Object string26741;Object constant34629;Object send160621;Object symbol44192;Object send160622;Object send160623;Object symbol44406;Object send160624;Object symbol44188;Object send160625;Object method41073;Object methodclosure40976;Object localvariable27024;Object array24114;Object send160626;Object string26742;Object string26743;Object smallint26611;Object smallint26612;Object info5331;Object send160627;Object method41074;Object methodclosure40977;Object localvariable27025;Object array24115;Object assign20171;Object method41075;Object string26744;Object string26745;Object smallint26613;Object smallint26614;Object info5332;Object symbol44190;Object methodclosure40978;Object method41076;Object string26746;Object string26747;Object smallint26615;Object smallint26616;Object info5333;Object methodclosure40979;Object classreference13417;Object localvariable27026;Object localvariable27027;Object array24116;Object localvariable27028;Object array24117;Object assign20172;Object send160628;Object string26748;Object string26749;Object smallint26617;Object smallint26618;Object info5334;Object block11745;Object send160629;Object smallint26619;Object constant34630;Object send160630;Object assign20173;Object block11746;Object send160631;Object method41077;Object methodclosure40980;Object localvariable27029;Object array24118;Object send160632;Object string26750;Object string26751;Object smallint26620;Object smallint26621;Object info5335;Object send160633;Object method41078;Object methodclosure40981;Object localvariable27030;Object array24119;Object variable1862;Object array24120;Object send160634;Object string26752;Object string26753;Object smallint26622;Object smallint26623;Object info5336;Object send160635;Object block11747;Object send160636;Object block11748;Object send160637;Object block11749;Object send160638;Object method41079;Object methodclosure40982;Object send160639;Object string26754;Object string26755;Object smallint26624;Object smallint26625;Object info5337;Object symbol44407;Object send160640;Object send160641;Object method41080;Object symbol44187;Object methodclosure40983;Object method41081;Object string26756;Object string26757;Object smallint26626;Object smallint26627;Object info5338;Object methodclosure40984;Object localvariable27031;Object array24121;Object assign20174;Object method41082;Object string26758;Object string26759;Object smallint26628;Object smallint26629;Object info5339;Object symbol44191;Object methodclosure40985;Object classreference13418;Object method41083;Object string26760;Object string26761;Object smallint26630;Object smallint26631;Object info5340;Object symbol44221;Object methodclosure40986;Object send160642;Object string26762;Object string26763;Object smallint26632;Object smallint26633;Object info5341;Object symbol44193;Object send160643;Object method41084;Object methodclosure40987;Object send160644;Object string26764;Object string26765;Object smallint26634;Object smallint26635;Object info5342;Object send160645;Object method41085;Object methodclosure40988;Object localvariable27032;Object array24122;Object assign20175;Object method41086;Object string26766;Object string26767;Object smallint26636;Object smallint26637;Object info5343;Object symbol44222;Object methodclosure40989;Object classreference13419;Object method41087;Object string26768;Object string26769;Object smallint26638;Object smallint26639;Object info5344;Object methodclosure40990;Object method41088;Object string26770;Object string26771;Object smallint26640;Object smallint26641;Object info5345;Object symbol44229;Object methodclosure40991;Object send160646;Object string26772;Object string26773;Object smallint26642;Object smallint26643;Object info5346;Object send160647;Object method41089;Object methodclosure40992;Object localvariable27033;Object array24123;Object smallint26644;Object constant34631;Object symbol44227;Object constant34632;Object send160648;Object string26774;Object string26775;Object smallint26645;Object smallint26646;Object info5347;Object smallint26647;Object constant34633;Object constant34634;Object send160649;Object smallint26648;Object constant34635;Object constant34636;Object send160650;Object smallint26649;Object constant34637;Object constant34638;Object send160651;Object send160652;Object block11750;Object smallint26650;Object constant34639;Object send160653;Object send160654;Object method41090;Object symbol44233;Object methodclosure40993;Object localvariable27034;Object array24124;Object assign20176;Object method41091;Object string26776;Object string26777;Object smallint26651;Object smallint26652;Object info5348;Object symbol44226;Object methodclosure40994;Object method41092;Object string26778;Object string26779;Object smallint26653;Object smallint26654;Object info5349;Object methodclosure40995;Object localvariable27035;Object array24125;Object super2469;Object string26780;Object constant34640;Object send160655;Object string26781;Object string26782;Object smallint26655;Object smallint26656;Object info5350;Object send160656;Object send160657;Object string26783;Object constant34641;Object send160658;Object method41093;Object methodclosure40996;Object method41094;Object string26784;Object string26785;Object smallint26657;Object smallint26658;Object info5351;Object methodclosure40997;Object localvariable27036;Object array24126;Object assign20177;Object method41095;Object string26786;Object string26787;Object smallint26659;Object smallint26660;Object info5352;Object methodclosure40998;Object localvariable27037;Object array24127;Object assign20178;Object method41096;Object string26788;Object string26789;Object smallint26661;Object smallint26662;Object info5353;Object methodclosure40999;Object localvariable27038;Object array24128;Object assign20179;Object method41097;Object string26790;Object string26791;Object smallint26663;Object smallint26664;Object info5354;Object symbol44232;Object methodclosure41000;Object classreference13420;Object send160659;Object string26792;Object string26793;Object smallint26665;Object smallint26666;Object info5355;Object send160660;Object method41098;Object methodclosure41001;Object classreference13421;Object localvariable27039;Object array24129;Object send160661;Object string26794;Object string26795;Object smallint26667;Object smallint26668;Object info5356;Object method41099;Object methodclosure41002;Object method41100;Object string26796;Object string26797;Object smallint26669;Object smallint26670;Object info5357;Object methodclosure41003;Object classreference13422;Object send160662;Object string26798;Object string26799;Object smallint26671;Object smallint26672;Object info5358;Object send160663;Object send160664;Object method41101;Object methodclosure41004;Object localvariable27040;Object array24130;Object smallint26673;Object constant34642;Object send160665;Object string26800;Object string26801;Object smallint26674;Object smallint26675;Object info5359;Object localvariable27041;Object array24131;Object send160666;Object send160667;Object block11751;Object send160668;Object method41102;Object methodclosure41005;Object send160669;Object string26802;Object string26803;Object smallint26676;Object smallint26677;Object info5360;Object send160670;Object method41103;Object symbol44194;Object methodclosure41006;Object send160671;Object string26804;Object string26805;Object smallint26678;Object smallint26679;Object info5361;Object send160672;Object method41104;Object methodclosure41007;Object send160673;Object string26806;Object string26807;Object smallint26680;Object smallint26681;Object info5362;Object send160674;Object method41105;Object methodclosure41008;Object localvariable27042;Object array24132;Object assign20180;Object method41106;Object string26808;Object string26809;Object smallint26682;Object smallint26683;Object info5363;Object symbol44195;Object methodclosure41009;Object classreference13423;Object classreference13424;Object super2470;Object send160675;Object string26810;Object string26811;Object smallint26684;Object smallint26685;Object info5364;Object assign20181;Object method41107;Object methodclosure41010;Object method41108;Object string26812;Object string26813;Object smallint26686;Object smallint26687;Object info5365;Object symbol44214;Object methodclosure41011;Object symbol44408;Object string26814;Object constant34643;Object send160676;Object string26815;Object string26816;Object smallint26688;Object smallint26689;Object info5366;Object string26817;Object constant34644;Object send160677;Object method41109;Object methodclosure41012;Object localvariable27043;Object array24133;Object assign20182;Object method41110;Object string26818;Object string26819;Object smallint26690;Object smallint26691;Object info5367;Object symbol44215;Object methodclosure41013;Object classreference13425;Object method41111;Object string26820;Object string26821;Object smallint26692;Object smallint26693;Object info5368;Object methodclosure41014;Object localvariable27044;Object array24134;Object assign20183;Object method41112;Object string26822;Object string26823;Object smallint26694;Object smallint26695;Object info5369;Object methodclosure41015;Object classreference13426;Object send160678;Object string26824;Object string26825;Object smallint26696;Object smallint26697;Object info5370;Object symbol44196;Object symbol44197;Object send160679;Object send160680;Object method41113;Object symbol44198;Object methodclosure41016;Object localvariable27045;Object array24135;Object assign20184;Object method41114;Object string26826;Object string26827;Object smallint26698;Object smallint26699;Object info5371;Object methodclosure41017;Object method41115;Object string26828;Object string26829;Object smallint26700;Object smallint26701;Object info5372;Object methodclosure41018;Object classreference13427;Object classreference13428;Object classreference13429;Object localvariable27046;Object array24136;Object assign20185;Object method41116;Object string26830;Object string26831;Object smallint26702;Object smallint26703;Object info5373;Object symbol44223;Object methodclosure41019;Object localvariable27047;Object array24137;Object send160681;Object string26832;Object string26833;Object smallint26704;Object smallint26705;Object info5374;Object send160682;Object send160683;Object send160684;Object super2471;Object send160685;Object send160686;Object symbol44224;Object send160687;Object send160688;Object method41117;Object methodclosure41020;Object super2472;Object method41118;Object string26834;Object string26835;Object smallint26706;Object smallint26707;Object info5375;Object methodclosure41021;Object method41119;Object string26836;Object string26837;Object smallint26708;Object smallint26709;Object info5376;Object methodclosure41022;Object localvariable27048;Object array24138;Object assign20186;Object method41120;Object string26838;Object string26839;Object smallint26710;Object smallint26711;Object info5377;Object methodclosure41023;Object localvariable27049;Object array24139;Object symbol44166;Object send160689;Object string26840;Object string26841;Object smallint26712;Object smallint26713;Object info5378;Object assign20187;Object method41121;Object methodclosure41024;Object method41122;Object string26842;Object string26843;Object smallint26714;Object smallint26715;Object info5379;Object methodclosure41025;Object classreference13430;Object localvariable27050;Object array24140;Object assign20188;Object method41123;Object string26844;Object string26845;Object smallint26716;Object smallint26717;Object info5380;Object symbol44165;Object methodclosure41026;Object method41124;Object string26846;Object string26847;Object smallint26718;Object smallint26719;Object info5381;Object methodclosure41027;Object method41125;Object string26848;Object string26849;Object smallint26720;Object smallint26721;Object info5382;Object methodclosure41028;Object localvariable27051;Object array24141;Object send160690;Object string26850;Object string26851;Object smallint26722;Object smallint26723;Object info5383;Object method41126;Object methodclosure41029;Object send160691;Object string26852;Object string26853;Object smallint26724;Object smallint26725;Object info5384;Object send160692;Object smallint26726;Object constant34645;Object send160693;Object send160694;Object send160695;Object send160696;Object send160697;Object method41127;Object symbol44170;Object methodclosure41030;Object method41128;Object string26854;Object string26855;Object smallint26727;Object smallint26728;Object info5385;Object symbol44167;Object methodclosure41031;Object localvariable27052;Object array24142;Object localvariable27053;Object array24143;Object variable1863;Object array24144;Object send160698;Object string26856;Object string26857;Object smallint26729;Object smallint26730;Object info5386;Object symbol44409;Object constant34646;Object send160699;Object super2473;Object send160700;Object block11752;Object send160701;Object string26858;Object constant34647;Object send160702;Object send160703;Object smallint26731;Object constant34648;Object send160704;Object send160705;Object send160706;Object send160707;Object send160708;Object string26859;Object constant34649;Object send160709;Object send160710;Object assign20189;Object send160711;Object symbol44410;Object send160712;Object block11753;Object send160713;Object method41129;Object methodclosure41032;Object string26860;Object constant34650;Object method41130;Object string26861;Object string26862;Object smallint26732;Object smallint26733;Object info5387;Object symbol44168;Object methodclosure41033;Object send160714;Object string26863;Object string26864;Object smallint26734;Object smallint26735;Object info5388;Object send160715;Object symbol44411;Object send160716;Object assign20190;Object block11754;Object send160717;Object method41131;Object methodclosure41034;Object classreference13431;Object classreference13432;Object instancevariable16448;Object method41132;Object string26865;Object string26866;Object smallint26736;Object smallint26737;Object info5389;Object methodclosure41035;Object method41133;Object string26867;Object string26868;Object smallint26738;Object smallint26739;Object info5390;Object methodclosure41036;Object string26869;Object constant34651;Object send160718;Object string26870;Object string26871;Object smallint26740;Object smallint26741;Object info5391;Object method41134;Object methodclosure41037;Object classreference13433;Object localvariable27054;Object array24145;Object send160719;Object string26872;Object string26873;Object smallint26742;Object smallint26743;Object info5392;Object send160720;Object send160721;Object block11755;Object send160722;Object method41135;Object methodclosure41038;Object classreference13434;Object method41136;Object string26874;Object string26875;Object smallint26744;Object smallint26745;Object info5393;Object symbol44140;Object methodclosure41039;Object localvariable27055;Object array24146;Object assign20191;Object method41137;Object string26876;Object string26877;Object smallint26746;Object smallint26747;Object info5394;Object symbol44141;Object methodclosure41040;Object classreference13435;Object localvariable27056;Object array24147;Object method41138;Object string26878;Object string26879;Object smallint26748;Object smallint26749;Object info5395;Object methodclosure41041;Object localvariable27057;Object array24148;Object send160723;Object string26880;Object string26881;Object smallint26750;Object smallint26751;Object info5396;Object method41139;Object methodclosure41042;Object classreference13436;Object localvariable27058;Object array24149;Object localvariable27059;Object array24150;Object variable1864;Object array24151;Object send160724;Object string26882;Object string26883;Object smallint26752;Object smallint26753;Object info5397;Object constant34652;Object send160725;Object super2474;Object send160726;Object block11756;Object send160727;Object string26884;Object constant34653;Object send160728;Object send160729;Object string26885;Object constant34654;Object send160730;Object send160731;Object assign20192;Object send160732;Object send160733;Object block11757;Object send160734;Object method41140;Object methodclosure41043;Object classreference13437;Object localvariable27060;Object array24152;Object send160735;Object string26886;Object string26887;Object smallint26754;Object smallint26755;Object info5398;Object method41141;Object methodclosure41044;Object localvariable27061;Object array24153;Object method41142;Object string26888;Object string26889;Object smallint26756;Object smallint26757;Object info5399;Object methodclosure41045;Object classreference13438;Object localvariable27062;Object array24154;Object super2475;Object string26890;Object constant34655;Object send160736;Object string26891;Object string26892;Object smallint26758;Object smallint26759;Object info5400;Object send160737;Object send160738;Object string26893;Object constant34656;Object send160739;Object symbol44358;Object send160740;Object send160741;Object string26894;Object constant34657;Object send160742;Object symbol44357;Object send160743;Object send160744;Object method41143;Object methodclosure41046;Object localvariable27063;Object array24155;Object assign20193;Object method41144;Object string26895;Object string26896;Object smallint26760;Object smallint26761;Object info5401;Object methodclosure41047;Object method41145;Object string26897;Object string26898;Object smallint26762;Object smallint26763;Object info5402;Object methodclosure41048;Object localvariable27064;Object array24156;Object assign20194;Object method41146;Object string26899;Object string26900;Object smallint26764;Object smallint26765;Object info5403;Object methodclosure41049;Object method41147;Object string26901;Object string26902;Object smallint26766;Object smallint26767;Object info5404;Object methodclosure41050;Object localvariable27065;Object array24157;Object assign20195;Object method41148;Object string26903;Object string26904;Object smallint26768;Object smallint26769;Object info5405;Object symbol44359;Object methodclosure41051;Object method41149;Object string26905;Object string26906;Object smallint26770;Object smallint26771;Object info5406;Object methodclosure41052;Object method41150;Object string26907;Object string26908;Object smallint26772;Object smallint26773;Object info5407;Object methodclosure41053;Object localvariable27066;Object array24158;Object send160745;Object string26909;Object string26910;Object smallint26774;Object smallint26775;Object info5408;Object send160746;Object send160747;Object method41151;Object methodclosure41054;Object classreference13439;Object localvariable27067;Object array24159;Object classreference13440;Object localvariable27068;Object array24160;Object assign20196;Object method41152;Object string26911;Object string26912;Object smallint26776;Object smallint26777;Object info5409;Object symbol44350;Object methodclosure41055;Object localvariable27069;Object array24161;Object localvariable27070;Object array24162;Object symbol44161;Object send160748;Object string26913;Object string26914;Object smallint26778;Object smallint26779;Object info5410;Object assign20197;Object method41153;Object methodclosure41056;Object localvariable27071;Object array24163;Object localvariable27072;Object localvariable27073;Object array24164;Object classreference13441;Object localvariable27074;Object array24165;Object symbol44154;Object send160749;Object string26915;Object string26916;Object smallint26780;Object smallint26781;Object info5411;Object block11758;Object block11759;Object send160750;Object method41154;Object methodclosure41057;Object localvariable27075;Object array24166;Object localvariable27076;Object localvariable27077;Object array24167;Object variable1865;Object array24168;Object assign20198;Object symbol44160;Object send160751;Object string26917;Object string26918;Object smallint26782;Object smallint26783;Object info5412;Object symbol44368;Object symbol44153;Object send160752;Object block11760;Object send160753;Object assign20199;Object symbol44412;Object send160754;Object assign20200;Object symbol44413;Object send160755;Object send160756;Object block11761;Object send160757;Object send160758;Object send160759;Object block11762;Object send160760;Object block11763;Object send160761;Object method41155;Object methodclosure41058;Object send160762;Object string26919;Object string26920;Object smallint26784;Object smallint26785;Object info5413;Object method41156;Object symbol44155;Object methodclosure41059;Object localvariable27078;Object localvariable27079;Object array24169;Object super2476;Object assign20201;Object send160763;Object string26921;Object string26922;Object smallint26786;Object smallint26787;Object info5414;Object smallint26788;Object constant34658;Object send160764;Object send160765;Object assign20202;Object method41157;Object symbol44157;Object methodclosure41060;Object localvariable27080;Object array24170;Object localvariable27081;Object array24171;Object symbol44351;Object send160766;Object string26923;Object string26924;Object smallint26789;Object smallint26790;Object info5415;Object assign20203;Object symbol44414;Object send160767;Object method41158;Object methodclosure41061;Object localvariable27082;Object array24172;Object variable1866;Object array24173;Object smallint26791;Object constant34659;Object send160768;Object string26925;Object string26926;Object smallint26792;Object smallint26793;Object info5416;Object send160769;Object assign20204;Object send160770;Object block11764;Object send160771;Object smallint26794;Object constant34660;Object send160772;Object classreference13442;Object send160773;Object send160774;Object block11765;Object send160775;Object method41159;Object methodclosure41062;Object localvariable27083;Object array24174;Object localvariable27084;Object localvariable27085;Object array24175;Object variable1867;Object array24176;Object symbol44415;Object send160776;Object string26927;Object string26928;Object smallint26795;Object smallint26796;Object info5417;Object assign20205;Object assign20206;Object send160777;Object block11766;Object send160778;Object send160779;Object block11767;Object send160780;Object send160781;Object send160782;Object send160783;Object send160784;Object block11768;Object send160785;Object block11769;Object send160786;Object block11770;Object send160787;Object method41160;Object methodclosure41063;Object send160788;Object string26929;Object string26930;Object smallint26797;Object smallint26798;Object info5418;Object assign20207;Object send160789;Object assign20208;Object method41161;Object symbol44349;Object methodclosure41064;Object super2477;Object send160790;Object string26931;Object string26932;Object smallint26799;Object smallint26800;Object info5419;Object symbol44342;Object send160791;Object assign20209;Object method41162;Object methodclosure41065;Object localvariable27086;Object array24177;Object localvariable27087;Object array24178;Object variable1868;Object array24179;Object send160792;Object string26933;Object string26934;Object smallint26801;Object smallint26802;Object info5420;Object assign20210;Object symbol44416;Object block11771;Object send160793;Object block11772;Object send160794;Object send160795;Object block11773;Object send160796;Object block11774;Object send160797;Object method41163;Object methodclosure41066;Object localvariable27088;Object array24180;Object send160798;Object string26935;Object string26936;Object smallint26803;Object smallint26804;Object info5421;Object assign20211;Object method41164;Object methodclosure41067;Object localvariable27089;Object array24181;Object assign20212;Object method41165;Object string26937;Object string26938;Object smallint26805;Object smallint26806;Object info5422;Object symbol44348;Object methodclosure41068;Object send160799;Object string26939;Object string26940;Object smallint26807;Object smallint26808;Object info5423;Object send160800;Object send160801;Object send160802;Object send160803;Object send160804;Object assign20213;Object block11775;Object send160805;Object smallint26809;Object constant34661;Object smallint26810;Object constant34662;Object send160806;Object send160807;Object method41166;Object symbol44346;Object methodclosure41069;Object send160808;Object string26941;Object string26942;Object smallint26811;Object smallint26812;Object info5424;Object symbol44331;Object send160809;Object assign20214;Object block11776;Object send160810;Object method41167;Object symbol44343;Object methodclosure41070;Object localvariable27090;Object array24182;Object send160811;Object string26943;Object string26944;Object smallint26813;Object smallint26814;Object info5425;Object send160812;Object method41168;Object methodclosure41071;Object send160813;Object string26945;Object string26946;Object smallint26815;Object smallint26816;Object info5426;Object method41169;Object symbol44341;Object methodclosure41072;Object localvariable27091;Object localvariable27092;Object localvariable27093;Object array24183;Object symbol44344;Object send160814;Object string26947;Object string26948;Object smallint26817;Object smallint26818;Object info5427;Object send160815;Object method41170;Object symbol44347;Object methodclosure41073;Object localvariable27094;Object localvariable27095;Object array24184;Object send160816;Object string26949;Object string26950;Object smallint26819;Object smallint26820;Object info5428;Object send160817;Object method41171;Object methodclosure41074;Object send160818;Object string26951;Object string26952;Object smallint26821;Object smallint26822;Object info5429;Object method41172;Object methodclosure41075;Object string26953;Object constant34663;Object send160819;Object string26954;Object string26955;Object smallint26823;Object smallint26824;Object info5430;Object assign20215;Object string26956;Object constant34664;Object send160820;Object symbol44330;Object send160821;Object send160822;Object symbol44417;Object send160823;Object symbol44418;Object send160824;Object send160825;Object symbol44419;Object send160826;Object send160827;Object symbol44420;Object send160828;Object send160829;Object symbol44421;Object send160830;Object send160831;Object send160832;Object symbol44340;Object send160833;Object send160834;Object symbol44372;Object string26957;Object constant34665;Object send160835;Object send160836;Object send160837;Object localvariable27096;Object array24185;Object send160838;Object send160839;Object block11777;Object send160840;Object method41173;Object symbol44268;Object methodclosure41076;Object string26958;Object constant34666;Object symbol44422;Object send160841;Object string26959;Object string26960;Object smallint26825;Object smallint26826;Object info5431;Object localvariable27097;Object array24186;Object send160842;Object send160843;Object block11778;Object send160844;Object method41174;Object symbol44261;Object methodclosure41077;Object symbol44423;Object send160845;Object string26961;Object string26962;Object smallint26827;Object smallint26828;Object info5432;Object symbol44424;Object send160846;Object send160847;Object symbol44425;Object send160848;Object send160849;Object symbol44426;Object send160850;Object send160851;Object method41175;Object symbol44306;Object methodclosure41078;Object string26963;Object constant34667;Object symbol44427;Object send160852;Object string26964;Object string26965;Object smallint26829;Object smallint26830;Object info5433;Object symbol44335;Object send160853;Object localvariable27098;Object array24187;Object localvariable27099;Object array24188;Object string26966;Object constant34668;Object localvariable27100;Object localvariable27101;Object array24189;Object send160854;Object block11779;Object send160855;Object send160856;Object string26967;Object constant34669;Object send160857;Object block11780;Object send160858;Object send160859;Object block11781;Object send160860;Object method41176;Object symbol44273;Object methodclosure41079;Object localvariable27102;Object array24190;Object assign20216;Object method41177;Object string26968;Object string26969;Object smallint26831;Object smallint26832;Object info5434;Object symbol44311;Object methodclosure41080;Object string26970;Object constant34670;Object send160861;Object string26971;Object string26972;Object smallint26833;Object smallint26834;Object info5435;Object localvariable27103;Object array24191;Object send160862;Object send160863;Object block11782;Object send160864;Object method41178;Object symbol44255;Object methodclosure41081;Object string26973;Object constant34671;Object string26974;Object constant34672;Object send160865;Object string26975;Object string26976;Object smallint26835;Object smallint26836;Object info5436;Object send160866;Object symbol44326;Object send160867;Object send160868;Object localvariable27104;Object array24192;Object send160869;Object send160870;Object block11783;Object send160871;Object method41179;Object symbol44283;Object methodclosure41082;Object string26977;Object constant34673;Object symbol44428;Object send160872;Object string26978;Object string26979;Object smallint26837;Object smallint26838;Object info5437;Object symbol44429;Object send160873;Object send160874;Object symbol44430;Object send160875;Object send160876;Object send160877;Object method41180;Object symbol44295;Object methodclosure41083;Object string26980;Object constant34674;Object symbol44431;Object send160878;Object string26981;Object string26982;Object smallint26839;Object smallint26840;Object info5438;Object symbol44323;Object send160879;Object localvariable27105;Object array24193;Object string26983;Object constant34675;Object localvariable27106;Object localvariable27107;Object array24194;Object send160880;Object string26984;Object constant34676;Object send160881;Object block11784;Object send160882;Object block11785;Object send160883;Object method41181;Object symbol44265;Object methodclosure41084;Object symbol44278;Object send160884;Object string26985;Object string26986;Object smallint26841;Object smallint26842;Object info5439;Object constant34677;Object string26987;Object constant34678;Object symbol44432;Object send160885;Object symbol44433;Object send160886;Object send160887;Object symbol44434;Object send160888;Object send160889;Object localvariable27108;Object array24195;Object smallint26843;Object constant34679;Object send160890;Object localvariable27109;Object array24196;Object send160891;Object send160892;Object send160893;Object symbol44285;Object smallint26844;Object constant34680;Object send160894;Object send160895;Object send160896;Object send160897;Object block11786;Object send160898;Object send160899;Object send160900;Object block11787;Object send160901;Object send160902;Object symbol44262;Object send160903;Object send160904;Object method41182;Object symbol44277;Object methodclosure41085;Object send160905;Object string26988;Object string26989;Object smallint26845;Object smallint26846;Object info5440;Object string26990;Object constant34681;Object send160906;Object symbol44338;Object send160907;Object send160908;Object send160909;Object method41183;Object symbol44303;Object methodclosure41086;Object string26991;Object constant34682;Object send160910;Object string26992;Object string26993;Object smallint26847;Object smallint26848;Object info5441;Object send160911;Object send160912;Object send160913;Object localvariable27110;Object array24197;Object localvariable27111;Object array24198;Object symbol44435;Object constant34683;Object send160914;Object send160915;Object localvariable27112;Object array24199;Object constant34684;Object send160916;Object send160917;Object constant34685;Object send160918;Object string26994;Object constant34686;Object send160919;Object string26995;Object constant34687;Object send160920;Object send160921;Object send160922;Object block11788;Object send160923;Object send160924;Object send160925;Object symbol44436;Object constant34688;Object send160926;Object send160927;Object block11789;Object send160928;Object send160929;Object block11790;Object send160930;Object method41184;Object symbol44247;Object methodclosure41087;Object string26996;Object constant34689;Object symbol44437;Object send160931;Object string26997;Object string26998;Object smallint26849;Object smallint26850;Object info5442;Object symbol44438;Object send160932;Object send160933;Object send160934;Object send160935;Object send160936;Object send160937;Object send160938;Object method41185;Object symbol44270;Object methodclosure41088;Object string26999;Object constant34690;Object send160939;Object string27000;Object string27001;Object smallint26851;Object smallint26852;Object info5443;Object symbol44439;Object send160940;Object send160941;Object send160942;Object localvariable27113;Object array24200;Object localvariable27114;Object array24201;Object localvariable27115;Object array24202;Object send160943;Object send160944;Object block11791;Object send160945;Object send160946;Object send160947;Object constant34691;Object send160948;Object send160949;Object send160950;Object constant34692;Object send160951;Object send160952;Object block11792;Object send160953;Object send160954;Object block11793;Object send160955;Object method41186;Object symbol44315;Object methodclosure41089;Object send160956;Object string27002;Object string27003;Object smallint26853;Object smallint26854;Object info5444;Object send160957;Object send160958;Object send160959;Object send160960;Object send160961;Object send160962;Object symbol44440;Object send160963;Object send160964;Object method41187;Object symbol44259;Object methodclosure41090;Object string27004;Object constant34693;Object send160965;Object string27005;Object string27006;Object smallint26855;Object smallint26856;Object info5445;Object string27007;Object constant34694;Object send160966;Object send160967;Object send160968;Object send160969;Object localvariable27116;Object array24203;Object send160970;Object send160971;Object send160972;Object block11794;Object send160973;Object method41188;Object symbol44287;Object methodclosure41091;Object send160974;Object string27008;Object string27009;Object smallint26857;Object smallint26858;Object info5446;Object send160975;Object method41189;Object symbol44299;Object methodclosure41092;Object string27010;Object constant34695;Object string27011;Object constant34696;Object send160976;Object string27012;Object string27013;Object smallint26859;Object smallint26860;Object info5447;Object send160977;Object symbol44441;Object send160978;Object send160979;Object symbol44442;Object send160980;Object send160981;Object string27014;Object constant34697;Object send160982;Object send160983;Object send160984;Object send160985;Object method41190;Object symbol44280;Object methodclosure41093;Object string27015;Object constant34698;Object send160986;Object string27016;Object string27017;Object smallint26861;Object smallint26862;Object info5448;Object localvariable27117;Object array24204;Object send160987;Object send160988;Object block11795;Object send160989;Object method41191;Object symbol44269;Object methodclosure41094;Object constant34699;Object string27018;Object constant34700;Object send160990;Object string27019;Object string27020;Object smallint26863;Object smallint26864;Object info5449;Object block11796;Object send160991;Object method41192;Object symbol44292;Object methodclosure41095;Object send160992;Object string27021;Object string27022;Object smallint26865;Object smallint26866;Object info5450;Object send160993;Object send160994;Object send160995;Object send160996;Object method41193;Object methodclosure41096;Object string27023;Object constant34701;Object symbol44443;Object send160997;Object string27024;Object string27025;Object smallint26867;Object smallint26868;Object info5451;Object symbol44444;Object send160998;Object send160999;Object send161000;Object send161001;Object send161002;Object localvariable27118;Object array24205;Object send161003;Object send161004;Object localvariable27119;Object localvariable27120;Object array24206;Object send161005;Object block11797;Object send161006;Object block11798;Object send161007;Object method41194;Object symbol44307;Object methodclosure41097;Object string27026;Object constant34702;Object send161008;Object string27027;Object string27028;Object smallint26869;Object smallint26870;Object info5452;Object send161009;Object symbol44445;Object send161010;Object send161011;Object method41195;Object symbol44274;Object methodclosure41098;Object string27029;Object constant34703;Object string27030;Object constant34704;Object send161012;Object string27031;Object string27032;Object smallint26871;Object smallint26872;Object info5453;Object send161013;Object symbol44446;Object send161014;Object send161015;Object send161016;Object send161017;Object send161018;Object string27033;Object constant34705;Object send161019;Object send161020;Object send161021;Object localvariable27121;Object array24207;Object send161022;Object localvariable27122;Object array24208;Object smallint26873;Object constant34706;Object send161023;Object send161024;Object send161025;Object block11799;Object send161026;Object send161027;Object send161028;Object block11800;Object send161029;Object method41196;Object symbol44319;Object methodclosure41099;Object localvariable27123;Object localvariable27124;Object array24209;Object string27034;Object constant34707;Object send161030;Object string27035;Object string27036;Object smallint26874;Object smallint26875;Object info5454;Object send161031;Object assign20217;Object string27037;Object constant34708;Object send161032;Object send161033;Object send161034;Object send161035;Object send161036;Object localvariable27125;Object array24210;Object symbol44447;Object send161037;Object assign20218;Object string27038;Object constant34709;Object localvariable27126;Object localvariable27127;Object array24211;Object send161038;Object block11801;Object send161039;Object assign20219;Object localvariable27128;Object localvariable27129;Object array24212;Object string27039;Object constant34710;Object send161040;Object string27040;Object constant34711;Object localvariable27130;Object localvariable27131;Object array24213;Object send161041;Object block11802;Object send161042;Object send161043;Object block11803;Object send161044;Object block11804;Object send161045;Object method41197;Object symbol44300;Object methodclosure41100;Object send161046;Object string27041;Object string27042;Object smallint26876;Object smallint26877;Object info5455;Object method41198;Object symbol44312;Object methodclosure41101;Object string27043;Object constant34712;Object send161047;Object string27044;Object string27045;Object smallint26878;Object smallint26879;Object info5456;Object send161048;Object send161049;Object send161050;Object send161051;Object send161052;Object localvariable27132;Object array24214;Object send161053;Object send161054;Object localvariable27133;Object localvariable27134;Object array24215;Object send161055;Object block11805;Object send161056;Object block11806;Object send161057;Object method41199;Object symbol44256;Object methodclosure41102;Object localvariable27135;Object array24216;Object string27046;Object constant34713;Object send161058;Object string27047;Object string27048;Object smallint26880;Object smallint26881;Object info5457;Object assign20220;Object send161059;Object send161060;Object send161061;Object send161062;Object method41200;Object symbol44284;Object methodclosure41103;Object localvariable27136;Object array24217;Object string27049;Object constant34714;Object send161063;Object string27050;Object string27051;Object smallint26882;Object smallint26883;Object info5458;Object send161064;Object send161065;Object send161066;Object localvariable27137;Object array24218;Object send161067;Object assign20221;Object smallint26884;Object constant34715;Object send161068;Object localvariable27138;Object array24219;Object localvariable27139;Object array24220;Object send161069;Object send161070;Object block11807;Object send161071;Object send161072;Object assign20222;Object block11808;Object send161073;Object block11809;Object send161074;Object method41201;Object symbol44296;Object methodclosure41104;Object send161075;Object string27052;Object string27053;Object smallint26885;Object smallint26886;Object info5459;Object string27054;Object constant34716;Object send161076;Object send161077;Object send161078;Object method41202;Object symbol44266;Object methodclosure41105;Object constant34717;Object string27055;Object constant34718;Object send161079;Object string27056;Object string27057;Object smallint26887;Object smallint26888;Object info5460;Object block11810;Object send161080;Object method41203;Object methodclosure41106;Object localvariable27140;Object array24221;Object localvariable27141;Object array24222;Object send161081;Object string27058;Object string27059;Object smallint26889;Object smallint26890;Object info5461;Object string27060;Object constant34719;Object send161082;Object send161083;Object send161084;Object send161085;Object assign20223;Object send161086;Object symbol44448;Object send161087;Object block11811;Object super2478;Object block11812;Object send161088;Object block11813;Object send161089;Object method41204;Object methodclosure41107;Object string27061;Object constant34720;Object send161090;Object string27062;Object string27063;Object smallint26891;Object smallint26892;Object info5462;Object method41205;Object symbol44304;Object methodclosure41108;Object super2479;Object classreference13443;Object localvariable27142;Object localvariable27143;Object array24223;Object symbol44449;Object send161091;Object string27064;Object string27065;Object smallint26893;Object smallint26894;Object info5463;Object send161092;Object block11814;Object send161093;Object method41206;Object methodclosure41109;Object localvariable27144;Object array24224;Object variable1869;Object array24225;Object send161094;Object string27066;Object string27067;Object smallint26895;Object smallint26896;Object info5464;Object block11815;Object send161095;Object block11816;Object send161096;Object method41207;Object methodclosure41110;Object send161097;Object string27068;Object string27069;Object smallint26897;Object smallint26898;Object info5465;Object assign20224;Object send161098;Object assign20225;Object smallint26899;Object constant34721;Object assign20226;Object method41208;Object methodclosure41111;Object send161099;Object string27070;Object string27071;Object smallint26900;Object smallint26901;Object info5466;Object send161100;Object send161101;Object method41209;Object symbol44271;Object methodclosure41112;Object string27072;Object constant34722;Object send161102;Object string27073;Object string27074;Object smallint26902;Object smallint26903;Object info5467;Object method41210;Object symbol44248;Object methodclosure41113;Object string27075;Object constant34723;Object send161103;Object string27076;Object string27077;Object smallint26904;Object smallint26905;Object info5468;Object localvariable27145;Object array24226;Object send161104;Object send161105;Object block11817;Object send161106;Object method41211;Object symbol44316;Object methodclosure41114;Object constant34724;Object string27078;Object constant34725;Object send161107;Object string27079;Object string27080;Object smallint26906;Object smallint26907;Object info5469;Object block11818;Object send161108;Object method41212;Object symbol44288;Object methodclosure41115;Object string27081;Object constant34726;Object send161109;Object string27082;Object string27083;Object smallint26908;Object smallint26909;Object info5470;Object localvariable27146;Object array24227;Object send161110;Object send161111;Object block11819;Object send161112;Object method41213;Object symbol44253;Object methodclosure41116;Object string27084;Object constant34727;Object string27085;Object constant34728;Object send161113;Object string27086;Object string27087;Object smallint26910;Object smallint26911;Object info5471;Object send161114;Object symbol44450;Object send161115;Object send161116;Object localvariable27147;Object array24228;Object send161117;Object send161118;Object send161119;Object block11820;Object send161120;Object method41214;Object symbol44281;Object methodclosure41117;Object localvariable27148;Object array24229;Object string27088;Object constant34729;Object send161121;Object string27089;Object string27090;Object smallint26912;Object smallint26913;Object info5472;Object send161122;Object symbol44451;Object send161123;Object send161124;Object symbol44452;Object send161125;Object send161126;Object symbol44453;Object send161127;Object send161128;Object send161129;Object send161130;Object localvariable27149;Object array24230;Object smallint26914;Object constant34730;Object send161131;Object symbol44454;Object send161132;Object send161133;Object localvariable27150;Object array24231;Object send161134;Object send161135;Object send161136;Object smallint26915;Object constant34731;Object send161137;Object send161138;Object block11821;Object send161139;Object send161140;Object block11822;Object send161141;Object block11823;Object symbol44455;Object send161142;Object send161143;Object send161144;Object send161145;Object method41215;Object symbol44293;Object methodclosure41118;Object send161146;Object string27091;Object string27092;Object smallint26916;Object smallint26917;Object info5473;Object symbol44456;Object send161147;Object send161148;Object symbol44457;Object send161149;Object send161150;Object symbol44458;Object send161151;Object send161152;Object symbol44459;Object send161153;Object send161154;Object symbol44460;Object send161155;Object send161156;Object method41216;Object symbol44263;Object methodclosure41119;Object send161157;Object string27093;Object string27094;Object smallint26918;Object smallint26919;Object info5474;Object send161158;Object method41217;Object symbol44308;Object methodclosure41120;Object string27095;Object constant34732;Object send161159;Object string27096;Object string27097;Object smallint26920;Object smallint26921;Object info5475;Object symbol44461;Object send161160;Object send161161;Object send161162;Object send161163;Object send161164;Object method41218;Object symbol44275;Object methodclosure41121;Object string27098;Object constant34733;Object send161165;Object string27099;Object string27100;Object smallint26922;Object smallint26923;Object info5476;Object send161166;Object send161167;Object send161168;Object send161169;Object send161170;Object send161171;Object symbol44462;Object send161172;Object send161173;Object method41219;Object symbol44301;Object methodclosure41122;Object string27101;Object constant34734;Object send161174;Object string27102;Object string27103;Object smallint26924;Object smallint26925;Object info5477;Object send161175;Object send161176;Object localvariable27151;Object array24232;Object localvariable27152;Object array24233;Object send161177;Object send161178;Object send161179;Object smallint26926;Object constant34735;Object send161180;Object send161181;Object block11824;Object send161182;Object send161183;Object block11825;Object send161184;Object method41220;Object symbol44313;Object methodclosure41123;Object string27104;Object constant34736;Object string27105;Object constant34737;Object send161185;Object string27106;Object string27107;Object smallint26927;Object smallint26928;Object info5478;Object send161186;Object symbol44463;Object send161187;Object symbol44464;Object send161188;Object send161189;Object send161190;Object send161191;Object send161192;Object send161193;Object send161194;Object send161195;Object send161196;Object string27108;Object constant34738;Object send161197;Object send161198;Object send161199;Object localvariable27153;Object array24234;Object localvariable27154;Object array24235;Object send161200;Object symbol44379;Object send161201;Object block11826;Object send161202;Object send161203;Object smallint26929;Object constant34739;Object send161204;Object send161205;Object block11827;Object send161206;Object send161207;Object smallint26930;Object constant34740;Object send161208;Object send161209;Object block11828;Object send161210;Object send161211;Object block11829;Object send161212;Object method41221;Object symbol44257;Object methodclosure41124;Object localvariable27155;Object array24236;Object variable1870;Object array24237;Object symbol44465;Object send161213;Object string27109;Object string27110;Object smallint26931;Object smallint26932;Object info5479;Object send161214;Object block11830;Object send161215;Object send161216;Object block11831;Object send161217;Object method41222;Object methodclosure41125;Object string27111;Object constant34741;Object send161218;Object string27112;Object string27113;Object smallint26933;Object smallint26934;Object info5480;Object localvariable27156;Object array24238;Object symbol44276;Object send161219;Object block11832;Object send161220;Object method41223;Object symbol44297;Object methodclosure41126;Object send161221;Object string27114;Object string27115;Object smallint26935;Object smallint26936;Object info5481;Object send161222;Object send161223;Object send161224;Object method41224;Object symbol44250;Object methodclosure41127;Object string27116;Object constant34742;Object string27117;Object constant34743;Object send161225;Object string27118;Object string27119;Object smallint26937;Object smallint26938;Object info5482;Object send161226;Object send161227;Object send161228;Object send161229;Object localvariable27157;Object array24239;Object localvariable27158;Object array24240;Object send161230;Object block11833;Object send161231;Object block11834;Object send161232;Object method41225;Object symbol44267;Object methodclosure41128;Object string27120;Object constant34744;Object send161233;Object string27121;Object string27122;Object smallint26939;Object smallint26940;Object info5483;Object string27123;Object constant34745;Object send161234;Object send161235;Object send161236;Object send161237;Object string27124;Object constant34746;Object send161238;Object localvariable27159;Object array24241;Object send161239;Object send161240;Object block11835;Object send161241;Object send161242;Object localvariable27160;Object localvariable27161;Object array24242;Object send161243;Object block11836;Object send161244;Object send161245;Object block11837;Object send161246;Object block11838;Object send161247;Object method41226;Object symbol44290;Object methodclosure41129;Object string27125;Object constant34747;Object string27126;Object constant34748;Object send161248;Object string27127;Object string27128;Object smallint26941;Object smallint26942;Object info5484;Object send161249;Object symbol44466;Object send161250;Object send161251;Object localvariable27162;Object array24243;Object send161252;Object send161253;Object block11839;Object send161254;Object method41227;Object symbol44279;Object methodclosure41130;Object string27129;Object constant34749;Object send161255;Object string27130;Object string27131;Object smallint26943;Object smallint26944;Object info5485;Object string27132;Object constant34750;Object send161256;Object send161257;Object method41228;Object symbol44305;Object methodclosure41131;Object localvariable27163;Object localvariable27164;Object array24244;Object send161258;Object string27133;Object string27134;Object smallint26945;Object smallint26946;Object info5486;Object send161259;Object symbol44264;Object send161260;Object constant34751;Object string27135;Object constant34752;Object symbol44467;Object send161261;Object send161262;Object send161263;Object send161264;Object send161265;Object send161266;Object send161267;Object localvariable27165;Object array24245;Object send161268;Object assign20227;Object smallint26947;Object constant34753;Object send161269;Object assign20228;Object symbol44468;Object send161270;Object localvariable27166;Object array24246;Object localvariable27167;Object array24247;Object send161271;Object send161272;Object block11840;Object send161273;Object send161274;Object assign20229;Object block11841;Object send161275;Object block11842;Object send161276;Object send161277;Object send161278;Object send161279;Object send161280;Object constant34754;Object send161281;Object method41229;Object symbol44249;Object methodclosure41132;Object string27136;Object constant34755;Object send161282;Object string27137;Object string27138;Object smallint26948;Object smallint26949;Object info5487;Object symbol44469;Object send161283;Object send161284;Object localvariable27168;Object array24248;Object localvariable27169;Object array24249;Object send161285;Object send161286;Object send161287;Object smallint26950;Object constant34756;Object send161288;Object send161289;Object send161290;Object block11843;Object send161291;Object send161292;Object block11844;Object send161293;Object method41230;Object symbol44272;Object methodclosure41133;Object symbol44470;Object send161294;Object string27139;Object string27140;Object smallint26951;Object smallint26952;Object info5488;Object send161295;Object send161296;Object method41231;Object symbol44317;Object methodclosure41134;Object string27141;Object constant34757;Object send161297;Object string27142;Object string27143;Object smallint26953;Object smallint26954;Object info5489;Object send161298;Object symbol44471;Object send161299;Object send161300;Object send161301;Object send161302;Object send161303;Object localvariable27170;Object array24250;Object smallint26955;Object constant34758;Object send161304;Object symbol44381;Object localvariable27171;Object array24251;Object send161305;Object send161306;Object block11845;Object send161307;Object send161308;Object block11846;Object send161309;Object method41232;Object symbol44289;Object methodclosure41135;Object string27144;Object constant34759;Object send161310;Object string27145;Object string27146;Object smallint26956;Object smallint26957;Object info5490;Object send161311;Object send161312;Object send161313;Object string27147;Object constant34760;Object send161314;Object send161315;Object send161316;Object method41233;Object symbol44310;Object methodclosure41136;Object string27148;Object constant34761;Object send161317;Object string27149;Object string27150;Object smallint26958;Object smallint26959;Object info5491;Object method41234;Object symbol44254;Object methodclosure41137;Object string27151;Object constant34762;Object send161318;Object string27152;Object string27153;Object smallint26960;Object smallint26961;Object info5492;Object localvariable27172;Object array24252;Object send161319;Object block11847;Object send161320;Object method41235;Object symbol44282;Object methodclosure41138;Object method41236;Object string27154;Object string27155;Object smallint26962;Object smallint26963;Object info5493;Object symbol44294;Object methodclosure41139;Object constant34763;Object string27156;Object constant34764;Object send161321;Object string27157;Object string27158;Object smallint26964;Object smallint26965;Object info5494;Object block11848;Object send161322;Object method41237;Object methodclosure41140;Object string27159;Object constant34765;Object send161323;Object string27160;Object string27161;Object smallint26966;Object smallint26967;Object info5495;Object send161324;Object send161325;Object localvariable27173;Object array24253;Object smallint26968;Object constant34766;Object send161326;Object send161327;Object send161328;Object block11849;Object send161329;Object method41238;Object symbol44309;Object methodclosure41141;Object localvariable27174;Object array24254;Object variable1871;Object array24255;Object string27162;Object constant34767;Object send161330;Object string27163;Object string27164;Object smallint26969;Object smallint26970;Object info5496;Object send161331;Object send161332;Object block11850;Object send161333;Object string27165;Object constant34768;Object send161334;Object send161335;Object send161336;Object block11851;Object send161337;Object send161338;Object send161339;Object block11852;Object send161340;Object method41239;Object methodclosure41142;Object symbol44472;Object send161341;Object string27166;Object string27167;Object smallint26971;Object smallint26972;Object info5497;Object send161342;Object send161343;Object send161344;Object method41240;Object symbol44302;Object methodclosure41143;Object string27168;Object constant34769;Object symbol44473;Object send161345;Object string27169;Object string27170;Object smallint26973;Object smallint26974;Object info5498;Object send161346;Object send161347;Object send161348;Object symbol44474;Object send161349;Object send161350;Object send161351;Object send161352;Object send161353;Object send161354;Object send161355;Object localvariable27175;Object array24256;Object localvariable27176;Object array24257;Object send161356;Object send161357;Object smallint26975;Object constant34770;Object send161358;Object send161359;Object block11853;Object send161360;Object send161361;Object smallint26976;Object constant34771;Object send161362;Object send161363;Object smallint26977;Object constant34772;Object send161364;Object send161365;Object send161366;Object block11854;Object send161367;Object send161368;Object block11855;Object send161369;Object send161370;Object send161371;Object method41241;Object symbol44246;Object methodclosure41144;Object send161372;Object string27171;Object string27172;Object smallint26978;Object smallint26979;Object info5499;Object send161373;Object method41242;Object symbol44314;Object methodclosure41145;Object string27173;Object constant34773;Object send161374;Object string27174;Object string27175;Object smallint26980;Object smallint26981;Object info5500;Object send161375;Object method41243;Object symbol44258;Object methodclosure41146;Object send161376;Object string27176;Object string27177;Object smallint26982;Object smallint26983;Object info5501;Object string27178;Object constant34774;Object send161377;Object send161378;Object send161379;Object method41244;Object symbol44286;Object methodclosure41147;Object localvariable27177;Object array24258;Object string27179;Object constant34775;Object send161380;Object string27180;Object string27181;Object smallint26984;Object smallint26985;Object info5502;Object send161381;Object send161382;Object send161383;Object localvariable27178;Object array24259;Object send161384;Object assign20230;Object localvariable27179;Object array24260;Object send161385;Object send161386;Object send161387;Object send161388;Object smallint26986;Object constant34776;Object send161389;Object send161390;Object send161391;Object block11856;Object send161392;Object send161393;Object send161394;Object send161395;Object block11857;Object send161396;Object method41245;Object symbol44298;Object methodclosure41148;Object string27182;Object constant34777;Object send161397;Object string27183;Object string27184;Object smallint26987;Object smallint26988;Object info5503;Object send161398;Object send161399;Object send161400;Object send161401;Object send161402;Object send161403;Object method41246;Object symbol44251;Object methodclosure41149;Object string27185;Object constant34778;Object send161404;Object string27186;Object string27187;Object smallint26989;Object smallint26990;Object info5504;Object method41247;Object symbol44291;Object methodclosure41150;Object classreference13444;Object localvariable27180;Object localvariable27181;Object array24261;Object send161405;Object string27188;Object string27189;Object smallint26991;Object smallint26992;Object info5505;Object assign20231;Object string27190;Object constant34779;Object send161406;Object assign20232;Object send161407;Object send161408;Object string27191;Object constant34780;Object send161409;Object symbol44475;Object send161410;Object send161411;Object smallint26993;Object constant34781;Object send161412;Object string27192;Object constant34782;Object send161413;Object assign20233;Object send161414;Object send161415;Object symbol44476;Object send161416;Object send161417;Object send161418;Object send161419;Object smallint26994;Object constant34783;Object send161420;Object method41248;Object symbol44072;Object methodclosure41151;Object localvariable27182;Object localvariable27183;Object localvariable27184;Object array24262;Object send161421;Object string27193;Object string27194;Object smallint26995;Object smallint26996;Object info5506;Object assign20234;Object string27195;Object constant34784;Object send161422;Object assign20235;Object send161423;Object assign20236;Object send161424;Object send161425;Object send161426;Object send161427;Object send161428;Object send161429;Object send161430;Object send161431;Object send161432;Object send161433;Object string27196;Object constant34785;Object send161434;Object send161435;Object assign20237;Object send161436;Object send161437;Object send161438;Object send161439;Object send161440;Object send161441;Object send161442;Object send161443;Object send161444;Object send161445;Object string27197;Object constant34786;Object send161446;Object send161447;Object assign20238;Object send161448;Object send161449;Object send161450;Object send161451;Object send161452;Object send161453;Object send161454;Object send161455;Object send161456;Object send161457;Object string27198;Object constant34787;Object send161458;Object send161459;Object send161460;Object send161461;Object send161462;Object method41249;Object symbol44080;Object methodclosure41152;Object localvariable27185;Object localvariable27186;Object localvariable27187;Object array24263;Object send161463;Object string27199;Object string27200;Object smallint26997;Object smallint26998;Object info5507;Object assign20239;Object string27201;Object constant34788;Object send161464;Object assign20240;Object send161465;Object assign20241;Object send161466;Object send161467;Object send161468;Object send161469;Object send161470;Object send161471;Object send161472;Object send161473;Object send161474;Object send161475;Object send161476;Object string27202;Object constant34789;Object send161477;Object send161478;Object assign20242;Object send161479;Object send161480;Object send161481;Object send161482;Object send161483;Object send161484;Object send161485;Object send161486;Object send161487;Object send161488;Object send161489;Object string27203;Object constant34790;Object send161490;Object send161491;Object send161492;Object send161493;Object send161494;Object send161495;Object send161496;Object send161497;Object string27204;Object constant34791;Object send161498;Object send161499;Object send161500;Object smallint26999;Object constant34792;Object send161501;Object string27205;Object constant34793;Object send161502;Object assign20243;Object send161503;Object assign20244;Object send161504;Object send161505;Object send161506;Object send161507;Object send161508;Object string27206;Object constant34794;Object send161509;Object send161510;Object send161511;Object smallint27000;Object constant34795;Object send161512;Object string27207;Object constant34796;Object send161513;Object assign20245;Object send161514;Object assign20246;Object send161515;Object send161516;Object send161517;Object send161518;Object send161519;Object send161520;Object string27208;Object constant34797;Object send161521;Object send161522;Object send161523;Object send161524;Object send161525;Object send161526;Object send161527;Object send161528;Object string27209;Object constant34798;Object send161529;Object send161530;Object assign20247;Object send161531;Object send161532;Object send161533;Object send161534;Object send161535;Object send161536;Object string27210;Object constant34799;Object send161537;Object send161538;Object send161539;Object send161540;Object send161541;Object send161542;Object send161543;Object send161544;Object string27211;Object constant34800;Object send161545;Object send161546;Object send161547;Object send161548;Object send161549;Object send161550;Object send161551;Object send161552;Object string27212;Object constant34801;Object send161553;Object send161554;Object send161555;Object smallint27001;Object constant34802;Object send161556;Object method41250;Object symbol44069;Object methodclosure41153;Object localvariable27188;Object localvariable27189;Object localvariable27190;Object localvariable27191;Object array24264;Object send161557;Object string27213;Object string27214;Object smallint27002;Object smallint27003;Object info5508;Object assign20248;Object string27215;Object constant34803;Object send161558;Object assign20249;Object send161559;Object assign20250;Object send161560;Object send161561;Object smallint27004;Object constant34804;Object send161562;Object send161563;Object send161564;Object send161565;Object send161566;Object send161567;Object smallint27005;Object constant34805;Object send161568;Object smallint27006;Object constant34806;Object send161569;Object assign20251;Object send161570;Object send161571;Object send161572;Object send161573;Object send161574;Object string27216;Object constant34807;Object send161575;Object smallint27007;Object constant34808;Object send161576;Object assign20252;Object send161577;Object send161578;Object send161579;Object send161580;Object send161581;Object string27217;Object constant34809;Object send161582;Object string27218;Object constant34810;Object send161583;Object assign20253;Object send161584;Object assign20254;Object send161585;Object send161586;Object smallint27008;Object constant34811;Object send161587;Object send161588;Object send161589;Object send161590;Object send161591;Object send161592;Object smallint27009;Object constant34812;Object send161593;Object send161594;Object assign20255;Object send161595;Object send161596;Object send161597;Object send161598;Object send161599;Object string27219;Object constant34813;Object send161600;Object smallint27010;Object constant34814;Object send161601;Object assign20256;Object send161602;Object send161603;Object send161604;Object send161605;Object send161606;Object string27220;Object constant34815;Object send161607;Object method41251;Object symbol44042;Object methodclosure41154;Object localvariable27192;Object localvariable27193;Object localvariable27194;Object array24265;Object send161608;Object string27221;Object string27222;Object smallint27011;Object smallint27012;Object info5509;Object assign20257;Object string27223;Object constant34816;Object send161609;Object assign20258;Object send161610;Object send161611;Object send161612;Object send161613;Object string27224;Object constant34817;Object send161614;Object assign20259;Object send161615;Object assign20260;Object send161616;Object send161617;Object send161618;Object send161619;Object send161620;Object send161621;Object send161622;Object send161623;Object send161624;Object send161625;Object string27225;Object constant34818;Object send161626;Object send161627;Object assign20261;Object send161628;Object send161629;Object send161630;Object send161631;Object send161632;Object send161633;Object send161634;Object send161635;Object send161636;Object send161637;Object string27226;Object constant34819;Object send161638;Object send161639;Object assign20262;Object send161640;Object send161641;Object send161642;Object send161643;Object send161644;Object send161645;Object send161646;Object send161647;Object send161648;Object send161649;Object string27227;Object constant34820;Object send161650;Object send161651;Object send161652;Object send161653;Object send161654;Object method41252;Object symbol44062;Object methodclosure41155;Object localvariable27195;Object localvariable27196;Object localvariable27197;Object array24266;Object symbol44477;Object send161655;Object string27228;Object string27229;Object smallint27013;Object smallint27014;Object info5510;Object assign20263;Object string27230;Object constant34821;Object assign20264;Object send161656;Object assign20265;Object send161657;Object send161658;Object send161659;Object symbol44478;Object send161660;Object send161661;Object send161662;Object send161663;Object send161664;Object send161665;Object send161666;Object string27231;Object constant34822;Object send161667;Object send161668;Object send161669;Object send161670;Object send161671;Object send161672;Object send161673;Object method41253;Object symbol44054;Object methodclosure41156;Object localvariable27198;Object localvariable27199;Object array24267;Object send161674;Object string27232;Object string27233;Object smallint27015;Object smallint27016;Object info5511;Object assign20266;Object string27234;Object constant34823;Object send161675;Object assign20267;Object send161676;Object constant34824;Object send161677;Object send161678;Object send161679;Object localvariable27200;Object array24268;Object smallint27017;Object constant34825;Object string27235;Object constant34826;Object send161680;Object smallint27018;Object constant34827;Object string27236;Object constant34828;Object send161681;Object smallint27019;Object constant34829;Object string27237;Object constant34830;Object send161682;Object send161683;Object block11858;Object smallint27020;Object constant34831;Object send161684;Object send161685;Object send161686;Object send161687;Object send161688;Object smallint27021;Object constant34832;Object send161689;Object string27238;Object constant34833;Object send161690;Object assign20268;Object send161691;Object send161692;Object send161693;Object send161694;Object send161695;Object method41254;Object symbol44074;Object methodclosure41157;Object localvariable27201;Object localvariable27202;Object localvariable27203;Object array24269;Object send161696;Object string27239;Object string27240;Object smallint27022;Object smallint27023;Object info5512;Object assign20269;Object string27241;Object constant34834;Object send161697;Object assign20270;Object send161698;Object assign20271;Object send161699;Object send161700;Object send161701;Object send161702;Object send161703;Object send161704;Object smallint27024;Object constant34835;Object send161705;Object send161706;Object send161707;Object send161708;Object smallint27025;Object constant34836;Object send161709;Object send161710;Object send161711;Object send161712;Object smallint27026;Object constant34837;Object send161713;Object string27242;Object constant34838;Object send161714;Object assign20272;Object send161715;Object assign20273;Object send161716;Object send161717;Object send161718;Object send161719;Object send161720;Object send161721;Object smallint27027;Object constant34839;Object send161722;Object send161723;Object send161724;Object send161725;Object smallint27028;Object constant34840;Object send161726;Object send161727;Object send161728;Object send161729;Object smallint27029;Object constant34841;Object send161730;Object string27243;Object constant34842;Object send161731;Object assign20274;Object send161732;Object assign20275;Object send161733;Object send161734;Object send161735;Object send161736;Object send161737;Object send161738;Object smallint27030;Object constant34843;Object send161739;Object send161740;Object send161741;Object send161742;Object smallint27031;Object constant34844;Object send161743;Object send161744;Object send161745;Object send161746;Object smallint27032;Object constant34845;Object send161747;Object string27244;Object constant34846;Object send161748;Object assign20276;Object send161749;Object assign20277;Object send161750;Object send161751;Object send161752;Object send161753;Object send161754;Object send161755;Object smallint27033;Object constant34847;Object send161756;Object send161757;Object send161758;Object send161759;Object smallint27034;Object constant34848;Object send161760;Object send161761;Object send161762;Object send161763;Object smallint27035;Object constant34849;Object send161764;Object string27245;Object constant34850;Object send161765;Object assign20278;Object send161766;Object assign20279;Object send161767;Object send161768;Object send161769;Object send161770;Object send161771;Object send161772;Object smallint27036;Object constant34851;Object send161773;Object send161774;Object send161775;Object send161776;Object smallint27037;Object constant34852;Object send161777;Object send161778;Object send161779;Object send161780;Object smallint27038;Object constant34853;Object send161781;Object string27246;Object constant34854;Object send161782;Object assign20280;Object send161783;Object assign20281;Object send161784;Object send161785;Object send161786;Object send161787;Object send161788;Object send161789;Object smallint27039;Object constant34855;Object send161790;Object send161791;Object send161792;Object send161793;Object smallint27040;Object constant34856;Object send161794;Object send161795;Object send161796;Object send161797;Object smallint27041;Object constant34857;Object send161798;Object string27247;Object constant34858;Object send161799;Object assign20282;Object send161800;Object assign20283;Object send161801;Object send161802;Object send161803;Object send161804;Object send161805;Object send161806;Object smallint27042;Object constant34859;Object send161807;Object send161808;Object send161809;Object send161810;Object smallint27043;Object constant34860;Object send161811;Object send161812;Object send161813;Object send161814;Object smallint27044;Object constant34861;Object send161815;Object method41255;Object symbol44044;Object methodclosure41158;Object localvariable27204;Object localvariable27205;Object localvariable27206;Object localvariable27207;Object array24270;Object send161816;Object string27248;Object string27249;Object smallint27045;Object smallint27046;Object info5513;Object assign20284;Object string27250;Object constant34862;Object send161817;Object assign20285;Object send161818;Object assign20286;Object send161819;Object send161820;Object send161821;Object send161822;Object send161823;Object assign20287;Object string27251;Object constant34863;Object send161824;Object assign20288;Object send161825;Object assign20289;Object send161826;Object send161827;Object send161828;Object send161829;Object send161830;Object send161831;Object send161832;Object send161833;Object method41256;Object symbol44036;Object methodclosure41159;Object localvariable27208;Object localvariable27209;Object localvariable27210;Object array24271;Object send161834;Object string27252;Object string27253;Object smallint27047;Object smallint27048;Object info5514;Object assign20290;Object string27254;Object constant34864;Object send161835;Object assign20291;Object send161836;Object assign20292;Object send161837;Object send161838;Object send161839;Object send161840;Object send161841;Object send161842;Object string27255;Object constant34865;Object send161843;Object send161844;Object send161845;Object send161846;Object send161847;Object send161848;Object send161849;Object send161850;Object send161851;Object string27256;Object constant34866;Object send161852;Object send161853;Object send161854;Object smallint27049;Object constant34867;Object send161855;Object string27257;Object constant34868;Object send161856;Object assign20293;Object send161857;Object send161858;Object send161859;Object send161860;Object send161861;Object send161862;Object smallint27050;Object constant34869;Object send161863;Object string27258;Object constant34870;Object send161864;Object assign20294;Object send161865;Object assign20295;Object send161866;Object send161867;Object send161868;Object send161869;Object send161870;Object send161871;Object string27259;Object constant34871;Object send161872;Object send161873;Object send161874;Object send161875;Object send161876;Object string27260;Object constant34872;Object send161877;Object send161878;Object send161879;Object send161880;Object send161881;Object send161882;Object send161883;Object smallint27051;Object constant34873;Object send161884;Object method41257;Object symbol44064;Object methodclosure41160;Object localvariable27211;Object localvariable27212;Object array24272;Object symbol44479;Object send161885;Object string27261;Object string27262;Object smallint27052;Object smallint27053;Object info5515;Object assign20296;Object string27263;Object constant34874;Object send161886;Object assign20297;Object send161887;Object send161888;Object string27264;Object constant34875;Object send161889;Object send161890;Object send161891;Object smallint27054;Object constant34876;Object send161892;Object string27265;Object constant34877;Object send161893;Object assign20298;Object send161894;Object send161895;Object string27266;Object constant34878;Object send161896;Object send161897;Object send161898;Object smallint27055;Object constant34879;Object send161899;Object string27267;Object constant34880;Object send161900;Object assign20299;Object send161901;Object send161902;Object send161903;Object send161904;Object send161905;Object send161906;Object smallint27056;Object constant34881;Object send161907;Object method41258;Object symbol44056;Object methodclosure41161;Object localvariable27213;Object localvariable27214;Object localvariable27215;Object array24273;Object send161908;Object string27268;Object string27269;Object smallint27057;Object smallint27058;Object info5516;Object assign20300;Object string27270;Object constant34882;Object send161909;Object assign20301;Object send161910;Object assign20302;Object send161911;Object send161912;Object send161913;Object send161914;Object send161915;Object send161916;Object string27271;Object constant34883;Object send161917;Object send161918;Object send161919;Object send161920;Object send161921;Object send161922;Object send161923;Object send161924;Object string27272;Object constant34884;Object send161925;Object send161926;Object send161927;Object send161928;Object send161929;Object send161930;Object send161931;Object send161932;Object string27273;Object constant34885;Object send161933;Object send161934;Object send161935;Object smallint27059;Object constant34886;Object send161936;Object string27274;Object constant34887;Object send161937;Object assign20303;Object send161938;Object assign20304;Object send161939;Object send161940;Object send161941;Object send161942;Object send161943;Object send161944;Object string27275;Object constant34888;Object send161945;Object send161946;Object send161947;Object send161948;Object send161949;Object send161950;Object send161951;Object send161952;Object string27276;Object constant34889;Object send161953;Object send161954;Object assign20305;Object send161955;Object send161956;Object send161957;Object send161958;Object send161959;Object send161960;Object string27277;Object constant34890;Object send161961;Object send161962;Object send161963;Object send161964;Object send161965;Object send161966;Object send161967;Object send161968;Object string27278;Object constant34891;Object send161969;Object send161970;Object send161971;Object send161972;Object send161973;Object send161974;Object send161975;Object send161976;Object string27279;Object constant34892;Object send161977;Object send161978;Object send161979;Object smallint27060;Object constant34893;Object send161980;Object method41259;Object symbol44084;Object methodclosure41162;Object localvariable27216;Object array24274;Object string27280;Object constant34894;Object send161981;Object string27281;Object string27282;Object smallint27061;Object smallint27062;Object info5517;Object send161982;Object assign20306;Object string27283;Object constant34895;Object send161983;Object send161984;Object send161985;Object send161986;Object send161987;Object string27284;Object constant34896;Object send161988;Object send161989;Object send161990;Object send161991;Object method41260;Object symbol44076;Object methodclosure41163;Object localvariable27217;Object localvariable27218;Object localvariable27219;Object localvariable27220;Object array24275;Object send161992;Object string27285;Object string27286;Object smallint27063;Object smallint27064;Object info5518;Object assign20307;Object string27287;Object constant34897;Object send161993;Object assign20308;Object send161994;Object assign20309;Object send161995;Object send161996;Object send161997;Object send161998;Object send161999;Object send162000;Object send162001;Object send162002;Object send162003;Object send162004;Object smallint27065;Object constant34898;Object send162005;Object send162006;Object smallint27066;Object constant34899;Object send162007;Object assign20310;Object send162008;Object send162009;Object send162010;Object send162011;Object smallint27067;Object constant34900;Object send162012;Object assign20311;Object send162013;Object send162014;Object send162015;Object send162016;Object smallint27068;Object constant34901;Object send162017;Object assign20312;Object send162018;Object send162019;Object send162020;Object send162021;Object smallint27069;Object constant34902;Object send162022;Object assign20313;Object send162023;Object send162024;Object send162025;Object method41261;Object symbol44046;Object methodclosure41164;Object localvariable27221;Object localvariable27222;Object array24276;Object send162026;Object string27288;Object string27289;Object smallint27070;Object smallint27071;Object info5519;Object assign20314;Object string27290;Object constant34903;Object send162027;Object assign20315;Object send162028;Object send162029;Object string27291;Object constant34904;Object send162030;Object send162031;Object send162032;Object smallint27072;Object constant34905;Object send162033;Object string27292;Object constant34906;Object send162034;Object assign20316;Object send162035;Object send162036;Object string27293;Object constant34907;Object send162037;Object send162038;Object send162039;Object smallint27073;Object constant34908;Object send162040;Object string27294;Object constant34909;Object send162041;Object assign20317;Object send162042;Object send162043;Object send162044;Object send162045;Object send162046;Object send162047;Object smallint27074;Object constant34910;Object send162048;Object method41262;Object symbol44086;Object methodclosure41165;Object localvariable27223;Object localvariable27224;Object localvariable27225;Object array24277;Object send162049;Object string27295;Object string27296;Object smallint27075;Object smallint27076;Object info5520;Object assign20318;Object string27297;Object constant34911;Object send162050;Object assign20319;Object send162051;Object assign20320;Object send162052;Object send162053;Object send162054;Object send162055;Object send162056;Object send162057;Object send162058;Object send162059;Object send162060;Object send162061;Object send162062;Object string27298;Object constant34912;Object send162063;Object send162064;Object assign20321;Object send162065;Object send162066;Object send162067;Object send162068;Object send162069;Object send162070;Object send162071;Object send162072;Object send162073;Object send162074;Object send162075;Object string27299;Object constant34913;Object send162076;Object send162077;Object send162078;Object send162079;Object send162080;Object send162081;Object send162082;Object send162083;Object string27300;Object constant34914;Object send162084;Object send162085;Object send162086;Object smallint27077;Object constant34915;Object send162087;Object string27301;Object constant34916;Object send162088;Object assign20322;Object send162089;Object assign20323;Object send162090;Object send162091;Object send162092;Object send162093;Object send162094;Object string27302;Object constant34917;Object send162095;Object send162096;Object send162097;Object smallint27078;Object constant34918;Object send162098;Object method41263;Object symbol44078;Object methodclosure41166;Object localvariable27226;Object localvariable27227;Object localvariable27228;Object array24278;Object send162099;Object string27303;Object string27304;Object smallint27079;Object smallint27080;Object info5521;Object assign20324;Object string27305;Object constant34919;Object send162100;Object assign20325;Object send162101;Object assign20326;Object send162102;Object send162103;Object send162104;Object send162105;Object send162106;Object send162107;Object string27306;Object constant34920;Object send162108;Object send162109;Object send162110;Object send162111;Object send162112;Object send162113;Object send162114;Object send162115;Object send162116;Object string27307;Object constant34921;Object send162117;Object send162118;Object send162119;Object smallint27081;Object constant34922;Object send162120;Object string27308;Object constant34923;Object send162121;Object assign20327;Object send162122;Object send162123;Object send162124;Object send162125;Object send162126;Object send162127;Object smallint27082;Object constant34924;Object send162128;Object string27309;Object constant34925;Object send162129;Object assign20328;Object send162130;Object assign20329;Object send162131;Object send162132;Object send162133;Object send162134;Object send162135;Object send162136;Object string27310;Object constant34926;Object send162137;Object send162138;Object send162139;Object send162140;Object send162141;Object send162142;Object send162143;Object send162144;Object send162145;Object string27311;Object constant34927;Object send162146;Object send162147;Object send162148;Object smallint27083;Object constant34928;Object send162149;Object method41264;Object symbol44031;Object methodclosure41167;Object localvariable27229;Object localvariable27230;Object localvariable27231;Object array24279;Object send162150;Object string27312;Object string27313;Object smallint27084;Object smallint27085;Object info5522;Object assign20330;Object string27314;Object constant34929;Object send162151;Object assign20331;Object send162152;Object assign20332;Object send162153;Object send162154;Object send162155;Object send162156;Object send162157;Object send162158;Object send162159;Object send162160;Object send162161;Object send162162;Object send162163;Object string27315;Object constant34930;Object send162164;Object send162165;Object assign20333;Object send162166;Object send162167;Object send162168;Object send162169;Object send162170;Object send162171;Object send162172;Object send162173;Object send162174;Object send162175;Object send162176;Object string27316;Object constant34931;Object send162177;Object send162178;Object send162179;Object send162180;Object send162181;Object send162182;Object send162183;Object send162184;Object string27317;Object constant34932;Object send162185;Object send162186;Object send162187;Object smallint27086;Object constant34933;Object send162188;Object string27318;Object constant34934;Object send162189;Object assign20334;Object send162190;Object send162191;Object send162192;Object send162193;Object method41265;Object symbol44028;Object methodclosure41168;Object localvariable27232;Object localvariable27233;Object array24280;Object send162194;Object string27319;Object string27320;Object smallint27087;Object smallint27088;Object info5523;Object assign20335;Object string27321;Object constant34935;Object send162195;Object assign20336;Object send162196;Object constant34936;Object send162197;Object send162198;Object send162199;Object localvariable27234;Object array24281;Object smallint27089;Object constant34937;Object string27322;Object constant34938;Object send162200;Object smallint27090;Object constant34939;Object string27323;Object constant34940;Object send162201;Object smallint27091;Object constant34941;Object string27324;Object constant34942;Object send162202;Object send162203;Object block11859;Object smallint27092;Object constant34943;Object send162204;Object send162205;Object send162206;Object send162207;Object send162208;Object smallint27093;Object constant34944;Object send162209;Object string27325;Object constant34945;Object send162210;Object assign20337;Object send162211;Object constant34946;Object send162212;Object send162213;Object send162214;Object localvariable27235;Object array24282;Object smallint27094;Object constant34947;Object string27326;Object constant34948;Object send162215;Object smallint27095;Object constant34949;Object string27327;Object constant34950;Object send162216;Object smallint27096;Object constant34951;Object string27328;Object constant34952;Object send162217;Object send162218;Object block11860;Object smallint27097;Object constant34953;Object send162219;Object send162220;Object send162221;Object send162222;Object send162223;Object smallint27098;Object constant34954;Object send162224;Object method41266;Object symbol44051;Object methodclosure41169;Object send162225;Object string27329;Object string27330;Object smallint27099;Object smallint27100;Object info5524;Object assign20338;Object method41267;Object symbol44071;Object methodclosure41170;Object localvariable27236;Object localvariable27237;Object localvariable27238;Object localvariable27239;Object array24283;Object send162226;Object string27331;Object string27332;Object smallint27101;Object smallint27102;Object info5525;Object assign20339;Object string27333;Object constant34955;Object send162227;Object assign20340;Object send162228;Object assign20341;Object send162229;Object send162230;Object send162231;Object send162232;Object send162233;Object assign20342;Object string27334;Object constant34956;Object send162234;Object assign20343;Object send162235;Object assign20344;Object send162236;Object send162237;Object send162238;Object send162239;Object send162240;Object send162241;Object send162242;Object send162243;Object method41268;Object symbol44048;Object methodclosure41171;Object localvariable27240;Object localvariable27241;Object localvariable27242;Object localvariable27243;Object array24284;Object send162244;Object string27335;Object string27336;Object smallint27103;Object smallint27104;Object info5526;Object assign20345;Object string27337;Object constant34957;Object send162245;Object assign20346;Object send162246;Object assign20347;Object send162247;Object send162248;Object send162249;Object send162250;Object send162251;Object constant34958;Object send162252;Object send162253;Object localvariable27244;Object array24285;Object smallint27105;Object constant34959;Object symbol44480;Object constant34960;Object send162254;Object smallint27106;Object constant34961;Object symbol44481;Object constant34962;Object send162255;Object smallint27107;Object constant34963;Object symbol44482;Object constant34964;Object send162256;Object send162257;Object block11861;Object smallint27108;Object constant34965;Object send162258;Object send162259;Object send162260;Object send162261;Object send162262;Object assign20348;Object send162263;Object send162264;Object send162265;Object send162266;Object smallint27109;Object constant34966;Object send162267;Object assign20349;Object send162268;Object send162269;Object send162270;Object send162271;Object smallint27110;Object constant34967;Object send162272;Object assign20350;Object send162273;Object send162274;Object send162275;Object send162276;Object send162277;Object send162278;Object send162279;Object string27338;Object constant34968;Object send162280;Object assign20351;Object send162281;Object assign20352;Object send162282;Object send162283;Object send162284;Object send162285;Object send162286;Object send162287;Object string27339;Object constant34969;Object send162288;Object send162289;Object send162290;Object smallint27111;Object constant34970;Object send162291;Object string27340;Object constant34971;Object send162292;Object assign20353;Object send162293;Object assign20354;Object send162294;Object send162295;Object send162296;Object send162297;Object send162298;Object constant34972;Object send162299;Object send162300;Object localvariable27245;Object array24286;Object smallint27112;Object constant34973;Object string27341;Object constant34974;Object send162301;Object smallint27113;Object constant34975;Object string27342;Object constant34976;Object send162302;Object smallint27114;Object constant34977;Object string27343;Object constant34978;Object send162303;Object send162304;Object block11862;Object smallint27115;Object constant34979;Object send162305;Object send162306;Object send162307;Object send162308;Object send162309;Object send162310;Object send162311;Object method41269;Object symbol44068;Object methodclosure41172;Object localvariable27246;Object localvariable27247;Object localvariable27248;Object array24287;Object send162312;Object string27344;Object string27345;Object smallint27116;Object smallint27117;Object info5527;Object assign20355;Object string27346;Object constant34980;Object send162313;Object assign20356;Object send162314;Object assign20357;Object send162315;Object send162316;Object send162317;Object send162318;Object send162319;Object send162320;Object send162321;Object send162322;Object string27347;Object constant34981;Object send162323;Object assign20358;Object send162324;Object assign20359;Object send162325;Object send162326;Object send162327;Object send162328;Object send162329;Object send162330;Object smallint27118;Object constant34982;Object send162331;Object send162332;Object send162333;Object send162334;Object send162335;Object send162336;Object send162337;Object send162338;Object send162339;Object send162340;Object string27348;Object constant34983;Object send162341;Object send162342;Object smallint27119;Object constant34984;Object send162343;Object send162344;Object send162345;Object send162346;Object send162347;Object smallint27120;Object constant34985;Object send162348;Object send162349;Object send162350;Object string27349;Object constant34986;Object send162351;Object send162352;Object smallint27121;Object constant34987;Object send162353;Object send162354;Object send162355;Object send162356;Object send162357;Object smallint27122;Object constant34988;Object send162358;Object send162359;Object send162360;Object string27350;Object constant34989;Object send162361;Object send162362;Object smallint27123;Object constant34990;Object send162363;Object send162364;Object send162365;Object send162366;Object send162367;Object smallint27124;Object constant34991;Object send162368;Object send162369;Object send162370;Object string27351;Object constant34992;Object send162371;Object send162372;Object smallint27125;Object constant34993;Object send162373;Object send162374;Object send162375;Object send162376;Object method41270;Object symbol44021;Object methodclosure41173;Object localvariable27249;Object localvariable27250;Object localvariable27251;Object array24288;Object send162377;Object string27352;Object string27353;Object smallint27126;Object smallint27127;Object info5528;Object assign20360;Object string27354;Object constant34994;Object send162378;Object assign20361;Object send162379;Object assign20362;Object send162380;Object send162381;Object send162382;Object send162383;Object send162384;Object string27355;Object constant34995;Object send162385;Object send162386;Object send162387;Object smallint27128;Object constant34996;Object send162388;Object string27356;Object constant34997;Object send162389;Object assign20363;Object send162390;Object assign20364;Object send162391;Object send162392;Object send162393;Object send162394;Object send162395;Object string27357;Object constant34998;Object send162396;Object send162397;Object send162398;Object smallint27129;Object constant34999;Object send162399;Object string27358;Object constant35000;Object send162400;Object assign20365;Object send162401;Object assign20366;Object send162402;Object send162403;Object send162404;Object send162405;Object send162406;Object string27359;Object constant35001;Object send162407;Object send162408;Object send162409;Object smallint27130;Object constant35002;Object send162410;Object method41271;Object symbol44088;Object methodclosure41174;Object localvariable27252;Object localvariable27253;Object localvariable27254;Object localvariable27255;Object array24289;Object send162411;Object string27360;Object string27361;Object smallint27131;Object smallint27132;Object info5529;Object assign20367;Object string27362;Object constant35003;Object send162412;Object assign20368;Object send162413;Object assign20369;Object send162414;Object send162415;Object send162416;Object send162417;Object send162418;Object send162419;Object localvariable27256;Object array24290;Object smallint27133;Object constant35004;Object string27363;Object constant35005;Object send162420;Object smallint27134;Object constant35006;Object string27364;Object constant35007;Object send162421;Object smallint27135;Object constant35008;Object string27365;Object constant35009;Object send162422;Object send162423;Object block11863;Object smallint27136;Object constant35010;Object send162424;Object send162425;Object send162426;Object send162427;Object send162428;Object assign20370;Object send162429;Object send162430;Object send162431;Object send162432;Object smallint27137;Object constant35011;Object send162433;Object assign20371;Object send162434;Object send162435;Object send162436;Object send162437;Object smallint27138;Object constant35012;Object send162438;Object assign20372;Object send162439;Object send162440;Object send162441;Object send162442;Object send162443;Object smallint27139;Object constant35013;Object send162444;Object method41272;Object symbol44033;Object methodclosure41175;Object localvariable27257;Object localvariable27258;Object localvariable27259;Object array24291;Object send162445;Object string27366;Object string27367;Object smallint27140;Object smallint27141;Object info5530;Object assign20373;Object string27368;Object constant35014;Object send162446;Object assign20374;Object send162447;Object assign20375;Object send162448;Object send162449;Object send162450;Object send162451;Object send162452;Object string27369;Object constant35015;Object send162453;Object send162454;Object send162455;Object smallint27142;Object constant35016;Object send162456;Object string27370;Object constant35017;Object send162457;Object assign20376;Object send162458;Object assign20377;Object send162459;Object send162460;Object send162461;Object send162462;Object send162463;Object string27371;Object constant35018;Object send162464;Object send162465;Object send162466;Object string27372;Object constant35019;Object send162467;Object send162468;Object send162469;Object smallint27143;Object constant35020;Object send162470;Object method41273;Object symbol44061;Object methodclosure41176;Object localvariable27260;Object localvariable27261;Object array24292;Object send162471;Object string27373;Object string27374;Object smallint27144;Object smallint27145;Object info5531;Object assign20378;Object string27375;Object constant35021;Object send162472;Object assign20379;Object send162473;Object send162474;Object string27376;Object constant35022;Object send162475;Object send162476;Object send162477;Object smallint27146;Object constant35023;Object send162478;Object string27377;Object constant35024;Object send162479;Object assign20380;Object send162480;Object send162481;Object send162482;Object send162483;Object send162484;Object send162485;Object smallint27147;Object constant35025;Object send162486;Object method41274;Object symbol44053;Object methodclosure41177;Object localvariable27262;Object localvariable27263;Object localvariable27264;Object array24293;Object send162487;Object string27378;Object string27379;Object smallint27148;Object smallint27149;Object info5532;Object assign20381;Object string27380;Object constant35026;Object send162488;Object assign20382;Object send162489;Object assign20383;Object send162490;Object send162491;Object send162492;Object send162493;Object send162494;Object send162495;Object string27381;Object constant35027;Object send162496;Object send162497;Object send162498;Object send162499;Object send162500;Object send162501;Object send162502;Object send162503;Object string27382;Object constant35028;Object send162504;Object send162505;Object assign20384;Object send162506;Object send162507;Object send162508;Object send162509;Object send162510;Object send162511;Object string27383;Object constant35029;Object send162512;Object send162513;Object send162514;Object send162515;Object send162516;Object send162517;Object send162518;Object send162519;Object string27384;Object constant35030;Object send162520;Object send162521;Object assign20385;Object send162522;Object send162523;Object send162524;Object send162525;Object send162526;Object send162527;Object string27385;Object constant35031;Object send162528;Object send162529;Object send162530;Object send162531;Object send162532;Object send162533;Object send162534;Object send162535;Object string27386;Object constant35032;Object send162536;Object send162537;Object send162538;Object send162539;Object send162540;Object send162541;Object send162542;Object send162543;Object string27387;Object constant35033;Object send162544;Object send162545;Object send162546;Object smallint27150;Object constant35034;Object send162547;Object method41275;Object symbol44081;Object methodclosure41178;Object localvariable27265;Object localvariable27266;Object array24294;Object send162548;Object string27388;Object string27389;Object smallint27151;Object smallint27152;Object info5533;Object assign20386;Object string27390;Object constant35035;Object send162549;Object send162550;Object send162551;Object assign20387;Object send162552;Object send162553;Object send162554;Object send162555;Object send162556;Object send162557;Object send162558;Object send162559;Object send162560;Object send162561;Object send162562;Object send162563;Object send162564;Object send162565;Object send162566;Object send162567;Object string27391;Object constant35036;Object send162568;Object send162569;Object send162570;Object send162571;Object send162572;Object string27392;Object constant35037;Object send162573;Object send162574;Object send162575;Object send162576;Object string27393;Object constant35038;Object send162577;Object send162578;Object send162579;Object send162580;Object send162581;Object send162582;Object send162583;Object send162584;Object string27394;Object constant35039;Object send162585;Object method41276;Object symbol44073;Object methodclosure41179;Object method41277;Object string27395;Object string27396;Object smallint27153;Object smallint27154;Object info5534;Object symbol44063;Object methodclosure41180;Object localvariable27267;Object localvariable27268;Object localvariable27269;Object array24295;Object send162586;Object string27397;Object string27398;Object smallint27155;Object smallint27156;Object info5535;Object assign20388;Object string27399;Object constant35040;Object send162587;Object assign20389;Object send162588;Object assign20390;Object send162589;Object send162590;Object send162591;Object send162592;Object assign20391;Object send162593;Object send162594;Object send162595;Object send162596;Object send162597;Object send162598;Object send162599;Object send162600;Object send162601;Object send162602;Object string27400;Object constant35041;Object send162603;Object send162604;Object assign20392;Object send162605;Object send162606;Object send162607;Object send162608;Object send162609;Object send162610;Object send162611;Object send162612;Object send162613;Object send162614;Object string27401;Object constant35042;Object send162615;Object send162616;Object assign20393;Object send162617;Object send162618;Object send162619;Object send162620;Object send162621;Object send162622;Object send162623;Object send162624;Object send162625;Object send162626;Object string27402;Object constant35043;Object send162627;Object send162628;Object send162629;Object send162630;Object send162631;Object string27403;Object constant35044;Object send162632;Object assign20394;Object send162633;Object assign20395;Object send162634;Object send162635;Object send162636;Object send162637;Object assign20396;Object send162638;Object send162639;Object send162640;Object send162641;Object send162642;Object send162643;Object send162644;Object send162645;Object send162646;Object send162647;Object string27404;Object constant35045;Object send162648;Object send162649;Object assign20397;Object send162650;Object send162651;Object send162652;Object send162653;Object send162654;Object send162655;Object send162656;Object send162657;Object send162658;Object send162659;Object string27405;Object constant35046;Object send162660;Object send162661;Object assign20398;Object send162662;Object send162663;Object send162664;Object send162665;Object send162666;Object send162667;Object send162668;Object send162669;Object send162670;Object send162671;Object string27406;Object constant35047;Object send162672;Object send162673;Object send162674;Object send162675;Object send162676;Object method41278;Object symbol44055;Object methodclosure41181;Object localvariable27270;Object localvariable27271;Object localvariable27272;Object array24296;Object send162677;Object string27407;Object string27408;Object smallint27157;Object smallint27158;Object info5536;Object assign20399;Object string27409;Object constant35048;Object send162678;Object assign20400;Object send162679;Object send162680;Object send162681;Object send162682;Object send162683;Object send162684;Object smallint27159;Object constant35049;Object send162685;Object string27410;Object constant35050;Object send162686;Object assign20401;Object send162687;Object assign20402;Object send162688;Object send162689;Object send162690;Object send162691;Object send162692;Object character687;Object constant35051;Object send162693;Object send162694;Object send162695;Object smallint27160;Object constant35052;Object send162696;Object method41279;Object symbol44083;Object methodclosure41182;Object localvariable27273;Object localvariable27274;Object localvariable27275;Object array24297;Object send162697;Object string27411;Object string27412;Object smallint27161;Object smallint27162;Object info5537;Object assign20403;Object string27413;Object constant35053;Object send162698;Object assign20404;Object send162699;Object assign20405;Object send162700;Object send162701;Object send162702;Object send162703;Object send162704;Object send162705;Object send162706;Object send162707;Object send162708;Object send162709;Object string27414;Object constant35054;Object send162710;Object send162711;Object assign20406;Object send162712;Object send162713;Object send162714;Object send162715;Object send162716;Object send162717;Object send162718;Object send162719;Object send162720;Object send162721;Object string27415;Object constant35055;Object send162722;Object send162723;Object assign20407;Object send162724;Object send162725;Object send162726;Object send162727;Object send162728;Object send162729;Object send162730;Object send162731;Object send162732;Object send162733;Object string27416;Object constant35056;Object send162734;Object send162735;Object send162736;Object send162737;Object send162738;Object string27417;Object constant35057;Object send162739;Object assign20408;Object send162740;Object assign20409;Object send162741;Object send162742;Object send162743;Object send162744;Object send162745;Object send162746;Object send162747;Object send162748;Object send162749;Object send162750;Object string27418;Object constant35058;Object send162751;Object send162752;Object assign20410;Object send162753;Object send162754;Object send162755;Object send162756;Object send162757;Object send162758;Object send162759;Object send162760;Object send162761;Object send162762;Object string27419;Object constant35059;Object send162763;Object send162764;Object assign20411;Object send162765;Object send162766;Object send162767;Object send162768;Object send162769;Object send162770;Object send162771;Object send162772;Object send162773;Object send162774;Object string27420;Object constant35060;Object send162775;Object send162776;Object send162777;Object send162778;Object send162779;Object method41280;Object symbol44025;Object methodclosure41183;Object localvariable27276;Object localvariable27277;Object array24298;Object send162780;Object string27421;Object string27422;Object smallint27163;Object smallint27164;Object info5538;Object assign20412;Object string27423;Object constant35061;Object send162781;Object assign20413;Object send162782;Object send162783;Object string27424;Object constant35062;Object send162784;Object send162785;Object send162786;Object smallint27165;Object constant35063;Object send162787;Object string27425;Object constant35064;Object send162788;Object assign20414;Object send162789;Object send162790;Object string27426;Object constant35065;Object send162791;Object send162792;Object send162793;Object smallint27166;Object constant35066;Object send162794;Object string27427;Object constant35067;Object send162795;Object assign20415;Object send162796;Object send162797;Object string27428;Object constant35068;Object send162798;Object send162799;Object send162800;Object smallint27167;Object constant35069;Object send162801;Object string27429;Object constant35070;Object send162802;Object assign20416;Object send162803;Object send162804;Object string27430;Object constant35071;Object send162805;Object send162806;Object send162807;Object smallint27168;Object constant35072;Object send162808;Object string27431;Object constant35073;Object send162809;Object assign20417;Object send162810;Object send162811;Object string27432;Object constant35074;Object send162812;Object send162813;Object send162814;Object smallint27169;Object constant35075;Object send162815;Object string27433;Object constant35076;Object send162816;Object assign20418;Object send162817;Object send162818;Object send162819;Object send162820;Object send162821;Object send162822;Object smallint27170;Object constant35077;Object send162823;Object method41281;Object symbol44037;Object methodclosure41184;Object localvariable27278;Object localvariable27279;Object array24299;Object send162824;Object string27434;Object string27435;Object smallint27171;Object smallint27172;Object info5539;Object assign20419;Object string27436;Object constant35078;Object send162825;Object assign20420;Object send162826;Object send162827;Object send162828;Object send162829;Object send162830;Object send162831;Object send162832;Object smallint27173;Object constant35079;Object send162833;Object string27437;Object constant35080;Object send162834;Object assign20421;Object send162835;Object send162836;Object send162837;Object send162838;Object send162839;Object send162840;Object send162841;Object smallint27174;Object constant35081;Object send162842;Object string27438;Object constant35082;Object send162843;Object assign20422;Object send162844;Object send162845;Object send162846;Object send162847;Object send162848;Object send162849;Object send162850;Object smallint27175;Object constant35083;Object send162851;Object method41282;Object symbol44065;Object methodclosure41185;Object localvariable27280;Object localvariable27281;Object array24300;Object send162852;Object string27439;Object string27440;Object smallint27176;Object smallint27177;Object info5540;Object assign20423;Object string27441;Object constant35084;Object send162853;Object assign20424;Object send162854;Object send162855;Object send162856;Object send162857;Object send162858;Object send162859;Object smallint27178;Object constant35085;Object send162860;Object string27442;Object constant35086;Object send162861;Object assign20425;Object send162862;Object send162863;Object string27443;Object constant35087;Object send162864;Object send162865;Object send162866;Object smallint27179;Object constant35088;Object send162867;Object string27444;Object constant35089;Object send162868;Object assign20426;Object send162869;Object send162870;Object string27445;Object constant35090;Object send162871;Object send162872;Object send162873;Object smallint27180;Object constant35091;Object send162874;Object string27446;Object constant35092;Object send162875;Object assign20427;Object send162876;Object send162877;Object string27447;Object constant35093;Object send162878;Object send162879;Object send162880;Object smallint27181;Object constant35094;Object send162881;Object method41283;Object symbol44057;Object methodclosure41186;Object localvariable27282;Object localvariable27283;Object localvariable27284;Object array24301;Object send162882;Object string27448;Object string27449;Object smallint27182;Object smallint27183;Object info5541;Object assign20428;Object string27450;Object constant35095;Object send162883;Object assign20429;Object send162884;Object assign20430;Object send162885;Object send162886;Object send162887;Object send162888;Object send162889;Object send162890;Object send162891;Object string27451;Object constant35096;Object send162892;Object assign20431;Object send162893;Object assign20432;Object send162894;Object send162895;Object send162896;Object send162897;Object send162898;Object send162899;Object send162900;Object string27452;Object constant35097;Object send162901;Object assign20433;Object send162902;Object assign20434;Object send162903;Object send162904;Object send162905;Object send162906;Object send162907;Object send162908;Object send162909;Object send162910;Object send162911;Object send162912;Object smallint27184;Object constant35098;Object send162913;Object method41284;Object symbol44085;Object methodclosure41187;Object localvariable27285;Object localvariable27286;Object localvariable27287;Object array24302;Object send162914;Object string27453;Object string27454;Object smallint27185;Object smallint27186;Object info5542;Object assign20435;Object string27455;Object constant35099;Object assign20436;Object send162915;Object assign20437;Object send162916;Object send162917;Object send162918;Object send162919;Object send162920;Object send162921;Object send162922;Object send162923;Object send162924;Object send162925;Object send162926;Object send162927;Object send162928;Object send162929;Object smallint27187;Object constant35100;Object send162930;Object send162931;Object send162932;Object send162933;Object smallint27188;Object constant35101;Object send162934;Object send162935;Object send162936;Object send162937;Object smallint27189;Object constant35102;Object send162938;Object method41285;Object symbol44077;Object methodclosure41188;Object localvariable27288;Object localvariable27289;Object localvariable27290;Object array24303;Object send162939;Object string27456;Object string27457;Object smallint27190;Object smallint27191;Object info5543;Object assign20438;Object string27458;Object constant35103;Object assign20439;Object send162940;Object assign20440;Object send162941;Object send162942;Object send162943;Object send162944;Object send162945;Object send162946;Object send162947;Object send162948;Object send162949;Object send162950;Object send162951;Object send162952;Object send162953;Object send162954;Object smallint27192;Object constant35104;Object send162955;Object send162956;Object send162957;Object send162958;Object smallint27193;Object constant35105;Object send162959;Object send162960;Object send162961;Object send162962;Object smallint27194;Object constant35106;Object send162963;Object method41286;Object symbol44050;Object methodclosure41189;Object localvariable27291;Object localvariable27292;Object localvariable27293;Object array24304;Object send162964;Object string27459;Object string27460;Object smallint27195;Object smallint27196;Object info5544;Object assign20441;Object string27461;Object constant35107;Object assign20442;Object send162965;Object assign20443;Object send162966;Object send162967;Object send162968;Object send162969;Object send162970;Object send162971;Object send162972;Object send162973;Object send162974;Object send162975;Object string27462;Object constant35108;Object send162976;Object method41287;Object symbol44039;Object methodclosure41190;Object localvariable27294;Object localvariable27295;Object localvariable27296;Object localvariable27297;Object array24305;Object send162977;Object string27463;Object string27464;Object smallint27197;Object smallint27198;Object info5545;Object assign20444;Object string27465;Object constant35109;Object send162978;Object assign20445;Object send162979;Object assign20446;Object send162980;Object send162981;Object send162982;Object send162983;Object send162984;Object send162985;Object localvariable27298;Object array24306;Object smallint27199;Object constant35110;Object string27466;Object constant35111;Object send162986;Object smallint27200;Object constant35112;Object string27467;Object constant35113;Object send162987;Object smallint27201;Object constant35114;Object string27468;Object constant35115;Object send162988;Object send162989;Object block11864;Object smallint27202;Object constant35116;Object send162990;Object send162991;Object send162992;Object send162993;Object send162994;Object send162995;Object send162996;Object send162997;Object send162998;Object send162999;Object string27469;Object constant35117;Object send163000;Object send163001;Object send163002;Object assign20447;Object send163003;Object send163004;Object send163005;Object send163006;Object smallint27203;Object constant35118;Object send163007;Object assign20448;Object send163008;Object send163009;Object send163010;Object send163011;Object smallint27204;Object constant35119;Object send163012;Object assign20449;Object send163013;Object send163014;Object send163015;Object send163016;Object send163017;Object send163018;Object send163019;Object send163020;Object send163021;Object smallint27205;Object constant35120;Object send163022;Object method41288;Object symbol44059;Object methodclosure41191;Object localvariable27299;Object localvariable27300;Object array24307;Object send163023;Object string27470;Object string27471;Object smallint27206;Object smallint27207;Object info5546;Object assign20450;Object string27472;Object constant35121;Object send163024;Object assign20451;Object send163025;Object send163026;Object send163027;Object string27473;Object constant35122;Object send163028;Object send163029;Object send163030;Object smallint27208;Object constant35123;Object send163031;Object string27474;Object constant35124;Object send163032;Object assign20452;Object send163033;Object send163034;Object send163035;Object string27475;Object constant35125;Object send163036;Object send163037;Object send163038;Object smallint27209;Object constant35126;Object send163039;Object string27476;Object constant35127;Object send163040;Object assign20453;Object send163041;Object send163042;Object send163043;Object string27477;Object constant35128;Object send163044;Object send163045;Object send163046;Object smallint27210;Object constant35129;Object send163047;Object string27478;Object constant35130;Object send163048;Object assign20454;Object send163049;Object send163050;Object send163051;Object string27479;Object constant35131;Object send163052;Object send163053;Object send163054;Object smallint27211;Object constant35132;Object send163055;Object method41289;Object symbol44087;Object methodclosure41192;Object localvariable27301;Object localvariable27302;Object localvariable27303;Object array24308;Object send163056;Object string27480;Object string27481;Object smallint27212;Object smallint27213;Object info5547;Object assign20455;Object string27482;Object constant35133;Object send163057;Object assign20456;Object send163058;Object assign20457;Object send163059;Object send163060;Object send163061;Object send163062;Object send163063;Object send163064;Object string27483;Object constant35134;Object send163065;Object send163066;Object send163067;Object smallint27214;Object constant35135;Object send163068;Object string27484;Object constant35136;Object send163069;Object assign20458;Object send163070;Object send163071;Object send163072;Object send163073;Object send163074;Object send163075;Object smallint27215;Object constant35137;Object send163076;Object method41290;Object symbol44079;Object methodclosure41193;Object localvariable27304;Object localvariable27305;Object localvariable27306;Object array24309;Object send163077;Object string27485;Object string27486;Object smallint27216;Object smallint27217;Object info5548;Object assign20459;Object string27487;Object constant35138;Object send163078;Object assign20460;Object send163079;Object assign20461;Object send163080;Object send163081;Object send163082;Object send163083;Object send163084;Object string27488;Object constant35139;Object send163085;Object send163086;Object send163087;Object smallint27218;Object constant35140;Object send163088;Object method41291;Object symbol44060;Object methodclosure41194;Object localvariable27307;Object localvariable27308;Object localvariable27309;Object array24310;Object send163089;Object string27489;Object string27490;Object smallint27219;Object smallint27220;Object info5549;Object assign20462;Object string27491;Object constant35141;Object send163090;Object assign20463;Object send163091;Object assign20464;Object send163092;Object send163093;Object send163094;Object send163095;Object send163096;Object send163097;Object send163098;Object send163099;Object send163100;Object send163101;Object string27492;Object constant35142;Object send163102;Object send163103;Object assign20465;Object send163104;Object send163105;Object send163106;Object send163107;Object send163108;Object send163109;Object send163110;Object send163111;Object send163112;Object send163113;Object string27493;Object constant35143;Object send163114;Object send163115;Object assign20466;Object send163116;Object send163117;Object send163118;Object send163119;Object send163120;Object send163121;Object send163122;Object send163123;Object send163124;Object send163125;Object string27494;Object constant35144;Object send163126;Object send163127;Object send163128;Object send163129;Object send163130;Object method41292;Object symbol44029;Object methodclosure41195;Object localvariable27310;Object localvariable27311;Object localvariable27312;Object array24311;Object send163131;Object string27495;Object string27496;Object smallint27221;Object smallint27222;Object info5550;Object assign20467;Object string27497;Object constant35145;Object send163132;Object assign20468;Object send163133;Object assign20469;Object send163134;Object send163135;Object send163136;Object send163137;Object send163138;Object string27498;Object constant35146;Object send163139;Object send163140;Object send163141;Object send163142;Object send163143;Object smallint27223;Object constant35147;Object send163144;Object send163145;Object send163146;Object send163147;Object send163148;Object string27499;Object constant35148;Object send163149;Object send163150;Object send163151;Object send163152;Object smallint27224;Object constant35149;Object send163153;Object string27500;Object constant35150;Object send163154;Object assign20470;Object send163155;Object send163156;Object send163157;Object send163158;Object send163159;Object send163160;Object smallint27225;Object constant35151;Object send163161;Object string27501;Object constant35152;Object send163162;Object assign20471;Object send163163;Object assign20472;Object send163164;Object send163165;Object send163166;Object send163167;Object send163168;Object symbol44483;Object string27502;Object constant35153;Object string27503;Object constant35154;Object send163169;Object send163170;Object send163171;Object send163172;Object send163173;Object smallint27226;Object constant35155;Object send163174;Object send163175;Object send163176;Object send163177;Object send163178;Object string27504;Object constant35156;Object send163179;Object send163180;Object send163181;Object send163182;Object send163183;Object send163184;Object string27505;Object constant35157;Object send163185;Object send163186;Object send163187;Object send163188;Object smallint27227;Object constant35158;Object send163189;Object method41293;Object symbol44052;Object methodclosure41196;Object classreference13445;Object localvariable27313;Object array24312;Object symbol44484;Object send163190;Object string27506;Object string27507;Object smallint27228;Object smallint27229;Object info5551;Object method41294;Object methodclosure41197;Object classreference13446;Object localvariable27314;Object array24313;Object super2480;Object assign20473;Object assign20474;Object method41295;Object string27508;Object string27509;Object smallint27230;Object smallint27231;Object info5552;Object methodclosure41198;Object localvariable27315;Object array24314;Object variable1872;Object array24315;Object classreference13447;Object localvariable27316;Object array24316;Object assign20475;Object method41296;Object string27510;Object string27511;Object smallint27232;Object smallint27233;Object info5553;Object symbol44380;Object methodclosure41199;Object localvariable27317;Object array24317;Object method41297;Object string27512;Object string27513;Object smallint27234;Object smallint27235;Object info5554;Object methodclosure41200;Object localvariable27318;Object array24318;Object send163191;Object string27514;Object string27515;Object smallint27236;Object smallint27237;Object info5555;Object method41298;Object methodclosure41201;Object send163192;Object string27516;Object string27517;Object smallint27238;Object smallint27239;Object info5556;Object classreference13448;Object send163193;Object block11865;Object send163194;Object send163195;Object block11866;Object send163196;Object method41299;Object methodclosure41202;Object method41300;Object string27518;Object string27519;Object smallint27240;Object smallint27241;Object info5557;Object methodclosure41203;Object classreference13449;Object localvariable27319;Object array24319;Object localvariable27320;Object localvariable27321;Object array24320;Object variable1873;Object array24321;Object send163197;Object string27520;Object string27521;Object smallint27242;Object smallint27243;Object info5558;Object assign20476;Object localvariable27322;Object array24322;Object send163198;Object block11867;Object send163199;Object send163200;Object assign20477;Object send163201;Object block11868;Object send163202;Object symbol44327;Object send163203;Object send163204;Object block11869;Object send163205;Object block11870;Object send163206;Object send163207;Object smallint27244;Object constant35159;Object send163208;Object send163209;Object send163210;Object block11871;Object send163211;Object block11872;Object send163212;Object method41301;Object methodclosure41204;Object localvariable27323;Object array24323;Object send163213;Object string27522;Object string27523;Object smallint27245;Object smallint27246;Object info5559;Object send163214;Object method41302;Object methodclosure41205;Object method41303;Object string27524;Object string27525;Object smallint27247;Object smallint27248;Object info5560;Object methodclosure41206;Object localvariable27324;Object array24324;Object super2481;Object assign20478;Object assign20479;Object method41304;Object string27526;Object string27527;Object smallint27249;Object smallint27250;Object info5561;Object methodclosure41207;Object super2482;Object send163215;Object string27528;Object string27529;Object smallint27251;Object smallint27252;Object info5562;Object send163216;Object method41305;Object methodclosure41208;Object localvariable27325;Object array24325;Object assign20480;Object method41306;Object string27530;Object string27531;Object smallint27253;Object smallint27254;Object info5563;Object symbol44371;Object methodclosure41209;Object classreference13450;Object localvariable27326;Object array24326;Object localvariable27327;Object localvariable27328;Object array24327;Object variable1874;Object array24328;Object send163217;Object string27532;Object string27533;Object smallint27255;Object smallint27256;Object info5564;Object assign20481;Object send163218;Object assign20482;Object send163219;Object block11873;Object send163220;Object send163221;Object symbol44373;Object send163222;Object block11874;Object send163223;Object method41307;Object methodclosure41210;Object send163224;Object string27534;Object string27535;Object smallint27257;Object smallint27258;Object info5565;Object method41308;Object methodclosure41211;Object classreference13451;Object localvariable27329;Object array24329;Object send163225;Object string27536;Object string27537;Object smallint27259;Object smallint27260;Object info5566;Object method41309;Object methodclosure41212;Object localvariable27330;Object array24330;Object send163226;Object string27538;Object string27539;Object smallint27261;Object smallint27262;Object info5567;Object send163227;Object method41310;Object methodclosure41213;Object localvariable27331;Object array24331;Object assign20483;Object method41311;Object string27540;Object string27541;Object smallint27263;Object smallint27264;Object info5568;Object methodclosure41214;Object send163228;Object string27542;Object string27543;Object smallint27265;Object smallint27266;Object info5569;Object method41312;Object methodclosure41215;Object method41313;Object string27544;Object string27545;Object smallint27267;Object smallint27268;Object info5570;Object methodclosure41216;Object method41314;Object string27546;Object string27547;Object smallint27269;Object smallint27270;Object info5571;Object methodclosure41217;Object localvariable27332;Object array24332;Object assign20484;Object method41315;Object string27548;Object string27549;Object smallint27271;Object smallint27272;Object info5572;Object methodclosure41218;Object send163229;Object string27550;Object string27551;Object smallint27273;Object smallint27274;Object info5573;Object send163230;Object method41316;Object methodclosure41219;Object localvariable27333;Object array24333;Object send163231;Object string27552;Object string27553;Object smallint27275;Object smallint27276;Object info5574;Object send163232;Object send163233;Object method41317;Object methodclosure41220;Object send163234;Object string27554;Object string27555;Object smallint27277;Object smallint27278;Object info5575;Object send163235;Object method41318;Object symbol44328;Object methodclosure41221;Object send163236;Object string27556;Object string27557;Object smallint27279;Object smallint27280;Object info5576;Object method41319;Object methodclosure41222;Object variable1875;Object array24334;Object super2483;Object send163237;Object string27558;Object string27559;Object smallint27281;Object smallint27282;Object info5577;Object block11875;Object send163238;Object string27560;Object constant35160;Object send163239;Object string27561;Object constant35161;Object send163240;Object block11876;Object send163241;Object method41320;Object methodclosure41223;Object method41321;Object string27562;Object string27563;Object smallint27283;Object smallint27284;Object info5578;Object methodclosure41224;Object localvariable27334;Object array24335;Object localvariable27335;Object localvariable27336;Object array24336;Object send163242;Object string27564;Object string27565;Object smallint27285;Object smallint27286;Object info5579;Object assign20485;Object send163243;Object assign20486;Object symbol44485;Object send163244;Object block11877;Object send163245;Object method41322;Object methodclosure41225;Object classreference13452;Object method41323;Object string27566;Object string27567;Object smallint27287;Object smallint27288;Object info5580;Object methodclosure41226;Object localvariable27337;Object array24337;Object send163246;Object string27568;Object string27569;Object smallint27289;Object smallint27290;Object info5581;Object send163247;Object method41324;Object methodclosure41227;Object method41325;Object string27570;Object string27571;Object smallint27291;Object smallint27292;Object info5582;Object methodclosure41228;Object localvariable27338;Object array24338;Object super2484;Object assign20487;Object assign20488;Object method41326;Object string27572;Object string27573;Object smallint27293;Object smallint27294;Object info5583;Object methodclosure41229;Object localvariable27339;Object localvariable27340;Object array24339;Object localvariable27341;Object array24340;Object send163248;Object string27574;Object string27575;Object smallint27295;Object smallint27296;Object info5584;Object block11878;Object send163249;Object send163250;Object assign20489;Object send163251;Object block11879;Object send163252;Object block11880;Object send163253;Object method41327;Object methodclosure41230;Object localvariable27342;Object array24341;Object assign20490;Object method41328;Object string27576;Object string27577;Object smallint27297;Object smallint27298;Object info5585;Object methodclosure41231;Object send163254;Object string27578;Object string27579;Object smallint27299;Object smallint27300;Object info5586;Object method41329;Object methodclosure41232;Object localvariable27343;Object array24342;Object symbol44321;Object send163255;Object string27580;Object string27581;Object smallint27301;Object smallint27302;Object info5587;Object localvariable27344;Object array24343;Object symbol44486;Object send163256;Object symbol44487;Object send163257;Object block11881;Object send163258;Object block11882;Object send163259;Object method41330;Object symbol44322;Object methodclosure41233;Object localvariable27345;Object array24344;Object send163260;Object string27582;Object string27583;Object smallint27303;Object smallint27304;Object info5588;Object send163261;Object send163262;Object method41331;Object methodclosure41234;Object send163263;Object string27584;Object string27585;Object smallint27305;Object smallint27306;Object info5589;Object send163264;Object method41332;Object methodclosure41235;Object send163265;Object string27586;Object string27587;Object smallint27307;Object smallint27308;Object info5590;Object method41333;Object methodclosure41236;Object assign20491;Object method41334;Object string27588;Object string27589;Object smallint27309;Object smallint27310;Object info5591;Object methodclosure41237;Object localvariable27346;Object array24345;Object send163266;Object string27590;Object string27591;Object smallint27311;Object smallint27312;Object info5592;Object symbol44488;Object send163267;Object block11883;Object send163268;Object method41335;Object symbol44324;Object methodclosure41238;Object method41336;Object string27592;Object string27593;Object smallint27313;Object smallint27314;Object info5593;Object symbol44336;Object methodclosure41239;Object method41337;Object string27594;Object string27595;Object smallint27315;Object smallint27316;Object info5594;Object methodclosure41240;Object localvariable27347;Object array24346;Object send163269;Object string27596;Object string27597;Object smallint27317;Object smallint27318;Object info5595;Object send163270;Object method41338;Object methodclosure41241;Object constant35162;Object method41339;Object string27598;Object string27599;Object smallint27319;Object smallint27320;Object info5596;Object methodclosure41242;Object classreference13453;Object classreference13454;Object classreference13455;Object classreference13456;Object classreference13457;Object classreference13458;Object classreference13459;void SCParserTest_create_ast() {objectlayout10005 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);instancevariable16359 = (Object)new_AST_InstVariable(0, L"layout");((Type_Array)objectlayout10005)->values[0] = instancevariable16359;instancevariable16360 = (Object)new_AST_InstVariable(1, L"superclass");((Type_Array)objectlayout10005)->values[1] = instancevariable16360;instancevariable16361 = (Object)new_AST_InstVariable(2, L"methods");((Type_Array)objectlayout10005)->values[2] = instancevariable16361;instancevariable16362 = (Object)new_AST_InstVariable(3, L"name");((Type_Array)objectlayout10005)->values[3] = instancevariable16362;instancevariable16363 = (Object)new_AST_InstVariable(4, L"package");((Type_Array)objectlayout10005)->values[4] = instancevariable16363;instancevariable16364 = (Object)new_AST_InstVariable(5, L"history");((Type_Array)objectlayout10005)->values[5] = instancevariable16364;symbol43993 = (Object)new_Type_Symbol_cached(L"TestCase");objectlayout10006 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);instancevariable16365 = (Object)new_AST_InstVariable(0, L"testSelector");((Type_Array)objectlayout10006)->values[0] = instancevariable16365;class6700 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout10006, objectlayout10005);((Type_Class)class6700)->name = (Type_Symbol)symbol43993;metaclass5901 = (Object)HEADER(class6700);objectlayout10007 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10007)->values[0] = instancevariable16359;((Type_Array)objectlayout10007)->values[1] = instancevariable16360;((Type_Array)objectlayout10007)->values[2] = instancevariable16361;((Type_Array)objectlayout10007)->values[3] = instancevariable16362;((Type_Array)objectlayout10007)->values[4] = instancevariable16363;instancevariable16366 = (Object)new_AST_InstVariable(5, L"uidCounter");((Type_Array)objectlayout10007)->values[5] = instancevariable16366;symbol44163 = (Object)new_Type_Symbol_cached(L"ASTNode");objectlayout10008 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);instancevariable16367 = (Object)new_AST_InstVariable(0, L"sourceObject");((Type_Array)objectlayout10008)->values[0] = instancevariable16367;instancevariable16368 = (Object)new_AST_InstVariable(1, L"uid");((Type_Array)objectlayout10008)->values[1] = instancevariable16368;instancevariable16369 = (Object)new_AST_InstVariable(2, L"id");((Type_Array)objectlayout10008)->values[2] = instancevariable16369;class6701 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout10008, objectlayout10007);((Type_Class)class6701)->name = (Type_Symbol)symbol44163;metaclass5902 = (Object)HEADER(class6701);objectlayout10009 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10009)->values[0] = instancevariable16359;((Type_Array)objectlayout10009)->values[1] = instancevariable16360;((Type_Array)objectlayout10009)->values[2] = instancevariable16361;((Type_Array)objectlayout10009)->values[3] = instancevariable16362;((Type_Array)objectlayout10009)->values[4] = instancevariable16363;((Type_Array)objectlayout10009)->values[5] = instancevariable16366;symbol44209 = (Object)new_Type_Symbol_cached(L"ASTSelector");objectlayout10010 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10010)->values[0] = instancevariable16367;((Type_Array)objectlayout10010)->values[1] = instancevariable16368;((Type_Array)objectlayout10010)->values[2] = instancevariable16369;instancevariable16370 = (Object)new_AST_InstVariable(3, L"selector");((Type_Array)objectlayout10010)->values[3] = instancevariable16370;class6702 = (Object)new_Class_withMeta((Object)class6701, objectlayout10010, objectlayout10009);((Type_Class)class6702)->name = (Type_Symbol)symbol44209;metaclass5903 = (Object)HEADER(class6702);objectlayout10011 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10011)->values[0] = instancevariable16359;((Type_Array)objectlayout10011)->values[1] = instancevariable16360;((Type_Array)objectlayout10011)->values[2] = instancevariable16361;((Type_Array)objectlayout10011)->values[3] = instancevariable16362;((Type_Array)objectlayout10011)->values[4] = instancevariable16363;((Type_Array)objectlayout10011)->values[5] = instancevariable16366;symbol44058 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");objectlayout10012 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10012)->values[0] = instancevariable16367;((Type_Array)objectlayout10012)->values[1] = instancevariable16368;((Type_Array)objectlayout10012)->values[2] = instancevariable16369;((Type_Array)objectlayout10012)->values[3] = instancevariable16370;instancevariable16371 = (Object)new_AST_InstVariable(4, L"keywords");((Type_Array)objectlayout10012)->values[4] = instancevariable16371;class6703 = (Object)new_Class_withMeta((Object)class6702, objectlayout10012, objectlayout10011);((Type_Class)class6703)->name = (Type_Symbol)symbol44058;metaclass5904 = (Object)HEADER(class6703);objectlayout10013 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10013)->values[0] = instancevariable16359;((Type_Array)objectlayout10013)->values[1] = instancevariable16360;((Type_Array)objectlayout10013)->values[2] = instancevariable16361;((Type_Array)objectlayout10013)->values[3] = instancevariable16362;((Type_Array)objectlayout10013)->values[4] = instancevariable16363;((Type_Array)objectlayout10013)->values[5] = instancevariable16366;symbol44049 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");objectlayout10014 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10014)->values[0] = instancevariable16367;((Type_Array)objectlayout10014)->values[1] = instancevariable16368;((Type_Array)objectlayout10014)->values[2] = instancevariable16369;((Type_Array)objectlayout10014)->values[3] = instancevariable16370;((Type_Array)objectlayout10014)->values[4] = instancevariable16371;instancevariable16372 = (Object)new_AST_InstVariable(5, L"parameters");((Type_Array)objectlayout10014)->values[5] = instancevariable16372;class6704 = (Object)new_Class_withMeta((Object)class6703, objectlayout10014, objectlayout10013);((Type_Class)class6704)->name = (Type_Symbol)symbol44049;metaclass5905 = (Object)HEADER(class6704);objectlayout10015 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10015)->values[0] = instancevariable16359;((Type_Array)objectlayout10015)->values[1] = instancevariable16360;((Type_Array)objectlayout10015)->values[2] = instancevariable16361;((Type_Array)objectlayout10015)->values[3] = instancevariable16362;((Type_Array)objectlayout10015)->values[4] = instancevariable16363;((Type_Array)objectlayout10015)->values[5] = instancevariable16366;symbol44027 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");objectlayout10016 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10016)->values[0] = instancevariable16367;((Type_Array)objectlayout10016)->values[1] = instancevariable16368;((Type_Array)objectlayout10016)->values[2] = instancevariable16369;((Type_Array)objectlayout10016)->values[3] = instancevariable16370;class6705 = (Object)new_Class_withMeta((Object)class6702, objectlayout10016, objectlayout10015);((Type_Class)class6705)->name = (Type_Symbol)symbol44027;metaclass5906 = (Object)HEADER(class6705);objectlayout10017 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10017)->values[0] = instancevariable16359;((Type_Array)objectlayout10017)->values[1] = instancevariable16360;((Type_Array)objectlayout10017)->values[2] = instancevariable16361;((Type_Array)objectlayout10017)->values[3] = instancevariable16362;((Type_Array)objectlayout10017)->values[4] = instancevariable16363;((Type_Array)objectlayout10017)->values[5] = instancevariable16366;symbol44252 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");objectlayout10018 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10018)->values[0] = instancevariable16367;((Type_Array)objectlayout10018)->values[1] = instancevariable16368;((Type_Array)objectlayout10018)->values[2] = instancevariable16369;((Type_Array)objectlayout10018)->values[3] = instancevariable16370;class6706 = (Object)new_Class_withMeta((Object)class6705, objectlayout10018, objectlayout10017);((Type_Class)class6706)->name = (Type_Symbol)symbol44252;metaclass5907 = (Object)HEADER(class6706);objectlayout10019 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10019)->values[0] = instancevariable16359;((Type_Array)objectlayout10019)->values[1] = instancevariable16360;((Type_Array)objectlayout10019)->values[2] = instancevariable16361;((Type_Array)objectlayout10019)->values[3] = instancevariable16362;((Type_Array)objectlayout10019)->values[4] = instancevariable16363;((Type_Array)objectlayout10019)->values[5] = instancevariable16366;symbol44199 = (Object)new_Type_Symbol_cached(L"ASTExpression");objectlayout10020 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10020)->values[0] = instancevariable16367;((Type_Array)objectlayout10020)->values[1] = instancevariable16368;((Type_Array)objectlayout10020)->values[2] = instancevariable16369;class6707 = (Object)new_Class_withMeta((Object)class6701, objectlayout10020, objectlayout10019);((Type_Class)class6707)->name = (Type_Symbol)symbol44199;metaclass5908 = (Object)HEADER(class6707);objectlayout10021 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10021)->values[0] = instancevariable16359;((Type_Array)objectlayout10021)->values[1] = instancevariable16360;((Type_Array)objectlayout10021)->values[2] = instancevariable16361;((Type_Array)objectlayout10021)->values[3] = instancevariable16362;((Type_Array)objectlayout10021)->values[4] = instancevariable16363;((Type_Array)objectlayout10021)->values[5] = instancevariable16366;symbol44022 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");objectlayout10022 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10022)->values[0] = instancevariable16367;((Type_Array)objectlayout10022)->values[1] = instancevariable16368;((Type_Array)objectlayout10022)->values[2] = instancevariable16369;instancevariable16373 = (Object)new_AST_InstVariable(3, L"variable");((Type_Array)objectlayout10022)->values[3] = instancevariable16373;instancevariable16374 = (Object)new_AST_InstVariable(4, L"expression");((Type_Array)objectlayout10022)->values[4] = instancevariable16374;class6708 = (Object)new_Class_withMeta((Object)class6707, objectlayout10022, objectlayout10021);((Type_Class)class6708)->name = (Type_Symbol)symbol44022;metaclass5909 = (Object)HEADER(class6708);objectlayout10023 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10023)->values[0] = instancevariable16359;((Type_Array)objectlayout10023)->values[1] = instancevariable16360;((Type_Array)objectlayout10023)->values[2] = instancevariable16361;((Type_Array)objectlayout10023)->values[3] = instancevariable16362;((Type_Array)objectlayout10023)->values[4] = instancevariable16363;((Type_Array)objectlayout10023)->values[5] = instancevariable16366;symbol44162 = (Object)new_Type_Symbol_cached(L"ASTLiteral");objectlayout10024 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10024)->values[0] = instancevariable16367;((Type_Array)objectlayout10024)->values[1] = instancevariable16368;((Type_Array)objectlayout10024)->values[2] = instancevariable16369;class6709 = (Object)new_Class_withMeta((Object)class6701, objectlayout10024, objectlayout10023);((Type_Class)class6709)->name = (Type_Symbol)symbol44162;metaclass5910 = (Object)HEADER(class6709);objectlayout10025 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10025)->values[0] = instancevariable16359;((Type_Array)objectlayout10025)->values[1] = instancevariable16360;((Type_Array)objectlayout10025)->values[2] = instancevariable16361;((Type_Array)objectlayout10025)->values[3] = instancevariable16362;((Type_Array)objectlayout10025)->values[4] = instancevariable16363;((Type_Array)objectlayout10025)->values[5] = instancevariable16366;symbol44014 = (Object)new_Type_Symbol_cached(L"ASTArray");objectlayout10026 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10026)->values[0] = instancevariable16367;((Type_Array)objectlayout10026)->values[1] = instancevariable16368;((Type_Array)objectlayout10026)->values[2] = instancevariable16369;instancevariable16375 = (Object)new_AST_InstVariable(3, L"literals");((Type_Array)objectlayout10026)->values[3] = instancevariable16375;class6710 = (Object)new_Class_withMeta((Object)class6709, objectlayout10026, objectlayout10025);((Type_Class)class6710)->name = (Type_Symbol)symbol44014;metaclass5911 = (Object)HEADER(class6710);objectlayout10027 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10027)->values[0] = instancevariable16359;((Type_Array)objectlayout10027)->values[1] = instancevariable16360;((Type_Array)objectlayout10027)->values[2] = instancevariable16361;((Type_Array)objectlayout10027)->values[3] = instancevariable16362;((Type_Array)objectlayout10027)->values[4] = instancevariable16363;((Type_Array)objectlayout10027)->values[5] = instancevariable16366;symbol44034 = (Object)new_Type_Symbol_cached(L"ASTSelf");objectlayout10028 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10028)->values[0] = instancevariable16367;((Type_Array)objectlayout10028)->values[1] = instancevariable16368;((Type_Array)objectlayout10028)->values[2] = instancevariable16369;class6711 = (Object)new_Class_withMeta((Object)class6701, objectlayout10028, objectlayout10027);((Type_Class)class6711)->name = (Type_Symbol)symbol44034;metaclass5912 = (Object)HEADER(class6711);objectlayout10029 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10029)->values[0] = instancevariable16359;((Type_Array)objectlayout10029)->values[1] = instancevariable16360;((Type_Array)objectlayout10029)->values[2] = instancevariable16361;((Type_Array)objectlayout10029)->values[3] = instancevariable16362;((Type_Array)objectlayout10029)->values[4] = instancevariable16363;((Type_Array)objectlayout10029)->values[5] = instancevariable16366;symbol44318 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");objectlayout10030 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10030)->values[0] = instancevariable16367;((Type_Array)objectlayout10030)->values[1] = instancevariable16368;((Type_Array)objectlayout10030)->values[2] = instancevariable16369;instancevariable16376 = (Object)new_AST_InstVariable(3, L"expressions");((Type_Array)objectlayout10030)->values[3] = instancevariable16376;class6712 = (Object)new_Class_withMeta((Object)class6707, objectlayout10030, objectlayout10029);((Type_Class)class6712)->name = (Type_Symbol)symbol44318;metaclass5913 = (Object)HEADER(class6712);objectlayout10031 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10031)->values[0] = instancevariable16359;((Type_Array)objectlayout10031)->values[1] = instancevariable16360;((Type_Array)objectlayout10031)->values[2] = instancevariable16361;((Type_Array)objectlayout10031)->values[3] = instancevariable16362;((Type_Array)objectlayout10031)->values[4] = instancevariable16363;((Type_Array)objectlayout10031)->values[5] = instancevariable16366;symbol44023 = (Object)new_Type_Symbol_cached(L"ASTVariable");objectlayout10032 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10032)->values[0] = instancevariable16367;((Type_Array)objectlayout10032)->values[1] = instancevariable16368;((Type_Array)objectlayout10032)->values[2] = instancevariable16369;instancevariable16377 = (Object)new_AST_InstVariable(3, L"name");((Type_Array)objectlayout10032)->values[3] = instancevariable16377;instancevariable16378 = (Object)new_AST_InstVariable(4, L"type");((Type_Array)objectlayout10032)->values[4] = instancevariable16378;class6713 = (Object)new_Class_withMeta((Object)class6701, objectlayout10032, objectlayout10031);((Type_Class)class6713)->name = (Type_Symbol)symbol44023;metaclass5914 = (Object)HEADER(class6713);objectlayout10033 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10033)->values[0] = instancevariable16359;((Type_Array)objectlayout10033)->values[1] = instancevariable16360;((Type_Array)objectlayout10033)->values[2] = instancevariable16361;((Type_Array)objectlayout10033)->values[3] = instancevariable16362;((Type_Array)objectlayout10033)->values[4] = instancevariable16363;((Type_Array)objectlayout10033)->values[5] = instancevariable16366;symbol44082 = (Object)new_Type_Symbol_cached(L"ASTCharacter");objectlayout10034 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10034)->values[0] = instancevariable16367;((Type_Array)objectlayout10034)->values[1] = instancevariable16368;((Type_Array)objectlayout10034)->values[2] = instancevariable16369;instancevariable16379 = (Object)new_AST_InstVariable(3, L"char");((Type_Array)objectlayout10034)->values[3] = instancevariable16379;class6714 = (Object)new_Class_withMeta((Object)class6709, objectlayout10034, objectlayout10033);((Type_Class)class6714)->name = (Type_Symbol)symbol44082;metaclass5915 = (Object)HEADER(class6714);objectlayout10035 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10035)->values[0] = instancevariable16359;((Type_Array)objectlayout10035)->values[1] = instancevariable16360;((Type_Array)objectlayout10035)->values[2] = instancevariable16361;((Type_Array)objectlayout10035)->values[3] = instancevariable16362;((Type_Array)objectlayout10035)->values[4] = instancevariable16363;((Type_Array)objectlayout10035)->values[5] = instancevariable16366;symbol44043 = (Object)new_Type_Symbol_cached(L"ASTBlock");objectlayout10036 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10036)->values[0] = instancevariable16367;((Type_Array)objectlayout10036)->values[1] = instancevariable16368;((Type_Array)objectlayout10036)->values[2] = instancevariable16369;instancevariable16380 = (Object)new_AST_InstVariable(3, L"parameters");((Type_Array)objectlayout10036)->values[3] = instancevariable16380;instancevariable16381 = (Object)new_AST_InstVariable(4, L"temporaries");((Type_Array)objectlayout10036)->values[4] = instancevariable16381;instancevariable16382 = (Object)new_AST_InstVariable(5, L"statements");((Type_Array)objectlayout10036)->values[5] = instancevariable16382;class6715 = (Object)new_Class_withMeta((Object)class6701, objectlayout10036, objectlayout10035);((Type_Class)class6715)->name = (Type_Symbol)symbol44043;metaclass5916 = (Object)HEADER(class6715);objectlayout10037 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10037)->values[0] = instancevariable16359;((Type_Array)objectlayout10037)->values[1] = instancevariable16360;((Type_Array)objectlayout10037)->values[2] = instancevariable16361;((Type_Array)objectlayout10037)->values[3] = instancevariable16362;((Type_Array)objectlayout10037)->values[4] = instancevariable16363;((Type_Array)objectlayout10037)->values[5] = instancevariable16366;symbol44035 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");objectlayout10038 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10038)->values[0] = instancevariable16367;((Type_Array)objectlayout10038)->values[1] = instancevariable16368;((Type_Array)objectlayout10038)->values[2] = instancevariable16369;instancevariable16383 = (Object)new_AST_InstVariable(3, L"expression");((Type_Array)objectlayout10038)->values[3] = instancevariable16383;class6716 = (Object)new_Class_withMeta((Object)class6707, objectlayout10038, objectlayout10037);((Type_Class)class6716)->name = (Type_Symbol)symbol44035;metaclass5917 = (Object)HEADER(class6716);objectlayout10039 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10039)->values[0] = instancevariable16359;((Type_Array)objectlayout10039)->values[1] = instancevariable16360;((Type_Array)objectlayout10039)->values[2] = instancevariable16361;((Type_Array)objectlayout10039)->values[3] = instancevariable16362;((Type_Array)objectlayout10039)->values[4] = instancevariable16363;((Type_Array)objectlayout10039)->values[5] = instancevariable16366;symbol44024 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");objectlayout10040 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);((Type_Array)objectlayout10040)->values[0] = instancevariable16367;((Type_Array)objectlayout10040)->values[1] = instancevariable16368;((Type_Array)objectlayout10040)->values[2] = instancevariable16369;((Type_Array)objectlayout10040)->values[3] = instancevariable16370;((Type_Array)objectlayout10040)->values[4] = instancevariable16371;instancevariable16384 = (Object)new_AST_InstVariable(5, L"receiver");((Type_Array)objectlayout10040)->values[5] = instancevariable16384;instancevariable16385 = (Object)new_AST_InstVariable(6, L"arguments");((Type_Array)objectlayout10040)->values[6] = instancevariable16385;class6717 = (Object)new_Class_withMeta((Object)class6703, objectlayout10040, objectlayout10039);((Type_Class)class6717)->name = (Type_Symbol)symbol44024;metaclass5918 = (Object)HEADER(class6717);objectlayout10041 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10041)->values[0] = instancevariable16359;((Type_Array)objectlayout10041)->values[1] = instancevariable16360;((Type_Array)objectlayout10041)->values[2] = instancevariable16361;((Type_Array)objectlayout10041)->values[3] = instancevariable16362;((Type_Array)objectlayout10041)->values[4] = instancevariable16363;((Type_Array)objectlayout10041)->values[5] = instancevariable16366;symbol44045 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");objectlayout10042 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10042)->values[0] = instancevariable16367;((Type_Array)objectlayout10042)->values[1] = instancevariable16368;((Type_Array)objectlayout10042)->values[2] = instancevariable16369;instancevariable16386 = (Object)new_AST_InstVariable(3, L"receiver");((Type_Array)objectlayout10042)->values[3] = instancevariable16386;instancevariable16387 = (Object)new_AST_InstVariable(4, L"cascades");((Type_Array)objectlayout10042)->values[4] = instancevariable16387;class6718 = (Object)new_Class_withMeta((Object)class6707, objectlayout10042, objectlayout10041);((Type_Class)class6718)->name = (Type_Symbol)symbol44045;metaclass5919 = (Object)HEADER(class6718);objectlayout10043 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10043)->values[0] = instancevariable16359;((Type_Array)objectlayout10043)->values[1] = instancevariable16360;((Type_Array)objectlayout10043)->values[2] = instancevariable16361;((Type_Array)objectlayout10043)->values[3] = instancevariable16362;((Type_Array)objectlayout10043)->values[4] = instancevariable16363;((Type_Array)objectlayout10043)->values[5] = instancevariable16366;symbol44026 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");objectlayout10044 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10044)->values[0] = instancevariable16367;((Type_Array)objectlayout10044)->values[1] = instancevariable16368;((Type_Array)objectlayout10044)->values[2] = instancevariable16369;((Type_Array)objectlayout10044)->values[3] = instancevariable16370;instancevariable16388 = (Object)new_AST_InstVariable(4, L"receiver");((Type_Array)objectlayout10044)->values[4] = instancevariable16388;class6719 = (Object)new_Class_withMeta((Object)class6705, objectlayout10044, objectlayout10043);((Type_Class)class6719)->name = (Type_Symbol)symbol44026;metaclass5920 = (Object)HEADER(class6719);objectlayout10045 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10045)->values[0] = instancevariable16359;((Type_Array)objectlayout10045)->values[1] = instancevariable16360;((Type_Array)objectlayout10045)->values[2] = instancevariable16361;((Type_Array)objectlayout10045)->values[3] = instancevariable16362;((Type_Array)objectlayout10045)->values[4] = instancevariable16363;((Type_Array)objectlayout10045)->values[5] = instancevariable16366;symbol44018 = (Object)new_Type_Symbol_cached(L"ASTNumber");objectlayout10046 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10046)->values[0] = instancevariable16367;((Type_Array)objectlayout10046)->values[1] = instancevariable16368;((Type_Array)objectlayout10046)->values[2] = instancevariable16369;instancevariable16389 = (Object)new_AST_InstVariable(3, L"number");((Type_Array)objectlayout10046)->values[3] = instancevariable16389;instancevariable16390 = (Object)new_AST_InstVariable(4, L"base");((Type_Array)objectlayout10046)->values[4] = instancevariable16390;class6720 = (Object)new_Class_withMeta((Object)class6709, objectlayout10046, objectlayout10045);((Type_Class)class6720)->name = (Type_Symbol)symbol44018;metaclass5921 = (Object)HEADER(class6720);objectlayout10047 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10047)->values[0] = instancevariable16359;((Type_Array)objectlayout10047)->values[1] = instancevariable16360;((Type_Array)objectlayout10047)->values[2] = instancevariable16361;((Type_Array)objectlayout10047)->values[3] = instancevariable16362;((Type_Array)objectlayout10047)->values[4] = instancevariable16363;((Type_Array)objectlayout10047)->values[5] = instancevariable16366;symbol44220 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");objectlayout10048 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10048)->values[0] = instancevariable16367;((Type_Array)objectlayout10048)->values[1] = instancevariable16368;((Type_Array)objectlayout10048)->values[2] = instancevariable16369;((Type_Array)objectlayout10048)->values[3] = instancevariable16370;class6721 = (Object)new_Class_withMeta((Object)class6702, objectlayout10048, objectlayout10047);((Type_Class)class6721)->name = (Type_Symbol)symbol44220;metaclass5922 = (Object)HEADER(class6721);objectlayout10049 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10049)->values[0] = instancevariable16359;((Type_Array)objectlayout10049)->values[1] = instancevariable16360;((Type_Array)objectlayout10049)->values[2] = instancevariable16361;((Type_Array)objectlayout10049)->values[3] = instancevariable16362;((Type_Array)objectlayout10049)->values[4] = instancevariable16363;((Type_Array)objectlayout10049)->values[5] = instancevariable16366;symbol44030 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");objectlayout10050 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10050)->values[0] = instancevariable16367;((Type_Array)objectlayout10050)->values[1] = instancevariable16368;((Type_Array)objectlayout10050)->values[2] = instancevariable16369;((Type_Array)objectlayout10050)->values[3] = instancevariable16370;instancevariable16391 = (Object)new_AST_InstVariable(4, L"parameter");((Type_Array)objectlayout10050)->values[4] = instancevariable16391;class6722 = (Object)new_Class_withMeta((Object)class6721, objectlayout10050, objectlayout10049);((Type_Class)class6722)->name = (Type_Symbol)symbol44030;metaclass5923 = (Object)HEADER(class6722);objectlayout10051 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10051)->values[0] = instancevariable16359;((Type_Array)objectlayout10051)->values[1] = instancevariable16360;((Type_Array)objectlayout10051)->values[2] = instancevariable16361;((Type_Array)objectlayout10051)->values[3] = instancevariable16362;((Type_Array)objectlayout10051)->values[4] = instancevariable16363;((Type_Array)objectlayout10051)->values[5] = instancevariable16366;symbol44038 = (Object)new_Type_Symbol_cached(L"ASTMethod");objectlayout10052 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);((Type_Array)objectlayout10052)->values[0] = instancevariable16367;((Type_Array)objectlayout10052)->values[1] = instancevariable16368;((Type_Array)objectlayout10052)->values[2] = instancevariable16369;instancevariable16392 = (Object)new_AST_InstVariable(3, L"message");((Type_Array)objectlayout10052)->values[3] = instancevariable16392;instancevariable16393 = (Object)new_AST_InstVariable(4, L"annotations");((Type_Array)objectlayout10052)->values[4] = instancevariable16393;instancevariable16394 = (Object)new_AST_InstVariable(5, L"temporaries");((Type_Array)objectlayout10052)->values[5] = instancevariable16394;instancevariable16395 = (Object)new_AST_InstVariable(6, L"statements");((Type_Array)objectlayout10052)->values[6] = instancevariable16395;class6723 = (Object)new_Class_withMeta((Object)class6701, objectlayout10052, objectlayout10051);((Type_Class)class6723)->name = (Type_Symbol)symbol44038;metaclass5924 = (Object)HEADER(class6723);objectlayout10053 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10053)->values[0] = instancevariable16359;((Type_Array)objectlayout10053)->values[1] = instancevariable16360;((Type_Array)objectlayout10053)->values[2] = instancevariable16361;((Type_Array)objectlayout10053)->values[3] = instancevariable16362;((Type_Array)objectlayout10053)->values[4] = instancevariable16363;((Type_Array)objectlayout10053)->values[5] = instancevariable16366;symbol44019 = (Object)new_Type_Symbol_cached(L"ASTSymbol");objectlayout10054 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10054)->values[0] = instancevariable16367;((Type_Array)objectlayout10054)->values[1] = instancevariable16368;((Type_Array)objectlayout10054)->values[2] = instancevariable16369;instancevariable16396 = (Object)new_AST_InstVariable(3, L"symbol");((Type_Array)objectlayout10054)->values[3] = instancevariable16396;class6724 = (Object)new_Class_withMeta((Object)class6709, objectlayout10054, objectlayout10053);((Type_Class)class6724)->name = (Type_Symbol)symbol44019;metaclass5925 = (Object)HEADER(class6724);objectlayout10055 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10055)->values[0] = instancevariable16359;((Type_Array)objectlayout10055)->values[1] = instancevariable16360;((Type_Array)objectlayout10055)->values[2] = instancevariable16361;((Type_Array)objectlayout10055)->values[3] = instancevariable16362;((Type_Array)objectlayout10055)->values[4] = instancevariable16363;((Type_Array)objectlayout10055)->values[5] = instancevariable16366;symbol44047 = (Object)new_Type_Symbol_cached(L"ASTSuper");objectlayout10056 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10056)->values[0] = instancevariable16367;((Type_Array)objectlayout10056)->values[1] = instancevariable16368;((Type_Array)objectlayout10056)->values[2] = instancevariable16369;class6725 = (Object)new_Class_withMeta((Object)class6701, objectlayout10056, objectlayout10055);((Type_Class)class6725)->name = (Type_Symbol)symbol44047;metaclass5926 = (Object)HEADER(class6725);objectlayout10057 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10057)->values[0] = instancevariable16359;((Type_Array)objectlayout10057)->values[1] = instancevariable16360;((Type_Array)objectlayout10057)->values[2] = instancevariable16361;((Type_Array)objectlayout10057)->values[3] = instancevariable16362;((Type_Array)objectlayout10057)->values[4] = instancevariable16363;((Type_Array)objectlayout10057)->values[5] = instancevariable16366;symbol44066 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");objectlayout10058 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10058)->values[0] = instancevariable16367;((Type_Array)objectlayout10058)->values[1] = instancevariable16368;((Type_Array)objectlayout10058)->values[2] = instancevariable16369;((Type_Array)objectlayout10058)->values[3] = instancevariable16370;((Type_Array)objectlayout10058)->values[4] = instancevariable16371;instancevariable16397 = (Object)new_AST_InstVariable(5, L"arguments");((Type_Array)objectlayout10058)->values[5] = instancevariable16397;class6726 = (Object)new_Class_withMeta((Object)class6703, objectlayout10058, objectlayout10057);((Type_Class)class6726)->name = (Type_Symbol)symbol44066;metaclass5927 = (Object)HEADER(class6726);objectlayout10059 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10059)->values[0] = instancevariable16359;((Type_Array)objectlayout10059)->values[1] = instancevariable16360;((Type_Array)objectlayout10059)->values[2] = instancevariable16361;((Type_Array)objectlayout10059)->values[3] = instancevariable16362;((Type_Array)objectlayout10059)->values[4] = instancevariable16363;((Type_Array)objectlayout10059)->values[5] = instancevariable16366;symbol44020 = (Object)new_Type_Symbol_cached(L"ASTString");objectlayout10060 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10060)->values[0] = instancevariable16367;((Type_Array)objectlayout10060)->values[1] = instancevariable16368;((Type_Array)objectlayout10060)->values[2] = instancevariable16369;instancevariable16398 = (Object)new_AST_InstVariable(3, L"string");((Type_Array)objectlayout10060)->values[3] = instancevariable16398;class6727 = (Object)new_Class_withMeta((Object)class6709, objectlayout10060, objectlayout10059);((Type_Class)class6727)->name = (Type_Symbol)symbol44020;metaclass5928 = (Object)HEADER(class6727);objectlayout10061 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10061)->values[0] = instancevariable16359;((Type_Array)objectlayout10061)->values[1] = instancevariable16360;((Type_Array)objectlayout10061)->values[2] = instancevariable16361;((Type_Array)objectlayout10061)->values[3] = instancevariable16362;((Type_Array)objectlayout10061)->values[4] = instancevariable16363;((Type_Array)objectlayout10061)->values[5] = instancevariable16366;symbol44067 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");objectlayout10062 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10062)->values[0] = instancevariable16367;((Type_Array)objectlayout10062)->values[1] = instancevariable16368;((Type_Array)objectlayout10062)->values[2] = instancevariable16369;((Type_Array)objectlayout10062)->values[3] = instancevariable16370;class6728 = (Object)new_Class_withMeta((Object)class6705, objectlayout10062, objectlayout10061);((Type_Class)class6728)->name = (Type_Symbol)symbol44067;metaclass5929 = (Object)HEADER(class6728);objectlayout10063 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10063)->values[0] = instancevariable16359;((Type_Array)objectlayout10063)->values[1] = instancevariable16360;((Type_Array)objectlayout10063)->values[2] = instancevariable16361;((Type_Array)objectlayout10063)->values[3] = instancevariable16362;((Type_Array)objectlayout10063)->values[4] = instancevariable16363;((Type_Array)objectlayout10063)->values[5] = instancevariable16366;symbol44032 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");objectlayout10064 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10064)->values[0] = instancevariable16367;((Type_Array)objectlayout10064)->values[1] = instancevariable16368;((Type_Array)objectlayout10064)->values[2] = instancevariable16369;((Type_Array)objectlayout10064)->values[3] = instancevariable16370;instancevariable16399 = (Object)new_AST_InstVariable(4, L"receiver");((Type_Array)objectlayout10064)->values[4] = instancevariable16399;instancevariable16400 = (Object)new_AST_InstVariable(5, L"argument");((Type_Array)objectlayout10064)->values[5] = instancevariable16400;class6729 = (Object)new_Class_withMeta((Object)class6721, objectlayout10064, objectlayout10063);((Type_Class)class6729)->name = (Type_Symbol)symbol44032;metaclass5930 = (Object)HEADER(class6729);objectlayout10065 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10065)->values[0] = instancevariable16359;((Type_Array)objectlayout10065)->values[1] = instancevariable16360;((Type_Array)objectlayout10065)->values[2] = instancevariable16361;((Type_Array)objectlayout10065)->values[3] = instancevariable16362;((Type_Array)objectlayout10065)->values[4] = instancevariable16363;symbol44139 = (Object)new_Type_Symbol_cached(L"RuntimeObject");objectlayout10066 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);instancevariable16401 = (Object)new_AST_InstVariable(0, L"code");((Type_Array)objectlayout10066)->values[0] = instancevariable16401;class6730 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout10066, objectlayout10065);((Type_Class)class6730)->name = (Type_Symbol)symbol44139;metaclass5931 = (Object)HEADER(class6730);objectlayout10067 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10067)->values[0] = instancevariable16359;((Type_Array)objectlayout10067)->values[1] = instancevariable16360;((Type_Array)objectlayout10067)->values[2] = instancevariable16361;((Type_Array)objectlayout10067)->values[3] = instancevariable16362;((Type_Array)objectlayout10067)->values[4] = instancevariable16363;symbol44101 = (Object)new_Type_Symbol_cached(L"Type");class6731 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout10067);((Type_Class)class6731)->name = (Type_Symbol)symbol44101;metaclass5932 = (Object)HEADER(class6731);objectlayout10068 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10068)->values[0] = instancevariable16359;((Type_Array)objectlayout10068)->values[1] = instancevariable16360;((Type_Array)objectlayout10068)->values[2] = instancevariable16361;((Type_Array)objectlayout10068)->values[3] = instancevariable16362;((Type_Array)objectlayout10068)->values[4] = instancevariable16363;((Type_Array)objectlayout10068)->values[5] = instancevariable16366;symbol44355 = (Object)new_Type_Symbol_cached(L"Variable");objectlayout10069 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10069)->values[0] = instancevariable16367;((Type_Array)objectlayout10069)->values[1] = instancevariable16368;((Type_Array)objectlayout10069)->values[2] = instancevariable16369;instancevariable16402 = (Object)new_AST_InstVariable(3, L"name");((Type_Array)objectlayout10069)->values[3] = instancevariable16402;instancevariable16403 = (Object)new_AST_InstVariable(4, L"scopeId");((Type_Array)objectlayout10069)->values[4] = instancevariable16403;instancevariable16404 = (Object)new_AST_InstVariable(5, L"localId");((Type_Array)objectlayout10069)->values[5] = instancevariable16404;class6732 = (Object)new_Class_withMeta((Object)class6701, objectlayout10069, objectlayout10068);((Type_Class)class6732)->name = (Type_Symbol)symbol44355;metaclass5933 = (Object)HEADER(class6732);objectlayout10070 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10070)->values[0] = instancevariable16359;((Type_Array)objectlayout10070)->values[1] = instancevariable16360;((Type_Array)objectlayout10070)->values[2] = instancevariable16361;((Type_Array)objectlayout10070)->values[3] = instancevariable16362;((Type_Array)objectlayout10070)->values[4] = instancevariable16363;((Type_Array)objectlayout10070)->values[5] = instancevariable16366;symbol44099 = (Object)new_Type_Symbol_cached(L"InstanceVariable");objectlayout10071 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10071)->values[0] = instancevariable16367;((Type_Array)objectlayout10071)->values[1] = instancevariable16368;((Type_Array)objectlayout10071)->values[2] = instancevariable16369;((Type_Array)objectlayout10071)->values[3] = instancevariable16402;((Type_Array)objectlayout10071)->values[4] = instancevariable16403;((Type_Array)objectlayout10071)->values[5] = instancevariable16404;class6733 = (Object)new_Class_withMeta((Object)class6732, objectlayout10071, objectlayout10070);((Type_Class)class6733)->name = (Type_Symbol)symbol44099;metaclass5934 = (Object)HEADER(class6733);objectlayout10072 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10072)->values[0] = instancevariable16359;((Type_Array)objectlayout10072)->values[1] = instancevariable16360;((Type_Array)objectlayout10072)->values[2] = instancevariable16361;((Type_Array)objectlayout10072)->values[3] = instancevariable16362;((Type_Array)objectlayout10072)->values[4] = instancevariable16363;((Type_Array)objectlayout10072)->values[5] = instancevariable16366;symbol44206 = (Object)new_Type_Symbol_cached(L"LocalVariable");objectlayout10073 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);((Type_Array)objectlayout10073)->values[0] = instancevariable16367;((Type_Array)objectlayout10073)->values[1] = instancevariable16368;((Type_Array)objectlayout10073)->values[2] = instancevariable16369;((Type_Array)objectlayout10073)->values[3] = instancevariable16402;((Type_Array)objectlayout10073)->values[4] = instancevariable16403;((Type_Array)objectlayout10073)->values[5] = instancevariable16404;instancevariable16405 = (Object)new_AST_InstVariable(6, L"key");((Type_Array)objectlayout10073)->values[6] = instancevariable16405;class6734 = (Object)new_Class_withMeta((Object)class6732, objectlayout10073, objectlayout10072);((Type_Class)class6734)->name = (Type_Symbol)symbol44206;metaclass5935 = (Object)HEADER(class6734);objectlayout10074 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10074)->values[0] = instancevariable16359;((Type_Array)objectlayout10074)->values[1] = instancevariable16360;((Type_Array)objectlayout10074)->values[2] = instancevariable16361;((Type_Array)objectlayout10074)->values[3] = instancevariable16362;((Type_Array)objectlayout10074)->values[4] = instancevariable16363;symbol44070 = (Object)new_Type_Symbol_cached(L"SCParser");objectlayout10075 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);instancevariable16406 = (Object)new_AST_InstVariable(0, L"parsers");((Type_Array)objectlayout10075)->values[0] = instancevariable16406;instancevariable16407 = (Object)new_AST_InstVariable(1, L"id");((Type_Array)objectlayout10075)->values[1] = instancevariable16407;instancevariable16408 = (Object)new_AST_InstVariable(2, L"symbols");((Type_Array)objectlayout10075)->values[2] = instancevariable16408;class6735 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout10075, objectlayout10074);((Type_Class)class6735)->name = (Type_Symbol)symbol44070;metaclass5936 = (Object)HEADER(class6735);objectlayout10076 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10076)->values[0] = instancevariable16359;((Type_Array)objectlayout10076)->values[1] = instancevariable16360;((Type_Array)objectlayout10076)->values[2] = instancevariable16361;((Type_Array)objectlayout10076)->values[3] = instancevariable16362;((Type_Array)objectlayout10076)->values[4] = instancevariable16363;((Type_Array)objectlayout10076)->values[5] = instancevariable16364;symbol43990 = (Object)new_Type_Symbol_cached(L"SCParserTest");objectlayout10077 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);((Type_Array)objectlayout10077)->values[0] = instancevariable16365;instancevariable16409 = (Object)new_AST_InstVariable(1, L"scparser");((Type_Array)objectlayout10077)->values[1] = instancevariable16409;class6736 = (Object)new_Class_withMeta((Object)class6700, objectlayout10077, objectlayout10076);((Type_Class)class6736)->name = (Type_Symbol)symbol43990;metaclass5937 = (Object)HEADER(class6736);objectlayout10078 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10078)->values[0] = instancevariable16359;((Type_Array)objectlayout10078)->values[1] = instancevariable16360;((Type_Array)objectlayout10078)->values[2] = instancevariable16361;((Type_Array)objectlayout10078)->values[3] = instancevariable16362;((Type_Array)objectlayout10078)->values[4] = instancevariable16363;symbol44320 = (Object)new_Type_Symbol_cached(L"PEGExpression");objectlayout10079 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);instancevariable16410 = (Object)new_AST_InstVariable(0, L"name");((Type_Array)objectlayout10079)->values[0] = instancevariable16410;instancevariable16411 = (Object)new_AST_InstVariable(1, L"omit");((Type_Array)objectlayout10079)->values[1] = instancevariable16411;class6737 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout10079, objectlayout10078);((Type_Class)class6737)->name = (Type_Symbol)symbol44320;metaclass5938 = (Object)HEADER(class6737);objectlayout10080 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10080)->values[0] = instancevariable16359;((Type_Array)objectlayout10080)->values[1] = instancevariable16360;((Type_Array)objectlayout10080)->values[2] = instancevariable16361;((Type_Array)objectlayout10080)->values[3] = instancevariable16362;((Type_Array)objectlayout10080)->values[4] = instancevariable16363;symbol44364 = (Object)new_Type_Symbol_cached(L"PEGNotExpression");objectlayout10081 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10081)->values[0] = instancevariable16410;((Type_Array)objectlayout10081)->values[1] = instancevariable16411;instancevariable16412 = (Object)new_AST_InstVariable(2, L"child");((Type_Array)objectlayout10081)->values[2] = instancevariable16412;class6738 = (Object)new_Class_withMeta((Object)class6737, objectlayout10081, objectlayout10080);((Type_Class)class6738)->name = (Type_Symbol)symbol44364;metaclass5939 = (Object)HEADER(class6738);objectlayout10082 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10082)->values[0] = instancevariable16359;((Type_Array)objectlayout10082)->values[1] = instancevariable16360;((Type_Array)objectlayout10082)->values[2] = instancevariable16361;((Type_Array)objectlayout10082)->values[3] = instancevariable16362;((Type_Array)objectlayout10082)->values[4] = instancevariable16363;symbol44378 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");class6739 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout10082);((Type_Class)class6739)->name = (Type_Symbol)symbol44378;metaclass5940 = (Object)HEADER(class6739);objectlayout10083 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10083)->values[0] = instancevariable16359;((Type_Array)objectlayout10083)->values[1] = instancevariable16360;((Type_Array)objectlayout10083)->values[2] = instancevariable16361;((Type_Array)objectlayout10083)->values[3] = instancevariable16362;((Type_Array)objectlayout10083)->values[4] = instancevariable16363;symbol44337 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");objectlayout10084 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10084)->values[0] = instancevariable16410;((Type_Array)objectlayout10084)->values[1] = instancevariable16411;instancevariable16413 = (Object)new_AST_InstVariable(2, L"child");((Type_Array)objectlayout10084)->values[2] = instancevariable16413;instancevariable16414 = (Object)new_AST_InstVariable(3, L"skipWhitespace");((Type_Array)objectlayout10084)->values[3] = instancevariable16414;class6740 = (Object)new_Class_withMeta((Object)class6737, objectlayout10084, objectlayout10083);((Type_Class)class6740)->name = (Type_Symbol)symbol44337;metaclass5941 = (Object)HEADER(class6740);objectlayout10085 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10085)->values[0] = instancevariable16359;((Type_Array)objectlayout10085)->values[1] = instancevariable16360;((Type_Array)objectlayout10085)->values[2] = instancevariable16361;((Type_Array)objectlayout10085)->values[3] = instancevariable16362;((Type_Array)objectlayout10085)->values[4] = instancevariable16363;symbol44333 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");objectlayout10086 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10086)->values[0] = instancevariable16410;((Type_Array)objectlayout10086)->values[1] = instancevariable16411;instancevariable16415 = (Object)new_AST_InstVariable(2, L"children");((Type_Array)objectlayout10086)->values[2] = instancevariable16415;instancevariable16416 = (Object)new_AST_InstVariable(3, L"skipWhitespace");((Type_Array)objectlayout10086)->values[3] = instancevariable16416;class6741 = (Object)new_Class_withMeta((Object)class6737, objectlayout10086, objectlayout10085);((Type_Class)class6741)->name = (Type_Symbol)symbol44333;metaclass5942 = (Object)HEADER(class6741);objectlayout10087 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10087)->values[0] = instancevariable16359;((Type_Array)objectlayout10087)->values[1] = instancevariable16360;((Type_Array)objectlayout10087)->values[2] = instancevariable16361;((Type_Array)objectlayout10087)->values[3] = instancevariable16362;((Type_Array)objectlayout10087)->values[4] = instancevariable16363;symbol44130 = (Object)new_Type_Symbol_cached(L"PEGTerminal");objectlayout10088 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10088)->values[0] = instancevariable16410;((Type_Array)objectlayout10088)->values[1] = instancevariable16411;instancevariable16417 = (Object)new_AST_InstVariable(2, L"string");((Type_Array)objectlayout10088)->values[2] = instancevariable16417;class6742 = (Object)new_Class_withMeta((Object)class6737, objectlayout10088, objectlayout10087);((Type_Class)class6742)->name = (Type_Symbol)symbol44130;metaclass5943 = (Object)HEADER(class6742);objectlayout10089 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10089)->values[0] = instancevariable16359;((Type_Array)objectlayout10089)->values[1] = instancevariable16360;((Type_Array)objectlayout10089)->values[2] = instancevariable16361;((Type_Array)objectlayout10089)->values[3] = instancevariable16362;((Type_Array)objectlayout10089)->values[4] = instancevariable16363;symbol44339 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");objectlayout10090 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10090)->values[0] = instancevariable16410;((Type_Array)objectlayout10090)->values[1] = instancevariable16411;instancevariable16418 = (Object)new_AST_InstVariable(2, L"child");((Type_Array)objectlayout10090)->values[2] = instancevariable16418;instancevariable16419 = (Object)new_AST_InstVariable(3, L"skipWhitespace");((Type_Array)objectlayout10090)->values[3] = instancevariable16419;class6743 = (Object)new_Class_withMeta((Object)class6737, objectlayout10090, objectlayout10089);((Type_Class)class6743)->name = (Type_Symbol)symbol44339;metaclass5944 = (Object)HEADER(class6743);objectlayout10091 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10091)->values[0] = instancevariable16359;((Type_Array)objectlayout10091)->values[1] = instancevariable16360;((Type_Array)objectlayout10091)->values[2] = instancevariable16361;((Type_Array)objectlayout10091)->values[3] = instancevariable16362;((Type_Array)objectlayout10091)->values[4] = instancevariable16363;symbol44334 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");objectlayout10092 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10092)->values[0] = instancevariable16410;((Type_Array)objectlayout10092)->values[1] = instancevariable16411;((Type_Array)objectlayout10092)->values[2] = instancevariable16418;((Type_Array)objectlayout10092)->values[3] = instancevariable16419;class6744 = (Object)new_Class_withMeta((Object)class6743, objectlayout10092, objectlayout10091);((Type_Class)class6744)->name = (Type_Symbol)symbol44334;metaclass5945 = (Object)HEADER(class6744);objectlayout10093 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10093)->values[0] = instancevariable16359;((Type_Array)objectlayout10093)->values[1] = instancevariable16360;((Type_Array)objectlayout10093)->values[2] = instancevariable16361;((Type_Array)objectlayout10093)->values[3] = instancevariable16362;((Type_Array)objectlayout10093)->values[4] = instancevariable16363;symbol44123 = (Object)new_Type_Symbol_cached(L"PEGRange");objectlayout10094 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);((Type_Array)objectlayout10094)->values[0] = instancevariable16410;((Type_Array)objectlayout10094)->values[1] = instancevariable16411;instancevariable16420 = (Object)new_AST_InstVariable(2, L"start");((Type_Array)objectlayout10094)->values[2] = instancevariable16420;instancevariable16421 = (Object)new_AST_InstVariable(3, L"stop");((Type_Array)objectlayout10094)->values[3] = instancevariable16421;class6745 = (Object)new_Class_withMeta((Object)class6737, objectlayout10094, objectlayout10093);((Type_Class)class6745)->name = (Type_Symbol)symbol44123;metaclass5946 = (Object)HEADER(class6745);objectlayout10095 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10095)->values[0] = instancevariable16359;((Type_Array)objectlayout10095)->values[1] = instancevariable16360;((Type_Array)objectlayout10095)->values[2] = instancevariable16361;((Type_Array)objectlayout10095)->values[3] = instancevariable16362;((Type_Array)objectlayout10095)->values[4] = instancevariable16363;symbol44374 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");objectlayout10096 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);instancevariable16422 = (Object)new_AST_InstVariable(0, L"result");((Type_Array)objectlayout10096)->values[0] = instancevariable16422;class6746 = (Object)new_Class_withMeta((Object)class6739, objectlayout10096, objectlayout10095);((Type_Class)class6746)->name = (Type_Symbol)symbol44374;metaclass5947 = (Object)HEADER(class6746);objectlayout10097 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10097)->values[0] = instancevariable16359;((Type_Array)objectlayout10097)->values[1] = instancevariable16360;((Type_Array)objectlayout10097)->values[2] = instancevariable16361;((Type_Array)objectlayout10097)->values[3] = instancevariable16362;((Type_Array)objectlayout10097)->values[4] = instancevariable16363;symbol44152 = (Object)new_Type_Symbol_cached(L"Stream");class6747 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout10097);((Type_Class)class6747)->name = (Type_Symbol)symbol44152;metaclass5948 = (Object)HEADER(class6747);objectlayout10098 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10098)->values[0] = instancevariable16359;((Type_Array)objectlayout10098)->values[1] = instancevariable16360;((Type_Array)objectlayout10098)->values[2] = instancevariable16361;((Type_Array)objectlayout10098)->values[3] = instancevariable16362;((Type_Array)objectlayout10098)->values[4] = instancevariable16363;symbol44151 = (Object)new_Type_Symbol_cached(L"PositionableStream");objectlayout10099 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);instancevariable16423 = (Object)new_AST_InstVariable(0, L"collection");((Type_Array)objectlayout10099)->values[0] = instancevariable16423;instancevariable16424 = (Object)new_AST_InstVariable(1, L"position");((Type_Array)objectlayout10099)->values[1] = instancevariable16424;instancevariable16425 = (Object)new_AST_InstVariable(2, L"readLimit");((Type_Array)objectlayout10099)->values[2] = instancevariable16425;class6748 = (Object)new_Class_withMeta((Object)class6747, objectlayout10099, objectlayout10098);((Type_Class)class6748)->name = (Type_Symbol)symbol44151;metaclass5949 = (Object)HEADER(class6748);objectlayout10100 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10100)->values[0] = instancevariable16359;((Type_Array)objectlayout10100)->values[1] = instancevariable16360;((Type_Array)objectlayout10100)->values[2] = instancevariable16361;((Type_Array)objectlayout10100)->values[3] = instancevariable16362;((Type_Array)objectlayout10100)->values[4] = instancevariable16363;symbol44150 = (Object)new_Type_Symbol_cached(L"ReadStream");objectlayout10101 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10101)->values[0] = instancevariable16423;((Type_Array)objectlayout10101)->values[1] = instancevariable16424;((Type_Array)objectlayout10101)->values[2] = instancevariable16425;class6749 = (Object)new_Class_withMeta((Object)class6748, objectlayout10101, objectlayout10100);((Type_Class)class6749)->name = (Type_Symbol)symbol44150;metaclass5950 = (Object)HEADER(class6749);objectlayout10102 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10102)->values[0] = instancevariable16359;((Type_Array)objectlayout10102)->values[1] = instancevariable16360;((Type_Array)objectlayout10102)->values[2] = instancevariable16361;((Type_Array)objectlayout10102)->values[3] = instancevariable16362;((Type_Array)objectlayout10102)->values[4] = instancevariable16363;symbol44012 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");objectlayout10103 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10103)->values[0] = instancevariable16423;((Type_Array)objectlayout10103)->values[1] = instancevariable16424;((Type_Array)objectlayout10103)->values[2] = instancevariable16425;instancevariable16426 = (Object)new_AST_InstVariable(3, L"separator");((Type_Array)objectlayout10103)->values[3] = instancevariable16426;instancevariable16427 = (Object)new_AST_InstVariable(4, L"cache");((Type_Array)objectlayout10103)->values[4] = instancevariable16427;class6750 = (Object)new_Class_withMeta((Object)class6749, objectlayout10103, objectlayout10102);((Type_Class)class6750)->name = (Type_Symbol)symbol44012;metaclass5951 = (Object)HEADER(class6750);objectlayout10104 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);((Type_Array)objectlayout10104)->values[0] = instancevariable16359;((Type_Array)objectlayout10104)->values[1] = instancevariable16360;((Type_Array)objectlayout10104)->values[2] = instancevariable16361;((Type_Array)objectlayout10104)->values[3] = instancevariable16362;((Type_Array)objectlayout10104)->values[4] = instancevariable16363;instancevariable16428 = (Object)new_AST_InstVariable(5, L"separators");((Type_Array)objectlayout10104)->values[5] = instancevariable16428;instancevariable16429 = (Object)new_AST_InstVariable(6, L"separator");((Type_Array)objectlayout10104)->values[6] = instancevariable16429;symbol44075 = (Object)new_Type_Symbol_cached(L"PEGParser");objectlayout10105 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);((Type_Array)objectlayout10105)->values[0] = instancevariable16410;((Type_Array)objectlayout10105)->values[1] = instancevariable16411;instancevariable16430 = (Object)new_AST_InstVariable(2, L"expression");((Type_Array)objectlayout10105)->values[2] = instancevariable16430;instancevariable16431 = (Object)new_AST_InstVariable(3, L"semantics");((Type_Array)objectlayout10105)->values[3] = instancevariable16431;instancevariable16432 = (Object)new_AST_InstVariable(4, L"scopeClass");((Type_Array)objectlayout10105)->values[4] = instancevariable16432;instancevariable16433 = (Object)new_AST_InstVariable(5, L"separator");((Type_Array)objectlayout10105)->values[5] = instancevariable16433;class6751 = (Object)new_Class_withMeta((Object)class6737, objectlayout10105, objectlayout10104);((Type_Class)class6751)->name = (Type_Symbol)symbol44075;metaclass5952 = (Object)HEADER(class6751);objectlayout10106 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10106)->values[0] = instancevariable16359;((Type_Array)objectlayout10106)->values[1] = instancevariable16360;((Type_Array)objectlayout10106)->values[2] = instancevariable16361;((Type_Array)objectlayout10106)->values[3] = instancevariable16362;((Type_Array)objectlayout10106)->values[4] = instancevariable16363;symbol44375 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");class6752 = (Object)new_Class_withMeta((Object)class6739, empty_object_layout, objectlayout10106);((Type_Class)class6752)->name = (Type_Symbol)symbol44375;metaclass5953 = (Object)HEADER(class6752);objectlayout10107 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10107)->values[0] = instancevariable16359;((Type_Array)objectlayout10107)->values[1] = instancevariable16360;((Type_Array)objectlayout10107)->values[2] = instancevariable16361;((Type_Array)objectlayout10107)->values[3] = instancevariable16362;((Type_Array)objectlayout10107)->values[4] = instancevariable16363;symbol44125 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");objectlayout10108 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);((Type_Array)objectlayout10108)->values[0] = instancevariable16410;((Type_Array)objectlayout10108)->values[1] = instancevariable16411;instancevariable16434 = (Object)new_AST_InstVariable(2, L"children");((Type_Array)objectlayout10108)->values[2] = instancevariable16434;class6753 = (Object)new_Class_withMeta((Object)class6737, objectlayout10108, objectlayout10107);((Type_Class)class6753)->name = (Type_Symbol)symbol44125;metaclass5954 = (Object)HEADER(class6753);objectlayout10109 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10109)->values[0] = instancevariable16359;((Type_Array)objectlayout10109)->values[1] = instancevariable16360;((Type_Array)objectlayout10109)->values[2] = instancevariable16361;((Type_Array)objectlayout10109)->values[3] = instancevariable16362;((Type_Array)objectlayout10109)->values[4] = instancevariable16363;symbol44176 = (Object)new_Type_Symbol_cached(L"Collection");class6754 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout10109);((Type_Class)class6754)->name = (Type_Symbol)symbol44176;metaclass5955 = (Object)HEADER(class6754);objectlayout10110 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10110)->values[0] = instancevariable16359;((Type_Array)objectlayout10110)->values[1] = instancevariable16360;((Type_Array)objectlayout10110)->values[2] = instancevariable16361;((Type_Array)objectlayout10110)->values[3] = instancevariable16362;((Type_Array)objectlayout10110)->values[4] = instancevariable16363;symbol44175 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");class6755 = (Object)new_Class_withMeta((Object)class6754, empty_object_layout, objectlayout10110);((Type_Class)class6755)->name = (Type_Symbol)symbol44175;metaclass5956 = (Object)HEADER(class6755);objectlayout10111 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10111)->values[0] = instancevariable16359;((Type_Array)objectlayout10111)->values[1] = instancevariable16360;((Type_Array)objectlayout10111)->values[2] = instancevariable16361;((Type_Array)objectlayout10111)->values[3] = instancevariable16362;((Type_Array)objectlayout10111)->values[4] = instancevariable16363;symbol44041 = (Object)new_Type_Symbol_cached(L"OrderedCollection");objectlayout10112 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);instancevariable16435 = (Object)new_AST_InstVariable(0, L"array");((Type_Array)objectlayout10112)->values[0] = instancevariable16435;instancevariable16436 = (Object)new_AST_InstVariable(1, L"firstIndex");((Type_Array)objectlayout10112)->values[1] = instancevariable16436;instancevariable16437 = (Object)new_AST_InstVariable(2, L"lastIndex");((Type_Array)objectlayout10112)->values[2] = instancevariable16437;class6756 = (Object)new_Class_withMeta((Object)class6755, objectlayout10112, objectlayout10111);((Type_Class)class6756)->name = (Type_Symbol)symbol44041;metaclass5957 = (Object)HEADER(class6756);objectlayout10113 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10113)->values[0] = instancevariable16359;((Type_Array)objectlayout10113)->values[1] = instancevariable16360;((Type_Array)objectlayout10113)->values[2] = instancevariable16361;((Type_Array)objectlayout10113)->values[3] = instancevariable16362;((Type_Array)objectlayout10113)->values[4] = instancevariable16363;symbol44174 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");class6757 = (Object)new_Class_withMeta((Object)class6755, empty_object_layout, objectlayout10113);((Type_Class)class6757)->name = (Type_Symbol)symbol44174;metaclass5958 = (Object)HEADER(class6757);objectlayout10114 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10114)->values[0] = instancevariable16359;((Type_Array)objectlayout10114)->values[1] = instancevariable16360;((Type_Array)objectlayout10114)->values[2] = instancevariable16361;((Type_Array)objectlayout10114)->values[3] = instancevariable16362;((Type_Array)objectlayout10114)->values[4] = instancevariable16363;symbol44367 = (Object)new_Type_Symbol_cached(L"Set");objectlayout10115 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);instancevariable16438 = (Object)new_AST_InstVariable(0, L"tally");((Type_Array)objectlayout10115)->values[0] = instancevariable16438;instancevariable16439 = (Object)new_AST_InstVariable(1, L"array");((Type_Array)objectlayout10115)->values[1] = instancevariable16439;class6758 = (Object)new_Class_withMeta((Object)class6754, objectlayout10115, objectlayout10114);((Type_Class)class6758)->name = (Type_Symbol)symbol44367;metaclass5959 = (Object)HEADER(class6758);objectlayout10116 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);((Type_Array)objectlayout10116)->values[0] = instancevariable16359;((Type_Array)objectlayout10116)->values[1] = instancevariable16360;((Type_Array)objectlayout10116)->values[2] = instancevariable16361;((Type_Array)objectlayout10116)->values[3] = instancevariable16362;((Type_Array)objectlayout10116)->values[4] = instancevariable16363;symbol44159 = (Object)new_Type_Symbol_cached(L"SmallDictionary");objectlayout10117 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);instancevariable16440 = (Object)new_AST_InstVariable(0, L"keys");((Type_Array)objectlayout10117)->values[0] = instancevariable16440;instancevariable16441 = (Object)new_AST_InstVariable(1, L"values");((Type_Array)objectlayout10117)->values[1] = instancevariable16441;instancevariable16442 = (Object)new_AST_InstVariable(2, L"size");((Type_Array)objectlayout10117)->values[2] = instancevariable16442;class6759 = (Object)new_Class_withMeta((Object)class6754, objectlayout10117, objectlayout10116);((Type_Class)class6759)->name = (Type_Symbol)symbol44159;metaclass5960 = (Object)HEADER(class6759);classreference13384 = (Object)new_Organization_ClassReference((Type_Class)class6700);classreference13385 = (Object)new_Organization_ClassReference((Type_Class)Type_Boolean_Class);classreference13386 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);// Object>>ifNil://ifNil: aBlocklocalvariable26900 = (Object)new_AST_Variable_named(L"aBlock");array23988 = (Object)new_Type_Array_with(1, (Object)localvariable26900);method40913 = (Object)new_AST_Method_with((Type_Array)array23988, (Type_Array)empty_Type_Array, 1, Self);string26399 = (Object)new_Type_String(L"ifNil:");string26400 = (Object)new_Type_String(L"ifNil: aBlock");smallint26239 = (Object)new_Type_SmallInt(-1);smallint26240 = (Object)new_Type_SmallInt(-1);info5170 = (Object)new_AST_Info((Type_String)string26400,(Type_String)string26399, (Type_SmallInt)smallint26239, (Type_SmallInt)smallint26240);((AST_Method)method40913)->info = (AST_Info)info5170;symbol44005 = (Object)new_Type_Symbol_cached(L"ifNil:");methodclosure40816 = (Object)new_Runtime_MethodClosure(method40913);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44005, (Runtime_MethodClosure)methodclosure40816);// Object>>respondsTo://respondsTo: selector// 	^ self class canUnderstand: selectorlocalvariable26901 = (Object)new_AST_Variable_named(L"selector");array23989 = (Object)new_Type_Array_with(1, (Object)localvariable26901);// classsend160210 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);string26401 = (Object)new_Type_String(L"respondsTo:");string26402 = (Object)new_Type_String(L"respondsTo: selector\n\t^ self class canUnderstand: selector");smallint26241 = (Object)new_Type_SmallInt(-1);smallint26242 = (Object)new_Type_SmallInt(-1);info5171 = (Object)new_AST_Info((Type_String)string26402,(Type_String)string26401, (Type_SmallInt)smallint26241, (Type_SmallInt)smallint26242);((AST_Send)send160210)->info = (AST_Info)info5171;symbol44093 = (Object)new_Type_Symbol_cached(L"canUnderstand:");// canUnderstand:send160211 = (Object)new_AST_Send((Object)send160210, (Object)symbol44093, 1, (Object)localvariable26901);((AST_Send)send160211)->info = (AST_Info)info5171;method40914 = (Object)new_AST_Method_with((Type_Array)array23989, (Type_Array)empty_Type_Array, 1, send160211);((AST_Method)method40914)->info = (AST_Info)info5171;symbol44009 = (Object)new_Type_Symbol_cached(L"respondsTo:");methodclosure40817 = (Object)new_Runtime_MethodClosure(method40914);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44009, (Runtime_MethodClosure)methodclosure40817);// Object>>~=//~= anObject// 	^ (self = anObject) not.localvariable26902 = (Object)new_AST_Variable_named(L"anObject");array23990 = (Object)new_Type_Array_with(1, (Object)localvariable26902);// =send160212 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable26902);string26403 = (Object)new_Type_String(L"~=");string26404 = (Object)new_Type_String(L"~= anObject\n\t^ (self = anObject) not.");smallint26243 = (Object)new_Type_SmallInt(-1);smallint26244 = (Object)new_Type_SmallInt(-1);info5172 = (Object)new_AST_Info((Type_String)string26404,(Type_String)string26403, (Type_SmallInt)smallint26243, (Type_SmallInt)smallint26244);((AST_Send)send160212)->info = (AST_Info)info5172;// notsend160213 = (Object)new_AST_Send((Object)send160212, (Object)SMB_not, 0);((AST_Send)send160213)->info = (AST_Info)info5172;method40915 = (Object)new_AST_Method_with((Type_Array)array23990, (Type_Array)empty_Type_Array, 1, send160213);((AST_Method)method40915)->info = (AST_Info)info5172;symbol44010 = (Object)new_Type_Symbol_cached(L"~=");methodclosure40818 = (Object)new_Runtime_MethodClosure(method40915);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44010, (Runtime_MethodClosure)methodclosure40818);// Object>>isReturnExpression//isReturnExpression// 	^ falsemethod40916 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);string26405 = (Object)new_Type_String(L"isReturnExpression");string26406 = (Object)new_Type_String(L"isReturnExpression\n\t^ false");smallint26245 = (Object)new_Type_SmallInt(-1);smallint26246 = (Object)new_Type_SmallInt(-1);info5173 = (Object)new_AST_Info((Type_String)string26406,(Type_String)string26405, (Type_SmallInt)smallint26245, (Type_SmallInt)smallint26246);((AST_Method)method40916)->info = (AST_Info)info5173;symbol44006 = (Object)new_Type_Symbol_cached(L"isReturnExpression");methodclosure40819 = (Object)new_Runtime_MethodClosure(method40916);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44006, (Runtime_MethodClosure)methodclosure40819);// Object>>isNil//isNil// 	^ falsemethod40917 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);string26407 = (Object)new_Type_String(L"isNil");string26408 = (Object)new_Type_String(L"isNil\n\t^ false");smallint26247 = (Object)new_Type_SmallInt(-1);smallint26248 = (Object)new_Type_SmallInt(-1);info5174 = (Object)new_AST_Info((Type_String)string26408,(Type_String)string26407, (Type_SmallInt)smallint26247, (Type_SmallInt)smallint26248);((AST_Method)method40917)->info = (AST_Info)info5174;methodclosure40820 = (Object)new_Runtime_MethodClosure(method40917);store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure40820);// Object>>objectName//objectName// 	^ self class pinocchioName// classsend160214 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);string26409 = (Object)new_Type_String(L"objectName");string26410 = (Object)new_Type_String(L"objectName\n\t^ self class pinocchioName");smallint26249 = (Object)new_Type_SmallInt(-1);smallint26250 = (Object)new_Type_SmallInt(-1);info5175 = (Object)new_AST_Info((Type_String)string26410,(Type_String)string26409, (Type_SmallInt)smallint26249, (Type_SmallInt)smallint26250);((AST_Send)send160214)->info = (AST_Info)info5175;symbol43998 = (Object)new_Type_Symbol_cached(L"pinocchioName");// pinocchioNamesend160215 = (Object)new_AST_Send((Object)send160214, (Object)symbol43998, 0);((AST_Send)send160215)->info = (AST_Info)info5175;method40918 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160215);((AST_Method)method40918)->info = (AST_Info)info5175;symbol44007 = (Object)new_Type_Symbol_cached(L"objectName");methodclosure40821 = (Object)new_Runtime_MethodClosure(method40918);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44007, (Runtime_MethodClosure)methodclosure40821);// Object>>initialize//initializemethod40919 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string26411 = (Object)new_Type_String(L"initialize");string26412 = (Object)new_Type_String(L"initialize");smallint26251 = (Object)new_Type_SmallInt(-1);smallint26252 = (Object)new_Type_SmallInt(-1);info5176 = (Object)new_AST_Info((Type_String)string26412,(Type_String)string26411, (Type_SmallInt)smallint26251, (Type_SmallInt)smallint26252);((AST_Method)method40919)->info = (AST_Info)info5176;symbol44004 = (Object)new_Type_Symbol_cached(L"initialize");methodclosure40822 = (Object)new_Runtime_MethodClosure(method40919);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40822);// Object>>yourself//yourself// 	^ selfmethod40920 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string26413 = (Object)new_Type_String(L"yourself");string26414 = (Object)new_Type_String(L"yourself\n\t^ self");smallint26253 = (Object)new_Type_SmallInt(-1);smallint26254 = (Object)new_Type_SmallInt(-1);info5177 = (Object)new_AST_Info((Type_String)string26414,(Type_String)string26413, (Type_SmallInt)smallint26253, (Type_SmallInt)smallint26254);((AST_Method)method40920)->info = (AST_Info)info5177;symbol44008 = (Object)new_Type_Symbol_cached(L"yourself");methodclosure40823 = (Object)new_Runtime_MethodClosure(method40920);store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol44008, (Runtime_MethodClosure)methodclosure40823);// Object>>hash//hash// 	^ self uid hashsymbol44164 = (Object)new_Type_Symbol_cached(L"uid");// uidsend160216 = (Object)new_AST_Send((Object)Self, (Object)symbol44164, 0);string26415 = (Object)new_Type_String(L"hash");string26416 = (Object)new_Type_String(L"hash\n\t^ self uid hash");smallint26255 = (Object)new_Type_SmallInt(-1);smallint26256 = (Object)new_Type_SmallInt(-1);info5178 = (Object)new_AST_Info((Type_String)string26416,(Type_String)string26415, (Type_SmallInt)smallint26255, (Type_SmallInt)smallint26256);((AST_Send)send160216)->info = (AST_Info)info5178;// hashsend160217 = (Object)new_AST_Send((Object)send160216, (Object)SMB_hash, 0);((AST_Send)send160217)->info = (AST_Info)info5178;method40921 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160217);((AST_Method)method40921)->info = (AST_Info)info5178;methodclosure40824 = (Object)new_Runtime_MethodClosure(method40921);store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure40824);// a PInternalMetaclass P#Object>>pClassInstVarNames//pClassInstVarNames// 	^ PClass pClassInstVarNamesclassreference13387 = (Object)new_Organization_ClassReference((Type_Class)Class);// Class>>printOn://printOn: aStream// 	super printOn: aStream.// 	aStream nextPutAll: ' '.// 	self name printOn: aStream.localvariable26903 = (Object)new_AST_Variable_named(L"aStream");array23991 = (Object)new_Type_Array_with(1, (Object)localvariable26903);symbol44111 = (Object)new_Type_Symbol_cached(L"printOn:");super2454 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable26903);symbol44382 = (Object)new_Type_Symbol_cached(L"nextPutAll:");string26417 = (Object)new_Type_String(L" ");constant34557 = (Object)new_AST_Constant((Object)string26417);// nextPutAll:send160218 = (Object)new_AST_Send((Object)localvariable26903, (Object)symbol44382, 1, (Object)constant34557);string26418 = (Object)new_Type_String(L"printOn:");string26419 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \' \'.\n\tself name printOn: aStream.");smallint26257 = (Object)new_Type_SmallInt(-1);smallint26258 = (Object)new_Type_SmallInt(-1);info5179 = (Object)new_AST_Info((Type_String)string26419,(Type_String)string26418, (Type_SmallInt)smallint26257, (Type_SmallInt)smallint26258);((AST_Send)send160218)->info = (AST_Info)info5179;// namesend160219 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160219)->info = (AST_Info)info5179;// printOn:send160220 = (Object)new_AST_Send((Object)send160219, (Object)symbol44111, 1, (Object)localvariable26903);((AST_Send)send160220)->info = (AST_Info)info5179;method40922 = (Object)new_AST_Method_with((Type_Array)array23991, (Type_Array)empty_Type_Array, 4, super2454, send160218, send160220, Self);((AST_Method)method40922)->info = (AST_Info)info5179;methodclosure40825 = (Object)new_Runtime_MethodClosure(method40922);store_method((Type_Class)Class, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40825);// Class>>package//package// 	^ packageinstancevariable16443 = (Object)new_AST_InstVariable(4, L"package");method40923 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16443);string26420 = (Object)new_Type_String(L"package");string26421 = (Object)new_Type_String(L"package\n\t^ package");smallint26259 = (Object)new_Type_SmallInt(-1);smallint26260 = (Object)new_Type_SmallInt(-1);info5180 = (Object)new_AST_Info((Type_String)string26421,(Type_String)string26420, (Type_SmallInt)smallint26259, (Type_SmallInt)smallint26260);((AST_Method)method40923)->info = (AST_Info)info5180;symbol44112 = (Object)new_Type_Symbol_cached(L"package");methodclosure40826 = (Object)new_Runtime_MethodClosure(method40923);store_method((Type_Class)Class, (Type_Symbol)symbol44112, (Runtime_MethodClosure)methodclosure40826);// Class>>name//name // 	^ nameinstancevariable16444 = (Object)new_AST_InstVariable(3, L"name");method40924 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16444);string26422 = (Object)new_Type_String(L"name");string26423 = (Object)new_Type_String(L"name \n\t^ name");smallint26261 = (Object)new_Type_SmallInt(-1);smallint26262 = (Object)new_Type_SmallInt(-1);info5181 = (Object)new_AST_Info((Type_String)string26423,(Type_String)string26422, (Type_SmallInt)smallint26261, (Type_SmallInt)smallint26262);((AST_Method)method40924)->info = (AST_Info)info5181;methodclosure40827 = (Object)new_Runtime_MethodClosure(method40924);store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure40827);symbol44001 = (Object)new_Type_Symbol_cached(L"pClassInstVarNames");// pClassInstVarNamessend160221 = (Object)new_AST_Send((Object)classreference13387, (Object)symbol44001, 0);string26424 = (Object)new_Type_String(L"pClassInstVarNames");string26425 = (Object)new_Type_String(L"pClassInstVarNames\n\t^ PClass pClassInstVarNames");smallint26263 = (Object)new_Type_SmallInt(-1);smallint26264 = (Object)new_Type_SmallInt(-1);info5182 = (Object)new_AST_Info((Type_String)string26425,(Type_String)string26424, (Type_SmallInt)smallint26263, (Type_SmallInt)smallint26264);((AST_Send)send160221)->info = (AST_Info)info5182;method40925 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160221);((AST_Method)method40925)->info = (AST_Info)info5182;methodclosure40828 = (Object)new_Runtime_MethodClosure(method40925);store_method((Type_Class)internalmetaclass8, (Type_Symbol)symbol44001, (Runtime_MethodClosure)methodclosure40828);// a PInternalMetaclass P#Object>>basicPTypeName://basicPTypeName: aString// 	^ aString, // 		'_', // 		(self name // 			copyFrom: ('p' size + 1)// 			to: self name size) capitalizedlocalvariable26904 = (Object)new_AST_Variable_named(L"aString");array23992 = (Object)new_Type_Array_with(1, (Object)localvariable26904);string26426 = (Object)new_Type_String(L"_");constant34558 = (Object)new_AST_Constant((Object)string26426);// ,send160222 = (Object)new_AST_Send((Object)localvariable26904, (Object)SMB__concat, 1, (Object)constant34558);string26427 = (Object)new_Type_String(L"basicPTypeName:");string26428 = (Object)new_Type_String(L"basicPTypeName: aString\n\t^ aString, \n\t\t\'_\', \n\t\t(self name \n\t\t\tcopyFrom: (\'p\' size + 1)\n\t\t\tto: self name size) capitalized");smallint26265 = (Object)new_Type_SmallInt(-1);smallint26266 = (Object)new_Type_SmallInt(-1);info5183 = (Object)new_AST_Info((Type_String)string26428,(Type_String)string26427, (Type_SmallInt)smallint26265, (Type_SmallInt)smallint26266);((AST_Send)send160222)->info = (AST_Info)info5183;// namesend160223 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160223)->info = (AST_Info)info5183;symbol44383 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");string26429 = (Object)new_Type_String(L"p");constant34559 = (Object)new_AST_Constant((Object)string26429);// sizesend160224 = (Object)new_AST_Send((Object)constant34559, (Object)SMB_size, 0);((AST_Send)send160224)->info = (AST_Info)info5183;smallint26267 = (Object)new_Type_SmallInt(1);constant34560 = (Object)new_AST_Constant((Object)smallint26267);// +send160225 = (Object)new_AST_Send((Object)send160224, (Object)SMB__plus, 1, (Object)constant34560);((AST_Send)send160225)->info = (AST_Info)info5183;// namesend160226 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160226)->info = (AST_Info)info5183;// sizesend160227 = (Object)new_AST_Send((Object)send160226, (Object)SMB_size, 0);((AST_Send)send160227)->info = (AST_Info)info5183;// copyFrom:to:send160228 = (Object)new_AST_Send((Object)send160223, (Object)symbol44383, 2, (Object)send160225, (Object)send160227);((AST_Send)send160228)->info = (AST_Info)info5183;symbol44132 = (Object)new_Type_Symbol_cached(L"capitalized");// capitalizedsend160229 = (Object)new_AST_Send((Object)send160228, (Object)symbol44132, 0);((AST_Send)send160229)->info = (AST_Info)info5183;// ,send160230 = (Object)new_AST_Send((Object)send160222, (Object)SMB__concat, 1, (Object)send160229);((AST_Send)send160230)->info = (AST_Info)info5183;method40926 = (Object)new_AST_Method_with((Type_Array)array23992, (Type_Array)empty_Type_Array, 1, send160230);((AST_Method)method40926)->info = (AST_Info)info5183;symbol43997 = (Object)new_Type_Symbol_cached(L"basicPTypeName:");methodclosure40829 = (Object)new_Runtime_MethodClosure(method40926);store_method((Type_Class)internalmetaclass8, (Type_Symbol)symbol43997, (Runtime_MethodClosure)methodclosure40829);// a PInternalMetaclass P#Object>>pTypeName//pTypeName// 	^ self basicPTypeName: 'Type'.string26430 = (Object)new_Type_String(L"Type");constant34561 = (Object)new_AST_Constant((Object)string26430);// basicPTypeName:send160231 = (Object)new_AST_Send((Object)Self, (Object)symbol43997, 1, (Object)constant34561);string26431 = (Object)new_Type_String(L"pTypeName");string26432 = (Object)new_Type_String(L"pTypeName\n\t^ self basicPTypeName: \'Type\'.");smallint26268 = (Object)new_Type_SmallInt(-1);smallint26269 = (Object)new_Type_SmallInt(-1);info5184 = (Object)new_AST_Info((Type_String)string26432,(Type_String)string26431, (Type_SmallInt)smallint26268, (Type_SmallInt)smallint26269);((AST_Send)send160231)->info = (AST_Info)info5184;method40927 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160231);((AST_Method)method40927)->info = (AST_Info)info5184;symbol44003 = (Object)new_Type_Symbol_cached(L"pTypeName");methodclosure40830 = (Object)new_Runtime_MethodClosure(method40927);store_method((Type_Class)internalmetaclass8, (Type_Symbol)symbol44003, (Runtime_MethodClosure)methodclosure40830);// a PInternalMetaclass P#Object>>isPinocchioInternalClass//isPinocchioInternalClass// 	^ truemethod40928 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);string26433 = (Object)new_Type_String(L"isPinocchioInternalClass");string26434 = (Object)new_Type_String(L"isPinocchioInternalClass\n\t^ true");smallint26270 = (Object)new_Type_SmallInt(-1);smallint26271 = (Object)new_Type_SmallInt(-1);info5185 = (Object)new_AST_Info((Type_String)string26434,(Type_String)string26433, (Type_SmallInt)smallint26270, (Type_SmallInt)smallint26271);((AST_Method)method40928)->info = (AST_Info)info5185;symbol44002 = (Object)new_Type_Symbol_cached(L"isPinocchioInternalClass");methodclosure40831 = (Object)new_Runtime_MethodClosure(method40928);store_method((Type_Class)internalmetaclass8, (Type_Symbol)symbol44002, (Runtime_MethodClosure)methodclosure40831);// a PInternalMetaclass P#Object>>pClassName//pClassName// 	^ self pTypeName, '_Class'.// pTypeNamesend160232 = (Object)new_AST_Send((Object)Self, (Object)symbol44003, 0);string26435 = (Object)new_Type_String(L"pClassName");string26436 = (Object)new_Type_String(L"pClassName\n\t^ self pTypeName, \'_Class\'.");smallint26272 = (Object)new_Type_SmallInt(-1);smallint26273 = (Object)new_Type_SmallInt(-1);info5186 = (Object)new_AST_Info((Type_String)string26436,(Type_String)string26435, (Type_SmallInt)smallint26272, (Type_SmallInt)smallint26273);((AST_Send)send160232)->info = (AST_Info)info5186;string26437 = (Object)new_Type_String(L"_Class");constant34562 = (Object)new_AST_Constant((Object)string26437);// ,send160233 = (Object)new_AST_Send((Object)send160232, (Object)SMB__concat, 1, (Object)constant34562);((AST_Send)send160233)->info = (AST_Info)info5186;method40929 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160233);((AST_Method)method40929)->info = (AST_Info)info5186;symbol43996 = (Object)new_Type_Symbol_cached(L"pClassName");methodclosure40832 = (Object)new_Runtime_MethodClosure(method40929);store_method((Type_Class)internalmetaclass8, (Type_Symbol)symbol43996, (Runtime_MethodClosure)methodclosure40832);// a PInternalMetaclass P#Object>>pinocchioName//pinocchioName// 	^ (self name // 			copyFrom: ('p' size + 1)// 			to: self name size) capitalized asSymbol// namesend160234 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);string26438 = (Object)new_Type_String(L"pinocchioName");string26439 = (Object)new_Type_String(L"pinocchioName\n\t^ (self name \n\t\t\tcopyFrom: (\'p\' size + 1)\n\t\t\tto: self name size) capitalized asSymbol");smallint26274 = (Object)new_Type_SmallInt(-1);smallint26275 = (Object)new_Type_SmallInt(-1);info5187 = (Object)new_AST_Info((Type_String)string26439,(Type_String)string26438, (Type_SmallInt)smallint26274, (Type_SmallInt)smallint26275);((AST_Send)send160234)->info = (AST_Info)info5187;string26440 = (Object)new_Type_String(L"p");constant34563 = (Object)new_AST_Constant((Object)string26440);// sizesend160235 = (Object)new_AST_Send((Object)constant34563, (Object)SMB_size, 0);((AST_Send)send160235)->info = (AST_Info)info5187;smallint26276 = (Object)new_Type_SmallInt(1);constant34564 = (Object)new_AST_Constant((Object)smallint26276);// +send160236 = (Object)new_AST_Send((Object)send160235, (Object)SMB__plus, 1, (Object)constant34564);((AST_Send)send160236)->info = (AST_Info)info5187;// namesend160237 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160237)->info = (AST_Info)info5187;// sizesend160238 = (Object)new_AST_Send((Object)send160237, (Object)SMB_size, 0);((AST_Send)send160238)->info = (AST_Info)info5187;// copyFrom:to:send160239 = (Object)new_AST_Send((Object)send160234, (Object)symbol44383, 2, (Object)send160236, (Object)send160238);((AST_Send)send160239)->info = (AST_Info)info5187;// capitalizedsend160240 = (Object)new_AST_Send((Object)send160239, (Object)symbol44132, 0);((AST_Send)send160240)->info = (AST_Info)info5187;// asSymbolsend160241 = (Object)new_AST_Send((Object)send160240, (Object)SMB_asSymbol, 0);((AST_Send)send160241)->info = (AST_Info)info5187;method40930 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160241);((AST_Method)method40930)->info = (AST_Info)info5187;methodclosure40833 = (Object)new_Runtime_MethodClosure(method40930);store_method((Type_Class)internalmetaclass8, (Type_Symbol)symbol43998, (Runtime_MethodClosure)methodclosure40833);classreference13388 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);// Metaclass>>printOn://printOn: aStream// 	super printOn: aStream.// 	self pclass name printOn: aStream.localvariable26905 = (Object)new_AST_Variable_named(L"aStream");array23993 = (Object)new_Type_Array_with(1, (Object)localvariable26905);super2455 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable26905);symbol44384 = (Object)new_Type_Symbol_cached(L"pclass");// pclasssend160242 = (Object)new_AST_Send((Object)Self, (Object)symbol44384, 0);string26441 = (Object)new_Type_String(L"printOn:");string26442 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\tself pclass name printOn: aStream.");smallint26277 = (Object)new_Type_SmallInt(-1);smallint26278 = (Object)new_Type_SmallInt(-1);info5188 = (Object)new_AST_Info((Type_String)string26442,(Type_String)string26441, (Type_SmallInt)smallint26277, (Type_SmallInt)smallint26278);((AST_Send)send160242)->info = (AST_Info)info5188;// namesend160243 = (Object)new_AST_Send((Object)send160242, (Object)SMB_name, 0);((AST_Send)send160243)->info = (AST_Info)info5188;// printOn:send160244 = (Object)new_AST_Send((Object)send160243, (Object)symbol44111, 1, (Object)localvariable26905);((AST_Send)send160244)->info = (AST_Info)info5188;method40931 = (Object)new_AST_Method_with((Type_Array)array23993, (Type_Array)empty_Type_Array, 3, super2455, send160244, Self);((AST_Method)method40931)->info = (AST_Info)info5188;methodclosure40834 = (Object)new_Runtime_MethodClosure(method40931);store_method((Type_Class)Metaclass, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40834);// a PInternalMetaclass P#Metaclass>>isPinocchioInternalClass//isPinocchioInternalClass// 	^ truemethod40932 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);string26443 = (Object)new_Type_String(L"isPinocchioInternalClass");string26444 = (Object)new_Type_String(L"isPinocchioInternalClass\n\t^ true");smallint26279 = (Object)new_Type_SmallInt(-1);smallint26280 = (Object)new_Type_SmallInt(-1);info5189 = (Object)new_AST_Info((Type_String)string26444,(Type_String)string26443, (Type_SmallInt)smallint26279, (Type_SmallInt)smallint26280);((AST_Method)method40932)->info = (AST_Info)info5189;methodclosure40835 = (Object)new_Runtime_MethodClosure(method40932);store_method((Type_Class)internalmetaclass9, (Type_Symbol)symbol44002, (Runtime_MethodClosure)methodclosure40835);// a PInternalMetaclass P#Metaclass>>pMethods//pMethods// 	^ #all.symbol44385 = (Object)new_Type_Symbol_cached(L"all");constant34565 = (Object)new_AST_Constant((Object)symbol44385);method40933 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant34565);string26445 = (Object)new_Type_String(L"pMethods");string26446 = (Object)new_Type_String(L"pMethods\n\t^ #all.");smallint26281 = (Object)new_Type_SmallInt(-1);smallint26282 = (Object)new_Type_SmallInt(-1);info5190 = (Object)new_AST_Info((Type_String)string26446,(Type_String)string26445, (Type_SmallInt)smallint26281, (Type_SmallInt)smallint26282);((AST_Method)method40933)->info = (AST_Info)info5190;symbol44109 = (Object)new_Type_Symbol_cached(L"pMethods");methodclosure40836 = (Object)new_Runtime_MethodClosure(method40933);store_method((Type_Class)internalmetaclass9, (Type_Symbol)symbol44109, (Runtime_MethodClosure)methodclosure40836);// a PInternalMetaclass P#Metaclass>>newWithPClass://newWithPClass: aPInternalClass// 	^ self new  // 		pclass: aPInternalClass.localvariable26906 = (Object)new_AST_Variable_named(L"aPInternalClass");array23994 = (Object)new_Type_Array_with(1, (Object)localvariable26906);symbol44095 = (Object)new_Type_Symbol_cached(L"new");// newsend160245 = (Object)new_AST_Send((Object)Self, (Object)symbol44095, 0);string26447 = (Object)new_Type_String(L"newWithPClass:");string26448 = (Object)new_Type_String(L"newWithPClass: aPInternalClass\n\t^ self new  \n\t\tpclass: aPInternalClass.");smallint26283 = (Object)new_Type_SmallInt(-1);smallint26284 = (Object)new_Type_SmallInt(-1);info5191 = (Object)new_AST_Info((Type_String)string26448,(Type_String)string26447, (Type_SmallInt)smallint26283, (Type_SmallInt)smallint26284);((AST_Send)send160245)->info = (AST_Info)info5191;symbol44386 = (Object)new_Type_Symbol_cached(L"pclass:");// pclass:send160246 = (Object)new_AST_Send((Object)send160245, (Object)symbol44386, 1, (Object)localvariable26906);((AST_Send)send160246)->info = (AST_Info)info5191;method40934 = (Object)new_AST_Method_with((Type_Array)array23994, (Type_Array)empty_Type_Array, 1, send160246);((AST_Method)method40934)->info = (AST_Info)info5191;symbol44110 = (Object)new_Type_Symbol_cached(L"newWithPClass:");methodclosure40837 = (Object)new_Runtime_MethodClosure(method40934);store_method((Type_Class)internalmetaclass9, (Type_Symbol)symbol44110, (Runtime_MethodClosure)methodclosure40837);// a PInternalMetaclass P#Metaclass>>pInstVarNames//pInstVarNames // 	^ OrderedCollection new.classreference13389 = (Object)new_Organization_ClassReference((Type_Class)class6756);// OrderedCollection>>reset//reset// 	firstIndex := array size // 3 max: 1.// 	lastIndex := firstIndex - 1// sizesend160247 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_size, 0);string26449 = (Object)new_Type_String(L"reset");string26450 = (Object)new_Type_String(L"reset\n\tfirstIndex := array size // 3 max: 1.\n\tlastIndex := firstIndex - 1");smallint26285 = (Object)new_Type_SmallInt(-1);smallint26286 = (Object)new_Type_SmallInt(-1);info5192 = (Object)new_AST_Info((Type_String)string26450,(Type_String)string26449, (Type_SmallInt)smallint26285, (Type_SmallInt)smallint26286);((AST_Send)send160247)->info = (AST_Info)info5192;symbol44387 = (Object)new_Type_Symbol_cached(L"//");smallint26287 = (Object)new_Type_SmallInt(3);constant34566 = (Object)new_AST_Constant((Object)smallint26287);// //send160248 = (Object)new_AST_Send((Object)send160247, (Object)symbol44387, 1, (Object)constant34566);((AST_Send)send160248)->info = (AST_Info)info5192;symbol44137 = (Object)new_Type_Symbol_cached(L"max:");smallint26288 = (Object)new_Type_SmallInt(1);constant34567 = (Object)new_AST_Constant((Object)smallint26288);// max:send160249 = (Object)new_AST_Send((Object)send160248, (Object)symbol44137, 1, (Object)constant34567);((AST_Send)send160249)->info = (AST_Info)info5192;assign20114 = (Object)new_AST_Assign((Object)instancevariable16436, (Object)send160249);smallint26289 = (Object)new_Type_SmallInt(1);constant34568 = (Object)new_AST_Constant((Object)smallint26289);// -send160250 = (Object)new_AST_Send((Object)instancevariable16436, (Object)SMB__minus, 1, (Object)constant34568);((AST_Send)send160250)->info = (AST_Info)info5192;assign20115 = (Object)new_AST_Assign((Object)instancevariable16437, (Object)send160250);method40935 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, assign20114, assign20115, Self);((AST_Method)method40935)->info = (AST_Info)info5192;symbol44241 = (Object)new_Type_Symbol_cached(L"reset");methodclosure40838 = (Object)new_Runtime_MethodClosure(method40935);store_method((Type_Class)class6756, (Type_Symbol)symbol44241, (Runtime_MethodClosure)methodclosure40838);// OrderedCollection>>growSize//growSize// 	^ array size max: 2// sizesend160251 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_size, 0);string26451 = (Object)new_Type_String(L"growSize");string26452 = (Object)new_Type_String(L"growSize\n\t^ array size max: 2");smallint26290 = (Object)new_Type_SmallInt(-1);smallint26291 = (Object)new_Type_SmallInt(-1);info5193 = (Object)new_AST_Info((Type_String)string26452,(Type_String)string26451, (Type_SmallInt)smallint26290, (Type_SmallInt)smallint26291);((AST_Send)send160251)->info = (AST_Info)info5193;smallint26292 = (Object)new_Type_SmallInt(2);constant34569 = (Object)new_AST_Constant((Object)smallint26292);// max:send160252 = (Object)new_AST_Send((Object)send160251, (Object)symbol44137, 1, (Object)constant34569);((AST_Send)send160252)->info = (AST_Info)info5193;method40936 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160252);((AST_Method)method40936)->info = (AST_Info)info5193;symbol44239 = (Object)new_Type_Symbol_cached(L"growSize");methodclosure40839 = (Object)new_Runtime_MethodClosure(method40936);store_method((Type_Class)class6756, (Type_Symbol)symbol44239, (Runtime_MethodClosure)methodclosure40839);// OrderedCollection>>makeRoomAtLast//makeRoomAtLast// 	| newLast delta |// 	newLast := self size.// 	array size - self size = 0 ifTrue: [self grow].// 	(delta := firstIndex - 1) = 0 ifTrue: [^ self].// 	"we might be here under false premises or grow did the job for us"// 	1 to: newLast do:// 		[:index |// 		array at: index put: (array at: index + delta).// 		array at: index + delta put: nil].// 	firstIndex := 1.// 	lastIndex := newLastlocalvariable26907 = (Object)new_AST_Variable_named(L"newLast");localvariable26908 = (Object)new_AST_Variable_named(L"delta");array23995 = (Object)new_Type_Array_with(2, (Object)localvariable26907, (Object)localvariable26908);variable1849 = (Object)new_AST_Variable_named(L"return");array23996 = (Object)new_Type_Array_with(1, (Object)variable1849);// sizesend160253 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26453 = (Object)new_Type_String(L"makeRoomAtLast");string26454 = (Object)new_Type_String(L"makeRoomAtLast\n\t| newLast delta |\n\tnewLast := self size.\n\tarray size - self size = 0 ifTrue: [self grow].\n\t(delta := firstIndex - 1) = 0 ifTrue: [^ self].\n\t\"we might be here under false premises or grow did the job for us\"\n\t1 to: newLast do:\n\t\t[:index |\n\t\tarray at: index put: (array at: index + delta).\n\t\tarray at: index + delta put: nil].\n\tfirstIndex := 1.\n\tlastIndex := newLast");smallint26293 = (Object)new_Type_SmallInt(-1);smallint26294 = (Object)new_Type_SmallInt(-1);info5194 = (Object)new_AST_Info((Type_String)string26454,(Type_String)string26453, (Type_SmallInt)smallint26293, (Type_SmallInt)smallint26294);((AST_Send)send160253)->info = (AST_Info)info5194;assign20116 = (Object)new_AST_Assign((Object)localvariable26907, (Object)send160253);// sizesend160254 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_size, 0);((AST_Send)send160254)->info = (AST_Info)info5194;// sizesend160255 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);((AST_Send)send160255)->info = (AST_Info)info5194;// -send160256 = (Object)new_AST_Send((Object)send160254, (Object)SMB__minus, 1, (Object)send160255);((AST_Send)send160256)->info = (AST_Info)info5194;smallint26295 = (Object)new_Type_SmallInt(0);constant34570 = (Object)new_AST_Constant((Object)smallint26295);// =send160257 = (Object)new_AST_Send((Object)send160256, (Object)SMB__equal, 1, (Object)constant34570);((AST_Send)send160257)->info = (AST_Info)info5194;symbol44238 = (Object)new_Type_Symbol_cached(L"grow");// growsend160258 = (Object)new_AST_Send((Object)Self, (Object)symbol44238, 0);((AST_Send)send160258)->info = (AST_Info)info5194;block11670 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160258);// ifTrue:send160259 = (Object)new_AST_Send((Object)send160257, (Object)SMB_ifTrue_, 1, (Object)block11670);((AST_Send)send160259)->info = (AST_Info)info5194;smallint26296 = (Object)new_Type_SmallInt(1);constant34571 = (Object)new_AST_Constant((Object)smallint26296);// -send160260 = (Object)new_AST_Send((Object)instancevariable16436, (Object)SMB__minus, 1, (Object)constant34571);((AST_Send)send160260)->info = (AST_Info)info5194;assign20117 = (Object)new_AST_Assign((Object)localvariable26908, (Object)send160260);smallint26297 = (Object)new_Type_SmallInt(0);constant34572 = (Object)new_AST_Constant((Object)smallint26297);// =send160261 = (Object)new_AST_Send((Object)assign20117, (Object)SMB__equal, 1, (Object)constant34572);((AST_Send)send160261)->info = (AST_Info)info5194;// escape:send160262 = (Object)new_AST_Send((Object)variable1849, (Object)SMB_escape_, 1, (Object)Self);((AST_Send)send160262)->info = (AST_Info)info5194;block11671 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160262);// ifTrue:send160263 = (Object)new_AST_Send((Object)send160261, (Object)SMB_ifTrue_, 1, (Object)block11671);((AST_Send)send160263)->info = (AST_Info)info5194;smallint26298 = (Object)new_Type_SmallInt(1);constant34573 = (Object)new_AST_Constant((Object)smallint26298);symbol44135 = (Object)new_Type_Symbol_cached(L"to:do:");localvariable26909 = (Object)new_AST_Variable_named(L"index");array23997 = (Object)new_Type_Array_with(1, (Object)localvariable26909);// +send160264 = (Object)new_AST_Send((Object)localvariable26909, (Object)SMB__plus, 1, (Object)localvariable26908);((AST_Send)send160264)->info = (AST_Info)info5194;// at:send160265 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_at_, 1, (Object)send160264);((AST_Send)send160265)->info = (AST_Info)info5194;// at:put:send160266 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_at_put_, 2, (Object)localvariable26909, (Object)send160265);((AST_Send)send160266)->info = (AST_Info)info5194;// +send160267 = (Object)new_AST_Send((Object)localvariable26909, (Object)SMB__plus, 1, (Object)localvariable26908);((AST_Send)send160267)->info = (AST_Info)info5194;// at:put:send160268 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_at_put_, 2, (Object)send160267, (Object)Nil_Const);((AST_Send)send160268)->info = (AST_Info)info5194;block11672 = (Object)new_AST_Block_with((Type_Array)array23997, (Type_Array)empty_Type_Array, 2, 2, send160266, send160268);// to:do:send160269 = (Object)new_AST_Send((Object)constant34573, (Object)symbol44135, 2, (Object)localvariable26907, (Object)block11672);((AST_Send)send160269)->info = (AST_Info)info5194;smallint26299 = (Object)new_Type_SmallInt(1);constant34574 = (Object)new_AST_Constant((Object)smallint26299);assign20118 = (Object)new_AST_Assign((Object)instancevariable16436, (Object)constant34574);assign20119 = (Object)new_AST_Assign((Object)instancevariable16437, (Object)localvariable26907);block11673 = (Object)new_AST_Block_with((Type_Array)array23996, (Type_Array)empty_Type_Array, 1, 7, assign20116, send160259, send160263, send160269, assign20118, assign20119, Self);// on:send160270 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11673);method40937 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array23995, 1, send160270);((AST_Method)method40937)->info = (AST_Info)info5194;symbol44237 = (Object)new_Type_Symbol_cached(L"makeRoomAtLast");methodclosure40840 = (Object)new_Runtime_MethodClosure(method40937);store_method((Type_Class)class6756, (Type_Symbol)symbol44237, (Runtime_MethodClosure)methodclosure40840);// OrderedCollection>>add://add: newObject// // 	^self addLast: newObjectlocalvariable26910 = (Object)new_AST_Variable_named(L"newObject");array23998 = (Object)new_Type_Array_with(1, (Object)localvariable26910);symbol44236 = (Object)new_Type_Symbol_cached(L"addLast:");// addLast:send160271 = (Object)new_AST_Send((Object)Self, (Object)symbol44236, 1, (Object)localvariable26910);string26455 = (Object)new_Type_String(L"add:");string26456 = (Object)new_Type_String(L"add: newObject\n\n\t^self addLast: newObject");smallint26300 = (Object)new_Type_SmallInt(-1);smallint26301 = (Object)new_Type_SmallInt(-1);info5195 = (Object)new_AST_Info((Type_String)string26456,(Type_String)string26455, (Type_SmallInt)smallint26300, (Type_SmallInt)smallint26301);((AST_Send)send160271)->info = (AST_Info)info5195;method40938 = (Object)new_AST_Method_with((Type_Array)array23998, (Type_Array)empty_Type_Array, 1, send160271);((AST_Method)method40938)->info = (AST_Info)info5195;symbol44183 = (Object)new_Type_Symbol_cached(L"add:");methodclosure40841 = (Object)new_Runtime_MethodClosure(method40938);store_method((Type_Class)class6756, (Type_Symbol)symbol44183, (Runtime_MethodClosure)methodclosure40841);// OrderedCollection>>size//size// 	"Answer how many elements the receiver contains."// // 	^ lastIndex - firstIndex + 1// -send160272 = (Object)new_AST_Send((Object)instancevariable16437, (Object)SMB__minus, 1, (Object)instancevariable16436);string26457 = (Object)new_Type_String(L"size");string26458 = (Object)new_Type_String(L"size\n\t\"Answer how many elements the receiver contains.\"\n\n\t^ lastIndex - firstIndex + 1");smallint26302 = (Object)new_Type_SmallInt(-1);smallint26303 = (Object)new_Type_SmallInt(-1);info5196 = (Object)new_AST_Info((Type_String)string26458,(Type_String)string26457, (Type_SmallInt)smallint26302, (Type_SmallInt)smallint26303);((AST_Send)send160272)->info = (AST_Info)info5196;smallint26304 = (Object)new_Type_SmallInt(1);constant34575 = (Object)new_AST_Constant((Object)smallint26304);// +send160273 = (Object)new_AST_Send((Object)send160272, (Object)SMB__plus, 1, (Object)constant34575);((AST_Send)send160273)->info = (AST_Info)info5196;method40939 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160273);((AST_Method)method40939)->info = (AST_Info)info5196;methodclosure40842 = (Object)new_Runtime_MethodClosure(method40939);store_method((Type_Class)class6756, (Type_Symbol)SMB_size, (Runtime_MethodClosure)methodclosure40842);// OrderedCollection>>setCollection://setCollection: anArray// 	array := anArray.// 	self resetlocalvariable26911 = (Object)new_AST_Variable_named(L"anArray");array23999 = (Object)new_Type_Array_with(1, (Object)localvariable26911);assign20120 = (Object)new_AST_Assign((Object)instancevariable16435, (Object)localvariable26911);// resetsend160274 = (Object)new_AST_Send((Object)Self, (Object)symbol44241, 0);string26459 = (Object)new_Type_String(L"setCollection:");string26460 = (Object)new_Type_String(L"setCollection: anArray\n\tarray := anArray.\n\tself reset");smallint26305 = (Object)new_Type_SmallInt(-1);smallint26306 = (Object)new_Type_SmallInt(-1);info5197 = (Object)new_AST_Info((Type_String)string26460,(Type_String)string26459, (Type_SmallInt)smallint26305, (Type_SmallInt)smallint26306);((AST_Send)send160274)->info = (AST_Info)info5197;method40940 = (Object)new_AST_Method_with((Type_Array)array23999, (Type_Array)empty_Type_Array, 3, assign20120, send160274, Self);((AST_Method)method40940)->info = (AST_Info)info5197;symbol44240 = (Object)new_Type_Symbol_cached(L"setCollection:");methodclosure40843 = (Object)new_Runtime_MethodClosure(method40940);store_method((Type_Class)class6756, (Type_Symbol)symbol44240, (Runtime_MethodClosure)methodclosure40843);// OrderedCollection>>grow//grow// 	"Become larger. Typically, a subclass has to override this if the subclass// 	adds instance variables."// 	| newArray |// 	newArray := Array new: self size + self growSize.// 	newArray replaceFrom: 1 to: array size with: array startingAt: 1.// 	array := newArraylocalvariable26912 = (Object)new_AST_Variable_named(L"newArray");array24000 = (Object)new_Type_Array_with(1, (Object)localvariable26912);classreference13390 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);// Array>>first//first// 	^ self at: 1.smallint26307 = (Object)new_Type_SmallInt(1);constant34576 = (Object)new_AST_Constant((Object)smallint26307);// at:send160275 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant34576);string26461 = (Object)new_Type_String(L"first");string26462 = (Object)new_Type_String(L"first\n\t^ self at: 1.");smallint26308 = (Object)new_Type_SmallInt(-1);smallint26309 = (Object)new_Type_SmallInt(-1);info5198 = (Object)new_AST_Info((Type_String)string26462,(Type_String)string26461, (Type_SmallInt)smallint26308, (Type_SmallInt)smallint26309);((AST_Send)send160275)->info = (AST_Info)info5198;method40941 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160275);((AST_Method)method40941)->info = (AST_Info)info5198;symbol44180 = (Object)new_Type_Symbol_cached(L"first");methodclosure40844 = (Object)new_Runtime_MethodClosure(method40941);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44180, (Runtime_MethodClosure)methodclosure40844);// Array>>inject:into://inject: thisValue into: binaryBlock // 	"Accumulate a running value associated with evaluating the argument, // 	binaryBlock, with the current value of the argument, thisValue, and the // 	receiver as block arguments. For instance, to sum the numeric elements // 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + // 	next]."// // 	| nextValue |// 	nextValue := thisValue.// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].// 	^nextValuelocalvariable26913 = (Object)new_AST_Variable_named(L"thisValue");localvariable26914 = (Object)new_AST_Variable_named(L"binaryBlock");array24001 = (Object)new_Type_Array_with(2, (Object)localvariable26913, (Object)localvariable26914);localvariable26915 = (Object)new_AST_Variable_named(L"nextValue");array24002 = (Object)new_Type_Array_with(1, (Object)localvariable26915);assign20121 = (Object)new_AST_Assign((Object)localvariable26915, (Object)localvariable26913);symbol44127 = (Object)new_Type_Symbol_cached(L"do:");localvariable26916 = (Object)new_AST_Variable_named(L"each");array24003 = (Object)new_Type_Array_with(1, (Object)localvariable26916);symbol44388 = (Object)new_Type_Symbol_cached(L"value:value:");// value:value:send160276 = (Object)new_AST_Send((Object)localvariable26914, (Object)symbol44388, 2, (Object)localvariable26915, (Object)localvariable26916);string26463 = (Object)new_Type_String(L"inject:into:");string26464 = (Object)new_Type_String(L"inject: thisValue into: binaryBlock \n\t\"Accumulate a running value associated with evaluating the argument, \n\tbinaryBlock, with the current value of the argument, thisValue, and the \n\treceiver as block arguments. For instance, to sum the numeric elements \n\tof a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + \n\tnext].\"\n\n\t| nextValue |\n\tnextValue := thisValue.\n\tself do: [:each | nextValue := binaryBlock value: nextValue value: each].\n\t^nextValue");smallint26310 = (Object)new_Type_SmallInt(-1);smallint26311 = (Object)new_Type_SmallInt(-1);info5199 = (Object)new_AST_Info((Type_String)string26464,(Type_String)string26463, (Type_SmallInt)smallint26310, (Type_SmallInt)smallint26311);((AST_Send)send160276)->info = (AST_Info)info5199;assign20122 = (Object)new_AST_Assign((Object)localvariable26915, (Object)send160276);block11674 = (Object)new_AST_Block_with((Type_Array)array24003, (Type_Array)empty_Type_Array, 1, 1, assign20122);// do:send160277 = (Object)new_AST_Send((Object)Self, (Object)symbol44127, 1, (Object)block11674);((AST_Send)send160277)->info = (AST_Info)info5199;method40942 = (Object)new_AST_Method_with((Type_Array)array24001, (Type_Array)array24002, 3, assign20121, send160277, localvariable26915);((AST_Method)method40942)->info = (AST_Info)info5199;symbol44184 = (Object)new_Type_Symbol_cached(L"inject:into:");methodclosure40845 = (Object)new_Runtime_MethodClosure(method40942);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44184, (Runtime_MethodClosure)methodclosure40845);// Array>>doWithIndex://doWithIndex: aBlockClosure // 	1 to: self size do:// 		[:index | aBlockClosure value: (self at: index) value: index]localvariable26917 = (Object)new_AST_Variable_named(L"aBlockClosure");array24004 = (Object)new_Type_Array_with(1, (Object)localvariable26917);smallint26312 = (Object)new_Type_SmallInt(1);constant34577 = (Object)new_AST_Constant((Object)smallint26312);// sizesend160278 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26465 = (Object)new_Type_String(L"doWithIndex:");string26466 = (Object)new_Type_String(L"doWithIndex: aBlockClosure \n\t1 to: self size do:\n\t\t[:index | aBlockClosure value: (self at: index) value: index]");smallint26313 = (Object)new_Type_SmallInt(-1);smallint26314 = (Object)new_Type_SmallInt(-1);info5200 = (Object)new_AST_Info((Type_String)string26466,(Type_String)string26465, (Type_SmallInt)smallint26313, (Type_SmallInt)smallint26314);((AST_Send)send160278)->info = (AST_Info)info5200;localvariable26918 = (Object)new_AST_Variable_named(L"index");array24005 = (Object)new_Type_Array_with(1, (Object)localvariable26918);// at:send160279 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26918);((AST_Send)send160279)->info = (AST_Info)info5200;// value:value:send160280 = (Object)new_AST_Send((Object)localvariable26917, (Object)symbol44388, 2, (Object)send160279, (Object)localvariable26918);((AST_Send)send160280)->info = (AST_Info)info5200;block11675 = (Object)new_AST_Block_with((Type_Array)array24005, (Type_Array)empty_Type_Array, 1, 1, send160280);// to:do:send160281 = (Object)new_AST_Send((Object)constant34577, (Object)symbol44135, 2, (Object)send160278, (Object)block11675);((AST_Send)send160281)->info = (AST_Info)info5200;method40943 = (Object)new_AST_Method_with((Type_Array)array24004, (Type_Array)empty_Type_Array, 2, send160281, Self);((AST_Method)method40943)->info = (AST_Info)info5200;symbol44181 = (Object)new_Type_Symbol_cached(L"doWithIndex:");methodclosure40846 = (Object)new_Runtime_MethodClosure(method40943);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44181, (Runtime_MethodClosure)methodclosure40846);// Array>>replaceFrom:to:with:startingAt://replaceFrom: start to: stop with: replacement startingAt: repStart // 	"This destructively replaces elements from start to stop in the receiver // 	starting at index, repStart, in the sequenceable collection, // 	replacementCollection. Answer the receiver. No range checks are // 	performed."// // 	| index repOff |// 	repOff := repStart - start.// 	index := start - 1.// 	[(index := index + 1) <= stop]// 		whileTrue: [self at: index put: (replacement at: repOff + index)]localvariable26919 = (Object)new_AST_Variable_named(L"start");localvariable26920 = (Object)new_AST_Variable_named(L"stop");localvariable26921 = (Object)new_AST_Variable_named(L"replacement");localvariable26922 = (Object)new_AST_Variable_named(L"repStart");array24006 = (Object)new_Type_Array_with(4, (Object)localvariable26919, (Object)localvariable26920, (Object)localvariable26921, (Object)localvariable26922);localvariable26923 = (Object)new_AST_Variable_named(L"index");localvariable26924 = (Object)new_AST_Variable_named(L"repOff");array24007 = (Object)new_Type_Array_with(2, (Object)localvariable26923, (Object)localvariable26924);// -send160282 = (Object)new_AST_Send((Object)localvariable26922, (Object)SMB__minus, 1, (Object)localvariable26919);string26467 = (Object)new_Type_String(L"replaceFrom:to:with:startingAt:");string26468 = (Object)new_Type_String(L"replaceFrom: start to: stop with: replacement startingAt: repStart \n\t\"This destructively replaces elements from start to stop in the receiver \n\tstarting at index, repStart, in the sequenceable collection, \n\treplacementCollection. Answer the receiver. No range checks are \n\tperformed.\"\n\n\t| index repOff |\n\trepOff := repStart - start.\n\tindex := start - 1.\n\t[(index := index + 1) <= stop]\n\t\twhileTrue: [self at: index put: (replacement at: repOff + index)]");smallint26315 = (Object)new_Type_SmallInt(-1);smallint26316 = (Object)new_Type_SmallInt(-1);info5201 = (Object)new_AST_Info((Type_String)string26468,(Type_String)string26467, (Type_SmallInt)smallint26315, (Type_SmallInt)smallint26316);((AST_Send)send160282)->info = (AST_Info)info5201;assign20123 = (Object)new_AST_Assign((Object)localvariable26924, (Object)send160282);smallint26317 = (Object)new_Type_SmallInt(1);constant34578 = (Object)new_AST_Constant((Object)smallint26317);// -send160283 = (Object)new_AST_Send((Object)localvariable26919, (Object)SMB__minus, 1, (Object)constant34578);((AST_Send)send160283)->info = (AST_Info)info5201;assign20124 = (Object)new_AST_Assign((Object)localvariable26923, (Object)send160283);smallint26318 = (Object)new_Type_SmallInt(1);constant34579 = (Object)new_AST_Constant((Object)smallint26318);// +send160284 = (Object)new_AST_Send((Object)localvariable26923, (Object)SMB__plus, 1, (Object)constant34579);((AST_Send)send160284)->info = (AST_Info)info5201;assign20125 = (Object)new_AST_Assign((Object)localvariable26923, (Object)send160284);symbol44136 = (Object)new_Type_Symbol_cached(L"<=");// <=send160285 = (Object)new_AST_Send((Object)assign20125, (Object)symbol44136, 1, (Object)localvariable26920);((AST_Send)send160285)->info = (AST_Info)info5201;block11676 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160285);// +send160286 = (Object)new_AST_Send((Object)localvariable26924, (Object)SMB__plus, 1, (Object)localvariable26923);((AST_Send)send160286)->info = (AST_Info)info5201;// at:send160287 = (Object)new_AST_Send((Object)localvariable26921, (Object)SMB_at_, 1, (Object)send160286);((AST_Send)send160287)->info = (AST_Info)info5201;// at:put:send160288 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable26923, (Object)send160287);((AST_Send)send160288)->info = (AST_Info)info5201;block11677 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160288);// whileTrue:send160289 = (Object)new_AST_Send((Object)block11676, (Object)SMB_whileTrue_, 1, (Object)block11677);((AST_Send)send160289)->info = (AST_Info)info5201;method40944 = (Object)new_AST_Method_with((Type_Array)array24006, (Type_Array)array24007, 4, assign20123, assign20124, send160289, Self);((AST_Method)method40944)->info = (AST_Info)info5201;symbol44185 = (Object)new_Type_Symbol_cached(L"replaceFrom:to:with:startingAt:");methodclosure40847 = (Object)new_Runtime_MethodClosure(method40944);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44185, (Runtime_MethodClosure)methodclosure40847);// Array>>=//= other// 	self == other ifTrue: [^ true].// 	self class = other class ifFalse: [ ^ false].// 	self size = other size ifFalse: [ ^ false ].// 	1 to: self size do: [ :index|// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].// 	].// 	^ true.localvariable26925 = (Object)new_AST_Variable_named(L"other");array24008 = (Object)new_Type_Array_with(1, (Object)localvariable26925);variable1850 = (Object)new_AST_Variable_named(L"return");array24009 = (Object)new_Type_Array_with(1, (Object)variable1850);// ==send160290 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable26925);string26469 = (Object)new_Type_String(L"=");string26470 = (Object)new_Type_String(L"= other\n\tself == other ifTrue: [^ true].\n\tself class = other class ifFalse: [ ^ false].\n\tself size = other size ifFalse: [ ^ false ].\n\t1 to: self size do: [ :index|\n\t \t(self at: index) = (other at: index) ifFalse: [ ^ false].\n\t].\n\t^ true.");smallint26319 = (Object)new_Type_SmallInt(-1);smallint26320 = (Object)new_Type_SmallInt(-1);info5202 = (Object)new_AST_Info((Type_String)string26470,(Type_String)string26469, (Type_SmallInt)smallint26319, (Type_SmallInt)smallint26320);((AST_Send)send160290)->info = (AST_Info)info5202;// escape:send160291 = (Object)new_AST_Send((Object)variable1850, (Object)SMB_escape_, 1, (Object)True_Const);((AST_Send)send160291)->info = (AST_Info)info5202;block11678 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160291);// ifTrue:send160292 = (Object)new_AST_Send((Object)send160290, (Object)SMB_ifTrue_, 1, (Object)block11678);((AST_Send)send160292)->info = (AST_Info)info5202;// classsend160293 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);((AST_Send)send160293)->info = (AST_Info)info5202;// classsend160294 = (Object)new_AST_Send((Object)localvariable26925, (Object)SMB_class, 0);((AST_Send)send160294)->info = (AST_Info)info5202;// =send160295 = (Object)new_AST_Send((Object)send160293, (Object)SMB__equal, 1, (Object)send160294);((AST_Send)send160295)->info = (AST_Info)info5202;// escape:send160296 = (Object)new_AST_Send((Object)variable1850, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160296)->info = (AST_Info)info5202;block11679 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160296);// ifFalse:send160297 = (Object)new_AST_Send((Object)send160295, (Object)SMB_ifFalse_, 1, (Object)block11679);((AST_Send)send160297)->info = (AST_Info)info5202;// sizesend160298 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);((AST_Send)send160298)->info = (AST_Info)info5202;// sizesend160299 = (Object)new_AST_Send((Object)localvariable26925, (Object)SMB_size, 0);((AST_Send)send160299)->info = (AST_Info)info5202;// =send160300 = (Object)new_AST_Send((Object)send160298, (Object)SMB__equal, 1, (Object)send160299);((AST_Send)send160300)->info = (AST_Info)info5202;// escape:send160301 = (Object)new_AST_Send((Object)variable1850, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160301)->info = (AST_Info)info5202;block11680 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160301);// ifFalse:send160302 = (Object)new_AST_Send((Object)send160300, (Object)SMB_ifFalse_, 1, (Object)block11680);((AST_Send)send160302)->info = (AST_Info)info5202;smallint26321 = (Object)new_Type_SmallInt(1);constant34580 = (Object)new_AST_Constant((Object)smallint26321);// sizesend160303 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);((AST_Send)send160303)->info = (AST_Info)info5202;localvariable26926 = (Object)new_AST_Variable_named(L"index");array24010 = (Object)new_Type_Array_with(1, (Object)localvariable26926);// at:send160304 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26926);((AST_Send)send160304)->info = (AST_Info)info5202;// at:send160305 = (Object)new_AST_Send((Object)localvariable26925, (Object)SMB_at_, 1, (Object)localvariable26926);((AST_Send)send160305)->info = (AST_Info)info5202;// =send160306 = (Object)new_AST_Send((Object)send160304, (Object)SMB__equal, 1, (Object)send160305);((AST_Send)send160306)->info = (AST_Info)info5202;// escape:send160307 = (Object)new_AST_Send((Object)variable1850, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160307)->info = (AST_Info)info5202;block11681 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160307);// ifFalse:send160308 = (Object)new_AST_Send((Object)send160306, (Object)SMB_ifFalse_, 1, (Object)block11681);((AST_Send)send160308)->info = (AST_Info)info5202;block11682 = (Object)new_AST_Block_with((Type_Array)array24010, (Type_Array)empty_Type_Array, 2, 1, send160308);// to:do:send160309 = (Object)new_AST_Send((Object)constant34580, (Object)symbol44135, 2, (Object)send160303, (Object)block11682);((AST_Send)send160309)->info = (AST_Info)info5202;block11683 = (Object)new_AST_Block_with((Type_Array)array24009, (Type_Array)empty_Type_Array, 1, 5, send160292, send160297, send160302, send160309, True_Const);// on:send160310 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11683);method40945 = (Object)new_AST_Method_with((Type_Array)array24008, (Type_Array)empty_Type_Array, 1, send160310);((AST_Method)method40945)->info = (AST_Info)info5202;methodclosure40848 = (Object)new_Runtime_MethodClosure(method40945);store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure40848);// Array>>first://first: aValue// 	^ self at: 1 put: aValue.localvariable26927 = (Object)new_AST_Variable_named(L"aValue");array24011 = (Object)new_Type_Array_with(1, (Object)localvariable26927);smallint26322 = (Object)new_Type_SmallInt(1);constant34581 = (Object)new_AST_Constant((Object)smallint26322);// at:put:send160311 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant34581, (Object)localvariable26927);string26471 = (Object)new_Type_String(L"first:");string26472 = (Object)new_Type_String(L"first: aValue\n\t^ self at: 1 put: aValue.");smallint26323 = (Object)new_Type_SmallInt(-1);smallint26324 = (Object)new_Type_SmallInt(-1);info5203 = (Object)new_AST_Info((Type_String)string26472,(Type_String)string26471, (Type_SmallInt)smallint26323, (Type_SmallInt)smallint26324);((AST_Send)send160311)->info = (AST_Info)info5203;method40946 = (Object)new_AST_Method_with((Type_Array)array24011, (Type_Array)empty_Type_Array, 1, send160311);((AST_Method)method40946)->info = (AST_Info)info5203;symbol44182 = (Object)new_Type_Symbol_cached(L"first:");methodclosure40849 = (Object)new_Runtime_MethodClosure(method40946);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44182, (Runtime_MethodClosure)methodclosure40849);// Array>>do://do: aBlockClosure // 	1 to: self size do: // 		[:index | aBlockClosure value: (self at: index)]localvariable26928 = (Object)new_AST_Variable_named(L"aBlockClosure");array24012 = (Object)new_Type_Array_with(1, (Object)localvariable26928);smallint26325 = (Object)new_Type_SmallInt(1);constant34582 = (Object)new_AST_Constant((Object)smallint26325);// sizesend160312 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26473 = (Object)new_Type_String(L"do:");string26474 = (Object)new_Type_String(L"do: aBlockClosure \n\t1 to: self size do: \n\t\t[:index | aBlockClosure value: (self at: index)]");smallint26326 = (Object)new_Type_SmallInt(-1);smallint26327 = (Object)new_Type_SmallInt(-1);info5204 = (Object)new_AST_Info((Type_String)string26474,(Type_String)string26473, (Type_SmallInt)smallint26326, (Type_SmallInt)smallint26327);((AST_Send)send160312)->info = (AST_Info)info5204;localvariable26929 = (Object)new_AST_Variable_named(L"index");array24013 = (Object)new_Type_Array_with(1, (Object)localvariable26929);// at:send160313 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26929);((AST_Send)send160313)->info = (AST_Info)info5204;// value:send160314 = (Object)new_AST_Send((Object)localvariable26928, (Object)SMB_value_, 1, (Object)send160313);((AST_Send)send160314)->info = (AST_Info)info5204;block11684 = (Object)new_AST_Block_with((Type_Array)array24013, (Type_Array)empty_Type_Array, 1, 1, send160314);// to:do:send160315 = (Object)new_AST_Send((Object)constant34582, (Object)symbol44135, 2, (Object)send160312, (Object)block11684);((AST_Send)send160315)->info = (AST_Info)info5204;method40947 = (Object)new_AST_Method_with((Type_Array)array24012, (Type_Array)empty_Type_Array, 2, send160315, Self);((AST_Method)method40947)->info = (AST_Info)info5204;methodclosure40850 = (Object)new_Runtime_MethodClosure(method40947);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44127, (Runtime_MethodClosure)methodclosure40850);// Array>>printOn://printOn: aStream// 	super printOn: aStream.// 	aStream nextPutAll: ' #( '.// 	self do: [:each|// 		each printOn: aStream.// 		aStream nextPutAll: ' '// 	].// 	aStream nextPutAll: ')'.localvariable26930 = (Object)new_AST_Variable_named(L"aStream");array24014 = (Object)new_Type_Array_with(1, (Object)localvariable26930);super2456 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable26930);string26475 = (Object)new_Type_String(L" #( ");constant34583 = (Object)new_AST_Constant((Object)string26475);// nextPutAll:send160316 = (Object)new_AST_Send((Object)localvariable26930, (Object)symbol44382, 1, (Object)constant34583);string26476 = (Object)new_Type_String(L"printOn:");string26477 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \' #( \'.\n\tself do: [:each|\n\t\teach printOn: aStream.\n\t\taStream nextPutAll: \' \'\n\t].\n\taStream nextPutAll: \')\'.");smallint26328 = (Object)new_Type_SmallInt(-1);smallint26329 = (Object)new_Type_SmallInt(-1);info5205 = (Object)new_AST_Info((Type_String)string26477,(Type_String)string26476, (Type_SmallInt)smallint26328, (Type_SmallInt)smallint26329);((AST_Send)send160316)->info = (AST_Info)info5205;localvariable26931 = (Object)new_AST_Variable_named(L"each");array24015 = (Object)new_Type_Array_with(1, (Object)localvariable26931);// printOn:send160317 = (Object)new_AST_Send((Object)localvariable26931, (Object)symbol44111, 1, (Object)localvariable26930);((AST_Send)send160317)->info = (AST_Info)info5205;string26478 = (Object)new_Type_String(L" ");constant34584 = (Object)new_AST_Constant((Object)string26478);// nextPutAll:send160318 = (Object)new_AST_Send((Object)localvariable26930, (Object)symbol44382, 1, (Object)constant34584);((AST_Send)send160318)->info = (AST_Info)info5205;block11685 = (Object)new_AST_Block_with((Type_Array)array24015, (Type_Array)empty_Type_Array, 1, 2, send160317, send160318);// do:send160319 = (Object)new_AST_Send((Object)Self, (Object)symbol44127, 1, (Object)block11685);((AST_Send)send160319)->info = (AST_Info)info5205;string26479 = (Object)new_Type_String(L")");constant34585 = (Object)new_AST_Constant((Object)string26479);// nextPutAll:send160320 = (Object)new_AST_Send((Object)localvariable26930, (Object)symbol44382, 1, (Object)constant34585);((AST_Send)send160320)->info = (AST_Info)info5205;method40948 = (Object)new_AST_Method_with((Type_Array)array24014, (Type_Array)empty_Type_Array, 5, super2456, send160316, send160319, send160320, Self);((AST_Method)method40948)->info = (AST_Info)info5205;methodclosure40851 = (Object)new_Runtime_MethodClosure(method40948);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40851);// Array>>last://last: aNode// 	^ self at: self size put: aNode.localvariable26932 = (Object)new_AST_Variable_named(L"aNode");array24016 = (Object)new_Type_Array_with(1, (Object)localvariable26932);// sizesend160321 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26480 = (Object)new_Type_String(L"last:");string26481 = (Object)new_Type_String(L"last: aNode\n\t^ self at: self size put: aNode.");smallint26330 = (Object)new_Type_SmallInt(-1);smallint26331 = (Object)new_Type_SmallInt(-1);info5206 = (Object)new_AST_Info((Type_String)string26481,(Type_String)string26480, (Type_SmallInt)smallint26330, (Type_SmallInt)smallint26331);((AST_Send)send160321)->info = (AST_Info)info5206;// at:put:send160322 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send160321, (Object)localvariable26932);((AST_Send)send160322)->info = (AST_Info)info5206;method40949 = (Object)new_AST_Method_with((Type_Array)array24016, (Type_Array)empty_Type_Array, 1, send160322);((AST_Method)method40949)->info = (AST_Info)info5206;symbol44186 = (Object)new_Type_Symbol_cached(L"last:");methodclosure40852 = (Object)new_Runtime_MethodClosure(method40949);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44186, (Runtime_MethodClosure)methodclosure40852);// Array>>initialize//initialize // 	super initialize.super2457 = (Object)new_AST_Super((Object)symbol44004, 0);method40950 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super2457, Self);string26482 = (Object)new_Type_String(L"initialize");string26483 = (Object)new_Type_String(L"initialize \n\tsuper initialize.");smallint26332 = (Object)new_Type_SmallInt(-1);smallint26333 = (Object)new_Type_SmallInt(-1);info5207 = (Object)new_AST_Info((Type_String)string26483,(Type_String)string26482, (Type_SmallInt)smallint26332, (Type_SmallInt)smallint26333);((AST_Method)method40950)->info = (AST_Info)info5207;methodclosure40853 = (Object)new_Runtime_MethodClosure(method40950);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40853);// Array>>last//last// 	^ self at: self size.// sizesend160323 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26484 = (Object)new_Type_String(L"last");string26485 = (Object)new_Type_String(L"last\n\t^ self at: self size.");smallint26334 = (Object)new_Type_SmallInt(-1);smallint26335 = (Object)new_Type_SmallInt(-1);info5208 = (Object)new_AST_Info((Type_String)string26485,(Type_String)string26484, (Type_SmallInt)smallint26334, (Type_SmallInt)smallint26335);((AST_Send)send160323)->info = (AST_Info)info5208;// at:send160324 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send160323);((AST_Send)send160324)->info = (AST_Info)info5208;method40951 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160324);((AST_Method)method40951)->info = (AST_Info)info5208;symbol44179 = (Object)new_Type_Symbol_cached(L"last");methodclosure40854 = (Object)new_Runtime_MethodClosure(method40951);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44179, (Runtime_MethodClosure)methodclosure40854);// Array>>add://add: anElement// 	| result |// 	result := self class new: self size +1.// 	self doWithIndex: [:el :i | result at: i put: el ].// 	result last: anElement.// 	^ result.localvariable26933 = (Object)new_AST_Variable_named(L"anElement");array24017 = (Object)new_Type_Array_with(1, (Object)localvariable26933);localvariable26934 = (Object)new_AST_Variable_named(L"result");array24018 = (Object)new_Type_Array_with(1, (Object)localvariable26934);// classsend160325 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);string26486 = (Object)new_Type_String(L"add:");string26487 = (Object)new_Type_String(L"add: anElement\n\t| result |\n\tresult := self class new: self size +1.\n\tself doWithIndex: [:el :i | result at: i put: el ].\n\tresult last: anElement.\n\t^ result.");smallint26336 = (Object)new_Type_SmallInt(-1);smallint26337 = (Object)new_Type_SmallInt(-1);info5209 = (Object)new_AST_Info((Type_String)string26487,(Type_String)string26486, (Type_SmallInt)smallint26336, (Type_SmallInt)smallint26337);((AST_Send)send160325)->info = (AST_Info)info5209;symbol44091 = (Object)new_Type_Symbol_cached(L"new:");// sizesend160326 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);((AST_Send)send160326)->info = (AST_Info)info5209;smallint26338 = (Object)new_Type_SmallInt(1);constant34586 = (Object)new_AST_Constant((Object)smallint26338);// +send160327 = (Object)new_AST_Send((Object)send160326, (Object)SMB__plus, 1, (Object)constant34586);((AST_Send)send160327)->info = (AST_Info)info5209;// new:send160328 = (Object)new_AST_Send((Object)send160325, (Object)symbol44091, 1, (Object)send160327);((AST_Send)send160328)->info = (AST_Info)info5209;assign20126 = (Object)new_AST_Assign((Object)localvariable26934, (Object)send160328);localvariable26935 = (Object)new_AST_Variable_named(L"el");localvariable26936 = (Object)new_AST_Variable_named(L"i");array24019 = (Object)new_Type_Array_with(2, (Object)localvariable26935, (Object)localvariable26936);// at:put:send160329 = (Object)new_AST_Send((Object)localvariable26934, (Object)SMB_at_put_, 2, (Object)localvariable26936, (Object)localvariable26935);((AST_Send)send160329)->info = (AST_Info)info5209;block11686 = (Object)new_AST_Block_with((Type_Array)array24019, (Type_Array)empty_Type_Array, 1, 1, send160329);// doWithIndex:send160330 = (Object)new_AST_Send((Object)Self, (Object)symbol44181, 1, (Object)block11686);((AST_Send)send160330)->info = (AST_Info)info5209;// last:send160331 = (Object)new_AST_Send((Object)localvariable26934, (Object)symbol44186, 1, (Object)localvariable26933);((AST_Send)send160331)->info = (AST_Info)info5209;method40952 = (Object)new_AST_Method_with((Type_Array)array24017, (Type_Array)array24018, 4, assign20126, send160330, send160331, localvariable26934);((AST_Method)method40952)->info = (AST_Info)info5209;methodclosure40855 = (Object)new_Runtime_MethodClosure(method40952);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44183, (Runtime_MethodClosure)methodclosure40855);// Array>>isEmpty//isEmpty// 	^ self size = 0// sizesend160332 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26488 = (Object)new_Type_String(L"isEmpty");string26489 = (Object)new_Type_String(L"isEmpty\n\t^ self size = 0");smallint26339 = (Object)new_Type_SmallInt(-1);smallint26340 = (Object)new_Type_SmallInt(-1);info5210 = (Object)new_AST_Info((Type_String)string26489,(Type_String)string26488, (Type_SmallInt)smallint26339, (Type_SmallInt)smallint26340);((AST_Send)send160332)->info = (AST_Info)info5210;smallint26341 = (Object)new_Type_SmallInt(0);constant34587 = (Object)new_AST_Constant((Object)smallint26341);// =send160333 = (Object)new_AST_Send((Object)send160332, (Object)SMB__equal, 1, (Object)constant34587);((AST_Send)send160333)->info = (AST_Info)info5210;method40953 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160333);((AST_Method)method40953)->info = (AST_Info)info5210;symbol44129 = (Object)new_Type_Symbol_cached(L"isEmpty");methodclosure40856 = (Object)new_Runtime_MethodClosure(method40953);store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol44129, (Runtime_MethodClosure)methodclosure40856);// a PInternalMetaclass P#Array>>newFrom://newFrom: aCollection// 	| result |// 	result := self new: aCollection size.// 	1 to: aCollection size do: [ :index|// 		result at: index put: (aCollection  at: index).// 	].// 	^ result.localvariable26937 = (Object)new_AST_Variable_named(L"aCollection");array24020 = (Object)new_Type_Array_with(1, (Object)localvariable26937);localvariable26938 = (Object)new_AST_Variable_named(L"result");array24021 = (Object)new_Type_Array_with(1, (Object)localvariable26938);// sizesend160334 = (Object)new_AST_Send((Object)localvariable26937, (Object)SMB_size, 0);string26490 = (Object)new_Type_String(L"newFrom:");string26491 = (Object)new_Type_String(L"newFrom: aCollection\n\t| result |\n\tresult := self new: aCollection size.\n\t1 to: aCollection size do: [ :index|\n\t\tresult at: index put: (aCollection  at: index).\n\t].\n\t^ result.");smallint26342 = (Object)new_Type_SmallInt(-1);smallint26343 = (Object)new_Type_SmallInt(-1);info5211 = (Object)new_AST_Info((Type_String)string26491,(Type_String)string26490, (Type_SmallInt)smallint26342, (Type_SmallInt)smallint26343);((AST_Send)send160334)->info = (AST_Info)info5211;// new:send160335 = (Object)new_AST_Send((Object)Self, (Object)symbol44091, 1, (Object)send160334);((AST_Send)send160335)->info = (AST_Info)info5211;assign20127 = (Object)new_AST_Assign((Object)localvariable26938, (Object)send160335);smallint26344 = (Object)new_Type_SmallInt(1);constant34588 = (Object)new_AST_Constant((Object)smallint26344);// sizesend160336 = (Object)new_AST_Send((Object)localvariable26937, (Object)SMB_size, 0);((AST_Send)send160336)->info = (AST_Info)info5211;localvariable26939 = (Object)new_AST_Variable_named(L"index");array24022 = (Object)new_Type_Array_with(1, (Object)localvariable26939);// at:send160337 = (Object)new_AST_Send((Object)localvariable26937, (Object)SMB_at_, 1, (Object)localvariable26939);((AST_Send)send160337)->info = (AST_Info)info5211;// at:put:send160338 = (Object)new_AST_Send((Object)localvariable26938, (Object)SMB_at_put_, 2, (Object)localvariable26939, (Object)send160337);((AST_Send)send160338)->info = (AST_Info)info5211;block11687 = (Object)new_AST_Block_with((Type_Array)array24022, (Type_Array)empty_Type_Array, 1, 1, send160338);// to:do:send160339 = (Object)new_AST_Send((Object)constant34588, (Object)symbol44135, 2, (Object)send160336, (Object)block11687);((AST_Send)send160339)->info = (AST_Info)info5211;method40954 = (Object)new_AST_Method_with((Type_Array)array24020, (Type_Array)array24021, 3, assign20127, send160339, localvariable26938);((AST_Method)method40954)->info = (AST_Info)info5211;symbol44177 = (Object)new_Type_Symbol_cached(L"newFrom:");methodclosure40857 = (Object)new_Runtime_MethodClosure(method40954);store_method((Type_Class)internalmetaclass10, (Type_Symbol)symbol44177, (Runtime_MethodClosure)methodclosure40857);// a PInternalMetaclass P#Array>>with://with: anObject// 	| result |// 	result := (self new: 1).// 	result at: 1 put: anObject.// 	^ result.localvariable26940 = (Object)new_AST_Variable_named(L"anObject");array24023 = (Object)new_Type_Array_with(1, (Object)localvariable26940);localvariable26941 = (Object)new_AST_Variable_named(L"result");array24024 = (Object)new_Type_Array_with(1, (Object)localvariable26941);smallint26345 = (Object)new_Type_SmallInt(1);constant34589 = (Object)new_AST_Constant((Object)smallint26345);// new:send160340 = (Object)new_AST_Send((Object)Self, (Object)symbol44091, 1, (Object)constant34589);string26492 = (Object)new_Type_String(L"with:");string26493 = (Object)new_Type_String(L"with: anObject\n\t| result |\n\tresult := (self new: 1).\n\tresult at: 1 put: anObject.\n\t^ result.");smallint26346 = (Object)new_Type_SmallInt(-1);smallint26347 = (Object)new_Type_SmallInt(-1);info5212 = (Object)new_AST_Info((Type_String)string26493,(Type_String)string26492, (Type_SmallInt)smallint26346, (Type_SmallInt)smallint26347);((AST_Send)send160340)->info = (AST_Info)info5212;assign20128 = (Object)new_AST_Assign((Object)localvariable26941, (Object)send160340);smallint26348 = (Object)new_Type_SmallInt(1);constant34590 = (Object)new_AST_Constant((Object)smallint26348);// at:put:send160341 = (Object)new_AST_Send((Object)localvariable26941, (Object)SMB_at_put_, 2, (Object)constant34590, (Object)localvariable26940);((AST_Send)send160341)->info = (AST_Info)info5212;method40955 = (Object)new_AST_Method_with((Type_Array)array24023, (Type_Array)array24024, 3, assign20128, send160341, localvariable26941);((AST_Method)method40955)->info = (AST_Info)info5212;symbol44178 = (Object)new_Type_Symbol_cached(L"with:");methodclosure40858 = (Object)new_Runtime_MethodClosure(method40955);store_method((Type_Class)internalmetaclass10, (Type_Symbol)symbol44178, (Runtime_MethodClosure)methodclosure40858);// sizesend160342 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26494 = (Object)new_Type_String(L"grow");string26495 = (Object)new_Type_String(L"grow\n\t\"Become larger. Typically, a subclass has to override this if the subclass\n\tadds instance variables.\"\n\t| newArray |\n\tnewArray := Array new: self size + self growSize.\n\tnewArray replaceFrom: 1 to: array size with: array startingAt: 1.\n\tarray := newArray");smallint26349 = (Object)new_Type_SmallInt(-1);smallint26350 = (Object)new_Type_SmallInt(-1);info5213 = (Object)new_AST_Info((Type_String)string26495,(Type_String)string26494, (Type_SmallInt)smallint26349, (Type_SmallInt)smallint26350);((AST_Send)send160342)->info = (AST_Info)info5213;// growSizesend160343 = (Object)new_AST_Send((Object)Self, (Object)symbol44239, 0);((AST_Send)send160343)->info = (AST_Info)info5213;// +send160344 = (Object)new_AST_Send((Object)send160342, (Object)SMB__plus, 1, (Object)send160343);((AST_Send)send160344)->info = (AST_Info)info5213;// new:send160345 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)send160344);((AST_Send)send160345)->info = (AST_Info)info5213;assign20129 = (Object)new_AST_Assign((Object)localvariable26912, (Object)send160345);smallint26351 = (Object)new_Type_SmallInt(1);constant34591 = (Object)new_AST_Constant((Object)smallint26351);// sizesend160346 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_size, 0);((AST_Send)send160346)->info = (AST_Info)info5213;smallint26352 = (Object)new_Type_SmallInt(1);constant34592 = (Object)new_AST_Constant((Object)smallint26352);// replaceFrom:to:with:startingAt:send160347 = (Object)new_AST_Send((Object)localvariable26912, (Object)symbol44185, 4, (Object)constant34591, (Object)send160346, (Object)instancevariable16435, (Object)constant34592);((AST_Send)send160347)->info = (AST_Info)info5213;assign20130 = (Object)new_AST_Assign((Object)instancevariable16435, (Object)localvariable26912);method40956 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24000, 4, assign20129, send160347, assign20130, Self);((AST_Method)method40956)->info = (AST_Info)info5213;methodclosure40859 = (Object)new_Runtime_MethodClosure(method40956);store_method((Type_Class)class6756, (Type_Symbol)symbol44238, (Runtime_MethodClosure)methodclosure40859);// OrderedCollection>>addLast://addLast: newObject // 	"Add newObject to the end of the receiver. Answer newObject."// // 	lastIndex = array size ifTrue: [self makeRoomAtLast].// 	lastIndex := lastIndex + 1.// 	array at: lastIndex put: newObject.// 	^ newObjectlocalvariable26942 = (Object)new_AST_Variable_named(L"newObject");array24025 = (Object)new_Type_Array_with(1, (Object)localvariable26942);// sizesend160348 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_size, 0);string26496 = (Object)new_Type_String(L"addLast:");string26497 = (Object)new_Type_String(L"addLast: newObject \n\t\"Add newObject to the end of the receiver. Answer newObject.\"\n\n\tlastIndex = array size ifTrue: [self makeRoomAtLast].\n\tlastIndex := lastIndex + 1.\n\tarray at: lastIndex put: newObject.\n\t^ newObject");smallint26353 = (Object)new_Type_SmallInt(-1);smallint26354 = (Object)new_Type_SmallInt(-1);info5214 = (Object)new_AST_Info((Type_String)string26497,(Type_String)string26496, (Type_SmallInt)smallint26353, (Type_SmallInt)smallint26354);((AST_Send)send160348)->info = (AST_Info)info5214;// =send160349 = (Object)new_AST_Send((Object)instancevariable16437, (Object)SMB__equal, 1, (Object)send160348);((AST_Send)send160349)->info = (AST_Info)info5214;// makeRoomAtLastsend160350 = (Object)new_AST_Send((Object)Self, (Object)symbol44237, 0);((AST_Send)send160350)->info = (AST_Info)info5214;block11688 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160350);// ifTrue:send160351 = (Object)new_AST_Send((Object)send160349, (Object)SMB_ifTrue_, 1, (Object)block11688);((AST_Send)send160351)->info = (AST_Info)info5214;smallint26355 = (Object)new_Type_SmallInt(1);constant34593 = (Object)new_AST_Constant((Object)smallint26355);// +send160352 = (Object)new_AST_Send((Object)instancevariable16437, (Object)SMB__plus, 1, (Object)constant34593);((AST_Send)send160352)->info = (AST_Info)info5214;assign20131 = (Object)new_AST_Assign((Object)instancevariable16437, (Object)send160352);// at:put:send160353 = (Object)new_AST_Send((Object)instancevariable16435, (Object)SMB_at_put_, 2, (Object)instancevariable16437, (Object)localvariable26942);((AST_Send)send160353)->info = (AST_Info)info5214;method40957 = (Object)new_AST_Method_with((Type_Array)array24025, (Type_Array)empty_Type_Array, 4, send160351, assign20131, send160353, localvariable26942);((AST_Method)method40957)->info = (AST_Info)info5214;methodclosure40860 = (Object)new_Runtime_MethodClosure(method40957);store_method((Type_Class)class6756, (Type_Symbol)symbol44236, (Runtime_MethodClosure)methodclosure40860);// a PMetaclass P#OrderedCollection>>new:withAll://new: anInteger withAll: anObject// 	^ self basicNew setContents: (Array new: anInteger withAll: anObject)localvariable26943 = (Object)new_AST_Variable_named(L"anInteger");localvariable26944 = (Object)new_AST_Variable_named(L"anObject");array24026 = (Object)new_Type_Array_with(2, (Object)localvariable26943, (Object)localvariable26944);// basicNewsend160354 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);string26498 = (Object)new_Type_String(L"new:withAll:");string26499 = (Object)new_Type_String(L"new: anInteger withAll: anObject\n\t^ self basicNew setContents: (Array new: anInteger withAll: anObject)");smallint26356 = (Object)new_Type_SmallInt(-1);smallint26357 = (Object)new_Type_SmallInt(-1);info5215 = (Object)new_AST_Info((Type_String)string26499,(Type_String)string26498, (Type_SmallInt)smallint26356, (Type_SmallInt)smallint26357);((AST_Send)send160354)->info = (AST_Info)info5215;symbol44389 = (Object)new_Type_Symbol_cached(L"setContents:");symbol44235 = (Object)new_Type_Symbol_cached(L"new:withAll:");// new:withAll:send160355 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44235, 2, (Object)localvariable26943, (Object)localvariable26944);((AST_Send)send160355)->info = (AST_Info)info5215;// setContents:send160356 = (Object)new_AST_Send((Object)send160354, (Object)symbol44389, 1, (Object)send160355);((AST_Send)send160356)->info = (AST_Info)info5215;method40958 = (Object)new_AST_Method_with((Type_Array)array24026, (Type_Array)empty_Type_Array, 1, send160356);((AST_Method)method40958)->info = (AST_Info)info5215;methodclosure40861 = (Object)new_Runtime_MethodClosure(method40958);store_method((Type_Class)metaclass5957, (Type_Symbol)symbol44235, (Runtime_MethodClosure)methodclosure40861);// a PMetaclass P#OrderedCollection>>newFrom://newFrom: aCollection // 	"Answer an instance of me containing the same elements as aCollection."// // 	| newCollection |// 	newCollection := self new: aCollection size.// 	newCollection addAll: aCollection.// 	^newCollection// // "	OrderedCollection newFrom: {1. 2. 3}// 	{1. 2. 3} as: OrderedCollection// 	{4. 2. 7} as: SortedCollection// "localvariable26945 = (Object)new_AST_Variable_named(L"aCollection");array24027 = (Object)new_Type_Array_with(1, (Object)localvariable26945);localvariable26946 = (Object)new_AST_Variable_named(L"newCollection");array24028 = (Object)new_Type_Array_with(1, (Object)localvariable26946);// sizesend160357 = (Object)new_AST_Send((Object)localvariable26945, (Object)SMB_size, 0);string26500 = (Object)new_Type_String(L"newFrom:");string26501 = (Object)new_Type_String(L"newFrom: aCollection \n\t\"Answer an instance of me containing the same elements as aCollection.\"\n\n\t| newCollection |\n\tnewCollection := self new: aCollection size.\n\tnewCollection addAll: aCollection.\n\t^newCollection\n\n\"\tOrderedCollection newFrom: {1. 2. 3}\n\t{1. 2. 3} as: OrderedCollection\n\t{4. 2. 7} as: SortedCollection\n\"");smallint26358 = (Object)new_Type_SmallInt(-1);smallint26359 = (Object)new_Type_SmallInt(-1);info5216 = (Object)new_AST_Info((Type_String)string26501,(Type_String)string26500, (Type_SmallInt)smallint26358, (Type_SmallInt)smallint26359);((AST_Send)send160357)->info = (AST_Info)info5216;// new:send160358 = (Object)new_AST_Send((Object)Self, (Object)symbol44091, 1, (Object)send160357);((AST_Send)send160358)->info = (AST_Info)info5216;assign20132 = (Object)new_AST_Assign((Object)localvariable26946, (Object)send160358);symbol44390 = (Object)new_Type_Symbol_cached(L"addAll:");// addAll:send160359 = (Object)new_AST_Send((Object)localvariable26946, (Object)symbol44390, 1, (Object)localvariable26945);((AST_Send)send160359)->info = (AST_Info)info5216;method40959 = (Object)new_AST_Method_with((Type_Array)array24027, (Type_Array)array24028, 3, assign20132, send160359, localvariable26946);((AST_Method)method40959)->info = (AST_Info)info5216;methodclosure40862 = (Object)new_Runtime_MethodClosure(method40959);store_method((Type_Class)metaclass5957, (Type_Symbol)symbol44177, (Runtime_MethodClosure)methodclosure40862);// a PMetaclass P#OrderedCollection>>new://new: anInteger // 	"Create a collection with enough room allocated to contain up to anInteger elements.// 	The new instance will be of size 0 (allocated room is not necessarily used)."// 	// 	^self basicNew setCollection: (Array new: anInteger)localvariable26947 = (Object)new_AST_Variable_named(L"anInteger");array24029 = (Object)new_Type_Array_with(1, (Object)localvariable26947);// basicNewsend160360 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);string26502 = (Object)new_Type_String(L"new:");string26503 = (Object)new_Type_String(L"new: anInteger \n\t\"Create a collection with enough room allocated to contain up to anInteger elements.\n\tThe new instance will be of size 0 (allocated room is not necessarily used).\"\n\t\n\t^self basicNew setCollection: (Array new: anInteger)");smallint26360 = (Object)new_Type_SmallInt(-1);smallint26361 = (Object)new_Type_SmallInt(-1);info5217 = (Object)new_AST_Info((Type_String)string26503,(Type_String)string26502, (Type_SmallInt)smallint26360, (Type_SmallInt)smallint26361);((AST_Send)send160360)->info = (AST_Info)info5217;// new:send160361 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)localvariable26947);((AST_Send)send160361)->info = (AST_Info)info5217;// setCollection:send160362 = (Object)new_AST_Send((Object)send160360, (Object)symbol44240, 1, (Object)send160361);((AST_Send)send160362)->info = (AST_Info)info5217;method40960 = (Object)new_AST_Method_with((Type_Array)array24029, (Type_Array)empty_Type_Array, 1, send160362);((AST_Method)method40960)->info = (AST_Info)info5217;methodclosure40863 = (Object)new_Runtime_MethodClosure(method40960);store_method((Type_Class)metaclass5957, (Type_Symbol)symbol44091, (Runtime_MethodClosure)methodclosure40863);// a PMetaclass P#OrderedCollection>>new//new// 	^ self new: 10smallint26362 = (Object)new_Type_SmallInt(10);constant34594 = (Object)new_AST_Constant((Object)smallint26362);// new:send160363 = (Object)new_AST_Send((Object)Self, (Object)symbol44091, 1, (Object)constant34594);string26504 = (Object)new_Type_String(L"new");string26505 = (Object)new_Type_String(L"new\n\t^ self new: 10");smallint26363 = (Object)new_Type_SmallInt(-1);smallint26364 = (Object)new_Type_SmallInt(-1);info5218 = (Object)new_AST_Info((Type_String)string26505,(Type_String)string26504, (Type_SmallInt)smallint26363, (Type_SmallInt)smallint26364);((AST_Send)send160363)->info = (AST_Info)info5218;method40961 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160363);((AST_Method)method40961)->info = (AST_Info)info5218;methodclosure40864 = (Object)new_Runtime_MethodClosure(method40961);store_method((Type_Class)metaclass5957, (Type_Symbol)symbol44095, (Runtime_MethodClosure)methodclosure40864);// a PMetaclass P#OrderedCollection>>ofSize://ofSize: n// 	"Create a new collection of size n with nil as its elements.// 	This method exists because OrderedCollection new: n creates an// 	empty collection,  not one of size n."// 	| collection |// 	collection := self new: n.// 	collection setContents: (collection collector).// 	^ collection// localvariable26948 = (Object)new_AST_Variable_named(L"n");array24030 = (Object)new_Type_Array_with(1, (Object)localvariable26948);localvariable26949 = (Object)new_AST_Variable_named(L"collection");array24031 = (Object)new_Type_Array_with(1, (Object)localvariable26949);// new:send160364 = (Object)new_AST_Send((Object)Self, (Object)symbol44091, 1, (Object)localvariable26948);string26506 = (Object)new_Type_String(L"ofSize:");string26507 = (Object)new_Type_String(L"ofSize: n\n\t\"Create a new collection of size n with nil as its elements.\n\tThis method exists because OrderedCollection new: n creates an\n\tempty collection,  not one of size n.\"\n\t| collection |\n\tcollection := self new: n.\n\tcollection setContents: (collection collector).\n\t^ collection\n");smallint26365 = (Object)new_Type_SmallInt(-1);smallint26366 = (Object)new_Type_SmallInt(-1);info5219 = (Object)new_AST_Info((Type_String)string26507,(Type_String)string26506, (Type_SmallInt)smallint26365, (Type_SmallInt)smallint26366);((AST_Send)send160364)->info = (AST_Info)info5219;assign20133 = (Object)new_AST_Assign((Object)localvariable26949, (Object)send160364);symbol44391 = (Object)new_Type_Symbol_cached(L"collector");// collectorsend160365 = (Object)new_AST_Send((Object)localvariable26949, (Object)symbol44391, 0);((AST_Send)send160365)->info = (AST_Info)info5219;// setContents:send160366 = (Object)new_AST_Send((Object)localvariable26949, (Object)symbol44389, 1, (Object)send160365);((AST_Send)send160366)->info = (AST_Info)info5219;method40962 = (Object)new_AST_Method_with((Type_Array)array24030, (Type_Array)array24031, 3, assign20133, send160366, localvariable26949);((AST_Method)method40962)->info = (AST_Info)info5219;symbol44234 = (Object)new_Type_Symbol_cached(L"ofSize:");methodclosure40865 = (Object)new_Runtime_MethodClosure(method40962);store_method((Type_Class)metaclass5957, (Type_Symbol)symbol44234, (Runtime_MethodClosure)methodclosure40865);// newsend160367 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26508 = (Object)new_Type_String(L"pInstVarNames");string26509 = (Object)new_Type_String(L"pInstVarNames \n\t^ OrderedCollection new.");smallint26367 = (Object)new_Type_SmallInt(-1);smallint26368 = (Object)new_Type_SmallInt(-1);info5220 = (Object)new_AST_Info((Type_String)string26509,(Type_String)string26508, (Type_SmallInt)smallint26367, (Type_SmallInt)smallint26368);((AST_Send)send160367)->info = (AST_Info)info5220;method40963 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160367);((AST_Method)method40963)->info = (AST_Info)info5220;symbol44105 = (Object)new_Type_Symbol_cached(L"pInstVarNames");methodclosure40866 = (Object)new_Runtime_MethodClosure(method40963);store_method((Type_Class)internalmetaclass9, (Type_Symbol)symbol44105, (Runtime_MethodClosure)methodclosure40866);classreference13391 = (Object)new_Organization_ClassReference((Type_Class)Behavior);// Behavior>>pInstVarNames//pInstVarNames // 	^ OrderedCollection new.// newsend160368 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26510 = (Object)new_Type_String(L"pInstVarNames");string26511 = (Object)new_Type_String(L"pInstVarNames \n\t^ OrderedCollection new.");smallint26369 = (Object)new_Type_SmallInt(-1);smallint26370 = (Object)new_Type_SmallInt(-1);info5221 = (Object)new_AST_Info((Type_String)string26511,(Type_String)string26510, (Type_SmallInt)smallint26369, (Type_SmallInt)smallint26370);((AST_Send)send160368)->info = (AST_Info)info5221;method40964 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160368);((AST_Method)method40964)->info = (AST_Info)info5221;methodclosure40867 = (Object)new_Runtime_MethodClosure(method40964);store_method((Type_Class)Behavior, (Type_Symbol)symbol44105, (Runtime_MethodClosure)methodclosure40867);// Behavior>>methods//methods// 	^ methodsinstancevariable16445 = (Object)new_AST_InstVariable(2, L"methods");method40965 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16445);string26512 = (Object)new_Type_String(L"methods");string26513 = (Object)new_Type_String(L"methods\n\t^ methods");smallint26371 = (Object)new_Type_SmallInt(-1);smallint26372 = (Object)new_Type_SmallInt(-1);info5222 = (Object)new_AST_Info((Type_String)string26513,(Type_String)string26512, (Type_SmallInt)smallint26371, (Type_SmallInt)smallint26372);((AST_Method)method40965)->info = (AST_Info)info5222;symbol44092 = (Object)new_Type_Symbol_cached(L"methods");methodclosure40868 = (Object)new_Runtime_MethodClosure(method40965);store_method((Type_Class)Behavior, (Type_Symbol)symbol44092, (Runtime_MethodClosure)methodclosure40868);// Behavior>>methods://methods: anObject// 	methods := anObjectlocalvariable26950 = (Object)new_AST_Variable_named(L"anObject");array24032 = (Object)new_Type_Array_with(1, (Object)localvariable26950);assign20134 = (Object)new_AST_Assign((Object)instancevariable16445, (Object)localvariable26950);method40966 = (Object)new_AST_Method_with((Type_Array)array24032, (Type_Array)empty_Type_Array, 2, assign20134, Self);string26514 = (Object)new_Type_String(L"methods:");string26515 = (Object)new_Type_String(L"methods: anObject\n\tmethods := anObject");smallint26373 = (Object)new_Type_SmallInt(-1);smallint26374 = (Object)new_Type_SmallInt(-1);info5223 = (Object)new_AST_Info((Type_String)string26515,(Type_String)string26514, (Type_SmallInt)smallint26373, (Type_SmallInt)smallint26374);((AST_Method)method40966)->info = (AST_Info)info5223;symbol44096 = (Object)new_Type_Symbol_cached(L"methods:");methodclosure40869 = (Object)new_Runtime_MethodClosure(method40966);store_method((Type_Class)Behavior, (Type_Symbol)symbol44096, (Runtime_MethodClosure)methodclosure40869);// Behavior>>parentInstVariables//parentInstVariables// 	|instVars |// 	instVars := OrderedCollection new.// 	self hasSuperclass ifTrue: [// 		instVars addAll: self superclass layout.// 	] ifFalse: [ // 		"Transcript show: self sclass name, ' superclass was nil'; cr "// 	].// 	^ instVarslocalvariable26951 = (Object)new_AST_Variable_named(L"instVars");array24033 = (Object)new_Type_Array_with(1, (Object)localvariable26951);// newsend160369 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26516 = (Object)new_Type_String(L"parentInstVariables");string26517 = (Object)new_Type_String(L"parentInstVariables\n\t|instVars |\n\tinstVars := OrderedCollection new.\n\tself hasSuperclass ifTrue: [\n\t\tinstVars addAll: self superclass layout.\n\t] ifFalse: [ \n\t\t\"Transcript show: self sclass name, \' superclass was nil\'; cr \"\n\t].\n\t^ instVars");smallint26375 = (Object)new_Type_SmallInt(-1);smallint26376 = (Object)new_Type_SmallInt(-1);info5224 = (Object)new_AST_Info((Type_String)string26517,(Type_String)string26516, (Type_SmallInt)smallint26375, (Type_SmallInt)smallint26376);((AST_Send)send160369)->info = (AST_Info)info5224;assign20135 = (Object)new_AST_Assign((Object)localvariable26951, (Object)send160369);symbol44103 = (Object)new_Type_Symbol_cached(L"hasSuperclass");// hasSuperclasssend160370 = (Object)new_AST_Send((Object)Self, (Object)symbol44103, 0);((AST_Send)send160370)->info = (AST_Info)info5224;symbol44097 = (Object)new_Type_Symbol_cached(L"superclass");// superclasssend160371 = (Object)new_AST_Send((Object)Self, (Object)symbol44097, 0);((AST_Send)send160371)->info = (AST_Info)info5224;symbol44094 = (Object)new_Type_Symbol_cached(L"layout");// layoutsend160372 = (Object)new_AST_Send((Object)send160371, (Object)symbol44094, 0);((AST_Send)send160372)->info = (AST_Info)info5224;// addAll:send160373 = (Object)new_AST_Send((Object)localvariable26951, (Object)symbol44390, 1, (Object)send160372);((AST_Send)send160373)->info = (AST_Info)info5224;block11689 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160373);block11690 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);// ifTrue:ifFalse:send160374 = (Object)new_AST_Send((Object)send160370, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11689, (Object)block11690);((AST_Send)send160374)->info = (AST_Info)info5224;method40967 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24033, 3, assign20135, send160374, localvariable26951);((AST_Method)method40967)->info = (AST_Info)info5224;symbol44106 = (Object)new_Type_Symbol_cached(L"parentInstVariables");methodclosure40870 = (Object)new_Runtime_MethodClosure(method40967);store_method((Type_Class)Behavior, (Type_Symbol)symbol44106, (Runtime_MethodClosure)methodclosure40870);// Behavior>>superclass//superclass// 	^ superclassinstancevariable16446 = (Object)new_AST_InstVariable(1, L"superclass");method40968 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16446);string26518 = (Object)new_Type_String(L"superclass");string26519 = (Object)new_Type_String(L"superclass\n\t^ superclass");smallint26377 = (Object)new_Type_SmallInt(-1);smallint26378 = (Object)new_Type_SmallInt(-1);info5225 = (Object)new_AST_Info((Type_String)string26519,(Type_String)string26518, (Type_SmallInt)smallint26377, (Type_SmallInt)smallint26378);((AST_Method)method40968)->info = (AST_Info)info5225;methodclosure40871 = (Object)new_Runtime_MethodClosure(method40968);store_method((Type_Class)Behavior, (Type_Symbol)symbol44097, (Runtime_MethodClosure)methodclosure40871);// Behavior>>canUnderstand://canUnderstand: selector// 	(self includesSelector: selector) ifTrue: [^true].// 	superclass == nil ifTrue: [^false].// 	^superclass canUnderstand: selectorlocalvariable26952 = (Object)new_AST_Variable_named(L"selector");array24034 = (Object)new_Type_Array_with(1, (Object)localvariable26952);variable1851 = (Object)new_AST_Variable_named(L"return");array24035 = (Object)new_Type_Array_with(1, (Object)variable1851);symbol44104 = (Object)new_Type_Symbol_cached(L"includesSelector:");// includesSelector:send160375 = (Object)new_AST_Send((Object)Self, (Object)symbol44104, 1, (Object)localvariable26952);string26520 = (Object)new_Type_String(L"canUnderstand:");string26521 = (Object)new_Type_String(L"canUnderstand: selector\n\t(self includesSelector: selector) ifTrue: [^true].\n\tsuperclass == nil ifTrue: [^false].\n\t^superclass canUnderstand: selector");smallint26379 = (Object)new_Type_SmallInt(-1);smallint26380 = (Object)new_Type_SmallInt(-1);info5226 = (Object)new_AST_Info((Type_String)string26521,(Type_String)string26520, (Type_SmallInt)smallint26379, (Type_SmallInt)smallint26380);((AST_Send)send160375)->info = (AST_Info)info5226;// escape:send160376 = (Object)new_AST_Send((Object)variable1851, (Object)SMB_escape_, 1, (Object)True_Const);((AST_Send)send160376)->info = (AST_Info)info5226;block11691 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160376);// ifTrue:send160377 = (Object)new_AST_Send((Object)send160375, (Object)SMB_ifTrue_, 1, (Object)block11691);((AST_Send)send160377)->info = (AST_Info)info5226;// ==send160378 = (Object)new_AST_Send((Object)instancevariable16446, (Object)SMB__pequal, 1, (Object)Nil_Const);((AST_Send)send160378)->info = (AST_Info)info5226;// escape:send160379 = (Object)new_AST_Send((Object)variable1851, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160379)->info = (AST_Info)info5226;block11692 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160379);// ifTrue:send160380 = (Object)new_AST_Send((Object)send160378, (Object)SMB_ifTrue_, 1, (Object)block11692);((AST_Send)send160380)->info = (AST_Info)info5226;// canUnderstand:send160381 = (Object)new_AST_Send((Object)instancevariable16446, (Object)symbol44093, 1, (Object)localvariable26952);((AST_Send)send160381)->info = (AST_Info)info5226;block11693 = (Object)new_AST_Block_with((Type_Array)array24035, (Type_Array)empty_Type_Array, 1, 3, send160377, send160380, send160381);// on:send160382 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11693);method40969 = (Object)new_AST_Method_with((Type_Array)array24034, (Type_Array)empty_Type_Array, 1, send160382);((AST_Method)method40969)->info = (AST_Info)info5226;methodclosure40872 = (Object)new_Runtime_MethodClosure(method40969);store_method((Type_Class)Behavior, (Type_Symbol)symbol44093, (Runtime_MethodClosure)methodclosure40872);// Behavior>>hasSuperclass//hasSuperclass// 	^ self superclass ~= PNil nil// superclasssend160383 = (Object)new_AST_Send((Object)Self, (Object)symbol44097, 0);string26522 = (Object)new_Type_String(L"hasSuperclass");string26523 = (Object)new_Type_String(L"hasSuperclass\n\t^ self superclass ~= PNil nil");smallint26381 = (Object)new_Type_SmallInt(-1);smallint26382 = (Object)new_Type_SmallInt(-1);info5227 = (Object)new_AST_Info((Type_String)string26523,(Type_String)string26522, (Type_SmallInt)smallint26381, (Type_SmallInt)smallint26382);((AST_Send)send160383)->info = (AST_Info)info5227;classreference13392 = (Object)new_Organization_ClassReference((Type_Class)Type_Nil_Class);// Nil>>ifNil://ifNil: aBlock// 	^ aBlock valuelocalvariable26953 = (Object)new_AST_Variable_named(L"aBlock");array24036 = (Object)new_Type_Array_with(1, (Object)localvariable26953);symbol44392 = (Object)new_Type_Symbol_cached(L"value");// valuesend160384 = (Object)new_AST_Send((Object)localvariable26953, (Object)symbol44392, 0);string26524 = (Object)new_Type_String(L"ifNil:");string26525 = (Object)new_Type_String(L"ifNil: aBlock\n\t^ aBlock value");smallint26383 = (Object)new_Type_SmallInt(-1);smallint26384 = (Object)new_Type_SmallInt(-1);info5228 = (Object)new_AST_Info((Type_String)string26525,(Type_String)string26524, (Type_SmallInt)smallint26383, (Type_SmallInt)smallint26384);((AST_Send)send160384)->info = (AST_Info)info5228;method40970 = (Object)new_AST_Method_with((Type_Array)array24036, (Type_Array)empty_Type_Array, 1, send160384);((AST_Method)method40970)->info = (AST_Info)info5228;methodclosure40873 = (Object)new_Runtime_MethodClosure(method40970);store_method((Type_Class)Type_Nil_Class, (Type_Symbol)symbol44005, (Runtime_MethodClosure)methodclosure40873);// Nil>>isNil//isNil// 	^ truemethod40971 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);string26526 = (Object)new_Type_String(L"isNil");string26527 = (Object)new_Type_String(L"isNil\n\t^ true");smallint26385 = (Object)new_Type_SmallInt(-1);smallint26386 = (Object)new_Type_SmallInt(-1);info5229 = (Object)new_AST_Info((Type_String)string26527,(Type_String)string26526, (Type_SmallInt)smallint26385, (Type_SmallInt)smallint26386);((AST_Method)method40971)->info = (AST_Info)info5229;methodclosure40874 = (Object)new_Runtime_MethodClosure(method40971);store_method((Type_Class)Type_Nil_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure40874);symbol44393 = (Object)new_Type_Symbol_cached(L"nil");// nilsend160385 = (Object)new_AST_Send((Object)classreference13392, (Object)symbol44393, 0);((AST_Send)send160385)->info = (AST_Info)info5227;// ~=send160386 = (Object)new_AST_Send((Object)send160383, (Object)symbol44010, 1, (Object)send160385);((AST_Send)send160386)->info = (AST_Info)info5227;method40972 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160386);((AST_Method)method40972)->info = (AST_Info)info5227;methodclosure40875 = (Object)new_Runtime_MethodClosure(method40972);store_method((Type_Class)Behavior, (Type_Symbol)symbol44103, (Runtime_MethodClosure)methodclosure40875);// Behavior>>layout//layout// 	^ layoutinstancevariable16447 = (Object)new_AST_InstVariable(0, L"layout");method40973 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16447);string26528 = (Object)new_Type_String(L"layout");string26529 = (Object)new_Type_String(L"layout\n\t^ layout");smallint26387 = (Object)new_Type_SmallInt(-1);smallint26388 = (Object)new_Type_SmallInt(-1);info5230 = (Object)new_AST_Info((Type_String)string26529,(Type_String)string26528, (Type_SmallInt)smallint26387, (Type_SmallInt)smallint26388);((AST_Method)method40973)->info = (AST_Info)info5230;methodclosure40876 = (Object)new_Runtime_MethodClosure(method40973);store_method((Type_Class)Behavior, (Type_Symbol)symbol44094, (Runtime_MethodClosure)methodclosure40876);// Behavior>>instVariables//instVariables// 	| instVarNames instVars instVar |// 	instVars := self parentInstVariables.// // 	self pInstVarNames do: [ :each |// 		instVars do: [ :var|// 			var name = each ifTrue: [// 				self error: 'Double Declaration of "', each, '"'// 			].// 		].// 		instVar := PInstanceVariable named: each.// 		instVar localId: instVars size.// 		instVars add: instVar.// 	].// 	^ instVars.localvariable26954 = (Object)new_AST_Variable_named(L"instVarNames");localvariable26955 = (Object)new_AST_Variable_named(L"instVars");localvariable26956 = (Object)new_AST_Variable_named(L"instVar");array24037 = (Object)new_Type_Array_with(3, (Object)localvariable26954, (Object)localvariable26955, (Object)localvariable26956);// parentInstVariablessend160387 = (Object)new_AST_Send((Object)Self, (Object)symbol44106, 0);string26530 = (Object)new_Type_String(L"instVariables");string26531 = (Object)new_Type_String(L"instVariables\n\t| instVarNames instVars instVar |\n\tinstVars := self parentInstVariables.\n\n\tself pInstVarNames do: [ :each |\n\t\tinstVars do: [ :var|\n\t\t\tvar name = each ifTrue: [\n\t\t\t\tself error: \'Double Declaration of \"\', each, \'\"\'\n\t\t\t].\n\t\t].\n\t\tinstVar := PInstanceVariable named: each.\n\t\tinstVar localId: instVars size.\n\t\tinstVars add: instVar.\n\t].\n\t^ instVars.");smallint26389 = (Object)new_Type_SmallInt(-1);smallint26390 = (Object)new_Type_SmallInt(-1);info5231 = (Object)new_AST_Info((Type_String)string26531,(Type_String)string26530, (Type_SmallInt)smallint26389, (Type_SmallInt)smallint26390);((AST_Send)send160387)->info = (AST_Info)info5231;assign20136 = (Object)new_AST_Assign((Object)localvariable26955, (Object)send160387);// pInstVarNamessend160388 = (Object)new_AST_Send((Object)Self, (Object)symbol44105, 0);((AST_Send)send160388)->info = (AST_Info)info5231;localvariable26957 = (Object)new_AST_Variable_named(L"each");array24038 = (Object)new_Type_Array_with(1, (Object)localvariable26957);localvariable26958 = (Object)new_AST_Variable_named(L"var");array24039 = (Object)new_Type_Array_with(1, (Object)localvariable26958);// namesend160389 = (Object)new_AST_Send((Object)localvariable26958, (Object)SMB_name, 0);((AST_Send)send160389)->info = (AST_Info)info5231;// =send160390 = (Object)new_AST_Send((Object)send160389, (Object)SMB__equal, 1, (Object)localvariable26957);((AST_Send)send160390)->info = (AST_Info)info5231;symbol44394 = (Object)new_Type_Symbol_cached(L"error:");string26532 = (Object)new_Type_String(L"Double Declaration of \"");constant34595 = (Object)new_AST_Constant((Object)string26532);// ,send160391 = (Object)new_AST_Send((Object)constant34595, (Object)SMB__concat, 1, (Object)localvariable26957);((AST_Send)send160391)->info = (AST_Info)info5231;string26533 = (Object)new_Type_String(L"\"");constant34596 = (Object)new_AST_Constant((Object)string26533);// ,send160392 = (Object)new_AST_Send((Object)send160391, (Object)SMB__concat, 1, (Object)constant34596);((AST_Send)send160392)->info = (AST_Info)info5231;// error:send160393 = (Object)new_AST_Send((Object)Self, (Object)symbol44394, 1, (Object)send160392);((AST_Send)send160393)->info = (AST_Info)info5231;block11694 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160393);// ifTrue:send160394 = (Object)new_AST_Send((Object)send160390, (Object)SMB_ifTrue_, 1, (Object)block11694);((AST_Send)send160394)->info = (AST_Info)info5231;block11695 = (Object)new_AST_Block_with((Type_Array)array24039, (Type_Array)empty_Type_Array, 2, 1, send160394);// do:send160395 = (Object)new_AST_Send((Object)localvariable26955, (Object)symbol44127, 1, (Object)block11695);((AST_Send)send160395)->info = (AST_Info)info5231;classreference13393 = (Object)new_Organization_ClassReference((Type_Class)class6733);symbol44345 = (Object)new_Type_Symbol_cached(L"named:");// named:send160396 = (Object)new_AST_Send((Object)classreference13393, (Object)symbol44345, 1, (Object)localvariable26957);((AST_Send)send160396)->info = (AST_Info)info5231;assign20137 = (Object)new_AST_Assign((Object)localvariable26956, (Object)send160396);symbol44356 = (Object)new_Type_Symbol_cached(L"localId:");// sizesend160397 = (Object)new_AST_Send((Object)localvariable26955, (Object)SMB_size, 0);((AST_Send)send160397)->info = (AST_Info)info5231;// localId:send160398 = (Object)new_AST_Send((Object)localvariable26956, (Object)symbol44356, 1, (Object)send160397);((AST_Send)send160398)->info = (AST_Info)info5231;// add:send160399 = (Object)new_AST_Send((Object)localvariable26955, (Object)symbol44183, 1, (Object)localvariable26956);((AST_Send)send160399)->info = (AST_Info)info5231;block11696 = (Object)new_AST_Block_with((Type_Array)array24038, (Type_Array)empty_Type_Array, 1, 4, send160395, assign20137, send160398, send160399);// do:send160400 = (Object)new_AST_Send((Object)send160388, (Object)symbol44127, 1, (Object)block11696);((AST_Send)send160400)->info = (AST_Info)info5231;method40974 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24037, 3, assign20136, send160400, localvariable26955);((AST_Method)method40974)->info = (AST_Info)info5231;symbol44100 = (Object)new_Type_Symbol_cached(L"instVariables");methodclosure40877 = (Object)new_Runtime_MethodClosure(method40974);store_method((Type_Class)Behavior, (Type_Symbol)symbol44100, (Runtime_MethodClosure)methodclosure40877);// Behavior>>methodDict//methodDict// 	^ methodsmethod40975 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16445);string26534 = (Object)new_Type_String(L"methodDict");string26535 = (Object)new_Type_String(L"methodDict\n\t^ methods");smallint26391 = (Object)new_Type_SmallInt(-1);smallint26392 = (Object)new_Type_SmallInt(-1);info5232 = (Object)new_AST_Info((Type_String)string26535,(Type_String)string26534, (Type_SmallInt)smallint26391, (Type_SmallInt)smallint26392);((AST_Method)method40975)->info = (AST_Info)info5232;symbol44107 = (Object)new_Type_Symbol_cached(L"methodDict");methodclosure40878 = (Object)new_Runtime_MethodClosure(method40975);store_method((Type_Class)Behavior, (Type_Symbol)symbol44107, (Runtime_MethodClosure)methodclosure40878);// Behavior>>includesSelector://includesSelector: selector// 	^ self methodDict includesKey: selectorlocalvariable26959 = (Object)new_AST_Variable_named(L"selector");array24040 = (Object)new_Type_Array_with(1, (Object)localvariable26959);// methodDictsend160401 = (Object)new_AST_Send((Object)Self, (Object)symbol44107, 0);string26536 = (Object)new_Type_String(L"includesSelector:");string26537 = (Object)new_Type_String(L"includesSelector: selector\n\t^ self methodDict includesKey: selector");smallint26393 = (Object)new_Type_SmallInt(-1);smallint26394 = (Object)new_Type_SmallInt(-1);info5233 = (Object)new_AST_Info((Type_String)string26537,(Type_String)string26536, (Type_SmallInt)smallint26393, (Type_SmallInt)smallint26394);((AST_Send)send160401)->info = (AST_Info)info5233;symbol44369 = (Object)new_Type_Symbol_cached(L"includesKey:");// includesKey:send160402 = (Object)new_AST_Send((Object)send160401, (Object)symbol44369, 1, (Object)localvariable26959);((AST_Send)send160402)->info = (AST_Info)info5233;method40976 = (Object)new_AST_Method_with((Type_Array)array24040, (Type_Array)empty_Type_Array, 1, send160402);((AST_Method)method40976)->info = (AST_Info)info5233;methodclosure40879 = (Object)new_Runtime_MethodClosure(method40976);store_method((Type_Class)Behavior, (Type_Symbol)symbol44104, (Runtime_MethodClosure)methodclosure40879);// Behavior>>new//new// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."// // 	^ self basicNew initialize// // basicNewsend160403 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);string26538 = (Object)new_Type_String(L"new");string26539 = (Object)new_Type_String(L"new\n\t\"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable.\"\n\n\t^ self basicNew initialize\n");smallint26395 = (Object)new_Type_SmallInt(-1);smallint26396 = (Object)new_Type_SmallInt(-1);info5234 = (Object)new_AST_Info((Type_String)string26539,(Type_String)string26538, (Type_SmallInt)smallint26395, (Type_SmallInt)smallint26396);((AST_Send)send160403)->info = (AST_Info)info5234;// initializesend160404 = (Object)new_AST_Send((Object)send160403, (Object)symbol44004, 0);((AST_Send)send160404)->info = (AST_Info)info5234;method40977 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160404);((AST_Method)method40977)->info = (AST_Info)info5234;methodclosure40880 = (Object)new_Runtime_MethodClosure(method40977);store_method((Type_Class)Behavior, (Type_Symbol)symbol44095, (Runtime_MethodClosure)methodclosure40880);// Behavior>>new://new: sizeRequested // 	"Answer an initialized instance of this class with the number of indexable// 	variables specified by the argument, sizeRequested."// // 	^ (self basicNew: sizeRequested) initialize  localvariable26960 = (Object)new_AST_Variable_named(L"sizeRequested");array24041 = (Object)new_Type_Array_with(1, (Object)localvariable26960);// basicNew:send160405 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable26960);string26540 = (Object)new_Type_String(L"new:");string26541 = (Object)new_Type_String(L"new: sizeRequested \n\t\"Answer an initialized instance of this class with the number of indexable\n\tvariables specified by the argument, sizeRequested.\"\n\n\t^ (self basicNew: sizeRequested) initialize  ");smallint26397 = (Object)new_Type_SmallInt(-1);smallint26398 = (Object)new_Type_SmallInt(-1);info5235 = (Object)new_AST_Info((Type_String)string26541,(Type_String)string26540, (Type_SmallInt)smallint26397, (Type_SmallInt)smallint26398);((AST_Send)send160405)->info = (AST_Info)info5235;// initializesend160406 = (Object)new_AST_Send((Object)send160405, (Object)symbol44004, 0);((AST_Send)send160406)->info = (AST_Info)info5235;method40978 = (Object)new_AST_Method_with((Type_Array)array24041, (Type_Array)empty_Type_Array, 1, send160406);((AST_Method)method40978)->info = (AST_Info)info5235;methodclosure40881 = (Object)new_Runtime_MethodClosure(method40978);store_method((Type_Class)Behavior, (Type_Symbol)symbol44091, (Runtime_MethodClosure)methodclosure40881);// a PInternalMetaclass P#Behavior>>pinocchioPackage//pinocchioPackage// 	self halt.symbol44395 = (Object)new_Type_Symbol_cached(L"halt");// haltsend160407 = (Object)new_AST_Send((Object)Self, (Object)symbol44395, 0);string26542 = (Object)new_Type_String(L"pinocchioPackage");string26543 = (Object)new_Type_String(L"pinocchioPackage\n\tself halt.");smallint26399 = (Object)new_Type_SmallInt(-1);smallint26400 = (Object)new_Type_SmallInt(-1);info5236 = (Object)new_AST_Info((Type_String)string26543,(Type_String)string26542, (Type_SmallInt)smallint26399, (Type_SmallInt)smallint26400);((AST_Send)send160407)->info = (AST_Info)info5236;method40979 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160407, Self);((AST_Method)method40979)->info = (AST_Info)info5236;symbol44090 = (Object)new_Type_Symbol_cached(L"pinocchioPackage");methodclosure40882 = (Object)new_Runtime_MethodClosure(method40979);store_method((Type_Class)internalmetaclass11, (Type_Symbol)symbol44090, (Runtime_MethodClosure)methodclosure40882);classreference13394 = (Object)new_Organization_ClassReference((Type_Class)class6704);// ASTKeywordMessageDefinition>>parameters//parameters// 	^ parametersmethod40980 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16372);string26544 = (Object)new_Type_String(L"parameters");string26545 = (Object)new_Type_String(L"parameters\n\t^ parameters");smallint26401 = (Object)new_Type_SmallInt(-1);smallint26402 = (Object)new_Type_SmallInt(-1);info5237 = (Object)new_AST_Info((Type_String)string26545,(Type_String)string26544, (Type_SmallInt)smallint26401, (Type_SmallInt)smallint26402);((AST_Method)method40980)->info = (AST_Info)info5237;symbol44211 = (Object)new_Type_Symbol_cached(L"parameters");methodclosure40883 = (Object)new_Runtime_MethodClosure(method40980);store_method((Type_Class)class6704, (Type_Symbol)symbol44211, (Runtime_MethodClosure)methodclosure40883);// ASTKeywordMessageDefinition>>compatibleArgumentsWith://compatibleArgumentsWith: aSelector// 	 parameters size timesRepeat: [:index | // 		(parameters at: index) layout = (aSelector parameters at: index) layout// 			ifFalse: [^ false]// 	].// 	^ truelocalvariable26961 = (Object)new_AST_Variable_named(L"aSelector");array24042 = (Object)new_Type_Array_with(1, (Object)localvariable26961);variable1852 = (Object)new_AST_Variable_named(L"return");array24043 = (Object)new_Type_Array_with(1, (Object)variable1852);// sizesend160408 = (Object)new_AST_Send((Object)instancevariable16372, (Object)SMB_size, 0);string26546 = (Object)new_Type_String(L"compatibleArgumentsWith:");string26547 = (Object)new_Type_String(L"compatibleArgumentsWith: aSelector\n\t parameters size timesRepeat: [:index | \n\t\t(parameters at: index) layout = (aSelector parameters at: index) layout\n\t\t\tifFalse: [^ false]\n\t].\n\t^ true");smallint26403 = (Object)new_Type_SmallInt(-1);smallint26404 = (Object)new_Type_SmallInt(-1);info5238 = (Object)new_AST_Info((Type_String)string26547,(Type_String)string26546, (Type_SmallInt)smallint26403, (Type_SmallInt)smallint26404);((AST_Send)send160408)->info = (AST_Info)info5238;symbol44396 = (Object)new_Type_Symbol_cached(L"timesRepeat:");localvariable26962 = (Object)new_AST_Variable_named(L"index");array24044 = (Object)new_Type_Array_with(1, (Object)localvariable26962);// at:send160409 = (Object)new_AST_Send((Object)instancevariable16372, (Object)SMB_at_, 1, (Object)localvariable26962);((AST_Send)send160409)->info = (AST_Info)info5238;// layoutsend160410 = (Object)new_AST_Send((Object)send160409, (Object)symbol44094, 0);((AST_Send)send160410)->info = (AST_Info)info5238;// parameterssend160411 = (Object)new_AST_Send((Object)localvariable26961, (Object)symbol44211, 0);((AST_Send)send160411)->info = (AST_Info)info5238;// at:send160412 = (Object)new_AST_Send((Object)send160411, (Object)SMB_at_, 1, (Object)localvariable26962);((AST_Send)send160412)->info = (AST_Info)info5238;// layoutsend160413 = (Object)new_AST_Send((Object)send160412, (Object)symbol44094, 0);((AST_Send)send160413)->info = (AST_Info)info5238;// =send160414 = (Object)new_AST_Send((Object)send160410, (Object)SMB__equal, 1, (Object)send160413);((AST_Send)send160414)->info = (AST_Info)info5238;// escape:send160415 = (Object)new_AST_Send((Object)variable1852, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160415)->info = (AST_Info)info5238;block11697 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160415);// ifFalse:send160416 = (Object)new_AST_Send((Object)send160414, (Object)SMB_ifFalse_, 1, (Object)block11697);((AST_Send)send160416)->info = (AST_Info)info5238;block11698 = (Object)new_AST_Block_with((Type_Array)array24044, (Type_Array)empty_Type_Array, 2, 1, send160416);// timesRepeat:send160417 = (Object)new_AST_Send((Object)send160408, (Object)symbol44396, 1, (Object)block11698);((AST_Send)send160417)->info = (AST_Info)info5238;block11699 = (Object)new_AST_Block_with((Type_Array)array24043, (Type_Array)empty_Type_Array, 1, 2, send160417, True_Const);// on:send160418 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11699);method40981 = (Object)new_AST_Method_with((Type_Array)array24042, (Type_Array)empty_Type_Array, 1, send160418);((AST_Method)method40981)->info = (AST_Info)info5238;symbol44245 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");methodclosure40884 = (Object)new_Runtime_MethodClosure(method40981);store_method((Type_Class)class6704, (Type_Symbol)symbol44245, (Runtime_MethodClosure)methodclosure40884);// ASTKeywordMessageDefinition>>compatibleWith://compatibleWith: aSelector // 	(super compatibleWith: aSelector)// 		ifFalse: [^ false].// 	"check if each argument has the same layout"// 	^ self compatibleArgumentsWith: aSelector.localvariable26963 = (Object)new_AST_Variable_named(L"aSelector");array24045 = (Object)new_Type_Array_with(1, (Object)localvariable26963);variable1853 = (Object)new_AST_Variable_named(L"return");array24046 = (Object)new_Type_Array_with(1, (Object)variable1853);symbol44213 = (Object)new_Type_Symbol_cached(L"compatibleWith:");super2458 = (Object)new_AST_Super((Object)symbol44213, 1, (Object)localvariable26963);// escape:send160419 = (Object)new_AST_Send((Object)variable1853, (Object)SMB_escape_, 1, (Object)False_Const);string26548 = (Object)new_Type_String(L"compatibleWith:");string26549 = (Object)new_Type_String(L"compatibleWith: aSelector \n\t(super compatibleWith: aSelector)\n\t\tifFalse: [^ false].\n\t\"check if each argument has the same layout\"\n\t^ self compatibleArgumentsWith: aSelector.");smallint26405 = (Object)new_Type_SmallInt(-1);smallint26406 = (Object)new_Type_SmallInt(-1);info5239 = (Object)new_AST_Info((Type_String)string26549,(Type_String)string26548, (Type_SmallInt)smallint26405, (Type_SmallInt)smallint26406);((AST_Send)send160419)->info = (AST_Info)info5239;block11700 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160419);// ifFalse:send160420 = (Object)new_AST_Send((Object)super2458, (Object)SMB_ifFalse_, 1, (Object)block11700);((AST_Send)send160420)->info = (AST_Info)info5239;// compatibleArgumentsWith:send160421 = (Object)new_AST_Send((Object)Self, (Object)symbol44245, 1, (Object)localvariable26963);((AST_Send)send160421)->info = (AST_Info)info5239;block11701 = (Object)new_AST_Block_with((Type_Array)array24046, (Type_Array)empty_Type_Array, 1, 2, send160420, send160421);// on:send160422 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11701);method40982 = (Object)new_AST_Method_with((Type_Array)array24045, (Type_Array)empty_Type_Array, 1, send160422);((AST_Method)method40982)->info = (AST_Info)info5239;methodclosure40885 = (Object)new_Runtime_MethodClosure(method40982);store_method((Type_Class)class6704, (Type_Symbol)symbol44213, (Runtime_MethodClosure)methodclosure40885);// ASTKeywordMessageDefinition>>initialize//initialize// 	super initialize.// 	parameters := OrderedCollection new.super2459 = (Object)new_AST_Super((Object)symbol44004, 0);// newsend160423 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26550 = (Object)new_Type_String(L"initialize");string26551 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tparameters := OrderedCollection new.");smallint26407 = (Object)new_Type_SmallInt(-1);smallint26408 = (Object)new_Type_SmallInt(-1);info5240 = (Object)new_AST_Info((Type_String)string26551,(Type_String)string26550, (Type_SmallInt)smallint26407, (Type_SmallInt)smallint26408);((AST_Send)send160423)->info = (AST_Info)info5240;assign20138 = (Object)new_AST_Assign((Object)instancevariable16372, (Object)send160423);method40983 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super2459, assign20138, Self);((AST_Method)method40983)->info = (AST_Info)info5240;methodclosure40886 = (Object)new_Runtime_MethodClosure(method40983);store_method((Type_Class)class6704, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40886);// ASTKeywordMessageDefinition>>parameters://parameters: aCollection// 	self halt.// 	parameters := aCollectionlocalvariable26964 = (Object)new_AST_Variable_named(L"aCollection");array24047 = (Object)new_Type_Array_with(1, (Object)localvariable26964);// haltsend160424 = (Object)new_AST_Send((Object)Self, (Object)symbol44395, 0);string26552 = (Object)new_Type_String(L"parameters:");string26553 = (Object)new_Type_String(L"parameters: aCollection\n\tself halt.\n\tparameters := aCollection");smallint26409 = (Object)new_Type_SmallInt(-1);smallint26410 = (Object)new_Type_SmallInt(-1);info5241 = (Object)new_AST_Info((Type_String)string26553,(Type_String)string26552, (Type_SmallInt)smallint26409, (Type_SmallInt)smallint26410);((AST_Send)send160424)->info = (AST_Info)info5241;assign20139 = (Object)new_AST_Assign((Object)instancevariable16372, (Object)localvariable26964);method40984 = (Object)new_AST_Method_with((Type_Array)array24047, (Type_Array)empty_Type_Array, 3, send160424, assign20139, Self);((AST_Method)method40984)->info = (AST_Info)info5241;symbol44242 = (Object)new_Type_Symbol_cached(L"parameters:");methodclosure40887 = (Object)new_Runtime_MethodClosure(method40984);store_method((Type_Class)class6704, (Type_Symbol)symbol44242, (Runtime_MethodClosure)methodclosure40887);classreference13395 = (Object)new_Organization_ClassReference((Type_Class)class6706);// ASTUnaryMessageDefinition>>selectorSymbol//selectorSymbol// 	^ self selector selectorSymbolsymbol44115 = (Object)new_Type_Symbol_cached(L"selector");// selectorsend160425 = (Object)new_AST_Send((Object)Self, (Object)symbol44115, 0);string26554 = (Object)new_Type_String(L"selectorSymbol");string26555 = (Object)new_Type_String(L"selectorSymbol\n\t^ self selector selectorSymbol");smallint26411 = (Object)new_Type_SmallInt(-1);smallint26412 = (Object)new_Type_SmallInt(-1);info5242 = (Object)new_AST_Info((Type_String)string26555,(Type_String)string26554, (Type_SmallInt)smallint26411, (Type_SmallInt)smallint26412);((AST_Send)send160425)->info = (AST_Info)info5242;symbol44219 = (Object)new_Type_Symbol_cached(L"selectorSymbol");// selectorSymbolsend160426 = (Object)new_AST_Send((Object)send160425, (Object)symbol44219, 0);((AST_Send)send160426)->info = (AST_Info)info5242;method40985 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160426);((AST_Method)method40985)->info = (AST_Info)info5242;methodclosure40888 = (Object)new_Runtime_MethodClosure(method40985);store_method((Type_Class)class6706, (Type_Symbol)symbol44219, (Runtime_MethodClosure)methodclosure40888);classreference13396 = (Object)new_Organization_ClassReference((Type_Class)class6708);// ASTAssignmentExpression>>variable//variable// 	^ variablemethod40986 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16373);string26556 = (Object)new_Type_String(L"variable");string26557 = (Object)new_Type_String(L"variable\n\t^ variable");smallint26413 = (Object)new_Type_SmallInt(-1);smallint26414 = (Object)new_Type_SmallInt(-1);info5243 = (Object)new_AST_Info((Type_String)string26557,(Type_String)string26556, (Type_SmallInt)smallint26413, (Type_SmallInt)smallint26414);((AST_Method)method40986)->info = (AST_Info)info5243;symbol44202 = (Object)new_Type_Symbol_cached(L"variable");methodclosure40889 = (Object)new_Runtime_MethodClosure(method40986);store_method((Type_Class)class6708, (Type_Symbol)symbol44202, (Runtime_MethodClosure)methodclosure40889);// ASTAssignmentExpression>>expression://expression: anObject// 	expression := anObjectlocalvariable26965 = (Object)new_AST_Variable_named(L"anObject");array24048 = (Object)new_Type_Array_with(1, (Object)localvariable26965);assign20140 = (Object)new_AST_Assign((Object)instancevariable16374, (Object)localvariable26965);method40987 = (Object)new_AST_Method_with((Type_Array)array24048, (Type_Array)empty_Type_Array, 2, assign20140, Self);string26558 = (Object)new_Type_String(L"expression:");string26559 = (Object)new_Type_String(L"expression: anObject\n\texpression := anObject");smallint26415 = (Object)new_Type_SmallInt(-1);smallint26416 = (Object)new_Type_SmallInt(-1);info5244 = (Object)new_AST_Info((Type_String)string26559,(Type_String)string26558, (Type_SmallInt)smallint26415, (Type_SmallInt)smallint26416);((AST_Method)method40987)->info = (AST_Info)info5244;symbol44203 = (Object)new_Type_Symbol_cached(L"expression:");methodclosure40890 = (Object)new_Runtime_MethodClosure(method40987);store_method((Type_Class)class6708, (Type_Symbol)symbol44203, (Runtime_MethodClosure)methodclosure40890);// ASTAssignmentExpression>>expression//expression// 	^ expressionmethod40988 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16374);string26560 = (Object)new_Type_String(L"expression");string26561 = (Object)new_Type_String(L"expression\n\t^ expression");smallint26417 = (Object)new_Type_SmallInt(-1);smallint26418 = (Object)new_Type_SmallInt(-1);info5245 = (Object)new_AST_Info((Type_String)string26561,(Type_String)string26560, (Type_SmallInt)smallint26417, (Type_SmallInt)smallint26418);((AST_Method)method40988)->info = (AST_Info)info5245;symbol44200 = (Object)new_Type_Symbol_cached(L"expression");methodclosure40891 = (Object)new_Runtime_MethodClosure(method40988);store_method((Type_Class)class6708, (Type_Symbol)symbol44200, (Runtime_MethodClosure)methodclosure40891);// ASTAssignmentExpression>>variable://variable: anObject// 	variable := anObjectlocalvariable26966 = (Object)new_AST_Variable_named(L"anObject");array24049 = (Object)new_Type_Array_with(1, (Object)localvariable26966);assign20141 = (Object)new_AST_Assign((Object)instancevariable16373, (Object)localvariable26966);method40989 = (Object)new_AST_Method_with((Type_Array)array24049, (Type_Array)empty_Type_Array, 2, assign20141, Self);string26562 = (Object)new_Type_String(L"variable:");string26563 = (Object)new_Type_String(L"variable: anObject\n\tvariable := anObject");smallint26419 = (Object)new_Type_SmallInt(-1);smallint26420 = (Object)new_Type_SmallInt(-1);info5246 = (Object)new_AST_Info((Type_String)string26563,(Type_String)string26562, (Type_SmallInt)smallint26419, (Type_SmallInt)smallint26420);((AST_Method)method40989)->info = (AST_Info)info5246;symbol44201 = (Object)new_Type_Symbol_cached(L"variable:");methodclosure40892 = (Object)new_Runtime_MethodClosure(method40989);store_method((Type_Class)class6708, (Type_Symbol)symbol44201, (Runtime_MethodClosure)methodclosure40892);classreference13397 = (Object)new_Organization_ClassReference((Type_Class)class6710);// ASTArray>>literals://literals: aCollection// 	literals := aCollectionlocalvariable26967 = (Object)new_AST_Variable_named(L"aCollection");array24050 = (Object)new_Type_Array_with(1, (Object)localvariable26967);assign20142 = (Object)new_AST_Assign((Object)instancevariable16375, (Object)localvariable26967);method40990 = (Object)new_AST_Method_with((Type_Array)array24050, (Type_Array)empty_Type_Array, 2, assign20142, Self);string26564 = (Object)new_Type_String(L"literals:");string26565 = (Object)new_Type_String(L"literals: aCollection\n\tliterals := aCollection");smallint26421 = (Object)new_Type_SmallInt(-1);smallint26422 = (Object)new_Type_SmallInt(-1);info5247 = (Object)new_AST_Info((Type_String)string26565,(Type_String)string26564, (Type_SmallInt)smallint26421, (Type_SmallInt)smallint26422);((AST_Method)method40990)->info = (AST_Info)info5247;symbol44171 = (Object)new_Type_Symbol_cached(L"literals:");methodclosure40893 = (Object)new_Runtime_MethodClosure(method40990);store_method((Type_Class)class6710, (Type_Symbol)symbol44171, (Runtime_MethodClosure)methodclosure40893);// ASTArray>>literals//literals// 	^ literalsmethod40991 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16375);string26566 = (Object)new_Type_String(L"literals");string26567 = (Object)new_Type_String(L"literals\n\t^ literals");smallint26423 = (Object)new_Type_SmallInt(-1);smallint26424 = (Object)new_Type_SmallInt(-1);info5248 = (Object)new_AST_Info((Type_String)string26567,(Type_String)string26566, (Type_SmallInt)smallint26423, (Type_SmallInt)smallint26424);((AST_Method)method40991)->info = (AST_Info)info5248;symbol44172 = (Object)new_Type_Symbol_cached(L"literals");methodclosure40894 = (Object)new_Runtime_MethodClosure(method40991);store_method((Type_Class)class6710, (Type_Symbol)symbol44172, (Runtime_MethodClosure)methodclosure40894);// ASTArray>>isEmpty//isEmpty// 	^ self literals isEmpty// literalssend160427 = (Object)new_AST_Send((Object)Self, (Object)symbol44172, 0);string26568 = (Object)new_Type_String(L"isEmpty");string26569 = (Object)new_Type_String(L"isEmpty\n\t^ self literals isEmpty");smallint26425 = (Object)new_Type_SmallInt(-1);smallint26426 = (Object)new_Type_SmallInt(-1);info5249 = (Object)new_AST_Info((Type_String)string26569,(Type_String)string26568, (Type_SmallInt)smallint26425, (Type_SmallInt)smallint26426);((AST_Send)send160427)->info = (AST_Info)info5249;// isEmptysend160428 = (Object)new_AST_Send((Object)send160427, (Object)symbol44129, 0);((AST_Send)send160428)->info = (AST_Info)info5249;method40992 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160428);((AST_Method)method40992)->info = (AST_Info)info5249;methodclosure40895 = (Object)new_Runtime_MethodClosure(method40992);store_method((Type_Class)class6710, (Type_Symbol)symbol44129, (Runtime_MethodClosure)methodclosure40895);classreference13398 = (Object)new_Organization_ClassReference((Type_Class)class6711);// ASTSelf>>printOn://printOn: aStream// 	aStream nextPutAll: 'self'.localvariable26968 = (Object)new_AST_Variable_named(L"aStream");array24051 = (Object)new_Type_Array_with(1, (Object)localvariable26968);string26570 = (Object)new_Type_String(L"self");constant34597 = (Object)new_AST_Constant((Object)string26570);// nextPutAll:send160429 = (Object)new_AST_Send((Object)localvariable26968, (Object)symbol44382, 1, (Object)constant34597);string26571 = (Object)new_Type_String(L"printOn:");string26572 = (Object)new_Type_String(L"printOn: aStream\n\taStream nextPutAll: \'self\'.");smallint26427 = (Object)new_Type_SmallInt(-1);smallint26428 = (Object)new_Type_SmallInt(-1);info5250 = (Object)new_AST_Info((Type_String)string26572,(Type_String)string26571, (Type_SmallInt)smallint26427, (Type_SmallInt)smallint26428);((AST_Send)send160429)->info = (AST_Info)info5250;method40993 = (Object)new_AST_Method_with((Type_Array)array24051, (Type_Array)empty_Type_Array, 2, send160429, Self);((AST_Method)method40993)->info = (AST_Info)info5250;methodclosure40896 = (Object)new_Runtime_MethodClosure(method40993);store_method((Type_Class)class6711, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40896);classreference13399 = (Object)new_Organization_ClassReference((Type_Class)class6712);// ASTBraceExpression>>expressions://expressions: newExpressions// 	expressions := newExpressionslocalvariable26969 = (Object)new_AST_Variable_named(L"newExpressions");array24052 = (Object)new_Type_Array_with(1, (Object)localvariable26969);assign20143 = (Object)new_AST_Assign((Object)instancevariable16376, (Object)localvariable26969);method40994 = (Object)new_AST_Method_with((Type_Array)array24052, (Type_Array)empty_Type_Array, 2, assign20143, Self);string26573 = (Object)new_Type_String(L"expressions:");string26574 = (Object)new_Type_String(L"expressions: newExpressions\n\texpressions := newExpressions");smallint26429 = (Object)new_Type_SmallInt(-1);smallint26430 = (Object)new_Type_SmallInt(-1);info5251 = (Object)new_AST_Info((Type_String)string26574,(Type_String)string26573, (Type_SmallInt)smallint26429, (Type_SmallInt)smallint26430);((AST_Method)method40994)->info = (AST_Info)info5251;symbol44370 = (Object)new_Type_Symbol_cached(L"expressions:");methodclosure40897 = (Object)new_Runtime_MethodClosure(method40994);store_method((Type_Class)class6712, (Type_Symbol)symbol44370, (Runtime_MethodClosure)methodclosure40897);// ASTBraceExpression>>hasReturnExpression//hasReturnExpression// 	self expressions do: [ :el | // 		el isReturnExpression // 			or: [ el hasReturnExpression ]// 			ifTrue: [ ^ true ] ].// 	^ falsevariable1854 = (Object)new_AST_Variable_named(L"return");array24053 = (Object)new_Type_Array_with(1, (Object)variable1854);symbol44397 = (Object)new_Type_Symbol_cached(L"expressions");// expressionssend160430 = (Object)new_AST_Send((Object)Self, (Object)symbol44397, 0);string26575 = (Object)new_Type_String(L"hasReturnExpression");string26576 = (Object)new_Type_String(L"hasReturnExpression\n\tself expressions do: [ :el | \n\t\tel isReturnExpression \n\t\t\tor: [ el hasReturnExpression ]\n\t\t\tifTrue: [ ^ true ] ].\n\t^ false");smallint26431 = (Object)new_Type_SmallInt(-1);smallint26432 = (Object)new_Type_SmallInt(-1);info5252 = (Object)new_AST_Info((Type_String)string26576,(Type_String)string26575, (Type_SmallInt)smallint26431, (Type_SmallInt)smallint26432);((AST_Send)send160430)->info = (AST_Info)info5252;localvariable26970 = (Object)new_AST_Variable_named(L"el");array24054 = (Object)new_Type_Array_with(1, (Object)localvariable26970);// isReturnExpressionsend160431 = (Object)new_AST_Send((Object)localvariable26970, (Object)symbol44006, 0);((AST_Send)send160431)->info = (AST_Info)info5252;symbol44398 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");symbol44169 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");// hasReturnExpressionsend160432 = (Object)new_AST_Send((Object)localvariable26970, (Object)symbol44169, 0);((AST_Send)send160432)->info = (AST_Info)info5252;block11702 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160432);// escape:send160433 = (Object)new_AST_Send((Object)variable1854, (Object)SMB_escape_, 1, (Object)True_Const);((AST_Send)send160433)->info = (AST_Info)info5252;block11703 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160433);// or:ifTrue:send160434 = (Object)new_AST_Send((Object)send160431, (Object)symbol44398, 2, (Object)block11702, (Object)block11703);((AST_Send)send160434)->info = (AST_Info)info5252;block11704 = (Object)new_AST_Block_with((Type_Array)array24054, (Type_Array)empty_Type_Array, 2, 1, send160434);// do:send160435 = (Object)new_AST_Send((Object)send160430, (Object)symbol44127, 1, (Object)block11704);((AST_Send)send160435)->info = (AST_Info)info5252;block11705 = (Object)new_AST_Block_with((Type_Array)array24053, (Type_Array)empty_Type_Array, 1, 2, send160435, False_Const);// on:send160436 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11705);method40995 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160436);((AST_Method)method40995)->info = (AST_Info)info5252;methodclosure40898 = (Object)new_Runtime_MethodClosure(method40995);store_method((Type_Class)class6712, (Type_Symbol)symbol44169, (Runtime_MethodClosure)methodclosure40898);classreference13400 = (Object)new_Organization_ClassReference((Type_Class)class6713);// ASTVariable>>hash//hash// 	^ self name hash// namesend160437 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);string26577 = (Object)new_Type_String(L"hash");string26578 = (Object)new_Type_String(L"hash\n\t^ self name hash");smallint26433 = (Object)new_Type_SmallInt(-1);smallint26434 = (Object)new_Type_SmallInt(-1);info5253 = (Object)new_AST_Info((Type_String)string26578,(Type_String)string26577, (Type_SmallInt)smallint26433, (Type_SmallInt)smallint26434);((AST_Send)send160437)->info = (AST_Info)info5253;// hashsend160438 = (Object)new_AST_Send((Object)send160437, (Object)SMB_hash, 0);((AST_Send)send160438)->info = (AST_Info)info5253;method40996 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160438);((AST_Method)method40996)->info = (AST_Info)info5253;methodclosure40899 = (Object)new_Runtime_MethodClosure(method40996);store_method((Type_Class)class6713, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure40899);// ASTVariable>>asPVariable//asPVariable // 	^PLocalVariable new name: self nameclassreference13401 = (Object)new_Organization_ClassReference((Type_Class)class6734);// LocalVariable>>key//key// 	^ keymethod40997 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16405);string26579 = (Object)new_Type_String(L"key");string26580 = (Object)new_Type_String(L"key\n\t^ key");smallint26435 = (Object)new_Type_SmallInt(-1);smallint26436 = (Object)new_Type_SmallInt(-1);info5254 = (Object)new_AST_Info((Type_String)string26580,(Type_String)string26579, (Type_SmallInt)smallint26435, (Type_SmallInt)smallint26436);((AST_Method)method40997)->info = (AST_Info)info5254;symbol44365 = (Object)new_Type_Symbol_cached(L"key");methodclosure40900 = (Object)new_Runtime_MethodClosure(method40997);store_method((Type_Class)class6734, (Type_Symbol)symbol44365, (Runtime_MethodClosure)methodclosure40900);// LocalVariable>>key://key: anObject// 	key := anObjectlocalvariable26971 = (Object)new_AST_Variable_named(L"anObject");array24055 = (Object)new_Type_Array_with(1, (Object)localvariable26971);assign20144 = (Object)new_AST_Assign((Object)instancevariable16405, (Object)localvariable26971);method40998 = (Object)new_AST_Method_with((Type_Array)array24055, (Type_Array)empty_Type_Array, 2, assign20144, Self);string26581 = (Object)new_Type_String(L"key:");string26582 = (Object)new_Type_String(L"key: anObject\n\tkey := anObject");smallint26437 = (Object)new_Type_SmallInt(-1);smallint26438 = (Object)new_Type_SmallInt(-1);info5255 = (Object)new_AST_Info((Type_String)string26582,(Type_String)string26581, (Type_SmallInt)smallint26437, (Type_SmallInt)smallint26438);((AST_Method)method40998)->info = (AST_Info)info5255;symbol44366 = (Object)new_Type_Symbol_cached(L"key:");methodclosure40901 = (Object)new_Runtime_MethodClosure(method40998);store_method((Type_Class)class6734, (Type_Symbol)symbol44366, (Runtime_MethodClosure)methodclosure40901);// newsend160439 = (Object)new_AST_Send((Object)classreference13401, (Object)symbol44095, 0);string26583 = (Object)new_Type_String(L"asPVariable");string26584 = (Object)new_Type_String(L"asPVariable \n\t^PLocalVariable new name: self name");smallint26439 = (Object)new_Type_SmallInt(-1);smallint26440 = (Object)new_Type_SmallInt(-1);info5256 = (Object)new_AST_Info((Type_String)string26584,(Type_String)string26583, (Type_SmallInt)smallint26439, (Type_SmallInt)smallint26440);((AST_Send)send160439)->info = (AST_Info)info5256;symbol44204 = (Object)new_Type_Symbol_cached(L"name:");// namesend160440 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160440)->info = (AST_Info)info5256;// name:send160441 = (Object)new_AST_Send((Object)send160439, (Object)symbol44204, 1, (Object)send160440);((AST_Send)send160441)->info = (AST_Info)info5256;method40999 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160441);((AST_Method)method40999)->info = (AST_Info)info5256;symbol44207 = (Object)new_Type_Symbol_cached(L"asPVariable");methodclosure40902 = (Object)new_Runtime_MethodClosure(method40999);store_method((Type_Class)class6713, (Type_Symbol)symbol44207, (Runtime_MethodClosure)methodclosure40902);// ASTVariable>>=//= other // 	^ self name = other name. localvariable26972 = (Object)new_AST_Variable_named(L"other");array24056 = (Object)new_Type_Array_with(1, (Object)localvariable26972);// namesend160442 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);string26585 = (Object)new_Type_String(L"=");string26586 = (Object)new_Type_String(L"= other \n\t^ self name = other name. ");smallint26441 = (Object)new_Type_SmallInt(-1);smallint26442 = (Object)new_Type_SmallInt(-1);info5257 = (Object)new_AST_Info((Type_String)string26586,(Type_String)string26585, (Type_SmallInt)smallint26441, (Type_SmallInt)smallint26442);((AST_Send)send160442)->info = (AST_Info)info5257;// namesend160443 = (Object)new_AST_Send((Object)localvariable26972, (Object)SMB_name, 0);((AST_Send)send160443)->info = (AST_Info)info5257;// =send160444 = (Object)new_AST_Send((Object)send160442, (Object)SMB__equal, 1, (Object)send160443);((AST_Send)send160444)->info = (AST_Info)info5257;method41000 = (Object)new_AST_Method_with((Type_Array)array24056, (Type_Array)empty_Type_Array, 1, send160444);((AST_Method)method41000)->info = (AST_Info)info5257;methodclosure40903 = (Object)new_Runtime_MethodClosure(method41000);store_method((Type_Class)class6713, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure40903);// ASTVariable>>printOn://printOn: aStream// 	super printOn: aStream.// 	aStream nextPutAll: '(';// 		nextPutAll: self name;// 		nextPutAll: ')'// localvariable26973 = (Object)new_AST_Variable_named(L"aStream");array24057 = (Object)new_Type_Array_with(1, (Object)localvariable26973);super2460 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable26973);localvariable26974 = (Object)new_AST_Variable_named(L"receiver");array24058 = (Object)new_Type_Array_with(1, (Object)localvariable26974);string26587 = (Object)new_Type_String(L"(");constant34598 = (Object)new_AST_Constant((Object)string26587);// nextPutAll:send160445 = (Object)new_AST_Send((Object)localvariable26974, (Object)symbol44382, 1, (Object)constant34598);string26588 = (Object)new_Type_String(L"printOn:");string26589 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \'(\';\n\t\tnextPutAll: self name;\n\t\tnextPutAll: \')\'\n");smallint26443 = (Object)new_Type_SmallInt(-1);smallint26444 = (Object)new_Type_SmallInt(-1);info5258 = (Object)new_AST_Info((Type_String)string26589,(Type_String)string26588, (Type_SmallInt)smallint26443, (Type_SmallInt)smallint26444);((AST_Send)send160445)->info = (AST_Info)info5258;// namesend160446 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160446)->info = (AST_Info)info5258;// nextPutAll:send160447 = (Object)new_AST_Send((Object)localvariable26974, (Object)symbol44382, 1, (Object)send160446);((AST_Send)send160447)->info = (AST_Info)info5258;string26590 = (Object)new_Type_String(L")");constant34599 = (Object)new_AST_Constant((Object)string26590);// nextPutAll:send160448 = (Object)new_AST_Send((Object)localvariable26974, (Object)symbol44382, 1, (Object)constant34599);((AST_Send)send160448)->info = (AST_Info)info5258;block11706 = (Object)new_AST_Block_with((Type_Array)array24058, (Type_Array)empty_Type_Array, 1, 3, send160445, send160447, send160448);// value:send160449 = (Object)new_AST_Send((Object)block11706, (Object)SMB_value_, 1, (Object)localvariable26973);((AST_Send)send160449)->info = (AST_Info)info5258;method41001 = (Object)new_AST_Method_with((Type_Array)array24057, (Type_Array)empty_Type_Array, 3, super2460, send160449, Self);((AST_Method)method41001)->info = (AST_Info)info5258;methodclosure40904 = (Object)new_Runtime_MethodClosure(method41001);store_method((Type_Class)class6713, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40904);// ASTVariable>>name://name: anObject// 	name := anObjectlocalvariable26975 = (Object)new_AST_Variable_named(L"anObject");array24059 = (Object)new_Type_Array_with(1, (Object)localvariable26975);assign20145 = (Object)new_AST_Assign((Object)instancevariable16377, (Object)localvariable26975);method41002 = (Object)new_AST_Method_with((Type_Array)array24059, (Type_Array)empty_Type_Array, 2, assign20145, Self);string26591 = (Object)new_Type_String(L"name:");string26592 = (Object)new_Type_String(L"name: anObject\n\tname := anObject");smallint26445 = (Object)new_Type_SmallInt(-1);smallint26446 = (Object)new_Type_SmallInt(-1);info5259 = (Object)new_AST_Info((Type_String)string26592,(Type_String)string26591, (Type_SmallInt)smallint26445, (Type_SmallInt)smallint26446);((AST_Method)method41002)->info = (AST_Info)info5259;methodclosure40905 = (Object)new_Runtime_MethodClosure(method41002);store_method((Type_Class)class6713, (Type_Symbol)symbol44204, (Runtime_MethodClosure)methodclosure40905);// ASTVariable>>combineTypeWith://combineTypeWith: anObject// 	self layout combineWith: anObject layout.localvariable26976 = (Object)new_AST_Variable_named(L"anObject");array24060 = (Object)new_Type_Array_with(1, (Object)localvariable26976);// layoutsend160450 = (Object)new_AST_Send((Object)Self, (Object)symbol44094, 0);string26593 = (Object)new_Type_String(L"combineTypeWith:");string26594 = (Object)new_Type_String(L"combineTypeWith: anObject\n\tself layout combineWith: anObject layout.");smallint26447 = (Object)new_Type_SmallInt(-1);smallint26448 = (Object)new_Type_SmallInt(-1);info5260 = (Object)new_AST_Info((Type_String)string26594,(Type_String)string26593, (Type_SmallInt)smallint26447, (Type_SmallInt)smallint26448);((AST_Send)send160450)->info = (AST_Info)info5260;symbol44399 = (Object)new_Type_Symbol_cached(L"combineWith:");// layoutsend160451 = (Object)new_AST_Send((Object)localvariable26976, (Object)symbol44094, 0);((AST_Send)send160451)->info = (AST_Info)info5260;// combineWith:send160452 = (Object)new_AST_Send((Object)send160450, (Object)symbol44399, 1, (Object)send160451);((AST_Send)send160452)->info = (AST_Info)info5260;method41003 = (Object)new_AST_Method_with((Type_Array)array24060, (Type_Array)empty_Type_Array, 2, send160452, Self);((AST_Method)method41003)->info = (AST_Info)info5260;symbol44208 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");methodclosure40906 = (Object)new_Runtime_MethodClosure(method41003);store_method((Type_Class)class6713, (Type_Symbol)symbol44208, (Runtime_MethodClosure)methodclosure40906);// ASTVariable>>initialize//initialize// 	super initialize.super2461 = (Object)new_AST_Super((Object)symbol44004, 0);method41004 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super2461, Self);string26595 = (Object)new_Type_String(L"initialize");string26596 = (Object)new_Type_String(L"initialize\n\tsuper initialize.");smallint26449 = (Object)new_Type_SmallInt(-1);smallint26450 = (Object)new_Type_SmallInt(-1);info5261 = (Object)new_AST_Info((Type_String)string26596,(Type_String)string26595, (Type_SmallInt)smallint26449, (Type_SmallInt)smallint26450);((AST_Method)method41004)->info = (AST_Info)info5261;methodclosure40907 = (Object)new_Runtime_MethodClosure(method41004);store_method((Type_Class)class6713, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40907);// ASTVariable>>hasSameTypeAs://hasSameTypeAs: anObject// 	^ self layout isSameTypeAs: anObject layout localvariable26977 = (Object)new_AST_Variable_named(L"anObject");array24061 = (Object)new_Type_Array_with(1, (Object)localvariable26977);// layoutsend160453 = (Object)new_AST_Send((Object)Self, (Object)symbol44094, 0);string26597 = (Object)new_Type_String(L"hasSameTypeAs:");string26598 = (Object)new_Type_String(L"hasSameTypeAs: anObject\n\t^ self layout isSameTypeAs: anObject layout ");smallint26451 = (Object)new_Type_SmallInt(-1);smallint26452 = (Object)new_Type_SmallInt(-1);info5262 = (Object)new_AST_Info((Type_String)string26598,(Type_String)string26597, (Type_SmallInt)smallint26451, (Type_SmallInt)smallint26452);((AST_Send)send160453)->info = (AST_Info)info5262;symbol44400 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");// layoutsend160454 = (Object)new_AST_Send((Object)localvariable26977, (Object)symbol44094, 0);((AST_Send)send160454)->info = (AST_Info)info5262;// isSameTypeAs:send160455 = (Object)new_AST_Send((Object)send160453, (Object)symbol44400, 1, (Object)send160454);((AST_Send)send160455)->info = (AST_Info)info5262;method41005 = (Object)new_AST_Method_with((Type_Array)array24061, (Type_Array)empty_Type_Array, 1, send160455);((AST_Method)method41005)->info = (AST_Info)info5262;symbol44205 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");methodclosure40908 = (Object)new_Runtime_MethodClosure(method41005);store_method((Type_Class)class6713, (Type_Symbol)symbol44205, (Runtime_MethodClosure)methodclosure40908);// ASTVariable>>name//name// 	^ namemethod41006 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16377);string26599 = (Object)new_Type_String(L"name");string26600 = (Object)new_Type_String(L"name\n\t^ name");smallint26453 = (Object)new_Type_SmallInt(-1);smallint26454 = (Object)new_Type_SmallInt(-1);info5263 = (Object)new_AST_Info((Type_String)string26600,(Type_String)string26599, (Type_SmallInt)smallint26453, (Type_SmallInt)smallint26454);((AST_Method)method41006)->info = (AST_Info)info5263;methodclosure40909 = (Object)new_Runtime_MethodClosure(method41006);store_method((Type_Class)class6713, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure40909);classreference13402 = (Object)new_Organization_ClassReference((Type_Class)class6714);// ASTCharacter>>char//char// 	^ charmethod41007 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16379);string26601 = (Object)new_Type_String(L"char");string26602 = (Object)new_Type_String(L"char\n\t^ char");smallint26455 = (Object)new_Type_SmallInt(-1);smallint26456 = (Object)new_Type_SmallInt(-1);info5264 = (Object)new_AST_Info((Type_String)string26602,(Type_String)string26601, (Type_SmallInt)smallint26455, (Type_SmallInt)smallint26456);((AST_Method)method41007)->info = (AST_Info)info5264;symbol44352 = (Object)new_Type_Symbol_cached(L"char");methodclosure40910 = (Object)new_Runtime_MethodClosure(method41007);store_method((Type_Class)class6714, (Type_Symbol)symbol44352, (Runtime_MethodClosure)methodclosure40910);// ASTCharacter>>asPCharacter//asPCharacter// 	^PCharacter new char: self charclassreference13403 = (Object)new_Organization_ClassReference((Type_Class)Type_Character_Class);// Character>>charCode//charCode// 	^ self asSmallInt.// asSmallIntsend160456 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);string26603 = (Object)new_Type_String(L"charCode");string26604 = (Object)new_Type_String(L"charCode\n\t^ self asSmallInt.");smallint26457 = (Object)new_Type_SmallInt(-1);smallint26458 = (Object)new_Type_SmallInt(-1);info5265 = (Object)new_AST_Info((Type_String)string26604,(Type_String)string26603, (Type_SmallInt)smallint26457, (Type_SmallInt)smallint26458);((AST_Send)send160456)->info = (AST_Info)info5265;method41008 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160456);((AST_Method)method41008)->info = (AST_Info)info5265;symbol44147 = (Object)new_Type_Symbol_cached(L"charCode");methodclosure40911 = (Object)new_Runtime_MethodClosure(method41008);store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol44147, (Runtime_MethodClosure)methodclosure40911);// Character>>max://max: aMagnitude // 	"Answer the receiver or the argument, whichever has the greater // 	magnitude."// // 	self > aMagnitude// 		ifTrue: [^self]// 		ifFalse: [^aMagnitude]localvariable26978 = (Object)new_AST_Variable_named(L"aMagnitude");array24062 = (Object)new_Type_Array_with(1, (Object)localvariable26978);variable1855 = (Object)new_AST_Variable_named(L"return");array24063 = (Object)new_Type_Array_with(1, (Object)variable1855);// >send160457 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable26978);string26605 = (Object)new_Type_String(L"max:");string26606 = (Object)new_Type_String(L"max: aMagnitude \n\t\"Answer the receiver or the argument, whichever has the greater \n\tmagnitude.\"\n\n\tself > aMagnitude\n\t\tifTrue: [^self]\n\t\tifFalse: [^aMagnitude]");smallint26459 = (Object)new_Type_SmallInt(-1);smallint26460 = (Object)new_Type_SmallInt(-1);info5266 = (Object)new_AST_Info((Type_String)string26606,(Type_String)string26605, (Type_SmallInt)smallint26459, (Type_SmallInt)smallint26460);((AST_Send)send160457)->info = (AST_Info)info5266;// escape:send160458 = (Object)new_AST_Send((Object)variable1855, (Object)SMB_escape_, 1, (Object)Self);((AST_Send)send160458)->info = (AST_Info)info5266;block11707 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160458);// escape:send160459 = (Object)new_AST_Send((Object)variable1855, (Object)SMB_escape_, 1, (Object)localvariable26978);((AST_Send)send160459)->info = (AST_Info)info5266;block11708 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160459);// ifTrue:ifFalse:send160460 = (Object)new_AST_Send((Object)send160457, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11707, (Object)block11708);((AST_Send)send160460)->info = (AST_Info)info5266;block11709 = (Object)new_AST_Block_with((Type_Array)array24063, (Type_Array)empty_Type_Array, 1, 2, send160460, Self);// on:send160461 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11709);method41009 = (Object)new_AST_Method_with((Type_Array)array24062, (Type_Array)empty_Type_Array, 1, send160461);((AST_Method)method41009)->info = (AST_Info)info5266;methodclosure40912 = (Object)new_Runtime_MethodClosure(method41009);store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol44137, (Runtime_MethodClosure)methodclosure40912);// Character>>asPEG//asPEG// 	^ self asString asPEG// asStringsend160462 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);string26607 = (Object)new_Type_String(L"asPEG");string26608 = (Object)new_Type_String(L"asPEG\n\t^ self asString asPEG");smallint26461 = (Object)new_Type_SmallInt(-1);smallint26462 = (Object)new_Type_SmallInt(-1);info5267 = (Object)new_AST_Info((Type_String)string26608,(Type_String)string26607, (Type_SmallInt)smallint26461, (Type_SmallInt)smallint26462);((AST_Send)send160462)->info = (AST_Info)info5267;symbol44131 = (Object)new_Type_Symbol_cached(L"asPEG");// asPEGsend160463 = (Object)new_AST_Send((Object)send160462, (Object)symbol44131, 0);((AST_Send)send160463)->info = (AST_Info)info5267;method41010 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160463);((AST_Method)method41010)->info = (AST_Info)info5267;methodclosure40913 = (Object)new_Runtime_MethodClosure(method41010);store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol44131, (Runtime_MethodClosure)methodclosure40913);// Character>>>//> aCharacter // 	"Answer true if the receiver's value < aCharacter's value."// // 	^ aCharacter < self asSmallIntlocalvariable26979 = (Object)new_AST_Variable_named(L"aCharacter");array24064 = (Object)new_Type_Array_with(1, (Object)localvariable26979);// asSmallIntsend160464 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);string26609 = (Object)new_Type_String(L">");string26610 = (Object)new_Type_String(L"> aCharacter \n\t\"Answer true if the receiver\'s value < aCharacter\'s value.\"\n\n\t^ aCharacter < self asSmallInt");smallint26463 = (Object)new_Type_SmallInt(-1);smallint26464 = (Object)new_Type_SmallInt(-1);info5268 = (Object)new_AST_Info((Type_String)string26610,(Type_String)string26609, (Type_SmallInt)smallint26463, (Type_SmallInt)smallint26464);((AST_Send)send160464)->info = (AST_Info)info5268;// <send160465 = (Object)new_AST_Send((Object)localvariable26979, (Object)SMB__lt, 1, (Object)send160464);((AST_Send)send160465)->info = (AST_Info)info5268;method41011 = (Object)new_AST_Method_with((Type_Array)array24064, (Type_Array)empty_Type_Array, 1, send160465);((AST_Method)method41011)->info = (AST_Info)info5268;methodclosure40914 = (Object)new_Runtime_MethodClosure(method41011);store_method((Type_Class)Type_Character_Class, (Type_Symbol)SMB__gt, (Runtime_MethodClosure)methodclosure40914);// Character>>asUppercase//asUppercase// 	"If the receiver is lowercase, answer its matching uppercase Character."// 	"A tentative implementation.  Eventually this should consult the Unicode table."	// // 	| v |// 	v := self charCode.// 	(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])// 		ifTrue: [^ (0 - 32 + self asSmallInt) asCharacter ]// 		ifFalse: [^ self]localvariable26980 = (Object)new_AST_Variable_named(L"v");array24065 = (Object)new_Type_Array_with(1, (Object)localvariable26980);variable1856 = (Object)new_AST_Variable_named(L"return");array24066 = (Object)new_Type_Array_with(1, (Object)variable1856);// charCodesend160466 = (Object)new_AST_Send((Object)Self, (Object)symbol44147, 0);string26611 = (Object)new_Type_String(L"asUppercase");string26612 = (Object)new_Type_String(L"asUppercase\n\t\"If the receiver is lowercase, answer its matching uppercase Character.\"\n\t\"A tentative implementation.  Eventually this should consult the Unicode table.\"\t\n\n\t| v |\n\tv := self charCode.\n\t(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])\n\t\tifTrue: [^ (0 - 32 + self asSmallInt) asCharacter ]\n\t\tifFalse: [^ self]");smallint26465 = (Object)new_Type_SmallInt(-1);smallint26466 = (Object)new_Type_SmallInt(-1);info5269 = (Object)new_AST_Info((Type_String)string26612,(Type_String)string26611, (Type_SmallInt)smallint26465, (Type_SmallInt)smallint26466);((AST_Send)send160466)->info = (AST_Info)info5269;assign20146 = (Object)new_AST_Assign((Object)localvariable26980, (Object)send160466);smallint26467 = (Object)new_Type_SmallInt(97);constant34600 = (Object)new_AST_Constant((Object)smallint26467);// <=send160467 = (Object)new_AST_Send((Object)constant34600, (Object)symbol44136, 1, (Object)localvariable26980);((AST_Send)send160467)->info = (AST_Info)info5269;symbol44120 = (Object)new_Type_Symbol_cached(L"and:");smallint26468 = (Object)new_Type_SmallInt(122);constant34601 = (Object)new_AST_Constant((Object)smallint26468);// <=send160468 = (Object)new_AST_Send((Object)localvariable26980, (Object)symbol44136, 1, (Object)constant34601);((AST_Send)send160468)->info = (AST_Info)info5269;block11710 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160468);// and:send160469 = (Object)new_AST_Send((Object)send160467, (Object)symbol44120, 1, (Object)block11710);((AST_Send)send160469)->info = (AST_Info)info5269;symbol44119 = (Object)new_Type_Symbol_cached(L"or:");smallint26469 = (Object)new_Type_SmallInt(224);constant34602 = (Object)new_AST_Constant((Object)smallint26469);// <=send160470 = (Object)new_AST_Send((Object)constant34602, (Object)symbol44136, 1, (Object)localvariable26980);((AST_Send)send160470)->info = (AST_Info)info5269;smallint26470 = (Object)new_Type_SmallInt(246);constant34603 = (Object)new_AST_Constant((Object)smallint26470);// <=send160471 = (Object)new_AST_Send((Object)localvariable26980, (Object)symbol44136, 1, (Object)constant34603);((AST_Send)send160471)->info = (AST_Info)info5269;block11711 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160471);// and:send160472 = (Object)new_AST_Send((Object)send160470, (Object)symbol44120, 1, (Object)block11711);((AST_Send)send160472)->info = (AST_Info)info5269;block11712 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160472);// or:send160473 = (Object)new_AST_Send((Object)send160469, (Object)symbol44119, 1, (Object)block11712);((AST_Send)send160473)->info = (AST_Info)info5269;smallint26471 = (Object)new_Type_SmallInt(248);constant34604 = (Object)new_AST_Constant((Object)smallint26471);// <=send160474 = (Object)new_AST_Send((Object)constant34604, (Object)symbol44136, 1, (Object)localvariable26980);((AST_Send)send160474)->info = (AST_Info)info5269;smallint26472 = (Object)new_Type_SmallInt(254);constant34605 = (Object)new_AST_Constant((Object)smallint26472);// <=send160475 = (Object)new_AST_Send((Object)localvariable26980, (Object)symbol44136, 1, (Object)constant34605);((AST_Send)send160475)->info = (AST_Info)info5269;block11713 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160475);// and:send160476 = (Object)new_AST_Send((Object)send160474, (Object)symbol44120, 1, (Object)block11713);((AST_Send)send160476)->info = (AST_Info)info5269;block11714 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160476);// or:send160477 = (Object)new_AST_Send((Object)send160473, (Object)symbol44119, 1, (Object)block11714);((AST_Send)send160477)->info = (AST_Info)info5269;smallint26473 = (Object)new_Type_SmallInt(0);constant34606 = (Object)new_AST_Constant((Object)smallint26473);smallint26474 = (Object)new_Type_SmallInt(32);constant34607 = (Object)new_AST_Constant((Object)smallint26474);// -send160478 = (Object)new_AST_Send((Object)constant34606, (Object)SMB__minus, 1, (Object)constant34607);((AST_Send)send160478)->info = (AST_Info)info5269;// asSmallIntsend160479 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);((AST_Send)send160479)->info = (AST_Info)info5269;// +send160480 = (Object)new_AST_Send((Object)send160478, (Object)SMB__plus, 1, (Object)send160479);((AST_Send)send160480)->info = (AST_Info)info5269;// asCharactersend160481 = (Object)new_AST_Send((Object)send160480, (Object)SMB_asCharacter, 0);((AST_Send)send160481)->info = (AST_Info)info5269;// escape:send160482 = (Object)new_AST_Send((Object)variable1856, (Object)SMB_escape_, 1, (Object)send160481);((AST_Send)send160482)->info = (AST_Info)info5269;block11715 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160482);// escape:send160483 = (Object)new_AST_Send((Object)variable1856, (Object)SMB_escape_, 1, (Object)Self);((AST_Send)send160483)->info = (AST_Info)info5269;block11716 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160483);// ifTrue:ifFalse:send160484 = (Object)new_AST_Send((Object)send160477, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11715, (Object)block11716);((AST_Send)send160484)->info = (AST_Info)info5269;block11717 = (Object)new_AST_Block_with((Type_Array)array24066, (Type_Array)empty_Type_Array, 1, 3, assign20146, send160484, Self);// on:send160485 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11717);method41012 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24065, 1, send160485);((AST_Method)method41012)->info = (AST_Info)info5269;symbol44146 = (Object)new_Type_Symbol_cached(L"asUppercase");methodclosure40915 = (Object)new_Runtime_MethodClosure(method41012);store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol44146, (Runtime_MethodClosure)methodclosure40915);// Character>>min://min: aMagnitude // 	"Answer the receiver or the argument, whichever has the lesser // 	magnitude."// // 	self < aMagnitude// 		ifTrue: [^self]// 		ifFalse: [^aMagnitude]localvariable26981 = (Object)new_AST_Variable_named(L"aMagnitude");array24067 = (Object)new_Type_Array_with(1, (Object)localvariable26981);variable1857 = (Object)new_AST_Variable_named(L"return");array24068 = (Object)new_Type_Array_with(1, (Object)variable1857);// <send160486 = (Object)new_AST_Send((Object)Self, (Object)SMB__lt, 1, (Object)localvariable26981);string26613 = (Object)new_Type_String(L"min:");string26614 = (Object)new_Type_String(L"min: aMagnitude \n\t\"Answer the receiver or the argument, whichever has the lesser \n\tmagnitude.\"\n\n\tself < aMagnitude\n\t\tifTrue: [^self]\n\t\tifFalse: [^aMagnitude]");smallint26475 = (Object)new_Type_SmallInt(-1);smallint26476 = (Object)new_Type_SmallInt(-1);info5270 = (Object)new_AST_Info((Type_String)string26614,(Type_String)string26613, (Type_SmallInt)smallint26475, (Type_SmallInt)smallint26476);((AST_Send)send160486)->info = (AST_Info)info5270;// escape:send160487 = (Object)new_AST_Send((Object)variable1857, (Object)SMB_escape_, 1, (Object)Self);((AST_Send)send160487)->info = (AST_Info)info5270;block11718 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160487);// escape:send160488 = (Object)new_AST_Send((Object)variable1857, (Object)SMB_escape_, 1, (Object)localvariable26981);((AST_Send)send160488)->info = (AST_Info)info5270;block11719 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160488);// ifTrue:ifFalse:send160489 = (Object)new_AST_Send((Object)send160486, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11718, (Object)block11719);((AST_Send)send160489)->info = (AST_Info)info5270;block11720 = (Object)new_AST_Block_with((Type_Array)array24068, (Type_Array)empty_Type_Array, 1, 2, send160489, Self);// on:send160490 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11720);method41013 = (Object)new_AST_Method_with((Type_Array)array24067, (Type_Array)empty_Type_Array, 1, send160490);((AST_Method)method41013)->info = (AST_Info)info5270;symbol44148 = (Object)new_Type_Symbol_cached(L"min:");methodclosure40916 = (Object)new_Runtime_MethodClosure(method41013);store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol44148, (Runtime_MethodClosure)methodclosure40916);// Character>><//< aCharacter // 	"Answer true if the receiver's value < aCharacter's value."// // 	^ aCharacter > self asSmallIntlocalvariable26982 = (Object)new_AST_Variable_named(L"aCharacter");array24069 = (Object)new_Type_Array_with(1, (Object)localvariable26982);// asSmallIntsend160491 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);string26615 = (Object)new_Type_String(L"<");string26616 = (Object)new_Type_String(L"< aCharacter \n\t\"Answer true if the receiver\'s value < aCharacter\'s value.\"\n\n\t^ aCharacter > self asSmallInt");smallint26477 = (Object)new_Type_SmallInt(-1);smallint26478 = (Object)new_Type_SmallInt(-1);info5271 = (Object)new_AST_Info((Type_String)string26616,(Type_String)string26615, (Type_SmallInt)smallint26477, (Type_SmallInt)smallint26478);((AST_Send)send160491)->info = (AST_Info)info5271;// >send160492 = (Object)new_AST_Send((Object)localvariable26982, (Object)SMB__gt, 1, (Object)send160491);((AST_Send)send160492)->info = (AST_Info)info5271;method41014 = (Object)new_AST_Method_with((Type_Array)array24069, (Type_Array)empty_Type_Array, 1, send160492);((AST_Method)method41014)->info = (AST_Info)info5271;methodclosure40917 = (Object)new_Runtime_MethodClosure(method41014);store_method((Type_Class)Type_Character_Class, (Type_Symbol)SMB__lt, (Runtime_MethodClosure)methodclosure40917);// a PInternalMetaclass P#Character>>space//space// 	^ 32 asCharactersmallint26479 = (Object)new_Type_SmallInt(32);constant34608 = (Object)new_AST_Constant((Object)smallint26479);// asCharactersend160493 = (Object)new_AST_Send((Object)constant34608, (Object)SMB_asCharacter, 0);string26617 = (Object)new_Type_String(L"space");string26618 = (Object)new_Type_String(L"space\n\t^ 32 asCharacter");smallint26480 = (Object)new_Type_SmallInt(-1);smallint26481 = (Object)new_Type_SmallInt(-1);info5272 = (Object)new_AST_Info((Type_String)string26618,(Type_String)string26617, (Type_SmallInt)smallint26480, (Type_SmallInt)smallint26481);((AST_Send)send160493)->info = (AST_Info)info5272;method41015 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160493);((AST_Method)method41015)->info = (AST_Info)info5272;symbol44143 = (Object)new_Type_Symbol_cached(L"space");methodclosure40918 = (Object)new_Runtime_MethodClosure(method41015);store_method((Type_Class)internalmetaclass12, (Type_Symbol)symbol44143, (Runtime_MethodClosure)methodclosure40918);// a PInternalMetaclass P#Character>>cr//cr// 	^ 13 asCharactersmallint26482 = (Object)new_Type_SmallInt(13);constant34609 = (Object)new_AST_Constant((Object)smallint26482);// asCharactersend160494 = (Object)new_AST_Send((Object)constant34609, (Object)SMB_asCharacter, 0);string26619 = (Object)new_Type_String(L"cr");string26620 = (Object)new_Type_String(L"cr\n\t^ 13 asCharacter");smallint26483 = (Object)new_Type_SmallInt(-1);smallint26484 = (Object)new_Type_SmallInt(-1);info5273 = (Object)new_AST_Info((Type_String)string26620,(Type_String)string26619, (Type_SmallInt)smallint26483, (Type_SmallInt)smallint26484);((AST_Send)send160494)->info = (AST_Info)info5273;method41016 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160494);((AST_Method)method41016)->info = (AST_Info)info5273;symbol44144 = (Object)new_Type_Symbol_cached(L"cr");methodclosure40919 = (Object)new_Runtime_MethodClosure(method41016);store_method((Type_Class)internalmetaclass12, (Type_Symbol)symbol44144, (Runtime_MethodClosure)methodclosure40919);// a PInternalMetaclass P#Character>>tab//tab// 	^ 9 asCharactersmallint26485 = (Object)new_Type_SmallInt(9);constant34610 = (Object)new_AST_Constant((Object)smallint26485);// asCharactersend160495 = (Object)new_AST_Send((Object)constant34610, (Object)SMB_asCharacter, 0);string26621 = (Object)new_Type_String(L"tab");string26622 = (Object)new_Type_String(L"tab\n\t^ 9 asCharacter");smallint26486 = (Object)new_Type_SmallInt(-1);smallint26487 = (Object)new_Type_SmallInt(-1);info5274 = (Object)new_AST_Info((Type_String)string26622,(Type_String)string26621, (Type_SmallInt)smallint26486, (Type_SmallInt)smallint26487);((AST_Send)send160495)->info = (AST_Info)info5274;method41017 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160495);((AST_Method)method41017)->info = (AST_Info)info5274;symbol44145 = (Object)new_Type_Symbol_cached(L"tab");methodclosure40920 = (Object)new_Runtime_MethodClosure(method41017);store_method((Type_Class)internalmetaclass12, (Type_Symbol)symbol44145, (Runtime_MethodClosure)methodclosure40920);// newsend160496 = (Object)new_AST_Send((Object)classreference13403, (Object)symbol44095, 0);string26623 = (Object)new_Type_String(L"asPCharacter");string26624 = (Object)new_Type_String(L"asPCharacter\n\t^PCharacter new char: self char");smallint26488 = (Object)new_Type_SmallInt(-1);smallint26489 = (Object)new_Type_SmallInt(-1);info5275 = (Object)new_AST_Info((Type_String)string26624,(Type_String)string26623, (Type_SmallInt)smallint26488, (Type_SmallInt)smallint26489);((AST_Send)send160496)->info = (AST_Info)info5275;symbol44354 = (Object)new_Type_Symbol_cached(L"char:");// charsend160497 = (Object)new_AST_Send((Object)Self, (Object)symbol44352, 0);((AST_Send)send160497)->info = (AST_Info)info5275;// char:send160498 = (Object)new_AST_Send((Object)send160496, (Object)symbol44354, 1, (Object)send160497);((AST_Send)send160498)->info = (AST_Info)info5275;method41018 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160498);((AST_Method)method41018)->info = (AST_Info)info5275;symbol44353 = (Object)new_Type_Symbol_cached(L"asPCharacter");methodclosure40921 = (Object)new_Runtime_MethodClosure(method41018);store_method((Type_Class)class6714, (Type_Symbol)symbol44353, (Runtime_MethodClosure)methodclosure40921);// ASTCharacter>>char://char: aChar// 	char := aCharlocalvariable26983 = (Object)new_AST_Variable_named(L"aChar");array24070 = (Object)new_Type_Array_with(1, (Object)localvariable26983);assign20147 = (Object)new_AST_Assign((Object)instancevariable16379, (Object)localvariable26983);method41019 = (Object)new_AST_Method_with((Type_Array)array24070, (Type_Array)empty_Type_Array, 2, assign20147, Self);string26625 = (Object)new_Type_String(L"char:");string26626 = (Object)new_Type_String(L"char: aChar\n\tchar := aChar");smallint26490 = (Object)new_Type_SmallInt(-1);smallint26491 = (Object)new_Type_SmallInt(-1);info5276 = (Object)new_AST_Info((Type_String)string26626,(Type_String)string26625, (Type_SmallInt)smallint26490, (Type_SmallInt)smallint26491);((AST_Method)method41019)->info = (AST_Info)info5276;methodclosure40922 = (Object)new_Runtime_MethodClosure(method41019);store_method((Type_Class)class6714, (Type_Symbol)symbol44354, (Runtime_MethodClosure)methodclosure40922);classreference13404 = (Object)new_Organization_ClassReference((Type_Class)class6715);// ASTBlock>>statements//statements// 	^ statementsmethod41020 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16382);string26627 = (Object)new_Type_String(L"statements");string26628 = (Object)new_Type_String(L"statements\n\t^ statements");smallint26492 = (Object)new_Type_SmallInt(-1);smallint26493 = (Object)new_Type_SmallInt(-1);info5277 = (Object)new_AST_Info((Type_String)string26628,(Type_String)string26627, (Type_SmallInt)smallint26492, (Type_SmallInt)smallint26493);((AST_Method)method41020)->info = (AST_Info)info5277;symbol44225 = (Object)new_Type_Symbol_cached(L"statements");methodclosure40923 = (Object)new_Runtime_MethodClosure(method41020);store_method((Type_Class)class6715, (Type_Symbol)symbol44225, (Runtime_MethodClosure)methodclosure40923);// ASTBlock>>parameters//parameters// 	^ parametersmethod41021 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16380);string26629 = (Object)new_Type_String(L"parameters");string26630 = (Object)new_Type_String(L"parameters\n\t^ parameters");smallint26494 = (Object)new_Type_SmallInt(-1);smallint26495 = (Object)new_Type_SmallInt(-1);info5278 = (Object)new_AST_Info((Type_String)string26630,(Type_String)string26629, (Type_SmallInt)smallint26494, (Type_SmallInt)smallint26495);((AST_Method)method41021)->info = (AST_Info)info5278;methodclosure40924 = (Object)new_Runtime_MethodClosure(method41021);store_method((Type_Class)class6715, (Type_Symbol)symbol44211, (Runtime_MethodClosure)methodclosure40924);// ASTBlock>>hasReturnExpression//hasReturnExpression// 	^ self statements anySatisfy: [ :el | // 		el isReturnExpression // 			or: [ el hasReturnExpression ]].// statementssend160499 = (Object)new_AST_Send((Object)Self, (Object)symbol44225, 0);string26631 = (Object)new_Type_String(L"hasReturnExpression");string26632 = (Object)new_Type_String(L"hasReturnExpression\n\t^ self statements anySatisfy: [ :el | \n\t\tel isReturnExpression \n\t\t\tor: [ el hasReturnExpression ]].");smallint26496 = (Object)new_Type_SmallInt(-1);smallint26497 = (Object)new_Type_SmallInt(-1);info5279 = (Object)new_AST_Info((Type_String)string26632,(Type_String)string26631, (Type_SmallInt)smallint26496, (Type_SmallInt)smallint26497);((AST_Send)send160499)->info = (AST_Info)info5279;symbol44401 = (Object)new_Type_Symbol_cached(L"anySatisfy:");localvariable26984 = (Object)new_AST_Variable_named(L"el");array24071 = (Object)new_Type_Array_with(1, (Object)localvariable26984);// isReturnExpressionsend160500 = (Object)new_AST_Send((Object)localvariable26984, (Object)symbol44006, 0);((AST_Send)send160500)->info = (AST_Info)info5279;// hasReturnExpressionsend160501 = (Object)new_AST_Send((Object)localvariable26984, (Object)symbol44169, 0);((AST_Send)send160501)->info = (AST_Info)info5279;block11721 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160501);// or:send160502 = (Object)new_AST_Send((Object)send160500, (Object)symbol44119, 1, (Object)block11721);((AST_Send)send160502)->info = (AST_Info)info5279;block11722 = (Object)new_AST_Block_with((Type_Array)array24071, (Type_Array)empty_Type_Array, 1, 1, send160502);// anySatisfy:send160503 = (Object)new_AST_Send((Object)send160499, (Object)symbol44401, 1, (Object)block11722);((AST_Send)send160503)->info = (AST_Info)info5279;method41022 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160503);((AST_Method)method41022)->info = (AST_Info)info5279;methodclosure40925 = (Object)new_Runtime_MethodClosure(method41022);store_method((Type_Class)class6715, (Type_Symbol)symbol44169, (Runtime_MethodClosure)methodclosure40925);// ASTBlock>>temporaries://temporaries: anObject// 	temporaries := anObjectlocalvariable26985 = (Object)new_AST_Variable_named(L"anObject");array24072 = (Object)new_Type_Array_with(1, (Object)localvariable26985);assign20148 = (Object)new_AST_Assign((Object)instancevariable16381, (Object)localvariable26985);method41023 = (Object)new_AST_Method_with((Type_Array)array24072, (Type_Array)empty_Type_Array, 2, assign20148, Self);string26633 = (Object)new_Type_String(L"temporaries:");string26634 = (Object)new_Type_String(L"temporaries: anObject\n\ttemporaries := anObject");smallint26498 = (Object)new_Type_SmallInt(-1);smallint26499 = (Object)new_Type_SmallInt(-1);info5280 = (Object)new_AST_Info((Type_String)string26634,(Type_String)string26633, (Type_SmallInt)smallint26498, (Type_SmallInt)smallint26499);((AST_Method)method41023)->info = (AST_Info)info5280;symbol44231 = (Object)new_Type_Symbol_cached(L"temporaries:");methodclosure40926 = (Object)new_Runtime_MethodClosure(method41023);store_method((Type_Class)class6715, (Type_Symbol)symbol44231, (Runtime_MethodClosure)methodclosure40926);// ASTBlock>>initialize//initialize// 	super initialize.// 	self parameters: Array new.// 	self statements: Array new.// 	self temporaries: Array new.super2462 = (Object)new_AST_Super((Object)symbol44004, 0);// newsend160504 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44095, 0);string26635 = (Object)new_Type_String(L"initialize");string26636 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tself parameters: Array new.\n\tself statements: Array new.\n\tself temporaries: Array new.");smallint26500 = (Object)new_Type_SmallInt(-1);smallint26501 = (Object)new_Type_SmallInt(-1);info5281 = (Object)new_AST_Info((Type_String)string26636,(Type_String)string26635, (Type_SmallInt)smallint26500, (Type_SmallInt)smallint26501);((AST_Send)send160504)->info = (AST_Info)info5281;// parameters:send160505 = (Object)new_AST_Send((Object)Self, (Object)symbol44242, 1, (Object)send160504);((AST_Send)send160505)->info = (AST_Info)info5281;symbol44228 = (Object)new_Type_Symbol_cached(L"statements:");// newsend160506 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44095, 0);((AST_Send)send160506)->info = (AST_Info)info5281;// statements:send160507 = (Object)new_AST_Send((Object)Self, (Object)symbol44228, 1, (Object)send160506);((AST_Send)send160507)->info = (AST_Info)info5281;// newsend160508 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44095, 0);((AST_Send)send160508)->info = (AST_Info)info5281;// temporaries:send160509 = (Object)new_AST_Send((Object)Self, (Object)symbol44231, 1, (Object)send160508);((AST_Send)send160509)->info = (AST_Info)info5281;method41024 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super2462, send160505, send160507, send160509, Self);((AST_Method)method41024)->info = (AST_Info)info5281;methodclosure40927 = (Object)new_Runtime_MethodClosure(method41024);store_method((Type_Class)class6715, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40927);// ASTBlock>>statements://statements: anObject// 	statements := anObjectlocalvariable26986 = (Object)new_AST_Variable_named(L"anObject");array24073 = (Object)new_Type_Array_with(1, (Object)localvariable26986);assign20149 = (Object)new_AST_Assign((Object)instancevariable16382, (Object)localvariable26986);method41025 = (Object)new_AST_Method_with((Type_Array)array24073, (Type_Array)empty_Type_Array, 2, assign20149, Self);string26637 = (Object)new_Type_String(L"statements:");string26638 = (Object)new_Type_String(L"statements: anObject\n\tstatements := anObject");smallint26502 = (Object)new_Type_SmallInt(-1);smallint26503 = (Object)new_Type_SmallInt(-1);info5282 = (Object)new_AST_Info((Type_String)string26638,(Type_String)string26637, (Type_SmallInt)smallint26502, (Type_SmallInt)smallint26503);((AST_Method)method41025)->info = (AST_Info)info5282;methodclosure40928 = (Object)new_Runtime_MethodClosure(method41025);store_method((Type_Class)class6715, (Type_Symbol)symbol44228, (Runtime_MethodClosure)methodclosure40928);// ASTBlock>>parameters://parameters: aCollection// 	parameters := aCollectionlocalvariable26987 = (Object)new_AST_Variable_named(L"aCollection");array24074 = (Object)new_Type_Array_with(1, (Object)localvariable26987);assign20150 = (Object)new_AST_Assign((Object)instancevariable16380, (Object)localvariable26987);method41026 = (Object)new_AST_Method_with((Type_Array)array24074, (Type_Array)empty_Type_Array, 2, assign20150, Self);string26639 = (Object)new_Type_String(L"parameters:");string26640 = (Object)new_Type_String(L"parameters: aCollection\n\tparameters := aCollection");smallint26504 = (Object)new_Type_SmallInt(-1);smallint26505 = (Object)new_Type_SmallInt(-1);info5283 = (Object)new_AST_Info((Type_String)string26640,(Type_String)string26639, (Type_SmallInt)smallint26504, (Type_SmallInt)smallint26505);((AST_Method)method41026)->info = (AST_Info)info5283;methodclosure40929 = (Object)new_Runtime_MethodClosure(method41026);store_method((Type_Class)class6715, (Type_Symbol)symbol44242, (Runtime_MethodClosure)methodclosure40929);// ASTBlock>>temporaries//temporaries// 	^ temporariesmethod41027 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16381);string26641 = (Object)new_Type_String(L"temporaries");string26642 = (Object)new_Type_String(L"temporaries\n\t^ temporaries");smallint26506 = (Object)new_Type_SmallInt(-1);smallint26507 = (Object)new_Type_SmallInt(-1);info5284 = (Object)new_AST_Info((Type_String)string26642,(Type_String)string26641, (Type_SmallInt)smallint26506, (Type_SmallInt)smallint26507);((AST_Method)method41027)->info = (AST_Info)info5284;symbol44230 = (Object)new_Type_Symbol_cached(L"temporaries");methodclosure40930 = (Object)new_Runtime_MethodClosure(method41027);store_method((Type_Class)class6715, (Type_Symbol)symbol44230, (Runtime_MethodClosure)methodclosure40930);classreference13405 = (Object)new_Organization_ClassReference((Type_Class)class6716);// ASTReturnExpression>>isReturnExpression//isReturnExpression// 	^ truemethod41028 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);string26643 = (Object)new_Type_String(L"isReturnExpression");string26644 = (Object)new_Type_String(L"isReturnExpression\n\t^ true");smallint26508 = (Object)new_Type_SmallInt(-1);smallint26509 = (Object)new_Type_SmallInt(-1);info5285 = (Object)new_AST_Info((Type_String)string26644,(Type_String)string26643, (Type_SmallInt)smallint26508, (Type_SmallInt)smallint26509);((AST_Method)method41028)->info = (AST_Info)info5285;methodclosure40931 = (Object)new_Runtime_MethodClosure(method41028);store_method((Type_Class)class6716, (Type_Symbol)symbol44006, (Runtime_MethodClosure)methodclosure40931);// ASTReturnExpression>>expression//expression// 	^ expressionmethod41029 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16383);string26645 = (Object)new_Type_String(L"expression");string26646 = (Object)new_Type_String(L"expression\n\t^ expression");smallint26510 = (Object)new_Type_SmallInt(-1);smallint26511 = (Object)new_Type_SmallInt(-1);info5286 = (Object)new_AST_Info((Type_String)string26646,(Type_String)string26645, (Type_SmallInt)smallint26510, (Type_SmallInt)smallint26511);((AST_Method)method41029)->info = (AST_Info)info5286;methodclosure40932 = (Object)new_Runtime_MethodClosure(method41029);store_method((Type_Class)class6716, (Type_Symbol)symbol44200, (Runtime_MethodClosure)methodclosure40932);// ASTReturnExpression>>expression://expression: anObject// 	expression := anObjectlocalvariable26988 = (Object)new_AST_Variable_named(L"anObject");array24075 = (Object)new_Type_Array_with(1, (Object)localvariable26988);assign20151 = (Object)new_AST_Assign((Object)instancevariable16383, (Object)localvariable26988);method41030 = (Object)new_AST_Method_with((Type_Array)array24075, (Type_Array)empty_Type_Array, 2, assign20151, Self);string26647 = (Object)new_Type_String(L"expression:");string26648 = (Object)new_Type_String(L"expression: anObject\n\texpression := anObject");smallint26512 = (Object)new_Type_SmallInt(-1);smallint26513 = (Object)new_Type_SmallInt(-1);info5287 = (Object)new_AST_Info((Type_String)string26648,(Type_String)string26647, (Type_SmallInt)smallint26512, (Type_SmallInt)smallint26513);((AST_Method)method41030)->info = (AST_Info)info5287;methodclosure40933 = (Object)new_Runtime_MethodClosure(method41030);store_method((Type_Class)class6716, (Type_Symbol)symbol44203, (Runtime_MethodClosure)methodclosure40933);classreference13406 = (Object)new_Organization_ClassReference((Type_Class)class6717);// ASTMessageExpression>>arguments://arguments: anObject// 	arguments := anObjectlocalvariable26989 = (Object)new_AST_Variable_named(L"anObject");array24076 = (Object)new_Type_Array_with(1, (Object)localvariable26989);assign20152 = (Object)new_AST_Assign((Object)instancevariable16385, (Object)localvariable26989);method41031 = (Object)new_AST_Method_with((Type_Array)array24076, (Type_Array)empty_Type_Array, 2, assign20152, Self);string26649 = (Object)new_Type_String(L"arguments:");string26650 = (Object)new_Type_String(L"arguments: anObject\n\targuments := anObject");smallint26514 = (Object)new_Type_SmallInt(-1);smallint26515 = (Object)new_Type_SmallInt(-1);info5288 = (Object)new_AST_Info((Type_String)string26650,(Type_String)string26649, (Type_SmallInt)smallint26514, (Type_SmallInt)smallint26515);((AST_Method)method41031)->info = (AST_Info)info5288;symbol44217 = (Object)new_Type_Symbol_cached(L"arguments:");methodclosure40934 = (Object)new_Runtime_MethodClosure(method41031);store_method((Type_Class)class6717, (Type_Symbol)symbol44217, (Runtime_MethodClosure)methodclosure40934);// ASTMessageExpression>>hasReturnExpression//hasReturnExpression// 	^ self arguments anySatisfy: [ :el | // 		el isReturnExpression // 			or: [ el hasReturnExpression ]].symbol44116 = (Object)new_Type_Symbol_cached(L"arguments");// argumentssend160510 = (Object)new_AST_Send((Object)Self, (Object)symbol44116, 0);string26651 = (Object)new_Type_String(L"hasReturnExpression");string26652 = (Object)new_Type_String(L"hasReturnExpression\n\t^ self arguments anySatisfy: [ :el | \n\t\tel isReturnExpression \n\t\t\tor: [ el hasReturnExpression ]].");smallint26516 = (Object)new_Type_SmallInt(-1);smallint26517 = (Object)new_Type_SmallInt(-1);info5289 = (Object)new_AST_Info((Type_String)string26652,(Type_String)string26651, (Type_SmallInt)smallint26516, (Type_SmallInt)smallint26517);((AST_Send)send160510)->info = (AST_Info)info5289;localvariable26990 = (Object)new_AST_Variable_named(L"el");array24077 = (Object)new_Type_Array_with(1, (Object)localvariable26990);// isReturnExpressionsend160511 = (Object)new_AST_Send((Object)localvariable26990, (Object)symbol44006, 0);((AST_Send)send160511)->info = (AST_Info)info5289;// hasReturnExpressionsend160512 = (Object)new_AST_Send((Object)localvariable26990, (Object)symbol44169, 0);((AST_Send)send160512)->info = (AST_Info)info5289;block11723 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160512);// or:send160513 = (Object)new_AST_Send((Object)send160511, (Object)symbol44119, 1, (Object)block11723);((AST_Send)send160513)->info = (AST_Info)info5289;block11724 = (Object)new_AST_Block_with((Type_Array)array24077, (Type_Array)empty_Type_Array, 1, 1, send160513);// anySatisfy:send160514 = (Object)new_AST_Send((Object)send160510, (Object)symbol44401, 1, (Object)block11724);((AST_Send)send160514)->info = (AST_Info)info5289;method41032 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160514);((AST_Method)method41032)->info = (AST_Info)info5289;methodclosure40935 = (Object)new_Runtime_MethodClosure(method41032);store_method((Type_Class)class6717, (Type_Symbol)symbol44169, (Runtime_MethodClosure)methodclosure40935);// ASTMessageExpression>>initialize//initialize// 	super initialize.// 	arguments := OrderedCollection new.super2463 = (Object)new_AST_Super((Object)symbol44004, 0);// newsend160515 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26653 = (Object)new_Type_String(L"initialize");string26654 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\targuments := OrderedCollection new.");smallint26518 = (Object)new_Type_SmallInt(-1);smallint26519 = (Object)new_Type_SmallInt(-1);info5290 = (Object)new_AST_Info((Type_String)string26654,(Type_String)string26653, (Type_SmallInt)smallint26518, (Type_SmallInt)smallint26519);((AST_Send)send160515)->info = (AST_Info)info5290;assign20153 = (Object)new_AST_Assign((Object)instancevariable16385, (Object)send160515);method41033 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super2463, assign20153, Self);((AST_Method)method41033)->info = (AST_Info)info5290;methodclosure40936 = (Object)new_Runtime_MethodClosure(method41033);store_method((Type_Class)class6717, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40936);// ASTMessageExpression>>arguments//arguments// 	^ argumentsmethod41034 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16385);string26655 = (Object)new_Type_String(L"arguments");string26656 = (Object)new_Type_String(L"arguments\n\t^ arguments");smallint26520 = (Object)new_Type_SmallInt(-1);smallint26521 = (Object)new_Type_SmallInt(-1);info5291 = (Object)new_AST_Info((Type_String)string26656,(Type_String)string26655, (Type_SmallInt)smallint26520, (Type_SmallInt)smallint26521);((AST_Method)method41034)->info = (AST_Info)info5291;methodclosure40937 = (Object)new_Runtime_MethodClosure(method41034);store_method((Type_Class)class6717, (Type_Symbol)symbol44116, (Runtime_MethodClosure)methodclosure40937);// ASTMessageExpression>>receiver://receiver: anObject// 	receiver := anObjectlocalvariable26991 = (Object)new_AST_Variable_named(L"anObject");array24078 = (Object)new_Type_Array_with(1, (Object)localvariable26991);assign20154 = (Object)new_AST_Assign((Object)instancevariable16384, (Object)localvariable26991);method41035 = (Object)new_AST_Method_with((Type_Array)array24078, (Type_Array)empty_Type_Array, 2, assign20154, Self);string26657 = (Object)new_Type_String(L"receiver:");string26658 = (Object)new_Type_String(L"receiver: anObject\n\treceiver := anObject");smallint26522 = (Object)new_Type_SmallInt(-1);smallint26523 = (Object)new_Type_SmallInt(-1);info5292 = (Object)new_AST_Info((Type_String)string26658,(Type_String)string26657, (Type_SmallInt)smallint26522, (Type_SmallInt)smallint26523);((AST_Method)method41035)->info = (AST_Info)info5292;symbol44216 = (Object)new_Type_Symbol_cached(L"receiver:");methodclosure40938 = (Object)new_Runtime_MethodClosure(method41035);store_method((Type_Class)class6717, (Type_Symbol)symbol44216, (Runtime_MethodClosure)methodclosure40938);// ASTMessageExpression>>receiver//receiver// 	^ receivermethod41036 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16384);string26659 = (Object)new_Type_String(L"receiver");string26660 = (Object)new_Type_String(L"receiver\n\t^ receiver");smallint26524 = (Object)new_Type_SmallInt(-1);smallint26525 = (Object)new_Type_SmallInt(-1);info5293 = (Object)new_AST_Info((Type_String)string26660,(Type_String)string26659, (Type_SmallInt)smallint26524, (Type_SmallInt)smallint26525);((AST_Method)method41036)->info = (AST_Info)info5293;symbol44218 = (Object)new_Type_Symbol_cached(L"receiver");methodclosure40939 = (Object)new_Runtime_MethodClosure(method41036);store_method((Type_Class)class6717, (Type_Symbol)symbol44218, (Runtime_MethodClosure)methodclosure40939);classreference13407 = (Object)new_Organization_ClassReference((Type_Class)class6707);classreference13408 = (Object)new_Organization_ClassReference((Type_Class)class6718);// ASTMessageCascadeExpression>>receiver://receiver: anObject// 	receiver := anObjectlocalvariable26992 = (Object)new_AST_Variable_named(L"anObject");array24079 = (Object)new_Type_Array_with(1, (Object)localvariable26992);assign20155 = (Object)new_AST_Assign((Object)instancevariable16386, (Object)localvariable26992);method41037 = (Object)new_AST_Method_with((Type_Array)array24079, (Type_Array)empty_Type_Array, 2, assign20155, Self);string26661 = (Object)new_Type_String(L"receiver:");string26662 = (Object)new_Type_String(L"receiver: anObject\n\treceiver := anObject");smallint26526 = (Object)new_Type_SmallInt(-1);smallint26527 = (Object)new_Type_SmallInt(-1);info5294 = (Object)new_AST_Info((Type_String)string26662,(Type_String)string26661, (Type_SmallInt)smallint26526, (Type_SmallInt)smallint26527);((AST_Method)method41037)->info = (AST_Info)info5294;methodclosure40940 = (Object)new_Runtime_MethodClosure(method41037);store_method((Type_Class)class6718, (Type_Symbol)symbol44216, (Runtime_MethodClosure)methodclosure40940);// ASTMessageCascadeExpression>>cascades://cascades: anObject// 	cascades := anObjectlocalvariable26993 = (Object)new_AST_Variable_named(L"anObject");array24080 = (Object)new_Type_Array_with(1, (Object)localvariable26993);assign20156 = (Object)new_AST_Assign((Object)instancevariable16387, (Object)localvariable26993);method41038 = (Object)new_AST_Method_with((Type_Array)array24080, (Type_Array)empty_Type_Array, 2, assign20156, Self);string26663 = (Object)new_Type_String(L"cascades:");string26664 = (Object)new_Type_String(L"cascades: anObject\n\tcascades := anObject");smallint26528 = (Object)new_Type_SmallInt(-1);smallint26529 = (Object)new_Type_SmallInt(-1);info5295 = (Object)new_AST_Info((Type_String)string26664,(Type_String)string26663, (Type_SmallInt)smallint26528, (Type_SmallInt)smallint26529);((AST_Method)method41038)->info = (AST_Info)info5295;symbol44243 = (Object)new_Type_Symbol_cached(L"cascades:");methodclosure40941 = (Object)new_Runtime_MethodClosure(method41038);store_method((Type_Class)class6718, (Type_Symbol)symbol44243, (Runtime_MethodClosure)methodclosure40941);// ASTMessageCascadeExpression>>receiver//receiver// 	^ receivermethod41039 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16386);string26665 = (Object)new_Type_String(L"receiver");string26666 = (Object)new_Type_String(L"receiver\n\t^ receiver");smallint26530 = (Object)new_Type_SmallInt(-1);smallint26531 = (Object)new_Type_SmallInt(-1);info5296 = (Object)new_AST_Info((Type_String)string26666,(Type_String)string26665, (Type_SmallInt)smallint26530, (Type_SmallInt)smallint26531);((AST_Method)method41039)->info = (AST_Info)info5296;methodclosure40942 = (Object)new_Runtime_MethodClosure(method41039);store_method((Type_Class)class6718, (Type_Symbol)symbol44218, (Runtime_MethodClosure)methodclosure40942);// ASTMessageCascadeExpression>>cascades//cascades// 	^ cascadesmethod41040 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16387);string26667 = (Object)new_Type_String(L"cascades");string26668 = (Object)new_Type_String(L"cascades\n\t^ cascades");smallint26532 = (Object)new_Type_SmallInt(-1);smallint26533 = (Object)new_Type_SmallInt(-1);info5297 = (Object)new_AST_Info((Type_String)string26668,(Type_String)string26667, (Type_SmallInt)smallint26532, (Type_SmallInt)smallint26533);((AST_Method)method41040)->info = (AST_Info)info5297;symbol44244 = (Object)new_Type_Symbol_cached(L"cascades");methodclosure40943 = (Object)new_Runtime_MethodClosure(method41040);store_method((Type_Class)class6718, (Type_Symbol)symbol44244, (Runtime_MethodClosure)methodclosure40943);classreference13409 = (Object)new_Organization_ClassReference((Type_Class)class6702);// ASTSelector>>selector//selector// 	^ selectormethod41041 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16370);string26669 = (Object)new_Type_String(L"selector");string26670 = (Object)new_Type_String(L"selector\n\t^ selector");smallint26534 = (Object)new_Type_SmallInt(-1);smallint26535 = (Object)new_Type_SmallInt(-1);info5298 = (Object)new_AST_Info((Type_String)string26670,(Type_String)string26669, (Type_SmallInt)smallint26534, (Type_SmallInt)smallint26535);((AST_Method)method41041)->info = (AST_Info)info5298;methodclosure40944 = (Object)new_Runtime_MethodClosure(method41041);store_method((Type_Class)class6702, (Type_Symbol)symbol44115, (Runtime_MethodClosure)methodclosure40944);// ASTSelector>>parameters//parameters// 	^ Array new.// newsend160516 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44095, 0);string26671 = (Object)new_Type_String(L"parameters");string26672 = (Object)new_Type_String(L"parameters\n\t^ Array new.");smallint26536 = (Object)new_Type_SmallInt(-1);smallint26537 = (Object)new_Type_SmallInt(-1);info5299 = (Object)new_AST_Info((Type_String)string26672,(Type_String)string26671, (Type_SmallInt)smallint26536, (Type_SmallInt)smallint26537);((AST_Send)send160516)->info = (AST_Info)info5299;method41042 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160516);((AST_Method)method41042)->info = (AST_Info)info5299;methodclosure40945 = (Object)new_Runtime_MethodClosure(method41042);store_method((Type_Class)class6702, (Type_Symbol)symbol44211, (Runtime_MethodClosure)methodclosure40945);// ASTSelector>>printOn://printOn: aStream// 	self selector printOn: aStream.localvariable26994 = (Object)new_AST_Variable_named(L"aStream");array24081 = (Object)new_Type_Array_with(1, (Object)localvariable26994);// selectorsend160517 = (Object)new_AST_Send((Object)Self, (Object)symbol44115, 0);string26673 = (Object)new_Type_String(L"printOn:");string26674 = (Object)new_Type_String(L"printOn: aStream\n\tself selector printOn: aStream.");smallint26538 = (Object)new_Type_SmallInt(-1);smallint26539 = (Object)new_Type_SmallInt(-1);info5300 = (Object)new_AST_Info((Type_String)string26674,(Type_String)string26673, (Type_SmallInt)smallint26538, (Type_SmallInt)smallint26539);((AST_Send)send160517)->info = (AST_Info)info5300;// printOn:send160518 = (Object)new_AST_Send((Object)send160517, (Object)symbol44111, 1, (Object)localvariable26994);((AST_Send)send160518)->info = (AST_Info)info5300;method41043 = (Object)new_AST_Method_with((Type_Array)array24081, (Type_Array)empty_Type_Array, 2, send160518, Self);((AST_Method)method41043)->info = (AST_Info)info5300;methodclosure40946 = (Object)new_Runtime_MethodClosure(method41043);store_method((Type_Class)class6702, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40946);// ASTSelector>>compatibleWith://compatibleWith: aSelector// 	^ (self selectorName = aSelector selectorName)// 	localvariable26995 = (Object)new_AST_Variable_named(L"aSelector");array24082 = (Object)new_Type_Array_with(1, (Object)localvariable26995);symbol44210 = (Object)new_Type_Symbol_cached(L"selectorName");// selectorNamesend160519 = (Object)new_AST_Send((Object)Self, (Object)symbol44210, 0);string26675 = (Object)new_Type_String(L"compatibleWith:");string26676 = (Object)new_Type_String(L"compatibleWith: aSelector\n\t^ (self selectorName = aSelector selectorName)\n\t");smallint26540 = (Object)new_Type_SmallInt(-1);smallint26541 = (Object)new_Type_SmallInt(-1);info5301 = (Object)new_AST_Info((Type_String)string26676,(Type_String)string26675, (Type_SmallInt)smallint26540, (Type_SmallInt)smallint26541);((AST_Send)send160519)->info = (AST_Info)info5301;// selectorNamesend160520 = (Object)new_AST_Send((Object)localvariable26995, (Object)symbol44210, 0);((AST_Send)send160520)->info = (AST_Info)info5301;// =send160521 = (Object)new_AST_Send((Object)send160519, (Object)SMB__equal, 1, (Object)send160520);((AST_Send)send160521)->info = (AST_Info)info5301;method41044 = (Object)new_AST_Method_with((Type_Array)array24082, (Type_Array)empty_Type_Array, 1, send160521);((AST_Method)method41044)->info = (AST_Info)info5301;methodclosure40947 = (Object)new_Runtime_MethodClosure(method41044);store_method((Type_Class)class6702, (Type_Symbol)symbol44213, (Runtime_MethodClosure)methodclosure40947);// ASTSelector>>asString//asString// 	^ self selector asString.// selectorsend160522 = (Object)new_AST_Send((Object)Self, (Object)symbol44115, 0);string26677 = (Object)new_Type_String(L"asString");string26678 = (Object)new_Type_String(L"asString\n\t^ self selector asString.");smallint26542 = (Object)new_Type_SmallInt(-1);smallint26543 = (Object)new_Type_SmallInt(-1);info5302 = (Object)new_AST_Info((Type_String)string26678,(Type_String)string26677, (Type_SmallInt)smallint26542, (Type_SmallInt)smallint26543);((AST_Send)send160522)->info = (AST_Info)info5302;// asStringsend160523 = (Object)new_AST_Send((Object)send160522, (Object)SMB_asString, 0);((AST_Send)send160523)->info = (AST_Info)info5302;method41045 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160523);((AST_Method)method41045)->info = (AST_Info)info5302;methodclosure40948 = (Object)new_Runtime_MethodClosure(method41045);store_method((Type_Class)class6702, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure40948);// ASTSelector>>selectorName//selectorName// 	self selector printString// selectorsend160524 = (Object)new_AST_Send((Object)Self, (Object)symbol44115, 0);string26679 = (Object)new_Type_String(L"selectorName");string26680 = (Object)new_Type_String(L"selectorName\n\tself selector printString");smallint26544 = (Object)new_Type_SmallInt(-1);smallint26545 = (Object)new_Type_SmallInt(-1);info5303 = (Object)new_AST_Info((Type_String)string26680,(Type_String)string26679, (Type_SmallInt)smallint26544, (Type_SmallInt)smallint26545);((AST_Send)send160524)->info = (AST_Info)info5303;symbol44332 = (Object)new_Type_Symbol_cached(L"printString");// printStringsend160525 = (Object)new_AST_Send((Object)send160524, (Object)symbol44332, 0);((AST_Send)send160525)->info = (AST_Info)info5303;method41046 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160525, Self);((AST_Method)method41046)->info = (AST_Info)info5303;methodclosure40949 = (Object)new_Runtime_MethodClosure(method41046);store_method((Type_Class)class6702, (Type_Symbol)symbol44210, (Runtime_MethodClosure)methodclosure40949);// ASTSelector>>selector://selector: anObject// 	| string |// 	selector := anObject.// 	string := selector asString.// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]localvariable26996 = (Object)new_AST_Variable_named(L"anObject");array24083 = (Object)new_Type_Array_with(1, (Object)localvariable26996);localvariable26997 = (Object)new_AST_Variable_named(L"string");array24084 = (Object)new_Type_Array_with(1, (Object)localvariable26997);assign20157 = (Object)new_AST_Assign((Object)instancevariable16370, (Object)localvariable26996);// asStringsend160526 = (Object)new_AST_Send((Object)instancevariable16370, (Object)SMB_asString, 0);string26681 = (Object)new_Type_String(L"selector:");string26682 = (Object)new_Type_String(L"selector: anObject\n\t| string |\n\tselector := anObject.\n\tstring := selector asString.\n\tstring size > 1 ifTrue: [ (string at: string size - 1) should not = \':\' ]");smallint26546 = (Object)new_Type_SmallInt(-1);smallint26547 = (Object)new_Type_SmallInt(-1);info5304 = (Object)new_AST_Info((Type_String)string26682,(Type_String)string26681, (Type_SmallInt)smallint26546, (Type_SmallInt)smallint26547);((AST_Send)send160526)->info = (AST_Info)info5304;assign20158 = (Object)new_AST_Assign((Object)localvariable26997, (Object)send160526);// sizesend160527 = (Object)new_AST_Send((Object)localvariable26997, (Object)SMB_size, 0);((AST_Send)send160527)->info = (AST_Info)info5304;smallint26548 = (Object)new_Type_SmallInt(1);constant34611 = (Object)new_AST_Constant((Object)smallint26548);// >send160528 = (Object)new_AST_Send((Object)send160527, (Object)SMB__gt, 1, (Object)constant34611);((AST_Send)send160528)->info = (AST_Info)info5304;// sizesend160529 = (Object)new_AST_Send((Object)localvariable26997, (Object)SMB_size, 0);((AST_Send)send160529)->info = (AST_Info)info5304;smallint26549 = (Object)new_Type_SmallInt(1);constant34612 = (Object)new_AST_Constant((Object)smallint26549);// -send160530 = (Object)new_AST_Send((Object)send160529, (Object)SMB__minus, 1, (Object)constant34612);((AST_Send)send160530)->info = (AST_Info)info5304;// at:send160531 = (Object)new_AST_Send((Object)localvariable26997, (Object)SMB_at_, 1, (Object)send160530);((AST_Send)send160531)->info = (AST_Info)info5304;symbol44402 = (Object)new_Type_Symbol_cached(L"should");// shouldsend160532 = (Object)new_AST_Send((Object)send160531, (Object)symbol44402, 0);((AST_Send)send160532)->info = (AST_Info)info5304;// notsend160533 = (Object)new_AST_Send((Object)send160532, (Object)SMB_not, 0);((AST_Send)send160533)->info = (AST_Info)info5304;string26683 = (Object)new_Type_String(L":");constant34613 = (Object)new_AST_Constant((Object)string26683);// =send160534 = (Object)new_AST_Send((Object)send160533, (Object)SMB__equal, 1, (Object)constant34613);((AST_Send)send160534)->info = (AST_Info)info5304;block11725 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160534);// ifTrue:send160535 = (Object)new_AST_Send((Object)send160528, (Object)SMB_ifTrue_, 1, (Object)block11725);((AST_Send)send160535)->info = (AST_Info)info5304;method41047 = (Object)new_AST_Method_with((Type_Array)array24083, (Type_Array)array24084, 4, assign20157, assign20158, send160535, Self);((AST_Method)method41047)->info = (AST_Info)info5304;symbol44212 = (Object)new_Type_Symbol_cached(L"selector:");methodclosure40950 = (Object)new_Runtime_MethodClosure(method41047);store_method((Type_Class)class6702, (Type_Symbol)symbol44212, (Runtime_MethodClosure)methodclosure40950);classreference13410 = (Object)new_Organization_ClassReference((Type_Class)class6719);// ASTUnaryExpression>>printOn://printOn: aStream// 	self receiver printOn: aStream.// 	aStream nextPutAll: String space.// 	super printOn: aStream.localvariable26998 = (Object)new_AST_Variable_named(L"aStream");array24085 = (Object)new_Type_Array_with(1, (Object)localvariable26998);// receiversend160536 = (Object)new_AST_Send((Object)Self, (Object)symbol44218, 0);string26684 = (Object)new_Type_String(L"printOn:");string26685 = (Object)new_Type_String(L"printOn: aStream\n\tself receiver printOn: aStream.\n\taStream nextPutAll: String space.\n\tsuper printOn: aStream.");smallint26550 = (Object)new_Type_SmallInt(-1);smallint26551 = (Object)new_Type_SmallInt(-1);info5305 = (Object)new_AST_Info((Type_String)string26685,(Type_String)string26684, (Type_SmallInt)smallint26550, (Type_SmallInt)smallint26551);((AST_Send)send160536)->info = (AST_Info)info5305;// printOn:send160537 = (Object)new_AST_Send((Object)send160536, (Object)symbol44111, 1, (Object)localvariable26998);((AST_Send)send160537)->info = (AST_Info)info5305;classreference13411 = (Object)new_Organization_ClassReference((Type_Class)Type_String_Class);// String>>isEmpty//isEmpty // 	^ self size = 0.// sizesend160538 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26686 = (Object)new_Type_String(L"isEmpty");string26687 = (Object)new_Type_String(L"isEmpty \n\t^ self size = 0.");smallint26552 = (Object)new_Type_SmallInt(-1);smallint26553 = (Object)new_Type_SmallInt(-1);info5306 = (Object)new_AST_Info((Type_String)string26687,(Type_String)string26686, (Type_SmallInt)smallint26552, (Type_SmallInt)smallint26553);((AST_Send)send160538)->info = (AST_Info)info5306;smallint26554 = (Object)new_Type_SmallInt(0);constant34614 = (Object)new_AST_Constant((Object)smallint26554);// =send160539 = (Object)new_AST_Send((Object)send160538, (Object)SMB__equal, 1, (Object)constant34614);((AST_Send)send160539)->info = (AST_Info)info5306;method41048 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160539);((AST_Method)method41048)->info = (AST_Info)info5306;methodclosure40951 = (Object)new_Runtime_MethodClosure(method41048);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44129, (Runtime_MethodClosure)methodclosure40951);// String>>asPEG//asPEG// 	^ PEGTerminal new: selfclassreference13412 = (Object)new_Organization_ClassReference((Type_Class)class6742);// PEGTerminal>>not//not// 	(string size = 1)// 		ifFalse: [ self error: 'Only allowed on terminals of size 1' ].// 	^ PEGNotExpression new: self// sizesend160540 = (Object)new_AST_Send((Object)instancevariable16417, (Object)SMB_size, 0);string26688 = (Object)new_Type_String(L"not");string26689 = (Object)new_Type_String(L"not\n\t(string size = 1)\n\t\tifFalse: [ self error: \'Only allowed on terminals of size 1\' ].\n\t^ PEGNotExpression new: self");smallint26555 = (Object)new_Type_SmallInt(-1);smallint26556 = (Object)new_Type_SmallInt(-1);info5307 = (Object)new_AST_Info((Type_String)string26689,(Type_String)string26688, (Type_SmallInt)smallint26555, (Type_SmallInt)smallint26556);((AST_Send)send160540)->info = (AST_Info)info5307;smallint26557 = (Object)new_Type_SmallInt(1);constant34615 = (Object)new_AST_Constant((Object)smallint26557);// =send160541 = (Object)new_AST_Send((Object)send160540, (Object)SMB__equal, 1, (Object)constant34615);((AST_Send)send160541)->info = (AST_Info)info5307;string26690 = (Object)new_Type_String(L"Only allowed on terminals of size 1");constant34616 = (Object)new_AST_Constant((Object)string26690);// error:send160542 = (Object)new_AST_Send((Object)Self, (Object)symbol44394, 1, (Object)constant34616);((AST_Send)send160542)->info = (AST_Info)info5307;block11726 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160542);// ifFalse:send160543 = (Object)new_AST_Send((Object)send160541, (Object)SMB_ifFalse_, 1, (Object)block11726);((AST_Send)send160543)->info = (AST_Info)info5307;classreference13413 = (Object)new_Organization_ClassReference((Type_Class)class6738);// PEGNotExpression>>initialize://initialize: theChild// 	super initialize.// 	child := theChildlocalvariable26999 = (Object)new_AST_Variable_named(L"theChild");array24086 = (Object)new_Type_Array_with(1, (Object)localvariable26999);super2464 = (Object)new_AST_Super((Object)symbol44004, 0);assign20159 = (Object)new_AST_Assign((Object)instancevariable16412, (Object)localvariable26999);method41049 = (Object)new_AST_Method_with((Type_Array)array24086, (Type_Array)empty_Type_Array, 3, super2464, assign20159, Self);string26691 = (Object)new_Type_String(L"initialize:");string26692 = (Object)new_Type_String(L"initialize: theChild\n\tsuper initialize.\n\tchild := theChild");smallint26558 = (Object)new_Type_SmallInt(-1);smallint26559 = (Object)new_Type_SmallInt(-1);info5308 = (Object)new_AST_Info((Type_String)string26692,(Type_String)string26691, (Type_SmallInt)smallint26558, (Type_SmallInt)smallint26559);((AST_Method)method41049)->info = (AST_Info)info5308;symbol44363 = (Object)new_Type_Symbol_cached(L"initialize:");methodclosure40952 = (Object)new_Runtime_MethodClosure(method41049);store_method((Type_Class)class6738, (Type_Symbol)symbol44363, (Runtime_MethodClosure)methodclosure40952);// PEGNotExpression>>privateMatch://privateMatch: input// 	| match |// 	match := child match: input.// 	match ifNil: [// 		self consume ifFalse: [ ^ true ]. " If we don't consume, just succeed and continue. '"// 		^ input next ifNotNil: [ :char | char asString ]. " If we consume, we fail if next is end of string (nil) "// 		].// 	^ nil.localvariable27000 = (Object)new_AST_Variable_named(L"input");array24087 = (Object)new_Type_Array_with(1, (Object)localvariable27000);localvariable27001 = (Object)new_AST_Variable_named(L"match");array24088 = (Object)new_Type_Array_with(1, (Object)localvariable27001);variable1858 = (Object)new_AST_Variable_named(L"return");array24089 = (Object)new_Type_Array_with(1, (Object)variable1858);symbol44329 = (Object)new_Type_Symbol_cached(L"match:");// match:send160544 = (Object)new_AST_Send((Object)instancevariable16412, (Object)symbol44329, 1, (Object)localvariable27000);string26693 = (Object)new_Type_String(L"privateMatch:");string26694 = (Object)new_Type_String(L"privateMatch: input\n\t| match |\n\tmatch := child match: input.\n\tmatch ifNil: [\n\t\tself consume ifFalse: [ ^ true ]. \" If we don\'t consume, just succeed and continue. \'\"\n\t\t^ input next ifNotNil: [ :char | char asString ]. \" If we consume, we fail if next is end of string (nil) \"\n\t\t].\n\t^ nil.");smallint26560 = (Object)new_Type_SmallInt(-1);smallint26561 = (Object)new_Type_SmallInt(-1);info5309 = (Object)new_AST_Info((Type_String)string26694,(Type_String)string26693, (Type_SmallInt)smallint26560, (Type_SmallInt)smallint26561);((AST_Send)send160544)->info = (AST_Info)info5309;assign20160 = (Object)new_AST_Assign((Object)localvariable27001, (Object)send160544);symbol44376 = (Object)new_Type_Symbol_cached(L"consume");// consumesend160545 = (Object)new_AST_Send((Object)Self, (Object)symbol44376, 0);((AST_Send)send160545)->info = (AST_Info)info5309;// escape:send160546 = (Object)new_AST_Send((Object)variable1858, (Object)SMB_escape_, 1, (Object)True_Const);((AST_Send)send160546)->info = (AST_Info)info5309;block11727 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160546);// ifFalse:send160547 = (Object)new_AST_Send((Object)send160545, (Object)SMB_ifFalse_, 1, (Object)block11727);((AST_Send)send160547)->info = (AST_Info)info5309;symbol44403 = (Object)new_Type_Symbol_cached(L"next");// nextsend160548 = (Object)new_AST_Send((Object)localvariable27000, (Object)symbol44403, 0);((AST_Send)send160548)->info = (AST_Info)info5309;symbol44404 = (Object)new_Type_Symbol_cached(L"ifNotNil:");localvariable27002 = (Object)new_AST_Variable_named(L"char");array24090 = (Object)new_Type_Array_with(1, (Object)localvariable27002);// asStringsend160549 = (Object)new_AST_Send((Object)localvariable27002, (Object)SMB_asString, 0);((AST_Send)send160549)->info = (AST_Info)info5309;block11728 = (Object)new_AST_Block_with((Type_Array)array24090, (Type_Array)empty_Type_Array, 3, 1, send160549);// ifNotNil:send160550 = (Object)new_AST_Send((Object)send160548, (Object)symbol44404, 1, (Object)block11728);((AST_Send)send160550)->info = (AST_Info)info5309;// escape:send160551 = (Object)new_AST_Send((Object)variable1858, (Object)SMB_escape_, 1, (Object)send160550);((AST_Send)send160551)->info = (AST_Info)info5309;block11729 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send160547, send160551);// ifNil:send160552 = (Object)new_AST_Send((Object)localvariable27001, (Object)symbol44005, 1, (Object)block11729);((AST_Send)send160552)->info = (AST_Info)info5309;block11730 = (Object)new_AST_Block_with((Type_Array)array24089, (Type_Array)empty_Type_Array, 1, 3, assign20160, send160552, Nil_Const);// on:send160553 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11730);method41050 = (Object)new_AST_Method_with((Type_Array)array24087, (Type_Array)array24088, 1, send160553);((AST_Method)method41050)->info = (AST_Info)info5309;symbol44325 = (Object)new_Type_Symbol_cached(L"privateMatch:");methodclosure40953 = (Object)new_Runtime_MethodClosure(method41050);store_method((Type_Class)class6738, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure40953);// PEGNotExpression>>consume//consume// 	^ omit not// notsend160554 = (Object)new_AST_Send((Object)instancevariable16411, (Object)SMB_not, 0);string26695 = (Object)new_Type_String(L"consume");string26696 = (Object)new_Type_String(L"consume\n\t^ omit not");smallint26562 = (Object)new_Type_SmallInt(-1);smallint26563 = (Object)new_Type_SmallInt(-1);info5310 = (Object)new_AST_Info((Type_String)string26696,(Type_String)string26695, (Type_SmallInt)smallint26562, (Type_SmallInt)smallint26563);((AST_Send)send160554)->info = (AST_Info)info5310;method41051 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160554);((AST_Method)method41051)->info = (AST_Info)info5310;methodclosure40954 = (Object)new_Runtime_MethodClosure(method41051);store_method((Type_Class)class6738, (Type_Symbol)symbol44376, (Runtime_MethodClosure)methodclosure40954);// PEGNotExpression>>consume://consume: bool// 	" As 'optimization' we make consume depend on omit. "// 	omit := bool not.localvariable27003 = (Object)new_AST_Variable_named(L"bool");array24091 = (Object)new_Type_Array_with(1, (Object)localvariable27003);// notsend160555 = (Object)new_AST_Send((Object)localvariable27003, (Object)SMB_not, 0);string26697 = (Object)new_Type_String(L"consume:");string26698 = (Object)new_Type_String(L"consume: bool\n\t\" As \'optimization\' we make consume depend on omit. \"\n\tomit := bool not.");smallint26564 = (Object)new_Type_SmallInt(-1);smallint26565 = (Object)new_Type_SmallInt(-1);info5311 = (Object)new_AST_Info((Type_String)string26698,(Type_String)string26697, (Type_SmallInt)smallint26564, (Type_SmallInt)smallint26565);((AST_Send)send160555)->info = (AST_Info)info5311;assign20161 = (Object)new_AST_Assign((Object)instancevariable16411, (Object)send160555);method41052 = (Object)new_AST_Method_with((Type_Array)array24091, (Type_Array)empty_Type_Array, 2, assign20161, Self);((AST_Method)method41052)->info = (AST_Info)info5311;symbol44377 = (Object)new_Type_Symbol_cached(L"consume:");methodclosure40955 = (Object)new_Runtime_MethodClosure(method41052);store_method((Type_Class)class6738, (Type_Symbol)symbol44377, (Runtime_MethodClosure)methodclosure40955);// new:send160556 = (Object)new_AST_Send((Object)classreference13413, (Object)symbol44091, 1, (Object)Self);((AST_Send)send160556)->info = (AST_Info)info5307;method41053 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160543, send160556);((AST_Method)method41053)->info = (AST_Info)info5307;methodclosure40956 = (Object)new_Runtime_MethodClosure(method41053);store_method((Type_Class)class6742, (Type_Symbol)SMB_not, (Runtime_MethodClosure)methodclosure40956);// PEGTerminal>>privateMatch://privateMatch: input// 	^ input scan: stringlocalvariable27004 = (Object)new_AST_Variable_named(L"input");array24092 = (Object)new_Type_Array_with(1, (Object)localvariable27004);symbol44156 = (Object)new_Type_Symbol_cached(L"scan:");// scan:send160557 = (Object)new_AST_Send((Object)localvariable27004, (Object)symbol44156, 1, (Object)instancevariable16417);string26699 = (Object)new_Type_String(L"privateMatch:");string26700 = (Object)new_Type_String(L"privateMatch: input\n\t^ input scan: string");smallint26566 = (Object)new_Type_SmallInt(-1);smallint26567 = (Object)new_Type_SmallInt(-1);info5312 = (Object)new_AST_Info((Type_String)string26700,(Type_String)string26699, (Type_SmallInt)smallint26566, (Type_SmallInt)smallint26567);((AST_Send)send160557)->info = (AST_Info)info5312;method41054 = (Object)new_AST_Method_with((Type_Array)array24092, (Type_Array)empty_Type_Array, 1, send160557);((AST_Method)method41054)->info = (AST_Info)info5312;methodclosure40957 = (Object)new_Runtime_MethodClosure(method41054);store_method((Type_Class)class6742, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure40957);// PEGTerminal>>initialize://initialize: aString// 	super initialize.// 	string := aString.// 	self name: '''', string, ''''localvariable27005 = (Object)new_AST_Variable_named(L"aString");array24093 = (Object)new_Type_Array_with(1, (Object)localvariable27005);super2465 = (Object)new_AST_Super((Object)symbol44004, 0);assign20162 = (Object)new_AST_Assign((Object)instancevariable16417, (Object)localvariable27005);string26701 = (Object)new_Type_String(L"\'");constant34617 = (Object)new_AST_Constant((Object)string26701);// ,send160558 = (Object)new_AST_Send((Object)constant34617, (Object)SMB__concat, 1, (Object)instancevariable16417);string26702 = (Object)new_Type_String(L"initialize:");string26703 = (Object)new_Type_String(L"initialize: aString\n\tsuper initialize.\n\tstring := aString.\n\tself name: \'\'\'\', string, \'\'\'\'");smallint26568 = (Object)new_Type_SmallInt(-1);smallint26569 = (Object)new_Type_SmallInt(-1);info5313 = (Object)new_AST_Info((Type_String)string26703,(Type_String)string26702, (Type_SmallInt)smallint26568, (Type_SmallInt)smallint26569);((AST_Send)send160558)->info = (AST_Info)info5313;string26704 = (Object)new_Type_String(L"\'");constant34618 = (Object)new_AST_Constant((Object)string26704);// ,send160559 = (Object)new_AST_Send((Object)send160558, (Object)SMB__concat, 1, (Object)constant34618);((AST_Send)send160559)->info = (AST_Info)info5313;// name:send160560 = (Object)new_AST_Send((Object)Self, (Object)symbol44204, 1, (Object)send160559);((AST_Send)send160560)->info = (AST_Info)info5313;method41055 = (Object)new_AST_Method_with((Type_Array)array24093, (Type_Array)empty_Type_Array, 4, super2465, assign20162, send160560, Self);((AST_Method)method41055)->info = (AST_Info)info5313;methodclosure40958 = (Object)new_Runtime_MethodClosure(method41055);store_method((Type_Class)class6742, (Type_Symbol)symbol44363, (Runtime_MethodClosure)methodclosure40958);// new:send160561 = (Object)new_AST_Send((Object)classreference13412, (Object)symbol44091, 1, (Object)Self);string26705 = (Object)new_Type_String(L"asPEG");string26706 = (Object)new_Type_String(L"asPEG\n\t^ PEGTerminal new: self");smallint26570 = (Object)new_Type_SmallInt(-1);smallint26571 = (Object)new_Type_SmallInt(-1);info5314 = (Object)new_AST_Info((Type_String)string26706,(Type_String)string26705, (Type_SmallInt)smallint26570, (Type_SmallInt)smallint26571);((AST_Send)send160561)->info = (AST_Info)info5314;method41056 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160561);((AST_Method)method41056)->info = (AST_Info)info5314;methodclosure40959 = (Object)new_Runtime_MethodClosure(method41056);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44131, (Runtime_MethodClosure)methodclosure40959);// String>>asPEGChoice//asPEGChoice// 	| result |// 	result := PEGOrderedChoiceExpression new.// 	self do: [ :char | result <= char asPEG ].// 	^ resultlocalvariable27006 = (Object)new_AST_Variable_named(L"result");array24094 = (Object)new_Type_Array_with(1, (Object)localvariable27006);classreference13414 = (Object)new_Organization_ClassReference((Type_Class)class6753);// PEGOrderedChoiceExpression>>initialize//initialize// 	super initialize.// 	self initialize: OrderedCollection new.super2466 = (Object)new_AST_Super((Object)symbol44004, 0);// newsend160562 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26707 = (Object)new_Type_String(L"initialize");string26708 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tself initialize: OrderedCollection new.");smallint26572 = (Object)new_Type_SmallInt(-1);smallint26573 = (Object)new_Type_SmallInt(-1);info5315 = (Object)new_AST_Info((Type_String)string26708,(Type_String)string26707, (Type_SmallInt)smallint26572, (Type_SmallInt)smallint26573);((AST_Send)send160562)->info = (AST_Info)info5315;// initialize:send160563 = (Object)new_AST_Send((Object)Self, (Object)symbol44363, 1, (Object)send160562);((AST_Send)send160563)->info = (AST_Info)info5315;method41057 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super2466, send160563, Self);((AST_Method)method41057)->info = (AST_Info)info5315;methodclosure40960 = (Object)new_Runtime_MethodClosure(method41057);store_method((Type_Class)class6753, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure40960);// PEGOrderedChoiceExpression>>initialize://initialize: newChildren// 	super initialize.// 	children := newChildrenlocalvariable27007 = (Object)new_AST_Variable_named(L"newChildren");array24095 = (Object)new_Type_Array_with(1, (Object)localvariable27007);super2467 = (Object)new_AST_Super((Object)symbol44004, 0);assign20163 = (Object)new_AST_Assign((Object)instancevariable16434, (Object)localvariable27007);method41058 = (Object)new_AST_Method_with((Type_Array)array24095, (Type_Array)empty_Type_Array, 3, super2467, assign20163, Self);string26709 = (Object)new_Type_String(L"initialize:");string26710 = (Object)new_Type_String(L"initialize: newChildren\n\tsuper initialize.\n\tchildren := newChildren");smallint26574 = (Object)new_Type_SmallInt(-1);smallint26575 = (Object)new_Type_SmallInt(-1);info5316 = (Object)new_AST_Info((Type_String)string26710,(Type_String)string26709, (Type_SmallInt)smallint26574, (Type_SmallInt)smallint26575);((AST_Method)method41058)->info = (AST_Info)info5316;methodclosure40961 = (Object)new_Runtime_MethodClosure(method41058);store_method((Type_Class)class6753, (Type_Symbol)symbol44363, (Runtime_MethodClosure)methodclosure40961);// PEGOrderedChoiceExpression>>privateMatch://privateMatch: input// 	|match |// 	children do: [ :child |// 		match := child match: input.// 		match ifNotNil: [ ^ match].// 	].// 	^ nillocalvariable27008 = (Object)new_AST_Variable_named(L"input");array24096 = (Object)new_Type_Array_with(1, (Object)localvariable27008);localvariable27009 = (Object)new_AST_Variable_named(L"match");array24097 = (Object)new_Type_Array_with(1, (Object)localvariable27009);variable1859 = (Object)new_AST_Variable_named(L"return");array24098 = (Object)new_Type_Array_with(1, (Object)variable1859);localvariable27010 = (Object)new_AST_Variable_named(L"child");array24099 = (Object)new_Type_Array_with(1, (Object)localvariable27010);// match:send160564 = (Object)new_AST_Send((Object)localvariable27010, (Object)symbol44329, 1, (Object)localvariable27008);string26711 = (Object)new_Type_String(L"privateMatch:");string26712 = (Object)new_Type_String(L"privateMatch: input\n\t|match |\n\tchildren do: [ :child |\n\t\tmatch := child match: input.\n\t\tmatch ifNotNil: [ ^ match].\n\t].\n\t^ nil");smallint26576 = (Object)new_Type_SmallInt(-1);smallint26577 = (Object)new_Type_SmallInt(-1);info5317 = (Object)new_AST_Info((Type_String)string26712,(Type_String)string26711, (Type_SmallInt)smallint26576, (Type_SmallInt)smallint26577);((AST_Send)send160564)->info = (AST_Info)info5317;assign20164 = (Object)new_AST_Assign((Object)localvariable27009, (Object)send160564);// escape:send160565 = (Object)new_AST_Send((Object)variable1859, (Object)SMB_escape_, 1, (Object)localvariable27009);((AST_Send)send160565)->info = (AST_Info)info5317;block11731 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160565);// ifNotNil:send160566 = (Object)new_AST_Send((Object)localvariable27009, (Object)symbol44404, 1, (Object)block11731);((AST_Send)send160566)->info = (AST_Info)info5317;block11732 = (Object)new_AST_Block_with((Type_Array)array24099, (Type_Array)empty_Type_Array, 2, 2, assign20164, send160566);// do:send160567 = (Object)new_AST_Send((Object)instancevariable16434, (Object)symbol44127, 1, (Object)block11732);((AST_Send)send160567)->info = (AST_Info)info5317;block11733 = (Object)new_AST_Block_with((Type_Array)array24098, (Type_Array)empty_Type_Array, 1, 2, send160567, Nil_Const);// on:send160568 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11733);method41059 = (Object)new_AST_Method_with((Type_Array)array24096, (Type_Array)array24097, 1, send160568);((AST_Method)method41059)->info = (AST_Info)info5317;methodclosure40962 = (Object)new_Runtime_MethodClosure(method41059);store_method((Type_Class)class6753, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure40962);// PEGOrderedChoiceExpression>><=//<= child// 	children add: child asPEGlocalvariable27011 = (Object)new_AST_Variable_named(L"child");array24100 = (Object)new_Type_Array_with(1, (Object)localvariable27011);// asPEGsend160569 = (Object)new_AST_Send((Object)localvariable27011, (Object)symbol44131, 0);string26713 = (Object)new_Type_String(L"<=");string26714 = (Object)new_Type_String(L"<= child\n\tchildren add: child asPEG");smallint26578 = (Object)new_Type_SmallInt(-1);smallint26579 = (Object)new_Type_SmallInt(-1);info5318 = (Object)new_AST_Info((Type_String)string26714,(Type_String)string26713, (Type_SmallInt)smallint26578, (Type_SmallInt)smallint26579);((AST_Send)send160569)->info = (AST_Info)info5318;// add:send160570 = (Object)new_AST_Send((Object)instancevariable16434, (Object)symbol44183, 1, (Object)send160569);((AST_Send)send160570)->info = (AST_Info)info5318;method41060 = (Object)new_AST_Method_with((Type_Array)array24100, (Type_Array)empty_Type_Array, 2, send160570, Self);((AST_Method)method41060)->info = (AST_Info)info5318;methodclosure40963 = (Object)new_Runtime_MethodClosure(method41060);store_method((Type_Class)class6753, (Type_Symbol)symbol44136, (Runtime_MethodClosure)methodclosure40963);// newsend160571 = (Object)new_AST_Send((Object)classreference13414, (Object)symbol44095, 0);string26715 = (Object)new_Type_String(L"asPEGChoice");string26716 = (Object)new_Type_String(L"asPEGChoice\n\t| result |\n\tresult := PEGOrderedChoiceExpression new.\n\tself do: [ :char | result <= char asPEG ].\n\t^ result");smallint26580 = (Object)new_Type_SmallInt(-1);smallint26581 = (Object)new_Type_SmallInt(-1);info5319 = (Object)new_AST_Info((Type_String)string26716,(Type_String)string26715, (Type_SmallInt)smallint26580, (Type_SmallInt)smallint26581);((AST_Send)send160571)->info = (AST_Info)info5319;assign20165 = (Object)new_AST_Assign((Object)localvariable27006, (Object)send160571);localvariable27012 = (Object)new_AST_Variable_named(L"char");array24101 = (Object)new_Type_Array_with(1, (Object)localvariable27012);// asPEGsend160572 = (Object)new_AST_Send((Object)localvariable27012, (Object)symbol44131, 0);((AST_Send)send160572)->info = (AST_Info)info5319;// <=send160573 = (Object)new_AST_Send((Object)localvariable27006, (Object)symbol44136, 1, (Object)send160572);((AST_Send)send160573)->info = (AST_Info)info5319;block11734 = (Object)new_AST_Block_with((Type_Array)array24101, (Type_Array)empty_Type_Array, 1, 1, send160573);// do:send160574 = (Object)new_AST_Send((Object)Self, (Object)symbol44127, 1, (Object)block11734);((AST_Send)send160574)->info = (AST_Info)info5319;method41061 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24094, 3, assign20165, send160574, localvariable27006);((AST_Method)method41061)->info = (AST_Info)info5319;symbol44126 = (Object)new_Type_Symbol_cached(L"asPEGChoice");methodclosure40964 = (Object)new_Runtime_MethodClosure(method41061);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44126, (Runtime_MethodClosure)methodclosure40964);// String>>copy//copy// 	^ self asSymbol asString// asSymbolsend160575 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSymbol, 0);string26717 = (Object)new_Type_String(L"copy");string26718 = (Object)new_Type_String(L"copy\n\t^ self asSymbol asString");smallint26582 = (Object)new_Type_SmallInt(-1);smallint26583 = (Object)new_Type_SmallInt(-1);info5320 = (Object)new_AST_Info((Type_String)string26718,(Type_String)string26717, (Type_SmallInt)smallint26582, (Type_SmallInt)smallint26583);((AST_Send)send160575)->info = (AST_Info)info5320;// asStringsend160576 = (Object)new_AST_Send((Object)send160575, (Object)SMB_asString, 0);((AST_Send)send160576)->info = (AST_Info)info5320;method41062 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160576);((AST_Method)method41062)->info = (AST_Info)info5320;symbol44128 = (Object)new_Type_Symbol_cached(L"copy");methodclosure40965 = (Object)new_Runtime_MethodClosure(method41062);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44128, (Runtime_MethodClosure)methodclosure40965);// String>>asPEGRange//asPEGRange// 	((self size = 3) and: [ (self at: 2) = $- ])// 		ifFalse: [ self error: 'Cannot convert ', self, ' to PEG range. Expected format: beginchar-endchar' ].// 	^ PEGRange between: (self at: 1) and: (self at: 3)// sizesend160577 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26719 = (Object)new_Type_String(L"asPEGRange");string26720 = (Object)new_Type_String(L"asPEGRange\n\t((self size = 3) and: [ (self at: 2) = $- ])\n\t\tifFalse: [ self error: \'Cannot convert \', self, \' to PEG range. Expected format: beginchar-endchar\' ].\n\t^ PEGRange between: (self at: 1) and: (self at: 3)");smallint26584 = (Object)new_Type_SmallInt(-1);smallint26585 = (Object)new_Type_SmallInt(-1);info5321 = (Object)new_AST_Info((Type_String)string26720,(Type_String)string26719, (Type_SmallInt)smallint26584, (Type_SmallInt)smallint26585);((AST_Send)send160577)->info = (AST_Info)info5321;smallint26586 = (Object)new_Type_SmallInt(3);constant34619 = (Object)new_AST_Constant((Object)smallint26586);// =send160578 = (Object)new_AST_Send((Object)send160577, (Object)SMB__equal, 1, (Object)constant34619);((AST_Send)send160578)->info = (AST_Info)info5321;smallint26587 = (Object)new_Type_SmallInt(2);constant34620 = (Object)new_AST_Constant((Object)smallint26587);// at:send160579 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant34620);((AST_Send)send160579)->info = (AST_Info)info5321;character686 = (Object)new_Type_Character(L'-');constant34621 = (Object)new_AST_Constant((Object)character686);// =send160580 = (Object)new_AST_Send((Object)send160579, (Object)SMB__equal, 1, (Object)constant34621);((AST_Send)send160580)->info = (AST_Info)info5321;block11735 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160580);// and:send160581 = (Object)new_AST_Send((Object)send160578, (Object)symbol44120, 1, (Object)block11735);((AST_Send)send160581)->info = (AST_Info)info5321;string26721 = (Object)new_Type_String(L"Cannot convert ");constant34622 = (Object)new_AST_Constant((Object)string26721);// ,send160582 = (Object)new_AST_Send((Object)constant34622, (Object)SMB__concat, 1, (Object)Self);((AST_Send)send160582)->info = (AST_Info)info5321;string26722 = (Object)new_Type_String(L" to PEG range. Expected format: beginchar-endchar");constant34623 = (Object)new_AST_Constant((Object)string26722);// ,send160583 = (Object)new_AST_Send((Object)send160582, (Object)SMB__concat, 1, (Object)constant34623);((AST_Send)send160583)->info = (AST_Info)info5321;// error:send160584 = (Object)new_AST_Send((Object)Self, (Object)symbol44394, 1, (Object)send160583);((AST_Send)send160584)->info = (AST_Info)info5321;block11736 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160584);// ifFalse:send160585 = (Object)new_AST_Send((Object)send160581, (Object)SMB_ifFalse_, 1, (Object)block11736);((AST_Send)send160585)->info = (AST_Info)info5321;classreference13415 = (Object)new_Organization_ClassReference((Type_Class)class6745);// PEGRange>>start://start: int// 	start := intlocalvariable27013 = (Object)new_AST_Variable_named(L"int");array24102 = (Object)new_Type_Array_with(1, (Object)localvariable27013);assign20166 = (Object)new_AST_Assign((Object)instancevariable16420, (Object)localvariable27013);method41063 = (Object)new_AST_Method_with((Type_Array)array24102, (Type_Array)empty_Type_Array, 2, assign20166, Self);string26723 = (Object)new_Type_String(L"start:");string26724 = (Object)new_Type_String(L"start: int\n\tstart := int");smallint26588 = (Object)new_Type_SmallInt(-1);smallint26589 = (Object)new_Type_SmallInt(-1);info5322 = (Object)new_AST_Info((Type_String)string26724,(Type_String)string26723, (Type_SmallInt)smallint26588, (Type_SmallInt)smallint26589);((AST_Method)method41063)->info = (AST_Info)info5322;symbol44361 = (Object)new_Type_Symbol_cached(L"start:");methodclosure40966 = (Object)new_Runtime_MethodClosure(method41063);store_method((Type_Class)class6745, (Type_Symbol)symbol44361, (Runtime_MethodClosure)methodclosure40966);// PEGRange>>privateMatch://privateMatch: input// 	| char |// 	char := input next.// 	char ifNil: [ ^ char ].// 	(char >= start and: [ char <= stop ])// 		ifTrue: [ ^ char asString ].// 	^ nillocalvariable27014 = (Object)new_AST_Variable_named(L"input");array24103 = (Object)new_Type_Array_with(1, (Object)localvariable27014);localvariable27015 = (Object)new_AST_Variable_named(L"char");array24104 = (Object)new_Type_Array_with(1, (Object)localvariable27015);variable1860 = (Object)new_AST_Variable_named(L"return");array24105 = (Object)new_Type_Array_with(1, (Object)variable1860);// nextsend160586 = (Object)new_AST_Send((Object)localvariable27014, (Object)symbol44403, 0);string26725 = (Object)new_Type_String(L"privateMatch:");string26726 = (Object)new_Type_String(L"privateMatch: input\n\t| char |\n\tchar := input next.\n\tchar ifNil: [ ^ char ].\n\t(char >= start and: [ char <= stop ])\n\t\tifTrue: [ ^ char asString ].\n\t^ nil");smallint26590 = (Object)new_Type_SmallInt(-1);smallint26591 = (Object)new_Type_SmallInt(-1);info5323 = (Object)new_AST_Info((Type_String)string26726,(Type_String)string26725, (Type_SmallInt)smallint26590, (Type_SmallInt)smallint26591);((AST_Send)send160586)->info = (AST_Info)info5323;assign20167 = (Object)new_AST_Assign((Object)localvariable27015, (Object)send160586);// escape:send160587 = (Object)new_AST_Send((Object)variable1860, (Object)SMB_escape_, 1, (Object)localvariable27015);((AST_Send)send160587)->info = (AST_Info)info5323;block11737 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160587);// ifNil:send160588 = (Object)new_AST_Send((Object)localvariable27015, (Object)symbol44005, 1, (Object)block11737);((AST_Send)send160588)->info = (AST_Info)info5323;symbol44405 = (Object)new_Type_Symbol_cached(L">=");// >=send160589 = (Object)new_AST_Send((Object)localvariable27015, (Object)symbol44405, 1, (Object)instancevariable16420);((AST_Send)send160589)->info = (AST_Info)info5323;// <=send160590 = (Object)new_AST_Send((Object)localvariable27015, (Object)symbol44136, 1, (Object)instancevariable16421);((AST_Send)send160590)->info = (AST_Info)info5323;block11738 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160590);// and:send160591 = (Object)new_AST_Send((Object)send160589, (Object)symbol44120, 1, (Object)block11738);((AST_Send)send160591)->info = (AST_Info)info5323;// asStringsend160592 = (Object)new_AST_Send((Object)localvariable27015, (Object)SMB_asString, 0);((AST_Send)send160592)->info = (AST_Info)info5323;// escape:send160593 = (Object)new_AST_Send((Object)variable1860, (Object)SMB_escape_, 1, (Object)send160592);((AST_Send)send160593)->info = (AST_Info)info5323;block11739 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160593);// ifTrue:send160594 = (Object)new_AST_Send((Object)send160591, (Object)SMB_ifTrue_, 1, (Object)block11739);((AST_Send)send160594)->info = (AST_Info)info5323;block11740 = (Object)new_AST_Block_with((Type_Array)array24105, (Type_Array)empty_Type_Array, 1, 4, assign20167, send160588, send160594, Nil_Const);// on:send160595 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11740);method41064 = (Object)new_AST_Method_with((Type_Array)array24103, (Type_Array)array24104, 1, send160595);((AST_Method)method41064)->info = (AST_Info)info5323;methodclosure40967 = (Object)new_Runtime_MethodClosure(method41064);store_method((Type_Class)class6745, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure40967);// PEGRange>>stop://stop: int// 	stop := intlocalvariable27016 = (Object)new_AST_Variable_named(L"int");array24106 = (Object)new_Type_Array_with(1, (Object)localvariable27016);assign20168 = (Object)new_AST_Assign((Object)instancevariable16421, (Object)localvariable27016);method41065 = (Object)new_AST_Method_with((Type_Array)array24106, (Type_Array)empty_Type_Array, 2, assign20168, Self);string26727 = (Object)new_Type_String(L"stop:");string26728 = (Object)new_Type_String(L"stop: int\n\tstop := int");smallint26592 = (Object)new_Type_SmallInt(-1);smallint26593 = (Object)new_Type_SmallInt(-1);info5324 = (Object)new_AST_Info((Type_String)string26728,(Type_String)string26727, (Type_SmallInt)smallint26592, (Type_SmallInt)smallint26593);((AST_Method)method41065)->info = (AST_Info)info5324;symbol44362 = (Object)new_Type_Symbol_cached(L"stop:");methodclosure40968 = (Object)new_Runtime_MethodClosure(method41065);store_method((Type_Class)class6745, (Type_Symbol)symbol44362, (Runtime_MethodClosure)methodclosure40968);// a PMetaclass P#PEGRange>>between:and://between: start and: stop// 	^ self new// 		start: (start min: stop);// 		stop: (start max: stop)localvariable27017 = (Object)new_AST_Variable_named(L"start");localvariable27018 = (Object)new_AST_Variable_named(L"stop");array24107 = (Object)new_Type_Array_with(2, (Object)localvariable27017, (Object)localvariable27018);localvariable27019 = (Object)new_AST_Variable_named(L"receiver");array24108 = (Object)new_Type_Array_with(1, (Object)localvariable27019);// min:send160596 = (Object)new_AST_Send((Object)localvariable27017, (Object)symbol44148, 1, (Object)localvariable27018);string26729 = (Object)new_Type_String(L"between:and:");string26730 = (Object)new_Type_String(L"between: start and: stop\n\t^ self new\n\t\tstart: (start min: stop);\n\t\tstop: (start max: stop)");smallint26594 = (Object)new_Type_SmallInt(-1);smallint26595 = (Object)new_Type_SmallInt(-1);info5325 = (Object)new_AST_Info((Type_String)string26730,(Type_String)string26729, (Type_SmallInt)smallint26594, (Type_SmallInt)smallint26595);((AST_Send)send160596)->info = (AST_Info)info5325;// start:send160597 = (Object)new_AST_Send((Object)localvariable27019, (Object)symbol44361, 1, (Object)send160596);((AST_Send)send160597)->info = (AST_Info)info5325;// max:send160598 = (Object)new_AST_Send((Object)localvariable27017, (Object)symbol44137, 1, (Object)localvariable27018);((AST_Send)send160598)->info = (AST_Info)info5325;// stop:send160599 = (Object)new_AST_Send((Object)localvariable27019, (Object)symbol44362, 1, (Object)send160598);((AST_Send)send160599)->info = (AST_Info)info5325;block11741 = (Object)new_AST_Block_with((Type_Array)array24108, (Type_Array)empty_Type_Array, 1, 2, send160597, send160599);// newsend160600 = (Object)new_AST_Send((Object)Self, (Object)symbol44095, 0);((AST_Send)send160600)->info = (AST_Info)info5325;// value:send160601 = (Object)new_AST_Send((Object)block11741, (Object)SMB_value_, 1, (Object)send160600);((AST_Send)send160601)->info = (AST_Info)info5325;method41066 = (Object)new_AST_Method_with((Type_Array)array24107, (Type_Array)empty_Type_Array, 1, send160601);((AST_Method)method41066)->info = (AST_Info)info5325;symbol44360 = (Object)new_Type_Symbol_cached(L"between:and:");methodclosure40969 = (Object)new_Runtime_MethodClosure(method41066);store_method((Type_Class)metaclass5946, (Type_Symbol)symbol44360, (Runtime_MethodClosure)methodclosure40969);smallint26596 = (Object)new_Type_SmallInt(1);constant34624 = (Object)new_AST_Constant((Object)smallint26596);// at:send160602 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant34624);((AST_Send)send160602)->info = (AST_Info)info5321;smallint26597 = (Object)new_Type_SmallInt(3);constant34625 = (Object)new_AST_Constant((Object)smallint26597);// at:send160603 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant34625);((AST_Send)send160603)->info = (AST_Info)info5321;// between:and:send160604 = (Object)new_AST_Send((Object)classreference13415, (Object)symbol44360, 2, (Object)send160602, (Object)send160603);((AST_Send)send160604)->info = (AST_Info)info5321;method41067 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160585, send160604);((AST_Method)method41067)->info = (AST_Info)info5321;symbol44124 = (Object)new_Type_Symbol_cached(L"asPEGRange");methodclosure40970 = (Object)new_Runtime_MethodClosure(method41067);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44124, (Runtime_MethodClosure)methodclosure40970);// String>>capitalized//capitalized// 	"Return a copy with the first letter capitalized"// 	| cap |// 	self isEmpty ifTrue: [ ^self copy ].// 	cap := self copy.// 	cap at: 1 put: (cap at: 1) asUppercase.// 	^ caplocalvariable27020 = (Object)new_AST_Variable_named(L"cap");array24109 = (Object)new_Type_Array_with(1, (Object)localvariable27020);variable1861 = (Object)new_AST_Variable_named(L"return");array24110 = (Object)new_Type_Array_with(1, (Object)variable1861);// isEmptysend160605 = (Object)new_AST_Send((Object)Self, (Object)symbol44129, 0);string26731 = (Object)new_Type_String(L"capitalized");string26732 = (Object)new_Type_String(L"capitalized\n\t\"Return a copy with the first letter capitalized\"\n\t| cap |\n\tself isEmpty ifTrue: [ ^self copy ].\n\tcap := self copy.\n\tcap at: 1 put: (cap at: 1) asUppercase.\n\t^ cap");smallint26598 = (Object)new_Type_SmallInt(-1);smallint26599 = (Object)new_Type_SmallInt(-1);info5326 = (Object)new_AST_Info((Type_String)string26732,(Type_String)string26731, (Type_SmallInt)smallint26598, (Type_SmallInt)smallint26599);((AST_Send)send160605)->info = (AST_Info)info5326;// copysend160606 = (Object)new_AST_Send((Object)Self, (Object)symbol44128, 0);((AST_Send)send160606)->info = (AST_Info)info5326;// escape:send160607 = (Object)new_AST_Send((Object)variable1861, (Object)SMB_escape_, 1, (Object)send160606);((AST_Send)send160607)->info = (AST_Info)info5326;block11742 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160607);// ifTrue:send160608 = (Object)new_AST_Send((Object)send160605, (Object)SMB_ifTrue_, 1, (Object)block11742);((AST_Send)send160608)->info = (AST_Info)info5326;// copysend160609 = (Object)new_AST_Send((Object)Self, (Object)symbol44128, 0);((AST_Send)send160609)->info = (AST_Info)info5326;assign20169 = (Object)new_AST_Assign((Object)localvariable27020, (Object)send160609);smallint26600 = (Object)new_Type_SmallInt(1);constant34626 = (Object)new_AST_Constant((Object)smallint26600);smallint26601 = (Object)new_Type_SmallInt(1);constant34627 = (Object)new_AST_Constant((Object)smallint26601);// at:send160610 = (Object)new_AST_Send((Object)localvariable27020, (Object)SMB_at_, 1, (Object)constant34627);((AST_Send)send160610)->info = (AST_Info)info5326;// asUppercasesend160611 = (Object)new_AST_Send((Object)send160610, (Object)symbol44146, 0);((AST_Send)send160611)->info = (AST_Info)info5326;// at:put:send160612 = (Object)new_AST_Send((Object)localvariable27020, (Object)SMB_at_put_, 2, (Object)constant34626, (Object)send160611);((AST_Send)send160612)->info = (AST_Info)info5326;block11743 = (Object)new_AST_Block_with((Type_Array)array24110, (Type_Array)empty_Type_Array, 1, 4, send160608, assign20169, send160612, localvariable27020);// on:send160613 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11743);method41068 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24109, 1, send160613);((AST_Method)method41068)->info = (AST_Info)info5326;methodclosure40971 = (Object)new_Runtime_MethodClosure(method41068);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44132, (Runtime_MethodClosure)methodclosure40971);// String>>do://do: aBlock // 	"Refer to the comment in Collection|do:."// 	1 to: self size do:// 		[:index | aBlock value: (self at: index)]localvariable27021 = (Object)new_AST_Variable_named(L"aBlock");array24111 = (Object)new_Type_Array_with(1, (Object)localvariable27021);smallint26602 = (Object)new_Type_SmallInt(1);constant34628 = (Object)new_AST_Constant((Object)smallint26602);// sizesend160614 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26733 = (Object)new_Type_String(L"do:");string26734 = (Object)new_Type_String(L"do: aBlock \n\t\"Refer to the comment in Collection|do:.\"\n\t1 to: self size do:\n\t\t[:index | aBlock value: (self at: index)]");smallint26603 = (Object)new_Type_SmallInt(-1);smallint26604 = (Object)new_Type_SmallInt(-1);info5327 = (Object)new_AST_Info((Type_String)string26734,(Type_String)string26733, (Type_SmallInt)smallint26603, (Type_SmallInt)smallint26604);((AST_Send)send160614)->info = (AST_Info)info5327;localvariable27022 = (Object)new_AST_Variable_named(L"index");array24112 = (Object)new_Type_Array_with(1, (Object)localvariable27022);// at:send160615 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable27022);((AST_Send)send160615)->info = (AST_Info)info5327;// value:send160616 = (Object)new_AST_Send((Object)localvariable27021, (Object)SMB_value_, 1, (Object)send160615);((AST_Send)send160616)->info = (AST_Info)info5327;block11744 = (Object)new_AST_Block_with((Type_Array)array24112, (Type_Array)empty_Type_Array, 1, 1, send160616);// to:do:send160617 = (Object)new_AST_Send((Object)constant34628, (Object)symbol44135, 2, (Object)send160614, (Object)block11744);((AST_Send)send160617)->info = (AST_Info)info5327;method41069 = (Object)new_AST_Method_with((Type_Array)array24111, (Type_Array)empty_Type_Array, 2, send160617, Self);((AST_Method)method41069)->info = (AST_Info)info5327;methodclosure40972 = (Object)new_Runtime_MethodClosure(method41069);store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol44127, (Runtime_MethodClosure)methodclosure40972);// spacesend160618 = (Object)new_AST_Send((Object)classreference13411, (Object)symbol44143, 0);((AST_Send)send160618)->info = (AST_Info)info5305;// nextPutAll:send160619 = (Object)new_AST_Send((Object)localvariable26998, (Object)symbol44382, 1, (Object)send160618);((AST_Send)send160619)->info = (AST_Info)info5305;super2468 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable26998);method41070 = (Object)new_AST_Method_with((Type_Array)array24085, (Type_Array)empty_Type_Array, 4, send160537, send160619, super2468, Self);((AST_Method)method41070)->info = (AST_Info)info5305;methodclosure40973 = (Object)new_Runtime_MethodClosure(method41070);store_method((Type_Class)class6719, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40973);// ASTUnaryExpression>>receiver//receiver// 	^ receivermethod41071 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16388);string26735 = (Object)new_Type_String(L"receiver");string26736 = (Object)new_Type_String(L"receiver\n\t^ receiver");smallint26605 = (Object)new_Type_SmallInt(-1);smallint26606 = (Object)new_Type_SmallInt(-1);info5328 = (Object)new_AST_Info((Type_String)string26736,(Type_String)string26735, (Type_SmallInt)smallint26605, (Type_SmallInt)smallint26606);((AST_Method)method41071)->info = (AST_Info)info5328;methodclosure40974 = (Object)new_Runtime_MethodClosure(method41071);store_method((Type_Class)class6719, (Type_Symbol)symbol44218, (Runtime_MethodClosure)methodclosure40974);// ASTUnaryExpression>>receiver://receiver: anObject// 	receiver := anObjectlocalvariable27023 = (Object)new_AST_Variable_named(L"anObject");array24113 = (Object)new_Type_Array_with(1, (Object)localvariable27023);assign20170 = (Object)new_AST_Assign((Object)instancevariable16388, (Object)localvariable27023);method41072 = (Object)new_AST_Method_with((Type_Array)array24113, (Type_Array)empty_Type_Array, 2, assign20170, Self);string26737 = (Object)new_Type_String(L"receiver:");string26738 = (Object)new_Type_String(L"receiver: anObject\n\treceiver := anObject");smallint26607 = (Object)new_Type_SmallInt(-1);smallint26608 = (Object)new_Type_SmallInt(-1);info5329 = (Object)new_AST_Info((Type_String)string26738,(Type_String)string26737, (Type_SmallInt)smallint26607, (Type_SmallInt)smallint26608);((AST_Method)method41072)->info = (AST_Info)info5329;methodclosure40975 = (Object)new_Runtime_MethodClosure(method41072);store_method((Type_Class)class6719, (Type_Symbol)symbol44216, (Runtime_MethodClosure)methodclosure40975);classreference13416 = (Object)new_Organization_ClassReference((Type_Class)class6720);// ASTNumber>>asInteger//asInteger// 	^ (self base, 'r', self number) asNumber asIntegersymbol44189 = (Object)new_Type_Symbol_cached(L"base");// basesend160620 = (Object)new_AST_Send((Object)Self, (Object)symbol44189, 0);string26739 = (Object)new_Type_String(L"asInteger");string26740 = (Object)new_Type_String(L"asInteger\n\t^ (self base, \'r\', self number) asNumber asInteger");smallint26609 = (Object)new_Type_SmallInt(-1);smallint26610 = (Object)new_Type_SmallInt(-1);info5330 = (Object)new_AST_Info((Type_String)string26740,(Type_String)string26739, (Type_SmallInt)smallint26609, (Type_SmallInt)smallint26610);((AST_Send)send160620)->info = (AST_Info)info5330;string26741 = (Object)new_Type_String(L"r");constant34629 = (Object)new_AST_Constant((Object)string26741);// ,send160621 = (Object)new_AST_Send((Object)send160620, (Object)SMB__concat, 1, (Object)constant34629);((AST_Send)send160621)->info = (AST_Info)info5330;symbol44192 = (Object)new_Type_Symbol_cached(L"number");// numbersend160622 = (Object)new_AST_Send((Object)Self, (Object)symbol44192, 0);((AST_Send)send160622)->info = (AST_Info)info5330;// ,send160623 = (Object)new_AST_Send((Object)send160621, (Object)SMB__concat, 1, (Object)send160622);((AST_Send)send160623)->info = (AST_Info)info5330;symbol44406 = (Object)new_Type_Symbol_cached(L"asNumber");// asNumbersend160624 = (Object)new_AST_Send((Object)send160623, (Object)symbol44406, 0);((AST_Send)send160624)->info = (AST_Info)info5330;symbol44188 = (Object)new_Type_Symbol_cached(L"asInteger");// asIntegersend160625 = (Object)new_AST_Send((Object)send160624, (Object)symbol44188, 0);((AST_Send)send160625)->info = (AST_Info)info5330;method41073 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160625);((AST_Method)method41073)->info = (AST_Info)info5330;methodclosure40976 = (Object)new_Runtime_MethodClosure(method41073);store_method((Type_Class)class6720, (Type_Symbol)symbol44188, (Runtime_MethodClosure)methodclosure40976);// ASTNumber>>printOn://printOn: aStream// 	aStream nextPutAll: self number.localvariable27024 = (Object)new_AST_Variable_named(L"aStream");array24114 = (Object)new_Type_Array_with(1, (Object)localvariable27024);// numbersend160626 = (Object)new_AST_Send((Object)Self, (Object)symbol44192, 0);string26742 = (Object)new_Type_String(L"printOn:");string26743 = (Object)new_Type_String(L"printOn: aStream\n\taStream nextPutAll: self number.");smallint26611 = (Object)new_Type_SmallInt(-1);smallint26612 = (Object)new_Type_SmallInt(-1);info5331 = (Object)new_AST_Info((Type_String)string26743,(Type_String)string26742, (Type_SmallInt)smallint26611, (Type_SmallInt)smallint26612);((AST_Send)send160626)->info = (AST_Info)info5331;// nextPutAll:send160627 = (Object)new_AST_Send((Object)localvariable27024, (Object)symbol44382, 1, (Object)send160626);((AST_Send)send160627)->info = (AST_Info)info5331;method41074 = (Object)new_AST_Method_with((Type_Array)array24114, (Type_Array)empty_Type_Array, 2, send160627, Self);((AST_Method)method41074)->info = (AST_Info)info5331;methodclosure40977 = (Object)new_Runtime_MethodClosure(method41074);store_method((Type_Class)class6720, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40977);// ASTNumber>>number://number: anObject// 	number := anObjectlocalvariable27025 = (Object)new_AST_Variable_named(L"anObject");array24115 = (Object)new_Type_Array_with(1, (Object)localvariable27025);assign20171 = (Object)new_AST_Assign((Object)instancevariable16389, (Object)localvariable27025);method41075 = (Object)new_AST_Method_with((Type_Array)array24115, (Type_Array)empty_Type_Array, 2, assign20171, Self);string26744 = (Object)new_Type_String(L"number:");string26745 = (Object)new_Type_String(L"number: anObject\n\tnumber := anObject");smallint26613 = (Object)new_Type_SmallInt(-1);smallint26614 = (Object)new_Type_SmallInt(-1);info5332 = (Object)new_AST_Info((Type_String)string26745,(Type_String)string26744, (Type_SmallInt)smallint26613, (Type_SmallInt)smallint26614);((AST_Method)method41075)->info = (AST_Info)info5332;symbol44190 = (Object)new_Type_Symbol_cached(L"number:");methodclosure40978 = (Object)new_Runtime_MethodClosure(method41075);store_method((Type_Class)class6720, (Type_Symbol)symbol44190, (Runtime_MethodClosure)methodclosure40978);// ASTNumber>>number//number// 	^ numbermethod41076 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16389);string26746 = (Object)new_Type_String(L"number");string26747 = (Object)new_Type_String(L"number\n\t^ number");smallint26615 = (Object)new_Type_SmallInt(-1);smallint26616 = (Object)new_Type_SmallInt(-1);info5333 = (Object)new_AST_Info((Type_String)string26747,(Type_String)string26746, (Type_SmallInt)smallint26615, (Type_SmallInt)smallint26616);((AST_Method)method41076)->info = (AST_Info)info5333;methodclosure40979 = (Object)new_Runtime_MethodClosure(method41076);store_method((Type_Class)class6720, (Type_Symbol)symbol44192, (Runtime_MethodClosure)methodclosure40979);// ASTNumber>>asPSmallInt//asPSmallInt// 	^PSmallInt new int: self asIntegerclassreference13417 = (Object)new_Organization_ClassReference((Type_Class)Type_SmallInt_Class);// SmallInt>>to:do://to: stop do: aBlock // 	"Normally compiled in-line, and therefore not overridable.// 	Evaluate aBlock for each element of the interval (self to: stop by: 1)."// 	| nextValue |// 	nextValue := self.// 	[nextValue <= stop]// 		whileTrue: // 			[aBlock value: nextValue.// 			nextValue := nextValue + 1]localvariable27026 = (Object)new_AST_Variable_named(L"stop");localvariable27027 = (Object)new_AST_Variable_named(L"aBlock");array24116 = (Object)new_Type_Array_with(2, (Object)localvariable27026, (Object)localvariable27027);localvariable27028 = (Object)new_AST_Variable_named(L"nextValue");array24117 = (Object)new_Type_Array_with(1, (Object)localvariable27028);assign20172 = (Object)new_AST_Assign((Object)localvariable27028, (Object)Self);// <=send160628 = (Object)new_AST_Send((Object)localvariable27028, (Object)symbol44136, 1, (Object)localvariable27026);string26748 = (Object)new_Type_String(L"to:do:");string26749 = (Object)new_Type_String(L"to: stop do: aBlock \n\t\"Normally compiled in-line, and therefore not overridable.\n\tEvaluate aBlock for each element of the interval (self to: stop by: 1).\"\n\t| nextValue |\n\tnextValue := self.\n\t[nextValue <= stop]\n\t\twhileTrue: \n\t\t\t[aBlock value: nextValue.\n\t\t\tnextValue := nextValue + 1]");smallint26617 = (Object)new_Type_SmallInt(-1);smallint26618 = (Object)new_Type_SmallInt(-1);info5334 = (Object)new_AST_Info((Type_String)string26749,(Type_String)string26748, (Type_SmallInt)smallint26617, (Type_SmallInt)smallint26618);((AST_Send)send160628)->info = (AST_Info)info5334;block11745 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160628);// value:send160629 = (Object)new_AST_Send((Object)localvariable27027, (Object)SMB_value_, 1, (Object)localvariable27028);((AST_Send)send160629)->info = (AST_Info)info5334;smallint26619 = (Object)new_Type_SmallInt(1);constant34630 = (Object)new_AST_Constant((Object)smallint26619);// +send160630 = (Object)new_AST_Send((Object)localvariable27028, (Object)SMB__plus, 1, (Object)constant34630);((AST_Send)send160630)->info = (AST_Info)info5334;assign20173 = (Object)new_AST_Assign((Object)localvariable27028, (Object)send160630);block11746 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, send160629, assign20173);// whileTrue:send160631 = (Object)new_AST_Send((Object)block11745, (Object)SMB_whileTrue_, 1, (Object)block11746);((AST_Send)send160631)->info = (AST_Info)info5334;method41077 = (Object)new_AST_Method_with((Type_Array)array24116, (Type_Array)array24117, 3, assign20172, send160631, Self);((AST_Method)method41077)->info = (AST_Info)info5334;methodclosure40980 = (Object)new_Runtime_MethodClosure(method41077);store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol44135, (Runtime_MethodClosure)methodclosure40980);// SmallInt>><=//<= aSmallInt// 	^ (self > aSmallInt) not.localvariable27029 = (Object)new_AST_Variable_named(L"aSmallInt");array24118 = (Object)new_Type_Array_with(1, (Object)localvariable27029);// >send160632 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable27029);string26750 = (Object)new_Type_String(L"<=");string26751 = (Object)new_Type_String(L"<= aSmallInt\n\t^ (self > aSmallInt) not.");smallint26620 = (Object)new_Type_SmallInt(-1);smallint26621 = (Object)new_Type_SmallInt(-1);info5335 = (Object)new_AST_Info((Type_String)string26751,(Type_String)string26750, (Type_SmallInt)smallint26620, (Type_SmallInt)smallint26621);((AST_Send)send160632)->info = (AST_Info)info5335;// notsend160633 = (Object)new_AST_Send((Object)send160632, (Object)SMB_not, 0);((AST_Send)send160633)->info = (AST_Info)info5335;method41078 = (Object)new_AST_Method_with((Type_Array)array24118, (Type_Array)empty_Type_Array, 1, send160633);((AST_Method)method41078)->info = (AST_Info)info5335;methodclosure40981 = (Object)new_Runtime_MethodClosure(method41078);store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol44136, (Runtime_MethodClosure)methodclosure40981);// SmallInt>>max://max: aMagnitude // 	"Answer the receiver or the argument, whichever has the greater // 	magnitude."// // 	self > aMagnitude// 		ifTrue: [^self]// 		ifFalse: [^aMagnitude]localvariable27030 = (Object)new_AST_Variable_named(L"aMagnitude");array24119 = (Object)new_Type_Array_with(1, (Object)localvariable27030);variable1862 = (Object)new_AST_Variable_named(L"return");array24120 = (Object)new_Type_Array_with(1, (Object)variable1862);// >send160634 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable27030);string26752 = (Object)new_Type_String(L"max:");string26753 = (Object)new_Type_String(L"max: aMagnitude \n\t\"Answer the receiver or the argument, whichever has the greater \n\tmagnitude.\"\n\n\tself > aMagnitude\n\t\tifTrue: [^self]\n\t\tifFalse: [^aMagnitude]");smallint26622 = (Object)new_Type_SmallInt(-1);smallint26623 = (Object)new_Type_SmallInt(-1);info5336 = (Object)new_AST_Info((Type_String)string26753,(Type_String)string26752, (Type_SmallInt)smallint26622, (Type_SmallInt)smallint26623);((AST_Send)send160634)->info = (AST_Info)info5336;// escape:send160635 = (Object)new_AST_Send((Object)variable1862, (Object)SMB_escape_, 1, (Object)Self);((AST_Send)send160635)->info = (AST_Info)info5336;block11747 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160635);// escape:send160636 = (Object)new_AST_Send((Object)variable1862, (Object)SMB_escape_, 1, (Object)localvariable27030);((AST_Send)send160636)->info = (AST_Info)info5336;block11748 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160636);// ifTrue:ifFalse:send160637 = (Object)new_AST_Send((Object)send160634, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11747, (Object)block11748);((AST_Send)send160637)->info = (AST_Info)info5336;block11749 = (Object)new_AST_Block_with((Type_Array)array24120, (Type_Array)empty_Type_Array, 1, 2, send160637, Self);// on:send160638 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11749);method41079 = (Object)new_AST_Method_with((Type_Array)array24119, (Type_Array)empty_Type_Array, 1, send160638);((AST_Method)method41079)->info = (AST_Info)info5336;methodclosure40982 = (Object)new_Runtime_MethodClosure(method41079);store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol44137, (Runtime_MethodClosure)methodclosure40982);// newsend160639 = (Object)new_AST_Send((Object)classreference13417, (Object)symbol44095, 0);string26754 = (Object)new_Type_String(L"asPSmallInt");string26755 = (Object)new_Type_String(L"asPSmallInt\n\t^PSmallInt new int: self asInteger");smallint26624 = (Object)new_Type_SmallInt(-1);smallint26625 = (Object)new_Type_SmallInt(-1);info5337 = (Object)new_AST_Info((Type_String)string26755,(Type_String)string26754, (Type_SmallInt)smallint26624, (Type_SmallInt)smallint26625);((AST_Send)send160639)->info = (AST_Info)info5337;symbol44407 = (Object)new_Type_Symbol_cached(L"int:");// asIntegersend160640 = (Object)new_AST_Send((Object)Self, (Object)symbol44188, 0);((AST_Send)send160640)->info = (AST_Info)info5337;// int:send160641 = (Object)new_AST_Send((Object)send160639, (Object)symbol44407, 1, (Object)send160640);((AST_Send)send160641)->info = (AST_Info)info5337;method41080 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160641);((AST_Method)method41080)->info = (AST_Info)info5337;symbol44187 = (Object)new_Type_Symbol_cached(L"asPSmallInt");methodclosure40983 = (Object)new_Runtime_MethodClosure(method41080);store_method((Type_Class)class6720, (Type_Symbol)symbol44187, (Runtime_MethodClosure)methodclosure40983);// ASTNumber>>base//base// 	^ basemethod41081 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16390);string26756 = (Object)new_Type_String(L"base");string26757 = (Object)new_Type_String(L"base\n\t^ base");smallint26626 = (Object)new_Type_SmallInt(-1);smallint26627 = (Object)new_Type_SmallInt(-1);info5338 = (Object)new_AST_Info((Type_String)string26757,(Type_String)string26756, (Type_SmallInt)smallint26626, (Type_SmallInt)smallint26627);((AST_Method)method41081)->info = (AST_Info)info5338;methodclosure40984 = (Object)new_Runtime_MethodClosure(method41081);store_method((Type_Class)class6720, (Type_Symbol)symbol44189, (Runtime_MethodClosure)methodclosure40984);// ASTNumber>>base://base: anObject// 	base := anObjectlocalvariable27031 = (Object)new_AST_Variable_named(L"anObject");array24121 = (Object)new_Type_Array_with(1, (Object)localvariable27031);assign20174 = (Object)new_AST_Assign((Object)instancevariable16390, (Object)localvariable27031);method41082 = (Object)new_AST_Method_with((Type_Array)array24121, (Type_Array)empty_Type_Array, 2, assign20174, Self);string26758 = (Object)new_Type_String(L"base:");string26759 = (Object)new_Type_String(L"base: anObject\n\tbase := anObject");smallint26628 = (Object)new_Type_SmallInt(-1);smallint26629 = (Object)new_Type_SmallInt(-1);info5339 = (Object)new_AST_Info((Type_String)string26759,(Type_String)string26758, (Type_SmallInt)smallint26628, (Type_SmallInt)smallint26629);((AST_Method)method41082)->info = (AST_Info)info5339;symbol44191 = (Object)new_Type_Symbol_cached(L"base:");methodclosure40985 = (Object)new_Runtime_MethodClosure(method41082);store_method((Type_Class)class6720, (Type_Symbol)symbol44191, (Runtime_MethodClosure)methodclosure40985);classreference13418 = (Object)new_Organization_ClassReference((Type_Class)class6722);// ASTBinaryMessageDefinition>>parameter//parameter// 	^ parametermethod41083 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16391);string26760 = (Object)new_Type_String(L"parameter");string26761 = (Object)new_Type_String(L"parameter\n\t^ parameter");smallint26630 = (Object)new_Type_SmallInt(-1);smallint26631 = (Object)new_Type_SmallInt(-1);info5340 = (Object)new_AST_Info((Type_String)string26761,(Type_String)string26760, (Type_SmallInt)smallint26630, (Type_SmallInt)smallint26631);((AST_Method)method41083)->info = (AST_Info)info5340;symbol44221 = (Object)new_Type_Symbol_cached(L"parameter");methodclosure40986 = (Object)new_Runtime_MethodClosure(method41083);store_method((Type_Class)class6722, (Type_Symbol)symbol44221, (Runtime_MethodClosure)methodclosure40986);// ASTBinaryMessageDefinition>>selectorSymbol//selectorSymbol// 	^ self selector symbol// selectorsend160642 = (Object)new_AST_Send((Object)Self, (Object)symbol44115, 0);string26762 = (Object)new_Type_String(L"selectorSymbol");string26763 = (Object)new_Type_String(L"selectorSymbol\n\t^ self selector symbol");smallint26632 = (Object)new_Type_SmallInt(-1);smallint26633 = (Object)new_Type_SmallInt(-1);info5341 = (Object)new_AST_Info((Type_String)string26763,(Type_String)string26762, (Type_SmallInt)smallint26632, (Type_SmallInt)smallint26633);((AST_Send)send160642)->info = (AST_Info)info5341;symbol44193 = (Object)new_Type_Symbol_cached(L"symbol");// symbolsend160643 = (Object)new_AST_Send((Object)send160642, (Object)symbol44193, 0);((AST_Send)send160643)->info = (AST_Info)info5341;method41084 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160643);((AST_Method)method41084)->info = (AST_Info)info5341;methodclosure40987 = (Object)new_Runtime_MethodClosure(method41084);store_method((Type_Class)class6722, (Type_Symbol)symbol44219, (Runtime_MethodClosure)methodclosure40987);// ASTBinaryMessageDefinition>>parameters//parameters// 	^ OrderedCollection with: self parameter.// parametersend160644 = (Object)new_AST_Send((Object)Self, (Object)symbol44221, 0);string26764 = (Object)new_Type_String(L"parameters");string26765 = (Object)new_Type_String(L"parameters\n\t^ OrderedCollection with: self parameter.");smallint26634 = (Object)new_Type_SmallInt(-1);smallint26635 = (Object)new_Type_SmallInt(-1);info5342 = (Object)new_AST_Info((Type_String)string26765,(Type_String)string26764, (Type_SmallInt)smallint26634, (Type_SmallInt)smallint26635);((AST_Send)send160644)->info = (AST_Info)info5342;// with:send160645 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44178, 1, (Object)send160644);((AST_Send)send160645)->info = (AST_Info)info5342;method41085 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160645);((AST_Method)method41085)->info = (AST_Info)info5342;methodclosure40988 = (Object)new_Runtime_MethodClosure(method41085);store_method((Type_Class)class6722, (Type_Symbol)symbol44211, (Runtime_MethodClosure)methodclosure40988);// ASTBinaryMessageDefinition>>parameter://parameter: anObject// 	parameter := anObjectlocalvariable27032 = (Object)new_AST_Variable_named(L"anObject");array24122 = (Object)new_Type_Array_with(1, (Object)localvariable27032);assign20175 = (Object)new_AST_Assign((Object)instancevariable16391, (Object)localvariable27032);method41086 = (Object)new_AST_Method_with((Type_Array)array24122, (Type_Array)empty_Type_Array, 2, assign20175, Self);string26766 = (Object)new_Type_String(L"parameter:");string26767 = (Object)new_Type_String(L"parameter: anObject\n\tparameter := anObject");smallint26636 = (Object)new_Type_SmallInt(-1);smallint26637 = (Object)new_Type_SmallInt(-1);info5343 = (Object)new_AST_Info((Type_String)string26767,(Type_String)string26766, (Type_SmallInt)smallint26636, (Type_SmallInt)smallint26637);((AST_Method)method41086)->info = (AST_Info)info5343;symbol44222 = (Object)new_Type_Symbol_cached(L"parameter:");methodclosure40989 = (Object)new_Runtime_MethodClosure(method41086);store_method((Type_Class)class6722, (Type_Symbol)symbol44222, (Runtime_MethodClosure)methodclosure40989);classreference13419 = (Object)new_Organization_ClassReference((Type_Class)class6723);// ASTMethod>>statements//statements// 	^ statementsmethod41087 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16395);string26768 = (Object)new_Type_String(L"statements");string26769 = (Object)new_Type_String(L"statements\n\t^ statements");smallint26638 = (Object)new_Type_SmallInt(-1);smallint26639 = (Object)new_Type_SmallInt(-1);info5344 = (Object)new_AST_Info((Type_String)string26769,(Type_String)string26768, (Type_SmallInt)smallint26638, (Type_SmallInt)smallint26639);((AST_Method)method41087)->info = (AST_Info)info5344;methodclosure40990 = (Object)new_Runtime_MethodClosure(method41087);store_method((Type_Class)class6723, (Type_Symbol)symbol44225, (Runtime_MethodClosure)methodclosure40990);// ASTMethod>>message//message// 	^ messagemethod41088 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16392);string26770 = (Object)new_Type_String(L"message");string26771 = (Object)new_Type_String(L"message\n\t^ message");smallint26640 = (Object)new_Type_SmallInt(-1);smallint26641 = (Object)new_Type_SmallInt(-1);info5345 = (Object)new_AST_Info((Type_String)string26771,(Type_String)string26770, (Type_SmallInt)smallint26640, (Type_SmallInt)smallint26641);((AST_Method)method41088)->info = (AST_Info)info5345;symbol44229 = (Object)new_Type_Symbol_cached(L"message");methodclosure40991 = (Object)new_Runtime_MethodClosure(method41088);store_method((Type_Class)class6723, (Type_Symbol)symbol44229, (Runtime_MethodClosure)methodclosure40991);// ASTMethod>>hasReturnExpression//hasReturnExpression// 	^ self statements hasReturnExpression// statementssend160646 = (Object)new_AST_Send((Object)Self, (Object)symbol44225, 0);string26772 = (Object)new_Type_String(L"hasReturnExpression");string26773 = (Object)new_Type_String(L"hasReturnExpression\n\t^ self statements hasReturnExpression");smallint26642 = (Object)new_Type_SmallInt(-1);smallint26643 = (Object)new_Type_SmallInt(-1);info5346 = (Object)new_AST_Info((Type_String)string26773,(Type_String)string26772, (Type_SmallInt)smallint26642, (Type_SmallInt)smallint26643);((AST_Send)send160646)->info = (AST_Info)info5346;// hasReturnExpressionsend160647 = (Object)new_AST_Send((Object)send160646, (Object)symbol44169, 0);((AST_Send)send160647)->info = (AST_Info)info5346;method41089 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160647);((AST_Method)method41089)->info = (AST_Info)info5346;methodclosure40992 = (Object)new_Runtime_MethodClosure(method41089);store_method((Type_Class)class6723, (Type_Symbol)symbol44169, (Runtime_MethodClosure)methodclosure40992);// ASTMethod>>astSelectors//astSelectors // 	^ (Array new: 4)// 	at: 1 put: #annotations;// 	at: 2 put: #message;// 	at: 3 put: #statements;// 	at: 4 put: #temporaries;// 	yourself.localvariable27033 = (Object)new_AST_Variable_named(L"receiver");array24123 = (Object)new_Type_Array_with(1, (Object)localvariable27033);smallint26644 = (Object)new_Type_SmallInt(1);constant34631 = (Object)new_AST_Constant((Object)smallint26644);symbol44227 = (Object)new_Type_Symbol_cached(L"annotations");constant34632 = (Object)new_AST_Constant((Object)symbol44227);// at:put:send160648 = (Object)new_AST_Send((Object)localvariable27033, (Object)SMB_at_put_, 2, (Object)constant34631, (Object)constant34632);string26774 = (Object)new_Type_String(L"astSelectors");string26775 = (Object)new_Type_String(L"astSelectors \n\t^ (Array new: 4)\n\tat: 1 put: #annotations;\n\tat: 2 put: #message;\n\tat: 3 put: #statements;\n\tat: 4 put: #temporaries;\n\tyourself.");smallint26645 = (Object)new_Type_SmallInt(-1);smallint26646 = (Object)new_Type_SmallInt(-1);info5347 = (Object)new_AST_Info((Type_String)string26775,(Type_String)string26774, (Type_SmallInt)smallint26645, (Type_SmallInt)smallint26646);((AST_Send)send160648)->info = (AST_Info)info5347;smallint26647 = (Object)new_Type_SmallInt(2);constant34633 = (Object)new_AST_Constant((Object)smallint26647);constant34634 = (Object)new_AST_Constant((Object)symbol44229);// at:put:send160649 = (Object)new_AST_Send((Object)localvariable27033, (Object)SMB_at_put_, 2, (Object)constant34633, (Object)constant34634);((AST_Send)send160649)->info = (AST_Info)info5347;smallint26648 = (Object)new_Type_SmallInt(3);constant34635 = (Object)new_AST_Constant((Object)smallint26648);constant34636 = (Object)new_AST_Constant((Object)symbol44225);// at:put:send160650 = (Object)new_AST_Send((Object)localvariable27033, (Object)SMB_at_put_, 2, (Object)constant34635, (Object)constant34636);((AST_Send)send160650)->info = (AST_Info)info5347;smallint26649 = (Object)new_Type_SmallInt(4);constant34637 = (Object)new_AST_Constant((Object)smallint26649);constant34638 = (Object)new_AST_Constant((Object)symbol44230);// at:put:send160651 = (Object)new_AST_Send((Object)localvariable27033, (Object)SMB_at_put_, 2, (Object)constant34637, (Object)constant34638);((AST_Send)send160651)->info = (AST_Info)info5347;// yourselfsend160652 = (Object)new_AST_Send((Object)localvariable27033, (Object)symbol44008, 0);((AST_Send)send160652)->info = (AST_Info)info5347;block11750 = (Object)new_AST_Block_with((Type_Array)array24123, (Type_Array)empty_Type_Array, 1, 5, send160648, send160649, send160650, send160651, send160652);smallint26650 = (Object)new_Type_SmallInt(4);constant34639 = (Object)new_AST_Constant((Object)smallint26650);// new:send160653 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant34639);((AST_Send)send160653)->info = (AST_Info)info5347;// value:send160654 = (Object)new_AST_Send((Object)block11750, (Object)SMB_value_, 1, (Object)send160653);((AST_Send)send160654)->info = (AST_Info)info5347;method41090 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160654);((AST_Method)method41090)->info = (AST_Info)info5347;symbol44233 = (Object)new_Type_Symbol_cached(L"astSelectors");methodclosure40993 = (Object)new_Runtime_MethodClosure(method41090);store_method((Type_Class)class6723, (Type_Symbol)symbol44233, (Runtime_MethodClosure)methodclosure40993);// ASTMethod>>message://message: anObject// 	message := anObjectlocalvariable27034 = (Object)new_AST_Variable_named(L"anObject");array24124 = (Object)new_Type_Array_with(1, (Object)localvariable27034);assign20176 = (Object)new_AST_Assign((Object)instancevariable16392, (Object)localvariable27034);method41091 = (Object)new_AST_Method_with((Type_Array)array24124, (Type_Array)empty_Type_Array, 2, assign20176, Self);string26776 = (Object)new_Type_String(L"message:");string26777 = (Object)new_Type_String(L"message: anObject\n\tmessage := anObject");smallint26651 = (Object)new_Type_SmallInt(-1);smallint26652 = (Object)new_Type_SmallInt(-1);info5348 = (Object)new_AST_Info((Type_String)string26777,(Type_String)string26776, (Type_SmallInt)smallint26651, (Type_SmallInt)smallint26652);((AST_Method)method41091)->info = (AST_Info)info5348;symbol44226 = (Object)new_Type_Symbol_cached(L"message:");methodclosure40994 = (Object)new_Runtime_MethodClosure(method41091);store_method((Type_Class)class6723, (Type_Symbol)symbol44226, (Runtime_MethodClosure)methodclosure40994);// ASTMethod>>temporaries//temporaries// 	^ temporariesmethod41092 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16394);string26778 = (Object)new_Type_String(L"temporaries");string26779 = (Object)new_Type_String(L"temporaries\n\t^ temporaries");smallint26653 = (Object)new_Type_SmallInt(-1);smallint26654 = (Object)new_Type_SmallInt(-1);info5349 = (Object)new_AST_Info((Type_String)string26779,(Type_String)string26778, (Type_SmallInt)smallint26653, (Type_SmallInt)smallint26654);((AST_Method)method41092)->info = (AST_Info)info5349;methodclosure40995 = (Object)new_Runtime_MethodClosure(method41092);store_method((Type_Class)class6723, (Type_Symbol)symbol44230, (Runtime_MethodClosure)methodclosure40995);// ASTMethod>>printOn://printOn: aStream// 	super printOn: aStream.// 	aStream nextPutAll: '('.// 	self message printOn: aStream.// 	aStream nextPutAll: ')'.localvariable27035 = (Object)new_AST_Variable_named(L"aStream");array24125 = (Object)new_Type_Array_with(1, (Object)localvariable27035);super2469 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable27035);string26780 = (Object)new_Type_String(L"(");constant34640 = (Object)new_AST_Constant((Object)string26780);// nextPutAll:send160655 = (Object)new_AST_Send((Object)localvariable27035, (Object)symbol44382, 1, (Object)constant34640);string26781 = (Object)new_Type_String(L"printOn:");string26782 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \'(\'.\n\tself message printOn: aStream.\n\taStream nextPutAll: \')\'.");smallint26655 = (Object)new_Type_SmallInt(-1);smallint26656 = (Object)new_Type_SmallInt(-1);info5350 = (Object)new_AST_Info((Type_String)string26782,(Type_String)string26781, (Type_SmallInt)smallint26655, (Type_SmallInt)smallint26656);((AST_Send)send160655)->info = (AST_Info)info5350;// messagesend160656 = (Object)new_AST_Send((Object)Self, (Object)symbol44229, 0);((AST_Send)send160656)->info = (AST_Info)info5350;// printOn:send160657 = (Object)new_AST_Send((Object)send160656, (Object)symbol44111, 1, (Object)localvariable27035);((AST_Send)send160657)->info = (AST_Info)info5350;string26783 = (Object)new_Type_String(L")");constant34641 = (Object)new_AST_Constant((Object)string26783);// nextPutAll:send160658 = (Object)new_AST_Send((Object)localvariable27035, (Object)symbol44382, 1, (Object)constant34641);((AST_Send)send160658)->info = (AST_Info)info5350;method41093 = (Object)new_AST_Method_with((Type_Array)array24125, (Type_Array)empty_Type_Array, 5, super2469, send160655, send160657, send160658, Self);((AST_Method)method41093)->info = (AST_Info)info5350;methodclosure40996 = (Object)new_Runtime_MethodClosure(method41093);store_method((Type_Class)class6723, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure40996);// ASTMethod>>annotations//annotations// 	^ annotationsmethod41094 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16393);string26784 = (Object)new_Type_String(L"annotations");string26785 = (Object)new_Type_String(L"annotations\n\t^ annotations");smallint26657 = (Object)new_Type_SmallInt(-1);smallint26658 = (Object)new_Type_SmallInt(-1);info5351 = (Object)new_AST_Info((Type_String)string26785,(Type_String)string26784, (Type_SmallInt)smallint26657, (Type_SmallInt)smallint26658);((AST_Method)method41094)->info = (AST_Info)info5351;methodclosure40997 = (Object)new_Runtime_MethodClosure(method41094);store_method((Type_Class)class6723, (Type_Symbol)symbol44227, (Runtime_MethodClosure)methodclosure40997);// ASTMethod>>temporaries://temporaries: anObject// 	temporaries := anObjectlocalvariable27036 = (Object)new_AST_Variable_named(L"anObject");array24126 = (Object)new_Type_Array_with(1, (Object)localvariable27036);assign20177 = (Object)new_AST_Assign((Object)instancevariable16394, (Object)localvariable27036);method41095 = (Object)new_AST_Method_with((Type_Array)array24126, (Type_Array)empty_Type_Array, 2, assign20177, Self);string26786 = (Object)new_Type_String(L"temporaries:");string26787 = (Object)new_Type_String(L"temporaries: anObject\n\ttemporaries := anObject");smallint26659 = (Object)new_Type_SmallInt(-1);smallint26660 = (Object)new_Type_SmallInt(-1);info5352 = (Object)new_AST_Info((Type_String)string26787,(Type_String)string26786, (Type_SmallInt)smallint26659, (Type_SmallInt)smallint26660);((AST_Method)method41095)->info = (AST_Info)info5352;methodclosure40998 = (Object)new_Runtime_MethodClosure(method41095);store_method((Type_Class)class6723, (Type_Symbol)symbol44231, (Runtime_MethodClosure)methodclosure40998);// ASTMethod>>statements://statements: anObject// 	statements := anObjectlocalvariable27037 = (Object)new_AST_Variable_named(L"anObject");array24127 = (Object)new_Type_Array_with(1, (Object)localvariable27037);assign20178 = (Object)new_AST_Assign((Object)instancevariable16395, (Object)localvariable27037);method41096 = (Object)new_AST_Method_with((Type_Array)array24127, (Type_Array)empty_Type_Array, 2, assign20178, Self);string26788 = (Object)new_Type_String(L"statements:");string26789 = (Object)new_Type_String(L"statements: anObject\n\tstatements := anObject");smallint26661 = (Object)new_Type_SmallInt(-1);smallint26662 = (Object)new_Type_SmallInt(-1);info5353 = (Object)new_AST_Info((Type_String)string26789,(Type_String)string26788, (Type_SmallInt)smallint26661, (Type_SmallInt)smallint26662);((AST_Method)method41096)->info = (AST_Info)info5353;methodclosure40999 = (Object)new_Runtime_MethodClosure(method41096);store_method((Type_Class)class6723, (Type_Symbol)symbol44228, (Runtime_MethodClosure)methodclosure40999);// ASTMethod>>annotations://annotations: anObject// 	annotations := anObjectlocalvariable27038 = (Object)new_AST_Variable_named(L"anObject");array24128 = (Object)new_Type_Array_with(1, (Object)localvariable27038);assign20179 = (Object)new_AST_Assign((Object)instancevariable16393, (Object)localvariable27038);method41097 = (Object)new_AST_Method_with((Type_Array)array24128, (Type_Array)empty_Type_Array, 2, assign20179, Self);string26790 = (Object)new_Type_String(L"annotations:");string26791 = (Object)new_Type_String(L"annotations: anObject\n\tannotations := anObject");smallint26663 = (Object)new_Type_SmallInt(-1);smallint26664 = (Object)new_Type_SmallInt(-1);info5354 = (Object)new_AST_Info((Type_String)string26791,(Type_String)string26790, (Type_SmallInt)smallint26663, (Type_SmallInt)smallint26664);((AST_Method)method41097)->info = (AST_Info)info5354;symbol44232 = (Object)new_Type_Symbol_cached(L"annotations:");methodclosure41000 = (Object)new_Runtime_MethodClosure(method41097);store_method((Type_Class)class6723, (Type_Symbol)symbol44232, (Runtime_MethodClosure)methodclosure41000);classreference13420 = (Object)new_Organization_ClassReference((Type_Class)class6705);// ASTUnarySelector>>selectorSymbol//selectorSymbol// 	^ self selector symbol// selectorsend160659 = (Object)new_AST_Send((Object)Self, (Object)symbol44115, 0);string26792 = (Object)new_Type_String(L"selectorSymbol");string26793 = (Object)new_Type_String(L"selectorSymbol\n\t^ self selector symbol");smallint26665 = (Object)new_Type_SmallInt(-1);smallint26666 = (Object)new_Type_SmallInt(-1);info5355 = (Object)new_AST_Info((Type_String)string26793,(Type_String)string26792, (Type_SmallInt)smallint26665, (Type_SmallInt)smallint26666);((AST_Send)send160659)->info = (AST_Info)info5355;// symbolsend160660 = (Object)new_AST_Send((Object)send160659, (Object)symbol44193, 0);((AST_Send)send160660)->info = (AST_Info)info5355;method41098 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160660);((AST_Method)method41098)->info = (AST_Info)info5355;methodclosure41001 = (Object)new_Runtime_MethodClosure(method41098);store_method((Type_Class)class6705, (Type_Symbol)symbol44219, (Runtime_MethodClosure)methodclosure41001);classreference13421 = (Object)new_Organization_ClassReference((Type_Class)class6724);// ASTSymbol>>printOn://printOn: aStream// 	aStream nextPutAll: symbol.localvariable27039 = (Object)new_AST_Variable_named(L"aStream");array24129 = (Object)new_Type_Array_with(1, (Object)localvariable27039);// nextPutAll:send160661 = (Object)new_AST_Send((Object)localvariable27039, (Object)symbol44382, 1, (Object)instancevariable16396);string26794 = (Object)new_Type_String(L"printOn:");string26795 = (Object)new_Type_String(L"printOn: aStream\n\taStream nextPutAll: symbol.");smallint26667 = (Object)new_Type_SmallInt(-1);smallint26668 = (Object)new_Type_SmallInt(-1);info5356 = (Object)new_AST_Info((Type_String)string26795,(Type_String)string26794, (Type_SmallInt)smallint26667, (Type_SmallInt)smallint26668);((AST_Send)send160661)->info = (AST_Info)info5356;method41099 = (Object)new_AST_Method_with((Type_Array)array24129, (Type_Array)empty_Type_Array, 2, send160661, Self);((AST_Method)method41099)->info = (AST_Info)info5356;methodclosure41002 = (Object)new_Runtime_MethodClosure(method41099);store_method((Type_Class)class6724, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure41002);// ASTSymbol>>symbol//symbol// 	^ symbolmethod41100 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16396);string26796 = (Object)new_Type_String(L"symbol");string26797 = (Object)new_Type_String(L"symbol\n\t^ symbol");smallint26669 = (Object)new_Type_SmallInt(-1);smallint26670 = (Object)new_Type_SmallInt(-1);info5357 = (Object)new_AST_Info((Type_String)string26797,(Type_String)string26796, (Type_SmallInt)smallint26669, (Type_SmallInt)smallint26670);((AST_Method)method41100)->info = (AST_Info)info5357;methodclosure41003 = (Object)new_Runtime_MethodClosure(method41100);store_method((Type_Class)class6724, (Type_Symbol)symbol44193, (Runtime_MethodClosure)methodclosure41003);// ASTSymbol>>asPSymbol//asPSymbol// 	^PSymbol named: self symbolclassreference13422 = (Object)new_Organization_ClassReference((Type_Class)Type_Symbol_Class);// Symbol>>capitalized//capitalized// 	^ self asString capitalized asSymbol// asStringsend160662 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);string26798 = (Object)new_Type_String(L"capitalized");string26799 = (Object)new_Type_String(L"capitalized\n\t^ self asString capitalized asSymbol");smallint26671 = (Object)new_Type_SmallInt(-1);smallint26672 = (Object)new_Type_SmallInt(-1);info5358 = (Object)new_AST_Info((Type_String)string26799,(Type_String)string26798, (Type_SmallInt)smallint26671, (Type_SmallInt)smallint26672);((AST_Send)send160662)->info = (AST_Info)info5358;// capitalizedsend160663 = (Object)new_AST_Send((Object)send160662, (Object)symbol44132, 0);((AST_Send)send160663)->info = (AST_Info)info5358;// asSymbolsend160664 = (Object)new_AST_Send((Object)send160663, (Object)SMB_asSymbol, 0);((AST_Send)send160664)->info = (AST_Info)info5358;method41101 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160664);((AST_Method)method41101)->info = (AST_Info)info5358;methodclosure41004 = (Object)new_Runtime_MethodClosure(method41101);store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol44132, (Runtime_MethodClosure)methodclosure41004);// Symbol>>do://do: aBlock // 	"Refer to the comment in Collection|do:."// 	1 to: self size do:// 		[:index | aBlock value: (self at: index)]localvariable27040 = (Object)new_AST_Variable_named(L"aBlock");array24130 = (Object)new_Type_Array_with(1, (Object)localvariable27040);smallint26673 = (Object)new_Type_SmallInt(1);constant34642 = (Object)new_AST_Constant((Object)smallint26673);// sizesend160665 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);string26800 = (Object)new_Type_String(L"do:");string26801 = (Object)new_Type_String(L"do: aBlock \n\t\"Refer to the comment in Collection|do:.\"\n\t1 to: self size do:\n\t\t[:index | aBlock value: (self at: index)]");smallint26674 = (Object)new_Type_SmallInt(-1);smallint26675 = (Object)new_Type_SmallInt(-1);info5359 = (Object)new_AST_Info((Type_String)string26801,(Type_String)string26800, (Type_SmallInt)smallint26674, (Type_SmallInt)smallint26675);((AST_Send)send160665)->info = (AST_Info)info5359;localvariable27041 = (Object)new_AST_Variable_named(L"index");array24131 = (Object)new_Type_Array_with(1, (Object)localvariable27041);// at:send160666 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable27041);((AST_Send)send160666)->info = (AST_Info)info5359;// value:send160667 = (Object)new_AST_Send((Object)localvariable27040, (Object)SMB_value_, 1, (Object)send160666);((AST_Send)send160667)->info = (AST_Info)info5359;block11751 = (Object)new_AST_Block_with((Type_Array)array24131, (Type_Array)empty_Type_Array, 1, 1, send160667);// to:do:send160668 = (Object)new_AST_Send((Object)constant34642, (Object)symbol44135, 2, (Object)send160665, (Object)block11751);((AST_Send)send160668)->info = (AST_Info)info5359;method41102 = (Object)new_AST_Method_with((Type_Array)array24130, (Type_Array)empty_Type_Array, 2, send160668, Self);((AST_Method)method41102)->info = (AST_Info)info5359;methodclosure41005 = (Object)new_Runtime_MethodClosure(method41102);store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol44127, (Runtime_MethodClosure)methodclosure41005);// symbolsend160669 = (Object)new_AST_Send((Object)Self, (Object)symbol44193, 0);string26802 = (Object)new_Type_String(L"asPSymbol");string26803 = (Object)new_Type_String(L"asPSymbol\n\t^PSymbol named: self symbol");smallint26676 = (Object)new_Type_SmallInt(-1);smallint26677 = (Object)new_Type_SmallInt(-1);info5360 = (Object)new_AST_Info((Type_String)string26803,(Type_String)string26802, (Type_SmallInt)smallint26676, (Type_SmallInt)smallint26677);((AST_Send)send160669)->info = (AST_Info)info5360;// named:send160670 = (Object)new_AST_Send((Object)classreference13422, (Object)symbol44345, 1, (Object)send160669);((AST_Send)send160670)->info = (AST_Info)info5360;method41103 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160670);((AST_Method)method41103)->info = (AST_Info)info5360;symbol44194 = (Object)new_Type_Symbol_cached(L"asPSymbol");methodclosure41006 = (Object)new_Runtime_MethodClosure(method41103);store_method((Type_Class)class6724, (Type_Symbol)symbol44194, (Runtime_MethodClosure)methodclosure41006);// ASTSymbol>>asString//asString// 	^ self symbol asString// symbolsend160671 = (Object)new_AST_Send((Object)Self, (Object)symbol44193, 0);string26804 = (Object)new_Type_String(L"asString");string26805 = (Object)new_Type_String(L"asString\n\t^ self symbol asString");smallint26678 = (Object)new_Type_SmallInt(-1);smallint26679 = (Object)new_Type_SmallInt(-1);info5361 = (Object)new_AST_Info((Type_String)string26805,(Type_String)string26804, (Type_SmallInt)smallint26678, (Type_SmallInt)smallint26679);((AST_Send)send160671)->info = (AST_Info)info5361;// asStringsend160672 = (Object)new_AST_Send((Object)send160671, (Object)SMB_asString, 0);((AST_Send)send160672)->info = (AST_Info)info5361;method41104 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160672);((AST_Method)method41104)->info = (AST_Info)info5361;methodclosure41007 = (Object)new_Runtime_MethodClosure(method41104);store_method((Type_Class)class6724, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure41007);// ASTSymbol>>asSymbol//asSymbol// 	^ self symbol asSymbol// symbolsend160673 = (Object)new_AST_Send((Object)Self, (Object)symbol44193, 0);string26806 = (Object)new_Type_String(L"asSymbol");string26807 = (Object)new_Type_String(L"asSymbol\n\t^ self symbol asSymbol");smallint26680 = (Object)new_Type_SmallInt(-1);smallint26681 = (Object)new_Type_SmallInt(-1);info5362 = (Object)new_AST_Info((Type_String)string26807,(Type_String)string26806, (Type_SmallInt)smallint26680, (Type_SmallInt)smallint26681);((AST_Send)send160673)->info = (AST_Info)info5362;// asSymbolsend160674 = (Object)new_AST_Send((Object)send160673, (Object)SMB_asSymbol, 0);((AST_Send)send160674)->info = (AST_Info)info5362;method41105 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160674);((AST_Method)method41105)->info = (AST_Info)info5362;methodclosure41008 = (Object)new_Runtime_MethodClosure(method41105);store_method((Type_Class)class6724, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure41008);// ASTSymbol>>symbol://symbol: aSymbol// 	symbol := aSymbollocalvariable27042 = (Object)new_AST_Variable_named(L"aSymbol");array24132 = (Object)new_Type_Array_with(1, (Object)localvariable27042);assign20180 = (Object)new_AST_Assign((Object)instancevariable16396, (Object)localvariable27042);method41106 = (Object)new_AST_Method_with((Type_Array)array24132, (Type_Array)empty_Type_Array, 2, assign20180, Self);string26808 = (Object)new_Type_String(L"symbol:");string26809 = (Object)new_Type_String(L"symbol: aSymbol\n\tsymbol := aSymbol");smallint26682 = (Object)new_Type_SmallInt(-1);smallint26683 = (Object)new_Type_SmallInt(-1);info5363 = (Object)new_AST_Info((Type_String)string26809,(Type_String)string26808, (Type_SmallInt)smallint26682, (Type_SmallInt)smallint26683);((AST_Method)method41106)->info = (AST_Info)info5363;symbol44195 = (Object)new_Type_Symbol_cached(L"symbol:");methodclosure41009 = (Object)new_Runtime_MethodClosure(method41106);store_method((Type_Class)class6724, (Type_Symbol)symbol44195, (Runtime_MethodClosure)methodclosure41009);classreference13423 = (Object)new_Organization_ClassReference((Type_Class)class6725);classreference13424 = (Object)new_Organization_ClassReference((Type_Class)class6703);// ASTKeywordSelector>>initialize//initialize// 	super initialize.// 	keywords := OrderedCollection new.super2470 = (Object)new_AST_Super((Object)symbol44004, 0);// newsend160675 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string26810 = (Object)new_Type_String(L"initialize");string26811 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tkeywords := OrderedCollection new.");smallint26684 = (Object)new_Type_SmallInt(-1);smallint26685 = (Object)new_Type_SmallInt(-1);info5364 = (Object)new_AST_Info((Type_String)string26811,(Type_String)string26810, (Type_SmallInt)smallint26684, (Type_SmallInt)smallint26685);((AST_Send)send160675)->info = (AST_Info)info5364;assign20181 = (Object)new_AST_Assign((Object)instancevariable16371, (Object)send160675);method41107 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super2470, assign20181, Self);((AST_Method)method41107)->info = (AST_Info)info5364;methodclosure41010 = (Object)new_Runtime_MethodClosure(method41107);store_method((Type_Class)class6703, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure41010);// ASTKeywordSelector>>keywords//keywords// 	^ keywordsmethod41108 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16371);string26812 = (Object)new_Type_String(L"keywords");string26813 = (Object)new_Type_String(L"keywords\n\t^ keywords");smallint26686 = (Object)new_Type_SmallInt(-1);smallint26687 = (Object)new_Type_SmallInt(-1);info5365 = (Object)new_AST_Info((Type_String)string26813,(Type_String)string26812, (Type_SmallInt)smallint26686, (Type_SmallInt)smallint26687);((AST_Method)method41108)->info = (AST_Info)info5365;symbol44214 = (Object)new_Type_Symbol_cached(L"keywords");methodclosure41011 = (Object)new_Runtime_MethodClosure(method41108);store_method((Type_Class)class6703, (Type_Symbol)symbol44214, (Runtime_MethodClosure)methodclosure41011);// ASTKeywordSelector>>selectorName//selectorName// 	^ (keywords joinUsing: ':'), ':'.symbol44408 = (Object)new_Type_Symbol_cached(L"joinUsing:");string26814 = (Object)new_Type_String(L":");constant34643 = (Object)new_AST_Constant((Object)string26814);// joinUsing:send160676 = (Object)new_AST_Send((Object)instancevariable16371, (Object)symbol44408, 1, (Object)constant34643);string26815 = (Object)new_Type_String(L"selectorName");string26816 = (Object)new_Type_String(L"selectorName\n\t^ (keywords joinUsing: \':\'), \':\'.");smallint26688 = (Object)new_Type_SmallInt(-1);smallint26689 = (Object)new_Type_SmallInt(-1);info5366 = (Object)new_AST_Info((Type_String)string26816,(Type_String)string26815, (Type_SmallInt)smallint26688, (Type_SmallInt)smallint26689);((AST_Send)send160676)->info = (AST_Info)info5366;string26817 = (Object)new_Type_String(L":");constant34644 = (Object)new_AST_Constant((Object)string26817);// ,send160677 = (Object)new_AST_Send((Object)send160676, (Object)SMB__concat, 1, (Object)constant34644);((AST_Send)send160677)->info = (AST_Info)info5366;method41109 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160677);((AST_Method)method41109)->info = (AST_Info)info5366;methodclosure41012 = (Object)new_Runtime_MethodClosure(method41109);store_method((Type_Class)class6703, (Type_Symbol)symbol44210, (Runtime_MethodClosure)methodclosure41012);// ASTKeywordSelector>>keywords://keywords: anObject// 	keywords := anObjectlocalvariable27043 = (Object)new_AST_Variable_named(L"anObject");array24133 = (Object)new_Type_Array_with(1, (Object)localvariable27043);assign20182 = (Object)new_AST_Assign((Object)instancevariable16371, (Object)localvariable27043);method41110 = (Object)new_AST_Method_with((Type_Array)array24133, (Type_Array)empty_Type_Array, 2, assign20182, Self);string26818 = (Object)new_Type_String(L"keywords:");string26819 = (Object)new_Type_String(L"keywords: anObject\n\tkeywords := anObject");smallint26690 = (Object)new_Type_SmallInt(-1);smallint26691 = (Object)new_Type_SmallInt(-1);info5367 = (Object)new_AST_Info((Type_String)string26819,(Type_String)string26818, (Type_SmallInt)smallint26690, (Type_SmallInt)smallint26691);((AST_Method)method41110)->info = (AST_Info)info5367;symbol44215 = (Object)new_Type_Symbol_cached(L"keywords:");methodclosure41013 = (Object)new_Runtime_MethodClosure(method41110);store_method((Type_Class)class6703, (Type_Symbol)symbol44215, (Runtime_MethodClosure)methodclosure41013);classreference13425 = (Object)new_Organization_ClassReference((Type_Class)class6726);// ASTKeywordAnnotation>>arguments//arguments// 	^ argumentsmethod41111 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16397);string26820 = (Object)new_Type_String(L"arguments");string26821 = (Object)new_Type_String(L"arguments\n\t^ arguments");smallint26692 = (Object)new_Type_SmallInt(-1);smallint26693 = (Object)new_Type_SmallInt(-1);info5368 = (Object)new_AST_Info((Type_String)string26821,(Type_String)string26820, (Type_SmallInt)smallint26692, (Type_SmallInt)smallint26693);((AST_Method)method41111)->info = (AST_Info)info5368;methodclosure41014 = (Object)new_Runtime_MethodClosure(method41111);store_method((Type_Class)class6726, (Type_Symbol)symbol44116, (Runtime_MethodClosure)methodclosure41014);// ASTKeywordAnnotation>>arguments://arguments: anObject// 	arguments := anObjectlocalvariable27044 = (Object)new_AST_Variable_named(L"anObject");array24134 = (Object)new_Type_Array_with(1, (Object)localvariable27044);assign20183 = (Object)new_AST_Assign((Object)instancevariable16397, (Object)localvariable27044);method41112 = (Object)new_AST_Method_with((Type_Array)array24134, (Type_Array)empty_Type_Array, 2, assign20183, Self);string26822 = (Object)new_Type_String(L"arguments:");string26823 = (Object)new_Type_String(L"arguments: anObject\n\targuments := anObject");smallint26694 = (Object)new_Type_SmallInt(-1);smallint26695 = (Object)new_Type_SmallInt(-1);info5369 = (Object)new_AST_Info((Type_String)string26823,(Type_String)string26822, (Type_SmallInt)smallint26694, (Type_SmallInt)smallint26695);((AST_Method)method41112)->info = (AST_Info)info5369;methodclosure41015 = (Object)new_Runtime_MethodClosure(method41112);store_method((Type_Class)class6726, (Type_Symbol)symbol44217, (Runtime_MethodClosure)methodclosure41015);classreference13426 = (Object)new_Organization_ClassReference((Type_Class)class6727);// ASTString>>asPString//asPString // 	^PString new string: self string// newsend160678 = (Object)new_AST_Send((Object)classreference13411, (Object)symbol44095, 0);string26824 = (Object)new_Type_String(L"asPString");string26825 = (Object)new_Type_String(L"asPString \n\t^PString new string: self string");smallint26696 = (Object)new_Type_SmallInt(-1);smallint26697 = (Object)new_Type_SmallInt(-1);info5370 = (Object)new_AST_Info((Type_String)string26825,(Type_String)string26824, (Type_SmallInt)smallint26696, (Type_SmallInt)smallint26697);((AST_Send)send160678)->info = (AST_Info)info5370;symbol44196 = (Object)new_Type_Symbol_cached(L"string:");symbol44197 = (Object)new_Type_Symbol_cached(L"string");// stringsend160679 = (Object)new_AST_Send((Object)Self, (Object)symbol44197, 0);((AST_Send)send160679)->info = (AST_Info)info5370;// string:send160680 = (Object)new_AST_Send((Object)send160678, (Object)symbol44196, 1, (Object)send160679);((AST_Send)send160680)->info = (AST_Info)info5370;method41113 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160680);((AST_Method)method41113)->info = (AST_Info)info5370;symbol44198 = (Object)new_Type_Symbol_cached(L"asPString");methodclosure41016 = (Object)new_Runtime_MethodClosure(method41113);store_method((Type_Class)class6727, (Type_Symbol)symbol44198, (Runtime_MethodClosure)methodclosure41016);// ASTString>>string://string: aString// 	string := aStringlocalvariable27045 = (Object)new_AST_Variable_named(L"aString");array24135 = (Object)new_Type_Array_with(1, (Object)localvariable27045);assign20184 = (Object)new_AST_Assign((Object)instancevariable16398, (Object)localvariable27045);method41114 = (Object)new_AST_Method_with((Type_Array)array24135, (Type_Array)empty_Type_Array, 2, assign20184, Self);string26826 = (Object)new_Type_String(L"string:");string26827 = (Object)new_Type_String(L"string: aString\n\tstring := aString");smallint26698 = (Object)new_Type_SmallInt(-1);smallint26699 = (Object)new_Type_SmallInt(-1);info5371 = (Object)new_AST_Info((Type_String)string26827,(Type_String)string26826, (Type_SmallInt)smallint26698, (Type_SmallInt)smallint26699);((AST_Method)method41114)->info = (AST_Info)info5371;methodclosure41017 = (Object)new_Runtime_MethodClosure(method41114);store_method((Type_Class)class6727, (Type_Symbol)symbol44196, (Runtime_MethodClosure)methodclosure41017);// ASTString>>string//string// 	^ stringmethod41115 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16398);string26828 = (Object)new_Type_String(L"string");string26829 = (Object)new_Type_String(L"string\n\t^ string");smallint26700 = (Object)new_Type_SmallInt(-1);smallint26701 = (Object)new_Type_SmallInt(-1);info5372 = (Object)new_AST_Info((Type_String)string26829,(Type_String)string26828, (Type_SmallInt)smallint26700, (Type_SmallInt)smallint26701);((AST_Method)method41115)->info = (AST_Info)info5372;methodclosure41018 = (Object)new_Runtime_MethodClosure(method41115);store_method((Type_Class)class6727, (Type_Symbol)symbol44197, (Runtime_MethodClosure)methodclosure41018);classreference13427 = (Object)new_Organization_ClassReference((Type_Class)class6728);classreference13428 = (Object)new_Organization_ClassReference((Type_Class)class6709);classreference13429 = (Object)new_Organization_ClassReference((Type_Class)class6729);// ASTBinaryExpression>>argument://argument: anObject // 	argument := anObjectlocalvariable27046 = (Object)new_AST_Variable_named(L"anObject");array24136 = (Object)new_Type_Array_with(1, (Object)localvariable27046);assign20185 = (Object)new_AST_Assign((Object)instancevariable16400, (Object)localvariable27046);method41116 = (Object)new_AST_Method_with((Type_Array)array24136, (Type_Array)empty_Type_Array, 2, assign20185, Self);string26830 = (Object)new_Type_String(L"argument:");string26831 = (Object)new_Type_String(L"argument: anObject \n\targument := anObject");smallint26702 = (Object)new_Type_SmallInt(-1);smallint26703 = (Object)new_Type_SmallInt(-1);info5373 = (Object)new_AST_Info((Type_String)string26831,(Type_String)string26830, (Type_SmallInt)smallint26702, (Type_SmallInt)smallint26703);((AST_Method)method41116)->info = (AST_Info)info5373;symbol44223 = (Object)new_Type_Symbol_cached(L"argument:");methodclosure41019 = (Object)new_Runtime_MethodClosure(method41116);store_method((Type_Class)class6729, (Type_Symbol)symbol44223, (Runtime_MethodClosure)methodclosure41019);// ASTBinaryExpression>>printOn://printOn: aStream// 	self receiver printOn: aStream.// 	aStream nextPutAll: String space.// 	super printOn: aStream.// 	aStream nextPutAll: String space.// 	self argument printOn: aStream.localvariable27047 = (Object)new_AST_Variable_named(L"aStream");array24137 = (Object)new_Type_Array_with(1, (Object)localvariable27047);// receiversend160681 = (Object)new_AST_Send((Object)Self, (Object)symbol44218, 0);string26832 = (Object)new_Type_String(L"printOn:");string26833 = (Object)new_Type_String(L"printOn: aStream\n\tself receiver printOn: aStream.\n\taStream nextPutAll: String space.\n\tsuper printOn: aStream.\n\taStream nextPutAll: String space.\n\tself argument printOn: aStream.");smallint26704 = (Object)new_Type_SmallInt(-1);smallint26705 = (Object)new_Type_SmallInt(-1);info5374 = (Object)new_AST_Info((Type_String)string26833,(Type_String)string26832, (Type_SmallInt)smallint26704, (Type_SmallInt)smallint26705);((AST_Send)send160681)->info = (AST_Info)info5374;// printOn:send160682 = (Object)new_AST_Send((Object)send160681, (Object)symbol44111, 1, (Object)localvariable27047);((AST_Send)send160682)->info = (AST_Info)info5374;// spacesend160683 = (Object)new_AST_Send((Object)classreference13411, (Object)symbol44143, 0);((AST_Send)send160683)->info = (AST_Info)info5374;// nextPutAll:send160684 = (Object)new_AST_Send((Object)localvariable27047, (Object)symbol44382, 1, (Object)send160683);((AST_Send)send160684)->info = (AST_Info)info5374;super2471 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable27047);// spacesend160685 = (Object)new_AST_Send((Object)classreference13411, (Object)symbol44143, 0);((AST_Send)send160685)->info = (AST_Info)info5374;// nextPutAll:send160686 = (Object)new_AST_Send((Object)localvariable27047, (Object)symbol44382, 1, (Object)send160685);((AST_Send)send160686)->info = (AST_Info)info5374;symbol44224 = (Object)new_Type_Symbol_cached(L"argument");// argumentsend160687 = (Object)new_AST_Send((Object)Self, (Object)symbol44224, 0);((AST_Send)send160687)->info = (AST_Info)info5374;// printOn:send160688 = (Object)new_AST_Send((Object)send160687, (Object)symbol44111, 1, (Object)localvariable27047);((AST_Send)send160688)->info = (AST_Info)info5374;method41117 = (Object)new_AST_Method_with((Type_Array)array24137, (Type_Array)empty_Type_Array, 6, send160682, send160684, super2471, send160686, send160688, Self);((AST_Method)method41117)->info = (AST_Info)info5374;methodclosure41020 = (Object)new_Runtime_MethodClosure(method41117);store_method((Type_Class)class6729, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure41020);// ASTBinaryExpression>>initialize//initialize// 	super initialize.super2472 = (Object)new_AST_Super((Object)symbol44004, 0);method41118 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super2472, Self);string26834 = (Object)new_Type_String(L"initialize");string26835 = (Object)new_Type_String(L"initialize\n\tsuper initialize.");smallint26706 = (Object)new_Type_SmallInt(-1);smallint26707 = (Object)new_Type_SmallInt(-1);info5375 = (Object)new_AST_Info((Type_String)string26835,(Type_String)string26834, (Type_SmallInt)smallint26706, (Type_SmallInt)smallint26707);((AST_Method)method41118)->info = (AST_Info)info5375;methodclosure41021 = (Object)new_Runtime_MethodClosure(method41118);store_method((Type_Class)class6729, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure41021);// ASTBinaryExpression>>argument//argument// 	^ argumentmethod41119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16400);string26836 = (Object)new_Type_String(L"argument");string26837 = (Object)new_Type_String(L"argument\n\t^ argument");smallint26708 = (Object)new_Type_SmallInt(-1);smallint26709 = (Object)new_Type_SmallInt(-1);info5376 = (Object)new_AST_Info((Type_String)string26837,(Type_String)string26836, (Type_SmallInt)smallint26708, (Type_SmallInt)smallint26709);((AST_Method)method41119)->info = (AST_Info)info5376;methodclosure41022 = (Object)new_Runtime_MethodClosure(method41119);store_method((Type_Class)class6729, (Type_Symbol)symbol44224, (Runtime_MethodClosure)methodclosure41022);// ASTBinaryExpression>>receiver://receiver: anObject // 	receiver := anObjectlocalvariable27048 = (Object)new_AST_Variable_named(L"anObject");array24138 = (Object)new_Type_Array_with(1, (Object)localvariable27048);assign20186 = (Object)new_AST_Assign((Object)instancevariable16399, (Object)localvariable27048);method41120 = (Object)new_AST_Method_with((Type_Array)array24138, (Type_Array)empty_Type_Array, 2, assign20186, Self);string26838 = (Object)new_Type_String(L"receiver:");string26839 = (Object)new_Type_String(L"receiver: anObject \n\treceiver := anObject");smallint26710 = (Object)new_Type_SmallInt(-1);smallint26711 = (Object)new_Type_SmallInt(-1);info5377 = (Object)new_AST_Info((Type_String)string26839,(Type_String)string26838, (Type_SmallInt)smallint26710, (Type_SmallInt)smallint26711);((AST_Method)method41120)->info = (AST_Info)info5377;methodclosure41023 = (Object)new_Runtime_MethodClosure(method41120);store_method((Type_Class)class6729, (Type_Symbol)symbol44216, (Runtime_MethodClosure)methodclosure41023);// ASTBinaryExpression>>argumentOfBinary://argumentOfBinary: outer// 	receiver := receiver argumentOfBinary: outerlocalvariable27049 = (Object)new_AST_Variable_named(L"outer");array24139 = (Object)new_Type_Array_with(1, (Object)localvariable27049);symbol44166 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");// argumentOfBinary:send160689 = (Object)new_AST_Send((Object)instancevariable16399, (Object)symbol44166, 1, (Object)localvariable27049);string26840 = (Object)new_Type_String(L"argumentOfBinary:");string26841 = (Object)new_Type_String(L"argumentOfBinary: outer\n\treceiver := receiver argumentOfBinary: outer");smallint26712 = (Object)new_Type_SmallInt(-1);smallint26713 = (Object)new_Type_SmallInt(-1);info5378 = (Object)new_AST_Info((Type_String)string26841,(Type_String)string26840, (Type_SmallInt)smallint26712, (Type_SmallInt)smallint26713);((AST_Send)send160689)->info = (AST_Info)info5378;assign20187 = (Object)new_AST_Assign((Object)instancevariable16399, (Object)send160689);method41121 = (Object)new_AST_Method_with((Type_Array)array24139, (Type_Array)empty_Type_Array, 2, assign20187, Self);((AST_Method)method41121)->info = (AST_Info)info5378;methodclosure41024 = (Object)new_Runtime_MethodClosure(method41121);store_method((Type_Class)class6729, (Type_Symbol)symbol44166, (Runtime_MethodClosure)methodclosure41024);// ASTBinaryExpression>>receiver//receiver// 	^ receivermethod41122 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16399);string26842 = (Object)new_Type_String(L"receiver");string26843 = (Object)new_Type_String(L"receiver\n\t^ receiver");smallint26714 = (Object)new_Type_SmallInt(-1);smallint26715 = (Object)new_Type_SmallInt(-1);info5379 = (Object)new_AST_Info((Type_String)string26843,(Type_String)string26842, (Type_SmallInt)smallint26714, (Type_SmallInt)smallint26715);((AST_Method)method41122)->info = (AST_Info)info5379;methodclosure41025 = (Object)new_Runtime_MethodClosure(method41122);store_method((Type_Class)class6729, (Type_Symbol)symbol44218, (Runtime_MethodClosure)methodclosure41025);classreference13430 = (Object)new_Organization_ClassReference((Type_Class)class6701);// ASTNode>>sourceObject://sourceObject: anObject// 	sourceObject := anObjectlocalvariable27050 = (Object)new_AST_Variable_named(L"anObject");array24140 = (Object)new_Type_Array_with(1, (Object)localvariable27050);assign20188 = (Object)new_AST_Assign((Object)instancevariable16367, (Object)localvariable27050);method41123 = (Object)new_AST_Method_with((Type_Array)array24140, (Type_Array)empty_Type_Array, 2, assign20188, Self);string26844 = (Object)new_Type_String(L"sourceObject:");string26845 = (Object)new_Type_String(L"sourceObject: anObject\n\tsourceObject := anObject");smallint26716 = (Object)new_Type_SmallInt(-1);smallint26717 = (Object)new_Type_SmallInt(-1);info5380 = (Object)new_AST_Info((Type_String)string26845,(Type_String)string26844, (Type_SmallInt)smallint26716, (Type_SmallInt)smallint26717);((AST_Method)method41123)->info = (AST_Info)info5380;symbol44165 = (Object)new_Type_Symbol_cached(L"sourceObject:");methodclosure41026 = (Object)new_Runtime_MethodClosure(method41123);store_method((Type_Class)class6701, (Type_Symbol)symbol44165, (Runtime_MethodClosure)methodclosure41026);// ASTNode>>hasReturnExpression//hasReturnExpression// 	^ falsemethod41124 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);string26846 = (Object)new_Type_String(L"hasReturnExpression");string26847 = (Object)new_Type_String(L"hasReturnExpression\n\t^ false");smallint26718 = (Object)new_Type_SmallInt(-1);smallint26719 = (Object)new_Type_SmallInt(-1);info5381 = (Object)new_AST_Info((Type_String)string26847,(Type_String)string26846, (Type_SmallInt)smallint26718, (Type_SmallInt)smallint26719);((AST_Method)method41124)->info = (AST_Info)info5381;methodclosure41027 = (Object)new_Runtime_MethodClosure(method41124);store_method((Type_Class)class6701, (Type_Symbol)symbol44169, (Runtime_MethodClosure)methodclosure41027);// ASTNode>>isReturnExpression//isReturnExpression// 	^ falsemethod41125 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);string26848 = (Object)new_Type_String(L"isReturnExpression");string26849 = (Object)new_Type_String(L"isReturnExpression\n\t^ false");smallint26720 = (Object)new_Type_SmallInt(-1);smallint26721 = (Object)new_Type_SmallInt(-1);info5382 = (Object)new_AST_Info((Type_String)string26849,(Type_String)string26848, (Type_SmallInt)smallint26720, (Type_SmallInt)smallint26721);((AST_Method)method41125)->info = (AST_Info)info5382;methodclosure41028 = (Object)new_Runtime_MethodClosure(method41125);store_method((Type_Class)class6701, (Type_Symbol)symbol44006, (Runtime_MethodClosure)methodclosure41028);// ASTNode>>argumentOfBinary://argumentOfBinary: binary// 	^ binary argument: selflocalvariable27051 = (Object)new_AST_Variable_named(L"binary");array24141 = (Object)new_Type_Array_with(1, (Object)localvariable27051);// argument:send160690 = (Object)new_AST_Send((Object)localvariable27051, (Object)symbol44223, 1, (Object)Self);string26850 = (Object)new_Type_String(L"argumentOfBinary:");string26851 = (Object)new_Type_String(L"argumentOfBinary: binary\n\t^ binary argument: self");smallint26722 = (Object)new_Type_SmallInt(-1);smallint26723 = (Object)new_Type_SmallInt(-1);info5383 = (Object)new_AST_Info((Type_String)string26851,(Type_String)string26850, (Type_SmallInt)smallint26722, (Type_SmallInt)smallint26723);((AST_Send)send160690)->info = (AST_Info)info5383;method41126 = (Object)new_AST_Method_with((Type_Array)array24141, (Type_Array)empty_Type_Array, 1, send160690);((AST_Method)method41126)->info = (AST_Info)info5383;methodclosure41029 = (Object)new_Runtime_MethodClosure(method41126);store_method((Type_Class)class6701, (Type_Symbol)symbol44166, (Runtime_MethodClosure)methodclosure41029);// ASTNode>>astName//astName// 	^ (self class name // 			copyFrom: 4// 			to: self class name size) capitalized// classsend160691 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);string26852 = (Object)new_Type_String(L"astName");string26853 = (Object)new_Type_String(L"astName\n\t^ (self class name \n\t\t\tcopyFrom: 4\n\t\t\tto: self class name size) capitalized");smallint26724 = (Object)new_Type_SmallInt(-1);smallint26725 = (Object)new_Type_SmallInt(-1);info5384 = (Object)new_AST_Info((Type_String)string26853,(Type_String)string26852, (Type_SmallInt)smallint26724, (Type_SmallInt)smallint26725);((AST_Send)send160691)->info = (AST_Info)info5384;// namesend160692 = (Object)new_AST_Send((Object)send160691, (Object)SMB_name, 0);((AST_Send)send160692)->info = (AST_Info)info5384;smallint26726 = (Object)new_Type_SmallInt(4);constant34645 = (Object)new_AST_Constant((Object)smallint26726);// classsend160693 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);((AST_Send)send160693)->info = (AST_Info)info5384;// namesend160694 = (Object)new_AST_Send((Object)send160693, (Object)SMB_name, 0);((AST_Send)send160694)->info = (AST_Info)info5384;// sizesend160695 = (Object)new_AST_Send((Object)send160694, (Object)SMB_size, 0);((AST_Send)send160695)->info = (AST_Info)info5384;// copyFrom:to:send160696 = (Object)new_AST_Send((Object)send160692, (Object)symbol44383, 2, (Object)constant34645, (Object)send160695);((AST_Send)send160696)->info = (AST_Info)info5384;// capitalizedsend160697 = (Object)new_AST_Send((Object)send160696, (Object)symbol44132, 0);((AST_Send)send160697)->info = (AST_Info)info5384;method41127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160697);((AST_Method)method41127)->info = (AST_Info)info5384;symbol44170 = (Object)new_Type_Symbol_cached(L"astName");methodclosure41030 = (Object)new_Runtime_MethodClosure(method41127);store_method((Type_Class)class6701, (Type_Symbol)symbol44170, (Runtime_MethodClosure)methodclosure41030);// ASTNode>>sourceObject//sourceObject// 	^ sourceObjectmethod41128 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16367);string26854 = (Object)new_Type_String(L"sourceObject");string26855 = (Object)new_Type_String(L"sourceObject\n\t^ sourceObject");smallint26727 = (Object)new_Type_SmallInt(-1);smallint26728 = (Object)new_Type_SmallInt(-1);info5385 = (Object)new_AST_Info((Type_String)string26855,(Type_String)string26854, (Type_SmallInt)smallint26727, (Type_SmallInt)smallint26728);((AST_Method)method41128)->info = (AST_Info)info5385;symbol44167 = (Object)new_Type_Symbol_cached(L"sourceObject");methodclosure41031 = (Object)new_Runtime_MethodClosure(method41128);store_method((Type_Class)class6701, (Type_Symbol)symbol44167, (Runtime_MethodClosure)methodclosure41031);// ASTNode>>doesNotUnderstand://doesNotUnderstand: aMessage// 	| selector |// 	(aMessage selector = #accept:) // 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.// 	^ (aMessage argument) perform: selector with: self. localvariable27052 = (Object)new_AST_Variable_named(L"aMessage");array24142 = (Object)new_Type_Array_with(1, (Object)localvariable27052);localvariable27053 = (Object)new_AST_Variable_named(L"selector");array24143 = (Object)new_Type_Array_with(1, (Object)localvariable27053);variable1863 = (Object)new_AST_Variable_named(L"return");array24144 = (Object)new_Type_Array_with(1, (Object)variable1863);// selectorsend160698 = (Object)new_AST_Send((Object)localvariable27052, (Object)symbol44115, 0);string26856 = (Object)new_Type_String(L"doesNotUnderstand:");string26857 = (Object)new_Type_String(L"doesNotUnderstand: aMessage\n\t| selector |\n\t(aMessage selector = #accept:) \n\t\tifFalse: [ ^ super doesNotUnderstand: aMessage ].\n\tselector := (\'visit\', (self class name copyFrom: 4 to: (self class name size)), \':\') asSymbol.\n\t^ (aMessage argument) perform: selector with: self. ");smallint26729 = (Object)new_Type_SmallInt(-1);smallint26730 = (Object)new_Type_SmallInt(-1);info5386 = (Object)new_AST_Info((Type_String)string26857,(Type_String)string26856, (Type_SmallInt)smallint26729, (Type_SmallInt)smallint26730);((AST_Send)send160698)->info = (AST_Info)info5386;symbol44409 = (Object)new_Type_Symbol_cached(L"accept:");constant34646 = (Object)new_AST_Constant((Object)symbol44409);// =send160699 = (Object)new_AST_Send((Object)send160698, (Object)SMB__equal, 1, (Object)constant34646);((AST_Send)send160699)->info = (AST_Info)info5386;super2473 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable27052);// escape:send160700 = (Object)new_AST_Send((Object)variable1863, (Object)SMB_escape_, 1, (Object)super2473);((AST_Send)send160700)->info = (AST_Info)info5386;block11752 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160700);// ifFalse:send160701 = (Object)new_AST_Send((Object)send160699, (Object)SMB_ifFalse_, 1, (Object)block11752);((AST_Send)send160701)->info = (AST_Info)info5386;string26858 = (Object)new_Type_String(L"visit");constant34647 = (Object)new_AST_Constant((Object)string26858);// classsend160702 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);((AST_Send)send160702)->info = (AST_Info)info5386;// namesend160703 = (Object)new_AST_Send((Object)send160702, (Object)SMB_name, 0);((AST_Send)send160703)->info = (AST_Info)info5386;smallint26731 = (Object)new_Type_SmallInt(4);constant34648 = (Object)new_AST_Constant((Object)smallint26731);// classsend160704 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);((AST_Send)send160704)->info = (AST_Info)info5386;// namesend160705 = (Object)new_AST_Send((Object)send160704, (Object)SMB_name, 0);((AST_Send)send160705)->info = (AST_Info)info5386;// sizesend160706 = (Object)new_AST_Send((Object)send160705, (Object)SMB_size, 0);((AST_Send)send160706)->info = (AST_Info)info5386;// copyFrom:to:send160707 = (Object)new_AST_Send((Object)send160703, (Object)symbol44383, 2, (Object)constant34648, (Object)send160706);((AST_Send)send160707)->info = (AST_Info)info5386;// ,send160708 = (Object)new_AST_Send((Object)constant34647, (Object)SMB__concat, 1, (Object)send160707);((AST_Send)send160708)->info = (AST_Info)info5386;string26859 = (Object)new_Type_String(L":");constant34649 = (Object)new_AST_Constant((Object)string26859);// ,send160709 = (Object)new_AST_Send((Object)send160708, (Object)SMB__concat, 1, (Object)constant34649);((AST_Send)send160709)->info = (AST_Info)info5386;// asSymbolsend160710 = (Object)new_AST_Send((Object)send160709, (Object)SMB_asSymbol, 0);((AST_Send)send160710)->info = (AST_Info)info5386;assign20189 = (Object)new_AST_Assign((Object)localvariable27053, (Object)send160710);// argumentsend160711 = (Object)new_AST_Send((Object)localvariable27052, (Object)symbol44224, 0);((AST_Send)send160711)->info = (AST_Info)info5386;symbol44410 = (Object)new_Type_Symbol_cached(L"perform:with:");// perform:with:send160712 = (Object)new_AST_Send((Object)send160711, (Object)symbol44410, 2, (Object)localvariable27053, (Object)Self);((AST_Send)send160712)->info = (AST_Info)info5386;block11753 = (Object)new_AST_Block_with((Type_Array)array24144, (Type_Array)empty_Type_Array, 1, 3, send160701, assign20189, send160712);// on:send160713 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11753);method41129 = (Object)new_AST_Method_with((Type_Array)array24142, (Type_Array)array24143, 1, send160713);((AST_Method)method41129)->info = (AST_Info)info5386;methodclosure41032 = (Object)new_Runtime_MethodClosure(method41129);store_method((Type_Class)class6701, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure41032);// ASTNode>>astType//astType// 	^ 'Type'string26860 = (Object)new_Type_String(L"Type");constant34650 = (Object)new_AST_Constant((Object)string26860);method41130 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant34650);string26861 = (Object)new_Type_String(L"astType");string26862 = (Object)new_Type_String(L"astType\n\t^ \'Type\'");smallint26732 = (Object)new_Type_SmallInt(-1);smallint26733 = (Object)new_Type_SmallInt(-1);info5387 = (Object)new_AST_Info((Type_String)string26862,(Type_String)string26861, (Type_SmallInt)smallint26732, (Type_SmallInt)smallint26733);((AST_Method)method41130)->info = (AST_Info)info5387;symbol44168 = (Object)new_Type_Symbol_cached(L"astType");methodclosure41033 = (Object)new_Runtime_MethodClosure(method41130);store_method((Type_Class)class6701, (Type_Symbol)symbol44168, (Runtime_MethodClosure)methodclosure41033);// ASTNode>>uid//uid// 	uid isNil ifTrue: [ uid := self class uidFor: self].// 	^ uid// isNilsend160714 = (Object)new_AST_Send((Object)instancevariable16368, (Object)SMB_isNil, 0);string26863 = (Object)new_Type_String(L"uid");string26864 = (Object)new_Type_String(L"uid\n\tuid isNil ifTrue: [ uid := self class uidFor: self].\n\t^ uid");smallint26734 = (Object)new_Type_SmallInt(-1);smallint26735 = (Object)new_Type_SmallInt(-1);info5388 = (Object)new_AST_Info((Type_String)string26864,(Type_String)string26863, (Type_SmallInt)smallint26734, (Type_SmallInt)smallint26735);((AST_Send)send160714)->info = (AST_Info)info5388;// classsend160715 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);((AST_Send)send160715)->info = (AST_Info)info5388;symbol44411 = (Object)new_Type_Symbol_cached(L"uidFor:");// uidFor:send160716 = (Object)new_AST_Send((Object)send160715, (Object)symbol44411, 1, (Object)Self);((AST_Send)send160716)->info = (AST_Info)info5388;assign20190 = (Object)new_AST_Assign((Object)instancevariable16368, (Object)send160716);block11754 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign20190);// ifTrue:send160717 = (Object)new_AST_Send((Object)send160714, (Object)SMB_ifTrue_, 1, (Object)block11754);((AST_Send)send160717)->info = (AST_Info)info5388;method41131 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160717, instancevariable16368);((AST_Method)method41131)->info = (AST_Info)info5388;methodclosure41034 = (Object)new_Runtime_MethodClosure(method41131);store_method((Type_Class)class6701, (Type_Symbol)symbol44164, (Runtime_MethodClosure)methodclosure41034);classreference13431 = (Object)new_Organization_ClassReference((Type_Class)class6721);classreference13432 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);// Message>>selector//selector // 	^ selectorinstancevariable16448 = (Object)new_AST_InstVariable(0, L"selector");method41132 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16448);string26865 = (Object)new_Type_String(L"selector");string26866 = (Object)new_Type_String(L"selector \n\t^ selector");smallint26736 = (Object)new_Type_SmallInt(-1);smallint26737 = (Object)new_Type_SmallInt(-1);info5389 = (Object)new_AST_Info((Type_String)string26866,(Type_String)string26865, (Type_SmallInt)smallint26736, (Type_SmallInt)smallint26737);((AST_Method)method41132)->info = (AST_Info)info5389;methodclosure41035 = (Object)new_Runtime_MethodClosure(method41132);store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol44115, (Runtime_MethodClosure)methodclosure41035);// Message>>arguments//arguments// 	^ selfmethod41133 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string26867 = (Object)new_Type_String(L"arguments");string26868 = (Object)new_Type_String(L"arguments\n\t^ self");smallint26738 = (Object)new_Type_SmallInt(-1);smallint26739 = (Object)new_Type_SmallInt(-1);info5390 = (Object)new_AST_Info((Type_String)string26868,(Type_String)string26867, (Type_SmallInt)smallint26738, (Type_SmallInt)smallint26739);((AST_Method)method41133)->info = (AST_Info)info5390;methodclosure41036 = (Object)new_Runtime_MethodClosure(method41133);store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol44116, (Runtime_MethodClosure)methodclosure41036);// a PInternalMetaclass P#Message>>pTypeName//pTypeName// 	^ self basicPTypeName: 'Runtime'.string26869 = (Object)new_Type_String(L"Runtime");constant34651 = (Object)new_AST_Constant((Object)string26869);// basicPTypeName:send160718 = (Object)new_AST_Send((Object)Self, (Object)symbol43997, 1, (Object)constant34651);string26870 = (Object)new_Type_String(L"pTypeName");string26871 = (Object)new_Type_String(L"pTypeName\n\t^ self basicPTypeName: \'Runtime\'.");smallint26740 = (Object)new_Type_SmallInt(-1);smallint26741 = (Object)new_Type_SmallInt(-1);info5391 = (Object)new_AST_Info((Type_String)string26871,(Type_String)string26870, (Type_SmallInt)smallint26740, (Type_SmallInt)smallint26741);((AST_Send)send160718)->info = (AST_Info)info5391;method41134 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160718);((AST_Method)method41134)->info = (AST_Info)info5391;methodclosure41037 = (Object)new_Runtime_MethodClosure(method41134);store_method((Type_Class)internalmetaclass13, (Type_Symbol)symbol44003, (Runtime_MethodClosure)methodclosure41037);classreference13433 = (Object)new_Organization_ClassReference((Type_Class)Runtime_BlockClosure_Class);// BlockClosure>>whileTrue://whileTrue: aBlock// 	self value ifTrue: [// 		aBlock value.// 		self whileTrue: aBlock// 	]localvariable27054 = (Object)new_AST_Variable_named(L"aBlock");array24145 = (Object)new_Type_Array_with(1, (Object)localvariable27054);// valuesend160719 = (Object)new_AST_Send((Object)Self, (Object)symbol44392, 0);string26872 = (Object)new_Type_String(L"whileTrue:");string26873 = (Object)new_Type_String(L"whileTrue: aBlock\n\tself value ifTrue: [\n\t\taBlock value.\n\t\tself whileTrue: aBlock\n\t]");smallint26742 = (Object)new_Type_SmallInt(-1);smallint26743 = (Object)new_Type_SmallInt(-1);info5392 = (Object)new_AST_Info((Type_String)string26873,(Type_String)string26872, (Type_SmallInt)smallint26742, (Type_SmallInt)smallint26743);((AST_Send)send160719)->info = (AST_Info)info5392;// valuesend160720 = (Object)new_AST_Send((Object)localvariable27054, (Object)symbol44392, 0);((AST_Send)send160720)->info = (AST_Info)info5392;// whileTrue:send160721 = (Object)new_AST_Send((Object)Self, (Object)SMB_whileTrue_, 1, (Object)localvariable27054);((AST_Send)send160721)->info = (AST_Info)info5392;block11755 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, send160720, send160721);// ifTrue:send160722 = (Object)new_AST_Send((Object)send160719, (Object)SMB_ifTrue_, 1, (Object)block11755);((AST_Send)send160722)->info = (AST_Info)info5392;method41135 = (Object)new_AST_Method_with((Type_Array)array24145, (Type_Array)empty_Type_Array, 2, send160722, Self);((AST_Method)method41135)->info = (AST_Info)info5392;methodclosure41038 = (Object)new_Runtime_MethodClosure(method41135);store_method((Type_Class)Runtime_BlockClosure_Class, (Type_Symbol)SMB_whileTrue_, (Runtime_MethodClosure)methodclosure41038);classreference13434 = (Object)new_Organization_ClassReference((Type_Class)class6730);// RuntimeObject>>code//code// 	^ codemethod41136 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16401);string26874 = (Object)new_Type_String(L"code");string26875 = (Object)new_Type_String(L"code\n\t^ code");smallint26744 = (Object)new_Type_SmallInt(-1);smallint26745 = (Object)new_Type_SmallInt(-1);info5393 = (Object)new_AST_Info((Type_String)string26875,(Type_String)string26874, (Type_SmallInt)smallint26744, (Type_SmallInt)smallint26745);((AST_Method)method41136)->info = (AST_Info)info5393;symbol44140 = (Object)new_Type_Symbol_cached(L"code");methodclosure41039 = (Object)new_Runtime_MethodClosure(method41136);store_method((Type_Class)class6730, (Type_Symbol)symbol44140, (Runtime_MethodClosure)methodclosure41039);// RuntimeObject>>code://code: aBlock// 	code := aBlocklocalvariable27055 = (Object)new_AST_Variable_named(L"aBlock");array24146 = (Object)new_Type_Array_with(1, (Object)localvariable27055);assign20191 = (Object)new_AST_Assign((Object)instancevariable16401, (Object)localvariable27055);method41137 = (Object)new_AST_Method_with((Type_Array)array24146, (Type_Array)empty_Type_Array, 2, assign20191, Self);string26876 = (Object)new_Type_String(L"code:");string26877 = (Object)new_Type_String(L"code: aBlock\n\tcode := aBlock");smallint26746 = (Object)new_Type_SmallInt(-1);smallint26747 = (Object)new_Type_SmallInt(-1);info5394 = (Object)new_AST_Info((Type_String)string26877,(Type_String)string26876, (Type_SmallInt)smallint26746, (Type_SmallInt)smallint26747);((AST_Method)method41137)->info = (AST_Info)info5394;symbol44141 = (Object)new_Type_Symbol_cached(L"code:");methodclosure41040 = (Object)new_Runtime_MethodClosure(method41137);store_method((Type_Class)class6730, (Type_Symbol)symbol44141, (Runtime_MethodClosure)methodclosure41040);classreference13435 = (Object)new_Organization_ClassReference((Type_Class)True_Class);// True>>or://or: aBooleanlocalvariable27056 = (Object)new_AST_Variable_named(L"aBoolean");array24147 = (Object)new_Type_Array_with(1, (Object)localvariable27056);method41138 = (Object)new_AST_Method_with((Type_Array)array24147, (Type_Array)empty_Type_Array, 1, Self);string26878 = (Object)new_Type_String(L"or:");string26879 = (Object)new_Type_String(L"or: aBoolean");smallint26748 = (Object)new_Type_SmallInt(-1);smallint26749 = (Object)new_Type_SmallInt(-1);info5395 = (Object)new_AST_Info((Type_String)string26879,(Type_String)string26878, (Type_SmallInt)smallint26748, (Type_SmallInt)smallint26749);((AST_Method)method41138)->info = (AST_Info)info5395;methodclosure41041 = (Object)new_Runtime_MethodClosure(method41138);store_method((Type_Class)True_Class, (Type_Symbol)symbol44119, (Runtime_MethodClosure)methodclosure41041);// True>>and://and: aBlock// 	^ aBlock value.localvariable27057 = (Object)new_AST_Variable_named(L"aBlock");array24148 = (Object)new_Type_Array_with(1, (Object)localvariable27057);// valuesend160723 = (Object)new_AST_Send((Object)localvariable27057, (Object)symbol44392, 0);string26880 = (Object)new_Type_String(L"and:");string26881 = (Object)new_Type_String(L"and: aBlock\n\t^ aBlock value.");smallint26750 = (Object)new_Type_SmallInt(-1);smallint26751 = (Object)new_Type_SmallInt(-1);info5396 = (Object)new_AST_Info((Type_String)string26881,(Type_String)string26880, (Type_SmallInt)smallint26750, (Type_SmallInt)smallint26751);((AST_Send)send160723)->info = (AST_Info)info5396;method41139 = (Object)new_AST_Method_with((Type_Array)array24148, (Type_Array)empty_Type_Array, 1, send160723);((AST_Method)method41139)->info = (AST_Info)info5396;methodclosure41042 = (Object)new_Runtime_MethodClosure(method41139);store_method((Type_Class)True_Class, (Type_Symbol)symbol44120, (Runtime_MethodClosure)methodclosure41042);classreference13436 = (Object)new_Organization_ClassReference((Type_Class)class6731);// Type>>doesNotUnderstand://doesNotUnderstand: aMessage// 	| selector |// 	(aMessage selector = #accept:) // 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].// 	selector := ('visit', self objectName, ':') asSymbol.// 	^ (aMessage argument) perform: selector with: self. localvariable27058 = (Object)new_AST_Variable_named(L"aMessage");array24149 = (Object)new_Type_Array_with(1, (Object)localvariable27058);localvariable27059 = (Object)new_AST_Variable_named(L"selector");array24150 = (Object)new_Type_Array_with(1, (Object)localvariable27059);variable1864 = (Object)new_AST_Variable_named(L"return");array24151 = (Object)new_Type_Array_with(1, (Object)variable1864);// selectorsend160724 = (Object)new_AST_Send((Object)localvariable27058, (Object)symbol44115, 0);string26882 = (Object)new_Type_String(L"doesNotUnderstand:");string26883 = (Object)new_Type_String(L"doesNotUnderstand: aMessage\n\t| selector |\n\t(aMessage selector = #accept:) \n\t\tifFalse: [ ^ super doesNotUnderstand: aMessage ].\n\tselector := (\'visit\', self objectName, \':\') asSymbol.\n\t^ (aMessage argument) perform: selector with: self. ");smallint26752 = (Object)new_Type_SmallInt(-1);smallint26753 = (Object)new_Type_SmallInt(-1);info5397 = (Object)new_AST_Info((Type_String)string26883,(Type_String)string26882, (Type_SmallInt)smallint26752, (Type_SmallInt)smallint26753);((AST_Send)send160724)->info = (AST_Info)info5397;constant34652 = (Object)new_AST_Constant((Object)symbol44409);// =send160725 = (Object)new_AST_Send((Object)send160724, (Object)SMB__equal, 1, (Object)constant34652);((AST_Send)send160725)->info = (AST_Info)info5397;super2474 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable27058);// escape:send160726 = (Object)new_AST_Send((Object)variable1864, (Object)SMB_escape_, 1, (Object)super2474);((AST_Send)send160726)->info = (AST_Info)info5397;block11756 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160726);// ifFalse:send160727 = (Object)new_AST_Send((Object)send160725, (Object)SMB_ifFalse_, 1, (Object)block11756);((AST_Send)send160727)->info = (AST_Info)info5397;string26884 = (Object)new_Type_String(L"visit");constant34653 = (Object)new_AST_Constant((Object)string26884);// objectNamesend160728 = (Object)new_AST_Send((Object)Self, (Object)symbol44007, 0);((AST_Send)send160728)->info = (AST_Info)info5397;// ,send160729 = (Object)new_AST_Send((Object)constant34653, (Object)SMB__concat, 1, (Object)send160728);((AST_Send)send160729)->info = (AST_Info)info5397;string26885 = (Object)new_Type_String(L":");constant34654 = (Object)new_AST_Constant((Object)string26885);// ,send160730 = (Object)new_AST_Send((Object)send160729, (Object)SMB__concat, 1, (Object)constant34654);((AST_Send)send160730)->info = (AST_Info)info5397;// asSymbolsend160731 = (Object)new_AST_Send((Object)send160730, (Object)SMB_asSymbol, 0);((AST_Send)send160731)->info = (AST_Info)info5397;assign20192 = (Object)new_AST_Assign((Object)localvariable27059, (Object)send160731);// argumentsend160732 = (Object)new_AST_Send((Object)localvariable27058, (Object)symbol44224, 0);((AST_Send)send160732)->info = (AST_Info)info5397;// perform:with:send160733 = (Object)new_AST_Send((Object)send160732, (Object)symbol44410, 2, (Object)localvariable27059, (Object)Self);((AST_Send)send160733)->info = (AST_Info)info5397;block11757 = (Object)new_AST_Block_with((Type_Array)array24151, (Type_Array)empty_Type_Array, 1, 3, send160727, assign20192, send160733);// on:send160734 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11757);method41140 = (Object)new_AST_Method_with((Type_Array)array24149, (Type_Array)array24150, 1, send160734);((AST_Method)method41140)->info = (AST_Info)info5397;methodclosure41043 = (Object)new_Runtime_MethodClosure(method41140);store_method((Type_Class)class6731, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure41043);classreference13437 = (Object)new_Organization_ClassReference((Type_Class)False_Class);// False>>or://or: aBlock// 	^ aBlock value.localvariable27060 = (Object)new_AST_Variable_named(L"aBlock");array24152 = (Object)new_Type_Array_with(1, (Object)localvariable27060);// valuesend160735 = (Object)new_AST_Send((Object)localvariable27060, (Object)symbol44392, 0);string26886 = (Object)new_Type_String(L"or:");string26887 = (Object)new_Type_String(L"or: aBlock\n\t^ aBlock value.");smallint26754 = (Object)new_Type_SmallInt(-1);smallint26755 = (Object)new_Type_SmallInt(-1);info5398 = (Object)new_AST_Info((Type_String)string26887,(Type_String)string26886, (Type_SmallInt)smallint26754, (Type_SmallInt)smallint26755);((AST_Send)send160735)->info = (AST_Info)info5398;method41141 = (Object)new_AST_Method_with((Type_Array)array24152, (Type_Array)empty_Type_Array, 1, send160735);((AST_Method)method41141)->info = (AST_Info)info5398;methodclosure41044 = (Object)new_Runtime_MethodClosure(method41141);store_method((Type_Class)False_Class, (Type_Symbol)symbol44119, (Runtime_MethodClosure)methodclosure41044);// False>>and://and: aBooleanlocalvariable27061 = (Object)new_AST_Variable_named(L"aBoolean");array24153 = (Object)new_Type_Array_with(1, (Object)localvariable27061);method41142 = (Object)new_AST_Method_with((Type_Array)array24153, (Type_Array)empty_Type_Array, 1, Self);string26888 = (Object)new_Type_String(L"and:");string26889 = (Object)new_Type_String(L"and: aBoolean");smallint26756 = (Object)new_Type_SmallInt(-1);smallint26757 = (Object)new_Type_SmallInt(-1);info5399 = (Object)new_AST_Info((Type_String)string26889,(Type_String)string26888, (Type_SmallInt)smallint26756, (Type_SmallInt)smallint26757);((AST_Method)method41142)->info = (AST_Info)info5399;methodclosure41045 = (Object)new_Runtime_MethodClosure(method41142);store_method((Type_Class)False_Class, (Type_Symbol)symbol44120, (Runtime_MethodClosure)methodclosure41045);classreference13438 = (Object)new_Organization_ClassReference((Type_Class)class6732);// Variable>>printOn://printOn: aStream// 	super printOn: aStream.// 	aStream nextPutAll: ' '.// 	self name printOn: aStream.// 	aStream nextPutAll: ' '.// 	self scopeId printOn: aStream.// 	aStream nextPutAll: '@'.// 	self localId printOn: aStream.localvariable27062 = (Object)new_AST_Variable_named(L"aStream");array24154 = (Object)new_Type_Array_with(1, (Object)localvariable27062);super2475 = (Object)new_AST_Super((Object)symbol44111, 1, (Object)localvariable27062);string26890 = (Object)new_Type_String(L" ");constant34655 = (Object)new_AST_Constant((Object)string26890);// nextPutAll:send160736 = (Object)new_AST_Send((Object)localvariable27062, (Object)symbol44382, 1, (Object)constant34655);string26891 = (Object)new_Type_String(L"printOn:");string26892 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \' \'.\n\tself name printOn: aStream.\n\taStream nextPutAll: \' \'.\n\tself scopeId printOn: aStream.\n\taStream nextPutAll: \'@\'.\n\tself localId printOn: aStream.");smallint26758 = (Object)new_Type_SmallInt(-1);smallint26759 = (Object)new_Type_SmallInt(-1);info5400 = (Object)new_AST_Info((Type_String)string26892,(Type_String)string26891, (Type_SmallInt)smallint26758, (Type_SmallInt)smallint26759);((AST_Send)send160736)->info = (AST_Info)info5400;// namesend160737 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);((AST_Send)send160737)->info = (AST_Info)info5400;// printOn:send160738 = (Object)new_AST_Send((Object)send160737, (Object)symbol44111, 1, (Object)localvariable27062);((AST_Send)send160738)->info = (AST_Info)info5400;string26893 = (Object)new_Type_String(L" ");constant34656 = (Object)new_AST_Constant((Object)string26893);// nextPutAll:send160739 = (Object)new_AST_Send((Object)localvariable27062, (Object)symbol44382, 1, (Object)constant34656);((AST_Send)send160739)->info = (AST_Info)info5400;symbol44358 = (Object)new_Type_Symbol_cached(L"scopeId");// scopeIdsend160740 = (Object)new_AST_Send((Object)Self, (Object)symbol44358, 0);((AST_Send)send160740)->info = (AST_Info)info5400;// printOn:send160741 = (Object)new_AST_Send((Object)send160740, (Object)symbol44111, 1, (Object)localvariable27062);((AST_Send)send160741)->info = (AST_Info)info5400;string26894 = (Object)new_Type_String(L"@");constant34657 = (Object)new_AST_Constant((Object)string26894);// nextPutAll:send160742 = (Object)new_AST_Send((Object)localvariable27062, (Object)symbol44382, 1, (Object)constant34657);((AST_Send)send160742)->info = (AST_Info)info5400;symbol44357 = (Object)new_Type_Symbol_cached(L"localId");// localIdsend160743 = (Object)new_AST_Send((Object)Self, (Object)symbol44357, 0);((AST_Send)send160743)->info = (AST_Info)info5400;// printOn:send160744 = (Object)new_AST_Send((Object)send160743, (Object)symbol44111, 1, (Object)localvariable27062);((AST_Send)send160744)->info = (AST_Info)info5400;method41143 = (Object)new_AST_Method_with((Type_Array)array24154, (Type_Array)empty_Type_Array, 8, super2475, send160736, send160738, send160739, send160741, send160742, send160744, Self);((AST_Method)method41143)->info = (AST_Info)info5400;methodclosure41046 = (Object)new_Runtime_MethodClosure(method41143);store_method((Type_Class)class6732, (Type_Symbol)symbol44111, (Runtime_MethodClosure)methodclosure41046);// Variable>>localId://localId: anObject// 	localId := anObjectlocalvariable27063 = (Object)new_AST_Variable_named(L"anObject");array24155 = (Object)new_Type_Array_with(1, (Object)localvariable27063);assign20193 = (Object)new_AST_Assign((Object)instancevariable16404, (Object)localvariable27063);method41144 = (Object)new_AST_Method_with((Type_Array)array24155, (Type_Array)empty_Type_Array, 2, assign20193, Self);string26895 = (Object)new_Type_String(L"localId:");string26896 = (Object)new_Type_String(L"localId: anObject\n\tlocalId := anObject");smallint26760 = (Object)new_Type_SmallInt(-1);smallint26761 = (Object)new_Type_SmallInt(-1);info5401 = (Object)new_AST_Info((Type_String)string26896,(Type_String)string26895, (Type_SmallInt)smallint26760, (Type_SmallInt)smallint26761);((AST_Method)method41144)->info = (AST_Info)info5401;methodclosure41047 = (Object)new_Runtime_MethodClosure(method41144);store_method((Type_Class)class6732, (Type_Symbol)symbol44356, (Runtime_MethodClosure)methodclosure41047);// Variable>>scopeId//scopeId// 	^ scopeIdmethod41145 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16403);string26897 = (Object)new_Type_String(L"scopeId");string26898 = (Object)new_Type_String(L"scopeId\n\t^ scopeId");smallint26762 = (Object)new_Type_SmallInt(-1);smallint26763 = (Object)new_Type_SmallInt(-1);info5402 = (Object)new_AST_Info((Type_String)string26898,(Type_String)string26897, (Type_SmallInt)smallint26762, (Type_SmallInt)smallint26763);((AST_Method)method41145)->info = (AST_Info)info5402;methodclosure41048 = (Object)new_Runtime_MethodClosure(method41145);store_method((Type_Class)class6732, (Type_Symbol)symbol44358, (Runtime_MethodClosure)methodclosure41048);// Variable>>name://name: anObject // 	name := anObjectlocalvariable27064 = (Object)new_AST_Variable_named(L"anObject");array24156 = (Object)new_Type_Array_with(1, (Object)localvariable27064);assign20194 = (Object)new_AST_Assign((Object)instancevariable16402, (Object)localvariable27064);method41146 = (Object)new_AST_Method_with((Type_Array)array24156, (Type_Array)empty_Type_Array, 2, assign20194, Self);string26899 = (Object)new_Type_String(L"name:");string26900 = (Object)new_Type_String(L"name: anObject \n\tname := anObject");smallint26764 = (Object)new_Type_SmallInt(-1);smallint26765 = (Object)new_Type_SmallInt(-1);info5403 = (Object)new_AST_Info((Type_String)string26900,(Type_String)string26899, (Type_SmallInt)smallint26764, (Type_SmallInt)smallint26765);((AST_Method)method41146)->info = (AST_Info)info5403;methodclosure41049 = (Object)new_Runtime_MethodClosure(method41146);store_method((Type_Class)class6732, (Type_Symbol)symbol44204, (Runtime_MethodClosure)methodclosure41049);// Variable>>localId//localId// 	^ localIdmethod41147 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16404);string26901 = (Object)new_Type_String(L"localId");string26902 = (Object)new_Type_String(L"localId\n\t^ localId");smallint26766 = (Object)new_Type_SmallInt(-1);smallint26767 = (Object)new_Type_SmallInt(-1);info5404 = (Object)new_AST_Info((Type_String)string26902,(Type_String)string26901, (Type_SmallInt)smallint26766, (Type_SmallInt)smallint26767);((AST_Method)method41147)->info = (AST_Info)info5404;methodclosure41050 = (Object)new_Runtime_MethodClosure(method41147);store_method((Type_Class)class6732, (Type_Symbol)symbol44357, (Runtime_MethodClosure)methodclosure41050);// Variable>>scopeId://scopeId: anObject// 	scopeId := anObjectlocalvariable27065 = (Object)new_AST_Variable_named(L"anObject");array24157 = (Object)new_Type_Array_with(1, (Object)localvariable27065);assign20195 = (Object)new_AST_Assign((Object)instancevariable16403, (Object)localvariable27065);method41148 = (Object)new_AST_Method_with((Type_Array)array24157, (Type_Array)empty_Type_Array, 2, assign20195, Self);string26903 = (Object)new_Type_String(L"scopeId:");string26904 = (Object)new_Type_String(L"scopeId: anObject\n\tscopeId := anObject");smallint26768 = (Object)new_Type_SmallInt(-1);smallint26769 = (Object)new_Type_SmallInt(-1);info5405 = (Object)new_AST_Info((Type_String)string26904,(Type_String)string26903, (Type_SmallInt)smallint26768, (Type_SmallInt)smallint26769);((AST_Method)method41148)->info = (AST_Info)info5405;symbol44359 = (Object)new_Type_Symbol_cached(L"scopeId:");methodclosure41051 = (Object)new_Runtime_MethodClosure(method41148);store_method((Type_Class)class6732, (Type_Symbol)symbol44359, (Runtime_MethodClosure)methodclosure41051);// Variable>>asPVariable//asPVariable// 	^ self.method41149 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string26905 = (Object)new_Type_String(L"asPVariable");string26906 = (Object)new_Type_String(L"asPVariable\n\t^ self.");smallint26770 = (Object)new_Type_SmallInt(-1);smallint26771 = (Object)new_Type_SmallInt(-1);info5406 = (Object)new_AST_Info((Type_String)string26906,(Type_String)string26905, (Type_SmallInt)smallint26770, (Type_SmallInt)smallint26771);((AST_Method)method41149)->info = (AST_Info)info5406;methodclosure41052 = (Object)new_Runtime_MethodClosure(method41149);store_method((Type_Class)class6732, (Type_Symbol)symbol44207, (Runtime_MethodClosure)methodclosure41052);// Variable>>name//name// 	^ namemethod41150 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16402);string26907 = (Object)new_Type_String(L"name");string26908 = (Object)new_Type_String(L"name\n\t^ name");smallint26772 = (Object)new_Type_SmallInt(-1);smallint26773 = (Object)new_Type_SmallInt(-1);info5407 = (Object)new_AST_Info((Type_String)string26908,(Type_String)string26907, (Type_SmallInt)smallint26772, (Type_SmallInt)smallint26773);((AST_Method)method41150)->info = (AST_Info)info5407;methodclosure41053 = (Object)new_Runtime_MethodClosure(method41150);store_method((Type_Class)class6732, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure41053);// a PMetaclass P#Variable>>named://named: aSymbol// 	^ self new// 		name: aSymbol asSymbol.localvariable27066 = (Object)new_AST_Variable_named(L"aSymbol");array24158 = (Object)new_Type_Array_with(1, (Object)localvariable27066);// newsend160745 = (Object)new_AST_Send((Object)Self, (Object)symbol44095, 0);string26909 = (Object)new_Type_String(L"named:");string26910 = (Object)new_Type_String(L"named: aSymbol\n\t^ self new\n\t\tname: aSymbol asSymbol.");smallint26774 = (Object)new_Type_SmallInt(-1);smallint26775 = (Object)new_Type_SmallInt(-1);info5408 = (Object)new_AST_Info((Type_String)string26910,(Type_String)string26909, (Type_SmallInt)smallint26774, (Type_SmallInt)smallint26775);((AST_Send)send160745)->info = (AST_Info)info5408;// asSymbolsend160746 = (Object)new_AST_Send((Object)localvariable27066, (Object)SMB_asSymbol, 0);((AST_Send)send160746)->info = (AST_Info)info5408;// name:send160747 = (Object)new_AST_Send((Object)send160745, (Object)symbol44204, 1, (Object)send160746);((AST_Send)send160747)->info = (AST_Info)info5408;method41151 = (Object)new_AST_Method_with((Type_Array)array24158, (Type_Array)empty_Type_Array, 1, send160747);((AST_Method)method41151)->info = (AST_Info)info5408;methodclosure41054 = (Object)new_Runtime_MethodClosure(method41151);store_method((Type_Class)metaclass5933, (Type_Symbol)symbol44345, (Runtime_MethodClosure)methodclosure41054);classreference13439 = (Object)new_Organization_ClassReference((Type_Class)class6735);// SCParser>>initializeArray//initializeArray// 	| array |// 	array := PEGParser named: 'ARRAY'.// 	// 	array <= (('(' asPEG omit: true)// 				// 				& ((self numberConstant// 					| self stringConstant// 					<= self symbolInArray// 					<= self symbolConstant// 					<= self characterConstant// 					<= array) times)// 					// 				<& (')' asPEG omit: true)).// 	// 	array semantics: [ :result |// 		ASTArray new literals: result// 	].// 	// 	 ^ arraylocalvariable27067 = (Object)new_AST_Variable_named(L"array");array24159 = (Object)new_Type_Array_with(1, (Object)localvariable27067);classreference13440 = (Object)new_Organization_ClassReference((Type_Class)class6751);// PEGParser>>semantics://semantics: aBlock// 	semantics := aBlocklocalvariable27068 = (Object)new_AST_Variable_named(L"aBlock");array24160 = (Object)new_Type_Array_with(1, (Object)localvariable27068);assign20196 = (Object)new_AST_Assign((Object)instancevariable16431, (Object)localvariable27068);method41152 = (Object)new_AST_Method_with((Type_Array)array24160, (Type_Array)empty_Type_Array, 2, assign20196, Self);string26911 = (Object)new_Type_String(L"semantics:");string26912 = (Object)new_Type_String(L"semantics: aBlock\n\tsemantics := aBlock");smallint26776 = (Object)new_Type_SmallInt(-1);smallint26777 = (Object)new_Type_SmallInt(-1);info5409 = (Object)new_AST_Info((Type_String)string26912,(Type_String)string26911, (Type_SmallInt)smallint26776, (Type_SmallInt)smallint26777);((AST_Method)method41152)->info = (AST_Info)info5409;symbol44350 = (Object)new_Type_Symbol_cached(L"semantics:");methodclosure41055 = (Object)new_Runtime_MethodClosure(method41152);store_method((Type_Class)class6751, (Type_Symbol)symbol44350, (Runtime_MethodClosure)methodclosure41055);// PEGParser>>match://match: input//  	"| result |// 	self debug: input.// 	result :="// 	| result |// 	result := input memoizeMatch: self.// 	"self debugEnd: input."// 	^ resultlocalvariable27069 = (Object)new_AST_Variable_named(L"input");array24161 = (Object)new_Type_Array_with(1, (Object)localvariable27069);localvariable27070 = (Object)new_AST_Variable_named(L"result");array24162 = (Object)new_Type_Array_with(1, (Object)localvariable27070);symbol44161 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");// memoizeMatch:send160748 = (Object)new_AST_Send((Object)localvariable27069, (Object)symbol44161, 1, (Object)Self);string26913 = (Object)new_Type_String(L"match:");string26914 = (Object)new_Type_String(L"match: input\n \t\"| result |\n\tself debug: input.\n\tresult :=\"\n\t| result |\n\tresult := input memoizeMatch: self.\n\t\"self debugEnd: input.\"\n\t^ result");smallint26778 = (Object)new_Type_SmallInt(-1);smallint26779 = (Object)new_Type_SmallInt(-1);info5410 = (Object)new_AST_Info((Type_String)string26914,(Type_String)string26913, (Type_SmallInt)smallint26778, (Type_SmallInt)smallint26779);((AST_Send)send160748)->info = (AST_Info)info5410;assign20197 = (Object)new_AST_Assign((Object)localvariable27070, (Object)send160748);method41153 = (Object)new_AST_Method_with((Type_Array)array24161, (Type_Array)array24162, 2, assign20197, localvariable27070);((AST_Method)method41153)->info = (AST_Info)info5410;methodclosure41056 = (Object)new_Runtime_MethodClosure(method41153);store_method((Type_Class)class6751, (Type_Symbol)symbol44329, (Runtime_MethodClosure)methodclosure41056);// PEGParser>>parse://parse: input// 	| memoizingString result |// 	memoizingString := PEGStringScanner on: input separator: separator.// 	result := self match: memoizingString.// 	// 	^ resultlocalvariable27071 = (Object)new_AST_Variable_named(L"input");array24163 = (Object)new_Type_Array_with(1, (Object)localvariable27071);localvariable27072 = (Object)new_AST_Variable_named(L"memoizingString");localvariable27073 = (Object)new_AST_Variable_named(L"result");array24164 = (Object)new_Type_Array_with(2, (Object)localvariable27072, (Object)localvariable27073);classreference13441 = (Object)new_Organization_ClassReference((Type_Class)class6750);// PEGStringScanner>>scan://scan: otherString// 	" Maybe we should use other objects to mark... "// 	^ (self beginsWith: otherString)// 		ifTrue: [ otherString ]// 		ifFalse: [ nil ]localvariable27074 = (Object)new_AST_Variable_named(L"otherString");array24165 = (Object)new_Type_Array_with(1, (Object)localvariable27074);symbol44154 = (Object)new_Type_Symbol_cached(L"beginsWith:");// beginsWith:send160749 = (Object)new_AST_Send((Object)Self, (Object)symbol44154, 1, (Object)localvariable27074);string26915 = (Object)new_Type_String(L"scan:");string26916 = (Object)new_Type_String(L"scan: otherString\n\t\" Maybe we should use other objects to mark... \"\n\t^ (self beginsWith: otherString)\n\t\tifTrue: [ otherString ]\n\t\tifFalse: [ nil ]");smallint26780 = (Object)new_Type_SmallInt(-1);smallint26781 = (Object)new_Type_SmallInt(-1);info5411 = (Object)new_AST_Info((Type_String)string26916,(Type_String)string26915, (Type_SmallInt)smallint26780, (Type_SmallInt)smallint26781);((AST_Send)send160749)->info = (AST_Info)info5411;block11758 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable27074);block11759 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);// ifTrue:ifFalse:send160750 = (Object)new_AST_Send((Object)send160749, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11758, (Object)block11759);((AST_Send)send160750)->info = (AST_Info)info5411;method41154 = (Object)new_AST_Method_with((Type_Array)array24165, (Type_Array)empty_Type_Array, 1, send160750);((AST_Method)method41154)->info = (AST_Info)info5411;methodclosure41057 = (Object)new_Runtime_MethodClosure(method41154);store_method((Type_Class)class6750, (Type_Symbol)symbol44156, (Runtime_MethodClosure)methodclosure41057);// PEGStringScanner>>memoizeMatch://memoizeMatch: parser // 	| result doCache |// 	doCache := true.// 	doCache ifTrue: [// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].// 		position := result x.// 		^ result y.// 	]// 	ifFalse: [ ^ (self doMatch: parser) y]localvariable27075 = (Object)new_AST_Variable_named(L"parser");array24166 = (Object)new_Type_Array_with(1, (Object)localvariable27075);localvariable27076 = (Object)new_AST_Variable_named(L"result");localvariable27077 = (Object)new_AST_Variable_named(L"doCache");array24167 = (Object)new_Type_Array_with(2, (Object)localvariable27076, (Object)localvariable27077);variable1865 = (Object)new_AST_Variable_named(L"return");array24168 = (Object)new_Type_Array_with(1, (Object)variable1865);assign20198 = (Object)new_AST_Assign((Object)localvariable27077, (Object)True_Const);symbol44160 = (Object)new_Type_Symbol_cached(L"bucket");// bucketsend160751 = (Object)new_AST_Send((Object)Self, (Object)symbol44160, 0);string26917 = (Object)new_Type_String(L"memoizeMatch:");string26918 = (Object)new_Type_String(L"memoizeMatch: parser \n\t| result doCache |\n\tdoCache := true.\n\tdoCache ifTrue: [\n\t\tresult := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].\n\t\tposition := result x.\n\t\t^ result y.\n\t]\n\tifFalse: [ ^ (self doMatch: parser) y]");smallint26782 = (Object)new_Type_SmallInt(-1);smallint26783 = (Object)new_Type_SmallInt(-1);info5412 = (Object)new_AST_Info((Type_String)string26918,(Type_String)string26917, (Type_SmallInt)smallint26782, (Type_SmallInt)smallint26783);((AST_Send)send160751)->info = (AST_Info)info5412;symbol44368 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");symbol44153 = (Object)new_Type_Symbol_cached(L"doMatch:");// doMatch:send160752 = (Object)new_AST_Send((Object)Self, (Object)symbol44153, 1, (Object)localvariable27075);((AST_Send)send160752)->info = (AST_Info)info5412;block11760 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160752);// at:ifAbsentPut:send160753 = (Object)new_AST_Send((Object)send160751, (Object)symbol44368, 2, (Object)localvariable27075, (Object)block11760);((AST_Send)send160753)->info = (AST_Info)info5412;assign20199 = (Object)new_AST_Assign((Object)localvariable27076, (Object)send160753);symbol44412 = (Object)new_Type_Symbol_cached(L"x");// xsend160754 = (Object)new_AST_Send((Object)localvariable27076, (Object)symbol44412, 0);((AST_Send)send160754)->info = (AST_Info)info5412;assign20200 = (Object)new_AST_Assign((Object)instancevariable16424, (Object)send160754);symbol44413 = (Object)new_Type_Symbol_cached(L"y");// ysend160755 = (Object)new_AST_Send((Object)localvariable27076, (Object)symbol44413, 0);((AST_Send)send160755)->info = (AST_Info)info5412;// escape:send160756 = (Object)new_AST_Send((Object)variable1865, (Object)SMB_escape_, 1, (Object)send160755);((AST_Send)send160756)->info = (AST_Info)info5412;block11761 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign20199, assign20200, send160756);// doMatch:send160757 = (Object)new_AST_Send((Object)Self, (Object)symbol44153, 1, (Object)localvariable27075);((AST_Send)send160757)->info = (AST_Info)info5412;// ysend160758 = (Object)new_AST_Send((Object)send160757, (Object)symbol44413, 0);((AST_Send)send160758)->info = (AST_Info)info5412;// escape:send160759 = (Object)new_AST_Send((Object)variable1865, (Object)SMB_escape_, 1, (Object)send160758);((AST_Send)send160759)->info = (AST_Info)info5412;block11762 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160759);// ifTrue:ifFalse:send160760 = (Object)new_AST_Send((Object)localvariable27077, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11761, (Object)block11762);((AST_Send)send160760)->info = (AST_Info)info5412;block11763 = (Object)new_AST_Block_with((Type_Array)array24168, (Type_Array)empty_Type_Array, 1, 3, assign20198, send160760, Self);// on:send160761 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11763);method41155 = (Object)new_AST_Method_with((Type_Array)array24166, (Type_Array)array24167, 1, send160761);((AST_Method)method41155)->info = (AST_Info)info5412;methodclosure41058 = (Object)new_Runtime_MethodClosure(method41155);store_method((Type_Class)class6750, (Type_Symbol)symbol44161, (Runtime_MethodClosure)methodclosure41058);// PEGStringScanner>>skipWhitespace//skipWhitespace// 	^ separator match: self// match:send160762 = (Object)new_AST_Send((Object)instancevariable16426, (Object)symbol44329, 1, (Object)Self);string26919 = (Object)new_Type_String(L"skipWhitespace");string26920 = (Object)new_Type_String(L"skipWhitespace\n\t^ separator match: self");smallint26784 = (Object)new_Type_SmallInt(-1);smallint26785 = (Object)new_Type_SmallInt(-1);info5413 = (Object)new_AST_Info((Type_String)string26920,(Type_String)string26919, (Type_SmallInt)smallint26784, (Type_SmallInt)smallint26785);((AST_Send)send160762)->info = (AST_Info)info5413;method41156 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160762);((AST_Method)method41156)->info = (AST_Info)info5413;symbol44155 = (Object)new_Type_Symbol_cached(L"skipWhitespace");methodclosure41059 = (Object)new_Runtime_MethodClosure(method41156);store_method((Type_Class)class6750, (Type_Symbol)symbol44155, (Runtime_MethodClosure)methodclosure41059);// PEGStringScanner>>on:separator://on: aString separator: aSeparator// 	super on: aString.// 	separator := aSeparator.// 	cache := Array new: (aString size + 1).localvariable27078 = (Object)new_AST_Variable_named(L"aString");localvariable27079 = (Object)new_AST_Variable_named(L"aSeparator");array24169 = (Object)new_Type_Array_with(2, (Object)localvariable27078, (Object)localvariable27079);super2476 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable27078);assign20201 = (Object)new_AST_Assign((Object)instancevariable16426, (Object)localvariable27079);// sizesend160763 = (Object)new_AST_Send((Object)localvariable27078, (Object)SMB_size, 0);string26921 = (Object)new_Type_String(L"on:separator:");string26922 = (Object)new_Type_String(L"on: aString separator: aSeparator\n\tsuper on: aString.\n\tseparator := aSeparator.\n\tcache := Array new: (aString size + 1).");smallint26786 = (Object)new_Type_SmallInt(-1);smallint26787 = (Object)new_Type_SmallInt(-1);info5414 = (Object)new_AST_Info((Type_String)string26922,(Type_String)string26921, (Type_SmallInt)smallint26786, (Type_SmallInt)smallint26787);((AST_Send)send160763)->info = (AST_Info)info5414;smallint26788 = (Object)new_Type_SmallInt(1);constant34658 = (Object)new_AST_Constant((Object)smallint26788);// +send160764 = (Object)new_AST_Send((Object)send160763, (Object)SMB__plus, 1, (Object)constant34658);((AST_Send)send160764)->info = (AST_Info)info5414;// new:send160765 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)send160764);((AST_Send)send160765)->info = (AST_Info)info5414;assign20202 = (Object)new_AST_Assign((Object)instancevariable16427, (Object)send160765);method41157 = (Object)new_AST_Method_with((Type_Array)array24169, (Type_Array)empty_Type_Array, 4, super2476, assign20201, assign20202, Self);((AST_Method)method41157)->info = (AST_Info)info5414;symbol44157 = (Object)new_Type_Symbol_cached(L"on:separator:");methodclosure41060 = (Object)new_Runtime_MethodClosure(method41157);store_method((Type_Class)class6750, (Type_Symbol)symbol44157, (Runtime_MethodClosure)methodclosure41060);// PEGStringScanner>>doMatch://doMatch: parser// 	| result |// 	"First match then store position"// 	result := parser performMatch: self.// 	^ position @ resultlocalvariable27080 = (Object)new_AST_Variable_named(L"parser");array24170 = (Object)new_Type_Array_with(1, (Object)localvariable27080);localvariable27081 = (Object)new_AST_Variable_named(L"result");array24171 = (Object)new_Type_Array_with(1, (Object)localvariable27081);symbol44351 = (Object)new_Type_Symbol_cached(L"performMatch:");// performMatch:send160766 = (Object)new_AST_Send((Object)localvariable27080, (Object)symbol44351, 1, (Object)Self);string26923 = (Object)new_Type_String(L"doMatch:");string26924 = (Object)new_Type_String(L"doMatch: parser\n\t| result |\n\t\"First match then store position\"\n\tresult := parser performMatch: self.\n\t^ position @ result");smallint26789 = (Object)new_Type_SmallInt(-1);smallint26790 = (Object)new_Type_SmallInt(-1);info5415 = (Object)new_AST_Info((Type_String)string26924,(Type_String)string26923, (Type_SmallInt)smallint26789, (Type_SmallInt)smallint26790);((AST_Send)send160766)->info = (AST_Info)info5415;assign20203 = (Object)new_AST_Assign((Object)localvariable27081, (Object)send160766);symbol44414 = (Object)new_Type_Symbol_cached(L"@");// @send160767 = (Object)new_AST_Send((Object)instancevariable16424, (Object)symbol44414, 1, (Object)localvariable27081);((AST_Send)send160767)->info = (AST_Info)info5415;method41158 = (Object)new_AST_Method_with((Type_Array)array24170, (Type_Array)array24171, 2, assign20203, send160767);((AST_Method)method41158)->info = (AST_Info)info5415;methodclosure41061 = (Object)new_Runtime_MethodClosure(method41158);store_method((Type_Class)class6750, (Type_Symbol)symbol44153, (Runtime_MethodClosure)methodclosure41061);// PEGStringScanner>>bucket//bucket// 	| bucket |// 	bucket := cache at: position + 1.// 	bucket ifNotNil: [ ^ bucket ].// 	^ cache at: position + 1 put: (SmallDictionary new).localvariable27082 = (Object)new_AST_Variable_named(L"bucket");array24172 = (Object)new_Type_Array_with(1, (Object)localvariable27082);variable1866 = (Object)new_AST_Variable_named(L"return");array24173 = (Object)new_Type_Array_with(1, (Object)variable1866);smallint26791 = (Object)new_Type_SmallInt(1);constant34659 = (Object)new_AST_Constant((Object)smallint26791);// +send160768 = (Object)new_AST_Send((Object)instancevariable16424, (Object)SMB__plus, 1, (Object)constant34659);string26925 = (Object)new_Type_String(L"bucket");string26926 = (Object)new_Type_String(L"bucket\n\t| bucket |\n\tbucket := cache at: position + 1.\n\tbucket ifNotNil: [ ^ bucket ].\n\t^ cache at: position + 1 put: (SmallDictionary new).");smallint26792 = (Object)new_Type_SmallInt(-1);smallint26793 = (Object)new_Type_SmallInt(-1);info5416 = (Object)new_AST_Info((Type_String)string26926,(Type_String)string26925, (Type_SmallInt)smallint26792, (Type_SmallInt)smallint26793);((AST_Send)send160768)->info = (AST_Info)info5416;// at:send160769 = (Object)new_AST_Send((Object)instancevariable16427, (Object)SMB_at_, 1, (Object)send160768);((AST_Send)send160769)->info = (AST_Info)info5416;assign20204 = (Object)new_AST_Assign((Object)localvariable27082, (Object)send160769);// escape:send160770 = (Object)new_AST_Send((Object)variable1866, (Object)SMB_escape_, 1, (Object)localvariable27082);((AST_Send)send160770)->info = (AST_Info)info5416;block11764 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160770);// ifNotNil:send160771 = (Object)new_AST_Send((Object)localvariable27082, (Object)symbol44404, 1, (Object)block11764);((AST_Send)send160771)->info = (AST_Info)info5416;smallint26794 = (Object)new_Type_SmallInt(1);constant34660 = (Object)new_AST_Constant((Object)smallint26794);// +send160772 = (Object)new_AST_Send((Object)instancevariable16424, (Object)SMB__plus, 1, (Object)constant34660);((AST_Send)send160772)->info = (AST_Info)info5416;classreference13442 = (Object)new_Organization_ClassReference((Type_Class)class6759);// newsend160773 = (Object)new_AST_Send((Object)classreference13442, (Object)symbol44095, 0);((AST_Send)send160773)->info = (AST_Info)info5416;// at:put:send160774 = (Object)new_AST_Send((Object)instancevariable16427, (Object)SMB_at_put_, 2, (Object)send160772, (Object)send160773);((AST_Send)send160774)->info = (AST_Info)info5416;block11765 = (Object)new_AST_Block_with((Type_Array)array24173, (Type_Array)empty_Type_Array, 1, 3, assign20204, send160771, send160774);// on:send160775 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11765);method41159 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24172, 1, send160775);((AST_Method)method41159)->info = (AST_Info)info5416;methodclosure41062 = (Object)new_Runtime_MethodClosure(method41159);store_method((Type_Class)class6750, (Type_Symbol)symbol44160, (Runtime_MethodClosure)methodclosure41062);// PEGStringScanner>>beginsWith://beginsWith: subCollection // 	| pattern startMatch |// 	pattern := subCollection readStream.// 	startMatch := nil.// 	[ pattern atEnd ] whileFalse: // 		[ self atEnd ifTrue: [ ^ false ].// 		self next ~= pattern next // 			ifTrue: [ ^ false ] ].// 	^ truelocalvariable27083 = (Object)new_AST_Variable_named(L"subCollection");array24174 = (Object)new_Type_Array_with(1, (Object)localvariable27083);localvariable27084 = (Object)new_AST_Variable_named(L"pattern");localvariable27085 = (Object)new_AST_Variable_named(L"startMatch");array24175 = (Object)new_Type_Array_with(2, (Object)localvariable27084, (Object)localvariable27085);variable1867 = (Object)new_AST_Variable_named(L"return");array24176 = (Object)new_Type_Array_with(1, (Object)variable1867);symbol44415 = (Object)new_Type_Symbol_cached(L"readStream");// readStreamsend160776 = (Object)new_AST_Send((Object)localvariable27083, (Object)symbol44415, 0);string26927 = (Object)new_Type_String(L"beginsWith:");string26928 = (Object)new_Type_String(L"beginsWith: subCollection \n\t| pattern startMatch |\n\tpattern := subCollection readStream.\n\tstartMatch := nil.\n\t[ pattern atEnd ] whileFalse: \n\t\t[ self atEnd ifTrue: [ ^ false ].\n\t\tself next ~= pattern next \n\t\t\tifTrue: [ ^ false ] ].\n\t^ true");smallint26795 = (Object)new_Type_SmallInt(-1);smallint26796 = (Object)new_Type_SmallInt(-1);info5417 = (Object)new_AST_Info((Type_String)string26928,(Type_String)string26927, (Type_SmallInt)smallint26795, (Type_SmallInt)smallint26796);((AST_Send)send160776)->info = (AST_Info)info5417;assign20205 = (Object)new_AST_Assign((Object)localvariable27084, (Object)send160776);assign20206 = (Object)new_AST_Assign((Object)localvariable27085, (Object)Nil_Const);// atEndsend160777 = (Object)new_AST_Send((Object)localvariable27084, (Object)SMB_atEnd, 0);((AST_Send)send160777)->info = (AST_Info)info5417;block11766 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send160777);// atEndsend160778 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);((AST_Send)send160778)->info = (AST_Info)info5417;// escape:send160779 = (Object)new_AST_Send((Object)variable1867, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160779)->info = (AST_Info)info5417;block11767 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160779);// ifTrue:send160780 = (Object)new_AST_Send((Object)send160778, (Object)SMB_ifTrue_, 1, (Object)block11767);((AST_Send)send160780)->info = (AST_Info)info5417;// nextsend160781 = (Object)new_AST_Send((Object)Self, (Object)symbol44403, 0);((AST_Send)send160781)->info = (AST_Info)info5417;// nextsend160782 = (Object)new_AST_Send((Object)localvariable27084, (Object)symbol44403, 0);((AST_Send)send160782)->info = (AST_Info)info5417;// ~=send160783 = (Object)new_AST_Send((Object)send160781, (Object)symbol44010, 1, (Object)send160782);((AST_Send)send160783)->info = (AST_Info)info5417;// escape:send160784 = (Object)new_AST_Send((Object)variable1867, (Object)SMB_escape_, 1, (Object)False_Const);((AST_Send)send160784)->info = (AST_Info)info5417;block11768 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160784);// ifTrue:send160785 = (Object)new_AST_Send((Object)send160783, (Object)SMB_ifTrue_, 1, (Object)block11768);((AST_Send)send160785)->info = (AST_Info)info5417;block11769 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send160780, send160785);// whileFalse:send160786 = (Object)new_AST_Send((Object)block11766, (Object)SMB_whileFalse_, 1, (Object)block11769);((AST_Send)send160786)->info = (AST_Info)info5417;block11770 = (Object)new_AST_Block_with((Type_Array)array24176, (Type_Array)empty_Type_Array, 1, 4, assign20205, assign20206, send160786, True_Const);// on:send160787 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11770);method41160 = (Object)new_AST_Method_with((Type_Array)array24174, (Type_Array)array24175, 1, send160787);((AST_Method)method41160)->info = (AST_Info)info5417;methodclosure41063 = (Object)new_Runtime_MethodClosure(method41160);store_method((Type_Class)class6750, (Type_Symbol)symbol44154, (Runtime_MethodClosure)methodclosure41063);// on:separator:send160788 = (Object)new_AST_Send((Object)classreference13441, (Object)symbol44157, 2, (Object)localvariable27071, (Object)instancevariable16433);string26929 = (Object)new_Type_String(L"parse:");string26930 = (Object)new_Type_String(L"parse: input\n\t| memoizingString result |\n\tmemoizingString := PEGStringScanner on: input separator: separator.\n\tresult := self match: memoizingString.\n\t\n\t^ result");smallint26797 = (Object)new_Type_SmallInt(-1);smallint26798 = (Object)new_Type_SmallInt(-1);info5418 = (Object)new_AST_Info((Type_String)string26930,(Type_String)string26929, (Type_SmallInt)smallint26797, (Type_SmallInt)smallint26798);((AST_Send)send160788)->info = (AST_Info)info5418;assign20207 = (Object)new_AST_Assign((Object)localvariable27072, (Object)send160788);// match:send160789 = (Object)new_AST_Send((Object)Self, (Object)symbol44329, 1, (Object)localvariable27072);((AST_Send)send160789)->info = (AST_Info)info5418;assign20208 = (Object)new_AST_Assign((Object)localvariable27073, (Object)send160789);method41161 = (Object)new_AST_Method_with((Type_Array)array24163, (Type_Array)array24164, 3, assign20207, assign20208, localvariable27073);((AST_Method)method41161)->info = (AST_Info)info5418;symbol44349 = (Object)new_Type_Symbol_cached(L"parse:");methodclosure41064 = (Object)new_Runtime_MethodClosure(method41161);store_method((Type_Class)class6751, (Type_Symbol)symbol44349, (Runtime_MethodClosure)methodclosure41064);// PEGParser>>initialize//initialize// 	super initialize.// 	separator := self class separatorsuper2477 = (Object)new_AST_Super((Object)symbol44004, 0);// classsend160790 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);string26931 = (Object)new_Type_String(L"initialize");string26932 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tseparator := self class separator");smallint26799 = (Object)new_Type_SmallInt(-1);smallint26800 = (Object)new_Type_SmallInt(-1);info5419 = (Object)new_AST_Info((Type_String)string26932,(Type_String)string26931, (Type_SmallInt)smallint26799, (Type_SmallInt)smallint26800);((AST_Send)send160790)->info = (AST_Info)info5419;symbol44342 = (Object)new_Type_Symbol_cached(L"separator");// separatorsend160791 = (Object)new_AST_Send((Object)send160790, (Object)symbol44342, 0);((AST_Send)send160791)->info = (AST_Info)info5419;assign20209 = (Object)new_AST_Assign((Object)instancevariable16433, (Object)send160791);method41162 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super2477, assign20209, Self);((AST_Method)method41162)->info = (AST_Info)info5419;methodclosure41065 = (Object)new_Runtime_MethodClosure(method41162);store_method((Type_Class)class6751, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure41065);// PEGParser>>performMatch://performMatch: input// 	| match |// 	match := expression match: input.// 	^ match ifNil: [ match ]// 		ifNotNil: [// 			semantics ifNil: [ ^ match ].// 			semantics value: match ]localvariable27086 = (Object)new_AST_Variable_named(L"input");array24177 = (Object)new_Type_Array_with(1, (Object)localvariable27086);localvariable27087 = (Object)new_AST_Variable_named(L"match");array24178 = (Object)new_Type_Array_with(1, (Object)localvariable27087);variable1868 = (Object)new_AST_Variable_named(L"return");array24179 = (Object)new_Type_Array_with(1, (Object)variable1868);// match:send160792 = (Object)new_AST_Send((Object)instancevariable16430, (Object)symbol44329, 1, (Object)localvariable27086);string26933 = (Object)new_Type_String(L"performMatch:");string26934 = (Object)new_Type_String(L"performMatch: input\n\t| match |\n\tmatch := expression match: input.\n\t^ match ifNil: [ match ]\n\t\tifNotNil: [\n\t\t\tsemantics ifNil: [ ^ match ].\n\t\t\tsemantics value: match ]");smallint26801 = (Object)new_Type_SmallInt(-1);smallint26802 = (Object)new_Type_SmallInt(-1);info5420 = (Object)new_AST_Info((Type_String)string26934,(Type_String)string26933, (Type_SmallInt)smallint26801, (Type_SmallInt)smallint26802);((AST_Send)send160792)->info = (AST_Info)info5420;assign20210 = (Object)new_AST_Assign((Object)localvariable27087, (Object)send160792);symbol44416 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");block11771 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable27087);// escape:send160793 = (Object)new_AST_Send((Object)variable1868, (Object)SMB_escape_, 1, (Object)localvariable27087);((AST_Send)send160793)->info = (AST_Info)info5420;block11772 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send160793);// ifNil:send160794 = (Object)new_AST_Send((Object)instancevariable16431, (Object)symbol44005, 1, (Object)block11772);((AST_Send)send160794)->info = (AST_Info)info5420;// value:send160795 = (Object)new_AST_Send((Object)instancevariable16431, (Object)SMB_value_, 1, (Object)localvariable27087);((AST_Send)send160795)->info = (AST_Info)info5420;block11773 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send160794, send160795);// ifNil:ifNotNil:send160796 = (Object)new_AST_Send((Object)localvariable27087, (Object)symbol44416, 2, (Object)block11771, (Object)block11773);((AST_Send)send160796)->info = (AST_Info)info5420;block11774 = (Object)new_AST_Block_with((Type_Array)array24179, (Type_Array)empty_Type_Array, 1, 2, assign20210, send160796);// on:send160797 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11774);method41163 = (Object)new_AST_Method_with((Type_Array)array24177, (Type_Array)array24178, 1, send160797);((AST_Method)method41163)->info = (AST_Info)info5420;methodclosure41066 = (Object)new_Runtime_MethodClosure(method41163);store_method((Type_Class)class6751, (Type_Symbol)symbol44351, (Runtime_MethodClosure)methodclosure41066);// PEGParser>><=//<= theExpression// 	expression := theExpression asPEGlocalvariable27088 = (Object)new_AST_Variable_named(L"theExpression");array24180 = (Object)new_Type_Array_with(1, (Object)localvariable27088);// asPEGsend160798 = (Object)new_AST_Send((Object)localvariable27088, (Object)symbol44131, 0);string26935 = (Object)new_Type_String(L"<=");string26936 = (Object)new_Type_String(L"<= theExpression\n\texpression := theExpression asPEG");smallint26803 = (Object)new_Type_SmallInt(-1);smallint26804 = (Object)new_Type_SmallInt(-1);info5421 = (Object)new_AST_Info((Type_String)string26936,(Type_String)string26935, (Type_SmallInt)smallint26803, (Type_SmallInt)smallint26804);((AST_Send)send160798)->info = (AST_Info)info5421;assign20211 = (Object)new_AST_Assign((Object)instancevariable16430, (Object)send160798);method41164 = (Object)new_AST_Method_with((Type_Array)array24180, (Type_Array)empty_Type_Array, 2, assign20211, Self);((AST_Method)method41164)->info = (AST_Info)info5421;methodclosure41067 = (Object)new_Runtime_MethodClosure(method41164);store_method((Type_Class)class6751, (Type_Symbol)symbol44136, (Runtime_MethodClosure)methodclosure41067);// PEGParser>>separator://separator: aSeparator// 	separator := aSeparatorlocalvariable27089 = (Object)new_AST_Variable_named(L"aSeparator");array24181 = (Object)new_Type_Array_with(1, (Object)localvariable27089);assign20212 = (Object)new_AST_Assign((Object)instancevariable16433, (Object)localvariable27089);method41165 = (Object)new_AST_Method_with((Type_Array)array24181, (Type_Array)empty_Type_Array, 2, assign20212, Self);string26937 = (Object)new_Type_String(L"separator:");string26938 = (Object)new_Type_String(L"separator: aSeparator\n\tseparator := aSeparator");smallint26805 = (Object)new_Type_SmallInt(-1);smallint26806 = (Object)new_Type_SmallInt(-1);info5422 = (Object)new_AST_Info((Type_String)string26938,(Type_String)string26937, (Type_SmallInt)smallint26805, (Type_SmallInt)smallint26806);((AST_Method)method41165)->info = (AST_Info)info5422;symbol44348 = (Object)new_Type_Symbol_cached(L"separator:");methodclosure41068 = (Object)new_Runtime_MethodClosure(method41165);store_method((Type_Class)class6751, (Type_Symbol)symbol44348, (Runtime_MethodClosure)methodclosure41068);// a PMetaclass P#PEGParser>>basicSeparators//basicSeparators// 	separators ifNil: [ separators := (Character space asPEG) | Character tab <= Character cr ].// 	1*2.// 	separators isNil.// 	^ separators  " Separators := nil "// spacesend160799 = (Object)new_AST_Send((Object)classreference13403, (Object)symbol44143, 0);string26939 = (Object)new_Type_String(L"basicSeparators");string26940 = (Object)new_Type_String(L"basicSeparators\n\tseparators ifNil: [ separators := (Character space asPEG) | Character tab <= Character cr ].\n\t1*2.\n\tseparators isNil.\n\t^ separators  \" Separators := nil \"");smallint26807 = (Object)new_Type_SmallInt(-1);smallint26808 = (Object)new_Type_SmallInt(-1);info5423 = (Object)new_AST_Info((Type_String)string26940,(Type_String)string26939, (Type_SmallInt)smallint26807, (Type_SmallInt)smallint26808);((AST_Send)send160799)->info = (AST_Info)info5423;// asPEGsend160800 = (Object)new_AST_Send((Object)send160799, (Object)symbol44131, 0);((AST_Send)send160800)->info = (AST_Info)info5423;// tabsend160801 = (Object)new_AST_Send((Object)classreference13403, (Object)symbol44145, 0);((AST_Send)send160801)->info = (AST_Info)info5423;// |send160802 = (Object)new_AST_Send((Object)send160800, (Object)SMB__or, 1, (Object)send160801);((AST_Send)send160802)->info = (AST_Info)info5423;// crsend160803 = (Object)new_AST_Send((Object)classreference13403, (Object)symbol44144, 0);((AST_Send)send160803)->info = (AST_Info)info5423;// <=send160804 = (Object)new_AST_Send((Object)send160802, (Object)symbol44136, 1, (Object)send160803);((AST_Send)send160804)->info = (AST_Info)info5423;assign20213 = (Object)new_AST_Assign((Object)instancevariable16428, (Object)send160804);block11775 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign20213);// ifNil:send160805 = (Object)new_AST_Send((Object)instancevariable16428, (Object)symbol44005, 1, (Object)block11775);((AST_Send)send160805)->info = (AST_Info)info5423;smallint26809 = (Object)new_Type_SmallInt(1);constant34661 = (Object)new_AST_Constant((Object)smallint26809);smallint26810 = (Object)new_Type_SmallInt(2);constant34662 = (Object)new_AST_Constant((Object)smallint26810);// *send160806 = (Object)new_AST_Send((Object)constant34661, (Object)SMB__times, 1, (Object)constant34662);((AST_Send)send160806)->info = (AST_Info)info5423;// isNilsend160807 = (Object)new_AST_Send((Object)instancevariable16428, (Object)SMB_isNil, 0);((AST_Send)send160807)->info = (AST_Info)info5423;method41166 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send160805, send160806, send160807, instancevariable16428);((AST_Method)method41166)->info = (AST_Info)info5423;symbol44346 = (Object)new_Type_Symbol_cached(L"basicSeparators");methodclosure41069 = (Object)new_Runtime_MethodClosure(method41166);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44346, (Runtime_MethodClosure)methodclosure41069);// a PMetaclass P#PEGParser>>basicSeparator//basicSeparator// 	separator ifNil: [// 		separator := self basicSeparators strongTimes.// 	].// 	^ separator// basicSeparatorssend160808 = (Object)new_AST_Send((Object)Self, (Object)symbol44346, 0);string26941 = (Object)new_Type_String(L"basicSeparator");string26942 = (Object)new_Type_String(L"basicSeparator\n\tseparator ifNil: [\n\t\tseparator := self basicSeparators strongTimes.\n\t].\n\t^ separator");smallint26811 = (Object)new_Type_SmallInt(-1);smallint26812 = (Object)new_Type_SmallInt(-1);info5424 = (Object)new_AST_Info((Type_String)string26942,(Type_String)string26941, (Type_SmallInt)smallint26811, (Type_SmallInt)smallint26812);((AST_Send)send160808)->info = (AST_Info)info5424;symbol44331 = (Object)new_Type_Symbol_cached(L"strongTimes");// strongTimessend160809 = (Object)new_AST_Send((Object)send160808, (Object)symbol44331, 0);((AST_Send)send160809)->info = (AST_Info)info5424;assign20214 = (Object)new_AST_Assign((Object)instancevariable16429, (Object)send160809);block11776 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign20214);// ifNil:send160810 = (Object)new_AST_Send((Object)instancevariable16429, (Object)symbol44005, 1, (Object)block11776);((AST_Send)send160810)->info = (AST_Info)info5424;method41167 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160810, instancevariable16429);((AST_Method)method41167)->info = (AST_Info)info5424;symbol44343 = (Object)new_Type_Symbol_cached(L"basicSeparator");methodclosure41070 = (Object)new_Runtime_MethodClosure(method41167);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44343, (Runtime_MethodClosure)methodclosure41070);// a PMetaclass P#PEGParser>>named://named: theName// 	^ self new name: theNamelocalvariable27090 = (Object)new_AST_Variable_named(L"theName");array24182 = (Object)new_Type_Array_with(1, (Object)localvariable27090);// newsend160811 = (Object)new_AST_Send((Object)Self, (Object)symbol44095, 0);string26943 = (Object)new_Type_String(L"named:");string26944 = (Object)new_Type_String(L"named: theName\n\t^ self new name: theName");smallint26813 = (Object)new_Type_SmallInt(-1);smallint26814 = (Object)new_Type_SmallInt(-1);info5425 = (Object)new_AST_Info((Type_String)string26944,(Type_String)string26943, (Type_SmallInt)smallint26813, (Type_SmallInt)smallint26814);((AST_Send)send160811)->info = (AST_Info)info5425;// name:send160812 = (Object)new_AST_Send((Object)send160811, (Object)symbol44204, 1, (Object)localvariable27090);((AST_Send)send160812)->info = (AST_Info)info5425;method41168 = (Object)new_AST_Method_with((Type_Array)array24182, (Type_Array)empty_Type_Array, 1, send160812);((AST_Method)method41168)->info = (AST_Info)info5425;methodclosure41071 = (Object)new_Runtime_MethodClosure(method41168);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44345, (Runtime_MethodClosure)methodclosure41071);// a PMetaclass P#PEGParser>>separators//separators// 	^ PEGParser basicSeparators// basicSeparatorssend160813 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44346, 0);string26945 = (Object)new_Type_String(L"separators");string26946 = (Object)new_Type_String(L"separators\n\t^ PEGParser basicSeparators");smallint26815 = (Object)new_Type_SmallInt(-1);smallint26816 = (Object)new_Type_SmallInt(-1);info5426 = (Object)new_AST_Info((Type_String)string26946,(Type_String)string26945, (Type_SmallInt)smallint26815, (Type_SmallInt)smallint26816);((AST_Send)send160813)->info = (AST_Info)info5426;method41169 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160813);((AST_Method)method41169)->info = (AST_Info)info5426;symbol44341 = (Object)new_Type_Symbol_cached(L"separators");methodclosure41072 = (Object)new_Runtime_MethodClosure(method41169);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44341, (Runtime_MethodClosure)methodclosure41072);// a PMetaclass P#PEGParser>>named:parsing:semantics://named: theName parsing: expression semantics: semantics// 	^ (self named: theName parsing: expression) semantics: semanticslocalvariable27091 = (Object)new_AST_Variable_named(L"theName");localvariable27092 = (Object)new_AST_Variable_named(L"expression");localvariable27093 = (Object)new_AST_Variable_named(L"semantics");array24183 = (Object)new_Type_Array_with(3, (Object)localvariable27091, (Object)localvariable27092, (Object)localvariable27093);symbol44344 = (Object)new_Type_Symbol_cached(L"named:parsing:");// named:parsing:send160814 = (Object)new_AST_Send((Object)Self, (Object)symbol44344, 2, (Object)localvariable27091, (Object)localvariable27092);string26947 = (Object)new_Type_String(L"named:parsing:semantics:");string26948 = (Object)new_Type_String(L"named: theName parsing: expression semantics: semantics\n\t^ (self named: theName parsing: expression) semantics: semantics");smallint26817 = (Object)new_Type_SmallInt(-1);smallint26818 = (Object)new_Type_SmallInt(-1);info5427 = (Object)new_AST_Info((Type_String)string26948,(Type_String)string26947, (Type_SmallInt)smallint26817, (Type_SmallInt)smallint26818);((AST_Send)send160814)->info = (AST_Info)info5427;// semantics:send160815 = (Object)new_AST_Send((Object)send160814, (Object)symbol44350, 1, (Object)localvariable27093);((AST_Send)send160815)->info = (AST_Info)info5427;method41170 = (Object)new_AST_Method_with((Type_Array)array24183, (Type_Array)empty_Type_Array, 1, send160815);((AST_Method)method41170)->info = (AST_Info)info5427;symbol44347 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");methodclosure41073 = (Object)new_Runtime_MethodClosure(method41170);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44347, (Runtime_MethodClosure)methodclosure41073);// a PMetaclass P#PEGParser>>named:parsing://named: theName parsing: expression// 	^ (self named: theName) <= expressionlocalvariable27094 = (Object)new_AST_Variable_named(L"theName");localvariable27095 = (Object)new_AST_Variable_named(L"expression");array24184 = (Object)new_Type_Array_with(2, (Object)localvariable27094, (Object)localvariable27095);// named:send160816 = (Object)new_AST_Send((Object)Self, (Object)symbol44345, 1, (Object)localvariable27094);string26949 = (Object)new_Type_String(L"named:parsing:");string26950 = (Object)new_Type_String(L"named: theName parsing: expression\n\t^ (self named: theName) <= expression");smallint26819 = (Object)new_Type_SmallInt(-1);smallint26820 = (Object)new_Type_SmallInt(-1);info5428 = (Object)new_AST_Info((Type_String)string26950,(Type_String)string26949, (Type_SmallInt)smallint26819, (Type_SmallInt)smallint26820);((AST_Send)send160816)->info = (AST_Info)info5428;// <=send160817 = (Object)new_AST_Send((Object)send160816, (Object)symbol44136, 1, (Object)localvariable27095);((AST_Send)send160817)->info = (AST_Info)info5428;method41171 = (Object)new_AST_Method_with((Type_Array)array24184, (Type_Array)empty_Type_Array, 1, send160817);((AST_Method)method41171)->info = (AST_Info)info5428;methodclosure41074 = (Object)new_Runtime_MethodClosure(method41171);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44344, (Runtime_MethodClosure)methodclosure41074);// a PMetaclass P#PEGParser>>separator//separator// 	^ PEGParser basicSeparator// basicSeparatorsend160818 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44343, 0);string26951 = (Object)new_Type_String(L"separator");string26952 = (Object)new_Type_String(L"separator\n\t^ PEGParser basicSeparator");smallint26821 = (Object)new_Type_SmallInt(-1);smallint26822 = (Object)new_Type_SmallInt(-1);info5429 = (Object)new_AST_Info((Type_String)string26952,(Type_String)string26951, (Type_SmallInt)smallint26821, (Type_SmallInt)smallint26822);((AST_Send)send160818)->info = (AST_Info)info5429;method41172 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160818);((AST_Method)method41172)->info = (AST_Info)info5429;methodclosure41075 = (Object)new_Runtime_MethodClosure(method41172);store_method((Type_Class)metaclass5952, (Type_Symbol)symbol44342, (Runtime_MethodClosure)methodclosure41075);string26953 = (Object)new_Type_String(L"ARRAY");constant34663 = (Object)new_AST_Constant((Object)string26953);// named:send160819 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44345, 1, (Object)constant34663);string26954 = (Object)new_Type_String(L"initializeArray");string26955 = (Object)new_Type_String(L"initializeArray\n\t| array |\n\tarray := PEGParser named: \'ARRAY\'.\n\t\n\tarray <= ((\'(\' asPEG omit: true)\n\t\t\t\t\n\t\t\t\t& ((self numberConstant\n\t\t\t\t\t| self stringConstant\n\t\t\t\t\t<= self symbolInArray\n\t\t\t\t\t<= self symbolConstant\n\t\t\t\t\t<= self characterConstant\n\t\t\t\t\t<= array) times)\n\t\t\t\t\t\n\t\t\t\t<& (\')\' asPEG omit: true)).\n\t\n\tarray semantics: [ :result |\n\t\tASTArray new literals: result\n\t].\n\t\n\t ^ array");smallint26823 = (Object)new_Type_SmallInt(-1);smallint26824 = (Object)new_Type_SmallInt(-1);info5430 = (Object)new_AST_Info((Type_String)string26955,(Type_String)string26954, (Type_SmallInt)smallint26823, (Type_SmallInt)smallint26824);((AST_Send)send160819)->info = (AST_Info)info5430;assign20215 = (Object)new_AST_Assign((Object)localvariable27067, (Object)send160819);string26956 = (Object)new_Type_String(L"(");constant34664 = (Object)new_AST_Constant((Object)string26956);// asPEGsend160820 = (Object)new_AST_Send((Object)constant34664, (Object)symbol44131, 0);((AST_Send)send160820)->info = (AST_Info)info5430;symbol44330 = (Object)new_Type_Symbol_cached(L"omit:");// omit:send160821 = (Object)new_AST_Send((Object)send160820, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send160821)->info = (AST_Info)info5430;// <=send160822 = (Object)new_AST_Send((Object)localvariable27067, (Object)symbol44136, 1, (Object)send160821);((AST_Send)send160822)->info = (AST_Info)info5430;symbol44417 = (Object)new_Type_Symbol_cached(L"numberConstant");// numberConstantsend160823 = (Object)new_AST_Send((Object)Self, (Object)symbol44417, 0);((AST_Send)send160823)->info = (AST_Info)info5430;symbol44418 = (Object)new_Type_Symbol_cached(L"stringConstant");// stringConstantsend160824 = (Object)new_AST_Send((Object)Self, (Object)symbol44418, 0);((AST_Send)send160824)->info = (AST_Info)info5430;// |send160825 = (Object)new_AST_Send((Object)send160823, (Object)SMB__or, 1, (Object)send160824);((AST_Send)send160825)->info = (AST_Info)info5430;symbol44419 = (Object)new_Type_Symbol_cached(L"symbolInArray");// symbolInArraysend160826 = (Object)new_AST_Send((Object)Self, (Object)symbol44419, 0);((AST_Send)send160826)->info = (AST_Info)info5430;// <=send160827 = (Object)new_AST_Send((Object)send160825, (Object)symbol44136, 1, (Object)send160826);((AST_Send)send160827)->info = (AST_Info)info5430;symbol44420 = (Object)new_Type_Symbol_cached(L"symbolConstant");// symbolConstantsend160828 = (Object)new_AST_Send((Object)Self, (Object)symbol44420, 0);((AST_Send)send160828)->info = (AST_Info)info5430;// <=send160829 = (Object)new_AST_Send((Object)send160827, (Object)symbol44136, 1, (Object)send160828);((AST_Send)send160829)->info = (AST_Info)info5430;symbol44421 = (Object)new_Type_Symbol_cached(L"characterConstant");// characterConstantsend160830 = (Object)new_AST_Send((Object)Self, (Object)symbol44421, 0);((AST_Send)send160830)->info = (AST_Info)info5430;// <=send160831 = (Object)new_AST_Send((Object)send160829, (Object)symbol44136, 1, (Object)send160830);((AST_Send)send160831)->info = (AST_Info)info5430;// <=send160832 = (Object)new_AST_Send((Object)send160831, (Object)symbol44136, 1, (Object)localvariable27067);((AST_Send)send160832)->info = (AST_Info)info5430;symbol44340 = (Object)new_Type_Symbol_cached(L"times");// timessend160833 = (Object)new_AST_Send((Object)send160832, (Object)symbol44340, 0);((AST_Send)send160833)->info = (AST_Info)info5430;// &send160834 = (Object)new_AST_Send((Object)send160822, (Object)SMB__and, 1, (Object)send160833);((AST_Send)send160834)->info = (AST_Info)info5430;symbol44372 = (Object)new_Type_Symbol_cached(L"<&");string26957 = (Object)new_Type_String(L")");constant34665 = (Object)new_AST_Constant((Object)string26957);// asPEGsend160835 = (Object)new_AST_Send((Object)constant34665, (Object)symbol44131, 0);((AST_Send)send160835)->info = (AST_Info)info5430;// omit:send160836 = (Object)new_AST_Send((Object)send160835, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send160836)->info = (AST_Info)info5430;// <&send160837 = (Object)new_AST_Send((Object)send160834, (Object)symbol44372, 1, (Object)send160836);((AST_Send)send160837)->info = (AST_Info)info5430;localvariable27096 = (Object)new_AST_Variable_named(L"result");array24185 = (Object)new_Type_Array_with(1, (Object)localvariable27096);// newsend160838 = (Object)new_AST_Send((Object)classreference13397, (Object)symbol44095, 0);((AST_Send)send160838)->info = (AST_Info)info5430;// literals:send160839 = (Object)new_AST_Send((Object)send160838, (Object)symbol44171, 1, (Object)localvariable27096);((AST_Send)send160839)->info = (AST_Info)info5430;block11777 = (Object)new_AST_Block_with((Type_Array)array24185, (Type_Array)empty_Type_Array, 1, 1, send160839);// semantics:send160840 = (Object)new_AST_Send((Object)localvariable27067, (Object)symbol44350, 1, (Object)block11777);((AST_Send)send160840)->info = (AST_Info)info5430;method41173 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24159, 4, assign20215, send160837, send160840, localvariable27067);((AST_Method)method41173)->info = (AST_Info)info5430;symbol44268 = (Object)new_Type_Symbol_cached(L"initializeArray");methodclosure41076 = (Object)new_Runtime_MethodClosure(method41173);store_method((Type_Class)class6735, (Type_Symbol)symbol44268, (Runtime_MethodClosure)methodclosure41076);// SCParser>>initializeUnaryAnnotation//initializeUnaryAnnotation// 	^ PEGParser// 		named: 'UNARY-ANNOTATION'// 		parsing: self unarySelector// 		semantics: [ :selector |// 			ASTUnaryAnnotation new// 				selector: selector.// 		]string26958 = (Object)new_Type_String(L"UNARY-ANNOTATION");constant34666 = (Object)new_AST_Constant((Object)string26958);symbol44422 = (Object)new_Type_Symbol_cached(L"unarySelector");// unarySelectorsend160841 = (Object)new_AST_Send((Object)Self, (Object)symbol44422, 0);string26959 = (Object)new_Type_String(L"initializeUnaryAnnotation");string26960 = (Object)new_Type_String(L"initializeUnaryAnnotation\n\t^ PEGParser\n\t\tnamed: \'UNARY-ANNOTATION\'\n\t\tparsing: self unarySelector\n\t\tsemantics: [ :selector |\n\t\t\tASTUnaryAnnotation new\n\t\t\t\tselector: selector.\n\t\t]");smallint26825 = (Object)new_Type_SmallInt(-1);smallint26826 = (Object)new_Type_SmallInt(-1);info5431 = (Object)new_AST_Info((Type_String)string26960,(Type_String)string26959, (Type_SmallInt)smallint26825, (Type_SmallInt)smallint26826);((AST_Send)send160841)->info = (AST_Info)info5431;localvariable27097 = (Object)new_AST_Variable_named(L"selector");array24186 = (Object)new_Type_Array_with(1, (Object)localvariable27097);// newsend160842 = (Object)new_AST_Send((Object)classreference13427, (Object)symbol44095, 0);((AST_Send)send160842)->info = (AST_Info)info5431;// selector:send160843 = (Object)new_AST_Send((Object)send160842, (Object)symbol44212, 1, (Object)localvariable27097);((AST_Send)send160843)->info = (AST_Info)info5431;block11778 = (Object)new_AST_Block_with((Type_Array)array24186, (Type_Array)empty_Type_Array, 1, 1, send160843);// named:parsing:semantics:send160844 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34666, (Object)send160841, (Object)block11778);((AST_Send)send160844)->info = (AST_Info)info5431;method41174 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160844);((AST_Method)method41174)->info = (AST_Info)info5431;symbol44261 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");methodclosure41077 = (Object)new_Runtime_MethodClosure(method41174);store_method((Type_Class)class6735, (Type_Symbol)symbol44261, (Runtime_MethodClosure)methodclosure41077);// SCParser>>injectMessageExpression//injectMessageExpression// 	^ self messageExpression// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)symbol44423 = (Object)new_Type_Symbol_cached(L"messageExpression");// messageExpressionsend160845 = (Object)new_AST_Send((Object)Self, (Object)symbol44423, 0);string26961 = (Object)new_Type_String(L"injectMessageExpression");string26962 = (Object)new_Type_String(L"injectMessageExpression\n\t^ self messageExpression\n\t\t<= (self keywordExpression | self binaryExpression <= self unaryExpression)");smallint26827 = (Object)new_Type_SmallInt(-1);smallint26828 = (Object)new_Type_SmallInt(-1);info5432 = (Object)new_AST_Info((Type_String)string26962,(Type_String)string26961, (Type_SmallInt)smallint26827, (Type_SmallInt)smallint26828);((AST_Send)send160845)->info = (AST_Info)info5432;symbol44424 = (Object)new_Type_Symbol_cached(L"keywordExpression");// keywordExpressionsend160846 = (Object)new_AST_Send((Object)Self, (Object)symbol44424, 0);((AST_Send)send160846)->info = (AST_Info)info5432;// <=send160847 = (Object)new_AST_Send((Object)send160845, (Object)symbol44136, 1, (Object)send160846);((AST_Send)send160847)->info = (AST_Info)info5432;symbol44425 = (Object)new_Type_Symbol_cached(L"binaryExpression");// binaryExpressionsend160848 = (Object)new_AST_Send((Object)Self, (Object)symbol44425, 0);((AST_Send)send160848)->info = (AST_Info)info5432;// |send160849 = (Object)new_AST_Send((Object)send160847, (Object)SMB__or, 1, (Object)send160848);((AST_Send)send160849)->info = (AST_Info)info5432;symbol44426 = (Object)new_Type_Symbol_cached(L"unaryExpression");// unaryExpressionsend160850 = (Object)new_AST_Send((Object)Self, (Object)symbol44426, 0);((AST_Send)send160850)->info = (AST_Info)info5432;// <=send160851 = (Object)new_AST_Send((Object)send160849, (Object)symbol44136, 1, (Object)send160850);((AST_Send)send160851)->info = (AST_Info)info5432;method41175 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160851);((AST_Method)method41175)->info = (AST_Info)info5432;symbol44306 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");methodclosure41078 = (Object)new_Runtime_MethodClosure(method41175);store_method((Type_Class)class6735, (Type_Symbol)symbol44306, (Runtime_MethodClosure)methodclosure41078);// SCParser>>initializeNumberConstant//initializeNumberConstant// 	" XXX For now. "// 	^ PEGParser// 		named: 'NUMBER'// 		parsing: self decimalDigit plus// 		semantics: [ :result |// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'// 		]string26963 = (Object)new_Type_String(L"NUMBER");constant34667 = (Object)new_AST_Constant((Object)string26963);symbol44427 = (Object)new_Type_Symbol_cached(L"decimalDigit");// decimalDigitsend160852 = (Object)new_AST_Send((Object)Self, (Object)symbol44427, 0);string26964 = (Object)new_Type_String(L"initializeNumberConstant");string26965 = (Object)new_Type_String(L"initializeNumberConstant\n\t\" XXX For now. \"\n\t^ PEGParser\n\t\tnamed: \'NUMBER\'\n\t\tparsing: self decimalDigit plus\n\t\tsemantics: [ :result |\n\t\t\tASTNumber new number: (result inject: \'\' into: [:c :e | c, e] ); base: \'10\'\n\t\t]");smallint26829 = (Object)new_Type_SmallInt(-1);smallint26830 = (Object)new_Type_SmallInt(-1);info5433 = (Object)new_AST_Info((Type_String)string26965,(Type_String)string26964, (Type_SmallInt)smallint26829, (Type_SmallInt)smallint26830);((AST_Send)send160852)->info = (AST_Info)info5433;symbol44335 = (Object)new_Type_Symbol_cached(L"plus");// plussend160853 = (Object)new_AST_Send((Object)send160852, (Object)symbol44335, 0);((AST_Send)send160853)->info = (AST_Info)info5433;localvariable27098 = (Object)new_AST_Variable_named(L"result");array24187 = (Object)new_Type_Array_with(1, (Object)localvariable27098);localvariable27099 = (Object)new_AST_Variable_named(L"receiver");array24188 = (Object)new_Type_Array_with(1, (Object)localvariable27099);string26966 = (Object)new_Type_String(L"");constant34668 = (Object)new_AST_Constant((Object)string26966);localvariable27100 = (Object)new_AST_Variable_named(L"c");localvariable27101 = (Object)new_AST_Variable_named(L"e");array24189 = (Object)new_Type_Array_with(2, (Object)localvariable27100, (Object)localvariable27101);// ,send160854 = (Object)new_AST_Send((Object)localvariable27100, (Object)SMB__concat, 1, (Object)localvariable27101);((AST_Send)send160854)->info = (AST_Info)info5433;block11779 = (Object)new_AST_Block_with((Type_Array)array24189, (Type_Array)empty_Type_Array, 3, 1, send160854);// inject:into:send160855 = (Object)new_AST_Send((Object)localvariable27098, (Object)symbol44184, 2, (Object)constant34668, (Object)block11779);((AST_Send)send160855)->info = (AST_Info)info5433;// number:send160856 = (Object)new_AST_Send((Object)localvariable27099, (Object)symbol44190, 1, (Object)send160855);((AST_Send)send160856)->info = (AST_Info)info5433;string26967 = (Object)new_Type_String(L"10");constant34669 = (Object)new_AST_Constant((Object)string26967);// base:send160857 = (Object)new_AST_Send((Object)localvariable27099, (Object)symbol44191, 1, (Object)constant34669);((AST_Send)send160857)->info = (AST_Info)info5433;block11780 = (Object)new_AST_Block_with((Type_Array)array24188, (Type_Array)empty_Type_Array, 2, 2, send160856, send160857);// newsend160858 = (Object)new_AST_Send((Object)classreference13416, (Object)symbol44095, 0);((AST_Send)send160858)->info = (AST_Info)info5433;// value:send160859 = (Object)new_AST_Send((Object)block11780, (Object)SMB_value_, 1, (Object)send160858);((AST_Send)send160859)->info = (AST_Info)info5433;block11781 = (Object)new_AST_Block_with((Type_Array)array24187, (Type_Array)empty_Type_Array, 1, 1, send160859);// named:parsing:semantics:send160860 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34667, (Object)send160853, (Object)block11781);((AST_Send)send160860)->info = (AST_Info)info5433;method41176 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160860);((AST_Method)method41176)->info = (AST_Info)info5433;symbol44273 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");methodclosure41079 = (Object)new_Runtime_MethodClosure(method41176);store_method((Type_Class)class6735, (Type_Symbol)symbol44273, (Runtime_MethodClosure)methodclosure41079);// SCParser>>parsers://parsers: aDictionary// 	parsers := aDictionary localvariable27102 = (Object)new_AST_Variable_named(L"aDictionary");array24190 = (Object)new_Type_Array_with(1, (Object)localvariable27102);assign20216 = (Object)new_AST_Assign((Object)instancevariable16406, (Object)localvariable27102);method41177 = (Object)new_AST_Method_with((Type_Array)array24190, (Type_Array)empty_Type_Array, 2, assign20216, Self);string26968 = (Object)new_Type_String(L"parsers:");string26969 = (Object)new_Type_String(L"parsers: aDictionary\n\tparsers := aDictionary ");smallint26831 = (Object)new_Type_SmallInt(-1);smallint26832 = (Object)new_Type_SmallInt(-1);info5434 = (Object)new_AST_Info((Type_String)string26969,(Type_String)string26968, (Type_SmallInt)smallint26831, (Type_SmallInt)smallint26832);((AST_Method)method41177)->info = (AST_Info)info5434;symbol44311 = (Object)new_Type_Symbol_cached(L"parsers:");methodclosure41080 = (Object)new_Runtime_MethodClosure(method41177);store_method((Type_Class)class6735, (Type_Symbol)symbol44311, (Runtime_MethodClosure)methodclosure41080);// SCParser>>initializeUnaryMessageExpression//initializeUnaryMessageExpression// 	^ PEGParser// 		named: 'UNARY-MESSAGE-EXPRESSION'// 		parsing: self unarySelector// 		semantics: [ :selector |// 			ASTUnaryExpression new// 				selector: selector.// 		]string26970 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");constant34670 = (Object)new_AST_Constant((Object)string26970);// unarySelectorsend160861 = (Object)new_AST_Send((Object)Self, (Object)symbol44422, 0);string26971 = (Object)new_Type_String(L"initializeUnaryMessageExpression");string26972 = (Object)new_Type_String(L"initializeUnaryMessageExpression\n\t^ PEGParser\n\t\tnamed: \'UNARY-MESSAGE-EXPRESSION\'\n\t\tparsing: self unarySelector\n\t\tsemantics: [ :selector |\n\t\t\tASTUnaryExpression new\n\t\t\t\tselector: selector.\n\t\t]");smallint26833 = (Object)new_Type_SmallInt(-1);smallint26834 = (Object)new_Type_SmallInt(-1);info5435 = (Object)new_AST_Info((Type_String)string26972,(Type_String)string26971, (Type_SmallInt)smallint26833, (Type_SmallInt)smallint26834);((AST_Send)send160861)->info = (AST_Info)info5435;localvariable27103 = (Object)new_AST_Variable_named(L"selector");array24191 = (Object)new_Type_Array_with(1, (Object)localvariable27103);// newsend160862 = (Object)new_AST_Send((Object)classreference13410, (Object)symbol44095, 0);((AST_Send)send160862)->info = (AST_Info)info5435;// selector:send160863 = (Object)new_AST_Send((Object)send160862, (Object)symbol44212, 1, (Object)localvariable27103);((AST_Send)send160863)->info = (AST_Info)info5435;block11782 = (Object)new_AST_Block_with((Type_Array)array24191, (Type_Array)empty_Type_Array, 1, 1, send160863);// named:parsing:semantics:send160864 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34670, (Object)send160861, (Object)block11782);((AST_Send)send160864)->info = (AST_Info)info5435;method41178 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160864);((AST_Method)method41178)->info = (AST_Info)info5435;symbol44255 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");methodclosure41081 = (Object)new_Runtime_MethodClosure(method41178);store_method((Type_Class)class6735, (Type_Symbol)symbol44255, (Runtime_MethodClosure)methodclosure41081);// SCParser>>initializeSymbolConstant//initializeSymbolConstant// 	^ PEGParser// 		named: 'SYMBOL-CONSTANT'// 		parsing: (('#' asPEG omit: true) && self symbol)// 		semantics: [ :result |// 			ASTSymbol new symbol: result// 		]string26973 = (Object)new_Type_String(L"SYMBOL-CONSTANT");constant34671 = (Object)new_AST_Constant((Object)string26973);string26974 = (Object)new_Type_String(L"#");constant34672 = (Object)new_AST_Constant((Object)string26974);// asPEGsend160865 = (Object)new_AST_Send((Object)constant34672, (Object)symbol44131, 0);string26975 = (Object)new_Type_String(L"initializeSymbolConstant");string26976 = (Object)new_Type_String(L"initializeSymbolConstant\n\t^ PEGParser\n\t\tnamed: \'SYMBOL-CONSTANT\'\n\t\tparsing: ((\'#\' asPEG omit: true) && self symbol)\n\t\tsemantics: [ :result |\n\t\t\tASTSymbol new symbol: result\n\t\t]");smallint26835 = (Object)new_Type_SmallInt(-1);smallint26836 = (Object)new_Type_SmallInt(-1);info5436 = (Object)new_AST_Info((Type_String)string26976,(Type_String)string26975, (Type_SmallInt)smallint26835, (Type_SmallInt)smallint26836);((AST_Send)send160865)->info = (AST_Info)info5436;// omit:send160866 = (Object)new_AST_Send((Object)send160865, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send160866)->info = (AST_Info)info5436;symbol44326 = (Object)new_Type_Symbol_cached(L"&&");// symbolsend160867 = (Object)new_AST_Send((Object)Self, (Object)symbol44193, 0);((AST_Send)send160867)->info = (AST_Info)info5436;// &&send160868 = (Object)new_AST_Send((Object)send160866, (Object)symbol44326, 1, (Object)send160867);((AST_Send)send160868)->info = (AST_Info)info5436;localvariable27104 = (Object)new_AST_Variable_named(L"result");array24192 = (Object)new_Type_Array_with(1, (Object)localvariable27104);// newsend160869 = (Object)new_AST_Send((Object)classreference13421, (Object)symbol44095, 0);((AST_Send)send160869)->info = (AST_Info)info5436;// symbol:send160870 = (Object)new_AST_Send((Object)send160869, (Object)symbol44195, 1, (Object)localvariable27104);((AST_Send)send160870)->info = (AST_Info)info5436;block11783 = (Object)new_AST_Block_with((Type_Array)array24192, (Type_Array)empty_Type_Array, 1, 1, send160870);// named:parsing:semantics:send160871 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34671, (Object)send160868, (Object)block11783);((AST_Send)send160871)->info = (AST_Info)info5436;method41179 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160871);((AST_Method)method41179)->info = (AST_Info)info5436;symbol44283 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");methodclosure41082 = (Object)new_Runtime_MethodClosure(method41179);store_method((Type_Class)class6735, (Type_Symbol)symbol44283, (Runtime_MethodClosure)methodclosure41082);// SCParser>>initializeMessagePattern//initializeMessagePattern// 	^ PEGParser// 		named: 'MESSAGE-PATTERN'// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)string26977 = (Object)new_Type_String(L"MESSAGE-PATTERN");constant34673 = (Object)new_AST_Constant((Object)string26977);symbol44428 = (Object)new_Type_Symbol_cached(L"keywordsArguments");// keywordsArgumentssend160872 = (Object)new_AST_Send((Object)Self, (Object)symbol44428, 0);string26978 = (Object)new_Type_String(L"initializeMessagePattern");string26979 = (Object)new_Type_String(L"initializeMessagePattern\n\t^ PEGParser\n\t\tnamed: \'MESSAGE-PATTERN\'\n\t\tparsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)");smallint26837 = (Object)new_Type_SmallInt(-1);smallint26838 = (Object)new_Type_SmallInt(-1);info5437 = (Object)new_AST_Info((Type_String)string26979,(Type_String)string26978, (Type_SmallInt)smallint26837, (Type_SmallInt)smallint26838);((AST_Send)send160872)->info = (AST_Info)info5437;symbol44429 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");// binaryMessageDefinitionsend160873 = (Object)new_AST_Send((Object)Self, (Object)symbol44429, 0);((AST_Send)send160873)->info = (AST_Info)info5437;// |send160874 = (Object)new_AST_Send((Object)send160872, (Object)SMB__or, 1, (Object)send160873);((AST_Send)send160874)->info = (AST_Info)info5437;symbol44430 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");// unaryMessageDefinitionsend160875 = (Object)new_AST_Send((Object)Self, (Object)symbol44430, 0);((AST_Send)send160875)->info = (AST_Info)info5437;// <=send160876 = (Object)new_AST_Send((Object)send160874, (Object)symbol44136, 1, (Object)send160875);((AST_Send)send160876)->info = (AST_Info)info5437;// named:parsing:send160877 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44344, 2, (Object)constant34673, (Object)send160876);((AST_Send)send160877)->info = (AST_Info)info5437;method41180 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160877);((AST_Method)method41180)->info = (AST_Info)info5437;symbol44295 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");methodclosure41083 = (Object)new_Runtime_MethodClosure(method41180);store_method((Type_Class)class6735, (Type_Symbol)symbol44295, (Runtime_MethodClosure)methodclosure41083);// SCParser>>initializeSymbolKeywords//initializeSymbolKeywords// 	^ PEGParser// 		named: 'SYMBOL-KEYWORDS'// 		parsing: self keyword strongPlus// 		semantics: [ :result |// 			result inject: '' into: [ :c :e | c, e, ':' ]// 		]string26980 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");constant34674 = (Object)new_AST_Constant((Object)string26980);symbol44431 = (Object)new_Type_Symbol_cached(L"keyword");// keywordsend160878 = (Object)new_AST_Send((Object)Self, (Object)symbol44431, 0);string26981 = (Object)new_Type_String(L"initializeSymbolKeywords");string26982 = (Object)new_Type_String(L"initializeSymbolKeywords\n\t^ PEGParser\n\t\tnamed: \'SYMBOL-KEYWORDS\'\n\t\tparsing: self keyword strongPlus\n\t\tsemantics: [ :result |\n\t\t\tresult inject: \'\' into: [ :c :e | c, e, \':\' ]\n\t\t]");smallint26839 = (Object)new_Type_SmallInt(-1);smallint26840 = (Object)new_Type_SmallInt(-1);info5438 = (Object)new_AST_Info((Type_String)string26982,(Type_String)string26981, (Type_SmallInt)smallint26839, (Type_SmallInt)smallint26840);((AST_Send)send160878)->info = (AST_Info)info5438;symbol44323 = (Object)new_Type_Symbol_cached(L"strongPlus");// strongPlussend160879 = (Object)new_AST_Send((Object)send160878, (Object)symbol44323, 0);((AST_Send)send160879)->info = (AST_Info)info5438;localvariable27105 = (Object)new_AST_Variable_named(L"result");array24193 = (Object)new_Type_Array_with(1, (Object)localvariable27105);string26983 = (Object)new_Type_String(L"");constant34675 = (Object)new_AST_Constant((Object)string26983);localvariable27106 = (Object)new_AST_Variable_named(L"c");localvariable27107 = (Object)new_AST_Variable_named(L"e");array24194 = (Object)new_Type_Array_with(2, (Object)localvariable27106, (Object)localvariable27107);// ,send160880 = (Object)new_AST_Send((Object)localvariable27106, (Object)SMB__concat, 1, (Object)localvariable27107);((AST_Send)send160880)->info = (AST_Info)info5438;string26984 = (Object)new_Type_String(L":");constant34676 = (Object)new_AST_Constant((Object)string26984);// ,send160881 = (Object)new_AST_Send((Object)send160880, (Object)SMB__concat, 1, (Object)constant34676);((AST_Send)send160881)->info = (AST_Info)info5438;block11784 = (Object)new_AST_Block_with((Type_Array)array24194, (Type_Array)empty_Type_Array, 2, 1, send160881);// inject:into:send160882 = (Object)new_AST_Send((Object)localvariable27105, (Object)symbol44184, 2, (Object)constant34675, (Object)block11784);((AST_Send)send160882)->info = (AST_Info)info5438;block11785 = (Object)new_AST_Block_with((Type_Array)array24193, (Type_Array)empty_Type_Array, 1, 1, send160882);// named:parsing:semantics:send160883 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34674, (Object)send160879, (Object)block11785);((AST_Send)send160883)->info = (AST_Info)info5438;method41181 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160883);((AST_Method)method41181)->info = (AST_Info)info5438;symbol44265 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");methodclosure41084 = (Object)new_Runtime_MethodClosure(method41181);store_method((Type_Class)class6735, (Type_Symbol)symbol44265, (Runtime_MethodClosure)methodclosure41084);// SCParser>>initializeBinaryExpression//initializeBinaryExpression// 	// 	self preStoreBinaryObjectDescription.// 	// 	parsers at: #binaryExpression ifAbsentPut: (// 	PEGParser// 		named: 'BINARY-EXPRESSION'// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)// 		semantics: [:parts |// 			(parts at: 3)// 				argumentOfBinary: (ASTBinaryExpression new// 					receiver: (parts first);// 					selector: (ASTBinarySelector new selector: (self createSymbol: (parts at: 2))))// 		]// 	).// 	// 	self injectBinaryObjectDescription.// 	// 	^ self binaryExpressionsymbol44278 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");// preStoreBinaryObjectDescriptionsend160884 = (Object)new_AST_Send((Object)Self, (Object)symbol44278, 0);string26985 = (Object)new_Type_String(L"initializeBinaryExpression");string26986 = (Object)new_Type_String(L"initializeBinaryExpression\n\t\n\tself preStoreBinaryObjectDescription.\n\t\n\tparsers at: #binaryExpression ifAbsentPut: (\n\tPEGParser\n\t\tnamed: \'BINARY-EXPRESSION\'\n\t\tparsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)\n\t\tsemantics: [:parts |\n\t\t\t(parts at: 3)\n\t\t\t\targumentOfBinary: (ASTBinaryExpression new\n\t\t\t\t\treceiver: (parts first);\n\t\t\t\t\tselector: (ASTBinarySelector new selector: (self createSymbol: (parts at: 2))))\n\t\t]\n\t).\n\t\n\tself injectBinaryObjectDescription.\n\t\n\t^ self binaryExpression");smallint26841 = (Object)new_Type_SmallInt(-1);smallint26842 = (Object)new_Type_SmallInt(-1);info5439 = (Object)new_AST_Info((Type_String)string26986,(Type_String)string26985, (Type_SmallInt)smallint26841, (Type_SmallInt)smallint26842);((AST_Send)send160884)->info = (AST_Info)info5439;constant34677 = (Object)new_AST_Constant((Object)symbol44425);string26987 = (Object)new_Type_String(L"BINARY-EXPRESSION");constant34678 = (Object)new_AST_Constant((Object)string26987);symbol44432 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");// unaryObjectDescriptionsend160885 = (Object)new_AST_Send((Object)Self, (Object)symbol44432, 0);((AST_Send)send160885)->info = (AST_Info)info5439;symbol44433 = (Object)new_Type_Symbol_cached(L"binarySelector");// binarySelectorsend160886 = (Object)new_AST_Send((Object)Self, (Object)symbol44433, 0);((AST_Send)send160886)->info = (AST_Info)info5439;// &send160887 = (Object)new_AST_Send((Object)send160885, (Object)SMB__and, 1, (Object)send160886);((AST_Send)send160887)->info = (AST_Info)info5439;symbol44434 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");// binaryObjectDescriptionsend160888 = (Object)new_AST_Send((Object)Self, (Object)symbol44434, 0);((AST_Send)send160888)->info = (AST_Info)info5439;// <&send160889 = (Object)new_AST_Send((Object)send160887, (Object)symbol44372, 1, (Object)send160888);((AST_Send)send160889)->info = (AST_Info)info5439;localvariable27108 = (Object)new_AST_Variable_named(L"parts");array24195 = (Object)new_Type_Array_with(1, (Object)localvariable27108);smallint26843 = (Object)new_Type_SmallInt(3);constant34679 = (Object)new_AST_Constant((Object)smallint26843);// at:send160890 = (Object)new_AST_Send((Object)localvariable27108, (Object)SMB_at_, 1, (Object)constant34679);((AST_Send)send160890)->info = (AST_Info)info5439;localvariable27109 = (Object)new_AST_Variable_named(L"receiver");array24196 = (Object)new_Type_Array_with(1, (Object)localvariable27109);// firstsend160891 = (Object)new_AST_Send((Object)localvariable27108, (Object)symbol44180, 0);((AST_Send)send160891)->info = (AST_Info)info5439;// receiver:send160892 = (Object)new_AST_Send((Object)localvariable27109, (Object)symbol44216, 1, (Object)send160891);((AST_Send)send160892)->info = (AST_Info)info5439;// newsend160893 = (Object)new_AST_Send((Object)classreference13431, (Object)symbol44095, 0);((AST_Send)send160893)->info = (AST_Info)info5439;symbol44285 = (Object)new_Type_Symbol_cached(L"createSymbol:");smallint26844 = (Object)new_Type_SmallInt(2);constant34680 = (Object)new_AST_Constant((Object)smallint26844);// at:send160894 = (Object)new_AST_Send((Object)localvariable27108, (Object)SMB_at_, 1, (Object)constant34680);((AST_Send)send160894)->info = (AST_Info)info5439;// createSymbol:send160895 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)send160894);((AST_Send)send160895)->info = (AST_Info)info5439;// selector:send160896 = (Object)new_AST_Send((Object)send160893, (Object)symbol44212, 1, (Object)send160895);((AST_Send)send160896)->info = (AST_Info)info5439;// selector:send160897 = (Object)new_AST_Send((Object)localvariable27109, (Object)symbol44212, 1, (Object)send160896);((AST_Send)send160897)->info = (AST_Info)info5439;block11786 = (Object)new_AST_Block_with((Type_Array)array24196, (Type_Array)empty_Type_Array, 2, 2, send160892, send160897);// newsend160898 = (Object)new_AST_Send((Object)classreference13429, (Object)symbol44095, 0);((AST_Send)send160898)->info = (AST_Info)info5439;// value:send160899 = (Object)new_AST_Send((Object)block11786, (Object)SMB_value_, 1, (Object)send160898);((AST_Send)send160899)->info = (AST_Info)info5439;// argumentOfBinary:send160900 = (Object)new_AST_Send((Object)send160890, (Object)symbol44166, 1, (Object)send160899);((AST_Send)send160900)->info = (AST_Info)info5439;block11787 = (Object)new_AST_Block_with((Type_Array)array24195, (Type_Array)empty_Type_Array, 1, 1, send160900);// named:parsing:semantics:send160901 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34678, (Object)send160889, (Object)block11787);((AST_Send)send160901)->info = (AST_Info)info5439;// at:ifAbsentPut:send160902 = (Object)new_AST_Send((Object)instancevariable16406, (Object)symbol44368, 2, (Object)constant34677, (Object)send160901);((AST_Send)send160902)->info = (AST_Info)info5439;symbol44262 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");// injectBinaryObjectDescriptionsend160903 = (Object)new_AST_Send((Object)Self, (Object)symbol44262, 0);((AST_Send)send160903)->info = (AST_Info)info5439;// binaryExpressionsend160904 = (Object)new_AST_Send((Object)Self, (Object)symbol44425, 0);((AST_Send)send160904)->info = (AST_Info)info5439;method41182 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send160884, send160902, send160903, send160904);((AST_Method)method41182)->info = (AST_Info)info5439;symbol44277 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");methodclosure41085 = (Object)new_Runtime_MethodClosure(method41182);store_method((Type_Class)class6735, (Type_Symbol)symbol44277, (Runtime_MethodClosure)methodclosure41085);// SCParser>>initializeFinalExpression//initializeFinalExpression// 	^ self expression & ('.' asPEG optional omit: true)// expressionsend160905 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);string26988 = (Object)new_Type_String(L"initializeFinalExpression");string26989 = (Object)new_Type_String(L"initializeFinalExpression\n\t^ self expression & (\'.\' asPEG optional omit: true)");smallint26845 = (Object)new_Type_SmallInt(-1);smallint26846 = (Object)new_Type_SmallInt(-1);info5440 = (Object)new_AST_Info((Type_String)string26989,(Type_String)string26988, (Type_SmallInt)smallint26845, (Type_SmallInt)smallint26846);((AST_Send)send160905)->info = (AST_Info)info5440;string26990 = (Object)new_Type_String(L".");constant34681 = (Object)new_AST_Constant((Object)string26990);// asPEGsend160906 = (Object)new_AST_Send((Object)constant34681, (Object)symbol44131, 0);((AST_Send)send160906)->info = (AST_Info)info5440;symbol44338 = (Object)new_Type_Symbol_cached(L"optional");// optionalsend160907 = (Object)new_AST_Send((Object)send160906, (Object)symbol44338, 0);((AST_Send)send160907)->info = (AST_Info)info5440;// omit:send160908 = (Object)new_AST_Send((Object)send160907, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send160908)->info = (AST_Info)info5440;// &send160909 = (Object)new_AST_Send((Object)send160905, (Object)SMB__and, 1, (Object)send160908);((AST_Send)send160909)->info = (AST_Info)info5440;method41183 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160909);((AST_Method)method41183)->info = (AST_Info)info5440;symbol44303 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");methodclosure41086 = (Object)new_Runtime_MethodClosure(method41183);store_method((Type_Class)class6735, (Type_Symbol)symbol44303, (Runtime_MethodClosure)methodclosure41086);// SCParser>>initializeKeywordMessageExpression//initializeKeywordMessageExpression// 	^ PEGParser// 		named: 'KEYWORD-MESSAGE-EXPRESSION'// 		parsing: (self keyword & (self binaryObjectDescription)) plus// 		semantics: [ :parts |// 			ASTMessageExpression new// 				keywords: (parts collect: #first);// 				selector: (ASTKeywordSelector new // 							keywords: (parts collect: #first);// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));// 				arguments: (parts collect: #second)// 		]string26991 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");constant34682 = (Object)new_AST_Constant((Object)string26991);// keywordsend160910 = (Object)new_AST_Send((Object)Self, (Object)symbol44431, 0);string26992 = (Object)new_Type_String(L"initializeKeywordMessageExpression");string26993 = (Object)new_Type_String(L"initializeKeywordMessageExpression\n\t^ PEGParser\n\t\tnamed: \'KEYWORD-MESSAGE-EXPRESSION\'\n\t\tparsing: (self keyword & (self binaryObjectDescription)) plus\n\t\tsemantics: [ :parts |\n\t\t\tASTMessageExpression new\n\t\t\t\tkeywords: (parts collect: #first);\n\t\t\t\tselector: (ASTKeywordSelector new \n\t\t\t\t\t\t\tkeywords: (parts collect: #first);\n\t\t\t\t\t\t\tselector: (self createSymbol: ((parts collect: #first) joinUsing: \':\'), \':\'));\n\t\t\t\targuments: (parts collect: #second)\n\t\t]");smallint26847 = (Object)new_Type_SmallInt(-1);smallint26848 = (Object)new_Type_SmallInt(-1);info5441 = (Object)new_AST_Info((Type_String)string26993,(Type_String)string26992, (Type_SmallInt)smallint26847, (Type_SmallInt)smallint26848);((AST_Send)send160910)->info = (AST_Info)info5441;// binaryObjectDescriptionsend160911 = (Object)new_AST_Send((Object)Self, (Object)symbol44434, 0);((AST_Send)send160911)->info = (AST_Info)info5441;// &send160912 = (Object)new_AST_Send((Object)send160910, (Object)SMB__and, 1, (Object)send160911);((AST_Send)send160912)->info = (AST_Info)info5441;// plussend160913 = (Object)new_AST_Send((Object)send160912, (Object)symbol44335, 0);((AST_Send)send160913)->info = (AST_Info)info5441;localvariable27110 = (Object)new_AST_Variable_named(L"parts");array24197 = (Object)new_Type_Array_with(1, (Object)localvariable27110);localvariable27111 = (Object)new_AST_Variable_named(L"receiver");array24198 = (Object)new_Type_Array_with(1, (Object)localvariable27111);symbol44435 = (Object)new_Type_Symbol_cached(L"collect:");constant34683 = (Object)new_AST_Constant((Object)symbol44180);// collect:send160914 = (Object)new_AST_Send((Object)localvariable27110, (Object)symbol44435, 1, (Object)constant34683);((AST_Send)send160914)->info = (AST_Info)info5441;// keywords:send160915 = (Object)new_AST_Send((Object)localvariable27111, (Object)symbol44215, 1, (Object)send160914);((AST_Send)send160915)->info = (AST_Info)info5441;localvariable27112 = (Object)new_AST_Variable_named(L"receiver");array24199 = (Object)new_Type_Array_with(1, (Object)localvariable27112);constant34684 = (Object)new_AST_Constant((Object)symbol44180);// collect:send160916 = (Object)new_AST_Send((Object)localvariable27110, (Object)symbol44435, 1, (Object)constant34684);((AST_Send)send160916)->info = (AST_Info)info5441;// keywords:send160917 = (Object)new_AST_Send((Object)localvariable27112, (Object)symbol44215, 1, (Object)send160916);((AST_Send)send160917)->info = (AST_Info)info5441;constant34685 = (Object)new_AST_Constant((Object)symbol44180);// collect:send160918 = (Object)new_AST_Send((Object)localvariable27110, (Object)symbol44435, 1, (Object)constant34685);((AST_Send)send160918)->info = (AST_Info)info5441;string26994 = (Object)new_Type_String(L":");constant34686 = (Object)new_AST_Constant((Object)string26994);// joinUsing:send160919 = (Object)new_AST_Send((Object)send160918, (Object)symbol44408, 1, (Object)constant34686);((AST_Send)send160919)->info = (AST_Info)info5441;string26995 = (Object)new_Type_String(L":");constant34687 = (Object)new_AST_Constant((Object)string26995);// ,send160920 = (Object)new_AST_Send((Object)send160919, (Object)SMB__concat, 1, (Object)constant34687);((AST_Send)send160920)->info = (AST_Info)info5441;// createSymbol:send160921 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)send160920);((AST_Send)send160921)->info = (AST_Info)info5441;// selector:send160922 = (Object)new_AST_Send((Object)localvariable27112, (Object)symbol44212, 1, (Object)send160921);((AST_Send)send160922)->info = (AST_Info)info5441;block11788 = (Object)new_AST_Block_with((Type_Array)array24199, (Type_Array)empty_Type_Array, 3, 2, send160917, send160922);// newsend160923 = (Object)new_AST_Send((Object)classreference13424, (Object)symbol44095, 0);((AST_Send)send160923)->info = (AST_Info)info5441;// value:send160924 = (Object)new_AST_Send((Object)block11788, (Object)SMB_value_, 1, (Object)send160923);((AST_Send)send160924)->info = (AST_Info)info5441;// selector:send160925 = (Object)new_AST_Send((Object)localvariable27111, (Object)symbol44212, 1, (Object)send160924);((AST_Send)send160925)->info = (AST_Info)info5441;symbol44436 = (Object)new_Type_Symbol_cached(L"second");constant34688 = (Object)new_AST_Constant((Object)symbol44436);// collect:send160926 = (Object)new_AST_Send((Object)localvariable27110, (Object)symbol44435, 1, (Object)constant34688);((AST_Send)send160926)->info = (AST_Info)info5441;// arguments:send160927 = (Object)new_AST_Send((Object)localvariable27111, (Object)symbol44217, 1, (Object)send160926);((AST_Send)send160927)->info = (AST_Info)info5441;block11789 = (Object)new_AST_Block_with((Type_Array)array24198, (Type_Array)empty_Type_Array, 2, 3, send160915, send160925, send160927);// newsend160928 = (Object)new_AST_Send((Object)classreference13406, (Object)symbol44095, 0);((AST_Send)send160928)->info = (AST_Info)info5441;// value:send160929 = (Object)new_AST_Send((Object)block11789, (Object)SMB_value_, 1, (Object)send160928);((AST_Send)send160929)->info = (AST_Info)info5441;block11790 = (Object)new_AST_Block_with((Type_Array)array24197, (Type_Array)empty_Type_Array, 1, 1, send160929);// named:parsing:semantics:send160930 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34682, (Object)send160913, (Object)block11790);((AST_Send)send160930)->info = (AST_Info)info5441;method41184 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160930);((AST_Method)method41184)->info = (AST_Info)info5441;symbol44247 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");methodclosure41087 = (Object)new_Runtime_MethodClosure(method41184);store_method((Type_Class)class6735, (Type_Symbol)symbol44247, (Runtime_MethodClosure)methodclosure41087);// SCParser>>initializeSymbol//initializeSymbol// 	^ PEGParser// 		named: 'SYMBOL'// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)string26996 = (Object)new_Type_String(L"SYMBOL");constant34689 = (Object)new_AST_Constant((Object)string26996);symbol44437 = (Object)new_Type_Symbol_cached(L"symbolKeywords");// symbolKeywordssend160931 = (Object)new_AST_Send((Object)Self, (Object)symbol44437, 0);string26997 = (Object)new_Type_String(L"initializeSymbol");string26998 = (Object)new_Type_String(L"initializeSymbol\n\t^ PEGParser\n\t\tnamed: \'SYMBOL\'\n\t\tparsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)");smallint26849 = (Object)new_Type_SmallInt(-1);smallint26850 = (Object)new_Type_SmallInt(-1);info5442 = (Object)new_AST_Info((Type_String)string26998,(Type_String)string26997, (Type_SmallInt)smallint26849, (Type_SmallInt)smallint26850);((AST_Send)send160931)->info = (AST_Info)info5442;symbol44438 = (Object)new_Type_Symbol_cached(L"identifier");// identifiersend160932 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);((AST_Send)send160932)->info = (AST_Info)info5442;// |send160933 = (Object)new_AST_Send((Object)send160931, (Object)SMB__or, 1, (Object)send160932);((AST_Send)send160933)->info = (AST_Info)info5442;// binarySelectorsend160934 = (Object)new_AST_Send((Object)Self, (Object)symbol44433, 0);((AST_Send)send160934)->info = (AST_Info)info5442;// <=send160935 = (Object)new_AST_Send((Object)send160933, (Object)symbol44136, 1, (Object)send160934);((AST_Send)send160935)->info = (AST_Info)info5442;// stringsend160936 = (Object)new_AST_Send((Object)Self, (Object)symbol44197, 0);((AST_Send)send160936)->info = (AST_Info)info5442;// <=send160937 = (Object)new_AST_Send((Object)send160935, (Object)symbol44136, 1, (Object)send160936);((AST_Send)send160937)->info = (AST_Info)info5442;// named:parsing:send160938 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44344, 2, (Object)constant34689, (Object)send160937);((AST_Send)send160938)->info = (AST_Info)info5442;method41185 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160938);((AST_Method)method41185)->info = (AST_Info)info5442;symbol44270 = (Object)new_Type_Symbol_cached(L"initializeSymbol");methodclosure41088 = (Object)new_Runtime_MethodClosure(method41185);store_method((Type_Class)class6735, (Type_Symbol)symbol44270, (Runtime_MethodClosure)methodclosure41088);// SCParser>>initializeKeywordAnnotation//initializeKeywordAnnotation// 	^ PEGParser// 		named: 'KEYWORD-ANNOTATION'// 		parsing: (self keyword & self primary) plus// 		semantics: [ :result |// 			ASTKeywordAnnotation new// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));// 				arguments: (result collect: #second)// 		]string26999 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");constant34690 = (Object)new_AST_Constant((Object)string26999);// keywordsend160939 = (Object)new_AST_Send((Object)Self, (Object)symbol44431, 0);string27000 = (Object)new_Type_String(L"initializeKeywordAnnotation");string27001 = (Object)new_Type_String(L"initializeKeywordAnnotation\n\t^ PEGParser\n\t\tnamed: \'KEYWORD-ANNOTATION\'\n\t\tparsing: (self keyword & self primary) plus\n\t\tsemantics: [ :result |\n\t\t\tASTKeywordAnnotation new\n\t\t\t\tkeywords: (result collect: [ :each| ASTSymbol named: each first ]);\n\t\t\t\tselector: (ASTKeywordSelector new keywords: (result collect: #first));\n\t\t\t\targuments: (result collect: #second)\n\t\t]");smallint26851 = (Object)new_Type_SmallInt(-1);smallint26852 = (Object)new_Type_SmallInt(-1);info5443 = (Object)new_AST_Info((Type_String)string27001,(Type_String)string27000, (Type_SmallInt)smallint26851, (Type_SmallInt)smallint26852);((AST_Send)send160939)->info = (AST_Info)info5443;symbol44439 = (Object)new_Type_Symbol_cached(L"primary");// primarysend160940 = (Object)new_AST_Send((Object)Self, (Object)symbol44439, 0);((AST_Send)send160940)->info = (AST_Info)info5443;// &send160941 = (Object)new_AST_Send((Object)send160939, (Object)SMB__and, 1, (Object)send160940);((AST_Send)send160941)->info = (AST_Info)info5443;// plussend160942 = (Object)new_AST_Send((Object)send160941, (Object)symbol44335, 0);((AST_Send)send160942)->info = (AST_Info)info5443;localvariable27113 = (Object)new_AST_Variable_named(L"result");array24200 = (Object)new_Type_Array_with(1, (Object)localvariable27113);localvariable27114 = (Object)new_AST_Variable_named(L"receiver");array24201 = (Object)new_Type_Array_with(1, (Object)localvariable27114);localvariable27115 = (Object)new_AST_Variable_named(L"each");array24202 = (Object)new_Type_Array_with(1, (Object)localvariable27115);// firstsend160943 = (Object)new_AST_Send((Object)localvariable27115, (Object)symbol44180, 0);((AST_Send)send160943)->info = (AST_Info)info5443;// named:send160944 = (Object)new_AST_Send((Object)classreference13421, (Object)symbol44345, 1, (Object)send160943);((AST_Send)send160944)->info = (AST_Info)info5443;block11791 = (Object)new_AST_Block_with((Type_Array)array24202, (Type_Array)empty_Type_Array, 3, 1, send160944);// collect:send160945 = (Object)new_AST_Send((Object)localvariable27113, (Object)symbol44435, 1, (Object)block11791);((AST_Send)send160945)->info = (AST_Info)info5443;// keywords:send160946 = (Object)new_AST_Send((Object)localvariable27114, (Object)symbol44215, 1, (Object)send160945);((AST_Send)send160946)->info = (AST_Info)info5443;// newsend160947 = (Object)new_AST_Send((Object)classreference13424, (Object)symbol44095, 0);((AST_Send)send160947)->info = (AST_Info)info5443;constant34691 = (Object)new_AST_Constant((Object)symbol44180);// collect:send160948 = (Object)new_AST_Send((Object)localvariable27113, (Object)symbol44435, 1, (Object)constant34691);((AST_Send)send160948)->info = (AST_Info)info5443;// keywords:send160949 = (Object)new_AST_Send((Object)send160947, (Object)symbol44215, 1, (Object)send160948);((AST_Send)send160949)->info = (AST_Info)info5443;// selector:send160950 = (Object)new_AST_Send((Object)localvariable27114, (Object)symbol44212, 1, (Object)send160949);((AST_Send)send160950)->info = (AST_Info)info5443;constant34692 = (Object)new_AST_Constant((Object)symbol44436);// collect:send160951 = (Object)new_AST_Send((Object)localvariable27113, (Object)symbol44435, 1, (Object)constant34692);((AST_Send)send160951)->info = (AST_Info)info5443;// arguments:send160952 = (Object)new_AST_Send((Object)localvariable27114, (Object)symbol44217, 1, (Object)send160951);((AST_Send)send160952)->info = (AST_Info)info5443;block11792 = (Object)new_AST_Block_with((Type_Array)array24201, (Type_Array)empty_Type_Array, 2, 3, send160946, send160950, send160952);// newsend160953 = (Object)new_AST_Send((Object)classreference13425, (Object)symbol44095, 0);((AST_Send)send160953)->info = (AST_Info)info5443;// value:send160954 = (Object)new_AST_Send((Object)block11792, (Object)SMB_value_, 1, (Object)send160953);((AST_Send)send160954)->info = (AST_Info)info5443;block11793 = (Object)new_AST_Block_with((Type_Array)array24200, (Type_Array)empty_Type_Array, 1, 1, send160954);// named:parsing:semantics:send160955 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34690, (Object)send160942, (Object)block11793);((AST_Send)send160955)->info = (AST_Info)info5443;method41186 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160955);((AST_Method)method41186)->info = (AST_Info)info5443;symbol44315 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");methodclosure41089 = (Object)new_Runtime_MethodClosure(method41186);store_method((Type_Class)class6735, (Type_Symbol)symbol44315, (Runtime_MethodClosure)methodclosure41089);// SCParser>>initializeLiteral//initializeLiteral// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant// numberConstantsend160956 = (Object)new_AST_Send((Object)Self, (Object)symbol44417, 0);string27002 = (Object)new_Type_String(L"initializeLiteral");string27003 = (Object)new_Type_String(L"initializeLiteral\n\t^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant");smallint26853 = (Object)new_Type_SmallInt(-1);smallint26854 = (Object)new_Type_SmallInt(-1);info5444 = (Object)new_AST_Info((Type_String)string27003,(Type_String)string27002, (Type_SmallInt)smallint26853, (Type_SmallInt)smallint26854);((AST_Send)send160956)->info = (AST_Info)info5444;// symbolConstantsend160957 = (Object)new_AST_Send((Object)Self, (Object)symbol44420, 0);((AST_Send)send160957)->info = (AST_Info)info5444;// |send160958 = (Object)new_AST_Send((Object)send160956, (Object)SMB__or, 1, (Object)send160957);((AST_Send)send160958)->info = (AST_Info)info5444;// characterConstantsend160959 = (Object)new_AST_Send((Object)Self, (Object)symbol44421, 0);((AST_Send)send160959)->info = (AST_Info)info5444;// <=send160960 = (Object)new_AST_Send((Object)send160958, (Object)symbol44136, 1, (Object)send160959);((AST_Send)send160960)->info = (AST_Info)info5444;// stringConstantsend160961 = (Object)new_AST_Send((Object)Self, (Object)symbol44418, 0);((AST_Send)send160961)->info = (AST_Info)info5444;// <=send160962 = (Object)new_AST_Send((Object)send160960, (Object)symbol44136, 1, (Object)send160961);((AST_Send)send160962)->info = (AST_Info)info5444;symbol44440 = (Object)new_Type_Symbol_cached(L"arrayConstant");// arrayConstantsend160963 = (Object)new_AST_Send((Object)Self, (Object)symbol44440, 0);((AST_Send)send160963)->info = (AST_Info)info5444;// <=send160964 = (Object)new_AST_Send((Object)send160962, (Object)symbol44136, 1, (Object)send160963);((AST_Send)send160964)->info = (AST_Info)info5444;method41187 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160964);((AST_Method)method41187)->info = (AST_Info)info5444;symbol44259 = (Object)new_Type_Symbol_cached(L"initializeLiteral");methodclosure41090 = (Object)new_Runtime_MethodClosure(method41187);store_method((Type_Class)class6735, (Type_Symbol)symbol44259, (Runtime_MethodClosure)methodclosure41090);// SCParser>>initializeUnarySelector//initializeUnarySelector// 	^ PEGParser// 		named: 'UNARY-SELECTOR'// 		parsing: (self identifier && (':' asPEG not consume: false))// 		semantics: [ :selector |// 			ASTUnarySelector new // 				selector: (self createSymbol: selector).// 		]string27004 = (Object)new_Type_String(L"UNARY-SELECTOR");constant34693 = (Object)new_AST_Constant((Object)string27004);// identifiersend160965 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);string27005 = (Object)new_Type_String(L"initializeUnarySelector");string27006 = (Object)new_Type_String(L"initializeUnarySelector\n\t^ PEGParser\n\t\tnamed: \'UNARY-SELECTOR\'\n\t\tparsing: (self identifier && (\':\' asPEG not consume: false))\n\t\tsemantics: [ :selector |\n\t\t\tASTUnarySelector new \n\t\t\t\tselector: (self createSymbol: selector).\n\t\t]");smallint26855 = (Object)new_Type_SmallInt(-1);smallint26856 = (Object)new_Type_SmallInt(-1);info5445 = (Object)new_AST_Info((Type_String)string27006,(Type_String)string27005, (Type_SmallInt)smallint26855, (Type_SmallInt)smallint26856);((AST_Send)send160965)->info = (AST_Info)info5445;string27007 = (Object)new_Type_String(L":");constant34694 = (Object)new_AST_Constant((Object)string27007);// asPEGsend160966 = (Object)new_AST_Send((Object)constant34694, (Object)symbol44131, 0);((AST_Send)send160966)->info = (AST_Info)info5445;// notsend160967 = (Object)new_AST_Send((Object)send160966, (Object)SMB_not, 0);((AST_Send)send160967)->info = (AST_Info)info5445;// consume:send160968 = (Object)new_AST_Send((Object)send160967, (Object)symbol44377, 1, (Object)False_Const);((AST_Send)send160968)->info = (AST_Info)info5445;// &&send160969 = (Object)new_AST_Send((Object)send160965, (Object)symbol44326, 1, (Object)send160968);((AST_Send)send160969)->info = (AST_Info)info5445;localvariable27116 = (Object)new_AST_Variable_named(L"selector");array24203 = (Object)new_Type_Array_with(1, (Object)localvariable27116);// newsend160970 = (Object)new_AST_Send((Object)classreference13420, (Object)symbol44095, 0);((AST_Send)send160970)->info = (AST_Info)info5445;// createSymbol:send160971 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)localvariable27116);((AST_Send)send160971)->info = (AST_Info)info5445;// selector:send160972 = (Object)new_AST_Send((Object)send160970, (Object)symbol44212, 1, (Object)send160971);((AST_Send)send160972)->info = (AST_Info)info5445;block11794 = (Object)new_AST_Block_with((Type_Array)array24203, (Type_Array)empty_Type_Array, 1, 1, send160972);// named:parsing:semantics:send160973 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34693, (Object)send160969, (Object)block11794);((AST_Send)send160973)->info = (AST_Info)info5445;method41188 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160973);((AST_Method)method41188)->info = (AST_Info)info5445;symbol44287 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");methodclosure41091 = (Object)new_Runtime_MethodClosure(method41188);store_method((Type_Class)class6735, (Type_Symbol)symbol44287, (Runtime_MethodClosure)methodclosure41091);// SCParser>>initializePrimary//initializePrimary// 	self expression.// 	" self expression will initialize primary. "// 	^ self primary// expressionsend160974 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);string27008 = (Object)new_Type_String(L"initializePrimary");string27009 = (Object)new_Type_String(L"initializePrimary\n\tself expression.\n\t\" self expression will initialize primary. \"\n\t^ self primary");smallint26857 = (Object)new_Type_SmallInt(-1);smallint26858 = (Object)new_Type_SmallInt(-1);info5446 = (Object)new_AST_Info((Type_String)string27009,(Type_String)string27008, (Type_SmallInt)smallint26857, (Type_SmallInt)smallint26858);((AST_Send)send160974)->info = (AST_Info)info5446;// primarysend160975 = (Object)new_AST_Send((Object)Self, (Object)symbol44439, 0);((AST_Send)send160975)->info = (AST_Info)info5446;method41189 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send160974, send160975);((AST_Method)method41189)->info = (AST_Info)info5446;symbol44299 = (Object)new_Type_Symbol_cached(L"initializePrimary");methodclosure41092 = (Object)new_Runtime_MethodClosure(method41189);store_method((Type_Class)class6735, (Type_Symbol)symbol44299, (Runtime_MethodClosure)methodclosure41092);// SCParser>>initializeAnnotation//initializeAnnotation// 	^ PEGParser// 		named: 'ANNOTATION'// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)string27010 = (Object)new_Type_String(L"ANNOTATION");constant34695 = (Object)new_AST_Constant((Object)string27010);string27011 = (Object)new_Type_String(L"<");constant34696 = (Object)new_AST_Constant((Object)string27011);// asPEGsend160976 = (Object)new_AST_Send((Object)constant34696, (Object)symbol44131, 0);string27012 = (Object)new_Type_String(L"initializeAnnotation");string27013 = (Object)new_Type_String(L"initializeAnnotation\n\t^ PEGParser\n\t\tnamed: \'ANNOTATION\'\n\t\tparsing: (\'<\' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& (\'>\' asPEG omit: true)");smallint26859 = (Object)new_Type_SmallInt(-1);smallint26860 = (Object)new_Type_SmallInt(-1);info5447 = (Object)new_AST_Info((Type_String)string27013,(Type_String)string27012, (Type_SmallInt)smallint26859, (Type_SmallInt)smallint26860);((AST_Send)send160976)->info = (AST_Info)info5447;// omit:send160977 = (Object)new_AST_Send((Object)send160976, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send160977)->info = (AST_Info)info5447;symbol44441 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");// keywordAnnotationsend160978 = (Object)new_AST_Send((Object)Self, (Object)symbol44441, 0);((AST_Send)send160978)->info = (AST_Info)info5447;// &send160979 = (Object)new_AST_Send((Object)send160977, (Object)SMB__and, 1, (Object)send160978);((AST_Send)send160979)->info = (AST_Info)info5447;symbol44442 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");// unaryAnnotationsend160980 = (Object)new_AST_Send((Object)Self, (Object)symbol44442, 0);((AST_Send)send160980)->info = (AST_Info)info5447;// |send160981 = (Object)new_AST_Send((Object)send160979, (Object)SMB__or, 1, (Object)send160980);((AST_Send)send160981)->info = (AST_Info)info5447;string27014 = (Object)new_Type_String(L">");constant34697 = (Object)new_AST_Constant((Object)string27014);// asPEGsend160982 = (Object)new_AST_Send((Object)constant34697, (Object)symbol44131, 0);((AST_Send)send160982)->info = (AST_Info)info5447;// omit:send160983 = (Object)new_AST_Send((Object)send160982, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send160983)->info = (AST_Info)info5447;// <&send160984 = (Object)new_AST_Send((Object)send160981, (Object)symbol44372, 1, (Object)send160983);((AST_Send)send160984)->info = (AST_Info)info5447;// named:parsing:send160985 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44344, 2, (Object)constant34695, (Object)send160984);((AST_Send)send160985)->info = (AST_Info)info5447;method41190 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160985);((AST_Method)method41190)->info = (AST_Info)info5447;symbol44280 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");methodclosure41093 = (Object)new_Runtime_MethodClosure(method41190);store_method((Type_Class)class6735, (Type_Symbol)symbol44280, (Runtime_MethodClosure)methodclosure41093);// SCParser>>initializeSymbolInArray//initializeSymbolInArray// 	^ PEGParser// 		named: 'SYMBOL-IN-ARRAY'// 		parsing: (self symbol)// 		semantics: [:symbol |// 			ASTSymbol new symbol: symbol// 		]string27015 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");constant34698 = (Object)new_AST_Constant((Object)string27015);// symbolsend160986 = (Object)new_AST_Send((Object)Self, (Object)symbol44193, 0);string27016 = (Object)new_Type_String(L"initializeSymbolInArray");string27017 = (Object)new_Type_String(L"initializeSymbolInArray\n\t^ PEGParser\n\t\tnamed: \'SYMBOL-IN-ARRAY\'\n\t\tparsing: (self symbol)\n\t\tsemantics: [:symbol |\n\t\t\tASTSymbol new symbol: symbol\n\t\t]");smallint26861 = (Object)new_Type_SmallInt(-1);smallint26862 = (Object)new_Type_SmallInt(-1);info5448 = (Object)new_AST_Info((Type_String)string27017,(Type_String)string27016, (Type_SmallInt)smallint26861, (Type_SmallInt)smallint26862);((AST_Send)send160986)->info = (AST_Info)info5448;localvariable27117 = (Object)new_AST_Variable_named(L"symbol");array24204 = (Object)new_Type_Array_with(1, (Object)localvariable27117);// newsend160987 = (Object)new_AST_Send((Object)classreference13421, (Object)symbol44095, 0);((AST_Send)send160987)->info = (AST_Info)info5448;// symbol:send160988 = (Object)new_AST_Send((Object)send160987, (Object)symbol44195, 1, (Object)localvariable27117);((AST_Send)send160988)->info = (AST_Info)info5448;block11795 = (Object)new_AST_Block_with((Type_Array)array24204, (Type_Array)empty_Type_Array, 1, 1, send160988);// named:parsing:semantics:send160989 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34698, (Object)send160986, (Object)block11795);((AST_Send)send160989)->info = (AST_Info)info5448;method41191 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160989);((AST_Method)method41191)->info = (AST_Info)info5448;symbol44269 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");methodclosure41094 = (Object)new_Runtime_MethodClosure(method41191);store_method((Type_Class)class6735, (Type_Symbol)symbol44269, (Runtime_MethodClosure)methodclosure41094);// SCParser>>preStorePrimary//preStorePrimary// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]constant34699 = (Object)new_AST_Constant((Object)symbol44439);string27018 = (Object)new_Type_String(L"PRIMARY");constant34700 = (Object)new_AST_Constant((Object)string27018);// named:send160990 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44345, 1, (Object)constant34700);string27019 = (Object)new_Type_String(L"preStorePrimary");string27020 = (Object)new_Type_String(L"preStorePrimary\n\t^ parsers at: #primary ifAbsentPut: [ PEGParser named: \'PRIMARY\' ]");smallint26863 = (Object)new_Type_SmallInt(-1);smallint26864 = (Object)new_Type_SmallInt(-1);info5449 = (Object)new_AST_Info((Type_String)string27020,(Type_String)string27019, (Type_SmallInt)smallint26863, (Type_SmallInt)smallint26864);((AST_Send)send160990)->info = (AST_Info)info5449;block11796 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send160990);// at:ifAbsentPut:send160991 = (Object)new_AST_Send((Object)instancevariable16406, (Object)symbol44368, 2, (Object)constant34699, (Object)block11796);((AST_Send)send160991)->info = (AST_Info)info5449;method41192 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160991);((AST_Method)method41192)->info = (AST_Info)info5449;symbol44292 = (Object)new_Type_Symbol_cached(L"preStorePrimary");methodclosure41095 = (Object)new_Runtime_MethodClosure(method41192);store_method((Type_Class)class6735, (Type_Symbol)symbol44292, (Runtime_MethodClosure)methodclosure41095);// SCParser>>injectBinaryObjectDescription//injectBinaryObjectDescription// 	^ self binaryObjectDescription// 		<= (self binaryExpression | self unaryObjectDescription)// binaryObjectDescriptionsend160992 = (Object)new_AST_Send((Object)Self, (Object)symbol44434, 0);string27021 = (Object)new_Type_String(L"injectBinaryObjectDescription");string27022 = (Object)new_Type_String(L"injectBinaryObjectDescription\n\t^ self binaryObjectDescription\n\t\t<= (self binaryExpression | self unaryObjectDescription)");smallint26865 = (Object)new_Type_SmallInt(-1);smallint26866 = (Object)new_Type_SmallInt(-1);info5450 = (Object)new_AST_Info((Type_String)string27022,(Type_String)string27021, (Type_SmallInt)smallint26865, (Type_SmallInt)smallint26866);((AST_Send)send160992)->info = (AST_Info)info5450;// binaryExpressionsend160993 = (Object)new_AST_Send((Object)Self, (Object)symbol44425, 0);((AST_Send)send160993)->info = (AST_Info)info5450;// <=send160994 = (Object)new_AST_Send((Object)send160992, (Object)symbol44136, 1, (Object)send160993);((AST_Send)send160994)->info = (AST_Info)info5450;// unaryObjectDescriptionsend160995 = (Object)new_AST_Send((Object)Self, (Object)symbol44432, 0);((AST_Send)send160995)->info = (AST_Info)info5450;// |send160996 = (Object)new_AST_Send((Object)send160994, (Object)SMB__or, 1, (Object)send160995);((AST_Send)send160996)->info = (AST_Info)info5450;method41193 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send160996);((AST_Method)method41193)->info = (AST_Info)info5450;methodclosure41096 = (Object)new_Runtime_MethodClosure(method41193);store_method((Type_Class)class6735, (Type_Symbol)symbol44262, (Runtime_MethodClosure)methodclosure41096);// SCParser>>initializeCapitalIdentifier//initializeCapitalIdentifier// 	^ PEGParser// 		named: 'CAPITAL-IDENTIFIER'// 		// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)// 						// 		semantics: [ :result |// 			result second inject: result first into: [ :c :e | c, e ]// 		]string27023 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");constant34701 = (Object)new_AST_Constant((Object)string27023);symbol44443 = (Object)new_Type_Symbol_cached(L"uppercase");// uppercasesend160997 = (Object)new_AST_Send((Object)Self, (Object)symbol44443, 0);string27024 = (Object)new_Type_String(L"initializeCapitalIdentifier");string27025 = (Object)new_Type_String(L"initializeCapitalIdentifier\n\t^ PEGParser\n\t\tnamed: \'CAPITAL-IDENTIFIER\'\n\t\t\n\t\tparsing: (self uppercase && (self letter | self decimalDigit) strongTimes)\n\t\t\t\t\t\t\n\t\tsemantics: [ :result |\n\t\t\tresult second inject: result first into: [ :c :e | c, e ]\n\t\t]");smallint26867 = (Object)new_Type_SmallInt(-1);smallint26868 = (Object)new_Type_SmallInt(-1);info5451 = (Object)new_AST_Info((Type_String)string27025,(Type_String)string27024, (Type_SmallInt)smallint26867, (Type_SmallInt)smallint26868);((AST_Send)send160997)->info = (AST_Info)info5451;symbol44444 = (Object)new_Type_Symbol_cached(L"letter");// lettersend160998 = (Object)new_AST_Send((Object)Self, (Object)symbol44444, 0);((AST_Send)send160998)->info = (AST_Info)info5451;// decimalDigitsend160999 = (Object)new_AST_Send((Object)Self, (Object)symbol44427, 0);((AST_Send)send160999)->info = (AST_Info)info5451;// |send161000 = (Object)new_AST_Send((Object)send160998, (Object)SMB__or, 1, (Object)send160999);((AST_Send)send161000)->info = (AST_Info)info5451;// strongTimessend161001 = (Object)new_AST_Send((Object)send161000, (Object)symbol44331, 0);((AST_Send)send161001)->info = (AST_Info)info5451;// &&send161002 = (Object)new_AST_Send((Object)send160997, (Object)symbol44326, 1, (Object)send161001);((AST_Send)send161002)->info = (AST_Info)info5451;localvariable27118 = (Object)new_AST_Variable_named(L"result");array24205 = (Object)new_Type_Array_with(1, (Object)localvariable27118);// secondsend161003 = (Object)new_AST_Send((Object)localvariable27118, (Object)symbol44436, 0);((AST_Send)send161003)->info = (AST_Info)info5451;// firstsend161004 = (Object)new_AST_Send((Object)localvariable27118, (Object)symbol44180, 0);((AST_Send)send161004)->info = (AST_Info)info5451;localvariable27119 = (Object)new_AST_Variable_named(L"c");localvariable27120 = (Object)new_AST_Variable_named(L"e");array24206 = (Object)new_Type_Array_with(2, (Object)localvariable27119, (Object)localvariable27120);// ,send161005 = (Object)new_AST_Send((Object)localvariable27119, (Object)SMB__concat, 1, (Object)localvariable27120);((AST_Send)send161005)->info = (AST_Info)info5451;block11797 = (Object)new_AST_Block_with((Type_Array)array24206, (Type_Array)empty_Type_Array, 2, 1, send161005);// inject:into:send161006 = (Object)new_AST_Send((Object)send161003, (Object)symbol44184, 2, (Object)send161004, (Object)block11797);((AST_Send)send161006)->info = (AST_Info)info5451;block11798 = (Object)new_AST_Block_with((Type_Array)array24205, (Type_Array)empty_Type_Array, 1, 1, send161006);// named:parsing:semantics:send161007 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34701, (Object)send161002, (Object)block11798);((AST_Send)send161007)->info = (AST_Info)info5451;method41194 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161007);((AST_Method)method41194)->info = (AST_Info)info5451;symbol44307 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");methodclosure41097 = (Object)new_Runtime_MethodClosure(method41194);store_method((Type_Class)class6735, (Type_Symbol)symbol44307, (Runtime_MethodClosure)methodclosure41097);// SCParser>>initializeArrayConstant//initializeArrayConstant// 	^ ('#' asPEG omit: true) & self arraystring27026 = (Object)new_Type_String(L"#");constant34702 = (Object)new_AST_Constant((Object)string27026);// asPEGsend161008 = (Object)new_AST_Send((Object)constant34702, (Object)symbol44131, 0);string27027 = (Object)new_Type_String(L"initializeArrayConstant");string27028 = (Object)new_Type_String(L"initializeArrayConstant\n\t^ (\'#\' asPEG omit: true) & self array");smallint26869 = (Object)new_Type_SmallInt(-1);smallint26870 = (Object)new_Type_SmallInt(-1);info5452 = (Object)new_AST_Info((Type_String)string27028,(Type_String)string27027, (Type_SmallInt)smallint26869, (Type_SmallInt)smallint26870);((AST_Send)send161008)->info = (AST_Info)info5452;// omit:send161009 = (Object)new_AST_Send((Object)send161008, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161009)->info = (AST_Info)info5452;symbol44445 = (Object)new_Type_Symbol_cached(L"array");// arraysend161010 = (Object)new_AST_Send((Object)Self, (Object)symbol44445, 0);((AST_Send)send161010)->info = (AST_Info)info5452;// &send161011 = (Object)new_AST_Send((Object)send161009, (Object)SMB__and, 1, (Object)send161010);((AST_Send)send161011)->info = (AST_Info)info5452;method41195 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161011);((AST_Method)method41195)->info = (AST_Info)info5452;symbol44274 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");methodclosure41098 = (Object)new_Runtime_MethodClosure(method41195);store_method((Type_Class)class6735, (Type_Symbol)symbol44274, (Runtime_MethodClosure)methodclosure41098);// SCParser>>initializeBraceExpression//initializeBraceExpression// 	^ PEGParser// 		named: 'BRACE-EXPRESSION'// 		// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)// 		// 		semantics: [ :result |// 			ASTBraceExpression new// 				expressions: ((result first) add: (result at: 2); yourself)// 		]string27029 = (Object)new_Type_String(L"BRACE-EXPRESSION");constant34703 = (Object)new_AST_Constant((Object)string27029);string27030 = (Object)new_Type_String(L"{");constant34704 = (Object)new_AST_Constant((Object)string27030);// asPEGsend161012 = (Object)new_AST_Send((Object)constant34704, (Object)symbol44131, 0);string27031 = (Object)new_Type_String(L"initializeBraceExpression");string27032 = (Object)new_Type_String(L"initializeBraceExpression\n\t^ PEGParser\n\t\tnamed: \'BRACE-EXPRESSION\'\n\t\t\n\t\tparsing: (\'{\' asPEG omit: true) & self subExpression times <& self expression <& (\'}\' asPEG omit: true)\n\t\t\n\t\tsemantics: [ :result |\n\t\t\tASTBraceExpression new\n\t\t\t\texpressions: ((result first) add: (result at: 2); yourself)\n\t\t]");smallint26871 = (Object)new_Type_SmallInt(-1);smallint26872 = (Object)new_Type_SmallInt(-1);info5453 = (Object)new_AST_Info((Type_String)string27032,(Type_String)string27031, (Type_SmallInt)smallint26871, (Type_SmallInt)smallint26872);((AST_Send)send161012)->info = (AST_Info)info5453;// omit:send161013 = (Object)new_AST_Send((Object)send161012, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161013)->info = (AST_Info)info5453;symbol44446 = (Object)new_Type_Symbol_cached(L"subExpression");// subExpressionsend161014 = (Object)new_AST_Send((Object)Self, (Object)symbol44446, 0);((AST_Send)send161014)->info = (AST_Info)info5453;// timessend161015 = (Object)new_AST_Send((Object)send161014, (Object)symbol44340, 0);((AST_Send)send161015)->info = (AST_Info)info5453;// &send161016 = (Object)new_AST_Send((Object)send161013, (Object)SMB__and, 1, (Object)send161015);((AST_Send)send161016)->info = (AST_Info)info5453;// expressionsend161017 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);((AST_Send)send161017)->info = (AST_Info)info5453;// <&send161018 = (Object)new_AST_Send((Object)send161016, (Object)symbol44372, 1, (Object)send161017);((AST_Send)send161018)->info = (AST_Info)info5453;string27033 = (Object)new_Type_String(L"}");constant34705 = (Object)new_AST_Constant((Object)string27033);// asPEGsend161019 = (Object)new_AST_Send((Object)constant34705, (Object)symbol44131, 0);((AST_Send)send161019)->info = (AST_Info)info5453;// omit:send161020 = (Object)new_AST_Send((Object)send161019, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161020)->info = (AST_Info)info5453;// <&send161021 = (Object)new_AST_Send((Object)send161018, (Object)symbol44372, 1, (Object)send161020);((AST_Send)send161021)->info = (AST_Info)info5453;localvariable27121 = (Object)new_AST_Variable_named(L"result");array24207 = (Object)new_Type_Array_with(1, (Object)localvariable27121);// newsend161022 = (Object)new_AST_Send((Object)classreference13399, (Object)symbol44095, 0);((AST_Send)send161022)->info = (AST_Info)info5453;localvariable27122 = (Object)new_AST_Variable_named(L"receiver");array24208 = (Object)new_Type_Array_with(1, (Object)localvariable27122);smallint26873 = (Object)new_Type_SmallInt(2);constant34706 = (Object)new_AST_Constant((Object)smallint26873);// at:send161023 = (Object)new_AST_Send((Object)localvariable27121, (Object)SMB_at_, 1, (Object)constant34706);((AST_Send)send161023)->info = (AST_Info)info5453;// add:send161024 = (Object)new_AST_Send((Object)localvariable27122, (Object)symbol44183, 1, (Object)send161023);((AST_Send)send161024)->info = (AST_Info)info5453;// yourselfsend161025 = (Object)new_AST_Send((Object)localvariable27122, (Object)symbol44008, 0);((AST_Send)send161025)->info = (AST_Info)info5453;block11799 = (Object)new_AST_Block_with((Type_Array)array24208, (Type_Array)empty_Type_Array, 2, 2, send161024, send161025);// firstsend161026 = (Object)new_AST_Send((Object)localvariable27121, (Object)symbol44180, 0);((AST_Send)send161026)->info = (AST_Info)info5453;// value:send161027 = (Object)new_AST_Send((Object)block11799, (Object)SMB_value_, 1, (Object)send161026);((AST_Send)send161027)->info = (AST_Info)info5453;// expressions:send161028 = (Object)new_AST_Send((Object)send161022, (Object)symbol44370, 1, (Object)send161027);((AST_Send)send161028)->info = (AST_Info)info5453;block11800 = (Object)new_AST_Block_with((Type_Array)array24207, (Type_Array)empty_Type_Array, 1, 1, send161028);// named:parsing:semantics:send161029 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34703, (Object)send161021, (Object)block11800);((AST_Send)send161029)->info = (AST_Info)info5453;method41196 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161029);((AST_Method)method41196)->info = (AST_Info)info5453;symbol44319 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");methodclosure41099 = (Object)new_Runtime_MethodClosure(method41196);store_method((Type_Class)class6735, (Type_Symbol)symbol44319, (Runtime_MethodClosure)methodclosure41099);// SCParser>>initializeString//initializeString// 	" XXX Have to optimize and clean..."// 	| stringBorder first |// 	stringBorder := '''' asPEG omit: true.// // 	^ PEGParser// 		named: 'STRING'// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus// 		semantics: [:result |// 			first := result removeFirst.// 			first := first inject: '' into: [:c :e | c, e ].// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]// 		]localvariable27123 = (Object)new_AST_Variable_named(L"stringBorder");localvariable27124 = (Object)new_AST_Variable_named(L"first");array24209 = (Object)new_Type_Array_with(2, (Object)localvariable27123, (Object)localvariable27124);string27034 = (Object)new_Type_String(L"\'");constant34707 = (Object)new_AST_Constant((Object)string27034);// asPEGsend161030 = (Object)new_AST_Send((Object)constant34707, (Object)symbol44131, 0);string27035 = (Object)new_Type_String(L"initializeString");string27036 = (Object)new_Type_String(L"initializeString\n\t\" XXX Have to optimize and clean...\"\n\t| stringBorder first |\n\tstringBorder := \'\'\'\' asPEG omit: true.\n\n\t^ PEGParser\n\t\tnamed: \'STRING\'\n\t\tparsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus\n\t\tsemantics: [:result |\n\t\t\tfirst := result removeFirst.\n\t\t\tfirst := first inject: \'\' into: [:c :e | c, e ].\n\t\t\tresult inject: first into: [:c :e | c, \'\'\'\', (e inject: \'\' into: [:ic :ie | ic, ie ]) ]\n\t\t]");smallint26874 = (Object)new_Type_SmallInt(-1);smallint26875 = (Object)new_Type_SmallInt(-1);info5454 = (Object)new_AST_Info((Type_String)string27036,(Type_String)string27035, (Type_SmallInt)smallint26874, (Type_SmallInt)smallint26875);((AST_Send)send161030)->info = (AST_Info)info5454;// omit:send161031 = (Object)new_AST_Send((Object)send161030, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161031)->info = (AST_Info)info5454;assign20217 = (Object)new_AST_Assign((Object)localvariable27123, (Object)send161031);string27037 = (Object)new_Type_String(L"STRING");constant34708 = (Object)new_AST_Constant((Object)string27037);// notsend161032 = (Object)new_AST_Send((Object)localvariable27123, (Object)SMB_not, 0);((AST_Send)send161032)->info = (AST_Info)info5454;// strongTimessend161033 = (Object)new_AST_Send((Object)send161032, (Object)symbol44331, 0);((AST_Send)send161033)->info = (AST_Info)info5454;// &&send161034 = (Object)new_AST_Send((Object)localvariable27123, (Object)symbol44326, 1, (Object)send161033);((AST_Send)send161034)->info = (AST_Info)info5454;// <&send161035 = (Object)new_AST_Send((Object)send161034, (Object)symbol44372, 1, (Object)localvariable27123);((AST_Send)send161035)->info = (AST_Info)info5454;// strongPlussend161036 = (Object)new_AST_Send((Object)send161035, (Object)symbol44323, 0);((AST_Send)send161036)->info = (AST_Info)info5454;localvariable27125 = (Object)new_AST_Variable_named(L"result");array24210 = (Object)new_Type_Array_with(1, (Object)localvariable27125);symbol44447 = (Object)new_Type_Symbol_cached(L"removeFirst");// removeFirstsend161037 = (Object)new_AST_Send((Object)localvariable27125, (Object)symbol44447, 0);((AST_Send)send161037)->info = (AST_Info)info5454;assign20218 = (Object)new_AST_Assign((Object)localvariable27124, (Object)send161037);string27038 = (Object)new_Type_String(L"");constant34709 = (Object)new_AST_Constant((Object)string27038);localvariable27126 = (Object)new_AST_Variable_named(L"c");localvariable27127 = (Object)new_AST_Variable_named(L"e");array24211 = (Object)new_Type_Array_with(2, (Object)localvariable27126, (Object)localvariable27127);// ,send161038 = (Object)new_AST_Send((Object)localvariable27126, (Object)SMB__concat, 1, (Object)localvariable27127);((AST_Send)send161038)->info = (AST_Info)info5454;block11801 = (Object)new_AST_Block_with((Type_Array)array24211, (Type_Array)empty_Type_Array, 2, 1, send161038);// inject:into:send161039 = (Object)new_AST_Send((Object)localvariable27124, (Object)symbol44184, 2, (Object)constant34709, (Object)block11801);((AST_Send)send161039)->info = (AST_Info)info5454;assign20219 = (Object)new_AST_Assign((Object)localvariable27124, (Object)send161039);localvariable27128 = (Object)new_AST_Variable_named(L"c");localvariable27129 = (Object)new_AST_Variable_named(L"e");array24212 = (Object)new_Type_Array_with(2, (Object)localvariable27128, (Object)localvariable27129);string27039 = (Object)new_Type_String(L"\'");constant34710 = (Object)new_AST_Constant((Object)string27039);// ,send161040 = (Object)new_AST_Send((Object)localvariable27128, (Object)SMB__concat, 1, (Object)constant34710);((AST_Send)send161040)->info = (AST_Info)info5454;string27040 = (Object)new_Type_String(L"");constant34711 = (Object)new_AST_Constant((Object)string27040);localvariable27130 = (Object)new_AST_Variable_named(L"ic");localvariable27131 = (Object)new_AST_Variable_named(L"ie");array24213 = (Object)new_Type_Array_with(2, (Object)localvariable27130, (Object)localvariable27131);// ,send161041 = (Object)new_AST_Send((Object)localvariable27130, (Object)SMB__concat, 1, (Object)localvariable27131);((AST_Send)send161041)->info = (AST_Info)info5454;block11802 = (Object)new_AST_Block_with((Type_Array)array24213, (Type_Array)empty_Type_Array, 3, 1, send161041);// inject:into:send161042 = (Object)new_AST_Send((Object)localvariable27129, (Object)symbol44184, 2, (Object)constant34711, (Object)block11802);((AST_Send)send161042)->info = (AST_Info)info5454;// ,send161043 = (Object)new_AST_Send((Object)send161040, (Object)SMB__concat, 1, (Object)send161042);((AST_Send)send161043)->info = (AST_Info)info5454;block11803 = (Object)new_AST_Block_with((Type_Array)array24212, (Type_Array)empty_Type_Array, 2, 1, send161043);// inject:into:send161044 = (Object)new_AST_Send((Object)localvariable27125, (Object)symbol44184, 2, (Object)localvariable27124, (Object)block11803);((AST_Send)send161044)->info = (AST_Info)info5454;block11804 = (Object)new_AST_Block_with((Type_Array)array24210, (Type_Array)empty_Type_Array, 1, 3, assign20218, assign20219, send161044);// named:parsing:semantics:send161045 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34708, (Object)send161036, (Object)block11804);((AST_Send)send161045)->info = (AST_Info)info5454;method41197 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24209, 2, assign20217, send161045);((AST_Method)method41197)->info = (AST_Info)info5454;symbol44300 = (Object)new_Type_Symbol_cached(L"initializeString");methodclosure41100 = (Object)new_Runtime_MethodClosure(method41197);store_method((Type_Class)class6735, (Type_Symbol)symbol44300, (Runtime_MethodClosure)methodclosure41100);// SCParser>>initializeParameterName//initializeParameterName// 	^ self identifier// identifiersend161046 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);string27041 = (Object)new_Type_String(L"initializeParameterName");string27042 = (Object)new_Type_String(L"initializeParameterName\n\t^ self identifier");smallint26876 = (Object)new_Type_SmallInt(-1);smallint26877 = (Object)new_Type_SmallInt(-1);info5455 = (Object)new_AST_Info((Type_String)string27042,(Type_String)string27041, (Type_SmallInt)smallint26876, (Type_SmallInt)smallint26877);((AST_Send)send161046)->info = (AST_Info)info5455;method41198 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161046);((AST_Method)method41198)->info = (AST_Info)info5455;symbol44312 = (Object)new_Type_Symbol_cached(L"initializeParameterName");methodclosure41101 = (Object)new_Runtime_MethodClosure(method41198);store_method((Type_Class)class6735, (Type_Symbol)symbol44312, (Runtime_MethodClosure)methodclosure41101);// SCParser>>initializeIdentifier//initializeIdentifier// 	^ PEGParser// 		named: 'IDENTIFIER'// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)// 		semantics: [ :result |// 			result second inject: result first into: [ :c :e | c, e ]// 		]string27043 = (Object)new_Type_String(L"IDENTIFIER");constant34712 = (Object)new_AST_Constant((Object)string27043);// lettersend161047 = (Object)new_AST_Send((Object)Self, (Object)symbol44444, 0);string27044 = (Object)new_Type_String(L"initializeIdentifier");string27045 = (Object)new_Type_String(L"initializeIdentifier\n\t^ PEGParser\n\t\tnamed: \'IDENTIFIER\'\n\t\tparsing: (self letter && (self letter | self decimalDigit) strongTimes)\n\t\tsemantics: [ :result |\n\t\t\tresult second inject: result first into: [ :c :e | c, e ]\n\t\t]");smallint26878 = (Object)new_Type_SmallInt(-1);smallint26879 = (Object)new_Type_SmallInt(-1);info5456 = (Object)new_AST_Info((Type_String)string27045,(Type_String)string27044, (Type_SmallInt)smallint26878, (Type_SmallInt)smallint26879);((AST_Send)send161047)->info = (AST_Info)info5456;// lettersend161048 = (Object)new_AST_Send((Object)Self, (Object)symbol44444, 0);((AST_Send)send161048)->info = (AST_Info)info5456;// decimalDigitsend161049 = (Object)new_AST_Send((Object)Self, (Object)symbol44427, 0);((AST_Send)send161049)->info = (AST_Info)info5456;// |send161050 = (Object)new_AST_Send((Object)send161048, (Object)SMB__or, 1, (Object)send161049);((AST_Send)send161050)->info = (AST_Info)info5456;// strongTimessend161051 = (Object)new_AST_Send((Object)send161050, (Object)symbol44331, 0);((AST_Send)send161051)->info = (AST_Info)info5456;// &&send161052 = (Object)new_AST_Send((Object)send161047, (Object)symbol44326, 1, (Object)send161051);((AST_Send)send161052)->info = (AST_Info)info5456;localvariable27132 = (Object)new_AST_Variable_named(L"result");array24214 = (Object)new_Type_Array_with(1, (Object)localvariable27132);// secondsend161053 = (Object)new_AST_Send((Object)localvariable27132, (Object)symbol44436, 0);((AST_Send)send161053)->info = (AST_Info)info5456;// firstsend161054 = (Object)new_AST_Send((Object)localvariable27132, (Object)symbol44180, 0);((AST_Send)send161054)->info = (AST_Info)info5456;localvariable27133 = (Object)new_AST_Variable_named(L"c");localvariable27134 = (Object)new_AST_Variable_named(L"e");array24215 = (Object)new_Type_Array_with(2, (Object)localvariable27133, (Object)localvariable27134);// ,send161055 = (Object)new_AST_Send((Object)localvariable27133, (Object)SMB__concat, 1, (Object)localvariable27134);((AST_Send)send161055)->info = (AST_Info)info5456;block11805 = (Object)new_AST_Block_with((Type_Array)array24215, (Type_Array)empty_Type_Array, 2, 1, send161055);// inject:into:send161056 = (Object)new_AST_Send((Object)send161053, (Object)symbol44184, 2, (Object)send161054, (Object)block11805);((AST_Send)send161056)->info = (AST_Info)info5456;block11806 = (Object)new_AST_Block_with((Type_Array)array24214, (Type_Array)empty_Type_Array, 1, 1, send161056);// named:parsing:semantics:send161057 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34712, (Object)send161052, (Object)block11806);((AST_Send)send161057)->info = (AST_Info)info5456;method41199 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161057);((AST_Method)method41199)->info = (AST_Info)info5456;symbol44256 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");methodclosure41102 = (Object)new_Runtime_MethodClosure(method41199);store_method((Type_Class)class6735, (Type_Symbol)symbol44256, (Runtime_MethodClosure)methodclosure41102);// SCParser>>initializeCommentFormat//initializeCommentFormat// 	| commentBorder |// 	commentBorder := '"' asPEG.// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorderlocalvariable27135 = (Object)new_AST_Variable_named(L"commentBorder");array24216 = (Object)new_Type_Array_with(1, (Object)localvariable27135);string27046 = (Object)new_Type_String(L"\"");constant34713 = (Object)new_AST_Constant((Object)string27046);// asPEGsend161058 = (Object)new_AST_Send((Object)constant34713, (Object)symbol44131, 0);string27047 = (Object)new_Type_String(L"initializeCommentFormat");string27048 = (Object)new_Type_String(L"initializeCommentFormat\n\t| commentBorder |\n\tcommentBorder := \'\"\' asPEG.\n\t^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder");smallint26880 = (Object)new_Type_SmallInt(-1);smallint26881 = (Object)new_Type_SmallInt(-1);info5457 = (Object)new_AST_Info((Type_String)string27048,(Type_String)string27047, (Type_SmallInt)smallint26880, (Type_SmallInt)smallint26881);((AST_Send)send161058)->info = (AST_Info)info5457;assign20220 = (Object)new_AST_Assign((Object)localvariable27135, (Object)send161058);// notsend161059 = (Object)new_AST_Send((Object)localvariable27135, (Object)SMB_not, 0);((AST_Send)send161059)->info = (AST_Info)info5457;// strongTimessend161060 = (Object)new_AST_Send((Object)send161059, (Object)symbol44331, 0);((AST_Send)send161060)->info = (AST_Info)info5457;// &&send161061 = (Object)new_AST_Send((Object)localvariable27135, (Object)symbol44326, 1, (Object)send161060);((AST_Send)send161061)->info = (AST_Info)info5457;// <&send161062 = (Object)new_AST_Send((Object)send161061, (Object)symbol44372, 1, (Object)localvariable27135);((AST_Send)send161062)->info = (AST_Info)info5457;method41200 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24216, 2, assign20220, send161062);((AST_Method)method41200)->info = (AST_Info)info5457;symbol44284 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");methodclosure41103 = (Object)new_Runtime_MethodClosure(method41200);store_method((Type_Class)class6735, (Type_Symbol)symbol44284, (Runtime_MethodClosure)methodclosure41103);// SCParser>>initializeUnaryExpression//initializeUnaryExpression// 	| result |// 	^ PEGParser// 		named: 'UNARY-EXPRESSION'// 		parsing: (self primary & (self unarySelector plus))// 		semantics: [ :parts |// 			result := parts first.// 			(parts at: 2) do: [ :selector |// 				result := ASTUnaryExpression new// 							receiver: result;// 							selector: selector.// 			].// 			result// 		]localvariable27136 = (Object)new_AST_Variable_named(L"result");array24217 = (Object)new_Type_Array_with(1, (Object)localvariable27136);string27049 = (Object)new_Type_String(L"UNARY-EXPRESSION");constant34714 = (Object)new_AST_Constant((Object)string27049);// primarysend161063 = (Object)new_AST_Send((Object)Self, (Object)symbol44439, 0);string27050 = (Object)new_Type_String(L"initializeUnaryExpression");string27051 = (Object)new_Type_String(L"initializeUnaryExpression\n\t| result |\n\t^ PEGParser\n\t\tnamed: \'UNARY-EXPRESSION\'\n\t\tparsing: (self primary & (self unarySelector plus))\n\t\tsemantics: [ :parts |\n\t\t\tresult := parts first.\n\t\t\t(parts at: 2) do: [ :selector |\n\t\t\t\tresult := ASTUnaryExpression new\n\t\t\t\t\t\t\treceiver: result;\n\t\t\t\t\t\t\tselector: selector.\n\t\t\t].\n\t\t\tresult\n\t\t]");smallint26882 = (Object)new_Type_SmallInt(-1);smallint26883 = (Object)new_Type_SmallInt(-1);info5458 = (Object)new_AST_Info((Type_String)string27051,(Type_String)string27050, (Type_SmallInt)smallint26882, (Type_SmallInt)smallint26883);((AST_Send)send161063)->info = (AST_Info)info5458;// unarySelectorsend161064 = (Object)new_AST_Send((Object)Self, (Object)symbol44422, 0);((AST_Send)send161064)->info = (AST_Info)info5458;// plussend161065 = (Object)new_AST_Send((Object)send161064, (Object)symbol44335, 0);((AST_Send)send161065)->info = (AST_Info)info5458;// &send161066 = (Object)new_AST_Send((Object)send161063, (Object)SMB__and, 1, (Object)send161065);((AST_Send)send161066)->info = (AST_Info)info5458;localvariable27137 = (Object)new_AST_Variable_named(L"parts");array24218 = (Object)new_Type_Array_with(1, (Object)localvariable27137);// firstsend161067 = (Object)new_AST_Send((Object)localvariable27137, (Object)symbol44180, 0);((AST_Send)send161067)->info = (AST_Info)info5458;assign20221 = (Object)new_AST_Assign((Object)localvariable27136, (Object)send161067);smallint26884 = (Object)new_Type_SmallInt(2);constant34715 = (Object)new_AST_Constant((Object)smallint26884);// at:send161068 = (Object)new_AST_Send((Object)localvariable27137, (Object)SMB_at_, 1, (Object)constant34715);((AST_Send)send161068)->info = (AST_Info)info5458;localvariable27138 = (Object)new_AST_Variable_named(L"selector");array24219 = (Object)new_Type_Array_with(1, (Object)localvariable27138);localvariable27139 = (Object)new_AST_Variable_named(L"receiver");array24220 = (Object)new_Type_Array_with(1, (Object)localvariable27139);// receiver:send161069 = (Object)new_AST_Send((Object)localvariable27139, (Object)symbol44216, 1, (Object)localvariable27136);((AST_Send)send161069)->info = (AST_Info)info5458;// selector:send161070 = (Object)new_AST_Send((Object)localvariable27139, (Object)symbol44212, 1, (Object)localvariable27138);((AST_Send)send161070)->info = (AST_Info)info5458;block11807 = (Object)new_AST_Block_with((Type_Array)array24220, (Type_Array)empty_Type_Array, 3, 2, send161069, send161070);// newsend161071 = (Object)new_AST_Send((Object)classreference13410, (Object)symbol44095, 0);((AST_Send)send161071)->info = (AST_Info)info5458;// value:send161072 = (Object)new_AST_Send((Object)block11807, (Object)SMB_value_, 1, (Object)send161071);((AST_Send)send161072)->info = (AST_Info)info5458;assign20222 = (Object)new_AST_Assign((Object)localvariable27136, (Object)send161072);block11808 = (Object)new_AST_Block_with((Type_Array)array24219, (Type_Array)empty_Type_Array, 2, 1, assign20222);// do:send161073 = (Object)new_AST_Send((Object)send161068, (Object)symbol44127, 1, (Object)block11808);((AST_Send)send161073)->info = (AST_Info)info5458;block11809 = (Object)new_AST_Block_with((Type_Array)array24218, (Type_Array)empty_Type_Array, 1, 3, assign20221, send161073, localvariable27136);// named:parsing:semantics:send161074 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34714, (Object)send161066, (Object)block11809);((AST_Send)send161074)->info = (AST_Info)info5458;method41201 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24217, 1, send161074);((AST_Method)method41201)->info = (AST_Info)info5458;symbol44296 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");methodclosure41104 = (Object)new_Runtime_MethodClosure(method41201);store_method((Type_Class)class6735, (Type_Symbol)symbol44296, (Runtime_MethodClosure)methodclosure41104);// SCParser>>initializeKeyword//initializeKeyword// 	^ self identifier && (':' asPEG omit: true)// identifiersend161075 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);string27052 = (Object)new_Type_String(L"initializeKeyword");string27053 = (Object)new_Type_String(L"initializeKeyword\n\t^ self identifier && (\':\' asPEG omit: true)");smallint26885 = (Object)new_Type_SmallInt(-1);smallint26886 = (Object)new_Type_SmallInt(-1);info5459 = (Object)new_AST_Info((Type_String)string27053,(Type_String)string27052, (Type_SmallInt)smallint26885, (Type_SmallInt)smallint26886);((AST_Send)send161075)->info = (AST_Info)info5459;string27054 = (Object)new_Type_String(L":");constant34716 = (Object)new_AST_Constant((Object)string27054);// asPEGsend161076 = (Object)new_AST_Send((Object)constant34716, (Object)symbol44131, 0);((AST_Send)send161076)->info = (AST_Info)info5459;// omit:send161077 = (Object)new_AST_Send((Object)send161076, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161077)->info = (AST_Info)info5459;// &&send161078 = (Object)new_AST_Send((Object)send161075, (Object)symbol44326, 1, (Object)send161077);((AST_Send)send161078)->info = (AST_Info)info5459;method41202 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161078);((AST_Method)method41202)->info = (AST_Info)info5459;symbol44266 = (Object)new_Type_Symbol_cached(L"initializeKeyword");methodclosure41105 = (Object)new_Runtime_MethodClosure(method41202);store_method((Type_Class)class6735, (Type_Symbol)symbol44266, (Runtime_MethodClosure)methodclosure41105);// SCParser>>preStoreBinaryObjectDescription//preStoreBinaryObjectDescription// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'// 	]constant34717 = (Object)new_AST_Constant((Object)symbol44434);string27055 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");constant34718 = (Object)new_AST_Constant((Object)string27055);// named:send161079 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44345, 1, (Object)constant34718);string27056 = (Object)new_Type_String(L"preStoreBinaryObjectDescription");string27057 = (Object)new_Type_String(L"preStoreBinaryObjectDescription\n\t^ parsers at: #binaryObjectDescription ifAbsentPut: [\n\t\tPEGParser named: \'BINARY-OBJECT-DESCRIPTION\'\n\t]");smallint26887 = (Object)new_Type_SmallInt(-1);smallint26888 = (Object)new_Type_SmallInt(-1);info5460 = (Object)new_AST_Info((Type_String)string27057,(Type_String)string27056, (Type_SmallInt)smallint26887, (Type_SmallInt)smallint26888);((AST_Send)send161079)->info = (AST_Info)info5460;block11810 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send161079);// at:ifAbsentPut:send161080 = (Object)new_AST_Send((Object)instancevariable16406, (Object)symbol44368, 2, (Object)constant34717, (Object)block11810);((AST_Send)send161080)->info = (AST_Info)info5460;method41203 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161080);((AST_Method)method41203)->info = (AST_Info)info5460;methodclosure41106 = (Object)new_Runtime_MethodClosure(method41203);store_method((Type_Class)class6735, (Type_Symbol)symbol44278, (Runtime_MethodClosure)methodclosure41106);// SCParser>>doesNotUnderstand://doesNotUnderstand: message//     | selector |//     ^ parsers at: message selector ifAbsentPut: [//         selector := ('initialize', message selector capitalized) asSymbol.//         (self respondsTo: selector)// 			ifTrue: [ self perform: selector ]//             ifFalse: [ super doesNotUnderstand: message ]// 	]localvariable27140 = (Object)new_AST_Variable_named(L"message");array24221 = (Object)new_Type_Array_with(1, (Object)localvariable27140);localvariable27141 = (Object)new_AST_Variable_named(L"selector");array24222 = (Object)new_Type_Array_with(1, (Object)localvariable27141);// selectorsend161081 = (Object)new_AST_Send((Object)localvariable27140, (Object)symbol44115, 0);string27058 = (Object)new_Type_String(L"doesNotUnderstand:");string27059 = (Object)new_Type_String(L"doesNotUnderstand: message\n    | selector |\n    ^ parsers at: message selector ifAbsentPut: [\n        selector := (\'initialize\', message selector capitalized) asSymbol.\n        (self respondsTo: selector)\n\t\t\tifTrue: [ self perform: selector ]\n            ifFalse: [ super doesNotUnderstand: message ]\n\t]");smallint26889 = (Object)new_Type_SmallInt(-1);smallint26890 = (Object)new_Type_SmallInt(-1);info5461 = (Object)new_AST_Info((Type_String)string27059,(Type_String)string27058, (Type_SmallInt)smallint26889, (Type_SmallInt)smallint26890);((AST_Send)send161081)->info = (AST_Info)info5461;string27060 = (Object)new_Type_String(L"initialize");constant34719 = (Object)new_AST_Constant((Object)string27060);// selectorsend161082 = (Object)new_AST_Send((Object)localvariable27140, (Object)symbol44115, 0);((AST_Send)send161082)->info = (AST_Info)info5461;// capitalizedsend161083 = (Object)new_AST_Send((Object)send161082, (Object)symbol44132, 0);((AST_Send)send161083)->info = (AST_Info)info5461;// ,send161084 = (Object)new_AST_Send((Object)constant34719, (Object)SMB__concat, 1, (Object)send161083);((AST_Send)send161084)->info = (AST_Info)info5461;// asSymbolsend161085 = (Object)new_AST_Send((Object)send161084, (Object)SMB_asSymbol, 0);((AST_Send)send161085)->info = (AST_Info)info5461;assign20223 = (Object)new_AST_Assign((Object)localvariable27141, (Object)send161085);// respondsTo:send161086 = (Object)new_AST_Send((Object)Self, (Object)symbol44009, 1, (Object)localvariable27141);((AST_Send)send161086)->info = (AST_Info)info5461;symbol44448 = (Object)new_Type_Symbol_cached(L"perform:");// perform:send161087 = (Object)new_AST_Send((Object)Self, (Object)symbol44448, 1, (Object)localvariable27141);((AST_Send)send161087)->info = (AST_Info)info5461;block11811 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161087);super2478 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable27140);block11812 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super2478);// ifTrue:ifFalse:send161088 = (Object)new_AST_Send((Object)send161086, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11811, (Object)block11812);((AST_Send)send161088)->info = (AST_Info)info5461;block11813 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, assign20223, send161088);// at:ifAbsentPut:send161089 = (Object)new_AST_Send((Object)instancevariable16406, (Object)symbol44368, 2, (Object)send161081, (Object)block11813);((AST_Send)send161089)->info = (AST_Info)info5461;method41204 = (Object)new_AST_Method_with((Type_Array)array24221, (Type_Array)array24222, 1, send161089);((AST_Method)method41204)->info = (AST_Info)info5461;methodclosure41107 = (Object)new_Runtime_MethodClosure(method41204);store_method((Type_Class)class6735, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure41107);// SCParser>>initializeUppercase//initializeUppercase// 	^ ('A-Z' asPEGRange)string27061 = (Object)new_Type_String(L"A-Z");constant34720 = (Object)new_AST_Constant((Object)string27061);// asPEGRangesend161090 = (Object)new_AST_Send((Object)constant34720, (Object)symbol44124, 0);string27062 = (Object)new_Type_String(L"initializeUppercase");string27063 = (Object)new_Type_String(L"initializeUppercase\n\t^ (\'A-Z\' asPEGRange)");smallint26891 = (Object)new_Type_SmallInt(-1);smallint26892 = (Object)new_Type_SmallInt(-1);info5462 = (Object)new_AST_Info((Type_String)string27063,(Type_String)string27062, (Type_SmallInt)smallint26891, (Type_SmallInt)smallint26892);((AST_Send)send161090)->info = (AST_Info)info5462;method41205 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161090);((AST_Method)method41205)->info = (AST_Info)info5462;symbol44304 = (Object)new_Type_Symbol_cached(L"initializeUppercase");methodclosure41108 = (Object)new_Runtime_MethodClosure(method41205);store_method((Type_Class)class6735, (Type_Symbol)symbol44304, (Runtime_MethodClosure)methodclosure41108);// SCParser>>initialize//initialize// 	super initialize.// 	parsers := Dictionary new.// 	symbols := Dictionary new.// 	id := 0super2479 = (Object)new_AST_Super((Object)symbol44004, 0);classreference13443 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);// Dictionary>>at:ifAbsentPut://at: key ifAbsentPut: aBlock // 	^ self at: key ifAbsent: [self at: key put: aBlock value]localvariable27142 = (Object)new_AST_Variable_named(L"key");localvariable27143 = (Object)new_AST_Variable_named(L"aBlock");array24223 = (Object)new_Type_Array_with(2, (Object)localvariable27142, (Object)localvariable27143);symbol44449 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");// valuesend161091 = (Object)new_AST_Send((Object)localvariable27143, (Object)symbol44392, 0);string27064 = (Object)new_Type_String(L"at:ifAbsentPut:");string27065 = (Object)new_Type_String(L"at: key ifAbsentPut: aBlock \n\t^ self at: key ifAbsent: [self at: key put: aBlock value]");smallint26893 = (Object)new_Type_SmallInt(-1);smallint26894 = (Object)new_Type_SmallInt(-1);info5463 = (Object)new_AST_Info((Type_String)string27065,(Type_String)string27064, (Type_SmallInt)smallint26893, (Type_SmallInt)smallint26894);((AST_Send)send161091)->info = (AST_Info)info5463;// at:put:send161092 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable27142, (Object)send161091);((AST_Send)send161092)->info = (AST_Info)info5463;block11814 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send161092);// at:ifAbsent:send161093 = (Object)new_AST_Send((Object)Self, (Object)symbol44449, 2, (Object)localvariable27142, (Object)block11814);((AST_Send)send161093)->info = (AST_Info)info5463;method41206 = (Object)new_AST_Method_with((Type_Array)array24223, (Type_Array)empty_Type_Array, 1, send161093);((AST_Method)method41206)->info = (AST_Info)info5463;methodclosure41109 = (Object)new_Runtime_MethodClosure(method41206);store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol44368, (Runtime_MethodClosure)methodclosure41109);// Dictionary>>includesKey://includesKey: key// 	self at: key ifAbsent: [ ^ false ].// 	^ truelocalvariable27144 = (Object)new_AST_Variable_named(L"key");array24224 = (Object)new_Type_Array_with(1, (Object)localvariable27144);variable1869 = (Object)new_AST_Variable_named(L"return");array24225 = (Object)new_Type_Array_with(1, (Object)variable1869);// escape:send161094 = (Object)new_AST_Send((Object)variable1869, (Object)SMB_escape_, 1, (Object)False_Const);string27066 = (Object)new_Type_String(L"includesKey:");string27067 = (Object)new_Type_String(L"includesKey: key\n\tself at: key ifAbsent: [ ^ false ].\n\t^ true");smallint26895 = (Object)new_Type_SmallInt(-1);smallint26896 = (Object)new_Type_SmallInt(-1);info5464 = (Object)new_AST_Info((Type_String)string27067,(Type_String)string27066, (Type_SmallInt)smallint26895, (Type_SmallInt)smallint26896);((AST_Send)send161094)->info = (AST_Info)info5464;block11815 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161094);// at:ifAbsent:send161095 = (Object)new_AST_Send((Object)Self, (Object)symbol44449, 2, (Object)localvariable27144, (Object)block11815);((AST_Send)send161095)->info = (AST_Info)info5464;block11816 = (Object)new_AST_Block_with((Type_Array)array24225, (Type_Array)empty_Type_Array, 1, 2, send161095, True_Const);// on:send161096 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11816);method41207 = (Object)new_AST_Method_with((Type_Array)array24224, (Type_Array)empty_Type_Array, 1, send161096);((AST_Method)method41207)->info = (AST_Info)info5464;methodclosure41110 = (Object)new_Runtime_MethodClosure(method41207);store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol44369, (Runtime_MethodClosure)methodclosure41110);// newsend161097 = (Object)new_AST_Send((Object)classreference13443, (Object)symbol44095, 0);string27068 = (Object)new_Type_String(L"initialize");string27069 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tparsers := Dictionary new.\n\tsymbols := Dictionary new.\n\tid := 0");smallint26897 = (Object)new_Type_SmallInt(-1);smallint26898 = (Object)new_Type_SmallInt(-1);info5465 = (Object)new_AST_Info((Type_String)string27069,(Type_String)string27068, (Type_SmallInt)smallint26897, (Type_SmallInt)smallint26898);((AST_Send)send161097)->info = (AST_Info)info5465;assign20224 = (Object)new_AST_Assign((Object)instancevariable16406, (Object)send161097);// newsend161098 = (Object)new_AST_Send((Object)classreference13443, (Object)symbol44095, 0);((AST_Send)send161098)->info = (AST_Info)info5465;assign20225 = (Object)new_AST_Assign((Object)instancevariable16408, (Object)send161098);smallint26899 = (Object)new_Type_SmallInt(0);constant34721 = (Object)new_AST_Constant((Object)smallint26899);assign20226 = (Object)new_AST_Assign((Object)instancevariable16407, (Object)constant34721);method41208 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super2479, assign20224, assign20225, assign20226, Self);((AST_Method)method41208)->info = (AST_Info)info5465;methodclosure41111 = (Object)new_Runtime_MethodClosure(method41208);store_method((Type_Class)class6735, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure41111);// SCParser>>initializeUnaryObjectDescription//initializeUnaryObjectDescription// 	^ self unaryExpression | self primary// unaryExpressionsend161099 = (Object)new_AST_Send((Object)Self, (Object)symbol44426, 0);string27070 = (Object)new_Type_String(L"initializeUnaryObjectDescription");string27071 = (Object)new_Type_String(L"initializeUnaryObjectDescription\n\t^ self unaryExpression | self primary");smallint26900 = (Object)new_Type_SmallInt(-1);smallint26901 = (Object)new_Type_SmallInt(-1);info5466 = (Object)new_AST_Info((Type_String)string27071,(Type_String)string27070, (Type_SmallInt)smallint26900, (Type_SmallInt)smallint26901);((AST_Send)send161099)->info = (AST_Info)info5466;// primarysend161100 = (Object)new_AST_Send((Object)Self, (Object)symbol44439, 0);((AST_Send)send161100)->info = (AST_Info)info5466;// |send161101 = (Object)new_AST_Send((Object)send161099, (Object)SMB__or, 1, (Object)send161100);((AST_Send)send161101)->info = (AST_Info)info5466;method41209 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161101);((AST_Method)method41209)->info = (AST_Info)info5466;symbol44271 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");methodclosure41112 = (Object)new_Runtime_MethodClosure(method41209);store_method((Type_Class)class6735, (Type_Symbol)symbol44271, (Runtime_MethodClosure)methodclosure41112);// SCParser>>initializeSpecialCharacter//initializeSpecialCharacter// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)string27072 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");constant34722 = (Object)new_AST_Constant((Object)string27072);// asPEGChoicesend161102 = (Object)new_AST_Send((Object)constant34722, (Object)symbol44126, 0);string27073 = (Object)new_Type_String(L"initializeSpecialCharacter");string27074 = (Object)new_Type_String(L"initializeSpecialCharacter\n\t^ (\'+*/\\~<>=@%?!&`,\' asPEGChoice)");smallint26902 = (Object)new_Type_SmallInt(-1);smallint26903 = (Object)new_Type_SmallInt(-1);info5467 = (Object)new_AST_Info((Type_String)string27074,(Type_String)string27073, (Type_SmallInt)smallint26902, (Type_SmallInt)smallint26903);((AST_Send)send161102)->info = (AST_Info)info5467;method41210 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161102);((AST_Method)method41210)->info = (AST_Info)info5467;symbol44248 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");methodclosure41113 = (Object)new_Runtime_MethodClosure(method41210);store_method((Type_Class)class6735, (Type_Symbol)symbol44248, (Runtime_MethodClosure)methodclosure41113);// SCParser>>initializeStringConstant//initializeStringConstant// 	^ PEGParser// 		named: 'STRING-CONSTANT'// 		parsing: self string// 		semantics: [:result |// 			ASTString new string: result// 		]string27075 = (Object)new_Type_String(L"STRING-CONSTANT");constant34723 = (Object)new_AST_Constant((Object)string27075);// stringsend161103 = (Object)new_AST_Send((Object)Self, (Object)symbol44197, 0);string27076 = (Object)new_Type_String(L"initializeStringConstant");string27077 = (Object)new_Type_String(L"initializeStringConstant\n\t^ PEGParser\n\t\tnamed: \'STRING-CONSTANT\'\n\t\tparsing: self string\n\t\tsemantics: [:result |\n\t\t\tASTString new string: result\n\t\t]");smallint26904 = (Object)new_Type_SmallInt(-1);smallint26905 = (Object)new_Type_SmallInt(-1);info5468 = (Object)new_AST_Info((Type_String)string27077,(Type_String)string27076, (Type_SmallInt)smallint26904, (Type_SmallInt)smallint26905);((AST_Send)send161103)->info = (AST_Info)info5468;localvariable27145 = (Object)new_AST_Variable_named(L"result");array24226 = (Object)new_Type_Array_with(1, (Object)localvariable27145);// newsend161104 = (Object)new_AST_Send((Object)classreference13426, (Object)symbol44095, 0);((AST_Send)send161104)->info = (AST_Info)info5468;// string:send161105 = (Object)new_AST_Send((Object)send161104, (Object)symbol44196, 1, (Object)localvariable27145);((AST_Send)send161105)->info = (AST_Info)info5468;block11817 = (Object)new_AST_Block_with((Type_Array)array24226, (Type_Array)empty_Type_Array, 1, 1, send161105);// named:parsing:semantics:send161106 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34723, (Object)send161103, (Object)block11817);((AST_Send)send161106)->info = (AST_Info)info5468;method41211 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161106);((AST_Method)method41211)->info = (AST_Info)info5468;symbol44316 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");methodclosure41114 = (Object)new_Runtime_MethodClosure(method41211);store_method((Type_Class)class6735, (Type_Symbol)symbol44316, (Runtime_MethodClosure)methodclosure41114);// SCParser>>preStoreMessageExpression//preStoreMessageExpression// 	^ parsers at: #messageExpression ifAbsentPut: [// 		PEGParser named: 'MESSAGE-EXPRESSION'// 	]constant34724 = (Object)new_AST_Constant((Object)symbol44423);string27078 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");constant34725 = (Object)new_AST_Constant((Object)string27078);// named:send161107 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44345, 1, (Object)constant34725);string27079 = (Object)new_Type_String(L"preStoreMessageExpression");string27080 = (Object)new_Type_String(L"preStoreMessageExpression\n\t^ parsers at: #messageExpression ifAbsentPut: [\n\t\tPEGParser named: \'MESSAGE-EXPRESSION\'\n\t]");smallint26906 = (Object)new_Type_SmallInt(-1);smallint26907 = (Object)new_Type_SmallInt(-1);info5469 = (Object)new_AST_Info((Type_String)string27080,(Type_String)string27079, (Type_SmallInt)smallint26906, (Type_SmallInt)smallint26907);((AST_Send)send161107)->info = (AST_Info)info5469;block11818 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send161107);// at:ifAbsentPut:send161108 = (Object)new_AST_Send((Object)instancevariable16406, (Object)symbol44368, 2, (Object)constant34724, (Object)block11818);((AST_Send)send161108)->info = (AST_Info)info5469;method41212 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161108);((AST_Method)method41212)->info = (AST_Info)info5469;symbol44288 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");methodclosure41115 = (Object)new_Runtime_MethodClosure(method41212);store_method((Type_Class)class6735, (Type_Symbol)symbol44288, (Runtime_MethodClosure)methodclosure41115);// SCParser>>initializeUnaryMessageDefinition//initializeUnaryMessageDefinition// 	^ PEGParser// 		named: 'UNARY-MESSAGE-DEFINITION'// 		parsing: self unarySelector// 		semantics: [ :selector |// 			ASTUnaryMessageDefinition new// 				selector: selector.// 		]string27081 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");constant34726 = (Object)new_AST_Constant((Object)string27081);// unarySelectorsend161109 = (Object)new_AST_Send((Object)Self, (Object)symbol44422, 0);string27082 = (Object)new_Type_String(L"initializeUnaryMessageDefinition");string27083 = (Object)new_Type_String(L"initializeUnaryMessageDefinition\n\t^ PEGParser\n\t\tnamed: \'UNARY-MESSAGE-DEFINITION\'\n\t\tparsing: self unarySelector\n\t\tsemantics: [ :selector |\n\t\t\tASTUnaryMessageDefinition new\n\t\t\t\tselector: selector.\n\t\t]");smallint26908 = (Object)new_Type_SmallInt(-1);smallint26909 = (Object)new_Type_SmallInt(-1);info5470 = (Object)new_AST_Info((Type_String)string27083,(Type_String)string27082, (Type_SmallInt)smallint26908, (Type_SmallInt)smallint26909);((AST_Send)send161109)->info = (AST_Info)info5470;localvariable27146 = (Object)new_AST_Variable_named(L"selector");array24227 = (Object)new_Type_Array_with(1, (Object)localvariable27146);// newsend161110 = (Object)new_AST_Send((Object)classreference13395, (Object)symbol44095, 0);((AST_Send)send161110)->info = (AST_Info)info5470;// selector:send161111 = (Object)new_AST_Send((Object)send161110, (Object)symbol44212, 1, (Object)localvariable27146);((AST_Send)send161111)->info = (AST_Info)info5470;block11819 = (Object)new_AST_Block_with((Type_Array)array24227, (Type_Array)empty_Type_Array, 1, 1, send161111);// named:parsing:semantics:send161112 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34726, (Object)send161109, (Object)block11819);((AST_Send)send161112)->info = (AST_Info)info5470;method41213 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161112);((AST_Method)method41213)->info = (AST_Info)info5470;symbol44253 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");methodclosure41116 = (Object)new_Runtime_MethodClosure(method41213);store_method((Type_Class)class6735, (Type_Symbol)symbol44253, (Runtime_MethodClosure)methodclosure41116);// SCParser>>initializeCharacterConstant//initializeCharacterConstant// 	^ PEGParser// 		named: 'CHARACTER-CONSTANT'// 		parsing: (('$' asPEG omit: true) && (self character))// 		semantics: [ :char |// 			ASTCharacter new char: char first " get char from string containing only the char "// 		]string27084 = (Object)new_Type_String(L"CHARACTER-CONSTANT");constant34727 = (Object)new_AST_Constant((Object)string27084);string27085 = (Object)new_Type_String(L"$");constant34728 = (Object)new_AST_Constant((Object)string27085);// asPEGsend161113 = (Object)new_AST_Send((Object)constant34728, (Object)symbol44131, 0);string27086 = (Object)new_Type_String(L"initializeCharacterConstant");string27087 = (Object)new_Type_String(L"initializeCharacterConstant\n\t^ PEGParser\n\t\tnamed: \'CHARACTER-CONSTANT\'\n\t\tparsing: ((\'$\' asPEG omit: true) && (self character))\n\t\tsemantics: [ :char |\n\t\t\tASTCharacter new char: char first \" get char from string containing only the char \"\n\t\t]");smallint26910 = (Object)new_Type_SmallInt(-1);smallint26911 = (Object)new_Type_SmallInt(-1);info5471 = (Object)new_AST_Info((Type_String)string27087,(Type_String)string27086, (Type_SmallInt)smallint26910, (Type_SmallInt)smallint26911);((AST_Send)send161113)->info = (AST_Info)info5471;// omit:send161114 = (Object)new_AST_Send((Object)send161113, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161114)->info = (AST_Info)info5471;symbol44450 = (Object)new_Type_Symbol_cached(L"character");// charactersend161115 = (Object)new_AST_Send((Object)Self, (Object)symbol44450, 0);((AST_Send)send161115)->info = (AST_Info)info5471;// &&send161116 = (Object)new_AST_Send((Object)send161114, (Object)symbol44326, 1, (Object)send161115);((AST_Send)send161116)->info = (AST_Info)info5471;localvariable27147 = (Object)new_AST_Variable_named(L"char");array24228 = (Object)new_Type_Array_with(1, (Object)localvariable27147);// newsend161117 = (Object)new_AST_Send((Object)classreference13402, (Object)symbol44095, 0);((AST_Send)send161117)->info = (AST_Info)info5471;// firstsend161118 = (Object)new_AST_Send((Object)localvariable27147, (Object)symbol44180, 0);((AST_Send)send161118)->info = (AST_Info)info5471;// char:send161119 = (Object)new_AST_Send((Object)send161117, (Object)symbol44354, 1, (Object)send161118);((AST_Send)send161119)->info = (AST_Info)info5471;block11820 = (Object)new_AST_Block_with((Type_Array)array24228, (Type_Array)empty_Type_Array, 1, 1, send161119);// named:parsing:semantics:send161120 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34727, (Object)send161116, (Object)block11820);((AST_Send)send161120)->info = (AST_Info)info5471;method41214 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161120);((AST_Method)method41214)->info = (AST_Info)info5471;symbol44281 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");methodclosure41117 = (Object)new_Runtime_MethodClosure(method41214);store_method((Type_Class)class6735, (Type_Symbol)symbol44281, (Runtime_MethodClosure)methodclosure41117);// SCParser>>injectCascadedMessageExpression//injectCascadedMessageExpression// 	^ self cascadedMessageExpression// 		<= (self messageExpression &// 			((';' asPEG omit: true) & // 				((self keywordMessageExpression// 					| self binaryMessageExpression)// 					<= self unaryMessageExpression)) plus);// 					// 		semantics: [:parts |// 			(parts at: 2) addFirst: parts first.// 			ASTMessageCascadeExpression new// 				receiver: (parts first) receiver;// 				cascades: (parts at: 2)// 		]localvariable27148 = (Object)new_AST_Variable_named(L"receiver");array24229 = (Object)new_Type_Array_with(1, (Object)localvariable27148);string27088 = (Object)new_Type_String(L";");constant34729 = (Object)new_AST_Constant((Object)string27088);// asPEGsend161121 = (Object)new_AST_Send((Object)constant34729, (Object)symbol44131, 0);string27089 = (Object)new_Type_String(L"injectCascadedMessageExpression");string27090 = (Object)new_Type_String(L"injectCascadedMessageExpression\n\t^ self cascadedMessageExpression\n\t\t<= (self messageExpression &\n\t\t\t((\';\' asPEG omit: true) & \n\t\t\t\t((self keywordMessageExpression\n\t\t\t\t\t| self binaryMessageExpression)\n\t\t\t\t\t<= self unaryMessageExpression)) plus);\n\t\t\t\t\t\n\t\tsemantics: [:parts |\n\t\t\t(parts at: 2) addFirst: parts first.\n\t\t\tASTMessageCascadeExpression new\n\t\t\t\treceiver: (parts first) receiver;\n\t\t\t\tcascades: (parts at: 2)\n\t\t]");smallint26912 = (Object)new_Type_SmallInt(-1);smallint26913 = (Object)new_Type_SmallInt(-1);info5472 = (Object)new_AST_Info((Type_String)string27090,(Type_String)string27089, (Type_SmallInt)smallint26912, (Type_SmallInt)smallint26913);((AST_Send)send161121)->info = (AST_Info)info5472;// omit:send161122 = (Object)new_AST_Send((Object)send161121, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161122)->info = (AST_Info)info5472;symbol44451 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");// keywordMessageExpressionsend161123 = (Object)new_AST_Send((Object)Self, (Object)symbol44451, 0);((AST_Send)send161123)->info = (AST_Info)info5472;// &send161124 = (Object)new_AST_Send((Object)send161122, (Object)SMB__and, 1, (Object)send161123);((AST_Send)send161124)->info = (AST_Info)info5472;symbol44452 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");// binaryMessageExpressionsend161125 = (Object)new_AST_Send((Object)Self, (Object)symbol44452, 0);((AST_Send)send161125)->info = (AST_Info)info5472;// |send161126 = (Object)new_AST_Send((Object)send161124, (Object)SMB__or, 1, (Object)send161125);((AST_Send)send161126)->info = (AST_Info)info5472;symbol44453 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");// unaryMessageExpressionsend161127 = (Object)new_AST_Send((Object)Self, (Object)symbol44453, 0);((AST_Send)send161127)->info = (AST_Info)info5472;// <=send161128 = (Object)new_AST_Send((Object)send161126, (Object)symbol44136, 1, (Object)send161127);((AST_Send)send161128)->info = (AST_Info)info5472;// plussend161129 = (Object)new_AST_Send((Object)send161128, (Object)symbol44335, 0);((AST_Send)send161129)->info = (AST_Info)info5472;// &send161130 = (Object)new_AST_Send((Object)localvariable27148, (Object)SMB__and, 1, (Object)send161129);((AST_Send)send161130)->info = (AST_Info)info5472;localvariable27149 = (Object)new_AST_Variable_named(L"parts");array24230 = (Object)new_Type_Array_with(1, (Object)localvariable27149);smallint26914 = (Object)new_Type_SmallInt(2);constant34730 = (Object)new_AST_Constant((Object)smallint26914);// at:send161131 = (Object)new_AST_Send((Object)localvariable27149, (Object)SMB_at_, 1, (Object)constant34730);((AST_Send)send161131)->info = (AST_Info)info5472;symbol44454 = (Object)new_Type_Symbol_cached(L"addFirst:");// firstsend161132 = (Object)new_AST_Send((Object)localvariable27149, (Object)symbol44180, 0);((AST_Send)send161132)->info = (AST_Info)info5472;// addFirst:send161133 = (Object)new_AST_Send((Object)send161131, (Object)symbol44454, 1, (Object)send161132);((AST_Send)send161133)->info = (AST_Info)info5472;localvariable27150 = (Object)new_AST_Variable_named(L"receiver");array24231 = (Object)new_Type_Array_with(1, (Object)localvariable27150);// firstsend161134 = (Object)new_AST_Send((Object)localvariable27149, (Object)symbol44180, 0);((AST_Send)send161134)->info = (AST_Info)info5472;// receiversend161135 = (Object)new_AST_Send((Object)send161134, (Object)symbol44218, 0);((AST_Send)send161135)->info = (AST_Info)info5472;// receiver:send161136 = (Object)new_AST_Send((Object)localvariable27150, (Object)symbol44216, 1, (Object)send161135);((AST_Send)send161136)->info = (AST_Info)info5472;smallint26915 = (Object)new_Type_SmallInt(2);constant34731 = (Object)new_AST_Constant((Object)smallint26915);// at:send161137 = (Object)new_AST_Send((Object)localvariable27149, (Object)SMB_at_, 1, (Object)constant34731);((AST_Send)send161137)->info = (AST_Info)info5472;// cascades:send161138 = (Object)new_AST_Send((Object)localvariable27150, (Object)symbol44243, 1, (Object)send161137);((AST_Send)send161138)->info = (AST_Info)info5472;block11821 = (Object)new_AST_Block_with((Type_Array)array24231, (Type_Array)empty_Type_Array, 3, 2, send161136, send161138);// newsend161139 = (Object)new_AST_Send((Object)classreference13408, (Object)symbol44095, 0);((AST_Send)send161139)->info = (AST_Info)info5472;// value:send161140 = (Object)new_AST_Send((Object)block11821, (Object)SMB_value_, 1, (Object)send161139);((AST_Send)send161140)->info = (AST_Info)info5472;block11822 = (Object)new_AST_Block_with((Type_Array)array24230, (Type_Array)empty_Type_Array, 2, 2, send161133, send161140);// semantics:send161141 = (Object)new_AST_Send((Object)localvariable27148, (Object)symbol44350, 1, (Object)block11822);((AST_Send)send161141)->info = (AST_Info)info5472;block11823 = (Object)new_AST_Block_with((Type_Array)array24229, (Type_Array)empty_Type_Array, 1, 2, send161130, send161141);symbol44455 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");// cascadedMessageExpressionsend161142 = (Object)new_AST_Send((Object)Self, (Object)symbol44455, 0);((AST_Send)send161142)->info = (AST_Info)info5472;// messageExpressionsend161143 = (Object)new_AST_Send((Object)Self, (Object)symbol44423, 0);((AST_Send)send161143)->info = (AST_Info)info5472;// <=send161144 = (Object)new_AST_Send((Object)send161142, (Object)symbol44136, 1, (Object)send161143);((AST_Send)send161144)->info = (AST_Info)info5472;// value:send161145 = (Object)new_AST_Send((Object)block11823, (Object)SMB_value_, 1, (Object)send161144);((AST_Send)send161145)->info = (AST_Info)info5472;method41215 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161145);((AST_Method)method41215)->info = (AST_Info)info5472;symbol44293 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");methodclosure41118 = (Object)new_Runtime_MethodClosure(method41215);store_method((Type_Class)class6735, (Type_Symbol)symbol44293, (Runtime_MethodClosure)methodclosure41118);// SCParser>>injectPrimary//injectPrimary// 	^ self primary// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)// primarysend161146 = (Object)new_AST_Send((Object)Self, (Object)symbol44439, 0);string27091 = (Object)new_Type_String(L"injectPrimary");string27092 = (Object)new_Type_String(L"injectPrimary\n\t^ self primary\n\t\t<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)");smallint26916 = (Object)new_Type_SmallInt(-1);smallint26917 = (Object)new_Type_SmallInt(-1);info5473 = (Object)new_AST_Info((Type_String)string27092,(Type_String)string27091, (Type_SmallInt)smallint26916, (Type_SmallInt)smallint26917);((AST_Send)send161146)->info = (AST_Info)info5473;symbol44456 = (Object)new_Type_Symbol_cached(L"primaryVariable");// primaryVariablesend161147 = (Object)new_AST_Send((Object)Self, (Object)symbol44456, 0);((AST_Send)send161147)->info = (AST_Info)info5473;// <=send161148 = (Object)new_AST_Send((Object)send161146, (Object)symbol44136, 1, (Object)send161147);((AST_Send)send161148)->info = (AST_Info)info5473;symbol44457 = (Object)new_Type_Symbol_cached(L"literal");// literalsend161149 = (Object)new_AST_Send((Object)Self, (Object)symbol44457, 0);((AST_Send)send161149)->info = (AST_Info)info5473;// |send161150 = (Object)new_AST_Send((Object)send161148, (Object)SMB__or, 1, (Object)send161149);((AST_Send)send161150)->info = (AST_Info)info5473;symbol44458 = (Object)new_Type_Symbol_cached(L"block");// blocksend161151 = (Object)new_AST_Send((Object)Self, (Object)symbol44458, 0);((AST_Send)send161151)->info = (AST_Info)info5473;// <=send161152 = (Object)new_AST_Send((Object)send161150, (Object)symbol44136, 1, (Object)send161151);((AST_Send)send161152)->info = (AST_Info)info5473;symbol44459 = (Object)new_Type_Symbol_cached(L"braceExpression");// braceExpressionsend161153 = (Object)new_AST_Send((Object)Self, (Object)symbol44459, 0);((AST_Send)send161153)->info = (AST_Info)info5473;// <=send161154 = (Object)new_AST_Send((Object)send161152, (Object)symbol44136, 1, (Object)send161153);((AST_Send)send161154)->info = (AST_Info)info5473;symbol44460 = (Object)new_Type_Symbol_cached(L"scopedExpression");// scopedExpressionsend161155 = (Object)new_AST_Send((Object)Self, (Object)symbol44460, 0);((AST_Send)send161155)->info = (AST_Info)info5473;// <=send161156 = (Object)new_AST_Send((Object)send161154, (Object)symbol44136, 1, (Object)send161155);((AST_Send)send161156)->info = (AST_Info)info5473;method41216 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161156);((AST_Method)method41216)->info = (AST_Info)info5473;symbol44263 = (Object)new_Type_Symbol_cached(L"injectPrimary");methodclosure41119 = (Object)new_Runtime_MethodClosure(method41216);store_method((Type_Class)class6735, (Type_Symbol)symbol44263, (Runtime_MethodClosure)methodclosure41119);// SCParser>>initializeBinaryObjectDescription//initializeBinaryObjectDescription// 	self binaryExpression.// 	" binaryExpression will build this parser. "// 	^ self binaryObjectDescription// binaryExpressionsend161157 = (Object)new_AST_Send((Object)Self, (Object)symbol44425, 0);string27093 = (Object)new_Type_String(L"initializeBinaryObjectDescription");string27094 = (Object)new_Type_String(L"initializeBinaryObjectDescription\n\tself binaryExpression.\n\t\" binaryExpression will build this parser. \"\n\t^ self binaryObjectDescription");smallint26918 = (Object)new_Type_SmallInt(-1);smallint26919 = (Object)new_Type_SmallInt(-1);info5474 = (Object)new_AST_Info((Type_String)string27094,(Type_String)string27093, (Type_SmallInt)smallint26918, (Type_SmallInt)smallint26919);((AST_Send)send161157)->info = (AST_Info)info5474;// binaryObjectDescriptionsend161158 = (Object)new_AST_Send((Object)Self, (Object)symbol44434, 0);((AST_Send)send161158)->info = (AST_Info)info5474;method41217 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send161157, send161158);((AST_Method)method41217)->info = (AST_Info)info5474;symbol44308 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");methodclosure41120 = (Object)new_Runtime_MethodClosure(method41217);store_method((Type_Class)class6735, (Type_Symbol)symbol44308, (Runtime_MethodClosure)methodclosure41120);// SCParser>>initializeSeparator//initializeSeparator// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "// 	^ PEGParser// 		named: 'COMMENT'// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)string27095 = (Object)new_Type_String(L"COMMENT");constant34732 = (Object)new_AST_Constant((Object)string27095);// separatorssend161159 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44341, 0);string27096 = (Object)new_Type_String(L"initializeSeparator");string27097 = (Object)new_Type_String(L"initializeSeparator\n\t\" has to be strongPlus since plus would match separator in between -> infinite recursion. \"\n\t^ PEGParser\n\t\tnamed: \'COMMENT\'\n\t\tparsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)");smallint26920 = (Object)new_Type_SmallInt(-1);smallint26921 = (Object)new_Type_SmallInt(-1);info5475 = (Object)new_AST_Info((Type_String)string27097,(Type_String)string27096, (Type_SmallInt)smallint26920, (Type_SmallInt)smallint26921);((AST_Send)send161159)->info = (AST_Info)info5475;symbol44461 = (Object)new_Type_Symbol_cached(L"commentFormat");// commentFormatsend161160 = (Object)new_AST_Send((Object)Self, (Object)symbol44461, 0);((AST_Send)send161160)->info = (AST_Info)info5475;// |send161161 = (Object)new_AST_Send((Object)send161159, (Object)SMB__or, 1, (Object)send161160);((AST_Send)send161161)->info = (AST_Info)info5475;// strongTimessend161162 = (Object)new_AST_Send((Object)send161161, (Object)symbol44331, 0);((AST_Send)send161162)->info = (AST_Info)info5475;// omit:send161163 = (Object)new_AST_Send((Object)send161162, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161163)->info = (AST_Info)info5475;// named:parsing:send161164 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44344, 2, (Object)constant34732, (Object)send161163);((AST_Send)send161164)->info = (AST_Info)info5475;method41218 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161164);((AST_Method)method41218)->info = (AST_Info)info5475;symbol44275 = (Object)new_Type_Symbol_cached(L"initializeSeparator");methodclosure41121 = (Object)new_Runtime_MethodClosure(method41218);store_method((Type_Class)class6735, (Type_Symbol)symbol44275, (Runtime_MethodClosure)methodclosure41121);// SCParser>>initializeCharacter//initializeCharacter// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)string27098 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");constant34733 = (Object)new_AST_Constant((Object)string27098);// asPEGChoicesend161165 = (Object)new_AST_Send((Object)constant34733, (Object)symbol44126, 0);string27099 = (Object)new_Type_String(L"initializeCharacter");string27100 = (Object)new_Type_String(L"initializeCharacter\n\t^ ((\'[]{}()_^;$#:-|.\' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)");smallint26922 = (Object)new_Type_SmallInt(-1);smallint26923 = (Object)new_Type_SmallInt(-1);info5476 = (Object)new_AST_Info((Type_String)string27100,(Type_String)string27099, (Type_SmallInt)smallint26922, (Type_SmallInt)smallint26923);((AST_Send)send161165)->info = (AST_Info)info5476;// separatorssend161166 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44341, 0);((AST_Send)send161166)->info = (AST_Info)info5476;// |send161167 = (Object)new_AST_Send((Object)send161165, (Object)SMB__or, 1, (Object)send161166);((AST_Send)send161167)->info = (AST_Info)info5476;// decimalDigitsend161168 = (Object)new_AST_Send((Object)Self, (Object)symbol44427, 0);((AST_Send)send161168)->info = (AST_Info)info5476;// <=send161169 = (Object)new_AST_Send((Object)send161167, (Object)symbol44136, 1, (Object)send161168);((AST_Send)send161169)->info = (AST_Info)info5476;// lettersend161170 = (Object)new_AST_Send((Object)Self, (Object)symbol44444, 0);((AST_Send)send161170)->info = (AST_Info)info5476;// <=send161171 = (Object)new_AST_Send((Object)send161169, (Object)symbol44136, 1, (Object)send161170);((AST_Send)send161171)->info = (AST_Info)info5476;symbol44462 = (Object)new_Type_Symbol_cached(L"specialCharacter");// specialCharactersend161172 = (Object)new_AST_Send((Object)Self, (Object)symbol44462, 0);((AST_Send)send161172)->info = (AST_Info)info5476;// <=send161173 = (Object)new_AST_Send((Object)send161171, (Object)symbol44136, 1, (Object)send161172);((AST_Send)send161173)->info = (AST_Info)info5476;method41219 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161173);((AST_Method)method41219)->info = (AST_Info)info5476;symbol44301 = (Object)new_Type_Symbol_cached(L"initializeCharacter");methodclosure41122 = (Object)new_Runtime_MethodClosure(method41219);store_method((Type_Class)class6735, (Type_Symbol)symbol44301, (Runtime_MethodClosure)methodclosure41122);// SCParser>>initializeBinaryMessageExpression//initializeBinaryMessageExpression// 	^ PEGParser// 		named: 'BINARY-MESSAGE-EXPRESSION'// 		parsing: (self binarySelector & (self unaryObjectDescription))// 		semantics: [ :parts |// 			ASTBinaryExpression new// 				selector: (self createSymbol: (parts first));// 				argument: (parts at: 2)// 		]string27101 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");constant34734 = (Object)new_AST_Constant((Object)string27101);// binarySelectorsend161174 = (Object)new_AST_Send((Object)Self, (Object)symbol44433, 0);string27102 = (Object)new_Type_String(L"initializeBinaryMessageExpression");string27103 = (Object)new_Type_String(L"initializeBinaryMessageExpression\n\t^ PEGParser\n\t\tnamed: \'BINARY-MESSAGE-EXPRESSION\'\n\t\tparsing: (self binarySelector & (self unaryObjectDescription))\n\t\tsemantics: [ :parts |\n\t\t\tASTBinaryExpression new\n\t\t\t\tselector: (self createSymbol: (parts first));\n\t\t\t\targument: (parts at: 2)\n\t\t]");smallint26924 = (Object)new_Type_SmallInt(-1);smallint26925 = (Object)new_Type_SmallInt(-1);info5477 = (Object)new_AST_Info((Type_String)string27103,(Type_String)string27102, (Type_SmallInt)smallint26924, (Type_SmallInt)smallint26925);((AST_Send)send161174)->info = (AST_Info)info5477;// unaryObjectDescriptionsend161175 = (Object)new_AST_Send((Object)Self, (Object)symbol44432, 0);((AST_Send)send161175)->info = (AST_Info)info5477;// &send161176 = (Object)new_AST_Send((Object)send161174, (Object)SMB__and, 1, (Object)send161175);((AST_Send)send161176)->info = (AST_Info)info5477;localvariable27151 = (Object)new_AST_Variable_named(L"parts");array24232 = (Object)new_Type_Array_with(1, (Object)localvariable27151);localvariable27152 = (Object)new_AST_Variable_named(L"receiver");array24233 = (Object)new_Type_Array_with(1, (Object)localvariable27152);// firstsend161177 = (Object)new_AST_Send((Object)localvariable27151, (Object)symbol44180, 0);((AST_Send)send161177)->info = (AST_Info)info5477;// createSymbol:send161178 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)send161177);((AST_Send)send161178)->info = (AST_Info)info5477;// selector:send161179 = (Object)new_AST_Send((Object)localvariable27152, (Object)symbol44212, 1, (Object)send161178);((AST_Send)send161179)->info = (AST_Info)info5477;smallint26926 = (Object)new_Type_SmallInt(2);constant34735 = (Object)new_AST_Constant((Object)smallint26926);// at:send161180 = (Object)new_AST_Send((Object)localvariable27151, (Object)SMB_at_, 1, (Object)constant34735);((AST_Send)send161180)->info = (AST_Info)info5477;// argument:send161181 = (Object)new_AST_Send((Object)localvariable27152, (Object)symbol44223, 1, (Object)send161180);((AST_Send)send161181)->info = (AST_Info)info5477;block11824 = (Object)new_AST_Block_with((Type_Array)array24233, (Type_Array)empty_Type_Array, 2, 2, send161179, send161181);// newsend161182 = (Object)new_AST_Send((Object)classreference13429, (Object)symbol44095, 0);((AST_Send)send161182)->info = (AST_Info)info5477;// value:send161183 = (Object)new_AST_Send((Object)block11824, (Object)SMB_value_, 1, (Object)send161182);((AST_Send)send161183)->info = (AST_Info)info5477;block11825 = (Object)new_AST_Block_with((Type_Array)array24232, (Type_Array)empty_Type_Array, 1, 1, send161183);// named:parsing:semantics:send161184 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34734, (Object)send161176, (Object)block11825);((AST_Send)send161184)->info = (AST_Info)info5477;method41220 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161184);((AST_Method)method41220)->info = (AST_Info)info5477;symbol44313 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");methodclosure41123 = (Object)new_Runtime_MethodClosure(method41220);store_method((Type_Class)class6735, (Type_Symbol)symbol44313, (Runtime_MethodClosure)methodclosure41123);// SCParser>>initializeBlock//initializeBlock// 	^ PEGParser// 		named: 'BLOCK'// 		// 		parsing: (('[' asPEG omit: true)// 					& (self blockArguments & self bar) optional// 					<& self temporaries optional// 					<& self statements// 					<& (']' asPEG omit: true))// // 		semantics: [ :result |// 			ASTBlock new// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);// 				statements: 	(result at: 3)// 		]string27104 = (Object)new_Type_String(L"BLOCK");constant34736 = (Object)new_AST_Constant((Object)string27104);string27105 = (Object)new_Type_String(L"[");constant34737 = (Object)new_AST_Constant((Object)string27105);// asPEGsend161185 = (Object)new_AST_Send((Object)constant34737, (Object)symbol44131, 0);string27106 = (Object)new_Type_String(L"initializeBlock");string27107 = (Object)new_Type_String(L"initializeBlock\n\t^ PEGParser\n\t\tnamed: \'BLOCK\'\n\t\t\n\t\tparsing: ((\'[\' asPEG omit: true)\n\t\t\t\t\t& (self blockArguments & self bar) optional\n\t\t\t\t\t<& self temporaries optional\n\t\t\t\t\t<& self statements\n\t\t\t\t\t<& (\']\' asPEG omit: true))\n\n\t\tsemantics: [ :result |\n\t\t\tASTBlock new\n\t\t\t\tparameters: ((result first) resultIfFailed: [ OrderedCollection new ]);\n\t\t\t\ttemporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);\n\t\t\t\tstatements: \t(result at: 3)\n\t\t]");smallint26927 = (Object)new_Type_SmallInt(-1);smallint26928 = (Object)new_Type_SmallInt(-1);info5478 = (Object)new_AST_Info((Type_String)string27107,(Type_String)string27106, (Type_SmallInt)smallint26927, (Type_SmallInt)smallint26928);((AST_Send)send161185)->info = (AST_Info)info5478;// omit:send161186 = (Object)new_AST_Send((Object)send161185, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161186)->info = (AST_Info)info5478;symbol44463 = (Object)new_Type_Symbol_cached(L"blockArguments");// blockArgumentssend161187 = (Object)new_AST_Send((Object)Self, (Object)symbol44463, 0);((AST_Send)send161187)->info = (AST_Info)info5478;symbol44464 = (Object)new_Type_Symbol_cached(L"bar");// barsend161188 = (Object)new_AST_Send((Object)Self, (Object)symbol44464, 0);((AST_Send)send161188)->info = (AST_Info)info5478;// &send161189 = (Object)new_AST_Send((Object)send161187, (Object)SMB__and, 1, (Object)send161188);((AST_Send)send161189)->info = (AST_Info)info5478;// optionalsend161190 = (Object)new_AST_Send((Object)send161189, (Object)symbol44338, 0);((AST_Send)send161190)->info = (AST_Info)info5478;// &send161191 = (Object)new_AST_Send((Object)send161186, (Object)SMB__and, 1, (Object)send161190);((AST_Send)send161191)->info = (AST_Info)info5478;// temporariessend161192 = (Object)new_AST_Send((Object)Self, (Object)symbol44230, 0);((AST_Send)send161192)->info = (AST_Info)info5478;// optionalsend161193 = (Object)new_AST_Send((Object)send161192, (Object)symbol44338, 0);((AST_Send)send161193)->info = (AST_Info)info5478;// <&send161194 = (Object)new_AST_Send((Object)send161191, (Object)symbol44372, 1, (Object)send161193);((AST_Send)send161194)->info = (AST_Info)info5478;// statementssend161195 = (Object)new_AST_Send((Object)Self, (Object)symbol44225, 0);((AST_Send)send161195)->info = (AST_Info)info5478;// <&send161196 = (Object)new_AST_Send((Object)send161194, (Object)symbol44372, 1, (Object)send161195);((AST_Send)send161196)->info = (AST_Info)info5478;string27108 = (Object)new_Type_String(L"]");constant34738 = (Object)new_AST_Constant((Object)string27108);// asPEGsend161197 = (Object)new_AST_Send((Object)constant34738, (Object)symbol44131, 0);((AST_Send)send161197)->info = (AST_Info)info5478;// omit:send161198 = (Object)new_AST_Send((Object)send161197, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161198)->info = (AST_Info)info5478;// <&send161199 = (Object)new_AST_Send((Object)send161196, (Object)symbol44372, 1, (Object)send161198);((AST_Send)send161199)->info = (AST_Info)info5478;localvariable27153 = (Object)new_AST_Variable_named(L"result");array24234 = (Object)new_Type_Array_with(1, (Object)localvariable27153);localvariable27154 = (Object)new_AST_Variable_named(L"receiver");array24235 = (Object)new_Type_Array_with(1, (Object)localvariable27154);// firstsend161200 = (Object)new_AST_Send((Object)localvariable27153, (Object)symbol44180, 0);((AST_Send)send161200)->info = (AST_Info)info5478;symbol44379 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");// newsend161201 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);((AST_Send)send161201)->info = (AST_Info)info5478;block11826 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send161201);// resultIfFailed:send161202 = (Object)new_AST_Send((Object)send161200, (Object)symbol44379, 1, (Object)block11826);((AST_Send)send161202)->info = (AST_Info)info5478;// parameters:send161203 = (Object)new_AST_Send((Object)localvariable27154, (Object)symbol44242, 1, (Object)send161202);((AST_Send)send161203)->info = (AST_Info)info5478;smallint26929 = (Object)new_Type_SmallInt(2);constant34739 = (Object)new_AST_Constant((Object)smallint26929);// at:send161204 = (Object)new_AST_Send((Object)localvariable27153, (Object)SMB_at_, 1, (Object)constant34739);((AST_Send)send161204)->info = (AST_Info)info5478;// newsend161205 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);((AST_Send)send161205)->info = (AST_Info)info5478;block11827 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send161205);// resultIfFailed:send161206 = (Object)new_AST_Send((Object)send161204, (Object)symbol44379, 1, (Object)block11827);((AST_Send)send161206)->info = (AST_Info)info5478;// temporaries:send161207 = (Object)new_AST_Send((Object)localvariable27154, (Object)symbol44231, 1, (Object)send161206);((AST_Send)send161207)->info = (AST_Info)info5478;smallint26930 = (Object)new_Type_SmallInt(3);constant34740 = (Object)new_AST_Constant((Object)smallint26930);// at:send161208 = (Object)new_AST_Send((Object)localvariable27153, (Object)SMB_at_, 1, (Object)constant34740);((AST_Send)send161208)->info = (AST_Info)info5478;// statements:send161209 = (Object)new_AST_Send((Object)localvariable27154, (Object)symbol44228, 1, (Object)send161208);((AST_Send)send161209)->info = (AST_Info)info5478;block11828 = (Object)new_AST_Block_with((Type_Array)array24235, (Type_Array)empty_Type_Array, 2, 3, send161203, send161207, send161209);// newsend161210 = (Object)new_AST_Send((Object)classreference13404, (Object)symbol44095, 0);((AST_Send)send161210)->info = (AST_Info)info5478;// value:send161211 = (Object)new_AST_Send((Object)block11828, (Object)SMB_value_, 1, (Object)send161210);((AST_Send)send161211)->info = (AST_Info)info5478;block11829 = (Object)new_AST_Block_with((Type_Array)array24234, (Type_Array)empty_Type_Array, 1, 1, send161211);// named:parsing:semantics:send161212 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34736, (Object)send161199, (Object)block11829);((AST_Send)send161212)->info = (AST_Info)info5478;method41221 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161212);((AST_Method)method41221)->info = (AST_Info)info5478;symbol44257 = (Object)new_Type_Symbol_cached(L"initializeBlock");methodclosure41124 = (Object)new_Runtime_MethodClosure(method41221);store_method((Type_Class)class6735, (Type_Symbol)symbol44257, (Runtime_MethodClosure)methodclosure41124);// SCParser>>createSymbol://createSymbol: anObject// 	anObject isString // 		ifFalse: [ ^ anObject ].// 	^ ASTSymbol named: anObjectlocalvariable27155 = (Object)new_AST_Variable_named(L"anObject");array24236 = (Object)new_Type_Array_with(1, (Object)localvariable27155);variable1870 = (Object)new_AST_Variable_named(L"return");array24237 = (Object)new_Type_Array_with(1, (Object)variable1870);symbol44465 = (Object)new_Type_Symbol_cached(L"isString");// isStringsend161213 = (Object)new_AST_Send((Object)localvariable27155, (Object)symbol44465, 0);string27109 = (Object)new_Type_String(L"createSymbol:");string27110 = (Object)new_Type_String(L"createSymbol: anObject\n\tanObject isString \n\t\tifFalse: [ ^ anObject ].\n\t^ ASTSymbol named: anObject");smallint26931 = (Object)new_Type_SmallInt(-1);smallint26932 = (Object)new_Type_SmallInt(-1);info5479 = (Object)new_AST_Info((Type_String)string27110,(Type_String)string27109, (Type_SmallInt)smallint26931, (Type_SmallInt)smallint26932);((AST_Send)send161213)->info = (AST_Info)info5479;// escape:send161214 = (Object)new_AST_Send((Object)variable1870, (Object)SMB_escape_, 1, (Object)localvariable27155);((AST_Send)send161214)->info = (AST_Info)info5479;block11830 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161214);// ifFalse:send161215 = (Object)new_AST_Send((Object)send161213, (Object)SMB_ifFalse_, 1, (Object)block11830);((AST_Send)send161215)->info = (AST_Info)info5479;// named:send161216 = (Object)new_AST_Send((Object)classreference13421, (Object)symbol44345, 1, (Object)localvariable27155);((AST_Send)send161216)->info = (AST_Info)info5479;block11831 = (Object)new_AST_Block_with((Type_Array)array24237, (Type_Array)empty_Type_Array, 1, 2, send161215, send161216);// on:send161217 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11831);method41222 = (Object)new_AST_Method_with((Type_Array)array24236, (Type_Array)empty_Type_Array, 1, send161217);((AST_Method)method41222)->info = (AST_Info)info5479;methodclosure41125 = (Object)new_Runtime_MethodClosure(method41222);store_method((Type_Class)class6735, (Type_Symbol)symbol44285, (Runtime_MethodClosure)methodclosure41125);// SCParser>>initializeVariableName//initializeVariableName// 	^ PEGParser// 		named: 'VARIABLE-NAME'// 		parsing: self identifier// 		semantics: [:result | self createVariable: result]string27111 = (Object)new_Type_String(L"VARIABLE-NAME");constant34741 = (Object)new_AST_Constant((Object)string27111);// identifiersend161218 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);string27112 = (Object)new_Type_String(L"initializeVariableName");string27113 = (Object)new_Type_String(L"initializeVariableName\n\t^ PEGParser\n\t\tnamed: \'VARIABLE-NAME\'\n\t\tparsing: self identifier\n\t\tsemantics: [:result | self createVariable: result]");smallint26933 = (Object)new_Type_SmallInt(-1);smallint26934 = (Object)new_Type_SmallInt(-1);info5480 = (Object)new_AST_Info((Type_String)string27113,(Type_String)string27112, (Type_SmallInt)smallint26933, (Type_SmallInt)smallint26934);((AST_Send)send161218)->info = (AST_Info)info5480;localvariable27156 = (Object)new_AST_Variable_named(L"result");array24238 = (Object)new_Type_Array_with(1, (Object)localvariable27156);symbol44276 = (Object)new_Type_Symbol_cached(L"createVariable:");// createVariable:send161219 = (Object)new_AST_Send((Object)Self, (Object)symbol44276, 1, (Object)localvariable27156);((AST_Send)send161219)->info = (AST_Info)info5480;block11832 = (Object)new_AST_Block_with((Type_Array)array24238, (Type_Array)empty_Type_Array, 1, 1, send161219);// named:parsing:semantics:send161220 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34741, (Object)send161218, (Object)block11832);((AST_Send)send161220)->info = (AST_Info)info5480;method41223 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161220);((AST_Method)method41223)->info = (AST_Info)info5480;symbol44297 = (Object)new_Type_Symbol_cached(L"initializeVariableName");methodclosure41126 = (Object)new_Runtime_MethodClosure(method41223);store_method((Type_Class)class6735, (Type_Symbol)symbol44297, (Runtime_MethodClosure)methodclosure41126);// SCParser>>initializeMessageExpression//initializeMessageExpression// 	self expression.// 	" expression will build this parser. "// 	^ self messageExpression separator: (self separator).// expressionsend161221 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);string27114 = (Object)new_Type_String(L"initializeMessageExpression");string27115 = (Object)new_Type_String(L"initializeMessageExpression\n\tself expression.\n\t\" expression will build this parser. \"\n\t^ self messageExpression separator: (self separator).");smallint26935 = (Object)new_Type_SmallInt(-1);smallint26936 = (Object)new_Type_SmallInt(-1);info5481 = (Object)new_AST_Info((Type_String)string27115,(Type_String)string27114, (Type_SmallInt)smallint26935, (Type_SmallInt)smallint26936);((AST_Send)send161221)->info = (AST_Info)info5481;// messageExpressionsend161222 = (Object)new_AST_Send((Object)Self, (Object)symbol44423, 0);((AST_Send)send161222)->info = (AST_Info)info5481;// separatorsend161223 = (Object)new_AST_Send((Object)Self, (Object)symbol44342, 0);((AST_Send)send161223)->info = (AST_Info)info5481;// separator:send161224 = (Object)new_AST_Send((Object)send161222, (Object)symbol44348, 1, (Object)send161223);((AST_Send)send161224)->info = (AST_Info)info5481;method41224 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send161221, send161224);((AST_Method)method41224)->info = (AST_Info)info5481;symbol44250 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");methodclosure41127 = (Object)new_Runtime_MethodClosure(method41224);store_method((Type_Class)class6735, (Type_Symbol)symbol44250, (Runtime_MethodClosure)methodclosure41127);// SCParser>>initializeBlockArguments//initializeBlockArguments// 	^ PEGParser// 		named: 'BLOCK-ARGUMENTS'// 		parsing: ((':' asPEG omit: true) & self identifier) plus// 		semantics: [ :result |// 			result collect: [ :variable | self createVariable: variable ]// 		]string27116 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");constant34742 = (Object)new_AST_Constant((Object)string27116);string27117 = (Object)new_Type_String(L":");constant34743 = (Object)new_AST_Constant((Object)string27117);// asPEGsend161225 = (Object)new_AST_Send((Object)constant34743, (Object)symbol44131, 0);string27118 = (Object)new_Type_String(L"initializeBlockArguments");string27119 = (Object)new_Type_String(L"initializeBlockArguments\n\t^ PEGParser\n\t\tnamed: \'BLOCK-ARGUMENTS\'\n\t\tparsing: ((\':\' asPEG omit: true) & self identifier) plus\n\t\tsemantics: [ :result |\n\t\t\tresult collect: [ :variable | self createVariable: variable ]\n\t\t]");smallint26937 = (Object)new_Type_SmallInt(-1);smallint26938 = (Object)new_Type_SmallInt(-1);info5482 = (Object)new_AST_Info((Type_String)string27119,(Type_String)string27118, (Type_SmallInt)smallint26937, (Type_SmallInt)smallint26938);((AST_Send)send161225)->info = (AST_Info)info5482;// omit:send161226 = (Object)new_AST_Send((Object)send161225, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161226)->info = (AST_Info)info5482;// identifiersend161227 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);((AST_Send)send161227)->info = (AST_Info)info5482;// &send161228 = (Object)new_AST_Send((Object)send161226, (Object)SMB__and, 1, (Object)send161227);((AST_Send)send161228)->info = (AST_Info)info5482;// plussend161229 = (Object)new_AST_Send((Object)send161228, (Object)symbol44335, 0);((AST_Send)send161229)->info = (AST_Info)info5482;localvariable27157 = (Object)new_AST_Variable_named(L"result");array24239 = (Object)new_Type_Array_with(1, (Object)localvariable27157);localvariable27158 = (Object)new_AST_Variable_named(L"variable");array24240 = (Object)new_Type_Array_with(1, (Object)localvariable27158);// createVariable:send161230 = (Object)new_AST_Send((Object)Self, (Object)symbol44276, 1, (Object)localvariable27158);((AST_Send)send161230)->info = (AST_Info)info5482;block11833 = (Object)new_AST_Block_with((Type_Array)array24240, (Type_Array)empty_Type_Array, 2, 1, send161230);// collect:send161231 = (Object)new_AST_Send((Object)localvariable27157, (Object)symbol44435, 1, (Object)block11833);((AST_Send)send161231)->info = (AST_Info)info5482;block11834 = (Object)new_AST_Block_with((Type_Array)array24239, (Type_Array)empty_Type_Array, 1, 1, send161231);// named:parsing:semantics:send161232 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34742, (Object)send161229, (Object)block11834);((AST_Send)send161232)->info = (AST_Info)info5482;method41225 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161232);((AST_Method)method41225)->info = (AST_Info)info5482;symbol44267 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");methodclosure41128 = (Object)new_Runtime_MethodClosure(method41225);store_method((Type_Class)class6735, (Type_Symbol)symbol44267, (Runtime_MethodClosure)methodclosure41128);// SCParser>>initializeBinarySelector//initializeBinarySelector// 	^ PEGParser// 		named: 'BINARY-SELECTOR'// // 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)// 					| '|' )// 							// 		semantics: [ :result |// 			result isString// 				ifTrue: [ self createSymbol: result ]// 				ifFalse: [// 					self createSymbol: // 						(result second // 							inject: result first // 							into: [ :c :e | c, e ]) ]// 		]string27120 = (Object)new_Type_String(L"BINARY-SELECTOR");constant34744 = (Object)new_AST_Constant((Object)string27120);// specialCharactersend161233 = (Object)new_AST_Send((Object)Self, (Object)symbol44462, 0);string27121 = (Object)new_Type_String(L"initializeBinarySelector");string27122 = (Object)new_Type_String(L"initializeBinarySelector\n\t^ PEGParser\n\t\tnamed: \'BINARY-SELECTOR\'\n\n\t\tparsing: ((\t(self specialCharacter | \'-\') && (self specialCharacter) strongTimes)\n\t\t\t\t\t| \'|\' )\n\t\t\t\t\t\t\t\n\t\tsemantics: [ :result |\n\t\t\tresult isString\n\t\t\t\tifTrue: [ self createSymbol: result ]\n\t\t\t\tifFalse: [\n\t\t\t\t\tself createSymbol: \n\t\t\t\t\t\t(result second \n\t\t\t\t\t\t\tinject: result first \n\t\t\t\t\t\t\tinto: [ :c :e | c, e ]) ]\n\t\t]");smallint26939 = (Object)new_Type_SmallInt(-1);smallint26940 = (Object)new_Type_SmallInt(-1);info5483 = (Object)new_AST_Info((Type_String)string27122,(Type_String)string27121, (Type_SmallInt)smallint26939, (Type_SmallInt)smallint26940);((AST_Send)send161233)->info = (AST_Info)info5483;string27123 = (Object)new_Type_String(L"-");constant34745 = (Object)new_AST_Constant((Object)string27123);// |send161234 = (Object)new_AST_Send((Object)send161233, (Object)SMB__or, 1, (Object)constant34745);((AST_Send)send161234)->info = (AST_Info)info5483;// specialCharactersend161235 = (Object)new_AST_Send((Object)Self, (Object)symbol44462, 0);((AST_Send)send161235)->info = (AST_Info)info5483;// strongTimessend161236 = (Object)new_AST_Send((Object)send161235, (Object)symbol44331, 0);((AST_Send)send161236)->info = (AST_Info)info5483;// &&send161237 = (Object)new_AST_Send((Object)send161234, (Object)symbol44326, 1, (Object)send161236);((AST_Send)send161237)->info = (AST_Info)info5483;string27124 = (Object)new_Type_String(L"|");constant34746 = (Object)new_AST_Constant((Object)string27124);// |send161238 = (Object)new_AST_Send((Object)send161237, (Object)SMB__or, 1, (Object)constant34746);((AST_Send)send161238)->info = (AST_Info)info5483;localvariable27159 = (Object)new_AST_Variable_named(L"result");array24241 = (Object)new_Type_Array_with(1, (Object)localvariable27159);// isStringsend161239 = (Object)new_AST_Send((Object)localvariable27159, (Object)symbol44465, 0);((AST_Send)send161239)->info = (AST_Info)info5483;// createSymbol:send161240 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)localvariable27159);((AST_Send)send161240)->info = (AST_Info)info5483;block11835 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161240);// secondsend161241 = (Object)new_AST_Send((Object)localvariable27159, (Object)symbol44436, 0);((AST_Send)send161241)->info = (AST_Info)info5483;// firstsend161242 = (Object)new_AST_Send((Object)localvariable27159, (Object)symbol44180, 0);((AST_Send)send161242)->info = (AST_Info)info5483;localvariable27160 = (Object)new_AST_Variable_named(L"c");localvariable27161 = (Object)new_AST_Variable_named(L"e");array24242 = (Object)new_Type_Array_with(2, (Object)localvariable27160, (Object)localvariable27161);// ,send161243 = (Object)new_AST_Send((Object)localvariable27160, (Object)SMB__concat, 1, (Object)localvariable27161);((AST_Send)send161243)->info = (AST_Info)info5483;block11836 = (Object)new_AST_Block_with((Type_Array)array24242, (Type_Array)empty_Type_Array, 3, 1, send161243);// inject:into:send161244 = (Object)new_AST_Send((Object)send161241, (Object)symbol44184, 2, (Object)send161242, (Object)block11836);((AST_Send)send161244)->info = (AST_Info)info5483;// createSymbol:send161245 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)send161244);((AST_Send)send161245)->info = (AST_Info)info5483;block11837 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161245);// ifTrue:ifFalse:send161246 = (Object)new_AST_Send((Object)send161239, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block11835, (Object)block11837);((AST_Send)send161246)->info = (AST_Info)info5483;block11838 = (Object)new_AST_Block_with((Type_Array)array24241, (Type_Array)empty_Type_Array, 1, 1, send161246);// named:parsing:semantics:send161247 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34744, (Object)send161238, (Object)block11838);((AST_Send)send161247)->info = (AST_Info)info5483;method41226 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161247);((AST_Method)method41226)->info = (AST_Info)info5483;symbol44290 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");methodclosure41129 = (Object)new_Runtime_MethodClosure(method41226);store_method((Type_Class)class6735, (Type_Symbol)symbol44290, (Runtime_MethodClosure)methodclosure41129);// SCParser>>initializeReturn//initializeReturn// 	^ PEGParser// 		named: 'RETURN'// 		parsing: ('^' asPEG omit: true) & self finalExpression// 		semantics: [ :expression |// 			ASTReturnExpression new expression: expression// 		]string27125 = (Object)new_Type_String(L"RETURN");constant34747 = (Object)new_AST_Constant((Object)string27125);string27126 = (Object)new_Type_String(L"^");constant34748 = (Object)new_AST_Constant((Object)string27126);// asPEGsend161248 = (Object)new_AST_Send((Object)constant34748, (Object)symbol44131, 0);string27127 = (Object)new_Type_String(L"initializeReturn");string27128 = (Object)new_Type_String(L"initializeReturn\n\t^ PEGParser\n\t\tnamed: \'RETURN\'\n\t\tparsing: (\'^\' asPEG omit: true) & self finalExpression\n\t\tsemantics: [ :expression |\n\t\t\tASTReturnExpression new expression: expression\n\t\t]");smallint26941 = (Object)new_Type_SmallInt(-1);smallint26942 = (Object)new_Type_SmallInt(-1);info5484 = (Object)new_AST_Info((Type_String)string27128,(Type_String)string27127, (Type_SmallInt)smallint26941, (Type_SmallInt)smallint26942);((AST_Send)send161248)->info = (AST_Info)info5484;// omit:send161249 = (Object)new_AST_Send((Object)send161248, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161249)->info = (AST_Info)info5484;symbol44466 = (Object)new_Type_Symbol_cached(L"finalExpression");// finalExpressionsend161250 = (Object)new_AST_Send((Object)Self, (Object)symbol44466, 0);((AST_Send)send161250)->info = (AST_Info)info5484;// &send161251 = (Object)new_AST_Send((Object)send161249, (Object)SMB__and, 1, (Object)send161250);((AST_Send)send161251)->info = (AST_Info)info5484;localvariable27162 = (Object)new_AST_Variable_named(L"expression");array24243 = (Object)new_Type_Array_with(1, (Object)localvariable27162);// newsend161252 = (Object)new_AST_Send((Object)classreference13405, (Object)symbol44095, 0);((AST_Send)send161252)->info = (AST_Info)info5484;// expression:send161253 = (Object)new_AST_Send((Object)send161252, (Object)symbol44203, 1, (Object)localvariable27162);((AST_Send)send161253)->info = (AST_Info)info5484;block11839 = (Object)new_AST_Block_with((Type_Array)array24243, (Type_Array)empty_Type_Array, 1, 1, send161253);// named:parsing:semantics:send161254 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34747, (Object)send161251, (Object)block11839);((AST_Send)send161254)->info = (AST_Info)info5484;method41227 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161254);((AST_Method)method41227)->info = (AST_Info)info5484;symbol44279 = (Object)new_Type_Symbol_cached(L"initializeReturn");methodclosure41130 = (Object)new_Runtime_MethodClosure(method41227);store_method((Type_Class)class6735, (Type_Symbol)symbol44279, (Runtime_MethodClosure)methodclosure41130);// SCParser>>assignmentOp//assignmentOp// 	^ (':=' asPEG | '_') omit: truestring27129 = (Object)new_Type_String(L":=");constant34749 = (Object)new_AST_Constant((Object)string27129);// asPEGsend161255 = (Object)new_AST_Send((Object)constant34749, (Object)symbol44131, 0);string27130 = (Object)new_Type_String(L"assignmentOp");string27131 = (Object)new_Type_String(L"assignmentOp\n\t^ (\':=\' asPEG | \'_\') omit: true");smallint26943 = (Object)new_Type_SmallInt(-1);smallint26944 = (Object)new_Type_SmallInt(-1);info5485 = (Object)new_AST_Info((Type_String)string27131,(Type_String)string27130, (Type_SmallInt)smallint26943, (Type_SmallInt)smallint26944);((AST_Send)send161255)->info = (AST_Info)info5485;string27132 = (Object)new_Type_String(L"_");constant34750 = (Object)new_AST_Constant((Object)string27132);// |send161256 = (Object)new_AST_Send((Object)send161255, (Object)SMB__or, 1, (Object)constant34750);((AST_Send)send161256)->info = (AST_Info)info5485;// omit:send161257 = (Object)new_AST_Send((Object)send161256, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161257)->info = (AST_Info)info5485;method41228 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161257);((AST_Method)method41228)->info = (AST_Info)info5485;symbol44305 = (Object)new_Type_Symbol_cached(L"assignmentOp");methodclosure41131 = (Object)new_Runtime_MethodClosure(method41228);store_method((Type_Class)class6735, (Type_Symbol)symbol44305, (Runtime_MethodClosure)methodclosure41131);// SCParser>>initializeExpression//initializeExpression// 	| variables expression |// 	" Prestoring required parsers to handle circular references. "// 	self preStorePrimary.// 	self preStoreMessageExpression.// 	self preStoreCascadedMessageExpression.// 	// 	parsers at: #expression put: (// 		// 	PEGParser// 		named: 'EXPRESSION'// 		// 		parsing: self assignmentExpressions// 					& (self cascadedMessageExpression// 						| self messageExpression// 						<= self primary)// 		// 		semantics: [ :result |// 			variables := result first.// 			expression := result at: 2.// 			variables reverse do: [ :variable |// 				expression := ASTAssignmentExpression new// 								expression: expression;// 								variable: variable// 			].// 			expression// 		]// 	).// 	" After having built the expression parser, we inject the parsers into their stubs. "// 	self injectPrimary.// 	self injectMessageExpression.// 	self injectCascadedMessageExpression.// 	// 	^ parsers at: #expressionlocalvariable27163 = (Object)new_AST_Variable_named(L"variables");localvariable27164 = (Object)new_AST_Variable_named(L"expression");array24244 = (Object)new_Type_Array_with(2, (Object)localvariable27163, (Object)localvariable27164);// preStorePrimarysend161258 = (Object)new_AST_Send((Object)Self, (Object)symbol44292, 0);string27133 = (Object)new_Type_String(L"initializeExpression");string27134 = (Object)new_Type_String(L"initializeExpression\n\t| variables expression |\n\t\" Prestoring required parsers to handle circular references. \"\n\tself preStorePrimary.\n\tself preStoreMessageExpression.\n\tself preStoreCascadedMessageExpression.\n\t\n\tparsers at: #expression put: (\n\t\t\n\tPEGParser\n\t\tnamed: \'EXPRESSION\'\n\t\t\n\t\tparsing: self assignmentExpressions\n\t\t\t\t\t& (self cascadedMessageExpression\n\t\t\t\t\t\t| self messageExpression\n\t\t\t\t\t\t<= self primary)\n\t\t\n\t\tsemantics: [ :result |\n\t\t\tvariables := result first.\n\t\t\texpression := result at: 2.\n\t\t\tvariables reverse do: [ :variable |\n\t\t\t\texpression := ASTAssignmentExpression new\n\t\t\t\t\t\t\t\texpression: expression;\n\t\t\t\t\t\t\t\tvariable: variable\n\t\t\t].\n\t\t\texpression\n\t\t]\n\t).\n\t\" After having built the expression parser, we inject the parsers into their stubs. \"\n\tself injectPrimary.\n\tself injectMessageExpression.\n\tself injectCascadedMessageExpression.\n\t\n\t^ parsers at: #expression");smallint26945 = (Object)new_Type_SmallInt(-1);smallint26946 = (Object)new_Type_SmallInt(-1);info5486 = (Object)new_AST_Info((Type_String)string27134,(Type_String)string27133, (Type_SmallInt)smallint26945, (Type_SmallInt)smallint26946);((AST_Send)send161258)->info = (AST_Info)info5486;// preStoreMessageExpressionsend161259 = (Object)new_AST_Send((Object)Self, (Object)symbol44288, 0);((AST_Send)send161259)->info = (AST_Info)info5486;symbol44264 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");// preStoreCascadedMessageExpressionsend161260 = (Object)new_AST_Send((Object)Self, (Object)symbol44264, 0);((AST_Send)send161260)->info = (AST_Info)info5486;constant34751 = (Object)new_AST_Constant((Object)symbol44200);string27135 = (Object)new_Type_String(L"EXPRESSION");constant34752 = (Object)new_AST_Constant((Object)string27135);symbol44467 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");// assignmentExpressionssend161261 = (Object)new_AST_Send((Object)Self, (Object)symbol44467, 0);((AST_Send)send161261)->info = (AST_Info)info5486;// cascadedMessageExpressionsend161262 = (Object)new_AST_Send((Object)Self, (Object)symbol44455, 0);((AST_Send)send161262)->info = (AST_Info)info5486;// &send161263 = (Object)new_AST_Send((Object)send161261, (Object)SMB__and, 1, (Object)send161262);((AST_Send)send161263)->info = (AST_Info)info5486;// messageExpressionsend161264 = (Object)new_AST_Send((Object)Self, (Object)symbol44423, 0);((AST_Send)send161264)->info = (AST_Info)info5486;// |send161265 = (Object)new_AST_Send((Object)send161263, (Object)SMB__or, 1, (Object)send161264);((AST_Send)send161265)->info = (AST_Info)info5486;// primarysend161266 = (Object)new_AST_Send((Object)Self, (Object)symbol44439, 0);((AST_Send)send161266)->info = (AST_Info)info5486;// <=send161267 = (Object)new_AST_Send((Object)send161265, (Object)symbol44136, 1, (Object)send161266);((AST_Send)send161267)->info = (AST_Info)info5486;localvariable27165 = (Object)new_AST_Variable_named(L"result");array24245 = (Object)new_Type_Array_with(1, (Object)localvariable27165);// firstsend161268 = (Object)new_AST_Send((Object)localvariable27165, (Object)symbol44180, 0);((AST_Send)send161268)->info = (AST_Info)info5486;assign20227 = (Object)new_AST_Assign((Object)localvariable27163, (Object)send161268);smallint26947 = (Object)new_Type_SmallInt(2);constant34753 = (Object)new_AST_Constant((Object)smallint26947);// at:send161269 = (Object)new_AST_Send((Object)localvariable27165, (Object)SMB_at_, 1, (Object)constant34753);((AST_Send)send161269)->info = (AST_Info)info5486;assign20228 = (Object)new_AST_Assign((Object)localvariable27164, (Object)send161269);symbol44468 = (Object)new_Type_Symbol_cached(L"reverse");// reversesend161270 = (Object)new_AST_Send((Object)localvariable27163, (Object)symbol44468, 0);((AST_Send)send161270)->info = (AST_Info)info5486;localvariable27166 = (Object)new_AST_Variable_named(L"variable");array24246 = (Object)new_Type_Array_with(1, (Object)localvariable27166);localvariable27167 = (Object)new_AST_Variable_named(L"receiver");array24247 = (Object)new_Type_Array_with(1, (Object)localvariable27167);// expression:send161271 = (Object)new_AST_Send((Object)localvariable27167, (Object)symbol44203, 1, (Object)localvariable27164);((AST_Send)send161271)->info = (AST_Info)info5486;// variable:send161272 = (Object)new_AST_Send((Object)localvariable27167, (Object)symbol44201, 1, (Object)localvariable27166);((AST_Send)send161272)->info = (AST_Info)info5486;block11840 = (Object)new_AST_Block_with((Type_Array)array24247, (Type_Array)empty_Type_Array, 3, 2, send161271, send161272);// newsend161273 = (Object)new_AST_Send((Object)classreference13396, (Object)symbol44095, 0);((AST_Send)send161273)->info = (AST_Info)info5486;// value:send161274 = (Object)new_AST_Send((Object)block11840, (Object)SMB_value_, 1, (Object)send161273);((AST_Send)send161274)->info = (AST_Info)info5486;assign20229 = (Object)new_AST_Assign((Object)localvariable27164, (Object)send161274);block11841 = (Object)new_AST_Block_with((Type_Array)array24246, (Type_Array)empty_Type_Array, 2, 1, assign20229);// do:send161275 = (Object)new_AST_Send((Object)send161270, (Object)symbol44127, 1, (Object)block11841);((AST_Send)send161275)->info = (AST_Info)info5486;block11842 = (Object)new_AST_Block_with((Type_Array)array24245, (Type_Array)empty_Type_Array, 1, 4, assign20227, assign20228, send161275, localvariable27164);// named:parsing:semantics:send161276 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34752, (Object)send161267, (Object)block11842);((AST_Send)send161276)->info = (AST_Info)info5486;// at:put:send161277 = (Object)new_AST_Send((Object)instancevariable16406, (Object)SMB_at_put_, 2, (Object)constant34751, (Object)send161276);((AST_Send)send161277)->info = (AST_Info)info5486;// injectPrimarysend161278 = (Object)new_AST_Send((Object)Self, (Object)symbol44263, 0);((AST_Send)send161278)->info = (AST_Info)info5486;// injectMessageExpressionsend161279 = (Object)new_AST_Send((Object)Self, (Object)symbol44306, 0);((AST_Send)send161279)->info = (AST_Info)info5486;// injectCascadedMessageExpressionsend161280 = (Object)new_AST_Send((Object)Self, (Object)symbol44293, 0);((AST_Send)send161280)->info = (AST_Info)info5486;constant34754 = (Object)new_AST_Constant((Object)symbol44200);// at:send161281 = (Object)new_AST_Send((Object)instancevariable16406, (Object)SMB_at_, 1, (Object)constant34754);((AST_Send)send161281)->info = (AST_Info)info5486;method41229 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24244, 8, send161258, send161259, send161260, send161277, send161278, send161279, send161280, send161281);((AST_Method)method41229)->info = (AST_Info)info5486;symbol44249 = (Object)new_Type_Symbol_cached(L"initializeExpression");methodclosure41132 = (Object)new_Runtime_MethodClosure(method41229);store_method((Type_Class)class6735, (Type_Symbol)symbol44249, (Runtime_MethodClosure)methodclosure41132);// SCParser>>initializeBinaryMessageDefinition//initializeBinaryMessageDefinition// 	^ PEGParser// 		named: 'BINARY-ARGUMENT'// 		parsing: (self binarySelector & self parameterName)// 		semantics: [:result |// 			ASTBinaryMessageDefinition new// 				selector: (self createSymbol: (result first));// 				parameter: (self createVariable: (result at: 2))// 		]string27136 = (Object)new_Type_String(L"BINARY-ARGUMENT");constant34755 = (Object)new_AST_Constant((Object)string27136);// binarySelectorsend161282 = (Object)new_AST_Send((Object)Self, (Object)symbol44433, 0);string27137 = (Object)new_Type_String(L"initializeBinaryMessageDefinition");string27138 = (Object)new_Type_String(L"initializeBinaryMessageDefinition\n\t^ PEGParser\n\t\tnamed: \'BINARY-ARGUMENT\'\n\t\tparsing: (self binarySelector & self parameterName)\n\t\tsemantics: [:result |\n\t\t\tASTBinaryMessageDefinition new\n\t\t\t\tselector: (self createSymbol: (result first));\n\t\t\t\tparameter: (self createVariable: (result at: 2))\n\t\t]");smallint26948 = (Object)new_Type_SmallInt(-1);smallint26949 = (Object)new_Type_SmallInt(-1);info5487 = (Object)new_AST_Info((Type_String)string27138,(Type_String)string27137, (Type_SmallInt)smallint26948, (Type_SmallInt)smallint26949);((AST_Send)send161282)->info = (AST_Info)info5487;symbol44469 = (Object)new_Type_Symbol_cached(L"parameterName");// parameterNamesend161283 = (Object)new_AST_Send((Object)Self, (Object)symbol44469, 0);((AST_Send)send161283)->info = (AST_Info)info5487;// &send161284 = (Object)new_AST_Send((Object)send161282, (Object)SMB__and, 1, (Object)send161283);((AST_Send)send161284)->info = (AST_Info)info5487;localvariable27168 = (Object)new_AST_Variable_named(L"result");array24248 = (Object)new_Type_Array_with(1, (Object)localvariable27168);localvariable27169 = (Object)new_AST_Variable_named(L"receiver");array24249 = (Object)new_Type_Array_with(1, (Object)localvariable27169);// firstsend161285 = (Object)new_AST_Send((Object)localvariable27168, (Object)symbol44180, 0);((AST_Send)send161285)->info = (AST_Info)info5487;// createSymbol:send161286 = (Object)new_AST_Send((Object)Self, (Object)symbol44285, 1, (Object)send161285);((AST_Send)send161286)->info = (AST_Info)info5487;// selector:send161287 = (Object)new_AST_Send((Object)localvariable27169, (Object)symbol44212, 1, (Object)send161286);((AST_Send)send161287)->info = (AST_Info)info5487;smallint26950 = (Object)new_Type_SmallInt(2);constant34756 = (Object)new_AST_Constant((Object)smallint26950);// at:send161288 = (Object)new_AST_Send((Object)localvariable27168, (Object)SMB_at_, 1, (Object)constant34756);((AST_Send)send161288)->info = (AST_Info)info5487;// createVariable:send161289 = (Object)new_AST_Send((Object)Self, (Object)symbol44276, 1, (Object)send161288);((AST_Send)send161289)->info = (AST_Info)info5487;// parameter:send161290 = (Object)new_AST_Send((Object)localvariable27169, (Object)symbol44222, 1, (Object)send161289);((AST_Send)send161290)->info = (AST_Info)info5487;block11843 = (Object)new_AST_Block_with((Type_Array)array24249, (Type_Array)empty_Type_Array, 2, 2, send161287, send161290);// newsend161291 = (Object)new_AST_Send((Object)classreference13418, (Object)symbol44095, 0);((AST_Send)send161291)->info = (AST_Info)info5487;// value:send161292 = (Object)new_AST_Send((Object)block11843, (Object)SMB_value_, 1, (Object)send161291);((AST_Send)send161292)->info = (AST_Info)info5487;block11844 = (Object)new_AST_Block_with((Type_Array)array24248, (Type_Array)empty_Type_Array, 1, 1, send161292);// named:parsing:semantics:send161293 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34755, (Object)send161284, (Object)block11844);((AST_Send)send161293)->info = (AST_Info)info5487;method41230 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161293);((AST_Method)method41230)->info = (AST_Info)info5487;symbol44272 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");methodclosure41133 = (Object)new_Runtime_MethodClosure(method41230);store_method((Type_Class)class6735, (Type_Symbol)symbol44272, (Runtime_MethodClosure)methodclosure41133);// SCParser>>initializeLetter//initializeLetter// 	^ (self lowercase | self uppercase)symbol44470 = (Object)new_Type_Symbol_cached(L"lowercase");// lowercasesend161294 = (Object)new_AST_Send((Object)Self, (Object)symbol44470, 0);string27139 = (Object)new_Type_String(L"initializeLetter");string27140 = (Object)new_Type_String(L"initializeLetter\n\t^ (self lowercase | self uppercase)");smallint26951 = (Object)new_Type_SmallInt(-1);smallint26952 = (Object)new_Type_SmallInt(-1);info5488 = (Object)new_AST_Info((Type_String)string27140,(Type_String)string27139, (Type_SmallInt)smallint26951, (Type_SmallInt)smallint26952);((AST_Send)send161294)->info = (AST_Info)info5488;// uppercasesend161295 = (Object)new_AST_Send((Object)Self, (Object)symbol44443, 0);((AST_Send)send161295)->info = (AST_Info)info5488;// |send161296 = (Object)new_AST_Send((Object)send161294, (Object)SMB__or, 1, (Object)send161295);((AST_Send)send161296)->info = (AST_Info)info5488;method41231 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161296);((AST_Method)method41231)->info = (AST_Info)info5488;symbol44317 = (Object)new_Type_Symbol_cached(L"initializeLetter");methodclosure41134 = (Object)new_Runtime_MethodClosure(method41231);store_method((Type_Class)class6735, (Type_Symbol)symbol44317, (Runtime_MethodClosure)methodclosure41134);// SCParser>>initializeStatements//initializeStatements// 	^ PEGParser// 		named: 'STATEMENTS'// 		// 		parsing: self subExpression times & (self return | self finalExpression) optional// 		// 		semantics: [ :result |// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].// 			result first// 		]string27141 = (Object)new_Type_String(L"STATEMENTS");constant34757 = (Object)new_AST_Constant((Object)string27141);// subExpressionsend161297 = (Object)new_AST_Send((Object)Self, (Object)symbol44446, 0);string27142 = (Object)new_Type_String(L"initializeStatements");string27143 = (Object)new_Type_String(L"initializeStatements\n\t^ PEGParser\n\t\tnamed: \'STATEMENTS\'\n\t\t\n\t\tparsing: self subExpression times & (self return | self finalExpression) optional\n\t\t\n\t\tsemantics: [ :result |\n\t\t\t(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].\n\t\t\tresult first\n\t\t]");smallint26953 = (Object)new_Type_SmallInt(-1);smallint26954 = (Object)new_Type_SmallInt(-1);info5489 = (Object)new_AST_Info((Type_String)string27143,(Type_String)string27142, (Type_SmallInt)smallint26953, (Type_SmallInt)smallint26954);((AST_Send)send161297)->info = (AST_Info)info5489;// timessend161298 = (Object)new_AST_Send((Object)send161297, (Object)symbol44340, 0);((AST_Send)send161298)->info = (AST_Info)info5489;symbol44471 = (Object)new_Type_Symbol_cached(L"return");// returnsend161299 = (Object)new_AST_Send((Object)Self, (Object)symbol44471, 0);((AST_Send)send161299)->info = (AST_Info)info5489;// finalExpressionsend161300 = (Object)new_AST_Send((Object)Self, (Object)symbol44466, 0);((AST_Send)send161300)->info = (AST_Info)info5489;// |send161301 = (Object)new_AST_Send((Object)send161299, (Object)SMB__or, 1, (Object)send161300);((AST_Send)send161301)->info = (AST_Info)info5489;// optionalsend161302 = (Object)new_AST_Send((Object)send161301, (Object)symbol44338, 0);((AST_Send)send161302)->info = (AST_Info)info5489;// &send161303 = (Object)new_AST_Send((Object)send161298, (Object)SMB__and, 1, (Object)send161302);((AST_Send)send161303)->info = (AST_Info)info5489;localvariable27170 = (Object)new_AST_Variable_named(L"result");array24250 = (Object)new_Type_Array_with(1, (Object)localvariable27170);smallint26955 = (Object)new_Type_SmallInt(2);constant34758 = (Object)new_AST_Constant((Object)smallint26955);// at:send161304 = (Object)new_AST_Send((Object)localvariable27170, (Object)SMB_at_, 1, (Object)constant34758);((AST_Send)send161304)->info = (AST_Info)info5489;symbol44381 = (Object)new_Type_Symbol_cached(L"ifMatched:");localvariable27171 = (Object)new_AST_Variable_named(L"exp");array24251 = (Object)new_Type_Array_with(1, (Object)localvariable27171);// firstsend161305 = (Object)new_AST_Send((Object)localvariable27170, (Object)symbol44180, 0);((AST_Send)send161305)->info = (AST_Info)info5489;// add:send161306 = (Object)new_AST_Send((Object)send161305, (Object)symbol44183, 1, (Object)localvariable27171);((AST_Send)send161306)->info = (AST_Info)info5489;block11845 = (Object)new_AST_Block_with((Type_Array)array24251, (Type_Array)empty_Type_Array, 2, 1, send161306);// ifMatched:send161307 = (Object)new_AST_Send((Object)send161304, (Object)symbol44381, 1, (Object)block11845);((AST_Send)send161307)->info = (AST_Info)info5489;// firstsend161308 = (Object)new_AST_Send((Object)localvariable27170, (Object)symbol44180, 0);((AST_Send)send161308)->info = (AST_Info)info5489;block11846 = (Object)new_AST_Block_with((Type_Array)array24250, (Type_Array)empty_Type_Array, 1, 2, send161307, send161308);// named:parsing:semantics:send161309 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34757, (Object)send161303, (Object)block11846);((AST_Send)send161309)->info = (AST_Info)info5489;method41232 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161309);((AST_Method)method41232)->info = (AST_Info)info5489;symbol44289 = (Object)new_Type_Symbol_cached(L"initializeStatements");methodclosure41135 = (Object)new_Runtime_MethodClosure(method41232);store_method((Type_Class)class6735, (Type_Symbol)symbol44289, (Runtime_MethodClosure)methodclosure41135);// SCParser>>initializeScopedExpression//initializeScopedExpression// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))string27144 = (Object)new_Type_String(L"(");constant34759 = (Object)new_AST_Constant((Object)string27144);// asPEGsend161310 = (Object)new_AST_Send((Object)constant34759, (Object)symbol44131, 0);string27145 = (Object)new_Type_String(L"initializeScopedExpression");string27146 = (Object)new_Type_String(L"initializeScopedExpression\n\t^  ((\'(\' asPEG omit: true) & self expression <& (\')\' asPEG omit: true))");smallint26956 = (Object)new_Type_SmallInt(-1);smallint26957 = (Object)new_Type_SmallInt(-1);info5490 = (Object)new_AST_Info((Type_String)string27146,(Type_String)string27145, (Type_SmallInt)smallint26956, (Type_SmallInt)smallint26957);((AST_Send)send161310)->info = (AST_Info)info5490;// omit:send161311 = (Object)new_AST_Send((Object)send161310, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161311)->info = (AST_Info)info5490;// expressionsend161312 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);((AST_Send)send161312)->info = (AST_Info)info5490;// &send161313 = (Object)new_AST_Send((Object)send161311, (Object)SMB__and, 1, (Object)send161312);((AST_Send)send161313)->info = (AST_Info)info5490;string27147 = (Object)new_Type_String(L")");constant34760 = (Object)new_AST_Constant((Object)string27147);// asPEGsend161314 = (Object)new_AST_Send((Object)constant34760, (Object)symbol44131, 0);((AST_Send)send161314)->info = (AST_Info)info5490;// omit:send161315 = (Object)new_AST_Send((Object)send161314, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161315)->info = (AST_Info)info5490;// <&send161316 = (Object)new_AST_Send((Object)send161313, (Object)symbol44372, 1, (Object)send161315);((AST_Send)send161316)->info = (AST_Info)info5490;method41233 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161316);((AST_Method)method41233)->info = (AST_Info)info5490;symbol44310 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");methodclosure41136 = (Object)new_Runtime_MethodClosure(method41233);store_method((Type_Class)class6735, (Type_Symbol)symbol44310, (Runtime_MethodClosure)methodclosure41136);// SCParser>>initializeLowercase//initializeLowercase// 	^ ('a-z' asPEGRange)string27148 = (Object)new_Type_String(L"a-z");constant34761 = (Object)new_AST_Constant((Object)string27148);// asPEGRangesend161317 = (Object)new_AST_Send((Object)constant34761, (Object)symbol44124, 0);string27149 = (Object)new_Type_String(L"initializeLowercase");string27150 = (Object)new_Type_String(L"initializeLowercase\n\t^ (\'a-z\' asPEGRange)");smallint26958 = (Object)new_Type_SmallInt(-1);smallint26959 = (Object)new_Type_SmallInt(-1);info5491 = (Object)new_AST_Info((Type_String)string27150,(Type_String)string27149, (Type_SmallInt)smallint26958, (Type_SmallInt)smallint26959);((AST_Send)send161317)->info = (AST_Info)info5491;method41234 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161317);((AST_Method)method41234)->info = (AST_Info)info5491;symbol44254 = (Object)new_Type_Symbol_cached(L"initializeLowercase");methodclosure41137 = (Object)new_Runtime_MethodClosure(method41234);store_method((Type_Class)class6735, (Type_Symbol)symbol44254, (Runtime_MethodClosure)methodclosure41137);// SCParser>>initializePrimaryVariable//initializePrimaryVariable// 	^ PEGParser// 		named: 'PRIMARY-VARIABLE'// 		parsing: self identifier// 		semantics: [:result | self createVariable: result ]string27151 = (Object)new_Type_String(L"PRIMARY-VARIABLE");constant34762 = (Object)new_AST_Constant((Object)string27151);// identifiersend161318 = (Object)new_AST_Send((Object)Self, (Object)symbol44438, 0);string27152 = (Object)new_Type_String(L"initializePrimaryVariable");string27153 = (Object)new_Type_String(L"initializePrimaryVariable\n\t^ PEGParser\n\t\tnamed: \'PRIMARY-VARIABLE\'\n\t\tparsing: self identifier\n\t\tsemantics: [:result | self createVariable: result ]");smallint26960 = (Object)new_Type_SmallInt(-1);smallint26961 = (Object)new_Type_SmallInt(-1);info5492 = (Object)new_AST_Info((Type_String)string27153,(Type_String)string27152, (Type_SmallInt)smallint26960, (Type_SmallInt)smallint26961);((AST_Send)send161318)->info = (AST_Info)info5492;localvariable27172 = (Object)new_AST_Variable_named(L"result");array24252 = (Object)new_Type_Array_with(1, (Object)localvariable27172);// createVariable:send161319 = (Object)new_AST_Send((Object)Self, (Object)symbol44276, 1, (Object)localvariable27172);((AST_Send)send161319)->info = (AST_Info)info5492;block11847 = (Object)new_AST_Block_with((Type_Array)array24252, (Type_Array)empty_Type_Array, 1, 1, send161319);// named:parsing:semantics:send161320 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34762, (Object)send161318, (Object)block11847);((AST_Send)send161320)->info = (AST_Info)info5492;method41235 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161320);((AST_Method)method41235)->info = (AST_Info)info5492;symbol44282 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");methodclosure41138 = (Object)new_Runtime_MethodClosure(method41235);store_method((Type_Class)class6735, (Type_Symbol)symbol44282, (Runtime_MethodClosure)methodclosure41138);// SCParser>>symbols//symbols// 	^ symbolsmethod41236 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16408);string27154 = (Object)new_Type_String(L"symbols");string27155 = (Object)new_Type_String(L"symbols\n\t^ symbols");smallint26962 = (Object)new_Type_SmallInt(-1);smallint26963 = (Object)new_Type_SmallInt(-1);info5493 = (Object)new_AST_Info((Type_String)string27155,(Type_String)string27154, (Type_SmallInt)smallint26962, (Type_SmallInt)smallint26963);((AST_Method)method41236)->info = (AST_Info)info5493;symbol44294 = (Object)new_Type_Symbol_cached(L"symbols");methodclosure41139 = (Object)new_Runtime_MethodClosure(method41236);store_method((Type_Class)class6735, (Type_Symbol)symbol44294, (Runtime_MethodClosure)methodclosure41139);// SCParser>>preStoreCascadedMessageExpression//preStoreCascadedMessageExpression// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'// 	]constant34763 = (Object)new_AST_Constant((Object)symbol44455);string27156 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");constant34764 = (Object)new_AST_Constant((Object)string27156);// named:send161321 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44345, 1, (Object)constant34764);string27157 = (Object)new_Type_String(L"preStoreCascadedMessageExpression");string27158 = (Object)new_Type_String(L"preStoreCascadedMessageExpression\n\t^ parsers at: #cascadedMessageExpression ifAbsentPut: [\n\t\tPEGParser named: \'CASCADED-MESSAGE-EXPRESSION\'\n\t]");smallint26964 = (Object)new_Type_SmallInt(-1);smallint26965 = (Object)new_Type_SmallInt(-1);info5494 = (Object)new_AST_Info((Type_String)string27158,(Type_String)string27157, (Type_SmallInt)smallint26964, (Type_SmallInt)smallint26965);((AST_Send)send161321)->info = (AST_Info)info5494;block11848 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send161321);// at:ifAbsentPut:send161322 = (Object)new_AST_Send((Object)instancevariable16406, (Object)symbol44368, 2, (Object)constant34763, (Object)block11848);((AST_Send)send161322)->info = (AST_Info)info5494;method41237 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161322);((AST_Method)method41237)->info = (AST_Info)info5494;methodclosure41140 = (Object)new_Runtime_MethodClosure(method41237);store_method((Type_Class)class6735, (Type_Symbol)symbol44264, (Runtime_MethodClosure)methodclosure41140);// SCParser>>initializeKeywordExpression//initializeKeywordExpression// 	^ PEGParser// 		named: 'KEYWORD-EXPRESSION'// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)// 		semantics: [ :parts |// 			(parts at: 2) receiver: (parts first)// 		]string27159 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");constant34765 = (Object)new_AST_Constant((Object)string27159);// binaryObjectDescriptionsend161323 = (Object)new_AST_Send((Object)Self, (Object)symbol44434, 0);string27160 = (Object)new_Type_String(L"initializeKeywordExpression");string27161 = (Object)new_Type_String(L"initializeKeywordExpression\n\t^ PEGParser\n\t\tnamed: \'KEYWORD-EXPRESSION\'\n\t\tparsing: (self binaryObjectDescription & self keywordMessageExpression)\n\t\tsemantics: [ :parts |\n\t\t\t(parts at: 2) receiver: (parts first)\n\t\t]");smallint26966 = (Object)new_Type_SmallInt(-1);smallint26967 = (Object)new_Type_SmallInt(-1);info5495 = (Object)new_AST_Info((Type_String)string27161,(Type_String)string27160, (Type_SmallInt)smallint26966, (Type_SmallInt)smallint26967);((AST_Send)send161323)->info = (AST_Info)info5495;// keywordMessageExpressionsend161324 = (Object)new_AST_Send((Object)Self, (Object)symbol44451, 0);((AST_Send)send161324)->info = (AST_Info)info5495;// &send161325 = (Object)new_AST_Send((Object)send161323, (Object)SMB__and, 1, (Object)send161324);((AST_Send)send161325)->info = (AST_Info)info5495;localvariable27173 = (Object)new_AST_Variable_named(L"parts");array24253 = (Object)new_Type_Array_with(1, (Object)localvariable27173);smallint26968 = (Object)new_Type_SmallInt(2);constant34766 = (Object)new_AST_Constant((Object)smallint26968);// at:send161326 = (Object)new_AST_Send((Object)localvariable27173, (Object)SMB_at_, 1, (Object)constant34766);((AST_Send)send161326)->info = (AST_Info)info5495;// firstsend161327 = (Object)new_AST_Send((Object)localvariable27173, (Object)symbol44180, 0);((AST_Send)send161327)->info = (AST_Info)info5495;// receiver:send161328 = (Object)new_AST_Send((Object)send161326, (Object)symbol44216, 1, (Object)send161327);((AST_Send)send161328)->info = (AST_Info)info5495;block11849 = (Object)new_AST_Block_with((Type_Array)array24253, (Type_Array)empty_Type_Array, 1, 1, send161328);// named:parsing:semantics:send161329 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34765, (Object)send161325, (Object)block11849);((AST_Send)send161329)->info = (AST_Info)info5495;method41238 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161329);((AST_Method)method41238)->info = (AST_Info)info5495;symbol44309 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");methodclosure41141 = (Object)new_Runtime_MethodClosure(method41238);store_method((Type_Class)class6735, (Type_Symbol)symbol44309, (Runtime_MethodClosure)methodclosure41141);// SCParser>>createVariable://createVariable: name// 	name = 'self' ifTrue: [ ^ASTSelf new].// 	name = 'super' ifTrue: [ ^ASTSuper new].// 	^ ASTVariable new name: name.localvariable27174 = (Object)new_AST_Variable_named(L"name");array24254 = (Object)new_Type_Array_with(1, (Object)localvariable27174);variable1871 = (Object)new_AST_Variable_named(L"return");array24255 = (Object)new_Type_Array_with(1, (Object)variable1871);string27162 = (Object)new_Type_String(L"self");constant34767 = (Object)new_AST_Constant((Object)string27162);// =send161330 = (Object)new_AST_Send((Object)localvariable27174, (Object)SMB__equal, 1, (Object)constant34767);string27163 = (Object)new_Type_String(L"createVariable:");string27164 = (Object)new_Type_String(L"createVariable: name\n\tname = \'self\' ifTrue: [ ^ASTSelf new].\n\tname = \'super\' ifTrue: [ ^ASTSuper new].\n\t^ ASTVariable new name: name.");smallint26969 = (Object)new_Type_SmallInt(-1);smallint26970 = (Object)new_Type_SmallInt(-1);info5496 = (Object)new_AST_Info((Type_String)string27164,(Type_String)string27163, (Type_SmallInt)smallint26969, (Type_SmallInt)smallint26970);((AST_Send)send161330)->info = (AST_Info)info5496;// newsend161331 = (Object)new_AST_Send((Object)classreference13398, (Object)symbol44095, 0);((AST_Send)send161331)->info = (AST_Info)info5496;// escape:send161332 = (Object)new_AST_Send((Object)variable1871, (Object)SMB_escape_, 1, (Object)send161331);((AST_Send)send161332)->info = (AST_Info)info5496;block11850 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161332);// ifTrue:send161333 = (Object)new_AST_Send((Object)send161330, (Object)SMB_ifTrue_, 1, (Object)block11850);((AST_Send)send161333)->info = (AST_Info)info5496;string27165 = (Object)new_Type_String(L"super");constant34768 = (Object)new_AST_Constant((Object)string27165);// =send161334 = (Object)new_AST_Send((Object)localvariable27174, (Object)SMB__equal, 1, (Object)constant34768);((AST_Send)send161334)->info = (AST_Info)info5496;// newsend161335 = (Object)new_AST_Send((Object)classreference13423, (Object)symbol44095, 0);((AST_Send)send161335)->info = (AST_Info)info5496;// escape:send161336 = (Object)new_AST_Send((Object)variable1871, (Object)SMB_escape_, 1, (Object)send161335);((AST_Send)send161336)->info = (AST_Info)info5496;block11851 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send161336);// ifTrue:send161337 = (Object)new_AST_Send((Object)send161334, (Object)SMB_ifTrue_, 1, (Object)block11851);((AST_Send)send161337)->info = (AST_Info)info5496;// newsend161338 = (Object)new_AST_Send((Object)classreference13400, (Object)symbol44095, 0);((AST_Send)send161338)->info = (AST_Info)info5496;// name:send161339 = (Object)new_AST_Send((Object)send161338, (Object)symbol44204, 1, (Object)localvariable27174);((AST_Send)send161339)->info = (AST_Info)info5496;block11852 = (Object)new_AST_Block_with((Type_Array)array24255, (Type_Array)empty_Type_Array, 1, 3, send161333, send161337, send161339);// on:send161340 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11852);method41239 = (Object)new_AST_Method_with((Type_Array)array24254, (Type_Array)empty_Type_Array, 1, send161340);((AST_Method)method41239)->info = (AST_Info)info5496;methodclosure41142 = (Object)new_Runtime_MethodClosure(method41239);store_method((Type_Class)class6735, (Type_Symbol)symbol44276, (Runtime_MethodClosure)methodclosure41142);// SCParser>>initializeAssignmentExpressions//initializeAssignmentExpressions// 	^ (self variableName & self assignmentOp) timessymbol44472 = (Object)new_Type_Symbol_cached(L"variableName");// variableNamesend161341 = (Object)new_AST_Send((Object)Self, (Object)symbol44472, 0);string27166 = (Object)new_Type_String(L"initializeAssignmentExpressions");string27167 = (Object)new_Type_String(L"initializeAssignmentExpressions\n\t^ (self variableName & self assignmentOp) times");smallint26971 = (Object)new_Type_SmallInt(-1);smallint26972 = (Object)new_Type_SmallInt(-1);info5497 = (Object)new_AST_Info((Type_String)string27167,(Type_String)string27166, (Type_SmallInt)smallint26971, (Type_SmallInt)smallint26972);((AST_Send)send161341)->info = (AST_Info)info5497;// assignmentOpsend161342 = (Object)new_AST_Send((Object)Self, (Object)symbol44305, 0);((AST_Send)send161342)->info = (AST_Info)info5497;// &send161343 = (Object)new_AST_Send((Object)send161341, (Object)SMB__and, 1, (Object)send161342);((AST_Send)send161343)->info = (AST_Info)info5497;// timessend161344 = (Object)new_AST_Send((Object)send161343, (Object)symbol44340, 0);((AST_Send)send161344)->info = (AST_Info)info5497;method41240 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161344);((AST_Method)method41240)->info = (AST_Info)info5497;symbol44302 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");methodclosure41143 = (Object)new_Runtime_MethodClosure(method41240);store_method((Type_Class)class6735, (Type_Symbol)symbol44302, (Runtime_MethodClosure)methodclosure41143);// SCParser>>initializeMethod//initializeMethod// 	^ (PEGParser// 		named: 'METHOD'// 		parsing: self messagePattern// 					& self temporaries optional// 					<& self annotation times// 					<& self statements// 					<& self separator " Allow comment/whitespace at the end of a method. "// 		semantics: [ :parts |// 			ASTMethod new// 				message:	(parts first);// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);// 				annotations:	(parts at: 3);// 				statements:	(parts at: 4);// 				yourself// // 		]) separator: (self separator)string27168 = (Object)new_Type_String(L"METHOD");constant34769 = (Object)new_AST_Constant((Object)string27168);symbol44473 = (Object)new_Type_Symbol_cached(L"messagePattern");// messagePatternsend161345 = (Object)new_AST_Send((Object)Self, (Object)symbol44473, 0);string27169 = (Object)new_Type_String(L"initializeMethod");string27170 = (Object)new_Type_String(L"initializeMethod\n\t^ (PEGParser\n\t\tnamed: \'METHOD\'\n\t\tparsing: self messagePattern\n\t\t\t\t\t& self temporaries optional\n\t\t\t\t\t<& self annotation times\n\t\t\t\t\t<& self statements\n\t\t\t\t\t<& self separator \" Allow comment/whitespace at the end of a method. \"\n\t\tsemantics: [ :parts |\n\t\t\tASTMethod new\n\t\t\t\tmessage:\t(parts first);\n\t\t\t\ttemporaries:\t((parts at: 2) resultIfFailed: [ OrderedCollection new ]);\n\t\t\t\tannotations:\t(parts at: 3);\n\t\t\t\tstatements:\t(parts at: 4);\n\t\t\t\tyourself\n\n\t\t]) separator: (self separator)");smallint26973 = (Object)new_Type_SmallInt(-1);smallint26974 = (Object)new_Type_SmallInt(-1);info5498 = (Object)new_AST_Info((Type_String)string27170,(Type_String)string27169, (Type_SmallInt)smallint26973, (Type_SmallInt)smallint26974);((AST_Send)send161345)->info = (AST_Info)info5498;// temporariessend161346 = (Object)new_AST_Send((Object)Self, (Object)symbol44230, 0);((AST_Send)send161346)->info = (AST_Info)info5498;// optionalsend161347 = (Object)new_AST_Send((Object)send161346, (Object)symbol44338, 0);((AST_Send)send161347)->info = (AST_Info)info5498;// &send161348 = (Object)new_AST_Send((Object)send161345, (Object)SMB__and, 1, (Object)send161347);((AST_Send)send161348)->info = (AST_Info)info5498;symbol44474 = (Object)new_Type_Symbol_cached(L"annotation");// annotationsend161349 = (Object)new_AST_Send((Object)Self, (Object)symbol44474, 0);((AST_Send)send161349)->info = (AST_Info)info5498;// timessend161350 = (Object)new_AST_Send((Object)send161349, (Object)symbol44340, 0);((AST_Send)send161350)->info = (AST_Info)info5498;// <&send161351 = (Object)new_AST_Send((Object)send161348, (Object)symbol44372, 1, (Object)send161350);((AST_Send)send161351)->info = (AST_Info)info5498;// statementssend161352 = (Object)new_AST_Send((Object)Self, (Object)symbol44225, 0);((AST_Send)send161352)->info = (AST_Info)info5498;// <&send161353 = (Object)new_AST_Send((Object)send161351, (Object)symbol44372, 1, (Object)send161352);((AST_Send)send161353)->info = (AST_Info)info5498;// separatorsend161354 = (Object)new_AST_Send((Object)Self, (Object)symbol44342, 0);((AST_Send)send161354)->info = (AST_Info)info5498;// <&send161355 = (Object)new_AST_Send((Object)send161353, (Object)symbol44372, 1, (Object)send161354);((AST_Send)send161355)->info = (AST_Info)info5498;localvariable27175 = (Object)new_AST_Variable_named(L"parts");array24256 = (Object)new_Type_Array_with(1, (Object)localvariable27175);localvariable27176 = (Object)new_AST_Variable_named(L"receiver");array24257 = (Object)new_Type_Array_with(1, (Object)localvariable27176);// firstsend161356 = (Object)new_AST_Send((Object)localvariable27175, (Object)symbol44180, 0);((AST_Send)send161356)->info = (AST_Info)info5498;// message:send161357 = (Object)new_AST_Send((Object)localvariable27176, (Object)symbol44226, 1, (Object)send161356);((AST_Send)send161357)->info = (AST_Info)info5498;smallint26975 = (Object)new_Type_SmallInt(2);constant34770 = (Object)new_AST_Constant((Object)smallint26975);// at:send161358 = (Object)new_AST_Send((Object)localvariable27175, (Object)SMB_at_, 1, (Object)constant34770);((AST_Send)send161358)->info = (AST_Info)info5498;// newsend161359 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);((AST_Send)send161359)->info = (AST_Info)info5498;block11853 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send161359);// resultIfFailed:send161360 = (Object)new_AST_Send((Object)send161358, (Object)symbol44379, 1, (Object)block11853);((AST_Send)send161360)->info = (AST_Info)info5498;// temporaries:send161361 = (Object)new_AST_Send((Object)localvariable27176, (Object)symbol44231, 1, (Object)send161360);((AST_Send)send161361)->info = (AST_Info)info5498;smallint26976 = (Object)new_Type_SmallInt(3);constant34771 = (Object)new_AST_Constant((Object)smallint26976);// at:send161362 = (Object)new_AST_Send((Object)localvariable27175, (Object)SMB_at_, 1, (Object)constant34771);((AST_Send)send161362)->info = (AST_Info)info5498;// annotations:send161363 = (Object)new_AST_Send((Object)localvariable27176, (Object)symbol44232, 1, (Object)send161362);((AST_Send)send161363)->info = (AST_Info)info5498;smallint26977 = (Object)new_Type_SmallInt(4);constant34772 = (Object)new_AST_Constant((Object)smallint26977);// at:send161364 = (Object)new_AST_Send((Object)localvariable27175, (Object)SMB_at_, 1, (Object)constant34772);((AST_Send)send161364)->info = (AST_Info)info5498;// statements:send161365 = (Object)new_AST_Send((Object)localvariable27176, (Object)symbol44228, 1, (Object)send161364);((AST_Send)send161365)->info = (AST_Info)info5498;// yourselfsend161366 = (Object)new_AST_Send((Object)localvariable27176, (Object)symbol44008, 0);((AST_Send)send161366)->info = (AST_Info)info5498;block11854 = (Object)new_AST_Block_with((Type_Array)array24257, (Type_Array)empty_Type_Array, 2, 5, send161357, send161361, send161363, send161365, send161366);// newsend161367 = (Object)new_AST_Send((Object)classreference13419, (Object)symbol44095, 0);((AST_Send)send161367)->info = (AST_Info)info5498;// value:send161368 = (Object)new_AST_Send((Object)block11854, (Object)SMB_value_, 1, (Object)send161367);((AST_Send)send161368)->info = (AST_Info)info5498;block11855 = (Object)new_AST_Block_with((Type_Array)array24256, (Type_Array)empty_Type_Array, 1, 1, send161368);// named:parsing:semantics:send161369 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34769, (Object)send161355, (Object)block11855);((AST_Send)send161369)->info = (AST_Info)info5498;// separatorsend161370 = (Object)new_AST_Send((Object)Self, (Object)symbol44342, 0);((AST_Send)send161370)->info = (AST_Info)info5498;// separator:send161371 = (Object)new_AST_Send((Object)send161369, (Object)symbol44348, 1, (Object)send161370);((AST_Send)send161371)->info = (AST_Info)info5498;method41241 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161371);((AST_Method)method41241)->info = (AST_Info)info5498;symbol44246 = (Object)new_Type_Symbol_cached(L"initializeMethod");methodclosure41144 = (Object)new_Runtime_MethodClosure(method41241);store_method((Type_Class)class6735, (Type_Symbol)symbol44246, (Runtime_MethodClosure)methodclosure41144);// SCParser>>initializeCascadedMessageExpression//initializeCascadedMessageExpression// 	self expression.// 	" expression will build this parser. "// 	^ self cascadedMessageExpression.// expressionsend161372 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);string27171 = (Object)new_Type_String(L"initializeCascadedMessageExpression");string27172 = (Object)new_Type_String(L"initializeCascadedMessageExpression\n\tself expression.\n\t\" expression will build this parser. \"\n\t^ self cascadedMessageExpression.");smallint26978 = (Object)new_Type_SmallInt(-1);smallint26979 = (Object)new_Type_SmallInt(-1);info5499 = (Object)new_AST_Info((Type_String)string27172,(Type_String)string27171, (Type_SmallInt)smallint26978, (Type_SmallInt)smallint26979);((AST_Send)send161372)->info = (AST_Info)info5499;// cascadedMessageExpressionsend161373 = (Object)new_AST_Send((Object)Self, (Object)symbol44455, 0);((AST_Send)send161373)->info = (AST_Info)info5499;method41242 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send161372, send161373);((AST_Method)method41242)->info = (AST_Info)info5499;symbol44314 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");methodclosure41145 = (Object)new_Runtime_MethodClosure(method41242);store_method((Type_Class)class6735, (Type_Symbol)symbol44314, (Runtime_MethodClosure)methodclosure41145);// SCParser>>initializeBar//initializeBar// 	^ '|' asPEG omit: truestring27173 = (Object)new_Type_String(L"|");constant34773 = (Object)new_AST_Constant((Object)string27173);// asPEGsend161374 = (Object)new_AST_Send((Object)constant34773, (Object)symbol44131, 0);string27174 = (Object)new_Type_String(L"initializeBar");string27175 = (Object)new_Type_String(L"initializeBar\n\t^ \'|\' asPEG omit: true");smallint26980 = (Object)new_Type_SmallInt(-1);smallint26981 = (Object)new_Type_SmallInt(-1);info5500 = (Object)new_AST_Info((Type_String)string27175,(Type_String)string27174, (Type_SmallInt)smallint26980, (Type_SmallInt)smallint26981);((AST_Send)send161374)->info = (AST_Info)info5500;// omit:send161375 = (Object)new_AST_Send((Object)send161374, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161375)->info = (AST_Info)info5500;method41243 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161375);((AST_Method)method41243)->info = (AST_Info)info5500;symbol44258 = (Object)new_Type_Symbol_cached(L"initializeBar");methodclosure41146 = (Object)new_Runtime_MethodClosure(method41243);store_method((Type_Class)class6735, (Type_Symbol)symbol44258, (Runtime_MethodClosure)methodclosure41146);// SCParser>>initializeSubExpression//initializeSubExpression// 	^ self expression & ('.' asPEG omit: true)// expressionsend161376 = (Object)new_AST_Send((Object)Self, (Object)symbol44200, 0);string27176 = (Object)new_Type_String(L"initializeSubExpression");string27177 = (Object)new_Type_String(L"initializeSubExpression\n\t^ self expression & (\'.\' asPEG omit: true)");smallint26982 = (Object)new_Type_SmallInt(-1);smallint26983 = (Object)new_Type_SmallInt(-1);info5501 = (Object)new_AST_Info((Type_String)string27177,(Type_String)string27176, (Type_SmallInt)smallint26982, (Type_SmallInt)smallint26983);((AST_Send)send161376)->info = (AST_Info)info5501;string27178 = (Object)new_Type_String(L".");constant34774 = (Object)new_AST_Constant((Object)string27178);// asPEGsend161377 = (Object)new_AST_Send((Object)constant34774, (Object)symbol44131, 0);((AST_Send)send161377)->info = (AST_Info)info5501;// omit:send161378 = (Object)new_AST_Send((Object)send161377, (Object)symbol44330, 1, (Object)True_Const);((AST_Send)send161378)->info = (AST_Info)info5501;// &send161379 = (Object)new_AST_Send((Object)send161376, (Object)SMB__and, 1, (Object)send161378);((AST_Send)send161379)->info = (AST_Info)info5501;method41244 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161379);((AST_Method)method41244)->info = (AST_Info)info5501;symbol44286 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");methodclosure41147 = (Object)new_Runtime_MethodClosure(method41244);store_method((Type_Class)class6735, (Type_Symbol)symbol44286, (Runtime_MethodClosure)methodclosure41147);// SCParser>>initializeKeywordsArguments//initializeKeywordsArguments// 	| result |// 	^ PEGParser // 		named: 'KEYWORDS-ARGUMENTS'// 		parsing: (self keyword & self parameterName) plus// 		semantics: [ :pairs | // 			result := ASTKeywordMessageDefinition new.// 			pairs do: [ :pair | // 				result keywords add: pair first.// 				result parameters add: (self createVariable: (pair at: 2))// 			].// 			result selector:  (ASTSymbol named: result selectorName).// 			result // 		]localvariable27177 = (Object)new_AST_Variable_named(L"result");array24258 = (Object)new_Type_Array_with(1, (Object)localvariable27177);string27179 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");constant34775 = (Object)new_AST_Constant((Object)string27179);// keywordsend161380 = (Object)new_AST_Send((Object)Self, (Object)symbol44431, 0);string27180 = (Object)new_Type_String(L"initializeKeywordsArguments");string27181 = (Object)new_Type_String(L"initializeKeywordsArguments\n\t| result |\n\t^ PEGParser \n\t\tnamed: \'KEYWORDS-ARGUMENTS\'\n\t\tparsing: (self keyword & self parameterName) plus\n\t\tsemantics: [ :pairs | \n\t\t\tresult := ASTKeywordMessageDefinition new.\n\t\t\tpairs do: [ :pair | \n\t\t\t\tresult keywords add: pair first.\n\t\t\t\tresult parameters add: (self createVariable: (pair at: 2))\n\t\t\t].\n\t\t\tresult selector:  (ASTSymbol named: result selectorName).\n\t\t\tresult \n\t\t]");smallint26984 = (Object)new_Type_SmallInt(-1);smallint26985 = (Object)new_Type_SmallInt(-1);info5502 = (Object)new_AST_Info((Type_String)string27181,(Type_String)string27180, (Type_SmallInt)smallint26984, (Type_SmallInt)smallint26985);((AST_Send)send161380)->info = (AST_Info)info5502;// parameterNamesend161381 = (Object)new_AST_Send((Object)Self, (Object)symbol44469, 0);((AST_Send)send161381)->info = (AST_Info)info5502;// &send161382 = (Object)new_AST_Send((Object)send161380, (Object)SMB__and, 1, (Object)send161381);((AST_Send)send161382)->info = (AST_Info)info5502;// plussend161383 = (Object)new_AST_Send((Object)send161382, (Object)symbol44335, 0);((AST_Send)send161383)->info = (AST_Info)info5502;localvariable27178 = (Object)new_AST_Variable_named(L"pairs");array24259 = (Object)new_Type_Array_with(1, (Object)localvariable27178);// newsend161384 = (Object)new_AST_Send((Object)classreference13394, (Object)symbol44095, 0);((AST_Send)send161384)->info = (AST_Info)info5502;assign20230 = (Object)new_AST_Assign((Object)localvariable27177, (Object)send161384);localvariable27179 = (Object)new_AST_Variable_named(L"pair");array24260 = (Object)new_Type_Array_with(1, (Object)localvariable27179);// keywordssend161385 = (Object)new_AST_Send((Object)localvariable27177, (Object)symbol44214, 0);((AST_Send)send161385)->info = (AST_Info)info5502;// firstsend161386 = (Object)new_AST_Send((Object)localvariable27179, (Object)symbol44180, 0);((AST_Send)send161386)->info = (AST_Info)info5502;// add:send161387 = (Object)new_AST_Send((Object)send161385, (Object)symbol44183, 1, (Object)send161386);((AST_Send)send161387)->info = (AST_Info)info5502;// parameterssend161388 = (Object)new_AST_Send((Object)localvariable27177, (Object)symbol44211, 0);((AST_Send)send161388)->info = (AST_Info)info5502;smallint26986 = (Object)new_Type_SmallInt(2);constant34776 = (Object)new_AST_Constant((Object)smallint26986);// at:send161389 = (Object)new_AST_Send((Object)localvariable27179, (Object)SMB_at_, 1, (Object)constant34776);((AST_Send)send161389)->info = (AST_Info)info5502;// createVariable:send161390 = (Object)new_AST_Send((Object)Self, (Object)symbol44276, 1, (Object)send161389);((AST_Send)send161390)->info = (AST_Info)info5502;// add:send161391 = (Object)new_AST_Send((Object)send161388, (Object)symbol44183, 1, (Object)send161390);((AST_Send)send161391)->info = (AST_Info)info5502;block11856 = (Object)new_AST_Block_with((Type_Array)array24260, (Type_Array)empty_Type_Array, 2, 2, send161387, send161391);// do:send161392 = (Object)new_AST_Send((Object)localvariable27178, (Object)symbol44127, 1, (Object)block11856);((AST_Send)send161392)->info = (AST_Info)info5502;// selectorNamesend161393 = (Object)new_AST_Send((Object)localvariable27177, (Object)symbol44210, 0);((AST_Send)send161393)->info = (AST_Info)info5502;// named:send161394 = (Object)new_AST_Send((Object)classreference13421, (Object)symbol44345, 1, (Object)send161393);((AST_Send)send161394)->info = (AST_Info)info5502;// selector:send161395 = (Object)new_AST_Send((Object)localvariable27177, (Object)symbol44212, 1, (Object)send161394);((AST_Send)send161395)->info = (AST_Info)info5502;block11857 = (Object)new_AST_Block_with((Type_Array)array24259, (Type_Array)empty_Type_Array, 1, 4, assign20230, send161392, send161395, localvariable27177);// named:parsing:semantics:send161396 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44347, 3, (Object)constant34775, (Object)send161383, (Object)block11857);((AST_Send)send161396)->info = (AST_Info)info5502;method41245 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24258, 1, send161396);((AST_Method)method41245)->info = (AST_Info)info5502;symbol44298 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");methodclosure41148 = (Object)new_Runtime_MethodClosure(method41245);store_method((Type_Class)class6735, (Type_Symbol)symbol44298, (Runtime_MethodClosure)methodclosure41148);// SCParser>>initializeTemporaries//initializeTemporaries// 	^ PEGParser// 		named: 'TEMPORARIES'// 		parsing: (self bar & self variableName times <& self bar)string27182 = (Object)new_Type_String(L"TEMPORARIES");constant34777 = (Object)new_AST_Constant((Object)string27182);// barsend161397 = (Object)new_AST_Send((Object)Self, (Object)symbol44464, 0);string27183 = (Object)new_Type_String(L"initializeTemporaries");string27184 = (Object)new_Type_String(L"initializeTemporaries\n\t^ PEGParser\n\t\tnamed: \'TEMPORARIES\'\n\t\tparsing: (self bar & self variableName times <& self bar)");smallint26987 = (Object)new_Type_SmallInt(-1);smallint26988 = (Object)new_Type_SmallInt(-1);info5503 = (Object)new_AST_Info((Type_String)string27184,(Type_String)string27183, (Type_SmallInt)smallint26987, (Type_SmallInt)smallint26988);((AST_Send)send161397)->info = (AST_Info)info5503;// variableNamesend161398 = (Object)new_AST_Send((Object)Self, (Object)symbol44472, 0);((AST_Send)send161398)->info = (AST_Info)info5503;// timessend161399 = (Object)new_AST_Send((Object)send161398, (Object)symbol44340, 0);((AST_Send)send161399)->info = (AST_Info)info5503;// &send161400 = (Object)new_AST_Send((Object)send161397, (Object)SMB__and, 1, (Object)send161399);((AST_Send)send161400)->info = (AST_Info)info5503;// barsend161401 = (Object)new_AST_Send((Object)Self, (Object)symbol44464, 0);((AST_Send)send161401)->info = (AST_Info)info5503;// <&send161402 = (Object)new_AST_Send((Object)send161400, (Object)symbol44372, 1, (Object)send161401);((AST_Send)send161402)->info = (AST_Info)info5503;// named:parsing:send161403 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44344, 2, (Object)constant34777, (Object)send161402);((AST_Send)send161403)->info = (AST_Info)info5503;method41246 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161403);((AST_Method)method41246)->info = (AST_Info)info5503;symbol44251 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");methodclosure41149 = (Object)new_Runtime_MethodClosure(method41246);store_method((Type_Class)class6735, (Type_Symbol)symbol44251, (Runtime_MethodClosure)methodclosure41149);// SCParser>>initializeDecimalDigit//initializeDecimalDigit// 	^ '0-9' asPEGRangestring27185 = (Object)new_Type_String(L"0-9");constant34778 = (Object)new_AST_Constant((Object)string27185);// asPEGRangesend161404 = (Object)new_AST_Send((Object)constant34778, (Object)symbol44124, 0);string27186 = (Object)new_Type_String(L"initializeDecimalDigit");string27187 = (Object)new_Type_String(L"initializeDecimalDigit\n\t^ \'0-9\' asPEGRange");smallint26989 = (Object)new_Type_SmallInt(-1);smallint26990 = (Object)new_Type_SmallInt(-1);info5504 = (Object)new_AST_Info((Type_String)string27187,(Type_String)string27186, (Type_SmallInt)smallint26989, (Type_SmallInt)smallint26990);((AST_Send)send161404)->info = (AST_Info)info5504;method41247 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send161404);((AST_Method)method41247)->info = (AST_Info)info5504;symbol44291 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");methodclosure41150 = (Object)new_Runtime_MethodClosure(method41247);store_method((Type_Class)class6735, (Type_Symbol)symbol44291, (Runtime_MethodClosure)methodclosure41150);classreference13444 = (Object)new_Organization_ClassReference((Type_Class)class6736);// SCParserTest>>testSymbolKeywords//testSymbolKeywords// 	| parser string |// 	parser := scparser symbolKeywords.// 	string := PEGStringScanner on: 'abcd:def: '.// 	(parser match: string) should = 'abcd:def:'.// 	string position should = 9.// 	string := PEGStringScanner on: 'abcd '.// 	(parser match: string) should be isNil.// 	string position should = 0localvariable27180 = (Object)new_AST_Variable_named(L"parser");localvariable27181 = (Object)new_AST_Variable_named(L"string");array24261 = (Object)new_Type_Array_with(2, (Object)localvariable27180, (Object)localvariable27181);// symbolKeywordssend161405 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44437, 0);string27188 = (Object)new_Type_String(L"testSymbolKeywords");string27189 = (Object)new_Type_String(L"testSymbolKeywords\n\t| parser string |\n\tparser := scparser symbolKeywords.\n\tstring := PEGStringScanner on: \'abcd:def: \'.\n\t(parser match: string) should = \'abcd:def:\'.\n\tstring position should = 9.\n\tstring := PEGStringScanner on: \'abcd \'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");smallint26991 = (Object)new_Type_SmallInt(-1);smallint26992 = (Object)new_Type_SmallInt(-1);info5505 = (Object)new_AST_Info((Type_String)string27189,(Type_String)string27188, (Type_SmallInt)smallint26991, (Type_SmallInt)smallint26992);((AST_Send)send161405)->info = (AST_Info)info5505;assign20231 = (Object)new_AST_Assign((Object)localvariable27180, (Object)send161405);string27190 = (Object)new_Type_String(L"abcd:def: ");constant34779 = (Object)new_AST_Constant((Object)string27190);// on:send161406 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34779);((AST_Send)send161406)->info = (AST_Info)info5505;assign20232 = (Object)new_AST_Assign((Object)localvariable27181, (Object)send161406);// match:send161407 = (Object)new_AST_Send((Object)localvariable27180, (Object)symbol44329, 1, (Object)localvariable27181);((AST_Send)send161407)->info = (AST_Info)info5505;// shouldsend161408 = (Object)new_AST_Send((Object)send161407, (Object)symbol44402, 0);((AST_Send)send161408)->info = (AST_Info)info5505;string27191 = (Object)new_Type_String(L"abcd:def:");constant34780 = (Object)new_AST_Constant((Object)string27191);// =send161409 = (Object)new_AST_Send((Object)send161408, (Object)SMB__equal, 1, (Object)constant34780);((AST_Send)send161409)->info = (AST_Info)info5505;symbol44475 = (Object)new_Type_Symbol_cached(L"position");// positionsend161410 = (Object)new_AST_Send((Object)localvariable27181, (Object)symbol44475, 0);((AST_Send)send161410)->info = (AST_Info)info5505;// shouldsend161411 = (Object)new_AST_Send((Object)send161410, (Object)symbol44402, 0);((AST_Send)send161411)->info = (AST_Info)info5505;smallint26993 = (Object)new_Type_SmallInt(9);constant34781 = (Object)new_AST_Constant((Object)smallint26993);// =send161412 = (Object)new_AST_Send((Object)send161411, (Object)SMB__equal, 1, (Object)constant34781);((AST_Send)send161412)->info = (AST_Info)info5505;string27192 = (Object)new_Type_String(L"abcd ");constant34782 = (Object)new_AST_Constant((Object)string27192);// on:send161413 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34782);((AST_Send)send161413)->info = (AST_Info)info5505;assign20233 = (Object)new_AST_Assign((Object)localvariable27181, (Object)send161413);// match:send161414 = (Object)new_AST_Send((Object)localvariable27180, (Object)symbol44329, 1, (Object)localvariable27181);((AST_Send)send161414)->info = (AST_Info)info5505;// shouldsend161415 = (Object)new_AST_Send((Object)send161414, (Object)symbol44402, 0);((AST_Send)send161415)->info = (AST_Info)info5505;symbol44476 = (Object)new_Type_Symbol_cached(L"be");// besend161416 = (Object)new_AST_Send((Object)send161415, (Object)symbol44476, 0);((AST_Send)send161416)->info = (AST_Info)info5505;// isNilsend161417 = (Object)new_AST_Send((Object)send161416, (Object)SMB_isNil, 0);((AST_Send)send161417)->info = (AST_Info)info5505;// positionsend161418 = (Object)new_AST_Send((Object)localvariable27181, (Object)symbol44475, 0);((AST_Send)send161418)->info = (AST_Info)info5505;// shouldsend161419 = (Object)new_AST_Send((Object)send161418, (Object)symbol44402, 0);((AST_Send)send161419)->info = (AST_Info)info5505;smallint26994 = (Object)new_Type_SmallInt(0);constant34783 = (Object)new_AST_Constant((Object)smallint26994);// =send161420 = (Object)new_AST_Send((Object)send161419, (Object)SMB__equal, 1, (Object)constant34783);((AST_Send)send161420)->info = (AST_Info)info5505;method41248 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24261, 8, assign20231, assign20232, send161409, send161412, assign20233, send161417, send161420, Self);((AST_Method)method41248)->info = (AST_Info)info5505;symbol44072 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");methodclosure41151 = (Object)new_Runtime_MethodClosure(method41248);store_method((Type_Class)class6736, (Type_Symbol)symbol44072, (Runtime_MethodClosure)methodclosure41151);// SCParserTest>>testExpression//testExpression// 	| parser string result |// 	parser := scparser expression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpressionlocalvariable27182 = (Object)new_AST_Variable_named(L"parser");localvariable27183 = (Object)new_AST_Variable_named(L"string");localvariable27184 = (Object)new_AST_Variable_named(L"result");array24262 = (Object)new_Type_Array_with(3, (Object)localvariable27182, (Object)localvariable27183, (Object)localvariable27184);// expressionsend161421 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44200, 0);string27193 = (Object)new_Type_String(L"testExpression");string27194 = (Object)new_Type_String(L"testExpression\n\t| parser string result |\n\tparser := scparser expression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");smallint26995 = (Object)new_Type_SmallInt(-1);smallint26996 = (Object)new_Type_SmallInt(-1);info5506 = (Object)new_AST_Info((Type_String)string27194,(Type_String)string27193, (Type_SmallInt)smallint26995, (Type_SmallInt)smallint26996);((AST_Send)send161421)->info = (AST_Info)info5506;assign20234 = (Object)new_AST_Assign((Object)localvariable27182, (Object)send161421);string27195 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");constant34784 = (Object)new_AST_Constant((Object)string27195);// on:send161422 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34784);((AST_Send)send161422)->info = (AST_Info)info5506;assign20235 = (Object)new_AST_Assign((Object)localvariable27183, (Object)send161422);// match:send161423 = (Object)new_AST_Send((Object)localvariable27182, (Object)symbol44329, 1, (Object)localvariable27183);((AST_Send)send161423)->info = (AST_Info)info5506;assign20236 = (Object)new_AST_Assign((Object)localvariable27184, (Object)send161423);// classsend161424 = (Object)new_AST_Send((Object)localvariable27184, (Object)SMB_class, 0);((AST_Send)send161424)->info = (AST_Info)info5506;// shouldsend161425 = (Object)new_AST_Send((Object)send161424, (Object)symbol44402, 0);((AST_Send)send161425)->info = (AST_Info)info5506;// =send161426 = (Object)new_AST_Send((Object)send161425, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send161426)->info = (AST_Info)info5506;// variablesend161427 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44202, 0);((AST_Send)send161427)->info = (AST_Info)info5506;// classsend161428 = (Object)new_AST_Send((Object)send161427, (Object)SMB_class, 0);((AST_Send)send161428)->info = (AST_Info)info5506;// shouldsend161429 = (Object)new_AST_Send((Object)send161428, (Object)symbol44402, 0);((AST_Send)send161429)->info = (AST_Info)info5506;// =send161430 = (Object)new_AST_Send((Object)send161429, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161430)->info = (AST_Info)info5506;// variablesend161431 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44202, 0);((AST_Send)send161431)->info = (AST_Info)info5506;// namesend161432 = (Object)new_AST_Send((Object)send161431, (Object)SMB_name, 0);((AST_Send)send161432)->info = (AST_Info)info5506;// shouldsend161433 = (Object)new_AST_Send((Object)send161432, (Object)symbol44402, 0);((AST_Send)send161433)->info = (AST_Info)info5506;string27196 = (Object)new_Type_String(L"a");constant34785 = (Object)new_AST_Constant((Object)string27196);// =send161434 = (Object)new_AST_Send((Object)send161433, (Object)SMB__equal, 1, (Object)constant34785);((AST_Send)send161434)->info = (AST_Info)info5506;// expressionsend161435 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44200, 0);((AST_Send)send161435)->info = (AST_Info)info5506;assign20237 = (Object)new_AST_Assign((Object)localvariable27184, (Object)send161435);// classsend161436 = (Object)new_AST_Send((Object)localvariable27184, (Object)SMB_class, 0);((AST_Send)send161436)->info = (AST_Info)info5506;// shouldsend161437 = (Object)new_AST_Send((Object)send161436, (Object)symbol44402, 0);((AST_Send)send161437)->info = (AST_Info)info5506;// =send161438 = (Object)new_AST_Send((Object)send161437, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send161438)->info = (AST_Info)info5506;// variablesend161439 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44202, 0);((AST_Send)send161439)->info = (AST_Info)info5506;// classsend161440 = (Object)new_AST_Send((Object)send161439, (Object)SMB_class, 0);((AST_Send)send161440)->info = (AST_Info)info5506;// shouldsend161441 = (Object)new_AST_Send((Object)send161440, (Object)symbol44402, 0);((AST_Send)send161441)->info = (AST_Info)info5506;// =send161442 = (Object)new_AST_Send((Object)send161441, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161442)->info = (AST_Info)info5506;// variablesend161443 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44202, 0);((AST_Send)send161443)->info = (AST_Info)info5506;// namesend161444 = (Object)new_AST_Send((Object)send161443, (Object)SMB_name, 0);((AST_Send)send161444)->info = (AST_Info)info5506;// shouldsend161445 = (Object)new_AST_Send((Object)send161444, (Object)symbol44402, 0);((AST_Send)send161445)->info = (AST_Info)info5506;string27197 = (Object)new_Type_String(L"b");constant34786 = (Object)new_AST_Constant((Object)string27197);// =send161446 = (Object)new_AST_Send((Object)send161445, (Object)SMB__equal, 1, (Object)constant34786);((AST_Send)send161446)->info = (AST_Info)info5506;// expressionsend161447 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44200, 0);((AST_Send)send161447)->info = (AST_Info)info5506;assign20238 = (Object)new_AST_Assign((Object)localvariable27184, (Object)send161447);// classsend161448 = (Object)new_AST_Send((Object)localvariable27184, (Object)SMB_class, 0);((AST_Send)send161448)->info = (AST_Info)info5506;// shouldsend161449 = (Object)new_AST_Send((Object)send161448, (Object)symbol44402, 0);((AST_Send)send161449)->info = (AST_Info)info5506;// =send161450 = (Object)new_AST_Send((Object)send161449, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send161450)->info = (AST_Info)info5506;// variablesend161451 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44202, 0);((AST_Send)send161451)->info = (AST_Info)info5506;// classsend161452 = (Object)new_AST_Send((Object)send161451, (Object)SMB_class, 0);((AST_Send)send161452)->info = (AST_Info)info5506;// shouldsend161453 = (Object)new_AST_Send((Object)send161452, (Object)symbol44402, 0);((AST_Send)send161453)->info = (AST_Info)info5506;// =send161454 = (Object)new_AST_Send((Object)send161453, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161454)->info = (AST_Info)info5506;// variablesend161455 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44202, 0);((AST_Send)send161455)->info = (AST_Info)info5506;// namesend161456 = (Object)new_AST_Send((Object)send161455, (Object)SMB_name, 0);((AST_Send)send161456)->info = (AST_Info)info5506;// shouldsend161457 = (Object)new_AST_Send((Object)send161456, (Object)symbol44402, 0);((AST_Send)send161457)->info = (AST_Info)info5506;string27198 = (Object)new_Type_String(L"c");constant34787 = (Object)new_AST_Constant((Object)string27198);// =send161458 = (Object)new_AST_Send((Object)send161457, (Object)SMB__equal, 1, (Object)constant34787);((AST_Send)send161458)->info = (AST_Info)info5506;// expressionsend161459 = (Object)new_AST_Send((Object)localvariable27184, (Object)symbol44200, 0);((AST_Send)send161459)->info = (AST_Info)info5506;// classsend161460 = (Object)new_AST_Send((Object)send161459, (Object)SMB_class, 0);((AST_Send)send161460)->info = (AST_Info)info5506;// shouldsend161461 = (Object)new_AST_Send((Object)send161460, (Object)symbol44402, 0);((AST_Send)send161461)->info = (AST_Info)info5506;// =send161462 = (Object)new_AST_Send((Object)send161461, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send161462)->info = (AST_Info)info5506;method41249 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24262, 16, assign20234, assign20235, assign20236, send161426, send161430, send161434, assign20237, send161438, send161442, send161446, assign20238, send161450, send161454, send161458, send161462, Self);((AST_Method)method41249)->info = (AST_Info)info5506;symbol44080 = (Object)new_Type_Symbol_cached(L"testExpression");methodclosure41152 = (Object)new_Runtime_MethodClosure(method41249);store_method((Type_Class)class6736, (Type_Symbol)symbol44080, (Runtime_MethodClosure)methodclosure41152);// SCParserTest>>testBinaryObjectDescription//testBinaryObjectDescription// 	| parser string result |// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "// 	string := PEGStringScanner on: 'abc def ghi '.// 	result := parser match: string.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector asString should = 'ghi'.// 	result := result receiver.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector asString should = 'def'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	string position should = 12.	" unary object description -> primary "// 	string := PEGStringScanner on: '3'.// 	result := parser match: string.// 	result class should = ASTNumber.// 	result number should = '3'.// 	string position should = 1.	" binary expression "// 	string := PEGStringScanner on: 'abc + ghi * c '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '*'.// 	result argument class should = ASTVariable.// 	result argument name should = 'c'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '+'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 13localvariable27185 = (Object)new_AST_Variable_named(L"parser");localvariable27186 = (Object)new_AST_Variable_named(L"string");localvariable27187 = (Object)new_AST_Variable_named(L"result");array24263 = (Object)new_Type_Array_with(3, (Object)localvariable27185, (Object)localvariable27186, (Object)localvariable27187);// binaryObjectDescriptionsend161463 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44434, 0);string27199 = (Object)new_Type_String(L"testBinaryObjectDescription");string27200 = (Object)new_Type_String(L"testBinaryObjectDescription\n\t| parser string result |\n\tparser := scparser binaryObjectDescription.\t\" unary object description -> unary expression \"\n\tstring := PEGStringScanner on: \'abc def ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector asString should = \'ghi\'.\n\tresult := result receiver.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector asString should = \'def\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tstring position should = 12.\t\" unary object description -> primary \"\n\tstring := PEGStringScanner on: \'3\'.\n\tresult := parser match: string.\n\tresult class should = ASTNumber.\n\tresult number should = \'3\'.\n\tstring position should = 1.\t\" binary expression \"\n\tstring := PEGStringScanner on: \'abc + ghi * c \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'*\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'c\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'+\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 13");smallint26997 = (Object)new_Type_SmallInt(-1);smallint26998 = (Object)new_Type_SmallInt(-1);info5507 = (Object)new_AST_Info((Type_String)string27200,(Type_String)string27199, (Type_SmallInt)smallint26997, (Type_SmallInt)smallint26998);((AST_Send)send161463)->info = (AST_Info)info5507;assign20239 = (Object)new_AST_Assign((Object)localvariable27185, (Object)send161463);string27201 = (Object)new_Type_String(L"abc def ghi ");constant34788 = (Object)new_AST_Constant((Object)string27201);// on:send161464 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34788);((AST_Send)send161464)->info = (AST_Info)info5507;assign20240 = (Object)new_AST_Assign((Object)localvariable27186, (Object)send161464);// match:send161465 = (Object)new_AST_Send((Object)localvariable27185, (Object)symbol44329, 1, (Object)localvariable27186);((AST_Send)send161465)->info = (AST_Info)info5507;assign20241 = (Object)new_AST_Assign((Object)localvariable27187, (Object)send161465);// classsend161466 = (Object)new_AST_Send((Object)localvariable27187, (Object)SMB_class, 0);((AST_Send)send161466)->info = (AST_Info)info5507;// shouldsend161467 = (Object)new_AST_Send((Object)send161466, (Object)symbol44402, 0);((AST_Send)send161467)->info = (AST_Info)info5507;// =send161468 = (Object)new_AST_Send((Object)send161467, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send161468)->info = (AST_Info)info5507;// selectorsend161469 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44115, 0);((AST_Send)send161469)->info = (AST_Info)info5507;// classsend161470 = (Object)new_AST_Send((Object)send161469, (Object)SMB_class, 0);((AST_Send)send161470)->info = (AST_Info)info5507;// shouldsend161471 = (Object)new_AST_Send((Object)send161470, (Object)symbol44402, 0);((AST_Send)send161471)->info = (AST_Info)info5507;// =send161472 = (Object)new_AST_Send((Object)send161471, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send161472)->info = (AST_Info)info5507;// selectorsend161473 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44115, 0);((AST_Send)send161473)->info = (AST_Info)info5507;// selectorsend161474 = (Object)new_AST_Send((Object)send161473, (Object)symbol44115, 0);((AST_Send)send161474)->info = (AST_Info)info5507;// asStringsend161475 = (Object)new_AST_Send((Object)send161474, (Object)SMB_asString, 0);((AST_Send)send161475)->info = (AST_Info)info5507;// shouldsend161476 = (Object)new_AST_Send((Object)send161475, (Object)symbol44402, 0);((AST_Send)send161476)->info = (AST_Info)info5507;string27202 = (Object)new_Type_String(L"ghi");constant34789 = (Object)new_AST_Constant((Object)string27202);// =send161477 = (Object)new_AST_Send((Object)send161476, (Object)SMB__equal, 1, (Object)constant34789);((AST_Send)send161477)->info = (AST_Info)info5507;// receiversend161478 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44218, 0);((AST_Send)send161478)->info = (AST_Info)info5507;assign20242 = (Object)new_AST_Assign((Object)localvariable27187, (Object)send161478);// classsend161479 = (Object)new_AST_Send((Object)localvariable27187, (Object)SMB_class, 0);((AST_Send)send161479)->info = (AST_Info)info5507;// shouldsend161480 = (Object)new_AST_Send((Object)send161479, (Object)symbol44402, 0);((AST_Send)send161480)->info = (AST_Info)info5507;// =send161481 = (Object)new_AST_Send((Object)send161480, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send161481)->info = (AST_Info)info5507;// selectorsend161482 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44115, 0);((AST_Send)send161482)->info = (AST_Info)info5507;// classsend161483 = (Object)new_AST_Send((Object)send161482, (Object)SMB_class, 0);((AST_Send)send161483)->info = (AST_Info)info5507;// shouldsend161484 = (Object)new_AST_Send((Object)send161483, (Object)symbol44402, 0);((AST_Send)send161484)->info = (AST_Info)info5507;// =send161485 = (Object)new_AST_Send((Object)send161484, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send161485)->info = (AST_Info)info5507;// selectorsend161486 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44115, 0);((AST_Send)send161486)->info = (AST_Info)info5507;// selectorsend161487 = (Object)new_AST_Send((Object)send161486, (Object)symbol44115, 0);((AST_Send)send161487)->info = (AST_Info)info5507;// asStringsend161488 = (Object)new_AST_Send((Object)send161487, (Object)SMB_asString, 0);((AST_Send)send161488)->info = (AST_Info)info5507;// shouldsend161489 = (Object)new_AST_Send((Object)send161488, (Object)symbol44402, 0);((AST_Send)send161489)->info = (AST_Info)info5507;string27203 = (Object)new_Type_String(L"def");constant34790 = (Object)new_AST_Constant((Object)string27203);// =send161490 = (Object)new_AST_Send((Object)send161489, (Object)SMB__equal, 1, (Object)constant34790);((AST_Send)send161490)->info = (AST_Info)info5507;// receiversend161491 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44218, 0);((AST_Send)send161491)->info = (AST_Info)info5507;// classsend161492 = (Object)new_AST_Send((Object)send161491, (Object)SMB_class, 0);((AST_Send)send161492)->info = (AST_Info)info5507;// shouldsend161493 = (Object)new_AST_Send((Object)send161492, (Object)symbol44402, 0);((AST_Send)send161493)->info = (AST_Info)info5507;// =send161494 = (Object)new_AST_Send((Object)send161493, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161494)->info = (AST_Info)info5507;// receiversend161495 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44218, 0);((AST_Send)send161495)->info = (AST_Info)info5507;// namesend161496 = (Object)new_AST_Send((Object)send161495, (Object)SMB_name, 0);((AST_Send)send161496)->info = (AST_Info)info5507;// shouldsend161497 = (Object)new_AST_Send((Object)send161496, (Object)symbol44402, 0);((AST_Send)send161497)->info = (AST_Info)info5507;string27204 = (Object)new_Type_String(L"abc");constant34791 = (Object)new_AST_Constant((Object)string27204);// =send161498 = (Object)new_AST_Send((Object)send161497, (Object)SMB__equal, 1, (Object)constant34791);((AST_Send)send161498)->info = (AST_Info)info5507;// positionsend161499 = (Object)new_AST_Send((Object)localvariable27186, (Object)symbol44475, 0);((AST_Send)send161499)->info = (AST_Info)info5507;// shouldsend161500 = (Object)new_AST_Send((Object)send161499, (Object)symbol44402, 0);((AST_Send)send161500)->info = (AST_Info)info5507;smallint26999 = (Object)new_Type_SmallInt(12);constant34792 = (Object)new_AST_Constant((Object)smallint26999);// =send161501 = (Object)new_AST_Send((Object)send161500, (Object)SMB__equal, 1, (Object)constant34792);((AST_Send)send161501)->info = (AST_Info)info5507;string27205 = (Object)new_Type_String(L"3");constant34793 = (Object)new_AST_Constant((Object)string27205);// on:send161502 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34793);((AST_Send)send161502)->info = (AST_Info)info5507;assign20243 = (Object)new_AST_Assign((Object)localvariable27186, (Object)send161502);// match:send161503 = (Object)new_AST_Send((Object)localvariable27185, (Object)symbol44329, 1, (Object)localvariable27186);((AST_Send)send161503)->info = (AST_Info)info5507;assign20244 = (Object)new_AST_Assign((Object)localvariable27187, (Object)send161503);// classsend161504 = (Object)new_AST_Send((Object)localvariable27187, (Object)SMB_class, 0);((AST_Send)send161504)->info = (AST_Info)info5507;// shouldsend161505 = (Object)new_AST_Send((Object)send161504, (Object)symbol44402, 0);((AST_Send)send161505)->info = (AST_Info)info5507;// =send161506 = (Object)new_AST_Send((Object)send161505, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send161506)->info = (AST_Info)info5507;// numbersend161507 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44192, 0);((AST_Send)send161507)->info = (AST_Info)info5507;// shouldsend161508 = (Object)new_AST_Send((Object)send161507, (Object)symbol44402, 0);((AST_Send)send161508)->info = (AST_Info)info5507;string27206 = (Object)new_Type_String(L"3");constant34794 = (Object)new_AST_Constant((Object)string27206);// =send161509 = (Object)new_AST_Send((Object)send161508, (Object)SMB__equal, 1, (Object)constant34794);((AST_Send)send161509)->info = (AST_Info)info5507;// positionsend161510 = (Object)new_AST_Send((Object)localvariable27186, (Object)symbol44475, 0);((AST_Send)send161510)->info = (AST_Info)info5507;// shouldsend161511 = (Object)new_AST_Send((Object)send161510, (Object)symbol44402, 0);((AST_Send)send161511)->info = (AST_Info)info5507;smallint27000 = (Object)new_Type_SmallInt(1);constant34795 = (Object)new_AST_Constant((Object)smallint27000);// =send161512 = (Object)new_AST_Send((Object)send161511, (Object)SMB__equal, 1, (Object)constant34795);((AST_Send)send161512)->info = (AST_Info)info5507;string27207 = (Object)new_Type_String(L"abc + ghi * c ");constant34796 = (Object)new_AST_Constant((Object)string27207);// on:send161513 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34796);((AST_Send)send161513)->info = (AST_Info)info5507;assign20245 = (Object)new_AST_Assign((Object)localvariable27186, (Object)send161513);// match:send161514 = (Object)new_AST_Send((Object)localvariable27185, (Object)symbol44329, 1, (Object)localvariable27186);((AST_Send)send161514)->info = (AST_Info)info5507;assign20246 = (Object)new_AST_Assign((Object)localvariable27187, (Object)send161514);// classsend161515 = (Object)new_AST_Send((Object)localvariable27187, (Object)SMB_class, 0);((AST_Send)send161515)->info = (AST_Info)info5507;// shouldsend161516 = (Object)new_AST_Send((Object)send161515, (Object)symbol44402, 0);((AST_Send)send161516)->info = (AST_Info)info5507;// =send161517 = (Object)new_AST_Send((Object)send161516, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send161517)->info = (AST_Info)info5507;// selectorsend161518 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44115, 0);((AST_Send)send161518)->info = (AST_Info)info5507;// printStringsend161519 = (Object)new_AST_Send((Object)send161518, (Object)symbol44332, 0);((AST_Send)send161519)->info = (AST_Info)info5507;// shouldsend161520 = (Object)new_AST_Send((Object)send161519, (Object)symbol44402, 0);((AST_Send)send161520)->info = (AST_Info)info5507;string27208 = (Object)new_Type_String(L"*");constant34797 = (Object)new_AST_Constant((Object)string27208);// =send161521 = (Object)new_AST_Send((Object)send161520, (Object)SMB__equal, 1, (Object)constant34797);((AST_Send)send161521)->info = (AST_Info)info5507;// argumentsend161522 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44224, 0);((AST_Send)send161522)->info = (AST_Info)info5507;// classsend161523 = (Object)new_AST_Send((Object)send161522, (Object)SMB_class, 0);((AST_Send)send161523)->info = (AST_Info)info5507;// shouldsend161524 = (Object)new_AST_Send((Object)send161523, (Object)symbol44402, 0);((AST_Send)send161524)->info = (AST_Info)info5507;// =send161525 = (Object)new_AST_Send((Object)send161524, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161525)->info = (AST_Info)info5507;// argumentsend161526 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44224, 0);((AST_Send)send161526)->info = (AST_Info)info5507;// namesend161527 = (Object)new_AST_Send((Object)send161526, (Object)SMB_name, 0);((AST_Send)send161527)->info = (AST_Info)info5507;// shouldsend161528 = (Object)new_AST_Send((Object)send161527, (Object)symbol44402, 0);((AST_Send)send161528)->info = (AST_Info)info5507;string27209 = (Object)new_Type_String(L"c");constant34798 = (Object)new_AST_Constant((Object)string27209);// =send161529 = (Object)new_AST_Send((Object)send161528, (Object)SMB__equal, 1, (Object)constant34798);((AST_Send)send161529)->info = (AST_Info)info5507;// receiversend161530 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44218, 0);((AST_Send)send161530)->info = (AST_Info)info5507;assign20247 = (Object)new_AST_Assign((Object)localvariable27187, (Object)send161530);// classsend161531 = (Object)new_AST_Send((Object)localvariable27187, (Object)SMB_class, 0);((AST_Send)send161531)->info = (AST_Info)info5507;// shouldsend161532 = (Object)new_AST_Send((Object)send161531, (Object)symbol44402, 0);((AST_Send)send161532)->info = (AST_Info)info5507;// =send161533 = (Object)new_AST_Send((Object)send161532, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send161533)->info = (AST_Info)info5507;// selectorsend161534 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44115, 0);((AST_Send)send161534)->info = (AST_Info)info5507;// printStringsend161535 = (Object)new_AST_Send((Object)send161534, (Object)symbol44332, 0);((AST_Send)send161535)->info = (AST_Info)info5507;// shouldsend161536 = (Object)new_AST_Send((Object)send161535, (Object)symbol44402, 0);((AST_Send)send161536)->info = (AST_Info)info5507;string27210 = (Object)new_Type_String(L"+");constant34799 = (Object)new_AST_Constant((Object)string27210);// =send161537 = (Object)new_AST_Send((Object)send161536, (Object)SMB__equal, 1, (Object)constant34799);((AST_Send)send161537)->info = (AST_Info)info5507;// receiversend161538 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44218, 0);((AST_Send)send161538)->info = (AST_Info)info5507;// classsend161539 = (Object)new_AST_Send((Object)send161538, (Object)SMB_class, 0);((AST_Send)send161539)->info = (AST_Info)info5507;// shouldsend161540 = (Object)new_AST_Send((Object)send161539, (Object)symbol44402, 0);((AST_Send)send161540)->info = (AST_Info)info5507;// =send161541 = (Object)new_AST_Send((Object)send161540, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161541)->info = (AST_Info)info5507;// receiversend161542 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44218, 0);((AST_Send)send161542)->info = (AST_Info)info5507;// namesend161543 = (Object)new_AST_Send((Object)send161542, (Object)SMB_name, 0);((AST_Send)send161543)->info = (AST_Info)info5507;// shouldsend161544 = (Object)new_AST_Send((Object)send161543, (Object)symbol44402, 0);((AST_Send)send161544)->info = (AST_Info)info5507;string27211 = (Object)new_Type_String(L"abc");constant34800 = (Object)new_AST_Constant((Object)string27211);// =send161545 = (Object)new_AST_Send((Object)send161544, (Object)SMB__equal, 1, (Object)constant34800);((AST_Send)send161545)->info = (AST_Info)info5507;// argumentsend161546 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44224, 0);((AST_Send)send161546)->info = (AST_Info)info5507;// classsend161547 = (Object)new_AST_Send((Object)send161546, (Object)SMB_class, 0);((AST_Send)send161547)->info = (AST_Info)info5507;// shouldsend161548 = (Object)new_AST_Send((Object)send161547, (Object)symbol44402, 0);((AST_Send)send161548)->info = (AST_Info)info5507;// =send161549 = (Object)new_AST_Send((Object)send161548, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161549)->info = (AST_Info)info5507;// argumentsend161550 = (Object)new_AST_Send((Object)localvariable27187, (Object)symbol44224, 0);((AST_Send)send161550)->info = (AST_Info)info5507;// namesend161551 = (Object)new_AST_Send((Object)send161550, (Object)SMB_name, 0);((AST_Send)send161551)->info = (AST_Info)info5507;// shouldsend161552 = (Object)new_AST_Send((Object)send161551, (Object)symbol44402, 0);((AST_Send)send161552)->info = (AST_Info)info5507;string27212 = (Object)new_Type_String(L"ghi");constant34801 = (Object)new_AST_Constant((Object)string27212);// =send161553 = (Object)new_AST_Send((Object)send161552, (Object)SMB__equal, 1, (Object)constant34801);((AST_Send)send161553)->info = (AST_Info)info5507;// positionsend161554 = (Object)new_AST_Send((Object)localvariable27186, (Object)symbol44475, 0);((AST_Send)send161554)->info = (AST_Info)info5507;// shouldsend161555 = (Object)new_AST_Send((Object)send161554, (Object)symbol44402, 0);((AST_Send)send161555)->info = (AST_Info)info5507;smallint27001 = (Object)new_Type_SmallInt(13);constant34802 = (Object)new_AST_Constant((Object)smallint27001);// =send161556 = (Object)new_AST_Send((Object)send161555, (Object)SMB__equal, 1, (Object)constant34802);((AST_Send)send161556)->info = (AST_Info)info5507;method41250 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24263, 33, assign20239, assign20240, assign20241, send161468, send161472, send161477, assign20242, send161481, send161485, send161490, send161494, send161498, send161501, assign20243, assign20244, send161506, send161509, send161512, assign20245, assign20246, send161517, send161521, send161525, send161529, assign20247, send161533, send161537, send161541, send161545, send161549, send161553, send161556, Self);((AST_Method)method41250)->info = (AST_Info)info5507;symbol44069 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");methodclosure41153 = (Object)new_Runtime_MethodClosure(method41250);store_method((Type_Class)class6736, (Type_Symbol)symbol44069, (Runtime_MethodClosure)methodclosure41153);// SCParserTest>>testBlockArguments//testBlockArguments// 	| string result var parser |// 	parser := scparser blockArguments.// 	string := PEGStringScanner on: ':abcd :def'.// 	result := parser match: string.// 	string position should = 10.// 	result class should = OrderedCollection.// 	result size should = 2.// 	var := result at: 1.// 	var class should = ASTVariable.// 	var name should = 'abcd'.// 	var := result at: 2.// 	var class should = ASTVariable.// 	var name should = 'def'.// 	string := PEGStringScanner on: ' :  abcd:   def '.// 	result := parser match: string.// 	string position should = 16.// 	result class should = OrderedCollection.// 	result size should = 2.// 	var := result first.// 	var class should = ASTVariable.// 	var name should = 'abcd'.// 	var := result at: 2.// 	var class should = ASTVariable.// 	var name should = 'def'localvariable27188 = (Object)new_AST_Variable_named(L"string");localvariable27189 = (Object)new_AST_Variable_named(L"result");localvariable27190 = (Object)new_AST_Variable_named(L"var");localvariable27191 = (Object)new_AST_Variable_named(L"parser");array24264 = (Object)new_Type_Array_with(4, (Object)localvariable27188, (Object)localvariable27189, (Object)localvariable27190, (Object)localvariable27191);// blockArgumentssend161557 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44463, 0);string27213 = (Object)new_Type_String(L"testBlockArguments");string27214 = (Object)new_Type_String(L"testBlockArguments\n\t| string result var parser |\n\tparser := scparser blockArguments.\n\tstring := PEGStringScanner on: \':abcd :def\'.\n\tresult := parser match: string.\n\tstring position should = 10.\n\tresult class should = OrderedCollection.\n\tresult size should = 2.\n\tvar := result at: 1.\n\tvar class should = ASTVariable.\n\tvar name should = \'abcd\'.\n\tvar := result at: 2.\n\tvar class should = ASTVariable.\n\tvar name should = \'def\'.\n\tstring := PEGStringScanner on: \' :  abcd:   def \'.\n\tresult := parser match: string.\n\tstring position should = 16.\n\tresult class should = OrderedCollection.\n\tresult size should = 2.\n\tvar := result first.\n\tvar class should = ASTVariable.\n\tvar name should = \'abcd\'.\n\tvar := result at: 2.\n\tvar class should = ASTVariable.\n\tvar name should = \'def\'");smallint27002 = (Object)new_Type_SmallInt(-1);smallint27003 = (Object)new_Type_SmallInt(-1);info5508 = (Object)new_AST_Info((Type_String)string27214,(Type_String)string27213, (Type_SmallInt)smallint27002, (Type_SmallInt)smallint27003);((AST_Send)send161557)->info = (AST_Info)info5508;assign20248 = (Object)new_AST_Assign((Object)localvariable27191, (Object)send161557);string27215 = (Object)new_Type_String(L":abcd :def");constant34803 = (Object)new_AST_Constant((Object)string27215);// on:send161558 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34803);((AST_Send)send161558)->info = (AST_Info)info5508;assign20249 = (Object)new_AST_Assign((Object)localvariable27188, (Object)send161558);// match:send161559 = (Object)new_AST_Send((Object)localvariable27191, (Object)symbol44329, 1, (Object)localvariable27188);((AST_Send)send161559)->info = (AST_Info)info5508;assign20250 = (Object)new_AST_Assign((Object)localvariable27189, (Object)send161559);// positionsend161560 = (Object)new_AST_Send((Object)localvariable27188, (Object)symbol44475, 0);((AST_Send)send161560)->info = (AST_Info)info5508;// shouldsend161561 = (Object)new_AST_Send((Object)send161560, (Object)symbol44402, 0);((AST_Send)send161561)->info = (AST_Info)info5508;smallint27004 = (Object)new_Type_SmallInt(10);constant34804 = (Object)new_AST_Constant((Object)smallint27004);// =send161562 = (Object)new_AST_Send((Object)send161561, (Object)SMB__equal, 1, (Object)constant34804);((AST_Send)send161562)->info = (AST_Info)info5508;// classsend161563 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_class, 0);((AST_Send)send161563)->info = (AST_Info)info5508;// shouldsend161564 = (Object)new_AST_Send((Object)send161563, (Object)symbol44402, 0);((AST_Send)send161564)->info = (AST_Info)info5508;// =send161565 = (Object)new_AST_Send((Object)send161564, (Object)SMB__equal, 1, (Object)classreference13389);((AST_Send)send161565)->info = (AST_Info)info5508;// sizesend161566 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_size, 0);((AST_Send)send161566)->info = (AST_Info)info5508;// shouldsend161567 = (Object)new_AST_Send((Object)send161566, (Object)symbol44402, 0);((AST_Send)send161567)->info = (AST_Info)info5508;smallint27005 = (Object)new_Type_SmallInt(2);constant34805 = (Object)new_AST_Constant((Object)smallint27005);// =send161568 = (Object)new_AST_Send((Object)send161567, (Object)SMB__equal, 1, (Object)constant34805);((AST_Send)send161568)->info = (AST_Info)info5508;smallint27006 = (Object)new_Type_SmallInt(1);constant34806 = (Object)new_AST_Constant((Object)smallint27006);// at:send161569 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_at_, 1, (Object)constant34806);((AST_Send)send161569)->info = (AST_Info)info5508;assign20251 = (Object)new_AST_Assign((Object)localvariable27190, (Object)send161569);// classsend161570 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_class, 0);((AST_Send)send161570)->info = (AST_Info)info5508;// shouldsend161571 = (Object)new_AST_Send((Object)send161570, (Object)symbol44402, 0);((AST_Send)send161571)->info = (AST_Info)info5508;// =send161572 = (Object)new_AST_Send((Object)send161571, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161572)->info = (AST_Info)info5508;// namesend161573 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_name, 0);((AST_Send)send161573)->info = (AST_Info)info5508;// shouldsend161574 = (Object)new_AST_Send((Object)send161573, (Object)symbol44402, 0);((AST_Send)send161574)->info = (AST_Info)info5508;string27216 = (Object)new_Type_String(L"abcd");constant34807 = (Object)new_AST_Constant((Object)string27216);// =send161575 = (Object)new_AST_Send((Object)send161574, (Object)SMB__equal, 1, (Object)constant34807);((AST_Send)send161575)->info = (AST_Info)info5508;smallint27007 = (Object)new_Type_SmallInt(2);constant34808 = (Object)new_AST_Constant((Object)smallint27007);// at:send161576 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_at_, 1, (Object)constant34808);((AST_Send)send161576)->info = (AST_Info)info5508;assign20252 = (Object)new_AST_Assign((Object)localvariable27190, (Object)send161576);// classsend161577 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_class, 0);((AST_Send)send161577)->info = (AST_Info)info5508;// shouldsend161578 = (Object)new_AST_Send((Object)send161577, (Object)symbol44402, 0);((AST_Send)send161578)->info = (AST_Info)info5508;// =send161579 = (Object)new_AST_Send((Object)send161578, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161579)->info = (AST_Info)info5508;// namesend161580 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_name, 0);((AST_Send)send161580)->info = (AST_Info)info5508;// shouldsend161581 = (Object)new_AST_Send((Object)send161580, (Object)symbol44402, 0);((AST_Send)send161581)->info = (AST_Info)info5508;string27217 = (Object)new_Type_String(L"def");constant34809 = (Object)new_AST_Constant((Object)string27217);// =send161582 = (Object)new_AST_Send((Object)send161581, (Object)SMB__equal, 1, (Object)constant34809);((AST_Send)send161582)->info = (AST_Info)info5508;string27218 = (Object)new_Type_String(L" :  abcd:   def ");constant34810 = (Object)new_AST_Constant((Object)string27218);// on:send161583 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34810);((AST_Send)send161583)->info = (AST_Info)info5508;assign20253 = (Object)new_AST_Assign((Object)localvariable27188, (Object)send161583);// match:send161584 = (Object)new_AST_Send((Object)localvariable27191, (Object)symbol44329, 1, (Object)localvariable27188);((AST_Send)send161584)->info = (AST_Info)info5508;assign20254 = (Object)new_AST_Assign((Object)localvariable27189, (Object)send161584);// positionsend161585 = (Object)new_AST_Send((Object)localvariable27188, (Object)symbol44475, 0);((AST_Send)send161585)->info = (AST_Info)info5508;// shouldsend161586 = (Object)new_AST_Send((Object)send161585, (Object)symbol44402, 0);((AST_Send)send161586)->info = (AST_Info)info5508;smallint27008 = (Object)new_Type_SmallInt(16);constant34811 = (Object)new_AST_Constant((Object)smallint27008);// =send161587 = (Object)new_AST_Send((Object)send161586, (Object)SMB__equal, 1, (Object)constant34811);((AST_Send)send161587)->info = (AST_Info)info5508;// classsend161588 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_class, 0);((AST_Send)send161588)->info = (AST_Info)info5508;// shouldsend161589 = (Object)new_AST_Send((Object)send161588, (Object)symbol44402, 0);((AST_Send)send161589)->info = (AST_Info)info5508;// =send161590 = (Object)new_AST_Send((Object)send161589, (Object)SMB__equal, 1, (Object)classreference13389);((AST_Send)send161590)->info = (AST_Info)info5508;// sizesend161591 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_size, 0);((AST_Send)send161591)->info = (AST_Info)info5508;// shouldsend161592 = (Object)new_AST_Send((Object)send161591, (Object)symbol44402, 0);((AST_Send)send161592)->info = (AST_Info)info5508;smallint27009 = (Object)new_Type_SmallInt(2);constant34812 = (Object)new_AST_Constant((Object)smallint27009);// =send161593 = (Object)new_AST_Send((Object)send161592, (Object)SMB__equal, 1, (Object)constant34812);((AST_Send)send161593)->info = (AST_Info)info5508;// firstsend161594 = (Object)new_AST_Send((Object)localvariable27189, (Object)symbol44180, 0);((AST_Send)send161594)->info = (AST_Info)info5508;assign20255 = (Object)new_AST_Assign((Object)localvariable27190, (Object)send161594);// classsend161595 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_class, 0);((AST_Send)send161595)->info = (AST_Info)info5508;// shouldsend161596 = (Object)new_AST_Send((Object)send161595, (Object)symbol44402, 0);((AST_Send)send161596)->info = (AST_Info)info5508;// =send161597 = (Object)new_AST_Send((Object)send161596, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161597)->info = (AST_Info)info5508;// namesend161598 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_name, 0);((AST_Send)send161598)->info = (AST_Info)info5508;// shouldsend161599 = (Object)new_AST_Send((Object)send161598, (Object)symbol44402, 0);((AST_Send)send161599)->info = (AST_Info)info5508;string27219 = (Object)new_Type_String(L"abcd");constant34813 = (Object)new_AST_Constant((Object)string27219);// =send161600 = (Object)new_AST_Send((Object)send161599, (Object)SMB__equal, 1, (Object)constant34813);((AST_Send)send161600)->info = (AST_Info)info5508;smallint27010 = (Object)new_Type_SmallInt(2);constant34814 = (Object)new_AST_Constant((Object)smallint27010);// at:send161601 = (Object)new_AST_Send((Object)localvariable27189, (Object)SMB_at_, 1, (Object)constant34814);((AST_Send)send161601)->info = (AST_Info)info5508;assign20256 = (Object)new_AST_Assign((Object)localvariable27190, (Object)send161601);// classsend161602 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_class, 0);((AST_Send)send161602)->info = (AST_Info)info5508;// shouldsend161603 = (Object)new_AST_Send((Object)send161602, (Object)symbol44402, 0);((AST_Send)send161603)->info = (AST_Info)info5508;// =send161604 = (Object)new_AST_Send((Object)send161603, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161604)->info = (AST_Info)info5508;// namesend161605 = (Object)new_AST_Send((Object)localvariable27190, (Object)SMB_name, 0);((AST_Send)send161605)->info = (AST_Info)info5508;// shouldsend161606 = (Object)new_AST_Send((Object)send161605, (Object)symbol44402, 0);((AST_Send)send161606)->info = (AST_Info)info5508;string27220 = (Object)new_Type_String(L"def");constant34815 = (Object)new_AST_Constant((Object)string27220);// =send161607 = (Object)new_AST_Send((Object)send161606, (Object)SMB__equal, 1, (Object)constant34815);((AST_Send)send161607)->info = (AST_Info)info5508;method41251 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24264, 24, assign20248, assign20249, assign20250, send161562, send161565, send161568, assign20251, send161572, send161575, assign20252, send161579, send161582, assign20253, assign20254, send161587, send161590, send161593, assign20255, send161597, send161600, assign20256, send161604, send161607, Self);((AST_Method)method41251)->info = (AST_Info)info5508;symbol44042 = (Object)new_Type_Symbol_cached(L"testBlockArguments");methodclosure41154 = (Object)new_Runtime_MethodClosure(method41251);store_method((Type_Class)class6736, (Type_Symbol)symbol44042, (Runtime_MethodClosure)methodclosure41154);// SCParserTest>>testSubExpression//testSubExpression// 	| parser string result |// 	parser := scparser subExpression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	(parser match: string) should be isNil.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpressionlocalvariable27192 = (Object)new_AST_Variable_named(L"parser");localvariable27193 = (Object)new_AST_Variable_named(L"string");localvariable27194 = (Object)new_AST_Variable_named(L"result");array24265 = (Object)new_Type_Array_with(3, (Object)localvariable27192, (Object)localvariable27193, (Object)localvariable27194);// subExpressionsend161608 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44446, 0);string27221 = (Object)new_Type_String(L"testSubExpression");string27222 = (Object)new_Type_String(L"testSubExpression\n\t| parser string result |\n\tparser := scparser subExpression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\t(parser match: string) should be isNil.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");smallint27011 = (Object)new_Type_SmallInt(-1);smallint27012 = (Object)new_Type_SmallInt(-1);info5509 = (Object)new_AST_Info((Type_String)string27222,(Type_String)string27221, (Type_SmallInt)smallint27011, (Type_SmallInt)smallint27012);((AST_Send)send161608)->info = (AST_Info)info5509;assign20257 = (Object)new_AST_Assign((Object)localvariable27192, (Object)send161608);string27223 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");constant34816 = (Object)new_AST_Constant((Object)string27223);// on:send161609 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34816);((AST_Send)send161609)->info = (AST_Info)info5509;assign20258 = (Object)new_AST_Assign((Object)localvariable27193, (Object)send161609);// match:send161610 = (Object)new_AST_Send((Object)localvariable27192, (Object)symbol44329, 1, (Object)localvariable27193);((AST_Send)send161610)->info = (AST_Info)info5509;// shouldsend161611 = (Object)new_AST_Send((Object)send161610, (Object)symbol44402, 0);((AST_Send)send161611)->info = (AST_Info)info5509;// besend161612 = (Object)new_AST_Send((Object)send161611, (Object)symbol44476, 0);((AST_Send)send161612)->info = (AST_Info)info5509;// isNilsend161613 = (Object)new_AST_Send((Object)send161612, (Object)SMB_isNil, 0);((AST_Send)send161613)->info = (AST_Info)info5509;string27224 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");constant34817 = (Object)new_AST_Constant((Object)string27224);// on:send161614 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34817);((AST_Send)send161614)->info = (AST_Info)info5509;assign20259 = (Object)new_AST_Assign((Object)localvariable27193, (Object)send161614);// match:send161615 = (Object)new_AST_Send((Object)localvariable27192, (Object)symbol44329, 1, (Object)localvariable27193);((AST_Send)send161615)->info = (AST_Info)info5509;assign20260 = (Object)new_AST_Assign((Object)localvariable27194, (Object)send161615);// classsend161616 = (Object)new_AST_Send((Object)localvariable27194, (Object)SMB_class, 0);((AST_Send)send161616)->info = (AST_Info)info5509;// shouldsend161617 = (Object)new_AST_Send((Object)send161616, (Object)symbol44402, 0);((AST_Send)send161617)->info = (AST_Info)info5509;// =send161618 = (Object)new_AST_Send((Object)send161617, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send161618)->info = (AST_Info)info5509;// variablesend161619 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44202, 0);((AST_Send)send161619)->info = (AST_Info)info5509;// classsend161620 = (Object)new_AST_Send((Object)send161619, (Object)SMB_class, 0);((AST_Send)send161620)->info = (AST_Info)info5509;// shouldsend161621 = (Object)new_AST_Send((Object)send161620, (Object)symbol44402, 0);((AST_Send)send161621)->info = (AST_Info)info5509;// =send161622 = (Object)new_AST_Send((Object)send161621, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161622)->info = (AST_Info)info5509;// variablesend161623 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44202, 0);((AST_Send)send161623)->info = (AST_Info)info5509;// namesend161624 = (Object)new_AST_Send((Object)send161623, (Object)SMB_name, 0);((AST_Send)send161624)->info = (AST_Info)info5509;// shouldsend161625 = (Object)new_AST_Send((Object)send161624, (Object)symbol44402, 0);((AST_Send)send161625)->info = (AST_Info)info5509;string27225 = (Object)new_Type_String(L"a");constant34818 = (Object)new_AST_Constant((Object)string27225);// =send161626 = (Object)new_AST_Send((Object)send161625, (Object)SMB__equal, 1, (Object)constant34818);((AST_Send)send161626)->info = (AST_Info)info5509;// expressionsend161627 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44200, 0);((AST_Send)send161627)->info = (AST_Info)info5509;assign20261 = (Object)new_AST_Assign((Object)localvariable27194, (Object)send161627);// classsend161628 = (Object)new_AST_Send((Object)localvariable27194, (Object)SMB_class, 0);((AST_Send)send161628)->info = (AST_Info)info5509;// shouldsend161629 = (Object)new_AST_Send((Object)send161628, (Object)symbol44402, 0);((AST_Send)send161629)->info = (AST_Info)info5509;// =send161630 = (Object)new_AST_Send((Object)send161629, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send161630)->info = (AST_Info)info5509;// variablesend161631 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44202, 0);((AST_Send)send161631)->info = (AST_Info)info5509;// classsend161632 = (Object)new_AST_Send((Object)send161631, (Object)SMB_class, 0);((AST_Send)send161632)->info = (AST_Info)info5509;// shouldsend161633 = (Object)new_AST_Send((Object)send161632, (Object)symbol44402, 0);((AST_Send)send161633)->info = (AST_Info)info5509;// =send161634 = (Object)new_AST_Send((Object)send161633, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161634)->info = (AST_Info)info5509;// variablesend161635 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44202, 0);((AST_Send)send161635)->info = (AST_Info)info5509;// namesend161636 = (Object)new_AST_Send((Object)send161635, (Object)SMB_name, 0);((AST_Send)send161636)->info = (AST_Info)info5509;// shouldsend161637 = (Object)new_AST_Send((Object)send161636, (Object)symbol44402, 0);((AST_Send)send161637)->info = (AST_Info)info5509;string27226 = (Object)new_Type_String(L"b");constant34819 = (Object)new_AST_Constant((Object)string27226);// =send161638 = (Object)new_AST_Send((Object)send161637, (Object)SMB__equal, 1, (Object)constant34819);((AST_Send)send161638)->info = (AST_Info)info5509;// expressionsend161639 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44200, 0);((AST_Send)send161639)->info = (AST_Info)info5509;assign20262 = (Object)new_AST_Assign((Object)localvariable27194, (Object)send161639);// classsend161640 = (Object)new_AST_Send((Object)localvariable27194, (Object)SMB_class, 0);((AST_Send)send161640)->info = (AST_Info)info5509;// shouldsend161641 = (Object)new_AST_Send((Object)send161640, (Object)symbol44402, 0);((AST_Send)send161641)->info = (AST_Info)info5509;// =send161642 = (Object)new_AST_Send((Object)send161641, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send161642)->info = (AST_Info)info5509;// variablesend161643 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44202, 0);((AST_Send)send161643)->info = (AST_Info)info5509;// classsend161644 = (Object)new_AST_Send((Object)send161643, (Object)SMB_class, 0);((AST_Send)send161644)->info = (AST_Info)info5509;// shouldsend161645 = (Object)new_AST_Send((Object)send161644, (Object)symbol44402, 0);((AST_Send)send161645)->info = (AST_Info)info5509;// =send161646 = (Object)new_AST_Send((Object)send161645, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161646)->info = (AST_Info)info5509;// variablesend161647 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44202, 0);((AST_Send)send161647)->info = (AST_Info)info5509;// namesend161648 = (Object)new_AST_Send((Object)send161647, (Object)SMB_name, 0);((AST_Send)send161648)->info = (AST_Info)info5509;// shouldsend161649 = (Object)new_AST_Send((Object)send161648, (Object)symbol44402, 0);((AST_Send)send161649)->info = (AST_Info)info5509;string27227 = (Object)new_Type_String(L"c");constant34820 = (Object)new_AST_Constant((Object)string27227);// =send161650 = (Object)new_AST_Send((Object)send161649, (Object)SMB__equal, 1, (Object)constant34820);((AST_Send)send161650)->info = (AST_Info)info5509;// expressionsend161651 = (Object)new_AST_Send((Object)localvariable27194, (Object)symbol44200, 0);((AST_Send)send161651)->info = (AST_Info)info5509;// classsend161652 = (Object)new_AST_Send((Object)send161651, (Object)SMB_class, 0);((AST_Send)send161652)->info = (AST_Info)info5509;// shouldsend161653 = (Object)new_AST_Send((Object)send161652, (Object)symbol44402, 0);((AST_Send)send161653)->info = (AST_Info)info5509;// =send161654 = (Object)new_AST_Send((Object)send161653, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send161654)->info = (AST_Info)info5509;method41252 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24265, 18, assign20257, assign20258, send161613, assign20259, assign20260, send161618, send161622, send161626, assign20261, send161630, send161634, send161638, assign20262, send161642, send161646, send161650, send161654, Self);((AST_Method)method41252)->info = (AST_Info)info5509;symbol44062 = (Object)new_Type_Symbol_cached(L"testSubExpression");methodclosure41155 = (Object)new_Runtime_MethodClosure(method41252);store_method((Type_Class)class6736, (Type_Symbol)symbol44062, (Runtime_MethodClosure)methodclosure41155);// SCParserTest>>testMethod4//testMethod4// 	| parser string result |// 	parser := scparser method.// 	string := 'withA: a withB: b withC: c// 		a := b > c.// 		a ifTrue: [^ b]// 		  ifFalse: [^ c]// 	'.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message asString should = 'withA:withB:withC:'.// 	result statements last hasReturnExpression should be true.localvariable27195 = (Object)new_AST_Variable_named(L"parser");localvariable27196 = (Object)new_AST_Variable_named(L"string");localvariable27197 = (Object)new_AST_Variable_named(L"result");array24266 = (Object)new_Type_Array_with(3, (Object)localvariable27195, (Object)localvariable27196, (Object)localvariable27197);symbol44477 = (Object)new_Type_Symbol_cached(L"method");// methodsend161655 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44477, 0);string27228 = (Object)new_Type_String(L"testMethod4");string27229 = (Object)new_Type_String(L"testMethod4\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t\'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message asString should = \'withA:withB:withC:\'.\n\tresult statements last hasReturnExpression should be true.");smallint27013 = (Object)new_Type_SmallInt(-1);smallint27014 = (Object)new_Type_SmallInt(-1);info5510 = (Object)new_AST_Info((Type_String)string27229,(Type_String)string27228, (Type_SmallInt)smallint27013, (Type_SmallInt)smallint27014);((AST_Send)send161655)->info = (AST_Info)info5510;assign20263 = (Object)new_AST_Assign((Object)localvariable27195, (Object)send161655);string27230 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");constant34821 = (Object)new_AST_Constant((Object)string27230);assign20264 = (Object)new_AST_Assign((Object)localvariable27196, (Object)constant34821);// parse:send161656 = (Object)new_AST_Send((Object)localvariable27195, (Object)symbol44349, 1, (Object)localvariable27196);((AST_Send)send161656)->info = (AST_Info)info5510;assign20265 = (Object)new_AST_Assign((Object)localvariable27197, (Object)send161656);// hasReturnExpressionsend161657 = (Object)new_AST_Send((Object)localvariable27197, (Object)symbol44169, 0);((AST_Send)send161657)->info = (AST_Info)info5510;// shouldsend161658 = (Object)new_AST_Send((Object)send161657, (Object)symbol44402, 0);((AST_Send)send161658)->info = (AST_Info)info5510;// besend161659 = (Object)new_AST_Send((Object)send161658, (Object)symbol44476, 0);((AST_Send)send161659)->info = (AST_Info)info5510;symbol44478 = (Object)new_Type_Symbol_cached(L"true");// truesend161660 = (Object)new_AST_Send((Object)send161659, (Object)symbol44478, 0);((AST_Send)send161660)->info = (AST_Info)info5510;// classsend161661 = (Object)new_AST_Send((Object)localvariable27197, (Object)SMB_class, 0);((AST_Send)send161661)->info = (AST_Info)info5510;// shouldsend161662 = (Object)new_AST_Send((Object)send161661, (Object)symbol44402, 0);((AST_Send)send161662)->info = (AST_Info)info5510;// =send161663 = (Object)new_AST_Send((Object)send161662, (Object)SMB__equal, 1, (Object)classreference13419);((AST_Send)send161663)->info = (AST_Info)info5510;// messagesend161664 = (Object)new_AST_Send((Object)localvariable27197, (Object)symbol44229, 0);((AST_Send)send161664)->info = (AST_Info)info5510;// asStringsend161665 = (Object)new_AST_Send((Object)send161664, (Object)SMB_asString, 0);((AST_Send)send161665)->info = (AST_Info)info5510;// shouldsend161666 = (Object)new_AST_Send((Object)send161665, (Object)symbol44402, 0);((AST_Send)send161666)->info = (AST_Info)info5510;string27231 = (Object)new_Type_String(L"withA:withB:withC:");constant34822 = (Object)new_AST_Constant((Object)string27231);// =send161667 = (Object)new_AST_Send((Object)send161666, (Object)SMB__equal, 1, (Object)constant34822);((AST_Send)send161667)->info = (AST_Info)info5510;// statementssend161668 = (Object)new_AST_Send((Object)localvariable27197, (Object)symbol44225, 0);((AST_Send)send161668)->info = (AST_Info)info5510;// lastsend161669 = (Object)new_AST_Send((Object)send161668, (Object)symbol44179, 0);((AST_Send)send161669)->info = (AST_Info)info5510;// hasReturnExpressionsend161670 = (Object)new_AST_Send((Object)send161669, (Object)symbol44169, 0);((AST_Send)send161670)->info = (AST_Info)info5510;// shouldsend161671 = (Object)new_AST_Send((Object)send161670, (Object)symbol44402, 0);((AST_Send)send161671)->info = (AST_Info)info5510;// besend161672 = (Object)new_AST_Send((Object)send161671, (Object)symbol44476, 0);((AST_Send)send161672)->info = (AST_Info)info5510;// truesend161673 = (Object)new_AST_Send((Object)send161672, (Object)symbol44478, 0);((AST_Send)send161673)->info = (AST_Info)info5510;method41253 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24266, 8, assign20263, assign20264, assign20265, send161660, send161663, send161667, send161673, Self);((AST_Method)method41253)->info = (AST_Info)info5510;symbol44054 = (Object)new_Type_Symbol_cached(L"testMethod4");methodclosure41156 = (Object)new_Runtime_MethodClosure(method41253);store_method((Type_Class)class6736, (Type_Symbol)symbol44054, (Runtime_MethodClosure)methodclosure41156);// SCParserTest>>testAssignmentExpressions//testAssignmentExpressions// 	| parser string |// 	parser := scparser assignmentExpressions.// 	string := PEGStringScanner on: 'a :=  b:= c := d'.// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)// 	at: 1 put: 'a';// 	at: 2 put: 'b';// 	at: 3 put: 'c';// 	yourself).// 	string position should = 15.// 	string := PEGStringScanner on: ''.// 	(parser match: string) should not be isNillocalvariable27198 = (Object)new_AST_Variable_named(L"parser");localvariable27199 = (Object)new_AST_Variable_named(L"string");array24267 = (Object)new_Type_Array_with(2, (Object)localvariable27198, (Object)localvariable27199);// assignmentExpressionssend161674 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44467, 0);string27232 = (Object)new_Type_String(L"testAssignmentExpressions");string27233 = (Object)new_Type_String(L"testAssignmentExpressions\n\t| parser string |\n\tparser := scparser assignmentExpressions.\n\tstring := PEGStringScanner on: \'a :=  b:= c := d\'.\n\t((parser match: string) collect: #name) asArray should = ((Array new: 3)\n\tat: 1 put: \'a\';\n\tat: 2 put: \'b\';\n\tat: 3 put: \'c\';\n\tyourself).\n\tstring position should = 15.\n\tstring := PEGStringScanner on: \'\'.\n\t(parser match: string) should not be isNil");smallint27015 = (Object)new_Type_SmallInt(-1);smallint27016 = (Object)new_Type_SmallInt(-1);info5511 = (Object)new_AST_Info((Type_String)string27233,(Type_String)string27232, (Type_SmallInt)smallint27015, (Type_SmallInt)smallint27016);((AST_Send)send161674)->info = (AST_Info)info5511;assign20266 = (Object)new_AST_Assign((Object)localvariable27198, (Object)send161674);string27234 = (Object)new_Type_String(L"a :=  b:= c := d");constant34823 = (Object)new_AST_Constant((Object)string27234);// on:send161675 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34823);((AST_Send)send161675)->info = (AST_Info)info5511;assign20267 = (Object)new_AST_Assign((Object)localvariable27199, (Object)send161675);// match:send161676 = (Object)new_AST_Send((Object)localvariable27198, (Object)symbol44329, 1, (Object)localvariable27199);((AST_Send)send161676)->info = (AST_Info)info5511;constant34824 = (Object)new_AST_Constant((Object)SMB_name);// collect:send161677 = (Object)new_AST_Send((Object)send161676, (Object)symbol44435, 1, (Object)constant34824);((AST_Send)send161677)->info = (AST_Info)info5511;// asArraysend161678 = (Object)new_AST_Send((Object)send161677, (Object)SMB_asArray, 0);((AST_Send)send161678)->info = (AST_Info)info5511;// shouldsend161679 = (Object)new_AST_Send((Object)send161678, (Object)symbol44402, 0);((AST_Send)send161679)->info = (AST_Info)info5511;localvariable27200 = (Object)new_AST_Variable_named(L"receiver");array24268 = (Object)new_Type_Array_with(1, (Object)localvariable27200);smallint27017 = (Object)new_Type_SmallInt(1);constant34825 = (Object)new_AST_Constant((Object)smallint27017);string27235 = (Object)new_Type_String(L"a");constant34826 = (Object)new_AST_Constant((Object)string27235);// at:put:send161680 = (Object)new_AST_Send((Object)localvariable27200, (Object)SMB_at_put_, 2, (Object)constant34825, (Object)constant34826);((AST_Send)send161680)->info = (AST_Info)info5511;smallint27018 = (Object)new_Type_SmallInt(2);constant34827 = (Object)new_AST_Constant((Object)smallint27018);string27236 = (Object)new_Type_String(L"b");constant34828 = (Object)new_AST_Constant((Object)string27236);// at:put:send161681 = (Object)new_AST_Send((Object)localvariable27200, (Object)SMB_at_put_, 2, (Object)constant34827, (Object)constant34828);((AST_Send)send161681)->info = (AST_Info)info5511;smallint27019 = (Object)new_Type_SmallInt(3);constant34829 = (Object)new_AST_Constant((Object)smallint27019);string27237 = (Object)new_Type_String(L"c");constant34830 = (Object)new_AST_Constant((Object)string27237);// at:put:send161682 = (Object)new_AST_Send((Object)localvariable27200, (Object)SMB_at_put_, 2, (Object)constant34829, (Object)constant34830);((AST_Send)send161682)->info = (AST_Info)info5511;// yourselfsend161683 = (Object)new_AST_Send((Object)localvariable27200, (Object)symbol44008, 0);((AST_Send)send161683)->info = (AST_Info)info5511;block11858 = (Object)new_AST_Block_with((Type_Array)array24268, (Type_Array)empty_Type_Array, 1, 4, send161680, send161681, send161682, send161683);smallint27020 = (Object)new_Type_SmallInt(3);constant34831 = (Object)new_AST_Constant((Object)smallint27020);// new:send161684 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant34831);((AST_Send)send161684)->info = (AST_Info)info5511;// value:send161685 = (Object)new_AST_Send((Object)block11858, (Object)SMB_value_, 1, (Object)send161684);((AST_Send)send161685)->info = (AST_Info)info5511;// =send161686 = (Object)new_AST_Send((Object)send161679, (Object)SMB__equal, 1, (Object)send161685);((AST_Send)send161686)->info = (AST_Info)info5511;// positionsend161687 = (Object)new_AST_Send((Object)localvariable27199, (Object)symbol44475, 0);((AST_Send)send161687)->info = (AST_Info)info5511;// shouldsend161688 = (Object)new_AST_Send((Object)send161687, (Object)symbol44402, 0);((AST_Send)send161688)->info = (AST_Info)info5511;smallint27021 = (Object)new_Type_SmallInt(15);constant34832 = (Object)new_AST_Constant((Object)smallint27021);// =send161689 = (Object)new_AST_Send((Object)send161688, (Object)SMB__equal, 1, (Object)constant34832);((AST_Send)send161689)->info = (AST_Info)info5511;string27238 = (Object)new_Type_String(L"");constant34833 = (Object)new_AST_Constant((Object)string27238);// on:send161690 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34833);((AST_Send)send161690)->info = (AST_Info)info5511;assign20268 = (Object)new_AST_Assign((Object)localvariable27199, (Object)send161690);// match:send161691 = (Object)new_AST_Send((Object)localvariable27198, (Object)symbol44329, 1, (Object)localvariable27199);((AST_Send)send161691)->info = (AST_Info)info5511;// shouldsend161692 = (Object)new_AST_Send((Object)send161691, (Object)symbol44402, 0);((AST_Send)send161692)->info = (AST_Info)info5511;// notsend161693 = (Object)new_AST_Send((Object)send161692, (Object)SMB_not, 0);((AST_Send)send161693)->info = (AST_Info)info5511;// besend161694 = (Object)new_AST_Send((Object)send161693, (Object)symbol44476, 0);((AST_Send)send161694)->info = (AST_Info)info5511;// isNilsend161695 = (Object)new_AST_Send((Object)send161694, (Object)SMB_isNil, 0);((AST_Send)send161695)->info = (AST_Info)info5511;method41254 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24267, 7, assign20266, assign20267, send161686, send161689, assign20268, send161695, Self);((AST_Method)method41254)->info = (AST_Info)info5511;symbol44074 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");methodclosure41157 = (Object)new_Runtime_MethodClosure(method41254);store_method((Type_Class)class6736, (Type_Symbol)symbol44074, (Runtime_MethodClosure)methodclosure41157);// SCParserTest>>testBlock//testBlock// 	| parser string result |// 	parser := scparser block.// 	string := PEGStringScanner on: '[]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[||]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 4.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[ | a   f d| ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 3.// 	result parameters size should = 0.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[ || b. d ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 2.// 	string := PEGStringScanner on: '[ || b. ^ d ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 2.// 	string := PEGStringScanner on: '[ || b. d. ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 2localvariable27201 = (Object)new_AST_Variable_named(L"parser");localvariable27202 = (Object)new_AST_Variable_named(L"string");localvariable27203 = (Object)new_AST_Variable_named(L"result");array24269 = (Object)new_Type_Array_with(3, (Object)localvariable27201, (Object)localvariable27202, (Object)localvariable27203);// blocksend161696 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44458, 0);string27239 = (Object)new_Type_String(L"testBlock");string27240 = (Object)new_Type_String(L"testBlock\n\t| parser string result |\n\tparser := scparser block.\n\tstring := PEGStringScanner on: \'[]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[||]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[:a :bcd :  e  :f | ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 4.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[ | a   f d| ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 3.\n\tresult parameters size should = 0.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[ || b. d ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 2.\n\tstring := PEGStringScanner on: \'[ || b. ^ d ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 2.\n\tstring := PEGStringScanner on: \'[ || b. d. ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 2");smallint27022 = (Object)new_Type_SmallInt(-1);smallint27023 = (Object)new_Type_SmallInt(-1);info5512 = (Object)new_AST_Info((Type_String)string27240,(Type_String)string27239, (Type_SmallInt)smallint27022, (Type_SmallInt)smallint27023);((AST_Send)send161696)->info = (AST_Info)info5512;assign20269 = (Object)new_AST_Assign((Object)localvariable27201, (Object)send161696);string27241 = (Object)new_Type_String(L"[]");constant34834 = (Object)new_AST_Constant((Object)string27241);// on:send161697 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34834);((AST_Send)send161697)->info = (AST_Info)info5512;assign20270 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161697);// match:send161698 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161698)->info = (AST_Info)info5512;assign20271 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161698);// classsend161699 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161699)->info = (AST_Info)info5512;// shouldsend161700 = (Object)new_AST_Send((Object)send161699, (Object)symbol44402, 0);((AST_Send)send161700)->info = (AST_Info)info5512;// =send161701 = (Object)new_AST_Send((Object)send161700, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161701)->info = (AST_Info)info5512;// temporariessend161702 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161702)->info = (AST_Info)info5512;// sizesend161703 = (Object)new_AST_Send((Object)send161702, (Object)SMB_size, 0);((AST_Send)send161703)->info = (AST_Info)info5512;// shouldsend161704 = (Object)new_AST_Send((Object)send161703, (Object)symbol44402, 0);((AST_Send)send161704)->info = (AST_Info)info5512;smallint27024 = (Object)new_Type_SmallInt(0);constant34835 = (Object)new_AST_Constant((Object)smallint27024);// =send161705 = (Object)new_AST_Send((Object)send161704, (Object)SMB__equal, 1, (Object)constant34835);((AST_Send)send161705)->info = (AST_Info)info5512;// parameterssend161706 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161706)->info = (AST_Info)info5512;// sizesend161707 = (Object)new_AST_Send((Object)send161706, (Object)SMB_size, 0);((AST_Send)send161707)->info = (AST_Info)info5512;// shouldsend161708 = (Object)new_AST_Send((Object)send161707, (Object)symbol44402, 0);((AST_Send)send161708)->info = (AST_Info)info5512;smallint27025 = (Object)new_Type_SmallInt(0);constant34836 = (Object)new_AST_Constant((Object)smallint27025);// =send161709 = (Object)new_AST_Send((Object)send161708, (Object)SMB__equal, 1, (Object)constant34836);((AST_Send)send161709)->info = (AST_Info)info5512;// statementssend161710 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161710)->info = (AST_Info)info5512;// sizesend161711 = (Object)new_AST_Send((Object)send161710, (Object)SMB_size, 0);((AST_Send)send161711)->info = (AST_Info)info5512;// shouldsend161712 = (Object)new_AST_Send((Object)send161711, (Object)symbol44402, 0);((AST_Send)send161712)->info = (AST_Info)info5512;smallint27026 = (Object)new_Type_SmallInt(0);constant34837 = (Object)new_AST_Constant((Object)smallint27026);// =send161713 = (Object)new_AST_Send((Object)send161712, (Object)SMB__equal, 1, (Object)constant34837);((AST_Send)send161713)->info = (AST_Info)info5512;string27242 = (Object)new_Type_String(L"[||]");constant34838 = (Object)new_AST_Constant((Object)string27242);// on:send161714 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34838);((AST_Send)send161714)->info = (AST_Info)info5512;assign20272 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161714);// match:send161715 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161715)->info = (AST_Info)info5512;assign20273 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161715);// classsend161716 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161716)->info = (AST_Info)info5512;// shouldsend161717 = (Object)new_AST_Send((Object)send161716, (Object)symbol44402, 0);((AST_Send)send161717)->info = (AST_Info)info5512;// =send161718 = (Object)new_AST_Send((Object)send161717, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161718)->info = (AST_Info)info5512;// temporariessend161719 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161719)->info = (AST_Info)info5512;// sizesend161720 = (Object)new_AST_Send((Object)send161719, (Object)SMB_size, 0);((AST_Send)send161720)->info = (AST_Info)info5512;// shouldsend161721 = (Object)new_AST_Send((Object)send161720, (Object)symbol44402, 0);((AST_Send)send161721)->info = (AST_Info)info5512;smallint27027 = (Object)new_Type_SmallInt(0);constant34839 = (Object)new_AST_Constant((Object)smallint27027);// =send161722 = (Object)new_AST_Send((Object)send161721, (Object)SMB__equal, 1, (Object)constant34839);((AST_Send)send161722)->info = (AST_Info)info5512;// parameterssend161723 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161723)->info = (AST_Info)info5512;// sizesend161724 = (Object)new_AST_Send((Object)send161723, (Object)SMB_size, 0);((AST_Send)send161724)->info = (AST_Info)info5512;// shouldsend161725 = (Object)new_AST_Send((Object)send161724, (Object)symbol44402, 0);((AST_Send)send161725)->info = (AST_Info)info5512;smallint27028 = (Object)new_Type_SmallInt(0);constant34840 = (Object)new_AST_Constant((Object)smallint27028);// =send161726 = (Object)new_AST_Send((Object)send161725, (Object)SMB__equal, 1, (Object)constant34840);((AST_Send)send161726)->info = (AST_Info)info5512;// statementssend161727 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161727)->info = (AST_Info)info5512;// sizesend161728 = (Object)new_AST_Send((Object)send161727, (Object)SMB_size, 0);((AST_Send)send161728)->info = (AST_Info)info5512;// shouldsend161729 = (Object)new_AST_Send((Object)send161728, (Object)symbol44402, 0);((AST_Send)send161729)->info = (AST_Info)info5512;smallint27029 = (Object)new_Type_SmallInt(0);constant34841 = (Object)new_AST_Constant((Object)smallint27029);// =send161730 = (Object)new_AST_Send((Object)send161729, (Object)SMB__equal, 1, (Object)constant34841);((AST_Send)send161730)->info = (AST_Info)info5512;string27243 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");constant34842 = (Object)new_AST_Constant((Object)string27243);// on:send161731 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34842);((AST_Send)send161731)->info = (AST_Info)info5512;assign20274 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161731);// match:send161732 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161732)->info = (AST_Info)info5512;assign20275 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161732);// classsend161733 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161733)->info = (AST_Info)info5512;// shouldsend161734 = (Object)new_AST_Send((Object)send161733, (Object)symbol44402, 0);((AST_Send)send161734)->info = (AST_Info)info5512;// =send161735 = (Object)new_AST_Send((Object)send161734, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161735)->info = (AST_Info)info5512;// temporariessend161736 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161736)->info = (AST_Info)info5512;// sizesend161737 = (Object)new_AST_Send((Object)send161736, (Object)SMB_size, 0);((AST_Send)send161737)->info = (AST_Info)info5512;// shouldsend161738 = (Object)new_AST_Send((Object)send161737, (Object)symbol44402, 0);((AST_Send)send161738)->info = (AST_Info)info5512;smallint27030 = (Object)new_Type_SmallInt(0);constant34843 = (Object)new_AST_Constant((Object)smallint27030);// =send161739 = (Object)new_AST_Send((Object)send161738, (Object)SMB__equal, 1, (Object)constant34843);((AST_Send)send161739)->info = (AST_Info)info5512;// parameterssend161740 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161740)->info = (AST_Info)info5512;// sizesend161741 = (Object)new_AST_Send((Object)send161740, (Object)SMB_size, 0);((AST_Send)send161741)->info = (AST_Info)info5512;// shouldsend161742 = (Object)new_AST_Send((Object)send161741, (Object)symbol44402, 0);((AST_Send)send161742)->info = (AST_Info)info5512;smallint27031 = (Object)new_Type_SmallInt(4);constant34844 = (Object)new_AST_Constant((Object)smallint27031);// =send161743 = (Object)new_AST_Send((Object)send161742, (Object)SMB__equal, 1, (Object)constant34844);((AST_Send)send161743)->info = (AST_Info)info5512;// statementssend161744 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161744)->info = (AST_Info)info5512;// sizesend161745 = (Object)new_AST_Send((Object)send161744, (Object)SMB_size, 0);((AST_Send)send161745)->info = (AST_Info)info5512;// shouldsend161746 = (Object)new_AST_Send((Object)send161745, (Object)symbol44402, 0);((AST_Send)send161746)->info = (AST_Info)info5512;smallint27032 = (Object)new_Type_SmallInt(0);constant34845 = (Object)new_AST_Constant((Object)smallint27032);// =send161747 = (Object)new_AST_Send((Object)send161746, (Object)SMB__equal, 1, (Object)constant34845);((AST_Send)send161747)->info = (AST_Info)info5512;string27244 = (Object)new_Type_String(L"[ | a   f d| ]");constant34846 = (Object)new_AST_Constant((Object)string27244);// on:send161748 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34846);((AST_Send)send161748)->info = (AST_Info)info5512;assign20276 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161748);// match:send161749 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161749)->info = (AST_Info)info5512;assign20277 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161749);// classsend161750 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161750)->info = (AST_Info)info5512;// shouldsend161751 = (Object)new_AST_Send((Object)send161750, (Object)symbol44402, 0);((AST_Send)send161751)->info = (AST_Info)info5512;// =send161752 = (Object)new_AST_Send((Object)send161751, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161752)->info = (AST_Info)info5512;// temporariessend161753 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161753)->info = (AST_Info)info5512;// sizesend161754 = (Object)new_AST_Send((Object)send161753, (Object)SMB_size, 0);((AST_Send)send161754)->info = (AST_Info)info5512;// shouldsend161755 = (Object)new_AST_Send((Object)send161754, (Object)symbol44402, 0);((AST_Send)send161755)->info = (AST_Info)info5512;smallint27033 = (Object)new_Type_SmallInt(3);constant34847 = (Object)new_AST_Constant((Object)smallint27033);// =send161756 = (Object)new_AST_Send((Object)send161755, (Object)SMB__equal, 1, (Object)constant34847);((AST_Send)send161756)->info = (AST_Info)info5512;// parameterssend161757 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161757)->info = (AST_Info)info5512;// sizesend161758 = (Object)new_AST_Send((Object)send161757, (Object)SMB_size, 0);((AST_Send)send161758)->info = (AST_Info)info5512;// shouldsend161759 = (Object)new_AST_Send((Object)send161758, (Object)symbol44402, 0);((AST_Send)send161759)->info = (AST_Info)info5512;smallint27034 = (Object)new_Type_SmallInt(0);constant34848 = (Object)new_AST_Constant((Object)smallint27034);// =send161760 = (Object)new_AST_Send((Object)send161759, (Object)SMB__equal, 1, (Object)constant34848);((AST_Send)send161760)->info = (AST_Info)info5512;// statementssend161761 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161761)->info = (AST_Info)info5512;// sizesend161762 = (Object)new_AST_Send((Object)send161761, (Object)SMB_size, 0);((AST_Send)send161762)->info = (AST_Info)info5512;// shouldsend161763 = (Object)new_AST_Send((Object)send161762, (Object)symbol44402, 0);((AST_Send)send161763)->info = (AST_Info)info5512;smallint27035 = (Object)new_Type_SmallInt(0);constant34849 = (Object)new_AST_Constant((Object)smallint27035);// =send161764 = (Object)new_AST_Send((Object)send161763, (Object)SMB__equal, 1, (Object)constant34849);((AST_Send)send161764)->info = (AST_Info)info5512;string27245 = (Object)new_Type_String(L"[ || b. d ]");constant34850 = (Object)new_AST_Constant((Object)string27245);// on:send161765 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34850);((AST_Send)send161765)->info = (AST_Info)info5512;assign20278 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161765);// match:send161766 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161766)->info = (AST_Info)info5512;assign20279 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161766);// classsend161767 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161767)->info = (AST_Info)info5512;// shouldsend161768 = (Object)new_AST_Send((Object)send161767, (Object)symbol44402, 0);((AST_Send)send161768)->info = (AST_Info)info5512;// =send161769 = (Object)new_AST_Send((Object)send161768, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161769)->info = (AST_Info)info5512;// temporariessend161770 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161770)->info = (AST_Info)info5512;// sizesend161771 = (Object)new_AST_Send((Object)send161770, (Object)SMB_size, 0);((AST_Send)send161771)->info = (AST_Info)info5512;// shouldsend161772 = (Object)new_AST_Send((Object)send161771, (Object)symbol44402, 0);((AST_Send)send161772)->info = (AST_Info)info5512;smallint27036 = (Object)new_Type_SmallInt(0);constant34851 = (Object)new_AST_Constant((Object)smallint27036);// =send161773 = (Object)new_AST_Send((Object)send161772, (Object)SMB__equal, 1, (Object)constant34851);((AST_Send)send161773)->info = (AST_Info)info5512;// parameterssend161774 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161774)->info = (AST_Info)info5512;// sizesend161775 = (Object)new_AST_Send((Object)send161774, (Object)SMB_size, 0);((AST_Send)send161775)->info = (AST_Info)info5512;// shouldsend161776 = (Object)new_AST_Send((Object)send161775, (Object)symbol44402, 0);((AST_Send)send161776)->info = (AST_Info)info5512;smallint27037 = (Object)new_Type_SmallInt(0);constant34852 = (Object)new_AST_Constant((Object)smallint27037);// =send161777 = (Object)new_AST_Send((Object)send161776, (Object)SMB__equal, 1, (Object)constant34852);((AST_Send)send161777)->info = (AST_Info)info5512;// statementssend161778 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161778)->info = (AST_Info)info5512;// sizesend161779 = (Object)new_AST_Send((Object)send161778, (Object)SMB_size, 0);((AST_Send)send161779)->info = (AST_Info)info5512;// shouldsend161780 = (Object)new_AST_Send((Object)send161779, (Object)symbol44402, 0);((AST_Send)send161780)->info = (AST_Info)info5512;smallint27038 = (Object)new_Type_SmallInt(2);constant34853 = (Object)new_AST_Constant((Object)smallint27038);// =send161781 = (Object)new_AST_Send((Object)send161780, (Object)SMB__equal, 1, (Object)constant34853);((AST_Send)send161781)->info = (AST_Info)info5512;string27246 = (Object)new_Type_String(L"[ || b. ^ d ]");constant34854 = (Object)new_AST_Constant((Object)string27246);// on:send161782 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34854);((AST_Send)send161782)->info = (AST_Info)info5512;assign20280 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161782);// match:send161783 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161783)->info = (AST_Info)info5512;assign20281 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161783);// classsend161784 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161784)->info = (AST_Info)info5512;// shouldsend161785 = (Object)new_AST_Send((Object)send161784, (Object)symbol44402, 0);((AST_Send)send161785)->info = (AST_Info)info5512;// =send161786 = (Object)new_AST_Send((Object)send161785, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161786)->info = (AST_Info)info5512;// temporariessend161787 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161787)->info = (AST_Info)info5512;// sizesend161788 = (Object)new_AST_Send((Object)send161787, (Object)SMB_size, 0);((AST_Send)send161788)->info = (AST_Info)info5512;// shouldsend161789 = (Object)new_AST_Send((Object)send161788, (Object)symbol44402, 0);((AST_Send)send161789)->info = (AST_Info)info5512;smallint27039 = (Object)new_Type_SmallInt(0);constant34855 = (Object)new_AST_Constant((Object)smallint27039);// =send161790 = (Object)new_AST_Send((Object)send161789, (Object)SMB__equal, 1, (Object)constant34855);((AST_Send)send161790)->info = (AST_Info)info5512;// parameterssend161791 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161791)->info = (AST_Info)info5512;// sizesend161792 = (Object)new_AST_Send((Object)send161791, (Object)SMB_size, 0);((AST_Send)send161792)->info = (AST_Info)info5512;// shouldsend161793 = (Object)new_AST_Send((Object)send161792, (Object)symbol44402, 0);((AST_Send)send161793)->info = (AST_Info)info5512;smallint27040 = (Object)new_Type_SmallInt(0);constant34856 = (Object)new_AST_Constant((Object)smallint27040);// =send161794 = (Object)new_AST_Send((Object)send161793, (Object)SMB__equal, 1, (Object)constant34856);((AST_Send)send161794)->info = (AST_Info)info5512;// statementssend161795 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161795)->info = (AST_Info)info5512;// sizesend161796 = (Object)new_AST_Send((Object)send161795, (Object)SMB_size, 0);((AST_Send)send161796)->info = (AST_Info)info5512;// shouldsend161797 = (Object)new_AST_Send((Object)send161796, (Object)symbol44402, 0);((AST_Send)send161797)->info = (AST_Info)info5512;smallint27041 = (Object)new_Type_SmallInt(2);constant34857 = (Object)new_AST_Constant((Object)smallint27041);// =send161798 = (Object)new_AST_Send((Object)send161797, (Object)SMB__equal, 1, (Object)constant34857);((AST_Send)send161798)->info = (AST_Info)info5512;string27247 = (Object)new_Type_String(L"[ || b. d. ]");constant34858 = (Object)new_AST_Constant((Object)string27247);// on:send161799 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34858);((AST_Send)send161799)->info = (AST_Info)info5512;assign20282 = (Object)new_AST_Assign((Object)localvariable27202, (Object)send161799);// match:send161800 = (Object)new_AST_Send((Object)localvariable27201, (Object)symbol44329, 1, (Object)localvariable27202);((AST_Send)send161800)->info = (AST_Info)info5512;assign20283 = (Object)new_AST_Assign((Object)localvariable27203, (Object)send161800);// classsend161801 = (Object)new_AST_Send((Object)localvariable27203, (Object)SMB_class, 0);((AST_Send)send161801)->info = (AST_Info)info5512;// shouldsend161802 = (Object)new_AST_Send((Object)send161801, (Object)symbol44402, 0);((AST_Send)send161802)->info = (AST_Info)info5512;// =send161803 = (Object)new_AST_Send((Object)send161802, (Object)SMB__equal, 1, (Object)classreference13404);((AST_Send)send161803)->info = (AST_Info)info5512;// temporariessend161804 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44230, 0);((AST_Send)send161804)->info = (AST_Info)info5512;// sizesend161805 = (Object)new_AST_Send((Object)send161804, (Object)SMB_size, 0);((AST_Send)send161805)->info = (AST_Info)info5512;// shouldsend161806 = (Object)new_AST_Send((Object)send161805, (Object)symbol44402, 0);((AST_Send)send161806)->info = (AST_Info)info5512;smallint27042 = (Object)new_Type_SmallInt(0);constant34859 = (Object)new_AST_Constant((Object)smallint27042);// =send161807 = (Object)new_AST_Send((Object)send161806, (Object)SMB__equal, 1, (Object)constant34859);((AST_Send)send161807)->info = (AST_Info)info5512;// parameterssend161808 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44211, 0);((AST_Send)send161808)->info = (AST_Info)info5512;// sizesend161809 = (Object)new_AST_Send((Object)send161808, (Object)SMB_size, 0);((AST_Send)send161809)->info = (AST_Info)info5512;// shouldsend161810 = (Object)new_AST_Send((Object)send161809, (Object)symbol44402, 0);((AST_Send)send161810)->info = (AST_Info)info5512;smallint27043 = (Object)new_Type_SmallInt(0);constant34860 = (Object)new_AST_Constant((Object)smallint27043);// =send161811 = (Object)new_AST_Send((Object)send161810, (Object)SMB__equal, 1, (Object)constant34860);((AST_Send)send161811)->info = (AST_Info)info5512;// statementssend161812 = (Object)new_AST_Send((Object)localvariable27203, (Object)symbol44225, 0);((AST_Send)send161812)->info = (AST_Info)info5512;// sizesend161813 = (Object)new_AST_Send((Object)send161812, (Object)SMB_size, 0);((AST_Send)send161813)->info = (AST_Info)info5512;// shouldsend161814 = (Object)new_AST_Send((Object)send161813, (Object)symbol44402, 0);((AST_Send)send161814)->info = (AST_Info)info5512;smallint27044 = (Object)new_Type_SmallInt(2);constant34861 = (Object)new_AST_Constant((Object)smallint27044);// =send161815 = (Object)new_AST_Send((Object)send161814, (Object)SMB__equal, 1, (Object)constant34861);((AST_Send)send161815)->info = (AST_Info)info5512;method41255 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24269, 44, assign20269, assign20270, assign20271, send161701, send161705, send161709, send161713, assign20272, assign20273, send161718, send161722, send161726, send161730, assign20274, assign20275, send161735, send161739, send161743, send161747, assign20276, assign20277, send161752, send161756, send161760, send161764, assign20278, assign20279, send161769, send161773, send161777, send161781, assign20280, assign20281, send161786, send161790, send161794, send161798, assign20282, assign20283, send161803, send161807, send161811, send161815, Self);((AST_Method)method41255)->info = (AST_Info)info5512;symbol44044 = (Object)new_Type_Symbol_cached(L"testBlock");methodclosure41158 = (Object)new_Runtime_MethodClosure(method41255);store_method((Type_Class)class6736, (Type_Symbol)symbol44044, (Runtime_MethodClosure)methodclosure41158);// SCParserTest>>testSelf//testSelf// 	| parser string message return |// 	parser := scparser messageExpression.// 	// 	string := PEGStringScanner on: 'self do: this and: that'.//  	message := parser match: string.// 	message receiver class should = ASTSelf.// 	// 	parser := scparser return.// 	string := PEGStringScanner on: '^ self do: this and: that'.//  	return := parser match: string.// 	return class should = ASTReturnExpression.// 	return expression receiver class should = ASTSelf.localvariable27204 = (Object)new_AST_Variable_named(L"parser");localvariable27205 = (Object)new_AST_Variable_named(L"string");localvariable27206 = (Object)new_AST_Variable_named(L"message");localvariable27207 = (Object)new_AST_Variable_named(L"return");array24270 = (Object)new_Type_Array_with(4, (Object)localvariable27204, (Object)localvariable27205, (Object)localvariable27206, (Object)localvariable27207);// messageExpressionsend161816 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44423, 0);string27248 = (Object)new_Type_String(L"testSelf");string27249 = (Object)new_Type_String(L"testSelf\n\t| parser string message return |\n\tparser := scparser messageExpression.\n\t\n\tstring := PEGStringScanner on: \'self do: this and: that\'.\n \tmessage := parser match: string.\n\tmessage receiver class should = ASTSelf.\n\t\n\tparser := scparser return.\n\tstring := PEGStringScanner on: \'^ self do: this and: that\'.\n \treturn := parser match: string.\n\treturn class should = ASTReturnExpression.\n\treturn expression receiver class should = ASTSelf.");smallint27045 = (Object)new_Type_SmallInt(-1);smallint27046 = (Object)new_Type_SmallInt(-1);info5513 = (Object)new_AST_Info((Type_String)string27249,(Type_String)string27248, (Type_SmallInt)smallint27045, (Type_SmallInt)smallint27046);((AST_Send)send161816)->info = (AST_Info)info5513;assign20284 = (Object)new_AST_Assign((Object)localvariable27204, (Object)send161816);string27250 = (Object)new_Type_String(L"self do: this and: that");constant34862 = (Object)new_AST_Constant((Object)string27250);// on:send161817 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34862);((AST_Send)send161817)->info = (AST_Info)info5513;assign20285 = (Object)new_AST_Assign((Object)localvariable27205, (Object)send161817);// match:send161818 = (Object)new_AST_Send((Object)localvariable27204, (Object)symbol44329, 1, (Object)localvariable27205);((AST_Send)send161818)->info = (AST_Info)info5513;assign20286 = (Object)new_AST_Assign((Object)localvariable27206, (Object)send161818);// receiversend161819 = (Object)new_AST_Send((Object)localvariable27206, (Object)symbol44218, 0);((AST_Send)send161819)->info = (AST_Info)info5513;// classsend161820 = (Object)new_AST_Send((Object)send161819, (Object)SMB_class, 0);((AST_Send)send161820)->info = (AST_Info)info5513;// shouldsend161821 = (Object)new_AST_Send((Object)send161820, (Object)symbol44402, 0);((AST_Send)send161821)->info = (AST_Info)info5513;// =send161822 = (Object)new_AST_Send((Object)send161821, (Object)SMB__equal, 1, (Object)classreference13398);((AST_Send)send161822)->info = (AST_Info)info5513;// returnsend161823 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44471, 0);((AST_Send)send161823)->info = (AST_Info)info5513;assign20287 = (Object)new_AST_Assign((Object)localvariable27204, (Object)send161823);string27251 = (Object)new_Type_String(L"^ self do: this and: that");constant34863 = (Object)new_AST_Constant((Object)string27251);// on:send161824 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34863);((AST_Send)send161824)->info = (AST_Info)info5513;assign20288 = (Object)new_AST_Assign((Object)localvariable27205, (Object)send161824);// match:send161825 = (Object)new_AST_Send((Object)localvariable27204, (Object)symbol44329, 1, (Object)localvariable27205);((AST_Send)send161825)->info = (AST_Info)info5513;assign20289 = (Object)new_AST_Assign((Object)localvariable27207, (Object)send161825);// classsend161826 = (Object)new_AST_Send((Object)localvariable27207, (Object)SMB_class, 0);((AST_Send)send161826)->info = (AST_Info)info5513;// shouldsend161827 = (Object)new_AST_Send((Object)send161826, (Object)symbol44402, 0);((AST_Send)send161827)->info = (AST_Info)info5513;// =send161828 = (Object)new_AST_Send((Object)send161827, (Object)SMB__equal, 1, (Object)classreference13405);((AST_Send)send161828)->info = (AST_Info)info5513;// expressionsend161829 = (Object)new_AST_Send((Object)localvariable27207, (Object)symbol44200, 0);((AST_Send)send161829)->info = (AST_Info)info5513;// receiversend161830 = (Object)new_AST_Send((Object)send161829, (Object)symbol44218, 0);((AST_Send)send161830)->info = (AST_Info)info5513;// classsend161831 = (Object)new_AST_Send((Object)send161830, (Object)SMB_class, 0);((AST_Send)send161831)->info = (AST_Info)info5513;// shouldsend161832 = (Object)new_AST_Send((Object)send161831, (Object)symbol44402, 0);((AST_Send)send161832)->info = (AST_Info)info5513;// =send161833 = (Object)new_AST_Send((Object)send161832, (Object)SMB__equal, 1, (Object)classreference13398);((AST_Send)send161833)->info = (AST_Info)info5513;method41256 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24270, 10, assign20284, assign20285, assign20286, send161822, assign20287, assign20288, assign20289, send161828, send161833, Self);((AST_Method)method41256)->info = (AST_Info)info5513;symbol44036 = (Object)new_Type_Symbol_cached(L"testSelf");methodclosure41159 = (Object)new_Runtime_MethodClosure(method41256);store_method((Type_Class)class6736, (Type_Symbol)symbol44036, (Runtime_MethodClosure)methodclosure41159);// SCParserTest>>testBinaryMessageDefinition//testBinaryMessageDefinition// 	| parser string result |// 	parser := scparser binaryMessageDefinition.// 	string := PEGStringScanner on: '+= a'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '+='.// 	result parameter class should = ASTVariable.// 	result parameter name asString should = 'a'.// 	string position should = 4.// 	string := PEGStringScanner on: '|= a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '-= abc d'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '-='.// 	result parameter name asString should = 'abc'.// 	result parameter class should = ASTVariable.// 	string position should = 6localvariable27208 = (Object)new_AST_Variable_named(L"parser");localvariable27209 = (Object)new_AST_Variable_named(L"string");localvariable27210 = (Object)new_AST_Variable_named(L"result");array24271 = (Object)new_Type_Array_with(3, (Object)localvariable27208, (Object)localvariable27209, (Object)localvariable27210);// binaryMessageDefinitionsend161834 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44429, 0);string27252 = (Object)new_Type_String(L"testBinaryMessageDefinition");string27253 = (Object)new_Type_String(L"testBinaryMessageDefinition\n\t| parser string result |\n\tparser := scparser binaryMessageDefinition.\n\tstring := PEGStringScanner on: \'+= a\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'+=\'.\n\tresult parameter class should = ASTVariable.\n\tresult parameter name asString should = \'a\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'|= a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'-= abc d\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'-=\'.\n\tresult parameter name asString should = \'abc\'.\n\tresult parameter class should = ASTVariable.\n\tstring position should = 6");smallint27047 = (Object)new_Type_SmallInt(-1);smallint27048 = (Object)new_Type_SmallInt(-1);info5514 = (Object)new_AST_Info((Type_String)string27253,(Type_String)string27252, (Type_SmallInt)smallint27047, (Type_SmallInt)smallint27048);((AST_Send)send161834)->info = (AST_Info)info5514;assign20290 = (Object)new_AST_Assign((Object)localvariable27208, (Object)send161834);string27254 = (Object)new_Type_String(L"+= a");constant34864 = (Object)new_AST_Constant((Object)string27254);// on:send161835 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34864);((AST_Send)send161835)->info = (AST_Info)info5514;assign20291 = (Object)new_AST_Assign((Object)localvariable27209, (Object)send161835);// match:send161836 = (Object)new_AST_Send((Object)localvariable27208, (Object)symbol44329, 1, (Object)localvariable27209);((AST_Send)send161836)->info = (AST_Info)info5514;assign20292 = (Object)new_AST_Assign((Object)localvariable27210, (Object)send161836);// classsend161837 = (Object)new_AST_Send((Object)localvariable27210, (Object)SMB_class, 0);((AST_Send)send161837)->info = (AST_Info)info5514;// shouldsend161838 = (Object)new_AST_Send((Object)send161837, (Object)symbol44402, 0);((AST_Send)send161838)->info = (AST_Info)info5514;// =send161839 = (Object)new_AST_Send((Object)send161838, (Object)SMB__equal, 1, (Object)classreference13418);((AST_Send)send161839)->info = (AST_Info)info5514;// selectorsend161840 = (Object)new_AST_Send((Object)localvariable27210, (Object)symbol44115, 0);((AST_Send)send161840)->info = (AST_Info)info5514;// printStringsend161841 = (Object)new_AST_Send((Object)send161840, (Object)symbol44332, 0);((AST_Send)send161841)->info = (AST_Info)info5514;// shouldsend161842 = (Object)new_AST_Send((Object)send161841, (Object)symbol44402, 0);((AST_Send)send161842)->info = (AST_Info)info5514;string27255 = (Object)new_Type_String(L"+=");constant34865 = (Object)new_AST_Constant((Object)string27255);// =send161843 = (Object)new_AST_Send((Object)send161842, (Object)SMB__equal, 1, (Object)constant34865);((AST_Send)send161843)->info = (AST_Info)info5514;// parametersend161844 = (Object)new_AST_Send((Object)localvariable27210, (Object)symbol44221, 0);((AST_Send)send161844)->info = (AST_Info)info5514;// classsend161845 = (Object)new_AST_Send((Object)send161844, (Object)SMB_class, 0);((AST_Send)send161845)->info = (AST_Info)info5514;// shouldsend161846 = (Object)new_AST_Send((Object)send161845, (Object)symbol44402, 0);((AST_Send)send161846)->info = (AST_Info)info5514;// =send161847 = (Object)new_AST_Send((Object)send161846, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161847)->info = (AST_Info)info5514;// parametersend161848 = (Object)new_AST_Send((Object)localvariable27210, (Object)symbol44221, 0);((AST_Send)send161848)->info = (AST_Info)info5514;// namesend161849 = (Object)new_AST_Send((Object)send161848, (Object)SMB_name, 0);((AST_Send)send161849)->info = (AST_Info)info5514;// asStringsend161850 = (Object)new_AST_Send((Object)send161849, (Object)SMB_asString, 0);((AST_Send)send161850)->info = (AST_Info)info5514;// shouldsend161851 = (Object)new_AST_Send((Object)send161850, (Object)symbol44402, 0);((AST_Send)send161851)->info = (AST_Info)info5514;string27256 = (Object)new_Type_String(L"a");constant34866 = (Object)new_AST_Constant((Object)string27256);// =send161852 = (Object)new_AST_Send((Object)send161851, (Object)SMB__equal, 1, (Object)constant34866);((AST_Send)send161852)->info = (AST_Info)info5514;// positionsend161853 = (Object)new_AST_Send((Object)localvariable27209, (Object)symbol44475, 0);((AST_Send)send161853)->info = (AST_Info)info5514;// shouldsend161854 = (Object)new_AST_Send((Object)send161853, (Object)symbol44402, 0);((AST_Send)send161854)->info = (AST_Info)info5514;smallint27049 = (Object)new_Type_SmallInt(4);constant34867 = (Object)new_AST_Constant((Object)smallint27049);// =send161855 = (Object)new_AST_Send((Object)send161854, (Object)SMB__equal, 1, (Object)constant34867);((AST_Send)send161855)->info = (AST_Info)info5514;string27257 = (Object)new_Type_String(L"|= a");constant34868 = (Object)new_AST_Constant((Object)string27257);// on:send161856 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34868);((AST_Send)send161856)->info = (AST_Info)info5514;assign20293 = (Object)new_AST_Assign((Object)localvariable27209, (Object)send161856);// match:send161857 = (Object)new_AST_Send((Object)localvariable27208, (Object)symbol44329, 1, (Object)localvariable27209);((AST_Send)send161857)->info = (AST_Info)info5514;// shouldsend161858 = (Object)new_AST_Send((Object)send161857, (Object)symbol44402, 0);((AST_Send)send161858)->info = (AST_Info)info5514;// besend161859 = (Object)new_AST_Send((Object)send161858, (Object)symbol44476, 0);((AST_Send)send161859)->info = (AST_Info)info5514;// isNilsend161860 = (Object)new_AST_Send((Object)send161859, (Object)SMB_isNil, 0);((AST_Send)send161860)->info = (AST_Info)info5514;// positionsend161861 = (Object)new_AST_Send((Object)localvariable27209, (Object)symbol44475, 0);((AST_Send)send161861)->info = (AST_Info)info5514;// shouldsend161862 = (Object)new_AST_Send((Object)send161861, (Object)symbol44402, 0);((AST_Send)send161862)->info = (AST_Info)info5514;smallint27050 = (Object)new_Type_SmallInt(0);constant34869 = (Object)new_AST_Constant((Object)smallint27050);// =send161863 = (Object)new_AST_Send((Object)send161862, (Object)SMB__equal, 1, (Object)constant34869);((AST_Send)send161863)->info = (AST_Info)info5514;string27258 = (Object)new_Type_String(L"-= abc d");constant34870 = (Object)new_AST_Constant((Object)string27258);// on:send161864 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34870);((AST_Send)send161864)->info = (AST_Info)info5514;assign20294 = (Object)new_AST_Assign((Object)localvariable27209, (Object)send161864);// match:send161865 = (Object)new_AST_Send((Object)localvariable27208, (Object)symbol44329, 1, (Object)localvariable27209);((AST_Send)send161865)->info = (AST_Info)info5514;assign20295 = (Object)new_AST_Assign((Object)localvariable27210, (Object)send161865);// classsend161866 = (Object)new_AST_Send((Object)localvariable27210, (Object)SMB_class, 0);((AST_Send)send161866)->info = (AST_Info)info5514;// shouldsend161867 = (Object)new_AST_Send((Object)send161866, (Object)symbol44402, 0);((AST_Send)send161867)->info = (AST_Info)info5514;// =send161868 = (Object)new_AST_Send((Object)send161867, (Object)SMB__equal, 1, (Object)classreference13418);((AST_Send)send161868)->info = (AST_Info)info5514;// selectorsend161869 = (Object)new_AST_Send((Object)localvariable27210, (Object)symbol44115, 0);((AST_Send)send161869)->info = (AST_Info)info5514;// printStringsend161870 = (Object)new_AST_Send((Object)send161869, (Object)symbol44332, 0);((AST_Send)send161870)->info = (AST_Info)info5514;// shouldsend161871 = (Object)new_AST_Send((Object)send161870, (Object)symbol44402, 0);((AST_Send)send161871)->info = (AST_Info)info5514;string27259 = (Object)new_Type_String(L"-=");constant34871 = (Object)new_AST_Constant((Object)string27259);// =send161872 = (Object)new_AST_Send((Object)send161871, (Object)SMB__equal, 1, (Object)constant34871);((AST_Send)send161872)->info = (AST_Info)info5514;// parametersend161873 = (Object)new_AST_Send((Object)localvariable27210, (Object)symbol44221, 0);((AST_Send)send161873)->info = (AST_Info)info5514;// namesend161874 = (Object)new_AST_Send((Object)send161873, (Object)SMB_name, 0);((AST_Send)send161874)->info = (AST_Info)info5514;// asStringsend161875 = (Object)new_AST_Send((Object)send161874, (Object)SMB_asString, 0);((AST_Send)send161875)->info = (AST_Info)info5514;// shouldsend161876 = (Object)new_AST_Send((Object)send161875, (Object)symbol44402, 0);((AST_Send)send161876)->info = (AST_Info)info5514;string27260 = (Object)new_Type_String(L"abc");constant34872 = (Object)new_AST_Constant((Object)string27260);// =send161877 = (Object)new_AST_Send((Object)send161876, (Object)SMB__equal, 1, (Object)constant34872);((AST_Send)send161877)->info = (AST_Info)info5514;// parametersend161878 = (Object)new_AST_Send((Object)localvariable27210, (Object)symbol44221, 0);((AST_Send)send161878)->info = (AST_Info)info5514;// classsend161879 = (Object)new_AST_Send((Object)send161878, (Object)SMB_class, 0);((AST_Send)send161879)->info = (AST_Info)info5514;// shouldsend161880 = (Object)new_AST_Send((Object)send161879, (Object)symbol44402, 0);((AST_Send)send161880)->info = (AST_Info)info5514;// =send161881 = (Object)new_AST_Send((Object)send161880, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161881)->info = (AST_Info)info5514;// positionsend161882 = (Object)new_AST_Send((Object)localvariable27209, (Object)symbol44475, 0);((AST_Send)send161882)->info = (AST_Info)info5514;// shouldsend161883 = (Object)new_AST_Send((Object)send161882, (Object)symbol44402, 0);((AST_Send)send161883)->info = (AST_Info)info5514;smallint27051 = (Object)new_Type_SmallInt(6);constant34873 = (Object)new_AST_Constant((Object)smallint27051);// =send161884 = (Object)new_AST_Send((Object)send161883, (Object)SMB__equal, 1, (Object)constant34873);((AST_Send)send161884)->info = (AST_Info)info5514;method41257 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24271, 19, assign20290, assign20291, assign20292, send161839, send161843, send161847, send161852, send161855, assign20293, send161860, send161863, assign20294, assign20295, send161868, send161872, send161877, send161881, send161884, Self);((AST_Method)method41257)->info = (AST_Info)info5514;symbol44064 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");methodclosure41160 = (Object)new_Runtime_MethodClosure(method41257);store_method((Type_Class)class6736, (Type_Symbol)symbol44064, (Runtime_MethodClosure)methodclosure41160);// SCParserTest>>testCapitalIdentifier//testCapitalIdentifier// 	| parser string |// 	parser := scparser capitalIdentifier.// 	string := PEGStringScanner on: 'Abcd '.// 	(parser match: string) should = 'Abcd'.// 	string position should = 4.// 	string := PEGStringScanner on: 'AbCd145 '.// 	(parser match: string) should = 'AbCd145'.// 	string position should = 7.// 	string := PEGStringScanner on: 'abcdD'.// 	(parser match: string) should be isNil.// 	string position should = 0localvariable27211 = (Object)new_AST_Variable_named(L"parser");localvariable27212 = (Object)new_AST_Variable_named(L"string");array24272 = (Object)new_Type_Array_with(2, (Object)localvariable27211, (Object)localvariable27212);symbol44479 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");// capitalIdentifiersend161885 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44479, 0);string27261 = (Object)new_Type_String(L"testCapitalIdentifier");string27262 = (Object)new_Type_String(L"testCapitalIdentifier\n\t| parser string |\n\tparser := scparser capitalIdentifier.\n\tstring := PEGStringScanner on: \'Abcd \'.\n\t(parser match: string) should = \'Abcd\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'AbCd145 \'.\n\t(parser match: string) should = \'AbCd145\'.\n\tstring position should = 7.\n\tstring := PEGStringScanner on: \'abcdD\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");smallint27052 = (Object)new_Type_SmallInt(-1);smallint27053 = (Object)new_Type_SmallInt(-1);info5515 = (Object)new_AST_Info((Type_String)string27262,(Type_String)string27261, (Type_SmallInt)smallint27052, (Type_SmallInt)smallint27053);((AST_Send)send161885)->info = (AST_Info)info5515;assign20296 = (Object)new_AST_Assign((Object)localvariable27211, (Object)send161885);string27263 = (Object)new_Type_String(L"Abcd ");constant34874 = (Object)new_AST_Constant((Object)string27263);// on:send161886 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34874);((AST_Send)send161886)->info = (AST_Info)info5515;assign20297 = (Object)new_AST_Assign((Object)localvariable27212, (Object)send161886);// match:send161887 = (Object)new_AST_Send((Object)localvariable27211, (Object)symbol44329, 1, (Object)localvariable27212);((AST_Send)send161887)->info = (AST_Info)info5515;// shouldsend161888 = (Object)new_AST_Send((Object)send161887, (Object)symbol44402, 0);((AST_Send)send161888)->info = (AST_Info)info5515;string27264 = (Object)new_Type_String(L"Abcd");constant34875 = (Object)new_AST_Constant((Object)string27264);// =send161889 = (Object)new_AST_Send((Object)send161888, (Object)SMB__equal, 1, (Object)constant34875);((AST_Send)send161889)->info = (AST_Info)info5515;// positionsend161890 = (Object)new_AST_Send((Object)localvariable27212, (Object)symbol44475, 0);((AST_Send)send161890)->info = (AST_Info)info5515;// shouldsend161891 = (Object)new_AST_Send((Object)send161890, (Object)symbol44402, 0);((AST_Send)send161891)->info = (AST_Info)info5515;smallint27054 = (Object)new_Type_SmallInt(4);constant34876 = (Object)new_AST_Constant((Object)smallint27054);// =send161892 = (Object)new_AST_Send((Object)send161891, (Object)SMB__equal, 1, (Object)constant34876);((AST_Send)send161892)->info = (AST_Info)info5515;string27265 = (Object)new_Type_String(L"AbCd145 ");constant34877 = (Object)new_AST_Constant((Object)string27265);// on:send161893 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34877);((AST_Send)send161893)->info = (AST_Info)info5515;assign20298 = (Object)new_AST_Assign((Object)localvariable27212, (Object)send161893);// match:send161894 = (Object)new_AST_Send((Object)localvariable27211, (Object)symbol44329, 1, (Object)localvariable27212);((AST_Send)send161894)->info = (AST_Info)info5515;// shouldsend161895 = (Object)new_AST_Send((Object)send161894, (Object)symbol44402, 0);((AST_Send)send161895)->info = (AST_Info)info5515;string27266 = (Object)new_Type_String(L"AbCd145");constant34878 = (Object)new_AST_Constant((Object)string27266);// =send161896 = (Object)new_AST_Send((Object)send161895, (Object)SMB__equal, 1, (Object)constant34878);((AST_Send)send161896)->info = (AST_Info)info5515;// positionsend161897 = (Object)new_AST_Send((Object)localvariable27212, (Object)symbol44475, 0);((AST_Send)send161897)->info = (AST_Info)info5515;// shouldsend161898 = (Object)new_AST_Send((Object)send161897, (Object)symbol44402, 0);((AST_Send)send161898)->info = (AST_Info)info5515;smallint27055 = (Object)new_Type_SmallInt(7);constant34879 = (Object)new_AST_Constant((Object)smallint27055);// =send161899 = (Object)new_AST_Send((Object)send161898, (Object)SMB__equal, 1, (Object)constant34879);((AST_Send)send161899)->info = (AST_Info)info5515;string27267 = (Object)new_Type_String(L"abcdD");constant34880 = (Object)new_AST_Constant((Object)string27267);// on:send161900 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34880);((AST_Send)send161900)->info = (AST_Info)info5515;assign20299 = (Object)new_AST_Assign((Object)localvariable27212, (Object)send161900);// match:send161901 = (Object)new_AST_Send((Object)localvariable27211, (Object)symbol44329, 1, (Object)localvariable27212);((AST_Send)send161901)->info = (AST_Info)info5515;// shouldsend161902 = (Object)new_AST_Send((Object)send161901, (Object)symbol44402, 0);((AST_Send)send161902)->info = (AST_Info)info5515;// besend161903 = (Object)new_AST_Send((Object)send161902, (Object)symbol44476, 0);((AST_Send)send161903)->info = (AST_Info)info5515;// isNilsend161904 = (Object)new_AST_Send((Object)send161903, (Object)SMB_isNil, 0);((AST_Send)send161904)->info = (AST_Info)info5515;// positionsend161905 = (Object)new_AST_Send((Object)localvariable27212, (Object)symbol44475, 0);((AST_Send)send161905)->info = (AST_Info)info5515;// shouldsend161906 = (Object)new_AST_Send((Object)send161905, (Object)symbol44402, 0);((AST_Send)send161906)->info = (AST_Info)info5515;smallint27056 = (Object)new_Type_SmallInt(0);constant34881 = (Object)new_AST_Constant((Object)smallint27056);// =send161907 = (Object)new_AST_Send((Object)send161906, (Object)SMB__equal, 1, (Object)constant34881);((AST_Send)send161907)->info = (AST_Info)info5515;method41258 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24272, 11, assign20296, assign20297, send161889, send161892, assign20298, send161896, send161899, assign20299, send161904, send161907, Self);((AST_Method)method41258)->info = (AST_Info)info5515;symbol44056 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");methodclosure41161 = (Object)new_Runtime_MethodClosure(method41258);store_method((Type_Class)class6736, (Type_Symbol)symbol44056, (Runtime_MethodClosure)methodclosure41161);// SCParserTest>>testBinaryExpression//testBinaryExpression// 	| parser string result |// 	parser := scparser binaryObjectDescription.// 	string := PEGStringScanner on: 'abc + ghi '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '+'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 9.	" becomes ((abc + ghi) * c) "// 	string := PEGStringScanner on: 'abc + ghi * c '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '*'.// 	result argument class should = ASTVariable.// 	result argument name should = 'c'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '+'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 13localvariable27213 = (Object)new_AST_Variable_named(L"parser");localvariable27214 = (Object)new_AST_Variable_named(L"string");localvariable27215 = (Object)new_AST_Variable_named(L"result");array24273 = (Object)new_Type_Array_with(3, (Object)localvariable27213, (Object)localvariable27214, (Object)localvariable27215);// binaryObjectDescriptionsend161908 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44434, 0);string27268 = (Object)new_Type_String(L"testBinaryExpression");string27269 = (Object)new_Type_String(L"testBinaryExpression\n\t| parser string result |\n\tparser := scparser binaryObjectDescription.\n\tstring := PEGStringScanner on: \'abc + ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'+\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 9.\t\" becomes ((abc + ghi) * c) \"\n\tstring := PEGStringScanner on: \'abc + ghi * c \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'*\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'c\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'+\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 13");smallint27057 = (Object)new_Type_SmallInt(-1);smallint27058 = (Object)new_Type_SmallInt(-1);info5516 = (Object)new_AST_Info((Type_String)string27269,(Type_String)string27268, (Type_SmallInt)smallint27057, (Type_SmallInt)smallint27058);((AST_Send)send161908)->info = (AST_Info)info5516;assign20300 = (Object)new_AST_Assign((Object)localvariable27213, (Object)send161908);string27270 = (Object)new_Type_String(L"abc + ghi ");constant34882 = (Object)new_AST_Constant((Object)string27270);// on:send161909 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34882);((AST_Send)send161909)->info = (AST_Info)info5516;assign20301 = (Object)new_AST_Assign((Object)localvariable27214, (Object)send161909);// match:send161910 = (Object)new_AST_Send((Object)localvariable27213, (Object)symbol44329, 1, (Object)localvariable27214);((AST_Send)send161910)->info = (AST_Info)info5516;assign20302 = (Object)new_AST_Assign((Object)localvariable27215, (Object)send161910);// classsend161911 = (Object)new_AST_Send((Object)localvariable27215, (Object)SMB_class, 0);((AST_Send)send161911)->info = (AST_Info)info5516;// shouldsend161912 = (Object)new_AST_Send((Object)send161911, (Object)symbol44402, 0);((AST_Send)send161912)->info = (AST_Info)info5516;// =send161913 = (Object)new_AST_Send((Object)send161912, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send161913)->info = (AST_Info)info5516;// selectorsend161914 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44115, 0);((AST_Send)send161914)->info = (AST_Info)info5516;// printStringsend161915 = (Object)new_AST_Send((Object)send161914, (Object)symbol44332, 0);((AST_Send)send161915)->info = (AST_Info)info5516;// shouldsend161916 = (Object)new_AST_Send((Object)send161915, (Object)symbol44402, 0);((AST_Send)send161916)->info = (AST_Info)info5516;string27271 = (Object)new_Type_String(L"+");constant34883 = (Object)new_AST_Constant((Object)string27271);// =send161917 = (Object)new_AST_Send((Object)send161916, (Object)SMB__equal, 1, (Object)constant34883);((AST_Send)send161917)->info = (AST_Info)info5516;// receiversend161918 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44218, 0);((AST_Send)send161918)->info = (AST_Info)info5516;// classsend161919 = (Object)new_AST_Send((Object)send161918, (Object)SMB_class, 0);((AST_Send)send161919)->info = (AST_Info)info5516;// shouldsend161920 = (Object)new_AST_Send((Object)send161919, (Object)symbol44402, 0);((AST_Send)send161920)->info = (AST_Info)info5516;// =send161921 = (Object)new_AST_Send((Object)send161920, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161921)->info = (AST_Info)info5516;// receiversend161922 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44218, 0);((AST_Send)send161922)->info = (AST_Info)info5516;// namesend161923 = (Object)new_AST_Send((Object)send161922, (Object)SMB_name, 0);((AST_Send)send161923)->info = (AST_Info)info5516;// shouldsend161924 = (Object)new_AST_Send((Object)send161923, (Object)symbol44402, 0);((AST_Send)send161924)->info = (AST_Info)info5516;string27272 = (Object)new_Type_String(L"abc");constant34884 = (Object)new_AST_Constant((Object)string27272);// =send161925 = (Object)new_AST_Send((Object)send161924, (Object)SMB__equal, 1, (Object)constant34884);((AST_Send)send161925)->info = (AST_Info)info5516;// argumentsend161926 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44224, 0);((AST_Send)send161926)->info = (AST_Info)info5516;// classsend161927 = (Object)new_AST_Send((Object)send161926, (Object)SMB_class, 0);((AST_Send)send161927)->info = (AST_Info)info5516;// shouldsend161928 = (Object)new_AST_Send((Object)send161927, (Object)symbol44402, 0);((AST_Send)send161928)->info = (AST_Info)info5516;// =send161929 = (Object)new_AST_Send((Object)send161928, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161929)->info = (AST_Info)info5516;// argumentsend161930 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44224, 0);((AST_Send)send161930)->info = (AST_Info)info5516;// namesend161931 = (Object)new_AST_Send((Object)send161930, (Object)SMB_name, 0);((AST_Send)send161931)->info = (AST_Info)info5516;// shouldsend161932 = (Object)new_AST_Send((Object)send161931, (Object)symbol44402, 0);((AST_Send)send161932)->info = (AST_Info)info5516;string27273 = (Object)new_Type_String(L"ghi");constant34885 = (Object)new_AST_Constant((Object)string27273);// =send161933 = (Object)new_AST_Send((Object)send161932, (Object)SMB__equal, 1, (Object)constant34885);((AST_Send)send161933)->info = (AST_Info)info5516;// positionsend161934 = (Object)new_AST_Send((Object)localvariable27214, (Object)symbol44475, 0);((AST_Send)send161934)->info = (AST_Info)info5516;// shouldsend161935 = (Object)new_AST_Send((Object)send161934, (Object)symbol44402, 0);((AST_Send)send161935)->info = (AST_Info)info5516;smallint27059 = (Object)new_Type_SmallInt(9);constant34886 = (Object)new_AST_Constant((Object)smallint27059);// =send161936 = (Object)new_AST_Send((Object)send161935, (Object)SMB__equal, 1, (Object)constant34886);((AST_Send)send161936)->info = (AST_Info)info5516;string27274 = (Object)new_Type_String(L"abc + ghi * c ");constant34887 = (Object)new_AST_Constant((Object)string27274);// on:send161937 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34887);((AST_Send)send161937)->info = (AST_Info)info5516;assign20303 = (Object)new_AST_Assign((Object)localvariable27214, (Object)send161937);// match:send161938 = (Object)new_AST_Send((Object)localvariable27213, (Object)symbol44329, 1, (Object)localvariable27214);((AST_Send)send161938)->info = (AST_Info)info5516;assign20304 = (Object)new_AST_Assign((Object)localvariable27215, (Object)send161938);// classsend161939 = (Object)new_AST_Send((Object)localvariable27215, (Object)SMB_class, 0);((AST_Send)send161939)->info = (AST_Info)info5516;// shouldsend161940 = (Object)new_AST_Send((Object)send161939, (Object)symbol44402, 0);((AST_Send)send161940)->info = (AST_Info)info5516;// =send161941 = (Object)new_AST_Send((Object)send161940, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send161941)->info = (AST_Info)info5516;// selectorsend161942 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44115, 0);((AST_Send)send161942)->info = (AST_Info)info5516;// printStringsend161943 = (Object)new_AST_Send((Object)send161942, (Object)symbol44332, 0);((AST_Send)send161943)->info = (AST_Info)info5516;// shouldsend161944 = (Object)new_AST_Send((Object)send161943, (Object)symbol44402, 0);((AST_Send)send161944)->info = (AST_Info)info5516;string27275 = (Object)new_Type_String(L"*");constant34888 = (Object)new_AST_Constant((Object)string27275);// =send161945 = (Object)new_AST_Send((Object)send161944, (Object)SMB__equal, 1, (Object)constant34888);((AST_Send)send161945)->info = (AST_Info)info5516;// argumentsend161946 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44224, 0);((AST_Send)send161946)->info = (AST_Info)info5516;// classsend161947 = (Object)new_AST_Send((Object)send161946, (Object)SMB_class, 0);((AST_Send)send161947)->info = (AST_Info)info5516;// shouldsend161948 = (Object)new_AST_Send((Object)send161947, (Object)symbol44402, 0);((AST_Send)send161948)->info = (AST_Info)info5516;// =send161949 = (Object)new_AST_Send((Object)send161948, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161949)->info = (AST_Info)info5516;// argumentsend161950 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44224, 0);((AST_Send)send161950)->info = (AST_Info)info5516;// namesend161951 = (Object)new_AST_Send((Object)send161950, (Object)SMB_name, 0);((AST_Send)send161951)->info = (AST_Info)info5516;// shouldsend161952 = (Object)new_AST_Send((Object)send161951, (Object)symbol44402, 0);((AST_Send)send161952)->info = (AST_Info)info5516;string27276 = (Object)new_Type_String(L"c");constant34889 = (Object)new_AST_Constant((Object)string27276);// =send161953 = (Object)new_AST_Send((Object)send161952, (Object)SMB__equal, 1, (Object)constant34889);((AST_Send)send161953)->info = (AST_Info)info5516;// receiversend161954 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44218, 0);((AST_Send)send161954)->info = (AST_Info)info5516;assign20305 = (Object)new_AST_Assign((Object)localvariable27215, (Object)send161954);// classsend161955 = (Object)new_AST_Send((Object)localvariable27215, (Object)SMB_class, 0);((AST_Send)send161955)->info = (AST_Info)info5516;// shouldsend161956 = (Object)new_AST_Send((Object)send161955, (Object)symbol44402, 0);((AST_Send)send161956)->info = (AST_Info)info5516;// =send161957 = (Object)new_AST_Send((Object)send161956, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send161957)->info = (AST_Info)info5516;// selectorsend161958 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44115, 0);((AST_Send)send161958)->info = (AST_Info)info5516;// printStringsend161959 = (Object)new_AST_Send((Object)send161958, (Object)symbol44332, 0);((AST_Send)send161959)->info = (AST_Info)info5516;// shouldsend161960 = (Object)new_AST_Send((Object)send161959, (Object)symbol44402, 0);((AST_Send)send161960)->info = (AST_Info)info5516;string27277 = (Object)new_Type_String(L"+");constant34890 = (Object)new_AST_Constant((Object)string27277);// =send161961 = (Object)new_AST_Send((Object)send161960, (Object)SMB__equal, 1, (Object)constant34890);((AST_Send)send161961)->info = (AST_Info)info5516;// receiversend161962 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44218, 0);((AST_Send)send161962)->info = (AST_Info)info5516;// classsend161963 = (Object)new_AST_Send((Object)send161962, (Object)SMB_class, 0);((AST_Send)send161963)->info = (AST_Info)info5516;// shouldsend161964 = (Object)new_AST_Send((Object)send161963, (Object)symbol44402, 0);((AST_Send)send161964)->info = (AST_Info)info5516;// =send161965 = (Object)new_AST_Send((Object)send161964, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161965)->info = (AST_Info)info5516;// receiversend161966 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44218, 0);((AST_Send)send161966)->info = (AST_Info)info5516;// namesend161967 = (Object)new_AST_Send((Object)send161966, (Object)SMB_name, 0);((AST_Send)send161967)->info = (AST_Info)info5516;// shouldsend161968 = (Object)new_AST_Send((Object)send161967, (Object)symbol44402, 0);((AST_Send)send161968)->info = (AST_Info)info5516;string27278 = (Object)new_Type_String(L"abc");constant34891 = (Object)new_AST_Constant((Object)string27278);// =send161969 = (Object)new_AST_Send((Object)send161968, (Object)SMB__equal, 1, (Object)constant34891);((AST_Send)send161969)->info = (AST_Info)info5516;// argumentsend161970 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44224, 0);((AST_Send)send161970)->info = (AST_Info)info5516;// classsend161971 = (Object)new_AST_Send((Object)send161970, (Object)SMB_class, 0);((AST_Send)send161971)->info = (AST_Info)info5516;// shouldsend161972 = (Object)new_AST_Send((Object)send161971, (Object)symbol44402, 0);((AST_Send)send161972)->info = (AST_Info)info5516;// =send161973 = (Object)new_AST_Send((Object)send161972, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send161973)->info = (AST_Info)info5516;// argumentsend161974 = (Object)new_AST_Send((Object)localvariable27215, (Object)symbol44224, 0);((AST_Send)send161974)->info = (AST_Info)info5516;// namesend161975 = (Object)new_AST_Send((Object)send161974, (Object)SMB_name, 0);((AST_Send)send161975)->info = (AST_Info)info5516;// shouldsend161976 = (Object)new_AST_Send((Object)send161975, (Object)symbol44402, 0);((AST_Send)send161976)->info = (AST_Info)info5516;string27279 = (Object)new_Type_String(L"ghi");constant34892 = (Object)new_AST_Constant((Object)string27279);// =send161977 = (Object)new_AST_Send((Object)send161976, (Object)SMB__equal, 1, (Object)constant34892);((AST_Send)send161977)->info = (AST_Info)info5516;// positionsend161978 = (Object)new_AST_Send((Object)localvariable27214, (Object)symbol44475, 0);((AST_Send)send161978)->info = (AST_Info)info5516;// shouldsend161979 = (Object)new_AST_Send((Object)send161978, (Object)symbol44402, 0);((AST_Send)send161979)->info = (AST_Info)info5516;smallint27060 = (Object)new_Type_SmallInt(13);constant34893 = (Object)new_AST_Constant((Object)smallint27060);// =send161980 = (Object)new_AST_Send((Object)send161979, (Object)SMB__equal, 1, (Object)constant34893);((AST_Send)send161980)->info = (AST_Info)info5516;method41259 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24273, 25, assign20300, assign20301, assign20302, send161913, send161917, send161921, send161925, send161929, send161933, send161936, assign20303, assign20304, send161941, send161945, send161949, send161953, assign20305, send161957, send161961, send161965, send161969, send161973, send161977, send161980, Self);((AST_Method)method41259)->info = (AST_Info)info5516;symbol44084 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");methodclosure41162 = (Object)new_Runtime_MethodClosure(method41259);store_method((Type_Class)class6736, (Type_Symbol)symbol44084, (Runtime_MethodClosure)methodclosure41162);// SCParserTest>>testComment//testComment// 	| parser |// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.// 	(parser parse: '"Test"') should not be isNil.// 	(parser parse: '"Test') should be isNillocalvariable27216 = (Object)new_AST_Variable_named(L"parser");array24274 = (Object)new_Type_Array_with(1, (Object)localvariable27216);string27280 = (Object)new_Type_String(L"COMMENT");constant34894 = (Object)new_AST_Constant((Object)string27280);// commentFormatsend161981 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44461, 0);string27281 = (Object)new_Type_String(L"testComment");string27282 = (Object)new_Type_String(L"testComment\n\t| parser |\n\tparser := PEGParser named: \'COMMENT\' parsing: scparser commentFormat.\n\t(parser parse: \'\"Test\"\') should not be isNil.\n\t(parser parse: \'\"Test\') should be isNil");smallint27061 = (Object)new_Type_SmallInt(-1);smallint27062 = (Object)new_Type_SmallInt(-1);info5517 = (Object)new_AST_Info((Type_String)string27282,(Type_String)string27281, (Type_SmallInt)smallint27061, (Type_SmallInt)smallint27062);((AST_Send)send161981)->info = (AST_Info)info5517;// named:parsing:send161982 = (Object)new_AST_Send((Object)classreference13440, (Object)symbol44344, 2, (Object)constant34894, (Object)send161981);((AST_Send)send161982)->info = (AST_Info)info5517;assign20306 = (Object)new_AST_Assign((Object)localvariable27216, (Object)send161982);string27283 = (Object)new_Type_String(L"\"Test\"");constant34895 = (Object)new_AST_Constant((Object)string27283);// parse:send161983 = (Object)new_AST_Send((Object)localvariable27216, (Object)symbol44349, 1, (Object)constant34895);((AST_Send)send161983)->info = (AST_Info)info5517;// shouldsend161984 = (Object)new_AST_Send((Object)send161983, (Object)symbol44402, 0);((AST_Send)send161984)->info = (AST_Info)info5517;// notsend161985 = (Object)new_AST_Send((Object)send161984, (Object)SMB_not, 0);((AST_Send)send161985)->info = (AST_Info)info5517;// besend161986 = (Object)new_AST_Send((Object)send161985, (Object)symbol44476, 0);((AST_Send)send161986)->info = (AST_Info)info5517;// isNilsend161987 = (Object)new_AST_Send((Object)send161986, (Object)SMB_isNil, 0);((AST_Send)send161987)->info = (AST_Info)info5517;string27284 = (Object)new_Type_String(L"\"Test");constant34896 = (Object)new_AST_Constant((Object)string27284);// parse:send161988 = (Object)new_AST_Send((Object)localvariable27216, (Object)symbol44349, 1, (Object)constant34896);((AST_Send)send161988)->info = (AST_Info)info5517;// shouldsend161989 = (Object)new_AST_Send((Object)send161988, (Object)symbol44402, 0);((AST_Send)send161989)->info = (AST_Info)info5517;// besend161990 = (Object)new_AST_Send((Object)send161989, (Object)symbol44476, 0);((AST_Send)send161990)->info = (AST_Info)info5517;// isNilsend161991 = (Object)new_AST_Send((Object)send161990, (Object)SMB_isNil, 0);((AST_Send)send161991)->info = (AST_Info)info5517;method41260 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24274, 4, assign20306, send161987, send161991, Self);((AST_Method)method41260)->info = (AST_Info)info5517;symbol44076 = (Object)new_Type_Symbol_cached(L"testComment");methodclosure41163 = (Object)new_Runtime_MethodClosure(method41260);store_method((Type_Class)class6736, (Type_Symbol)symbol44076, (Runtime_MethodClosure)methodclosure41163);// SCParserTest>>testCascadedMessageExpression//testCascadedMessageExpression// 	| parser string result expression |// 	parser := scparser cascadedMessageExpression.// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.// 	result := parser match: string.// 	result class should = ASTMessageCascadeExpression.// 	result receiver class should = ASTNumber.// 	result cascades size should = 4.// 	expression := result cascades at: 1.// 	expression class should = ASTBinaryExpression.// 	expression := result cascades at: 2.// 	expression class should = ASTMessageExpression.// 	expression := result cascades at: 3.// 	expression class should = ASTMessageExpression.// 	expression := result cascades at: 4.// 	expression class should = ASTUnaryExpressionlocalvariable27217 = (Object)new_AST_Variable_named(L"parser");localvariable27218 = (Object)new_AST_Variable_named(L"string");localvariable27219 = (Object)new_AST_Variable_named(L"result");localvariable27220 = (Object)new_AST_Variable_named(L"expression");array24275 = (Object)new_Type_Array_with(4, (Object)localvariable27217, (Object)localvariable27218, (Object)localvariable27219, (Object)localvariable27220);// cascadedMessageExpressionsend161992 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44455, 0);string27285 = (Object)new_Type_String(L"testCascadedMessageExpression");string27286 = (Object)new_Type_String(L"testCascadedMessageExpression\n\t| parser string result expression |\n\tparser := scparser cascadedMessageExpression.\n\tstring := PEGStringScanner on: \'2+4; x: 3 b; d: 3 c: 4; x \'.\n\tresult := parser match: string.\n\tresult class should = ASTMessageCascadeExpression.\n\tresult receiver class should = ASTNumber.\n\tresult cascades size should = 4.\n\texpression := result cascades at: 1.\n\texpression class should = ASTBinaryExpression.\n\texpression := result cascades at: 2.\n\texpression class should = ASTMessageExpression.\n\texpression := result cascades at: 3.\n\texpression class should = ASTMessageExpression.\n\texpression := result cascades at: 4.\n\texpression class should = ASTUnaryExpression");smallint27063 = (Object)new_Type_SmallInt(-1);smallint27064 = (Object)new_Type_SmallInt(-1);info5518 = (Object)new_AST_Info((Type_String)string27286,(Type_String)string27285, (Type_SmallInt)smallint27063, (Type_SmallInt)smallint27064);((AST_Send)send161992)->info = (AST_Info)info5518;assign20307 = (Object)new_AST_Assign((Object)localvariable27217, (Object)send161992);string27287 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");constant34897 = (Object)new_AST_Constant((Object)string27287);// on:send161993 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34897);((AST_Send)send161993)->info = (AST_Info)info5518;assign20308 = (Object)new_AST_Assign((Object)localvariable27218, (Object)send161993);// match:send161994 = (Object)new_AST_Send((Object)localvariable27217, (Object)symbol44329, 1, (Object)localvariable27218);((AST_Send)send161994)->info = (AST_Info)info5518;assign20309 = (Object)new_AST_Assign((Object)localvariable27219, (Object)send161994);// classsend161995 = (Object)new_AST_Send((Object)localvariable27219, (Object)SMB_class, 0);((AST_Send)send161995)->info = (AST_Info)info5518;// shouldsend161996 = (Object)new_AST_Send((Object)send161995, (Object)symbol44402, 0);((AST_Send)send161996)->info = (AST_Info)info5518;// =send161997 = (Object)new_AST_Send((Object)send161996, (Object)SMB__equal, 1, (Object)classreference13408);((AST_Send)send161997)->info = (AST_Info)info5518;// receiversend161998 = (Object)new_AST_Send((Object)localvariable27219, (Object)symbol44218, 0);((AST_Send)send161998)->info = (AST_Info)info5518;// classsend161999 = (Object)new_AST_Send((Object)send161998, (Object)SMB_class, 0);((AST_Send)send161999)->info = (AST_Info)info5518;// shouldsend162000 = (Object)new_AST_Send((Object)send161999, (Object)symbol44402, 0);((AST_Send)send162000)->info = (AST_Info)info5518;// =send162001 = (Object)new_AST_Send((Object)send162000, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162001)->info = (AST_Info)info5518;// cascadessend162002 = (Object)new_AST_Send((Object)localvariable27219, (Object)symbol44244, 0);((AST_Send)send162002)->info = (AST_Info)info5518;// sizesend162003 = (Object)new_AST_Send((Object)send162002, (Object)SMB_size, 0);((AST_Send)send162003)->info = (AST_Info)info5518;// shouldsend162004 = (Object)new_AST_Send((Object)send162003, (Object)symbol44402, 0);((AST_Send)send162004)->info = (AST_Info)info5518;smallint27065 = (Object)new_Type_SmallInt(4);constant34898 = (Object)new_AST_Constant((Object)smallint27065);// =send162005 = (Object)new_AST_Send((Object)send162004, (Object)SMB__equal, 1, (Object)constant34898);((AST_Send)send162005)->info = (AST_Info)info5518;// cascadessend162006 = (Object)new_AST_Send((Object)localvariable27219, (Object)symbol44244, 0);((AST_Send)send162006)->info = (AST_Info)info5518;smallint27066 = (Object)new_Type_SmallInt(1);constant34899 = (Object)new_AST_Constant((Object)smallint27066);// at:send162007 = (Object)new_AST_Send((Object)send162006, (Object)SMB_at_, 1, (Object)constant34899);((AST_Send)send162007)->info = (AST_Info)info5518;assign20310 = (Object)new_AST_Assign((Object)localvariable27220, (Object)send162007);// classsend162008 = (Object)new_AST_Send((Object)localvariable27220, (Object)SMB_class, 0);((AST_Send)send162008)->info = (AST_Info)info5518;// shouldsend162009 = (Object)new_AST_Send((Object)send162008, (Object)symbol44402, 0);((AST_Send)send162009)->info = (AST_Info)info5518;// =send162010 = (Object)new_AST_Send((Object)send162009, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162010)->info = (AST_Info)info5518;// cascadessend162011 = (Object)new_AST_Send((Object)localvariable27219, (Object)symbol44244, 0);((AST_Send)send162011)->info = (AST_Info)info5518;smallint27067 = (Object)new_Type_SmallInt(2);constant34900 = (Object)new_AST_Constant((Object)smallint27067);// at:send162012 = (Object)new_AST_Send((Object)send162011, (Object)SMB_at_, 1, (Object)constant34900);((AST_Send)send162012)->info = (AST_Info)info5518;assign20311 = (Object)new_AST_Assign((Object)localvariable27220, (Object)send162012);// classsend162013 = (Object)new_AST_Send((Object)localvariable27220, (Object)SMB_class, 0);((AST_Send)send162013)->info = (AST_Info)info5518;// shouldsend162014 = (Object)new_AST_Send((Object)send162013, (Object)symbol44402, 0);((AST_Send)send162014)->info = (AST_Info)info5518;// =send162015 = (Object)new_AST_Send((Object)send162014, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162015)->info = (AST_Info)info5518;// cascadessend162016 = (Object)new_AST_Send((Object)localvariable27219, (Object)symbol44244, 0);((AST_Send)send162016)->info = (AST_Info)info5518;smallint27068 = (Object)new_Type_SmallInt(3);constant34901 = (Object)new_AST_Constant((Object)smallint27068);// at:send162017 = (Object)new_AST_Send((Object)send162016, (Object)SMB_at_, 1, (Object)constant34901);((AST_Send)send162017)->info = (AST_Info)info5518;assign20312 = (Object)new_AST_Assign((Object)localvariable27220, (Object)send162017);// classsend162018 = (Object)new_AST_Send((Object)localvariable27220, (Object)SMB_class, 0);((AST_Send)send162018)->info = (AST_Info)info5518;// shouldsend162019 = (Object)new_AST_Send((Object)send162018, (Object)symbol44402, 0);((AST_Send)send162019)->info = (AST_Info)info5518;// =send162020 = (Object)new_AST_Send((Object)send162019, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162020)->info = (AST_Info)info5518;// cascadessend162021 = (Object)new_AST_Send((Object)localvariable27219, (Object)symbol44244, 0);((AST_Send)send162021)->info = (AST_Info)info5518;smallint27069 = (Object)new_Type_SmallInt(4);constant34902 = (Object)new_AST_Constant((Object)smallint27069);// at:send162022 = (Object)new_AST_Send((Object)send162021, (Object)SMB_at_, 1, (Object)constant34902);((AST_Send)send162022)->info = (AST_Info)info5518;assign20313 = (Object)new_AST_Assign((Object)localvariable27220, (Object)send162022);// classsend162023 = (Object)new_AST_Send((Object)localvariable27220, (Object)SMB_class, 0);((AST_Send)send162023)->info = (AST_Info)info5518;// shouldsend162024 = (Object)new_AST_Send((Object)send162023, (Object)symbol44402, 0);((AST_Send)send162024)->info = (AST_Info)info5518;// =send162025 = (Object)new_AST_Send((Object)send162024, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162025)->info = (AST_Info)info5518;method41261 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24275, 15, assign20307, assign20308, assign20309, send161997, send162001, send162005, assign20310, send162010, assign20311, send162015, assign20312, send162020, assign20313, send162025, Self);((AST_Method)method41261)->info = (AST_Info)info5518;symbol44046 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");methodclosure41164 = (Object)new_Runtime_MethodClosure(method41261);store_method((Type_Class)class6736, (Type_Symbol)symbol44046, (Runtime_MethodClosure)methodclosure41164);// SCParserTest>>testIdentifier//testIdentifier// 	| parser string |// 	parser := scparser identifier.// 	string := PEGStringScanner on: 'abcd '.// 	(parser match: string) should = 'abcd'.// 	string position should = 4.// 	string := PEGStringScanner on: 'AbCd145 '.// 	(parser match: string) should = 'AbCd145'.// 	string position should = 7.// 	string := PEGStringScanner on: '1a'.// 	(parser match: string) should be isNil.// 	string position should = 0localvariable27221 = (Object)new_AST_Variable_named(L"parser");localvariable27222 = (Object)new_AST_Variable_named(L"string");array24276 = (Object)new_Type_Array_with(2, (Object)localvariable27221, (Object)localvariable27222);// identifiersend162026 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44438, 0);string27288 = (Object)new_Type_String(L"testIdentifier");string27289 = (Object)new_Type_String(L"testIdentifier\n\t| parser string |\n\tparser := scparser identifier.\n\tstring := PEGStringScanner on: \'abcd \'.\n\t(parser match: string) should = \'abcd\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'AbCd145 \'.\n\t(parser match: string) should = \'AbCd145\'.\n\tstring position should = 7.\n\tstring := PEGStringScanner on: \'1a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");smallint27070 = (Object)new_Type_SmallInt(-1);smallint27071 = (Object)new_Type_SmallInt(-1);info5519 = (Object)new_AST_Info((Type_String)string27289,(Type_String)string27288, (Type_SmallInt)smallint27070, (Type_SmallInt)smallint27071);((AST_Send)send162026)->info = (AST_Info)info5519;assign20314 = (Object)new_AST_Assign((Object)localvariable27221, (Object)send162026);string27290 = (Object)new_Type_String(L"abcd ");constant34903 = (Object)new_AST_Constant((Object)string27290);// on:send162027 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34903);((AST_Send)send162027)->info = (AST_Info)info5519;assign20315 = (Object)new_AST_Assign((Object)localvariable27222, (Object)send162027);// match:send162028 = (Object)new_AST_Send((Object)localvariable27221, (Object)symbol44329, 1, (Object)localvariable27222);((AST_Send)send162028)->info = (AST_Info)info5519;// shouldsend162029 = (Object)new_AST_Send((Object)send162028, (Object)symbol44402, 0);((AST_Send)send162029)->info = (AST_Info)info5519;string27291 = (Object)new_Type_String(L"abcd");constant34904 = (Object)new_AST_Constant((Object)string27291);// =send162030 = (Object)new_AST_Send((Object)send162029, (Object)SMB__equal, 1, (Object)constant34904);((AST_Send)send162030)->info = (AST_Info)info5519;// positionsend162031 = (Object)new_AST_Send((Object)localvariable27222, (Object)symbol44475, 0);((AST_Send)send162031)->info = (AST_Info)info5519;// shouldsend162032 = (Object)new_AST_Send((Object)send162031, (Object)symbol44402, 0);((AST_Send)send162032)->info = (AST_Info)info5519;smallint27072 = (Object)new_Type_SmallInt(4);constant34905 = (Object)new_AST_Constant((Object)smallint27072);// =send162033 = (Object)new_AST_Send((Object)send162032, (Object)SMB__equal, 1, (Object)constant34905);((AST_Send)send162033)->info = (AST_Info)info5519;string27292 = (Object)new_Type_String(L"AbCd145 ");constant34906 = (Object)new_AST_Constant((Object)string27292);// on:send162034 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34906);((AST_Send)send162034)->info = (AST_Info)info5519;assign20316 = (Object)new_AST_Assign((Object)localvariable27222, (Object)send162034);// match:send162035 = (Object)new_AST_Send((Object)localvariable27221, (Object)symbol44329, 1, (Object)localvariable27222);((AST_Send)send162035)->info = (AST_Info)info5519;// shouldsend162036 = (Object)new_AST_Send((Object)send162035, (Object)symbol44402, 0);((AST_Send)send162036)->info = (AST_Info)info5519;string27293 = (Object)new_Type_String(L"AbCd145");constant34907 = (Object)new_AST_Constant((Object)string27293);// =send162037 = (Object)new_AST_Send((Object)send162036, (Object)SMB__equal, 1, (Object)constant34907);((AST_Send)send162037)->info = (AST_Info)info5519;// positionsend162038 = (Object)new_AST_Send((Object)localvariable27222, (Object)symbol44475, 0);((AST_Send)send162038)->info = (AST_Info)info5519;// shouldsend162039 = (Object)new_AST_Send((Object)send162038, (Object)symbol44402, 0);((AST_Send)send162039)->info = (AST_Info)info5519;smallint27073 = (Object)new_Type_SmallInt(7);constant34908 = (Object)new_AST_Constant((Object)smallint27073);// =send162040 = (Object)new_AST_Send((Object)send162039, (Object)SMB__equal, 1, (Object)constant34908);((AST_Send)send162040)->info = (AST_Info)info5519;string27294 = (Object)new_Type_String(L"1a");constant34909 = (Object)new_AST_Constant((Object)string27294);// on:send162041 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34909);((AST_Send)send162041)->info = (AST_Info)info5519;assign20317 = (Object)new_AST_Assign((Object)localvariable27222, (Object)send162041);// match:send162042 = (Object)new_AST_Send((Object)localvariable27221, (Object)symbol44329, 1, (Object)localvariable27222);((AST_Send)send162042)->info = (AST_Info)info5519;// shouldsend162043 = (Object)new_AST_Send((Object)send162042, (Object)symbol44402, 0);((AST_Send)send162043)->info = (AST_Info)info5519;// besend162044 = (Object)new_AST_Send((Object)send162043, (Object)symbol44476, 0);((AST_Send)send162044)->info = (AST_Info)info5519;// isNilsend162045 = (Object)new_AST_Send((Object)send162044, (Object)SMB_isNil, 0);((AST_Send)send162045)->info = (AST_Info)info5519;// positionsend162046 = (Object)new_AST_Send((Object)localvariable27222, (Object)symbol44475, 0);((AST_Send)send162046)->info = (AST_Info)info5519;// shouldsend162047 = (Object)new_AST_Send((Object)send162046, (Object)symbol44402, 0);((AST_Send)send162047)->info = (AST_Info)info5519;smallint27074 = (Object)new_Type_SmallInt(0);constant34910 = (Object)new_AST_Constant((Object)smallint27074);// =send162048 = (Object)new_AST_Send((Object)send162047, (Object)SMB__equal, 1, (Object)constant34910);((AST_Send)send162048)->info = (AST_Info)info5519;method41262 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24276, 11, assign20314, assign20315, send162030, send162033, assign20316, send162037, send162040, assign20317, send162045, send162048, Self);((AST_Method)method41262)->info = (AST_Info)info5519;symbol44086 = (Object)new_Type_Symbol_cached(L"testIdentifier");methodclosure41165 = (Object)new_Runtime_MethodClosure(method41262);store_method((Type_Class)class6736, (Type_Symbol)symbol44086, (Runtime_MethodClosure)methodclosure41165);// SCParserTest>>testUnaryObjectDescription//testUnaryObjectDescription// 	| parser string result |// 	parser := scparser unaryObjectDescription.	" unary expression "// 	string := PEGStringScanner on: 'abc def ghi '.// 	result := parser match: string.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'ghi'.// 	result := result receiver.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'def'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	string position should = 12.	" primary "// 	string := PEGStringScanner on: '3'.// 	result := parser match: string.// 	result class should = ASTNumber.// 	result number should = '3'.// 	string position should = 1localvariable27223 = (Object)new_AST_Variable_named(L"parser");localvariable27224 = (Object)new_AST_Variable_named(L"string");localvariable27225 = (Object)new_AST_Variable_named(L"result");array24277 = (Object)new_Type_Array_with(3, (Object)localvariable27223, (Object)localvariable27224, (Object)localvariable27225);// unaryObjectDescriptionsend162049 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44432, 0);string27295 = (Object)new_Type_String(L"testUnaryObjectDescription");string27296 = (Object)new_Type_String(L"testUnaryObjectDescription\n\t| parser string result |\n\tparser := scparser unaryObjectDescription.\t\" unary expression \"\n\tstring := PEGStringScanner on: \'abc def ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'ghi\'.\n\tresult := result receiver.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'def\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tstring position should = 12.\t\" primary \"\n\tstring := PEGStringScanner on: \'3\'.\n\tresult := parser match: string.\n\tresult class should = ASTNumber.\n\tresult number should = \'3\'.\n\tstring position should = 1");smallint27075 = (Object)new_Type_SmallInt(-1);smallint27076 = (Object)new_Type_SmallInt(-1);info5520 = (Object)new_AST_Info((Type_String)string27296,(Type_String)string27295, (Type_SmallInt)smallint27075, (Type_SmallInt)smallint27076);((AST_Send)send162049)->info = (AST_Info)info5520;assign20318 = (Object)new_AST_Assign((Object)localvariable27223, (Object)send162049);string27297 = (Object)new_Type_String(L"abc def ghi ");constant34911 = (Object)new_AST_Constant((Object)string27297);// on:send162050 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34911);((AST_Send)send162050)->info = (AST_Info)info5520;assign20319 = (Object)new_AST_Assign((Object)localvariable27224, (Object)send162050);// match:send162051 = (Object)new_AST_Send((Object)localvariable27223, (Object)symbol44329, 1, (Object)localvariable27224);((AST_Send)send162051)->info = (AST_Info)info5520;assign20320 = (Object)new_AST_Assign((Object)localvariable27225, (Object)send162051);// classsend162052 = (Object)new_AST_Send((Object)localvariable27225, (Object)SMB_class, 0);((AST_Send)send162052)->info = (AST_Info)info5520;// shouldsend162053 = (Object)new_AST_Send((Object)send162052, (Object)symbol44402, 0);((AST_Send)send162053)->info = (AST_Info)info5520;// =send162054 = (Object)new_AST_Send((Object)send162053, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162054)->info = (AST_Info)info5520;// selectorsend162055 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44115, 0);((AST_Send)send162055)->info = (AST_Info)info5520;// classsend162056 = (Object)new_AST_Send((Object)send162055, (Object)SMB_class, 0);((AST_Send)send162056)->info = (AST_Info)info5520;// shouldsend162057 = (Object)new_AST_Send((Object)send162056, (Object)symbol44402, 0);((AST_Send)send162057)->info = (AST_Info)info5520;// =send162058 = (Object)new_AST_Send((Object)send162057, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send162058)->info = (AST_Info)info5520;// selectorsend162059 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44115, 0);((AST_Send)send162059)->info = (AST_Info)info5520;// selectorsend162060 = (Object)new_AST_Send((Object)send162059, (Object)symbol44115, 0);((AST_Send)send162060)->info = (AST_Info)info5520;// printStringsend162061 = (Object)new_AST_Send((Object)send162060, (Object)symbol44332, 0);((AST_Send)send162061)->info = (AST_Info)info5520;// shouldsend162062 = (Object)new_AST_Send((Object)send162061, (Object)symbol44402, 0);((AST_Send)send162062)->info = (AST_Info)info5520;string27298 = (Object)new_Type_String(L"ghi");constant34912 = (Object)new_AST_Constant((Object)string27298);// =send162063 = (Object)new_AST_Send((Object)send162062, (Object)SMB__equal, 1, (Object)constant34912);((AST_Send)send162063)->info = (AST_Info)info5520;// receiversend162064 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44218, 0);((AST_Send)send162064)->info = (AST_Info)info5520;assign20321 = (Object)new_AST_Assign((Object)localvariable27225, (Object)send162064);// classsend162065 = (Object)new_AST_Send((Object)localvariable27225, (Object)SMB_class, 0);((AST_Send)send162065)->info = (AST_Info)info5520;// shouldsend162066 = (Object)new_AST_Send((Object)send162065, (Object)symbol44402, 0);((AST_Send)send162066)->info = (AST_Info)info5520;// =send162067 = (Object)new_AST_Send((Object)send162066, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162067)->info = (AST_Info)info5520;// selectorsend162068 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44115, 0);((AST_Send)send162068)->info = (AST_Info)info5520;// classsend162069 = (Object)new_AST_Send((Object)send162068, (Object)SMB_class, 0);((AST_Send)send162069)->info = (AST_Info)info5520;// shouldsend162070 = (Object)new_AST_Send((Object)send162069, (Object)symbol44402, 0);((AST_Send)send162070)->info = (AST_Info)info5520;// =send162071 = (Object)new_AST_Send((Object)send162070, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send162071)->info = (AST_Info)info5520;// selectorsend162072 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44115, 0);((AST_Send)send162072)->info = (AST_Info)info5520;// selectorsend162073 = (Object)new_AST_Send((Object)send162072, (Object)symbol44115, 0);((AST_Send)send162073)->info = (AST_Info)info5520;// printStringsend162074 = (Object)new_AST_Send((Object)send162073, (Object)symbol44332, 0);((AST_Send)send162074)->info = (AST_Info)info5520;// shouldsend162075 = (Object)new_AST_Send((Object)send162074, (Object)symbol44402, 0);((AST_Send)send162075)->info = (AST_Info)info5520;string27299 = (Object)new_Type_String(L"def");constant34913 = (Object)new_AST_Constant((Object)string27299);// =send162076 = (Object)new_AST_Send((Object)send162075, (Object)SMB__equal, 1, (Object)constant34913);((AST_Send)send162076)->info = (AST_Info)info5520;// receiversend162077 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44218, 0);((AST_Send)send162077)->info = (AST_Info)info5520;// classsend162078 = (Object)new_AST_Send((Object)send162077, (Object)SMB_class, 0);((AST_Send)send162078)->info = (AST_Info)info5520;// shouldsend162079 = (Object)new_AST_Send((Object)send162078, (Object)symbol44402, 0);((AST_Send)send162079)->info = (AST_Info)info5520;// =send162080 = (Object)new_AST_Send((Object)send162079, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162080)->info = (AST_Info)info5520;// receiversend162081 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44218, 0);((AST_Send)send162081)->info = (AST_Info)info5520;// namesend162082 = (Object)new_AST_Send((Object)send162081, (Object)SMB_name, 0);((AST_Send)send162082)->info = (AST_Info)info5520;// shouldsend162083 = (Object)new_AST_Send((Object)send162082, (Object)symbol44402, 0);((AST_Send)send162083)->info = (AST_Info)info5520;string27300 = (Object)new_Type_String(L"abc");constant34914 = (Object)new_AST_Constant((Object)string27300);// =send162084 = (Object)new_AST_Send((Object)send162083, (Object)SMB__equal, 1, (Object)constant34914);((AST_Send)send162084)->info = (AST_Info)info5520;// positionsend162085 = (Object)new_AST_Send((Object)localvariable27224, (Object)symbol44475, 0);((AST_Send)send162085)->info = (AST_Info)info5520;// shouldsend162086 = (Object)new_AST_Send((Object)send162085, (Object)symbol44402, 0);((AST_Send)send162086)->info = (AST_Info)info5520;smallint27077 = (Object)new_Type_SmallInt(12);constant34915 = (Object)new_AST_Constant((Object)smallint27077);// =send162087 = (Object)new_AST_Send((Object)send162086, (Object)SMB__equal, 1, (Object)constant34915);((AST_Send)send162087)->info = (AST_Info)info5520;string27301 = (Object)new_Type_String(L"3");constant34916 = (Object)new_AST_Constant((Object)string27301);// on:send162088 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34916);((AST_Send)send162088)->info = (AST_Info)info5520;assign20322 = (Object)new_AST_Assign((Object)localvariable27224, (Object)send162088);// match:send162089 = (Object)new_AST_Send((Object)localvariable27223, (Object)symbol44329, 1, (Object)localvariable27224);((AST_Send)send162089)->info = (AST_Info)info5520;assign20323 = (Object)new_AST_Assign((Object)localvariable27225, (Object)send162089);// classsend162090 = (Object)new_AST_Send((Object)localvariable27225, (Object)SMB_class, 0);((AST_Send)send162090)->info = (AST_Info)info5520;// shouldsend162091 = (Object)new_AST_Send((Object)send162090, (Object)symbol44402, 0);((AST_Send)send162091)->info = (AST_Info)info5520;// =send162092 = (Object)new_AST_Send((Object)send162091, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162092)->info = (AST_Info)info5520;// numbersend162093 = (Object)new_AST_Send((Object)localvariable27225, (Object)symbol44192, 0);((AST_Send)send162093)->info = (AST_Info)info5520;// shouldsend162094 = (Object)new_AST_Send((Object)send162093, (Object)symbol44402, 0);((AST_Send)send162094)->info = (AST_Info)info5520;string27302 = (Object)new_Type_String(L"3");constant34917 = (Object)new_AST_Constant((Object)string27302);// =send162095 = (Object)new_AST_Send((Object)send162094, (Object)SMB__equal, 1, (Object)constant34917);((AST_Send)send162095)->info = (AST_Info)info5520;// positionsend162096 = (Object)new_AST_Send((Object)localvariable27224, (Object)symbol44475, 0);((AST_Send)send162096)->info = (AST_Info)info5520;// shouldsend162097 = (Object)new_AST_Send((Object)send162096, (Object)symbol44402, 0);((AST_Send)send162097)->info = (AST_Info)info5520;smallint27078 = (Object)new_Type_SmallInt(1);constant34918 = (Object)new_AST_Constant((Object)smallint27078);// =send162098 = (Object)new_AST_Send((Object)send162097, (Object)SMB__equal, 1, (Object)constant34918);((AST_Send)send162098)->info = (AST_Info)info5520;method41263 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24277, 19, assign20318, assign20319, assign20320, send162054, send162058, send162063, assign20321, send162067, send162071, send162076, send162080, send162084, send162087, assign20322, assign20323, send162092, send162095, send162098, Self);((AST_Method)method41263)->info = (AST_Info)info5520;symbol44078 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");methodclosure41166 = (Object)new_Runtime_MethodClosure(method41263);store_method((Type_Class)class6736, (Type_Symbol)symbol44078, (Runtime_MethodClosure)methodclosure41166);// SCParserTest>>testBinaryArgument//testBinaryArgument// 	| parser string result |// 	parser := scparser binaryMessageDefinition.// 	string := PEGStringScanner on: '+= a'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '+='.// 	result parameter class should = ASTVariable.// 	result parameter name asString should = 'a'.// 	string position should = 4.// 	string := PEGStringScanner on: '|= a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '-= abc d'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '-='.// 	result parameter class should = ASTVariable.// 	result parameter name asString should = 'abc'.// 	string position should = 6localvariable27226 = (Object)new_AST_Variable_named(L"parser");localvariable27227 = (Object)new_AST_Variable_named(L"string");localvariable27228 = (Object)new_AST_Variable_named(L"result");array24278 = (Object)new_Type_Array_with(3, (Object)localvariable27226, (Object)localvariable27227, (Object)localvariable27228);// binaryMessageDefinitionsend162099 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44429, 0);string27303 = (Object)new_Type_String(L"testBinaryArgument");string27304 = (Object)new_Type_String(L"testBinaryArgument\n\t| parser string result |\n\tparser := scparser binaryMessageDefinition.\n\tstring := PEGStringScanner on: \'+= a\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'+=\'.\n\tresult parameter class should = ASTVariable.\n\tresult parameter name asString should = \'a\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'|= a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'-= abc d\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'-=\'.\n\tresult parameter class should = ASTVariable.\n\tresult parameter name asString should = \'abc\'.\n\tstring position should = 6");smallint27079 = (Object)new_Type_SmallInt(-1);smallint27080 = (Object)new_Type_SmallInt(-1);info5521 = (Object)new_AST_Info((Type_String)string27304,(Type_String)string27303, (Type_SmallInt)smallint27079, (Type_SmallInt)smallint27080);((AST_Send)send162099)->info = (AST_Info)info5521;assign20324 = (Object)new_AST_Assign((Object)localvariable27226, (Object)send162099);string27305 = (Object)new_Type_String(L"+= a");constant34919 = (Object)new_AST_Constant((Object)string27305);// on:send162100 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34919);((AST_Send)send162100)->info = (AST_Info)info5521;assign20325 = (Object)new_AST_Assign((Object)localvariable27227, (Object)send162100);// match:send162101 = (Object)new_AST_Send((Object)localvariable27226, (Object)symbol44329, 1, (Object)localvariable27227);((AST_Send)send162101)->info = (AST_Info)info5521;assign20326 = (Object)new_AST_Assign((Object)localvariable27228, (Object)send162101);// classsend162102 = (Object)new_AST_Send((Object)localvariable27228, (Object)SMB_class, 0);((AST_Send)send162102)->info = (AST_Info)info5521;// shouldsend162103 = (Object)new_AST_Send((Object)send162102, (Object)symbol44402, 0);((AST_Send)send162103)->info = (AST_Info)info5521;// =send162104 = (Object)new_AST_Send((Object)send162103, (Object)SMB__equal, 1, (Object)classreference13418);((AST_Send)send162104)->info = (AST_Info)info5521;// selectorsend162105 = (Object)new_AST_Send((Object)localvariable27228, (Object)symbol44115, 0);((AST_Send)send162105)->info = (AST_Info)info5521;// printStringsend162106 = (Object)new_AST_Send((Object)send162105, (Object)symbol44332, 0);((AST_Send)send162106)->info = (AST_Info)info5521;// shouldsend162107 = (Object)new_AST_Send((Object)send162106, (Object)symbol44402, 0);((AST_Send)send162107)->info = (AST_Info)info5521;string27306 = (Object)new_Type_String(L"+=");constant34920 = (Object)new_AST_Constant((Object)string27306);// =send162108 = (Object)new_AST_Send((Object)send162107, (Object)SMB__equal, 1, (Object)constant34920);((AST_Send)send162108)->info = (AST_Info)info5521;// parametersend162109 = (Object)new_AST_Send((Object)localvariable27228, (Object)symbol44221, 0);((AST_Send)send162109)->info = (AST_Info)info5521;// classsend162110 = (Object)new_AST_Send((Object)send162109, (Object)SMB_class, 0);((AST_Send)send162110)->info = (AST_Info)info5521;// shouldsend162111 = (Object)new_AST_Send((Object)send162110, (Object)symbol44402, 0);((AST_Send)send162111)->info = (AST_Info)info5521;// =send162112 = (Object)new_AST_Send((Object)send162111, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162112)->info = (AST_Info)info5521;// parametersend162113 = (Object)new_AST_Send((Object)localvariable27228, (Object)symbol44221, 0);((AST_Send)send162113)->info = (AST_Info)info5521;// namesend162114 = (Object)new_AST_Send((Object)send162113, (Object)SMB_name, 0);((AST_Send)send162114)->info = (AST_Info)info5521;// asStringsend162115 = (Object)new_AST_Send((Object)send162114, (Object)SMB_asString, 0);((AST_Send)send162115)->info = (AST_Info)info5521;// shouldsend162116 = (Object)new_AST_Send((Object)send162115, (Object)symbol44402, 0);((AST_Send)send162116)->info = (AST_Info)info5521;string27307 = (Object)new_Type_String(L"a");constant34921 = (Object)new_AST_Constant((Object)string27307);// =send162117 = (Object)new_AST_Send((Object)send162116, (Object)SMB__equal, 1, (Object)constant34921);((AST_Send)send162117)->info = (AST_Info)info5521;// positionsend162118 = (Object)new_AST_Send((Object)localvariable27227, (Object)symbol44475, 0);((AST_Send)send162118)->info = (AST_Info)info5521;// shouldsend162119 = (Object)new_AST_Send((Object)send162118, (Object)symbol44402, 0);((AST_Send)send162119)->info = (AST_Info)info5521;smallint27081 = (Object)new_Type_SmallInt(4);constant34922 = (Object)new_AST_Constant((Object)smallint27081);// =send162120 = (Object)new_AST_Send((Object)send162119, (Object)SMB__equal, 1, (Object)constant34922);((AST_Send)send162120)->info = (AST_Info)info5521;string27308 = (Object)new_Type_String(L"|= a");constant34923 = (Object)new_AST_Constant((Object)string27308);// on:send162121 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34923);((AST_Send)send162121)->info = (AST_Info)info5521;assign20327 = (Object)new_AST_Assign((Object)localvariable27227, (Object)send162121);// match:send162122 = (Object)new_AST_Send((Object)localvariable27226, (Object)symbol44329, 1, (Object)localvariable27227);((AST_Send)send162122)->info = (AST_Info)info5521;// shouldsend162123 = (Object)new_AST_Send((Object)send162122, (Object)symbol44402, 0);((AST_Send)send162123)->info = (AST_Info)info5521;// besend162124 = (Object)new_AST_Send((Object)send162123, (Object)symbol44476, 0);((AST_Send)send162124)->info = (AST_Info)info5521;// isNilsend162125 = (Object)new_AST_Send((Object)send162124, (Object)SMB_isNil, 0);((AST_Send)send162125)->info = (AST_Info)info5521;// positionsend162126 = (Object)new_AST_Send((Object)localvariable27227, (Object)symbol44475, 0);((AST_Send)send162126)->info = (AST_Info)info5521;// shouldsend162127 = (Object)new_AST_Send((Object)send162126, (Object)symbol44402, 0);((AST_Send)send162127)->info = (AST_Info)info5521;smallint27082 = (Object)new_Type_SmallInt(0);constant34924 = (Object)new_AST_Constant((Object)smallint27082);// =send162128 = (Object)new_AST_Send((Object)send162127, (Object)SMB__equal, 1, (Object)constant34924);((AST_Send)send162128)->info = (AST_Info)info5521;string27309 = (Object)new_Type_String(L"-= abc d");constant34925 = (Object)new_AST_Constant((Object)string27309);// on:send162129 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34925);((AST_Send)send162129)->info = (AST_Info)info5521;assign20328 = (Object)new_AST_Assign((Object)localvariable27227, (Object)send162129);// match:send162130 = (Object)new_AST_Send((Object)localvariable27226, (Object)symbol44329, 1, (Object)localvariable27227);((AST_Send)send162130)->info = (AST_Info)info5521;assign20329 = (Object)new_AST_Assign((Object)localvariable27228, (Object)send162130);// classsend162131 = (Object)new_AST_Send((Object)localvariable27228, (Object)SMB_class, 0);((AST_Send)send162131)->info = (AST_Info)info5521;// shouldsend162132 = (Object)new_AST_Send((Object)send162131, (Object)symbol44402, 0);((AST_Send)send162132)->info = (AST_Info)info5521;// =send162133 = (Object)new_AST_Send((Object)send162132, (Object)SMB__equal, 1, (Object)classreference13418);((AST_Send)send162133)->info = (AST_Info)info5521;// selectorsend162134 = (Object)new_AST_Send((Object)localvariable27228, (Object)symbol44115, 0);((AST_Send)send162134)->info = (AST_Info)info5521;// printStringsend162135 = (Object)new_AST_Send((Object)send162134, (Object)symbol44332, 0);((AST_Send)send162135)->info = (AST_Info)info5521;// shouldsend162136 = (Object)new_AST_Send((Object)send162135, (Object)symbol44402, 0);((AST_Send)send162136)->info = (AST_Info)info5521;string27310 = (Object)new_Type_String(L"-=");constant34926 = (Object)new_AST_Constant((Object)string27310);// =send162137 = (Object)new_AST_Send((Object)send162136, (Object)SMB__equal, 1, (Object)constant34926);((AST_Send)send162137)->info = (AST_Info)info5521;// parametersend162138 = (Object)new_AST_Send((Object)localvariable27228, (Object)symbol44221, 0);((AST_Send)send162138)->info = (AST_Info)info5521;// classsend162139 = (Object)new_AST_Send((Object)send162138, (Object)SMB_class, 0);((AST_Send)send162139)->info = (AST_Info)info5521;// shouldsend162140 = (Object)new_AST_Send((Object)send162139, (Object)symbol44402, 0);((AST_Send)send162140)->info = (AST_Info)info5521;// =send162141 = (Object)new_AST_Send((Object)send162140, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162141)->info = (AST_Info)info5521;// parametersend162142 = (Object)new_AST_Send((Object)localvariable27228, (Object)symbol44221, 0);((AST_Send)send162142)->info = (AST_Info)info5521;// namesend162143 = (Object)new_AST_Send((Object)send162142, (Object)SMB_name, 0);((AST_Send)send162143)->info = (AST_Info)info5521;// asStringsend162144 = (Object)new_AST_Send((Object)send162143, (Object)SMB_asString, 0);((AST_Send)send162144)->info = (AST_Info)info5521;// shouldsend162145 = (Object)new_AST_Send((Object)send162144, (Object)symbol44402, 0);((AST_Send)send162145)->info = (AST_Info)info5521;string27311 = (Object)new_Type_String(L"abc");constant34927 = (Object)new_AST_Constant((Object)string27311);// =send162146 = (Object)new_AST_Send((Object)send162145, (Object)SMB__equal, 1, (Object)constant34927);((AST_Send)send162146)->info = (AST_Info)info5521;// positionsend162147 = (Object)new_AST_Send((Object)localvariable27227, (Object)symbol44475, 0);((AST_Send)send162147)->info = (AST_Info)info5521;// shouldsend162148 = (Object)new_AST_Send((Object)send162147, (Object)symbol44402, 0);((AST_Send)send162148)->info = (AST_Info)info5521;smallint27083 = (Object)new_Type_SmallInt(6);constant34928 = (Object)new_AST_Constant((Object)smallint27083);// =send162149 = (Object)new_AST_Send((Object)send162148, (Object)SMB__equal, 1, (Object)constant34928);((AST_Send)send162149)->info = (AST_Info)info5521;method41264 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24278, 19, assign20324, assign20325, assign20326, send162104, send162108, send162112, send162117, send162120, assign20327, send162125, send162128, assign20328, assign20329, send162133, send162137, send162141, send162146, send162149, Self);((AST_Method)method41264)->info = (AST_Info)info5521;symbol44031 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");methodclosure41167 = (Object)new_Runtime_MethodClosure(method41264);store_method((Type_Class)class6736, (Type_Symbol)symbol44031, (Runtime_MethodClosure)methodclosure41167);// SCParserTest>>testUnaryExpression//testUnaryExpression// 	| parser string result |// 	parser := scparser unaryExpression.// 	string := PEGStringScanner on: 'abc def ghi '.// 	result := parser match: string.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'ghi'.// 	result := result receiver.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'def'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	string position should = 12.// 	string := PEGStringScanner on: 'abc'.// 	(parser match: string) should be isNillocalvariable27229 = (Object)new_AST_Variable_named(L"parser");localvariable27230 = (Object)new_AST_Variable_named(L"string");localvariable27231 = (Object)new_AST_Variable_named(L"result");array24279 = (Object)new_Type_Array_with(3, (Object)localvariable27229, (Object)localvariable27230, (Object)localvariable27231);// unaryExpressionsend162150 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44426, 0);string27312 = (Object)new_Type_String(L"testUnaryExpression");string27313 = (Object)new_Type_String(L"testUnaryExpression\n\t| parser string result |\n\tparser := scparser unaryExpression.\n\tstring := PEGStringScanner on: \'abc def ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'ghi\'.\n\tresult := result receiver.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'def\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tstring position should = 12.\n\tstring := PEGStringScanner on: \'abc\'.\n\t(parser match: string) should be isNil");smallint27084 = (Object)new_Type_SmallInt(-1);smallint27085 = (Object)new_Type_SmallInt(-1);info5522 = (Object)new_AST_Info((Type_String)string27313,(Type_String)string27312, (Type_SmallInt)smallint27084, (Type_SmallInt)smallint27085);((AST_Send)send162150)->info = (AST_Info)info5522;assign20330 = (Object)new_AST_Assign((Object)localvariable27229, (Object)send162150);string27314 = (Object)new_Type_String(L"abc def ghi ");constant34929 = (Object)new_AST_Constant((Object)string27314);// on:send162151 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34929);((AST_Send)send162151)->info = (AST_Info)info5522;assign20331 = (Object)new_AST_Assign((Object)localvariable27230, (Object)send162151);// match:send162152 = (Object)new_AST_Send((Object)localvariable27229, (Object)symbol44329, 1, (Object)localvariable27230);((AST_Send)send162152)->info = (AST_Info)info5522;assign20332 = (Object)new_AST_Assign((Object)localvariable27231, (Object)send162152);// classsend162153 = (Object)new_AST_Send((Object)localvariable27231, (Object)SMB_class, 0);((AST_Send)send162153)->info = (AST_Info)info5522;// shouldsend162154 = (Object)new_AST_Send((Object)send162153, (Object)symbol44402, 0);((AST_Send)send162154)->info = (AST_Info)info5522;// =send162155 = (Object)new_AST_Send((Object)send162154, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162155)->info = (AST_Info)info5522;// selectorsend162156 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44115, 0);((AST_Send)send162156)->info = (AST_Info)info5522;// classsend162157 = (Object)new_AST_Send((Object)send162156, (Object)SMB_class, 0);((AST_Send)send162157)->info = (AST_Info)info5522;// shouldsend162158 = (Object)new_AST_Send((Object)send162157, (Object)symbol44402, 0);((AST_Send)send162158)->info = (AST_Info)info5522;// =send162159 = (Object)new_AST_Send((Object)send162158, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send162159)->info = (AST_Info)info5522;// selectorsend162160 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44115, 0);((AST_Send)send162160)->info = (AST_Info)info5522;// selectorsend162161 = (Object)new_AST_Send((Object)send162160, (Object)symbol44115, 0);((AST_Send)send162161)->info = (AST_Info)info5522;// printStringsend162162 = (Object)new_AST_Send((Object)send162161, (Object)symbol44332, 0);((AST_Send)send162162)->info = (AST_Info)info5522;// shouldsend162163 = (Object)new_AST_Send((Object)send162162, (Object)symbol44402, 0);((AST_Send)send162163)->info = (AST_Info)info5522;string27315 = (Object)new_Type_String(L"ghi");constant34930 = (Object)new_AST_Constant((Object)string27315);// =send162164 = (Object)new_AST_Send((Object)send162163, (Object)SMB__equal, 1, (Object)constant34930);((AST_Send)send162164)->info = (AST_Info)info5522;// receiversend162165 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44218, 0);((AST_Send)send162165)->info = (AST_Info)info5522;assign20333 = (Object)new_AST_Assign((Object)localvariable27231, (Object)send162165);// classsend162166 = (Object)new_AST_Send((Object)localvariable27231, (Object)SMB_class, 0);((AST_Send)send162166)->info = (AST_Info)info5522;// shouldsend162167 = (Object)new_AST_Send((Object)send162166, (Object)symbol44402, 0);((AST_Send)send162167)->info = (AST_Info)info5522;// =send162168 = (Object)new_AST_Send((Object)send162167, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162168)->info = (AST_Info)info5522;// selectorsend162169 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44115, 0);((AST_Send)send162169)->info = (AST_Info)info5522;// classsend162170 = (Object)new_AST_Send((Object)send162169, (Object)SMB_class, 0);((AST_Send)send162170)->info = (AST_Info)info5522;// shouldsend162171 = (Object)new_AST_Send((Object)send162170, (Object)symbol44402, 0);((AST_Send)send162171)->info = (AST_Info)info5522;// =send162172 = (Object)new_AST_Send((Object)send162171, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send162172)->info = (AST_Info)info5522;// selectorsend162173 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44115, 0);((AST_Send)send162173)->info = (AST_Info)info5522;// selectorsend162174 = (Object)new_AST_Send((Object)send162173, (Object)symbol44115, 0);((AST_Send)send162174)->info = (AST_Info)info5522;// printStringsend162175 = (Object)new_AST_Send((Object)send162174, (Object)symbol44332, 0);((AST_Send)send162175)->info = (AST_Info)info5522;// shouldsend162176 = (Object)new_AST_Send((Object)send162175, (Object)symbol44402, 0);((AST_Send)send162176)->info = (AST_Info)info5522;string27316 = (Object)new_Type_String(L"def");constant34931 = (Object)new_AST_Constant((Object)string27316);// =send162177 = (Object)new_AST_Send((Object)send162176, (Object)SMB__equal, 1, (Object)constant34931);((AST_Send)send162177)->info = (AST_Info)info5522;// receiversend162178 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44218, 0);((AST_Send)send162178)->info = (AST_Info)info5522;// classsend162179 = (Object)new_AST_Send((Object)send162178, (Object)SMB_class, 0);((AST_Send)send162179)->info = (AST_Info)info5522;// shouldsend162180 = (Object)new_AST_Send((Object)send162179, (Object)symbol44402, 0);((AST_Send)send162180)->info = (AST_Info)info5522;// =send162181 = (Object)new_AST_Send((Object)send162180, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162181)->info = (AST_Info)info5522;// receiversend162182 = (Object)new_AST_Send((Object)localvariable27231, (Object)symbol44218, 0);((AST_Send)send162182)->info = (AST_Info)info5522;// namesend162183 = (Object)new_AST_Send((Object)send162182, (Object)SMB_name, 0);((AST_Send)send162183)->info = (AST_Info)info5522;// shouldsend162184 = (Object)new_AST_Send((Object)send162183, (Object)symbol44402, 0);((AST_Send)send162184)->info = (AST_Info)info5522;string27317 = (Object)new_Type_String(L"abc");constant34932 = (Object)new_AST_Constant((Object)string27317);// =send162185 = (Object)new_AST_Send((Object)send162184, (Object)SMB__equal, 1, (Object)constant34932);((AST_Send)send162185)->info = (AST_Info)info5522;// positionsend162186 = (Object)new_AST_Send((Object)localvariable27230, (Object)symbol44475, 0);((AST_Send)send162186)->info = (AST_Info)info5522;// shouldsend162187 = (Object)new_AST_Send((Object)send162186, (Object)symbol44402, 0);((AST_Send)send162187)->info = (AST_Info)info5522;smallint27086 = (Object)new_Type_SmallInt(12);constant34933 = (Object)new_AST_Constant((Object)smallint27086);// =send162188 = (Object)new_AST_Send((Object)send162187, (Object)SMB__equal, 1, (Object)constant34933);((AST_Send)send162188)->info = (AST_Info)info5522;string27318 = (Object)new_Type_String(L"abc");constant34934 = (Object)new_AST_Constant((Object)string27318);// on:send162189 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34934);((AST_Send)send162189)->info = (AST_Info)info5522;assign20334 = (Object)new_AST_Assign((Object)localvariable27230, (Object)send162189);// match:send162190 = (Object)new_AST_Send((Object)localvariable27229, (Object)symbol44329, 1, (Object)localvariable27230);((AST_Send)send162190)->info = (AST_Info)info5522;// shouldsend162191 = (Object)new_AST_Send((Object)send162190, (Object)symbol44402, 0);((AST_Send)send162191)->info = (AST_Info)info5522;// besend162192 = (Object)new_AST_Send((Object)send162191, (Object)symbol44476, 0);((AST_Send)send162192)->info = (AST_Info)info5522;// isNilsend162193 = (Object)new_AST_Send((Object)send162192, (Object)SMB_isNil, 0);((AST_Send)send162193)->info = (AST_Info)info5522;method41265 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24279, 16, assign20330, assign20331, assign20332, send162155, send162159, send162164, assign20333, send162168, send162172, send162177, send162181, send162185, send162188, assign20334, send162193, Self);((AST_Method)method41265)->info = (AST_Info)info5522;symbol44028 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");methodclosure41168 = (Object)new_Runtime_MethodClosure(method41265);store_method((Type_Class)class6736, (Type_Symbol)symbol44028, (Runtime_MethodClosure)methodclosure41168);// SCParserTest>>testTemporaries//testTemporaries// 	| parser string |// 	parser := scparser temporaries.// 	string := PEGStringScanner on: '|a b c|'.// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)// 	at: 1 put: 'a';// 	at: 2 put: 'b';// 	at: 3 put: 'c';// 	yourself).// 	string position should = 7.// 	string := PEGStringScanner on: '|  a b c  |'.// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)// 	at: 1 put: 'a';// 	at: 2 put: 'b';// 	at: 3 put: 'c';// 	yourself).// 	string position should = 11localvariable27232 = (Object)new_AST_Variable_named(L"parser");localvariable27233 = (Object)new_AST_Variable_named(L"string");array24280 = (Object)new_Type_Array_with(2, (Object)localvariable27232, (Object)localvariable27233);// temporariessend162194 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44230, 0);string27319 = (Object)new_Type_String(L"testTemporaries");string27320 = (Object)new_Type_String(L"testTemporaries\n\t| parser string |\n\tparser := scparser temporaries.\n\tstring := PEGStringScanner on: \'|a b c|\'.\n\t((parser match: string) collect: #name) asArray should = ((Array new: 3)\n\tat: 1 put: \'a\';\n\tat: 2 put: \'b\';\n\tat: 3 put: \'c\';\n\tyourself).\n\tstring position should = 7.\n\tstring := PEGStringScanner on: \'|  a b c  |\'.\n\t((parser match: string) collect: #name) asArray should = ((Array new: 3)\n\tat: 1 put: \'a\';\n\tat: 2 put: \'b\';\n\tat: 3 put: \'c\';\n\tyourself).\n\tstring position should = 11");smallint27087 = (Object)new_Type_SmallInt(-1);smallint27088 = (Object)new_Type_SmallInt(-1);info5523 = (Object)new_AST_Info((Type_String)string27320,(Type_String)string27319, (Type_SmallInt)smallint27087, (Type_SmallInt)smallint27088);((AST_Send)send162194)->info = (AST_Info)info5523;assign20335 = (Object)new_AST_Assign((Object)localvariable27232, (Object)send162194);string27321 = (Object)new_Type_String(L"|a b c|");constant34935 = (Object)new_AST_Constant((Object)string27321);// on:send162195 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34935);((AST_Send)send162195)->info = (AST_Info)info5523;assign20336 = (Object)new_AST_Assign((Object)localvariable27233, (Object)send162195);// match:send162196 = (Object)new_AST_Send((Object)localvariable27232, (Object)symbol44329, 1, (Object)localvariable27233);((AST_Send)send162196)->info = (AST_Info)info5523;constant34936 = (Object)new_AST_Constant((Object)SMB_name);// collect:send162197 = (Object)new_AST_Send((Object)send162196, (Object)symbol44435, 1, (Object)constant34936);((AST_Send)send162197)->info = (AST_Info)info5523;// asArraysend162198 = (Object)new_AST_Send((Object)send162197, (Object)SMB_asArray, 0);((AST_Send)send162198)->info = (AST_Info)info5523;// shouldsend162199 = (Object)new_AST_Send((Object)send162198, (Object)symbol44402, 0);((AST_Send)send162199)->info = (AST_Info)info5523;localvariable27234 = (Object)new_AST_Variable_named(L"receiver");array24281 = (Object)new_Type_Array_with(1, (Object)localvariable27234);smallint27089 = (Object)new_Type_SmallInt(1);constant34937 = (Object)new_AST_Constant((Object)smallint27089);string27322 = (Object)new_Type_String(L"a");constant34938 = (Object)new_AST_Constant((Object)string27322);// at:put:send162200 = (Object)new_AST_Send((Object)localvariable27234, (Object)SMB_at_put_, 2, (Object)constant34937, (Object)constant34938);((AST_Send)send162200)->info = (AST_Info)info5523;smallint27090 = (Object)new_Type_SmallInt(2);constant34939 = (Object)new_AST_Constant((Object)smallint27090);string27323 = (Object)new_Type_String(L"b");constant34940 = (Object)new_AST_Constant((Object)string27323);// at:put:send162201 = (Object)new_AST_Send((Object)localvariable27234, (Object)SMB_at_put_, 2, (Object)constant34939, (Object)constant34940);((AST_Send)send162201)->info = (AST_Info)info5523;smallint27091 = (Object)new_Type_SmallInt(3);constant34941 = (Object)new_AST_Constant((Object)smallint27091);string27324 = (Object)new_Type_String(L"c");constant34942 = (Object)new_AST_Constant((Object)string27324);// at:put:send162202 = (Object)new_AST_Send((Object)localvariable27234, (Object)SMB_at_put_, 2, (Object)constant34941, (Object)constant34942);((AST_Send)send162202)->info = (AST_Info)info5523;// yourselfsend162203 = (Object)new_AST_Send((Object)localvariable27234, (Object)symbol44008, 0);((AST_Send)send162203)->info = (AST_Info)info5523;block11859 = (Object)new_AST_Block_with((Type_Array)array24281, (Type_Array)empty_Type_Array, 1, 4, send162200, send162201, send162202, send162203);smallint27092 = (Object)new_Type_SmallInt(3);constant34943 = (Object)new_AST_Constant((Object)smallint27092);// new:send162204 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant34943);((AST_Send)send162204)->info = (AST_Info)info5523;// value:send162205 = (Object)new_AST_Send((Object)block11859, (Object)SMB_value_, 1, (Object)send162204);((AST_Send)send162205)->info = (AST_Info)info5523;// =send162206 = (Object)new_AST_Send((Object)send162199, (Object)SMB__equal, 1, (Object)send162205);((AST_Send)send162206)->info = (AST_Info)info5523;// positionsend162207 = (Object)new_AST_Send((Object)localvariable27233, (Object)symbol44475, 0);((AST_Send)send162207)->info = (AST_Info)info5523;// shouldsend162208 = (Object)new_AST_Send((Object)send162207, (Object)symbol44402, 0);((AST_Send)send162208)->info = (AST_Info)info5523;smallint27093 = (Object)new_Type_SmallInt(7);constant34944 = (Object)new_AST_Constant((Object)smallint27093);// =send162209 = (Object)new_AST_Send((Object)send162208, (Object)SMB__equal, 1, (Object)constant34944);((AST_Send)send162209)->info = (AST_Info)info5523;string27325 = (Object)new_Type_String(L"|  a b c  |");constant34945 = (Object)new_AST_Constant((Object)string27325);// on:send162210 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34945);((AST_Send)send162210)->info = (AST_Info)info5523;assign20337 = (Object)new_AST_Assign((Object)localvariable27233, (Object)send162210);// match:send162211 = (Object)new_AST_Send((Object)localvariable27232, (Object)symbol44329, 1, (Object)localvariable27233);((AST_Send)send162211)->info = (AST_Info)info5523;constant34946 = (Object)new_AST_Constant((Object)SMB_name);// collect:send162212 = (Object)new_AST_Send((Object)send162211, (Object)symbol44435, 1, (Object)constant34946);((AST_Send)send162212)->info = (AST_Info)info5523;// asArraysend162213 = (Object)new_AST_Send((Object)send162212, (Object)SMB_asArray, 0);((AST_Send)send162213)->info = (AST_Info)info5523;// shouldsend162214 = (Object)new_AST_Send((Object)send162213, (Object)symbol44402, 0);((AST_Send)send162214)->info = (AST_Info)info5523;localvariable27235 = (Object)new_AST_Variable_named(L"receiver");array24282 = (Object)new_Type_Array_with(1, (Object)localvariable27235);smallint27094 = (Object)new_Type_SmallInt(1);constant34947 = (Object)new_AST_Constant((Object)smallint27094);string27326 = (Object)new_Type_String(L"a");constant34948 = (Object)new_AST_Constant((Object)string27326);// at:put:send162215 = (Object)new_AST_Send((Object)localvariable27235, (Object)SMB_at_put_, 2, (Object)constant34947, (Object)constant34948);((AST_Send)send162215)->info = (AST_Info)info5523;smallint27095 = (Object)new_Type_SmallInt(2);constant34949 = (Object)new_AST_Constant((Object)smallint27095);string27327 = (Object)new_Type_String(L"b");constant34950 = (Object)new_AST_Constant((Object)string27327);// at:put:send162216 = (Object)new_AST_Send((Object)localvariable27235, (Object)SMB_at_put_, 2, (Object)constant34949, (Object)constant34950);((AST_Send)send162216)->info = (AST_Info)info5523;smallint27096 = (Object)new_Type_SmallInt(3);constant34951 = (Object)new_AST_Constant((Object)smallint27096);string27328 = (Object)new_Type_String(L"c");constant34952 = (Object)new_AST_Constant((Object)string27328);// at:put:send162217 = (Object)new_AST_Send((Object)localvariable27235, (Object)SMB_at_put_, 2, (Object)constant34951, (Object)constant34952);((AST_Send)send162217)->info = (AST_Info)info5523;// yourselfsend162218 = (Object)new_AST_Send((Object)localvariable27235, (Object)symbol44008, 0);((AST_Send)send162218)->info = (AST_Info)info5523;block11860 = (Object)new_AST_Block_with((Type_Array)array24282, (Type_Array)empty_Type_Array, 1, 4, send162215, send162216, send162217, send162218);smallint27097 = (Object)new_Type_SmallInt(3);constant34953 = (Object)new_AST_Constant((Object)smallint27097);// new:send162219 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant34953);((AST_Send)send162219)->info = (AST_Info)info5523;// value:send162220 = (Object)new_AST_Send((Object)block11860, (Object)SMB_value_, 1, (Object)send162219);((AST_Send)send162220)->info = (AST_Info)info5523;// =send162221 = (Object)new_AST_Send((Object)send162214, (Object)SMB__equal, 1, (Object)send162220);((AST_Send)send162221)->info = (AST_Info)info5523;// positionsend162222 = (Object)new_AST_Send((Object)localvariable27233, (Object)symbol44475, 0);((AST_Send)send162222)->info = (AST_Info)info5523;// shouldsend162223 = (Object)new_AST_Send((Object)send162222, (Object)symbol44402, 0);((AST_Send)send162223)->info = (AST_Info)info5523;smallint27098 = (Object)new_Type_SmallInt(11);constant34954 = (Object)new_AST_Constant((Object)smallint27098);// =send162224 = (Object)new_AST_Send((Object)send162223, (Object)SMB__equal, 1, (Object)constant34954);((AST_Send)send162224)->info = (AST_Info)info5523;method41266 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24280, 8, assign20335, assign20336, send162206, send162209, assign20337, send162221, send162224, Self);((AST_Method)method41266)->info = (AST_Info)info5523;symbol44051 = (Object)new_Type_Symbol_cached(L"testTemporaries");methodclosure41169 = (Object)new_Runtime_MethodClosure(method41266);store_method((Type_Class)class6736, (Type_Symbol)symbol44051, (Runtime_MethodClosure)methodclosure41169);// SCParserTest>>setUp//setUp// 	scparser := SCParser new// newsend162225 = (Object)new_AST_Send((Object)classreference13439, (Object)symbol44095, 0);string27329 = (Object)new_Type_String(L"setUp");string27330 = (Object)new_Type_String(L"setUp\n\tscparser := SCParser new");smallint27099 = (Object)new_Type_SmallInt(-1);smallint27100 = (Object)new_Type_SmallInt(-1);info5524 = (Object)new_AST_Info((Type_String)string27330,(Type_String)string27329, (Type_SmallInt)smallint27099, (Type_SmallInt)smallint27100);((AST_Send)send162225)->info = (AST_Info)info5524;assign20338 = (Object)new_AST_Assign((Object)instancevariable16409, (Object)send162225);method41267 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign20338, Self);((AST_Method)method41267)->info = (AST_Info)info5524;symbol44071 = (Object)new_Type_Symbol_cached(L"setUp");methodclosure41170 = (Object)new_Runtime_MethodClosure(method41267);store_method((Type_Class)class6736, (Type_Symbol)symbol44071, (Runtime_MethodClosure)methodclosure41170);// SCParserTest>>testSuper//testSuper// 	| parser string message return |// 	parser := scparser messageExpression.// 	// 	string := PEGStringScanner on: 'super do: this and: that'.//  	message := parser match: string.// 	message receiver class should = ASTSuper.// 	// 	parser := scparser return.// 	string := PEGStringScanner on: '^ super do: this and: that'.//  	return := parser match: string.// 	return class should = ASTReturnExpression.// 	return expression receiver class should = ASTSuper.localvariable27236 = (Object)new_AST_Variable_named(L"parser");localvariable27237 = (Object)new_AST_Variable_named(L"string");localvariable27238 = (Object)new_AST_Variable_named(L"message");localvariable27239 = (Object)new_AST_Variable_named(L"return");array24283 = (Object)new_Type_Array_with(4, (Object)localvariable27236, (Object)localvariable27237, (Object)localvariable27238, (Object)localvariable27239);// messageExpressionsend162226 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44423, 0);string27331 = (Object)new_Type_String(L"testSuper");string27332 = (Object)new_Type_String(L"testSuper\n\t| parser string message return |\n\tparser := scparser messageExpression.\n\t\n\tstring := PEGStringScanner on: \'super do: this and: that\'.\n \tmessage := parser match: string.\n\tmessage receiver class should = ASTSuper.\n\t\n\tparser := scparser return.\n\tstring := PEGStringScanner on: \'^ super do: this and: that\'.\n \treturn := parser match: string.\n\treturn class should = ASTReturnExpression.\n\treturn expression receiver class should = ASTSuper.");smallint27101 = (Object)new_Type_SmallInt(-1);smallint27102 = (Object)new_Type_SmallInt(-1);info5525 = (Object)new_AST_Info((Type_String)string27332,(Type_String)string27331, (Type_SmallInt)smallint27101, (Type_SmallInt)smallint27102);((AST_Send)send162226)->info = (AST_Info)info5525;assign20339 = (Object)new_AST_Assign((Object)localvariable27236, (Object)send162226);string27333 = (Object)new_Type_String(L"super do: this and: that");constant34955 = (Object)new_AST_Constant((Object)string27333);// on:send162227 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34955);((AST_Send)send162227)->info = (AST_Info)info5525;assign20340 = (Object)new_AST_Assign((Object)localvariable27237, (Object)send162227);// match:send162228 = (Object)new_AST_Send((Object)localvariable27236, (Object)symbol44329, 1, (Object)localvariable27237);((AST_Send)send162228)->info = (AST_Info)info5525;assign20341 = (Object)new_AST_Assign((Object)localvariable27238, (Object)send162228);// receiversend162229 = (Object)new_AST_Send((Object)localvariable27238, (Object)symbol44218, 0);((AST_Send)send162229)->info = (AST_Info)info5525;// classsend162230 = (Object)new_AST_Send((Object)send162229, (Object)SMB_class, 0);((AST_Send)send162230)->info = (AST_Info)info5525;// shouldsend162231 = (Object)new_AST_Send((Object)send162230, (Object)symbol44402, 0);((AST_Send)send162231)->info = (AST_Info)info5525;// =send162232 = (Object)new_AST_Send((Object)send162231, (Object)SMB__equal, 1, (Object)classreference13423);((AST_Send)send162232)->info = (AST_Info)info5525;// returnsend162233 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44471, 0);((AST_Send)send162233)->info = (AST_Info)info5525;assign20342 = (Object)new_AST_Assign((Object)localvariable27236, (Object)send162233);string27334 = (Object)new_Type_String(L"^ super do: this and: that");constant34956 = (Object)new_AST_Constant((Object)string27334);// on:send162234 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34956);((AST_Send)send162234)->info = (AST_Info)info5525;assign20343 = (Object)new_AST_Assign((Object)localvariable27237, (Object)send162234);// match:send162235 = (Object)new_AST_Send((Object)localvariable27236, (Object)symbol44329, 1, (Object)localvariable27237);((AST_Send)send162235)->info = (AST_Info)info5525;assign20344 = (Object)new_AST_Assign((Object)localvariable27239, (Object)send162235);// classsend162236 = (Object)new_AST_Send((Object)localvariable27239, (Object)SMB_class, 0);((AST_Send)send162236)->info = (AST_Info)info5525;// shouldsend162237 = (Object)new_AST_Send((Object)send162236, (Object)symbol44402, 0);((AST_Send)send162237)->info = (AST_Info)info5525;// =send162238 = (Object)new_AST_Send((Object)send162237, (Object)SMB__equal, 1, (Object)classreference13405);((AST_Send)send162238)->info = (AST_Info)info5525;// expressionsend162239 = (Object)new_AST_Send((Object)localvariable27239, (Object)symbol44200, 0);((AST_Send)send162239)->info = (AST_Info)info5525;// receiversend162240 = (Object)new_AST_Send((Object)send162239, (Object)symbol44218, 0);((AST_Send)send162240)->info = (AST_Info)info5525;// classsend162241 = (Object)new_AST_Send((Object)send162240, (Object)SMB_class, 0);((AST_Send)send162241)->info = (AST_Info)info5525;// shouldsend162242 = (Object)new_AST_Send((Object)send162241, (Object)symbol44402, 0);((AST_Send)send162242)->info = (AST_Info)info5525;// =send162243 = (Object)new_AST_Send((Object)send162242, (Object)SMB__equal, 1, (Object)classreference13423);((AST_Send)send162243)->info = (AST_Info)info5525;method41268 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24283, 10, assign20339, assign20340, assign20341, send162232, assign20342, assign20343, assign20344, send162238, send162243, Self);((AST_Method)method41268)->info = (AST_Info)info5525;symbol44048 = (Object)new_Type_Symbol_cached(L"testSuper");methodclosure41171 = (Object)new_Runtime_MethodClosure(method41268);store_method((Type_Class)class6736, (Type_Symbol)symbol44048, (Runtime_MethodClosure)methodclosure41171);// SCParserTest>>testAnnotation//testAnnotation// 	| parser string result arg |// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// 	parser := scparser annotation.// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.// 	result := parser match: string.// 	result class should = ASTKeywordAnnotation.// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)// 	at: 1 put: #abc;// 	at: 2 put: #def;// 	at: 3 put: #ghi;// 	yourself).// 	arg := result arguments first.// 	arg class should = ASTNumber.// 	arg := result arguments at: 2.// 	arg class should = ASTBinaryExpression.// 	arg := result arguments at: 3.// 	arg class should = ASTUnaryExpression.// 	string atEnd should be true.// 	string := PEGStringScanner on: '<abc> '.// 	result := parser match: string.// 	result class should = ASTUnaryAnnotation.// 	result selector asString should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.// 	result := parser match: string.// 	result class should = ASTKeywordAnnotation.// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)// 	at: 1 put: 'temps';// 	at: 2 put: 'annotations';// 	at: 3 put: 'statements';// 	yourself).// 	string atEnd should be true.localvariable27240 = (Object)new_AST_Variable_named(L"parser");localvariable27241 = (Object)new_AST_Variable_named(L"string");localvariable27242 = (Object)new_AST_Variable_named(L"result");localvariable27243 = (Object)new_AST_Variable_named(L"arg");array24284 = (Object)new_Type_Array_with(4, (Object)localvariable27240, (Object)localvariable27241, (Object)localvariable27242, (Object)localvariable27243);// annotationsend162244 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44474, 0);string27335 = (Object)new_Type_String(L"testAnnotation");string27336 = (Object)new_Type_String(L"testAnnotation\n\t| parser string result arg |\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\tparser := scparser annotation.\n\tstring := PEGStringScanner on: \'<abc: 1 def: (2 + 3) ghi: (3 b)>\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordAnnotation.\n\t(result keywords asArray collect: #asSymbol) should = ((Array new: 3)\n\tat: 1 put: #abc;\n\tat: 2 put: #def;\n\tat: 3 put: #ghi;\n\tyourself).\n\targ := result arguments first.\n\targ class should = ASTNumber.\n\targ := result arguments at: 2.\n\targ class should = ASTBinaryExpression.\n\targ := result arguments at: 3.\n\targ class should = ASTUnaryExpression.\n\tstring atEnd should be true.\n\tstring := PEGStringScanner on: \'<abc> \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryAnnotation.\n\tresult selector asString should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'<temps: 4 annotations: 1 statements: 2>\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordAnnotation.\n\t(result keywords asArray collect: #asSymbol) should = ((Array new: 3)\n\tat: 1 put: \'temps\';\n\tat: 2 put: \'annotations\';\n\tat: 3 put: \'statements\';\n\tyourself).\n\tstring atEnd should be true.");smallint27103 = (Object)new_Type_SmallInt(-1);smallint27104 = (Object)new_Type_SmallInt(-1);info5526 = (Object)new_AST_Info((Type_String)string27336,(Type_String)string27335, (Type_SmallInt)smallint27103, (Type_SmallInt)smallint27104);((AST_Send)send162244)->info = (AST_Info)info5526;assign20345 = (Object)new_AST_Assign((Object)localvariable27240, (Object)send162244);string27337 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");constant34957 = (Object)new_AST_Constant((Object)string27337);// on:send162245 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34957);((AST_Send)send162245)->info = (AST_Info)info5526;assign20346 = (Object)new_AST_Assign((Object)localvariable27241, (Object)send162245);// match:send162246 = (Object)new_AST_Send((Object)localvariable27240, (Object)symbol44329, 1, (Object)localvariable27241);((AST_Send)send162246)->info = (AST_Info)info5526;assign20347 = (Object)new_AST_Assign((Object)localvariable27242, (Object)send162246);// classsend162247 = (Object)new_AST_Send((Object)localvariable27242, (Object)SMB_class, 0);((AST_Send)send162247)->info = (AST_Info)info5526;// shouldsend162248 = (Object)new_AST_Send((Object)send162247, (Object)symbol44402, 0);((AST_Send)send162248)->info = (AST_Info)info5526;// =send162249 = (Object)new_AST_Send((Object)send162248, (Object)SMB__equal, 1, (Object)classreference13425);((AST_Send)send162249)->info = (AST_Info)info5526;// keywordssend162250 = (Object)new_AST_Send((Object)localvariable27242, (Object)symbol44214, 0);((AST_Send)send162250)->info = (AST_Info)info5526;// asArraysend162251 = (Object)new_AST_Send((Object)send162250, (Object)SMB_asArray, 0);((AST_Send)send162251)->info = (AST_Info)info5526;constant34958 = (Object)new_AST_Constant((Object)SMB_asSymbol);// collect:send162252 = (Object)new_AST_Send((Object)send162251, (Object)symbol44435, 1, (Object)constant34958);((AST_Send)send162252)->info = (AST_Info)info5526;// shouldsend162253 = (Object)new_AST_Send((Object)send162252, (Object)symbol44402, 0);((AST_Send)send162253)->info = (AST_Info)info5526;localvariable27244 = (Object)new_AST_Variable_named(L"receiver");array24285 = (Object)new_Type_Array_with(1, (Object)localvariable27244);smallint27105 = (Object)new_Type_SmallInt(1);constant34959 = (Object)new_AST_Constant((Object)smallint27105);symbol44480 = (Object)new_Type_Symbol_cached(L"abc");constant34960 = (Object)new_AST_Constant((Object)symbol44480);// at:put:send162254 = (Object)new_AST_Send((Object)localvariable27244, (Object)SMB_at_put_, 2, (Object)constant34959, (Object)constant34960);((AST_Send)send162254)->info = (AST_Info)info5526;smallint27106 = (Object)new_Type_SmallInt(2);constant34961 = (Object)new_AST_Constant((Object)smallint27106);symbol44481 = (Object)new_Type_Symbol_cached(L"def");constant34962 = (Object)new_AST_Constant((Object)symbol44481);// at:put:send162255 = (Object)new_AST_Send((Object)localvariable27244, (Object)SMB_at_put_, 2, (Object)constant34961, (Object)constant34962);((AST_Send)send162255)->info = (AST_Info)info5526;smallint27107 = (Object)new_Type_SmallInt(3);constant34963 = (Object)new_AST_Constant((Object)smallint27107);symbol44482 = (Object)new_Type_Symbol_cached(L"ghi");constant34964 = (Object)new_AST_Constant((Object)symbol44482);// at:put:send162256 = (Object)new_AST_Send((Object)localvariable27244, (Object)SMB_at_put_, 2, (Object)constant34963, (Object)constant34964);((AST_Send)send162256)->info = (AST_Info)info5526;// yourselfsend162257 = (Object)new_AST_Send((Object)localvariable27244, (Object)symbol44008, 0);((AST_Send)send162257)->info = (AST_Info)info5526;block11861 = (Object)new_AST_Block_with((Type_Array)array24285, (Type_Array)empty_Type_Array, 1, 4, send162254, send162255, send162256, send162257);smallint27108 = (Object)new_Type_SmallInt(3);constant34965 = (Object)new_AST_Constant((Object)smallint27108);// new:send162258 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant34965);((AST_Send)send162258)->info = (AST_Info)info5526;// value:send162259 = (Object)new_AST_Send((Object)block11861, (Object)SMB_value_, 1, (Object)send162258);((AST_Send)send162259)->info = (AST_Info)info5526;// =send162260 = (Object)new_AST_Send((Object)send162253, (Object)SMB__equal, 1, (Object)send162259);((AST_Send)send162260)->info = (AST_Info)info5526;// argumentssend162261 = (Object)new_AST_Send((Object)localvariable27242, (Object)symbol44116, 0);((AST_Send)send162261)->info = (AST_Info)info5526;// firstsend162262 = (Object)new_AST_Send((Object)send162261, (Object)symbol44180, 0);((AST_Send)send162262)->info = (AST_Info)info5526;assign20348 = (Object)new_AST_Assign((Object)localvariable27243, (Object)send162262);// classsend162263 = (Object)new_AST_Send((Object)localvariable27243, (Object)SMB_class, 0);((AST_Send)send162263)->info = (AST_Info)info5526;// shouldsend162264 = (Object)new_AST_Send((Object)send162263, (Object)symbol44402, 0);((AST_Send)send162264)->info = (AST_Info)info5526;// =send162265 = (Object)new_AST_Send((Object)send162264, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162265)->info = (AST_Info)info5526;// argumentssend162266 = (Object)new_AST_Send((Object)localvariable27242, (Object)symbol44116, 0);((AST_Send)send162266)->info = (AST_Info)info5526;smallint27109 = (Object)new_Type_SmallInt(2);constant34966 = (Object)new_AST_Constant((Object)smallint27109);// at:send162267 = (Object)new_AST_Send((Object)send162266, (Object)SMB_at_, 1, (Object)constant34966);((AST_Send)send162267)->info = (AST_Info)info5526;assign20349 = (Object)new_AST_Assign((Object)localvariable27243, (Object)send162267);// classsend162268 = (Object)new_AST_Send((Object)localvariable27243, (Object)SMB_class, 0);((AST_Send)send162268)->info = (AST_Info)info5526;// shouldsend162269 = (Object)new_AST_Send((Object)send162268, (Object)symbol44402, 0);((AST_Send)send162269)->info = (AST_Info)info5526;// =send162270 = (Object)new_AST_Send((Object)send162269, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162270)->info = (AST_Info)info5526;// argumentssend162271 = (Object)new_AST_Send((Object)localvariable27242, (Object)symbol44116, 0);((AST_Send)send162271)->info = (AST_Info)info5526;smallint27110 = (Object)new_Type_SmallInt(3);constant34967 = (Object)new_AST_Constant((Object)smallint27110);// at:send162272 = (Object)new_AST_Send((Object)send162271, (Object)SMB_at_, 1, (Object)constant34967);((AST_Send)send162272)->info = (AST_Info)info5526;assign20350 = (Object)new_AST_Assign((Object)localvariable27243, (Object)send162272);// classsend162273 = (Object)new_AST_Send((Object)localvariable27243, (Object)SMB_class, 0);((AST_Send)send162273)->info = (AST_Info)info5526;// shouldsend162274 = (Object)new_AST_Send((Object)send162273, (Object)symbol44402, 0);((AST_Send)send162274)->info = (AST_Info)info5526;// =send162275 = (Object)new_AST_Send((Object)send162274, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162275)->info = (AST_Info)info5526;// atEndsend162276 = (Object)new_AST_Send((Object)localvariable27241, (Object)SMB_atEnd, 0);((AST_Send)send162276)->info = (AST_Info)info5526;// shouldsend162277 = (Object)new_AST_Send((Object)send162276, (Object)symbol44402, 0);((AST_Send)send162277)->info = (AST_Info)info5526;// besend162278 = (Object)new_AST_Send((Object)send162277, (Object)symbol44476, 0);((AST_Send)send162278)->info = (AST_Info)info5526;// truesend162279 = (Object)new_AST_Send((Object)send162278, (Object)symbol44478, 0);((AST_Send)send162279)->info = (AST_Info)info5526;string27338 = (Object)new_Type_String(L"<abc> ");constant34968 = (Object)new_AST_Constant((Object)string27338);// on:send162280 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34968);((AST_Send)send162280)->info = (AST_Info)info5526;assign20351 = (Object)new_AST_Assign((Object)localvariable27241, (Object)send162280);// match:send162281 = (Object)new_AST_Send((Object)localvariable27240, (Object)symbol44329, 1, (Object)localvariable27241);((AST_Send)send162281)->info = (AST_Info)info5526;assign20352 = (Object)new_AST_Assign((Object)localvariable27242, (Object)send162281);// classsend162282 = (Object)new_AST_Send((Object)localvariable27242, (Object)SMB_class, 0);((AST_Send)send162282)->info = (AST_Info)info5526;// shouldsend162283 = (Object)new_AST_Send((Object)send162282, (Object)symbol44402, 0);((AST_Send)send162283)->info = (AST_Info)info5526;// =send162284 = (Object)new_AST_Send((Object)send162283, (Object)SMB__equal, 1, (Object)classreference13427);((AST_Send)send162284)->info = (AST_Info)info5526;// selectorsend162285 = (Object)new_AST_Send((Object)localvariable27242, (Object)symbol44115, 0);((AST_Send)send162285)->info = (AST_Info)info5526;// asStringsend162286 = (Object)new_AST_Send((Object)send162285, (Object)SMB_asString, 0);((AST_Send)send162286)->info = (AST_Info)info5526;// shouldsend162287 = (Object)new_AST_Send((Object)send162286, (Object)symbol44402, 0);((AST_Send)send162287)->info = (AST_Info)info5526;string27339 = (Object)new_Type_String(L"abc");constant34969 = (Object)new_AST_Constant((Object)string27339);// =send162288 = (Object)new_AST_Send((Object)send162287, (Object)SMB__equal, 1, (Object)constant34969);((AST_Send)send162288)->info = (AST_Info)info5526;// positionsend162289 = (Object)new_AST_Send((Object)localvariable27241, (Object)symbol44475, 0);((AST_Send)send162289)->info = (AST_Info)info5526;// shouldsend162290 = (Object)new_AST_Send((Object)send162289, (Object)symbol44402, 0);((AST_Send)send162290)->info = (AST_Info)info5526;smallint27111 = (Object)new_Type_SmallInt(5);constant34970 = (Object)new_AST_Constant((Object)smallint27111);// =send162291 = (Object)new_AST_Send((Object)send162290, (Object)SMB__equal, 1, (Object)constant34970);((AST_Send)send162291)->info = (AST_Info)info5526;string27340 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");constant34971 = (Object)new_AST_Constant((Object)string27340);// on:send162292 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34971);((AST_Send)send162292)->info = (AST_Info)info5526;assign20353 = (Object)new_AST_Assign((Object)localvariable27241, (Object)send162292);// match:send162293 = (Object)new_AST_Send((Object)localvariable27240, (Object)symbol44329, 1, (Object)localvariable27241);((AST_Send)send162293)->info = (AST_Info)info5526;assign20354 = (Object)new_AST_Assign((Object)localvariable27242, (Object)send162293);// classsend162294 = (Object)new_AST_Send((Object)localvariable27242, (Object)SMB_class, 0);((AST_Send)send162294)->info = (AST_Info)info5526;// shouldsend162295 = (Object)new_AST_Send((Object)send162294, (Object)symbol44402, 0);((AST_Send)send162295)->info = (AST_Info)info5526;// =send162296 = (Object)new_AST_Send((Object)send162295, (Object)SMB__equal, 1, (Object)classreference13425);((AST_Send)send162296)->info = (AST_Info)info5526;// keywordssend162297 = (Object)new_AST_Send((Object)localvariable27242, (Object)symbol44214, 0);((AST_Send)send162297)->info = (AST_Info)info5526;// asArraysend162298 = (Object)new_AST_Send((Object)send162297, (Object)SMB_asArray, 0);((AST_Send)send162298)->info = (AST_Info)info5526;constant34972 = (Object)new_AST_Constant((Object)SMB_asSymbol);// collect:send162299 = (Object)new_AST_Send((Object)send162298, (Object)symbol44435, 1, (Object)constant34972);((AST_Send)send162299)->info = (AST_Info)info5526;// shouldsend162300 = (Object)new_AST_Send((Object)send162299, (Object)symbol44402, 0);((AST_Send)send162300)->info = (AST_Info)info5526;localvariable27245 = (Object)new_AST_Variable_named(L"receiver");array24286 = (Object)new_Type_Array_with(1, (Object)localvariable27245);smallint27112 = (Object)new_Type_SmallInt(1);constant34973 = (Object)new_AST_Constant((Object)smallint27112);string27341 = (Object)new_Type_String(L"temps");constant34974 = (Object)new_AST_Constant((Object)string27341);// at:put:send162301 = (Object)new_AST_Send((Object)localvariable27245, (Object)SMB_at_put_, 2, (Object)constant34973, (Object)constant34974);((AST_Send)send162301)->info = (AST_Info)info5526;smallint27113 = (Object)new_Type_SmallInt(2);constant34975 = (Object)new_AST_Constant((Object)smallint27113);string27342 = (Object)new_Type_String(L"annotations");constant34976 = (Object)new_AST_Constant((Object)string27342);// at:put:send162302 = (Object)new_AST_Send((Object)localvariable27245, (Object)SMB_at_put_, 2, (Object)constant34975, (Object)constant34976);((AST_Send)send162302)->info = (AST_Info)info5526;smallint27114 = (Object)new_Type_SmallInt(3);constant34977 = (Object)new_AST_Constant((Object)smallint27114);string27343 = (Object)new_Type_String(L"statements");constant34978 = (Object)new_AST_Constant((Object)string27343);// at:put:send162303 = (Object)new_AST_Send((Object)localvariable27245, (Object)SMB_at_put_, 2, (Object)constant34977, (Object)constant34978);((AST_Send)send162303)->info = (AST_Info)info5526;// yourselfsend162304 = (Object)new_AST_Send((Object)localvariable27245, (Object)symbol44008, 0);((AST_Send)send162304)->info = (AST_Info)info5526;block11862 = (Object)new_AST_Block_with((Type_Array)array24286, (Type_Array)empty_Type_Array, 1, 4, send162301, send162302, send162303, send162304);smallint27115 = (Object)new_Type_SmallInt(3);constant34979 = (Object)new_AST_Constant((Object)smallint27115);// new:send162305 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant34979);((AST_Send)send162305)->info = (AST_Info)info5526;// value:send162306 = (Object)new_AST_Send((Object)block11862, (Object)SMB_value_, 1, (Object)send162305);((AST_Send)send162306)->info = (AST_Info)info5526;// =send162307 = (Object)new_AST_Send((Object)send162300, (Object)SMB__equal, 1, (Object)send162306);((AST_Send)send162307)->info = (AST_Info)info5526;// atEndsend162308 = (Object)new_AST_Send((Object)localvariable27241, (Object)SMB_atEnd, 0);((AST_Send)send162308)->info = (AST_Info)info5526;// shouldsend162309 = (Object)new_AST_Send((Object)send162308, (Object)symbol44402, 0);((AST_Send)send162309)->info = (AST_Info)info5526;// besend162310 = (Object)new_AST_Send((Object)send162309, (Object)symbol44476, 0);((AST_Send)send162310)->info = (AST_Info)info5526;// truesend162311 = (Object)new_AST_Send((Object)send162310, (Object)symbol44478, 0);((AST_Send)send162311)->info = (AST_Info)info5526;method41269 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24284, 23, assign20345, assign20346, assign20347, send162249, send162260, assign20348, send162265, assign20349, send162270, assign20350, send162275, send162279, assign20351, assign20352, send162284, send162288, send162291, assign20353, assign20354, send162296, send162307, send162311, Self);((AST_Method)method41269)->info = (AST_Info)info5526;symbol44068 = (Object)new_Type_Symbol_cached(L"testAnnotation");methodclosure41172 = (Object)new_Runtime_MethodClosure(method41269);store_method((Type_Class)class6736, (Type_Symbol)symbol44068, (Runtime_MethodClosure)methodclosure41172);// SCParserTest>>testArray//testArray// 	| parser string result |// 	parser := scparser array.// 	string := PEGStringScanner on: '()'.// 	result := parser match: string.// 	result class should = ASTArray.// 	result literals asArray should = Array new.// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.// 	result := parser match: string.// 	result class should = ASTArray.// 	result literals size should = 5.// 	result literals first class should = ASTNumber.// 	result literals first number should = '1'.// 	(result literals at: 2) class should = ASTSymbol.// 	(result literals at: 2) symbol should = 'a'.// 	(result literals at: 3) class should = ASTSymbol.// 	(result literals at: 3) symbol should = 'a'.// 	(result literals at: 4) class should = ASTString.// 	(result literals at: 4) string should = 'b'.// 	(result literals at: 5) class should = ASTArraylocalvariable27246 = (Object)new_AST_Variable_named(L"parser");localvariable27247 = (Object)new_AST_Variable_named(L"string");localvariable27248 = (Object)new_AST_Variable_named(L"result");array24287 = (Object)new_Type_Array_with(3, (Object)localvariable27246, (Object)localvariable27247, (Object)localvariable27248);// arraysend162312 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44445, 0);string27344 = (Object)new_Type_String(L"testArray");string27345 = (Object)new_Type_String(L"testArray\n\t| parser string result |\n\tparser := scparser array.\n\tstring := PEGStringScanner on: \'()\'.\n\tresult := parser match: string.\n\tresult class should = ASTArray.\n\tresult literals asArray should = Array new.\n\tstring := PEGStringScanner on: \'(1 a #a \'\'b\'\' (4)))\'.\n\tresult := parser match: string.\n\tresult class should = ASTArray.\n\tresult literals size should = 5.\n\tresult literals first class should = ASTNumber.\n\tresult literals first number should = \'1\'.\n\t(result literals at: 2) class should = ASTSymbol.\n\t(result literals at: 2) symbol should = \'a\'.\n\t(result literals at: 3) class should = ASTSymbol.\n\t(result literals at: 3) symbol should = \'a\'.\n\t(result literals at: 4) class should = ASTString.\n\t(result literals at: 4) string should = \'b\'.\n\t(result literals at: 5) class should = ASTArray");smallint27116 = (Object)new_Type_SmallInt(-1);smallint27117 = (Object)new_Type_SmallInt(-1);info5527 = (Object)new_AST_Info((Type_String)string27345,(Type_String)string27344, (Type_SmallInt)smallint27116, (Type_SmallInt)smallint27117);((AST_Send)send162312)->info = (AST_Info)info5527;assign20355 = (Object)new_AST_Assign((Object)localvariable27246, (Object)send162312);string27346 = (Object)new_Type_String(L"()");constant34980 = (Object)new_AST_Constant((Object)string27346);// on:send162313 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34980);((AST_Send)send162313)->info = (AST_Info)info5527;assign20356 = (Object)new_AST_Assign((Object)localvariable27247, (Object)send162313);// match:send162314 = (Object)new_AST_Send((Object)localvariable27246, (Object)symbol44329, 1, (Object)localvariable27247);((AST_Send)send162314)->info = (AST_Info)info5527;assign20357 = (Object)new_AST_Assign((Object)localvariable27248, (Object)send162314);// classsend162315 = (Object)new_AST_Send((Object)localvariable27248, (Object)SMB_class, 0);((AST_Send)send162315)->info = (AST_Info)info5527;// shouldsend162316 = (Object)new_AST_Send((Object)send162315, (Object)symbol44402, 0);((AST_Send)send162316)->info = (AST_Info)info5527;// =send162317 = (Object)new_AST_Send((Object)send162316, (Object)SMB__equal, 1, (Object)classreference13397);((AST_Send)send162317)->info = (AST_Info)info5527;// literalssend162318 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162318)->info = (AST_Info)info5527;// asArraysend162319 = (Object)new_AST_Send((Object)send162318, (Object)SMB_asArray, 0);((AST_Send)send162319)->info = (AST_Info)info5527;// shouldsend162320 = (Object)new_AST_Send((Object)send162319, (Object)symbol44402, 0);((AST_Send)send162320)->info = (AST_Info)info5527;// newsend162321 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44095, 0);((AST_Send)send162321)->info = (AST_Info)info5527;// =send162322 = (Object)new_AST_Send((Object)send162320, (Object)SMB__equal, 1, (Object)send162321);((AST_Send)send162322)->info = (AST_Info)info5527;string27347 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");constant34981 = (Object)new_AST_Constant((Object)string27347);// on:send162323 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34981);((AST_Send)send162323)->info = (AST_Info)info5527;assign20358 = (Object)new_AST_Assign((Object)localvariable27247, (Object)send162323);// match:send162324 = (Object)new_AST_Send((Object)localvariable27246, (Object)symbol44329, 1, (Object)localvariable27247);((AST_Send)send162324)->info = (AST_Info)info5527;assign20359 = (Object)new_AST_Assign((Object)localvariable27248, (Object)send162324);// classsend162325 = (Object)new_AST_Send((Object)localvariable27248, (Object)SMB_class, 0);((AST_Send)send162325)->info = (AST_Info)info5527;// shouldsend162326 = (Object)new_AST_Send((Object)send162325, (Object)symbol44402, 0);((AST_Send)send162326)->info = (AST_Info)info5527;// =send162327 = (Object)new_AST_Send((Object)send162326, (Object)SMB__equal, 1, (Object)classreference13397);((AST_Send)send162327)->info = (AST_Info)info5527;// literalssend162328 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162328)->info = (AST_Info)info5527;// sizesend162329 = (Object)new_AST_Send((Object)send162328, (Object)SMB_size, 0);((AST_Send)send162329)->info = (AST_Info)info5527;// shouldsend162330 = (Object)new_AST_Send((Object)send162329, (Object)symbol44402, 0);((AST_Send)send162330)->info = (AST_Info)info5527;smallint27118 = (Object)new_Type_SmallInt(5);constant34982 = (Object)new_AST_Constant((Object)smallint27118);// =send162331 = (Object)new_AST_Send((Object)send162330, (Object)SMB__equal, 1, (Object)constant34982);((AST_Send)send162331)->info = (AST_Info)info5527;// literalssend162332 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162332)->info = (AST_Info)info5527;// firstsend162333 = (Object)new_AST_Send((Object)send162332, (Object)symbol44180, 0);((AST_Send)send162333)->info = (AST_Info)info5527;// classsend162334 = (Object)new_AST_Send((Object)send162333, (Object)SMB_class, 0);((AST_Send)send162334)->info = (AST_Info)info5527;// shouldsend162335 = (Object)new_AST_Send((Object)send162334, (Object)symbol44402, 0);((AST_Send)send162335)->info = (AST_Info)info5527;// =send162336 = (Object)new_AST_Send((Object)send162335, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162336)->info = (AST_Info)info5527;// literalssend162337 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162337)->info = (AST_Info)info5527;// firstsend162338 = (Object)new_AST_Send((Object)send162337, (Object)symbol44180, 0);((AST_Send)send162338)->info = (AST_Info)info5527;// numbersend162339 = (Object)new_AST_Send((Object)send162338, (Object)symbol44192, 0);((AST_Send)send162339)->info = (AST_Info)info5527;// shouldsend162340 = (Object)new_AST_Send((Object)send162339, (Object)symbol44402, 0);((AST_Send)send162340)->info = (AST_Info)info5527;string27348 = (Object)new_Type_String(L"1");constant34983 = (Object)new_AST_Constant((Object)string27348);// =send162341 = (Object)new_AST_Send((Object)send162340, (Object)SMB__equal, 1, (Object)constant34983);((AST_Send)send162341)->info = (AST_Info)info5527;// literalssend162342 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162342)->info = (AST_Info)info5527;smallint27119 = (Object)new_Type_SmallInt(2);constant34984 = (Object)new_AST_Constant((Object)smallint27119);// at:send162343 = (Object)new_AST_Send((Object)send162342, (Object)SMB_at_, 1, (Object)constant34984);((AST_Send)send162343)->info = (AST_Info)info5527;// classsend162344 = (Object)new_AST_Send((Object)send162343, (Object)SMB_class, 0);((AST_Send)send162344)->info = (AST_Info)info5527;// shouldsend162345 = (Object)new_AST_Send((Object)send162344, (Object)symbol44402, 0);((AST_Send)send162345)->info = (AST_Info)info5527;// =send162346 = (Object)new_AST_Send((Object)send162345, (Object)SMB__equal, 1, (Object)classreference13421);((AST_Send)send162346)->info = (AST_Info)info5527;// literalssend162347 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162347)->info = (AST_Info)info5527;smallint27120 = (Object)new_Type_SmallInt(2);constant34985 = (Object)new_AST_Constant((Object)smallint27120);// at:send162348 = (Object)new_AST_Send((Object)send162347, (Object)SMB_at_, 1, (Object)constant34985);((AST_Send)send162348)->info = (AST_Info)info5527;// symbolsend162349 = (Object)new_AST_Send((Object)send162348, (Object)symbol44193, 0);((AST_Send)send162349)->info = (AST_Info)info5527;// shouldsend162350 = (Object)new_AST_Send((Object)send162349, (Object)symbol44402, 0);((AST_Send)send162350)->info = (AST_Info)info5527;string27349 = (Object)new_Type_String(L"a");constant34986 = (Object)new_AST_Constant((Object)string27349);// =send162351 = (Object)new_AST_Send((Object)send162350, (Object)SMB__equal, 1, (Object)constant34986);((AST_Send)send162351)->info = (AST_Info)info5527;// literalssend162352 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162352)->info = (AST_Info)info5527;smallint27121 = (Object)new_Type_SmallInt(3);constant34987 = (Object)new_AST_Constant((Object)smallint27121);// at:send162353 = (Object)new_AST_Send((Object)send162352, (Object)SMB_at_, 1, (Object)constant34987);((AST_Send)send162353)->info = (AST_Info)info5527;// classsend162354 = (Object)new_AST_Send((Object)send162353, (Object)SMB_class, 0);((AST_Send)send162354)->info = (AST_Info)info5527;// shouldsend162355 = (Object)new_AST_Send((Object)send162354, (Object)symbol44402, 0);((AST_Send)send162355)->info = (AST_Info)info5527;// =send162356 = (Object)new_AST_Send((Object)send162355, (Object)SMB__equal, 1, (Object)classreference13421);((AST_Send)send162356)->info = (AST_Info)info5527;// literalssend162357 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162357)->info = (AST_Info)info5527;smallint27122 = (Object)new_Type_SmallInt(3);constant34988 = (Object)new_AST_Constant((Object)smallint27122);// at:send162358 = (Object)new_AST_Send((Object)send162357, (Object)SMB_at_, 1, (Object)constant34988);((AST_Send)send162358)->info = (AST_Info)info5527;// symbolsend162359 = (Object)new_AST_Send((Object)send162358, (Object)symbol44193, 0);((AST_Send)send162359)->info = (AST_Info)info5527;// shouldsend162360 = (Object)new_AST_Send((Object)send162359, (Object)symbol44402, 0);((AST_Send)send162360)->info = (AST_Info)info5527;string27350 = (Object)new_Type_String(L"a");constant34989 = (Object)new_AST_Constant((Object)string27350);// =send162361 = (Object)new_AST_Send((Object)send162360, (Object)SMB__equal, 1, (Object)constant34989);((AST_Send)send162361)->info = (AST_Info)info5527;// literalssend162362 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162362)->info = (AST_Info)info5527;smallint27123 = (Object)new_Type_SmallInt(4);constant34990 = (Object)new_AST_Constant((Object)smallint27123);// at:send162363 = (Object)new_AST_Send((Object)send162362, (Object)SMB_at_, 1, (Object)constant34990);((AST_Send)send162363)->info = (AST_Info)info5527;// classsend162364 = (Object)new_AST_Send((Object)send162363, (Object)SMB_class, 0);((AST_Send)send162364)->info = (AST_Info)info5527;// shouldsend162365 = (Object)new_AST_Send((Object)send162364, (Object)symbol44402, 0);((AST_Send)send162365)->info = (AST_Info)info5527;// =send162366 = (Object)new_AST_Send((Object)send162365, (Object)SMB__equal, 1, (Object)classreference13426);((AST_Send)send162366)->info = (AST_Info)info5527;// literalssend162367 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162367)->info = (AST_Info)info5527;smallint27124 = (Object)new_Type_SmallInt(4);constant34991 = (Object)new_AST_Constant((Object)smallint27124);// at:send162368 = (Object)new_AST_Send((Object)send162367, (Object)SMB_at_, 1, (Object)constant34991);((AST_Send)send162368)->info = (AST_Info)info5527;// stringsend162369 = (Object)new_AST_Send((Object)send162368, (Object)symbol44197, 0);((AST_Send)send162369)->info = (AST_Info)info5527;// shouldsend162370 = (Object)new_AST_Send((Object)send162369, (Object)symbol44402, 0);((AST_Send)send162370)->info = (AST_Info)info5527;string27351 = (Object)new_Type_String(L"b");constant34992 = (Object)new_AST_Constant((Object)string27351);// =send162371 = (Object)new_AST_Send((Object)send162370, (Object)SMB__equal, 1, (Object)constant34992);((AST_Send)send162371)->info = (AST_Info)info5527;// literalssend162372 = (Object)new_AST_Send((Object)localvariable27248, (Object)symbol44172, 0);((AST_Send)send162372)->info = (AST_Info)info5527;smallint27125 = (Object)new_Type_SmallInt(5);constant34993 = (Object)new_AST_Constant((Object)smallint27125);// at:send162373 = (Object)new_AST_Send((Object)send162372, (Object)SMB_at_, 1, (Object)constant34993);((AST_Send)send162373)->info = (AST_Info)info5527;// classsend162374 = (Object)new_AST_Send((Object)send162373, (Object)SMB_class, 0);((AST_Send)send162374)->info = (AST_Info)info5527;// shouldsend162375 = (Object)new_AST_Send((Object)send162374, (Object)symbol44402, 0);((AST_Send)send162375)->info = (AST_Info)info5527;// =send162376 = (Object)new_AST_Send((Object)send162375, (Object)SMB__equal, 1, (Object)classreference13397);((AST_Send)send162376)->info = (AST_Info)info5527;method41270 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24287, 19, assign20355, assign20356, assign20357, send162317, send162322, assign20358, assign20359, send162327, send162331, send162336, send162341, send162346, send162351, send162356, send162361, send162366, send162371, send162376, Self);((AST_Method)method41270)->info = (AST_Info)info5527;symbol44021 = (Object)new_Type_Symbol_cached(L"testArray");methodclosure41173 = (Object)new_Runtime_MethodClosure(method41270);store_method((Type_Class)class6736, (Type_Symbol)symbol44021, (Runtime_MethodClosure)methodclosure41173);// SCParserTest>>testStringConstant//testStringConstant// 	| parser string result |// 	parser := scparser stringConstant.// 	string := PEGStringScanner on: '''abc'''.// 	result := parser match: string.// 	result class should = ASTString.// 	result string should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc'''''.// 	result := parser match: string.// 	result class should = ASTString.// 	result string should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc''''d'' '''.// 	result := parser match: string.// 	result class should = ASTString.// 	result string should = 'abc''d'.// 	string position should = 8localvariable27249 = (Object)new_AST_Variable_named(L"parser");localvariable27250 = (Object)new_AST_Variable_named(L"string");localvariable27251 = (Object)new_AST_Variable_named(L"result");array24288 = (Object)new_Type_Array_with(3, (Object)localvariable27249, (Object)localvariable27250, (Object)localvariable27251);// stringConstantsend162377 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44418, 0);string27352 = (Object)new_Type_String(L"testStringConstant");string27353 = (Object)new_Type_String(L"testStringConstant\n\t| parser string result |\n\tparser := scparser stringConstant.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'.\n\tresult := parser match: string.\n\tresult class should = ASTString.\n\tresult string should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'\'.\n\tresult := parser match: string.\n\tresult class should = ASTString.\n\tresult string should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'d\'\' \'\'\'.\n\tresult := parser match: string.\n\tresult class should = ASTString.\n\tresult string should = \'abc\'\'d\'.\n\tstring position should = 8");smallint27126 = (Object)new_Type_SmallInt(-1);smallint27127 = (Object)new_Type_SmallInt(-1);info5528 = (Object)new_AST_Info((Type_String)string27353,(Type_String)string27352, (Type_SmallInt)smallint27126, (Type_SmallInt)smallint27127);((AST_Send)send162377)->info = (AST_Info)info5528;assign20360 = (Object)new_AST_Assign((Object)localvariable27249, (Object)send162377);string27354 = (Object)new_Type_String(L"\'abc\'");constant34994 = (Object)new_AST_Constant((Object)string27354);// on:send162378 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34994);((AST_Send)send162378)->info = (AST_Info)info5528;assign20361 = (Object)new_AST_Assign((Object)localvariable27250, (Object)send162378);// match:send162379 = (Object)new_AST_Send((Object)localvariable27249, (Object)symbol44329, 1, (Object)localvariable27250);((AST_Send)send162379)->info = (AST_Info)info5528;assign20362 = (Object)new_AST_Assign((Object)localvariable27251, (Object)send162379);// classsend162380 = (Object)new_AST_Send((Object)localvariable27251, (Object)SMB_class, 0);((AST_Send)send162380)->info = (AST_Info)info5528;// shouldsend162381 = (Object)new_AST_Send((Object)send162380, (Object)symbol44402, 0);((AST_Send)send162381)->info = (AST_Info)info5528;// =send162382 = (Object)new_AST_Send((Object)send162381, (Object)SMB__equal, 1, (Object)classreference13426);((AST_Send)send162382)->info = (AST_Info)info5528;// stringsend162383 = (Object)new_AST_Send((Object)localvariable27251, (Object)symbol44197, 0);((AST_Send)send162383)->info = (AST_Info)info5528;// shouldsend162384 = (Object)new_AST_Send((Object)send162383, (Object)symbol44402, 0);((AST_Send)send162384)->info = (AST_Info)info5528;string27355 = (Object)new_Type_String(L"abc");constant34995 = (Object)new_AST_Constant((Object)string27355);// =send162385 = (Object)new_AST_Send((Object)send162384, (Object)SMB__equal, 1, (Object)constant34995);((AST_Send)send162385)->info = (AST_Info)info5528;// positionsend162386 = (Object)new_AST_Send((Object)localvariable27250, (Object)symbol44475, 0);((AST_Send)send162386)->info = (AST_Info)info5528;// shouldsend162387 = (Object)new_AST_Send((Object)send162386, (Object)symbol44402, 0);((AST_Send)send162387)->info = (AST_Info)info5528;smallint27128 = (Object)new_Type_SmallInt(5);constant34996 = (Object)new_AST_Constant((Object)smallint27128);// =send162388 = (Object)new_AST_Send((Object)send162387, (Object)SMB__equal, 1, (Object)constant34996);((AST_Send)send162388)->info = (AST_Info)info5528;string27356 = (Object)new_Type_String(L"\'abc\'\'");constant34997 = (Object)new_AST_Constant((Object)string27356);// on:send162389 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant34997);((AST_Send)send162389)->info = (AST_Info)info5528;assign20363 = (Object)new_AST_Assign((Object)localvariable27250, (Object)send162389);// match:send162390 = (Object)new_AST_Send((Object)localvariable27249, (Object)symbol44329, 1, (Object)localvariable27250);((AST_Send)send162390)->info = (AST_Info)info5528;assign20364 = (Object)new_AST_Assign((Object)localvariable27251, (Object)send162390);// classsend162391 = (Object)new_AST_Send((Object)localvariable27251, (Object)SMB_class, 0);((AST_Send)send162391)->info = (AST_Info)info5528;// shouldsend162392 = (Object)new_AST_Send((Object)send162391, (Object)symbol44402, 0);((AST_Send)send162392)->info = (AST_Info)info5528;// =send162393 = (Object)new_AST_Send((Object)send162392, (Object)SMB__equal, 1, (Object)classreference13426);((AST_Send)send162393)->info = (AST_Info)info5528;// stringsend162394 = (Object)new_AST_Send((Object)localvariable27251, (Object)symbol44197, 0);((AST_Send)send162394)->info = (AST_Info)info5528;// shouldsend162395 = (Object)new_AST_Send((Object)send162394, (Object)symbol44402, 0);((AST_Send)send162395)->info = (AST_Info)info5528;string27357 = (Object)new_Type_String(L"abc");constant34998 = (Object)new_AST_Constant((Object)string27357);// =send162396 = (Object)new_AST_Send((Object)send162395, (Object)SMB__equal, 1, (Object)constant34998);((AST_Send)send162396)->info = (AST_Info)info5528;// positionsend162397 = (Object)new_AST_Send((Object)localvariable27250, (Object)symbol44475, 0);((AST_Send)send162397)->info = (AST_Info)info5528;// shouldsend162398 = (Object)new_AST_Send((Object)send162397, (Object)symbol44402, 0);((AST_Send)send162398)->info = (AST_Info)info5528;smallint27129 = (Object)new_Type_SmallInt(5);constant34999 = (Object)new_AST_Constant((Object)smallint27129);// =send162399 = (Object)new_AST_Send((Object)send162398, (Object)SMB__equal, 1, (Object)constant34999);((AST_Send)send162399)->info = (AST_Info)info5528;string27358 = (Object)new_Type_String(L"\'abc\'\'d\' \'");constant35000 = (Object)new_AST_Constant((Object)string27358);// on:send162400 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35000);((AST_Send)send162400)->info = (AST_Info)info5528;assign20365 = (Object)new_AST_Assign((Object)localvariable27250, (Object)send162400);// match:send162401 = (Object)new_AST_Send((Object)localvariable27249, (Object)symbol44329, 1, (Object)localvariable27250);((AST_Send)send162401)->info = (AST_Info)info5528;assign20366 = (Object)new_AST_Assign((Object)localvariable27251, (Object)send162401);// classsend162402 = (Object)new_AST_Send((Object)localvariable27251, (Object)SMB_class, 0);((AST_Send)send162402)->info = (AST_Info)info5528;// shouldsend162403 = (Object)new_AST_Send((Object)send162402, (Object)symbol44402, 0);((AST_Send)send162403)->info = (AST_Info)info5528;// =send162404 = (Object)new_AST_Send((Object)send162403, (Object)SMB__equal, 1, (Object)classreference13426);((AST_Send)send162404)->info = (AST_Info)info5528;// stringsend162405 = (Object)new_AST_Send((Object)localvariable27251, (Object)symbol44197, 0);((AST_Send)send162405)->info = (AST_Info)info5528;// shouldsend162406 = (Object)new_AST_Send((Object)send162405, (Object)symbol44402, 0);((AST_Send)send162406)->info = (AST_Info)info5528;string27359 = (Object)new_Type_String(L"abc\'d");constant35001 = (Object)new_AST_Constant((Object)string27359);// =send162407 = (Object)new_AST_Send((Object)send162406, (Object)SMB__equal, 1, (Object)constant35001);((AST_Send)send162407)->info = (AST_Info)info5528;// positionsend162408 = (Object)new_AST_Send((Object)localvariable27250, (Object)symbol44475, 0);((AST_Send)send162408)->info = (AST_Info)info5528;// shouldsend162409 = (Object)new_AST_Send((Object)send162408, (Object)symbol44402, 0);((AST_Send)send162409)->info = (AST_Info)info5528;smallint27130 = (Object)new_Type_SmallInt(8);constant35002 = (Object)new_AST_Constant((Object)smallint27130);// =send162410 = (Object)new_AST_Send((Object)send162409, (Object)SMB__equal, 1, (Object)constant35002);((AST_Send)send162410)->info = (AST_Info)info5528;method41271 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24288, 17, assign20360, assign20361, assign20362, send162382, send162385, send162388, assign20363, assign20364, send162393, send162396, send162399, assign20365, assign20366, send162404, send162407, send162410, Self);((AST_Method)method41271)->info = (AST_Info)info5528;symbol44088 = (Object)new_Type_Symbol_cached(L"testStringConstant");methodclosure41174 = (Object)new_Runtime_MethodClosure(method41271);store_method((Type_Class)class6736, (Type_Symbol)symbol44088, (Runtime_MethodClosure)methodclosure41174);// SCParserTest>>testKeywordMessageExpression//testKeywordMessageExpression// 	| parser string result arg |// 	parser := scparser keywordMessageExpression.// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTMessageExpression.// 	result keywords asArray should = ((Array new: 3)// 	at: 1 put: 'abc';// 	at: 2 put: 'def';// 	at: 3 put: 'ghi';// 	yourself).// 	arg := result arguments first.// 	arg class should = ASTNumber.// 	arg := result arguments at: 2.// 	arg class should = ASTBinaryExpression.// 	arg := result arguments at: 3.// 	arg class should = ASTUnaryExpression.// 	string position should = 25localvariable27252 = (Object)new_AST_Variable_named(L"parser");localvariable27253 = (Object)new_AST_Variable_named(L"string");localvariable27254 = (Object)new_AST_Variable_named(L"result");localvariable27255 = (Object)new_AST_Variable_named(L"arg");array24289 = (Object)new_Type_Array_with(4, (Object)localvariable27252, (Object)localvariable27253, (Object)localvariable27254, (Object)localvariable27255);// keywordMessageExpressionsend162411 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44451, 0);string27360 = (Object)new_Type_String(L"testKeywordMessageExpression");string27361 = (Object)new_Type_String(L"testKeywordMessageExpression\n\t| parser string result arg |\n\tparser := scparser keywordMessageExpression.\n\tstring := PEGStringScanner on: \'abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTMessageExpression.\n\tresult keywords asArray should = ((Array new: 3)\n\tat: 1 put: \'abc\';\n\tat: 2 put: \'def\';\n\tat: 3 put: \'ghi\';\n\tyourself).\n\targ := result arguments first.\n\targ class should = ASTNumber.\n\targ := result arguments at: 2.\n\targ class should = ASTBinaryExpression.\n\targ := result arguments at: 3.\n\targ class should = ASTUnaryExpression.\n\tstring position should = 25");smallint27131 = (Object)new_Type_SmallInt(-1);smallint27132 = (Object)new_Type_SmallInt(-1);info5529 = (Object)new_AST_Info((Type_String)string27361,(Type_String)string27360, (Type_SmallInt)smallint27131, (Type_SmallInt)smallint27132);((AST_Send)send162411)->info = (AST_Info)info5529;assign20367 = (Object)new_AST_Assign((Object)localvariable27252, (Object)send162411);string27362 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");constant35003 = (Object)new_AST_Constant((Object)string27362);// on:send162412 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35003);((AST_Send)send162412)->info = (AST_Info)info5529;assign20368 = (Object)new_AST_Assign((Object)localvariable27253, (Object)send162412);// match:send162413 = (Object)new_AST_Send((Object)localvariable27252, (Object)symbol44329, 1, (Object)localvariable27253);((AST_Send)send162413)->info = (AST_Info)info5529;assign20369 = (Object)new_AST_Assign((Object)localvariable27254, (Object)send162413);// classsend162414 = (Object)new_AST_Send((Object)localvariable27254, (Object)SMB_class, 0);((AST_Send)send162414)->info = (AST_Info)info5529;// shouldsend162415 = (Object)new_AST_Send((Object)send162414, (Object)symbol44402, 0);((AST_Send)send162415)->info = (AST_Info)info5529;// =send162416 = (Object)new_AST_Send((Object)send162415, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162416)->info = (AST_Info)info5529;// keywordssend162417 = (Object)new_AST_Send((Object)localvariable27254, (Object)symbol44214, 0);((AST_Send)send162417)->info = (AST_Info)info5529;// asArraysend162418 = (Object)new_AST_Send((Object)send162417, (Object)SMB_asArray, 0);((AST_Send)send162418)->info = (AST_Info)info5529;// shouldsend162419 = (Object)new_AST_Send((Object)send162418, (Object)symbol44402, 0);((AST_Send)send162419)->info = (AST_Info)info5529;localvariable27256 = (Object)new_AST_Variable_named(L"receiver");array24290 = (Object)new_Type_Array_with(1, (Object)localvariable27256);smallint27133 = (Object)new_Type_SmallInt(1);constant35004 = (Object)new_AST_Constant((Object)smallint27133);string27363 = (Object)new_Type_String(L"abc");constant35005 = (Object)new_AST_Constant((Object)string27363);// at:put:send162420 = (Object)new_AST_Send((Object)localvariable27256, (Object)SMB_at_put_, 2, (Object)constant35004, (Object)constant35005);((AST_Send)send162420)->info = (AST_Info)info5529;smallint27134 = (Object)new_Type_SmallInt(2);constant35006 = (Object)new_AST_Constant((Object)smallint27134);string27364 = (Object)new_Type_String(L"def");constant35007 = (Object)new_AST_Constant((Object)string27364);// at:put:send162421 = (Object)new_AST_Send((Object)localvariable27256, (Object)SMB_at_put_, 2, (Object)constant35006, (Object)constant35007);((AST_Send)send162421)->info = (AST_Info)info5529;smallint27135 = (Object)new_Type_SmallInt(3);constant35008 = (Object)new_AST_Constant((Object)smallint27135);string27365 = (Object)new_Type_String(L"ghi");constant35009 = (Object)new_AST_Constant((Object)string27365);// at:put:send162422 = (Object)new_AST_Send((Object)localvariable27256, (Object)SMB_at_put_, 2, (Object)constant35008, (Object)constant35009);((AST_Send)send162422)->info = (AST_Info)info5529;// yourselfsend162423 = (Object)new_AST_Send((Object)localvariable27256, (Object)symbol44008, 0);((AST_Send)send162423)->info = (AST_Info)info5529;block11863 = (Object)new_AST_Block_with((Type_Array)array24290, (Type_Array)empty_Type_Array, 1, 4, send162420, send162421, send162422, send162423);smallint27136 = (Object)new_Type_SmallInt(3);constant35010 = (Object)new_AST_Constant((Object)smallint27136);// new:send162424 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant35010);((AST_Send)send162424)->info = (AST_Info)info5529;// value:send162425 = (Object)new_AST_Send((Object)block11863, (Object)SMB_value_, 1, (Object)send162424);((AST_Send)send162425)->info = (AST_Info)info5529;// =send162426 = (Object)new_AST_Send((Object)send162419, (Object)SMB__equal, 1, (Object)send162425);((AST_Send)send162426)->info = (AST_Info)info5529;// argumentssend162427 = (Object)new_AST_Send((Object)localvariable27254, (Object)symbol44116, 0);((AST_Send)send162427)->info = (AST_Info)info5529;// firstsend162428 = (Object)new_AST_Send((Object)send162427, (Object)symbol44180, 0);((AST_Send)send162428)->info = (AST_Info)info5529;assign20370 = (Object)new_AST_Assign((Object)localvariable27255, (Object)send162428);// classsend162429 = (Object)new_AST_Send((Object)localvariable27255, (Object)SMB_class, 0);((AST_Send)send162429)->info = (AST_Info)info5529;// shouldsend162430 = (Object)new_AST_Send((Object)send162429, (Object)symbol44402, 0);((AST_Send)send162430)->info = (AST_Info)info5529;// =send162431 = (Object)new_AST_Send((Object)send162430, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162431)->info = (AST_Info)info5529;// argumentssend162432 = (Object)new_AST_Send((Object)localvariable27254, (Object)symbol44116, 0);((AST_Send)send162432)->info = (AST_Info)info5529;smallint27137 = (Object)new_Type_SmallInt(2);constant35011 = (Object)new_AST_Constant((Object)smallint27137);// at:send162433 = (Object)new_AST_Send((Object)send162432, (Object)SMB_at_, 1, (Object)constant35011);((AST_Send)send162433)->info = (AST_Info)info5529;assign20371 = (Object)new_AST_Assign((Object)localvariable27255, (Object)send162433);// classsend162434 = (Object)new_AST_Send((Object)localvariable27255, (Object)SMB_class, 0);((AST_Send)send162434)->info = (AST_Info)info5529;// shouldsend162435 = (Object)new_AST_Send((Object)send162434, (Object)symbol44402, 0);((AST_Send)send162435)->info = (AST_Info)info5529;// =send162436 = (Object)new_AST_Send((Object)send162435, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162436)->info = (AST_Info)info5529;// argumentssend162437 = (Object)new_AST_Send((Object)localvariable27254, (Object)symbol44116, 0);((AST_Send)send162437)->info = (AST_Info)info5529;smallint27138 = (Object)new_Type_SmallInt(3);constant35012 = (Object)new_AST_Constant((Object)smallint27138);// at:send162438 = (Object)new_AST_Send((Object)send162437, (Object)SMB_at_, 1, (Object)constant35012);((AST_Send)send162438)->info = (AST_Info)info5529;assign20372 = (Object)new_AST_Assign((Object)localvariable27255, (Object)send162438);// classsend162439 = (Object)new_AST_Send((Object)localvariable27255, (Object)SMB_class, 0);((AST_Send)send162439)->info = (AST_Info)info5529;// shouldsend162440 = (Object)new_AST_Send((Object)send162439, (Object)symbol44402, 0);((AST_Send)send162440)->info = (AST_Info)info5529;// =send162441 = (Object)new_AST_Send((Object)send162440, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162441)->info = (AST_Info)info5529;// positionsend162442 = (Object)new_AST_Send((Object)localvariable27253, (Object)symbol44475, 0);((AST_Send)send162442)->info = (AST_Info)info5529;// shouldsend162443 = (Object)new_AST_Send((Object)send162442, (Object)symbol44402, 0);((AST_Send)send162443)->info = (AST_Info)info5529;smallint27139 = (Object)new_Type_SmallInt(25);constant35013 = (Object)new_AST_Constant((Object)smallint27139);// =send162444 = (Object)new_AST_Send((Object)send162443, (Object)SMB__equal, 1, (Object)constant35013);((AST_Send)send162444)->info = (AST_Info)info5529;method41272 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24289, 13, assign20367, assign20368, assign20369, send162416, send162426, assign20370, send162431, assign20371, send162436, assign20372, send162441, send162444, Self);((AST_Method)method41272)->info = (AST_Info)info5529;symbol44033 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");methodclosure41175 = (Object)new_Runtime_MethodClosure(method41272);store_method((Type_Class)class6736, (Type_Symbol)symbol44033, (Runtime_MethodClosure)methodclosure41175);// SCParserTest>>testPrimary//testPrimary// 	| parser string result |// 	parser := scparser primary.	" primary variable"// 	string := PEGStringScanner on: 'abc '.// 	result := parser match: string.// 	result class should = ASTVariable.// 	result name should = 'abc'.// 	string position should = 3.	" literal "// 	string := PEGStringScanner on: '3'.// 	result := parser match: string.// 	result class should = ASTNumber.// 	result number should = '3'.// 	result base should = '10'.// 	string position should = 1localvariable27257 = (Object)new_AST_Variable_named(L"parser");localvariable27258 = (Object)new_AST_Variable_named(L"string");localvariable27259 = (Object)new_AST_Variable_named(L"result");array24291 = (Object)new_Type_Array_with(3, (Object)localvariable27257, (Object)localvariable27258, (Object)localvariable27259);// primarysend162445 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44439, 0);string27366 = (Object)new_Type_String(L"testPrimary");string27367 = (Object)new_Type_String(L"testPrimary\n\t| parser string result |\n\tparser := scparser primary.\t\" primary variable\"\n\tstring := PEGStringScanner on: \'abc \'.\n\tresult := parser match: string.\n\tresult class should = ASTVariable.\n\tresult name should = \'abc\'.\n\tstring position should = 3.\t\" literal \"\n\tstring := PEGStringScanner on: \'3\'.\n\tresult := parser match: string.\n\tresult class should = ASTNumber.\n\tresult number should = \'3\'.\n\tresult base should = \'10\'.\n\tstring position should = 1");smallint27140 = (Object)new_Type_SmallInt(-1);smallint27141 = (Object)new_Type_SmallInt(-1);info5530 = (Object)new_AST_Info((Type_String)string27367,(Type_String)string27366, (Type_SmallInt)smallint27140, (Type_SmallInt)smallint27141);((AST_Send)send162445)->info = (AST_Info)info5530;assign20373 = (Object)new_AST_Assign((Object)localvariable27257, (Object)send162445);string27368 = (Object)new_Type_String(L"abc ");constant35014 = (Object)new_AST_Constant((Object)string27368);// on:send162446 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35014);((AST_Send)send162446)->info = (AST_Info)info5530;assign20374 = (Object)new_AST_Assign((Object)localvariable27258, (Object)send162446);// match:send162447 = (Object)new_AST_Send((Object)localvariable27257, (Object)symbol44329, 1, (Object)localvariable27258);((AST_Send)send162447)->info = (AST_Info)info5530;assign20375 = (Object)new_AST_Assign((Object)localvariable27259, (Object)send162447);// classsend162448 = (Object)new_AST_Send((Object)localvariable27259, (Object)SMB_class, 0);((AST_Send)send162448)->info = (AST_Info)info5530;// shouldsend162449 = (Object)new_AST_Send((Object)send162448, (Object)symbol44402, 0);((AST_Send)send162449)->info = (AST_Info)info5530;// =send162450 = (Object)new_AST_Send((Object)send162449, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162450)->info = (AST_Info)info5530;// namesend162451 = (Object)new_AST_Send((Object)localvariable27259, (Object)SMB_name, 0);((AST_Send)send162451)->info = (AST_Info)info5530;// shouldsend162452 = (Object)new_AST_Send((Object)send162451, (Object)symbol44402, 0);((AST_Send)send162452)->info = (AST_Info)info5530;string27369 = (Object)new_Type_String(L"abc");constant35015 = (Object)new_AST_Constant((Object)string27369);// =send162453 = (Object)new_AST_Send((Object)send162452, (Object)SMB__equal, 1, (Object)constant35015);((AST_Send)send162453)->info = (AST_Info)info5530;// positionsend162454 = (Object)new_AST_Send((Object)localvariable27258, (Object)symbol44475, 0);((AST_Send)send162454)->info = (AST_Info)info5530;// shouldsend162455 = (Object)new_AST_Send((Object)send162454, (Object)symbol44402, 0);((AST_Send)send162455)->info = (AST_Info)info5530;smallint27142 = (Object)new_Type_SmallInt(3);constant35016 = (Object)new_AST_Constant((Object)smallint27142);// =send162456 = (Object)new_AST_Send((Object)send162455, (Object)SMB__equal, 1, (Object)constant35016);((AST_Send)send162456)->info = (AST_Info)info5530;string27370 = (Object)new_Type_String(L"3");constant35017 = (Object)new_AST_Constant((Object)string27370);// on:send162457 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35017);((AST_Send)send162457)->info = (AST_Info)info5530;assign20376 = (Object)new_AST_Assign((Object)localvariable27258, (Object)send162457);// match:send162458 = (Object)new_AST_Send((Object)localvariable27257, (Object)symbol44329, 1, (Object)localvariable27258);((AST_Send)send162458)->info = (AST_Info)info5530;assign20377 = (Object)new_AST_Assign((Object)localvariable27259, (Object)send162458);// classsend162459 = (Object)new_AST_Send((Object)localvariable27259, (Object)SMB_class, 0);((AST_Send)send162459)->info = (AST_Info)info5530;// shouldsend162460 = (Object)new_AST_Send((Object)send162459, (Object)symbol44402, 0);((AST_Send)send162460)->info = (AST_Info)info5530;// =send162461 = (Object)new_AST_Send((Object)send162460, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162461)->info = (AST_Info)info5530;// numbersend162462 = (Object)new_AST_Send((Object)localvariable27259, (Object)symbol44192, 0);((AST_Send)send162462)->info = (AST_Info)info5530;// shouldsend162463 = (Object)new_AST_Send((Object)send162462, (Object)symbol44402, 0);((AST_Send)send162463)->info = (AST_Info)info5530;string27371 = (Object)new_Type_String(L"3");constant35018 = (Object)new_AST_Constant((Object)string27371);// =send162464 = (Object)new_AST_Send((Object)send162463, (Object)SMB__equal, 1, (Object)constant35018);((AST_Send)send162464)->info = (AST_Info)info5530;// basesend162465 = (Object)new_AST_Send((Object)localvariable27259, (Object)symbol44189, 0);((AST_Send)send162465)->info = (AST_Info)info5530;// shouldsend162466 = (Object)new_AST_Send((Object)send162465, (Object)symbol44402, 0);((AST_Send)send162466)->info = (AST_Info)info5530;string27372 = (Object)new_Type_String(L"10");constant35019 = (Object)new_AST_Constant((Object)string27372);// =send162467 = (Object)new_AST_Send((Object)send162466, (Object)SMB__equal, 1, (Object)constant35019);((AST_Send)send162467)->info = (AST_Info)info5530;// positionsend162468 = (Object)new_AST_Send((Object)localvariable27258, (Object)symbol44475, 0);((AST_Send)send162468)->info = (AST_Info)info5530;// shouldsend162469 = (Object)new_AST_Send((Object)send162468, (Object)symbol44402, 0);((AST_Send)send162469)->info = (AST_Info)info5530;smallint27143 = (Object)new_Type_SmallInt(1);constant35020 = (Object)new_AST_Constant((Object)smallint27143);// =send162470 = (Object)new_AST_Send((Object)send162469, (Object)SMB__equal, 1, (Object)constant35020);((AST_Send)send162470)->info = (AST_Info)info5530;method41273 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24291, 13, assign20373, assign20374, assign20375, send162450, send162453, send162456, assign20376, assign20377, send162461, send162464, send162467, send162470, Self);((AST_Method)method41273)->info = (AST_Info)info5530;symbol44061 = (Object)new_Type_Symbol_cached(L"testPrimary");methodclosure41176 = (Object)new_Runtime_MethodClosure(method41273);store_method((Type_Class)class6736, (Type_Symbol)symbol44061, (Runtime_MethodClosure)methodclosure41176);// SCParserTest>>testKeyword//testKeyword// 	| parser string |// 	parser := scparser keyword.// 	string := PEGStringScanner on: 'abcd: '.// 	(parser match: string) should = 'abcd'.// 	string position should = 5.// 	string := PEGStringScanner on: 'abcd '.// 	(parser match: string) should be isNil.// 	string position should = 0localvariable27260 = (Object)new_AST_Variable_named(L"parser");localvariable27261 = (Object)new_AST_Variable_named(L"string");array24292 = (Object)new_Type_Array_with(2, (Object)localvariable27260, (Object)localvariable27261);// keywordsend162471 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44431, 0);string27373 = (Object)new_Type_String(L"testKeyword");string27374 = (Object)new_Type_String(L"testKeyword\n\t| parser string |\n\tparser := scparser keyword.\n\tstring := PEGStringScanner on: \'abcd: \'.\n\t(parser match: string) should = \'abcd\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'abcd \'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");smallint27144 = (Object)new_Type_SmallInt(-1);smallint27145 = (Object)new_Type_SmallInt(-1);info5531 = (Object)new_AST_Info((Type_String)string27374,(Type_String)string27373, (Type_SmallInt)smallint27144, (Type_SmallInt)smallint27145);((AST_Send)send162471)->info = (AST_Info)info5531;assign20378 = (Object)new_AST_Assign((Object)localvariable27260, (Object)send162471);string27375 = (Object)new_Type_String(L"abcd: ");constant35021 = (Object)new_AST_Constant((Object)string27375);// on:send162472 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35021);((AST_Send)send162472)->info = (AST_Info)info5531;assign20379 = (Object)new_AST_Assign((Object)localvariable27261, (Object)send162472);// match:send162473 = (Object)new_AST_Send((Object)localvariable27260, (Object)symbol44329, 1, (Object)localvariable27261);((AST_Send)send162473)->info = (AST_Info)info5531;// shouldsend162474 = (Object)new_AST_Send((Object)send162473, (Object)symbol44402, 0);((AST_Send)send162474)->info = (AST_Info)info5531;string27376 = (Object)new_Type_String(L"abcd");constant35022 = (Object)new_AST_Constant((Object)string27376);// =send162475 = (Object)new_AST_Send((Object)send162474, (Object)SMB__equal, 1, (Object)constant35022);((AST_Send)send162475)->info = (AST_Info)info5531;// positionsend162476 = (Object)new_AST_Send((Object)localvariable27261, (Object)symbol44475, 0);((AST_Send)send162476)->info = (AST_Info)info5531;// shouldsend162477 = (Object)new_AST_Send((Object)send162476, (Object)symbol44402, 0);((AST_Send)send162477)->info = (AST_Info)info5531;smallint27146 = (Object)new_Type_SmallInt(5);constant35023 = (Object)new_AST_Constant((Object)smallint27146);// =send162478 = (Object)new_AST_Send((Object)send162477, (Object)SMB__equal, 1, (Object)constant35023);((AST_Send)send162478)->info = (AST_Info)info5531;string27377 = (Object)new_Type_String(L"abcd ");constant35024 = (Object)new_AST_Constant((Object)string27377);// on:send162479 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35024);((AST_Send)send162479)->info = (AST_Info)info5531;assign20380 = (Object)new_AST_Assign((Object)localvariable27261, (Object)send162479);// match:send162480 = (Object)new_AST_Send((Object)localvariable27260, (Object)symbol44329, 1, (Object)localvariable27261);((AST_Send)send162480)->info = (AST_Info)info5531;// shouldsend162481 = (Object)new_AST_Send((Object)send162480, (Object)symbol44402, 0);((AST_Send)send162481)->info = (AST_Info)info5531;// besend162482 = (Object)new_AST_Send((Object)send162481, (Object)symbol44476, 0);((AST_Send)send162482)->info = (AST_Info)info5531;// isNilsend162483 = (Object)new_AST_Send((Object)send162482, (Object)SMB_isNil, 0);((AST_Send)send162483)->info = (AST_Info)info5531;// positionsend162484 = (Object)new_AST_Send((Object)localvariable27261, (Object)symbol44475, 0);((AST_Send)send162484)->info = (AST_Info)info5531;// shouldsend162485 = (Object)new_AST_Send((Object)send162484, (Object)symbol44402, 0);((AST_Send)send162485)->info = (AST_Info)info5531;smallint27147 = (Object)new_Type_SmallInt(0);constant35025 = (Object)new_AST_Constant((Object)smallint27147);// =send162486 = (Object)new_AST_Send((Object)send162485, (Object)SMB__equal, 1, (Object)constant35025);((AST_Send)send162486)->info = (AST_Info)info5531;method41274 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24292, 8, assign20378, assign20379, send162475, send162478, assign20380, send162483, send162486, Self);((AST_Method)method41274)->info = (AST_Info)info5531;symbol44053 = (Object)new_Type_Symbol_cached(L"testKeyword");methodclosure41177 = (Object)new_Runtime_MethodClosure(method41274);store_method((Type_Class)class6736, (Type_Symbol)symbol44053, (Runtime_MethodClosure)methodclosure41177);// SCParserTest>>testBinaryExpression2//testBinaryExpression2// 	" becomes ((abc | ghi) <= c) "// 	| string result parser |// 	parser := scparser binaryObjectDescription.// 	string := PEGStringScanner on: 'a <<<<<<<< ghi <= c <= d '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '<='.// 	result argument class should = ASTVariable.// 	result argument name should = 'd'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '<='.// 	result argument class should = ASTVariable.// 	result argument name should = 'c'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '<<<<<<<<'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'a'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 24localvariable27262 = (Object)new_AST_Variable_named(L"string");localvariable27263 = (Object)new_AST_Variable_named(L"result");localvariable27264 = (Object)new_AST_Variable_named(L"parser");array24293 = (Object)new_Type_Array_with(3, (Object)localvariable27262, (Object)localvariable27263, (Object)localvariable27264);// binaryObjectDescriptionsend162487 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44434, 0);string27378 = (Object)new_Type_String(L"testBinaryExpression2");string27379 = (Object)new_Type_String(L"testBinaryExpression2\n\t\" becomes ((abc | ghi) <= c) \"\n\t| string result parser |\n\tparser := scparser binaryObjectDescription.\n\tstring := PEGStringScanner on: \'a <<<<<<<< ghi <= c <= d \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'<=\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'d\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'<=\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'c\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'<<<<<<<<\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'a\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 24");smallint27148 = (Object)new_Type_SmallInt(-1);smallint27149 = (Object)new_Type_SmallInt(-1);info5532 = (Object)new_AST_Info((Type_String)string27379,(Type_String)string27378, (Type_SmallInt)smallint27148, (Type_SmallInt)smallint27149);((AST_Send)send162487)->info = (AST_Info)info5532;assign20381 = (Object)new_AST_Assign((Object)localvariable27264, (Object)send162487);string27380 = (Object)new_Type_String(L"a <<<<<<<< ghi <= c <= d ");constant35026 = (Object)new_AST_Constant((Object)string27380);// on:send162488 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35026);((AST_Send)send162488)->info = (AST_Info)info5532;assign20382 = (Object)new_AST_Assign((Object)localvariable27262, (Object)send162488);// match:send162489 = (Object)new_AST_Send((Object)localvariable27264, (Object)symbol44329, 1, (Object)localvariable27262);((AST_Send)send162489)->info = (AST_Info)info5532;assign20383 = (Object)new_AST_Assign((Object)localvariable27263, (Object)send162489);// classsend162490 = (Object)new_AST_Send((Object)localvariable27263, (Object)SMB_class, 0);((AST_Send)send162490)->info = (AST_Info)info5532;// shouldsend162491 = (Object)new_AST_Send((Object)send162490, (Object)symbol44402, 0);((AST_Send)send162491)->info = (AST_Info)info5532;// =send162492 = (Object)new_AST_Send((Object)send162491, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162492)->info = (AST_Info)info5532;// selectorsend162493 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44115, 0);((AST_Send)send162493)->info = (AST_Info)info5532;// printStringsend162494 = (Object)new_AST_Send((Object)send162493, (Object)symbol44332, 0);((AST_Send)send162494)->info = (AST_Info)info5532;// shouldsend162495 = (Object)new_AST_Send((Object)send162494, (Object)symbol44402, 0);((AST_Send)send162495)->info = (AST_Info)info5532;string27381 = (Object)new_Type_String(L"<=");constant35027 = (Object)new_AST_Constant((Object)string27381);// =send162496 = (Object)new_AST_Send((Object)send162495, (Object)SMB__equal, 1, (Object)constant35027);((AST_Send)send162496)->info = (AST_Info)info5532;// argumentsend162497 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44224, 0);((AST_Send)send162497)->info = (AST_Info)info5532;// classsend162498 = (Object)new_AST_Send((Object)send162497, (Object)SMB_class, 0);((AST_Send)send162498)->info = (AST_Info)info5532;// shouldsend162499 = (Object)new_AST_Send((Object)send162498, (Object)symbol44402, 0);((AST_Send)send162499)->info = (AST_Info)info5532;// =send162500 = (Object)new_AST_Send((Object)send162499, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162500)->info = (AST_Info)info5532;// argumentsend162501 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44224, 0);((AST_Send)send162501)->info = (AST_Info)info5532;// namesend162502 = (Object)new_AST_Send((Object)send162501, (Object)SMB_name, 0);((AST_Send)send162502)->info = (AST_Info)info5532;// shouldsend162503 = (Object)new_AST_Send((Object)send162502, (Object)symbol44402, 0);((AST_Send)send162503)->info = (AST_Info)info5532;string27382 = (Object)new_Type_String(L"d");constant35028 = (Object)new_AST_Constant((Object)string27382);// =send162504 = (Object)new_AST_Send((Object)send162503, (Object)SMB__equal, 1, (Object)constant35028);((AST_Send)send162504)->info = (AST_Info)info5532;// receiversend162505 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44218, 0);((AST_Send)send162505)->info = (AST_Info)info5532;assign20384 = (Object)new_AST_Assign((Object)localvariable27263, (Object)send162505);// classsend162506 = (Object)new_AST_Send((Object)localvariable27263, (Object)SMB_class, 0);((AST_Send)send162506)->info = (AST_Info)info5532;// shouldsend162507 = (Object)new_AST_Send((Object)send162506, (Object)symbol44402, 0);((AST_Send)send162507)->info = (AST_Info)info5532;// =send162508 = (Object)new_AST_Send((Object)send162507, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162508)->info = (AST_Info)info5532;// selectorsend162509 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44115, 0);((AST_Send)send162509)->info = (AST_Info)info5532;// printStringsend162510 = (Object)new_AST_Send((Object)send162509, (Object)symbol44332, 0);((AST_Send)send162510)->info = (AST_Info)info5532;// shouldsend162511 = (Object)new_AST_Send((Object)send162510, (Object)symbol44402, 0);((AST_Send)send162511)->info = (AST_Info)info5532;string27383 = (Object)new_Type_String(L"<=");constant35029 = (Object)new_AST_Constant((Object)string27383);// =send162512 = (Object)new_AST_Send((Object)send162511, (Object)SMB__equal, 1, (Object)constant35029);((AST_Send)send162512)->info = (AST_Info)info5532;// argumentsend162513 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44224, 0);((AST_Send)send162513)->info = (AST_Info)info5532;// classsend162514 = (Object)new_AST_Send((Object)send162513, (Object)SMB_class, 0);((AST_Send)send162514)->info = (AST_Info)info5532;// shouldsend162515 = (Object)new_AST_Send((Object)send162514, (Object)symbol44402, 0);((AST_Send)send162515)->info = (AST_Info)info5532;// =send162516 = (Object)new_AST_Send((Object)send162515, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162516)->info = (AST_Info)info5532;// argumentsend162517 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44224, 0);((AST_Send)send162517)->info = (AST_Info)info5532;// namesend162518 = (Object)new_AST_Send((Object)send162517, (Object)SMB_name, 0);((AST_Send)send162518)->info = (AST_Info)info5532;// shouldsend162519 = (Object)new_AST_Send((Object)send162518, (Object)symbol44402, 0);((AST_Send)send162519)->info = (AST_Info)info5532;string27384 = (Object)new_Type_String(L"c");constant35030 = (Object)new_AST_Constant((Object)string27384);// =send162520 = (Object)new_AST_Send((Object)send162519, (Object)SMB__equal, 1, (Object)constant35030);((AST_Send)send162520)->info = (AST_Info)info5532;// receiversend162521 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44218, 0);((AST_Send)send162521)->info = (AST_Info)info5532;assign20385 = (Object)new_AST_Assign((Object)localvariable27263, (Object)send162521);// classsend162522 = (Object)new_AST_Send((Object)localvariable27263, (Object)SMB_class, 0);((AST_Send)send162522)->info = (AST_Info)info5532;// shouldsend162523 = (Object)new_AST_Send((Object)send162522, (Object)symbol44402, 0);((AST_Send)send162523)->info = (AST_Info)info5532;// =send162524 = (Object)new_AST_Send((Object)send162523, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162524)->info = (AST_Info)info5532;// selectorsend162525 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44115, 0);((AST_Send)send162525)->info = (AST_Info)info5532;// printStringsend162526 = (Object)new_AST_Send((Object)send162525, (Object)symbol44332, 0);((AST_Send)send162526)->info = (AST_Info)info5532;// shouldsend162527 = (Object)new_AST_Send((Object)send162526, (Object)symbol44402, 0);((AST_Send)send162527)->info = (AST_Info)info5532;string27385 = (Object)new_Type_String(L"<<<<<<<<");constant35031 = (Object)new_AST_Constant((Object)string27385);// =send162528 = (Object)new_AST_Send((Object)send162527, (Object)SMB__equal, 1, (Object)constant35031);((AST_Send)send162528)->info = (AST_Info)info5532;// receiversend162529 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44218, 0);((AST_Send)send162529)->info = (AST_Info)info5532;// classsend162530 = (Object)new_AST_Send((Object)send162529, (Object)SMB_class, 0);((AST_Send)send162530)->info = (AST_Info)info5532;// shouldsend162531 = (Object)new_AST_Send((Object)send162530, (Object)symbol44402, 0);((AST_Send)send162531)->info = (AST_Info)info5532;// =send162532 = (Object)new_AST_Send((Object)send162531, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162532)->info = (AST_Info)info5532;// receiversend162533 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44218, 0);((AST_Send)send162533)->info = (AST_Info)info5532;// namesend162534 = (Object)new_AST_Send((Object)send162533, (Object)SMB_name, 0);((AST_Send)send162534)->info = (AST_Info)info5532;// shouldsend162535 = (Object)new_AST_Send((Object)send162534, (Object)symbol44402, 0);((AST_Send)send162535)->info = (AST_Info)info5532;string27386 = (Object)new_Type_String(L"a");constant35032 = (Object)new_AST_Constant((Object)string27386);// =send162536 = (Object)new_AST_Send((Object)send162535, (Object)SMB__equal, 1, (Object)constant35032);((AST_Send)send162536)->info = (AST_Info)info5532;// argumentsend162537 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44224, 0);((AST_Send)send162537)->info = (AST_Info)info5532;// classsend162538 = (Object)new_AST_Send((Object)send162537, (Object)SMB_class, 0);((AST_Send)send162538)->info = (AST_Info)info5532;// shouldsend162539 = (Object)new_AST_Send((Object)send162538, (Object)symbol44402, 0);((AST_Send)send162539)->info = (AST_Info)info5532;// =send162540 = (Object)new_AST_Send((Object)send162539, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162540)->info = (AST_Info)info5532;// argumentsend162541 = (Object)new_AST_Send((Object)localvariable27263, (Object)symbol44224, 0);((AST_Send)send162541)->info = (AST_Info)info5532;// namesend162542 = (Object)new_AST_Send((Object)send162541, (Object)SMB_name, 0);((AST_Send)send162542)->info = (AST_Info)info5532;// shouldsend162543 = (Object)new_AST_Send((Object)send162542, (Object)symbol44402, 0);((AST_Send)send162543)->info = (AST_Info)info5532;string27387 = (Object)new_Type_String(L"ghi");constant35033 = (Object)new_AST_Constant((Object)string27387);// =send162544 = (Object)new_AST_Send((Object)send162543, (Object)SMB__equal, 1, (Object)constant35033);((AST_Send)send162544)->info = (AST_Info)info5532;// positionsend162545 = (Object)new_AST_Send((Object)localvariable27262, (Object)symbol44475, 0);((AST_Send)send162545)->info = (AST_Info)info5532;// shouldsend162546 = (Object)new_AST_Send((Object)send162545, (Object)symbol44402, 0);((AST_Send)send162546)->info = (AST_Info)info5532;smallint27150 = (Object)new_Type_SmallInt(24);constant35034 = (Object)new_AST_Constant((Object)smallint27150);// =send162547 = (Object)new_AST_Send((Object)send162546, (Object)SMB__equal, 1, (Object)constant35034);((AST_Send)send162547)->info = (AST_Info)info5532;method41275 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24293, 21, assign20381, assign20382, assign20383, send162492, send162496, send162500, send162504, assign20384, send162508, send162512, send162516, send162520, assign20385, send162524, send162528, send162532, send162536, send162540, send162544, send162547, Self);((AST_Method)method41275)->info = (AST_Info)info5532;symbol44081 = (Object)new_Type_Symbol_cached(L"testBinaryExpression2");methodclosure41178 = (Object)new_Runtime_MethodClosure(method41275);store_method((Type_Class)class6736, (Type_Symbol)symbol44081, (Runtime_MethodClosure)methodclosure41178);// SCParserTest>>testUnaryAndBinaryPrecedence//testUnaryAndBinaryPrecedence// 	| parser ast |// 	parser := scparser statements.// 	// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.// 	// 	ast class should = ASTBinaryExpression.// 	ast receiver class should = ASTUnaryExpression.// 	ast receiver receiver class should = ASTNumber.// 	ast receiver receiver number should = '2'.// 	ast receiver selector asString should = 'fib'.// 	// 	ast selector asString should = '+'.// 	// 	ast argument class should = ASTNumber.// 	ast argument number should = '3'.// 	// 	localvariable27265 = (Object)new_AST_Variable_named(L"parser");localvariable27266 = (Object)new_AST_Variable_named(L"ast");array24294 = (Object)new_Type_Array_with(2, (Object)localvariable27265, (Object)localvariable27266);// statementssend162548 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44225, 0);string27388 = (Object)new_Type_String(L"testUnaryAndBinaryPrecedence");string27389 = (Object)new_Type_String(L"testUnaryAndBinaryPrecedence\n\t| parser ast |\n\tparser := scparser statements.\n\t\n\tast := (parser match: (PEGStringScanner on: \'2 fib + 3 \')) first.\n\t\n\tast class should = ASTBinaryExpression.\n\tast receiver class should = ASTUnaryExpression.\n\tast receiver receiver class should = ASTNumber.\n\tast receiver receiver number should = \'2\'.\n\tast receiver selector asString should = \'fib\'.\n\t\n\tast selector asString should = \'+\'.\n\t\n\tast argument class should = ASTNumber.\n\tast argument number should = \'3\'.\n\t\n\t");smallint27151 = (Object)new_Type_SmallInt(-1);smallint27152 = (Object)new_Type_SmallInt(-1);info5533 = (Object)new_AST_Info((Type_String)string27389,(Type_String)string27388, (Type_SmallInt)smallint27151, (Type_SmallInt)smallint27152);((AST_Send)send162548)->info = (AST_Info)info5533;assign20386 = (Object)new_AST_Assign((Object)localvariable27265, (Object)send162548);string27390 = (Object)new_Type_String(L"2 fib + 3 ");constant35035 = (Object)new_AST_Constant((Object)string27390);// on:send162549 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35035);((AST_Send)send162549)->info = (AST_Info)info5533;// match:send162550 = (Object)new_AST_Send((Object)localvariable27265, (Object)symbol44329, 1, (Object)send162549);((AST_Send)send162550)->info = (AST_Info)info5533;// firstsend162551 = (Object)new_AST_Send((Object)send162550, (Object)symbol44180, 0);((AST_Send)send162551)->info = (AST_Info)info5533;assign20387 = (Object)new_AST_Assign((Object)localvariable27266, (Object)send162551);// classsend162552 = (Object)new_AST_Send((Object)localvariable27266, (Object)SMB_class, 0);((AST_Send)send162552)->info = (AST_Info)info5533;// shouldsend162553 = (Object)new_AST_Send((Object)send162552, (Object)symbol44402, 0);((AST_Send)send162553)->info = (AST_Info)info5533;// =send162554 = (Object)new_AST_Send((Object)send162553, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162554)->info = (AST_Info)info5533;// receiversend162555 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44218, 0);((AST_Send)send162555)->info = (AST_Info)info5533;// classsend162556 = (Object)new_AST_Send((Object)send162555, (Object)SMB_class, 0);((AST_Send)send162556)->info = (AST_Info)info5533;// shouldsend162557 = (Object)new_AST_Send((Object)send162556, (Object)symbol44402, 0);((AST_Send)send162557)->info = (AST_Info)info5533;// =send162558 = (Object)new_AST_Send((Object)send162557, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162558)->info = (AST_Info)info5533;// receiversend162559 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44218, 0);((AST_Send)send162559)->info = (AST_Info)info5533;// receiversend162560 = (Object)new_AST_Send((Object)send162559, (Object)symbol44218, 0);((AST_Send)send162560)->info = (AST_Info)info5533;// classsend162561 = (Object)new_AST_Send((Object)send162560, (Object)SMB_class, 0);((AST_Send)send162561)->info = (AST_Info)info5533;// shouldsend162562 = (Object)new_AST_Send((Object)send162561, (Object)symbol44402, 0);((AST_Send)send162562)->info = (AST_Info)info5533;// =send162563 = (Object)new_AST_Send((Object)send162562, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162563)->info = (AST_Info)info5533;// receiversend162564 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44218, 0);((AST_Send)send162564)->info = (AST_Info)info5533;// receiversend162565 = (Object)new_AST_Send((Object)send162564, (Object)symbol44218, 0);((AST_Send)send162565)->info = (AST_Info)info5533;// numbersend162566 = (Object)new_AST_Send((Object)send162565, (Object)symbol44192, 0);((AST_Send)send162566)->info = (AST_Info)info5533;// shouldsend162567 = (Object)new_AST_Send((Object)send162566, (Object)symbol44402, 0);((AST_Send)send162567)->info = (AST_Info)info5533;string27391 = (Object)new_Type_String(L"2");constant35036 = (Object)new_AST_Constant((Object)string27391);// =send162568 = (Object)new_AST_Send((Object)send162567, (Object)SMB__equal, 1, (Object)constant35036);((AST_Send)send162568)->info = (AST_Info)info5533;// receiversend162569 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44218, 0);((AST_Send)send162569)->info = (AST_Info)info5533;// selectorsend162570 = (Object)new_AST_Send((Object)send162569, (Object)symbol44115, 0);((AST_Send)send162570)->info = (AST_Info)info5533;// asStringsend162571 = (Object)new_AST_Send((Object)send162570, (Object)SMB_asString, 0);((AST_Send)send162571)->info = (AST_Info)info5533;// shouldsend162572 = (Object)new_AST_Send((Object)send162571, (Object)symbol44402, 0);((AST_Send)send162572)->info = (AST_Info)info5533;string27392 = (Object)new_Type_String(L"fib");constant35037 = (Object)new_AST_Constant((Object)string27392);// =send162573 = (Object)new_AST_Send((Object)send162572, (Object)SMB__equal, 1, (Object)constant35037);((AST_Send)send162573)->info = (AST_Info)info5533;// selectorsend162574 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44115, 0);((AST_Send)send162574)->info = (AST_Info)info5533;// asStringsend162575 = (Object)new_AST_Send((Object)send162574, (Object)SMB_asString, 0);((AST_Send)send162575)->info = (AST_Info)info5533;// shouldsend162576 = (Object)new_AST_Send((Object)send162575, (Object)symbol44402, 0);((AST_Send)send162576)->info = (AST_Info)info5533;string27393 = (Object)new_Type_String(L"+");constant35038 = (Object)new_AST_Constant((Object)string27393);// =send162577 = (Object)new_AST_Send((Object)send162576, (Object)SMB__equal, 1, (Object)constant35038);((AST_Send)send162577)->info = (AST_Info)info5533;// argumentsend162578 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44224, 0);((AST_Send)send162578)->info = (AST_Info)info5533;// classsend162579 = (Object)new_AST_Send((Object)send162578, (Object)SMB_class, 0);((AST_Send)send162579)->info = (AST_Info)info5533;// shouldsend162580 = (Object)new_AST_Send((Object)send162579, (Object)symbol44402, 0);((AST_Send)send162580)->info = (AST_Info)info5533;// =send162581 = (Object)new_AST_Send((Object)send162580, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162581)->info = (AST_Info)info5533;// argumentsend162582 = (Object)new_AST_Send((Object)localvariable27266, (Object)symbol44224, 0);((AST_Send)send162582)->info = (AST_Info)info5533;// numbersend162583 = (Object)new_AST_Send((Object)send162582, (Object)symbol44192, 0);((AST_Send)send162583)->info = (AST_Info)info5533;// shouldsend162584 = (Object)new_AST_Send((Object)send162583, (Object)symbol44402, 0);((AST_Send)send162584)->info = (AST_Info)info5533;string27394 = (Object)new_Type_String(L"3");constant35039 = (Object)new_AST_Constant((Object)string27394);// =send162585 = (Object)new_AST_Send((Object)send162584, (Object)SMB__equal, 1, (Object)constant35039);((AST_Send)send162585)->info = (AST_Info)info5533;method41276 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24294, 11, assign20386, assign20387, send162554, send162558, send162563, send162568, send162573, send162577, send162581, send162585, Self);((AST_Method)method41276)->info = (AST_Info)info5533;symbol44073 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");methodclosure41179 = (Object)new_Runtime_MethodClosure(method41276);store_method((Type_Class)class6736, (Type_Symbol)symbol44073, (Runtime_MethodClosure)methodclosure41179);// SCParserTest>>testParseTestMethods//testParseTestMethods// 	<temps: 6 annotations: 1 statements: 3>// 	| parser string result code annotations annotation |// 	parser := scparser method.// 	self class methodDict keys do: [ :key | // 			Transcript show: key; cr.// 			code := self class sourceCodeAt: key.// 			string := PEGStringScanner on: code separator: scparser separator.// 			result := parser match: string.// 			result class should = ASTMethod.// 			annotations := result annotations select:[ :ann | // 				ann class = ASTKeywordAnnotation // 					and: [ ann keywords asArray = ((Array new: 3)// 							at: 1 put: #temps;// 							at: 2 put: #annotations;// 							at: 3 put: #statements;// 							yourself) ] ].// 			annotations size = 1 ifTrue:// 					[ annotation := annotations first.// 					result temporaries size = annotation arguments first asInteger.// 					result annotations size = (annotation arguments at: 2) asInteger.// 					result statements size = (annotation arguments at: 3) asInteger ].// 			"string atEnd should be true."// 			result // 	]	"inspect"method41277 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string27395 = (Object)new_Type_String(L"testParseTestMethods");string27396 = (Object)new_Type_String(L"testParseTestMethods\n\t<temps: 6 annotations: 1 statements: 3>\n\t| parser string result code annotations annotation |\n\tparser := scparser method.\n\tself class methodDict keys do: [ :key | \n\t\t\tTranscript show: key; cr.\n\t\t\tcode := self class sourceCodeAt: key.\n\t\t\tstring := PEGStringScanner on: code separator: scparser separator.\n\t\t\tresult := parser match: string.\n\t\t\tresult class should = ASTMethod.\n\t\t\tannotations := result annotations select:[ :ann | \n\t\t\t\tann class = ASTKeywordAnnotation \n\t\t\t\t\tand: [ ann keywords asArray = ((Array new: 3)\n\t\t\t\t\t\t\tat: 1 put: #temps;\n\t\t\t\t\t\t\tat: 2 put: #annotations;\n\t\t\t\t\t\t\tat: 3 put: #statements;\n\t\t\t\t\t\t\tyourself) ] ].\n\t\t\tannotations size = 1 ifTrue:\n\t\t\t\t\t[ annotation := annotations first.\n\t\t\t\t\tresult temporaries size = annotation arguments first asInteger.\n\t\t\t\t\tresult annotations size = (annotation arguments at: 2) asInteger.\n\t\t\t\t\tresult statements size = (annotation arguments at: 3) asInteger ].\n\t\t\t\"string atEnd should be true.\"\n\t\t\tresult \n\t]\t\"inspect\"");smallint27153 = (Object)new_Type_SmallInt(-1);smallint27154 = (Object)new_Type_SmallInt(-1);info5534 = (Object)new_AST_Info((Type_String)string27396,(Type_String)string27395, (Type_SmallInt)smallint27153, (Type_SmallInt)smallint27154);((AST_Method)method41277)->info = (AST_Info)info5534;symbol44063 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");methodclosure41180 = (Object)new_Runtime_MethodClosure(method41277);store_method((Type_Class)class6736, (Type_Symbol)symbol44063, (Runtime_MethodClosure)methodclosure41180);// SCParserTest>>testReturn//testReturn// 	| parser string result |// 	parser := scparser return.// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTReturnExpression.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression.// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.// 	result := parser match: string.// 	result class should = ASTReturnExpression.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpressionlocalvariable27267 = (Object)new_AST_Variable_named(L"parser");localvariable27268 = (Object)new_AST_Variable_named(L"string");localvariable27269 = (Object)new_AST_Variable_named(L"result");array24295 = (Object)new_Type_Array_with(3, (Object)localvariable27267, (Object)localvariable27268, (Object)localvariable27269);// returnsend162586 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44471, 0);string27397 = (Object)new_Type_String(L"testReturn");string27398 = (Object)new_Type_String(L"testReturn\n\t| parser string result |\n\tparser := scparser return.\n\tstring := PEGStringScanner on: \'^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTReturnExpression.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression.\n\tstring := PEGStringScanner on: \'^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. \'.\n\tresult := parser match: string.\n\tresult class should = ASTReturnExpression.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");smallint27155 = (Object)new_Type_SmallInt(-1);smallint27156 = (Object)new_Type_SmallInt(-1);info5535 = (Object)new_AST_Info((Type_String)string27398,(Type_String)string27397, (Type_SmallInt)smallint27155, (Type_SmallInt)smallint27156);((AST_Send)send162586)->info = (AST_Info)info5535;assign20388 = (Object)new_AST_Assign((Object)localvariable27267, (Object)send162586);string27399 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");constant35040 = (Object)new_AST_Constant((Object)string27399);// on:send162587 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35040);((AST_Send)send162587)->info = (AST_Info)info5535;assign20389 = (Object)new_AST_Assign((Object)localvariable27268, (Object)send162587);// match:send162588 = (Object)new_AST_Send((Object)localvariable27267, (Object)symbol44329, 1, (Object)localvariable27268);((AST_Send)send162588)->info = (AST_Info)info5535;assign20390 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162588);// classsend162589 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162589)->info = (AST_Info)info5535;// shouldsend162590 = (Object)new_AST_Send((Object)send162589, (Object)symbol44402, 0);((AST_Send)send162590)->info = (AST_Info)info5535;// =send162591 = (Object)new_AST_Send((Object)send162590, (Object)SMB__equal, 1, (Object)classreference13405);((AST_Send)send162591)->info = (AST_Info)info5535;// expressionsend162592 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162592)->info = (AST_Info)info5535;assign20391 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162592);// classsend162593 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162593)->info = (AST_Info)info5535;// shouldsend162594 = (Object)new_AST_Send((Object)send162593, (Object)symbol44402, 0);((AST_Send)send162594)->info = (AST_Info)info5535;// =send162595 = (Object)new_AST_Send((Object)send162594, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162595)->info = (AST_Info)info5535;// variablesend162596 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162596)->info = (AST_Info)info5535;// classsend162597 = (Object)new_AST_Send((Object)send162596, (Object)SMB_class, 0);((AST_Send)send162597)->info = (AST_Info)info5535;// shouldsend162598 = (Object)new_AST_Send((Object)send162597, (Object)symbol44402, 0);((AST_Send)send162598)->info = (AST_Info)info5535;// =send162599 = (Object)new_AST_Send((Object)send162598, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162599)->info = (AST_Info)info5535;// variablesend162600 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162600)->info = (AST_Info)info5535;// namesend162601 = (Object)new_AST_Send((Object)send162600, (Object)SMB_name, 0);((AST_Send)send162601)->info = (AST_Info)info5535;// shouldsend162602 = (Object)new_AST_Send((Object)send162601, (Object)symbol44402, 0);((AST_Send)send162602)->info = (AST_Info)info5535;string27400 = (Object)new_Type_String(L"a");constant35041 = (Object)new_AST_Constant((Object)string27400);// =send162603 = (Object)new_AST_Send((Object)send162602, (Object)SMB__equal, 1, (Object)constant35041);((AST_Send)send162603)->info = (AST_Info)info5535;// expressionsend162604 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162604)->info = (AST_Info)info5535;assign20392 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162604);// classsend162605 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162605)->info = (AST_Info)info5535;// shouldsend162606 = (Object)new_AST_Send((Object)send162605, (Object)symbol44402, 0);((AST_Send)send162606)->info = (AST_Info)info5535;// =send162607 = (Object)new_AST_Send((Object)send162606, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162607)->info = (AST_Info)info5535;// variablesend162608 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162608)->info = (AST_Info)info5535;// classsend162609 = (Object)new_AST_Send((Object)send162608, (Object)SMB_class, 0);((AST_Send)send162609)->info = (AST_Info)info5535;// shouldsend162610 = (Object)new_AST_Send((Object)send162609, (Object)symbol44402, 0);((AST_Send)send162610)->info = (AST_Info)info5535;// =send162611 = (Object)new_AST_Send((Object)send162610, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162611)->info = (AST_Info)info5535;// variablesend162612 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162612)->info = (AST_Info)info5535;// namesend162613 = (Object)new_AST_Send((Object)send162612, (Object)SMB_name, 0);((AST_Send)send162613)->info = (AST_Info)info5535;// shouldsend162614 = (Object)new_AST_Send((Object)send162613, (Object)symbol44402, 0);((AST_Send)send162614)->info = (AST_Info)info5535;string27401 = (Object)new_Type_String(L"b");constant35042 = (Object)new_AST_Constant((Object)string27401);// =send162615 = (Object)new_AST_Send((Object)send162614, (Object)SMB__equal, 1, (Object)constant35042);((AST_Send)send162615)->info = (AST_Info)info5535;// expressionsend162616 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162616)->info = (AST_Info)info5535;assign20393 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162616);// classsend162617 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162617)->info = (AST_Info)info5535;// shouldsend162618 = (Object)new_AST_Send((Object)send162617, (Object)symbol44402, 0);((AST_Send)send162618)->info = (AST_Info)info5535;// =send162619 = (Object)new_AST_Send((Object)send162618, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162619)->info = (AST_Info)info5535;// variablesend162620 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162620)->info = (AST_Info)info5535;// classsend162621 = (Object)new_AST_Send((Object)send162620, (Object)SMB_class, 0);((AST_Send)send162621)->info = (AST_Info)info5535;// shouldsend162622 = (Object)new_AST_Send((Object)send162621, (Object)symbol44402, 0);((AST_Send)send162622)->info = (AST_Info)info5535;// =send162623 = (Object)new_AST_Send((Object)send162622, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162623)->info = (AST_Info)info5535;// variablesend162624 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162624)->info = (AST_Info)info5535;// namesend162625 = (Object)new_AST_Send((Object)send162624, (Object)SMB_name, 0);((AST_Send)send162625)->info = (AST_Info)info5535;// shouldsend162626 = (Object)new_AST_Send((Object)send162625, (Object)symbol44402, 0);((AST_Send)send162626)->info = (AST_Info)info5535;string27402 = (Object)new_Type_String(L"c");constant35043 = (Object)new_AST_Constant((Object)string27402);// =send162627 = (Object)new_AST_Send((Object)send162626, (Object)SMB__equal, 1, (Object)constant35043);((AST_Send)send162627)->info = (AST_Info)info5535;// expressionsend162628 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162628)->info = (AST_Info)info5535;// classsend162629 = (Object)new_AST_Send((Object)send162628, (Object)SMB_class, 0);((AST_Send)send162629)->info = (AST_Info)info5535;// shouldsend162630 = (Object)new_AST_Send((Object)send162629, (Object)symbol44402, 0);((AST_Send)send162630)->info = (AST_Info)info5535;// =send162631 = (Object)new_AST_Send((Object)send162630, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162631)->info = (AST_Info)info5535;string27403 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");constant35044 = (Object)new_AST_Constant((Object)string27403);// on:send162632 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35044);((AST_Send)send162632)->info = (AST_Info)info5535;assign20394 = (Object)new_AST_Assign((Object)localvariable27268, (Object)send162632);// match:send162633 = (Object)new_AST_Send((Object)localvariable27267, (Object)symbol44329, 1, (Object)localvariable27268);((AST_Send)send162633)->info = (AST_Info)info5535;assign20395 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162633);// classsend162634 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162634)->info = (AST_Info)info5535;// shouldsend162635 = (Object)new_AST_Send((Object)send162634, (Object)symbol44402, 0);((AST_Send)send162635)->info = (AST_Info)info5535;// =send162636 = (Object)new_AST_Send((Object)send162635, (Object)SMB__equal, 1, (Object)classreference13405);((AST_Send)send162636)->info = (AST_Info)info5535;// expressionsend162637 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162637)->info = (AST_Info)info5535;assign20396 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162637);// classsend162638 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162638)->info = (AST_Info)info5535;// shouldsend162639 = (Object)new_AST_Send((Object)send162638, (Object)symbol44402, 0);((AST_Send)send162639)->info = (AST_Info)info5535;// =send162640 = (Object)new_AST_Send((Object)send162639, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162640)->info = (AST_Info)info5535;// variablesend162641 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162641)->info = (AST_Info)info5535;// classsend162642 = (Object)new_AST_Send((Object)send162641, (Object)SMB_class, 0);((AST_Send)send162642)->info = (AST_Info)info5535;// shouldsend162643 = (Object)new_AST_Send((Object)send162642, (Object)symbol44402, 0);((AST_Send)send162643)->info = (AST_Info)info5535;// =send162644 = (Object)new_AST_Send((Object)send162643, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162644)->info = (AST_Info)info5535;// variablesend162645 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162645)->info = (AST_Info)info5535;// namesend162646 = (Object)new_AST_Send((Object)send162645, (Object)SMB_name, 0);((AST_Send)send162646)->info = (AST_Info)info5535;// shouldsend162647 = (Object)new_AST_Send((Object)send162646, (Object)symbol44402, 0);((AST_Send)send162647)->info = (AST_Info)info5535;string27404 = (Object)new_Type_String(L"a");constant35045 = (Object)new_AST_Constant((Object)string27404);// =send162648 = (Object)new_AST_Send((Object)send162647, (Object)SMB__equal, 1, (Object)constant35045);((AST_Send)send162648)->info = (AST_Info)info5535;// expressionsend162649 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162649)->info = (AST_Info)info5535;assign20397 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162649);// classsend162650 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162650)->info = (AST_Info)info5535;// shouldsend162651 = (Object)new_AST_Send((Object)send162650, (Object)symbol44402, 0);((AST_Send)send162651)->info = (AST_Info)info5535;// =send162652 = (Object)new_AST_Send((Object)send162651, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162652)->info = (AST_Info)info5535;// variablesend162653 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162653)->info = (AST_Info)info5535;// classsend162654 = (Object)new_AST_Send((Object)send162653, (Object)SMB_class, 0);((AST_Send)send162654)->info = (AST_Info)info5535;// shouldsend162655 = (Object)new_AST_Send((Object)send162654, (Object)symbol44402, 0);((AST_Send)send162655)->info = (AST_Info)info5535;// =send162656 = (Object)new_AST_Send((Object)send162655, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162656)->info = (AST_Info)info5535;// variablesend162657 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162657)->info = (AST_Info)info5535;// namesend162658 = (Object)new_AST_Send((Object)send162657, (Object)SMB_name, 0);((AST_Send)send162658)->info = (AST_Info)info5535;// shouldsend162659 = (Object)new_AST_Send((Object)send162658, (Object)symbol44402, 0);((AST_Send)send162659)->info = (AST_Info)info5535;string27405 = (Object)new_Type_String(L"b");constant35046 = (Object)new_AST_Constant((Object)string27405);// =send162660 = (Object)new_AST_Send((Object)send162659, (Object)SMB__equal, 1, (Object)constant35046);((AST_Send)send162660)->info = (AST_Info)info5535;// expressionsend162661 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162661)->info = (AST_Info)info5535;assign20398 = (Object)new_AST_Assign((Object)localvariable27269, (Object)send162661);// classsend162662 = (Object)new_AST_Send((Object)localvariable27269, (Object)SMB_class, 0);((AST_Send)send162662)->info = (AST_Info)info5535;// shouldsend162663 = (Object)new_AST_Send((Object)send162662, (Object)symbol44402, 0);((AST_Send)send162663)->info = (AST_Info)info5535;// =send162664 = (Object)new_AST_Send((Object)send162663, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162664)->info = (AST_Info)info5535;// variablesend162665 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162665)->info = (AST_Info)info5535;// classsend162666 = (Object)new_AST_Send((Object)send162665, (Object)SMB_class, 0);((AST_Send)send162666)->info = (AST_Info)info5535;// shouldsend162667 = (Object)new_AST_Send((Object)send162666, (Object)symbol44402, 0);((AST_Send)send162667)->info = (AST_Info)info5535;// =send162668 = (Object)new_AST_Send((Object)send162667, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162668)->info = (AST_Info)info5535;// variablesend162669 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44202, 0);((AST_Send)send162669)->info = (AST_Info)info5535;// namesend162670 = (Object)new_AST_Send((Object)send162669, (Object)SMB_name, 0);((AST_Send)send162670)->info = (AST_Info)info5535;// shouldsend162671 = (Object)new_AST_Send((Object)send162670, (Object)symbol44402, 0);((AST_Send)send162671)->info = (AST_Info)info5535;string27406 = (Object)new_Type_String(L"c");constant35047 = (Object)new_AST_Constant((Object)string27406);// =send162672 = (Object)new_AST_Send((Object)send162671, (Object)SMB__equal, 1, (Object)constant35047);((AST_Send)send162672)->info = (AST_Info)info5535;// expressionsend162673 = (Object)new_AST_Send((Object)localvariable27269, (Object)symbol44200, 0);((AST_Send)send162673)->info = (AST_Info)info5535;// classsend162674 = (Object)new_AST_Send((Object)send162673, (Object)SMB_class, 0);((AST_Send)send162674)->info = (AST_Info)info5535;// shouldsend162675 = (Object)new_AST_Send((Object)send162674, (Object)symbol44402, 0);((AST_Send)send162675)->info = (AST_Info)info5535;// =send162676 = (Object)new_AST_Send((Object)send162675, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162676)->info = (AST_Info)info5535;method41278 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24295, 34, assign20388, assign20389, assign20390, send162591, assign20391, send162595, send162599, send162603, assign20392, send162607, send162611, send162615, assign20393, send162619, send162623, send162627, send162631, assign20394, assign20395, send162636, assign20396, send162640, send162644, send162648, assign20397, send162652, send162656, send162660, assign20398, send162664, send162668, send162672, send162676, Self);((AST_Method)method41278)->info = (AST_Info)info5535;symbol44055 = (Object)new_Type_Symbol_cached(L"testReturn");methodclosure41181 = (Object)new_Runtime_MethodClosure(method41278);store_method((Type_Class)class6736, (Type_Symbol)symbol44055, (Runtime_MethodClosure)methodclosure41181);// SCParserTest>>testCharacterConstant//testCharacterConstant// 	| parser string result |// 	parser := scparser characterConstant.// 	string := PEGStringScanner on: 'a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '$_'.// 	result := parser match: string.// 	result class should = ASTCharacter.// 	result char should = $_.// 	string position should = 2localvariable27270 = (Object)new_AST_Variable_named(L"parser");localvariable27271 = (Object)new_AST_Variable_named(L"string");localvariable27272 = (Object)new_AST_Variable_named(L"result");array24296 = (Object)new_Type_Array_with(3, (Object)localvariable27270, (Object)localvariable27271, (Object)localvariable27272);// characterConstantsend162677 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44421, 0);string27407 = (Object)new_Type_String(L"testCharacterConstant");string27408 = (Object)new_Type_String(L"testCharacterConstant\n\t| parser string result |\n\tparser := scparser characterConstant.\n\tstring := PEGStringScanner on: \'a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'$_\'.\n\tresult := parser match: string.\n\tresult class should = ASTCharacter.\n\tresult char should = $_.\n\tstring position should = 2");smallint27157 = (Object)new_Type_SmallInt(-1);smallint27158 = (Object)new_Type_SmallInt(-1);info5536 = (Object)new_AST_Info((Type_String)string27408,(Type_String)string27407, (Type_SmallInt)smallint27157, (Type_SmallInt)smallint27158);((AST_Send)send162677)->info = (AST_Info)info5536;assign20399 = (Object)new_AST_Assign((Object)localvariable27270, (Object)send162677);string27409 = (Object)new_Type_String(L"a");constant35048 = (Object)new_AST_Constant((Object)string27409);// on:send162678 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35048);((AST_Send)send162678)->info = (AST_Info)info5536;assign20400 = (Object)new_AST_Assign((Object)localvariable27271, (Object)send162678);// match:send162679 = (Object)new_AST_Send((Object)localvariable27270, (Object)symbol44329, 1, (Object)localvariable27271);((AST_Send)send162679)->info = (AST_Info)info5536;// shouldsend162680 = (Object)new_AST_Send((Object)send162679, (Object)symbol44402, 0);((AST_Send)send162680)->info = (AST_Info)info5536;// besend162681 = (Object)new_AST_Send((Object)send162680, (Object)symbol44476, 0);((AST_Send)send162681)->info = (AST_Info)info5536;// isNilsend162682 = (Object)new_AST_Send((Object)send162681, (Object)SMB_isNil, 0);((AST_Send)send162682)->info = (AST_Info)info5536;// positionsend162683 = (Object)new_AST_Send((Object)localvariable27271, (Object)symbol44475, 0);((AST_Send)send162683)->info = (AST_Info)info5536;// shouldsend162684 = (Object)new_AST_Send((Object)send162683, (Object)symbol44402, 0);((AST_Send)send162684)->info = (AST_Info)info5536;smallint27159 = (Object)new_Type_SmallInt(0);constant35049 = (Object)new_AST_Constant((Object)smallint27159);// =send162685 = (Object)new_AST_Send((Object)send162684, (Object)SMB__equal, 1, (Object)constant35049);((AST_Send)send162685)->info = (AST_Info)info5536;string27410 = (Object)new_Type_String(L"$_");constant35050 = (Object)new_AST_Constant((Object)string27410);// on:send162686 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35050);((AST_Send)send162686)->info = (AST_Info)info5536;assign20401 = (Object)new_AST_Assign((Object)localvariable27271, (Object)send162686);// match:send162687 = (Object)new_AST_Send((Object)localvariable27270, (Object)symbol44329, 1, (Object)localvariable27271);((AST_Send)send162687)->info = (AST_Info)info5536;assign20402 = (Object)new_AST_Assign((Object)localvariable27272, (Object)send162687);// classsend162688 = (Object)new_AST_Send((Object)localvariable27272, (Object)SMB_class, 0);((AST_Send)send162688)->info = (AST_Info)info5536;// shouldsend162689 = (Object)new_AST_Send((Object)send162688, (Object)symbol44402, 0);((AST_Send)send162689)->info = (AST_Info)info5536;// =send162690 = (Object)new_AST_Send((Object)send162689, (Object)SMB__equal, 1, (Object)classreference13402);((AST_Send)send162690)->info = (AST_Info)info5536;// charsend162691 = (Object)new_AST_Send((Object)localvariable27272, (Object)symbol44352, 0);((AST_Send)send162691)->info = (AST_Info)info5536;// shouldsend162692 = (Object)new_AST_Send((Object)send162691, (Object)symbol44402, 0);((AST_Send)send162692)->info = (AST_Info)info5536;character687 = (Object)new_Type_Character(L'_');constant35051 = (Object)new_AST_Constant((Object)character687);// =send162693 = (Object)new_AST_Send((Object)send162692, (Object)SMB__equal, 1, (Object)constant35051);((AST_Send)send162693)->info = (AST_Info)info5536;// positionsend162694 = (Object)new_AST_Send((Object)localvariable27271, (Object)symbol44475, 0);((AST_Send)send162694)->info = (AST_Info)info5536;// shouldsend162695 = (Object)new_AST_Send((Object)send162694, (Object)symbol44402, 0);((AST_Send)send162695)->info = (AST_Info)info5536;smallint27160 = (Object)new_Type_SmallInt(2);constant35052 = (Object)new_AST_Constant((Object)smallint27160);// =send162696 = (Object)new_AST_Send((Object)send162695, (Object)SMB__equal, 1, (Object)constant35052);((AST_Send)send162696)->info = (AST_Info)info5536;method41279 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24296, 10, assign20399, assign20400, send162682, send162685, assign20401, assign20402, send162690, send162693, send162696, Self);((AST_Method)method41279)->info = (AST_Info)info5536;symbol44083 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");methodclosure41182 = (Object)new_Runtime_MethodClosure(method41279);store_method((Type_Class)class6736, (Type_Symbol)symbol44083, (Runtime_MethodClosure)methodclosure41182);// SCParserTest>>testFinalExpression//testFinalExpression// 	| parser string result |// 	parser := scparser finalExpression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpressionlocalvariable27273 = (Object)new_AST_Variable_named(L"parser");localvariable27274 = (Object)new_AST_Variable_named(L"string");localvariable27275 = (Object)new_AST_Variable_named(L"result");array24297 = (Object)new_Type_Array_with(3, (Object)localvariable27273, (Object)localvariable27274, (Object)localvariable27275);// finalExpressionsend162697 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44466, 0);string27411 = (Object)new_Type_String(L"testFinalExpression");string27412 = (Object)new_Type_String(L"testFinalExpression\n\t| parser string result |\n\tparser := scparser finalExpression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");smallint27161 = (Object)new_Type_SmallInt(-1);smallint27162 = (Object)new_Type_SmallInt(-1);info5537 = (Object)new_AST_Info((Type_String)string27412,(Type_String)string27411, (Type_SmallInt)smallint27161, (Type_SmallInt)smallint27162);((AST_Send)send162697)->info = (AST_Info)info5537;assign20403 = (Object)new_AST_Assign((Object)localvariable27273, (Object)send162697);string27413 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");constant35053 = (Object)new_AST_Constant((Object)string27413);// on:send162698 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35053);((AST_Send)send162698)->info = (AST_Info)info5537;assign20404 = (Object)new_AST_Assign((Object)localvariable27274, (Object)send162698);// match:send162699 = (Object)new_AST_Send((Object)localvariable27273, (Object)symbol44329, 1, (Object)localvariable27274);((AST_Send)send162699)->info = (AST_Info)info5537;assign20405 = (Object)new_AST_Assign((Object)localvariable27275, (Object)send162699);// classsend162700 = (Object)new_AST_Send((Object)localvariable27275, (Object)SMB_class, 0);((AST_Send)send162700)->info = (AST_Info)info5537;// shouldsend162701 = (Object)new_AST_Send((Object)send162700, (Object)symbol44402, 0);((AST_Send)send162701)->info = (AST_Info)info5537;// =send162702 = (Object)new_AST_Send((Object)send162701, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162702)->info = (AST_Info)info5537;// variablesend162703 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162703)->info = (AST_Info)info5537;// classsend162704 = (Object)new_AST_Send((Object)send162703, (Object)SMB_class, 0);((AST_Send)send162704)->info = (AST_Info)info5537;// shouldsend162705 = (Object)new_AST_Send((Object)send162704, (Object)symbol44402, 0);((AST_Send)send162705)->info = (AST_Info)info5537;// =send162706 = (Object)new_AST_Send((Object)send162705, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162706)->info = (AST_Info)info5537;// variablesend162707 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162707)->info = (AST_Info)info5537;// namesend162708 = (Object)new_AST_Send((Object)send162707, (Object)SMB_name, 0);((AST_Send)send162708)->info = (AST_Info)info5537;// shouldsend162709 = (Object)new_AST_Send((Object)send162708, (Object)symbol44402, 0);((AST_Send)send162709)->info = (AST_Info)info5537;string27414 = (Object)new_Type_String(L"a");constant35054 = (Object)new_AST_Constant((Object)string27414);// =send162710 = (Object)new_AST_Send((Object)send162709, (Object)SMB__equal, 1, (Object)constant35054);((AST_Send)send162710)->info = (AST_Info)info5537;// expressionsend162711 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44200, 0);((AST_Send)send162711)->info = (AST_Info)info5537;assign20406 = (Object)new_AST_Assign((Object)localvariable27275, (Object)send162711);// classsend162712 = (Object)new_AST_Send((Object)localvariable27275, (Object)SMB_class, 0);((AST_Send)send162712)->info = (AST_Info)info5537;// shouldsend162713 = (Object)new_AST_Send((Object)send162712, (Object)symbol44402, 0);((AST_Send)send162713)->info = (AST_Info)info5537;// =send162714 = (Object)new_AST_Send((Object)send162713, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162714)->info = (AST_Info)info5537;// variablesend162715 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162715)->info = (AST_Info)info5537;// classsend162716 = (Object)new_AST_Send((Object)send162715, (Object)SMB_class, 0);((AST_Send)send162716)->info = (AST_Info)info5537;// shouldsend162717 = (Object)new_AST_Send((Object)send162716, (Object)symbol44402, 0);((AST_Send)send162717)->info = (AST_Info)info5537;// =send162718 = (Object)new_AST_Send((Object)send162717, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162718)->info = (AST_Info)info5537;// variablesend162719 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162719)->info = (AST_Info)info5537;// namesend162720 = (Object)new_AST_Send((Object)send162719, (Object)SMB_name, 0);((AST_Send)send162720)->info = (AST_Info)info5537;// shouldsend162721 = (Object)new_AST_Send((Object)send162720, (Object)symbol44402, 0);((AST_Send)send162721)->info = (AST_Info)info5537;string27415 = (Object)new_Type_String(L"b");constant35055 = (Object)new_AST_Constant((Object)string27415);// =send162722 = (Object)new_AST_Send((Object)send162721, (Object)SMB__equal, 1, (Object)constant35055);((AST_Send)send162722)->info = (AST_Info)info5537;// expressionsend162723 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44200, 0);((AST_Send)send162723)->info = (AST_Info)info5537;assign20407 = (Object)new_AST_Assign((Object)localvariable27275, (Object)send162723);// classsend162724 = (Object)new_AST_Send((Object)localvariable27275, (Object)SMB_class, 0);((AST_Send)send162724)->info = (AST_Info)info5537;// shouldsend162725 = (Object)new_AST_Send((Object)send162724, (Object)symbol44402, 0);((AST_Send)send162725)->info = (AST_Info)info5537;// =send162726 = (Object)new_AST_Send((Object)send162725, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162726)->info = (AST_Info)info5537;// variablesend162727 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162727)->info = (AST_Info)info5537;// classsend162728 = (Object)new_AST_Send((Object)send162727, (Object)SMB_class, 0);((AST_Send)send162728)->info = (AST_Info)info5537;// shouldsend162729 = (Object)new_AST_Send((Object)send162728, (Object)symbol44402, 0);((AST_Send)send162729)->info = (AST_Info)info5537;// =send162730 = (Object)new_AST_Send((Object)send162729, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162730)->info = (AST_Info)info5537;// variablesend162731 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162731)->info = (AST_Info)info5537;// namesend162732 = (Object)new_AST_Send((Object)send162731, (Object)SMB_name, 0);((AST_Send)send162732)->info = (AST_Info)info5537;// shouldsend162733 = (Object)new_AST_Send((Object)send162732, (Object)symbol44402, 0);((AST_Send)send162733)->info = (AST_Info)info5537;string27416 = (Object)new_Type_String(L"c");constant35056 = (Object)new_AST_Constant((Object)string27416);// =send162734 = (Object)new_AST_Send((Object)send162733, (Object)SMB__equal, 1, (Object)constant35056);((AST_Send)send162734)->info = (AST_Info)info5537;// expressionsend162735 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44200, 0);((AST_Send)send162735)->info = (AST_Info)info5537;// classsend162736 = (Object)new_AST_Send((Object)send162735, (Object)SMB_class, 0);((AST_Send)send162736)->info = (AST_Info)info5537;// shouldsend162737 = (Object)new_AST_Send((Object)send162736, (Object)symbol44402, 0);((AST_Send)send162737)->info = (AST_Info)info5537;// =send162738 = (Object)new_AST_Send((Object)send162737, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162738)->info = (AST_Info)info5537;string27417 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");constant35057 = (Object)new_AST_Constant((Object)string27417);// on:send162739 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35057);((AST_Send)send162739)->info = (AST_Info)info5537;assign20408 = (Object)new_AST_Assign((Object)localvariable27274, (Object)send162739);// match:send162740 = (Object)new_AST_Send((Object)localvariable27273, (Object)symbol44329, 1, (Object)localvariable27274);((AST_Send)send162740)->info = (AST_Info)info5537;assign20409 = (Object)new_AST_Assign((Object)localvariable27275, (Object)send162740);// classsend162741 = (Object)new_AST_Send((Object)localvariable27275, (Object)SMB_class, 0);((AST_Send)send162741)->info = (AST_Info)info5537;// shouldsend162742 = (Object)new_AST_Send((Object)send162741, (Object)symbol44402, 0);((AST_Send)send162742)->info = (AST_Info)info5537;// =send162743 = (Object)new_AST_Send((Object)send162742, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162743)->info = (AST_Info)info5537;// variablesend162744 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162744)->info = (AST_Info)info5537;// classsend162745 = (Object)new_AST_Send((Object)send162744, (Object)SMB_class, 0);((AST_Send)send162745)->info = (AST_Info)info5537;// shouldsend162746 = (Object)new_AST_Send((Object)send162745, (Object)symbol44402, 0);((AST_Send)send162746)->info = (AST_Info)info5537;// =send162747 = (Object)new_AST_Send((Object)send162746, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162747)->info = (AST_Info)info5537;// variablesend162748 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162748)->info = (AST_Info)info5537;// namesend162749 = (Object)new_AST_Send((Object)send162748, (Object)SMB_name, 0);((AST_Send)send162749)->info = (AST_Info)info5537;// shouldsend162750 = (Object)new_AST_Send((Object)send162749, (Object)symbol44402, 0);((AST_Send)send162750)->info = (AST_Info)info5537;string27418 = (Object)new_Type_String(L"a");constant35058 = (Object)new_AST_Constant((Object)string27418);// =send162751 = (Object)new_AST_Send((Object)send162750, (Object)SMB__equal, 1, (Object)constant35058);((AST_Send)send162751)->info = (AST_Info)info5537;// expressionsend162752 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44200, 0);((AST_Send)send162752)->info = (AST_Info)info5537;assign20410 = (Object)new_AST_Assign((Object)localvariable27275, (Object)send162752);// classsend162753 = (Object)new_AST_Send((Object)localvariable27275, (Object)SMB_class, 0);((AST_Send)send162753)->info = (AST_Info)info5537;// shouldsend162754 = (Object)new_AST_Send((Object)send162753, (Object)symbol44402, 0);((AST_Send)send162754)->info = (AST_Info)info5537;// =send162755 = (Object)new_AST_Send((Object)send162754, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162755)->info = (AST_Info)info5537;// variablesend162756 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162756)->info = (AST_Info)info5537;// classsend162757 = (Object)new_AST_Send((Object)send162756, (Object)SMB_class, 0);((AST_Send)send162757)->info = (AST_Info)info5537;// shouldsend162758 = (Object)new_AST_Send((Object)send162757, (Object)symbol44402, 0);((AST_Send)send162758)->info = (AST_Info)info5537;// =send162759 = (Object)new_AST_Send((Object)send162758, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162759)->info = (AST_Info)info5537;// variablesend162760 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162760)->info = (AST_Info)info5537;// namesend162761 = (Object)new_AST_Send((Object)send162760, (Object)SMB_name, 0);((AST_Send)send162761)->info = (AST_Info)info5537;// shouldsend162762 = (Object)new_AST_Send((Object)send162761, (Object)symbol44402, 0);((AST_Send)send162762)->info = (AST_Info)info5537;string27419 = (Object)new_Type_String(L"b");constant35059 = (Object)new_AST_Constant((Object)string27419);// =send162763 = (Object)new_AST_Send((Object)send162762, (Object)SMB__equal, 1, (Object)constant35059);((AST_Send)send162763)->info = (AST_Info)info5537;// expressionsend162764 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44200, 0);((AST_Send)send162764)->info = (AST_Info)info5537;assign20411 = (Object)new_AST_Assign((Object)localvariable27275, (Object)send162764);// classsend162765 = (Object)new_AST_Send((Object)localvariable27275, (Object)SMB_class, 0);((AST_Send)send162765)->info = (AST_Info)info5537;// shouldsend162766 = (Object)new_AST_Send((Object)send162765, (Object)symbol44402, 0);((AST_Send)send162766)->info = (AST_Info)info5537;// =send162767 = (Object)new_AST_Send((Object)send162766, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send162767)->info = (AST_Info)info5537;// variablesend162768 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162768)->info = (AST_Info)info5537;// classsend162769 = (Object)new_AST_Send((Object)send162768, (Object)SMB_class, 0);((AST_Send)send162769)->info = (AST_Info)info5537;// shouldsend162770 = (Object)new_AST_Send((Object)send162769, (Object)symbol44402, 0);((AST_Send)send162770)->info = (AST_Info)info5537;// =send162771 = (Object)new_AST_Send((Object)send162770, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send162771)->info = (AST_Info)info5537;// variablesend162772 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44202, 0);((AST_Send)send162772)->info = (AST_Info)info5537;// namesend162773 = (Object)new_AST_Send((Object)send162772, (Object)SMB_name, 0);((AST_Send)send162773)->info = (AST_Info)info5537;// shouldsend162774 = (Object)new_AST_Send((Object)send162773, (Object)symbol44402, 0);((AST_Send)send162774)->info = (AST_Info)info5537;string27420 = (Object)new_Type_String(L"c");constant35060 = (Object)new_AST_Constant((Object)string27420);// =send162775 = (Object)new_AST_Send((Object)send162774, (Object)SMB__equal, 1, (Object)constant35060);((AST_Send)send162775)->info = (AST_Info)info5537;// expressionsend162776 = (Object)new_AST_Send((Object)localvariable27275, (Object)symbol44200, 0);((AST_Send)send162776)->info = (AST_Info)info5537;// classsend162777 = (Object)new_AST_Send((Object)send162776, (Object)SMB_class, 0);((AST_Send)send162777)->info = (AST_Info)info5537;// shouldsend162778 = (Object)new_AST_Send((Object)send162777, (Object)symbol44402, 0);((AST_Send)send162778)->info = (AST_Info)info5537;// =send162779 = (Object)new_AST_Send((Object)send162778, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162779)->info = (AST_Info)info5537;method41280 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24297, 30, assign20403, assign20404, assign20405, send162702, send162706, send162710, assign20406, send162714, send162718, send162722, assign20407, send162726, send162730, send162734, send162738, assign20408, assign20409, send162743, send162747, send162751, assign20410, send162755, send162759, send162763, assign20411, send162767, send162771, send162775, send162779, Self);((AST_Method)method41280)->info = (AST_Info)info5537;symbol44025 = (Object)new_Type_Symbol_cached(L"testFinalExpression");methodclosure41183 = (Object)new_Runtime_MethodClosure(method41280);store_method((Type_Class)class6736, (Type_Symbol)symbol44025, (Runtime_MethodClosure)methodclosure41183);// SCParserTest>>testCharacter//testCharacter// 	| parser string |// 	parser := scparser character.// 	string := PEGStringScanner on: '--'.// 	(parser match: string) should = '-'.// 	string position should = 1.// 	string := PEGStringScanner on: '__'.// 	(parser match: string) should = '_'.// 	string position should = 1.// 	string := PEGStringScanner on: '4'.// 	(parser match: string) should = '4'.// 	string position should = 1.// 	string := PEGStringScanner on: 'p'.// 	(parser match: string) should = 'p'.// 	string position should = 1.// 	string := PEGStringScanner on: '&'.// 	(parser match: string) should = '&'.// 	string position should = 1.// 	string := PEGStringScanner on: ''''.// 	(parser match: string) should be isNil.// 	string position should = 0localvariable27276 = (Object)new_AST_Variable_named(L"parser");localvariable27277 = (Object)new_AST_Variable_named(L"string");array24298 = (Object)new_Type_Array_with(2, (Object)localvariable27276, (Object)localvariable27277);// charactersend162780 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44450, 0);string27421 = (Object)new_Type_String(L"testCharacter");string27422 = (Object)new_Type_String(L"testCharacter\n\t| parser string |\n\tparser := scparser character.\n\tstring := PEGStringScanner on: \'--\'.\n\t(parser match: string) should = \'-\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'__\'.\n\t(parser match: string) should = \'_\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'4\'.\n\t(parser match: string) should = \'4\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'p\'.\n\t(parser match: string) should = \'p\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'&\'.\n\t(parser match: string) should = \'&\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'\'\'\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");smallint27163 = (Object)new_Type_SmallInt(-1);smallint27164 = (Object)new_Type_SmallInt(-1);info5538 = (Object)new_AST_Info((Type_String)string27422,(Type_String)string27421, (Type_SmallInt)smallint27163, (Type_SmallInt)smallint27164);((AST_Send)send162780)->info = (AST_Info)info5538;assign20412 = (Object)new_AST_Assign((Object)localvariable27276, (Object)send162780);string27423 = (Object)new_Type_String(L"--");constant35061 = (Object)new_AST_Constant((Object)string27423);// on:send162781 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35061);((AST_Send)send162781)->info = (AST_Info)info5538;assign20413 = (Object)new_AST_Assign((Object)localvariable27277, (Object)send162781);// match:send162782 = (Object)new_AST_Send((Object)localvariable27276, (Object)symbol44329, 1, (Object)localvariable27277);((AST_Send)send162782)->info = (AST_Info)info5538;// shouldsend162783 = (Object)new_AST_Send((Object)send162782, (Object)symbol44402, 0);((AST_Send)send162783)->info = (AST_Info)info5538;string27424 = (Object)new_Type_String(L"-");constant35062 = (Object)new_AST_Constant((Object)string27424);// =send162784 = (Object)new_AST_Send((Object)send162783, (Object)SMB__equal, 1, (Object)constant35062);((AST_Send)send162784)->info = (AST_Info)info5538;// positionsend162785 = (Object)new_AST_Send((Object)localvariable27277, (Object)symbol44475, 0);((AST_Send)send162785)->info = (AST_Info)info5538;// shouldsend162786 = (Object)new_AST_Send((Object)send162785, (Object)symbol44402, 0);((AST_Send)send162786)->info = (AST_Info)info5538;smallint27165 = (Object)new_Type_SmallInt(1);constant35063 = (Object)new_AST_Constant((Object)smallint27165);// =send162787 = (Object)new_AST_Send((Object)send162786, (Object)SMB__equal, 1, (Object)constant35063);((AST_Send)send162787)->info = (AST_Info)info5538;string27425 = (Object)new_Type_String(L"__");constant35064 = (Object)new_AST_Constant((Object)string27425);// on:send162788 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35064);((AST_Send)send162788)->info = (AST_Info)info5538;assign20414 = (Object)new_AST_Assign((Object)localvariable27277, (Object)send162788);// match:send162789 = (Object)new_AST_Send((Object)localvariable27276, (Object)symbol44329, 1, (Object)localvariable27277);((AST_Send)send162789)->info = (AST_Info)info5538;// shouldsend162790 = (Object)new_AST_Send((Object)send162789, (Object)symbol44402, 0);((AST_Send)send162790)->info = (AST_Info)info5538;string27426 = (Object)new_Type_String(L"_");constant35065 = (Object)new_AST_Constant((Object)string27426);// =send162791 = (Object)new_AST_Send((Object)send162790, (Object)SMB__equal, 1, (Object)constant35065);((AST_Send)send162791)->info = (AST_Info)info5538;// positionsend162792 = (Object)new_AST_Send((Object)localvariable27277, (Object)symbol44475, 0);((AST_Send)send162792)->info = (AST_Info)info5538;// shouldsend162793 = (Object)new_AST_Send((Object)send162792, (Object)symbol44402, 0);((AST_Send)send162793)->info = (AST_Info)info5538;smallint27166 = (Object)new_Type_SmallInt(1);constant35066 = (Object)new_AST_Constant((Object)smallint27166);// =send162794 = (Object)new_AST_Send((Object)send162793, (Object)SMB__equal, 1, (Object)constant35066);((AST_Send)send162794)->info = (AST_Info)info5538;string27427 = (Object)new_Type_String(L"4");constant35067 = (Object)new_AST_Constant((Object)string27427);// on:send162795 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35067);((AST_Send)send162795)->info = (AST_Info)info5538;assign20415 = (Object)new_AST_Assign((Object)localvariable27277, (Object)send162795);// match:send162796 = (Object)new_AST_Send((Object)localvariable27276, (Object)symbol44329, 1, (Object)localvariable27277);((AST_Send)send162796)->info = (AST_Info)info5538;// shouldsend162797 = (Object)new_AST_Send((Object)send162796, (Object)symbol44402, 0);((AST_Send)send162797)->info = (AST_Info)info5538;string27428 = (Object)new_Type_String(L"4");constant35068 = (Object)new_AST_Constant((Object)string27428);// =send162798 = (Object)new_AST_Send((Object)send162797, (Object)SMB__equal, 1, (Object)constant35068);((AST_Send)send162798)->info = (AST_Info)info5538;// positionsend162799 = (Object)new_AST_Send((Object)localvariable27277, (Object)symbol44475, 0);((AST_Send)send162799)->info = (AST_Info)info5538;// shouldsend162800 = (Object)new_AST_Send((Object)send162799, (Object)symbol44402, 0);((AST_Send)send162800)->info = (AST_Info)info5538;smallint27167 = (Object)new_Type_SmallInt(1);constant35069 = (Object)new_AST_Constant((Object)smallint27167);// =send162801 = (Object)new_AST_Send((Object)send162800, (Object)SMB__equal, 1, (Object)constant35069);((AST_Send)send162801)->info = (AST_Info)info5538;string27429 = (Object)new_Type_String(L"p");constant35070 = (Object)new_AST_Constant((Object)string27429);// on:send162802 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35070);((AST_Send)send162802)->info = (AST_Info)info5538;assign20416 = (Object)new_AST_Assign((Object)localvariable27277, (Object)send162802);// match:send162803 = (Object)new_AST_Send((Object)localvariable27276, (Object)symbol44329, 1, (Object)localvariable27277);((AST_Send)send162803)->info = (AST_Info)info5538;// shouldsend162804 = (Object)new_AST_Send((Object)send162803, (Object)symbol44402, 0);((AST_Send)send162804)->info = (AST_Info)info5538;string27430 = (Object)new_Type_String(L"p");constant35071 = (Object)new_AST_Constant((Object)string27430);// =send162805 = (Object)new_AST_Send((Object)send162804, (Object)SMB__equal, 1, (Object)constant35071);((AST_Send)send162805)->info = (AST_Info)info5538;// positionsend162806 = (Object)new_AST_Send((Object)localvariable27277, (Object)symbol44475, 0);((AST_Send)send162806)->info = (AST_Info)info5538;// shouldsend162807 = (Object)new_AST_Send((Object)send162806, (Object)symbol44402, 0);((AST_Send)send162807)->info = (AST_Info)info5538;smallint27168 = (Object)new_Type_SmallInt(1);constant35072 = (Object)new_AST_Constant((Object)smallint27168);// =send162808 = (Object)new_AST_Send((Object)send162807, (Object)SMB__equal, 1, (Object)constant35072);((AST_Send)send162808)->info = (AST_Info)info5538;string27431 = (Object)new_Type_String(L"&");constant35073 = (Object)new_AST_Constant((Object)string27431);// on:send162809 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35073);((AST_Send)send162809)->info = (AST_Info)info5538;assign20417 = (Object)new_AST_Assign((Object)localvariable27277, (Object)send162809);// match:send162810 = (Object)new_AST_Send((Object)localvariable27276, (Object)symbol44329, 1, (Object)localvariable27277);((AST_Send)send162810)->info = (AST_Info)info5538;// shouldsend162811 = (Object)new_AST_Send((Object)send162810, (Object)symbol44402, 0);((AST_Send)send162811)->info = (AST_Info)info5538;string27432 = (Object)new_Type_String(L"&");constant35074 = (Object)new_AST_Constant((Object)string27432);// =send162812 = (Object)new_AST_Send((Object)send162811, (Object)SMB__equal, 1, (Object)constant35074);((AST_Send)send162812)->info = (AST_Info)info5538;// positionsend162813 = (Object)new_AST_Send((Object)localvariable27277, (Object)symbol44475, 0);((AST_Send)send162813)->info = (AST_Info)info5538;// shouldsend162814 = (Object)new_AST_Send((Object)send162813, (Object)symbol44402, 0);((AST_Send)send162814)->info = (AST_Info)info5538;smallint27169 = (Object)new_Type_SmallInt(1);constant35075 = (Object)new_AST_Constant((Object)smallint27169);// =send162815 = (Object)new_AST_Send((Object)send162814, (Object)SMB__equal, 1, (Object)constant35075);((AST_Send)send162815)->info = (AST_Info)info5538;string27433 = (Object)new_Type_String(L"\'");constant35076 = (Object)new_AST_Constant((Object)string27433);// on:send162816 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35076);((AST_Send)send162816)->info = (AST_Info)info5538;assign20418 = (Object)new_AST_Assign((Object)localvariable27277, (Object)send162816);// match:send162817 = (Object)new_AST_Send((Object)localvariable27276, (Object)symbol44329, 1, (Object)localvariable27277);((AST_Send)send162817)->info = (AST_Info)info5538;// shouldsend162818 = (Object)new_AST_Send((Object)send162817, (Object)symbol44402, 0);((AST_Send)send162818)->info = (AST_Info)info5538;// besend162819 = (Object)new_AST_Send((Object)send162818, (Object)symbol44476, 0);((AST_Send)send162819)->info = (AST_Info)info5538;// isNilsend162820 = (Object)new_AST_Send((Object)send162819, (Object)SMB_isNil, 0);((AST_Send)send162820)->info = (AST_Info)info5538;// positionsend162821 = (Object)new_AST_Send((Object)localvariable27277, (Object)symbol44475, 0);((AST_Send)send162821)->info = (AST_Info)info5538;// shouldsend162822 = (Object)new_AST_Send((Object)send162821, (Object)symbol44402, 0);((AST_Send)send162822)->info = (AST_Info)info5538;smallint27170 = (Object)new_Type_SmallInt(0);constant35077 = (Object)new_AST_Constant((Object)smallint27170);// =send162823 = (Object)new_AST_Send((Object)send162822, (Object)SMB__equal, 1, (Object)constant35077);((AST_Send)send162823)->info = (AST_Info)info5538;method41281 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24298, 20, assign20412, assign20413, send162784, send162787, assign20414, send162791, send162794, assign20415, send162798, send162801, assign20416, send162805, send162808, assign20417, send162812, send162815, assign20418, send162820, send162823, Self);((AST_Method)method41281)->info = (AST_Info)info5538;symbol44037 = (Object)new_Type_Symbol_cached(L"testCharacter");methodclosure41184 = (Object)new_Runtime_MethodClosure(method41281);store_method((Type_Class)class6736, (Type_Symbol)symbol44037, (Runtime_MethodClosure)methodclosure41184);// SCParserTest>>testSeparator//testSeparator// 	| parser string |// 	parser := scparser separator.// 	string := PEGStringScanner on: '"Test"'.// 	(parser match: string) should not be isNil.// 	string position should = 6.// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.// 	(parser match: string) should not be isNil.// 	string position should = 18.// 	string := PEGStringScanner on: ''.// 	(parser match: string) should not be isNil.// 	string position should = 0localvariable27278 = (Object)new_AST_Variable_named(L"parser");localvariable27279 = (Object)new_AST_Variable_named(L"string");array24299 = (Object)new_Type_Array_with(2, (Object)localvariable27278, (Object)localvariable27279);// separatorsend162824 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44342, 0);string27434 = (Object)new_Type_String(L"testSeparator");string27435 = (Object)new_Type_String(L"testSeparator\n\t| parser string |\n\tparser := scparser separator.\n\tstring := PEGStringScanner on: \'\"Test\"\'.\n\t(parser match: string) should not be isNil.\n\tstring position should = 6.\n\tstring := PEGStringScanner on: \' \t\"Test\" \"boe\"\t\"\" ab\'.\n\t(parser match: string) should not be isNil.\n\tstring position should = 18.\n\tstring := PEGStringScanner on: \'\'.\n\t(parser match: string) should not be isNil.\n\tstring position should = 0");smallint27171 = (Object)new_Type_SmallInt(-1);smallint27172 = (Object)new_Type_SmallInt(-1);info5539 = (Object)new_AST_Info((Type_String)string27435,(Type_String)string27434, (Type_SmallInt)smallint27171, (Type_SmallInt)smallint27172);((AST_Send)send162824)->info = (AST_Info)info5539;assign20419 = (Object)new_AST_Assign((Object)localvariable27278, (Object)send162824);string27436 = (Object)new_Type_String(L"\"Test\"");constant35078 = (Object)new_AST_Constant((Object)string27436);// on:send162825 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35078);((AST_Send)send162825)->info = (AST_Info)info5539;assign20420 = (Object)new_AST_Assign((Object)localvariable27279, (Object)send162825);// match:send162826 = (Object)new_AST_Send((Object)localvariable27278, (Object)symbol44329, 1, (Object)localvariable27279);((AST_Send)send162826)->info = (AST_Info)info5539;// shouldsend162827 = (Object)new_AST_Send((Object)send162826, (Object)symbol44402, 0);((AST_Send)send162827)->info = (AST_Info)info5539;// notsend162828 = (Object)new_AST_Send((Object)send162827, (Object)SMB_not, 0);((AST_Send)send162828)->info = (AST_Info)info5539;// besend162829 = (Object)new_AST_Send((Object)send162828, (Object)symbol44476, 0);((AST_Send)send162829)->info = (AST_Info)info5539;// isNilsend162830 = (Object)new_AST_Send((Object)send162829, (Object)SMB_isNil, 0);((AST_Send)send162830)->info = (AST_Info)info5539;// positionsend162831 = (Object)new_AST_Send((Object)localvariable27279, (Object)symbol44475, 0);((AST_Send)send162831)->info = (AST_Info)info5539;// shouldsend162832 = (Object)new_AST_Send((Object)send162831, (Object)symbol44402, 0);((AST_Send)send162832)->info = (AST_Info)info5539;smallint27173 = (Object)new_Type_SmallInt(6);constant35079 = (Object)new_AST_Constant((Object)smallint27173);// =send162833 = (Object)new_AST_Send((Object)send162832, (Object)SMB__equal, 1, (Object)constant35079);((AST_Send)send162833)->info = (AST_Info)info5539;string27437 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");constant35080 = (Object)new_AST_Constant((Object)string27437);// on:send162834 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35080);((AST_Send)send162834)->info = (AST_Info)info5539;assign20421 = (Object)new_AST_Assign((Object)localvariable27279, (Object)send162834);// match:send162835 = (Object)new_AST_Send((Object)localvariable27278, (Object)symbol44329, 1, (Object)localvariable27279);((AST_Send)send162835)->info = (AST_Info)info5539;// shouldsend162836 = (Object)new_AST_Send((Object)send162835, (Object)symbol44402, 0);((AST_Send)send162836)->info = (AST_Info)info5539;// notsend162837 = (Object)new_AST_Send((Object)send162836, (Object)SMB_not, 0);((AST_Send)send162837)->info = (AST_Info)info5539;// besend162838 = (Object)new_AST_Send((Object)send162837, (Object)symbol44476, 0);((AST_Send)send162838)->info = (AST_Info)info5539;// isNilsend162839 = (Object)new_AST_Send((Object)send162838, (Object)SMB_isNil, 0);((AST_Send)send162839)->info = (AST_Info)info5539;// positionsend162840 = (Object)new_AST_Send((Object)localvariable27279, (Object)symbol44475, 0);((AST_Send)send162840)->info = (AST_Info)info5539;// shouldsend162841 = (Object)new_AST_Send((Object)send162840, (Object)symbol44402, 0);((AST_Send)send162841)->info = (AST_Info)info5539;smallint27174 = (Object)new_Type_SmallInt(18);constant35081 = (Object)new_AST_Constant((Object)smallint27174);// =send162842 = (Object)new_AST_Send((Object)send162841, (Object)SMB__equal, 1, (Object)constant35081);((AST_Send)send162842)->info = (AST_Info)info5539;string27438 = (Object)new_Type_String(L"");constant35082 = (Object)new_AST_Constant((Object)string27438);// on:send162843 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35082);((AST_Send)send162843)->info = (AST_Info)info5539;assign20422 = (Object)new_AST_Assign((Object)localvariable27279, (Object)send162843);// match:send162844 = (Object)new_AST_Send((Object)localvariable27278, (Object)symbol44329, 1, (Object)localvariable27279);((AST_Send)send162844)->info = (AST_Info)info5539;// shouldsend162845 = (Object)new_AST_Send((Object)send162844, (Object)symbol44402, 0);((AST_Send)send162845)->info = (AST_Info)info5539;// notsend162846 = (Object)new_AST_Send((Object)send162845, (Object)SMB_not, 0);((AST_Send)send162846)->info = (AST_Info)info5539;// besend162847 = (Object)new_AST_Send((Object)send162846, (Object)symbol44476, 0);((AST_Send)send162847)->info = (AST_Info)info5539;// isNilsend162848 = (Object)new_AST_Send((Object)send162847, (Object)SMB_isNil, 0);((AST_Send)send162848)->info = (AST_Info)info5539;// positionsend162849 = (Object)new_AST_Send((Object)localvariable27279, (Object)symbol44475, 0);((AST_Send)send162849)->info = (AST_Info)info5539;// shouldsend162850 = (Object)new_AST_Send((Object)send162849, (Object)symbol44402, 0);((AST_Send)send162850)->info = (AST_Info)info5539;smallint27175 = (Object)new_Type_SmallInt(0);constant35083 = (Object)new_AST_Constant((Object)smallint27175);// =send162851 = (Object)new_AST_Send((Object)send162850, (Object)SMB__equal, 1, (Object)constant35083);((AST_Send)send162851)->info = (AST_Info)info5539;method41282 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24299, 11, assign20419, assign20420, send162830, send162833, assign20421, send162839, send162842, assign20422, send162848, send162851, Self);((AST_Method)method41282)->info = (AST_Info)info5539;symbol44065 = (Object)new_Type_Symbol_cached(L"testSeparator");methodclosure41185 = (Object)new_Runtime_MethodClosure(method41282);store_method((Type_Class)class6736, (Type_Symbol)symbol44065, (Runtime_MethodClosure)methodclosure41185);// SCParserTest>>testString//testString// 	| parser string |// 	parser := scparser string.// 	string := PEGStringScanner on: ''.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '''abc'''.// 	(parser match: string) should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc'''''.// 	(parser match: string) should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc''''d'''.// 	(parser match: string) should = 'abc''d'.// 	string position should = 8localvariable27280 = (Object)new_AST_Variable_named(L"parser");localvariable27281 = (Object)new_AST_Variable_named(L"string");array24300 = (Object)new_Type_Array_with(2, (Object)localvariable27280, (Object)localvariable27281);// stringsend162852 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44197, 0);string27439 = (Object)new_Type_String(L"testString");string27440 = (Object)new_Type_String(L"testString\n\t| parser string |\n\tparser := scparser string.\n\tstring := PEGStringScanner on: \'\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'.\n\t(parser match: string) should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'\'.\n\t(parser match: string) should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'d\'\'\'.\n\t(parser match: string) should = \'abc\'\'d\'.\n\tstring position should = 8");smallint27176 = (Object)new_Type_SmallInt(-1);smallint27177 = (Object)new_Type_SmallInt(-1);info5540 = (Object)new_AST_Info((Type_String)string27440,(Type_String)string27439, (Type_SmallInt)smallint27176, (Type_SmallInt)smallint27177);((AST_Send)send162852)->info = (AST_Info)info5540;assign20423 = (Object)new_AST_Assign((Object)localvariable27280, (Object)send162852);string27441 = (Object)new_Type_String(L"");constant35084 = (Object)new_AST_Constant((Object)string27441);// on:send162853 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35084);((AST_Send)send162853)->info = (AST_Info)info5540;assign20424 = (Object)new_AST_Assign((Object)localvariable27281, (Object)send162853);// match:send162854 = (Object)new_AST_Send((Object)localvariable27280, (Object)symbol44329, 1, (Object)localvariable27281);((AST_Send)send162854)->info = (AST_Info)info5540;// shouldsend162855 = (Object)new_AST_Send((Object)send162854, (Object)symbol44402, 0);((AST_Send)send162855)->info = (AST_Info)info5540;// besend162856 = (Object)new_AST_Send((Object)send162855, (Object)symbol44476, 0);((AST_Send)send162856)->info = (AST_Info)info5540;// isNilsend162857 = (Object)new_AST_Send((Object)send162856, (Object)SMB_isNil, 0);((AST_Send)send162857)->info = (AST_Info)info5540;// positionsend162858 = (Object)new_AST_Send((Object)localvariable27281, (Object)symbol44475, 0);((AST_Send)send162858)->info = (AST_Info)info5540;// shouldsend162859 = (Object)new_AST_Send((Object)send162858, (Object)symbol44402, 0);((AST_Send)send162859)->info = (AST_Info)info5540;smallint27178 = (Object)new_Type_SmallInt(0);constant35085 = (Object)new_AST_Constant((Object)smallint27178);// =send162860 = (Object)new_AST_Send((Object)send162859, (Object)SMB__equal, 1, (Object)constant35085);((AST_Send)send162860)->info = (AST_Info)info5540;string27442 = (Object)new_Type_String(L"\'abc\'");constant35086 = (Object)new_AST_Constant((Object)string27442);// on:send162861 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35086);((AST_Send)send162861)->info = (AST_Info)info5540;assign20425 = (Object)new_AST_Assign((Object)localvariable27281, (Object)send162861);// match:send162862 = (Object)new_AST_Send((Object)localvariable27280, (Object)symbol44329, 1, (Object)localvariable27281);((AST_Send)send162862)->info = (AST_Info)info5540;// shouldsend162863 = (Object)new_AST_Send((Object)send162862, (Object)symbol44402, 0);((AST_Send)send162863)->info = (AST_Info)info5540;string27443 = (Object)new_Type_String(L"abc");constant35087 = (Object)new_AST_Constant((Object)string27443);// =send162864 = (Object)new_AST_Send((Object)send162863, (Object)SMB__equal, 1, (Object)constant35087);((AST_Send)send162864)->info = (AST_Info)info5540;// positionsend162865 = (Object)new_AST_Send((Object)localvariable27281, (Object)symbol44475, 0);((AST_Send)send162865)->info = (AST_Info)info5540;// shouldsend162866 = (Object)new_AST_Send((Object)send162865, (Object)symbol44402, 0);((AST_Send)send162866)->info = (AST_Info)info5540;smallint27179 = (Object)new_Type_SmallInt(5);constant35088 = (Object)new_AST_Constant((Object)smallint27179);// =send162867 = (Object)new_AST_Send((Object)send162866, (Object)SMB__equal, 1, (Object)constant35088);((AST_Send)send162867)->info = (AST_Info)info5540;string27444 = (Object)new_Type_String(L"\'abc\'\'");constant35089 = (Object)new_AST_Constant((Object)string27444);// on:send162868 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35089);((AST_Send)send162868)->info = (AST_Info)info5540;assign20426 = (Object)new_AST_Assign((Object)localvariable27281, (Object)send162868);// match:send162869 = (Object)new_AST_Send((Object)localvariable27280, (Object)symbol44329, 1, (Object)localvariable27281);((AST_Send)send162869)->info = (AST_Info)info5540;// shouldsend162870 = (Object)new_AST_Send((Object)send162869, (Object)symbol44402, 0);((AST_Send)send162870)->info = (AST_Info)info5540;string27445 = (Object)new_Type_String(L"abc");constant35090 = (Object)new_AST_Constant((Object)string27445);// =send162871 = (Object)new_AST_Send((Object)send162870, (Object)SMB__equal, 1, (Object)constant35090);((AST_Send)send162871)->info = (AST_Info)info5540;// positionsend162872 = (Object)new_AST_Send((Object)localvariable27281, (Object)symbol44475, 0);((AST_Send)send162872)->info = (AST_Info)info5540;// shouldsend162873 = (Object)new_AST_Send((Object)send162872, (Object)symbol44402, 0);((AST_Send)send162873)->info = (AST_Info)info5540;smallint27180 = (Object)new_Type_SmallInt(5);constant35091 = (Object)new_AST_Constant((Object)smallint27180);// =send162874 = (Object)new_AST_Send((Object)send162873, (Object)SMB__equal, 1, (Object)constant35091);((AST_Send)send162874)->info = (AST_Info)info5540;string27446 = (Object)new_Type_String(L"\'abc\'\'d\'");constant35092 = (Object)new_AST_Constant((Object)string27446);// on:send162875 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35092);((AST_Send)send162875)->info = (AST_Info)info5540;assign20427 = (Object)new_AST_Assign((Object)localvariable27281, (Object)send162875);// match:send162876 = (Object)new_AST_Send((Object)localvariable27280, (Object)symbol44329, 1, (Object)localvariable27281);((AST_Send)send162876)->info = (AST_Info)info5540;// shouldsend162877 = (Object)new_AST_Send((Object)send162876, (Object)symbol44402, 0);((AST_Send)send162877)->info = (AST_Info)info5540;string27447 = (Object)new_Type_String(L"abc\'d");constant35093 = (Object)new_AST_Constant((Object)string27447);// =send162878 = (Object)new_AST_Send((Object)send162877, (Object)SMB__equal, 1, (Object)constant35093);((AST_Send)send162878)->info = (AST_Info)info5540;// positionsend162879 = (Object)new_AST_Send((Object)localvariable27281, (Object)symbol44475, 0);((AST_Send)send162879)->info = (AST_Info)info5540;// shouldsend162880 = (Object)new_AST_Send((Object)send162879, (Object)symbol44402, 0);((AST_Send)send162880)->info = (AST_Info)info5540;smallint27181 = (Object)new_Type_SmallInt(8);constant35094 = (Object)new_AST_Constant((Object)smallint27181);// =send162881 = (Object)new_AST_Send((Object)send162880, (Object)SMB__equal, 1, (Object)constant35094);((AST_Send)send162881)->info = (AST_Info)info5540;method41283 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24300, 14, assign20423, assign20424, send162857, send162860, assign20425, send162864, send162867, assign20426, send162871, send162874, assign20427, send162878, send162881, Self);((AST_Method)method41283)->info = (AST_Info)info5540;symbol44057 = (Object)new_Type_Symbol_cached(L"testString");methodclosure41186 = (Object)new_Runtime_MethodClosure(method41283);store_method((Type_Class)class6736, (Type_Symbol)symbol44057, (Runtime_MethodClosure)methodclosure41186);// SCParserTest>>testMessageExpression//testMessageExpression// 	| parser string result |// // 	parser := scparser messageExpression.// // 	string := PEGStringScanner on: 'super+4'.//  	result := (parser match: string).// 	result class should = ASTBinaryExpression.// 	result receiver class should = ASTSuper.// // 	string := PEGStringScanner on: 'self a: 4 b: 3'.//  	result := (parser match: string).// 	result class should = ASTMessageExpression.// 	result receiver class should = ASTSelf.// 	// 	string := PEGStringScanner on: '2 d'.//  	result := (parser match: string).// 	result class should = ASTUnaryExpression.// 	result receiver class should = ASTNumber.// 	result receiver asInteger should = 2.// 	localvariable27282 = (Object)new_AST_Variable_named(L"parser");localvariable27283 = (Object)new_AST_Variable_named(L"string");localvariable27284 = (Object)new_AST_Variable_named(L"result");array24301 = (Object)new_Type_Array_with(3, (Object)localvariable27282, (Object)localvariable27283, (Object)localvariable27284);// messageExpressionsend162882 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44423, 0);string27448 = (Object)new_Type_String(L"testMessageExpression");string27449 = (Object)new_Type_String(L"testMessageExpression\n\t| parser string result |\n\n\tparser := scparser messageExpression.\n\n\tstring := PEGStringScanner on: \'super+4\'.\n \tresult := (parser match: string).\n\tresult class should = ASTBinaryExpression.\n\tresult receiver class should = ASTSuper.\n\n\tstring := PEGStringScanner on: \'self a: 4 b: 3\'.\n \tresult := (parser match: string).\n\tresult class should = ASTMessageExpression.\n\tresult receiver class should = ASTSelf.\n\t\n\tstring := PEGStringScanner on: \'2 d\'.\n \tresult := (parser match: string).\n\tresult class should = ASTUnaryExpression.\n\tresult receiver class should = ASTNumber.\n\tresult receiver asInteger should = 2.\n\t");smallint27182 = (Object)new_Type_SmallInt(-1);smallint27183 = (Object)new_Type_SmallInt(-1);info5541 = (Object)new_AST_Info((Type_String)string27449,(Type_String)string27448, (Type_SmallInt)smallint27182, (Type_SmallInt)smallint27183);((AST_Send)send162882)->info = (AST_Info)info5541;assign20428 = (Object)new_AST_Assign((Object)localvariable27282, (Object)send162882);string27450 = (Object)new_Type_String(L"super+4");constant35095 = (Object)new_AST_Constant((Object)string27450);// on:send162883 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35095);((AST_Send)send162883)->info = (AST_Info)info5541;assign20429 = (Object)new_AST_Assign((Object)localvariable27283, (Object)send162883);// match:send162884 = (Object)new_AST_Send((Object)localvariable27282, (Object)symbol44329, 1, (Object)localvariable27283);((AST_Send)send162884)->info = (AST_Info)info5541;assign20430 = (Object)new_AST_Assign((Object)localvariable27284, (Object)send162884);// classsend162885 = (Object)new_AST_Send((Object)localvariable27284, (Object)SMB_class, 0);((AST_Send)send162885)->info = (AST_Info)info5541;// shouldsend162886 = (Object)new_AST_Send((Object)send162885, (Object)symbol44402, 0);((AST_Send)send162886)->info = (AST_Info)info5541;// =send162887 = (Object)new_AST_Send((Object)send162886, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send162887)->info = (AST_Info)info5541;// receiversend162888 = (Object)new_AST_Send((Object)localvariable27284, (Object)symbol44218, 0);((AST_Send)send162888)->info = (AST_Info)info5541;// classsend162889 = (Object)new_AST_Send((Object)send162888, (Object)SMB_class, 0);((AST_Send)send162889)->info = (AST_Info)info5541;// shouldsend162890 = (Object)new_AST_Send((Object)send162889, (Object)symbol44402, 0);((AST_Send)send162890)->info = (AST_Info)info5541;// =send162891 = (Object)new_AST_Send((Object)send162890, (Object)SMB__equal, 1, (Object)classreference13423);((AST_Send)send162891)->info = (AST_Info)info5541;string27451 = (Object)new_Type_String(L"self a: 4 b: 3");constant35096 = (Object)new_AST_Constant((Object)string27451);// on:send162892 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35096);((AST_Send)send162892)->info = (AST_Info)info5541;assign20431 = (Object)new_AST_Assign((Object)localvariable27283, (Object)send162892);// match:send162893 = (Object)new_AST_Send((Object)localvariable27282, (Object)symbol44329, 1, (Object)localvariable27283);((AST_Send)send162893)->info = (AST_Info)info5541;assign20432 = (Object)new_AST_Assign((Object)localvariable27284, (Object)send162893);// classsend162894 = (Object)new_AST_Send((Object)localvariable27284, (Object)SMB_class, 0);((AST_Send)send162894)->info = (AST_Info)info5541;// shouldsend162895 = (Object)new_AST_Send((Object)send162894, (Object)symbol44402, 0);((AST_Send)send162895)->info = (AST_Info)info5541;// =send162896 = (Object)new_AST_Send((Object)send162895, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162896)->info = (AST_Info)info5541;// receiversend162897 = (Object)new_AST_Send((Object)localvariable27284, (Object)symbol44218, 0);((AST_Send)send162897)->info = (AST_Info)info5541;// classsend162898 = (Object)new_AST_Send((Object)send162897, (Object)SMB_class, 0);((AST_Send)send162898)->info = (AST_Info)info5541;// shouldsend162899 = (Object)new_AST_Send((Object)send162898, (Object)symbol44402, 0);((AST_Send)send162899)->info = (AST_Info)info5541;// =send162900 = (Object)new_AST_Send((Object)send162899, (Object)SMB__equal, 1, (Object)classreference13398);((AST_Send)send162900)->info = (AST_Info)info5541;string27452 = (Object)new_Type_String(L"2 d");constant35097 = (Object)new_AST_Constant((Object)string27452);// on:send162901 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35097);((AST_Send)send162901)->info = (AST_Info)info5541;assign20433 = (Object)new_AST_Assign((Object)localvariable27283, (Object)send162901);// match:send162902 = (Object)new_AST_Send((Object)localvariable27282, (Object)symbol44329, 1, (Object)localvariable27283);((AST_Send)send162902)->info = (AST_Info)info5541;assign20434 = (Object)new_AST_Assign((Object)localvariable27284, (Object)send162902);// classsend162903 = (Object)new_AST_Send((Object)localvariable27284, (Object)SMB_class, 0);((AST_Send)send162903)->info = (AST_Info)info5541;// shouldsend162904 = (Object)new_AST_Send((Object)send162903, (Object)symbol44402, 0);((AST_Send)send162904)->info = (AST_Info)info5541;// =send162905 = (Object)new_AST_Send((Object)send162904, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send162905)->info = (AST_Info)info5541;// receiversend162906 = (Object)new_AST_Send((Object)localvariable27284, (Object)symbol44218, 0);((AST_Send)send162906)->info = (AST_Info)info5541;// classsend162907 = (Object)new_AST_Send((Object)send162906, (Object)SMB_class, 0);((AST_Send)send162907)->info = (AST_Info)info5541;// shouldsend162908 = (Object)new_AST_Send((Object)send162907, (Object)symbol44402, 0);((AST_Send)send162908)->info = (AST_Info)info5541;// =send162909 = (Object)new_AST_Send((Object)send162908, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send162909)->info = (AST_Info)info5541;// receiversend162910 = (Object)new_AST_Send((Object)localvariable27284, (Object)symbol44218, 0);((AST_Send)send162910)->info = (AST_Info)info5541;// asIntegersend162911 = (Object)new_AST_Send((Object)send162910, (Object)symbol44188, 0);((AST_Send)send162911)->info = (AST_Info)info5541;// shouldsend162912 = (Object)new_AST_Send((Object)send162911, (Object)symbol44402, 0);((AST_Send)send162912)->info = (AST_Info)info5541;smallint27184 = (Object)new_Type_SmallInt(2);constant35098 = (Object)new_AST_Constant((Object)smallint27184);// =send162913 = (Object)new_AST_Send((Object)send162912, (Object)SMB__equal, 1, (Object)constant35098);((AST_Send)send162913)->info = (AST_Info)info5541;method41284 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24301, 15, assign20428, assign20429, assign20430, send162887, send162891, assign20431, assign20432, send162896, send162900, assign20433, assign20434, send162905, send162909, send162913, Self);((AST_Method)method41284)->info = (AST_Info)info5541;symbol44085 = (Object)new_Type_Symbol_cached(L"testMessageExpression");methodclosure41187 = (Object)new_Runtime_MethodClosure(method41284);store_method((Type_Class)class6736, (Type_Symbol)symbol44085, (Runtime_MethodClosure)methodclosure41187);// SCParserTest>>testMethod//testMethod// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// // 	| parser string result |// 	parser := scparser method.// 	string := 'a: b c: d// 			|x y z|// 			<abc: 1 def: (2+2) ghi: (3 b)>// 			<a: 4>// 			<boe>// 			1 + [ |a| a ] value: 3.// 			^ 7 '.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message class should = ASTKeywordMessageDefinition.// 	result temporaries size should = 3.// 	result annotations size should = 3.// 	result statements size should = 2localvariable27285 = (Object)new_AST_Variable_named(L"parser");localvariable27286 = (Object)new_AST_Variable_named(L"string");localvariable27287 = (Object)new_AST_Variable_named(L"result");array24302 = (Object)new_Type_Array_with(3, (Object)localvariable27285, (Object)localvariable27286, (Object)localvariable27287);// methodsend162914 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44477, 0);string27453 = (Object)new_Type_String(L"testMethod");string27454 = (Object)new_Type_String(L"testMethod\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 \'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message class should = ASTKeywordMessageDefinition.\n\tresult temporaries size should = 3.\n\tresult annotations size should = 3.\n\tresult statements size should = 2");smallint27185 = (Object)new_Type_SmallInt(-1);smallint27186 = (Object)new_Type_SmallInt(-1);info5542 = (Object)new_AST_Info((Type_String)string27454,(Type_String)string27453, (Type_SmallInt)smallint27185, (Type_SmallInt)smallint27186);((AST_Send)send162914)->info = (AST_Info)info5542;assign20435 = (Object)new_AST_Assign((Object)localvariable27285, (Object)send162914);string27455 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");constant35099 = (Object)new_AST_Constant((Object)string27455);assign20436 = (Object)new_AST_Assign((Object)localvariable27286, (Object)constant35099);// parse:send162915 = (Object)new_AST_Send((Object)localvariable27285, (Object)symbol44349, 1, (Object)localvariable27286);((AST_Send)send162915)->info = (AST_Info)info5542;assign20437 = (Object)new_AST_Assign((Object)localvariable27287, (Object)send162915);// hasReturnExpressionsend162916 = (Object)new_AST_Send((Object)localvariable27287, (Object)symbol44169, 0);((AST_Send)send162916)->info = (AST_Info)info5542;// shouldsend162917 = (Object)new_AST_Send((Object)send162916, (Object)symbol44402, 0);((AST_Send)send162917)->info = (AST_Info)info5542;// besend162918 = (Object)new_AST_Send((Object)send162917, (Object)symbol44476, 0);((AST_Send)send162918)->info = (AST_Info)info5542;// truesend162919 = (Object)new_AST_Send((Object)send162918, (Object)symbol44478, 0);((AST_Send)send162919)->info = (AST_Info)info5542;// classsend162920 = (Object)new_AST_Send((Object)localvariable27287, (Object)SMB_class, 0);((AST_Send)send162920)->info = (AST_Info)info5542;// shouldsend162921 = (Object)new_AST_Send((Object)send162920, (Object)symbol44402, 0);((AST_Send)send162921)->info = (AST_Info)info5542;// =send162922 = (Object)new_AST_Send((Object)send162921, (Object)SMB__equal, 1, (Object)classreference13419);((AST_Send)send162922)->info = (AST_Info)info5542;// messagesend162923 = (Object)new_AST_Send((Object)localvariable27287, (Object)symbol44229, 0);((AST_Send)send162923)->info = (AST_Info)info5542;// classsend162924 = (Object)new_AST_Send((Object)send162923, (Object)SMB_class, 0);((AST_Send)send162924)->info = (AST_Info)info5542;// shouldsend162925 = (Object)new_AST_Send((Object)send162924, (Object)symbol44402, 0);((AST_Send)send162925)->info = (AST_Info)info5542;// =send162926 = (Object)new_AST_Send((Object)send162925, (Object)SMB__equal, 1, (Object)classreference13394);((AST_Send)send162926)->info = (AST_Info)info5542;// temporariessend162927 = (Object)new_AST_Send((Object)localvariable27287, (Object)symbol44230, 0);((AST_Send)send162927)->info = (AST_Info)info5542;// sizesend162928 = (Object)new_AST_Send((Object)send162927, (Object)SMB_size, 0);((AST_Send)send162928)->info = (AST_Info)info5542;// shouldsend162929 = (Object)new_AST_Send((Object)send162928, (Object)symbol44402, 0);((AST_Send)send162929)->info = (AST_Info)info5542;smallint27187 = (Object)new_Type_SmallInt(3);constant35100 = (Object)new_AST_Constant((Object)smallint27187);// =send162930 = (Object)new_AST_Send((Object)send162929, (Object)SMB__equal, 1, (Object)constant35100);((AST_Send)send162930)->info = (AST_Info)info5542;// annotationssend162931 = (Object)new_AST_Send((Object)localvariable27287, (Object)symbol44227, 0);((AST_Send)send162931)->info = (AST_Info)info5542;// sizesend162932 = (Object)new_AST_Send((Object)send162931, (Object)SMB_size, 0);((AST_Send)send162932)->info = (AST_Info)info5542;// shouldsend162933 = (Object)new_AST_Send((Object)send162932, (Object)symbol44402, 0);((AST_Send)send162933)->info = (AST_Info)info5542;smallint27188 = (Object)new_Type_SmallInt(3);constant35101 = (Object)new_AST_Constant((Object)smallint27188);// =send162934 = (Object)new_AST_Send((Object)send162933, (Object)SMB__equal, 1, (Object)constant35101);((AST_Send)send162934)->info = (AST_Info)info5542;// statementssend162935 = (Object)new_AST_Send((Object)localvariable27287, (Object)symbol44225, 0);((AST_Send)send162935)->info = (AST_Info)info5542;// sizesend162936 = (Object)new_AST_Send((Object)send162935, (Object)SMB_size, 0);((AST_Send)send162936)->info = (AST_Info)info5542;// shouldsend162937 = (Object)new_AST_Send((Object)send162936, (Object)symbol44402, 0);((AST_Send)send162937)->info = (AST_Info)info5542;smallint27189 = (Object)new_Type_SmallInt(2);constant35102 = (Object)new_AST_Constant((Object)smallint27189);// =send162938 = (Object)new_AST_Send((Object)send162937, (Object)SMB__equal, 1, (Object)constant35102);((AST_Send)send162938)->info = (AST_Info)info5542;method41285 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24302, 10, assign20435, assign20436, assign20437, send162919, send162922, send162926, send162930, send162934, send162938, Self);((AST_Method)method41285)->info = (AST_Info)info5542;symbol44077 = (Object)new_Type_Symbol_cached(L"testMethod");methodclosure41188 = (Object)new_Runtime_MethodClosure(method41285);store_method((Type_Class)class6736, (Type_Symbol)symbol44077, (Runtime_MethodClosure)methodclosure41188);// SCParserTest>>testMethod2//testMethod2// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// // 	| parser string result |// 	parser := scparser method.// 	string := 'a: b c: d// 			"boe" |x y z| "test"// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>// 			<a: 4> "test"// 			<boe>// 			1 + [ |a| a ] value: "mmh" 3.// 			^ 7 "biep". "bla" '.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message class should = ASTKeywordMessageDefinition.// 	result temporaries size should = 3.// 	result annotations size should = 3.// 	result statements size should = 2localvariable27288 = (Object)new_AST_Variable_named(L"parser");localvariable27289 = (Object)new_AST_Variable_named(L"string");localvariable27290 = (Object)new_AST_Variable_named(L"result");array24303 = (Object)new_Type_Array_with(3, (Object)localvariable27288, (Object)localvariable27289, (Object)localvariable27290);// methodsend162939 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44477, 0);string27456 = (Object)new_Type_String(L"testMethod2");string27457 = (Object)new_Type_String(L"testMethod2\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" \'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message class should = ASTKeywordMessageDefinition.\n\tresult temporaries size should = 3.\n\tresult annotations size should = 3.\n\tresult statements size should = 2");smallint27190 = (Object)new_Type_SmallInt(-1);smallint27191 = (Object)new_Type_SmallInt(-1);info5543 = (Object)new_AST_Info((Type_String)string27457,(Type_String)string27456, (Type_SmallInt)smallint27190, (Type_SmallInt)smallint27191);((AST_Send)send162939)->info = (AST_Info)info5543;assign20438 = (Object)new_AST_Assign((Object)localvariable27288, (Object)send162939);string27458 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");constant35103 = (Object)new_AST_Constant((Object)string27458);assign20439 = (Object)new_AST_Assign((Object)localvariable27289, (Object)constant35103);// parse:send162940 = (Object)new_AST_Send((Object)localvariable27288, (Object)symbol44349, 1, (Object)localvariable27289);((AST_Send)send162940)->info = (AST_Info)info5543;assign20440 = (Object)new_AST_Assign((Object)localvariable27290, (Object)send162940);// hasReturnExpressionsend162941 = (Object)new_AST_Send((Object)localvariable27290, (Object)symbol44169, 0);((AST_Send)send162941)->info = (AST_Info)info5543;// shouldsend162942 = (Object)new_AST_Send((Object)send162941, (Object)symbol44402, 0);((AST_Send)send162942)->info = (AST_Info)info5543;// besend162943 = (Object)new_AST_Send((Object)send162942, (Object)symbol44476, 0);((AST_Send)send162943)->info = (AST_Info)info5543;// truesend162944 = (Object)new_AST_Send((Object)send162943, (Object)symbol44478, 0);((AST_Send)send162944)->info = (AST_Info)info5543;// classsend162945 = (Object)new_AST_Send((Object)localvariable27290, (Object)SMB_class, 0);((AST_Send)send162945)->info = (AST_Info)info5543;// shouldsend162946 = (Object)new_AST_Send((Object)send162945, (Object)symbol44402, 0);((AST_Send)send162946)->info = (AST_Info)info5543;// =send162947 = (Object)new_AST_Send((Object)send162946, (Object)SMB__equal, 1, (Object)classreference13419);((AST_Send)send162947)->info = (AST_Info)info5543;// messagesend162948 = (Object)new_AST_Send((Object)localvariable27290, (Object)symbol44229, 0);((AST_Send)send162948)->info = (AST_Info)info5543;// classsend162949 = (Object)new_AST_Send((Object)send162948, (Object)SMB_class, 0);((AST_Send)send162949)->info = (AST_Info)info5543;// shouldsend162950 = (Object)new_AST_Send((Object)send162949, (Object)symbol44402, 0);((AST_Send)send162950)->info = (AST_Info)info5543;// =send162951 = (Object)new_AST_Send((Object)send162950, (Object)SMB__equal, 1, (Object)classreference13394);((AST_Send)send162951)->info = (AST_Info)info5543;// temporariessend162952 = (Object)new_AST_Send((Object)localvariable27290, (Object)symbol44230, 0);((AST_Send)send162952)->info = (AST_Info)info5543;// sizesend162953 = (Object)new_AST_Send((Object)send162952, (Object)SMB_size, 0);((AST_Send)send162953)->info = (AST_Info)info5543;// shouldsend162954 = (Object)new_AST_Send((Object)send162953, (Object)symbol44402, 0);((AST_Send)send162954)->info = (AST_Info)info5543;smallint27192 = (Object)new_Type_SmallInt(3);constant35104 = (Object)new_AST_Constant((Object)smallint27192);// =send162955 = (Object)new_AST_Send((Object)send162954, (Object)SMB__equal, 1, (Object)constant35104);((AST_Send)send162955)->info = (AST_Info)info5543;// annotationssend162956 = (Object)new_AST_Send((Object)localvariable27290, (Object)symbol44227, 0);((AST_Send)send162956)->info = (AST_Info)info5543;// sizesend162957 = (Object)new_AST_Send((Object)send162956, (Object)SMB_size, 0);((AST_Send)send162957)->info = (AST_Info)info5543;// shouldsend162958 = (Object)new_AST_Send((Object)send162957, (Object)symbol44402, 0);((AST_Send)send162958)->info = (AST_Info)info5543;smallint27193 = (Object)new_Type_SmallInt(3);constant35105 = (Object)new_AST_Constant((Object)smallint27193);// =send162959 = (Object)new_AST_Send((Object)send162958, (Object)SMB__equal, 1, (Object)constant35105);((AST_Send)send162959)->info = (AST_Info)info5543;// statementssend162960 = (Object)new_AST_Send((Object)localvariable27290, (Object)symbol44225, 0);((AST_Send)send162960)->info = (AST_Info)info5543;// sizesend162961 = (Object)new_AST_Send((Object)send162960, (Object)SMB_size, 0);((AST_Send)send162961)->info = (AST_Info)info5543;// shouldsend162962 = (Object)new_AST_Send((Object)send162961, (Object)symbol44402, 0);((AST_Send)send162962)->info = (AST_Info)info5543;smallint27194 = (Object)new_Type_SmallInt(2);constant35106 = (Object)new_AST_Constant((Object)smallint27194);// =send162963 = (Object)new_AST_Send((Object)send162962, (Object)SMB__equal, 1, (Object)constant35106);((AST_Send)send162963)->info = (AST_Info)info5543;method41286 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24303, 10, assign20438, assign20439, assign20440, send162944, send162947, send162951, send162955, send162959, send162963, Self);((AST_Method)method41286)->info = (AST_Info)info5543;symbol44050 = (Object)new_Type_Symbol_cached(L"testMethod2");methodclosure41189 = (Object)new_Runtime_MethodClosure(method41286);store_method((Type_Class)class6736, (Type_Symbol)symbol44050, (Runtime_MethodClosure)methodclosure41189);// SCParserTest>>testMethod3//testMethod3// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// // 	| parser string result |// 	parser := scparser method.// 	string := 'withA: a withB: b withC: c// 		^ 1// 	'.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message asString should = 'withA:withB:withC:'localvariable27291 = (Object)new_AST_Variable_named(L"parser");localvariable27292 = (Object)new_AST_Variable_named(L"string");localvariable27293 = (Object)new_AST_Variable_named(L"result");array24304 = (Object)new_Type_Array_with(3, (Object)localvariable27291, (Object)localvariable27292, (Object)localvariable27293);// methodsend162964 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44477, 0);string27459 = (Object)new_Type_String(L"testMethod3");string27460 = (Object)new_Type_String(L"testMethod3\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'withA: a withB: b withC: c\n\t\t^ 1\n\t\'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message asString should = \'withA:withB:withC:\'");smallint27195 = (Object)new_Type_SmallInt(-1);smallint27196 = (Object)new_Type_SmallInt(-1);info5544 = (Object)new_AST_Info((Type_String)string27460,(Type_String)string27459, (Type_SmallInt)smallint27195, (Type_SmallInt)smallint27196);((AST_Send)send162964)->info = (AST_Info)info5544;assign20441 = (Object)new_AST_Assign((Object)localvariable27291, (Object)send162964);string27461 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");constant35107 = (Object)new_AST_Constant((Object)string27461);assign20442 = (Object)new_AST_Assign((Object)localvariable27292, (Object)constant35107);// parse:send162965 = (Object)new_AST_Send((Object)localvariable27291, (Object)symbol44349, 1, (Object)localvariable27292);((AST_Send)send162965)->info = (AST_Info)info5544;assign20443 = (Object)new_AST_Assign((Object)localvariable27293, (Object)send162965);// hasReturnExpressionsend162966 = (Object)new_AST_Send((Object)localvariable27293, (Object)symbol44169, 0);((AST_Send)send162966)->info = (AST_Info)info5544;// shouldsend162967 = (Object)new_AST_Send((Object)send162966, (Object)symbol44402, 0);((AST_Send)send162967)->info = (AST_Info)info5544;// besend162968 = (Object)new_AST_Send((Object)send162967, (Object)symbol44476, 0);((AST_Send)send162968)->info = (AST_Info)info5544;// truesend162969 = (Object)new_AST_Send((Object)send162968, (Object)symbol44478, 0);((AST_Send)send162969)->info = (AST_Info)info5544;// classsend162970 = (Object)new_AST_Send((Object)localvariable27293, (Object)SMB_class, 0);((AST_Send)send162970)->info = (AST_Info)info5544;// shouldsend162971 = (Object)new_AST_Send((Object)send162970, (Object)symbol44402, 0);((AST_Send)send162971)->info = (AST_Info)info5544;// =send162972 = (Object)new_AST_Send((Object)send162971, (Object)SMB__equal, 1, (Object)classreference13419);((AST_Send)send162972)->info = (AST_Info)info5544;// messagesend162973 = (Object)new_AST_Send((Object)localvariable27293, (Object)symbol44229, 0);((AST_Send)send162973)->info = (AST_Info)info5544;// asStringsend162974 = (Object)new_AST_Send((Object)send162973, (Object)SMB_asString, 0);((AST_Send)send162974)->info = (AST_Info)info5544;// shouldsend162975 = (Object)new_AST_Send((Object)send162974, (Object)symbol44402, 0);((AST_Send)send162975)->info = (AST_Info)info5544;string27462 = (Object)new_Type_String(L"withA:withB:withC:");constant35108 = (Object)new_AST_Constant((Object)string27462);// =send162976 = (Object)new_AST_Send((Object)send162975, (Object)SMB__equal, 1, (Object)constant35108);((AST_Send)send162976)->info = (AST_Info)info5544;method41287 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24304, 7, assign20441, assign20442, assign20443, send162969, send162972, send162976, Self);((AST_Method)method41287)->info = (AST_Info)info5544;symbol44039 = (Object)new_Type_Symbol_cached(L"testMethod3");methodclosure41190 = (Object)new_Runtime_MethodClosure(method41287);store_method((Type_Class)class6736, (Type_Symbol)symbol44039, (Runtime_MethodClosure)methodclosure41190);// SCParserTest>>testKeywordExpression//testKeywordExpression// 	| parser string result arg |// 	parser := scparser keywordExpression.// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTMessageExpression.// 	result keywords asArray should = ((Array new: 3)// 	at: 1 put: 'abc';// 	at: 2 put: 'def';// 	at: 3 put: 'ghi';// 	yourself).// 	result selector class should = ASTKeywordSelector.// 	result selector printString should = 'abc:def:ghi:'.// 	arg := result arguments first.// 	arg class should = ASTNumber.// 	arg := result arguments at: 2.// 	arg class should = ASTBinaryExpression.// 	arg := result arguments at: 3.// 	arg class should = ASTUnaryExpression.// 	result receiver class should = ASTBinaryExpression.// 	string position should = 29localvariable27294 = (Object)new_AST_Variable_named(L"parser");localvariable27295 = (Object)new_AST_Variable_named(L"string");localvariable27296 = (Object)new_AST_Variable_named(L"result");localvariable27297 = (Object)new_AST_Variable_named(L"arg");array24305 = (Object)new_Type_Array_with(4, (Object)localvariable27294, (Object)localvariable27295, (Object)localvariable27296, (Object)localvariable27297);// keywordExpressionsend162977 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44424, 0);string27463 = (Object)new_Type_String(L"testKeywordExpression");string27464 = (Object)new_Type_String(L"testKeywordExpression\n\t| parser string result arg |\n\tparser := scparser keywordExpression.\n\tstring := PEGStringScanner on: \'2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTMessageExpression.\n\tresult keywords asArray should = ((Array new: 3)\n\tat: 1 put: \'abc\';\n\tat: 2 put: \'def\';\n\tat: 3 put: \'ghi\';\n\tyourself).\n\tresult selector class should = ASTKeywordSelector.\n\tresult selector printString should = \'abc:def:ghi:\'.\n\targ := result arguments first.\n\targ class should = ASTNumber.\n\targ := result arguments at: 2.\n\targ class should = ASTBinaryExpression.\n\targ := result arguments at: 3.\n\targ class should = ASTUnaryExpression.\n\tresult receiver class should = ASTBinaryExpression.\n\tstring position should = 29");smallint27197 = (Object)new_Type_SmallInt(-1);smallint27198 = (Object)new_Type_SmallInt(-1);info5545 = (Object)new_AST_Info((Type_String)string27464,(Type_String)string27463, (Type_SmallInt)smallint27197, (Type_SmallInt)smallint27198);((AST_Send)send162977)->info = (AST_Info)info5545;assign20444 = (Object)new_AST_Assign((Object)localvariable27294, (Object)send162977);string27465 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");constant35109 = (Object)new_AST_Constant((Object)string27465);// on:send162978 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35109);((AST_Send)send162978)->info = (AST_Info)info5545;assign20445 = (Object)new_AST_Assign((Object)localvariable27295, (Object)send162978);// match:send162979 = (Object)new_AST_Send((Object)localvariable27294, (Object)symbol44329, 1, (Object)localvariable27295);((AST_Send)send162979)->info = (AST_Info)info5545;assign20446 = (Object)new_AST_Assign((Object)localvariable27296, (Object)send162979);// classsend162980 = (Object)new_AST_Send((Object)localvariable27296, (Object)SMB_class, 0);((AST_Send)send162980)->info = (AST_Info)info5545;// shouldsend162981 = (Object)new_AST_Send((Object)send162980, (Object)symbol44402, 0);((AST_Send)send162981)->info = (AST_Info)info5545;// =send162982 = (Object)new_AST_Send((Object)send162981, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send162982)->info = (AST_Info)info5545;// keywordssend162983 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44214, 0);((AST_Send)send162983)->info = (AST_Info)info5545;// asArraysend162984 = (Object)new_AST_Send((Object)send162983, (Object)SMB_asArray, 0);((AST_Send)send162984)->info = (AST_Info)info5545;// shouldsend162985 = (Object)new_AST_Send((Object)send162984, (Object)symbol44402, 0);((AST_Send)send162985)->info = (AST_Info)info5545;localvariable27298 = (Object)new_AST_Variable_named(L"receiver");array24306 = (Object)new_Type_Array_with(1, (Object)localvariable27298);smallint27199 = (Object)new_Type_SmallInt(1);constant35110 = (Object)new_AST_Constant((Object)smallint27199);string27466 = (Object)new_Type_String(L"abc");constant35111 = (Object)new_AST_Constant((Object)string27466);// at:put:send162986 = (Object)new_AST_Send((Object)localvariable27298, (Object)SMB_at_put_, 2, (Object)constant35110, (Object)constant35111);((AST_Send)send162986)->info = (AST_Info)info5545;smallint27200 = (Object)new_Type_SmallInt(2);constant35112 = (Object)new_AST_Constant((Object)smallint27200);string27467 = (Object)new_Type_String(L"def");constant35113 = (Object)new_AST_Constant((Object)string27467);// at:put:send162987 = (Object)new_AST_Send((Object)localvariable27298, (Object)SMB_at_put_, 2, (Object)constant35112, (Object)constant35113);((AST_Send)send162987)->info = (AST_Info)info5545;smallint27201 = (Object)new_Type_SmallInt(3);constant35114 = (Object)new_AST_Constant((Object)smallint27201);string27468 = (Object)new_Type_String(L"ghi");constant35115 = (Object)new_AST_Constant((Object)string27468);// at:put:send162988 = (Object)new_AST_Send((Object)localvariable27298, (Object)SMB_at_put_, 2, (Object)constant35114, (Object)constant35115);((AST_Send)send162988)->info = (AST_Info)info5545;// yourselfsend162989 = (Object)new_AST_Send((Object)localvariable27298, (Object)symbol44008, 0);((AST_Send)send162989)->info = (AST_Info)info5545;block11864 = (Object)new_AST_Block_with((Type_Array)array24306, (Type_Array)empty_Type_Array, 1, 4, send162986, send162987, send162988, send162989);smallint27202 = (Object)new_Type_SmallInt(3);constant35116 = (Object)new_AST_Constant((Object)smallint27202);// new:send162990 = (Object)new_AST_Send((Object)classreference13390, (Object)symbol44091, 1, (Object)constant35116);((AST_Send)send162990)->info = (AST_Info)info5545;// value:send162991 = (Object)new_AST_Send((Object)block11864, (Object)SMB_value_, 1, (Object)send162990);((AST_Send)send162991)->info = (AST_Info)info5545;// =send162992 = (Object)new_AST_Send((Object)send162985, (Object)SMB__equal, 1, (Object)send162991);((AST_Send)send162992)->info = (AST_Info)info5545;// selectorsend162993 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44115, 0);((AST_Send)send162993)->info = (AST_Info)info5545;// classsend162994 = (Object)new_AST_Send((Object)send162993, (Object)SMB_class, 0);((AST_Send)send162994)->info = (AST_Info)info5545;// shouldsend162995 = (Object)new_AST_Send((Object)send162994, (Object)symbol44402, 0);((AST_Send)send162995)->info = (AST_Info)info5545;// =send162996 = (Object)new_AST_Send((Object)send162995, (Object)SMB__equal, 1, (Object)classreference13424);((AST_Send)send162996)->info = (AST_Info)info5545;// selectorsend162997 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44115, 0);((AST_Send)send162997)->info = (AST_Info)info5545;// printStringsend162998 = (Object)new_AST_Send((Object)send162997, (Object)symbol44332, 0);((AST_Send)send162998)->info = (AST_Info)info5545;// shouldsend162999 = (Object)new_AST_Send((Object)send162998, (Object)symbol44402, 0);((AST_Send)send162999)->info = (AST_Info)info5545;string27469 = (Object)new_Type_String(L"abc:def:ghi:");constant35117 = (Object)new_AST_Constant((Object)string27469);// =send163000 = (Object)new_AST_Send((Object)send162999, (Object)SMB__equal, 1, (Object)constant35117);((AST_Send)send163000)->info = (AST_Info)info5545;// argumentssend163001 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44116, 0);((AST_Send)send163001)->info = (AST_Info)info5545;// firstsend163002 = (Object)new_AST_Send((Object)send163001, (Object)symbol44180, 0);((AST_Send)send163002)->info = (AST_Info)info5545;assign20447 = (Object)new_AST_Assign((Object)localvariable27297, (Object)send163002);// classsend163003 = (Object)new_AST_Send((Object)localvariable27297, (Object)SMB_class, 0);((AST_Send)send163003)->info = (AST_Info)info5545;// shouldsend163004 = (Object)new_AST_Send((Object)send163003, (Object)symbol44402, 0);((AST_Send)send163004)->info = (AST_Info)info5545;// =send163005 = (Object)new_AST_Send((Object)send163004, (Object)SMB__equal, 1, (Object)classreference13416);((AST_Send)send163005)->info = (AST_Info)info5545;// argumentssend163006 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44116, 0);((AST_Send)send163006)->info = (AST_Info)info5545;smallint27203 = (Object)new_Type_SmallInt(2);constant35118 = (Object)new_AST_Constant((Object)smallint27203);// at:send163007 = (Object)new_AST_Send((Object)send163006, (Object)SMB_at_, 1, (Object)constant35118);((AST_Send)send163007)->info = (AST_Info)info5545;assign20448 = (Object)new_AST_Assign((Object)localvariable27297, (Object)send163007);// classsend163008 = (Object)new_AST_Send((Object)localvariable27297, (Object)SMB_class, 0);((AST_Send)send163008)->info = (AST_Info)info5545;// shouldsend163009 = (Object)new_AST_Send((Object)send163008, (Object)symbol44402, 0);((AST_Send)send163009)->info = (AST_Info)info5545;// =send163010 = (Object)new_AST_Send((Object)send163009, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send163010)->info = (AST_Info)info5545;// argumentssend163011 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44116, 0);((AST_Send)send163011)->info = (AST_Info)info5545;smallint27204 = (Object)new_Type_SmallInt(3);constant35119 = (Object)new_AST_Constant((Object)smallint27204);// at:send163012 = (Object)new_AST_Send((Object)send163011, (Object)SMB_at_, 1, (Object)constant35119);((AST_Send)send163012)->info = (AST_Info)info5545;assign20449 = (Object)new_AST_Assign((Object)localvariable27297, (Object)send163012);// classsend163013 = (Object)new_AST_Send((Object)localvariable27297, (Object)SMB_class, 0);((AST_Send)send163013)->info = (AST_Info)info5545;// shouldsend163014 = (Object)new_AST_Send((Object)send163013, (Object)symbol44402, 0);((AST_Send)send163014)->info = (AST_Info)info5545;// =send163015 = (Object)new_AST_Send((Object)send163014, (Object)SMB__equal, 1, (Object)classreference13410);((AST_Send)send163015)->info = (AST_Info)info5545;// receiversend163016 = (Object)new_AST_Send((Object)localvariable27296, (Object)symbol44218, 0);((AST_Send)send163016)->info = (AST_Info)info5545;// classsend163017 = (Object)new_AST_Send((Object)send163016, (Object)SMB_class, 0);((AST_Send)send163017)->info = (AST_Info)info5545;// shouldsend163018 = (Object)new_AST_Send((Object)send163017, (Object)symbol44402, 0);((AST_Send)send163018)->info = (AST_Info)info5545;// =send163019 = (Object)new_AST_Send((Object)send163018, (Object)SMB__equal, 1, (Object)classreference13429);((AST_Send)send163019)->info = (AST_Info)info5545;// positionsend163020 = (Object)new_AST_Send((Object)localvariable27295, (Object)symbol44475, 0);((AST_Send)send163020)->info = (AST_Info)info5545;// shouldsend163021 = (Object)new_AST_Send((Object)send163020, (Object)symbol44402, 0);((AST_Send)send163021)->info = (AST_Info)info5545;smallint27205 = (Object)new_Type_SmallInt(29);constant35120 = (Object)new_AST_Constant((Object)smallint27205);// =send163022 = (Object)new_AST_Send((Object)send163021, (Object)SMB__equal, 1, (Object)constant35120);((AST_Send)send163022)->info = (AST_Info)info5545;method41288 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24305, 16, assign20444, assign20445, assign20446, send162982, send162992, send162996, send163000, assign20447, send163005, assign20448, send163010, assign20449, send163015, send163019, send163022, Self);((AST_Method)method41288)->info = (AST_Info)info5545;symbol44059 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");methodclosure41191 = (Object)new_Runtime_MethodClosure(method41288);store_method((Type_Class)class6736, (Type_Symbol)symbol44059, (Runtime_MethodClosure)methodclosure41191);// SCParserTest>>testBinarySelector//testBinarySelector// 	| parser string |// 	parser := scparser binarySelector.// 	string := PEGStringScanner on: '+= a'.// 	(parser match: string) printString should = '+='.// 	string position should = 2.// 	string := PEGStringScanner on: '|= a'.// 	(parser match: string) printString should = '|'.// 	string position should = 1.// 	string := PEGStringScanner on: '-= a'.// 	(parser match: string) printString should = '-='.// 	string position should = 2.// 	string := PEGStringScanner on: '=- a'.// 	(parser match: string) printString should = '='.// 	string position should = 1localvariable27299 = (Object)new_AST_Variable_named(L"parser");localvariable27300 = (Object)new_AST_Variable_named(L"string");array24307 = (Object)new_Type_Array_with(2, (Object)localvariable27299, (Object)localvariable27300);// binarySelectorsend163023 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44433, 0);string27470 = (Object)new_Type_String(L"testBinarySelector");string27471 = (Object)new_Type_String(L"testBinarySelector\n\t| parser string |\n\tparser := scparser binarySelector.\n\tstring := PEGStringScanner on: \'+= a\'.\n\t(parser match: string) printString should = \'+=\'.\n\tstring position should = 2.\n\tstring := PEGStringScanner on: \'|= a\'.\n\t(parser match: string) printString should = \'|\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'-= a\'.\n\t(parser match: string) printString should = \'-=\'.\n\tstring position should = 2.\n\tstring := PEGStringScanner on: \'=- a\'.\n\t(parser match: string) printString should = \'=\'.\n\tstring position should = 1");smallint27206 = (Object)new_Type_SmallInt(-1);smallint27207 = (Object)new_Type_SmallInt(-1);info5546 = (Object)new_AST_Info((Type_String)string27471,(Type_String)string27470, (Type_SmallInt)smallint27206, (Type_SmallInt)smallint27207);((AST_Send)send163023)->info = (AST_Info)info5546;assign20450 = (Object)new_AST_Assign((Object)localvariable27299, (Object)send163023);string27472 = (Object)new_Type_String(L"+= a");constant35121 = (Object)new_AST_Constant((Object)string27472);// on:send163024 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35121);((AST_Send)send163024)->info = (AST_Info)info5546;assign20451 = (Object)new_AST_Assign((Object)localvariable27300, (Object)send163024);// match:send163025 = (Object)new_AST_Send((Object)localvariable27299, (Object)symbol44329, 1, (Object)localvariable27300);((AST_Send)send163025)->info = (AST_Info)info5546;// printStringsend163026 = (Object)new_AST_Send((Object)send163025, (Object)symbol44332, 0);((AST_Send)send163026)->info = (AST_Info)info5546;// shouldsend163027 = (Object)new_AST_Send((Object)send163026, (Object)symbol44402, 0);((AST_Send)send163027)->info = (AST_Info)info5546;string27473 = (Object)new_Type_String(L"+=");constant35122 = (Object)new_AST_Constant((Object)string27473);// =send163028 = (Object)new_AST_Send((Object)send163027, (Object)SMB__equal, 1, (Object)constant35122);((AST_Send)send163028)->info = (AST_Info)info5546;// positionsend163029 = (Object)new_AST_Send((Object)localvariable27300, (Object)symbol44475, 0);((AST_Send)send163029)->info = (AST_Info)info5546;// shouldsend163030 = (Object)new_AST_Send((Object)send163029, (Object)symbol44402, 0);((AST_Send)send163030)->info = (AST_Info)info5546;smallint27208 = (Object)new_Type_SmallInt(2);constant35123 = (Object)new_AST_Constant((Object)smallint27208);// =send163031 = (Object)new_AST_Send((Object)send163030, (Object)SMB__equal, 1, (Object)constant35123);((AST_Send)send163031)->info = (AST_Info)info5546;string27474 = (Object)new_Type_String(L"|= a");constant35124 = (Object)new_AST_Constant((Object)string27474);// on:send163032 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35124);((AST_Send)send163032)->info = (AST_Info)info5546;assign20452 = (Object)new_AST_Assign((Object)localvariable27300, (Object)send163032);// match:send163033 = (Object)new_AST_Send((Object)localvariable27299, (Object)symbol44329, 1, (Object)localvariable27300);((AST_Send)send163033)->info = (AST_Info)info5546;// printStringsend163034 = (Object)new_AST_Send((Object)send163033, (Object)symbol44332, 0);((AST_Send)send163034)->info = (AST_Info)info5546;// shouldsend163035 = (Object)new_AST_Send((Object)send163034, (Object)symbol44402, 0);((AST_Send)send163035)->info = (AST_Info)info5546;string27475 = (Object)new_Type_String(L"|");constant35125 = (Object)new_AST_Constant((Object)string27475);// =send163036 = (Object)new_AST_Send((Object)send163035, (Object)SMB__equal, 1, (Object)constant35125);((AST_Send)send163036)->info = (AST_Info)info5546;// positionsend163037 = (Object)new_AST_Send((Object)localvariable27300, (Object)symbol44475, 0);((AST_Send)send163037)->info = (AST_Info)info5546;// shouldsend163038 = (Object)new_AST_Send((Object)send163037, (Object)symbol44402, 0);((AST_Send)send163038)->info = (AST_Info)info5546;smallint27209 = (Object)new_Type_SmallInt(1);constant35126 = (Object)new_AST_Constant((Object)smallint27209);// =send163039 = (Object)new_AST_Send((Object)send163038, (Object)SMB__equal, 1, (Object)constant35126);((AST_Send)send163039)->info = (AST_Info)info5546;string27476 = (Object)new_Type_String(L"-= a");constant35127 = (Object)new_AST_Constant((Object)string27476);// on:send163040 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35127);((AST_Send)send163040)->info = (AST_Info)info5546;assign20453 = (Object)new_AST_Assign((Object)localvariable27300, (Object)send163040);// match:send163041 = (Object)new_AST_Send((Object)localvariable27299, (Object)symbol44329, 1, (Object)localvariable27300);((AST_Send)send163041)->info = (AST_Info)info5546;// printStringsend163042 = (Object)new_AST_Send((Object)send163041, (Object)symbol44332, 0);((AST_Send)send163042)->info = (AST_Info)info5546;// shouldsend163043 = (Object)new_AST_Send((Object)send163042, (Object)symbol44402, 0);((AST_Send)send163043)->info = (AST_Info)info5546;string27477 = (Object)new_Type_String(L"-=");constant35128 = (Object)new_AST_Constant((Object)string27477);// =send163044 = (Object)new_AST_Send((Object)send163043, (Object)SMB__equal, 1, (Object)constant35128);((AST_Send)send163044)->info = (AST_Info)info5546;// positionsend163045 = (Object)new_AST_Send((Object)localvariable27300, (Object)symbol44475, 0);((AST_Send)send163045)->info = (AST_Info)info5546;// shouldsend163046 = (Object)new_AST_Send((Object)send163045, (Object)symbol44402, 0);((AST_Send)send163046)->info = (AST_Info)info5546;smallint27210 = (Object)new_Type_SmallInt(2);constant35129 = (Object)new_AST_Constant((Object)smallint27210);// =send163047 = (Object)new_AST_Send((Object)send163046, (Object)SMB__equal, 1, (Object)constant35129);((AST_Send)send163047)->info = (AST_Info)info5546;string27478 = (Object)new_Type_String(L"=- a");constant35130 = (Object)new_AST_Constant((Object)string27478);// on:send163048 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35130);((AST_Send)send163048)->info = (AST_Info)info5546;assign20454 = (Object)new_AST_Assign((Object)localvariable27300, (Object)send163048);// match:send163049 = (Object)new_AST_Send((Object)localvariable27299, (Object)symbol44329, 1, (Object)localvariable27300);((AST_Send)send163049)->info = (AST_Info)info5546;// printStringsend163050 = (Object)new_AST_Send((Object)send163049, (Object)symbol44332, 0);((AST_Send)send163050)->info = (AST_Info)info5546;// shouldsend163051 = (Object)new_AST_Send((Object)send163050, (Object)symbol44402, 0);((AST_Send)send163051)->info = (AST_Info)info5546;string27479 = (Object)new_Type_String(L"=");constant35131 = (Object)new_AST_Constant((Object)string27479);// =send163052 = (Object)new_AST_Send((Object)send163051, (Object)SMB__equal, 1, (Object)constant35131);((AST_Send)send163052)->info = (AST_Info)info5546;// positionsend163053 = (Object)new_AST_Send((Object)localvariable27300, (Object)symbol44475, 0);((AST_Send)send163053)->info = (AST_Info)info5546;// shouldsend163054 = (Object)new_AST_Send((Object)send163053, (Object)symbol44402, 0);((AST_Send)send163054)->info = (AST_Info)info5546;smallint27211 = (Object)new_Type_SmallInt(1);constant35132 = (Object)new_AST_Constant((Object)smallint27211);// =send163055 = (Object)new_AST_Send((Object)send163054, (Object)SMB__equal, 1, (Object)constant35132);((AST_Send)send163055)->info = (AST_Info)info5546;method41289 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24307, 14, assign20450, assign20451, send163028, send163031, assign20452, send163036, send163039, assign20453, send163044, send163047, assign20454, send163052, send163055, Self);((AST_Method)method41289)->info = (AST_Info)info5546;symbol44087 = (Object)new_Type_Symbol_cached(L"testBinarySelector");methodclosure41192 = (Object)new_Runtime_MethodClosure(method41289);store_method((Type_Class)class6736, (Type_Symbol)symbol44087, (Runtime_MethodClosure)methodclosure41192);// SCParserTest>>testUnarySelector//testUnarySelector// 	| parser string result |// 	parser := scparser unarySelector.// 	string := PEGStringScanner on: 'abcd bla'.// 	result := parser match: string.// 	result class should = ASTUnarySelector.// 	result selector printString should = 'abcd'.// 	string position should = 4.// 	string := PEGStringScanner on: 'abcd: bla'.// 	(parser match: string) should be isNil.// 	string position should = 0localvariable27301 = (Object)new_AST_Variable_named(L"parser");localvariable27302 = (Object)new_AST_Variable_named(L"string");localvariable27303 = (Object)new_AST_Variable_named(L"result");array24308 = (Object)new_Type_Array_with(3, (Object)localvariable27301, (Object)localvariable27302, (Object)localvariable27303);// unarySelectorsend163056 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44422, 0);string27480 = (Object)new_Type_String(L"testUnarySelector");string27481 = (Object)new_Type_String(L"testUnarySelector\n\t| parser string result |\n\tparser := scparser unarySelector.\n\tstring := PEGStringScanner on: \'abcd bla\'.\n\tresult := parser match: string.\n\tresult class should = ASTUnarySelector.\n\tresult selector printString should = \'abcd\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'abcd: bla\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");smallint27212 = (Object)new_Type_SmallInt(-1);smallint27213 = (Object)new_Type_SmallInt(-1);info5547 = (Object)new_AST_Info((Type_String)string27481,(Type_String)string27480, (Type_SmallInt)smallint27212, (Type_SmallInt)smallint27213);((AST_Send)send163056)->info = (AST_Info)info5547;assign20455 = (Object)new_AST_Assign((Object)localvariable27301, (Object)send163056);string27482 = (Object)new_Type_String(L"abcd bla");constant35133 = (Object)new_AST_Constant((Object)string27482);// on:send163057 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35133);((AST_Send)send163057)->info = (AST_Info)info5547;assign20456 = (Object)new_AST_Assign((Object)localvariable27302, (Object)send163057);// match:send163058 = (Object)new_AST_Send((Object)localvariable27301, (Object)symbol44329, 1, (Object)localvariable27302);((AST_Send)send163058)->info = (AST_Info)info5547;assign20457 = (Object)new_AST_Assign((Object)localvariable27303, (Object)send163058);// classsend163059 = (Object)new_AST_Send((Object)localvariable27303, (Object)SMB_class, 0);((AST_Send)send163059)->info = (AST_Info)info5547;// shouldsend163060 = (Object)new_AST_Send((Object)send163059, (Object)symbol44402, 0);((AST_Send)send163060)->info = (AST_Info)info5547;// =send163061 = (Object)new_AST_Send((Object)send163060, (Object)SMB__equal, 1, (Object)classreference13420);((AST_Send)send163061)->info = (AST_Info)info5547;// selectorsend163062 = (Object)new_AST_Send((Object)localvariable27303, (Object)symbol44115, 0);((AST_Send)send163062)->info = (AST_Info)info5547;// printStringsend163063 = (Object)new_AST_Send((Object)send163062, (Object)symbol44332, 0);((AST_Send)send163063)->info = (AST_Info)info5547;// shouldsend163064 = (Object)new_AST_Send((Object)send163063, (Object)symbol44402, 0);((AST_Send)send163064)->info = (AST_Info)info5547;string27483 = (Object)new_Type_String(L"abcd");constant35134 = (Object)new_AST_Constant((Object)string27483);// =send163065 = (Object)new_AST_Send((Object)send163064, (Object)SMB__equal, 1, (Object)constant35134);((AST_Send)send163065)->info = (AST_Info)info5547;// positionsend163066 = (Object)new_AST_Send((Object)localvariable27302, (Object)symbol44475, 0);((AST_Send)send163066)->info = (AST_Info)info5547;// shouldsend163067 = (Object)new_AST_Send((Object)send163066, (Object)symbol44402, 0);((AST_Send)send163067)->info = (AST_Info)info5547;smallint27214 = (Object)new_Type_SmallInt(4);constant35135 = (Object)new_AST_Constant((Object)smallint27214);// =send163068 = (Object)new_AST_Send((Object)send163067, (Object)SMB__equal, 1, (Object)constant35135);((AST_Send)send163068)->info = (AST_Info)info5547;string27484 = (Object)new_Type_String(L"abcd: bla");constant35136 = (Object)new_AST_Constant((Object)string27484);// on:send163069 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35136);((AST_Send)send163069)->info = (AST_Info)info5547;assign20458 = (Object)new_AST_Assign((Object)localvariable27302, (Object)send163069);// match:send163070 = (Object)new_AST_Send((Object)localvariable27301, (Object)symbol44329, 1, (Object)localvariable27302);((AST_Send)send163070)->info = (AST_Info)info5547;// shouldsend163071 = (Object)new_AST_Send((Object)send163070, (Object)symbol44402, 0);((AST_Send)send163071)->info = (AST_Info)info5547;// besend163072 = (Object)new_AST_Send((Object)send163071, (Object)symbol44476, 0);((AST_Send)send163072)->info = (AST_Info)info5547;// isNilsend163073 = (Object)new_AST_Send((Object)send163072, (Object)SMB_isNil, 0);((AST_Send)send163073)->info = (AST_Info)info5547;// positionsend163074 = (Object)new_AST_Send((Object)localvariable27302, (Object)symbol44475, 0);((AST_Send)send163074)->info = (AST_Info)info5547;// shouldsend163075 = (Object)new_AST_Send((Object)send163074, (Object)symbol44402, 0);((AST_Send)send163075)->info = (AST_Info)info5547;smallint27215 = (Object)new_Type_SmallInt(0);constant35137 = (Object)new_AST_Constant((Object)smallint27215);// =send163076 = (Object)new_AST_Send((Object)send163075, (Object)SMB__equal, 1, (Object)constant35137);((AST_Send)send163076)->info = (AST_Info)info5547;method41290 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24308, 10, assign20455, assign20456, assign20457, send163061, send163065, send163068, assign20458, send163073, send163076, Self);((AST_Method)method41290)->info = (AST_Info)info5547;symbol44079 = (Object)new_Type_Symbol_cached(L"testUnarySelector");methodclosure41193 = (Object)new_Runtime_MethodClosure(method41290);store_method((Type_Class)class6736, (Type_Symbol)symbol44079, (Runtime_MethodClosure)methodclosure41193);// SCParserTest>>testSymbolConstant//testSymbolConstant// 	| parser string result |// 	parser := scparser symbolConstant.// 	string := PEGStringScanner on: '#abc'.// 	result := parser match: string.// 	result class should = ASTSymbol.// 	result symbol should = 'abc'.// 	string position should = 4localvariable27304 = (Object)new_AST_Variable_named(L"parser");localvariable27305 = (Object)new_AST_Variable_named(L"string");localvariable27306 = (Object)new_AST_Variable_named(L"result");array24309 = (Object)new_Type_Array_with(3, (Object)localvariable27304, (Object)localvariable27305, (Object)localvariable27306);// symbolConstantsend163077 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44420, 0);string27485 = (Object)new_Type_String(L"testSymbolConstant");string27486 = (Object)new_Type_String(L"testSymbolConstant\n\t| parser string result |\n\tparser := scparser symbolConstant.\n\tstring := PEGStringScanner on: \'#abc\'.\n\tresult := parser match: string.\n\tresult class should = ASTSymbol.\n\tresult symbol should = \'abc\'.\n\tstring position should = 4");smallint27216 = (Object)new_Type_SmallInt(-1);smallint27217 = (Object)new_Type_SmallInt(-1);info5548 = (Object)new_AST_Info((Type_String)string27486,(Type_String)string27485, (Type_SmallInt)smallint27216, (Type_SmallInt)smallint27217);((AST_Send)send163077)->info = (AST_Info)info5548;assign20459 = (Object)new_AST_Assign((Object)localvariable27304, (Object)send163077);string27487 = (Object)new_Type_String(L"#abc");constant35138 = (Object)new_AST_Constant((Object)string27487);// on:send163078 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35138);((AST_Send)send163078)->info = (AST_Info)info5548;assign20460 = (Object)new_AST_Assign((Object)localvariable27305, (Object)send163078);// match:send163079 = (Object)new_AST_Send((Object)localvariable27304, (Object)symbol44329, 1, (Object)localvariable27305);((AST_Send)send163079)->info = (AST_Info)info5548;assign20461 = (Object)new_AST_Assign((Object)localvariable27306, (Object)send163079);// classsend163080 = (Object)new_AST_Send((Object)localvariable27306, (Object)SMB_class, 0);((AST_Send)send163080)->info = (AST_Info)info5548;// shouldsend163081 = (Object)new_AST_Send((Object)send163080, (Object)symbol44402, 0);((AST_Send)send163081)->info = (AST_Info)info5548;// =send163082 = (Object)new_AST_Send((Object)send163081, (Object)SMB__equal, 1, (Object)classreference13421);((AST_Send)send163082)->info = (AST_Info)info5548;// symbolsend163083 = (Object)new_AST_Send((Object)localvariable27306, (Object)symbol44193, 0);((AST_Send)send163083)->info = (AST_Info)info5548;// shouldsend163084 = (Object)new_AST_Send((Object)send163083, (Object)symbol44402, 0);((AST_Send)send163084)->info = (AST_Info)info5548;string27488 = (Object)new_Type_String(L"abc");constant35139 = (Object)new_AST_Constant((Object)string27488);// =send163085 = (Object)new_AST_Send((Object)send163084, (Object)SMB__equal, 1, (Object)constant35139);((AST_Send)send163085)->info = (AST_Info)info5548;// positionsend163086 = (Object)new_AST_Send((Object)localvariable27305, (Object)symbol44475, 0);((AST_Send)send163086)->info = (AST_Info)info5548;// shouldsend163087 = (Object)new_AST_Send((Object)send163086, (Object)symbol44402, 0);((AST_Send)send163087)->info = (AST_Info)info5548;smallint27218 = (Object)new_Type_SmallInt(4);constant35140 = (Object)new_AST_Constant((Object)smallint27218);// =send163088 = (Object)new_AST_Send((Object)send163087, (Object)SMB__equal, 1, (Object)constant35140);((AST_Send)send163088)->info = (AST_Info)info5548;method41291 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24309, 7, assign20459, assign20460, assign20461, send163082, send163085, send163088, Self);((AST_Method)method41291)->info = (AST_Info)info5548;symbol44060 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");methodclosure41194 = (Object)new_Runtime_MethodClosure(method41291);store_method((Type_Class)class6736, (Type_Symbol)symbol44060, (Runtime_MethodClosure)methodclosure41194);// SCParserTest>>testScopedExpression//testScopedExpression// 	| parser string result |// 	parser := scparser expression.// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpressionlocalvariable27307 = (Object)new_AST_Variable_named(L"parser");localvariable27308 = (Object)new_AST_Variable_named(L"string");localvariable27309 = (Object)new_AST_Variable_named(L"result");array24310 = (Object)new_Type_Array_with(3, (Object)localvariable27307, (Object)localvariable27308, (Object)localvariable27309);// expressionsend163089 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44200, 0);string27489 = (Object)new_Type_String(L"testScopedExpression");string27490 = (Object)new_Type_String(L"testScopedExpression\n\t| parser string result |\n\tparser := scparser expression.\n\tstring := PEGStringScanner on: \'(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");smallint27219 = (Object)new_Type_SmallInt(-1);smallint27220 = (Object)new_Type_SmallInt(-1);info5549 = (Object)new_AST_Info((Type_String)string27490,(Type_String)string27489, (Type_SmallInt)smallint27219, (Type_SmallInt)smallint27220);((AST_Send)send163089)->info = (AST_Info)info5549;assign20462 = (Object)new_AST_Assign((Object)localvariable27307, (Object)send163089);string27491 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");constant35141 = (Object)new_AST_Constant((Object)string27491);// on:send163090 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35141);((AST_Send)send163090)->info = (AST_Info)info5549;assign20463 = (Object)new_AST_Assign((Object)localvariable27308, (Object)send163090);// match:send163091 = (Object)new_AST_Send((Object)localvariable27307, (Object)symbol44329, 1, (Object)localvariable27308);((AST_Send)send163091)->info = (AST_Info)info5549;assign20464 = (Object)new_AST_Assign((Object)localvariable27309, (Object)send163091);// classsend163092 = (Object)new_AST_Send((Object)localvariable27309, (Object)SMB_class, 0);((AST_Send)send163092)->info = (AST_Info)info5549;// shouldsend163093 = (Object)new_AST_Send((Object)send163092, (Object)symbol44402, 0);((AST_Send)send163093)->info = (AST_Info)info5549;// =send163094 = (Object)new_AST_Send((Object)send163093, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send163094)->info = (AST_Info)info5549;// variablesend163095 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44202, 0);((AST_Send)send163095)->info = (AST_Info)info5549;// classsend163096 = (Object)new_AST_Send((Object)send163095, (Object)SMB_class, 0);((AST_Send)send163096)->info = (AST_Info)info5549;// shouldsend163097 = (Object)new_AST_Send((Object)send163096, (Object)symbol44402, 0);((AST_Send)send163097)->info = (AST_Info)info5549;// =send163098 = (Object)new_AST_Send((Object)send163097, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send163098)->info = (AST_Info)info5549;// variablesend163099 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44202, 0);((AST_Send)send163099)->info = (AST_Info)info5549;// namesend163100 = (Object)new_AST_Send((Object)send163099, (Object)SMB_name, 0);((AST_Send)send163100)->info = (AST_Info)info5549;// shouldsend163101 = (Object)new_AST_Send((Object)send163100, (Object)symbol44402, 0);((AST_Send)send163101)->info = (AST_Info)info5549;string27492 = (Object)new_Type_String(L"a");constant35142 = (Object)new_AST_Constant((Object)string27492);// =send163102 = (Object)new_AST_Send((Object)send163101, (Object)SMB__equal, 1, (Object)constant35142);((AST_Send)send163102)->info = (AST_Info)info5549;// expressionsend163103 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44200, 0);((AST_Send)send163103)->info = (AST_Info)info5549;assign20465 = (Object)new_AST_Assign((Object)localvariable27309, (Object)send163103);// classsend163104 = (Object)new_AST_Send((Object)localvariable27309, (Object)SMB_class, 0);((AST_Send)send163104)->info = (AST_Info)info5549;// shouldsend163105 = (Object)new_AST_Send((Object)send163104, (Object)symbol44402, 0);((AST_Send)send163105)->info = (AST_Info)info5549;// =send163106 = (Object)new_AST_Send((Object)send163105, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send163106)->info = (AST_Info)info5549;// variablesend163107 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44202, 0);((AST_Send)send163107)->info = (AST_Info)info5549;// classsend163108 = (Object)new_AST_Send((Object)send163107, (Object)SMB_class, 0);((AST_Send)send163108)->info = (AST_Info)info5549;// shouldsend163109 = (Object)new_AST_Send((Object)send163108, (Object)symbol44402, 0);((AST_Send)send163109)->info = (AST_Info)info5549;// =send163110 = (Object)new_AST_Send((Object)send163109, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send163110)->info = (AST_Info)info5549;// variablesend163111 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44202, 0);((AST_Send)send163111)->info = (AST_Info)info5549;// namesend163112 = (Object)new_AST_Send((Object)send163111, (Object)SMB_name, 0);((AST_Send)send163112)->info = (AST_Info)info5549;// shouldsend163113 = (Object)new_AST_Send((Object)send163112, (Object)symbol44402, 0);((AST_Send)send163113)->info = (AST_Info)info5549;string27493 = (Object)new_Type_String(L"b");constant35143 = (Object)new_AST_Constant((Object)string27493);// =send163114 = (Object)new_AST_Send((Object)send163113, (Object)SMB__equal, 1, (Object)constant35143);((AST_Send)send163114)->info = (AST_Info)info5549;// expressionsend163115 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44200, 0);((AST_Send)send163115)->info = (AST_Info)info5549;assign20466 = (Object)new_AST_Assign((Object)localvariable27309, (Object)send163115);// classsend163116 = (Object)new_AST_Send((Object)localvariable27309, (Object)SMB_class, 0);((AST_Send)send163116)->info = (AST_Info)info5549;// shouldsend163117 = (Object)new_AST_Send((Object)send163116, (Object)symbol44402, 0);((AST_Send)send163117)->info = (AST_Info)info5549;// =send163118 = (Object)new_AST_Send((Object)send163117, (Object)SMB__equal, 1, (Object)classreference13396);((AST_Send)send163118)->info = (AST_Info)info5549;// variablesend163119 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44202, 0);((AST_Send)send163119)->info = (AST_Info)info5549;// classsend163120 = (Object)new_AST_Send((Object)send163119, (Object)SMB_class, 0);((AST_Send)send163120)->info = (AST_Info)info5549;// shouldsend163121 = (Object)new_AST_Send((Object)send163120, (Object)symbol44402, 0);((AST_Send)send163121)->info = (AST_Info)info5549;// =send163122 = (Object)new_AST_Send((Object)send163121, (Object)SMB__equal, 1, (Object)classreference13400);((AST_Send)send163122)->info = (AST_Info)info5549;// variablesend163123 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44202, 0);((AST_Send)send163123)->info = (AST_Info)info5549;// namesend163124 = (Object)new_AST_Send((Object)send163123, (Object)SMB_name, 0);((AST_Send)send163124)->info = (AST_Info)info5549;// shouldsend163125 = (Object)new_AST_Send((Object)send163124, (Object)symbol44402, 0);((AST_Send)send163125)->info = (AST_Info)info5549;string27494 = (Object)new_Type_String(L"c");constant35144 = (Object)new_AST_Constant((Object)string27494);// =send163126 = (Object)new_AST_Send((Object)send163125, (Object)SMB__equal, 1, (Object)constant35144);((AST_Send)send163126)->info = (AST_Info)info5549;// expressionsend163127 = (Object)new_AST_Send((Object)localvariable27309, (Object)symbol44200, 0);((AST_Send)send163127)->info = (AST_Info)info5549;// classsend163128 = (Object)new_AST_Send((Object)send163127, (Object)SMB_class, 0);((AST_Send)send163128)->info = (AST_Info)info5549;// shouldsend163129 = (Object)new_AST_Send((Object)send163128, (Object)symbol44402, 0);((AST_Send)send163129)->info = (AST_Info)info5549;// =send163130 = (Object)new_AST_Send((Object)send163129, (Object)SMB__equal, 1, (Object)classreference13406);((AST_Send)send163130)->info = (AST_Info)info5549;method41292 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24310, 16, assign20462, assign20463, assign20464, send163094, send163098, send163102, assign20465, send163106, send163110, send163114, assign20466, send163118, send163122, send163126, send163130, Self);((AST_Method)method41292)->info = (AST_Info)info5549;symbol44029 = (Object)new_Type_Symbol_cached(L"testScopedExpression");methodclosure41195 = (Object)new_Runtime_MethodClosure(method41292);store_method((Type_Class)class6736, (Type_Symbol)symbol44029, (Runtime_MethodClosure)methodclosure41195);// SCParserTest>>testKeywordsArguments//testKeywordsArguments// 	| parser string result |// 	parser := scparser keywordsArguments.// 	string := PEGStringScanner on: 'test: ab'.// 	result := parser match: string.// 	result class should = ASTKeywordMessageDefinition.// 	result keywords should = (OrderedCollection with: 'test').// 	result parameters size should = 1.// 	result parameters first should = (ASTVariable new name: 'ab').// 	string position should = 8.// 	string := PEGStringScanner on: 'bla a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: 'test: d bla: c boe'.// 	result := parser match: string.// 	result class should = ASTKeywordMessageDefinition.// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').// 	result parameters size should = 2.// 	result parameters first should = (ASTVariable new name: 'd').// 	result parameters second should = (ASTVariable new name: 'c').// 	string position should = 15localvariable27310 = (Object)new_AST_Variable_named(L"parser");localvariable27311 = (Object)new_AST_Variable_named(L"string");localvariable27312 = (Object)new_AST_Variable_named(L"result");array24311 = (Object)new_Type_Array_with(3, (Object)localvariable27310, (Object)localvariable27311, (Object)localvariable27312);// keywordsArgumentssend163131 = (Object)new_AST_Send((Object)instancevariable16409, (Object)symbol44428, 0);string27495 = (Object)new_Type_String(L"testKeywordsArguments");string27496 = (Object)new_Type_String(L"testKeywordsArguments\n\t| parser string result |\n\tparser := scparser keywordsArguments.\n\tstring := PEGStringScanner on: \'test: ab\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordMessageDefinition.\n\tresult keywords should = (OrderedCollection with: \'test\').\n\tresult parameters size should = 1.\n\tresult parameters first should = (ASTVariable new name: \'ab\').\n\tstring position should = 8.\n\tstring := PEGStringScanner on: \'bla a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'test: d bla: c boe\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordMessageDefinition.\n\tresult keywords should = (OrderedCollection with: \'test\' with: \'bla\').\n\tresult parameters size should = 2.\n\tresult parameters first should = (ASTVariable new name: \'d\').\n\tresult parameters second should = (ASTVariable new name: \'c\').\n\tstring position should = 15");smallint27221 = (Object)new_Type_SmallInt(-1);smallint27222 = (Object)new_Type_SmallInt(-1);info5550 = (Object)new_AST_Info((Type_String)string27496,(Type_String)string27495, (Type_SmallInt)smallint27221, (Type_SmallInt)smallint27222);((AST_Send)send163131)->info = (AST_Info)info5550;assign20467 = (Object)new_AST_Assign((Object)localvariable27310, (Object)send163131);string27497 = (Object)new_Type_String(L"test: ab");constant35145 = (Object)new_AST_Constant((Object)string27497);// on:send163132 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35145);((AST_Send)send163132)->info = (AST_Info)info5550;assign20468 = (Object)new_AST_Assign((Object)localvariable27311, (Object)send163132);// match:send163133 = (Object)new_AST_Send((Object)localvariable27310, (Object)symbol44329, 1, (Object)localvariable27311);((AST_Send)send163133)->info = (AST_Info)info5550;assign20469 = (Object)new_AST_Assign((Object)localvariable27312, (Object)send163133);// classsend163134 = (Object)new_AST_Send((Object)localvariable27312, (Object)SMB_class, 0);((AST_Send)send163134)->info = (AST_Info)info5550;// shouldsend163135 = (Object)new_AST_Send((Object)send163134, (Object)symbol44402, 0);((AST_Send)send163135)->info = (AST_Info)info5550;// =send163136 = (Object)new_AST_Send((Object)send163135, (Object)SMB__equal, 1, (Object)classreference13394);((AST_Send)send163136)->info = (AST_Info)info5550;// keywordssend163137 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44214, 0);((AST_Send)send163137)->info = (AST_Info)info5550;// shouldsend163138 = (Object)new_AST_Send((Object)send163137, (Object)symbol44402, 0);((AST_Send)send163138)->info = (AST_Info)info5550;string27498 = (Object)new_Type_String(L"test");constant35146 = (Object)new_AST_Constant((Object)string27498);// with:send163139 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44178, 1, (Object)constant35146);((AST_Send)send163139)->info = (AST_Info)info5550;// =send163140 = (Object)new_AST_Send((Object)send163138, (Object)SMB__equal, 1, (Object)send163139);((AST_Send)send163140)->info = (AST_Info)info5550;// parameterssend163141 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44211, 0);((AST_Send)send163141)->info = (AST_Info)info5550;// sizesend163142 = (Object)new_AST_Send((Object)send163141, (Object)SMB_size, 0);((AST_Send)send163142)->info = (AST_Info)info5550;// shouldsend163143 = (Object)new_AST_Send((Object)send163142, (Object)symbol44402, 0);((AST_Send)send163143)->info = (AST_Info)info5550;smallint27223 = (Object)new_Type_SmallInt(1);constant35147 = (Object)new_AST_Constant((Object)smallint27223);// =send163144 = (Object)new_AST_Send((Object)send163143, (Object)SMB__equal, 1, (Object)constant35147);((AST_Send)send163144)->info = (AST_Info)info5550;// parameterssend163145 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44211, 0);((AST_Send)send163145)->info = (AST_Info)info5550;// firstsend163146 = (Object)new_AST_Send((Object)send163145, (Object)symbol44180, 0);((AST_Send)send163146)->info = (AST_Info)info5550;// shouldsend163147 = (Object)new_AST_Send((Object)send163146, (Object)symbol44402, 0);((AST_Send)send163147)->info = (AST_Info)info5550;// newsend163148 = (Object)new_AST_Send((Object)classreference13400, (Object)symbol44095, 0);((AST_Send)send163148)->info = (AST_Info)info5550;string27499 = (Object)new_Type_String(L"ab");constant35148 = (Object)new_AST_Constant((Object)string27499);// name:send163149 = (Object)new_AST_Send((Object)send163148, (Object)symbol44204, 1, (Object)constant35148);((AST_Send)send163149)->info = (AST_Info)info5550;// =send163150 = (Object)new_AST_Send((Object)send163147, (Object)SMB__equal, 1, (Object)send163149);((AST_Send)send163150)->info = (AST_Info)info5550;// positionsend163151 = (Object)new_AST_Send((Object)localvariable27311, (Object)symbol44475, 0);((AST_Send)send163151)->info = (AST_Info)info5550;// shouldsend163152 = (Object)new_AST_Send((Object)send163151, (Object)symbol44402, 0);((AST_Send)send163152)->info = (AST_Info)info5550;smallint27224 = (Object)new_Type_SmallInt(8);constant35149 = (Object)new_AST_Constant((Object)smallint27224);// =send163153 = (Object)new_AST_Send((Object)send163152, (Object)SMB__equal, 1, (Object)constant35149);((AST_Send)send163153)->info = (AST_Info)info5550;string27500 = (Object)new_Type_String(L"bla a");constant35150 = (Object)new_AST_Constant((Object)string27500);// on:send163154 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35150);((AST_Send)send163154)->info = (AST_Info)info5550;assign20470 = (Object)new_AST_Assign((Object)localvariable27311, (Object)send163154);// match:send163155 = (Object)new_AST_Send((Object)localvariable27310, (Object)symbol44329, 1, (Object)localvariable27311);((AST_Send)send163155)->info = (AST_Info)info5550;// shouldsend163156 = (Object)new_AST_Send((Object)send163155, (Object)symbol44402, 0);((AST_Send)send163156)->info = (AST_Info)info5550;// besend163157 = (Object)new_AST_Send((Object)send163156, (Object)symbol44476, 0);((AST_Send)send163157)->info = (AST_Info)info5550;// isNilsend163158 = (Object)new_AST_Send((Object)send163157, (Object)SMB_isNil, 0);((AST_Send)send163158)->info = (AST_Info)info5550;// positionsend163159 = (Object)new_AST_Send((Object)localvariable27311, (Object)symbol44475, 0);((AST_Send)send163159)->info = (AST_Info)info5550;// shouldsend163160 = (Object)new_AST_Send((Object)send163159, (Object)symbol44402, 0);((AST_Send)send163160)->info = (AST_Info)info5550;smallint27225 = (Object)new_Type_SmallInt(0);constant35151 = (Object)new_AST_Constant((Object)smallint27225);// =send163161 = (Object)new_AST_Send((Object)send163160, (Object)SMB__equal, 1, (Object)constant35151);((AST_Send)send163161)->info = (AST_Info)info5550;string27501 = (Object)new_Type_String(L"test: d bla: c boe");constant35152 = (Object)new_AST_Constant((Object)string27501);// on:send163162 = (Object)new_AST_Send((Object)classreference13441, (Object)SMB_on_, 1, (Object)constant35152);((AST_Send)send163162)->info = (AST_Info)info5550;assign20471 = (Object)new_AST_Assign((Object)localvariable27311, (Object)send163162);// match:send163163 = (Object)new_AST_Send((Object)localvariable27310, (Object)symbol44329, 1, (Object)localvariable27311);((AST_Send)send163163)->info = (AST_Info)info5550;assign20472 = (Object)new_AST_Assign((Object)localvariable27312, (Object)send163163);// classsend163164 = (Object)new_AST_Send((Object)localvariable27312, (Object)SMB_class, 0);((AST_Send)send163164)->info = (AST_Info)info5550;// shouldsend163165 = (Object)new_AST_Send((Object)send163164, (Object)symbol44402, 0);((AST_Send)send163165)->info = (AST_Info)info5550;// =send163166 = (Object)new_AST_Send((Object)send163165, (Object)SMB__equal, 1, (Object)classreference13394);((AST_Send)send163166)->info = (AST_Info)info5550;// keywordssend163167 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44214, 0);((AST_Send)send163167)->info = (AST_Info)info5550;// shouldsend163168 = (Object)new_AST_Send((Object)send163167, (Object)symbol44402, 0);((AST_Send)send163168)->info = (AST_Info)info5550;symbol44483 = (Object)new_Type_Symbol_cached(L"with:with:");string27502 = (Object)new_Type_String(L"test");constant35153 = (Object)new_AST_Constant((Object)string27502);string27503 = (Object)new_Type_String(L"bla");constant35154 = (Object)new_AST_Constant((Object)string27503);// with:with:send163169 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44483, 2, (Object)constant35153, (Object)constant35154);((AST_Send)send163169)->info = (AST_Info)info5550;// =send163170 = (Object)new_AST_Send((Object)send163168, (Object)SMB__equal, 1, (Object)send163169);((AST_Send)send163170)->info = (AST_Info)info5550;// parameterssend163171 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44211, 0);((AST_Send)send163171)->info = (AST_Info)info5550;// sizesend163172 = (Object)new_AST_Send((Object)send163171, (Object)SMB_size, 0);((AST_Send)send163172)->info = (AST_Info)info5550;// shouldsend163173 = (Object)new_AST_Send((Object)send163172, (Object)symbol44402, 0);((AST_Send)send163173)->info = (AST_Info)info5550;smallint27226 = (Object)new_Type_SmallInt(2);constant35155 = (Object)new_AST_Constant((Object)smallint27226);// =send163174 = (Object)new_AST_Send((Object)send163173, (Object)SMB__equal, 1, (Object)constant35155);((AST_Send)send163174)->info = (AST_Info)info5550;// parameterssend163175 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44211, 0);((AST_Send)send163175)->info = (AST_Info)info5550;// firstsend163176 = (Object)new_AST_Send((Object)send163175, (Object)symbol44180, 0);((AST_Send)send163176)->info = (AST_Info)info5550;// shouldsend163177 = (Object)new_AST_Send((Object)send163176, (Object)symbol44402, 0);((AST_Send)send163177)->info = (AST_Info)info5550;// newsend163178 = (Object)new_AST_Send((Object)classreference13400, (Object)symbol44095, 0);((AST_Send)send163178)->info = (AST_Info)info5550;string27504 = (Object)new_Type_String(L"d");constant35156 = (Object)new_AST_Constant((Object)string27504);// name:send163179 = (Object)new_AST_Send((Object)send163178, (Object)symbol44204, 1, (Object)constant35156);((AST_Send)send163179)->info = (AST_Info)info5550;// =send163180 = (Object)new_AST_Send((Object)send163177, (Object)SMB__equal, 1, (Object)send163179);((AST_Send)send163180)->info = (AST_Info)info5550;// parameterssend163181 = (Object)new_AST_Send((Object)localvariable27312, (Object)symbol44211, 0);((AST_Send)send163181)->info = (AST_Info)info5550;// secondsend163182 = (Object)new_AST_Send((Object)send163181, (Object)symbol44436, 0);((AST_Send)send163182)->info = (AST_Info)info5550;// shouldsend163183 = (Object)new_AST_Send((Object)send163182, (Object)symbol44402, 0);((AST_Send)send163183)->info = (AST_Info)info5550;// newsend163184 = (Object)new_AST_Send((Object)classreference13400, (Object)symbol44095, 0);((AST_Send)send163184)->info = (AST_Info)info5550;string27505 = (Object)new_Type_String(L"c");constant35157 = (Object)new_AST_Constant((Object)string27505);// name:send163185 = (Object)new_AST_Send((Object)send163184, (Object)symbol44204, 1, (Object)constant35157);((AST_Send)send163185)->info = (AST_Info)info5550;// =send163186 = (Object)new_AST_Send((Object)send163183, (Object)SMB__equal, 1, (Object)send163185);((AST_Send)send163186)->info = (AST_Info)info5550;// positionsend163187 = (Object)new_AST_Send((Object)localvariable27311, (Object)symbol44475, 0);((AST_Send)send163187)->info = (AST_Info)info5550;// shouldsend163188 = (Object)new_AST_Send((Object)send163187, (Object)symbol44402, 0);((AST_Send)send163188)->info = (AST_Info)info5550;smallint27227 = (Object)new_Type_SmallInt(15);constant35158 = (Object)new_AST_Constant((Object)smallint27227);// =send163189 = (Object)new_AST_Send((Object)send163188, (Object)SMB__equal, 1, (Object)constant35158);((AST_Send)send163189)->info = (AST_Info)info5550;method41293 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array24311, 20, assign20467, assign20468, assign20469, send163136, send163140, send163144, send163150, send163153, assign20470, send163158, send163161, assign20471, assign20472, send163166, send163170, send163174, send163180, send163186, send163189, Self);((AST_Method)method41293)->info = (AST_Info)info5550;symbol44052 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");methodclosure41196 = (Object)new_Runtime_MethodClosure(method41293);store_method((Type_Class)class6736, (Type_Symbol)symbol44052, (Runtime_MethodClosure)methodclosure41196);classreference13445 = (Object)new_Organization_ClassReference((Type_Class)class6739);// PEGOptionalResult>>resultIfFailed://resultIfFailed: alternative// 	self subclassResponsibilitylocalvariable27313 = (Object)new_AST_Variable_named(L"alternative");array24312 = (Object)new_Type_Array_with(1, (Object)localvariable27313);symbol44484 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");// subclassResponsibilitysend163190 = (Object)new_AST_Send((Object)Self, (Object)symbol44484, 0);string27506 = (Object)new_Type_String(L"resultIfFailed:");string27507 = (Object)new_Type_String(L"resultIfFailed: alternative\n\tself subclassResponsibility");smallint27228 = (Object)new_Type_SmallInt(-1);smallint27229 = (Object)new_Type_SmallInt(-1);info5551 = (Object)new_AST_Info((Type_String)string27507,(Type_String)string27506, (Type_SmallInt)smallint27228, (Type_SmallInt)smallint27229);((AST_Send)send163190)->info = (AST_Info)info5551;method41294 = (Object)new_AST_Method_with((Type_Array)array24312, (Type_Array)empty_Type_Array, 2, send163190, Self);((AST_Method)method41294)->info = (AST_Info)info5551;methodclosure41197 = (Object)new_Runtime_MethodClosure(method41294);store_method((Type_Class)class6739, (Type_Symbol)symbol44379, (Runtime_MethodClosure)methodclosure41197);classreference13446 = (Object)new_Organization_ClassReference((Type_Class)class6740);// PEGOptionalExpression>>initialize://initialize: expression// 	super initialize.// 	child := expression.// 	skipWhitespace := true.localvariable27314 = (Object)new_AST_Variable_named(L"expression");array24313 = (Object)new_Type_Array_with(1, (Object)localvariable27314);super2480 = (Object)new_AST_Super((Object)symbol44004, 0);assign20473 = (Object)new_AST_Assign((Object)instancevariable16413, (Object)localvariable27314);assign20474 = (Object)new_AST_Assign((Object)instancevariable16414, (Object)True_Const);method41295 = (Object)new_AST_Method_with((Type_Array)array24313, (Type_Array)empty_Type_Array, 4, super2480, assign20473, assign20474, Self);string27508 = (Object)new_Type_String(L"initialize:");string27509 = (Object)new_Type_String(L"initialize: expression\n\tsuper initialize.\n\tchild := expression.\n\tskipWhitespace := true.");smallint27230 = (Object)new_Type_SmallInt(-1);smallint27231 = (Object)new_Type_SmallInt(-1);info5552 = (Object)new_AST_Info((Type_String)string27509,(Type_String)string27508, (Type_SmallInt)smallint27230, (Type_SmallInt)smallint27231);((AST_Method)method41295)->info = (AST_Info)info5552;methodclosure41198 = (Object)new_Runtime_MethodClosure(method41295);store_method((Type_Class)class6740, (Type_Symbol)symbol44363, (Runtime_MethodClosure)methodclosure41198);// PEGOptionalExpression>>privateMatch://privateMatch: input // 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])localvariable27315 = (Object)new_AST_Variable_named(L"input");array24314 = (Object)new_Type_Array_with(1, (Object)localvariable27315);variable1872 = (Object)new_AST_Variable_named(L"return");array24315 = (Object)new_Type_Array_with(1, (Object)variable1872);classreference13447 = (Object)new_Organization_ClassReference((Type_Class)class6746);// PEGSucceededOptionalResult>>result://result: newResult// 	result := newResultlocalvariable27316 = (Object)new_AST_Variable_named(L"newResult");array24316 = (Object)new_Type_Array_with(1, (Object)localvariable27316);assign20475 = (Object)new_AST_Assign((Object)instancevariable16422, (Object)localvariable27316);method41296 = (Object)new_AST_Method_with((Type_Array)array24316, (Type_Array)empty_Type_Array, 2, assign20475, Self);string27510 = (Object)new_Type_String(L"result:");string27511 = (Object)new_Type_String(L"result: newResult\n\tresult := newResult");smallint27232 = (Object)new_Type_SmallInt(-1);smallint27233 = (Object)new_Type_SmallInt(-1);info5553 = (Object)new_AST_Info((Type_String)string27511,(Type_String)string27510, (Type_SmallInt)smallint27232, (Type_SmallInt)smallint27233);((AST_Method)method41296)->info = (AST_Info)info5553;symbol44380 = (Object)new_Type_Symbol_cached(L"result:");methodclosure41199 = (Object)new_Runtime_MethodClosure(method41296);store_method((Type_Class)class6746, (Type_Symbol)symbol44380, (Runtime_MethodClosure)methodclosure41199);// PEGSucceededOptionalResult>>resultIfFailed://resultIfFailed: alternative// 	^ resultlocalvariable27317 = (Object)new_AST_Variable_named(L"alternative");array24317 = (Object)new_Type_Array_with(1, (Object)localvariable27317);method41297 = (Object)new_AST_Method_with((Type_Array)array24317, (Type_Array)empty_Type_Array, 1, instancevariable16422);string27512 = (Object)new_Type_String(L"resultIfFailed:");string27513 = (Object)new_Type_String(L"resultIfFailed: alternative\n\t^ result");smallint27234 = (Object)new_Type_SmallInt(-1);smallint27235 = (Object)new_Type_SmallInt(-1);info5554 = (Object)new_AST_Info((Type_String)string27513,(Type_String)string27512, (Type_SmallInt)smallint27234, (Type_SmallInt)smallint27235);((AST_Method)method41297)->info = (AST_Info)info5554;methodclosure41200 = (Object)new_Runtime_MethodClosure(method41297);store_method((Type_Class)class6746, (Type_Symbol)symbol44379, (Runtime_MethodClosure)methodclosure41200);// PEGSucceededOptionalResult>>ifMatched://ifMatched: block// 	block value: resultlocalvariable27318 = (Object)new_AST_Variable_named(L"block");array24318 = (Object)new_Type_Array_with(1, (Object)localvariable27318);// value:send163191 = (Object)new_AST_Send((Object)localvariable27318, (Object)SMB_value_, 1, (Object)instancevariable16422);string27514 = (Object)new_Type_String(L"ifMatched:");string27515 = (Object)new_Type_String(L"ifMatched: block\n\tblock value: result");smallint27236 = (Object)new_Type_SmallInt(-1);smallint27237 = (Object)new_Type_SmallInt(-1);info5555 = (Object)new_AST_Info((Type_String)string27515,(Type_String)string27514, (Type_SmallInt)smallint27236, (Type_SmallInt)smallint27237);((AST_Send)send163191)->info = (AST_Info)info5555;method41298 = (Object)new_AST_Method_with((Type_Array)array24318, (Type_Array)empty_Type_Array, 2, send163191, Self);((AST_Method)method41298)->info = (AST_Info)info5555;methodclosure41201 = (Object)new_Runtime_MethodClosure(method41298);store_method((Type_Class)class6746, (Type_Symbol)symbol44381, (Runtime_MethodClosure)methodclosure41201);// match:send163192 = (Object)new_AST_Send((Object)instancevariable16413, (Object)symbol44329, 1, (Object)localvariable27315);string27516 = (Object)new_Type_String(L"privateMatch:");string27517 = (Object)new_Type_String(L"privateMatch: input \n\t^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])");smallint27238 = (Object)new_Type_SmallInt(-1);smallint27239 = (Object)new_Type_SmallInt(-1);info5556 = (Object)new_AST_Info((Type_String)string27517,(Type_String)string27516, (Type_SmallInt)smallint27238, (Type_SmallInt)smallint27239);((AST_Send)send163192)->info = (AST_Info)info5556;classreference13448 = (Object)new_Organization_ClassReference((Type_Class)class6752);// escape:send163193 = (Object)new_AST_Send((Object)variable1872, (Object)SMB_escape_, 1, (Object)classreference13448);((AST_Send)send163193)->info = (AST_Info)info5556;block11865 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send163193);// ifNil:send163194 = (Object)new_AST_Send((Object)send163192, (Object)symbol44005, 1, (Object)block11865);((AST_Send)send163194)->info = (AST_Info)info5556;// new:send163195 = (Object)new_AST_Send((Object)classreference13447, (Object)symbol44091, 1, (Object)send163194);((AST_Send)send163195)->info = (AST_Info)info5556;block11866 = (Object)new_AST_Block_with((Type_Array)array24315, (Type_Array)empty_Type_Array, 1, 1, send163195);// on:send163196 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11866);method41299 = (Object)new_AST_Method_with((Type_Array)array24314, (Type_Array)empty_Type_Array, 1, send163196);((AST_Method)method41299)->info = (AST_Info)info5556;methodclosure41202 = (Object)new_Runtime_MethodClosure(method41299);store_method((Type_Class)class6740, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure41202);// PEGOptionalExpression>>optional//optional// 	"^ self"method41300 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string27518 = (Object)new_Type_String(L"optional");string27519 = (Object)new_Type_String(L"optional\n\t\"^ self\"");smallint27240 = (Object)new_Type_SmallInt(-1);smallint27241 = (Object)new_Type_SmallInt(-1);info5557 = (Object)new_AST_Info((Type_String)string27519,(Type_String)string27518, (Type_SmallInt)smallint27240, (Type_SmallInt)smallint27241);((AST_Method)method41300)->info = (AST_Info)info5557;methodclosure41203 = (Object)new_Runtime_MethodClosure(method41300);store_method((Type_Class)class6740, (Type_Symbol)symbol44338, (Runtime_MethodClosure)methodclosure41203);classreference13449 = (Object)new_Organization_ClassReference((Type_Class)class6741);// PEGSequenceExpression>>privateMatch://privateMatch: input// 	| result match |// 	result := OrderedCollection new.// 	children do: [:child | // 		skipWhitespace ifTrue: [input skipWhitespace].// 		match := child match: input.// 		match ifNil: [^ match].// 		child omit // 			ifFalse: [result add: match]].// 	result size = 1 // 		ifTrue: [^ result first].// 	^ resultlocalvariable27319 = (Object)new_AST_Variable_named(L"input");array24319 = (Object)new_Type_Array_with(1, (Object)localvariable27319);localvariable27320 = (Object)new_AST_Variable_named(L"result");localvariable27321 = (Object)new_AST_Variable_named(L"match");array24320 = (Object)new_Type_Array_with(2, (Object)localvariable27320, (Object)localvariable27321);variable1873 = (Object)new_AST_Variable_named(L"return");array24321 = (Object)new_Type_Array_with(1, (Object)variable1873);// newsend163197 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string27520 = (Object)new_Type_String(L"privateMatch:");string27521 = (Object)new_Type_String(L"privateMatch: input\n\t| result match |\n\tresult := OrderedCollection new.\n\tchildren do: [:child | \n\t\tskipWhitespace ifTrue: [input skipWhitespace].\n\t\tmatch := child match: input.\n\t\tmatch ifNil: [^ match].\n\t\tchild omit \n\t\t\tifFalse: [result add: match]].\n\tresult size = 1 \n\t\tifTrue: [^ result first].\n\t^ result");smallint27242 = (Object)new_Type_SmallInt(-1);smallint27243 = (Object)new_Type_SmallInt(-1);info5558 = (Object)new_AST_Info((Type_String)string27521,(Type_String)string27520, (Type_SmallInt)smallint27242, (Type_SmallInt)smallint27243);((AST_Send)send163197)->info = (AST_Info)info5558;assign20476 = (Object)new_AST_Assign((Object)localvariable27320, (Object)send163197);localvariable27322 = (Object)new_AST_Variable_named(L"child");array24322 = (Object)new_Type_Array_with(1, (Object)localvariable27322);// skipWhitespacesend163198 = (Object)new_AST_Send((Object)localvariable27319, (Object)symbol44155, 0);((AST_Send)send163198)->info = (AST_Info)info5558;block11867 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send163198);// ifTrue:send163199 = (Object)new_AST_Send((Object)instancevariable16416, (Object)SMB_ifTrue_, 1, (Object)block11867);((AST_Send)send163199)->info = (AST_Info)info5558;// match:send163200 = (Object)new_AST_Send((Object)localvariable27322, (Object)symbol44329, 1, (Object)localvariable27319);((AST_Send)send163200)->info = (AST_Info)info5558;assign20477 = (Object)new_AST_Assign((Object)localvariable27321, (Object)send163200);// escape:send163201 = (Object)new_AST_Send((Object)variable1873, (Object)SMB_escape_, 1, (Object)localvariable27321);((AST_Send)send163201)->info = (AST_Info)info5558;block11868 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send163201);// ifNil:send163202 = (Object)new_AST_Send((Object)localvariable27321, (Object)symbol44005, 1, (Object)block11868);((AST_Send)send163202)->info = (AST_Info)info5558;symbol44327 = (Object)new_Type_Symbol_cached(L"omit");// omitsend163203 = (Object)new_AST_Send((Object)localvariable27322, (Object)symbol44327, 0);((AST_Send)send163203)->info = (AST_Info)info5558;// add:send163204 = (Object)new_AST_Send((Object)localvariable27320, (Object)symbol44183, 1, (Object)localvariable27321);((AST_Send)send163204)->info = (AST_Info)info5558;block11869 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send163204);// ifFalse:send163205 = (Object)new_AST_Send((Object)send163203, (Object)SMB_ifFalse_, 1, (Object)block11869);((AST_Send)send163205)->info = (AST_Info)info5558;block11870 = (Object)new_AST_Block_with((Type_Array)array24322, (Type_Array)empty_Type_Array, 2, 4, send163199, assign20477, send163202, send163205);// do:send163206 = (Object)new_AST_Send((Object)instancevariable16415, (Object)symbol44127, 1, (Object)block11870);((AST_Send)send163206)->info = (AST_Info)info5558;// sizesend163207 = (Object)new_AST_Send((Object)localvariable27320, (Object)SMB_size, 0);((AST_Send)send163207)->info = (AST_Info)info5558;smallint27244 = (Object)new_Type_SmallInt(1);constant35159 = (Object)new_AST_Constant((Object)smallint27244);// =send163208 = (Object)new_AST_Send((Object)send163207, (Object)SMB__equal, 1, (Object)constant35159);((AST_Send)send163208)->info = (AST_Info)info5558;// firstsend163209 = (Object)new_AST_Send((Object)localvariable27320, (Object)symbol44180, 0);((AST_Send)send163209)->info = (AST_Info)info5558;// escape:send163210 = (Object)new_AST_Send((Object)variable1873, (Object)SMB_escape_, 1, (Object)send163209);((AST_Send)send163210)->info = (AST_Info)info5558;block11871 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send163210);// ifTrue:send163211 = (Object)new_AST_Send((Object)send163208, (Object)SMB_ifTrue_, 1, (Object)block11871);((AST_Send)send163211)->info = (AST_Info)info5558;block11872 = (Object)new_AST_Block_with((Type_Array)array24321, (Type_Array)empty_Type_Array, 1, 4, assign20476, send163206, send163211, localvariable27320);// on:send163212 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11872);method41301 = (Object)new_AST_Method_with((Type_Array)array24319, (Type_Array)array24320, 1, send163212);((AST_Method)method41301)->info = (AST_Info)info5558;methodclosure41204 = (Object)new_Runtime_MethodClosure(method41301);store_method((Type_Class)class6741, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure41204);// PEGSequenceExpression>><&//<& child// 	children add: child asPEGlocalvariable27323 = (Object)new_AST_Variable_named(L"child");array24323 = (Object)new_Type_Array_with(1, (Object)localvariable27323);// asPEGsend163213 = (Object)new_AST_Send((Object)localvariable27323, (Object)symbol44131, 0);string27522 = (Object)new_Type_String(L"<&");string27523 = (Object)new_Type_String(L"<& child\n\tchildren add: child asPEG");smallint27245 = (Object)new_Type_SmallInt(-1);smallint27246 = (Object)new_Type_SmallInt(-1);info5559 = (Object)new_AST_Info((Type_String)string27523,(Type_String)string27522, (Type_SmallInt)smallint27245, (Type_SmallInt)smallint27246);((AST_Send)send163213)->info = (AST_Info)info5559;// add:send163214 = (Object)new_AST_Send((Object)instancevariable16415, (Object)symbol44183, 1, (Object)send163213);((AST_Send)send163214)->info = (AST_Info)info5559;method41302 = (Object)new_AST_Method_with((Type_Array)array24323, (Type_Array)empty_Type_Array, 2, send163214, Self);((AST_Method)method41302)->info = (AST_Info)info5559;methodclosure41205 = (Object)new_Runtime_MethodClosure(method41302);store_method((Type_Class)class6741, (Type_Symbol)symbol44372, (Runtime_MethodClosure)methodclosure41205);// PEGSequenceExpression>>skipWhitespace//skipWhitespace// 	^ skipWhitespacemethod41303 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16416);string27524 = (Object)new_Type_String(L"skipWhitespace");string27525 = (Object)new_Type_String(L"skipWhitespace\n\t^ skipWhitespace");smallint27247 = (Object)new_Type_SmallInt(-1);smallint27248 = (Object)new_Type_SmallInt(-1);info5560 = (Object)new_AST_Info((Type_String)string27525,(Type_String)string27524, (Type_SmallInt)smallint27247, (Type_SmallInt)smallint27248);((AST_Method)method41303)->info = (AST_Info)info5560;methodclosure41206 = (Object)new_Runtime_MethodClosure(method41303);store_method((Type_Class)class6741, (Type_Symbol)symbol44155, (Runtime_MethodClosure)methodclosure41206);// PEGSequenceExpression>>initialize://initialize: theChildren// 	super initialize.// 	children := theChildren.// 	skipWhitespace := true.localvariable27324 = (Object)new_AST_Variable_named(L"theChildren");array24324 = (Object)new_Type_Array_with(1, (Object)localvariable27324);super2481 = (Object)new_AST_Super((Object)symbol44004, 0);assign20478 = (Object)new_AST_Assign((Object)instancevariable16415, (Object)localvariable27324);assign20479 = (Object)new_AST_Assign((Object)instancevariable16416, (Object)True_Const);method41304 = (Object)new_AST_Method_with((Type_Array)array24324, (Type_Array)empty_Type_Array, 4, super2481, assign20478, assign20479, Self);string27526 = (Object)new_Type_String(L"initialize:");string27527 = (Object)new_Type_String(L"initialize: theChildren\n\tsuper initialize.\n\tchildren := theChildren.\n\tskipWhitespace := true.");smallint27249 = (Object)new_Type_SmallInt(-1);smallint27250 = (Object)new_Type_SmallInt(-1);info5561 = (Object)new_AST_Info((Type_String)string27527,(Type_String)string27526, (Type_SmallInt)smallint27249, (Type_SmallInt)smallint27250);((AST_Method)method41304)->info = (AST_Info)info5561;methodclosure41207 = (Object)new_Runtime_MethodClosure(method41304);store_method((Type_Class)class6741, (Type_Symbol)symbol44363, (Runtime_MethodClosure)methodclosure41207);// PEGSequenceExpression>>initialize//initialize// 	super initialize.// 	self initialize: OrderedCollection newsuper2482 = (Object)new_AST_Super((Object)symbol44004, 0);// newsend163215 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string27528 = (Object)new_Type_String(L"initialize");string27529 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tself initialize: OrderedCollection new");smallint27251 = (Object)new_Type_SmallInt(-1);smallint27252 = (Object)new_Type_SmallInt(-1);info5562 = (Object)new_AST_Info((Type_String)string27529,(Type_String)string27528, (Type_SmallInt)smallint27251, (Type_SmallInt)smallint27252);((AST_Send)send163215)->info = (AST_Info)info5562;// initialize:send163216 = (Object)new_AST_Send((Object)Self, (Object)symbol44363, 1, (Object)send163215);((AST_Send)send163216)->info = (AST_Info)info5562;method41305 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super2482, send163216, Self);((AST_Method)method41305)->info = (AST_Info)info5562;methodclosure41208 = (Object)new_Runtime_MethodClosure(method41305);store_method((Type_Class)class6741, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure41208);// PEGSequenceExpression>>skipWhitespace://skipWhitespace: anObject// 	skipWhitespace := anObjectlocalvariable27325 = (Object)new_AST_Variable_named(L"anObject");array24325 = (Object)new_Type_Array_with(1, (Object)localvariable27325);assign20480 = (Object)new_AST_Assign((Object)instancevariable16416, (Object)localvariable27325);method41306 = (Object)new_AST_Method_with((Type_Array)array24325, (Type_Array)empty_Type_Array, 2, assign20480, Self);string27530 = (Object)new_Type_String(L"skipWhitespace:");string27531 = (Object)new_Type_String(L"skipWhitespace: anObject\n\tskipWhitespace := anObject");smallint27253 = (Object)new_Type_SmallInt(-1);smallint27254 = (Object)new_Type_SmallInt(-1);info5563 = (Object)new_AST_Info((Type_String)string27531,(Type_String)string27530, (Type_SmallInt)smallint27253, (Type_SmallInt)smallint27254);((AST_Method)method41306)->info = (AST_Info)info5563;symbol44371 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");methodclosure41209 = (Object)new_Runtime_MethodClosure(method41306);store_method((Type_Class)class6741, (Type_Symbol)symbol44371, (Runtime_MethodClosure)methodclosure41209);classreference13450 = (Object)new_Organization_ClassReference((Type_Class)class6744);// PEGOneOrMoreExpression>>privateMatch://privateMatch: input// 	| result match |// 	result := OrderedCollection new.// 	match := child match: input.// 	match ifNil: [ ^ match ].// 	result add: match.// 	^ self privateMatch: input on: resultlocalvariable27326 = (Object)new_AST_Variable_named(L"input");array24326 = (Object)new_Type_Array_with(1, (Object)localvariable27326);localvariable27327 = (Object)new_AST_Variable_named(L"result");localvariable27328 = (Object)new_AST_Variable_named(L"match");array24327 = (Object)new_Type_Array_with(2, (Object)localvariable27327, (Object)localvariable27328);variable1874 = (Object)new_AST_Variable_named(L"return");array24328 = (Object)new_Type_Array_with(1, (Object)variable1874);// newsend163217 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string27532 = (Object)new_Type_String(L"privateMatch:");string27533 = (Object)new_Type_String(L"privateMatch: input\n\t| result match |\n\tresult := OrderedCollection new.\n\tmatch := child match: input.\n\tmatch ifNil: [ ^ match ].\n\tresult add: match.\n\t^ self privateMatch: input on: result");smallint27255 = (Object)new_Type_SmallInt(-1);smallint27256 = (Object)new_Type_SmallInt(-1);info5564 = (Object)new_AST_Info((Type_String)string27533,(Type_String)string27532, (Type_SmallInt)smallint27255, (Type_SmallInt)smallint27256);((AST_Send)send163217)->info = (AST_Info)info5564;assign20481 = (Object)new_AST_Assign((Object)localvariable27327, (Object)send163217);// match:send163218 = (Object)new_AST_Send((Object)instancevariable16418, (Object)symbol44329, 1, (Object)localvariable27326);((AST_Send)send163218)->info = (AST_Info)info5564;assign20482 = (Object)new_AST_Assign((Object)localvariable27328, (Object)send163218);// escape:send163219 = (Object)new_AST_Send((Object)variable1874, (Object)SMB_escape_, 1, (Object)localvariable27328);((AST_Send)send163219)->info = (AST_Info)info5564;block11873 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send163219);// ifNil:send163220 = (Object)new_AST_Send((Object)localvariable27328, (Object)symbol44005, 1, (Object)block11873);((AST_Send)send163220)->info = (AST_Info)info5564;// add:send163221 = (Object)new_AST_Send((Object)localvariable27327, (Object)symbol44183, 1, (Object)localvariable27328);((AST_Send)send163221)->info = (AST_Info)info5564;symbol44373 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");// privateMatch:on:send163222 = (Object)new_AST_Send((Object)Self, (Object)symbol44373, 2, (Object)localvariable27326, (Object)localvariable27327);((AST_Send)send163222)->info = (AST_Info)info5564;block11874 = (Object)new_AST_Block_with((Type_Array)array24328, (Type_Array)empty_Type_Array, 1, 5, assign20481, assign20482, send163220, send163221, send163222);// on:send163223 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11874);method41307 = (Object)new_AST_Method_with((Type_Array)array24326, (Type_Array)array24327, 1, send163223);((AST_Method)method41307)->info = (AST_Info)info5564;methodclosure41210 = (Object)new_Runtime_MethodClosure(method41307);store_method((Type_Class)class6744, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure41210);// PEGOneOrMoreExpression>>optional//optional// 	^ PEGOptionalExpression new: self// new:send163224 = (Object)new_AST_Send((Object)classreference13446, (Object)symbol44091, 1, (Object)Self);string27534 = (Object)new_Type_String(L"optional");string27535 = (Object)new_Type_String(L"optional\n\t^ PEGOptionalExpression new: self");smallint27257 = (Object)new_Type_SmallInt(-1);smallint27258 = (Object)new_Type_SmallInt(-1);info5565 = (Object)new_AST_Info((Type_String)string27535,(Type_String)string27534, (Type_SmallInt)smallint27257, (Type_SmallInt)smallint27258);((AST_Send)send163224)->info = (AST_Info)info5565;method41308 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163224);((AST_Method)method41308)->info = (AST_Info)info5565;methodclosure41211 = (Object)new_Runtime_MethodClosure(method41308);store_method((Type_Class)class6744, (Type_Symbol)symbol44338, (Runtime_MethodClosure)methodclosure41211);classreference13451 = (Object)new_Organization_ClassReference((Type_Class)class6737);// PEGExpression>>privateMatch://privateMatch: input// 	self subclassResponsibilitylocalvariable27329 = (Object)new_AST_Variable_named(L"input");array24329 = (Object)new_Type_Array_with(1, (Object)localvariable27329);// subclassResponsibilitysend163225 = (Object)new_AST_Send((Object)Self, (Object)symbol44484, 0);string27536 = (Object)new_Type_String(L"privateMatch:");string27537 = (Object)new_Type_String(L"privateMatch: input\n\tself subclassResponsibility");smallint27259 = (Object)new_Type_SmallInt(-1);smallint27260 = (Object)new_Type_SmallInt(-1);info5566 = (Object)new_AST_Info((Type_String)string27537,(Type_String)string27536, (Type_SmallInt)smallint27259, (Type_SmallInt)smallint27260);((AST_Send)send163225)->info = (AST_Info)info5566;method41309 = (Object)new_AST_Method_with((Type_Array)array24329, (Type_Array)empty_Type_Array, 2, send163225, Self);((AST_Method)method41309)->info = (AST_Info)info5566;methodclosure41212 = (Object)new_Runtime_MethodClosure(method41309);store_method((Type_Class)class6737, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure41212);// PEGExpression>>&&//&& other// 	^ (self & other) skipWhitespace: falselocalvariable27330 = (Object)new_AST_Variable_named(L"other");array24330 = (Object)new_Type_Array_with(1, (Object)localvariable27330);// &send163226 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable27330);string27538 = (Object)new_Type_String(L"&&");string27539 = (Object)new_Type_String(L"&& other\n\t^ (self & other) skipWhitespace: false");smallint27261 = (Object)new_Type_SmallInt(-1);smallint27262 = (Object)new_Type_SmallInt(-1);info5567 = (Object)new_AST_Info((Type_String)string27539,(Type_String)string27538, (Type_SmallInt)smallint27261, (Type_SmallInt)smallint27262);((AST_Send)send163226)->info = (AST_Info)info5567;// skipWhitespace:send163227 = (Object)new_AST_Send((Object)send163226, (Object)symbol44371, 1, (Object)False_Const);((AST_Send)send163227)->info = (AST_Info)info5567;method41310 = (Object)new_AST_Method_with((Type_Array)array24330, (Type_Array)empty_Type_Array, 1, send163227);((AST_Method)method41310)->info = (AST_Info)info5567;methodclosure41213 = (Object)new_Runtime_MethodClosure(method41310);store_method((Type_Class)class6737, (Type_Symbol)symbol44326, (Runtime_MethodClosure)methodclosure41213);// PEGExpression>>omit://omit: bool// 	omit := boollocalvariable27331 = (Object)new_AST_Variable_named(L"bool");array24331 = (Object)new_Type_Array_with(1, (Object)localvariable27331);assign20483 = (Object)new_AST_Assign((Object)instancevariable16411, (Object)localvariable27331);method41311 = (Object)new_AST_Method_with((Type_Array)array24331, (Type_Array)empty_Type_Array, 2, assign20483, Self);string27540 = (Object)new_Type_String(L"omit:");string27541 = (Object)new_Type_String(L"omit: bool\n\tomit := bool");smallint27263 = (Object)new_Type_SmallInt(-1);smallint27264 = (Object)new_Type_SmallInt(-1);info5568 = (Object)new_AST_Info((Type_String)string27541,(Type_String)string27540, (Type_SmallInt)smallint27263, (Type_SmallInt)smallint27264);((AST_Method)method41311)->info = (AST_Info)info5568;methodclosure41214 = (Object)new_Runtime_MethodClosure(method41311);store_method((Type_Class)class6737, (Type_Symbol)symbol44330, (Runtime_MethodClosure)methodclosure41214);// PEGExpression>>optional//optional// 	^ PEGOptionalExpression new: self// new:send163228 = (Object)new_AST_Send((Object)classreference13446, (Object)symbol44091, 1, (Object)Self);string27542 = (Object)new_Type_String(L"optional");string27543 = (Object)new_Type_String(L"optional\n\t^ PEGOptionalExpression new: self");smallint27265 = (Object)new_Type_SmallInt(-1);smallint27266 = (Object)new_Type_SmallInt(-1);info5569 = (Object)new_AST_Info((Type_String)string27543,(Type_String)string27542, (Type_SmallInt)smallint27265, (Type_SmallInt)smallint27266);((AST_Send)send163228)->info = (AST_Info)info5569;method41312 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163228);((AST_Method)method41312)->info = (AST_Info)info5569;methodclosure41215 = (Object)new_Runtime_MethodClosure(method41312);store_method((Type_Class)class6737, (Type_Symbol)symbol44338, (Runtime_MethodClosure)methodclosure41215);// PEGExpression>>omit//omit// 	^ omitmethod41313 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16411);string27544 = (Object)new_Type_String(L"omit");string27545 = (Object)new_Type_String(L"omit\n\t^ omit");smallint27267 = (Object)new_Type_SmallInt(-1);smallint27268 = (Object)new_Type_SmallInt(-1);info5570 = (Object)new_AST_Info((Type_String)string27545,(Type_String)string27544, (Type_SmallInt)smallint27267, (Type_SmallInt)smallint27268);((AST_Method)method41313)->info = (AST_Info)info5570;methodclosure41216 = (Object)new_Runtime_MethodClosure(method41313);store_method((Type_Class)class6737, (Type_Symbol)symbol44327, (Runtime_MethodClosure)methodclosure41216);// PEGExpression>>asPEG//asPEG// 	" ^ self "method41314 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string27546 = (Object)new_Type_String(L"asPEG");string27547 = (Object)new_Type_String(L"asPEG\n\t\" ^ self \"");smallint27269 = (Object)new_Type_SmallInt(-1);smallint27270 = (Object)new_Type_SmallInt(-1);info5571 = (Object)new_AST_Info((Type_String)string27547,(Type_String)string27546, (Type_SmallInt)smallint27269, (Type_SmallInt)smallint27270);((AST_Method)method41314)->info = (AST_Info)info5571;methodclosure41217 = (Object)new_Runtime_MethodClosure(method41314);store_method((Type_Class)class6737, (Type_Symbol)symbol44131, (Runtime_MethodClosure)methodclosure41217);// PEGExpression>>name://name: aName// 	name := aNamelocalvariable27332 = (Object)new_AST_Variable_named(L"aName");array24332 = (Object)new_Type_Array_with(1, (Object)localvariable27332);assign20484 = (Object)new_AST_Assign((Object)instancevariable16410, (Object)localvariable27332);method41315 = (Object)new_AST_Method_with((Type_Array)array24332, (Type_Array)empty_Type_Array, 2, assign20484, Self);string27548 = (Object)new_Type_String(L"name:");string27549 = (Object)new_Type_String(L"name: aName\n\tname := aName");smallint27271 = (Object)new_Type_SmallInt(-1);smallint27272 = (Object)new_Type_SmallInt(-1);info5572 = (Object)new_AST_Info((Type_String)string27549,(Type_String)string27548, (Type_SmallInt)smallint27271, (Type_SmallInt)smallint27272);((AST_Method)method41315)->info = (AST_Info)info5572;methodclosure41218 = (Object)new_Runtime_MethodClosure(method41315);store_method((Type_Class)class6737, (Type_Symbol)symbol44204, (Runtime_MethodClosure)methodclosure41218);// PEGExpression>>strongTimes//strongTimes// 	^ self times skipWhitespace: false// timessend163229 = (Object)new_AST_Send((Object)Self, (Object)symbol44340, 0);string27550 = (Object)new_Type_String(L"strongTimes");string27551 = (Object)new_Type_String(L"strongTimes\n\t^ self times skipWhitespace: false");smallint27273 = (Object)new_Type_SmallInt(-1);smallint27274 = (Object)new_Type_SmallInt(-1);info5573 = (Object)new_AST_Info((Type_String)string27551,(Type_String)string27550, (Type_SmallInt)smallint27273, (Type_SmallInt)smallint27274);((AST_Send)send163229)->info = (AST_Info)info5573;// skipWhitespace:send163230 = (Object)new_AST_Send((Object)send163229, (Object)symbol44371, 1, (Object)False_Const);((AST_Send)send163230)->info = (AST_Info)info5573;method41316 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163230);((AST_Method)method41316)->info = (AST_Info)info5573;methodclosure41219 = (Object)new_Runtime_MethodClosure(method41316);store_method((Type_Class)class6737, (Type_Symbol)symbol44331, (Runtime_MethodClosure)methodclosure41219);// PEGExpression>>&//& expression// 	^ PEGSequenceExpression new <& self <& expressionlocalvariable27333 = (Object)new_AST_Variable_named(L"expression");array24333 = (Object)new_Type_Array_with(1, (Object)localvariable27333);// newsend163231 = (Object)new_AST_Send((Object)classreference13449, (Object)symbol44095, 0);string27552 = (Object)new_Type_String(L"&");string27553 = (Object)new_Type_String(L"& expression\n\t^ PEGSequenceExpression new <& self <& expression");smallint27275 = (Object)new_Type_SmallInt(-1);smallint27276 = (Object)new_Type_SmallInt(-1);info5574 = (Object)new_AST_Info((Type_String)string27553,(Type_String)string27552, (Type_SmallInt)smallint27275, (Type_SmallInt)smallint27276);((AST_Send)send163231)->info = (AST_Info)info5574;// <&send163232 = (Object)new_AST_Send((Object)send163231, (Object)symbol44372, 1, (Object)Self);((AST_Send)send163232)->info = (AST_Info)info5574;// <&send163233 = (Object)new_AST_Send((Object)send163232, (Object)symbol44372, 1, (Object)localvariable27333);((AST_Send)send163233)->info = (AST_Info)info5574;method41317 = (Object)new_AST_Method_with((Type_Array)array24333, (Type_Array)empty_Type_Array, 1, send163233);((AST_Method)method41317)->info = (AST_Info)info5574;methodclosure41220 = (Object)new_Runtime_MethodClosure(method41317);store_method((Type_Class)class6737, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure41220);// PEGExpression>>strongOptional//strongOptional// 	^ self optional skipWhitespace: false// optionalsend163234 = (Object)new_AST_Send((Object)Self, (Object)symbol44338, 0);string27554 = (Object)new_Type_String(L"strongOptional");string27555 = (Object)new_Type_String(L"strongOptional\n\t^ self optional skipWhitespace: false");smallint27277 = (Object)new_Type_SmallInt(-1);smallint27278 = (Object)new_Type_SmallInt(-1);info5575 = (Object)new_AST_Info((Type_String)string27555,(Type_String)string27554, (Type_SmallInt)smallint27277, (Type_SmallInt)smallint27278);((AST_Send)send163234)->info = (AST_Info)info5575;// skipWhitespace:send163235 = (Object)new_AST_Send((Object)send163234, (Object)symbol44371, 1, (Object)False_Const);((AST_Send)send163235)->info = (AST_Info)info5575;method41318 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163235);((AST_Method)method41318)->info = (AST_Info)info5575;symbol44328 = (Object)new_Type_Symbol_cached(L"strongOptional");methodclosure41221 = (Object)new_Runtime_MethodClosure(method41318);store_method((Type_Class)class6737, (Type_Symbol)symbol44328, (Runtime_MethodClosure)methodclosure41221);// PEGExpression>>hash//hash// 	^ name hash// hashsend163236 = (Object)new_AST_Send((Object)instancevariable16410, (Object)SMB_hash, 0);string27556 = (Object)new_Type_String(L"hash");string27557 = (Object)new_Type_String(L"hash\n\t^ name hash");smallint27279 = (Object)new_Type_SmallInt(-1);smallint27280 = (Object)new_Type_SmallInt(-1);info5576 = (Object)new_AST_Info((Type_String)string27557,(Type_String)string27556, (Type_SmallInt)smallint27279, (Type_SmallInt)smallint27280);((AST_Send)send163236)->info = (AST_Info)info5576;method41319 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163236);((AST_Method)method41319)->info = (AST_Info)info5576;methodclosure41222 = (Object)new_Runtime_MethodClosure(method41319);store_method((Type_Class)class6737, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure41222);// PEGExpression>>printString//printString// 	name ifNil: [ ^ super printString ].// 	^ 'parser (', name, ')'variable1875 = (Object)new_AST_Variable_named(L"return");array24334 = (Object)new_Type_Array_with(1, (Object)variable1875);super2483 = (Object)new_AST_Super((Object)symbol44332, 0);// escape:send163237 = (Object)new_AST_Send((Object)variable1875, (Object)SMB_escape_, 1, (Object)super2483);string27558 = (Object)new_Type_String(L"printString");string27559 = (Object)new_Type_String(L"printString\n\tname ifNil: [ ^ super printString ].\n\t^ \'parser (\', name, \')\'");smallint27281 = (Object)new_Type_SmallInt(-1);smallint27282 = (Object)new_Type_SmallInt(-1);info5577 = (Object)new_AST_Info((Type_String)string27559,(Type_String)string27558, (Type_SmallInt)smallint27281, (Type_SmallInt)smallint27282);((AST_Send)send163237)->info = (AST_Info)info5577;block11875 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send163237);// ifNil:send163238 = (Object)new_AST_Send((Object)instancevariable16410, (Object)symbol44005, 1, (Object)block11875);((AST_Send)send163238)->info = (AST_Info)info5577;string27560 = (Object)new_Type_String(L"parser (");constant35160 = (Object)new_AST_Constant((Object)string27560);// ,send163239 = (Object)new_AST_Send((Object)constant35160, (Object)SMB__concat, 1, (Object)instancevariable16410);((AST_Send)send163239)->info = (AST_Info)info5577;string27561 = (Object)new_Type_String(L")");constant35161 = (Object)new_AST_Constant((Object)string27561);// ,send163240 = (Object)new_AST_Send((Object)send163239, (Object)SMB__concat, 1, (Object)constant35161);((AST_Send)send163240)->info = (AST_Info)info5577;block11876 = (Object)new_AST_Block_with((Type_Array)array24334, (Type_Array)empty_Type_Array, 1, 2, send163238, send163240);// on:send163241 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block11876);method41320 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163241);((AST_Method)method41320)->info = (AST_Info)info5577;methodclosure41223 = (Object)new_Runtime_MethodClosure(method41320);store_method((Type_Class)class6737, (Type_Symbol)symbol44332, (Runtime_MethodClosure)methodclosure41223);// PEGExpression>>name//name// 	^ namemethod41321 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16410);string27562 = (Object)new_Type_String(L"name");string27563 = (Object)new_Type_String(L"name\n\t^ name");smallint27283 = (Object)new_Type_SmallInt(-1);smallint27284 = (Object)new_Type_SmallInt(-1);info5578 = (Object)new_AST_Info((Type_String)string27563,(Type_String)string27562, (Type_SmallInt)smallint27283, (Type_SmallInt)smallint27284);((AST_Method)method41321)->info = (AST_Info)info5578;methodclosure41224 = (Object)new_Runtime_MethodClosure(method41321);store_method((Type_Class)class6737, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure41224);// PEGExpression>>match://match: input// 	| position match |// 	"self debug: input."// 	position := input position.// 	match := self privateMatch: input.// 	match ifNil: [input position: position].// 	"self debugEnd: input."// 	^ matchlocalvariable27334 = (Object)new_AST_Variable_named(L"input");array24335 = (Object)new_Type_Array_with(1, (Object)localvariable27334);localvariable27335 = (Object)new_AST_Variable_named(L"position");localvariable27336 = (Object)new_AST_Variable_named(L"match");array24336 = (Object)new_Type_Array_with(2, (Object)localvariable27335, (Object)localvariable27336);// positionsend163242 = (Object)new_AST_Send((Object)localvariable27334, (Object)symbol44475, 0);string27564 = (Object)new_Type_String(L"match:");string27565 = (Object)new_Type_String(L"match: input\n\t| position match |\n\t\"self debug: input.\"\n\tposition := input position.\n\tmatch := self privateMatch: input.\n\tmatch ifNil: [input position: position].\n\t\"self debugEnd: input.\"\n\t^ match");smallint27285 = (Object)new_Type_SmallInt(-1);smallint27286 = (Object)new_Type_SmallInt(-1);info5579 = (Object)new_AST_Info((Type_String)string27565,(Type_String)string27564, (Type_SmallInt)smallint27285, (Type_SmallInt)smallint27286);((AST_Send)send163242)->info = (AST_Info)info5579;assign20485 = (Object)new_AST_Assign((Object)localvariable27335, (Object)send163242);// privateMatch:send163243 = (Object)new_AST_Send((Object)Self, (Object)symbol44325, 1, (Object)localvariable27334);((AST_Send)send163243)->info = (AST_Info)info5579;assign20486 = (Object)new_AST_Assign((Object)localvariable27336, (Object)send163243);symbol44485 = (Object)new_Type_Symbol_cached(L"position:");// position:send163244 = (Object)new_AST_Send((Object)localvariable27334, (Object)symbol44485, 1, (Object)localvariable27335);((AST_Send)send163244)->info = (AST_Info)info5579;block11877 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send163244);// ifNil:send163245 = (Object)new_AST_Send((Object)localvariable27336, (Object)symbol44005, 1, (Object)block11877);((AST_Send)send163245)->info = (AST_Info)info5579;method41322 = (Object)new_AST_Method_with((Type_Array)array24335, (Type_Array)array24336, 4, assign20485, assign20486, send163245, localvariable27336);((AST_Method)method41322)->info = (AST_Info)info5579;methodclosure41225 = (Object)new_Runtime_MethodClosure(method41322);store_method((Type_Class)class6737, (Type_Symbol)symbol44329, (Runtime_MethodClosure)methodclosure41225);// PEGExpression>>times//times// 	^ PEGZeroOrMoreExpression new: selfclassreference13452 = (Object)new_Organization_ClassReference((Type_Class)class6743);// PEGZeroOrMoreExpression>>optional//optional// 	" ^ self since we are zero or more, thus already optional."method41323 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string27566 = (Object)new_Type_String(L"optional");string27567 = (Object)new_Type_String(L"optional\n\t\" ^ self since we are zero or more, thus already optional.\"");smallint27287 = (Object)new_Type_SmallInt(-1);smallint27288 = (Object)new_Type_SmallInt(-1);info5580 = (Object)new_AST_Info((Type_String)string27567,(Type_String)string27566, (Type_SmallInt)smallint27287, (Type_SmallInt)smallint27288);((AST_Method)method41323)->info = (AST_Info)info5580;methodclosure41226 = (Object)new_Runtime_MethodClosure(method41323);store_method((Type_Class)class6743, (Type_Symbol)symbol44338, (Runtime_MethodClosure)methodclosure41226);// PEGZeroOrMoreExpression>>privateMatch://privateMatch: input// 	^ self privateMatch: input on: OrderedCollection newlocalvariable27337 = (Object)new_AST_Variable_named(L"input");array24337 = (Object)new_Type_Array_with(1, (Object)localvariable27337);// newsend163246 = (Object)new_AST_Send((Object)classreference13389, (Object)symbol44095, 0);string27568 = (Object)new_Type_String(L"privateMatch:");string27569 = (Object)new_Type_String(L"privateMatch: input\n\t^ self privateMatch: input on: OrderedCollection new");smallint27289 = (Object)new_Type_SmallInt(-1);smallint27290 = (Object)new_Type_SmallInt(-1);info5581 = (Object)new_AST_Info((Type_String)string27569,(Type_String)string27568, (Type_SmallInt)smallint27289, (Type_SmallInt)smallint27290);((AST_Send)send163246)->info = (AST_Info)info5581;// privateMatch:on:send163247 = (Object)new_AST_Send((Object)Self, (Object)symbol44373, 2, (Object)localvariable27337, (Object)send163246);((AST_Send)send163247)->info = (AST_Info)info5581;method41324 = (Object)new_AST_Method_with((Type_Array)array24337, (Type_Array)empty_Type_Array, 1, send163247);((AST_Method)method41324)->info = (AST_Info)info5581;methodclosure41227 = (Object)new_Runtime_MethodClosure(method41324);store_method((Type_Class)class6743, (Type_Symbol)symbol44325, (Runtime_MethodClosure)methodclosure41227);// PEGZeroOrMoreExpression>>skipWhitespace//skipWhitespace// 	^ skipWhitespacemethod41325 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable16419);string27570 = (Object)new_Type_String(L"skipWhitespace");string27571 = (Object)new_Type_String(L"skipWhitespace\n\t^ skipWhitespace");smallint27291 = (Object)new_Type_SmallInt(-1);smallint27292 = (Object)new_Type_SmallInt(-1);info5582 = (Object)new_AST_Info((Type_String)string27571,(Type_String)string27570, (Type_SmallInt)smallint27291, (Type_SmallInt)smallint27292);((AST_Method)method41325)->info = (AST_Info)info5582;methodclosure41228 = (Object)new_Runtime_MethodClosure(method41325);store_method((Type_Class)class6743, (Type_Symbol)symbol44155, (Runtime_MethodClosure)methodclosure41228);// PEGZeroOrMoreExpression>>initialize://initialize: expression// 	super initialize.// 	child := expression.// 	skipWhitespace := true.localvariable27338 = (Object)new_AST_Variable_named(L"expression");array24338 = (Object)new_Type_Array_with(1, (Object)localvariable27338);super2484 = (Object)new_AST_Super((Object)symbol44004, 0);assign20487 = (Object)new_AST_Assign((Object)instancevariable16418, (Object)localvariable27338);assign20488 = (Object)new_AST_Assign((Object)instancevariable16419, (Object)True_Const);method41326 = (Object)new_AST_Method_with((Type_Array)array24338, (Type_Array)empty_Type_Array, 4, super2484, assign20487, assign20488, Self);string27572 = (Object)new_Type_String(L"initialize:");string27573 = (Object)new_Type_String(L"initialize: expression\n\tsuper initialize.\n\tchild := expression.\n\tskipWhitespace := true.");smallint27293 = (Object)new_Type_SmallInt(-1);smallint27294 = (Object)new_Type_SmallInt(-1);info5583 = (Object)new_AST_Info((Type_String)string27573,(Type_String)string27572, (Type_SmallInt)smallint27293, (Type_SmallInt)smallint27294);((AST_Method)method41326)->info = (AST_Info)info5583;methodclosure41229 = (Object)new_Runtime_MethodClosure(method41326);store_method((Type_Class)class6743, (Type_Symbol)symbol44363, (Runtime_MethodClosure)methodclosure41229);// PEGZeroOrMoreExpression>>privateMatch:on://privateMatch: input on: result // 	| match |// 	[skipWhitespace// 		ifTrue: [input skipWhitespace].// 		match := child match: input.// 		match isNil]// 			whileFalse: [result add: match].// 	^ resultlocalvariable27339 = (Object)new_AST_Variable_named(L"input");localvariable27340 = (Object)new_AST_Variable_named(L"result");array24339 = (Object)new_Type_Array_with(2, (Object)localvariable27339, (Object)localvariable27340);localvariable27341 = (Object)new_AST_Variable_named(L"match");array24340 = (Object)new_Type_Array_with(1, (Object)localvariable27341);// skipWhitespacesend163248 = (Object)new_AST_Send((Object)localvariable27339, (Object)symbol44155, 0);string27574 = (Object)new_Type_String(L"privateMatch:on:");string27575 = (Object)new_Type_String(L"privateMatch: input on: result \n\t| match |\n\t[skipWhitespace\n\t\tifTrue: [input skipWhitespace].\n\t\tmatch := child match: input.\n\t\tmatch isNil]\n\t\t\twhileFalse: [result add: match].\n\t^ result");smallint27295 = (Object)new_Type_SmallInt(-1);smallint27296 = (Object)new_Type_SmallInt(-1);info5584 = (Object)new_AST_Info((Type_String)string27575,(Type_String)string27574, (Type_SmallInt)smallint27295, (Type_SmallInt)smallint27296);((AST_Send)send163248)->info = (AST_Info)info5584;block11878 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send163248);// ifTrue:send163249 = (Object)new_AST_Send((Object)instancevariable16419, (Object)SMB_ifTrue_, 1, (Object)block11878);((AST_Send)send163249)->info = (AST_Info)info5584;// match:send163250 = (Object)new_AST_Send((Object)instancevariable16418, (Object)symbol44329, 1, (Object)localvariable27339);((AST_Send)send163250)->info = (AST_Info)info5584;assign20489 = (Object)new_AST_Assign((Object)localvariable27341, (Object)send163250);// isNilsend163251 = (Object)new_AST_Send((Object)localvariable27341, (Object)SMB_isNil, 0);((AST_Send)send163251)->info = (AST_Info)info5584;block11879 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send163249, assign20489, send163251);// add:send163252 = (Object)new_AST_Send((Object)localvariable27340, (Object)symbol44183, 1, (Object)localvariable27341);((AST_Send)send163252)->info = (AST_Info)info5584;block11880 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send163252);// whileFalse:send163253 = (Object)new_AST_Send((Object)block11879, (Object)SMB_whileFalse_, 1, (Object)block11880);((AST_Send)send163253)->info = (AST_Info)info5584;method41327 = (Object)new_AST_Method_with((Type_Array)array24339, (Type_Array)array24340, 2, send163253, localvariable27340);((AST_Method)method41327)->info = (AST_Info)info5584;methodclosure41230 = (Object)new_Runtime_MethodClosure(method41327);store_method((Type_Class)class6743, (Type_Symbol)symbol44373, (Runtime_MethodClosure)methodclosure41230);// PEGZeroOrMoreExpression>>skipWhitespace://skipWhitespace: anObject// 	skipWhitespace := anObjectlocalvariable27342 = (Object)new_AST_Variable_named(L"anObject");array24341 = (Object)new_Type_Array_with(1, (Object)localvariable27342);assign20490 = (Object)new_AST_Assign((Object)instancevariable16419, (Object)localvariable27342);method41328 = (Object)new_AST_Method_with((Type_Array)array24341, (Type_Array)empty_Type_Array, 2, assign20490, Self);string27576 = (Object)new_Type_String(L"skipWhitespace:");string27577 = (Object)new_Type_String(L"skipWhitespace: anObject\n\tskipWhitespace := anObject");smallint27297 = (Object)new_Type_SmallInt(-1);smallint27298 = (Object)new_Type_SmallInt(-1);info5585 = (Object)new_AST_Info((Type_String)string27577,(Type_String)string27576, (Type_SmallInt)smallint27297, (Type_SmallInt)smallint27298);((AST_Method)method41328)->info = (AST_Info)info5585;methodclosure41231 = (Object)new_Runtime_MethodClosure(method41328);store_method((Type_Class)class6743, (Type_Symbol)symbol44371, (Runtime_MethodClosure)methodclosure41231);// new:send163254 = (Object)new_AST_Send((Object)classreference13452, (Object)symbol44091, 1, (Object)Self);string27578 = (Object)new_Type_String(L"times");string27579 = (Object)new_Type_String(L"times\n\t^ PEGZeroOrMoreExpression new: self");smallint27299 = (Object)new_Type_SmallInt(-1);smallint27300 = (Object)new_Type_SmallInt(-1);info5586 = (Object)new_AST_Info((Type_String)string27579,(Type_String)string27578, (Type_SmallInt)smallint27299, (Type_SmallInt)smallint27300);((AST_Send)send163254)->info = (AST_Info)info5586;method41329 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163254);((AST_Method)method41329)->info = (AST_Info)info5586;methodclosure41232 = (Object)new_Runtime_MethodClosure(method41329);store_method((Type_Class)class6737, (Type_Symbol)symbol44340, (Runtime_MethodClosure)methodclosure41232);// PEGExpression>>debug://debug: input // 	self debug ifTrue: // 		[ PEGExpression// 			indent;// 			increaseIndent.// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.// 		Transcript show: input sample.// 		Transcript cr" ]localvariable27343 = (Object)new_AST_Variable_named(L"input");array24342 = (Object)new_Type_Array_with(1, (Object)localvariable27343);symbol44321 = (Object)new_Type_Symbol_cached(L"debug");// debugsend163255 = (Object)new_AST_Send((Object)Self, (Object)symbol44321, 0);string27580 = (Object)new_Type_String(L"debug:");string27581 = (Object)new_Type_String(L"debug: input \n\tself debug ifTrue: \n\t\t[ PEGExpression\n\t\t\tindent;\n\t\t\tincreaseIndent.\n\t\t\"Transcript show: \'Trying to match: \' , self asString , \' at: \'.\n\t\tTranscript show: input sample.\n\t\tTranscript cr\" ]");smallint27301 = (Object)new_Type_SmallInt(-1);smallint27302 = (Object)new_Type_SmallInt(-1);info5587 = (Object)new_AST_Info((Type_String)string27581,(Type_String)string27580, (Type_SmallInt)smallint27301, (Type_SmallInt)smallint27302);((AST_Send)send163255)->info = (AST_Info)info5587;localvariable27344 = (Object)new_AST_Variable_named(L"receiver");array24343 = (Object)new_Type_Array_with(1, (Object)localvariable27344);symbol44486 = (Object)new_Type_Symbol_cached(L"indent");// indentsend163256 = (Object)new_AST_Send((Object)localvariable27344, (Object)symbol44486, 0);((AST_Send)send163256)->info = (AST_Info)info5587;symbol44487 = (Object)new_Type_Symbol_cached(L"increaseIndent");// increaseIndentsend163257 = (Object)new_AST_Send((Object)localvariable27344, (Object)symbol44487, 0);((AST_Send)send163257)->info = (AST_Info)info5587;block11881 = (Object)new_AST_Block_with((Type_Array)array24343, (Type_Array)empty_Type_Array, 2, 2, send163256, send163257);// value:send163258 = (Object)new_AST_Send((Object)block11881, (Object)SMB_value_, 1, (Object)classreference13451);((AST_Send)send163258)->info = (AST_Info)info5587;block11882 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send163258);// ifTrue:send163259 = (Object)new_AST_Send((Object)send163255, (Object)SMB_ifTrue_, 1, (Object)block11882);((AST_Send)send163259)->info = (AST_Info)info5587;method41330 = (Object)new_AST_Method_with((Type_Array)array24342, (Type_Array)empty_Type_Array, 2, send163259, Self);((AST_Method)method41330)->info = (AST_Info)info5587;symbol44322 = (Object)new_Type_Symbol_cached(L"debug:");methodclosure41233 = (Object)new_Runtime_MethodClosure(method41330);store_method((Type_Class)class6737, (Type_Symbol)symbol44322, (Runtime_MethodClosure)methodclosure41233);// PEGExpression>>|//| expression// 	^ PEGOrderedChoiceExpression new <= self <= expressionlocalvariable27345 = (Object)new_AST_Variable_named(L"expression");array24344 = (Object)new_Type_Array_with(1, (Object)localvariable27345);// newsend163260 = (Object)new_AST_Send((Object)classreference13414, (Object)symbol44095, 0);string27582 = (Object)new_Type_String(L"|");string27583 = (Object)new_Type_String(L"| expression\n\t^ PEGOrderedChoiceExpression new <= self <= expression");smallint27303 = (Object)new_Type_SmallInt(-1);smallint27304 = (Object)new_Type_SmallInt(-1);info5588 = (Object)new_AST_Info((Type_String)string27583,(Type_String)string27582, (Type_SmallInt)smallint27303, (Type_SmallInt)smallint27304);((AST_Send)send163260)->info = (AST_Info)info5588;// <=send163261 = (Object)new_AST_Send((Object)send163260, (Object)symbol44136, 1, (Object)Self);((AST_Send)send163261)->info = (AST_Info)info5588;// <=send163262 = (Object)new_AST_Send((Object)send163261, (Object)symbol44136, 1, (Object)localvariable27345);((AST_Send)send163262)->info = (AST_Info)info5588;method41331 = (Object)new_AST_Method_with((Type_Array)array24344, (Type_Array)empty_Type_Array, 1, send163262);((AST_Method)method41331)->info = (AST_Info)info5588;methodclosure41234 = (Object)new_Runtime_MethodClosure(method41331);store_method((Type_Class)class6737, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure41234);// PEGExpression>>strongPlus//strongPlus// 	^ self plus skipWhitespace: false// plussend163263 = (Object)new_AST_Send((Object)Self, (Object)symbol44335, 0);string27584 = (Object)new_Type_String(L"strongPlus");string27585 = (Object)new_Type_String(L"strongPlus\n\t^ self plus skipWhitespace: false");smallint27305 = (Object)new_Type_SmallInt(-1);smallint27306 = (Object)new_Type_SmallInt(-1);info5589 = (Object)new_AST_Info((Type_String)string27585,(Type_String)string27584, (Type_SmallInt)smallint27305, (Type_SmallInt)smallint27306);((AST_Send)send163263)->info = (AST_Info)info5589;// skipWhitespace:send163264 = (Object)new_AST_Send((Object)send163263, (Object)symbol44371, 1, (Object)False_Const);((AST_Send)send163264)->info = (AST_Info)info5589;method41332 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163264);((AST_Method)method41332)->info = (AST_Info)info5589;methodclosure41235 = (Object)new_Runtime_MethodClosure(method41332);store_method((Type_Class)class6737, (Type_Symbol)symbol44323, (Runtime_MethodClosure)methodclosure41235);// PEGExpression>>plus//plus// 	^ PEGOneOrMoreExpression new: self// new:send163265 = (Object)new_AST_Send((Object)classreference13450, (Object)symbol44091, 1, (Object)Self);string27586 = (Object)new_Type_String(L"plus");string27587 = (Object)new_Type_String(L"plus\n\t^ PEGOneOrMoreExpression new: self");smallint27307 = (Object)new_Type_SmallInt(-1);smallint27308 = (Object)new_Type_SmallInt(-1);info5590 = (Object)new_AST_Info((Type_String)string27587,(Type_String)string27586, (Type_SmallInt)smallint27307, (Type_SmallInt)smallint27308);((AST_Send)send163265)->info = (AST_Info)info5590;method41333 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send163265);((AST_Method)method41333)->info = (AST_Info)info5590;methodclosure41236 = (Object)new_Runtime_MethodClosure(method41333);store_method((Type_Class)class6737, (Type_Symbol)symbol44335, (Runtime_MethodClosure)methodclosure41236);// PEGExpression>>initialize//initialize// 	omit := falseassign20491 = (Object)new_AST_Assign((Object)instancevariable16411, (Object)False_Const);method41334 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign20491, Self);string27588 = (Object)new_Type_String(L"initialize");string27589 = (Object)new_Type_String(L"initialize\n\tomit := false");smallint27309 = (Object)new_Type_SmallInt(-1);smallint27310 = (Object)new_Type_SmallInt(-1);info5591 = (Object)new_AST_Info((Type_String)string27589,(Type_String)string27588, (Type_SmallInt)smallint27309, (Type_SmallInt)smallint27310);((AST_Method)method41334)->info = (AST_Info)info5591;methodclosure41237 = (Object)new_Runtime_MethodClosure(method41334);store_method((Type_Class)class6737, (Type_Symbol)symbol44004, (Runtime_MethodClosure)methodclosure41237);// PEGExpression>>debugEnd://debugEnd: input // 	self debug ifTrue: [ PEGExpression descreaseIndent ]localvariable27346 = (Object)new_AST_Variable_named(L"input");array24345 = (Object)new_Type_Array_with(1, (Object)localvariable27346);// debugsend163266 = (Object)new_AST_Send((Object)Self, (Object)symbol44321, 0);string27590 = (Object)new_Type_String(L"debugEnd:");string27591 = (Object)new_Type_String(L"debugEnd: input \n\tself debug ifTrue: [ PEGExpression descreaseIndent ]");smallint27311 = (Object)new_Type_SmallInt(-1);smallint27312 = (Object)new_Type_SmallInt(-1);info5592 = (Object)new_AST_Info((Type_String)string27591,(Type_String)string27590, (Type_SmallInt)smallint27311, (Type_SmallInt)smallint27312);((AST_Send)send163266)->info = (AST_Info)info5592;symbol44488 = (Object)new_Type_Symbol_cached(L"descreaseIndent");// descreaseIndentsend163267 = (Object)new_AST_Send((Object)classreference13451, (Object)symbol44488, 0);((AST_Send)send163267)->info = (AST_Info)info5592;block11883 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send163267);// ifTrue:send163268 = (Object)new_AST_Send((Object)send163266, (Object)SMB_ifTrue_, 1, (Object)block11883);((AST_Send)send163268)->info = (AST_Info)info5592;method41335 = (Object)new_AST_Method_with((Type_Array)array24345, (Type_Array)empty_Type_Array, 2, send163268, Self);((AST_Method)method41335)->info = (AST_Info)info5592;symbol44324 = (Object)new_Type_Symbol_cached(L"debugEnd:");methodclosure41238 = (Object)new_Runtime_MethodClosure(method41335);store_method((Type_Class)class6737, (Type_Symbol)symbol44324, (Runtime_MethodClosure)methodclosure41238);// PEGExpression>>memoIfNil//memoIfNil// 	" We never memo non-main-parsers (rules with actions) "method41336 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);string27592 = (Object)new_Type_String(L"memoIfNil");string27593 = (Object)new_Type_String(L"memoIfNil\n\t\" We never memo non-main-parsers (rules with actions) \"");smallint27313 = (Object)new_Type_SmallInt(-1);smallint27314 = (Object)new_Type_SmallInt(-1);info5593 = (Object)new_AST_Info((Type_String)string27593,(Type_String)string27592, (Type_SmallInt)smallint27313, (Type_SmallInt)smallint27314);((AST_Method)method41336)->info = (AST_Info)info5593;symbol44336 = (Object)new_Type_Symbol_cached(L"memoIfNil");methodclosure41239 = (Object)new_Runtime_MethodClosure(method41336);store_method((Type_Class)class6737, (Type_Symbol)symbol44336, (Runtime_MethodClosure)methodclosure41239);// a PMetaclass P#PEGExpression>>debug//debug// 	^ falsemethod41337 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);string27594 = (Object)new_Type_String(L"debug");string27595 = (Object)new_Type_String(L"debug\n\t^ false");smallint27315 = (Object)new_Type_SmallInt(-1);smallint27316 = (Object)new_Type_SmallInt(-1);info5594 = (Object)new_AST_Info((Type_String)string27595,(Type_String)string27594, (Type_SmallInt)smallint27315, (Type_SmallInt)smallint27316);((AST_Method)method41337)->info = (AST_Info)info5594;methodclosure41240 = (Object)new_Runtime_MethodClosure(method41337);store_method((Type_Class)metaclass5938, (Type_Symbol)symbol44321, (Runtime_MethodClosure)methodclosure41240);// a PMetaclass P#PEGExpression>>new://new: argument// 	^ self basicNew initialize: argumentlocalvariable27347 = (Object)new_AST_Variable_named(L"argument");array24346 = (Object)new_Type_Array_with(1, (Object)localvariable27347);// basicNewsend163269 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);string27596 = (Object)new_Type_String(L"new:");string27597 = (Object)new_Type_String(L"new: argument\n\t^ self basicNew initialize: argument");smallint27317 = (Object)new_Type_SmallInt(-1);smallint27318 = (Object)new_Type_SmallInt(-1);info5595 = (Object)new_AST_Info((Type_String)string27597,(Type_String)string27596, (Type_SmallInt)smallint27317, (Type_SmallInt)smallint27318);((AST_Send)send163269)->info = (AST_Info)info5595;// initialize:send163270 = (Object)new_AST_Send((Object)send163269, (Object)symbol44363, 1, (Object)localvariable27347);((AST_Send)send163270)->info = (AST_Info)info5595;method41338 = (Object)new_AST_Method_with((Type_Array)array24346, (Type_Array)empty_Type_Array, 1, send163270);((AST_Method)method41338)->info = (AST_Info)info5595;methodclosure41241 = (Object)new_Runtime_MethodClosure(method41338);store_method((Type_Class)metaclass5938, (Type_Symbol)symbol44091, (Runtime_MethodClosure)methodclosure41241);// a PMetaclass P#PEGExpression>>pMethods//pMethods // 	^ #all.constant35162 = (Object)new_AST_Constant((Object)symbol44385);method41339 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant35162);string27598 = (Object)new_Type_String(L"pMethods");string27599 = (Object)new_Type_String(L"pMethods \n\t^ #all.");smallint27319 = (Object)new_Type_SmallInt(-1);smallint27320 = (Object)new_Type_SmallInt(-1);info5596 = (Object)new_AST_Info((Type_String)string27599,(Type_String)string27598, (Type_SmallInt)smallint27319, (Type_SmallInt)smallint27320);((AST_Method)method41339)->info = (AST_Info)info5596;methodclosure41242 = (Object)new_Runtime_MethodClosure(method41339);store_method((Type_Class)metaclass5938, (Type_Symbol)symbol44109, (Runtime_MethodClosure)methodclosure41242);classreference13453 = (Object)new_Organization_ClassReference((Type_Class)class6748);classreference13454 = (Object)new_Organization_ClassReference((Type_Class)class6747);classreference13455 = (Object)new_Organization_ClassReference((Type_Class)class6749);classreference13456 = (Object)new_Organization_ClassReference((Type_Class)class6757);classreference13457 = (Object)new_Organization_ClassReference((Type_Class)class6755);classreference13458 = (Object)new_Organization_ClassReference((Type_Class)class6754);classreference13459 = (Object)new_Organization_ClassReference((Type_Class)class6758);}/* ========================================================================= */NEW_TEST(SCParserTest_testParseTestMethods)/*testParseTestMethods// 	<temps: 6 annotations: 1 statements: 3>// 	| parser string result code annotations annotation |// 	parser := scparser method.// 	self class methodDict keys do: [ :key | // 			Transcript show: key; cr.// 			code := self class sourceCodeAt: key.// 			string := PEGStringScanner on: code separator: scparser separator.// 			result := parser match: string.// 			result class should = ASTMethod.// 			annotations := result annotations select:[ :ann | // 				ann class = ASTKeywordAnnotation // 					and: [ ann keywords asArray = ((Array new: 3)// 							at: 1 put: #temps;// 							at: 2 put: #annotations;// 							at: 3 put: #statements;// 							yourself) ] ].// 			annotations size = 1 ifTrue:// 					[ annotation := annotations first.// 					result temporaries size = annotation arguments first asInteger.// 					result annotations size = (annotation arguments at: 2) asInteger.// 					result statements size = (annotation arguments at: 3) asInteger ].// 			"string atEnd should be true."// 			result // 	]	"inspect"*/// testParseTestMethodsObject send163271 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44063, 0);Object result = (Object)Eval((Object)send163271);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_setUp)/*setUp// 	scparser := SCParser new*/// setUpObject send163272 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44071, 0);Object result = (Object)Eval((Object)send163272);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testAnnotation)/*testAnnotation// 	| parser string result arg |// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// 	parser := scparser annotation.// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.// 	result := parser match: string.// 	result class should = ASTKeywordAnnotation.// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)// 	at: 1 put: #abc;// 	at: 2 put: #def;// 	at: 3 put: #ghi;// 	yourself).// 	arg := result arguments first.// 	arg class should = ASTNumber.// 	arg := result arguments at: 2.// 	arg class should = ASTBinaryExpression.// 	arg := result arguments at: 3.// 	arg class should = ASTUnaryExpression.// 	string atEnd should be true.// 	string := PEGStringScanner on: '<abc> '.// 	result := parser match: string.// 	result class should = ASTUnaryAnnotation.// 	result selector asString should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.// 	result := parser match: string.// 	result class should = ASTKeywordAnnotation.// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)// 	at: 1 put: 'temps';// 	at: 2 put: 'annotations';// 	at: 3 put: 'statements';// 	yourself).// 	string atEnd should be true.*/// testAnnotationObject send163273 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44068, 0);Object result = (Object)Eval((Object)send163273);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testArray)/*testArray// 	| parser string result |// 	parser := scparser array.// 	string := PEGStringScanner on: '()'.// 	result := parser match: string.// 	result class should = ASTArray.// 	result literals asArray should = Array new.// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.// 	result := parser match: string.// 	result class should = ASTArray.// 	result literals size should = 5.// 	result literals first class should = ASTNumber.// 	result literals first number should = '1'.// 	(result literals at: 2) class should = ASTSymbol.// 	(result literals at: 2) symbol should = 'a'.// 	(result literals at: 3) class should = ASTSymbol.// 	(result literals at: 3) symbol should = 'a'.// 	(result literals at: 4) class should = ASTString.// 	(result literals at: 4) string should = 'b'.// 	(result literals at: 5) class should = ASTArray*/// testArrayObject send163274 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44021, 0);Object result = (Object)Eval((Object)send163274);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testAssignmentExpressions)/*testAssignmentExpressions// 	| parser string |// 	parser := scparser assignmentExpressions.// 	string := PEGStringScanner on: 'a :=  b:= c := d'.// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)// 	at: 1 put: 'a';// 	at: 2 put: 'b';// 	at: 3 put: 'c';// 	yourself).// 	string position should = 15.// 	string := PEGStringScanner on: ''.// 	(parser match: string) should not be isNil*/// testAssignmentExpressionsObject send163275 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44074, 0);Object result = (Object)Eval((Object)send163275);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBinaryArgument)/*testBinaryArgument// 	| parser string result |// 	parser := scparser binaryMessageDefinition.// 	string := PEGStringScanner on: '+= a'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '+='.// 	result parameter class should = ASTVariable.// 	result parameter name asString should = 'a'.// 	string position should = 4.// 	string := PEGStringScanner on: '|= a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '-= abc d'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '-='.// 	result parameter class should = ASTVariable.// 	result parameter name asString should = 'abc'.// 	string position should = 6*/// testBinaryArgumentObject send163276 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44031, 0);Object result = (Object)Eval((Object)send163276);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBinaryExpression)/*testBinaryExpression// 	| parser string result |// 	parser := scparser binaryObjectDescription.// 	string := PEGStringScanner on: 'abc + ghi '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '+'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 9.	" becomes ((abc + ghi) * c) "// 	string := PEGStringScanner on: 'abc + ghi * c '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '*'.// 	result argument class should = ASTVariable.// 	result argument name should = 'c'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '+'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 13*/// testBinaryExpressionObject send163277 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44084, 0);Object result = (Object)Eval((Object)send163277);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBinaryExpression2)/*testBinaryExpression2// 	" becomes ((abc | ghi) <= c) "// 	| string result parser |// 	parser := scparser binaryObjectDescription.// 	string := PEGStringScanner on: 'a <<<<<<<< ghi <= c <= d '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '<='.// 	result argument class should = ASTVariable.// 	result argument name should = 'd'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '<='.// 	result argument class should = ASTVariable.// 	result argument name should = 'c'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '<<<<<<<<'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'a'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 24*/// testBinaryExpression2Object send163278 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44081, 0);Object result = (Object)Eval((Object)send163278);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBinaryMessageDefinition)/*testBinaryMessageDefinition// 	| parser string result |// 	parser := scparser binaryMessageDefinition.// 	string := PEGStringScanner on: '+= a'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '+='.// 	result parameter class should = ASTVariable.// 	result parameter name asString should = 'a'.// 	string position should = 4.// 	string := PEGStringScanner on: '|= a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '-= abc d'.// 	result := parser match: string.// 	result class should = ASTBinaryMessageDefinition.// 	result selector printString should = '-='.// 	result parameter name asString should = 'abc'.// 	result parameter class should = ASTVariable.// 	string position should = 6*/// testBinaryMessageDefinitionObject send163279 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44064, 0);Object result = (Object)Eval((Object)send163279);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBinaryObjectDescription)/*testBinaryObjectDescription// 	| parser string result |// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "// 	string := PEGStringScanner on: 'abc def ghi '.// 	result := parser match: string.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector asString should = 'ghi'.// 	result := result receiver.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector asString should = 'def'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	string position should = 12.	" unary object description -> primary "// 	string := PEGStringScanner on: '3'.// 	result := parser match: string.// 	result class should = ASTNumber.// 	result number should = '3'.// 	string position should = 1.	" binary expression "// 	string := PEGStringScanner on: 'abc + ghi * c '.// 	result := parser match: string.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '*'.// 	result argument class should = ASTVariable.// 	result argument name should = 'c'.// 	result := result receiver.// 	result class should = ASTBinaryExpression.// 	result selector printString should = '+'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	result argument class should = ASTVariable.// 	result argument name should = 'ghi'.// 	string position should = 13*/// testBinaryObjectDescriptionObject send163280 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44069, 0);Object result = (Object)Eval((Object)send163280);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBinarySelector)/*testBinarySelector// 	| parser string |// 	parser := scparser binarySelector.// 	string := PEGStringScanner on: '+= a'.// 	(parser match: string) printString should = '+='.// 	string position should = 2.// 	string := PEGStringScanner on: '|= a'.// 	(parser match: string) printString should = '|'.// 	string position should = 1.// 	string := PEGStringScanner on: '-= a'.// 	(parser match: string) printString should = '-='.// 	string position should = 2.// 	string := PEGStringScanner on: '=- a'.// 	(parser match: string) printString should = '='.// 	string position should = 1*/// testBinarySelectorObject send163281 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44087, 0);Object result = (Object)Eval((Object)send163281);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBlock)/*testBlock// 	| parser string result |// 	parser := scparser block.// 	string := PEGStringScanner on: '[]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[||]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 4.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[ | a   f d| ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 3.// 	result parameters size should = 0.// 	result statements size should = 0.// 	string := PEGStringScanner on: '[ || b. d ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 2.// 	string := PEGStringScanner on: '[ || b. ^ d ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 2.// 	string := PEGStringScanner on: '[ || b. d. ]'.// 	result := parser match: string.// 	result class should = ASTBlock.// 	result temporaries size should = 0.// 	result parameters size should = 0.// 	result statements size should = 2*/// testBlockObject send163282 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44044, 0);Object result = (Object)Eval((Object)send163282);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testBlockArguments)/*testBlockArguments// 	| string result var parser |// 	parser := scparser blockArguments.// 	string := PEGStringScanner on: ':abcd :def'.// 	result := parser match: string.// 	string position should = 10.// 	result class should = OrderedCollection.// 	result size should = 2.// 	var := result at: 1.// 	var class should = ASTVariable.// 	var name should = 'abcd'.// 	var := result at: 2.// 	var class should = ASTVariable.// 	var name should = 'def'.// 	string := PEGStringScanner on: ' :  abcd:   def '.// 	result := parser match: string.// 	string position should = 16.// 	result class should = OrderedCollection.// 	result size should = 2.// 	var := result first.// 	var class should = ASTVariable.// 	var name should = 'abcd'.// 	var := result at: 2.// 	var class should = ASTVariable.// 	var name should = 'def'*/// testBlockArgumentsObject send163283 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44042, 0);Object result = (Object)Eval((Object)send163283);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testCapitalIdentifier)/*testCapitalIdentifier// 	| parser string |// 	parser := scparser capitalIdentifier.// 	string := PEGStringScanner on: 'Abcd '.// 	(parser match: string) should = 'Abcd'.// 	string position should = 4.// 	string := PEGStringScanner on: 'AbCd145 '.// 	(parser match: string) should = 'AbCd145'.// 	string position should = 7.// 	string := PEGStringScanner on: 'abcdD'.// 	(parser match: string) should be isNil.// 	string position should = 0*/// testCapitalIdentifierObject send163284 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44056, 0);Object result = (Object)Eval((Object)send163284);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testCascadedMessageExpression)/*testCascadedMessageExpression// 	| parser string result expression |// 	parser := scparser cascadedMessageExpression.// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.// 	result := parser match: string.// 	result class should = ASTMessageCascadeExpression.// 	result receiver class should = ASTNumber.// 	result cascades size should = 4.// 	expression := result cascades at: 1.// 	expression class should = ASTBinaryExpression.// 	expression := result cascades at: 2.// 	expression class should = ASTMessageExpression.// 	expression := result cascades at: 3.// 	expression class should = ASTMessageExpression.// 	expression := result cascades at: 4.// 	expression class should = ASTUnaryExpression*/// testCascadedMessageExpressionObject send163285 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44046, 0);Object result = (Object)Eval((Object)send163285);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testCharacter)/*testCharacter// 	| parser string |// 	parser := scparser character.// 	string := PEGStringScanner on: '--'.// 	(parser match: string) should = '-'.// 	string position should = 1.// 	string := PEGStringScanner on: '__'.// 	(parser match: string) should = '_'.// 	string position should = 1.// 	string := PEGStringScanner on: '4'.// 	(parser match: string) should = '4'.// 	string position should = 1.// 	string := PEGStringScanner on: 'p'.// 	(parser match: string) should = 'p'.// 	string position should = 1.// 	string := PEGStringScanner on: '&'.// 	(parser match: string) should = '&'.// 	string position should = 1.// 	string := PEGStringScanner on: ''''.// 	(parser match: string) should be isNil.// 	string position should = 0*/// testCharacterObject send163286 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44037, 0);Object result = (Object)Eval((Object)send163286);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testCharacterConstant)/*testCharacterConstant// 	| parser string result |// 	parser := scparser characterConstant.// 	string := PEGStringScanner on: 'a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '$_'.// 	result := parser match: string.// 	result class should = ASTCharacter.// 	result char should = $_.// 	string position should = 2*/// testCharacterConstantObject send163287 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44083, 0);Object result = (Object)Eval((Object)send163287);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testComment)/*testComment// 	| parser |// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.// 	(parser parse: '"Test"') should not be isNil.// 	(parser parse: '"Test') should be isNil*/// testCommentObject send163288 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44076, 0);Object result = (Object)Eval((Object)send163288);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testExpression)/*testExpression// 	| parser string result |// 	parser := scparser expression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression*/// testExpressionObject send163289 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44080, 0);Object result = (Object)Eval((Object)send163289);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testFinalExpression)/*testFinalExpression// 	| parser string result |// 	parser := scparser finalExpression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression*/// testFinalExpressionObject send163290 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44025, 0);Object result = (Object)Eval((Object)send163290);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testIdentifier)/*testIdentifier// 	| parser string |// 	parser := scparser identifier.// 	string := PEGStringScanner on: 'abcd '.// 	(parser match: string) should = 'abcd'.// 	string position should = 4.// 	string := PEGStringScanner on: 'AbCd145 '.// 	(parser match: string) should = 'AbCd145'.// 	string position should = 7.// 	string := PEGStringScanner on: '1a'.// 	(parser match: string) should be isNil.// 	string position should = 0*/// testIdentifierObject send163291 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44086, 0);Object result = (Object)Eval((Object)send163291);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testKeyword)/*testKeyword// 	| parser string |// 	parser := scparser keyword.// 	string := PEGStringScanner on: 'abcd: '.// 	(parser match: string) should = 'abcd'.// 	string position should = 5.// 	string := PEGStringScanner on: 'abcd '.// 	(parser match: string) should be isNil.// 	string position should = 0*/// testKeywordObject send163292 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44053, 0);Object result = (Object)Eval((Object)send163292);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testKeywordExpression)/*testKeywordExpression// 	| parser string result arg |// 	parser := scparser keywordExpression.// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTMessageExpression.// 	result keywords asArray should = ((Array new: 3)// 	at: 1 put: 'abc';// 	at: 2 put: 'def';// 	at: 3 put: 'ghi';// 	yourself).// 	result selector class should = ASTKeywordSelector.// 	result selector printString should = 'abc:def:ghi:'.// 	arg := result arguments first.// 	arg class should = ASTNumber.// 	arg := result arguments at: 2.// 	arg class should = ASTBinaryExpression.// 	arg := result arguments at: 3.// 	arg class should = ASTUnaryExpression.// 	result receiver class should = ASTBinaryExpression.// 	string position should = 29*/// testKeywordExpressionObject send163293 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44059, 0);Object result = (Object)Eval((Object)send163293);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testKeywordMessageExpression)/*testKeywordMessageExpression// 	| parser string result arg |// 	parser := scparser keywordMessageExpression.// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTMessageExpression.// 	result keywords asArray should = ((Array new: 3)// 	at: 1 put: 'abc';// 	at: 2 put: 'def';// 	at: 3 put: 'ghi';// 	yourself).// 	arg := result arguments first.// 	arg class should = ASTNumber.// 	arg := result arguments at: 2.// 	arg class should = ASTBinaryExpression.// 	arg := result arguments at: 3.// 	arg class should = ASTUnaryExpression.// 	string position should = 25*/// testKeywordMessageExpressionObject send163294 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44033, 0);Object result = (Object)Eval((Object)send163294);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testKeywordsArguments)/*testKeywordsArguments// 	| parser string result |// 	parser := scparser keywordsArguments.// 	string := PEGStringScanner on: 'test: ab'.// 	result := parser match: string.// 	result class should = ASTKeywordMessageDefinition.// 	result keywords should = (OrderedCollection with: 'test').// 	result parameters size should = 1.// 	result parameters first should = (ASTVariable new name: 'ab').// 	string position should = 8.// 	string := PEGStringScanner on: 'bla a'.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: 'test: d bla: c boe'.// 	result := parser match: string.// 	result class should = ASTKeywordMessageDefinition.// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').// 	result parameters size should = 2.// 	result parameters first should = (ASTVariable new name: 'd').// 	result parameters second should = (ASTVariable new name: 'c').// 	string position should = 15*/// testKeywordsArgumentsObject send163295 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44052, 0);Object result = (Object)Eval((Object)send163295);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testMessageExpression)/*testMessageExpression// 	| parser string result |// // 	parser := scparser messageExpression.// // 	string := PEGStringScanner on: 'super+4'.//  	result := (parser match: string).// 	result class should = ASTBinaryExpression.// 	result receiver class should = ASTSuper.// // 	string := PEGStringScanner on: 'self a: 4 b: 3'.//  	result := (parser match: string).// 	result class should = ASTMessageExpression.// 	result receiver class should = ASTSelf.// 	// 	string := PEGStringScanner on: '2 d'.//  	result := (parser match: string).// 	result class should = ASTUnaryExpression.// 	result receiver class should = ASTNumber.// 	result receiver asInteger should = 2.// 	*/// testMessageExpressionObject send163296 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44085, 0);Object result = (Object)Eval((Object)send163296);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testMethod)/*testMethod// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// // 	| parser string result |// 	parser := scparser method.// 	string := 'a: b c: d// 			|x y z|// 			<abc: 1 def: (2+2) ghi: (3 b)>// 			<a: 4>// 			<boe>// 			1 + [ |a| a ] value: 3.// 			^ 7 '.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message class should = ASTKeywordMessageDefinition.// 	result temporaries size should = 3.// 	result annotations size should = 3.// 	result statements size should = 2*/// testMethodObject send163297 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44077, 0);Object result = (Object)Eval((Object)send163297);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testMethod2)/*testMethod2// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// // 	| parser string result |// 	parser := scparser method.// 	string := 'a: b c: d// 			"boe" |x y z| "test"// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>// 			<a: 4> "test"// 			<boe>// 			1 + [ |a| a ] value: "mmh" 3.// 			^ 7 "biep". "bla" '.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message class should = ASTKeywordMessageDefinition.// 	result temporaries size should = 3.// 	result annotations size should = 3.// 	result statements size should = 2*/// testMethod2Object send163298 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44050, 0);Object result = (Object)Eval((Object)send163298);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testMethod3)/*testMethod3// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "// // 	| parser string result |// 	parser := scparser method.// 	string := 'withA: a withB: b withC: c// 		^ 1// 	'.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message asString should = 'withA:withB:withC:'*/// testMethod3Object send163299 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44039, 0);Object result = (Object)Eval((Object)send163299);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testMethod4)/*testMethod4// 	| parser string result |// 	parser := scparser method.// 	string := 'withA: a withB: b withC: c// 		a := b > c.// 		a ifTrue: [^ b]// 		  ifFalse: [^ c]// 	'.// 	result := parser parse: string.// 	result hasReturnExpression should be true.// 	result class should = ASTMethod.// 	result message asString should = 'withA:withB:withC:'.// 	result statements last hasReturnExpression should be true.*/// testMethod4Object send163300 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44054, 0);Object result = (Object)Eval((Object)send163300);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testPrimary)/*testPrimary// 	| parser string result |// 	parser := scparser primary.	" primary variable"// 	string := PEGStringScanner on: 'abc '.// 	result := parser match: string.// 	result class should = ASTVariable.// 	result name should = 'abc'.// 	string position should = 3.	" literal "// 	string := PEGStringScanner on: '3'.// 	result := parser match: string.// 	result class should = ASTNumber.// 	result number should = '3'.// 	result base should = '10'.// 	string position should = 1*/// testPrimaryObject send163301 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44061, 0);Object result = (Object)Eval((Object)send163301);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testReturn)/*testReturn// 	| parser string result |// 	parser := scparser return.// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	result := parser match: string.// 	result class should = ASTReturnExpression.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression.// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.// 	result := parser match: string.// 	result class should = ASTReturnExpression.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression*/// testReturnObject send163302 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44055, 0);Object result = (Object)Eval((Object)send163302);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testScopedExpression)/*testScopedExpression// 	| parser string result |// 	parser := scparser expression.// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression*/// testScopedExpressionObject send163303 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44029, 0);Object result = (Object)Eval((Object)send163303);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testSelf)/*testSelf// 	| parser string message return |// 	parser := scparser messageExpression.// 	// 	string := PEGStringScanner on: 'self do: this and: that'.//  	message := parser match: string.// 	message receiver class should = ASTSelf.// 	// 	parser := scparser return.// 	string := PEGStringScanner on: '^ self do: this and: that'.//  	return := parser match: string.// 	return class should = ASTReturnExpression.// 	return expression receiver class should = ASTSelf.*/// testSelfObject send163304 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44036, 0);Object result = (Object)Eval((Object)send163304);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testSeparator)/*testSeparator// 	| parser string |// 	parser := scparser separator.// 	string := PEGStringScanner on: '"Test"'.// 	(parser match: string) should not be isNil.// 	string position should = 6.// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.// 	(parser match: string) should not be isNil.// 	string position should = 18.// 	string := PEGStringScanner on: ''.// 	(parser match: string) should not be isNil.// 	string position should = 0*/// testSeparatorObject send163305 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44065, 0);Object result = (Object)Eval((Object)send163305);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testString)/*testString// 	| parser string |// 	parser := scparser string.// 	string := PEGStringScanner on: ''.// 	(parser match: string) should be isNil.// 	string position should = 0.// 	string := PEGStringScanner on: '''abc'''.// 	(parser match: string) should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc'''''.// 	(parser match: string) should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc''''d'''.// 	(parser match: string) should = 'abc''d'.// 	string position should = 8*/// testStringObject send163306 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44057, 0);Object result = (Object)Eval((Object)send163306);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testStringConstant)/*testStringConstant// 	| parser string result |// 	parser := scparser stringConstant.// 	string := PEGStringScanner on: '''abc'''.// 	result := parser match: string.// 	result class should = ASTString.// 	result string should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc'''''.// 	result := parser match: string.// 	result class should = ASTString.// 	result string should = 'abc'.// 	string position should = 5.// 	string := PEGStringScanner on: '''abc''''d'' '''.// 	result := parser match: string.// 	result class should = ASTString.// 	result string should = 'abc''d'.// 	string position should = 8*/// testStringConstantObject send163307 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44088, 0);Object result = (Object)Eval((Object)send163307);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testSubExpression)/*testSubExpression// 	| parser string result |// 	parser := scparser subExpression.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.// 	(parser match: string) should be isNil.// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.// 	result := parser match: string.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'a'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'b'.// 	result := result expression.// 	result class should = ASTAssignmentExpression.// 	result variable class should = ASTVariable.// 	result variable name should = 'c'.// 	result expression class should = ASTMessageExpression*/// testSubExpressionObject send163308 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44062, 0);Object result = (Object)Eval((Object)send163308);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testSuper)/*testSuper// 	| parser string message return |// 	parser := scparser messageExpression.// 	// 	string := PEGStringScanner on: 'super do: this and: that'.//  	message := parser match: string.// 	message receiver class should = ASTSuper.// 	// 	parser := scparser return.// 	string := PEGStringScanner on: '^ super do: this and: that'.//  	return := parser match: string.// 	return class should = ASTReturnExpression.// 	return expression receiver class should = ASTSuper.*/// testSuperObject send163309 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44048, 0);Object result = (Object)Eval((Object)send163309);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testSymbolConstant)/*testSymbolConstant// 	| parser string result |// 	parser := scparser symbolConstant.// 	string := PEGStringScanner on: '#abc'.// 	result := parser match: string.// 	result class should = ASTSymbol.// 	result symbol should = 'abc'.// 	string position should = 4*/// testSymbolConstantObject send163310 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44060, 0);Object result = (Object)Eval((Object)send163310);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testSymbolKeywords)/*testSymbolKeywords// 	| parser string |// 	parser := scparser symbolKeywords.// 	string := PEGStringScanner on: 'abcd:def: '.// 	(parser match: string) should = 'abcd:def:'.// 	string position should = 9.// 	string := PEGStringScanner on: 'abcd '.// 	(parser match: string) should be isNil.// 	string position should = 0*/// testSymbolKeywordsObject send163311 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44072, 0);Object result = (Object)Eval((Object)send163311);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testTemporaries)/*testTemporaries// 	| parser string |// 	parser := scparser temporaries.// 	string := PEGStringScanner on: '|a b c|'.// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)// 	at: 1 put: 'a';// 	at: 2 put: 'b';// 	at: 3 put: 'c';// 	yourself).// 	string position should = 7.// 	string := PEGStringScanner on: '|  a b c  |'.// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)// 	at: 1 put: 'a';// 	at: 2 put: 'b';// 	at: 3 put: 'c';// 	yourself).// 	string position should = 11*/// testTemporariesObject send163312 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44051, 0);Object result = (Object)Eval((Object)send163312);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)/*testUnaryAndBinaryPrecedence// 	| parser ast |// 	parser := scparser statements.// 	// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.// 	// 	ast class should = ASTBinaryExpression.// 	ast receiver class should = ASTUnaryExpression.// 	ast receiver receiver class should = ASTNumber.// 	ast receiver receiver number should = '2'.// 	ast receiver selector asString should = 'fib'.// 	// 	ast selector asString should = '+'.// 	// 	ast argument class should = ASTNumber.// 	ast argument number should = '3'.// 	// 	*/// testUnaryAndBinaryPrecedenceObject send163313 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44073, 0);Object result = (Object)Eval((Object)send163313);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testUnaryExpression)/*testUnaryExpression// 	| parser string result |// 	parser := scparser unaryExpression.// 	string := PEGStringScanner on: 'abc def ghi '.// 	result := parser match: string.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'ghi'.// 	result := result receiver.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'def'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	string position should = 12.// 	string := PEGStringScanner on: 'abc'.// 	(parser match: string) should be isNil*/// testUnaryExpressionObject send163314 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44028, 0);Object result = (Object)Eval((Object)send163314);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testUnaryObjectDescription)/*testUnaryObjectDescription// 	| parser string result |// 	parser := scparser unaryObjectDescription.	" unary expression "// 	string := PEGStringScanner on: 'abc def ghi '.// 	result := parser match: string.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'ghi'.// 	result := result receiver.// 	result class should = ASTUnaryExpression.// 	result selector class should = ASTUnarySelector.// 	result selector selector printString should = 'def'.// 	result receiver class should = ASTVariable.// 	result receiver name should = 'abc'.// 	string position should = 12.	" primary "// 	string := PEGStringScanner on: '3'.// 	result := parser match: string.// 	result class should = ASTNumber.// 	result number should = '3'.// 	string position should = 1*/// testUnaryObjectDescriptionObject send163315 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44078, 0);Object result = (Object)Eval((Object)send163315);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}/* ========================================================================= */NEW_TEST(SCParserTest_testUnarySelector)/*testUnarySelector// 	| parser string result |// 	parser := scparser unarySelector.// 	string := PEGStringScanner on: 'abcd bla'.// 	result := parser match: string.// 	result class should = ASTUnarySelector.// 	result selector printString should = 'abcd'.// 	string position should = 4.// 	string := PEGStringScanner on: 'abcd: bla'.// 	(parser match: string) should be isNil.// 	string position should = 0*/// testUnarySelectorObject send163316 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44079, 0);Object result = (Object)Eval((Object)send163316);ASSERT_EMPTY_STACKassert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);}void SCParserTest_setUp() {// setUpObject send163317 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol44071, 0);Eval((Object)send163317);}/* ========================================================================= */TEST_SUITE(SCParserTest,{    SCParserTest_create_ast();    SCParserTest_TestCase_Class =(Type_Class)class6736;    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));    SCParserTest_setUp();    RUN_TEST(SCParserTest_testCharacterConstant);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testTemporaries);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testCharacter);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testCascadedMessageExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testKeywordMessageExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testAssignmentExpressions);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBlockArguments);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testFinalExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testMethod);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testMethod3);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBinarySelector);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBinaryExpression2);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testKeywordsArguments);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBinaryMessageDefinition);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testScopedExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testArray);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBinaryObjectDescription);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testKeyword);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testKeywordExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testPrimary);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testSubExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testIdentifier);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBinaryArgument);    SCParserTest_setUp();    RUN_TEST(SCParserTest_setUp);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testStringConstant);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testString);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testSeparator);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testSymbolKeywords);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testMethod2);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testUnarySelector);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testUnaryObjectDescription);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testComment);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testMessageExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testMethod4);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testSelf);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testUnaryExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testParseTestMethods);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testAnnotation);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testReturn);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testSuper);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testSymbolConstant);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBlock);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testBinaryExpression);    SCParserTest_setUp();    RUN_TEST(SCParserTest_testCapitalIdentifier);})