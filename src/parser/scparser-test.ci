// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object localvariable18031;
Object array16349;
Object symbol30431;
Object super1700;
Object symbol30733;
Object send107177;
Object send107178;
Object send107179;
Object method31055;
Object methodclosure30961;
Object classreference11483;
Object instancevariable13903;
Object method31056;
Object methodclosure30962;
Object localvariable18032;
Object array16350;
Object super1701;
Object symbol30734;
Object string10730;
Object constant23406;
Object send107180;
Object send107181;
Object send107182;
Object method31057;
Object methodclosure30963;
Object instancevariable13904;
Object method31058;
Object symbol30432;
Object methodclosure30964;
Object classreference11484;
Object send107183;
Object symbol30515;
Object send107184;
Object method31059;
Object symbol30416;
Object methodclosure30965;
Object symbol30417;
Object send107185;
Object symbol30411;
Object method31060;
Object symbol30410;
Object methodclosure30966;
Object send107186;
Object symbol30406;
Object send107187;
Object method31061;
Object symbol30409;
Object methodclosure30967;
Object localvariable18033;
Object array16351;
Object localvariable18034;
Object array16352;
Object variable1212;
Object array16353;
Object symbol30580;
Object send107188;
Object symbol30735;
Object constant23407;
Object send107189;
Object super1702;
Object send107190;
Object block7269;
Object send107191;
Object string10731;
Object constant23408;
Object send107192;
Object send107193;
Object string10732;
Object constant23409;
Object send107194;
Object send107195;
Object assign13545;
Object symbol30598;
Object send107196;
Object symbol30736;
Object send107197;
Object block7270;
Object send107198;
Object method31062;
Object methodclosure30968;
Object method31063;
Object methodclosure30969;
Object localvariable18035;
Object array16354;
Object send107199;
Object send107200;
Object method31064;
Object methodclosure30970;
Object method31065;
Object symbol30408;
Object methodclosure30971;
Object symbol30737;
Object send107201;
Object send107202;
Object method31066;
Object methodclosure30972;
Object objectlayout7358;
Object instancevariable13905;
Object instancevariable13906;
Object instancevariable13907;
Object instancevariable13908;
Object instancevariable13909;
Object symbol30514;
Object objectlayout7359;
Object instancevariable13910;
Object class5209;
Object metaclass4411;
Object super1703;
Object method31067;
Object methodclosure30973;
Object localvariable18036;
Object array16355;
Object assign13546;
Object method31068;
Object symbol30516;
Object methodclosure30974;
Object method31069;
Object symbol30517;
Object methodclosure30975;
Object objectlayout7360;
Object symbol30513;
Object objectlayout7361;
Object instancevariable13911;
Object instancevariable13912;
Object instancevariable13913;
Object class5210;
Object metaclass4412;
Object localvariable18037;
Object array16356;
Object send107203;
Object symbol30520;
Object send107204;
Object send107205;
Object method31070;
Object symbol30518;
Object methodclosure30976;
Object method31071;
Object methodclosure30977;
Object method31072;
Object symbol30522;
Object methodclosure30978;
Object localvariable18038;
Object array16357;
Object assign13547;
Object method31073;
Object methodclosure30979;
Object method31074;
Object symbol30524;
Object methodclosure30980;
Object method31075;
Object symbol30521;
Object methodclosure30981;
Object localvariable18039;
Object array16358;
Object assign13548;
Object method31076;
Object symbol30519;
Object methodclosure30982;
Object localvariable18040;
Object array16359;
Object super1704;
Object string10733;
Object constant23410;
Object send107206;
Object send107207;
Object send107208;
Object string10734;
Object constant23411;
Object send107209;
Object send107210;
Object send107211;
Object string10735;
Object constant23412;
Object send107212;
Object send107213;
Object send107214;
Object method31077;
Object methodclosure30983;
Object localvariable18041;
Object array16360;
Object assign13549;
Object method31078;
Object symbol30523;
Object methodclosure30984;
Object objectlayout7362;
Object symbol30421;
Object objectlayout7363;
Object class5211;
Object metaclass4413;
Object classreference11485;
Object classreference11486;
Object classreference11487;
Object objectlayout7364;
Object symbol30577;
Object objectlayout7365;
Object instancevariable13914;
Object class5212;
Object metaclass4414;
Object localvariable18042;
Object array16361;
Object assign13550;
Object method31079;
Object symbol30720;
Object methodclosure30985;
Object method31080;
Object symbol30719;
Object methodclosure30986;
Object classreference11488;
Object objectlayout7366;
Object symbol30579;
Object objectlayout7367;
Object instancevariable13915;
Object class5213;
Object metaclass4415;
Object localvariable18043;
Object array16362;
Object symbol30581;
Object send107215;
Object send107216;
Object send107217;
Object method31081;
Object symbol30584;
Object methodclosure30987;
Object localvariable18044;
Object array16363;
Object localvariable18045;
Object array16364;
Object assign13551;
Object send107218;
Object assign13552;
Object send107219;
Object smallint10758;
Object constant23413;
Object send107220;
Object send107221;
Object smallint10759;
Object constant23414;
Object send107222;
Object send107223;
Object symbol30738;
Object send107224;
Object send107225;
Object string10736;
Object constant23415;
Object send107226;
Object block7271;
Object send107227;
Object method31082;
Object symbol30583;
Object methodclosure30988;
Object send107228;
Object symbol30698;
Object send107229;
Object method31083;
Object methodclosure30989;
Object send107230;
Object send107231;
Object method31084;
Object methodclosure30990;
Object method31085;
Object methodclosure30991;
Object localvariable18046;
Object array16365;
Object send107232;
Object send107233;
Object method31086;
Object methodclosure30992;
Object localvariable18047;
Object array16366;
Object super1705;
Object string10737;
Object constant23416;
Object send107234;
Object symbol30552;
Object localvariable18048;
Object array16367;
Object send107235;
Object string10738;
Object constant23417;
Object send107236;
Object block7272;
Object send107237;
Object string10739;
Object constant23418;
Object send107238;
Object method31087;
Object methodclosure30993;
Object localvariable18049;
Object array16368;
Object smallint10760;
Object constant23419;
Object send107239;
Object method31088;
Object symbol30551;
Object methodclosure30994;
Object localvariable18050;
Object array16369;
Object send107240;
Object send107241;
Object method31089;
Object symbol30555;
Object methodclosure30995;
Object send107242;
Object send107243;
Object method31090;
Object symbol30548;
Object methodclosure30996;
Object localvariable18051;
Object array16370;
Object smallint10761;
Object constant23420;
Object symbol30739;
Object send107244;
Object localvariable18052;
Object array16371;
Object send107245;
Object send107246;
Object block7273;
Object send107247;
Object method31091;
Object methodclosure30997;
Object smallint10762;
Object constant23421;
Object send107248;
Object method31092;
Object symbol30549;
Object methodclosure30998;
Object localvariable18053;
Object array16372;
Object variable1213;
Object array16373;
Object send107249;
Object send107250;
Object block7274;
Object send107251;
Object send107252;
Object send107253;
Object send107254;
Object send107255;
Object block7275;
Object send107256;
Object send107257;
Object send107258;
Object send107259;
Object send107260;
Object block7276;
Object send107261;
Object smallint10763;
Object constant23422;
Object send107262;
Object localvariable18054;
Object array16374;
Object send107263;
Object send107264;
Object send107265;
Object send107266;
Object block7277;
Object send107267;
Object block7278;
Object send107268;
Object block7279;
Object send107269;
Object method31093;
Object methodclosure30999;
Object localvariable18055;
Object array16375;
Object localvariable18056;
Object array16376;
Object send107270;
Object symbol30413;
Object send107271;
Object smallint10764;
Object constant23423;
Object send107272;
Object send107273;
Object assign13553;
Object symbol30550;
Object localvariable18057;
Object localvariable18058;
Object array16377;
Object send107274;
Object block7280;
Object send107275;
Object send107276;
Object method31094;
Object symbol30553;
Object methodclosure31000;
Object localvariable18059;
Object array16378;
Object smallint10765;
Object constant23424;
Object send107277;
Object localvariable18060;
Object array16379;
Object symbol30740;
Object send107278;
Object send107279;
Object block7281;
Object send107280;
Object method31095;
Object methodclosure31001;
Object super1706;
Object method31096;
Object methodclosure31002;
Object send107281;
Object smallint10766;
Object constant23425;
Object send107282;
Object method31097;
Object symbol30543;
Object methodclosure31003;
Object localvariable18061;
Object localvariable18062;
Object array16380;
Object localvariable18063;
Object array16381;
Object assign13554;
Object localvariable18064;
Object array16382;
Object send107283;
Object assign13555;
Object block7282;
Object send107284;
Object method31098;
Object symbol30554;
Object methodclosure31004;
Object classreference11489;
Object send107285;
Object method31099;
Object symbol30582;
Object methodclosure31005;
Object objectlayout7368;
Object symbol30483;
Object objectlayout7369;
Object instancevariable13916;
Object class5214;
Object metaclass4416;
Object localvariable18065;
Object array16383;
Object assign13556;
Object method31100;
Object symbol30586;
Object methodclosure31006;
Object super1707;
Object objectlayout7370;
Object symbol30527;
Object class5215;
Object metaclass4417;
Object objectlayout7371;
Object symbol30526;
Object class5216;
Object metaclass4418;
Object classreference11490;
Object classreference11491;
Object objectlayout7372;
Object symbol30545;
Object class5217;
Object metaclass4419;
Object classreference11492;
Object objectlayout7373;
Object symbol30428;
Object objectlayout7374;
Object instancevariable13917;
Object instancevariable13918;
Object instancevariable13919;
Object class5218;
Object metaclass4420;
Object classreference11493;
Object send107286;
Object assign13557;
Object method31101;
Object methodclosure31007;
Object method31102;
Object symbol30585;
Object methodclosure31008;
Object symbol30741;
Object string10740;
Object constant23426;
Object send107287;
Object string10741;
Object constant23427;
Object send107288;
Object method31103;
Object methodclosure31009;
Object objectlayout7375;
Object symbol30491;
Object objectlayout7376;
Object instancevariable13920;
Object class5219;
Object metaclass4421;
Object localvariable18066;
Object array16384;
Object assign13558;
Object method31104;
Object symbol30590;
Object methodclosure31010;
Object method31105;
Object symbol30587;
Object methodclosure31011;
Object classreference11494;
Object classreference11495;
Object objectlayout7377;
Object symbol30472;
Object objectlayout7378;
Object class5220;
Object metaclass4422;
Object classreference11496;
Object objectlayout7379;
Object symbol30454;
Object objectlayout7380;
Object class5221;
Object metaclass4423;
Object send107289;
Object symbol30563;
Object send107290;
Object method31106;
Object symbol30592;
Object methodclosure31012;
Object objectlayout7381;
Object symbol30492;
Object objectlayout7382;
Object class5222;
Object metaclass4424;
Object classreference11497;
Object objectlayout7383;
Object symbol30541;
Object objectlayout7384;
Object class5223;
Object metaclass4425;
Object objectlayout7385;
Object symbol30445;
Object objectlayout7386;
Object instancevariable13921;
Object instancevariable13922;
Object class5224;
Object metaclass4426;
Object localvariable18067;
Object array16385;
Object assign13559;
Object method31107;
Object symbol30561;
Object methodclosure31013;
Object objectlayout7387;
Object symbol30423;
Object class5225;
Object metaclass4427;
Object localvariable18068;
Object array16386;
Object localvariable18069;
Object array16387;
Object variable1214;
Object array16388;
Object send107291;
Object constant23428;
Object send107292;
Object super1708;
Object send107293;
Object block7283;
Object send107294;
Object string10742;
Object constant23429;
Object send107295;
Object send107296;
Object string10743;
Object constant23430;
Object send107297;
Object send107298;
Object assign13560;
Object send107299;
Object send107300;
Object block7284;
Object send107301;
Object method31108;
Object methodclosure31014;
Object objectlayout7388;
Object symbol30556;
Object objectlayout7389;
Object instancevariable13923;
Object class5226;
Object metaclass4428;
Object method31109;
Object symbol30717;
Object methodclosure31015;
Object localvariable18070;
Object array16389;
Object assign13561;
Object method31110;
Object symbol30718;
Object methodclosure31016;
Object localvariable18071;
Object array16390;
Object send107302;
Object send107303;
Object send107304;
Object symbol30742;
Object send107305;
Object send107306;
Object send107307;
Object block7285;
Object send107308;
Object method31111;
Object methodclosure31017;
Object classreference11498;
Object send107309;
Object symbol30558;
Object send107310;
Object send107311;
Object method31112;
Object symbol30557;
Object methodclosure31018;
Object method31113;
Object symbol30559;
Object methodclosure31019;
Object localvariable18072;
Object array16391;
Object assign13562;
Object method31114;
Object symbol30560;
Object methodclosure31020;
Object send107312;
Object string10744;
Object constant23431;
Object send107313;
Object symbol30562;
Object send107314;
Object send107315;
Object symbol30743;
Object send107316;
Object send107317;
Object method31115;
Object methodclosure31021;
Object method31116;
Object methodclosure31022;
Object localvariable18073;
Object array16392;
Object send107318;
Object send107319;
Object method31117;
Object methodclosure31023;
Object classreference11499;
Object classreference11500;
Object objectlayout7390;
Object symbol30465;
Object objectlayout7391;
Object instancevariable13924;
Object instancevariable13925;
Object instancevariable13926;
Object instancevariable13927;
Object class5227;
Object metaclass4429;
Object localvariable18074;
Object array16393;
Object assign13563;
Object method31118;
Object symbol30600;
Object methodclosure31024;
Object method31119;
Object symbol30599;
Object methodclosure31025;
Object method31120;
Object symbol30604;
Object methodclosure31026;
Object method31121;
Object symbol30601;
Object methodclosure31027;
Object localvariable18075;
Object array16394;
Object assign13564;
Object method31122;
Object symbol30605;
Object methodclosure31028;
Object send107320;
Object symbol30588;
Object send107321;
Object method31123;
Object methodclosure31029;
Object localvariable18076;
Object array16395;
Object assign13565;
Object method31124;
Object symbol30602;
Object methodclosure31030;
Object localvariable18077;
Object array16396;
Object assign13566;
Object method31125;
Object symbol30606;
Object methodclosure31031;
Object method31126;
Object symbol30603;
Object methodclosure31032;
Object localvariable18078;
Object array16397;
Object smallint10767;
Object constant23432;
Object constant23433;
Object send107322;
Object smallint10768;
Object constant23434;
Object constant23435;
Object send107323;
Object smallint10769;
Object constant23436;
Object constant23437;
Object send107324;
Object smallint10770;
Object constant23438;
Object constant23439;
Object send107325;
Object send107326;
Object block7286;
Object smallint10771;
Object constant23440;
Object send107327;
Object send107328;
Object method31127;
Object symbol30607;
Object methodclosure31033;
Object localvariable18079;
Object array16398;
Object super1709;
Object string10745;
Object constant23441;
Object send107329;
Object send107330;
Object send107331;
Object string10746;
Object constant23442;
Object send107332;
Object method31128;
Object methodclosure31034;
Object classreference11501;
Object objectlayout7392;
Object symbol30593;
Object objectlayout7393;
Object class5228;
Object metaclass4430;
Object objectlayout7394;
Object symbol30457;
Object objectlayout7395;
Object instancevariable13928;
Object class5229;
Object metaclass4431;
Object method31129;
Object symbol30594;
Object methodclosure31035;
Object send107333;
Object send107334;
Object method31130;
Object methodclosure31036;
Object symbol30547;
Object send107335;
Object send107336;
Object method31131;
Object methodclosure31037;
Object localvariable18080;
Object array16399;
Object assign13567;
Object method31132;
Object symbol30595;
Object methodclosure31038;
Object classreference11502;
Object objectlayout7396;
Object symbol30571;
Object objectlayout7397;
Object class5230;
Object metaclass4432;
Object objectlayout7398;
Object symbol30684;
Object objectlayout7399;
Object instancevariable13929;
Object class5231;
Object metaclass4433;
Object variable1215;
Object array16400;
Object symbol30744;
Object send107337;
Object localvariable18081;
Object array16401;
Object send107338;
Object symbol30745;
Object send107339;
Object block7287;
Object send107340;
Object block7288;
Object send107341;
Object block7289;
Object send107342;
Object block7290;
Object send107343;
Object method31133;
Object methodclosure31039;
Object localvariable18082;
Object array16402;
Object assign13568;
Object method31134;
Object symbol30722;
Object methodclosure31040;
Object classreference11503;
Object objectlayout7400;
Object symbol30446;
Object objectlayout7401;
Object instancevariable13930;
Object class5232;
Object metaclass4434;
Object method31135;
Object methodclosure31041;
Object objectlayout7402;
Object instancevariable13931;
Object symbol30564;
Object objectlayout7403;
Object instancevariable13932;
Object class5233;
Object metaclass4435;
Object method31136;
Object methodclosure31042;
Object method31137;
Object symbol30565;
Object methodclosure31043;
Object send107344;
Object method31138;
Object methodclosure31044;
Object send107345;
Object send107346;
Object method31139;
Object methodclosure31045;
Object localvariable18083;
Object array16403;
Object send107347;
Object assign13569;
Object method31140;
Object symbol30566;
Object methodclosure31046;
Object localvariable18084;
Object array16404;
Object string10747;
Object constant23443;
Object send107348;
Object send107349;
Object send107350;
Object method31141;
Object methodclosure31047;
Object localvariable18085;
Object array16405;
Object symbol30746;
Object send107351;
Object send107352;
Object send107353;
Object send107354;
Object send107355;
Object block7291;
Object send107356;
Object method31142;
Object methodclosure31048;
Object classreference11504;
Object send107357;
Object send107358;
Object method31143;
Object methodclosure31049;
Object send107359;
Object send107360;
Object method31144;
Object methodclosure31050;
Object localvariable18086;
Object array16406;
Object assign13570;
Object method31145;
Object methodclosure31051;
Object send107361;
Object send107362;
Object method31146;
Object methodclosure31052;
Object localvariable18087;
Object array16407;
Object send107363;
Object method31147;
Object methodclosure31053;
Object classreference11505;
Object objectlayout7404;
Object symbol30618;
Object objectlayout7405;
Object class5234;
Object metaclass4436;
Object send107364;
Object send107365;
Object method31148;
Object methodclosure31054;
Object classreference11506;
Object objectlayout7406;
Object symbol30450;
Object objectlayout7407;
Object instancevariable13933;
Object instancevariable13934;
Object class5235;
Object metaclass4437;
Object send107366;
Object send107367;
Object method31149;
Object methodclosure31055;
Object localvariable18088;
Object array16408;
Object assign13571;
Object method31150;
Object methodclosure31056;
Object send107368;
Object send107369;
Object send107370;
Object method31151;
Object methodclosure31057;
Object localvariable18089;
Object array16409;
Object symbol30415;
Object send107371;
Object symbol30747;
Object send107372;
Object send107373;
Object method31152;
Object symbol30576;
Object methodclosure31058;
Object localvariable18090;
Object array16410;
Object send107374;
Object send107375;
Object send107376;
Object method31153;
Object methodclosure31059;
Object localvariable18091;
Object array16411;
Object send107377;
Object symbol30748;
Object send107378;
Object send107379;
Object method31154;
Object symbol30578;
Object methodclosure31060;
Object super1710;
Object method31155;
Object methodclosure31061;
Object localvariable18092;
Object array16412;
Object super1711;
Object localvariable18093;
Object array16413;
Object string10748;
Object constant23444;
Object send107380;
Object send107381;
Object send107382;
Object string10749;
Object constant23445;
Object send107383;
Object block7292;
Object send107384;
Object method31156;
Object methodclosure31062;
Object method31157;
Object methodclosure31063;
Object classreference11507;
Object objectlayout7408;
Object symbol30447;
Object objectlayout7409;
Object instancevariable13935;
Object class5236;
Object metaclass4438;
Object localvariable18094;
Object array16414;
Object assign13572;
Object method31158;
Object symbol30567;
Object methodclosure31064;
Object method31159;
Object symbol30568;
Object methodclosure31065;
Object objectlayout7410;
Object symbol30569;
Object objectlayout7411;
Object instancevariable13936;
Object class5237;
Object metaclass4439;
Object method31160;
Object methodclosure31066;
Object localvariable18095;
Object array16415;
Object assign13573;
Object method31161;
Object methodclosure31067;
Object localvariable18096;
Object array16416;
Object send107385;
Object send107386;
Object method31162;
Object methodclosure31068;
Object localvariable18097;
Object array16417;
Object send107387;
Object send107388;
Object send107389;
Object send107390;
Object send107391;
Object send107392;
Object block7293;
Object send107393;
Object method31163;
Object methodclosure31069;
Object classreference11508;
Object send107394;
Object send107395;
Object send107396;
Object method31164;
Object symbol30570;
Object methodclosure31070;
Object classreference11509;
Object classreference11510;
Object objectlayout7412;
Object symbol30451;
Object objectlayout7413;
Object instancevariable13937;
Object instancevariable13938;
Object class5238;
Object metaclass4440;
Object method31165;
Object symbol30591;
Object methodclosure31071;
Object localvariable18098;
Object array16418;
Object assign13574;
Object method31166;
Object symbol30589;
Object methodclosure31072;
Object method31167;
Object methodclosure31073;
Object localvariable18099;
Object array16419;
Object assign13575;
Object method31168;
Object methodclosure31074;
Object super1712;
Object send107397;
Object assign13576;
Object method31169;
Object methodclosure31075;
Object send107398;
Object symbol30749;
Object localvariable18100;
Object array16420;
Object send107399;
Object symbol30750;
Object send107400;
Object block7294;
Object send107401;
Object block7295;
Object send107402;
Object method31170;
Object methodclosure31076;
Object classreference11511;
Object objectlayout7414;
Object symbol30459;
Object objectlayout7415;
Object instancevariable13939;
Object instancevariable13940;
Object class5239;
Object metaclass4441;
Object localvariable18101;
Object array16421;
Object symbol30596;
Object send107403;
Object assign13577;
Object method31171;
Object symbol30597;
Object methodclosure31077;
Object localvariable18102;
Object array16422;
Object assign13578;
Object method31172;
Object methodclosure31078;
Object method31173;
Object methodclosure31079;
Object method31174;
Object methodclosure31080;
Object localvariable18103;
Object array16423;
Object assign13579;
Object method31175;
Object methodclosure31081;
Object super1713;
Object method31176;
Object methodclosure31082;
Object localvariable18104;
Object array16424;
Object send107404;
Object send107405;
Object symbol30751;
Object send107406;
Object send107407;
Object super1714;
Object send107408;
Object send107409;
Object send107410;
Object send107411;
Object method31177;
Object methodclosure31083;
Object classreference11512;
Object classreference11513;
Object objectlayout7416;
Object symbol30468;
Object objectlayout7417;
Object instancevariable13941;
Object instancevariable13942;
Object instancevariable13943;
Object class5240;
Object metaclass4442;
Object localvariable18105;
Object array16425;
Object assign13580;
Object method31178;
Object methodclosure31084;
Object method31179;
Object methodclosure31085;
Object localvariable18106;
Object array16426;
Object assign13581;
Object method31180;
Object symbol30608;
Object methodclosure31086;
Object method31181;
Object methodclosure31087;
Object localvariable18107;
Object array16427;
Object assign13582;
Object method31182;
Object methodclosure31088;
Object super1715;
Object send107412;
Object send107413;
Object send107414;
Object send107415;
Object send107416;
Object send107417;
Object method31183;
Object methodclosure31089;
Object method31184;
Object methodclosure31090;
Object send107418;
Object localvariable18108;
Object array16428;
Object send107419;
Object send107420;
Object block7296;
Object send107421;
Object block7297;
Object send107422;
Object method31185;
Object methodclosure31091;
Object classreference11514;
Object objectlayout7418;
Object symbol30449;
Object objectlayout7419;
Object instancevariable13944;
Object instancevariable13945;
Object class5241;
Object metaclass4443;
Object localvariable18109;
Object array16429;
Object assign13583;
Object method31186;
Object symbol30573;
Object methodclosure31092;
Object method31187;
Object symbol30574;
Object methodclosure31093;
Object localvariable18110;
Object array16430;
Object assign13584;
Object method31188;
Object symbol30575;
Object methodclosure31094;
Object method31189;
Object symbol30572;
Object methodclosure31095;
Object classreference11515;
Object objectlayout7420;
Object symbol30461;
Object objectlayout7421;
Object class5242;
Object metaclass4444;
Object localvariable18111;
Object array16431;
Object string10750;
Object constant23446;
Object send107423;
Object method31190;
Object methodclosure31096;
Object classreference11516;
Object objectlayout7422;
Object symbol30453;
Object objectlayout7423;
Object instancevariable13946;
Object class5243;
Object metaclass4445;
Object method31191;
Object methodclosure31097;
Object localvariable18112;
Object array16432;
Object assign13585;
Object method31192;
Object methodclosure31098;
Object localvariable18113;
Object array16433;
Object send107424;
Object send107425;
Object send107426;
Object send107427;
Object super1716;
Object method31193;
Object methodclosure31099;
Object classreference11517;
Object objectlayout7424;
Object symbol30506;
Object objectlayout7425;
Object instancevariable13947;
Object class5244;
Object metaclass4446;
Object objectlayout7426;
Object symbol30714;
Object objectlayout7427;
Object instancevariable13948;
Object class5245;
Object metaclass4447;
Object localvariable18114;
Object array16434;
Object symbol30752;
Object send107428;
Object assign13586;
Object method31194;
Object symbol30716;
Object methodclosure31100;
Object localvariable18115;
Object array16435;
Object send107429;
Object send107430;
Object symbol30713;
Object send107431;
Object send107432;
Object send107433;
Object block7298;
Object send107434;
Object method31195;
Object methodclosure31101;
Object method31196;
Object methodclosure31102;
Object classreference11518;
Object send107435;
Object send107436;
Object send107437;
Object method31197;
Object symbol30715;
Object methodclosure31103;
Object localvariable18116;
Object array16436;
Object assign13587;
Object method31198;
Object methodclosure31104;
Object method31199;
Object methodclosure31105;
Object classreference11519;
Object objectlayout7428;
Object symbol30442;
Object objectlayout7429;
Object instancevariable13949;
Object class5246;
Object metaclass4448;
Object method31200;
Object symbol30544;
Object methodclosure31106;
Object localvariable18117;
Object array16437;
Object assign13588;
Object method31201;
Object symbol30542;
Object methodclosure31107;
Object send107438;
Object send107439;
Object method31202;
Object methodclosure31108;
Object classreference11520;
Object objectlayout7430;
Object symbol30470;
Object objectlayout7431;
Object instancevariable13950;
Object instancevariable13951;
Object class5247;
Object metaclass4449;
Object localvariable18118;
Object array16438;
Object assign13589;
Object method31203;
Object symbol30609;
Object methodclosure31109;
Object method31204;
Object methodclosure31110;
Object localvariable18119;
Object array16439;
Object assign13590;
Object method31205;
Object methodclosure31111;
Object method31206;
Object symbol30610;
Object methodclosure31112;
Object classreference11521;
Object objectlayout7432;
Object symbol30462;
Object objectlayout7433;
Object instancevariable13952;
Object class5248;
Object metaclass4450;
Object localvariable18120;
Object array16440;
Object assign13591;
Object method31207;
Object methodclosure31113;
Object method31208;
Object methodclosure31114;
Object method31209;
Object methodclosure31115;
Object classreference11522;
Object classreference11523;
Object classreference11524;
Object objectlayout7434;
Object symbol30474;
Object objectlayout7435;
Object instancevariable13953;
Object class5249;
Object metaclass4451;
Object localvariable18121;
Object array16441;
Object symbol30753;
Object send107440;
Object assign13592;
Object method31210;
Object methodclosure31116;
Object method31211;
Object methodclosure31117;
Object localvariable18122;
Object array16442;
Object variable1216;
Object array16443;
Object super1717;
Object send107441;
Object block7299;
Object send107442;
Object symbol30611;
Object send107443;
Object block7300;
Object send107444;
Object method31212;
Object methodclosure31118;
Object super1718;
Object send107445;
Object assign13593;
Object method31213;
Object methodclosure31119;
Object localvariable18123;
Object array16444;
Object variable1217;
Object array16445;
Object send107446;
Object symbol30754;
Object localvariable18124;
Object array16446;
Object send107447;
Object send107448;
Object send107449;
Object send107450;
Object send107451;
Object send107452;
Object send107453;
Object block7301;
Object send107454;
Object block7302;
Object send107455;
Object block7303;
Object send107456;
Object method31214;
Object methodclosure31120;
Object classreference11525;
Object objectlayout7436;
Object symbol30686;
Object objectlayout7437;
Object instancevariable13954;
Object instancevariable13955;
Object class5250;
Object metaclass4452;
Object localvariable18125;
Object array16447;
Object assign13594;
Object method31215;
Object methodclosure31121;
Object localvariable18126;
Object array16448;
Object symbol30755;
Object send107457;
Object method31216;
Object symbol30691;
Object methodclosure31122;
Object objectlayout7438;
Object symbol30706;
Object objectlayout7439;
Object instancevariable13956;
Object instancevariable13957;
Object class5251;
Object metaclass4453;
Object localvariable18127;
Object array16449;
Object symbol30726;
Object send107458;
Object send107459;
Object method31217;
Object methodclosure31123;
Object localvariable18128;
Object localvariable18129;
Object array16450;
Object localvariable18130;
Object array16451;
Object symbol30534;
Object send107460;
Object block7304;
Object send107461;
Object symbol30695;
Object send107462;
Object assign13595;
Object send107463;
Object block7305;
Object send107464;
Object block7306;
Object send107465;
Object method31218;
Object methodclosure31124;
Object localvariable18131;
Object array16452;
Object assign13596;
Object method31219;
Object symbol30724;
Object methodclosure31125;
Object method31220;
Object methodclosure31126;
Object method31221;
Object symbol30705;
Object methodclosure31127;
Object localvariable18132;
Object array16453;
Object super1719;
Object assign13597;
Object assign13598;
Object method31222;
Object symbol30723;
Object methodclosure31128;
Object objectlayout7440;
Object symbol30700;
Object objectlayout7441;
Object class5252;
Object metaclass4454;
Object objectlayout7442;
Object symbol30704;
Object objectlayout7443;
Object instancevariable13958;
Object instancevariable13959;
Object class5253;
Object metaclass4455;
Object method31223;
Object methodclosure31129;
Object localvariable18133;
Object array16454;
Object variable1218;
Object array16455;
Object objectlayout7444;
Object symbol30729;
Object class5254;
Object metaclass4456;
Object localvariable18134;
Object array16456;
Object send107466;
Object method31224;
Object symbol30730;
Object methodclosure31130;
Object objectlayout7445;
Object symbol30727;
Object objectlayout7446;
Object instancevariable13960;
Object class5255;
Object metaclass4457;
Object localvariable18135;
Object array16457;
Object assign13599;
Object method31225;
Object symbol30731;
Object methodclosure31131;
Object localvariable18136;
Object array16458;
Object method31226;
Object methodclosure31132;
Object localvariable18137;
Object array16459;
Object send107467;
Object method31227;
Object symbol30732;
Object methodclosure31133;
Object classreference11526;
Object send107468;
Object symbol30756;
Object objectlayout7447;
Object symbol30728;
Object class5256;
Object metaclass4458;
Object classreference11527;
Object send107469;
Object block7307;
Object send107470;
Object send107471;
Object block7308;
Object send107472;
Object method31228;
Object methodclosure31134;
Object localvariable18138;
Object array16460;
Object super1720;
Object assign13600;
Object assign13601;
Object method31229;
Object methodclosure31135;
Object classreference11528;
Object send107473;
Object method31230;
Object methodclosure31136;
Object localvariable18139;
Object array16461;
Object localvariable18140;
Object localvariable18141;
Object array16462;
Object variable1219;
Object array16463;
Object send107474;
Object assign13602;
Object send107475;
Object assign13603;
Object send107476;
Object block7309;
Object send107477;
Object send107478;
Object send107479;
Object block7310;
Object send107480;
Object method31231;
Object methodclosure31137;
Object classreference11529;
Object send107481;
Object method31232;
Object symbol30701;
Object methodclosure31138;
Object localvariable18142;
Object array16464;
Object send107482;
Object send107483;
Object method31233;
Object symbol30692;
Object methodclosure31139;
Object method31234;
Object symbol30702;
Object methodclosure31140;
Object method31235;
Object symbol30693;
Object methodclosure31141;
Object localvariable18143;
Object array16465;
Object objectlayout7448;
Object symbol30699;
Object objectlayout7449;
Object instancevariable13961;
Object instancevariable13962;
Object class5257;
Object metaclass4459;
Object localvariable18144;
Object array16466;
Object localvariable18145;
Object localvariable18146;
Object array16467;
Object variable1220;
Object array16468;
Object send107484;
Object assign13604;
Object localvariable18147;
Object array16469;
Object send107485;
Object block7311;
Object send107486;
Object send107487;
Object assign13605;
Object send107488;
Object block7312;
Object send107489;
Object send107490;
Object send107491;
Object block7313;
Object send107492;
Object block7314;
Object send107493;
Object send107494;
Object smallint10772;
Object constant23447;
Object send107495;
Object send107496;
Object send107497;
Object block7315;
Object send107498;
Object block7316;
Object send107499;
Object method31236;
Object methodclosure31142;
Object localvariable18148;
Object array16470;
Object assign13606;
Object method31237;
Object methodclosure31143;
Object method31238;
Object methodclosure31144;
Object super1721;
Object send107500;
Object send107501;
Object method31239;
Object methodclosure31145;
Object localvariable18149;
Object array16471;
Object super1722;
Object assign13607;
Object assign13608;
Object method31240;
Object methodclosure31146;
Object localvariable18150;
Object array16472;
Object symbol30703;
Object send107502;
Object send107503;
Object method31241;
Object symbol30725;
Object methodclosure31147;
Object classreference11530;
Object send107504;
Object send107505;
Object send107506;
Object method31242;
Object methodclosure31148;
Object assign13609;
Object method31243;
Object methodclosure31149;
Object send107507;
Object send107508;
Object method31244;
Object symbol30694;
Object methodclosure31150;
Object send107509;
Object method31245;
Object methodclosure31151;
Object method31246;
Object methodclosure31152;
Object method31247;
Object methodclosure31153;
Object localvariable18151;
Object array16473;
Object localvariable18152;
Object localvariable18153;
Object array16474;
Object symbol30757;
Object send107510;
Object assign13610;
Object send107511;
Object assign13611;
Object symbol30758;
Object send107512;
Object block7317;
Object send107513;
Object method31248;
Object methodclosure31154;
Object localvariable18154;
Object array16475;
Object symbol30759;
Object send107514;
Object localvariable18155;
Object array16476;
Object symbol30760;
Object send107515;
Object symbol30761;
Object send107516;
Object block7318;
Object send107517;
Object block7319;
Object send107518;
Object method31249;
Object symbol30687;
Object methodclosure31155;
Object send107519;
Object method31250;
Object methodclosure31156;
Object localvariable18156;
Object array16477;
Object assign13612;
Object method31251;
Object symbol30696;
Object methodclosure31157;
Object localvariable18157;
Object array16478;
Object objectlayout7450;
Object symbol30688;
Object objectlayout7451;
Object instancevariable13963;
Object class5258;
Object metaclass4460;
Object localvariable18158;
Object array16479;
Object send107520;
Object send107521;
Object method31252;
Object symbol30712;
Object methodclosure31158;
Object super1723;
Object send107522;
Object send107523;
Object method31253;
Object methodclosure31159;
Object localvariable18159;
Object array16480;
Object super1724;
Object assign13613;
Object method31254;
Object methodclosure31160;
Object localvariable18160;
Object array16481;
Object localvariable18161;
Object array16482;
Object variable1221;
Object array16483;
Object localvariable18162;
Object array16484;
Object send107524;
Object assign13614;
Object symbol30762;
Object send107525;
Object block7320;
Object send107526;
Object block7321;
Object send107527;
Object block7322;
Object send107528;
Object method31255;
Object methodclosure31161;
Object classreference11532;
Object send107529;
Object send107530;
Object send107531;
Object method31256;
Object methodclosure31162;
Object symbol30707;
Object send107532;
Object send107533;
Object method31257;
Object symbol30697;
Object methodclosure31163;
Object send107534;
Object send107535;
Object method31258;
Object symbol30689;
Object methodclosure31164;
Object classreference11533;
Object send107536;
Object method31259;
Object methodclosure31165;
Object variable1222;
Object array16485;
Object super1725;
Object send107537;
Object block7323;
Object send107538;
Object string10751;
Object constant23448;
Object send107539;
Object string10752;
Object constant23449;
Object send107540;
Object block7324;
Object send107541;
Object method31260;
Object methodclosure31166;
Object localvariable18163;
Object array16486;
Object send107542;
Object symbol30763;
Object send107543;
Object block7325;
Object send107544;
Object method31261;
Object symbol30690;
Object methodclosure31167;
Object classreference11531;
Object objectlayout7452;
Object symbol30530;
Object objectlayout7453;
Object instancevariable13964;
Object instancevariable13965;
Object instancevariable13966;
Object class5260;
Object metaclass4461;
Object objectlayout7454;
Object symbol30529;
Object objectlayout7455;
Object class5261;
Object metaclass4462;
Object objectlayout7456;
Object symbol30441;
Object objectlayout7457;
Object instancevariable13967;
Object instancevariable13968;
Object class5262;
Object metaclass4463;
Object localvariable18164;
Object array16487;
Object symbol30533;
Object send107545;
Object block7326;
Object block7327;
Object send107546;
Object method31262;
Object symbol30535;
Object methodclosure31168;
Object localvariable18165;
Object array16488;
Object variable1223;
Object array16489;
Object smallint10773;
Object constant23450;
Object send107547;
Object send107548;
Object assign13615;
Object send107549;
Object block7328;
Object send107550;
Object smallint10774;
Object constant23451;
Object send107551;
Object objectlayout7458;
Object symbol30538;
Object objectlayout7459;
Object instancevariable13969;
Object instancevariable13970;
Object instancevariable13971;
Object class5263;
Object metaclass4464;
Object classreference11534;
Object objectlayout7460;
Object symbol30721;
Object objectlayout7461;
Object instancevariable13972;
Object instancevariable13973;
Object class5264;
Object metaclass4465;
Object classreference11535;
Object classreference11536;
Object send107552;
Object send107553;
Object block7329;
Object send107554;
Object method31263;
Object symbol30539;
Object methodclosure31169;
Object localvariable18166;
Object array16490;
Object localvariable18167;
Object localvariable18168;
Object array16491;
Object variable1224;
Object array16492;
Object assign13616;
Object send107555;
Object symbol30764;
Object symbol30532;
Object send107556;
Object block7330;
Object send107557;
Object assign13617;
Object symbol30765;
Object send107558;
Object assign13618;
Object symbol30766;
Object send107559;
Object send107560;
Object block7331;
Object send107561;
Object send107562;
Object send107563;
Object block7332;
Object send107564;
Object block7333;
Object send107565;
Object method31264;
Object symbol30540;
Object methodclosure31170;
Object send107566;
Object method31265;
Object methodclosure31171;
Object localvariable18169;
Object localvariable18170;
Object array16493;
Object super1726;
Object assign13619;
Object send107567;
Object smallint10775;
Object constant23452;
Object send107568;
Object send107569;
Object assign13620;
Object method31266;
Object symbol30536;
Object methodclosure31172;
Object localvariable18171;
Object array16494;
Object localvariable18172;
Object array16495;
Object symbol30711;
Object send107570;
Object assign13621;
Object symbol30767;
Object send107571;
Object method31267;
Object methodclosure31173;
Object localvariable18173;
Object array16496;
Object localvariable18174;
Object localvariable18175;
Object array16497;
Object variable1225;
Object array16498;
Object symbol30768;
Object send107572;
Object assign13622;
Object assign13623;
Object send107573;
Object block7334;
Object send107574;
Object send107575;
Object block7335;
Object send107576;
Object symbol30769;
Object send107577;
Object send107578;
Object send107579;
Object send107580;
Object block7336;
Object send107581;
Object block7337;
Object send107582;
Object block7338;
Object send107583;
Object method31268;
Object methodclosure31174;
Object classreference11537;
Object classreference11538;
Object objectlayout7462;
Object symbol30500;
Object objectlayout7463;
Object instancevariable13974;
Object instancevariable13975;
Object instancevariable13976;
Object instancevariable13977;
Object class5265;
Object metaclass4466;
Object localvariable18176;
Object array16499;
Object assign13624;
Object method31269;
Object symbol30708;
Object methodclosure31175;
Object localvariable18177;
Object array16500;
Object localvariable18178;
Object array16501;
Object send107584;
Object assign13625;
Object method31270;
Object methodclosure31176;
Object localvariable18179;
Object array16502;
Object assign13626;
Object method31271;
Object symbol30710;
Object methodclosure31177;
Object localvariable18180;
Object array16503;
Object send107585;
Object assign13627;
Object method31272;
Object methodclosure31178;
Object localvariable18181;
Object array16504;
Object localvariable18182;
Object localvariable18183;
Object array16505;
Object send107586;
Object assign13628;
Object send107587;
Object assign13629;
Object method31273;
Object symbol30709;
Object methodclosure31179;
Object super1727;
Object send107588;
Object symbol30770;
Object send107589;
Object assign13630;
Object method31274;
Object methodclosure31180;
Object localvariable18184;
Object array16506;
Object localvariable18185;
Object array16507;
Object variable1226;
Object array16508;
Object send107590;
Object assign13631;
Object symbol30771;
Object block7339;
Object send107591;
Object block7340;
Object send107592;
Object send107593;
Object block7341;
Object send107594;
Object block7342;
Object send107595;
Object method31275;
Object methodclosure31181;
Object classreference11539;
Object objectlayout7464;
Object symbol30495;
Object objectlayout7465;
Object instancevariable13978;
Object instancevariable13979;
Object instancevariable13980;
Object class5266;
Object metaclass4467;
Object string10753;
Object constant23453;
Object send107596;
Object string10754;
Object constant23454;
Object send107597;
Object send107598;
Object method31276;
Object symbol30671;
Object methodclosure31182;
Object symbol30772;
Object string10755;
Object constant23455;
Object symbol30773;
Object send107599;
Object send107600;
Object symbol30774;
Object send107601;
Object symbol30775;
Object send107602;
Object send107603;
Object send107604;
Object send107605;
Object localvariable18186;
Object array16509;
Object smallint10776;
Object constant23456;
Object send107606;
Object localvariable18187;
Object array16510;
Object send107607;
Object send107608;
Object block7343;
Object send107609;
Object send107610;
Object block7344;
Object send107611;
Object method31277;
Object symbol30655;
Object methodclosure31183;
Object symbol30776;
Object send107612;
Object symbol30777;
Object send107613;
Object send107614;
Object method31278;
Object symbol30683;
Object methodclosure31184;
Object symbol30778;
Object send107615;
Object symbol30779;
Object send107616;
Object symbol30780;
Object send107617;
Object symbol30781;
Object send107618;
Object send107619;
Object send107620;
Object send107621;
Object symbol30782;
Object send107622;
Object send107623;
Object method31279;
Object symbol30625;
Object methodclosure31185;
Object symbol30783;
Object send107624;
Object symbol30784;
Object send107625;
Object send107626;
Object method31280;
Object symbol30637;
Object methodclosure31186;
Object send107627;
Object send107628;
Object method31281;
Object symbol30665;
Object methodclosure31187;
Object symbol30785;
Object constant23457;
Object string10756;
Object constant23458;
Object send107629;
Object block7345;
Object send107630;
Object method31282;
Object symbol30630;
Object methodclosure31188;
Object string10757;
Object constant23459;
Object symbol30786;
Object send107631;
Object localvariable18188;
Object array16511;
Object send107632;
Object send107633;
Object block7346;
Object send107634;
Object method31283;
Object symbol30619;
Object methodclosure31189;
Object string10758;
Object constant23460;
Object string10759;
Object constant23461;
Object send107635;
Object send107636;
Object symbol30787;
Object send107637;
Object send107638;
Object localvariable18189;
Object array16512;
Object send107639;
Object send107640;
Object send107641;
Object block7347;
Object send107642;
Object method31284;
Object symbol30647;
Object methodclosure31190;
Object string10760;
Object constant23462;
Object symbol30788;
Object send107643;
Object symbol30789;
Object send107644;
Object send107645;
Object localvariable18190;
Object array16513;
Object smallint10777;
Object constant23463;
Object send107646;
Object send107647;
Object send107648;
Object block7348;
Object send107649;
Object method31285;
Object symbol30675;
Object methodclosure31191;
Object localvariable18191;
Object array16514;
Object string10761;
Object constant23464;
Object send107650;
Object send107651;
Object send107652;
Object symbol30790;
Object send107653;
Object send107654;
Object send107655;
Object symbol30791;
Object send107656;
Object send107657;
Object send107658;
Object send107659;
Object localvariable18192;
Object array16515;
Object smallint10778;
Object constant23465;
Object send107660;
Object symbol30792;
Object send107661;
Object send107662;
Object localvariable18193;
Object array16516;
Object send107663;
Object send107664;
Object send107665;
Object smallint10779;
Object constant23466;
Object send107666;
Object send107667;
Object block7349;
Object send107668;
Object send107669;
Object block7350;
Object send107670;
Object block7351;
Object send107671;
Object symbol30793;
Object send107672;
Object send107673;
Object send107674;
Object method31286;
Object symbol30659;
Object methodclosure31192;
Object string10762;
Object constant23467;
Object symbol30794;
Object send107675;
Object send107676;
Object send107677;
Object symbol30795;
Object send107678;
Object send107679;
Object send107680;
Object send107681;
Object send107682;
Object send107683;
Object send107684;
Object send107685;
Object localvariable18194;
Object array16517;
Object localvariable18195;
Object array16518;
Object send107686;
Object send107687;
Object smallint10780;
Object constant23468;
Object send107688;
Object send107689;
Object block7352;
Object send107690;
Object send107691;
Object smallint10781;
Object constant23469;
Object send107692;
Object send107693;
Object smallint10782;
Object constant23470;
Object send107694;
Object send107695;
Object send107696;
Object block7353;
Object send107697;
Object send107698;
Object block7354;
Object send107699;
Object send107700;
Object send107701;
Object method31287;
Object symbol30612;
Object methodclosure31193;
Object string10763;
Object constant23471;
Object send107702;
Object send107703;
Object symbol30796;
Object send107704;
Object send107705;
Object method31288;
Object symbol30640;
Object methodclosure31194;
Object send107706;
Object symbol30797;
Object send107707;
Object symbol30798;
Object send107708;
Object symbol30799;
Object send107709;
Object symbol30800;
Object send107710;
Object send107711;
Object send107712;
Object send107713;
Object send107714;
Object symbol30801;
Object send107715;
Object send107716;
Object method31289;
Object symbol30629;
Object methodclosure31195;
Object send107717;
Object string10764;
Object constant23472;
Object send107718;
Object send107719;
Object send107720;
Object method31290;
Object symbol30652;
Object methodclosure31196;
Object send107721;
Object send107722;
Object method31291;
Object symbol30680;
Object methodclosure31197;
Object send107723;
Object string10765;
Object constant23473;
Object send107724;
Object send107725;
Object send107726;
Object send107727;
Object method31292;
Object symbol30669;
Object methodclosure31198;
Object string10766;
Object constant23474;
Object symbol30802;
Object send107728;
Object send107729;
Object symbol30803;
Object send107730;
Object send107731;
Object send107732;
Object send107733;
Object localvariable18196;
Object array16519;
Object symbol30804;
Object send107734;
Object send107735;
Object localvariable18197;
Object localvariable18198;
Object array16520;
Object send107736;
Object block7355;
Object send107737;
Object block7356;
Object send107738;
Object method31293;
Object symbol30622;
Object methodclosure31199;
Object localvariable18199;
Object array16521;
Object string10767;
Object constant23475;
Object send107739;
Object assign13632;
Object send107740;
Object send107741;
Object send107742;
Object send107743;
Object method31294;
Object symbol30650;
Object methodclosure31200;
Object localvariable18200;
Object array16522;
Object string10768;
Object constant23476;
Object send107744;
Object assign13633;
Object string10769;
Object constant23477;
Object send107745;
Object send107746;
Object send107747;
Object send107748;
Object symbol30805;
Object send107749;
Object send107750;
Object send107751;
Object send107752;
Object send107753;
Object send107754;
Object send107755;
Object send107756;
Object send107757;
Object send107758;
Object send107759;
Object string10770;
Object constant23478;
Object send107760;
Object send107761;
Object send107762;
Object localvariable18201;
Object array16523;
Object send107763;
Object send107764;
Object block7357;
Object send107765;
Object method31295;
Object symbol30634;
Object methodclosure31201;
Object localvariable18202;
Object array16524;
Object string10771;
Object constant23479;
Object send107766;
Object send107767;
Object send107768;
Object send107769;
Object localvariable18203;
Object array16525;
Object send107770;
Object assign13634;
Object smallint10783;
Object constant23480;
Object send107771;
Object localvariable18204;
Object array16526;
Object localvariable18205;
Object array16527;
Object send107772;
Object send107773;
Object block7358;
Object send107774;
Object send107775;
Object assign13635;
Object block7359;
Object send107776;
Object block7360;
Object send107777;
Object method31296;
Object symbol30662;
Object methodclosure31202;
Object string10772;
Object constant23481;
Object symbol30806;
Object send107778;
Object symbol30807;
Object send107779;
Object send107780;
Object localvariable18206;
Object array16528;
Object localvariable18207;
Object array16529;
Object symbol30651;
Object send107781;
Object send107782;
Object send107783;
Object smallint10784;
Object constant23482;
Object send107784;
Object send107785;
Object block7361;
Object send107786;
Object send107787;
Object block7362;
Object send107788;
Object method31297;
Object symbol30679;
Object methodclosure31203;
Object send107789;
Object send107790;
Object send107791;
Object send107792;
Object method31298;
Object symbol30616;
Object methodclosure31204;
Object constant23483;
Object string10773;
Object constant23484;
Object send107793;
Object block7363;
Object send107794;
Object method31299;
Object symbol30644;
Object methodclosure31205;
Object send107795;
Object symbol30808;
Object send107796;
Object symbol30809;
Object send107797;
Object send107798;
Object send107799;
Object send107800;
Object send107801;
Object method31300;
Object symbol30672;
Object methodclosure31206;
Object string10774;
Object constant23485;
Object symbol30810;
Object send107802;
Object string10775;
Object constant23486;
Object send107803;
Object send107804;
Object send107805;
Object send107806;
Object string10776;
Object constant23487;
Object send107807;
Object localvariable18208;
Object array16530;
Object symbol30811;
Object send107808;
Object send107809;
Object block7364;
Object send107810;
Object send107811;
Object localvariable18209;
Object localvariable18210;
Object array16531;
Object send107812;
Object block7365;
Object send107813;
Object send107814;
Object block7366;
Object send107815;
Object block7367;
Object send107816;
Object method31301;
Object symbol30656;
Object methodclosure31207;
Object string10777;
Object constant23488;
Object send107817;
Object symbol30812;
Object send107818;
Object send107819;
Object localvariable18211;
Object array16532;
Object localvariable18212;
Object array16533;
Object send107820;
Object send107821;
Object send107822;
Object symbol30642;
Object smallint10785;
Object constant23489;
Object send107823;
Object send107824;
Object send107825;
Object block7368;
Object send107826;
Object send107827;
Object block7369;
Object send107828;
Object method31302;
Object symbol30638;
Object methodclosure31208;
Object localvariable18213;
Object localvariable18214;
Object array16534;
Object string10778;
Object constant23490;
Object send107829;
Object send107830;
Object assign13636;
Object string10779;
Object constant23491;
Object send107831;
Object send107832;
Object send107833;
Object send107834;
Object send107835;
Object localvariable18215;
Object array16535;
Object symbol30813;
Object send107836;
Object assign13637;
Object string10780;
Object constant23492;
Object localvariable18216;
Object localvariable18217;
Object array16536;
Object send107837;
Object block7370;
Object send107838;
Object assign13638;
Object localvariable18218;
Object localvariable18219;
Object array16537;
Object string10781;
Object constant23493;
Object send107839;
Object string10782;
Object constant23494;
Object localvariable18220;
Object localvariable18221;
Object array16538;
Object send107840;
Object block7371;
Object send107841;
Object send107842;
Object block7372;
Object send107843;
Object block7373;
Object send107844;
Object method31303;
Object symbol30666;
Object methodclosure31209;
Object string10783;
Object constant23495;
Object symbol30814;
Object send107845;
Object send107846;
Object localvariable18222;
Object array16539;
Object string10784;
Object constant23496;
Object localvariable18223;
Object localvariable18224;
Object array16540;
Object send107847;
Object string10785;
Object constant23497;
Object send107848;
Object block7374;
Object send107849;
Object block7375;
Object send107850;
Object method31304;
Object symbol30631;
Object methodclosure31210;
Object string10786;
Object constant23498;
Object symbol30815;
Object send107851;
Object localvariable18225;
Object array16541;
Object send107852;
Object block7376;
Object send107853;
Object method31305;
Object symbol30648;
Object methodclosure31211;
Object string10787;
Object constant23499;
Object send107854;
Object send107855;
Object send107856;
Object send107857;
Object string10788;
Object constant23500;
Object send107858;
Object send107859;
Object send107860;
Object method31306;
Object symbol30676;
Object methodclosure31212;
Object string10789;
Object constant23501;
Object send107861;
Object send107862;
Object send107863;
Object send107864;
Object localvariable18226;
Object array16542;
Object localvariable18227;
Object array16543;
Object symbol30816;
Object constant23502;
Object send107865;
Object send107866;
Object localvariable18228;
Object array16544;
Object constant23503;
Object send107867;
Object send107868;
Object constant23504;
Object send107869;
Object string10790;
Object constant23505;
Object send107870;
Object string10791;
Object constant23506;
Object send107871;
Object send107872;
Object send107873;
Object block7377;
Object send107874;
Object send107875;
Object send107876;
Object constant23507;
Object send107877;
Object send107878;
Object block7378;
Object send107879;
Object send107880;
Object block7379;
Object send107881;
Object method31307;
Object symbol30613;
Object methodclosure31213;
Object symbol30817;
Object string10792;
Object constant23508;
Object symbol30818;
Object send107882;
Object symbol30819;
Object send107883;
Object send107884;
Object send107885;
Object send107886;
Object send107887;
Object method31308;
Object symbol30641;
Object methodclosure31214;
Object string10793;
Object constant23509;
Object send107888;
Object string10794;
Object constant23510;
Object send107889;
Object send107890;
Object symbol30820;
Object send107891;
Object send107892;
Object localvariable18229;
Object array16545;
Object send107893;
Object send107894;
Object send107895;
Object block7380;
Object send107896;
Object method31309;
Object symbol30653;
Object methodclosure31215;
Object localvariable18230;
Object array16546;
Object localvariable18231;
Object array16547;
Object send107897;
Object string10795;
Object constant23511;
Object send107898;
Object symbol30821;
Object send107899;
Object send107900;
Object send107901;
Object assign13639;
Object symbol30822;
Object send107902;
Object super1728;
Object block7381;
Object send107903;
Object symbol30823;
Object send107904;
Object block7382;
Object send107905;
Object method31310;
Object methodclosure31216;
Object string10796;
Object constant23512;
Object send107906;
Object send107907;
Object send107908;
Object send107909;
Object localvariable18232;
Object array16548;
Object localvariable18233;
Object array16549;
Object localvariable18234;
Object array16550;
Object send107910;
Object send107911;
Object block7383;
Object send107912;
Object send107913;
Object send107914;
Object constant23513;
Object send107915;
Object send107916;
Object send107917;
Object constant23514;
Object send107918;
Object send107919;
Object block7384;
Object send107920;
Object send107921;
Object block7385;
Object send107922;
Object method31311;
Object symbol30681;
Object methodclosure31217;
Object string10797;
Object constant23515;
Object string10798;
Object constant23516;
Object send107923;
Object send107924;
Object symbol30824;
Object send107925;
Object symbol30825;
Object send107926;
Object send107927;
Object send107928;
Object send107929;
Object send107930;
Object send107931;
Object send107932;
Object send107933;
Object send107934;
Object string10799;
Object constant23517;
Object send107935;
Object send107936;
Object send107937;
Object localvariable18235;
Object array16551;
Object localvariable18236;
Object array16552;
Object send107938;
Object send107939;
Object block7386;
Object send107940;
Object send107941;
Object smallint10786;
Object constant23518;
Object send107942;
Object send107943;
Object block7387;
Object send107944;
Object send107945;
Object smallint10787;
Object constant23519;
Object send107946;
Object send107947;
Object block7388;
Object send107948;
Object send107949;
Object block7389;
Object send107950;
Object method31312;
Object symbol30623;
Object methodclosure31218;
Object string10800;
Object constant23520;
Object send107951;
Object localvariable18237;
Object array16553;
Object send107952;
Object send107953;
Object block7390;
Object send107954;
Object method31313;
Object symbol30635;
Object methodclosure31219;
Object string10801;
Object constant23521;
Object send107955;
Object localvariable18238;
Object array16554;
Object send107956;
Object block7391;
Object send107957;
Object method31314;
Object symbol30663;
Object methodclosure31220;
Object string10802;
Object constant23522;
Object send107958;
Object symbol30826;
Object send107959;
Object send107960;
Object send107961;
Object send107962;
Object send107963;
Object send107964;
Object method31315;
Object symbol30617;
Object methodclosure31221;
Object string10803;
Object constant23523;
Object string10804;
Object constant23524;
Object send107965;
Object send107966;
Object send107967;
Object send107968;
Object localvariable18239;
Object array16555;
Object send107969;
Object send107970;
Object block7392;
Object send107971;
Object method31316;
Object symbol30645;
Object methodclosure31222;
Object string10805;
Object constant23525;
Object send107972;
Object send107973;
Object send107974;
Object send107975;
Object send107976;
Object send107977;
Object localvariable18240;
Object array16556;
Object send107978;
Object send107979;
Object localvariable18241;
Object localvariable18242;
Object array16557;
Object send107980;
Object block7393;
Object send107981;
Object block7394;
Object send107982;
Object method31317;
Object symbol30673;
Object methodclosure31223;
Object string10806;
Object constant23526;
Object symbol30827;
Object send107983;
Object method31318;
Object symbol30657;
Object methodclosure31224;
Object string10807;
Object constant23527;
Object string10808;
Object constant23528;
Object send107984;
Object send107985;
Object send107986;
Object send107987;
Object send107988;
Object send107989;
Object send107990;
Object string10809;
Object constant23529;
Object send107991;
Object send107992;
Object send107993;
Object localvariable18243;
Object array16558;
Object send107994;
Object localvariable18244;
Object array16559;
Object smallint10788;
Object constant23530;
Object send107995;
Object send107996;
Object send107997;
Object block7395;
Object send107998;
Object send107999;
Object send108000;
Object block7396;
Object send108001;
Object method31319;
Object symbol30685;
Object methodclosure31225;
Object string10810;
Object constant23531;
Object send108002;
Object localvariable18245;
Object array16560;
Object send108003;
Object send108004;
Object block7397;
Object send108005;
Object method31320;
Object symbol30627;
Object methodclosure31226;
Object string10811;
Object constant23532;
Object send108006;
Object send108007;
Object localvariable18246;
Object array16561;
Object localvariable18247;
Object array16562;
Object string10812;
Object constant23533;
Object localvariable18248;
Object localvariable18249;
Object array16563;
Object send108008;
Object block7398;
Object send108009;
Object send108010;
Object string10813;
Object constant23534;
Object send108011;
Object block7399;
Object send108012;
Object send108013;
Object block7400;
Object send108014;
Object method31321;
Object symbol30639;
Object methodclosure31227;
Object string10814;
Object constant23535;
Object symbol30828;
Object send108015;
Object send108016;
Object send108017;
Object send108018;
Object send108019;
Object send108020;
Object send108021;
Object send108022;
Object send108023;
Object method31322;
Object symbol30667;
Object methodclosure31228;
Object string10815;
Object constant23536;
Object send108024;
Object method31323;
Object symbol30620;
Object methodclosure31229;
Object send108025;
Object string10816;
Object constant23537;
Object send108026;
Object send108027;
Object send108028;
Object method31324;
Object symbol30632;
Object methodclosure31230;
Object method31325;
Object symbol30660;
Object methodclosure31231;
Object string10817;
Object constant23538;
Object string10818;
Object constant23539;
Object send108029;
Object send108030;
Object send108031;
Object send108032;
Object localvariable18250;
Object array16564;
Object send108033;
Object send108034;
Object block7401;
Object send108035;
Object method31326;
Object symbol30649;
Object methodclosure31232;
Object localvariable18251;
Object array16565;
Object assign13640;
Object method31327;
Object symbol30677;
Object methodclosure31233;
Object string10819;
Object constant23540;
Object send108036;
Object method31328;
Object symbol30614;
Object methodclosure31234;
Object localvariable18252;
Object array16566;
Object variable1227;
Object array16567;
Object string10820;
Object constant23541;
Object send108037;
Object send108038;
Object send108039;
Object block7402;
Object send108040;
Object string10821;
Object constant23542;
Object send108041;
Object send108042;
Object send108043;
Object block7403;
Object send108044;
Object send108045;
Object send108046;
Object block7404;
Object send108047;
Object method31329;
Object methodclosure31235;
Object string10822;
Object constant23543;
Object send108048;
Object method31330;
Object symbol30670;
Object methodclosure31236;
Object constant23544;
Object string10823;
Object constant23545;
Object send108049;
Object block7405;
Object send108050;
Object method31331;
Object symbol30654;
Object methodclosure31237;
Object string10824;
Object constant23546;
Object send108051;
Object localvariable18253;
Object array16568;
Object send108052;
Object send108053;
Object block7406;
Object send108054;
Object method31332;
Object symbol30682;
Object methodclosure31238;
Object string10825;
Object constant23547;
Object send108055;
Object send108056;
Object method31333;
Object symbol30624;
Object methodclosure31239;
Object string10826;
Object constant23548;
Object symbol30829;
Object send108057;
Object send108058;
Object send108059;
Object send108060;
Object send108061;
Object send108062;
Object send108063;
Object send108064;
Object method31334;
Object symbol30636;
Object methodclosure31240;
Object localvariable18254;
Object array16569;
Object string10827;
Object constant23549;
Object send108065;
Object send108066;
Object send108067;
Object send108068;
Object localvariable18255;
Object array16570;
Object send108069;
Object assign13641;
Object localvariable18256;
Object array16571;
Object send108070;
Object send108071;
Object send108072;
Object send108073;
Object smallint10789;
Object constant23550;
Object send108074;
Object send108075;
Object send108076;
Object block7407;
Object send108077;
Object send108078;
Object send108079;
Object send108080;
Object block7408;
Object send108081;
Object method31335;
Object symbol30664;
Object methodclosure31241;
Object string10828;
Object constant23551;
Object string10829;
Object constant23552;
Object send108082;
Object send108083;
Object symbol30830;
Object send108084;
Object symbol30831;
Object send108085;
Object send108086;
Object send108087;
Object string10830;
Object constant23553;
Object send108088;
Object send108089;
Object send108090;
Object send108091;
Object method31336;
Object symbol30646;
Object methodclosure31242;
Object send108092;
Object send108093;
Object method31337;
Object symbol30674;
Object methodclosure31243;
Object super1729;
Object send108094;
Object assign13642;
Object send108095;
Object assign13643;
Object smallint10790;
Object constant23554;
Object assign13644;
Object method31338;
Object methodclosure31244;
Object constant23555;
Object string10831;
Object constant23556;
Object send108096;
Object block7409;
Object send108097;
Object method31339;
Object symbol30658;
Object methodclosure31245;
Object send108098;
Object send108099;
Object send108100;
Object send108101;
Object send108102;
Object method31340;
Object symbol30628;
Object methodclosure31246;
Object localvariable18257;
Object array16572;
Object variable1228;
Object array16573;
Object send108103;
Object send108104;
Object block7410;
Object send108105;
Object send108106;
Object block7411;
Object send108107;
Object method31341;
Object methodclosure31247;
Object send108108;
Object send108109;
Object send108110;
Object send108111;
Object method31342;
Object symbol30668;
Object methodclosure31248;
Object string10832;
Object constant23557;
Object send108112;
Object localvariable18258;
Object array16574;
Object send108113;
Object send108114;
Object block7412;
Object send108115;
Object method31343;
Object symbol30621;
Object methodclosure31249;
Object string10833;
Object constant23558;
Object string10834;
Object constant23559;
Object send108116;
Object send108117;
Object send108118;
Object send108119;
Object send108120;
Object localvariable18259;
Object array16575;
Object localvariable18260;
Object array16576;
Object send108121;
Object block7413;
Object send108122;
Object block7414;
Object send108123;
Object method31344;
Object symbol30633;
Object methodclosure31250;
Object string10835;
Object constant23560;
Object symbol30832;
Object send108124;
Object symbol30833;
Object send108125;
Object send108126;
Object symbol30834;
Object send108127;
Object send108128;
Object send108129;
Object method31345;
Object symbol30661;
Object methodclosure31251;
Object send108130;
Object method31346;
Object symbol30678;
Object methodclosure31252;
Object localvariable18261;
Object localvariable18262;
Object array16577;
Object send108131;
Object send108132;
Object send108133;
Object constant23561;
Object string10836;
Object constant23562;
Object symbol30835;
Object send108134;
Object send108135;
Object send108136;
Object send108137;
Object send108138;
Object send108139;
Object send108140;
Object localvariable18263;
Object array16578;
Object send108141;
Object assign13645;
Object smallint10791;
Object constant23563;
Object send108142;
Object assign13646;
Object symbol30836;
Object send108143;
Object localvariable18264;
Object array16579;
Object localvariable18265;
Object array16580;
Object send108144;
Object send108145;
Object block7415;
Object send108146;
Object send108147;
Object assign13647;
Object block7416;
Object send108148;
Object block7417;
Object send108149;
Object send108150;
Object send108151;
Object send108152;
Object send108153;
Object constant23564;
Object send108154;
Object method31347;
Object symbol30615;
Object methodclosure31253;
Object send108155;
Object constant23565;
Object string10837;
Object constant23566;
Object send108156;
Object send108157;
Object send108158;
Object send108159;
Object send108160;
Object localvariable18266;
Object array16581;
Object smallint10792;
Object constant23567;
Object send108161;
Object localvariable18267;
Object array16582;
Object send108162;
Object send108163;
Object send108164;
Object smallint10793;
Object constant23568;
Object send108165;
Object send108166;
Object send108167;
Object send108168;
Object block7418;
Object send108169;
Object send108170;
Object send108171;
Object block7419;
Object send108172;
Object send108173;
Object send108174;
Object send108175;
Object method31348;
Object symbol30643;
Object methodclosure31254;
Object classreference11540;
Object objectlayout7466;
Object instancevariable13981;
Object symbol30439;
Object objectlayout7467;
Object instancevariable13982;
Object class5267;
Object metaclass4468;
Object classreference11541;
Object objectlayout7468;
Object symbol30437;
Object objectlayout7469;
Object instancevariable13983;
Object class5268;
Object metaclass4469;
Object localvariable18268;
Object localvariable18269;
Object array16583;
Object send108176;
Object assign13648;
Object string10838;
Object constant23569;
Object send108177;
Object assign13649;
Object send108178;
Object constant23570;
Object send108179;
Object send108180;
Object send108181;
Object localvariable18270;
Object array16584;
Object smallint10794;
Object constant23571;
Object string10839;
Object constant23572;
Object send108182;
Object smallint10795;
Object constant23573;
Object string10840;
Object constant23574;
Object send108183;
Object smallint10796;
Object constant23575;
Object string10841;
Object constant23576;
Object send108184;
Object send108185;
Object block7420;
Object smallint10797;
Object constant23577;
Object send108186;
Object send108187;
Object send108188;
Object send108189;
Object send108190;
Object smallint10798;
Object constant23578;
Object send108191;
Object string10842;
Object constant23579;
Object send108192;
Object assign13650;
Object send108193;
Object send108194;
Object send108195;
Object symbol30837;
Object send108196;
Object send108197;
Object method31349;
Object symbol30499;
Object methodclosure31255;
Object localvariable18271;
Object localvariable18272;
Object localvariable18273;
Object array16585;
Object send108198;
Object assign13651;
Object string10843;
Object constant23580;
Object send108199;
Object assign13652;
Object send108200;
Object assign13653;
Object send108201;
Object send108202;
Object send108203;
Object send108204;
Object send108205;
Object string10844;
Object constant23581;
Object send108206;
Object send108207;
Object send108208;
Object smallint10799;
Object constant23582;
Object send108209;
Object string10845;
Object constant23583;
Object send108210;
Object assign13654;
Object send108211;
Object assign13655;
Object send108212;
Object send108213;
Object send108214;
Object send108215;
Object send108216;
Object string10846;
Object constant23584;
Object send108217;
Object send108218;
Object send108219;
Object smallint10800;
Object constant23585;
Object send108220;
Object string10847;
Object constant23586;
Object send108221;
Object assign13656;
Object send108222;
Object assign13657;
Object send108223;
Object send108224;
Object send108225;
Object send108226;
Object send108227;
Object string10848;
Object constant23587;
Object send108228;
Object send108229;
Object send108230;
Object smallint10801;
Object constant23588;
Object send108231;
Object method31350;
Object symbol30512;
Object methodclosure31256;
Object localvariable18274;
Object localvariable18275;
Object array16586;
Object send108232;
Object assign13658;
Object string10849;
Object constant23589;
Object send108233;
Object assign13659;
Object send108234;
Object send108235;
Object string10850;
Object constant23590;
Object send108236;
Object send108237;
Object send108238;
Object smallint10802;
Object constant23591;
Object send108239;
Object string10851;
Object constant23592;
Object send108240;
Object assign13660;
Object send108241;
Object send108242;
Object string10852;
Object constant23593;
Object send108243;
Object send108244;
Object send108245;
Object smallint10803;
Object constant23594;
Object send108246;
Object string10853;
Object constant23595;
Object send108247;
Object assign13661;
Object send108248;
Object send108249;
Object string10854;
Object constant23596;
Object send108250;
Object send108251;
Object send108252;
Object smallint10804;
Object constant23597;
Object send108253;
Object string10855;
Object constant23598;
Object send108254;
Object assign13662;
Object send108255;
Object send108256;
Object string10856;
Object constant23599;
Object send108257;
Object send108258;
Object send108259;
Object smallint10805;
Object constant23600;
Object send108260;
Object string10857;
Object constant23601;
Object send108261;
Object assign13663;
Object send108262;
Object send108263;
Object string10858;
Object constant23602;
Object send108264;
Object send108265;
Object send108266;
Object smallint10806;
Object constant23603;
Object send108267;
Object string10859;
Object constant23604;
Object send108268;
Object assign13664;
Object send108269;
Object send108270;
Object send108271;
Object send108272;
Object send108273;
Object send108274;
Object smallint10807;
Object constant23605;
Object send108275;
Object method31351;
Object symbol30464;
Object methodclosure31257;
Object localvariable18276;
Object localvariable18277;
Object localvariable18278;
Object array16587;
Object send108276;
Object assign13665;
Object string10860;
Object constant23606;
Object send108277;
Object assign13666;
Object send108278;
Object assign13667;
Object send108279;
Object send108280;
Object send108281;
Object send108282;
Object send108283;
Object send108284;
Object send108285;
Object send108286;
Object send108287;
Object send108288;
Object string10861;
Object constant23607;
Object send108289;
Object send108290;
Object assign13668;
Object send108291;
Object send108292;
Object send108293;
Object send108294;
Object send108295;
Object send108296;
Object send108297;
Object send108298;
Object send108299;
Object send108300;
Object string10862;
Object constant23608;
Object send108301;
Object send108302;
Object assign13669;
Object send108303;
Object send108304;
Object send108305;
Object send108306;
Object send108307;
Object send108308;
Object send108309;
Object send108310;
Object send108311;
Object send108312;
Object string10863;
Object constant23609;
Object send108313;
Object send108314;
Object send108315;
Object send108316;
Object send108317;
Object method31352;
Object symbol30456;
Object methodclosure31258;
Object localvariable18279;
Object localvariable18280;
Object localvariable18281;
Object localvariable18282;
Object array16588;
Object send108318;
Object assign13670;
Object string10864;
Object constant23610;
Object send108319;
Object assign13671;
Object send108320;
Object assign13672;
Object send108321;
Object send108322;
Object send108323;
Object send108324;
Object send108325;
Object send108326;
Object localvariable18283;
Object array16589;
Object smallint10808;
Object constant23611;
Object string10865;
Object constant23612;
Object send108327;
Object smallint10809;
Object constant23613;
Object string10866;
Object constant23614;
Object send108328;
Object smallint10810;
Object constant23615;
Object string10867;
Object constant23616;
Object send108329;
Object send108330;
Object block7421;
Object smallint10811;
Object constant23617;
Object send108331;
Object send108332;
Object send108333;
Object send108334;
Object send108335;
Object send108336;
Object send108337;
Object send108338;
Object send108339;
Object send108340;
Object string10868;
Object constant23618;
Object send108341;
Object send108342;
Object send108343;
Object assign13673;
Object send108344;
Object send108345;
Object send108346;
Object send108347;
Object smallint10812;
Object constant23619;
Object send108348;
Object assign13674;
Object send108349;
Object send108350;
Object send108351;
Object send108352;
Object smallint10813;
Object constant23620;
Object send108353;
Object assign13675;
Object send108354;
Object send108355;
Object send108356;
Object send108357;
Object send108358;
Object send108359;
Object send108360;
Object send108361;
Object send108362;
Object smallint10814;
Object constant23621;
Object send108363;
Object method31353;
Object symbol30484;
Object methodclosure31259;
Object localvariable18284;
Object localvariable18285;
Object array16590;
Object send108364;
Object assign13676;
Object string10869;
Object constant23622;
Object send108365;
Object assign13677;
Object send108366;
Object constant23623;
Object send108367;
Object send108368;
Object send108369;
Object localvariable18286;
Object array16591;
Object smallint10815;
Object constant23624;
Object string10870;
Object constant23625;
Object send108370;
Object smallint10816;
Object constant23626;
Object string10871;
Object constant23627;
Object send108371;
Object smallint10817;
Object constant23628;
Object string10872;
Object constant23629;
Object send108372;
Object send108373;
Object block7422;
Object smallint10818;
Object constant23630;
Object send108374;
Object send108375;
Object send108376;
Object send108377;
Object send108378;
Object smallint10819;
Object constant23631;
Object send108379;
Object string10873;
Object constant23632;
Object send108380;
Object assign13678;
Object send108381;
Object constant23633;
Object send108382;
Object send108383;
Object send108384;
Object localvariable18287;
Object array16592;
Object smallint10820;
Object constant23634;
Object string10874;
Object constant23635;
Object send108385;
Object smallint10821;
Object constant23636;
Object string10875;
Object constant23637;
Object send108386;
Object smallint10822;
Object constant23638;
Object string10876;
Object constant23639;
Object send108387;
Object send108388;
Object block7423;
Object smallint10823;
Object constant23640;
Object send108389;
Object send108390;
Object send108391;
Object send108392;
Object send108393;
Object smallint10824;
Object constant23641;
Object send108394;
Object method31354;
Object symbol30476;
Object methodclosure31260;
Object localvariable18288;
Object localvariable18289;
Object localvariable18290;
Object array16593;
Object send108395;
Object assign13679;
Object string10877;
Object constant23642;
Object send108396;
Object assign13680;
Object send108397;
Object assign13681;
Object send108398;
Object send108399;
Object send108400;
Object send108401;
Object send108402;
Object send108403;
Object send108404;
Object string10878;
Object constant23643;
Object send108405;
Object assign13682;
Object send108406;
Object assign13683;
Object send108407;
Object send108408;
Object send108409;
Object send108410;
Object send108411;
Object send108412;
Object send108413;
Object string10879;
Object constant23644;
Object send108414;
Object assign13684;
Object send108415;
Object assign13685;
Object send108416;
Object send108417;
Object send108418;
Object send108419;
Object send108420;
Object send108421;
Object send108422;
Object send108423;
Object send108424;
Object send108425;
Object smallint10825;
Object constant23645;
Object send108426;
Object method31355;
Object symbol30509;
Object methodclosure31261;
Object localvariable18291;
Object localvariable18292;
Object localvariable18293;
Object array16594;
Object symbol30838;
Object send108427;
Object assign13686;
Object string10880;
Object constant23646;
Object assign13687;
Object send108428;
Object assign13688;
Object send108429;
Object send108430;
Object send108431;
Object symbol30839;
Object send108432;
Object send108433;
Object send108434;
Object send108435;
Object send108436;
Object send108437;
Object send108438;
Object send108439;
Object send108440;
Object send108441;
Object send108442;
Object smallint10826;
Object constant23647;
Object send108443;
Object send108444;
Object send108445;
Object send108446;
Object smallint10827;
Object constant23648;
Object send108447;
Object send108448;
Object send108449;
Object send108450;
Object smallint10828;
Object constant23649;
Object send108451;
Object method31356;
Object symbol30502;
Object methodclosure31262;
Object localvariable18294;
Object localvariable18295;
Object localvariable18296;
Object array16595;
Object send108452;
Object assign13689;
Object string10881;
Object constant23650;
Object assign13690;
Object send108453;
Object assign13691;
Object send108454;
Object send108455;
Object send108456;
Object send108457;
Object send108458;
Object send108459;
Object send108460;
Object send108461;
Object send108462;
Object send108463;
Object string10882;
Object constant23651;
Object send108464;
Object method31357;
Object symbol30466;
Object methodclosure31263;
Object localvariable18297;
Object localvariable18298;
Object localvariable18299;
Object array16596;
Object send108465;
Object assign13692;
Object string10883;
Object constant23652;
Object send108466;
Object assign13693;
Object send108467;
Object assign13694;
Object send108468;
Object send108469;
Object send108470;
Object send108471;
Object send108472;
Object send108473;
Object string10884;
Object constant23653;
Object send108474;
Object send108475;
Object send108476;
Object send108477;
Object send108478;
Object send108479;
Object send108480;
Object send108481;
Object send108482;
Object string10885;
Object constant23654;
Object send108483;
Object send108484;
Object send108485;
Object smallint10829;
Object constant23655;
Object send108486;
Object string10886;
Object constant23656;
Object send108487;
Object assign13695;
Object send108488;
Object send108489;
Object send108490;
Object send108491;
Object send108492;
Object send108493;
Object smallint10830;
Object constant23657;
Object send108494;
Object string10887;
Object constant23658;
Object send108495;
Object assign13696;
Object send108496;
Object assign13697;
Object send108497;
Object send108498;
Object send108499;
Object send108500;
Object send108501;
Object send108502;
Object string10888;
Object constant23659;
Object send108503;
Object send108504;
Object send108505;
Object send108506;
Object send108507;
Object send108508;
Object send108509;
Object send108510;
Object send108511;
Object string10889;
Object constant23660;
Object send108512;
Object send108513;
Object send108514;
Object smallint10831;
Object constant23661;
Object send108515;
Object method31358;
Object symbol30458;
Object methodclosure31264;
Object localvariable18300;
Object localvariable18301;
Object localvariable18302;
Object array16597;
Object send108516;
Object assign13698;
Object string10890;
Object constant23662;
Object send108517;
Object assign13699;
Object send108518;
Object assign13700;
Object send108519;
Object send108520;
Object send108521;
Object send108522;
Object send108523;
Object string10891;
Object constant23663;
Object send108524;
Object send108525;
Object send108526;
Object smallint10832;
Object constant23664;
Object send108527;
Object string10892;
Object constant23665;
Object send108528;
Object assign13701;
Object send108529;
Object assign13702;
Object send108530;
Object send108531;
Object send108532;
Object send108533;
Object send108534;
Object string10893;
Object constant23666;
Object send108535;
Object send108536;
Object send108537;
Object string10894;
Object constant23667;
Object send108538;
Object send108539;
Object send108540;
Object smallint10833;
Object constant23668;
Object send108541;
Object method31359;
Object symbol30486;
Object methodclosure31265;
Object localvariable18303;
Object localvariable18304;
Object array16598;
Object send108542;
Object assign13703;
Object string10895;
Object constant23669;
Object send108543;
Object assign13704;
Object send108544;
Object send108545;
Object string10896;
Object constant23670;
Object send108546;
Object send108547;
Object send108548;
Object smallint10834;
Object constant23671;
Object send108549;
Object string10897;
Object constant23672;
Object send108550;
Object assign13705;
Object send108551;
Object send108552;
Object send108553;
Object send108554;
Object send108555;
Object send108556;
Object smallint10835;
Object constant23673;
Object send108557;
Object method31360;
Object symbol30478;
Object methodclosure31266;
Object localvariable18305;
Object localvariable18306;
Object localvariable18307;
Object array16599;
Object send108558;
Object assign13706;
Object string10898;
Object constant23674;
Object send108559;
Object assign13707;
Object send108560;
Object assign13708;
Object send108561;
Object send108562;
Object send108563;
Object send108564;
Object send108565;
Object send108566;
Object send108567;
Object send108568;
Object send108569;
Object send108570;
Object send108571;
Object string10899;
Object constant23675;
Object send108572;
Object send108573;
Object assign13709;
Object send108574;
Object send108575;
Object send108576;
Object send108577;
Object send108578;
Object send108579;
Object send108580;
Object send108581;
Object send108582;
Object send108583;
Object send108584;
Object string10900;
Object constant23676;
Object send108585;
Object send108586;
Object send108587;
Object send108588;
Object send108589;
Object send108590;
Object send108591;
Object send108592;
Object string10901;
Object constant23677;
Object send108593;
Object send108594;
Object send108595;
Object smallint10836;
Object constant23678;
Object send108596;
Object string10902;
Object constant23679;
Object send108597;
Object assign13710;
Object send108598;
Object assign13711;
Object send108599;
Object send108600;
Object send108601;
Object send108602;
Object send108603;
Object string10903;
Object constant23680;
Object send108604;
Object send108605;
Object send108606;
Object smallint10837;
Object constant23681;
Object send108607;
Object string10904;
Object constant23682;
Object send108608;
Object assign13712;
Object send108609;
Object assign13713;
Object send108610;
Object send108611;
Object send108612;
Object send108613;
Object send108614;
Object send108615;
Object string10905;
Object constant23683;
Object send108616;
Object send108617;
Object send108618;
Object send108619;
Object send108620;
Object send108621;
Object send108622;
Object send108623;
Object string10906;
Object constant23684;
Object send108624;
Object send108625;
Object assign13714;
Object send108626;
Object send108627;
Object send108628;
Object send108629;
Object send108630;
Object send108631;
Object string10907;
Object constant23685;
Object send108632;
Object send108633;
Object send108634;
Object send108635;
Object send108636;
Object send108637;
Object send108638;
Object send108639;
Object string10908;
Object constant23686;
Object send108640;
Object send108641;
Object send108642;
Object send108643;
Object send108644;
Object send108645;
Object send108646;
Object send108647;
Object string10909;
Object constant23687;
Object send108648;
Object send108649;
Object send108650;
Object smallint10838;
Object constant23688;
Object send108651;
Object method31361;
Object symbol30494;
Object methodclosure31267;
Object localvariable18308;
Object localvariable18309;
Object localvariable18310;
Object array16600;
Object send108652;
Object assign13715;
Object string10910;
Object constant23689;
Object send108653;
Object assign13716;
Object send108654;
Object assign13717;
Object send108655;
Object send108656;
Object send108657;
Object send108658;
Object send108659;
Object send108660;
Object string10911;
Object constant23690;
Object send108661;
Object send108662;
Object send108663;
Object smallint10839;
Object constant23691;
Object send108664;
Object string10912;
Object constant23692;
Object send108665;
Object assign13718;
Object send108666;
Object send108667;
Object send108668;
Object send108669;
Object send108670;
Object send108671;
Object smallint10840;
Object constant23693;
Object send108672;
Object method31362;
Object symbol30504;
Object methodclosure31268;
Object localvariable18311;
Object localvariable18312;
Object localvariable18313;
Object array16601;
Object send108673;
Object assign13719;
Object string10913;
Object constant23694;
Object send108674;
Object assign13720;
Object send108675;
Object assign13721;
Object send108676;
Object send108677;
Object send108678;
Object send108679;
Object send108680;
Object send108681;
Object send108682;
Object send108683;
Object string10914;
Object constant23695;
Object send108684;
Object assign13722;
Object send108685;
Object assign13723;
Object send108686;
Object send108687;
Object send108688;
Object send108689;
Object send108690;
Object send108691;
Object smallint10841;
Object constant23696;
Object send108692;
Object send108693;
Object send108694;
Object send108695;
Object send108696;
Object send108697;
Object send108698;
Object send108699;
Object send108700;
Object send108701;
Object string10915;
Object constant23697;
Object send108702;
Object send108703;
Object smallint10842;
Object constant23698;
Object send108704;
Object send108705;
Object send108706;
Object send108707;
Object send108708;
Object smallint10843;
Object constant23699;
Object send108709;
Object send108710;
Object send108711;
Object string10916;
Object constant23700;
Object send108712;
Object send108713;
Object smallint10844;
Object constant23701;
Object send108714;
Object send108715;
Object send108716;
Object send108717;
Object send108718;
Object smallint10845;
Object constant23702;
Object send108719;
Object send108720;
Object send108721;
Object string10917;
Object constant23703;
Object send108722;
Object send108723;
Object smallint10846;
Object constant23704;
Object send108724;
Object send108725;
Object send108726;
Object send108727;
Object send108728;
Object smallint10847;
Object constant23705;
Object send108729;
Object send108730;
Object send108731;
Object string10918;
Object constant23706;
Object send108732;
Object send108733;
Object smallint10848;
Object constant23707;
Object send108734;
Object send108735;
Object send108736;
Object send108737;
Object method31363;
Object symbol30448;
Object methodclosure31269;
Object send108738;
Object assign13724;
Object method31364;
Object symbol30496;
Object methodclosure31270;
Object method31365;
Object symbol30488;
Object methodclosure31271;
Object localvariable18314;
Object localvariable18315;
Object array16602;
Object symbol30840;
Object send108739;
Object assign13725;
Object string10919;
Object constant23708;
Object send108740;
Object assign13726;
Object send108741;
Object send108742;
Object string10920;
Object constant23709;
Object send108743;
Object send108744;
Object send108745;
Object smallint10849;
Object constant23710;
Object send108746;
Object string10921;
Object constant23711;
Object send108747;
Object assign13727;
Object send108748;
Object send108749;
Object string10922;
Object constant23712;
Object send108750;
Object send108751;
Object send108752;
Object smallint10850;
Object constant23713;
Object send108753;
Object string10923;
Object constant23714;
Object send108754;
Object assign13728;
Object send108755;
Object send108756;
Object send108757;
Object send108758;
Object send108759;
Object send108760;
Object smallint10851;
Object constant23715;
Object send108761;
Object method31366;
Object symbol30481;
Object methodclosure31272;
Object localvariable18316;
Object localvariable18317;
Object localvariable18318;
Object localvariable18319;
Object array16603;
Object send108762;
Object assign13729;
Object string10924;
Object constant23716;
Object send108763;
Object assign13730;
Object send108764;
Object assign13731;
Object send108765;
Object send108766;
Object send108767;
Object send108768;
Object send108769;
Object assign13732;
Object string10925;
Object constant23717;
Object send108770;
Object assign13733;
Object send108771;
Object assign13734;
Object send108772;
Object send108773;
Object send108774;
Object send108775;
Object send108776;
Object send108777;
Object send108778;
Object send108779;
Object method31367;
Object symbol30473;
Object methodclosure31273;
Object localvariable18320;
Object localvariable18321;
Object array16604;
Object send108780;
Object assign13735;
Object string10926;
Object constant23718;
Object send108781;
Object send108782;
Object send108783;
Object assign13736;
Object send108784;
Object send108785;
Object send108786;
Object send108787;
Object send108788;
Object send108789;
Object send108790;
Object send108791;
Object send108792;
Object send108793;
Object send108794;
Object send108795;
Object send108796;
Object send108797;
Object send108798;
Object send108799;
Object string10927;
Object constant23719;
Object send108800;
Object send108801;
Object send108802;
Object send108803;
Object send108804;
Object string10928;
Object constant23720;
Object send108805;
Object send108806;
Object send108807;
Object send108808;
Object string10929;
Object constant23721;
Object send108809;
Object send108810;
Object send108811;
Object send108812;
Object send108813;
Object send108814;
Object send108815;
Object send108816;
Object string10930;
Object constant23722;
Object send108817;
Object method31368;
Object symbol30498;
Object methodclosure31274;
Object localvariable18322;
Object localvariable18323;
Object array16605;
Object send108818;
Object assign13737;
Object string10931;
Object constant23723;
Object send108819;
Object assign13738;
Object send108820;
Object send108821;
Object send108822;
Object string10932;
Object constant23724;
Object send108823;
Object send108824;
Object send108825;
Object smallint10852;
Object constant23725;
Object send108826;
Object string10933;
Object constant23726;
Object send108827;
Object assign13739;
Object send108828;
Object send108829;
Object send108830;
Object string10934;
Object constant23727;
Object send108831;
Object send108832;
Object send108833;
Object smallint10853;
Object constant23728;
Object send108834;
Object string10935;
Object constant23729;
Object send108835;
Object assign13740;
Object send108836;
Object send108837;
Object send108838;
Object string10936;
Object constant23730;
Object send108839;
Object send108840;
Object send108841;
Object smallint10854;
Object constant23731;
Object send108842;
Object string10937;
Object constant23732;
Object send108843;
Object assign13741;
Object send108844;
Object send108845;
Object send108846;
Object string10938;
Object constant23733;
Object send108847;
Object send108848;
Object send108849;
Object smallint10855;
Object constant23734;
Object send108850;
Object method31369;
Object symbol30511;
Object methodclosure31275;
Object localvariable18324;
Object localvariable18325;
Object localvariable18326;
Object localvariable18327;
Object array16606;
Object send108851;
Object assign13742;
Object string10939;
Object constant23735;
Object send108852;
Object assign13743;
Object send108853;
Object assign13744;
Object send108854;
Object send108855;
Object send108856;
Object send108857;
Object send108858;
Object send108859;
Object send108860;
Object send108861;
Object send108862;
Object send108863;
Object smallint10856;
Object constant23736;
Object send108864;
Object send108865;
Object smallint10857;
Object constant23737;
Object send108866;
Object assign13745;
Object send108867;
Object send108868;
Object send108869;
Object send108870;
Object smallint10858;
Object constant23738;
Object send108871;
Object assign13746;
Object send108872;
Object send108873;
Object send108874;
Object send108875;
Object smallint10859;
Object constant23739;
Object send108876;
Object assign13747;
Object send108877;
Object send108878;
Object send108879;
Object send108880;
Object smallint10860;
Object constant23740;
Object send108881;
Object assign13748;
Object send108882;
Object send108883;
Object send108884;
Object method31370;
Object symbol30471;
Object methodclosure31276;
Object localvariable18328;
Object localvariable18329;
Object localvariable18330;
Object localvariable18331;
Object array16607;
Object send108885;
Object assign13749;
Object string10940;
Object constant23741;
Object send108886;
Object assign13750;
Object send108887;
Object assign13751;
Object send108888;
Object send108889;
Object send108890;
Object send108891;
Object send108892;
Object assign13752;
Object string10941;
Object constant23742;
Object send108893;
Object assign13753;
Object send108894;
Object assign13754;
Object send108895;
Object send108896;
Object send108897;
Object send108898;
Object send108899;
Object send108900;
Object send108901;
Object send108902;
Object method31371;
Object symbol30463;
Object methodclosure31277;
Object localvariable18332;
Object localvariable18333;
Object localvariable18334;
Object array16608;
Object send108903;
Object assign13755;
Object string10942;
Object constant23743;
Object send108904;
Object assign13756;
Object send108905;
Object assign13757;
Object send108906;
Object send108907;
Object send108908;
Object send108909;
Object send108910;
Object send108911;
Object send108912;
Object send108913;
Object send108914;
Object send108915;
Object send108916;
Object string10943;
Object constant23744;
Object send108917;
Object send108918;
Object assign13758;
Object send108919;
Object send108920;
Object send108921;
Object send108922;
Object send108923;
Object send108924;
Object send108925;
Object send108926;
Object send108927;
Object send108928;
Object send108929;
Object string10944;
Object constant23745;
Object send108930;
Object send108931;
Object send108932;
Object send108933;
Object send108934;
Object send108935;
Object send108936;
Object send108937;
Object string10945;
Object constant23746;
Object send108938;
Object send108939;
Object send108940;
Object smallint10861;
Object constant23747;
Object send108941;
Object string10946;
Object constant23748;
Object send108942;
Object assign13759;
Object send108943;
Object send108944;
Object send108945;
Object send108946;
Object method31372;
Object symbol30455;
Object methodclosure31278;
Object localvariable18335;
Object localvariable18336;
Object localvariable18337;
Object array16609;
Object send108947;
Object assign13760;
Object string10947;
Object constant23749;
Object send108948;
Object assign13761;
Object send108949;
Object assign13762;
Object send108950;
Object send108951;
Object send108952;
Object send108953;
Object send108954;
Object send108955;
Object string10948;
Object constant23750;
Object send108956;
Object send108957;
Object send108958;
Object send108959;
Object send108960;
Object send108961;
Object send108962;
Object send108963;
Object string10949;
Object constant23751;
Object send108964;
Object send108965;
Object send108966;
Object send108967;
Object send108968;
Object send108969;
Object send108970;
Object send108971;
Object string10950;
Object constant23752;
Object send108972;
Object send108973;
Object send108974;
Object smallint10862;
Object constant23753;
Object send108975;
Object string10951;
Object constant23754;
Object send108976;
Object assign13763;
Object send108977;
Object assign13764;
Object send108978;
Object send108979;
Object send108980;
Object send108981;
Object send108982;
Object send108983;
Object string10952;
Object constant23755;
Object send108984;
Object send108985;
Object send108986;
Object send108987;
Object send108988;
Object send108989;
Object send108990;
Object send108991;
Object string10953;
Object constant23756;
Object send108992;
Object send108993;
Object assign13765;
Object send108994;
Object send108995;
Object send108996;
Object send108997;
Object send108998;
Object send108999;
Object string10954;
Object constant23757;
Object send109000;
Object send109001;
Object send109002;
Object send109003;
Object send109004;
Object send109005;
Object send109006;
Object send109007;
Object string10955;
Object constant23758;
Object send109008;
Object send109009;
Object send109010;
Object send109011;
Object send109012;
Object send109013;
Object send109014;
Object send109015;
Object string10956;
Object constant23759;
Object send109016;
Object send109017;
Object send109018;
Object smallint10863;
Object constant23760;
Object send109019;
Object method31373;
Object symbol30508;
Object methodclosure31279;
Object localvariable18338;
Object localvariable18339;
Object localvariable18340;
Object array16610;
Object send109020;
Object assign13766;
Object string10957;
Object constant23761;
Object assign13767;
Object send109021;
Object assign13768;
Object send109022;
Object send109023;
Object send109024;
Object send109025;
Object send109026;
Object send109027;
Object send109028;
Object send109029;
Object send109030;
Object send109031;
Object send109032;
Object send109033;
Object send109034;
Object send109035;
Object smallint10864;
Object constant23762;
Object send109036;
Object send109037;
Object send109038;
Object send109039;
Object smallint10865;
Object constant23763;
Object send109040;
Object send109041;
Object send109042;
Object send109043;
Object smallint10866;
Object constant23764;
Object send109044;
Object method31374;
Object symbol30475;
Object methodclosure31280;
Object localvariable18341;
Object array16611;
Object string10958;
Object constant23765;
Object send109045;
Object send109046;
Object assign13769;
Object string10959;
Object constant23766;
Object send109047;
Object send109048;
Object send109049;
Object send109050;
Object send109051;
Object string10960;
Object constant23767;
Object send109052;
Object send109053;
Object send109054;
Object send109055;
Object method31375;
Object symbol30501;
Object methodclosure31281;
Object localvariable18342;
Object localvariable18343;
Object localvariable18344;
Object localvariable18345;
Object array16612;
Object send109056;
Object assign13770;
Object string10961;
Object constant23768;
Object send109057;
Object assign13771;
Object send109058;
Object assign13772;
Object send109059;
Object send109060;
Object send109061;
Object send109062;
Object send109063;
Object constant23769;
Object send109064;
Object send109065;
Object localvariable18346;
Object array16613;
Object smallint10867;
Object constant23770;
Object symbol30841;
Object constant23771;
Object send109066;
Object smallint10868;
Object constant23772;
Object symbol30842;
Object constant23773;
Object send109067;
Object smallint10869;
Object constant23774;
Object symbol30843;
Object constant23775;
Object send109068;
Object send109069;
Object block7424;
Object smallint10870;
Object constant23776;
Object send109070;
Object send109071;
Object send109072;
Object send109073;
Object send109074;
Object assign13773;
Object send109075;
Object send109076;
Object send109077;
Object send109078;
Object smallint10871;
Object constant23777;
Object send109079;
Object assign13774;
Object send109080;
Object send109081;
Object send109082;
Object send109083;
Object smallint10872;
Object constant23778;
Object send109084;
Object assign13775;
Object send109085;
Object send109086;
Object send109087;
Object send109088;
Object send109089;
Object send109090;
Object send109091;
Object string10962;
Object constant23779;
Object send109092;
Object assign13776;
Object send109093;
Object assign13777;
Object send109094;
Object send109095;
Object send109096;
Object send109097;
Object send109098;
Object send109099;
Object string10963;
Object constant23780;
Object send109100;
Object send109101;
Object send109102;
Object smallint10873;
Object constant23781;
Object send109103;
Object string10964;
Object constant23782;
Object send109104;
Object assign13778;
Object send109105;
Object assign13779;
Object send109106;
Object send109107;
Object send109108;
Object send109109;
Object send109110;
Object constant23783;
Object send109111;
Object send109112;
Object localvariable18347;
Object array16614;
Object smallint10874;
Object constant23784;
Object string10965;
Object constant23785;
Object send109113;
Object smallint10875;
Object constant23786;
Object string10966;
Object constant23787;
Object send109114;
Object smallint10876;
Object constant23788;
Object string10967;
Object constant23789;
Object send109115;
Object send109116;
Object block7425;
Object smallint10877;
Object constant23790;
Object send109117;
Object send109118;
Object send109119;
Object send109120;
Object send109121;
Object send109122;
Object send109123;
Object method31376;
Object symbol30493;
Object methodclosure31282;
Object localvariable18348;
Object localvariable18349;
Object localvariable18350;
Object array16615;
Object send109124;
Object assign13780;
Object string10968;
Object constant23791;
Object send109125;
Object assign13781;
Object send109126;
Object assign13782;
Object send109127;
Object send109128;
Object send109129;
Object send109130;
Object send109131;
Object string10969;
Object constant23792;
Object send109132;
Object send109133;
Object send109134;
Object smallint10878;
Object constant23793;
Object send109135;
Object method31377;
Object symbol30485;
Object methodclosure31283;
Object localvariable18351;
Object localvariable18352;
Object localvariable18353;
Object array16616;
Object send109136;
Object assign13783;
Object string10970;
Object constant23794;
Object send109137;
Object assign13784;
Object send109138;
Object assign13785;
Object send109139;
Object send109140;
Object send109141;
Object send109142;
Object send109143;
Object string10971;
Object constant23795;
Object send109144;
Object send109145;
Object send109146;
Object send109147;
Object send109148;
Object smallint10879;
Object constant23796;
Object send109149;
Object send109150;
Object send109151;
Object send109152;
Object send109153;
Object string10972;
Object constant23797;
Object send109154;
Object send109155;
Object send109156;
Object send109157;
Object smallint10880;
Object constant23798;
Object send109158;
Object string10973;
Object constant23799;
Object send109159;
Object assign13786;
Object send109160;
Object send109161;
Object send109162;
Object send109163;
Object send109164;
Object send109165;
Object smallint10881;
Object constant23800;
Object send109166;
Object string10974;
Object constant23801;
Object send109167;
Object assign13787;
Object send109168;
Object assign13788;
Object send109169;
Object send109170;
Object send109171;
Object send109172;
Object send109173;
Object symbol30844;
Object string10975;
Object constant23802;
Object string10976;
Object constant23803;
Object send109174;
Object send109175;
Object send109176;
Object send109177;
Object send109178;
Object smallint10882;
Object constant23804;
Object send109179;
Object send109180;
Object send109181;
Object send109182;
Object send109183;
Object string10977;
Object constant23805;
Object send109184;
Object send109185;
Object send109186;
Object send109187;
Object send109188;
Object send109189;
Object string10978;
Object constant23806;
Object send109190;
Object send109191;
Object send109192;
Object send109193;
Object smallint10883;
Object constant23807;
Object send109194;
Object method31378;
Object symbol30477;
Object methodclosure31284;
Object localvariable18354;
Object localvariable18355;
Object localvariable18356;
Object array16617;
Object send109195;
Object assign13789;
Object string10979;
Object constant23808;
Object send109196;
Object assign13790;
Object send109197;
Object assign13791;
Object send109198;
Object send109199;
Object send109200;
Object send109201;
Object send109202;
Object send109203;
Object send109204;
Object send109205;
Object send109206;
Object send109207;
Object send109208;
Object string10980;
Object constant23809;
Object send109209;
Object send109210;
Object assign13792;
Object send109211;
Object send109212;
Object send109213;
Object send109214;
Object send109215;
Object send109216;
Object send109217;
Object send109218;
Object send109219;
Object send109220;
Object send109221;
Object string10981;
Object constant23810;
Object send109222;
Object send109223;
Object send109224;
Object send109225;
Object send109226;
Object send109227;
Object send109228;
Object send109229;
Object string10982;
Object constant23811;
Object send109230;
Object send109231;
Object send109232;
Object smallint10884;
Object constant23812;
Object send109233;
Object string10983;
Object constant23813;
Object send109234;
Object assign13793;
Object send109235;
Object assign13794;
Object send109236;
Object send109237;
Object send109238;
Object send109239;
Object send109240;
Object string10984;
Object constant23814;
Object send109241;
Object send109242;
Object send109243;
Object smallint10885;
Object constant23815;
Object send109244;
Object method31379;
Object symbol30503;
Object methodclosure31285;
Object localvariable18357;
Object localvariable18358;
Object localvariable18359;
Object localvariable18360;
Object array16618;
Object send109245;
Object assign13795;
Object string10985;
Object constant23816;
Object send109246;
Object assign13796;
Object send109247;
Object assign13797;
Object send109248;
Object send109249;
Object smallint10886;
Object constant23817;
Object send109250;
Object send109251;
Object send109252;
Object send109253;
Object send109254;
Object send109255;
Object smallint10887;
Object constant23818;
Object send109256;
Object smallint10888;
Object constant23819;
Object send109257;
Object assign13798;
Object send109258;
Object send109259;
Object send109260;
Object send109261;
Object send109262;
Object string10986;
Object constant23820;
Object send109263;
Object smallint10889;
Object constant23821;
Object send109264;
Object assign13799;
Object send109265;
Object send109266;
Object send109267;
Object send109268;
Object send109269;
Object string10987;
Object constant23822;
Object send109270;
Object string10988;
Object constant23823;
Object send109271;
Object assign13800;
Object send109272;
Object assign13801;
Object send109273;
Object send109274;
Object smallint10890;
Object constant23824;
Object send109275;
Object send109276;
Object send109277;
Object send109278;
Object send109279;
Object send109280;
Object smallint10891;
Object constant23825;
Object send109281;
Object send109282;
Object assign13802;
Object send109283;
Object send109284;
Object send109285;
Object send109286;
Object send109287;
Object string10989;
Object constant23826;
Object send109288;
Object smallint10892;
Object constant23827;
Object send109289;
Object assign13803;
Object send109290;
Object send109291;
Object send109292;
Object send109293;
Object send109294;
Object string10990;
Object constant23828;
Object send109295;
Object method31380;
Object symbol30467;
Object methodclosure31286;
Object localvariable18361;
Object localvariable18362;
Object localvariable18363;
Object array16619;
Object send109296;
Object assign13804;
Object string10991;
Object constant23829;
Object send109297;
Object assign13805;
Object send109298;
Object send109299;
Object send109300;
Object send109301;
Object string10992;
Object constant23830;
Object send109302;
Object assign13806;
Object send109303;
Object assign13807;
Object send109304;
Object send109305;
Object send109306;
Object send109307;
Object send109308;
Object send109309;
Object send109310;
Object send109311;
Object send109312;
Object send109313;
Object string10993;
Object constant23831;
Object send109314;
Object send109315;
Object assign13808;
Object send109316;
Object send109317;
Object send109318;
Object send109319;
Object send109320;
Object send109321;
Object send109322;
Object send109323;
Object send109324;
Object send109325;
Object string10994;
Object constant23832;
Object send109326;
Object send109327;
Object assign13809;
Object send109328;
Object send109329;
Object send109330;
Object send109331;
Object send109332;
Object send109333;
Object send109334;
Object send109335;
Object send109336;
Object send109337;
Object string10995;
Object constant23833;
Object send109338;
Object send109339;
Object send109340;
Object send109341;
Object send109342;
Object method31381;
Object symbol30487;
Object methodclosure31287;
Object localvariable18364;
Object localvariable18365;
Object localvariable18366;
Object array16620;
Object send109343;
Object assign13810;
Object string10996;
Object constant23834;
Object assign13811;
Object send109344;
Object assign13812;
Object send109345;
Object send109346;
Object send109347;
Object send109348;
Object send109349;
Object send109350;
Object send109351;
Object send109352;
Object send109353;
Object send109354;
Object string10997;
Object constant23835;
Object send109355;
Object send109356;
Object send109357;
Object send109358;
Object send109359;
Object send109360;
Object send109361;
Object method31382;
Object symbol30479;
Object methodclosure31288;
Object localvariable18367;
Object localvariable18368;
Object localvariable18369;
Object localvariable18370;
Object array16621;
Object send109362;
Object assign13813;
Object string10998;
Object constant23836;
Object send109363;
Object assign13814;
Object send109364;
Object assign13815;
Object send109365;
Object send109366;
Object send109367;
Object send109368;
Object send109369;
Object send109370;
Object localvariable18371;
Object array16622;
Object smallint10893;
Object constant23837;
Object string10999;
Object constant23838;
Object send109371;
Object smallint10894;
Object constant23839;
Object string11000;
Object constant23840;
Object send109372;
Object smallint10895;
Object constant23841;
Object string11001;
Object constant23842;
Object send109373;
Object send109374;
Object block7426;
Object smallint10896;
Object constant23843;
Object send109375;
Object send109376;
Object send109377;
Object send109378;
Object send109379;
Object assign13816;
Object send109380;
Object send109381;
Object send109382;
Object send109383;
Object smallint10897;
Object constant23844;
Object send109384;
Object assign13817;
Object send109385;
Object send109386;
Object send109387;
Object send109388;
Object smallint10898;
Object constant23845;
Object send109389;
Object assign13818;
Object send109390;
Object send109391;
Object send109392;
Object send109393;
Object send109394;
Object smallint10899;
Object constant23846;
Object send109395;
Object method31383;
Object symbol30460;
Object methodclosure31289;
Object localvariable18372;
Object localvariable18373;
Object localvariable18374;
Object array16623;
Object send109396;
Object assign13819;
Object string11002;
Object constant23847;
Object send109397;
Object assign13820;
Object send109398;
Object assign13821;
Object send109399;
Object send109400;
Object send109401;
Object send109402;
Object send109403;
Object send109404;
Object send109405;
Object send109406;
Object send109407;
Object send109408;
Object string11003;
Object constant23848;
Object send109409;
Object send109410;
Object assign13822;
Object send109411;
Object send109412;
Object send109413;
Object send109414;
Object send109415;
Object send109416;
Object send109417;
Object send109418;
Object send109419;
Object send109420;
Object string11004;
Object constant23849;
Object send109421;
Object send109422;
Object assign13823;
Object send109423;
Object send109424;
Object send109425;
Object send109426;
Object send109427;
Object send109428;
Object send109429;
Object send109430;
Object send109431;
Object send109432;
Object string11005;
Object constant23850;
Object send109433;
Object send109434;
Object send109435;
Object send109436;
Object send109437;
Object string11006;
Object constant23851;
Object send109438;
Object assign13824;
Object send109439;
Object assign13825;
Object send109440;
Object send109441;
Object send109442;
Object send109443;
Object send109444;
Object send109445;
Object send109446;
Object send109447;
Object send109448;
Object send109449;
Object string11007;
Object constant23852;
Object send109450;
Object send109451;
Object assign13826;
Object send109452;
Object send109453;
Object send109454;
Object send109455;
Object send109456;
Object send109457;
Object send109458;
Object send109459;
Object send109460;
Object send109461;
Object string11008;
Object constant23853;
Object send109462;
Object send109463;
Object assign13827;
Object send109464;
Object send109465;
Object send109466;
Object send109467;
Object send109468;
Object send109469;
Object send109470;
Object send109471;
Object send109472;
Object send109473;
Object string11009;
Object constant23854;
Object send109474;
Object send109475;
Object send109476;
Object send109477;
Object send109478;
Object method31384;
Object symbol30452;
Object methodclosure31290;
Object localvariable18375;
Object localvariable18376;
Object localvariable18377;
Object array16624;
Object send109479;
Object assign13828;
Object string11010;
Object constant23855;
Object send109480;
Object assign13829;
Object send109481;
Object assign13830;
Object send109482;
Object send109483;
Object send109484;
Object send109485;
Object assign13831;
Object send109486;
Object send109487;
Object send109488;
Object send109489;
Object send109490;
Object send109491;
Object send109492;
Object send109493;
Object send109494;
Object send109495;
Object string11011;
Object constant23856;
Object send109496;
Object send109497;
Object assign13832;
Object send109498;
Object send109499;
Object send109500;
Object send109501;
Object send109502;
Object send109503;
Object send109504;
Object send109505;
Object send109506;
Object send109507;
Object string11012;
Object constant23857;
Object send109508;
Object send109509;
Object assign13833;
Object send109510;
Object send109511;
Object send109512;
Object send109513;
Object send109514;
Object send109515;
Object send109516;
Object send109517;
Object send109518;
Object send109519;
Object string11013;
Object constant23858;
Object send109520;
Object send109521;
Object send109522;
Object send109523;
Object send109524;
Object string11014;
Object constant23859;
Object send109525;
Object assign13834;
Object send109526;
Object assign13835;
Object send109527;
Object send109528;
Object send109529;
Object send109530;
Object assign13836;
Object send109531;
Object send109532;
Object send109533;
Object send109534;
Object send109535;
Object send109536;
Object send109537;
Object send109538;
Object send109539;
Object send109540;
Object string11015;
Object constant23860;
Object send109541;
Object send109542;
Object assign13837;
Object send109543;
Object send109544;
Object send109545;
Object send109546;
Object send109547;
Object send109548;
Object send109549;
Object send109550;
Object send109551;
Object send109552;
Object string11016;
Object constant23861;
Object send109553;
Object send109554;
Object assign13838;
Object send109555;
Object send109556;
Object send109557;
Object send109558;
Object send109559;
Object send109560;
Object send109561;
Object send109562;
Object send109563;
Object send109564;
Object string11017;
Object constant23862;
Object send109565;
Object send109566;
Object send109567;
Object send109568;
Object send109569;
Object method31385;
Object symbol30480;
Object methodclosure31291;
Object localvariable18378;
Object localvariable18379;
Object localvariable18380;
Object array16625;
Object send109570;
Object assign13839;
Object string11018;
Object constant23863;
Object send109571;
Object assign13840;
Object send109572;
Object assign13841;
Object send109573;
Object send109574;
Object send109575;
Object send109576;
Object send109577;
Object send109578;
Object send109579;
Object send109580;
Object send109581;
Object send109582;
Object string11019;
Object constant23864;
Object send109583;
Object send109584;
Object assign13842;
Object send109585;
Object send109586;
Object send109587;
Object send109588;
Object send109589;
Object send109590;
Object send109591;
Object send109592;
Object send109593;
Object send109594;
Object string11020;
Object constant23865;
Object send109595;
Object send109596;
Object assign13843;
Object send109597;
Object send109598;
Object send109599;
Object send109600;
Object send109601;
Object send109602;
Object send109603;
Object send109604;
Object send109605;
Object send109606;
Object string11021;
Object constant23866;
Object send109607;
Object send109608;
Object send109609;
Object send109610;
Object send109611;
Object method31386;
Object symbol30505;
Object methodclosure31292;
Object localvariable18381;
Object localvariable18382;
Object localvariable18383;
Object array16626;
Object send109612;
Object assign13844;
Object string11022;
Object constant23867;
Object send109613;
Object assign13845;
Object send109614;
Object assign13846;
Object send109615;
Object send109616;
Object send109617;
Object send109618;
Object send109619;
Object send109620;
Object smallint10900;
Object constant23868;
Object send109621;
Object send109622;
Object send109623;
Object send109624;
Object smallint10901;
Object constant23869;
Object send109625;
Object send109626;
Object send109627;
Object send109628;
Object smallint10902;
Object constant23870;
Object send109629;
Object string11023;
Object constant23871;
Object send109630;
Object assign13847;
Object send109631;
Object assign13848;
Object send109632;
Object send109633;
Object send109634;
Object send109635;
Object send109636;
Object send109637;
Object smallint10903;
Object constant23872;
Object send109638;
Object send109639;
Object send109640;
Object send109641;
Object smallint10904;
Object constant23873;
Object send109642;
Object send109643;
Object send109644;
Object send109645;
Object smallint10905;
Object constant23874;
Object send109646;
Object string11024;
Object constant23875;
Object send109647;
Object assign13849;
Object send109648;
Object assign13850;
Object send109649;
Object send109650;
Object send109651;
Object send109652;
Object send109653;
Object send109654;
Object smallint10906;
Object constant23876;
Object send109655;
Object send109656;
Object send109657;
Object send109658;
Object smallint10907;
Object constant23877;
Object send109659;
Object send109660;
Object send109661;
Object send109662;
Object smallint10908;
Object constant23878;
Object send109663;
Object string11025;
Object constant23879;
Object send109664;
Object assign13851;
Object send109665;
Object assign13852;
Object send109666;
Object send109667;
Object send109668;
Object send109669;
Object send109670;
Object send109671;
Object smallint10909;
Object constant23880;
Object send109672;
Object send109673;
Object send109674;
Object send109675;
Object smallint10910;
Object constant23881;
Object send109676;
Object send109677;
Object send109678;
Object send109679;
Object smallint10911;
Object constant23882;
Object send109680;
Object string11026;
Object constant23883;
Object send109681;
Object assign13853;
Object send109682;
Object assign13854;
Object send109683;
Object send109684;
Object send109685;
Object send109686;
Object send109687;
Object send109688;
Object smallint10912;
Object constant23884;
Object send109689;
Object send109690;
Object send109691;
Object send109692;
Object smallint10913;
Object constant23885;
Object send109693;
Object send109694;
Object send109695;
Object send109696;
Object smallint10914;
Object constant23886;
Object send109697;
Object string11027;
Object constant23887;
Object send109698;
Object assign13855;
Object send109699;
Object assign13856;
Object send109700;
Object send109701;
Object send109702;
Object send109703;
Object send109704;
Object send109705;
Object smallint10915;
Object constant23888;
Object send109706;
Object send109707;
Object send109708;
Object send109709;
Object smallint10916;
Object constant23889;
Object send109710;
Object send109711;
Object send109712;
Object send109713;
Object smallint10917;
Object constant23890;
Object send109714;
Object string11028;
Object constant23891;
Object send109715;
Object assign13857;
Object send109716;
Object assign13858;
Object send109717;
Object send109718;
Object send109719;
Object send109720;
Object send109721;
Object send109722;
Object smallint10918;
Object constant23892;
Object send109723;
Object send109724;
Object send109725;
Object send109726;
Object smallint10919;
Object constant23893;
Object send109727;
Object send109728;
Object send109729;
Object send109730;
Object smallint10920;
Object constant23894;
Object send109731;
Object method31387;
Object symbol30469;
Object methodclosure31293;
Object localvariable18384;
Object localvariable18385;
Object array16627;
Object send109732;
Object assign13859;
Object string11029;
Object constant23895;
Object send109733;
Object assign13860;
Object send109734;
Object send109735;
Object string11030;
Object constant23896;
Object send109736;
Object send109737;
Object send109738;
Object smallint10921;
Object constant23897;
Object send109739;
Object string11031;
Object constant23898;
Object send109740;
Object assign13861;
Object send109741;
Object send109742;
Object send109743;
Object send109744;
Object send109745;
Object send109746;
Object smallint10922;
Object constant23899;
Object send109747;
Object method31388;
Object symbol30497;
Object methodclosure31294;
Object localvariable18386;
Object localvariable18387;
Object localvariable18388;
Object array16628;
Object send109748;
Object assign13862;
Object string11032;
Object constant23900;
Object send109749;
Object assign13863;
Object send109750;
Object assign13864;
Object send109751;
Object send109752;
Object send109753;
Object send109754;
Object send109755;
Object send109756;
Object string11033;
Object constant23901;
Object send109757;
Object send109758;
Object send109759;
Object send109760;
Object send109761;
Object send109762;
Object send109763;
Object send109764;
Object send109765;
Object string11034;
Object constant23902;
Object send109766;
Object send109767;
Object send109768;
Object smallint10923;
Object constant23903;
Object send109769;
Object string11035;
Object constant23904;
Object send109770;
Object assign13865;
Object send109771;
Object send109772;
Object send109773;
Object send109774;
Object send109775;
Object send109776;
Object smallint10924;
Object constant23905;
Object send109777;
Object string11036;
Object constant23906;
Object send109778;
Object assign13866;
Object send109779;
Object assign13867;
Object send109780;
Object send109781;
Object send109782;
Object send109783;
Object send109784;
Object send109785;
Object string11037;
Object constant23907;
Object send109786;
Object send109787;
Object send109788;
Object send109789;
Object send109790;
Object string11038;
Object constant23908;
Object send109791;
Object send109792;
Object send109793;
Object send109794;
Object send109795;
Object send109796;
Object send109797;
Object smallint10925;
Object constant23909;
Object send109798;
Object method31389;
Object symbol30489;
Object methodclosure31295;
Object localvariable18389;
Object localvariable18390;
Object array16629;
Object send109799;
Object assign13868;
Object string11039;
Object constant23910;
Object send109800;
Object assign13869;
Object send109801;
Object send109802;
Object string11040;
Object constant23911;
Object send109803;
Object send109804;
Object send109805;
Object smallint10926;
Object constant23912;
Object send109806;
Object string11041;
Object constant23913;
Object send109807;
Object assign13870;
Object send109808;
Object send109809;
Object string11042;
Object constant23914;
Object send109810;
Object send109811;
Object send109812;
Object smallint10927;
Object constant23915;
Object send109813;
Object string11043;
Object constant23916;
Object send109814;
Object assign13871;
Object send109815;
Object send109816;
Object send109817;
Object send109818;
Object send109819;
Object send109820;
Object smallint10928;
Object constant23917;
Object send109821;
Object method31390;
Object symbol30510;
Object methodclosure31296;
Object localvariable18391;
Object localvariable18392;
Object localvariable18393;
Object array16630;
Object send109822;
Object assign13872;
Object string11044;
Object constant23918;
Object send109823;
Object assign13873;
Object send109824;
Object send109825;
Object send109826;
Object send109827;
Object send109828;
Object send109829;
Object smallint10929;
Object constant23919;
Object send109830;
Object string11045;
Object constant23920;
Object send109831;
Object assign13874;
Object send109832;
Object assign13875;
Object send109833;
Object send109834;
Object send109835;
Object send109836;
Object send109837;
Object character541;
Object constant23921;
Object send109838;
Object send109839;
Object send109840;
Object smallint10930;
Object constant23922;
Object send109841;
Object method31391;
Object symbol30507;
Object methodclosure31297;
Object localvariable18394;
Object localvariable18395;
Object array16631;
Object send109842;
Object assign13876;
Object string11046;
Object constant23923;
Object send109843;
Object assign13877;
Object send109844;
Object send109845;
Object send109846;
Object send109847;
Object send109848;
Object send109849;
Object send109850;
Object smallint10931;
Object constant23924;
Object send109851;
Object string11047;
Object constant23925;
Object send109852;
Object assign13878;
Object send109853;
Object send109854;
Object send109855;
Object send109856;
Object send109857;
Object send109858;
Object send109859;
Object smallint10932;
Object constant23926;
Object send109860;
Object string11048;
Object constant23927;
Object send109861;
Object assign13879;
Object send109862;
Object send109863;
Object send109864;
Object send109865;
Object send109866;
Object send109867;
Object send109868;
Object smallint10933;
Object constant23928;
Object send109869;
Object method31392;
Object symbol30490;
Object methodclosure31298;
Object localvariable18396;
Object localvariable18397;
Object array16632;
Object send109870;
Object assign13880;
Object string11049;
Object constant23929;
Object send109871;
Object assign13881;
Object send109872;
Object send109873;
Object send109874;
Object send109875;
Object send109876;
Object send109877;
Object smallint10934;
Object constant23930;
Object send109878;
Object string11050;
Object constant23931;
Object send109879;
Object assign13882;
Object send109880;
Object send109881;
Object string11051;
Object constant23932;
Object send109882;
Object send109883;
Object send109884;
Object smallint10935;
Object constant23933;
Object send109885;
Object string11052;
Object constant23934;
Object send109886;
Object assign13883;
Object send109887;
Object send109888;
Object string11053;
Object constant23935;
Object send109889;
Object send109890;
Object send109891;
Object smallint10936;
Object constant23936;
Object send109892;
Object string11054;
Object constant23937;
Object send109893;
Object assign13884;
Object send109894;
Object send109895;
Object string11055;
Object constant23938;
Object send109896;
Object send109897;
Object send109898;
Object smallint10937;
Object constant23939;
Object send109899;
Object method31393;
Object symbol30482;
Object methodclosure31299;
Object classreference11542;
Object classreference11543;
Object objectlayout7470;
Object instancevariable13984;
Object symbol30424;
Object class5269;
Object metaclass4470;
Object method31394;
Object methodclosure31300;
Object classreference11544;
Object symbol30845;
Object send109900;
Object send109901;
Object method31395;
Object symbol30425;
Object methodclosure31301;
Object instancevariable13985;
Object method31396;
Object methodclosure31302;
Object localvariable18398;
Object array16633;
Object send109902;
Object send109903;
Object method31397;
Object methodclosure31303;
Object send109904;
Object method31398;
Object symbol30429;
Object methodclosure31304;
Object localvariable18399;
Object localvariable18400;
Object localvariable18401;
Object array16634;
Object symbol30430;
Object send109905;
Object assign13885;
Object send109906;
Object localvariable18402;
Object array16635;
Object localvariable18403;
Object array16636;
Object send109907;
Object send109908;
Object symbol30846;
Object string11056;
Object constant23940;
Object send109909;
Object string11057;
Object constant23941;
Object send109910;
Object send109911;
Object block7427;
Object send109912;
Object block7428;
Object send109913;
Object send109914;
Object assign13886;
Object send109915;
Object send109916;
Object send109917;
Object block7429;
Object send109918;
Object method31399;
Object symbol30422;
Object methodclosure31305;
Object instancevariable13986;
Object method31400;
Object symbol30414;
Object methodclosure31306;
Object localvariable18404;
Object array16637;
Object send109919;
Object assign13887;
Object send109920;
Object symbol30847;
Object send109921;
Object send109922;
Object send109923;
Object block7430;
Object block7431;
Object send109924;
Object method31401;
Object methodclosure31307;
Object instancevariable13987;
Object method31402;
Object methodclosure31308;
Object classreference11545;
Object classreference11546;
Object objectlayout7471;
Object symbol30531;
Object class5259;
Object metaclass4471;
Object classreference11547;
Object classreference11548;
Object classreference11549;

void SCParserTest_create_ast() {

// Metaclass>>printOn:
//printOn: aStream 
// 	aStream nextPutAll: self name
localvariable18031 = (Object)new_AST_Variable_named(L"aStream");
array16349 = (Object)new_Type_Array_with(1, (Object)localvariable18031);
symbol30431 = (Object)new_Type_Symbol_cached(L"printOn:");
super1700 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18031);
symbol30733 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send107177 = (Object)new_AST_Send((Object)Self, (Object)symbol30733, 0);
// name
send107178 = (Object)new_AST_Send((Object)send107177, (Object)SMB_name, 0);
// printOn:
send107179 = (Object)new_AST_Send((Object)send107178, (Object)symbol30431, 1, (Object)localvariable18031);
method31055 = (Object)new_AST_Method_with((Type_Array)array16349, (Type_Array)empty_Type_Array, 3, super1700, send107179, Self);
methodclosure30961 = (Object)new_Runtime_MethodClosure(method31055);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure30961);

classreference11483 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Class>>name
//name
// 	"Answer the name of the receiver."
// 
// 	name == nil
// 		ifTrue: [^super name]
// 		ifFalse: [^name]
instancevariable13903 = (Object)new_AST_InstVariable(3, L"name");
method31056 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13903);
methodclosure30962 = (Object)new_Runtime_MethodClosure(method31056);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure30962);


// Class>>printOn:
//printOn: aStream 
// 	aStream nextPutAll: self name
localvariable18032 = (Object)new_AST_Variable_named(L"aStream");
array16350 = (Object)new_Type_Array_with(1, (Object)localvariable18032);
super1701 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18032);
symbol30734 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string10730 = (Object)new_Type_String(L" ");
constant23406 = (Object)new_AST_Constant((Object)string10730);
// nextPutAll:
send107180 = (Object)new_AST_Send((Object)localvariable18032, (Object)symbol30734, 1, (Object)constant23406);
// name
send107181 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send107182 = (Object)new_AST_Send((Object)send107181, (Object)symbol30431, 1, (Object)localvariable18032);
method31057 = (Object)new_AST_Method_with((Type_Array)array16350, (Type_Array)empty_Type_Array, 4, super1701, send107180, send107182, Self);
methodclosure30963 = (Object)new_Runtime_MethodClosure(method31057);
store_method((Type_Class)Class, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure30963);


// Class>>package
//package
//    	^ PackageOrganizer default packageOfClass: self ifNone: [ nil ]
instancevariable13904 = (Object)new_AST_InstVariable(4, L"package");
method31058 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13904);
symbol30432 = (Object)new_Type_Symbol_cached(L"package");
methodclosure30964 = (Object)new_Runtime_MethodClosure(method31058);
store_method((Type_Class)Class, (Type_Symbol)symbol30432, (Runtime_MethodClosure)methodclosure30964);

classreference11484 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send107183 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
symbol30515 = (Object)new_Type_Symbol_cached(L"initialize");
// initialize
send107184 = (Object)new_AST_Send((Object)send107183, (Object)symbol30515, 0);
method31059 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107184);
symbol30416 = (Object)new_Type_Symbol_cached(L"new");
methodclosure30965 = (Object)new_Runtime_MethodClosure(method31059);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30416, (Runtime_MethodClosure)methodclosure30965);


// Behavior>>hasSuperclass
//symbol30417 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send107185 = (Object)new_AST_Send((Object)Self, (Object)symbol30417, 0);
symbol30411 = (Object)new_Type_Symbol_cached(L"~=");

// Object>>yourself
//yourself
// 	"Answer self."
// 	^self
method31060 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30410 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure30966 = (Object)new_Runtime_MethodClosure(method31060);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30410, (Runtime_MethodClosure)methodclosure30966);


// Object>>objectName
//// class
send107186 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol30406 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send107187 = (Object)new_AST_Send((Object)send107186, (Object)symbol30406, 0);
method31061 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107187);
symbol30409 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure30967 = (Object)new_Runtime_MethodClosure(method31061);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30409, (Runtime_MethodClosure)methodclosure30967);


// Object>>doesNotUnderstand:
//doesNotUnderstand: aMessage 
// 	 "Handle the fact that there was an attempt to send the given message to the receiver but the receiver does not understand this message (typically sent from the machine when a message is sent to the receiver and no method is defined for that selector)."
// 	"Testing: (3 activeProcess)"
// 	"fixed suggested by Eliot miranda to make sure 
// 	
// 	[Object new blah + 1]
//  		on: MessageNotUnderstood
//  		do: [:e | e resume: 1] does not loop indefinitively"
// 		
// 	| exception resumeValue |
// 	(exception := MessageNotUnderstood new)
// 		message: aMessage;
// 		receiver: self.
// 	resumeValue := exception signal.
// 	^exception reachedDefaultHandler
// 		ifTrue: [aMessage sentTo: self]
// 		ifFalse: [resumeValue]
localvariable18033 = (Object)new_AST_Variable_named(L"aMessage");
array16351 = (Object)new_Type_Array_with(1, (Object)localvariable18033);
localvariable18034 = (Object)new_AST_Variable_named(L"selector");
array16352 = (Object)new_Type_Array_with(1, (Object)localvariable18034);
variable1212 = (Object)new_AST_Variable_named(L"return");
array16353 = (Object)new_Type_Array_with(1, (Object)variable1212);
symbol30580 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send107188 = (Object)new_AST_Send((Object)localvariable18033, (Object)symbol30580, 0);
symbol30735 = (Object)new_Type_Symbol_cached(L"accept:");
constant23407 = (Object)new_AST_Constant((Object)symbol30735);
// =
send107189 = (Object)new_AST_Send((Object)send107188, (Object)SMB__equal, 1, (Object)constant23407);
super1702 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable18033);
// escape:
send107190 = (Object)new_AST_Send((Object)variable1212, (Object)SMB_escape_, 1, (Object)super1702);
block7269 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107190);
// ifFalse:
send107191 = (Object)new_AST_Send((Object)send107189, (Object)SMB_ifFalse_, 1, (Object)block7269);
string10731 = (Object)new_Type_String(L"visit");
constant23408 = (Object)new_AST_Constant((Object)string10731);
// objectName
send107192 = (Object)new_AST_Send((Object)Self, (Object)symbol30409, 0);
// ,
send107193 = (Object)new_AST_Send((Object)constant23408, (Object)SMB__concat, 1, (Object)send107192);
string10732 = (Object)new_Type_String(L":");
constant23409 = (Object)new_AST_Constant((Object)string10732);
// ,
send107194 = (Object)new_AST_Send((Object)send107193, (Object)SMB__concat, 1, (Object)constant23409);
// asSymbol
send107195 = (Object)new_AST_Send((Object)send107194, (Object)SMB_asSymbol, 0);
assign13545 = (Object)new_AST_Assign((Object)localvariable18034, (Object)send107195);
symbol30598 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send107196 = (Object)new_AST_Send((Object)localvariable18033, (Object)symbol30598, 0);
symbol30736 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send107197 = (Object)new_AST_Send((Object)send107196, (Object)symbol30736, 2, (Object)localvariable18034, (Object)Self);
block7270 = (Object)new_AST_Block_with((Type_Array)array16353, (Type_Array)empty_Type_Array, 1, 3, send107191, assign13545, send107197);
// on:
send107198 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7270);
method31062 = (Object)new_AST_Method_with((Type_Array)array16351, (Type_Array)array16352, 1, send107198);
methodclosure30968 = (Object)new_Runtime_MethodClosure(method31062);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure30968);


// Object>>isNil
//isNil
// 	"Coerces nil to true and everything else to false."
// 
// 	^false
method31063 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure30969 = (Object)new_Runtime_MethodClosure(method31063);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure30969);


// Object>>~=
//~= anObject 
// 	"Answer whether the receiver and the argument do not represent the 
// 	same object."
// 
// 	^self = anObject == false
localvariable18035 = (Object)new_AST_Variable_named(L"anObject");
array16354 = (Object)new_Type_Array_with(1, (Object)localvariable18035);
// =
send107199 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable18035);
// not
send107200 = (Object)new_AST_Send((Object)send107199, (Object)SMB_not, 0);
method31064 = (Object)new_AST_Method_with((Type_Array)array16354, (Type_Array)empty_Type_Array, 1, send107200);
methodclosure30970 = (Object)new_Runtime_MethodClosure(method31064);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30411, (Runtime_MethodClosure)methodclosure30970);


// Object>>isReturnExpression
//method31065 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol30408 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure30971 = (Object)new_Runtime_MethodClosure(method31065);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol30408, (Runtime_MethodClosure)methodclosure30971);


// Object>>hash
//hash
// 	"Answer a SmallInteger whose value is related to the receiver's identity.
// 	May be overridden, and should be overridden in any classes that define = "
// 
// 	^ self identityHash
symbol30737 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send107201 = (Object)new_AST_Send((Object)Self, (Object)symbol30737, 0);
// hash
send107202 = (Object)new_AST_Send((Object)send107201, (Object)SMB_hash, 0);
method31066 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107202);
methodclosure30972 = (Object)new_Runtime_MethodClosure(method31066);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure30972);

objectlayout7358 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
instancevariable13905 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout7358)->values[0] = instancevariable13905;
instancevariable13906 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout7358)->values[1] = instancevariable13906;
instancevariable13907 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout7358)->values[2] = instancevariable13907;
instancevariable13908 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout7358)->values[3] = instancevariable13908;
instancevariable13909 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout7358)->values[4] = instancevariable13909;
symbol30514 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout7359 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13910 = (Object)new_AST_InstVariable(0, L"info");
((Type_Array)objectlayout7359)->values[0] = instancevariable13910;
class5209 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7359, objectlayout7358);
((Type_Class)class5209)->name = (Type_Symbol)symbol30514;
metaclass4411 = (Object)HEADER(class5209);

// ASTNode>>initialize
//initialize
// 	"Subclasses should redefine this method to perform initializations on instance creation"
super1703 = (Object)new_AST_Super((Object)symbol30515, 0);
method31067 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1703, Self);
methodclosure30973 = (Object)new_Runtime_MethodClosure(method31067);
store_method((Type_Class)class5209, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure30973);


// ASTNode>>info:
//localvariable18036 = (Object)new_AST_Variable_named(L"anObject");
array16355 = (Object)new_Type_Array_with(1, (Object)localvariable18036);
assign13546 = (Object)new_AST_Assign((Object)instancevariable13910, (Object)localvariable18036);
method31068 = (Object)new_AST_Method_with((Type_Array)array16355, (Type_Array)empty_Type_Array, 2, assign13546, Self);
symbol30516 = (Object)new_Type_Symbol_cached(L"info:");
methodclosure30974 = (Object)new_Runtime_MethodClosure(method31068);
store_method((Type_Class)class5209, (Type_Symbol)symbol30516, (Runtime_MethodClosure)methodclosure30974);


// ASTNode>>info
//method31069 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13910);
symbol30517 = (Object)new_Type_Symbol_cached(L"info");
methodclosure30975 = (Object)new_Runtime_MethodClosure(method31069);
store_method((Type_Class)class5209, (Type_Symbol)symbol30517, (Runtime_MethodClosure)methodclosure30975);

objectlayout7360 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7360)->values[0] = instancevariable13905;
((Type_Array)objectlayout7360)->values[1] = instancevariable13906;
((Type_Array)objectlayout7360)->values[2] = instancevariable13907;
((Type_Array)objectlayout7360)->values[3] = instancevariable13908;
((Type_Array)objectlayout7360)->values[4] = instancevariable13909;
symbol30513 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout7361 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7361)->values[0] = instancevariable13910;
instancevariable13911 = (Object)new_AST_InstVariable(1, L"name");
((Type_Array)objectlayout7361)->values[1] = instancevariable13911;
instancevariable13912 = (Object)new_AST_InstVariable(2, L"scopeId");
((Type_Array)objectlayout7361)->values[2] = instancevariable13912;
instancevariable13913 = (Object)new_AST_InstVariable(3, L"localId");
((Type_Array)objectlayout7361)->values[3] = instancevariable13913;
class5210 = (Object)new_Class_withMeta((Object)class5209, objectlayout7361, objectlayout7360);
((Type_Class)class5210)->name = (Type_Symbol)symbol30513;
metaclass4412 = (Object)HEADER(class5210);

// a PMetaclass P#Variable>>named:
localvariable18037 = (Object)new_AST_Variable_named(L"aSymbol");
array16356 = (Object)new_Type_Array_with(1, (Object)localvariable18037);
// new
send107203 = (Object)new_AST_Send((Object)Self, (Object)symbol30416, 0);
symbol30520 = (Object)new_Type_Symbol_cached(L"name:");
// asSymbol
send107204 = (Object)new_AST_Send((Object)localvariable18037, (Object)SMB_asSymbol, 0);
// name:
send107205 = (Object)new_AST_Send((Object)send107203, (Object)symbol30520, 1, (Object)send107204);
method31070 = (Object)new_AST_Method_with((Type_Array)array16356, (Type_Array)empty_Type_Array, 1, send107205);
symbol30518 = (Object)new_Type_Symbol_cached(L"named:");
methodclosure30976 = (Object)new_Runtime_MethodClosure(method31070);
store_method((Type_Class)metaclass4412, (Type_Symbol)symbol30518, (Runtime_MethodClosure)methodclosure30976);


// Variable>>name
//name
// 	^ name
method31071 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13911);
methodclosure30977 = (Object)new_Runtime_MethodClosure(method31071);
store_method((Type_Class)class5210, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure30977);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method31072 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13912);
symbol30522 = (Object)new_Type_Symbol_cached(L"scopeId");
methodclosure30978 = (Object)new_Runtime_MethodClosure(method31072);
store_method((Type_Class)class5210, (Type_Symbol)symbol30522, (Runtime_MethodClosure)methodclosure30978);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable18038 = (Object)new_AST_Variable_named(L"anObject");
array16357 = (Object)new_Type_Array_with(1, (Object)localvariable18038);
assign13547 = (Object)new_AST_Assign((Object)instancevariable13911, (Object)localvariable18038);
method31073 = (Object)new_AST_Method_with((Type_Array)array16357, (Type_Array)empty_Type_Array, 2, assign13547, Self);
methodclosure30979 = (Object)new_Runtime_MethodClosure(method31073);
store_method((Type_Class)class5210, (Type_Symbol)symbol30520, (Runtime_MethodClosure)methodclosure30979);


// Variable>>asPVariable
//asPVariable
// 	^ self.
method31074 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30524 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure30980 = (Object)new_Runtime_MethodClosure(method31074);
store_method((Type_Class)class5210, (Type_Symbol)symbol30524, (Runtime_MethodClosure)methodclosure30980);


// Variable>>localId
//localId
// 	^ localId
method31075 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13913);
symbol30521 = (Object)new_Type_Symbol_cached(L"localId");
methodclosure30981 = (Object)new_Runtime_MethodClosure(method31075);
store_method((Type_Class)class5210, (Type_Symbol)symbol30521, (Runtime_MethodClosure)methodclosure30981);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable18039 = (Object)new_AST_Variable_named(L"anObject");
array16358 = (Object)new_Type_Array_with(1, (Object)localvariable18039);
assign13548 = (Object)new_AST_Assign((Object)instancevariable13913, (Object)localvariable18039);
method31076 = (Object)new_AST_Method_with((Type_Array)array16358, (Type_Array)empty_Type_Array, 2, assign13548, Self);
symbol30519 = (Object)new_Type_Symbol_cached(L"localId:");
methodclosure30982 = (Object)new_Runtime_MethodClosure(method31076);
store_method((Type_Class)class5210, (Type_Symbol)symbol30519, (Runtime_MethodClosure)methodclosure30982);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable18040 = (Object)new_AST_Variable_named(L"aStream");
array16359 = (Object)new_Type_Array_with(1, (Object)localvariable18040);
super1704 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18040);
string10733 = (Object)new_Type_String(L" ");
constant23410 = (Object)new_AST_Constant((Object)string10733);
// nextPutAll:
send107206 = (Object)new_AST_Send((Object)localvariable18040, (Object)symbol30734, 1, (Object)constant23410);
// name
send107207 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send107208 = (Object)new_AST_Send((Object)send107207, (Object)symbol30431, 1, (Object)localvariable18040);
string10734 = (Object)new_Type_String(L" ");
constant23411 = (Object)new_AST_Constant((Object)string10734);
// nextPutAll:
send107209 = (Object)new_AST_Send((Object)localvariable18040, (Object)symbol30734, 1, (Object)constant23411);
// scopeId
send107210 = (Object)new_AST_Send((Object)Self, (Object)symbol30522, 0);
// printOn:
send107211 = (Object)new_AST_Send((Object)send107210, (Object)symbol30431, 1, (Object)localvariable18040);
string10735 = (Object)new_Type_String(L"@");
constant23412 = (Object)new_AST_Constant((Object)string10735);
// nextPutAll:
send107212 = (Object)new_AST_Send((Object)localvariable18040, (Object)symbol30734, 1, (Object)constant23412);
// localId
send107213 = (Object)new_AST_Send((Object)Self, (Object)symbol30521, 0);
// printOn:
send107214 = (Object)new_AST_Send((Object)send107213, (Object)symbol30431, 1, (Object)localvariable18040);
method31077 = (Object)new_AST_Method_with((Type_Array)array16359, (Type_Array)empty_Type_Array, 8, super1704, send107206, send107208, send107209, send107211, send107212, send107214, Self);
methodclosure30983 = (Object)new_Runtime_MethodClosure(method31077);
store_method((Type_Class)class5210, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure30983);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable18041 = (Object)new_AST_Variable_named(L"anObject");
array16360 = (Object)new_Type_Array_with(1, (Object)localvariable18041);
assign13549 = (Object)new_AST_Assign((Object)instancevariable13912, (Object)localvariable18041);
method31078 = (Object)new_AST_Method_with((Type_Array)array16360, (Type_Array)empty_Type_Array, 2, assign13549, Self);
symbol30523 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure30984 = (Object)new_Runtime_MethodClosure(method31078);
store_method((Type_Class)class5210, (Type_Symbol)symbol30523, (Runtime_MethodClosure)methodclosure30984);

objectlayout7362 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7362)->values[0] = instancevariable13905;
((Type_Array)objectlayout7362)->values[1] = instancevariable13906;
((Type_Array)objectlayout7362)->values[2] = instancevariable13907;
((Type_Array)objectlayout7362)->values[3] = instancevariable13908;
((Type_Array)objectlayout7362)->values[4] = instancevariable13909;
symbol30421 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout7363 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7363)->values[0] = instancevariable13910;
((Type_Array)objectlayout7363)->values[1] = instancevariable13911;
((Type_Array)objectlayout7363)->values[2] = instancevariable13912;
((Type_Array)objectlayout7363)->values[3] = instancevariable13913;
class5211 = (Object)new_Class_withMeta((Object)class5210, objectlayout7363, objectlayout7362);
((Type_Class)class5211)->name = (Type_Symbol)symbol30421;
metaclass4413 = (Object)HEADER(class5211);
classreference11485 = (Object)new_Organization_ClassReference((Type_Class)class5211);
classreference11486 = (Object)new_Organization_ClassReference((Type_Class)class5210);
classreference11487 = (Object)new_Organization_ClassReference((Type_Class)class5209);
objectlayout7364 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7364)->values[0] = instancevariable13905;
((Type_Array)objectlayout7364)->values[1] = instancevariable13906;
((Type_Array)objectlayout7364)->values[2] = instancevariable13907;
((Type_Array)objectlayout7364)->values[3] = instancevariable13908;
((Type_Array)objectlayout7364)->values[4] = instancevariable13909;
symbol30577 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout7365 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7365)->values[0] = instancevariable13910;
((Type_Array)objectlayout7365)->values[1] = instancevariable13911;
((Type_Array)objectlayout7365)->values[2] = instancevariable13912;
((Type_Array)objectlayout7365)->values[3] = instancevariable13913;
instancevariable13914 = (Object)new_AST_InstVariable(4, L"key");
((Type_Array)objectlayout7365)->values[4] = instancevariable13914;
class5212 = (Object)new_Class_withMeta((Object)class5210, objectlayout7365, objectlayout7364);
((Type_Class)class5212)->name = (Type_Symbol)symbol30577;
metaclass4414 = (Object)HEADER(class5212);

// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable18042 = (Object)new_AST_Variable_named(L"anObject");
array16361 = (Object)new_Type_Array_with(1, (Object)localvariable18042);
assign13550 = (Object)new_AST_Assign((Object)instancevariable13914, (Object)localvariable18042);
method31079 = (Object)new_AST_Method_with((Type_Array)array16361, (Type_Array)empty_Type_Array, 2, assign13550, Self);
symbol30720 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure30985 = (Object)new_Runtime_MethodClosure(method31079);
store_method((Type_Class)class5212, (Type_Symbol)symbol30720, (Runtime_MethodClosure)methodclosure30985);


// LocalVariable>>key
//key
// 	^ key
method31080 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13914);
symbol30719 = (Object)new_Type_Symbol_cached(L"key");
methodclosure30986 = (Object)new_Runtime_MethodClosure(method31080);
store_method((Type_Class)class5212, (Type_Symbol)symbol30719, (Runtime_MethodClosure)methodclosure30986);

classreference11488 = (Object)new_Organization_ClassReference((Type_Class)class5212);
objectlayout7366 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7366)->values[0] = instancevariable13905;
((Type_Array)objectlayout7366)->values[1] = instancevariable13906;
((Type_Array)objectlayout7366)->values[2] = instancevariable13907;
((Type_Array)objectlayout7366)->values[3] = instancevariable13908;
((Type_Array)objectlayout7366)->values[4] = instancevariable13909;
symbol30579 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout7367 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7367)->values[0] = instancevariable13910;
instancevariable13915 = (Object)new_AST_InstVariable(1, L"selector");
((Type_Array)objectlayout7367)->values[1] = instancevariable13915;
class5213 = (Object)new_Class_withMeta((Object)class5209, objectlayout7367, objectlayout7366);
((Type_Class)class5213)->name = (Type_Symbol)symbol30579;
metaclass4415 = (Object)HEADER(class5213);

// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable18043 = (Object)new_AST_Variable_named(L"aSelector");
array16362 = (Object)new_Type_Array_with(1, (Object)localvariable18043);
symbol30581 = (Object)new_Type_Symbol_cached(L"selectorName");
// selectorName
send107215 = (Object)new_AST_Send((Object)Self, (Object)symbol30581, 0);
// selectorName
send107216 = (Object)new_AST_Send((Object)localvariable18043, (Object)symbol30581, 0);
// =
send107217 = (Object)new_AST_Send((Object)send107215, (Object)SMB__equal, 1, (Object)send107216);
method31081 = (Object)new_AST_Method_with((Type_Array)array16362, (Type_Array)empty_Type_Array, 1, send107217);
symbol30584 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
methodclosure30987 = (Object)new_Runtime_MethodClosure(method31081);
store_method((Type_Class)class5213, (Type_Symbol)symbol30584, (Runtime_MethodClosure)methodclosure30987);


// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable18044 = (Object)new_AST_Variable_named(L"anObject");
array16363 = (Object)new_Type_Array_with(1, (Object)localvariable18044);
localvariable18045 = (Object)new_AST_Variable_named(L"string");
array16364 = (Object)new_Type_Array_with(1, (Object)localvariable18045);
assign13551 = (Object)new_AST_Assign((Object)instancevariable13915, (Object)localvariable18044);
// asString
send107218 = (Object)new_AST_Send((Object)instancevariable13915, (Object)SMB_asString, 0);
assign13552 = (Object)new_AST_Assign((Object)localvariable18045, (Object)send107218);
// size
send107219 = (Object)new_AST_Send((Object)localvariable18045, (Object)SMB_size, 0);
smallint10758 = (Object)new_Type_SmallInt(1);
constant23413 = (Object)new_AST_Constant((Object)smallint10758);
// >
send107220 = (Object)new_AST_Send((Object)send107219, (Object)SMB__gt, 1, (Object)constant23413);
// size
send107221 = (Object)new_AST_Send((Object)localvariable18045, (Object)SMB_size, 0);
smallint10759 = (Object)new_Type_SmallInt(1);
constant23414 = (Object)new_AST_Constant((Object)smallint10759);
// -
send107222 = (Object)new_AST_Send((Object)send107221, (Object)SMB__minus, 1, (Object)constant23414);
// at:
send107223 = (Object)new_AST_Send((Object)localvariable18045, (Object)SMB_at_, 1, (Object)send107222);
symbol30738 = (Object)new_Type_Symbol_cached(L"should");
// should
send107224 = (Object)new_AST_Send((Object)send107223, (Object)symbol30738, 0);
// not
send107225 = (Object)new_AST_Send((Object)send107224, (Object)SMB_not, 0);
string10736 = (Object)new_Type_String(L":");
constant23415 = (Object)new_AST_Constant((Object)string10736);
// =
send107226 = (Object)new_AST_Send((Object)send107225, (Object)SMB__equal, 1, (Object)constant23415);
block7271 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107226);
// ifTrue:
send107227 = (Object)new_AST_Send((Object)send107220, (Object)SMB_ifTrue_, 1, (Object)block7271);
method31082 = (Object)new_AST_Method_with((Type_Array)array16363, (Type_Array)array16364, 4, assign13551, assign13552, send107227, Self);
symbol30583 = (Object)new_Type_Symbol_cached(L"selector:");
methodclosure30988 = (Object)new_Runtime_MethodClosure(method31082);
store_method((Type_Class)class5213, (Type_Symbol)symbol30583, (Runtime_MethodClosure)methodclosure30988);


// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send107228 = (Object)new_AST_Send((Object)Self, (Object)symbol30580, 0);
symbol30698 = (Object)new_Type_Symbol_cached(L"printString");
// printString
send107229 = (Object)new_AST_Send((Object)send107228, (Object)symbol30698, 0);
method31083 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send107229, Self);
methodclosure30989 = (Object)new_Runtime_MethodClosure(method31083);
store_method((Type_Class)class5213, (Type_Symbol)symbol30581, (Runtime_MethodClosure)methodclosure30989);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send107230 = (Object)new_AST_Send((Object)Self, (Object)symbol30580, 0);
// asString
send107231 = (Object)new_AST_Send((Object)send107230, (Object)SMB_asString, 0);
method31084 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107231);
methodclosure30990 = (Object)new_Runtime_MethodClosure(method31084);
store_method((Type_Class)class5213, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure30990);


// ASTSelector>>selector
//selector
// 	^ selector
method31085 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13915);
methodclosure30991 = (Object)new_Runtime_MethodClosure(method31085);
store_method((Type_Class)class5213, (Type_Symbol)symbol30580, (Runtime_MethodClosure)methodclosure30991);


// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable18046 = (Object)new_AST_Variable_named(L"aStream");
array16365 = (Object)new_Type_Array_with(1, (Object)localvariable18046);
// selector
send107232 = (Object)new_AST_Send((Object)Self, (Object)symbol30580, 0);
// printOn:
send107233 = (Object)new_AST_Send((Object)send107232, (Object)symbol30431, 1, (Object)localvariable18046);
method31086 = (Object)new_AST_Method_with((Type_Array)array16365, (Type_Array)empty_Type_Array, 2, send107233, Self);
methodclosure30992 = (Object)new_Runtime_MethodClosure(method31086);
store_method((Type_Class)class5213, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure30992);


// ASTSelector>>parameters
//parameters
// 	^ Array new.

// Array>>printOn:
//printOn: aStream
// 	self isLiteral ifTrue: [self printAsLiteralFormOn: aStream. ^ self].
// 	self isSelfEvaluating ifTrue: [self printAsSelfEvaluatingFormOn: aStream. ^ self].
// 
// 	super printOn: aStream
localvariable18047 = (Object)new_AST_Variable_named(L"aStream");
array16366 = (Object)new_Type_Array_with(1, (Object)localvariable18047);
super1705 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18047);
string10737 = (Object)new_Type_String(L" #( ");
constant23416 = (Object)new_AST_Constant((Object)string10737);
// nextPutAll:
send107234 = (Object)new_AST_Send((Object)localvariable18047, (Object)symbol30734, 1, (Object)constant23416);
symbol30552 = (Object)new_Type_Symbol_cached(L"do:");
localvariable18048 = (Object)new_AST_Variable_named(L"each");
array16367 = (Object)new_Type_Array_with(1, (Object)localvariable18048);
// printOn:
send107235 = (Object)new_AST_Send((Object)localvariable18048, (Object)symbol30431, 1, (Object)localvariable18047);
string10738 = (Object)new_Type_String(L" ");
constant23417 = (Object)new_AST_Constant((Object)string10738);
// nextPutAll:
send107236 = (Object)new_AST_Send((Object)localvariable18047, (Object)symbol30734, 1, (Object)constant23417);
block7272 = (Object)new_AST_Block_with((Type_Array)array16367, (Type_Array)empty_Type_Array, 1, 2, send107235, send107236);
// do:
send107237 = (Object)new_AST_Send((Object)Self, (Object)symbol30552, 1, (Object)block7272);
string10739 = (Object)new_Type_String(L")");
constant23418 = (Object)new_AST_Constant((Object)string10739);
// nextPutAll:
send107238 = (Object)new_AST_Send((Object)localvariable18047, (Object)symbol30734, 1, (Object)constant23418);
method31087 = (Object)new_AST_Method_with((Type_Array)array16366, (Type_Array)empty_Type_Array, 5, super1705, send107234, send107237, send107238, Self);
methodclosure30993 = (Object)new_Runtime_MethodClosure(method31087);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure30993);


// Array>>first:
//first: n
// 	"Answer the first n elements of the receiver.
// 	Raise an error if there are not enough elements."
// 
// 	^ self copyFrom: 1 to: n
localvariable18049 = (Object)new_AST_Variable_named(L"aValue");
array16368 = (Object)new_Type_Array_with(1, (Object)localvariable18049);
smallint10760 = (Object)new_Type_SmallInt(1);
constant23419 = (Object)new_AST_Constant((Object)smallint10760);
// at:put:
send107239 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant23419, (Object)localvariable18049);
method31088 = (Object)new_AST_Method_with((Type_Array)array16368, (Type_Array)empty_Type_Array, 1, send107239);
symbol30551 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure30994 = (Object)new_Runtime_MethodClosure(method31088);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30551, (Runtime_MethodClosure)methodclosure30994);


// Array>>last:
//last: n
// 	"Answer the last n elements of the receiver.  
// 	Raise an error if there are not enough elements."
// 
// 	| size |
// 	size := self size.
// 	^ self copyFrom: size - n + 1 to: size
localvariable18050 = (Object)new_AST_Variable_named(L"aNode");
array16369 = (Object)new_Type_Array_with(1, (Object)localvariable18050);
// size
send107240 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:put:
send107241 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send107240, (Object)localvariable18050);
method31089 = (Object)new_AST_Method_with((Type_Array)array16369, (Type_Array)empty_Type_Array, 1, send107241);
symbol30555 = (Object)new_Type_Symbol_cached(L"last:");
methodclosure30995 = (Object)new_Runtime_MethodClosure(method31089);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30555, (Runtime_MethodClosure)methodclosure30995);


// Array>>last
//last
// 	"Answer the last element of the receiver"
// 
// 	^ self at: self size
// size
send107242 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:
send107243 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send107242);
method31090 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107243);
symbol30548 = (Object)new_Type_Symbol_cached(L"last");
methodclosure30996 = (Object)new_Runtime_MethodClosure(method31090);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30548, (Runtime_MethodClosure)methodclosure30996);


// Array>>do:
//do: aBlock 
// 	"Refer to the comment in Collection|do:."
// 	1 to: self size do:
// 		[:index | aBlock value: (self at: index)]
localvariable18051 = (Object)new_AST_Variable_named(L"aBlockClosure");
array16370 = (Object)new_Type_Array_with(1, (Object)localvariable18051);
smallint10761 = (Object)new_Type_SmallInt(1);
constant23420 = (Object)new_AST_Constant((Object)smallint10761);
symbol30739 = (Object)new_Type_Symbol_cached(L"to:do:");
// size
send107244 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable18052 = (Object)new_AST_Variable_named(L"index");
array16371 = (Object)new_Type_Array_with(1, (Object)localvariable18052);
// at:
send107245 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable18052);
// value:
send107246 = (Object)new_AST_Send((Object)localvariable18051, (Object)SMB_value_, 1, (Object)send107245);
block7273 = (Object)new_AST_Block_with((Type_Array)array16371, (Type_Array)empty_Type_Array, 1, 1, send107246);
// to:do:
send107247 = (Object)new_AST_Send((Object)constant23420, (Object)symbol30739, 2, (Object)send107244, (Object)block7273);
method31091 = (Object)new_AST_Method_with((Type_Array)array16370, (Type_Array)empty_Type_Array, 2, send107247, Self);
methodclosure30997 = (Object)new_Runtime_MethodClosure(method31091);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30552, (Runtime_MethodClosure)methodclosure30997);


// Array>>first
//first
// 	"Answer the first element of the receiver"
// 
// 	^ self at: 1
smallint10762 = (Object)new_Type_SmallInt(1);
constant23421 = (Object)new_AST_Constant((Object)smallint10762);
// at:
send107248 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant23421);
method31092 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107248);
symbol30549 = (Object)new_Type_Symbol_cached(L"first");
methodclosure30998 = (Object)new_Runtime_MethodClosure(method31092);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30549, (Runtime_MethodClosure)methodclosure30998);


// Array>>=
//= otherCollection 
// 	"Answer true if the receiver is equivalent to the otherCollection.
// 	First test for identity, then rule out different species and sizes of
// 	collections. As a last resort, examine each element of the receiver
// 	and the otherCollection."
// 
// 	self == otherCollection ifTrue: [^ true].
// 	self species == otherCollection species ifFalse: [^ false].
// 	^ self hasEqualElements: otherCollection
localvariable18053 = (Object)new_AST_Variable_named(L"other");
array16372 = (Object)new_Type_Array_with(1, (Object)localvariable18053);
variable1213 = (Object)new_AST_Variable_named(L"return");
array16373 = (Object)new_Type_Array_with(1, (Object)variable1213);
// ==
send107249 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable18053);
// escape:
send107250 = (Object)new_AST_Send((Object)variable1213, (Object)SMB_escape_, 1, (Object)True_Const);
block7274 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107250);
// ifTrue:
send107251 = (Object)new_AST_Send((Object)send107249, (Object)SMB_ifTrue_, 1, (Object)block7274);
// class
send107252 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send107253 = (Object)new_AST_Send((Object)localvariable18053, (Object)SMB_class, 0);
// =
send107254 = (Object)new_AST_Send((Object)send107252, (Object)SMB__equal, 1, (Object)send107253);
// escape:
send107255 = (Object)new_AST_Send((Object)variable1213, (Object)SMB_escape_, 1, (Object)False_Const);
block7275 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107255);
// ifFalse:
send107256 = (Object)new_AST_Send((Object)send107254, (Object)SMB_ifFalse_, 1, (Object)block7275);
// size
send107257 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// size
send107258 = (Object)new_AST_Send((Object)localvariable18053, (Object)SMB_size, 0);
// =
send107259 = (Object)new_AST_Send((Object)send107257, (Object)SMB__equal, 1, (Object)send107258);
// escape:
send107260 = (Object)new_AST_Send((Object)variable1213, (Object)SMB_escape_, 1, (Object)False_Const);
block7276 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107260);
// ifFalse:
send107261 = (Object)new_AST_Send((Object)send107259, (Object)SMB_ifFalse_, 1, (Object)block7276);
smallint10763 = (Object)new_Type_SmallInt(1);
constant23422 = (Object)new_AST_Constant((Object)smallint10763);
// size
send107262 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable18054 = (Object)new_AST_Variable_named(L"index");
array16374 = (Object)new_Type_Array_with(1, (Object)localvariable18054);
// at:
send107263 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable18054);
// at:
send107264 = (Object)new_AST_Send((Object)localvariable18053, (Object)SMB_at_, 1, (Object)localvariable18054);
// =
send107265 = (Object)new_AST_Send((Object)send107263, (Object)SMB__equal, 1, (Object)send107264);
// escape:
send107266 = (Object)new_AST_Send((Object)variable1213, (Object)SMB_escape_, 1, (Object)False_Const);
block7277 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107266);
// ifFalse:
send107267 = (Object)new_AST_Send((Object)send107265, (Object)SMB_ifFalse_, 1, (Object)block7277);
block7278 = (Object)new_AST_Block_with((Type_Array)array16374, (Type_Array)empty_Type_Array, 2, 1, send107267);
// to:do:
send107268 = (Object)new_AST_Send((Object)constant23422, (Object)symbol30739, 2, (Object)send107262, (Object)block7278);
block7279 = (Object)new_AST_Block_with((Type_Array)array16373, (Type_Array)empty_Type_Array, 1, 5, send107251, send107256, send107261, send107268, True_Const);
// on:
send107269 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7279);
method31093 = (Object)new_AST_Method_with((Type_Array)array16372, (Type_Array)empty_Type_Array, 1, send107269);
methodclosure30999 = (Object)new_Runtime_MethodClosure(method31093);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure30999);


// Array>>add:
//add: newObject
// 	self shouldNotImplement
localvariable18055 = (Object)new_AST_Variable_named(L"anElement");
array16375 = (Object)new_Type_Array_with(1, (Object)localvariable18055);
localvariable18056 = (Object)new_AST_Variable_named(L"result");
array16376 = (Object)new_Type_Array_with(1, (Object)localvariable18056);
// class
send107270 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol30413 = (Object)new_Type_Symbol_cached(L"new:");
// size
send107271 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint10764 = (Object)new_Type_SmallInt(1);
constant23423 = (Object)new_AST_Constant((Object)smallint10764);
// +
send107272 = (Object)new_AST_Send((Object)send107271, (Object)SMB__plus, 1, (Object)constant23423);
// new:
send107273 = (Object)new_AST_Send((Object)send107270, (Object)symbol30413, 1, (Object)send107272);
assign13553 = (Object)new_AST_Assign((Object)localvariable18056, (Object)send107273);
symbol30550 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
localvariable18057 = (Object)new_AST_Variable_named(L"el");
localvariable18058 = (Object)new_AST_Variable_named(L"i");
array16377 = (Object)new_Type_Array_with(2, (Object)localvariable18057, (Object)localvariable18058);
// at:put:
send107274 = (Object)new_AST_Send((Object)localvariable18056, (Object)SMB_at_put_, 2, (Object)localvariable18058, (Object)localvariable18057);
block7280 = (Object)new_AST_Block_with((Type_Array)array16377, (Type_Array)empty_Type_Array, 1, 1, send107274);
// doWithIndex:
send107275 = (Object)new_AST_Send((Object)Self, (Object)symbol30550, 1, (Object)block7280);
// last:
send107276 = (Object)new_AST_Send((Object)localvariable18056, (Object)symbol30555, 1, (Object)localvariable18055);
method31094 = (Object)new_AST_Method_with((Type_Array)array16375, (Type_Array)array16376, 4, assign13553, send107275, send107276, localvariable18056);
symbol30553 = (Object)new_Type_Symbol_cached(L"add:");
methodclosure31000 = (Object)new_Runtime_MethodClosure(method31094);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30553, (Runtime_MethodClosure)methodclosure31000);


// Array>>doWithIndex:
//doWithIndex: elementAndIndexBlock
// 	"Use the new version with consistent naming"
// 	^ self withIndexDo: elementAndIndexBlock
localvariable18059 = (Object)new_AST_Variable_named(L"aBlockClosure");
array16378 = (Object)new_Type_Array_with(1, (Object)localvariable18059);
smallint10765 = (Object)new_Type_SmallInt(1);
constant23424 = (Object)new_AST_Constant((Object)smallint10765);
// size
send107277 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable18060 = (Object)new_AST_Variable_named(L"index");
array16379 = (Object)new_Type_Array_with(1, (Object)localvariable18060);
symbol30740 = (Object)new_Type_Symbol_cached(L"value:value:");
// at:
send107278 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable18060);
// value:value:
send107279 = (Object)new_AST_Send((Object)localvariable18059, (Object)symbol30740, 2, (Object)send107278, (Object)localvariable18060);
block7281 = (Object)new_AST_Block_with((Type_Array)array16379, (Type_Array)empty_Type_Array, 1, 1, send107279);
// to:do:
send107280 = (Object)new_AST_Send((Object)constant23424, (Object)symbol30739, 2, (Object)send107277, (Object)block7281);
method31095 = (Object)new_AST_Method_with((Type_Array)array16378, (Type_Array)empty_Type_Array, 2, send107280, Self);
methodclosure31001 = (Object)new_Runtime_MethodClosure(method31095);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30550, (Runtime_MethodClosure)methodclosure31001);


// Array>>initialize
//initialize
// 	"Subclasses should redefine this method to perform initializations on instance creation"
super1706 = (Object)new_AST_Super((Object)symbol30515, 0);
method31096 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1706, Self);
methodclosure31002 = (Object)new_Runtime_MethodClosure(method31096);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31002);


// Array>>isEmpty
//isEmpty
// 	"Answer whether the receiver contains any elements."
// 
// 	^self size = 0
// size
send107281 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint10766 = (Object)new_Type_SmallInt(0);
constant23425 = (Object)new_AST_Constant((Object)smallint10766);
// =
send107282 = (Object)new_AST_Send((Object)send107281, (Object)SMB__equal, 1, (Object)constant23425);
method31097 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107282);
symbol30543 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure31003 = (Object)new_Runtime_MethodClosure(method31097);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30543, (Runtime_MethodClosure)methodclosure31003);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable18061 = (Object)new_AST_Variable_named(L"thisValue");
localvariable18062 = (Object)new_AST_Variable_named(L"binaryBlock");
array16380 = (Object)new_Type_Array_with(2, (Object)localvariable18061, (Object)localvariable18062);
localvariable18063 = (Object)new_AST_Variable_named(L"nextValue");
array16381 = (Object)new_Type_Array_with(1, (Object)localvariable18063);
assign13554 = (Object)new_AST_Assign((Object)localvariable18063, (Object)localvariable18061);
localvariable18064 = (Object)new_AST_Variable_named(L"each");
array16382 = (Object)new_Type_Array_with(1, (Object)localvariable18064);
// value:value:
send107283 = (Object)new_AST_Send((Object)localvariable18062, (Object)symbol30740, 2, (Object)localvariable18063, (Object)localvariable18064);
assign13555 = (Object)new_AST_Assign((Object)localvariable18063, (Object)send107283);
block7282 = (Object)new_AST_Block_with((Type_Array)array16382, (Type_Array)empty_Type_Array, 1, 1, assign13555);
// do:
send107284 = (Object)new_AST_Send((Object)Self, (Object)symbol30552, 1, (Object)block7282);
method31098 = (Object)new_AST_Method_with((Type_Array)array16380, (Type_Array)array16381, 3, assign13554, send107284, localvariable18063);
symbol30554 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure31004 = (Object)new_Runtime_MethodClosure(method31098);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol30554, (Runtime_MethodClosure)methodclosure31004);

classreference11489 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);
// new
send107285 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30416, 0);
method31099 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107285);
symbol30582 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure31005 = (Object)new_Runtime_MethodClosure(method31099);
store_method((Type_Class)class5213, (Type_Symbol)symbol30582, (Runtime_MethodClosure)methodclosure31005);

objectlayout7368 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7368)->values[0] = instancevariable13905;
((Type_Array)objectlayout7368)->values[1] = instancevariable13906;
((Type_Array)objectlayout7368)->values[2] = instancevariable13907;
((Type_Array)objectlayout7368)->values[3] = instancevariable13908;
((Type_Array)objectlayout7368)->values[4] = instancevariable13909;
symbol30483 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout7369 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7369)->values[0] = instancevariable13910;
((Type_Array)objectlayout7369)->values[1] = instancevariable13915;
instancevariable13916 = (Object)new_AST_InstVariable(2, L"keywords");
((Type_Array)objectlayout7369)->values[2] = instancevariable13916;
class5214 = (Object)new_Class_withMeta((Object)class5213, objectlayout7369, objectlayout7368);
((Type_Class)class5214)->name = (Type_Symbol)symbol30483;
metaclass4416 = (Object)HEADER(class5214);

// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable18065 = (Object)new_AST_Variable_named(L"anObject");
array16383 = (Object)new_Type_Array_with(1, (Object)localvariable18065);
assign13556 = (Object)new_AST_Assign((Object)instancevariable13916, (Object)localvariable18065);
method31100 = (Object)new_AST_Method_with((Type_Array)array16383, (Type_Array)empty_Type_Array, 2, assign13556, Self);
symbol30586 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure31006 = (Object)new_Runtime_MethodClosure(method31100);
store_method((Type_Class)class5214, (Type_Symbol)symbol30586, (Runtime_MethodClosure)methodclosure31006);


// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super1707 = (Object)new_AST_Super((Object)symbol30515, 0);
objectlayout7370 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7370)->values[0] = instancevariable13905;
((Type_Array)objectlayout7370)->values[1] = instancevariable13906;
((Type_Array)objectlayout7370)->values[2] = instancevariable13907;
((Type_Array)objectlayout7370)->values[3] = instancevariable13908;
((Type_Array)objectlayout7370)->values[4] = instancevariable13909;
symbol30527 = (Object)new_Type_Symbol_cached(L"Collection");
class5215 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7370);
((Type_Class)class5215)->name = (Type_Symbol)symbol30527;
metaclass4417 = (Object)HEADER(class5215);
objectlayout7371 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7371)->values[0] = instancevariable13905;
((Type_Array)objectlayout7371)->values[1] = instancevariable13906;
((Type_Array)objectlayout7371)->values[2] = instancevariable13907;
((Type_Array)objectlayout7371)->values[3] = instancevariable13908;
((Type_Array)objectlayout7371)->values[4] = instancevariable13909;
symbol30526 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class5216 = (Object)new_Class_withMeta((Object)class5215, empty_object_layout, objectlayout7371);
((Type_Class)class5216)->name = (Type_Symbol)symbol30526;
metaclass4418 = (Object)HEADER(class5216);
classreference11490 = (Object)new_Organization_ClassReference((Type_Class)class5216);
classreference11491 = (Object)new_Organization_ClassReference((Type_Class)class5215);
objectlayout7372 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7372)->values[0] = instancevariable13905;
((Type_Array)objectlayout7372)->values[1] = instancevariable13906;
((Type_Array)objectlayout7372)->values[2] = instancevariable13907;
((Type_Array)objectlayout7372)->values[3] = instancevariable13908;
((Type_Array)objectlayout7372)->values[4] = instancevariable13909;
symbol30545 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class5217 = (Object)new_Class_withMeta((Object)class5216, empty_object_layout, objectlayout7372);
((Type_Class)class5217)->name = (Type_Symbol)symbol30545;
metaclass4419 = (Object)HEADER(class5217);
classreference11492 = (Object)new_Organization_ClassReference((Type_Class)class5217);
objectlayout7373 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7373)->values[0] = instancevariable13905;
((Type_Array)objectlayout7373)->values[1] = instancevariable13906;
((Type_Array)objectlayout7373)->values[2] = instancevariable13907;
((Type_Array)objectlayout7373)->values[3] = instancevariable13908;
((Type_Array)objectlayout7373)->values[4] = instancevariable13909;
symbol30428 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout7374 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable13917 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout7374)->values[0] = instancevariable13917;
instancevariable13918 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout7374)->values[1] = instancevariable13918;
instancevariable13919 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout7374)->values[2] = instancevariable13919;
class5218 = (Object)new_Class_withMeta((Object)class5216, objectlayout7374, objectlayout7373);
((Type_Class)class5218)->name = (Type_Symbol)symbol30428;
metaclass4420 = (Object)HEADER(class5218);
classreference11493 = (Object)new_Organization_ClassReference((Type_Class)class5218);
// new
send107286 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
assign13557 = (Object)new_AST_Assign((Object)instancevariable13916, (Object)send107286);
method31101 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1707, assign13557, Self);
methodclosure31007 = (Object)new_Runtime_MethodClosure(method31101);
store_method((Type_Class)class5214, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31007);


// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method31102 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13916);
symbol30585 = (Object)new_Type_Symbol_cached(L"keywords");
methodclosure31008 = (Object)new_Runtime_MethodClosure(method31102);
store_method((Type_Class)class5214, (Type_Symbol)symbol30585, (Runtime_MethodClosure)methodclosure31008);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol30741 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string10740 = (Object)new_Type_String(L":");
constant23426 = (Object)new_AST_Constant((Object)string10740);
// joinUsing:
send107287 = (Object)new_AST_Send((Object)instancevariable13916, (Object)symbol30741, 1, (Object)constant23426);
string10741 = (Object)new_Type_String(L":");
constant23427 = (Object)new_AST_Constant((Object)string10741);
// ,
send107288 = (Object)new_AST_Send((Object)send107287, (Object)SMB__concat, 1, (Object)constant23427);
method31103 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107288);
methodclosure31009 = (Object)new_Runtime_MethodClosure(method31103);
store_method((Type_Class)class5214, (Type_Symbol)symbol30581, (Runtime_MethodClosure)methodclosure31009);

objectlayout7375 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7375)->values[0] = instancevariable13905;
((Type_Array)objectlayout7375)->values[1] = instancevariable13906;
((Type_Array)objectlayout7375)->values[2] = instancevariable13907;
((Type_Array)objectlayout7375)->values[3] = instancevariable13908;
((Type_Array)objectlayout7375)->values[4] = instancevariable13909;
symbol30491 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout7376 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7376)->values[0] = instancevariable13910;
((Type_Array)objectlayout7376)->values[1] = instancevariable13915;
((Type_Array)objectlayout7376)->values[2] = instancevariable13916;
instancevariable13920 = (Object)new_AST_InstVariable(3, L"arguments");
((Type_Array)objectlayout7376)->values[3] = instancevariable13920;
class5219 = (Object)new_Class_withMeta((Object)class5214, objectlayout7376, objectlayout7375);
((Type_Class)class5219)->name = (Type_Symbol)symbol30491;
metaclass4421 = (Object)HEADER(class5219);

// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable18066 = (Object)new_AST_Variable_named(L"anObject");
array16384 = (Object)new_Type_Array_with(1, (Object)localvariable18066);
assign13558 = (Object)new_AST_Assign((Object)instancevariable13920, (Object)localvariable18066);
method31104 = (Object)new_AST_Method_with((Type_Array)array16384, (Type_Array)empty_Type_Array, 2, assign13558, Self);
symbol30590 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure31010 = (Object)new_Runtime_MethodClosure(method31104);
store_method((Type_Class)class5219, (Type_Symbol)symbol30590, (Runtime_MethodClosure)methodclosure31010);


// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method31105 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13920);
symbol30587 = (Object)new_Type_Symbol_cached(L"arguments");
methodclosure31011 = (Object)new_Runtime_MethodClosure(method31105);
store_method((Type_Class)class5219, (Type_Symbol)symbol30587, (Runtime_MethodClosure)methodclosure31011);

classreference11494 = (Object)new_Organization_ClassReference((Type_Class)class5219);
classreference11495 = (Object)new_Organization_ClassReference((Type_Class)class5214);
objectlayout7377 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7377)->values[0] = instancevariable13905;
((Type_Array)objectlayout7377)->values[1] = instancevariable13906;
((Type_Array)objectlayout7377)->values[2] = instancevariable13907;
((Type_Array)objectlayout7377)->values[3] = instancevariable13908;
((Type_Array)objectlayout7377)->values[4] = instancevariable13909;
symbol30472 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout7378 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
((Type_Array)objectlayout7378)->values[0] = instancevariable13910;
class5220 = (Object)new_Class_withMeta((Object)class5209, objectlayout7378, objectlayout7377);
((Type_Class)class5220)->name = (Type_Symbol)symbol30472;
metaclass4422 = (Object)HEADER(class5220);
classreference11496 = (Object)new_Organization_ClassReference((Type_Class)class5220);
objectlayout7379 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7379)->values[0] = instancevariable13905;
((Type_Array)objectlayout7379)->values[1] = instancevariable13906;
((Type_Array)objectlayout7379)->values[2] = instancevariable13907;
((Type_Array)objectlayout7379)->values[3] = instancevariable13908;
((Type_Array)objectlayout7379)->values[4] = instancevariable13909;
symbol30454 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout7380 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7380)->values[0] = instancevariable13910;
((Type_Array)objectlayout7380)->values[1] = instancevariable13915;
class5221 = (Object)new_Class_withMeta((Object)class5213, objectlayout7380, objectlayout7379);
((Type_Class)class5221)->name = (Type_Symbol)symbol30454;
metaclass4423 = (Object)HEADER(class5221);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send107289 = (Object)new_AST_Send((Object)Self, (Object)symbol30580, 0);
symbol30563 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send107290 = (Object)new_AST_Send((Object)send107289, (Object)symbol30563, 0);
method31106 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107290);
symbol30592 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
methodclosure31012 = (Object)new_Runtime_MethodClosure(method31106);
store_method((Type_Class)class5221, (Type_Symbol)symbol30592, (Runtime_MethodClosure)methodclosure31012);

objectlayout7381 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7381)->values[0] = instancevariable13905;
((Type_Array)objectlayout7381)->values[1] = instancevariable13906;
((Type_Array)objectlayout7381)->values[2] = instancevariable13907;
((Type_Array)objectlayout7381)->values[3] = instancevariable13908;
((Type_Array)objectlayout7381)->values[4] = instancevariable13909;
symbol30492 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout7382 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7382)->values[0] = instancevariable13910;
((Type_Array)objectlayout7382)->values[1] = instancevariable13915;
class5222 = (Object)new_Class_withMeta((Object)class5221, objectlayout7382, objectlayout7381);
((Type_Class)class5222)->name = (Type_Symbol)symbol30492;
metaclass4424 = (Object)HEADER(class5222);
classreference11497 = (Object)new_Organization_ClassReference((Type_Class)class5222);
objectlayout7383 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7383)->values[0] = instancevariable13905;
((Type_Array)objectlayout7383)->values[1] = instancevariable13906;
((Type_Array)objectlayout7383)->values[2] = instancevariable13907;
((Type_Array)objectlayout7383)->values[3] = instancevariable13908;
((Type_Array)objectlayout7383)->values[4] = instancevariable13909;
symbol30541 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout7384 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
((Type_Array)objectlayout7384)->values[0] = instancevariable13910;
class5223 = (Object)new_Class_withMeta((Object)class5209, objectlayout7384, objectlayout7383);
((Type_Class)class5223)->name = (Type_Symbol)symbol30541;
metaclass4425 = (Object)HEADER(class5223);
objectlayout7385 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7385)->values[0] = instancevariable13905;
((Type_Array)objectlayout7385)->values[1] = instancevariable13906;
((Type_Array)objectlayout7385)->values[2] = instancevariable13907;
((Type_Array)objectlayout7385)->values[3] = instancevariable13908;
((Type_Array)objectlayout7385)->values[4] = instancevariable13909;
symbol30445 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout7386 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7386)->values[0] = instancevariable13910;
instancevariable13921 = (Object)new_AST_InstVariable(1, L"number");
((Type_Array)objectlayout7386)->values[1] = instancevariable13921;
instancevariable13922 = (Object)new_AST_InstVariable(2, L"base");
((Type_Array)objectlayout7386)->values[2] = instancevariable13922;
class5224 = (Object)new_Class_withMeta((Object)class5223, objectlayout7386, objectlayout7385);
((Type_Class)class5224)->name = (Type_Symbol)symbol30445;
metaclass4426 = (Object)HEADER(class5224);

// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable18067 = (Object)new_AST_Variable_named(L"anObject");
array16385 = (Object)new_Type_Array_with(1, (Object)localvariable18067);
assign13559 = (Object)new_AST_Assign((Object)instancevariable13922, (Object)localvariable18067);
method31107 = (Object)new_AST_Method_with((Type_Array)array16385, (Type_Array)empty_Type_Array, 2, assign13559, Self);
symbol30561 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure31013 = (Object)new_Runtime_MethodClosure(method31107);
store_method((Type_Class)class5224, (Type_Symbol)symbol30561, (Runtime_MethodClosure)methodclosure31013);


// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger
objectlayout7387 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7387)->values[0] = instancevariable13905;
((Type_Array)objectlayout7387)->values[1] = instancevariable13906;
((Type_Array)objectlayout7387)->values[2] = instancevariable13907;
((Type_Array)objectlayout7387)->values[3] = instancevariable13908;
((Type_Array)objectlayout7387)->values[4] = instancevariable13909;
symbol30423 = (Object)new_Type_Symbol_cached(L"Type");
class5225 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7387);
((Type_Class)class5225)->name = (Type_Symbol)symbol30423;
metaclass4427 = (Object)HEADER(class5225);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable18068 = (Object)new_AST_Variable_named(L"aMessage");
array16386 = (Object)new_Type_Array_with(1, (Object)localvariable18068);
localvariable18069 = (Object)new_AST_Variable_named(L"selector");
array16387 = (Object)new_Type_Array_with(1, (Object)localvariable18069);
variable1214 = (Object)new_AST_Variable_named(L"return");
array16388 = (Object)new_Type_Array_with(1, (Object)variable1214);
// selector
send107291 = (Object)new_AST_Send((Object)localvariable18068, (Object)symbol30580, 0);
constant23428 = (Object)new_AST_Constant((Object)symbol30735);
// =
send107292 = (Object)new_AST_Send((Object)send107291, (Object)SMB__equal, 1, (Object)constant23428);
super1708 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable18068);
// escape:
send107293 = (Object)new_AST_Send((Object)variable1214, (Object)SMB_escape_, 1, (Object)super1708);
block7283 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107293);
// ifFalse:
send107294 = (Object)new_AST_Send((Object)send107292, (Object)SMB_ifFalse_, 1, (Object)block7283);
string10742 = (Object)new_Type_String(L"visit");
constant23429 = (Object)new_AST_Constant((Object)string10742);
// objectName
send107295 = (Object)new_AST_Send((Object)Self, (Object)symbol30409, 0);
// ,
send107296 = (Object)new_AST_Send((Object)constant23429, (Object)SMB__concat, 1, (Object)send107295);
string10743 = (Object)new_Type_String(L":");
constant23430 = (Object)new_AST_Constant((Object)string10743);
// ,
send107297 = (Object)new_AST_Send((Object)send107296, (Object)SMB__concat, 1, (Object)constant23430);
// asSymbol
send107298 = (Object)new_AST_Send((Object)send107297, (Object)SMB_asSymbol, 0);
assign13560 = (Object)new_AST_Assign((Object)localvariable18069, (Object)send107298);
// argument
send107299 = (Object)new_AST_Send((Object)localvariable18068, (Object)symbol30598, 0);
// perform:with:
send107300 = (Object)new_AST_Send((Object)send107299, (Object)symbol30736, 2, (Object)localvariable18069, (Object)Self);
block7284 = (Object)new_AST_Block_with((Type_Array)array16388, (Type_Array)empty_Type_Array, 1, 3, send107294, assign13560, send107300);
// on:
send107301 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7284);
method31108 = (Object)new_AST_Method_with((Type_Array)array16386, (Type_Array)array16387, 1, send107301);
methodclosure31014 = (Object)new_Runtime_MethodClosure(method31108);
store_method((Type_Class)class5225, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure31014);

objectlayout7388 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7388)->values[0] = instancevariable13905;
((Type_Array)objectlayout7388)->values[1] = instancevariable13906;
((Type_Array)objectlayout7388)->values[2] = instancevariable13907;
((Type_Array)objectlayout7388)->values[3] = instancevariable13908;
((Type_Array)objectlayout7388)->values[4] = instancevariable13909;
symbol30556 = (Object)new_Type_Symbol_cached(L"SmallInt");
objectlayout7389 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13923 = (Object)new_AST_InstVariable(0, L"int");
((Type_Array)objectlayout7389)->values[0] = instancevariable13923;
class5226 = (Object)new_Class_withMeta((Object)class5225, objectlayout7389, objectlayout7388);
((Type_Class)class5226)->name = (Type_Symbol)symbol30556;
metaclass4428 = (Object)HEADER(class5226);

// SmallInt>>int
//int
// 	^ int
method31109 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13923);
symbol30717 = (Object)new_Type_Symbol_cached(L"int");
methodclosure31015 = (Object)new_Runtime_MethodClosure(method31109);
store_method((Type_Class)class5226, (Type_Symbol)symbol30717, (Runtime_MethodClosure)methodclosure31015);


// SmallInt>>int:
//int: anObject
// 	int := anObject
localvariable18070 = (Object)new_AST_Variable_named(L"anObject");
array16389 = (Object)new_Type_Array_with(1, (Object)localvariable18070);
assign13561 = (Object)new_AST_Assign((Object)instancevariable13923, (Object)localvariable18070);
method31110 = (Object)new_AST_Method_with((Type_Array)array16389, (Type_Array)empty_Type_Array, 2, assign13561, Self);
symbol30718 = (Object)new_Type_Symbol_cached(L"int:");
methodclosure31016 = (Object)new_Runtime_MethodClosure(method31110);
store_method((Type_Class)class5226, (Type_Symbol)symbol30718, (Runtime_MethodClosure)methodclosure31016);


// SmallInt>>=
//= other
// 	^ self class = other class and: [ self int = other int ]
localvariable18071 = (Object)new_AST_Variable_named(L"other");
array16390 = (Object)new_Type_Array_with(1, (Object)localvariable18071);
// class
send107302 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send107303 = (Object)new_AST_Send((Object)localvariable18071, (Object)SMB_class, 0);
// =
send107304 = (Object)new_AST_Send((Object)send107302, (Object)SMB__equal, 1, (Object)send107303);
symbol30742 = (Object)new_Type_Symbol_cached(L"and:");
// int
send107305 = (Object)new_AST_Send((Object)Self, (Object)symbol30717, 0);
// int
send107306 = (Object)new_AST_Send((Object)localvariable18071, (Object)symbol30717, 0);
// =
send107307 = (Object)new_AST_Send((Object)send107305, (Object)SMB__equal, 1, (Object)send107306);
block7285 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107307);
// and:
send107308 = (Object)new_AST_Send((Object)send107304, (Object)symbol30742, 1, (Object)block7285);
method31111 = (Object)new_AST_Method_with((Type_Array)array16390, (Type_Array)empty_Type_Array, 1, send107308);
methodclosure31017 = (Object)new_Runtime_MethodClosure(method31111);
store_method((Type_Class)class5226, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure31017);

classreference11498 = (Object)new_Organization_ClassReference((Type_Class)class5226);
// new
send107309 = (Object)new_AST_Send((Object)classreference11498, (Object)symbol30416, 0);
symbol30558 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send107310 = (Object)new_AST_Send((Object)Self, (Object)symbol30558, 0);
// int:
send107311 = (Object)new_AST_Send((Object)send107309, (Object)symbol30718, 1, (Object)send107310);
method31112 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107311);
symbol30557 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure31018 = (Object)new_Runtime_MethodClosure(method31112);
store_method((Type_Class)class5224, (Type_Symbol)symbol30557, (Runtime_MethodClosure)methodclosure31018);


// ASTNumber>>base
//base
// 	^ base
method31113 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13922);
symbol30559 = (Object)new_Type_Symbol_cached(L"base");
methodclosure31019 = (Object)new_Runtime_MethodClosure(method31113);
store_method((Type_Class)class5224, (Type_Symbol)symbol30559, (Runtime_MethodClosure)methodclosure31019);


// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable18072 = (Object)new_AST_Variable_named(L"anObject");
array16391 = (Object)new_Type_Array_with(1, (Object)localvariable18072);
assign13562 = (Object)new_AST_Assign((Object)instancevariable13921, (Object)localvariable18072);
method31114 = (Object)new_AST_Method_with((Type_Array)array16391, (Type_Array)empty_Type_Array, 2, assign13562, Self);
symbol30560 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure31020 = (Object)new_Runtime_MethodClosure(method31114);
store_method((Type_Class)class5224, (Type_Symbol)symbol30560, (Runtime_MethodClosure)methodclosure31020);


// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
// base
send107312 = (Object)new_AST_Send((Object)Self, (Object)symbol30559, 0);
string10744 = (Object)new_Type_String(L"r");
constant23431 = (Object)new_AST_Constant((Object)string10744);
// ,
send107313 = (Object)new_AST_Send((Object)send107312, (Object)SMB__concat, 1, (Object)constant23431);
symbol30562 = (Object)new_Type_Symbol_cached(L"number");
// number
send107314 = (Object)new_AST_Send((Object)Self, (Object)symbol30562, 0);
// ,
send107315 = (Object)new_AST_Send((Object)send107313, (Object)SMB__concat, 1, (Object)send107314);
symbol30743 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send107316 = (Object)new_AST_Send((Object)send107315, (Object)symbol30743, 0);
// asInteger
send107317 = (Object)new_AST_Send((Object)send107316, (Object)symbol30558, 0);
method31115 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107317);
methodclosure31021 = (Object)new_Runtime_MethodClosure(method31115);
store_method((Type_Class)class5224, (Type_Symbol)symbol30558, (Runtime_MethodClosure)methodclosure31021);


// ASTNumber>>number
//number
// 	^ number
method31116 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13921);
methodclosure31022 = (Object)new_Runtime_MethodClosure(method31116);
store_method((Type_Class)class5224, (Type_Symbol)symbol30562, (Runtime_MethodClosure)methodclosure31022);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable18073 = (Object)new_AST_Variable_named(L"aStream");
array16392 = (Object)new_Type_Array_with(1, (Object)localvariable18073);
// number
send107318 = (Object)new_AST_Send((Object)Self, (Object)symbol30562, 0);
// nextPutAll:
send107319 = (Object)new_AST_Send((Object)localvariable18073, (Object)symbol30734, 1, (Object)send107318);
method31117 = (Object)new_AST_Method_with((Type_Array)array16392, (Type_Array)empty_Type_Array, 2, send107319, Self);
methodclosure31023 = (Object)new_Runtime_MethodClosure(method31117);
store_method((Type_Class)class5224, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31023);

classreference11499 = (Object)new_Organization_ClassReference((Type_Class)class5224);
classreference11500 = (Object)new_Organization_ClassReference((Type_Class)class5223);
objectlayout7390 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7390)->values[0] = instancevariable13905;
((Type_Array)objectlayout7390)->values[1] = instancevariable13906;
((Type_Array)objectlayout7390)->values[2] = instancevariable13907;
((Type_Array)objectlayout7390)->values[3] = instancevariable13908;
((Type_Array)objectlayout7390)->values[4] = instancevariable13909;
symbol30465 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout7391 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7391)->values[0] = instancevariable13910;
instancevariable13924 = (Object)new_AST_InstVariable(1, L"message");
((Type_Array)objectlayout7391)->values[1] = instancevariable13924;
instancevariable13925 = (Object)new_AST_InstVariable(2, L"annotations");
((Type_Array)objectlayout7391)->values[2] = instancevariable13925;
instancevariable13926 = (Object)new_AST_InstVariable(3, L"temporaries");
((Type_Array)objectlayout7391)->values[3] = instancevariable13926;
instancevariable13927 = (Object)new_AST_InstVariable(4, L"statements");
((Type_Array)objectlayout7391)->values[4] = instancevariable13927;
class5227 = (Object)new_Class_withMeta((Object)class5209, objectlayout7391, objectlayout7390);
((Type_Class)class5227)->name = (Type_Symbol)symbol30465;
metaclass4429 = (Object)HEADER(class5227);

// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable18074 = (Object)new_AST_Variable_named(L"anObject");
array16393 = (Object)new_Type_Array_with(1, (Object)localvariable18074);
assign13563 = (Object)new_AST_Assign((Object)instancevariable13924, (Object)localvariable18074);
method31118 = (Object)new_AST_Method_with((Type_Array)array16393, (Type_Array)empty_Type_Array, 2, assign13563, Self);
symbol30600 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure31024 = (Object)new_Runtime_MethodClosure(method31118);
store_method((Type_Class)class5227, (Type_Symbol)symbol30600, (Runtime_MethodClosure)methodclosure31024);


// ASTMethod>>statements
//statements
// 	^ statements
method31119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13927);
symbol30599 = (Object)new_Type_Symbol_cached(L"statements");
methodclosure31025 = (Object)new_Runtime_MethodClosure(method31119);
store_method((Type_Class)class5227, (Type_Symbol)symbol30599, (Runtime_MethodClosure)methodclosure31025);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method31120 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13926);
symbol30604 = (Object)new_Type_Symbol_cached(L"temporaries");
methodclosure31026 = (Object)new_Runtime_MethodClosure(method31120);
store_method((Type_Class)class5227, (Type_Symbol)symbol30604, (Runtime_MethodClosure)methodclosure31026);


// ASTMethod>>annotations
//annotations
// 	^ annotations
method31121 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13925);
symbol30601 = (Object)new_Type_Symbol_cached(L"annotations");
methodclosure31027 = (Object)new_Runtime_MethodClosure(method31121);
store_method((Type_Class)class5227, (Type_Symbol)symbol30601, (Runtime_MethodClosure)methodclosure31027);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable18075 = (Object)new_AST_Variable_named(L"anObject");
array16394 = (Object)new_Type_Array_with(1, (Object)localvariable18075);
assign13564 = (Object)new_AST_Assign((Object)instancevariable13926, (Object)localvariable18075);
method31122 = (Object)new_AST_Method_with((Type_Array)array16394, (Type_Array)empty_Type_Array, 2, assign13564, Self);
symbol30605 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure31028 = (Object)new_Runtime_MethodClosure(method31122);
store_method((Type_Class)class5227, (Type_Symbol)symbol30605, (Runtime_MethodClosure)methodclosure31028);


// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
// statements
send107320 = (Object)new_AST_Send((Object)Self, (Object)symbol30599, 0);
symbol30588 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
// hasReturnExpression
send107321 = (Object)new_AST_Send((Object)send107320, (Object)symbol30588, 0);
method31123 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107321);
methodclosure31029 = (Object)new_Runtime_MethodClosure(method31123);
store_method((Type_Class)class5227, (Type_Symbol)symbol30588, (Runtime_MethodClosure)methodclosure31029);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable18076 = (Object)new_AST_Variable_named(L"anObject");
array16395 = (Object)new_Type_Array_with(1, (Object)localvariable18076);
assign13565 = (Object)new_AST_Assign((Object)instancevariable13927, (Object)localvariable18076);
method31124 = (Object)new_AST_Method_with((Type_Array)array16395, (Type_Array)empty_Type_Array, 2, assign13565, Self);
symbol30602 = (Object)new_Type_Symbol_cached(L"statements:");
methodclosure31030 = (Object)new_Runtime_MethodClosure(method31124);
store_method((Type_Class)class5227, (Type_Symbol)symbol30602, (Runtime_MethodClosure)methodclosure31030);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable18077 = (Object)new_AST_Variable_named(L"anObject");
array16396 = (Object)new_Type_Array_with(1, (Object)localvariable18077);
assign13566 = (Object)new_AST_Assign((Object)instancevariable13925, (Object)localvariable18077);
method31125 = (Object)new_AST_Method_with((Type_Array)array16396, (Type_Array)empty_Type_Array, 2, assign13566, Self);
symbol30606 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure31031 = (Object)new_Runtime_MethodClosure(method31125);
store_method((Type_Class)class5227, (Type_Symbol)symbol30606, (Runtime_MethodClosure)methodclosure31031);


// ASTMethod>>message
//message
// 	^ message
method31126 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13924);
symbol30603 = (Object)new_Type_Symbol_cached(L"message");
methodclosure31032 = (Object)new_Runtime_MethodClosure(method31126);
store_method((Type_Class)class5227, (Type_Symbol)symbol30603, (Runtime_MethodClosure)methodclosure31032);


// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable18078 = (Object)new_AST_Variable_named(L"receiver");
array16397 = (Object)new_Type_Array_with(1, (Object)localvariable18078);
smallint10767 = (Object)new_Type_SmallInt(1);
constant23432 = (Object)new_AST_Constant((Object)smallint10767);
constant23433 = (Object)new_AST_Constant((Object)symbol30601);
// at:put:
send107322 = (Object)new_AST_Send((Object)localvariable18078, (Object)SMB_at_put_, 2, (Object)constant23432, (Object)constant23433);
smallint10768 = (Object)new_Type_SmallInt(2);
constant23434 = (Object)new_AST_Constant((Object)smallint10768);
constant23435 = (Object)new_AST_Constant((Object)symbol30603);
// at:put:
send107323 = (Object)new_AST_Send((Object)localvariable18078, (Object)SMB_at_put_, 2, (Object)constant23434, (Object)constant23435);
smallint10769 = (Object)new_Type_SmallInt(3);
constant23436 = (Object)new_AST_Constant((Object)smallint10769);
constant23437 = (Object)new_AST_Constant((Object)symbol30599);
// at:put:
send107324 = (Object)new_AST_Send((Object)localvariable18078, (Object)SMB_at_put_, 2, (Object)constant23436, (Object)constant23437);
smallint10770 = (Object)new_Type_SmallInt(4);
constant23438 = (Object)new_AST_Constant((Object)smallint10770);
constant23439 = (Object)new_AST_Constant((Object)symbol30604);
// at:put:
send107325 = (Object)new_AST_Send((Object)localvariable18078, (Object)SMB_at_put_, 2, (Object)constant23438, (Object)constant23439);
// yourself
send107326 = (Object)new_AST_Send((Object)localvariable18078, (Object)symbol30410, 0);
block7286 = (Object)new_AST_Block_with((Type_Array)array16397, (Type_Array)empty_Type_Array, 1, 5, send107322, send107323, send107324, send107325, send107326);
smallint10771 = (Object)new_Type_SmallInt(4);
constant23440 = (Object)new_AST_Constant((Object)smallint10771);
// new:
send107327 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23440);
// value:
send107328 = (Object)new_AST_Send((Object)block7286, (Object)SMB_value_, 1, (Object)send107327);
method31127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107328);
symbol30607 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure31033 = (Object)new_Runtime_MethodClosure(method31127);
store_method((Type_Class)class5227, (Type_Symbol)symbol30607, (Runtime_MethodClosure)methodclosure31033);


// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable18079 = (Object)new_AST_Variable_named(L"aStream");
array16398 = (Object)new_Type_Array_with(1, (Object)localvariable18079);
super1709 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18079);
string10745 = (Object)new_Type_String(L"(");
constant23441 = (Object)new_AST_Constant((Object)string10745);
// nextPutAll:
send107329 = (Object)new_AST_Send((Object)localvariable18079, (Object)symbol30734, 1, (Object)constant23441);
// message
send107330 = (Object)new_AST_Send((Object)Self, (Object)symbol30603, 0);
// printOn:
send107331 = (Object)new_AST_Send((Object)send107330, (Object)symbol30431, 1, (Object)localvariable18079);
string10746 = (Object)new_Type_String(L")");
constant23442 = (Object)new_AST_Constant((Object)string10746);
// nextPutAll:
send107332 = (Object)new_AST_Send((Object)localvariable18079, (Object)symbol30734, 1, (Object)constant23442);
method31128 = (Object)new_AST_Method_with((Type_Array)array16398, (Type_Array)empty_Type_Array, 5, super1709, send107329, send107331, send107332, Self);
methodclosure31034 = (Object)new_Runtime_MethodClosure(method31128);
store_method((Type_Class)class5227, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31034);

classreference11501 = (Object)new_Organization_ClassReference((Type_Class)class5227);
objectlayout7392 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7392)->values[0] = instancevariable13905;
((Type_Array)objectlayout7392)->values[1] = instancevariable13906;
((Type_Array)objectlayout7392)->values[2] = instancevariable13907;
((Type_Array)objectlayout7392)->values[3] = instancevariable13908;
((Type_Array)objectlayout7392)->values[4] = instancevariable13909;
symbol30593 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout7393 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7393)->values[0] = instancevariable13910;
((Type_Array)objectlayout7393)->values[1] = instancevariable13915;
class5228 = (Object)new_Class_withMeta((Object)class5213, objectlayout7393, objectlayout7392);
((Type_Class)class5228)->name = (Type_Symbol)symbol30593;
metaclass4430 = (Object)HEADER(class5228);
objectlayout7394 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7394)->values[0] = instancevariable13905;
((Type_Array)objectlayout7394)->values[1] = instancevariable13906;
((Type_Array)objectlayout7394)->values[2] = instancevariable13907;
((Type_Array)objectlayout7394)->values[3] = instancevariable13908;
((Type_Array)objectlayout7394)->values[4] = instancevariable13909;
symbol30457 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout7395 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7395)->values[0] = instancevariable13910;
((Type_Array)objectlayout7395)->values[1] = instancevariable13915;
instancevariable13928 = (Object)new_AST_InstVariable(2, L"parameter");
((Type_Array)objectlayout7395)->values[2] = instancevariable13928;
class5229 = (Object)new_Class_withMeta((Object)class5228, objectlayout7395, objectlayout7394);
((Type_Class)class5229)->name = (Type_Symbol)symbol30457;
metaclass4431 = (Object)HEADER(class5229);

// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method31129 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13928);
symbol30594 = (Object)new_Type_Symbol_cached(L"parameter");
methodclosure31035 = (Object)new_Runtime_MethodClosure(method31129);
store_method((Type_Class)class5229, (Type_Symbol)symbol30594, (Runtime_MethodClosure)methodclosure31035);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send107333 = (Object)new_AST_Send((Object)Self, (Object)symbol30580, 0);
// symbol
send107334 = (Object)new_AST_Send((Object)send107333, (Object)symbol30563, 0);
method31130 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107334);
methodclosure31036 = (Object)new_Runtime_MethodClosure(method31130);
store_method((Type_Class)class5229, (Type_Symbol)symbol30592, (Runtime_MethodClosure)methodclosure31036);


// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
symbol30547 = (Object)new_Type_Symbol_cached(L"with:");
// parameter
send107335 = (Object)new_AST_Send((Object)Self, (Object)symbol30594, 0);
// with:
send107336 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30547, 1, (Object)send107335);
method31131 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107336);
methodclosure31037 = (Object)new_Runtime_MethodClosure(method31131);
store_method((Type_Class)class5229, (Type_Symbol)symbol30582, (Runtime_MethodClosure)methodclosure31037);


// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable18080 = (Object)new_AST_Variable_named(L"anObject");
array16399 = (Object)new_Type_Array_with(1, (Object)localvariable18080);
assign13567 = (Object)new_AST_Assign((Object)instancevariable13928, (Object)localvariable18080);
method31132 = (Object)new_AST_Method_with((Type_Array)array16399, (Type_Array)empty_Type_Array, 2, assign13567, Self);
symbol30595 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure31038 = (Object)new_Runtime_MethodClosure(method31132);
store_method((Type_Class)class5229, (Type_Symbol)symbol30595, (Runtime_MethodClosure)methodclosure31038);

classreference11502 = (Object)new_Organization_ClassReference((Type_Class)class5229);
objectlayout7396 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7396)->values[0] = instancevariable13905;
((Type_Array)objectlayout7396)->values[1] = instancevariable13906;
((Type_Array)objectlayout7396)->values[2] = instancevariable13907;
((Type_Array)objectlayout7396)->values[3] = instancevariable13908;
((Type_Array)objectlayout7396)->values[4] = instancevariable13909;
symbol30571 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout7397 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
((Type_Array)objectlayout7397)->values[0] = instancevariable13910;
class5230 = (Object)new_Class_withMeta((Object)class5209, objectlayout7397, objectlayout7396);
((Type_Class)class5230)->name = (Type_Symbol)symbol30571;
metaclass4432 = (Object)HEADER(class5230);
objectlayout7398 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7398)->values[0] = instancevariable13905;
((Type_Array)objectlayout7398)->values[1] = instancevariable13906;
((Type_Array)objectlayout7398)->values[2] = instancevariable13907;
((Type_Array)objectlayout7398)->values[3] = instancevariable13908;
((Type_Array)objectlayout7398)->values[4] = instancevariable13909;
symbol30684 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout7399 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7399)->values[0] = instancevariable13910;
instancevariable13929 = (Object)new_AST_InstVariable(1, L"expressions");
((Type_Array)objectlayout7399)->values[1] = instancevariable13929;
class5231 = (Object)new_Class_withMeta((Object)class5230, objectlayout7399, objectlayout7398);
((Type_Class)class5231)->name = (Type_Symbol)symbol30684;
metaclass4433 = (Object)HEADER(class5231);

// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable1215 = (Object)new_AST_Variable_named(L"return");
array16400 = (Object)new_Type_Array_with(1, (Object)variable1215);
symbol30744 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send107337 = (Object)new_AST_Send((Object)Self, (Object)symbol30744, 0);
localvariable18081 = (Object)new_AST_Variable_named(L"el");
array16401 = (Object)new_Type_Array_with(1, (Object)localvariable18081);
// isReturnExpression
send107338 = (Object)new_AST_Send((Object)localvariable18081, (Object)symbol30408, 0);
symbol30745 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
// hasReturnExpression
send107339 = (Object)new_AST_Send((Object)localvariable18081, (Object)symbol30588, 0);
block7287 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107339);
// escape:
send107340 = (Object)new_AST_Send((Object)variable1215, (Object)SMB_escape_, 1, (Object)True_Const);
block7288 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107340);
// or:ifTrue:
send107341 = (Object)new_AST_Send((Object)send107338, (Object)symbol30745, 2, (Object)block7287, (Object)block7288);
block7289 = (Object)new_AST_Block_with((Type_Array)array16401, (Type_Array)empty_Type_Array, 2, 1, send107341);
// do:
send107342 = (Object)new_AST_Send((Object)send107337, (Object)symbol30552, 1, (Object)block7289);
block7290 = (Object)new_AST_Block_with((Type_Array)array16400, (Type_Array)empty_Type_Array, 1, 2, send107342, False_Const);
// on:
send107343 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7290);
method31133 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107343);
methodclosure31039 = (Object)new_Runtime_MethodClosure(method31133);
store_method((Type_Class)class5231, (Type_Symbol)symbol30588, (Runtime_MethodClosure)methodclosure31039);


// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable18082 = (Object)new_AST_Variable_named(L"newExpressions");
array16402 = (Object)new_Type_Array_with(1, (Object)localvariable18082);
assign13568 = (Object)new_AST_Assign((Object)instancevariable13929, (Object)localvariable18082);
method31134 = (Object)new_AST_Method_with((Type_Array)array16402, (Type_Array)empty_Type_Array, 2, assign13568, Self);
symbol30722 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure31040 = (Object)new_Runtime_MethodClosure(method31134);
store_method((Type_Class)class5231, (Type_Symbol)symbol30722, (Runtime_MethodClosure)methodclosure31040);

classreference11503 = (Object)new_Organization_ClassReference((Type_Class)class5231);
objectlayout7400 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7400)->values[0] = instancevariable13905;
((Type_Array)objectlayout7400)->values[1] = instancevariable13906;
((Type_Array)objectlayout7400)->values[2] = instancevariable13907;
((Type_Array)objectlayout7400)->values[3] = instancevariable13908;
((Type_Array)objectlayout7400)->values[4] = instancevariable13909;
symbol30446 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout7401 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7401)->values[0] = instancevariable13910;
instancevariable13930 = (Object)new_AST_InstVariable(1, L"symbol");
((Type_Array)objectlayout7401)->values[1] = instancevariable13930;
class5232 = (Object)new_Class_withMeta((Object)class5223, objectlayout7401, objectlayout7400);
((Type_Class)class5232)->name = (Type_Symbol)symbol30446;
metaclass4434 = (Object)HEADER(class5232);

// ASTSymbol>>symbol
//symbol
// 	^ symbol
method31135 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13930);
methodclosure31041 = (Object)new_Runtime_MethodClosure(method31135);
store_method((Type_Class)class5232, (Type_Symbol)symbol30563, (Runtime_MethodClosure)methodclosure31041);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol
objectlayout7402 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7402)->values[0] = instancevariable13905;
((Type_Array)objectlayout7402)->values[1] = instancevariable13906;
((Type_Array)objectlayout7402)->values[2] = instancevariable13907;
((Type_Array)objectlayout7402)->values[3] = instancevariable13908;
((Type_Array)objectlayout7402)->values[4] = instancevariable13909;
instancevariable13931 = (Object)new_AST_InstVariable(5, L"symbolDictionary");
((Type_Array)objectlayout7402)->values[5] = instancevariable13931;
symbol30564 = (Object)new_Type_Symbol_cached(L"Symbol");
objectlayout7403 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13932 = (Object)new_AST_InstVariable(0, L"symbol");
((Type_Array)objectlayout7403)->values[0] = instancevariable13932;
class5233 = (Object)new_Class_withMeta((Object)class5225, objectlayout7403, objectlayout7402);
((Type_Class)class5233)->name = (Type_Symbol)symbol30564;
metaclass4435 = (Object)HEADER(class5233);

// Symbol>>symbol
//method31136 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13932);
methodclosure31042 = (Object)new_Runtime_MethodClosure(method31136);
store_method((Type_Class)class5233, (Type_Symbol)symbol30563, (Runtime_MethodClosure)methodclosure31042);


// Symbol>>asPSymbol
//asPSymbol
// 	^ PSymbol named: self.
method31137 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30565 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure31043 = (Object)new_Runtime_MethodClosure(method31137);
store_method((Type_Class)class5233, (Type_Symbol)symbol30565, (Runtime_MethodClosure)methodclosure31043);


// Symbol>>asSymbol
//asSymbol 
// 	"Refer to the comment in String|asSymbol."
// symbol
send107344 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
method31138 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107344);
methodclosure31044 = (Object)new_Runtime_MethodClosure(method31138);
store_method((Type_Class)class5233, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure31044);


// Symbol>>asString
//asString 
// 	"Refer to the comment in String|asString."
// 	| newString |
// 	newString := self species new: self size.
// 	newString replaceFrom: 1 to: newString size with: self startingAt: 1.
// 	^newString
// symbol
send107345 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// asString
send107346 = (Object)new_AST_Send((Object)send107345, (Object)SMB_asString, 0);
method31139 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107346);
methodclosure31045 = (Object)new_Runtime_MethodClosure(method31139);
store_method((Type_Class)class5233, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure31045);


// Symbol>>symbol:
//localvariable18083 = (Object)new_AST_Variable_named(L"anObject");
array16403 = (Object)new_Type_Array_with(1, (Object)localvariable18083);
// asSymbol
send107347 = (Object)new_AST_Send((Object)localvariable18083, (Object)SMB_asSymbol, 0);
assign13569 = (Object)new_AST_Assign((Object)instancevariable13932, (Object)send107347);
method31140 = (Object)new_AST_Method_with((Type_Array)array16403, (Type_Array)empty_Type_Array, 2, assign13569, Self);
symbol30566 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure31046 = (Object)new_Runtime_MethodClosure(method31140);
store_method((Type_Class)class5233, (Type_Symbol)symbol30566, (Runtime_MethodClosure)methodclosure31046);


// Symbol>>printOn:
//printOn: aStream 
// 	"Print inside string quotes, doubling inbedded quotes."
//  
// 	self storeOn: aStream
localvariable18084 = (Object)new_AST_Variable_named(L"aStream");
array16404 = (Object)new_Type_Array_with(1, (Object)localvariable18084);
string10747 = (Object)new_Type_String(L" P");
constant23443 = (Object)new_AST_Constant((Object)string10747);
// nextPutAll:
send107348 = (Object)new_AST_Send((Object)localvariable18084, (Object)symbol30734, 1, (Object)constant23443);
// symbol
send107349 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// printOn:
send107350 = (Object)new_AST_Send((Object)send107349, (Object)symbol30431, 1, (Object)localvariable18084);
method31141 = (Object)new_AST_Method_with((Type_Array)array16404, (Type_Array)empty_Type_Array, 3, send107348, send107350, Self);
methodclosure31047 = (Object)new_Runtime_MethodClosure(method31141);
store_method((Type_Class)class5233, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31047);


// Symbol>>=
//= aSymbol
// 	"Compare the receiver and aSymbol." 
// 	self == aSymbol ifTrue: [^ true].
// 	self class == aSymbol class ifTrue: [^ false].
// 	"Use String comparison otherwise"
// 	^ super = aSymbol
localvariable18085 = (Object)new_AST_Variable_named(L"other");
array16405 = (Object)new_Type_Array_with(1, (Object)localvariable18085);
symbol30746 = (Object)new_Type_Symbol_cached(L"isKindOf:");
// class
send107351 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// isKindOf:
send107352 = (Object)new_AST_Send((Object)localvariable18085, (Object)symbol30746, 1, (Object)send107351);
// symbol
send107353 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// symbol
send107354 = (Object)new_AST_Send((Object)localvariable18085, (Object)symbol30563, 0);
// =
send107355 = (Object)new_AST_Send((Object)send107353, (Object)SMB__equal, 1, (Object)send107354);
block7291 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107355);
// and:
send107356 = (Object)new_AST_Send((Object)send107352, (Object)symbol30742, 1, (Object)block7291);
method31142 = (Object)new_AST_Method_with((Type_Array)array16405, (Type_Array)empty_Type_Array, 1, send107356);
methodclosure31048 = (Object)new_Runtime_MethodClosure(method31142);
store_method((Type_Class)class5233, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure31048);

classreference11504 = (Object)new_Organization_ClassReference((Type_Class)class5233);
// symbol
send107357 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// named:
send107358 = (Object)new_AST_Send((Object)classreference11504, (Object)symbol30518, 1, (Object)send107357);
method31143 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107358);
methodclosure31049 = (Object)new_Runtime_MethodClosure(method31143);
store_method((Type_Class)class5232, (Type_Symbol)symbol30565, (Runtime_MethodClosure)methodclosure31049);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
// symbol
send107359 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// asString
send107360 = (Object)new_AST_Send((Object)send107359, (Object)SMB_asString, 0);
method31144 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107360);
methodclosure31050 = (Object)new_Runtime_MethodClosure(method31144);
store_method((Type_Class)class5232, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure31050);


// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable18086 = (Object)new_AST_Variable_named(L"aSymbol");
array16406 = (Object)new_Type_Array_with(1, (Object)localvariable18086);
assign13570 = (Object)new_AST_Assign((Object)instancevariable13930, (Object)localvariable18086);
method31145 = (Object)new_AST_Method_with((Type_Array)array16406, (Type_Array)empty_Type_Array, 2, assign13570, Self);
methodclosure31051 = (Object)new_Runtime_MethodClosure(method31145);
store_method((Type_Class)class5232, (Type_Symbol)symbol30566, (Runtime_MethodClosure)methodclosure31051);


// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send107361 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// asSymbol
send107362 = (Object)new_AST_Send((Object)send107361, (Object)SMB_asSymbol, 0);
method31146 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107362);
methodclosure31052 = (Object)new_Runtime_MethodClosure(method31146);
store_method((Type_Class)class5232, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure31052);


// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable18087 = (Object)new_AST_Variable_named(L"aStream");
array16407 = (Object)new_Type_Array_with(1, (Object)localvariable18087);
// nextPutAll:
send107363 = (Object)new_AST_Send((Object)localvariable18087, (Object)symbol30734, 1, (Object)instancevariable13930);
method31147 = (Object)new_AST_Method_with((Type_Array)array16407, (Type_Array)empty_Type_Array, 2, send107363, Self);
methodclosure31053 = (Object)new_Runtime_MethodClosure(method31147);
store_method((Type_Class)class5232, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31053);

classreference11505 = (Object)new_Organization_ClassReference((Type_Class)class5232);
objectlayout7404 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7404)->values[0] = instancevariable13905;
((Type_Array)objectlayout7404)->values[1] = instancevariable13906;
((Type_Array)objectlayout7404)->values[2] = instancevariable13907;
((Type_Array)objectlayout7404)->values[3] = instancevariable13908;
((Type_Array)objectlayout7404)->values[4] = instancevariable13909;
symbol30618 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout7405 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7405)->values[0] = instancevariable13910;
((Type_Array)objectlayout7405)->values[1] = instancevariable13915;
class5234 = (Object)new_Class_withMeta((Object)class5221, objectlayout7405, objectlayout7404);
((Type_Class)class5234)->name = (Type_Symbol)symbol30618;
metaclass4436 = (Object)HEADER(class5234);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send107364 = (Object)new_AST_Send((Object)Self, (Object)symbol30580, 0);
// selectorSymbol
send107365 = (Object)new_AST_Send((Object)send107364, (Object)symbol30592, 0);
method31148 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107365);
methodclosure31054 = (Object)new_Runtime_MethodClosure(method31148);
store_method((Type_Class)class5234, (Type_Symbol)symbol30592, (Runtime_MethodClosure)methodclosure31054);

classreference11506 = (Object)new_Organization_ClassReference((Type_Class)class5234);
objectlayout7406 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7406)->values[0] = instancevariable13905;
((Type_Array)objectlayout7406)->values[1] = instancevariable13906;
((Type_Array)objectlayout7406)->values[2] = instancevariable13907;
((Type_Array)objectlayout7406)->values[3] = instancevariable13908;
((Type_Array)objectlayout7406)->values[4] = instancevariable13909;
symbol30450 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout7407 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7407)->values[0] = instancevariable13910;
instancevariable13933 = (Object)new_AST_InstVariable(1, L"name");
((Type_Array)objectlayout7407)->values[1] = instancevariable13933;
instancevariable13934 = (Object)new_AST_InstVariable(2, L"type");
((Type_Array)objectlayout7407)->values[2] = instancevariable13934;
class5235 = (Object)new_Class_withMeta((Object)class5209, objectlayout7407, objectlayout7406);
((Type_Class)class5235)->name = (Type_Symbol)symbol30450;
metaclass4437 = (Object)HEADER(class5235);

// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send107366 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// hash
send107367 = (Object)new_AST_Send((Object)send107366, (Object)SMB_hash, 0);
method31149 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107367);
methodclosure31055 = (Object)new_Runtime_MethodClosure(method31149);
store_method((Type_Class)class5235, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure31055);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable18088 = (Object)new_AST_Variable_named(L"anObject");
array16408 = (Object)new_Type_Array_with(1, (Object)localvariable18088);
assign13571 = (Object)new_AST_Assign((Object)instancevariable13933, (Object)localvariable18088);
method31150 = (Object)new_AST_Method_with((Type_Array)array16408, (Type_Array)empty_Type_Array, 2, assign13571, Self);
methodclosure31056 = (Object)new_Runtime_MethodClosure(method31150);
store_method((Type_Class)class5235, (Type_Symbol)symbol30520, (Runtime_MethodClosure)methodclosure31056);


// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name
// new
send107368 = (Object)new_AST_Send((Object)classreference11488, (Object)symbol30416, 0);
// name
send107369 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name:
send107370 = (Object)new_AST_Send((Object)send107368, (Object)symbol30520, 1, (Object)send107369);
method31151 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107370);
methodclosure31057 = (Object)new_Runtime_MethodClosure(method31151);
store_method((Type_Class)class5235, (Type_Symbol)symbol30524, (Runtime_MethodClosure)methodclosure31057);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable18089 = (Object)new_AST_Variable_named(L"anObject");
array16409 = (Object)new_Type_Array_with(1, (Object)localvariable18089);
symbol30415 = (Object)new_Type_Symbol_cached(L"layout");
// layout
send107371 = (Object)new_AST_Send((Object)Self, (Object)symbol30415, 0);
symbol30747 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send107372 = (Object)new_AST_Send((Object)localvariable18089, (Object)symbol30415, 0);
// isSameTypeAs:
send107373 = (Object)new_AST_Send((Object)send107371, (Object)symbol30747, 1, (Object)send107372);
method31152 = (Object)new_AST_Method_with((Type_Array)array16409, (Type_Array)empty_Type_Array, 1, send107373);
symbol30576 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure31058 = (Object)new_Runtime_MethodClosure(method31152);
store_method((Type_Class)class5235, (Type_Symbol)symbol30576, (Runtime_MethodClosure)methodclosure31058);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable18090 = (Object)new_AST_Variable_named(L"other");
array16410 = (Object)new_Type_Array_with(1, (Object)localvariable18090);
// name
send107374 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name
send107375 = (Object)new_AST_Send((Object)localvariable18090, (Object)SMB_name, 0);
// =
send107376 = (Object)new_AST_Send((Object)send107374, (Object)SMB__equal, 1, (Object)send107375);
method31153 = (Object)new_AST_Method_with((Type_Array)array16410, (Type_Array)empty_Type_Array, 1, send107376);
methodclosure31059 = (Object)new_Runtime_MethodClosure(method31153);
store_method((Type_Class)class5235, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure31059);


// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable18091 = (Object)new_AST_Variable_named(L"anObject");
array16411 = (Object)new_Type_Array_with(1, (Object)localvariable18091);
// layout
send107377 = (Object)new_AST_Send((Object)Self, (Object)symbol30415, 0);
symbol30748 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send107378 = (Object)new_AST_Send((Object)localvariable18091, (Object)symbol30415, 0);
// combineWith:
send107379 = (Object)new_AST_Send((Object)send107377, (Object)symbol30748, 1, (Object)send107378);
method31154 = (Object)new_AST_Method_with((Type_Array)array16411, (Type_Array)empty_Type_Array, 2, send107379, Self);
symbol30578 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure31060 = (Object)new_Runtime_MethodClosure(method31154);
store_method((Type_Class)class5235, (Type_Symbol)symbol30578, (Runtime_MethodClosure)methodclosure31060);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super1710 = (Object)new_AST_Super((Object)symbol30515, 0);
method31155 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1710, Self);
methodclosure31061 = (Object)new_Runtime_MethodClosure(method31155);
store_method((Type_Class)class5235, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31061);


// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable18092 = (Object)new_AST_Variable_named(L"aStream");
array16412 = (Object)new_Type_Array_with(1, (Object)localvariable18092);
super1711 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18092);
localvariable18093 = (Object)new_AST_Variable_named(L"receiver");
array16413 = (Object)new_Type_Array_with(1, (Object)localvariable18093);
string10748 = (Object)new_Type_String(L"(");
constant23444 = (Object)new_AST_Constant((Object)string10748);
// nextPutAll:
send107380 = (Object)new_AST_Send((Object)localvariable18093, (Object)symbol30734, 1, (Object)constant23444);
// name
send107381 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// nextPutAll:
send107382 = (Object)new_AST_Send((Object)localvariable18093, (Object)symbol30734, 1, (Object)send107381);
string10749 = (Object)new_Type_String(L")");
constant23445 = (Object)new_AST_Constant((Object)string10749);
// nextPutAll:
send107383 = (Object)new_AST_Send((Object)localvariable18093, (Object)symbol30734, 1, (Object)constant23445);
block7292 = (Object)new_AST_Block_with((Type_Array)array16413, (Type_Array)empty_Type_Array, 1, 3, send107380, send107382, send107383);
// value:
send107384 = (Object)new_AST_Send((Object)block7292, (Object)SMB_value_, 1, (Object)localvariable18092);
method31156 = (Object)new_AST_Method_with((Type_Array)array16412, (Type_Array)empty_Type_Array, 3, super1711, send107384, Self);
methodclosure31062 = (Object)new_Runtime_MethodClosure(method31156);
store_method((Type_Class)class5235, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31062);


// ASTVariable>>name
//name
// 	^ name
method31157 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13933);
methodclosure31063 = (Object)new_Runtime_MethodClosure(method31157);
store_method((Type_Class)class5235, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure31063);

classreference11507 = (Object)new_Organization_ClassReference((Type_Class)class5235);
objectlayout7408 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7408)->values[0] = instancevariable13905;
((Type_Array)objectlayout7408)->values[1] = instancevariable13906;
((Type_Array)objectlayout7408)->values[2] = instancevariable13907;
((Type_Array)objectlayout7408)->values[3] = instancevariable13908;
((Type_Array)objectlayout7408)->values[4] = instancevariable13909;
symbol30447 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout7409 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7409)->values[0] = instancevariable13910;
instancevariable13935 = (Object)new_AST_InstVariable(1, L"string");
((Type_Array)objectlayout7409)->values[1] = instancevariable13935;
class5236 = (Object)new_Class_withMeta((Object)class5223, objectlayout7409, objectlayout7408);
((Type_Class)class5236)->name = (Type_Symbol)symbol30447;
metaclass4438 = (Object)HEADER(class5236);

// ASTString>>string:
//string: aString
// 	string := aString
localvariable18094 = (Object)new_AST_Variable_named(L"aString");
array16414 = (Object)new_Type_Array_with(1, (Object)localvariable18094);
assign13572 = (Object)new_AST_Assign((Object)instancevariable13935, (Object)localvariable18094);
method31158 = (Object)new_AST_Method_with((Type_Array)array16414, (Type_Array)empty_Type_Array, 2, assign13572, Self);
symbol30567 = (Object)new_Type_Symbol_cached(L"string:");
methodclosure31064 = (Object)new_Runtime_MethodClosure(method31158);
store_method((Type_Class)class5236, (Type_Symbol)symbol30567, (Runtime_MethodClosure)methodclosure31064);


// ASTString>>string
//string
// 	^ string
method31159 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13935);
symbol30568 = (Object)new_Type_Symbol_cached(L"string");
methodclosure31065 = (Object)new_Runtime_MethodClosure(method31159);
store_method((Type_Class)class5236, (Type_Symbol)symbol30568, (Runtime_MethodClosure)methodclosure31065);


// ASTString>>asPString
//asPString 
// 	^PString new string: self string
objectlayout7410 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7410)->values[0] = instancevariable13905;
((Type_Array)objectlayout7410)->values[1] = instancevariable13906;
((Type_Array)objectlayout7410)->values[2] = instancevariable13907;
((Type_Array)objectlayout7410)->values[3] = instancevariable13908;
((Type_Array)objectlayout7410)->values[4] = instancevariable13909;
symbol30569 = (Object)new_Type_Symbol_cached(L"String");
objectlayout7411 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13936 = (Object)new_AST_InstVariable(0, L"string");
((Type_Array)objectlayout7411)->values[0] = instancevariable13936;
class5237 = (Object)new_Class_withMeta((Object)class5225, objectlayout7411, objectlayout7410);
((Type_Class)class5237)->name = (Type_Symbol)symbol30569;
metaclass4439 = (Object)HEADER(class5237);

// String>>string
//string
// 	^self
method31160 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13936);
methodclosure31066 = (Object)new_Runtime_MethodClosure(method31160);
store_method((Type_Class)class5237, (Type_Symbol)symbol30568, (Runtime_MethodClosure)methodclosure31066);


// String>>string:
//localvariable18095 = (Object)new_AST_Variable_named(L"aString");
array16415 = (Object)new_Type_Array_with(1, (Object)localvariable18095);
assign13573 = (Object)new_AST_Assign((Object)instancevariable13936, (Object)localvariable18095);
method31161 = (Object)new_AST_Method_with((Type_Array)array16415, (Type_Array)empty_Type_Array, 2, assign13573, Self);
methodclosure31067 = (Object)new_Runtime_MethodClosure(method31161);
store_method((Type_Class)class5237, (Type_Symbol)symbol30567, (Runtime_MethodClosure)methodclosure31067);


// String>>printOn:
//printOn: aStream 
// 	"Print inside string quotes, doubling inbedded quotes."
//  
// 	self storeOn: aStream
localvariable18096 = (Object)new_AST_Variable_named(L"aStream");
array16416 = (Object)new_Type_Array_with(1, (Object)localvariable18096);
// string
send107385 = (Object)new_AST_Send((Object)Self, (Object)symbol30568, 0);
// printOn:
send107386 = (Object)new_AST_Send((Object)send107385, (Object)symbol30431, 1, (Object)localvariable18096);
method31162 = (Object)new_AST_Method_with((Type_Array)array16416, (Type_Array)empty_Type_Array, 2, send107386, Self);
methodclosure31068 = (Object)new_Runtime_MethodClosure(method31162);
store_method((Type_Class)class5237, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31068);


// String>>=
//= aString 
// 	"Answer whether the receiver sorts equally as aString.
// 	The collation order is simple ascii (with case differences)."
// 	
// 	aString isString ifFalse: [ ^ false ].
// 	^ (self compare: self with: aString collated: AsciiOrder) = 2
localvariable18097 = (Object)new_AST_Variable_named(L"other");
array16417 = (Object)new_Type_Array_with(1, (Object)localvariable18097);
// class
send107387 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send107388 = (Object)new_AST_Send((Object)localvariable18097, (Object)SMB_class, 0);
// =
send107389 = (Object)new_AST_Send((Object)send107387, (Object)SMB__equal, 1, (Object)send107388);
// string
send107390 = (Object)new_AST_Send((Object)Self, (Object)symbol30568, 0);
// string
send107391 = (Object)new_AST_Send((Object)localvariable18097, (Object)symbol30568, 0);
// =
send107392 = (Object)new_AST_Send((Object)send107390, (Object)SMB__equal, 1, (Object)send107391);
block7293 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107392);
// and:
send107393 = (Object)new_AST_Send((Object)send107389, (Object)symbol30742, 1, (Object)block7293);
method31163 = (Object)new_AST_Method_with((Type_Array)array16417, (Type_Array)empty_Type_Array, 1, send107393);
methodclosure31069 = (Object)new_Runtime_MethodClosure(method31163);
store_method((Type_Class)class5237, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure31069);

classreference11508 = (Object)new_Organization_ClassReference((Type_Class)class5237);
// new
send107394 = (Object)new_AST_Send((Object)classreference11508, (Object)symbol30416, 0);
// string
send107395 = (Object)new_AST_Send((Object)Self, (Object)symbol30568, 0);
// string:
send107396 = (Object)new_AST_Send((Object)send107394, (Object)symbol30567, 1, (Object)send107395);
method31164 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107396);
symbol30570 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure31070 = (Object)new_Runtime_MethodClosure(method31164);
store_method((Type_Class)class5236, (Type_Symbol)symbol30570, (Runtime_MethodClosure)methodclosure31070);

classreference11509 = (Object)new_Organization_ClassReference((Type_Class)class5236);
classreference11510 = (Object)new_Organization_ClassReference((Type_Class)class5230);
objectlayout7412 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7412)->values[0] = instancevariable13905;
((Type_Array)objectlayout7412)->values[1] = instancevariable13906;
((Type_Array)objectlayout7412)->values[2] = instancevariable13907;
((Type_Array)objectlayout7412)->values[3] = instancevariable13908;
((Type_Array)objectlayout7412)->values[4] = instancevariable13909;
symbol30451 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout7413 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7413)->values[0] = instancevariable13910;
((Type_Array)objectlayout7413)->values[1] = instancevariable13915;
((Type_Array)objectlayout7413)->values[2] = instancevariable13916;
instancevariable13937 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout7413)->values[3] = instancevariable13937;
instancevariable13938 = (Object)new_AST_InstVariable(4, L"arguments");
((Type_Array)objectlayout7413)->values[4] = instancevariable13938;
class5238 = (Object)new_Class_withMeta((Object)class5214, objectlayout7413, objectlayout7412);
((Type_Class)class5238)->name = (Type_Symbol)symbol30451;
metaclass4440 = (Object)HEADER(class5238);

// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method31165 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13937);
symbol30591 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure31071 = (Object)new_Runtime_MethodClosure(method31165);
store_method((Type_Class)class5238, (Type_Symbol)symbol30591, (Runtime_MethodClosure)methodclosure31071);


// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable18098 = (Object)new_AST_Variable_named(L"anObject");
array16418 = (Object)new_Type_Array_with(1, (Object)localvariable18098);
assign13574 = (Object)new_AST_Assign((Object)instancevariable13937, (Object)localvariable18098);
method31166 = (Object)new_AST_Method_with((Type_Array)array16418, (Type_Array)empty_Type_Array, 2, assign13574, Self);
symbol30589 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure31072 = (Object)new_Runtime_MethodClosure(method31166);
store_method((Type_Class)class5238, (Type_Symbol)symbol30589, (Runtime_MethodClosure)methodclosure31072);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method31167 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13938);
methodclosure31073 = (Object)new_Runtime_MethodClosure(method31167);
store_method((Type_Class)class5238, (Type_Symbol)symbol30587, (Runtime_MethodClosure)methodclosure31073);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable18099 = (Object)new_AST_Variable_named(L"anObject");
array16419 = (Object)new_Type_Array_with(1, (Object)localvariable18099);
assign13575 = (Object)new_AST_Assign((Object)instancevariable13938, (Object)localvariable18099);
method31168 = (Object)new_AST_Method_with((Type_Array)array16419, (Type_Array)empty_Type_Array, 2, assign13575, Self);
methodclosure31074 = (Object)new_Runtime_MethodClosure(method31168);
store_method((Type_Class)class5238, (Type_Symbol)symbol30590, (Runtime_MethodClosure)methodclosure31074);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super1712 = (Object)new_AST_Super((Object)symbol30515, 0);
// new
send107397 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
assign13576 = (Object)new_AST_Assign((Object)instancevariable13938, (Object)send107397);
method31169 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1712, assign13576, Self);
methodclosure31075 = (Object)new_Runtime_MethodClosure(method31169);
store_method((Type_Class)class5238, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31075);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// arguments
send107398 = (Object)new_AST_Send((Object)Self, (Object)symbol30587, 0);
symbol30749 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable18100 = (Object)new_AST_Variable_named(L"el");
array16420 = (Object)new_Type_Array_with(1, (Object)localvariable18100);
// isReturnExpression
send107399 = (Object)new_AST_Send((Object)localvariable18100, (Object)symbol30408, 0);
symbol30750 = (Object)new_Type_Symbol_cached(L"or:");
// hasReturnExpression
send107400 = (Object)new_AST_Send((Object)localvariable18100, (Object)symbol30588, 0);
block7294 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107400);
// or:
send107401 = (Object)new_AST_Send((Object)send107399, (Object)symbol30750, 1, (Object)block7294);
block7295 = (Object)new_AST_Block_with((Type_Array)array16420, (Type_Array)empty_Type_Array, 1, 1, send107401);
// anySatisfy:
send107402 = (Object)new_AST_Send((Object)send107398, (Object)symbol30749, 1, (Object)block7295);
method31170 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107402);
methodclosure31076 = (Object)new_Runtime_MethodClosure(method31170);
store_method((Type_Class)class5238, (Type_Symbol)symbol30588, (Runtime_MethodClosure)methodclosure31076);

classreference11511 = (Object)new_Organization_ClassReference((Type_Class)class5238);
objectlayout7414 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7414)->values[0] = instancevariable13905;
((Type_Array)objectlayout7414)->values[1] = instancevariable13906;
((Type_Array)objectlayout7414)->values[2] = instancevariable13907;
((Type_Array)objectlayout7414)->values[3] = instancevariable13908;
((Type_Array)objectlayout7414)->values[4] = instancevariable13909;
symbol30459 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout7415 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7415)->values[0] = instancevariable13910;
((Type_Array)objectlayout7415)->values[1] = instancevariable13915;
instancevariable13939 = (Object)new_AST_InstVariable(2, L"receiver");
((Type_Array)objectlayout7415)->values[2] = instancevariable13939;
instancevariable13940 = (Object)new_AST_InstVariable(3, L"argument");
((Type_Array)objectlayout7415)->values[3] = instancevariable13940;
class5239 = (Object)new_Class_withMeta((Object)class5228, objectlayout7415, objectlayout7414);
((Type_Class)class5239)->name = (Type_Symbol)symbol30459;
metaclass4441 = (Object)HEADER(class5239);

// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	outer argument: receiver.
// 	receiver := outer
localvariable18101 = (Object)new_AST_Variable_named(L"outer");
array16421 = (Object)new_Type_Array_with(1, (Object)localvariable18101);
symbol30596 = (Object)new_Type_Symbol_cached(L"argument:");
// argument:
send107403 = (Object)new_AST_Send((Object)localvariable18101, (Object)symbol30596, 1, (Object)instancevariable13939);
assign13577 = (Object)new_AST_Assign((Object)instancevariable13939, (Object)localvariable18101);
method31171 = (Object)new_AST_Method_with((Type_Array)array16421, (Type_Array)empty_Type_Array, 3, send107403, assign13577, Self);
symbol30597 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
methodclosure31077 = (Object)new_Runtime_MethodClosure(method31171);
store_method((Type_Class)class5239, (Type_Symbol)symbol30597, (Runtime_MethodClosure)methodclosure31077);


// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable18102 = (Object)new_AST_Variable_named(L"anObject");
array16422 = (Object)new_Type_Array_with(1, (Object)localvariable18102);
assign13578 = (Object)new_AST_Assign((Object)instancevariable13939, (Object)localvariable18102);
method31172 = (Object)new_AST_Method_with((Type_Array)array16422, (Type_Array)empty_Type_Array, 2, assign13578, Self);
methodclosure31078 = (Object)new_Runtime_MethodClosure(method31172);
store_method((Type_Class)class5239, (Type_Symbol)symbol30589, (Runtime_MethodClosure)methodclosure31078);


// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method31173 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13939);
methodclosure31079 = (Object)new_Runtime_MethodClosure(method31173);
store_method((Type_Class)class5239, (Type_Symbol)symbol30591, (Runtime_MethodClosure)methodclosure31079);


// ASTBinaryExpression>>argument
//argument
// 	^ argument
method31174 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13940);
methodclosure31080 = (Object)new_Runtime_MethodClosure(method31174);
store_method((Type_Class)class5239, (Type_Symbol)symbol30598, (Runtime_MethodClosure)methodclosure31080);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable18103 = (Object)new_AST_Variable_named(L"anObject");
array16423 = (Object)new_Type_Array_with(1, (Object)localvariable18103);
assign13579 = (Object)new_AST_Assign((Object)instancevariable13940, (Object)localvariable18103);
method31175 = (Object)new_AST_Method_with((Type_Array)array16423, (Type_Array)empty_Type_Array, 2, assign13579, Self);
methodclosure31081 = (Object)new_Runtime_MethodClosure(method31175);
store_method((Type_Class)class5239, (Type_Symbol)symbol30596, (Runtime_MethodClosure)methodclosure31081);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super1713 = (Object)new_AST_Super((Object)symbol30515, 0);
method31176 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1713, Self);
methodclosure31082 = (Object)new_Runtime_MethodClosure(method31176);
store_method((Type_Class)class5239, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31082);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable18104 = (Object)new_AST_Variable_named(L"aStream");
array16424 = (Object)new_Type_Array_with(1, (Object)localvariable18104);
// receiver
send107404 = (Object)new_AST_Send((Object)Self, (Object)symbol30591, 0);
// printOn:
send107405 = (Object)new_AST_Send((Object)send107404, (Object)symbol30431, 1, (Object)localvariable18104);
symbol30751 = (Object)new_Type_Symbol_cached(L"space");
// space
send107406 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol30751, 0);
// nextPutAll:
send107407 = (Object)new_AST_Send((Object)localvariable18104, (Object)symbol30734, 1, (Object)send107406);
super1714 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18104);
// space
send107408 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol30751, 0);
// nextPutAll:
send107409 = (Object)new_AST_Send((Object)localvariable18104, (Object)symbol30734, 1, (Object)send107408);
// argument
send107410 = (Object)new_AST_Send((Object)Self, (Object)symbol30598, 0);
// printOn:
send107411 = (Object)new_AST_Send((Object)send107410, (Object)symbol30431, 1, (Object)localvariable18104);
method31177 = (Object)new_AST_Method_with((Type_Array)array16424, (Type_Array)empty_Type_Array, 6, send107405, send107407, super1714, send107409, send107411, Self);
methodclosure31083 = (Object)new_Runtime_MethodClosure(method31177);
store_method((Type_Class)class5239, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31083);

classreference11512 = (Object)new_Organization_ClassReference((Type_Class)class5239);
classreference11513 = (Object)new_Organization_ClassReference((Type_Class)class5213);
objectlayout7416 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7416)->values[0] = instancevariable13905;
((Type_Array)objectlayout7416)->values[1] = instancevariable13906;
((Type_Array)objectlayout7416)->values[2] = instancevariable13907;
((Type_Array)objectlayout7416)->values[3] = instancevariable13908;
((Type_Array)objectlayout7416)->values[4] = instancevariable13909;
symbol30468 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout7417 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7417)->values[0] = instancevariable13910;
instancevariable13941 = (Object)new_AST_InstVariable(1, L"parameters");
((Type_Array)objectlayout7417)->values[1] = instancevariable13941;
instancevariable13942 = (Object)new_AST_InstVariable(2, L"temporaries");
((Type_Array)objectlayout7417)->values[2] = instancevariable13942;
instancevariable13943 = (Object)new_AST_InstVariable(3, L"statements");
((Type_Array)objectlayout7417)->values[3] = instancevariable13943;
class5240 = (Object)new_Class_withMeta((Object)class5209, objectlayout7417, objectlayout7416);
((Type_Class)class5240)->name = (Type_Symbol)symbol30468;
metaclass4442 = (Object)HEADER(class5240);

// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable18105 = (Object)new_AST_Variable_named(L"anObject");
array16425 = (Object)new_Type_Array_with(1, (Object)localvariable18105);
assign13580 = (Object)new_AST_Assign((Object)instancevariable13943, (Object)localvariable18105);
method31178 = (Object)new_AST_Method_with((Type_Array)array16425, (Type_Array)empty_Type_Array, 2, assign13580, Self);
methodclosure31084 = (Object)new_Runtime_MethodClosure(method31178);
store_method((Type_Class)class5240, (Type_Symbol)symbol30602, (Runtime_MethodClosure)methodclosure31084);


// ASTBlock>>statements
//statements
// 	^ statements
method31179 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13943);
methodclosure31085 = (Object)new_Runtime_MethodClosure(method31179);
store_method((Type_Class)class5240, (Type_Symbol)symbol30599, (Runtime_MethodClosure)methodclosure31085);


// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable18106 = (Object)new_AST_Variable_named(L"aCollection");
array16426 = (Object)new_Type_Array_with(1, (Object)localvariable18106);
assign13581 = (Object)new_AST_Assign((Object)instancevariable13941, (Object)localvariable18106);
method31180 = (Object)new_AST_Method_with((Type_Array)array16426, (Type_Array)empty_Type_Array, 2, assign13581, Self);
symbol30608 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure31086 = (Object)new_Runtime_MethodClosure(method31180);
store_method((Type_Class)class5240, (Type_Symbol)symbol30608, (Runtime_MethodClosure)methodclosure31086);


// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method31181 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13942);
methodclosure31087 = (Object)new_Runtime_MethodClosure(method31181);
store_method((Type_Class)class5240, (Type_Symbol)symbol30604, (Runtime_MethodClosure)methodclosure31087);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable18107 = (Object)new_AST_Variable_named(L"anObject");
array16427 = (Object)new_Type_Array_with(1, (Object)localvariable18107);
assign13582 = (Object)new_AST_Assign((Object)instancevariable13942, (Object)localvariable18107);
method31182 = (Object)new_AST_Method_with((Type_Array)array16427, (Type_Array)empty_Type_Array, 2, assign13582, Self);
methodclosure31088 = (Object)new_Runtime_MethodClosure(method31182);
store_method((Type_Class)class5240, (Type_Symbol)symbol30605, (Runtime_MethodClosure)methodclosure31088);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super1715 = (Object)new_AST_Super((Object)symbol30515, 0);
// new
send107412 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30416, 0);
// parameters:
send107413 = (Object)new_AST_Send((Object)Self, (Object)symbol30608, 1, (Object)send107412);
// new
send107414 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30416, 0);
// statements:
send107415 = (Object)new_AST_Send((Object)Self, (Object)symbol30602, 1, (Object)send107414);
// new
send107416 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30416, 0);
// temporaries:
send107417 = (Object)new_AST_Send((Object)Self, (Object)symbol30605, 1, (Object)send107416);
method31183 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1715, send107413, send107415, send107417, Self);
methodclosure31089 = (Object)new_Runtime_MethodClosure(method31183);
store_method((Type_Class)class5240, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31089);


// ASTBlock>>parameters
//parameters
// 	^ parameters
method31184 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13941);
methodclosure31090 = (Object)new_Runtime_MethodClosure(method31184);
store_method((Type_Class)class5240, (Type_Symbol)symbol30582, (Runtime_MethodClosure)methodclosure31090);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// statements
send107418 = (Object)new_AST_Send((Object)Self, (Object)symbol30599, 0);
localvariable18108 = (Object)new_AST_Variable_named(L"el");
array16428 = (Object)new_Type_Array_with(1, (Object)localvariable18108);
// isReturnExpression
send107419 = (Object)new_AST_Send((Object)localvariable18108, (Object)symbol30408, 0);
// hasReturnExpression
send107420 = (Object)new_AST_Send((Object)localvariable18108, (Object)symbol30588, 0);
block7296 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107420);
// or:
send107421 = (Object)new_AST_Send((Object)send107419, (Object)symbol30750, 1, (Object)block7296);
block7297 = (Object)new_AST_Block_with((Type_Array)array16428, (Type_Array)empty_Type_Array, 1, 1, send107421);
// anySatisfy:
send107422 = (Object)new_AST_Send((Object)send107418, (Object)symbol30749, 1, (Object)block7297);
method31185 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107422);
methodclosure31091 = (Object)new_Runtime_MethodClosure(method31185);
store_method((Type_Class)class5240, (Type_Symbol)symbol30588, (Runtime_MethodClosure)methodclosure31091);

classreference11514 = (Object)new_Organization_ClassReference((Type_Class)class5240);
objectlayout7418 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7418)->values[0] = instancevariable13905;
((Type_Array)objectlayout7418)->values[1] = instancevariable13906;
((Type_Array)objectlayout7418)->values[2] = instancevariable13907;
((Type_Array)objectlayout7418)->values[3] = instancevariable13908;
((Type_Array)objectlayout7418)->values[4] = instancevariable13909;
symbol30449 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout7419 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7419)->values[0] = instancevariable13910;
instancevariable13944 = (Object)new_AST_InstVariable(1, L"variable");
((Type_Array)objectlayout7419)->values[1] = instancevariable13944;
instancevariable13945 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout7419)->values[2] = instancevariable13945;
class5241 = (Object)new_Class_withMeta((Object)class5230, objectlayout7419, objectlayout7418);
((Type_Class)class5241)->name = (Type_Symbol)symbol30449;
metaclass4443 = (Object)HEADER(class5241);

// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable18109 = (Object)new_AST_Variable_named(L"anObject");
array16429 = (Object)new_Type_Array_with(1, (Object)localvariable18109);
assign13583 = (Object)new_AST_Assign((Object)instancevariable13944, (Object)localvariable18109);
method31186 = (Object)new_AST_Method_with((Type_Array)array16429, (Type_Array)empty_Type_Array, 2, assign13583, Self);
symbol30573 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure31092 = (Object)new_Runtime_MethodClosure(method31186);
store_method((Type_Class)class5241, (Type_Symbol)symbol30573, (Runtime_MethodClosure)methodclosure31092);


// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method31187 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13944);
symbol30574 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure31093 = (Object)new_Runtime_MethodClosure(method31187);
store_method((Type_Class)class5241, (Type_Symbol)symbol30574, (Runtime_MethodClosure)methodclosure31093);


// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable18110 = (Object)new_AST_Variable_named(L"anObject");
array16430 = (Object)new_Type_Array_with(1, (Object)localvariable18110);
assign13584 = (Object)new_AST_Assign((Object)instancevariable13945, (Object)localvariable18110);
method31188 = (Object)new_AST_Method_with((Type_Array)array16430, (Type_Array)empty_Type_Array, 2, assign13584, Self);
symbol30575 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure31094 = (Object)new_Runtime_MethodClosure(method31188);
store_method((Type_Class)class5241, (Type_Symbol)symbol30575, (Runtime_MethodClosure)methodclosure31094);


// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method31189 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13945);
symbol30572 = (Object)new_Type_Symbol_cached(L"expression");
methodclosure31095 = (Object)new_Runtime_MethodClosure(method31189);
store_method((Type_Class)class5241, (Type_Symbol)symbol30572, (Runtime_MethodClosure)methodclosure31095);

classreference11515 = (Object)new_Organization_ClassReference((Type_Class)class5241);
objectlayout7420 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7420)->values[0] = instancevariable13905;
((Type_Array)objectlayout7420)->values[1] = instancevariable13906;
((Type_Array)objectlayout7420)->values[2] = instancevariable13907;
((Type_Array)objectlayout7420)->values[3] = instancevariable13908;
((Type_Array)objectlayout7420)->values[4] = instancevariable13909;
symbol30461 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout7421 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
((Type_Array)objectlayout7421)->values[0] = instancevariable13910;
class5242 = (Object)new_Class_withMeta((Object)class5209, objectlayout7421, objectlayout7420);
((Type_Class)class5242)->name = (Type_Symbol)symbol30461;
metaclass4444 = (Object)HEADER(class5242);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable18111 = (Object)new_AST_Variable_named(L"aStream");
array16431 = (Object)new_Type_Array_with(1, (Object)localvariable18111);
string10750 = (Object)new_Type_String(L"self");
constant23446 = (Object)new_AST_Constant((Object)string10750);
// nextPutAll:
send107423 = (Object)new_AST_Send((Object)localvariable18111, (Object)symbol30734, 1, (Object)constant23446);
method31190 = (Object)new_AST_Method_with((Type_Array)array16431, (Type_Array)empty_Type_Array, 2, send107423, Self);
methodclosure31096 = (Object)new_Runtime_MethodClosure(method31190);
store_method((Type_Class)class5242, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31096);

classreference11516 = (Object)new_Organization_ClassReference((Type_Class)class5242);
objectlayout7422 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7422)->values[0] = instancevariable13905;
((Type_Array)objectlayout7422)->values[1] = instancevariable13906;
((Type_Array)objectlayout7422)->values[2] = instancevariable13907;
((Type_Array)objectlayout7422)->values[3] = instancevariable13908;
((Type_Array)objectlayout7422)->values[4] = instancevariable13909;
symbol30453 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout7423 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7423)->values[0] = instancevariable13910;
((Type_Array)objectlayout7423)->values[1] = instancevariable13915;
instancevariable13946 = (Object)new_AST_InstVariable(2, L"receiver");
((Type_Array)objectlayout7423)->values[2] = instancevariable13946;
class5243 = (Object)new_Class_withMeta((Object)class5221, objectlayout7423, objectlayout7422);
((Type_Class)class5243)->name = (Type_Symbol)symbol30453;
metaclass4445 = (Object)HEADER(class5243);

// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method31191 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13946);
methodclosure31097 = (Object)new_Runtime_MethodClosure(method31191);
store_method((Type_Class)class5243, (Type_Symbol)symbol30591, (Runtime_MethodClosure)methodclosure31097);


// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable18112 = (Object)new_AST_Variable_named(L"anObject");
array16432 = (Object)new_Type_Array_with(1, (Object)localvariable18112);
assign13585 = (Object)new_AST_Assign((Object)instancevariable13946, (Object)localvariable18112);
method31192 = (Object)new_AST_Method_with((Type_Array)array16432, (Type_Array)empty_Type_Array, 2, assign13585, Self);
methodclosure31098 = (Object)new_Runtime_MethodClosure(method31192);
store_method((Type_Class)class5243, (Type_Symbol)symbol30589, (Runtime_MethodClosure)methodclosure31098);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable18113 = (Object)new_AST_Variable_named(L"aStream");
array16433 = (Object)new_Type_Array_with(1, (Object)localvariable18113);
// receiver
send107424 = (Object)new_AST_Send((Object)Self, (Object)symbol30591, 0);
// printOn:
send107425 = (Object)new_AST_Send((Object)send107424, (Object)symbol30431, 1, (Object)localvariable18113);
// space
send107426 = (Object)new_AST_Send((Object)Type_String_Reference, (Object)symbol30751, 0);
// nextPutAll:
send107427 = (Object)new_AST_Send((Object)localvariable18113, (Object)symbol30734, 1, (Object)send107426);
super1716 = (Object)new_AST_Super((Object)symbol30431, 1, (Object)localvariable18113);
method31193 = (Object)new_AST_Method_with((Type_Array)array16433, (Type_Array)empty_Type_Array, 4, send107425, send107427, super1716, Self);
methodclosure31099 = (Object)new_Runtime_MethodClosure(method31193);
store_method((Type_Class)class5243, (Type_Symbol)symbol30431, (Runtime_MethodClosure)methodclosure31099);

classreference11517 = (Object)new_Organization_ClassReference((Type_Class)class5243);
objectlayout7424 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7424)->values[0] = instancevariable13905;
((Type_Array)objectlayout7424)->values[1] = instancevariable13906;
((Type_Array)objectlayout7424)->values[2] = instancevariable13907;
((Type_Array)objectlayout7424)->values[3] = instancevariable13908;
((Type_Array)objectlayout7424)->values[4] = instancevariable13909;
symbol30506 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout7425 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7425)->values[0] = instancevariable13910;
instancevariable13947 = (Object)new_AST_InstVariable(1, L"char");
((Type_Array)objectlayout7425)->values[1] = instancevariable13947;
class5244 = (Object)new_Class_withMeta((Object)class5223, objectlayout7425, objectlayout7424);
((Type_Class)class5244)->name = (Type_Symbol)symbol30506;
metaclass4446 = (Object)HEADER(class5244);

// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char
objectlayout7426 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7426)->values[0] = instancevariable13905;
((Type_Array)objectlayout7426)->values[1] = instancevariable13906;
((Type_Array)objectlayout7426)->values[2] = instancevariable13907;
((Type_Array)objectlayout7426)->values[3] = instancevariable13908;
((Type_Array)objectlayout7426)->values[4] = instancevariable13909;
symbol30714 = (Object)new_Type_Symbol_cached(L"Character");
objectlayout7427 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13948 = (Object)new_AST_InstVariable(0, L"char");
((Type_Array)objectlayout7427)->values[0] = instancevariable13948;
class5245 = (Object)new_Class_withMeta((Object)class5225, objectlayout7427, objectlayout7426);
((Type_Class)class5245)->name = (Type_Symbol)symbol30714;
metaclass4447 = (Object)HEADER(class5245);

// Character>>char:
//localvariable18114 = (Object)new_AST_Variable_named(L"anObject");
array16434 = (Object)new_Type_Array_with(1, (Object)localvariable18114);
symbol30752 = (Object)new_Type_Symbol_cached(L"reallyAsCharacter");
// reallyAsCharacter
send107428 = (Object)new_AST_Send((Object)localvariable18114, (Object)symbol30752, 0);
assign13586 = (Object)new_AST_Assign((Object)instancevariable13948, (Object)send107428);
method31194 = (Object)new_AST_Method_with((Type_Array)array16434, (Type_Array)empty_Type_Array, 2, assign13586, Self);
symbol30716 = (Object)new_Type_Symbol_cached(L"char:");
methodclosure31100 = (Object)new_Runtime_MethodClosure(method31194);
store_method((Type_Class)class5245, (Type_Symbol)symbol30716, (Runtime_MethodClosure)methodclosure31100);


// Character>>=
//= aCharacter 
// 	"Primitive. Answer true if the receiver and the argument are the same
// 	object (have the same object pointer) and false otherwise. Optional. See
// 	Object documentation whatIsAPrimitive."
// 
// 	^ self == aCharacter or:[
// 		aCharacter isCharacter and: [self asciiValue = aCharacter asciiValue]]
localvariable18115 = (Object)new_AST_Variable_named(L"other");
array16435 = (Object)new_Type_Array_with(1, (Object)localvariable18115);
// class
send107429 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// isKindOf:
send107430 = (Object)new_AST_Send((Object)localvariable18115, (Object)symbol30746, 1, (Object)send107429);
symbol30713 = (Object)new_Type_Symbol_cached(L"char");
// char
send107431 = (Object)new_AST_Send((Object)Self, (Object)symbol30713, 0);
// char
send107432 = (Object)new_AST_Send((Object)localvariable18115, (Object)symbol30713, 0);
// =
send107433 = (Object)new_AST_Send((Object)send107431, (Object)SMB__equal, 1, (Object)send107432);
block7298 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107433);
// and:
send107434 = (Object)new_AST_Send((Object)send107430, (Object)symbol30742, 1, (Object)block7298);
method31195 = (Object)new_AST_Method_with((Type_Array)array16435, (Type_Array)empty_Type_Array, 1, send107434);
methodclosure31101 = (Object)new_Runtime_MethodClosure(method31195);
store_method((Type_Class)class5245, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure31101);


// Character>>char
//method31196 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13948);
methodclosure31102 = (Object)new_Runtime_MethodClosure(method31196);
store_method((Type_Class)class5245, (Type_Symbol)symbol30713, (Runtime_MethodClosure)methodclosure31102);

classreference11518 = (Object)new_Organization_ClassReference((Type_Class)class5245);
// new
send107435 = (Object)new_AST_Send((Object)classreference11518, (Object)symbol30416, 0);
// char
send107436 = (Object)new_AST_Send((Object)Self, (Object)symbol30713, 0);
// char:
send107437 = (Object)new_AST_Send((Object)send107435, (Object)symbol30716, 1, (Object)send107436);
method31197 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107437);
symbol30715 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure31103 = (Object)new_Runtime_MethodClosure(method31197);
store_method((Type_Class)class5244, (Type_Symbol)symbol30715, (Runtime_MethodClosure)methodclosure31103);


// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable18116 = (Object)new_AST_Variable_named(L"aChar");
array16436 = (Object)new_Type_Array_with(1, (Object)localvariable18116);
assign13587 = (Object)new_AST_Assign((Object)instancevariable13947, (Object)localvariable18116);
method31198 = (Object)new_AST_Method_with((Type_Array)array16436, (Type_Array)empty_Type_Array, 2, assign13587, Self);
methodclosure31104 = (Object)new_Runtime_MethodClosure(method31198);
store_method((Type_Class)class5244, (Type_Symbol)symbol30716, (Runtime_MethodClosure)methodclosure31104);


// ASTCharacter>>char
//char
// 	^ char
method31199 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13947);
methodclosure31105 = (Object)new_Runtime_MethodClosure(method31199);
store_method((Type_Class)class5244, (Type_Symbol)symbol30713, (Runtime_MethodClosure)methodclosure31105);

classreference11519 = (Object)new_Organization_ClassReference((Type_Class)class5244);
objectlayout7428 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7428)->values[0] = instancevariable13905;
((Type_Array)objectlayout7428)->values[1] = instancevariable13906;
((Type_Array)objectlayout7428)->values[2] = instancevariable13907;
((Type_Array)objectlayout7428)->values[3] = instancevariable13908;
((Type_Array)objectlayout7428)->values[4] = instancevariable13909;
symbol30442 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout7429 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7429)->values[0] = instancevariable13910;
instancevariable13949 = (Object)new_AST_InstVariable(1, L"literals");
((Type_Array)objectlayout7429)->values[1] = instancevariable13949;
class5246 = (Object)new_Class_withMeta((Object)class5223, objectlayout7429, objectlayout7428);
((Type_Class)class5246)->name = (Type_Symbol)symbol30442;
metaclass4448 = (Object)HEADER(class5246);

// ASTArray>>literals
//literals
// 	^ literals
method31200 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13949);
symbol30544 = (Object)new_Type_Symbol_cached(L"literals");
methodclosure31106 = (Object)new_Runtime_MethodClosure(method31200);
store_method((Type_Class)class5246, (Type_Symbol)symbol30544, (Runtime_MethodClosure)methodclosure31106);


// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable18117 = (Object)new_AST_Variable_named(L"aCollection");
array16437 = (Object)new_Type_Array_with(1, (Object)localvariable18117);
assign13588 = (Object)new_AST_Assign((Object)instancevariable13949, (Object)localvariable18117);
method31201 = (Object)new_AST_Method_with((Type_Array)array16437, (Type_Array)empty_Type_Array, 2, assign13588, Self);
symbol30542 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure31107 = (Object)new_Runtime_MethodClosure(method31201);
store_method((Type_Class)class5246, (Type_Symbol)symbol30542, (Runtime_MethodClosure)methodclosure31107);


// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
// literals
send107438 = (Object)new_AST_Send((Object)Self, (Object)symbol30544, 0);
// isEmpty
send107439 = (Object)new_AST_Send((Object)send107438, (Object)symbol30543, 0);
method31202 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107439);
methodclosure31108 = (Object)new_Runtime_MethodClosure(method31202);
store_method((Type_Class)class5246, (Type_Symbol)symbol30543, (Runtime_MethodClosure)methodclosure31108);

classreference11520 = (Object)new_Organization_ClassReference((Type_Class)class5246);
objectlayout7430 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7430)->values[0] = instancevariable13905;
((Type_Array)objectlayout7430)->values[1] = instancevariable13906;
((Type_Array)objectlayout7430)->values[2] = instancevariable13907;
((Type_Array)objectlayout7430)->values[3] = instancevariable13908;
((Type_Array)objectlayout7430)->values[4] = instancevariable13909;
symbol30470 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout7431 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7431)->values[0] = instancevariable13910;
instancevariable13950 = (Object)new_AST_InstVariable(1, L"receiver");
((Type_Array)objectlayout7431)->values[1] = instancevariable13950;
instancevariable13951 = (Object)new_AST_InstVariable(2, L"cascades");
((Type_Array)objectlayout7431)->values[2] = instancevariable13951;
class5247 = (Object)new_Class_withMeta((Object)class5230, objectlayout7431, objectlayout7430);
((Type_Class)class5247)->name = (Type_Symbol)symbol30470;
metaclass4449 = (Object)HEADER(class5247);

// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable18118 = (Object)new_AST_Variable_named(L"anObject");
array16438 = (Object)new_Type_Array_with(1, (Object)localvariable18118);
assign13589 = (Object)new_AST_Assign((Object)instancevariable13951, (Object)localvariable18118);
method31203 = (Object)new_AST_Method_with((Type_Array)array16438, (Type_Array)empty_Type_Array, 2, assign13589, Self);
symbol30609 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure31109 = (Object)new_Runtime_MethodClosure(method31203);
store_method((Type_Class)class5247, (Type_Symbol)symbol30609, (Runtime_MethodClosure)methodclosure31109);


// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method31204 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13950);
methodclosure31110 = (Object)new_Runtime_MethodClosure(method31204);
store_method((Type_Class)class5247, (Type_Symbol)symbol30591, (Runtime_MethodClosure)methodclosure31110);


// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable18119 = (Object)new_AST_Variable_named(L"anObject");
array16439 = (Object)new_Type_Array_with(1, (Object)localvariable18119);
assign13590 = (Object)new_AST_Assign((Object)instancevariable13950, (Object)localvariable18119);
method31205 = (Object)new_AST_Method_with((Type_Array)array16439, (Type_Array)empty_Type_Array, 2, assign13590, Self);
methodclosure31111 = (Object)new_Runtime_MethodClosure(method31205);
store_method((Type_Class)class5247, (Type_Symbol)symbol30589, (Runtime_MethodClosure)methodclosure31111);


// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method31206 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13951);
symbol30610 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure31112 = (Object)new_Runtime_MethodClosure(method31206);
store_method((Type_Class)class5247, (Type_Symbol)symbol30610, (Runtime_MethodClosure)methodclosure31112);

classreference11521 = (Object)new_Organization_ClassReference((Type_Class)class5247);
objectlayout7432 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7432)->values[0] = instancevariable13905;
((Type_Array)objectlayout7432)->values[1] = instancevariable13906;
((Type_Array)objectlayout7432)->values[2] = instancevariable13907;
((Type_Array)objectlayout7432)->values[3] = instancevariable13908;
((Type_Array)objectlayout7432)->values[4] = instancevariable13909;
symbol30462 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout7433 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7433)->values[0] = instancevariable13910;
instancevariable13952 = (Object)new_AST_InstVariable(1, L"expression");
((Type_Array)objectlayout7433)->values[1] = instancevariable13952;
class5248 = (Object)new_Class_withMeta((Object)class5230, objectlayout7433, objectlayout7432);
((Type_Class)class5248)->name = (Type_Symbol)symbol30462;
metaclass4450 = (Object)HEADER(class5248);

// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable18120 = (Object)new_AST_Variable_named(L"anObject");
array16440 = (Object)new_Type_Array_with(1, (Object)localvariable18120);
assign13591 = (Object)new_AST_Assign((Object)instancevariable13952, (Object)localvariable18120);
method31207 = (Object)new_AST_Method_with((Type_Array)array16440, (Type_Array)empty_Type_Array, 2, assign13591, Self);
methodclosure31113 = (Object)new_Runtime_MethodClosure(method31207);
store_method((Type_Class)class5248, (Type_Symbol)symbol30575, (Runtime_MethodClosure)methodclosure31113);


// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method31208 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure31114 = (Object)new_Runtime_MethodClosure(method31208);
store_method((Type_Class)class5248, (Type_Symbol)symbol30408, (Runtime_MethodClosure)methodclosure31114);


// ASTReturnExpression>>expression
//expression
// 	^ expression
method31209 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13952);
methodclosure31115 = (Object)new_Runtime_MethodClosure(method31209);
store_method((Type_Class)class5248, (Type_Symbol)symbol30572, (Runtime_MethodClosure)methodclosure31115);

classreference11522 = (Object)new_Organization_ClassReference((Type_Class)class5248);
classreference11523 = (Object)new_Organization_ClassReference((Type_Class)class5221);
classreference11524 = (Object)new_Organization_ClassReference((Type_Class)class5228);
objectlayout7434 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7434)->values[0] = instancevariable13905;
((Type_Array)objectlayout7434)->values[1] = instancevariable13906;
((Type_Array)objectlayout7434)->values[2] = instancevariable13907;
((Type_Array)objectlayout7434)->values[3] = instancevariable13908;
((Type_Array)objectlayout7434)->values[4] = instancevariable13909;
symbol30474 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout7435 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7435)->values[0] = instancevariable13910;
((Type_Array)objectlayout7435)->values[1] = instancevariable13915;
((Type_Array)objectlayout7435)->values[2] = instancevariable13916;
instancevariable13953 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout7435)->values[3] = instancevariable13953;
class5249 = (Object)new_Class_withMeta((Object)class5214, objectlayout7435, objectlayout7434);
((Type_Class)class5249)->name = (Type_Symbol)symbol30474;
metaclass4451 = (Object)HEADER(class5249);

// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable18121 = (Object)new_AST_Variable_named(L"aCollection");
array16441 = (Object)new_Type_Array_with(1, (Object)localvariable18121);
symbol30753 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send107440 = (Object)new_AST_Send((Object)Self, (Object)symbol30753, 0);
assign13592 = (Object)new_AST_Assign((Object)instancevariable13953, (Object)localvariable18121);
method31210 = (Object)new_AST_Method_with((Type_Array)array16441, (Type_Array)empty_Type_Array, 3, send107440, assign13592, Self);
methodclosure31116 = (Object)new_Runtime_MethodClosure(method31210);
store_method((Type_Class)class5249, (Type_Symbol)symbol30608, (Runtime_MethodClosure)methodclosure31116);


// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method31211 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13953);
methodclosure31117 = (Object)new_Runtime_MethodClosure(method31211);
store_method((Type_Class)class5249, (Type_Symbol)symbol30582, (Runtime_MethodClosure)methodclosure31117);


// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable18122 = (Object)new_AST_Variable_named(L"aSelector");
array16442 = (Object)new_Type_Array_with(1, (Object)localvariable18122);
variable1216 = (Object)new_AST_Variable_named(L"return");
array16443 = (Object)new_Type_Array_with(1, (Object)variable1216);
super1717 = (Object)new_AST_Super((Object)symbol30584, 1, (Object)localvariable18122);
// escape:
send107441 = (Object)new_AST_Send((Object)variable1216, (Object)SMB_escape_, 1, (Object)False_Const);
block7299 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107441);
// ifFalse:
send107442 = (Object)new_AST_Send((Object)super1717, (Object)SMB_ifFalse_, 1, (Object)block7299);
symbol30611 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
// compatibleArgumentsWith:
send107443 = (Object)new_AST_Send((Object)Self, (Object)symbol30611, 1, (Object)localvariable18122);
block7300 = (Object)new_AST_Block_with((Type_Array)array16443, (Type_Array)empty_Type_Array, 1, 2, send107442, send107443);
// on:
send107444 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7300);
method31212 = (Object)new_AST_Method_with((Type_Array)array16442, (Type_Array)empty_Type_Array, 1, send107444);
methodclosure31118 = (Object)new_Runtime_MethodClosure(method31212);
store_method((Type_Class)class5249, (Type_Symbol)symbol30584, (Runtime_MethodClosure)methodclosure31118);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super1718 = (Object)new_AST_Super((Object)symbol30515, 0);
// new
send107445 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
assign13593 = (Object)new_AST_Assign((Object)instancevariable13953, (Object)send107445);
method31213 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1718, assign13593, Self);
methodclosure31119 = (Object)new_Runtime_MethodClosure(method31213);
store_method((Type_Class)class5249, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31119);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable18123 = (Object)new_AST_Variable_named(L"aSelector");
array16444 = (Object)new_Type_Array_with(1, (Object)localvariable18123);
variable1217 = (Object)new_AST_Variable_named(L"return");
array16445 = (Object)new_Type_Array_with(1, (Object)variable1217);
// size
send107446 = (Object)new_AST_Send((Object)instancevariable13953, (Object)SMB_size, 0);
symbol30754 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable18124 = (Object)new_AST_Variable_named(L"index");
array16446 = (Object)new_Type_Array_with(1, (Object)localvariable18124);
// at:
send107447 = (Object)new_AST_Send((Object)instancevariable13953, (Object)SMB_at_, 1, (Object)localvariable18124);
// layout
send107448 = (Object)new_AST_Send((Object)send107447, (Object)symbol30415, 0);
// parameters
send107449 = (Object)new_AST_Send((Object)localvariable18123, (Object)symbol30582, 0);
// at:
send107450 = (Object)new_AST_Send((Object)send107449, (Object)SMB_at_, 1, (Object)localvariable18124);
// layout
send107451 = (Object)new_AST_Send((Object)send107450, (Object)symbol30415, 0);
// =
send107452 = (Object)new_AST_Send((Object)send107448, (Object)SMB__equal, 1, (Object)send107451);
// escape:
send107453 = (Object)new_AST_Send((Object)variable1217, (Object)SMB_escape_, 1, (Object)False_Const);
block7301 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107453);
// ifFalse:
send107454 = (Object)new_AST_Send((Object)send107452, (Object)SMB_ifFalse_, 1, (Object)block7301);
block7302 = (Object)new_AST_Block_with((Type_Array)array16446, (Type_Array)empty_Type_Array, 2, 1, send107454);
// timesRepeat:
send107455 = (Object)new_AST_Send((Object)send107446, (Object)symbol30754, 1, (Object)block7302);
block7303 = (Object)new_AST_Block_with((Type_Array)array16445, (Type_Array)empty_Type_Array, 1, 2, send107455, True_Const);
// on:
send107456 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7303);
method31214 = (Object)new_AST_Method_with((Type_Array)array16444, (Type_Array)empty_Type_Array, 1, send107456);
methodclosure31120 = (Object)new_Runtime_MethodClosure(method31214);
store_method((Type_Class)class5249, (Type_Symbol)symbol30611, (Runtime_MethodClosure)methodclosure31120);

classreference11525 = (Object)new_Organization_ClassReference((Type_Class)class5249);
objectlayout7436 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7436)->values[0] = instancevariable13905;
((Type_Array)objectlayout7436)->values[1] = instancevariable13906;
((Type_Array)objectlayout7436)->values[2] = instancevariable13907;
((Type_Array)objectlayout7436)->values[3] = instancevariable13908;
((Type_Array)objectlayout7436)->values[4] = instancevariable13909;
symbol30686 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout7437 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable13954 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout7437)->values[0] = instancevariable13954;
instancevariable13955 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout7437)->values[1] = instancevariable13955;
class5250 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7437, objectlayout7436);
((Type_Class)class5250)->name = (Type_Symbol)symbol30686;
metaclass4452 = (Object)HEADER(class5250);

// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable18125 = (Object)new_AST_Variable_named(L"aName");
array16447 = (Object)new_Type_Array_with(1, (Object)localvariable18125);
assign13594 = (Object)new_AST_Assign((Object)instancevariable13954, (Object)localvariable18125);
method31215 = (Object)new_AST_Method_with((Type_Array)array16447, (Type_Array)empty_Type_Array, 2, assign13594, Self);
methodclosure31121 = (Object)new_Runtime_MethodClosure(method31215);
store_method((Type_Class)class5250, (Type_Symbol)symbol30520, (Runtime_MethodClosure)methodclosure31121);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable18126 = (Object)new_AST_Variable_named(L"input");
array16448 = (Object)new_Type_Array_with(1, (Object)localvariable18126);
symbol30755 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send107457 = (Object)new_AST_Send((Object)Self, (Object)symbol30755, 0);
method31216 = (Object)new_AST_Method_with((Type_Array)array16448, (Type_Array)empty_Type_Array, 2, send107457, Self);
symbol30691 = (Object)new_Type_Symbol_cached(L"privateMatch:");
methodclosure31122 = (Object)new_Runtime_MethodClosure(method31216);
store_method((Type_Class)class5250, (Type_Symbol)symbol30691, (Runtime_MethodClosure)methodclosure31122);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self
objectlayout7438 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7438)->values[0] = instancevariable13905;
((Type_Array)objectlayout7438)->values[1] = instancevariable13906;
((Type_Array)objectlayout7438)->values[2] = instancevariable13907;
((Type_Array)objectlayout7438)->values[3] = instancevariable13908;
((Type_Array)objectlayout7438)->values[4] = instancevariable13909;
symbol30706 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout7439 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7439)->values[0] = instancevariable13954;
((Type_Array)objectlayout7439)->values[1] = instancevariable13955;
instancevariable13956 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout7439)->values[2] = instancevariable13956;
instancevariable13957 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout7439)->values[3] = instancevariable13957;
class5251 = (Object)new_Class_withMeta((Object)class5250, objectlayout7439, objectlayout7438);
((Type_Class)class5251)->name = (Type_Symbol)symbol30706;
metaclass4453 = (Object)HEADER(class5251);

// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable18127 = (Object)new_AST_Variable_named(L"input");
array16449 = (Object)new_Type_Array_with(1, (Object)localvariable18127);
symbol30726 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
// new
send107458 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
// privateMatch:on:
send107459 = (Object)new_AST_Send((Object)Self, (Object)symbol30726, 2, (Object)localvariable18127, (Object)send107458);
method31217 = (Object)new_AST_Method_with((Type_Array)array16449, (Type_Array)empty_Type_Array, 1, send107459);
methodclosure31123 = (Object)new_Runtime_MethodClosure(method31217);
store_method((Type_Class)class5251, (Type_Symbol)symbol30691, (Runtime_MethodClosure)methodclosure31123);


// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable18128 = (Object)new_AST_Variable_named(L"input");
localvariable18129 = (Object)new_AST_Variable_named(L"result");
array16450 = (Object)new_Type_Array_with(2, (Object)localvariable18128, (Object)localvariable18129);
localvariable18130 = (Object)new_AST_Variable_named(L"match");
array16451 = (Object)new_Type_Array_with(1, (Object)localvariable18130);
symbol30534 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
// skipWhitespace
send107460 = (Object)new_AST_Send((Object)localvariable18128, (Object)symbol30534, 0);
block7304 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107460);
// ifTrue:
send107461 = (Object)new_AST_Send((Object)instancevariable13957, (Object)SMB_ifTrue_, 1, (Object)block7304);
symbol30695 = (Object)new_Type_Symbol_cached(L"match:");
// match:
send107462 = (Object)new_AST_Send((Object)instancevariable13956, (Object)symbol30695, 1, (Object)localvariable18128);
assign13595 = (Object)new_AST_Assign((Object)localvariable18130, (Object)send107462);
// isNil
send107463 = (Object)new_AST_Send((Object)localvariable18130, (Object)SMB_isNil, 0);
block7305 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send107461, assign13595, send107463);
// add:
send107464 = (Object)new_AST_Send((Object)localvariable18129, (Object)symbol30553, 1, (Object)localvariable18130);
block7306 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107464);
// whileFalse:
send107465 = (Object)new_AST_Send((Object)block7305, (Object)SMB_whileFalse_, 1, (Object)block7306);
method31218 = (Object)new_AST_Method_with((Type_Array)array16450, (Type_Array)array16451, 2, send107465, localvariable18129);
methodclosure31124 = (Object)new_Runtime_MethodClosure(method31218);
store_method((Type_Class)class5251, (Type_Symbol)symbol30726, (Runtime_MethodClosure)methodclosure31124);


// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable18131 = (Object)new_AST_Variable_named(L"anObject");
array16452 = (Object)new_Type_Array_with(1, (Object)localvariable18131);
assign13596 = (Object)new_AST_Assign((Object)instancevariable13957, (Object)localvariable18131);
method31219 = (Object)new_AST_Method_with((Type_Array)array16452, (Type_Array)empty_Type_Array, 2, assign13596, Self);
symbol30724 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
methodclosure31125 = (Object)new_Runtime_MethodClosure(method31219);
store_method((Type_Class)class5251, (Type_Symbol)symbol30724, (Runtime_MethodClosure)methodclosure31125);


// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method31220 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13957);
methodclosure31126 = (Object)new_Runtime_MethodClosure(method31220);
store_method((Type_Class)class5251, (Type_Symbol)symbol30534, (Runtime_MethodClosure)methodclosure31126);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method31221 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30705 = (Object)new_Type_Symbol_cached(L"optional");
methodclosure31127 = (Object)new_Runtime_MethodClosure(method31221);
store_method((Type_Class)class5251, (Type_Symbol)symbol30705, (Runtime_MethodClosure)methodclosure31127);


// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable18132 = (Object)new_AST_Variable_named(L"expression");
array16453 = (Object)new_Type_Array_with(1, (Object)localvariable18132);
super1719 = (Object)new_AST_Super((Object)symbol30515, 0);
assign13597 = (Object)new_AST_Assign((Object)instancevariable13956, (Object)localvariable18132);
assign13598 = (Object)new_AST_Assign((Object)instancevariable13957, (Object)True_Const);
method31222 = (Object)new_AST_Method_with((Type_Array)array16453, (Type_Array)empty_Type_Array, 4, super1719, assign13597, assign13598, Self);
symbol30723 = (Object)new_Type_Symbol_cached(L"initialize:");
methodclosure31128 = (Object)new_Runtime_MethodClosure(method31222);
store_method((Type_Class)class5251, (Type_Symbol)symbol30723, (Runtime_MethodClosure)methodclosure31128);

objectlayout7440 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7440)->values[0] = instancevariable13905;
((Type_Array)objectlayout7440)->values[1] = instancevariable13906;
((Type_Array)objectlayout7440)->values[2] = instancevariable13907;
((Type_Array)objectlayout7440)->values[3] = instancevariable13908;
((Type_Array)objectlayout7440)->values[4] = instancevariable13909;
symbol30700 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout7441 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7441)->values[0] = instancevariable13954;
((Type_Array)objectlayout7441)->values[1] = instancevariable13955;
((Type_Array)objectlayout7441)->values[2] = instancevariable13956;
((Type_Array)objectlayout7441)->values[3] = instancevariable13957;
class5252 = (Object)new_Class_withMeta((Object)class5251, objectlayout7441, objectlayout7440);
((Type_Class)class5252)->name = (Type_Symbol)symbol30700;
metaclass4454 = (Object)HEADER(class5252);

// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
objectlayout7442 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7442)->values[0] = instancevariable13905;
((Type_Array)objectlayout7442)->values[1] = instancevariable13906;
((Type_Array)objectlayout7442)->values[2] = instancevariable13907;
((Type_Array)objectlayout7442)->values[3] = instancevariable13908;
((Type_Array)objectlayout7442)->values[4] = instancevariable13909;
symbol30704 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout7443 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7443)->values[0] = instancevariable13954;
((Type_Array)objectlayout7443)->values[1] = instancevariable13955;
instancevariable13958 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout7443)->values[2] = instancevariable13958;
instancevariable13959 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout7443)->values[3] = instancevariable13959;
class5253 = (Object)new_Class_withMeta((Object)class5250, objectlayout7443, objectlayout7442);
((Type_Class)class5253)->name = (Type_Symbol)symbol30704;
metaclass4455 = (Object)HEADER(class5253);

// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method31223 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure31129 = (Object)new_Runtime_MethodClosure(method31223);
store_method((Type_Class)class5253, (Type_Symbol)symbol30705, (Runtime_MethodClosure)methodclosure31129);


// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable18133 = (Object)new_AST_Variable_named(L"input");
array16454 = (Object)new_Type_Array_with(1, (Object)localvariable18133);
variable1218 = (Object)new_AST_Variable_named(L"return");
array16455 = (Object)new_Type_Array_with(1, (Object)variable1218);
objectlayout7444 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7444)->values[0] = instancevariable13905;
((Type_Array)objectlayout7444)->values[1] = instancevariable13906;
((Type_Array)objectlayout7444)->values[2] = instancevariable13907;
((Type_Array)objectlayout7444)->values[3] = instancevariable13908;
((Type_Array)objectlayout7444)->values[4] = instancevariable13909;
symbol30729 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class5254 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7444);
((Type_Class)class5254)->name = (Type_Symbol)symbol30729;
metaclass4456 = (Object)HEADER(class5254);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable18134 = (Object)new_AST_Variable_named(L"alternative");
array16456 = (Object)new_Type_Array_with(1, (Object)localvariable18134);
// subclassResponsibility
send107466 = (Object)new_AST_Send((Object)Self, (Object)symbol30755, 0);
method31224 = (Object)new_AST_Method_with((Type_Array)array16456, (Type_Array)empty_Type_Array, 2, send107466, Self);
symbol30730 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
methodclosure31130 = (Object)new_Runtime_MethodClosure(method31224);
store_method((Type_Class)class5254, (Type_Symbol)symbol30730, (Runtime_MethodClosure)methodclosure31130);

objectlayout7445 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7445)->values[0] = instancevariable13905;
((Type_Array)objectlayout7445)->values[1] = instancevariable13906;
((Type_Array)objectlayout7445)->values[2] = instancevariable13907;
((Type_Array)objectlayout7445)->values[3] = instancevariable13908;
((Type_Array)objectlayout7445)->values[4] = instancevariable13909;
symbol30727 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout7446 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13960 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout7446)->values[0] = instancevariable13960;
class5255 = (Object)new_Class_withMeta((Object)class5254, objectlayout7446, objectlayout7445);
((Type_Class)class5255)->name = (Type_Symbol)symbol30727;
metaclass4457 = (Object)HEADER(class5255);

// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable18135 = (Object)new_AST_Variable_named(L"newResult");
array16457 = (Object)new_Type_Array_with(1, (Object)localvariable18135);
assign13599 = (Object)new_AST_Assign((Object)instancevariable13960, (Object)localvariable18135);
method31225 = (Object)new_AST_Method_with((Type_Array)array16457, (Type_Array)empty_Type_Array, 2, assign13599, Self);
symbol30731 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure31131 = (Object)new_Runtime_MethodClosure(method31225);
store_method((Type_Class)class5255, (Type_Symbol)symbol30731, (Runtime_MethodClosure)methodclosure31131);


// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable18136 = (Object)new_AST_Variable_named(L"alternative");
array16458 = (Object)new_Type_Array_with(1, (Object)localvariable18136);
method31226 = (Object)new_AST_Method_with((Type_Array)array16458, (Type_Array)empty_Type_Array, 1, instancevariable13960);
methodclosure31132 = (Object)new_Runtime_MethodClosure(method31226);
store_method((Type_Class)class5255, (Type_Symbol)symbol30730, (Runtime_MethodClosure)methodclosure31132);


// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable18137 = (Object)new_AST_Variable_named(L"block");
array16459 = (Object)new_Type_Array_with(1, (Object)localvariable18137);
// value:
send107467 = (Object)new_AST_Send((Object)localvariable18137, (Object)SMB_value_, 1, (Object)instancevariable13960);
method31227 = (Object)new_AST_Method_with((Type_Array)array16459, (Type_Array)empty_Type_Array, 2, send107467, Self);
symbol30732 = (Object)new_Type_Symbol_cached(L"ifMatched:");
methodclosure31133 = (Object)new_Runtime_MethodClosure(method31227);
store_method((Type_Class)class5255, (Type_Symbol)symbol30732, (Runtime_MethodClosure)methodclosure31133);

classreference11526 = (Object)new_Organization_ClassReference((Type_Class)class5255);
// match:
send107468 = (Object)new_AST_Send((Object)instancevariable13958, (Object)symbol30695, 1, (Object)localvariable18133);
symbol30756 = (Object)new_Type_Symbol_cached(L"ifNil:");
objectlayout7447 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7447)->values[0] = instancevariable13905;
((Type_Array)objectlayout7447)->values[1] = instancevariable13906;
((Type_Array)objectlayout7447)->values[2] = instancevariable13907;
((Type_Array)objectlayout7447)->values[3] = instancevariable13908;
((Type_Array)objectlayout7447)->values[4] = instancevariable13909;
symbol30728 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class5256 = (Object)new_Class_withMeta((Object)class5254, empty_object_layout, objectlayout7447);
((Type_Class)class5256)->name = (Type_Symbol)symbol30728;
metaclass4458 = (Object)HEADER(class5256);
classreference11527 = (Object)new_Organization_ClassReference((Type_Class)class5256);
// escape:
send107469 = (Object)new_AST_Send((Object)variable1218, (Object)SMB_escape_, 1, (Object)classreference11527);
block7307 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107469);
// ifNil:
send107470 = (Object)new_AST_Send((Object)send107468, (Object)symbol30756, 1, (Object)block7307);
// new:
send107471 = (Object)new_AST_Send((Object)classreference11526, (Object)symbol30413, 1, (Object)send107470);
block7308 = (Object)new_AST_Block_with((Type_Array)array16455, (Type_Array)empty_Type_Array, 1, 1, send107471);
// on:
send107472 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7308);
method31228 = (Object)new_AST_Method_with((Type_Array)array16454, (Type_Array)empty_Type_Array, 1, send107472);
methodclosure31134 = (Object)new_Runtime_MethodClosure(method31228);
store_method((Type_Class)class5253, (Type_Symbol)symbol30691, (Runtime_MethodClosure)methodclosure31134);


// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable18138 = (Object)new_AST_Variable_named(L"expression");
array16460 = (Object)new_Type_Array_with(1, (Object)localvariable18138);
super1720 = (Object)new_AST_Super((Object)symbol30515, 0);
assign13600 = (Object)new_AST_Assign((Object)instancevariable13958, (Object)localvariable18138);
assign13601 = (Object)new_AST_Assign((Object)instancevariable13959, (Object)True_Const);
method31229 = (Object)new_AST_Method_with((Type_Array)array16460, (Type_Array)empty_Type_Array, 4, super1720, assign13600, assign13601, Self);
methodclosure31135 = (Object)new_Runtime_MethodClosure(method31229);
store_method((Type_Class)class5253, (Type_Symbol)symbol30723, (Runtime_MethodClosure)methodclosure31135);

classreference11528 = (Object)new_Organization_ClassReference((Type_Class)class5253);
// new:
send107473 = (Object)new_AST_Send((Object)classreference11528, (Object)symbol30413, 1, (Object)Self);
method31230 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107473);
methodclosure31136 = (Object)new_Runtime_MethodClosure(method31230);
store_method((Type_Class)class5252, (Type_Symbol)symbol30705, (Runtime_MethodClosure)methodclosure31136);


// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable18139 = (Object)new_AST_Variable_named(L"input");
array16461 = (Object)new_Type_Array_with(1, (Object)localvariable18139);
localvariable18140 = (Object)new_AST_Variable_named(L"result");
localvariable18141 = (Object)new_AST_Variable_named(L"match");
array16462 = (Object)new_Type_Array_with(2, (Object)localvariable18140, (Object)localvariable18141);
variable1219 = (Object)new_AST_Variable_named(L"return");
array16463 = (Object)new_Type_Array_with(1, (Object)variable1219);
// new
send107474 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
assign13602 = (Object)new_AST_Assign((Object)localvariable18140, (Object)send107474);
// match:
send107475 = (Object)new_AST_Send((Object)instancevariable13956, (Object)symbol30695, 1, (Object)localvariable18139);
assign13603 = (Object)new_AST_Assign((Object)localvariable18141, (Object)send107475);
// escape:
send107476 = (Object)new_AST_Send((Object)variable1219, (Object)SMB_escape_, 1, (Object)localvariable18141);
block7309 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107476);
// ifNil:
send107477 = (Object)new_AST_Send((Object)localvariable18141, (Object)symbol30756, 1, (Object)block7309);
// add:
send107478 = (Object)new_AST_Send((Object)localvariable18140, (Object)symbol30553, 1, (Object)localvariable18141);
// privateMatch:on:
send107479 = (Object)new_AST_Send((Object)Self, (Object)symbol30726, 2, (Object)localvariable18139, (Object)localvariable18140);
block7310 = (Object)new_AST_Block_with((Type_Array)array16463, (Type_Array)empty_Type_Array, 1, 5, assign13602, assign13603, send107477, send107478, send107479);
// on:
send107480 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7310);
method31231 = (Object)new_AST_Method_with((Type_Array)array16461, (Type_Array)array16462, 1, send107480);
methodclosure31137 = (Object)new_Runtime_MethodClosure(method31231);
store_method((Type_Class)class5252, (Type_Symbol)symbol30691, (Runtime_MethodClosure)methodclosure31137);

classreference11529 = (Object)new_Organization_ClassReference((Type_Class)class5252);
// new:
send107481 = (Object)new_AST_Send((Object)classreference11529, (Object)symbol30413, 1, (Object)Self);
method31232 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107481);
symbol30701 = (Object)new_Type_Symbol_cached(L"plus");
methodclosure31138 = (Object)new_Runtime_MethodClosure(method31232);
store_method((Type_Class)class5250, (Type_Symbol)symbol30701, (Runtime_MethodClosure)methodclosure31138);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable18142 = (Object)new_AST_Variable_named(L"other");
array16464 = (Object)new_Type_Array_with(1, (Object)localvariable18142);
// &
send107482 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable18142);
// skipWhitespace:
send107483 = (Object)new_AST_Send((Object)send107482, (Object)symbol30724, 1, (Object)False_Const);
method31233 = (Object)new_AST_Method_with((Type_Array)array16464, (Type_Array)empty_Type_Array, 1, send107483);
symbol30692 = (Object)new_Type_Symbol_cached(L"&&");
methodclosure31139 = (Object)new_Runtime_MethodClosure(method31233);
store_method((Type_Class)class5250, (Type_Symbol)symbol30692, (Runtime_MethodClosure)methodclosure31139);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method31234 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30702 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure31140 = (Object)new_Runtime_MethodClosure(method31234);
store_method((Type_Class)class5250, (Type_Symbol)symbol30702, (Runtime_MethodClosure)methodclosure31140);


// PEGExpression>>omit
//omit
// 	^ omit
method31235 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13955);
symbol30693 = (Object)new_Type_Symbol_cached(L"omit");
methodclosure31141 = (Object)new_Runtime_MethodClosure(method31235);
store_method((Type_Class)class5250, (Type_Symbol)symbol30693, (Runtime_MethodClosure)methodclosure31141);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable18143 = (Object)new_AST_Variable_named(L"expression");
array16465 = (Object)new_Type_Array_with(1, (Object)localvariable18143);
objectlayout7448 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7448)->values[0] = instancevariable13905;
((Type_Array)objectlayout7448)->values[1] = instancevariable13906;
((Type_Array)objectlayout7448)->values[2] = instancevariable13907;
((Type_Array)objectlayout7448)->values[3] = instancevariable13908;
((Type_Array)objectlayout7448)->values[4] = instancevariable13909;
symbol30699 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout7449 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7449)->values[0] = instancevariable13954;
((Type_Array)objectlayout7449)->values[1] = instancevariable13955;
instancevariable13961 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout7449)->values[2] = instancevariable13961;
instancevariable13962 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout7449)->values[3] = instancevariable13962;
class5257 = (Object)new_Class_withMeta((Object)class5250, objectlayout7449, objectlayout7448);
((Type_Class)class5257)->name = (Type_Symbol)symbol30699;
metaclass4459 = (Object)HEADER(class5257);

// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable18144 = (Object)new_AST_Variable_named(L"input");
array16466 = (Object)new_Type_Array_with(1, (Object)localvariable18144);
localvariable18145 = (Object)new_AST_Variable_named(L"result");
localvariable18146 = (Object)new_AST_Variable_named(L"match");
array16467 = (Object)new_Type_Array_with(2, (Object)localvariable18145, (Object)localvariable18146);
variable1220 = (Object)new_AST_Variable_named(L"return");
array16468 = (Object)new_Type_Array_with(1, (Object)variable1220);
// new
send107484 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
assign13604 = (Object)new_AST_Assign((Object)localvariable18145, (Object)send107484);
localvariable18147 = (Object)new_AST_Variable_named(L"child");
array16469 = (Object)new_Type_Array_with(1, (Object)localvariable18147);
// skipWhitespace
send107485 = (Object)new_AST_Send((Object)localvariable18144, (Object)symbol30534, 0);
block7311 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107485);
// ifTrue:
send107486 = (Object)new_AST_Send((Object)instancevariable13962, (Object)SMB_ifTrue_, 1, (Object)block7311);
// match:
send107487 = (Object)new_AST_Send((Object)localvariable18147, (Object)symbol30695, 1, (Object)localvariable18144);
assign13605 = (Object)new_AST_Assign((Object)localvariable18146, (Object)send107487);
// escape:
send107488 = (Object)new_AST_Send((Object)variable1220, (Object)SMB_escape_, 1, (Object)localvariable18146);
block7312 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107488);
// ifNil:
send107489 = (Object)new_AST_Send((Object)localvariable18146, (Object)symbol30756, 1, (Object)block7312);
// omit
send107490 = (Object)new_AST_Send((Object)localvariable18147, (Object)symbol30693, 0);
// add:
send107491 = (Object)new_AST_Send((Object)localvariable18145, (Object)symbol30553, 1, (Object)localvariable18146);
block7313 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107491);
// ifFalse:
send107492 = (Object)new_AST_Send((Object)send107490, (Object)SMB_ifFalse_, 1, (Object)block7313);
block7314 = (Object)new_AST_Block_with((Type_Array)array16469, (Type_Array)empty_Type_Array, 2, 4, send107486, assign13605, send107489, send107492);
// do:
send107493 = (Object)new_AST_Send((Object)instancevariable13961, (Object)symbol30552, 1, (Object)block7314);
// size
send107494 = (Object)new_AST_Send((Object)localvariable18145, (Object)SMB_size, 0);
smallint10772 = (Object)new_Type_SmallInt(1);
constant23447 = (Object)new_AST_Constant((Object)smallint10772);
// =
send107495 = (Object)new_AST_Send((Object)send107494, (Object)SMB__equal, 1, (Object)constant23447);
// first
send107496 = (Object)new_AST_Send((Object)localvariable18145, (Object)symbol30549, 0);
// escape:
send107497 = (Object)new_AST_Send((Object)variable1220, (Object)SMB_escape_, 1, (Object)send107496);
block7315 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107497);
// ifTrue:
send107498 = (Object)new_AST_Send((Object)send107495, (Object)SMB_ifTrue_, 1, (Object)block7315);
block7316 = (Object)new_AST_Block_with((Type_Array)array16468, (Type_Array)empty_Type_Array, 1, 4, assign13604, send107493, send107498, localvariable18145);
// on:
send107499 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7316);
method31236 = (Object)new_AST_Method_with((Type_Array)array16466, (Type_Array)array16467, 1, send107499);
methodclosure31142 = (Object)new_Runtime_MethodClosure(method31236);
store_method((Type_Class)class5257, (Type_Symbol)symbol30691, (Runtime_MethodClosure)methodclosure31142);


// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable18148 = (Object)new_AST_Variable_named(L"anObject");
array16470 = (Object)new_Type_Array_with(1, (Object)localvariable18148);
assign13606 = (Object)new_AST_Assign((Object)instancevariable13962, (Object)localvariable18148);
method31237 = (Object)new_AST_Method_with((Type_Array)array16470, (Type_Array)empty_Type_Array, 2, assign13606, Self);
methodclosure31143 = (Object)new_Runtime_MethodClosure(method31237);
store_method((Type_Class)class5257, (Type_Symbol)symbol30724, (Runtime_MethodClosure)methodclosure31143);


// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method31238 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13962);
methodclosure31144 = (Object)new_Runtime_MethodClosure(method31238);
store_method((Type_Class)class5257, (Type_Symbol)symbol30534, (Runtime_MethodClosure)methodclosure31144);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super1721 = (Object)new_AST_Super((Object)symbol30515, 0);
// new
send107500 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
// initialize:
send107501 = (Object)new_AST_Send((Object)Self, (Object)symbol30723, 1, (Object)send107500);
method31239 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1721, send107501, Self);
methodclosure31145 = (Object)new_Runtime_MethodClosure(method31239);
store_method((Type_Class)class5257, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31145);


// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable18149 = (Object)new_AST_Variable_named(L"theChildren");
array16471 = (Object)new_Type_Array_with(1, (Object)localvariable18149);
super1722 = (Object)new_AST_Super((Object)symbol30515, 0);
assign13607 = (Object)new_AST_Assign((Object)instancevariable13961, (Object)localvariable18149);
assign13608 = (Object)new_AST_Assign((Object)instancevariable13962, (Object)True_Const);
method31240 = (Object)new_AST_Method_with((Type_Array)array16471, (Type_Array)empty_Type_Array, 4, super1722, assign13607, assign13608, Self);
methodclosure31146 = (Object)new_Runtime_MethodClosure(method31240);
store_method((Type_Class)class5257, (Type_Symbol)symbol30723, (Runtime_MethodClosure)methodclosure31146);


// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable18150 = (Object)new_AST_Variable_named(L"child");
array16472 = (Object)new_Type_Array_with(1, (Object)localvariable18150);
symbol30703 = (Object)new_Type_Symbol_cached(L"asPEG");
// asPEG
send107502 = (Object)new_AST_Send((Object)localvariable18150, (Object)symbol30703, 0);
// add:
send107503 = (Object)new_AST_Send((Object)instancevariable13961, (Object)symbol30553, 1, (Object)send107502);
method31241 = (Object)new_AST_Method_with((Type_Array)array16472, (Type_Array)empty_Type_Array, 2, send107503, Self);
symbol30725 = (Object)new_Type_Symbol_cached(L"<&");
methodclosure31147 = (Object)new_Runtime_MethodClosure(method31241);
store_method((Type_Class)class5257, (Type_Symbol)symbol30725, (Runtime_MethodClosure)methodclosure31147);

classreference11530 = (Object)new_Organization_ClassReference((Type_Class)class5257);
// new
send107504 = (Object)new_AST_Send((Object)classreference11530, (Object)symbol30416, 0);
// <&
send107505 = (Object)new_AST_Send((Object)send107504, (Object)symbol30725, 1, (Object)Self);
// <&
send107506 = (Object)new_AST_Send((Object)send107505, (Object)symbol30725, 1, (Object)localvariable18143);
method31242 = (Object)new_AST_Method_with((Type_Array)array16465, (Type_Array)empty_Type_Array, 1, send107506);
methodclosure31148 = (Object)new_Runtime_MethodClosure(method31242);
store_method((Type_Class)class5250, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure31148);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign13609 = (Object)new_AST_Assign((Object)instancevariable13955, (Object)False_Const);
method31243 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign13609, Self);
methodclosure31149 = (Object)new_Runtime_MethodClosure(method31243);
store_method((Type_Class)class5250, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31149);


// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
// optional
send107507 = (Object)new_AST_Send((Object)Self, (Object)symbol30705, 0);
// skipWhitespace:
send107508 = (Object)new_AST_Send((Object)send107507, (Object)symbol30724, 1, (Object)False_Const);
method31244 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107508);
symbol30694 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure31150 = (Object)new_Runtime_MethodClosure(method31244);
store_method((Type_Class)class5250, (Type_Symbol)symbol30694, (Runtime_MethodClosure)methodclosure31150);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send107509 = (Object)new_AST_Send((Object)instancevariable13954, (Object)SMB_hash, 0);
method31245 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107509);
methodclosure31151 = (Object)new_Runtime_MethodClosure(method31245);
store_method((Type_Class)class5250, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure31151);


// PEGExpression>>name
//name
// 	^ name
method31246 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13954);
methodclosure31152 = (Object)new_Runtime_MethodClosure(method31246);
store_method((Type_Class)class5250, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure31152);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method31247 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure31153 = (Object)new_Runtime_MethodClosure(method31247);
store_method((Type_Class)class5250, (Type_Symbol)symbol30703, (Runtime_MethodClosure)methodclosure31153);


// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable18151 = (Object)new_AST_Variable_named(L"input");
array16473 = (Object)new_Type_Array_with(1, (Object)localvariable18151);
localvariable18152 = (Object)new_AST_Variable_named(L"position");
localvariable18153 = (Object)new_AST_Variable_named(L"match");
array16474 = (Object)new_Type_Array_with(2, (Object)localvariable18152, (Object)localvariable18153);
symbol30757 = (Object)new_Type_Symbol_cached(L"position");
// position
send107510 = (Object)new_AST_Send((Object)localvariable18151, (Object)symbol30757, 0);
assign13610 = (Object)new_AST_Assign((Object)localvariable18152, (Object)send107510);
// privateMatch:
send107511 = (Object)new_AST_Send((Object)Self, (Object)symbol30691, 1, (Object)localvariable18151);
assign13611 = (Object)new_AST_Assign((Object)localvariable18153, (Object)send107511);
symbol30758 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send107512 = (Object)new_AST_Send((Object)localvariable18151, (Object)symbol30758, 1, (Object)localvariable18152);
block7317 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107512);
// ifNil:
send107513 = (Object)new_AST_Send((Object)localvariable18153, (Object)symbol30756, 1, (Object)block7317);
method31248 = (Object)new_AST_Method_with((Type_Array)array16473, (Type_Array)array16474, 4, assign13610, assign13611, send107513, localvariable18153);
methodclosure31154 = (Object)new_Runtime_MethodClosure(method31248);
store_method((Type_Class)class5250, (Type_Symbol)symbol30695, (Runtime_MethodClosure)methodclosure31154);


// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable18154 = (Object)new_AST_Variable_named(L"input");
array16475 = (Object)new_Type_Array_with(1, (Object)localvariable18154);
symbol30759 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send107514 = (Object)new_AST_Send((Object)Self, (Object)symbol30759, 0);
localvariable18155 = (Object)new_AST_Variable_named(L"receiver");
array16476 = (Object)new_Type_Array_with(1, (Object)localvariable18155);
symbol30760 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send107515 = (Object)new_AST_Send((Object)localvariable18155, (Object)symbol30760, 0);
symbol30761 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send107516 = (Object)new_AST_Send((Object)localvariable18155, (Object)symbol30761, 0);
block7318 = (Object)new_AST_Block_with((Type_Array)array16476, (Type_Array)empty_Type_Array, 2, 2, send107515, send107516);
// value:
send107517 = (Object)new_AST_Send((Object)block7318, (Object)SMB_value_, 1, (Object)classreference11531);
block7319 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107517);
// ifTrue:
send107518 = (Object)new_AST_Send((Object)send107514, (Object)SMB_ifTrue_, 1, (Object)block7319);
method31249 = (Object)new_AST_Method_with((Type_Array)array16475, (Type_Array)empty_Type_Array, 2, send107518, Self);
symbol30687 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure31155 = (Object)new_Runtime_MethodClosure(method31249);
store_method((Type_Class)class5250, (Type_Symbol)symbol30687, (Runtime_MethodClosure)methodclosure31155);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send107519 = (Object)new_AST_Send((Object)classreference11528, (Object)symbol30413, 1, (Object)Self);
method31250 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107519);
methodclosure31156 = (Object)new_Runtime_MethodClosure(method31250);
store_method((Type_Class)class5250, (Type_Symbol)symbol30705, (Runtime_MethodClosure)methodclosure31156);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable18156 = (Object)new_AST_Variable_named(L"bool");
array16477 = (Object)new_Type_Array_with(1, (Object)localvariable18156);
assign13612 = (Object)new_AST_Assign((Object)instancevariable13955, (Object)localvariable18156);
method31251 = (Object)new_AST_Method_with((Type_Array)array16477, (Type_Array)empty_Type_Array, 2, assign13612, Self);
symbol30696 = (Object)new_Type_Symbol_cached(L"omit:");
methodclosure31157 = (Object)new_Runtime_MethodClosure(method31251);
store_method((Type_Class)class5250, (Type_Symbol)symbol30696, (Runtime_MethodClosure)methodclosure31157);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable18157 = (Object)new_AST_Variable_named(L"expression");
array16478 = (Object)new_Type_Array_with(1, (Object)localvariable18157);
objectlayout7450 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7450)->values[0] = instancevariable13905;
((Type_Array)objectlayout7450)->values[1] = instancevariable13906;
((Type_Array)objectlayout7450)->values[2] = instancevariable13907;
((Type_Array)objectlayout7450)->values[3] = instancevariable13908;
((Type_Array)objectlayout7450)->values[4] = instancevariable13909;
symbol30688 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout7451 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7451)->values[0] = instancevariable13954;
((Type_Array)objectlayout7451)->values[1] = instancevariable13955;
instancevariable13963 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout7451)->values[2] = instancevariable13963;
class5258 = (Object)new_Class_withMeta((Object)class5250, objectlayout7451, objectlayout7450);
((Type_Class)class5258)->name = (Type_Symbol)symbol30688;
metaclass4460 = (Object)HEADER(class5258);

// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable18158 = (Object)new_AST_Variable_named(L"child");
array16479 = (Object)new_Type_Array_with(1, (Object)localvariable18158);
// asPEG
send107520 = (Object)new_AST_Send((Object)localvariable18158, (Object)symbol30703, 0);
// add:
send107521 = (Object)new_AST_Send((Object)instancevariable13963, (Object)symbol30553, 1, (Object)send107520);
method31252 = (Object)new_AST_Method_with((Type_Array)array16479, (Type_Array)empty_Type_Array, 2, send107521, Self);
symbol30712 = (Object)new_Type_Symbol_cached(L"<=");
methodclosure31158 = (Object)new_Runtime_MethodClosure(method31252);
store_method((Type_Class)class5258, (Type_Symbol)symbol30712, (Runtime_MethodClosure)methodclosure31158);


// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
super1723 = (Object)new_AST_Super((Object)symbol30515, 0);
// new
send107522 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
// initialize:
send107523 = (Object)new_AST_Send((Object)Self, (Object)symbol30723, 1, (Object)send107522);
method31253 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1723, send107523, Self);
methodclosure31159 = (Object)new_Runtime_MethodClosure(method31253);
store_method((Type_Class)class5258, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31159);


// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable18159 = (Object)new_AST_Variable_named(L"newChildren");
array16480 = (Object)new_Type_Array_with(1, (Object)localvariable18159);
super1724 = (Object)new_AST_Super((Object)symbol30515, 0);
assign13613 = (Object)new_AST_Assign((Object)instancevariable13963, (Object)localvariable18159);
method31254 = (Object)new_AST_Method_with((Type_Array)array16480, (Type_Array)empty_Type_Array, 3, super1724, assign13613, Self);
methodclosure31160 = (Object)new_Runtime_MethodClosure(method31254);
store_method((Type_Class)class5258, (Type_Symbol)symbol30723, (Runtime_MethodClosure)methodclosure31160);


// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable18160 = (Object)new_AST_Variable_named(L"input");
array16481 = (Object)new_Type_Array_with(1, (Object)localvariable18160);
localvariable18161 = (Object)new_AST_Variable_named(L"match");
array16482 = (Object)new_Type_Array_with(1, (Object)localvariable18161);
variable1221 = (Object)new_AST_Variable_named(L"return");
array16483 = (Object)new_Type_Array_with(1, (Object)variable1221);
localvariable18162 = (Object)new_AST_Variable_named(L"child");
array16484 = (Object)new_Type_Array_with(1, (Object)localvariable18162);
// match:
send107524 = (Object)new_AST_Send((Object)localvariable18162, (Object)symbol30695, 1, (Object)localvariable18160);
assign13614 = (Object)new_AST_Assign((Object)localvariable18161, (Object)send107524);
symbol30762 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
// escape:
send107525 = (Object)new_AST_Send((Object)variable1221, (Object)SMB_escape_, 1, (Object)localvariable18161);
block7320 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107525);
// ifNotNil:
send107526 = (Object)new_AST_Send((Object)localvariable18161, (Object)symbol30762, 1, (Object)block7320);
block7321 = (Object)new_AST_Block_with((Type_Array)array16484, (Type_Array)empty_Type_Array, 2, 2, assign13614, send107526);
// do:
send107527 = (Object)new_AST_Send((Object)instancevariable13963, (Object)symbol30552, 1, (Object)block7321);
block7322 = (Object)new_AST_Block_with((Type_Array)array16483, (Type_Array)empty_Type_Array, 1, 2, send107527, Nil_Const);
// on:
send107528 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7322);
method31255 = (Object)new_AST_Method_with((Type_Array)array16481, (Type_Array)array16482, 1, send107528);
methodclosure31161 = (Object)new_Runtime_MethodClosure(method31255);
store_method((Type_Class)class5258, (Type_Symbol)symbol30691, (Runtime_MethodClosure)methodclosure31161);

classreference11532 = (Object)new_Organization_ClassReference((Type_Class)class5258);
// new
send107529 = (Object)new_AST_Send((Object)classreference11532, (Object)symbol30416, 0);
// <=
send107530 = (Object)new_AST_Send((Object)send107529, (Object)symbol30712, 1, (Object)Self);
// <=
send107531 = (Object)new_AST_Send((Object)send107530, (Object)symbol30712, 1, (Object)localvariable18157);
method31256 = (Object)new_AST_Method_with((Type_Array)array16478, (Type_Array)empty_Type_Array, 1, send107531);
methodclosure31162 = (Object)new_Runtime_MethodClosure(method31256);
store_method((Type_Class)class5250, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure31162);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
symbol30707 = (Object)new_Type_Symbol_cached(L"times");
// times
send107532 = (Object)new_AST_Send((Object)Self, (Object)symbol30707, 0);
// skipWhitespace:
send107533 = (Object)new_AST_Send((Object)send107532, (Object)symbol30724, 1, (Object)False_Const);
method31257 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107533);
symbol30697 = (Object)new_Type_Symbol_cached(L"strongTimes");
methodclosure31163 = (Object)new_Runtime_MethodClosure(method31257);
store_method((Type_Class)class5250, (Type_Symbol)symbol30697, (Runtime_MethodClosure)methodclosure31163);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
// plus
send107534 = (Object)new_AST_Send((Object)Self, (Object)symbol30701, 0);
// skipWhitespace:
send107535 = (Object)new_AST_Send((Object)send107534, (Object)symbol30724, 1, (Object)False_Const);
method31258 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107535);
symbol30689 = (Object)new_Type_Symbol_cached(L"strongPlus");
methodclosure31164 = (Object)new_Runtime_MethodClosure(method31258);
store_method((Type_Class)class5250, (Type_Symbol)symbol30689, (Runtime_MethodClosure)methodclosure31164);


// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self
classreference11533 = (Object)new_Organization_ClassReference((Type_Class)class5251);
// new:
send107536 = (Object)new_AST_Send((Object)classreference11533, (Object)symbol30413, 1, (Object)Self);
method31259 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107536);
methodclosure31165 = (Object)new_Runtime_MethodClosure(method31259);
store_method((Type_Class)class5250, (Type_Symbol)symbol30707, (Runtime_MethodClosure)methodclosure31165);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable1222 = (Object)new_AST_Variable_named(L"return");
array16485 = (Object)new_Type_Array_with(1, (Object)variable1222);
super1725 = (Object)new_AST_Super((Object)symbol30698, 0);
// escape:
send107537 = (Object)new_AST_Send((Object)variable1222, (Object)SMB_escape_, 1, (Object)super1725);
block7323 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107537);
// ifNil:
send107538 = (Object)new_AST_Send((Object)instancevariable13954, (Object)symbol30756, 1, (Object)block7323);
string10751 = (Object)new_Type_String(L"parser (");
constant23448 = (Object)new_AST_Constant((Object)string10751);
// ,
send107539 = (Object)new_AST_Send((Object)constant23448, (Object)SMB__concat, 1, (Object)instancevariable13954);
string10752 = (Object)new_Type_String(L")");
constant23449 = (Object)new_AST_Constant((Object)string10752);
// ,
send107540 = (Object)new_AST_Send((Object)send107539, (Object)SMB__concat, 1, (Object)constant23449);
block7324 = (Object)new_AST_Block_with((Type_Array)array16485, (Type_Array)empty_Type_Array, 1, 2, send107538, send107540);
// on:
send107541 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7324);
method31260 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107541);
methodclosure31166 = (Object)new_Runtime_MethodClosure(method31260);
store_method((Type_Class)class5250, (Type_Symbol)symbol30698, (Runtime_MethodClosure)methodclosure31166);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable18163 = (Object)new_AST_Variable_named(L"input");
array16486 = (Object)new_Type_Array_with(1, (Object)localvariable18163);
// debug
send107542 = (Object)new_AST_Send((Object)Self, (Object)symbol30759, 0);
symbol30763 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send107543 = (Object)new_AST_Send((Object)classreference11531, (Object)symbol30763, 0);
block7325 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107543);
// ifTrue:
send107544 = (Object)new_AST_Send((Object)send107542, (Object)SMB_ifTrue_, 1, (Object)block7325);
method31261 = (Object)new_AST_Method_with((Type_Array)array16486, (Type_Array)empty_Type_Array, 2, send107544, Self);
symbol30690 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure31167 = (Object)new_Runtime_MethodClosure(method31261);
store_method((Type_Class)class5250, (Type_Symbol)symbol30690, (Runtime_MethodClosure)methodclosure31167);

classreference11531 = (Object)new_Organization_ClassReference((Type_Class)class5250);
objectlayout7452 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7452)->values[0] = instancevariable13905;
((Type_Array)objectlayout7452)->values[1] = instancevariable13906;
((Type_Array)objectlayout7452)->values[2] = instancevariable13907;
((Type_Array)objectlayout7452)->values[3] = instancevariable13908;
((Type_Array)objectlayout7452)->values[4] = instancevariable13909;
symbol30530 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout7453 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable13964 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout7453)->values[0] = instancevariable13964;
instancevariable13965 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout7453)->values[1] = instancevariable13965;
instancevariable13966 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout7453)->values[2] = instancevariable13966;
class5260 = (Object)new_Class_withMeta((Object)class5259, objectlayout7453, objectlayout7452);
((Type_Class)class5260)->name = (Type_Symbol)symbol30530;
metaclass4461 = (Object)HEADER(class5260);
objectlayout7454 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7454)->values[0] = instancevariable13905;
((Type_Array)objectlayout7454)->values[1] = instancevariable13906;
((Type_Array)objectlayout7454)->values[2] = instancevariable13907;
((Type_Array)objectlayout7454)->values[3] = instancevariable13908;
((Type_Array)objectlayout7454)->values[4] = instancevariable13909;
symbol30529 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout7455 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7455)->values[0] = instancevariable13964;
((Type_Array)objectlayout7455)->values[1] = instancevariable13965;
((Type_Array)objectlayout7455)->values[2] = instancevariable13966;
class5261 = (Object)new_Class_withMeta((Object)class5260, objectlayout7455, objectlayout7454);
((Type_Class)class5261)->name = (Type_Symbol)symbol30529;
metaclass4462 = (Object)HEADER(class5261);
objectlayout7456 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7456)->values[0] = instancevariable13905;
((Type_Array)objectlayout7456)->values[1] = instancevariable13906;
((Type_Array)objectlayout7456)->values[2] = instancevariable13907;
((Type_Array)objectlayout7456)->values[3] = instancevariable13908;
((Type_Array)objectlayout7456)->values[4] = instancevariable13909;
symbol30441 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout7457 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7457)->values[0] = instancevariable13964;
((Type_Array)objectlayout7457)->values[1] = instancevariable13965;
((Type_Array)objectlayout7457)->values[2] = instancevariable13966;
instancevariable13967 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout7457)->values[3] = instancevariable13967;
instancevariable13968 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout7457)->values[4] = instancevariable13968;
class5262 = (Object)new_Class_withMeta((Object)class5261, objectlayout7457, objectlayout7456);
((Type_Class)class5262)->name = (Type_Symbol)symbol30441;
metaclass4463 = (Object)HEADER(class5262);

// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable18164 = (Object)new_AST_Variable_named(L"otherString");
array16487 = (Object)new_Type_Array_with(1, (Object)localvariable18164);
symbol30533 = (Object)new_Type_Symbol_cached(L"beginsWith:");
// beginsWith:
send107545 = (Object)new_AST_Send((Object)Self, (Object)symbol30533, 1, (Object)localvariable18164);
block7326 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable18164);
block7327 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send107546 = (Object)new_AST_Send((Object)send107545, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7326, (Object)block7327);
method31262 = (Object)new_AST_Method_with((Type_Array)array16487, (Type_Array)empty_Type_Array, 1, send107546);
symbol30535 = (Object)new_Type_Symbol_cached(L"scan:");
methodclosure31168 = (Object)new_Runtime_MethodClosure(method31262);
store_method((Type_Class)class5262, (Type_Symbol)symbol30535, (Runtime_MethodClosure)methodclosure31168);


// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable18165 = (Object)new_AST_Variable_named(L"bucket");
array16488 = (Object)new_Type_Array_with(1, (Object)localvariable18165);
variable1223 = (Object)new_AST_Variable_named(L"return");
array16489 = (Object)new_Type_Array_with(1, (Object)variable1223);
smallint10773 = (Object)new_Type_SmallInt(1);
constant23450 = (Object)new_AST_Constant((Object)smallint10773);
// +
send107547 = (Object)new_AST_Send((Object)instancevariable13965, (Object)SMB__plus, 1, (Object)constant23450);
// at:
send107548 = (Object)new_AST_Send((Object)instancevariable13968, (Object)SMB_at_, 1, (Object)send107547);
assign13615 = (Object)new_AST_Assign((Object)localvariable18165, (Object)send107548);
// escape:
send107549 = (Object)new_AST_Send((Object)variable1223, (Object)SMB_escape_, 1, (Object)localvariable18165);
block7328 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107549);
// ifNotNil:
send107550 = (Object)new_AST_Send((Object)localvariable18165, (Object)symbol30762, 1, (Object)block7328);
smallint10774 = (Object)new_Type_SmallInt(1);
constant23451 = (Object)new_AST_Constant((Object)smallint10774);
// +
send107551 = (Object)new_AST_Send((Object)instancevariable13965, (Object)SMB__plus, 1, (Object)constant23451);
objectlayout7458 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7458)->values[0] = instancevariable13905;
((Type_Array)objectlayout7458)->values[1] = instancevariable13906;
((Type_Array)objectlayout7458)->values[2] = instancevariable13907;
((Type_Array)objectlayout7458)->values[3] = instancevariable13908;
((Type_Array)objectlayout7458)->values[4] = instancevariable13909;
symbol30538 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout7459 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable13969 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout7459)->values[0] = instancevariable13969;
instancevariable13970 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout7459)->values[1] = instancevariable13970;
instancevariable13971 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout7459)->values[2] = instancevariable13971;
class5263 = (Object)new_Class_withMeta((Object)class5215, objectlayout7459, objectlayout7458);
((Type_Class)class5263)->name = (Type_Symbol)symbol30538;
metaclass4464 = (Object)HEADER(class5263);
classreference11534 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);
objectlayout7460 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7460)->values[0] = instancevariable13905;
((Type_Array)objectlayout7460)->values[1] = instancevariable13906;
((Type_Array)objectlayout7460)->values[2] = instancevariable13907;
((Type_Array)objectlayout7460)->values[3] = instancevariable13908;
((Type_Array)objectlayout7460)->values[4] = instancevariable13909;
symbol30721 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout7461 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable13972 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout7461)->values[0] = instancevariable13972;
instancevariable13973 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout7461)->values[1] = instancevariable13973;
class5264 = (Object)new_Class_withMeta((Object)class5215, objectlayout7461, objectlayout7460);
((Type_Class)class5264)->name = (Type_Symbol)symbol30721;
metaclass4465 = (Object)HEADER(class5264);
classreference11535 = (Object)new_Organization_ClassReference((Type_Class)class5264);
classreference11536 = (Object)new_Organization_ClassReference((Type_Class)class5263);
// new
send107552 = (Object)new_AST_Send((Object)classreference11536, (Object)symbol30416, 0);
// at:put:
send107553 = (Object)new_AST_Send((Object)instancevariable13968, (Object)SMB_at_put_, 2, (Object)send107551, (Object)send107552);
block7329 = (Object)new_AST_Block_with((Type_Array)array16489, (Type_Array)empty_Type_Array, 1, 3, assign13615, send107550, send107553);
// on:
send107554 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7329);
method31263 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16488, 1, send107554);
symbol30539 = (Object)new_Type_Symbol_cached(L"bucket");
methodclosure31169 = (Object)new_Runtime_MethodClosure(method31263);
store_method((Type_Class)class5262, (Type_Symbol)symbol30539, (Runtime_MethodClosure)methodclosure31169);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable18166 = (Object)new_AST_Variable_named(L"parser");
array16490 = (Object)new_Type_Array_with(1, (Object)localvariable18166);
localvariable18167 = (Object)new_AST_Variable_named(L"result");
localvariable18168 = (Object)new_AST_Variable_named(L"doCache");
array16491 = (Object)new_Type_Array_with(2, (Object)localvariable18167, (Object)localvariable18168);
variable1224 = (Object)new_AST_Variable_named(L"return");
array16492 = (Object)new_Type_Array_with(1, (Object)variable1224);
assign13616 = (Object)new_AST_Assign((Object)localvariable18168, (Object)True_Const);
// bucket
send107555 = (Object)new_AST_Send((Object)Self, (Object)symbol30539, 0);
symbol30764 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
symbol30532 = (Object)new_Type_Symbol_cached(L"doMatch:");
// doMatch:
send107556 = (Object)new_AST_Send((Object)Self, (Object)symbol30532, 1, (Object)localvariable18166);
block7330 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107556);
// at:ifAbsentPut:
send107557 = (Object)new_AST_Send((Object)send107555, (Object)symbol30764, 2, (Object)localvariable18166, (Object)block7330);
assign13617 = (Object)new_AST_Assign((Object)localvariable18167, (Object)send107557);
symbol30765 = (Object)new_Type_Symbol_cached(L"x");
// x
send107558 = (Object)new_AST_Send((Object)localvariable18167, (Object)symbol30765, 0);
assign13618 = (Object)new_AST_Assign((Object)instancevariable13965, (Object)send107558);
symbol30766 = (Object)new_Type_Symbol_cached(L"y");
// y
send107559 = (Object)new_AST_Send((Object)localvariable18167, (Object)symbol30766, 0);
// escape:
send107560 = (Object)new_AST_Send((Object)variable1224, (Object)SMB_escape_, 1, (Object)send107559);
block7331 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign13617, assign13618, send107560);
// doMatch:
send107561 = (Object)new_AST_Send((Object)Self, (Object)symbol30532, 1, (Object)localvariable18166);
// y
send107562 = (Object)new_AST_Send((Object)send107561, (Object)symbol30766, 0);
// escape:
send107563 = (Object)new_AST_Send((Object)variable1224, (Object)SMB_escape_, 1, (Object)send107562);
block7332 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107563);
// ifTrue:ifFalse:
send107564 = (Object)new_AST_Send((Object)localvariable18168, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7331, (Object)block7332);
block7333 = (Object)new_AST_Block_with((Type_Array)array16492, (Type_Array)empty_Type_Array, 1, 3, assign13616, send107564, Self);
// on:
send107565 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7333);
method31264 = (Object)new_AST_Method_with((Type_Array)array16490, (Type_Array)array16491, 1, send107565);
symbol30540 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
methodclosure31170 = (Object)new_Runtime_MethodClosure(method31264);
store_method((Type_Class)class5262, (Type_Symbol)symbol30540, (Runtime_MethodClosure)methodclosure31170);


// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
// match:
send107566 = (Object)new_AST_Send((Object)instancevariable13967, (Object)symbol30695, 1, (Object)Self);
method31265 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107566);
methodclosure31171 = (Object)new_Runtime_MethodClosure(method31265);
store_method((Type_Class)class5262, (Type_Symbol)symbol30534, (Runtime_MethodClosure)methodclosure31171);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable18169 = (Object)new_AST_Variable_named(L"aString");
localvariable18170 = (Object)new_AST_Variable_named(L"aSeparator");
array16493 = (Object)new_Type_Array_with(2, (Object)localvariable18169, (Object)localvariable18170);
super1726 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable18169);
assign13619 = (Object)new_AST_Assign((Object)instancevariable13967, (Object)localvariable18170);
// size
send107567 = (Object)new_AST_Send((Object)localvariable18169, (Object)SMB_size, 0);
smallint10775 = (Object)new_Type_SmallInt(1);
constant23452 = (Object)new_AST_Constant((Object)smallint10775);
// +
send107568 = (Object)new_AST_Send((Object)send107567, (Object)SMB__plus, 1, (Object)constant23452);
// new:
send107569 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)send107568);
assign13620 = (Object)new_AST_Assign((Object)instancevariable13968, (Object)send107569);
method31266 = (Object)new_AST_Method_with((Type_Array)array16493, (Type_Array)empty_Type_Array, 4, super1726, assign13619, assign13620, Self);
symbol30536 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure31172 = (Object)new_Runtime_MethodClosure(method31266);
store_method((Type_Class)class5262, (Type_Symbol)symbol30536, (Runtime_MethodClosure)methodclosure31172);


// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable18171 = (Object)new_AST_Variable_named(L"parser");
array16494 = (Object)new_Type_Array_with(1, (Object)localvariable18171);
localvariable18172 = (Object)new_AST_Variable_named(L"result");
array16495 = (Object)new_Type_Array_with(1, (Object)localvariable18172);
symbol30711 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send107570 = (Object)new_AST_Send((Object)localvariable18171, (Object)symbol30711, 1, (Object)Self);
assign13621 = (Object)new_AST_Assign((Object)localvariable18172, (Object)send107570);
symbol30767 = (Object)new_Type_Symbol_cached(L"@");
// @
send107571 = (Object)new_AST_Send((Object)instancevariable13965, (Object)symbol30767, 1, (Object)localvariable18172);
method31267 = (Object)new_AST_Method_with((Type_Array)array16494, (Type_Array)array16495, 2, assign13621, send107571);
methodclosure31173 = (Object)new_Runtime_MethodClosure(method31267);
store_method((Type_Class)class5262, (Type_Symbol)symbol30532, (Runtime_MethodClosure)methodclosure31173);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable18173 = (Object)new_AST_Variable_named(L"subCollection");
array16496 = (Object)new_Type_Array_with(1, (Object)localvariable18173);
localvariable18174 = (Object)new_AST_Variable_named(L"pattern");
localvariable18175 = (Object)new_AST_Variable_named(L"startMatch");
array16497 = (Object)new_Type_Array_with(2, (Object)localvariable18174, (Object)localvariable18175);
variable1225 = (Object)new_AST_Variable_named(L"return");
array16498 = (Object)new_Type_Array_with(1, (Object)variable1225);
symbol30768 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send107572 = (Object)new_AST_Send((Object)localvariable18173, (Object)symbol30768, 0);
assign13622 = (Object)new_AST_Assign((Object)localvariable18174, (Object)send107572);
assign13623 = (Object)new_AST_Assign((Object)localvariable18175, (Object)Nil_Const);
// atEnd
send107573 = (Object)new_AST_Send((Object)localvariable18174, (Object)SMB_atEnd, 0);
block7334 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107573);
// atEnd
send107574 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
// escape:
send107575 = (Object)new_AST_Send((Object)variable1225, (Object)SMB_escape_, 1, (Object)False_Const);
block7335 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107575);
// ifTrue:
send107576 = (Object)new_AST_Send((Object)send107574, (Object)SMB_ifTrue_, 1, (Object)block7335);
symbol30769 = (Object)new_Type_Symbol_cached(L"next");
// next
send107577 = (Object)new_AST_Send((Object)Self, (Object)symbol30769, 0);
// next
send107578 = (Object)new_AST_Send((Object)localvariable18174, (Object)symbol30769, 0);
// ~=
send107579 = (Object)new_AST_Send((Object)send107577, (Object)symbol30411, 1, (Object)send107578);
// escape:
send107580 = (Object)new_AST_Send((Object)variable1225, (Object)SMB_escape_, 1, (Object)False_Const);
block7336 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107580);
// ifTrue:
send107581 = (Object)new_AST_Send((Object)send107579, (Object)SMB_ifTrue_, 1, (Object)block7336);
block7337 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send107576, send107581);
// whileFalse:
send107582 = (Object)new_AST_Send((Object)block7334, (Object)SMB_whileFalse_, 1, (Object)block7337);
block7338 = (Object)new_AST_Block_with((Type_Array)array16498, (Type_Array)empty_Type_Array, 1, 4, assign13622, assign13623, send107582, True_Const);
// on:
send107583 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7338);
method31268 = (Object)new_AST_Method_with((Type_Array)array16496, (Type_Array)array16497, 1, send107583);
methodclosure31174 = (Object)new_Runtime_MethodClosure(method31268);
store_method((Type_Class)class5262, (Type_Symbol)symbol30533, (Runtime_MethodClosure)methodclosure31174);

classreference11537 = (Object)new_Organization_ClassReference((Type_Class)class5262);
classreference11538 = (Object)new_Organization_ClassReference((Type_Class)class5254);
objectlayout7462 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7462)->values[0] = instancevariable13905;
((Type_Array)objectlayout7462)->values[1] = instancevariable13906;
((Type_Array)objectlayout7462)->values[2] = instancevariable13907;
((Type_Array)objectlayout7462)->values[3] = instancevariable13908;
((Type_Array)objectlayout7462)->values[4] = instancevariable13909;
symbol30500 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout7463 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7463)->values[0] = instancevariable13954;
((Type_Array)objectlayout7463)->values[1] = instancevariable13955;
instancevariable13974 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout7463)->values[2] = instancevariable13974;
instancevariable13975 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout7463)->values[3] = instancevariable13975;
instancevariable13976 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout7463)->values[4] = instancevariable13976;
instancevariable13977 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout7463)->values[5] = instancevariable13977;
class5265 = (Object)new_Class_withMeta((Object)class5250, objectlayout7463, objectlayout7462);
((Type_Class)class5265)->name = (Type_Symbol)symbol30500;
metaclass4466 = (Object)HEADER(class5265);

// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable18176 = (Object)new_AST_Variable_named(L"aSeparator");
array16499 = (Object)new_Type_Array_with(1, (Object)localvariable18176);
assign13624 = (Object)new_AST_Assign((Object)instancevariable13977, (Object)localvariable18176);
method31269 = (Object)new_AST_Method_with((Type_Array)array16499, (Type_Array)empty_Type_Array, 2, assign13624, Self);
symbol30708 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure31175 = (Object)new_Runtime_MethodClosure(method31269);
store_method((Type_Class)class5265, (Type_Symbol)symbol30708, (Runtime_MethodClosure)methodclosure31175);


// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable18177 = (Object)new_AST_Variable_named(L"input");
array16500 = (Object)new_Type_Array_with(1, (Object)localvariable18177);
localvariable18178 = (Object)new_AST_Variable_named(L"result");
array16501 = (Object)new_Type_Array_with(1, (Object)localvariable18178);
// memoizeMatch:
send107584 = (Object)new_AST_Send((Object)localvariable18177, (Object)symbol30540, 1, (Object)Self);
assign13625 = (Object)new_AST_Assign((Object)localvariable18178, (Object)send107584);
method31270 = (Object)new_AST_Method_with((Type_Array)array16500, (Type_Array)array16501, 2, assign13625, localvariable18178);
methodclosure31176 = (Object)new_Runtime_MethodClosure(method31270);
store_method((Type_Class)class5265, (Type_Symbol)symbol30695, (Runtime_MethodClosure)methodclosure31176);


// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable18179 = (Object)new_AST_Variable_named(L"aBlock");
array16502 = (Object)new_Type_Array_with(1, (Object)localvariable18179);
assign13626 = (Object)new_AST_Assign((Object)instancevariable13975, (Object)localvariable18179);
method31271 = (Object)new_AST_Method_with((Type_Array)array16502, (Type_Array)empty_Type_Array, 2, assign13626, Self);
symbol30710 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure31177 = (Object)new_Runtime_MethodClosure(method31271);
store_method((Type_Class)class5265, (Type_Symbol)symbol30710, (Runtime_MethodClosure)methodclosure31177);


// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable18180 = (Object)new_AST_Variable_named(L"theExpression");
array16503 = (Object)new_Type_Array_with(1, (Object)localvariable18180);
// asPEG
send107585 = (Object)new_AST_Send((Object)localvariable18180, (Object)symbol30703, 0);
assign13627 = (Object)new_AST_Assign((Object)instancevariable13974, (Object)send107585);
method31272 = (Object)new_AST_Method_with((Type_Array)array16503, (Type_Array)empty_Type_Array, 2, assign13627, Self);
methodclosure31178 = (Object)new_Runtime_MethodClosure(method31272);
store_method((Type_Class)class5265, (Type_Symbol)symbol30712, (Runtime_MethodClosure)methodclosure31178);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable18181 = (Object)new_AST_Variable_named(L"input");
array16504 = (Object)new_Type_Array_with(1, (Object)localvariable18181);
localvariable18182 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable18183 = (Object)new_AST_Variable_named(L"result");
array16505 = (Object)new_Type_Array_with(2, (Object)localvariable18182, (Object)localvariable18183);
// on:separator:
send107586 = (Object)new_AST_Send((Object)classreference11537, (Object)symbol30536, 2, (Object)localvariable18181, (Object)instancevariable13977);
assign13628 = (Object)new_AST_Assign((Object)localvariable18182, (Object)send107586);
// match:
send107587 = (Object)new_AST_Send((Object)Self, (Object)symbol30695, 1, (Object)localvariable18182);
assign13629 = (Object)new_AST_Assign((Object)localvariable18183, (Object)send107587);
method31273 = (Object)new_AST_Method_with((Type_Array)array16504, (Type_Array)array16505, 3, assign13628, assign13629, localvariable18183);
symbol30709 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure31179 = (Object)new_Runtime_MethodClosure(method31273);
store_method((Type_Class)class5265, (Type_Symbol)symbol30709, (Runtime_MethodClosure)methodclosure31179);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super1727 = (Object)new_AST_Super((Object)symbol30515, 0);
// class
send107588 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol30770 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send107589 = (Object)new_AST_Send((Object)send107588, (Object)symbol30770, 0);
assign13630 = (Object)new_AST_Assign((Object)instancevariable13977, (Object)send107589);
method31274 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1727, assign13630, Self);
methodclosure31180 = (Object)new_Runtime_MethodClosure(method31274);
store_method((Type_Class)class5265, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31180);


// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable18184 = (Object)new_AST_Variable_named(L"input");
array16506 = (Object)new_Type_Array_with(1, (Object)localvariable18184);
localvariable18185 = (Object)new_AST_Variable_named(L"match");
array16507 = (Object)new_Type_Array_with(1, (Object)localvariable18185);
variable1226 = (Object)new_AST_Variable_named(L"return");
array16508 = (Object)new_Type_Array_with(1, (Object)variable1226);
// match:
send107590 = (Object)new_AST_Send((Object)instancevariable13974, (Object)symbol30695, 1, (Object)localvariable18184);
assign13631 = (Object)new_AST_Assign((Object)localvariable18185, (Object)send107590);
symbol30771 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block7339 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable18185);
// escape:
send107591 = (Object)new_AST_Send((Object)variable1226, (Object)SMB_escape_, 1, (Object)localvariable18185);
block7340 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107591);
// ifNil:
send107592 = (Object)new_AST_Send((Object)instancevariable13975, (Object)symbol30756, 1, (Object)block7340);
// value:
send107593 = (Object)new_AST_Send((Object)instancevariable13975, (Object)SMB_value_, 1, (Object)localvariable18185);
block7341 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send107592, send107593);
// ifNil:ifNotNil:
send107594 = (Object)new_AST_Send((Object)localvariable18185, (Object)symbol30771, 2, (Object)block7339, (Object)block7341);
block7342 = (Object)new_AST_Block_with((Type_Array)array16508, (Type_Array)empty_Type_Array, 1, 2, assign13631, send107594);
// on:
send107595 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7342);
method31275 = (Object)new_AST_Method_with((Type_Array)array16506, (Type_Array)array16507, 1, send107595);
methodclosure31181 = (Object)new_Runtime_MethodClosure(method31275);
store_method((Type_Class)class5265, (Type_Symbol)symbol30711, (Runtime_MethodClosure)methodclosure31181);

classreference11539 = (Object)new_Organization_ClassReference((Type_Class)class5265);
objectlayout7464 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7464)->values[0] = instancevariable13905;
((Type_Array)objectlayout7464)->values[1] = instancevariable13906;
((Type_Array)objectlayout7464)->values[2] = instancevariable13907;
((Type_Array)objectlayout7464)->values[3] = instancevariable13908;
((Type_Array)objectlayout7464)->values[4] = instancevariable13909;
symbol30495 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout7465 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable13978 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout7465)->values[0] = instancevariable13978;
instancevariable13979 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout7465)->values[1] = instancevariable13979;
instancevariable13980 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout7465)->values[2] = instancevariable13980;
class5266 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7465, objectlayout7464);
((Type_Class)class5266)->name = (Type_Symbol)symbol30495;
metaclass4467 = (Object)HEADER(class5266);

// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string10753 = (Object)new_Type_String(L":=");
constant23453 = (Object)new_AST_Constant((Object)string10753);
// asPEG
send107596 = (Object)new_AST_Send((Object)constant23453, (Object)symbol30703, 0);
string10754 = (Object)new_Type_String(L"_");
constant23454 = (Object)new_AST_Constant((Object)string10754);
// |
send107597 = (Object)new_AST_Send((Object)send107596, (Object)SMB__or, 1, (Object)constant23454);
// omit:
send107598 = (Object)new_AST_Send((Object)send107597, (Object)symbol30696, 1, (Object)True_Const);
method31276 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107598);
symbol30671 = (Object)new_Type_Symbol_cached(L"assignmentOp");
methodclosure31182 = (Object)new_Runtime_MethodClosure(method31276);
store_method((Type_Class)class5266, (Type_Symbol)symbol30671, (Runtime_MethodClosure)methodclosure31182);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
symbol30772 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
string10755 = (Object)new_Type_String(L"STATEMENTS");
constant23455 = (Object)new_AST_Constant((Object)string10755);
symbol30773 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send107599 = (Object)new_AST_Send((Object)Self, (Object)symbol30773, 0);
// times
send107600 = (Object)new_AST_Send((Object)send107599, (Object)symbol30707, 0);
symbol30774 = (Object)new_Type_Symbol_cached(L"return");
// return
send107601 = (Object)new_AST_Send((Object)Self, (Object)symbol30774, 0);
symbol30775 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send107602 = (Object)new_AST_Send((Object)Self, (Object)symbol30775, 0);
// |
send107603 = (Object)new_AST_Send((Object)send107601, (Object)SMB__or, 1, (Object)send107602);
// optional
send107604 = (Object)new_AST_Send((Object)send107603, (Object)symbol30705, 0);
// &
send107605 = (Object)new_AST_Send((Object)send107600, (Object)SMB__and, 1, (Object)send107604);
localvariable18186 = (Object)new_AST_Variable_named(L"result");
array16509 = (Object)new_Type_Array_with(1, (Object)localvariable18186);
smallint10776 = (Object)new_Type_SmallInt(2);
constant23456 = (Object)new_AST_Constant((Object)smallint10776);
// at:
send107606 = (Object)new_AST_Send((Object)localvariable18186, (Object)SMB_at_, 1, (Object)constant23456);
localvariable18187 = (Object)new_AST_Variable_named(L"exp");
array16510 = (Object)new_Type_Array_with(1, (Object)localvariable18187);
// first
send107607 = (Object)new_AST_Send((Object)localvariable18186, (Object)symbol30549, 0);
// add:
send107608 = (Object)new_AST_Send((Object)send107607, (Object)symbol30553, 1, (Object)localvariable18187);
block7343 = (Object)new_AST_Block_with((Type_Array)array16510, (Type_Array)empty_Type_Array, 2, 1, send107608);
// ifMatched:
send107609 = (Object)new_AST_Send((Object)send107606, (Object)symbol30732, 1, (Object)block7343);
// first
send107610 = (Object)new_AST_Send((Object)localvariable18186, (Object)symbol30549, 0);
block7344 = (Object)new_AST_Block_with((Type_Array)array16509, (Type_Array)empty_Type_Array, 1, 2, send107609, send107610);
// named:parsing:semantics:
send107611 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23455, (Object)send107605, (Object)block7344);
method31277 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107611);
symbol30655 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure31183 = (Object)new_Runtime_MethodClosure(method31277);
store_method((Type_Class)class5266, (Type_Symbol)symbol30655, (Runtime_MethodClosure)methodclosure31183);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol30776 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send107612 = (Object)new_AST_Send((Object)Self, (Object)symbol30776, 0);
symbol30777 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send107613 = (Object)new_AST_Send((Object)Self, (Object)symbol30777, 0);
// |
send107614 = (Object)new_AST_Send((Object)send107612, (Object)SMB__or, 1, (Object)send107613);
method31278 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107614);
symbol30683 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure31184 = (Object)new_Runtime_MethodClosure(method31278);
store_method((Type_Class)class5266, (Type_Symbol)symbol30683, (Runtime_MethodClosure)methodclosure31184);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
symbol30778 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send107615 = (Object)new_AST_Send((Object)Self, (Object)symbol30778, 0);
symbol30779 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send107616 = (Object)new_AST_Send((Object)Self, (Object)symbol30779, 0);
symbol30780 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send107617 = (Object)new_AST_Send((Object)Self, (Object)symbol30780, 0);
symbol30781 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send107618 = (Object)new_AST_Send((Object)Self, (Object)symbol30781, 0);
// <=
send107619 = (Object)new_AST_Send((Object)send107617, (Object)symbol30712, 1, (Object)send107618);
// <=
send107620 = (Object)new_AST_Send((Object)send107616, (Object)symbol30712, 1, (Object)send107619);
// |
send107621 = (Object)new_AST_Send((Object)send107615, (Object)SMB__or, 1, (Object)send107620);
symbol30782 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send107622 = (Object)new_AST_Send((Object)Self, (Object)symbol30782, 0);
// <=
send107623 = (Object)new_AST_Send((Object)send107621, (Object)symbol30712, 1, (Object)send107622);
method31279 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107623);
symbol30625 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure31185 = (Object)new_Runtime_MethodClosure(method31279);
store_method((Type_Class)class5266, (Type_Symbol)symbol30625, (Runtime_MethodClosure)methodclosure31185);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
symbol30783 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send107624 = (Object)new_AST_Send((Object)Self, (Object)symbol30783, 0);
symbol30784 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send107625 = (Object)new_AST_Send((Object)Self, (Object)symbol30784, 0);
// |
send107626 = (Object)new_AST_Send((Object)send107624, (Object)SMB__or, 1, (Object)send107625);
method31280 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107626);
symbol30637 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure31186 = (Object)new_Runtime_MethodClosure(method31280);
store_method((Type_Class)class5266, (Type_Symbol)symbol30637, (Runtime_MethodClosure)methodclosure31186);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send107627 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
// primary
send107628 = (Object)new_AST_Send((Object)Self, (Object)symbol30784, 0);
method31281 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send107627, send107628);
symbol30665 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure31187 = (Object)new_Runtime_MethodClosure(method31281);
store_method((Type_Class)class5266, (Type_Symbol)symbol30665, (Runtime_MethodClosure)methodclosure31187);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
symbol30785 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
constant23457 = (Object)new_AST_Constant((Object)symbol30785);
string10756 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant23458 = (Object)new_AST_Constant((Object)string10756);
// named:
send107629 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30518, 1, (Object)constant23458);
block7345 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107629);
// at:ifAbsentPut:
send107630 = (Object)new_AST_Send((Object)instancevariable13978, (Object)symbol30764, 2, (Object)constant23457, (Object)block7345);
method31282 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107630);
symbol30630 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
methodclosure31188 = (Object)new_Runtime_MethodClosure(method31282);
store_method((Type_Class)class5266, (Type_Symbol)symbol30630, (Runtime_MethodClosure)methodclosure31188);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string10757 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant23459 = (Object)new_AST_Constant((Object)string10757);
symbol30786 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send107631 = (Object)new_AST_Send((Object)Self, (Object)symbol30786, 0);
localvariable18188 = (Object)new_AST_Variable_named(L"selector");
array16511 = (Object)new_Type_Array_with(1, (Object)localvariable18188);
// new
send107632 = (Object)new_AST_Send((Object)classreference11506, (Object)symbol30416, 0);
// selector:
send107633 = (Object)new_AST_Send((Object)send107632, (Object)symbol30583, 1, (Object)localvariable18188);
block7346 = (Object)new_AST_Block_with((Type_Array)array16511, (Type_Array)empty_Type_Array, 1, 1, send107633);
// named:parsing:semantics:
send107634 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23459, (Object)send107631, (Object)block7346);
method31283 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107634);
symbol30619 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure31189 = (Object)new_Runtime_MethodClosure(method31283);
store_method((Type_Class)class5266, (Type_Symbol)symbol30619, (Runtime_MethodClosure)methodclosure31189);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string10758 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant23460 = (Object)new_AST_Constant((Object)string10758);
string10759 = (Object)new_Type_String(L"$");
constant23461 = (Object)new_AST_Constant((Object)string10759);
// asPEG
send107635 = (Object)new_AST_Send((Object)constant23461, (Object)symbol30703, 0);
// omit:
send107636 = (Object)new_AST_Send((Object)send107635, (Object)symbol30696, 1, (Object)True_Const);
symbol30787 = (Object)new_Type_Symbol_cached(L"character");
// character
send107637 = (Object)new_AST_Send((Object)Self, (Object)symbol30787, 0);
// &&
send107638 = (Object)new_AST_Send((Object)send107636, (Object)symbol30692, 1, (Object)send107637);
localvariable18189 = (Object)new_AST_Variable_named(L"char");
array16512 = (Object)new_Type_Array_with(1, (Object)localvariable18189);
// new
send107639 = (Object)new_AST_Send((Object)classreference11519, (Object)symbol30416, 0);
// first
send107640 = (Object)new_AST_Send((Object)localvariable18189, (Object)symbol30549, 0);
// char:
send107641 = (Object)new_AST_Send((Object)send107639, (Object)symbol30716, 1, (Object)send107640);
block7347 = (Object)new_AST_Block_with((Type_Array)array16512, (Type_Array)empty_Type_Array, 1, 1, send107641);
// named:parsing:semantics:
send107642 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23460, (Object)send107638, (Object)block7347);
method31284 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107642);
symbol30647 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure31190 = (Object)new_Runtime_MethodClosure(method31284);
store_method((Type_Class)class5266, (Type_Symbol)symbol30647, (Runtime_MethodClosure)methodclosure31190);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string10760 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant23462 = (Object)new_AST_Constant((Object)string10760);
symbol30788 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send107643 = (Object)new_AST_Send((Object)Self, (Object)symbol30788, 0);
symbol30789 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send107644 = (Object)new_AST_Send((Object)Self, (Object)symbol30789, 0);
// &
send107645 = (Object)new_AST_Send((Object)send107643, (Object)SMB__and, 1, (Object)send107644);
localvariable18190 = (Object)new_AST_Variable_named(L"parts");
array16513 = (Object)new_Type_Array_with(1, (Object)localvariable18190);
smallint10777 = (Object)new_Type_SmallInt(2);
constant23463 = (Object)new_AST_Constant((Object)smallint10777);
// at:
send107646 = (Object)new_AST_Send((Object)localvariable18190, (Object)SMB_at_, 1, (Object)constant23463);
// first
send107647 = (Object)new_AST_Send((Object)localvariable18190, (Object)symbol30549, 0);
// receiver:
send107648 = (Object)new_AST_Send((Object)send107646, (Object)symbol30589, 1, (Object)send107647);
block7348 = (Object)new_AST_Block_with((Type_Array)array16513, (Type_Array)empty_Type_Array, 1, 1, send107648);
// named:parsing:semantics:
send107649 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23462, (Object)send107645, (Object)block7348);
method31285 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107649);
symbol30675 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure31191 = (Object)new_Runtime_MethodClosure(method31285);
store_method((Type_Class)class5266, (Type_Symbol)symbol30675, (Runtime_MethodClosure)methodclosure31191);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable18191 = (Object)new_AST_Variable_named(L"receiver");
array16514 = (Object)new_Type_Array_with(1, (Object)localvariable18191);
string10761 = (Object)new_Type_String(L";");
constant23464 = (Object)new_AST_Constant((Object)string10761);
// asPEG
send107650 = (Object)new_AST_Send((Object)constant23464, (Object)symbol30703, 0);
// omit:
send107651 = (Object)new_AST_Send((Object)send107650, (Object)symbol30696, 1, (Object)True_Const);
// keywordMessageExpression
send107652 = (Object)new_AST_Send((Object)Self, (Object)symbol30789, 0);
symbol30790 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send107653 = (Object)new_AST_Send((Object)Self, (Object)symbol30790, 0);
// |
send107654 = (Object)new_AST_Send((Object)send107652, (Object)SMB__or, 1, (Object)send107653);
// &
send107655 = (Object)new_AST_Send((Object)send107651, (Object)SMB__and, 1, (Object)send107654);
symbol30791 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send107656 = (Object)new_AST_Send((Object)Self, (Object)symbol30791, 0);
// <=
send107657 = (Object)new_AST_Send((Object)send107655, (Object)symbol30712, 1, (Object)send107656);
// plus
send107658 = (Object)new_AST_Send((Object)send107657, (Object)symbol30701, 0);
// &
send107659 = (Object)new_AST_Send((Object)localvariable18191, (Object)SMB__and, 1, (Object)send107658);
localvariable18192 = (Object)new_AST_Variable_named(L"parts");
array16515 = (Object)new_Type_Array_with(1, (Object)localvariable18192);
smallint10778 = (Object)new_Type_SmallInt(2);
constant23465 = (Object)new_AST_Constant((Object)smallint10778);
// at:
send107660 = (Object)new_AST_Send((Object)localvariable18192, (Object)SMB_at_, 1, (Object)constant23465);
symbol30792 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send107661 = (Object)new_AST_Send((Object)localvariable18192, (Object)symbol30549, 0);
// addFirst:
send107662 = (Object)new_AST_Send((Object)send107660, (Object)symbol30792, 1, (Object)send107661);
localvariable18193 = (Object)new_AST_Variable_named(L"receiver");
array16516 = (Object)new_Type_Array_with(1, (Object)localvariable18193);
// first
send107663 = (Object)new_AST_Send((Object)localvariable18192, (Object)symbol30549, 0);
// receiver
send107664 = (Object)new_AST_Send((Object)send107663, (Object)symbol30591, 0);
// receiver:
send107665 = (Object)new_AST_Send((Object)localvariable18193, (Object)symbol30589, 1, (Object)send107664);
smallint10779 = (Object)new_Type_SmallInt(2);
constant23466 = (Object)new_AST_Constant((Object)smallint10779);
// at:
send107666 = (Object)new_AST_Send((Object)localvariable18192, (Object)SMB_at_, 1, (Object)constant23466);
// cascades:
send107667 = (Object)new_AST_Send((Object)localvariable18193, (Object)symbol30609, 1, (Object)send107666);
block7349 = (Object)new_AST_Block_with((Type_Array)array16516, (Type_Array)empty_Type_Array, 3, 2, send107665, send107667);
// new
send107668 = (Object)new_AST_Send((Object)classreference11521, (Object)symbol30416, 0);
// value:
send107669 = (Object)new_AST_Send((Object)block7349, (Object)SMB_value_, 1, (Object)send107668);
block7350 = (Object)new_AST_Block_with((Type_Array)array16515, (Type_Array)empty_Type_Array, 2, 2, send107662, send107669);
// semantics:
send107670 = (Object)new_AST_Send((Object)localvariable18191, (Object)symbol30710, 1, (Object)block7350);
block7351 = (Object)new_AST_Block_with((Type_Array)array16514, (Type_Array)empty_Type_Array, 1, 2, send107659, send107670);
// cascadedMessageExpression
send107671 = (Object)new_AST_Send((Object)Self, (Object)symbol30785, 0);
symbol30793 = (Object)new_Type_Symbol_cached(L"messageExpression");
// messageExpression
send107672 = (Object)new_AST_Send((Object)Self, (Object)symbol30793, 0);
// <=
send107673 = (Object)new_AST_Send((Object)send107671, (Object)symbol30712, 1, (Object)send107672);
// value:
send107674 = (Object)new_AST_Send((Object)block7351, (Object)SMB_value_, 1, (Object)send107673);
method31286 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107674);
symbol30659 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
methodclosure31192 = (Object)new_Runtime_MethodClosure(method31286);
store_method((Type_Class)class5266, (Type_Symbol)symbol30659, (Runtime_MethodClosure)methodclosure31192);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string10762 = (Object)new_Type_String(L"METHOD");
constant23467 = (Object)new_AST_Constant((Object)string10762);
symbol30794 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send107675 = (Object)new_AST_Send((Object)Self, (Object)symbol30794, 0);
// temporaries
send107676 = (Object)new_AST_Send((Object)Self, (Object)symbol30604, 0);
// optional
send107677 = (Object)new_AST_Send((Object)send107676, (Object)symbol30705, 0);
symbol30795 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send107678 = (Object)new_AST_Send((Object)Self, (Object)symbol30795, 0);
// times
send107679 = (Object)new_AST_Send((Object)send107678, (Object)symbol30707, 0);
// statements
send107680 = (Object)new_AST_Send((Object)Self, (Object)symbol30599, 0);
// <&
send107681 = (Object)new_AST_Send((Object)send107679, (Object)symbol30725, 1, (Object)send107680);
// <&
send107682 = (Object)new_AST_Send((Object)send107677, (Object)symbol30725, 1, (Object)send107681);
// &
send107683 = (Object)new_AST_Send((Object)send107675, (Object)SMB__and, 1, (Object)send107682);
// separator
send107684 = (Object)new_AST_Send((Object)Self, (Object)symbol30770, 0);
// <&
send107685 = (Object)new_AST_Send((Object)send107683, (Object)symbol30725, 1, (Object)send107684);
localvariable18194 = (Object)new_AST_Variable_named(L"parts");
array16517 = (Object)new_Type_Array_with(1, (Object)localvariable18194);
localvariable18195 = (Object)new_AST_Variable_named(L"receiver");
array16518 = (Object)new_Type_Array_with(1, (Object)localvariable18195);
// first
send107686 = (Object)new_AST_Send((Object)localvariable18194, (Object)symbol30549, 0);
// message:
send107687 = (Object)new_AST_Send((Object)localvariable18195, (Object)symbol30600, 1, (Object)send107686);
smallint10780 = (Object)new_Type_SmallInt(2);
constant23468 = (Object)new_AST_Constant((Object)smallint10780);
// at:
send107688 = (Object)new_AST_Send((Object)localvariable18194, (Object)SMB_at_, 1, (Object)constant23468);
// new
send107689 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
block7352 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107689);
// resultIfFailed:
send107690 = (Object)new_AST_Send((Object)send107688, (Object)symbol30730, 1, (Object)block7352);
// temporaries:
send107691 = (Object)new_AST_Send((Object)localvariable18195, (Object)symbol30605, 1, (Object)send107690);
smallint10781 = (Object)new_Type_SmallInt(3);
constant23469 = (Object)new_AST_Constant((Object)smallint10781);
// at:
send107692 = (Object)new_AST_Send((Object)localvariable18194, (Object)SMB_at_, 1, (Object)constant23469);
// annotations:
send107693 = (Object)new_AST_Send((Object)localvariable18195, (Object)symbol30606, 1, (Object)send107692);
smallint10782 = (Object)new_Type_SmallInt(4);
constant23470 = (Object)new_AST_Constant((Object)smallint10782);
// at:
send107694 = (Object)new_AST_Send((Object)localvariable18194, (Object)SMB_at_, 1, (Object)constant23470);
// statements:
send107695 = (Object)new_AST_Send((Object)localvariable18195, (Object)symbol30602, 1, (Object)send107694);
// yourself
send107696 = (Object)new_AST_Send((Object)localvariable18195, (Object)symbol30410, 0);
block7353 = (Object)new_AST_Block_with((Type_Array)array16518, (Type_Array)empty_Type_Array, 2, 5, send107687, send107691, send107693, send107695, send107696);
// new
send107697 = (Object)new_AST_Send((Object)classreference11501, (Object)symbol30416, 0);
// value:
send107698 = (Object)new_AST_Send((Object)block7353, (Object)SMB_value_, 1, (Object)send107697);
block7354 = (Object)new_AST_Block_with((Type_Array)array16517, (Type_Array)empty_Type_Array, 1, 1, send107698);
// named:parsing:semantics:
send107699 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23467, (Object)send107685, (Object)block7354);
// separator
send107700 = (Object)new_AST_Send((Object)Self, (Object)symbol30770, 0);
// separator:
send107701 = (Object)new_AST_Send((Object)send107699, (Object)symbol30708, 1, (Object)send107700);
method31287 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107701);
symbol30612 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure31193 = (Object)new_Runtime_MethodClosure(method31287);
store_method((Type_Class)class5266, (Type_Symbol)symbol30612, (Runtime_MethodClosure)methodclosure31193);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string10763 = (Object)new_Type_String(L"#");
constant23471 = (Object)new_AST_Constant((Object)string10763);
// asPEG
send107702 = (Object)new_AST_Send((Object)constant23471, (Object)symbol30703, 0);
// omit:
send107703 = (Object)new_AST_Send((Object)send107702, (Object)symbol30696, 1, (Object)True_Const);
symbol30796 = (Object)new_Type_Symbol_cached(L"array");
// array
send107704 = (Object)new_AST_Send((Object)Self, (Object)symbol30796, 0);
// &
send107705 = (Object)new_AST_Send((Object)send107703, (Object)SMB__and, 1, (Object)send107704);
method31288 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107705);
symbol30640 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure31194 = (Object)new_Runtime_MethodClosure(method31288);
store_method((Type_Class)class5266, (Type_Symbol)symbol30640, (Runtime_MethodClosure)methodclosure31194);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
// primary
send107706 = (Object)new_AST_Send((Object)Self, (Object)symbol30784, 0);
symbol30797 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send107707 = (Object)new_AST_Send((Object)Self, (Object)symbol30797, 0);
symbol30798 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send107708 = (Object)new_AST_Send((Object)Self, (Object)symbol30798, 0);
symbol30799 = (Object)new_Type_Symbol_cached(L"block");
// block
send107709 = (Object)new_AST_Send((Object)Self, (Object)symbol30799, 0);
symbol30800 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send107710 = (Object)new_AST_Send((Object)Self, (Object)symbol30800, 0);
// <=
send107711 = (Object)new_AST_Send((Object)send107709, (Object)symbol30712, 1, (Object)send107710);
// <=
send107712 = (Object)new_AST_Send((Object)send107708, (Object)symbol30712, 1, (Object)send107711);
// |
send107713 = (Object)new_AST_Send((Object)send107707, (Object)SMB__or, 1, (Object)send107712);
// <=
send107714 = (Object)new_AST_Send((Object)send107706, (Object)symbol30712, 1, (Object)send107713);
symbol30801 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send107715 = (Object)new_AST_Send((Object)Self, (Object)symbol30801, 0);
// <=
send107716 = (Object)new_AST_Send((Object)send107714, (Object)symbol30712, 1, (Object)send107715);
method31289 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107716);
symbol30629 = (Object)new_Type_Symbol_cached(L"injectPrimary");
methodclosure31195 = (Object)new_Runtime_MethodClosure(method31289);
store_method((Type_Class)class5266, (Type_Symbol)symbol30629, (Runtime_MethodClosure)methodclosure31195);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send107717 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
string10764 = (Object)new_Type_String(L".");
constant23472 = (Object)new_AST_Constant((Object)string10764);
// asPEG
send107718 = (Object)new_AST_Send((Object)constant23472, (Object)symbol30703, 0);
// omit:
send107719 = (Object)new_AST_Send((Object)send107718, (Object)symbol30696, 1, (Object)True_Const);
// &
send107720 = (Object)new_AST_Send((Object)send107717, (Object)SMB__and, 1, (Object)send107719);
method31290 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107720);
symbol30652 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure31196 = (Object)new_Runtime_MethodClosure(method31290);
store_method((Type_Class)class5266, (Type_Symbol)symbol30652, (Runtime_MethodClosure)methodclosure31196);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send107721 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
// cascadedMessageExpression
send107722 = (Object)new_AST_Send((Object)Self, (Object)symbol30785, 0);
method31291 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send107721, send107722);
symbol30680 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure31197 = (Object)new_Runtime_MethodClosure(method31291);
store_method((Type_Class)class5266, (Type_Symbol)symbol30680, (Runtime_MethodClosure)methodclosure31197);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send107723 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
string10765 = (Object)new_Type_String(L".");
constant23473 = (Object)new_AST_Constant((Object)string10765);
// asPEG
send107724 = (Object)new_AST_Send((Object)constant23473, (Object)symbol30703, 0);
// optional
send107725 = (Object)new_AST_Send((Object)send107724, (Object)symbol30705, 0);
// omit:
send107726 = (Object)new_AST_Send((Object)send107725, (Object)symbol30696, 1, (Object)True_Const);
// &
send107727 = (Object)new_AST_Send((Object)send107723, (Object)SMB__and, 1, (Object)send107726);
method31292 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107727);
symbol30669 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure31198 = (Object)new_Runtime_MethodClosure(method31292);
store_method((Type_Class)class5266, (Type_Symbol)symbol30669, (Runtime_MethodClosure)methodclosure31198);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string10766 = (Object)new_Type_String(L"IDENTIFIER");
constant23474 = (Object)new_AST_Constant((Object)string10766);
symbol30802 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send107728 = (Object)new_AST_Send((Object)Self, (Object)symbol30802, 0);
// letter
send107729 = (Object)new_AST_Send((Object)Self, (Object)symbol30802, 0);
symbol30803 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send107730 = (Object)new_AST_Send((Object)Self, (Object)symbol30803, 0);
// |
send107731 = (Object)new_AST_Send((Object)send107729, (Object)SMB__or, 1, (Object)send107730);
// strongTimes
send107732 = (Object)new_AST_Send((Object)send107731, (Object)symbol30697, 0);
// &&
send107733 = (Object)new_AST_Send((Object)send107728, (Object)symbol30692, 1, (Object)send107732);
localvariable18196 = (Object)new_AST_Variable_named(L"result");
array16519 = (Object)new_Type_Array_with(1, (Object)localvariable18196);
symbol30804 = (Object)new_Type_Symbol_cached(L"second");
// second
send107734 = (Object)new_AST_Send((Object)localvariable18196, (Object)symbol30804, 0);
// first
send107735 = (Object)new_AST_Send((Object)localvariable18196, (Object)symbol30549, 0);
localvariable18197 = (Object)new_AST_Variable_named(L"c");
localvariable18198 = (Object)new_AST_Variable_named(L"e");
array16520 = (Object)new_Type_Array_with(2, (Object)localvariable18197, (Object)localvariable18198);
// ,
send107736 = (Object)new_AST_Send((Object)localvariable18197, (Object)SMB__concat, 1, (Object)localvariable18198);
block7355 = (Object)new_AST_Block_with((Type_Array)array16520, (Type_Array)empty_Type_Array, 2, 1, send107736);
// inject:into:
send107737 = (Object)new_AST_Send((Object)send107734, (Object)symbol30554, 2, (Object)send107735, (Object)block7355);
block7356 = (Object)new_AST_Block_with((Type_Array)array16519, (Type_Array)empty_Type_Array, 1, 1, send107737);
// named:parsing:semantics:
send107738 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23474, (Object)send107733, (Object)block7356);
method31293 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107738);
symbol30622 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure31199 = (Object)new_Runtime_MethodClosure(method31293);
store_method((Type_Class)class5266, (Type_Symbol)symbol30622, (Runtime_MethodClosure)methodclosure31199);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable18199 = (Object)new_AST_Variable_named(L"commentBorder");
array16521 = (Object)new_Type_Array_with(1, (Object)localvariable18199);
string10767 = (Object)new_Type_String(L"\"");
constant23475 = (Object)new_AST_Constant((Object)string10767);
// asPEG
send107739 = (Object)new_AST_Send((Object)constant23475, (Object)symbol30703, 0);
assign13632 = (Object)new_AST_Assign((Object)localvariable18199, (Object)send107739);
// not
send107740 = (Object)new_AST_Send((Object)localvariable18199, (Object)SMB_not, 0);
// strongTimes
send107741 = (Object)new_AST_Send((Object)send107740, (Object)symbol30697, 0);
// &&
send107742 = (Object)new_AST_Send((Object)localvariable18199, (Object)symbol30692, 1, (Object)send107741);
// <&
send107743 = (Object)new_AST_Send((Object)send107742, (Object)symbol30725, 1, (Object)localvariable18199);
method31294 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16521, 2, assign13632, send107743);
symbol30650 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure31200 = (Object)new_Runtime_MethodClosure(method31294);
store_method((Type_Class)class5266, (Type_Symbol)symbol30650, (Runtime_MethodClosure)methodclosure31200);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable18200 = (Object)new_AST_Variable_named(L"array");
array16522 = (Object)new_Type_Array_with(1, (Object)localvariable18200);
string10768 = (Object)new_Type_String(L"ARRAY");
constant23476 = (Object)new_AST_Constant((Object)string10768);
// named:
send107744 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30518, 1, (Object)constant23476);
assign13633 = (Object)new_AST_Assign((Object)localvariable18200, (Object)send107744);
string10769 = (Object)new_Type_String(L"(");
constant23477 = (Object)new_AST_Constant((Object)string10769);
// asPEG
send107745 = (Object)new_AST_Send((Object)constant23477, (Object)symbol30703, 0);
// omit:
send107746 = (Object)new_AST_Send((Object)send107745, (Object)symbol30696, 1, (Object)True_Const);
// numberConstant
send107747 = (Object)new_AST_Send((Object)Self, (Object)symbol30778, 0);
// stringConstant
send107748 = (Object)new_AST_Send((Object)Self, (Object)symbol30781, 0);
symbol30805 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send107749 = (Object)new_AST_Send((Object)Self, (Object)symbol30805, 0);
// symbolConstant
send107750 = (Object)new_AST_Send((Object)Self, (Object)symbol30779, 0);
// characterConstant
send107751 = (Object)new_AST_Send((Object)Self, (Object)symbol30780, 0);
// <=
send107752 = (Object)new_AST_Send((Object)send107750, (Object)symbol30712, 1, (Object)send107751);
// <=
send107753 = (Object)new_AST_Send((Object)send107749, (Object)symbol30712, 1, (Object)send107752);
// <=
send107754 = (Object)new_AST_Send((Object)send107748, (Object)symbol30712, 1, (Object)send107753);
// |
send107755 = (Object)new_AST_Send((Object)send107747, (Object)SMB__or, 1, (Object)send107754);
// <=
send107756 = (Object)new_AST_Send((Object)send107755, (Object)symbol30712, 1, (Object)localvariable18200);
// times
send107757 = (Object)new_AST_Send((Object)send107756, (Object)symbol30707, 0);
// &
send107758 = (Object)new_AST_Send((Object)send107746, (Object)SMB__and, 1, (Object)send107757);
// <=
send107759 = (Object)new_AST_Send((Object)localvariable18200, (Object)symbol30712, 1, (Object)send107758);
string10770 = (Object)new_Type_String(L")");
constant23478 = (Object)new_AST_Constant((Object)string10770);
// asPEG
send107760 = (Object)new_AST_Send((Object)constant23478, (Object)symbol30703, 0);
// omit:
send107761 = (Object)new_AST_Send((Object)send107760, (Object)symbol30696, 1, (Object)True_Const);
// <&
send107762 = (Object)new_AST_Send((Object)send107759, (Object)symbol30725, 1, (Object)send107761);
localvariable18201 = (Object)new_AST_Variable_named(L"result");
array16523 = (Object)new_Type_Array_with(1, (Object)localvariable18201);
// new
send107763 = (Object)new_AST_Send((Object)classreference11520, (Object)symbol30416, 0);
// literals:
send107764 = (Object)new_AST_Send((Object)send107763, (Object)symbol30542, 1, (Object)localvariable18201);
block7357 = (Object)new_AST_Block_with((Type_Array)array16523, (Type_Array)empty_Type_Array, 1, 1, send107764);
// semantics:
send107765 = (Object)new_AST_Send((Object)localvariable18200, (Object)symbol30710, 1, (Object)block7357);
method31295 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16522, 4, assign13633, send107762, send107765, localvariable18200);
symbol30634 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure31201 = (Object)new_Runtime_MethodClosure(method31295);
store_method((Type_Class)class5266, (Type_Symbol)symbol30634, (Runtime_MethodClosure)methodclosure31201);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable18202 = (Object)new_AST_Variable_named(L"result");
array16524 = (Object)new_Type_Array_with(1, (Object)localvariable18202);
string10771 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant23479 = (Object)new_AST_Constant((Object)string10771);
// primary
send107766 = (Object)new_AST_Send((Object)Self, (Object)symbol30784, 0);
// unarySelector
send107767 = (Object)new_AST_Send((Object)Self, (Object)symbol30786, 0);
// plus
send107768 = (Object)new_AST_Send((Object)send107767, (Object)symbol30701, 0);
// &
send107769 = (Object)new_AST_Send((Object)send107766, (Object)SMB__and, 1, (Object)send107768);
localvariable18203 = (Object)new_AST_Variable_named(L"parts");
array16525 = (Object)new_Type_Array_with(1, (Object)localvariable18203);
// first
send107770 = (Object)new_AST_Send((Object)localvariable18203, (Object)symbol30549, 0);
assign13634 = (Object)new_AST_Assign((Object)localvariable18202, (Object)send107770);
smallint10783 = (Object)new_Type_SmallInt(2);
constant23480 = (Object)new_AST_Constant((Object)smallint10783);
// at:
send107771 = (Object)new_AST_Send((Object)localvariable18203, (Object)SMB_at_, 1, (Object)constant23480);
localvariable18204 = (Object)new_AST_Variable_named(L"selector");
array16526 = (Object)new_Type_Array_with(1, (Object)localvariable18204);
localvariable18205 = (Object)new_AST_Variable_named(L"receiver");
array16527 = (Object)new_Type_Array_with(1, (Object)localvariable18205);
// receiver:
send107772 = (Object)new_AST_Send((Object)localvariable18205, (Object)symbol30589, 1, (Object)localvariable18202);
// selector:
send107773 = (Object)new_AST_Send((Object)localvariable18205, (Object)symbol30583, 1, (Object)localvariable18204);
block7358 = (Object)new_AST_Block_with((Type_Array)array16527, (Type_Array)empty_Type_Array, 3, 2, send107772, send107773);
// new
send107774 = (Object)new_AST_Send((Object)classreference11517, (Object)symbol30416, 0);
// value:
send107775 = (Object)new_AST_Send((Object)block7358, (Object)SMB_value_, 1, (Object)send107774);
assign13635 = (Object)new_AST_Assign((Object)localvariable18202, (Object)send107775);
block7359 = (Object)new_AST_Block_with((Type_Array)array16526, (Type_Array)empty_Type_Array, 2, 1, assign13635);
// do:
send107776 = (Object)new_AST_Send((Object)send107771, (Object)symbol30552, 1, (Object)block7359);
block7360 = (Object)new_AST_Block_with((Type_Array)array16525, (Type_Array)empty_Type_Array, 1, 3, assign13634, send107776, localvariable18202);
// named:parsing:semantics:
send107777 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23479, (Object)send107769, (Object)block7360);
method31296 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16524, 1, send107777);
symbol30662 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure31202 = (Object)new_Runtime_MethodClosure(method31296);
store_method((Type_Class)class5266, (Type_Symbol)symbol30662, (Runtime_MethodClosure)methodclosure31202);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string10772 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant23481 = (Object)new_AST_Constant((Object)string10772);
symbol30806 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send107778 = (Object)new_AST_Send((Object)Self, (Object)symbol30806, 0);
symbol30807 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send107779 = (Object)new_AST_Send((Object)Self, (Object)symbol30807, 0);
// &
send107780 = (Object)new_AST_Send((Object)send107778, (Object)SMB__and, 1, (Object)send107779);
localvariable18206 = (Object)new_AST_Variable_named(L"parts");
array16528 = (Object)new_Type_Array_with(1, (Object)localvariable18206);
localvariable18207 = (Object)new_AST_Variable_named(L"receiver");
array16529 = (Object)new_Type_Array_with(1, (Object)localvariable18207);
symbol30651 = (Object)new_Type_Symbol_cached(L"createSymbol:");
// first
send107781 = (Object)new_AST_Send((Object)localvariable18206, (Object)symbol30549, 0);
// createSymbol:
send107782 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)send107781);
// selector:
send107783 = (Object)new_AST_Send((Object)localvariable18207, (Object)symbol30583, 1, (Object)send107782);
smallint10784 = (Object)new_Type_SmallInt(2);
constant23482 = (Object)new_AST_Constant((Object)smallint10784);
// at:
send107784 = (Object)new_AST_Send((Object)localvariable18206, (Object)SMB_at_, 1, (Object)constant23482);
// argument:
send107785 = (Object)new_AST_Send((Object)localvariable18207, (Object)symbol30596, 1, (Object)send107784);
block7361 = (Object)new_AST_Block_with((Type_Array)array16529, (Type_Array)empty_Type_Array, 2, 2, send107783, send107785);
// new
send107786 = (Object)new_AST_Send((Object)classreference11512, (Object)symbol30416, 0);
// value:
send107787 = (Object)new_AST_Send((Object)block7361, (Object)SMB_value_, 1, (Object)send107786);
block7362 = (Object)new_AST_Block_with((Type_Array)array16528, (Type_Array)empty_Type_Array, 1, 1, send107787);
// named:parsing:semantics:
send107788 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23481, (Object)send107780, (Object)block7362);
method31297 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107788);
symbol30679 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure31203 = (Object)new_Runtime_MethodClosure(method31297);
store_method((Type_Class)class5266, (Type_Symbol)symbol30679, (Runtime_MethodClosure)methodclosure31203);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send107789 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
// messageExpression
send107790 = (Object)new_AST_Send((Object)Self, (Object)symbol30793, 0);
// separator
send107791 = (Object)new_AST_Send((Object)Self, (Object)symbol30770, 0);
// separator:
send107792 = (Object)new_AST_Send((Object)send107790, (Object)symbol30708, 1, (Object)send107791);
method31298 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send107789, send107792);
symbol30616 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure31204 = (Object)new_Runtime_MethodClosure(method31298);
store_method((Type_Class)class5266, (Type_Symbol)symbol30616, (Runtime_MethodClosure)methodclosure31204);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant23483 = (Object)new_AST_Constant((Object)symbol30788);
string10773 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant23484 = (Object)new_AST_Constant((Object)string10773);
// named:
send107793 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30518, 1, (Object)constant23484);
block7363 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send107793);
// at:ifAbsentPut:
send107794 = (Object)new_AST_Send((Object)instancevariable13978, (Object)symbol30764, 2, (Object)constant23483, (Object)block7363);
method31299 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107794);
symbol30644 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
methodclosure31205 = (Object)new_Runtime_MethodClosure(method31299);
store_method((Type_Class)class5266, (Type_Symbol)symbol30644, (Runtime_MethodClosure)methodclosure31205);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send107795 = (Object)new_AST_Send((Object)Self, (Object)symbol30793, 0);
symbol30808 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send107796 = (Object)new_AST_Send((Object)Self, (Object)symbol30808, 0);
symbol30809 = (Object)new_Type_Symbol_cached(L"binaryExpression");
// binaryExpression
send107797 = (Object)new_AST_Send((Object)Self, (Object)symbol30809, 0);
// |
send107798 = (Object)new_AST_Send((Object)send107796, (Object)SMB__or, 1, (Object)send107797);
// <=
send107799 = (Object)new_AST_Send((Object)send107795, (Object)symbol30712, 1, (Object)send107798);
// unaryExpression
send107800 = (Object)new_AST_Send((Object)Self, (Object)symbol30783, 0);
// <=
send107801 = (Object)new_AST_Send((Object)send107799, (Object)symbol30712, 1, (Object)send107800);
method31300 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107801);
symbol30672 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
methodclosure31206 = (Object)new_Runtime_MethodClosure(method31300);
store_method((Type_Class)class5266, (Type_Symbol)symbol30672, (Runtime_MethodClosure)methodclosure31206);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string10774 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant23485 = (Object)new_AST_Constant((Object)string10774);
symbol30810 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send107802 = (Object)new_AST_Send((Object)Self, (Object)symbol30810, 0);
string10775 = (Object)new_Type_String(L"-");
constant23486 = (Object)new_AST_Constant((Object)string10775);
// |
send107803 = (Object)new_AST_Send((Object)send107802, (Object)SMB__or, 1, (Object)constant23486);
// specialCharacter
send107804 = (Object)new_AST_Send((Object)Self, (Object)symbol30810, 0);
// strongTimes
send107805 = (Object)new_AST_Send((Object)send107804, (Object)symbol30697, 0);
// &&
send107806 = (Object)new_AST_Send((Object)send107803, (Object)symbol30692, 1, (Object)send107805);
string10776 = (Object)new_Type_String(L"|");
constant23487 = (Object)new_AST_Constant((Object)string10776);
// |
send107807 = (Object)new_AST_Send((Object)send107806, (Object)SMB__or, 1, (Object)constant23487);
localvariable18208 = (Object)new_AST_Variable_named(L"result");
array16530 = (Object)new_Type_Array_with(1, (Object)localvariable18208);
symbol30811 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send107808 = (Object)new_AST_Send((Object)localvariable18208, (Object)symbol30811, 0);
// createSymbol:
send107809 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)localvariable18208);
block7364 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107809);
// second
send107810 = (Object)new_AST_Send((Object)localvariable18208, (Object)symbol30804, 0);
// first
send107811 = (Object)new_AST_Send((Object)localvariable18208, (Object)symbol30549, 0);
localvariable18209 = (Object)new_AST_Variable_named(L"c");
localvariable18210 = (Object)new_AST_Variable_named(L"e");
array16531 = (Object)new_Type_Array_with(2, (Object)localvariable18209, (Object)localvariable18210);
// ,
send107812 = (Object)new_AST_Send((Object)localvariable18209, (Object)SMB__concat, 1, (Object)localvariable18210);
block7365 = (Object)new_AST_Block_with((Type_Array)array16531, (Type_Array)empty_Type_Array, 3, 1, send107812);
// inject:into:
send107813 = (Object)new_AST_Send((Object)send107810, (Object)symbol30554, 2, (Object)send107811, (Object)block7365);
// createSymbol:
send107814 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)send107813);
block7366 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send107814);
// ifTrue:ifFalse:
send107815 = (Object)new_AST_Send((Object)send107808, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7364, (Object)block7366);
block7367 = (Object)new_AST_Block_with((Type_Array)array16530, (Type_Array)empty_Type_Array, 1, 1, send107815);
// named:parsing:semantics:
send107816 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23485, (Object)send107807, (Object)block7367);
method31301 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107816);
symbol30656 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure31207 = (Object)new_Runtime_MethodClosure(method31301);
store_method((Type_Class)class5266, (Type_Symbol)symbol30656, (Runtime_MethodClosure)methodclosure31207);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string10777 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant23488 = (Object)new_AST_Constant((Object)string10777);
// binarySelector
send107817 = (Object)new_AST_Send((Object)Self, (Object)symbol30806, 0);
symbol30812 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send107818 = (Object)new_AST_Send((Object)Self, (Object)symbol30812, 0);
// &
send107819 = (Object)new_AST_Send((Object)send107817, (Object)SMB__and, 1, (Object)send107818);
localvariable18211 = (Object)new_AST_Variable_named(L"result");
array16532 = (Object)new_Type_Array_with(1, (Object)localvariable18211);
localvariable18212 = (Object)new_AST_Variable_named(L"receiver");
array16533 = (Object)new_Type_Array_with(1, (Object)localvariable18212);
// first
send107820 = (Object)new_AST_Send((Object)localvariable18211, (Object)symbol30549, 0);
// createSymbol:
send107821 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)send107820);
// selector:
send107822 = (Object)new_AST_Send((Object)localvariable18212, (Object)symbol30583, 1, (Object)send107821);
symbol30642 = (Object)new_Type_Symbol_cached(L"createVariable:");
smallint10785 = (Object)new_Type_SmallInt(2);
constant23489 = (Object)new_AST_Constant((Object)smallint10785);
// at:
send107823 = (Object)new_AST_Send((Object)localvariable18211, (Object)SMB_at_, 1, (Object)constant23489);
// createVariable:
send107824 = (Object)new_AST_Send((Object)Self, (Object)symbol30642, 1, (Object)send107823);
// parameter:
send107825 = (Object)new_AST_Send((Object)localvariable18212, (Object)symbol30595, 1, (Object)send107824);
block7368 = (Object)new_AST_Block_with((Type_Array)array16533, (Type_Array)empty_Type_Array, 2, 2, send107822, send107825);
// new
send107826 = (Object)new_AST_Send((Object)classreference11502, (Object)symbol30416, 0);
// value:
send107827 = (Object)new_AST_Send((Object)block7368, (Object)SMB_value_, 1, (Object)send107826);
block7369 = (Object)new_AST_Block_with((Type_Array)array16532, (Type_Array)empty_Type_Array, 1, 1, send107827);
// named:parsing:semantics:
send107828 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23488, (Object)send107819, (Object)block7369);
method31302 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107828);
symbol30638 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure31208 = (Object)new_Runtime_MethodClosure(method31302);
store_method((Type_Class)class5266, (Type_Symbol)symbol30638, (Runtime_MethodClosure)methodclosure31208);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable18213 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable18214 = (Object)new_AST_Variable_named(L"first");
array16534 = (Object)new_Type_Array_with(2, (Object)localvariable18213, (Object)localvariable18214);
string10778 = (Object)new_Type_String(L"\'");
constant23490 = (Object)new_AST_Constant((Object)string10778);
// asPEG
send107829 = (Object)new_AST_Send((Object)constant23490, (Object)symbol30703, 0);
// omit:
send107830 = (Object)new_AST_Send((Object)send107829, (Object)symbol30696, 1, (Object)True_Const);
assign13636 = (Object)new_AST_Assign((Object)localvariable18213, (Object)send107830);
string10779 = (Object)new_Type_String(L"STRING");
constant23491 = (Object)new_AST_Constant((Object)string10779);
// not
send107831 = (Object)new_AST_Send((Object)localvariable18213, (Object)SMB_not, 0);
// strongTimes
send107832 = (Object)new_AST_Send((Object)send107831, (Object)symbol30697, 0);
// &&
send107833 = (Object)new_AST_Send((Object)localvariable18213, (Object)symbol30692, 1, (Object)send107832);
// <&
send107834 = (Object)new_AST_Send((Object)send107833, (Object)symbol30725, 1, (Object)localvariable18213);
// strongPlus
send107835 = (Object)new_AST_Send((Object)send107834, (Object)symbol30689, 0);
localvariable18215 = (Object)new_AST_Variable_named(L"result");
array16535 = (Object)new_Type_Array_with(1, (Object)localvariable18215);
symbol30813 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send107836 = (Object)new_AST_Send((Object)localvariable18215, (Object)symbol30813, 0);
assign13637 = (Object)new_AST_Assign((Object)localvariable18214, (Object)send107836);
string10780 = (Object)new_Type_String(L"");
constant23492 = (Object)new_AST_Constant((Object)string10780);
localvariable18216 = (Object)new_AST_Variable_named(L"c");
localvariable18217 = (Object)new_AST_Variable_named(L"e");
array16536 = (Object)new_Type_Array_with(2, (Object)localvariable18216, (Object)localvariable18217);
// ,
send107837 = (Object)new_AST_Send((Object)localvariable18216, (Object)SMB__concat, 1, (Object)localvariable18217);
block7370 = (Object)new_AST_Block_with((Type_Array)array16536, (Type_Array)empty_Type_Array, 2, 1, send107837);
// inject:into:
send107838 = (Object)new_AST_Send((Object)localvariable18214, (Object)symbol30554, 2, (Object)constant23492, (Object)block7370);
assign13638 = (Object)new_AST_Assign((Object)localvariable18214, (Object)send107838);
localvariable18218 = (Object)new_AST_Variable_named(L"c");
localvariable18219 = (Object)new_AST_Variable_named(L"e");
array16537 = (Object)new_Type_Array_with(2, (Object)localvariable18218, (Object)localvariable18219);
string10781 = (Object)new_Type_String(L"\'");
constant23493 = (Object)new_AST_Constant((Object)string10781);
// ,
send107839 = (Object)new_AST_Send((Object)localvariable18218, (Object)SMB__concat, 1, (Object)constant23493);
string10782 = (Object)new_Type_String(L"");
constant23494 = (Object)new_AST_Constant((Object)string10782);
localvariable18220 = (Object)new_AST_Variable_named(L"ic");
localvariable18221 = (Object)new_AST_Variable_named(L"ie");
array16538 = (Object)new_Type_Array_with(2, (Object)localvariable18220, (Object)localvariable18221);
// ,
send107840 = (Object)new_AST_Send((Object)localvariable18220, (Object)SMB__concat, 1, (Object)localvariable18221);
block7371 = (Object)new_AST_Block_with((Type_Array)array16538, (Type_Array)empty_Type_Array, 3, 1, send107840);
// inject:into:
send107841 = (Object)new_AST_Send((Object)localvariable18219, (Object)symbol30554, 2, (Object)constant23494, (Object)block7371);
// ,
send107842 = (Object)new_AST_Send((Object)send107839, (Object)SMB__concat, 1, (Object)send107841);
block7372 = (Object)new_AST_Block_with((Type_Array)array16537, (Type_Array)empty_Type_Array, 2, 1, send107842);
// inject:into:
send107843 = (Object)new_AST_Send((Object)localvariable18215, (Object)symbol30554, 2, (Object)localvariable18214, (Object)block7372);
block7373 = (Object)new_AST_Block_with((Type_Array)array16535, (Type_Array)empty_Type_Array, 1, 3, assign13637, assign13638, send107843);
// named:parsing:semantics:
send107844 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23491, (Object)send107835, (Object)block7373);
method31303 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16534, 2, assign13636, send107844);
symbol30666 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure31209 = (Object)new_Runtime_MethodClosure(method31303);
store_method((Type_Class)class5266, (Type_Symbol)symbol30666, (Runtime_MethodClosure)methodclosure31209);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string10783 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant23495 = (Object)new_AST_Constant((Object)string10783);
symbol30814 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send107845 = (Object)new_AST_Send((Object)Self, (Object)symbol30814, 0);
// strongPlus
send107846 = (Object)new_AST_Send((Object)send107845, (Object)symbol30689, 0);
localvariable18222 = (Object)new_AST_Variable_named(L"result");
array16539 = (Object)new_Type_Array_with(1, (Object)localvariable18222);
string10784 = (Object)new_Type_String(L"");
constant23496 = (Object)new_AST_Constant((Object)string10784);
localvariable18223 = (Object)new_AST_Variable_named(L"c");
localvariable18224 = (Object)new_AST_Variable_named(L"e");
array16540 = (Object)new_Type_Array_with(2, (Object)localvariable18223, (Object)localvariable18224);
// ,
send107847 = (Object)new_AST_Send((Object)localvariable18223, (Object)SMB__concat, 1, (Object)localvariable18224);
string10785 = (Object)new_Type_String(L":");
constant23497 = (Object)new_AST_Constant((Object)string10785);
// ,
send107848 = (Object)new_AST_Send((Object)send107847, (Object)SMB__concat, 1, (Object)constant23497);
block7374 = (Object)new_AST_Block_with((Type_Array)array16540, (Type_Array)empty_Type_Array, 2, 1, send107848);
// inject:into:
send107849 = (Object)new_AST_Send((Object)localvariable18222, (Object)symbol30554, 2, (Object)constant23496, (Object)block7374);
block7375 = (Object)new_AST_Block_with((Type_Array)array16539, (Type_Array)empty_Type_Array, 1, 1, send107849);
// named:parsing:semantics:
send107850 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23495, (Object)send107846, (Object)block7375);
method31304 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107850);
symbol30631 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure31210 = (Object)new_Runtime_MethodClosure(method31304);
store_method((Type_Class)class5266, (Type_Symbol)symbol30631, (Runtime_MethodClosure)methodclosure31210);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
string10786 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant23498 = (Object)new_AST_Constant((Object)string10786);
symbol30815 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send107851 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
localvariable18225 = (Object)new_AST_Variable_named(L"result");
array16541 = (Object)new_Type_Array_with(1, (Object)localvariable18225);
// createVariable:
send107852 = (Object)new_AST_Send((Object)Self, (Object)symbol30642, 1, (Object)localvariable18225);
block7376 = (Object)new_AST_Block_with((Type_Array)array16541, (Type_Array)empty_Type_Array, 1, 1, send107852);
// named:parsing:semantics:
send107853 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23498, (Object)send107851, (Object)block7376);
method31305 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107853);
symbol30648 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure31211 = (Object)new_Runtime_MethodClosure(method31305);
store_method((Type_Class)class5266, (Type_Symbol)symbol30648, (Runtime_MethodClosure)methodclosure31211);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string10787 = (Object)new_Type_String(L"(");
constant23499 = (Object)new_AST_Constant((Object)string10787);
// asPEG
send107854 = (Object)new_AST_Send((Object)constant23499, (Object)symbol30703, 0);
// omit:
send107855 = (Object)new_AST_Send((Object)send107854, (Object)symbol30696, 1, (Object)True_Const);
// expression
send107856 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
// &
send107857 = (Object)new_AST_Send((Object)send107855, (Object)SMB__and, 1, (Object)send107856);
string10788 = (Object)new_Type_String(L")");
constant23500 = (Object)new_AST_Constant((Object)string10788);
// asPEG
send107858 = (Object)new_AST_Send((Object)constant23500, (Object)symbol30703, 0);
// omit:
send107859 = (Object)new_AST_Send((Object)send107858, (Object)symbol30696, 1, (Object)True_Const);
// <&
send107860 = (Object)new_AST_Send((Object)send107857, (Object)symbol30725, 1, (Object)send107859);
method31306 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107860);
symbol30676 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure31212 = (Object)new_Runtime_MethodClosure(method31306);
store_method((Type_Class)class5266, (Type_Symbol)symbol30676, (Runtime_MethodClosure)methodclosure31212);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string10789 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant23501 = (Object)new_AST_Constant((Object)string10789);
// keyword
send107861 = (Object)new_AST_Send((Object)Self, (Object)symbol30814, 0);
// binaryObjectDescription
send107862 = (Object)new_AST_Send((Object)Self, (Object)symbol30788, 0);
// &
send107863 = (Object)new_AST_Send((Object)send107861, (Object)SMB__and, 1, (Object)send107862);
// plus
send107864 = (Object)new_AST_Send((Object)send107863, (Object)symbol30701, 0);
localvariable18226 = (Object)new_AST_Variable_named(L"parts");
array16542 = (Object)new_Type_Array_with(1, (Object)localvariable18226);
localvariable18227 = (Object)new_AST_Variable_named(L"receiver");
array16543 = (Object)new_Type_Array_with(1, (Object)localvariable18227);
symbol30816 = (Object)new_Type_Symbol_cached(L"collect:");
constant23502 = (Object)new_AST_Constant((Object)symbol30549);
// collect:
send107865 = (Object)new_AST_Send((Object)localvariable18226, (Object)symbol30816, 1, (Object)constant23502);
// keywords:
send107866 = (Object)new_AST_Send((Object)localvariable18227, (Object)symbol30586, 1, (Object)send107865);
localvariable18228 = (Object)new_AST_Variable_named(L"receiver");
array16544 = (Object)new_Type_Array_with(1, (Object)localvariable18228);
constant23503 = (Object)new_AST_Constant((Object)symbol30549);
// collect:
send107867 = (Object)new_AST_Send((Object)localvariable18226, (Object)symbol30816, 1, (Object)constant23503);
// keywords:
send107868 = (Object)new_AST_Send((Object)localvariable18228, (Object)symbol30586, 1, (Object)send107867);
constant23504 = (Object)new_AST_Constant((Object)symbol30549);
// collect:
send107869 = (Object)new_AST_Send((Object)localvariable18226, (Object)symbol30816, 1, (Object)constant23504);
string10790 = (Object)new_Type_String(L":");
constant23505 = (Object)new_AST_Constant((Object)string10790);
// joinUsing:
send107870 = (Object)new_AST_Send((Object)send107869, (Object)symbol30741, 1, (Object)constant23505);
string10791 = (Object)new_Type_String(L":");
constant23506 = (Object)new_AST_Constant((Object)string10791);
// ,
send107871 = (Object)new_AST_Send((Object)send107870, (Object)SMB__concat, 1, (Object)constant23506);
// createSymbol:
send107872 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)send107871);
// selector:
send107873 = (Object)new_AST_Send((Object)localvariable18228, (Object)symbol30583, 1, (Object)send107872);
block7377 = (Object)new_AST_Block_with((Type_Array)array16544, (Type_Array)empty_Type_Array, 3, 2, send107868, send107873);
// new
send107874 = (Object)new_AST_Send((Object)classreference11495, (Object)symbol30416, 0);
// value:
send107875 = (Object)new_AST_Send((Object)block7377, (Object)SMB_value_, 1, (Object)send107874);
// selector:
send107876 = (Object)new_AST_Send((Object)localvariable18227, (Object)symbol30583, 1, (Object)send107875);
constant23507 = (Object)new_AST_Constant((Object)symbol30804);
// collect:
send107877 = (Object)new_AST_Send((Object)localvariable18226, (Object)symbol30816, 1, (Object)constant23507);
// arguments:
send107878 = (Object)new_AST_Send((Object)localvariable18227, (Object)symbol30590, 1, (Object)send107877);
block7378 = (Object)new_AST_Block_with((Type_Array)array16543, (Type_Array)empty_Type_Array, 2, 3, send107866, send107876, send107878);
// new
send107879 = (Object)new_AST_Send((Object)classreference11511, (Object)symbol30416, 0);
// value:
send107880 = (Object)new_AST_Send((Object)block7378, (Object)SMB_value_, 1, (Object)send107879);
block7379 = (Object)new_AST_Block_with((Type_Array)array16542, (Type_Array)empty_Type_Array, 1, 1, send107880);
// named:parsing:semantics:
send107881 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23501, (Object)send107864, (Object)block7379);
method31307 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107881);
symbol30613 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure31213 = (Object)new_Runtime_MethodClosure(method31307);
store_method((Type_Class)class5266, (Type_Symbol)symbol30613, (Runtime_MethodClosure)methodclosure31213);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
symbol30817 = (Object)new_Type_Symbol_cached(L"named:parsing:");
string10792 = (Object)new_Type_String(L"COMMENT");
constant23508 = (Object)new_AST_Constant((Object)string10792);
symbol30818 = (Object)new_Type_Symbol_cached(L"separators");
// separators
send107882 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30818, 0);
symbol30819 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send107883 = (Object)new_AST_Send((Object)Self, (Object)symbol30819, 0);
// |
send107884 = (Object)new_AST_Send((Object)send107882, (Object)SMB__or, 1, (Object)send107883);
// strongTimes
send107885 = (Object)new_AST_Send((Object)send107884, (Object)symbol30697, 0);
// omit:
send107886 = (Object)new_AST_Send((Object)send107885, (Object)symbol30696, 1, (Object)True_Const);
// named:parsing:
send107887 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30817, 2, (Object)constant23508, (Object)send107886);
method31308 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107887);
symbol30641 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure31214 = (Object)new_Runtime_MethodClosure(method31308);
store_method((Type_Class)class5266, (Type_Symbol)symbol30641, (Runtime_MethodClosure)methodclosure31214);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string10793 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant23509 = (Object)new_AST_Constant((Object)string10793);
// identifier
send107888 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
string10794 = (Object)new_Type_String(L":");
constant23510 = (Object)new_AST_Constant((Object)string10794);
// asPEG
send107889 = (Object)new_AST_Send((Object)constant23510, (Object)symbol30703, 0);
// not
send107890 = (Object)new_AST_Send((Object)send107889, (Object)SMB_not, 0);
symbol30820 = (Object)new_Type_Symbol_cached(L"consume:");
// consume:
send107891 = (Object)new_AST_Send((Object)send107890, (Object)symbol30820, 1, (Object)False_Const);
// &&
send107892 = (Object)new_AST_Send((Object)send107888, (Object)symbol30692, 1, (Object)send107891);
localvariable18229 = (Object)new_AST_Variable_named(L"selector");
array16545 = (Object)new_Type_Array_with(1, (Object)localvariable18229);
// new
send107893 = (Object)new_AST_Send((Object)classreference11523, (Object)symbol30416, 0);
// createSymbol:
send107894 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)localvariable18229);
// selector:
send107895 = (Object)new_AST_Send((Object)send107893, (Object)symbol30583, 1, (Object)send107894);
block7380 = (Object)new_AST_Block_with((Type_Array)array16545, (Type_Array)empty_Type_Array, 1, 1, send107895);
// named:parsing:semantics:
send107896 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23509, (Object)send107892, (Object)block7380);
method31309 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107896);
symbol30653 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure31215 = (Object)new_Runtime_MethodClosure(method31309);
store_method((Type_Class)class5266, (Type_Symbol)symbol30653, (Runtime_MethodClosure)methodclosure31215);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
//             ifFalse: [ super doesNotUnderstand: message ].
//         self perform: selector
// 	]
localvariable18230 = (Object)new_AST_Variable_named(L"message");
array16546 = (Object)new_Type_Array_with(1, (Object)localvariable18230);
localvariable18231 = (Object)new_AST_Variable_named(L"selector");
array16547 = (Object)new_Type_Array_with(1, (Object)localvariable18231);
// selector
send107897 = (Object)new_AST_Send((Object)localvariable18230, (Object)symbol30580, 0);
string10795 = (Object)new_Type_String(L"initialize");
constant23511 = (Object)new_AST_Constant((Object)string10795);
// selector
send107898 = (Object)new_AST_Send((Object)localvariable18230, (Object)symbol30580, 0);
symbol30821 = (Object)new_Type_Symbol_cached(L"capitalized");
// capitalized
send107899 = (Object)new_AST_Send((Object)send107898, (Object)symbol30821, 0);
// ,
send107900 = (Object)new_AST_Send((Object)constant23511, (Object)SMB__concat, 1, (Object)send107899);
// asSymbol
send107901 = (Object)new_AST_Send((Object)send107900, (Object)SMB_asSymbol, 0);
assign13639 = (Object)new_AST_Assign((Object)localvariable18231, (Object)send107901);
symbol30822 = (Object)new_Type_Symbol_cached(L"respondsTo:");
// respondsTo:
send107902 = (Object)new_AST_Send((Object)Self, (Object)symbol30822, 1, (Object)localvariable18231);
super1728 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable18230);
block7381 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super1728);
// ifFalse:
send107903 = (Object)new_AST_Send((Object)send107902, (Object)SMB_ifFalse_, 1, (Object)block7381);
symbol30823 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send107904 = (Object)new_AST_Send((Object)Self, (Object)symbol30823, 1, (Object)localvariable18231);
block7382 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, assign13639, send107903, send107904);
// at:ifAbsentPut:
send107905 = (Object)new_AST_Send((Object)instancevariable13978, (Object)symbol30764, 2, (Object)send107897, (Object)block7382);
method31310 = (Object)new_AST_Method_with((Type_Array)array16546, (Type_Array)array16547, 1, send107905);
methodclosure31216 = (Object)new_Runtime_MethodClosure(method31310);
store_method((Type_Class)class5266, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure31216);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string10796 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant23512 = (Object)new_AST_Constant((Object)string10796);
// keyword
send107906 = (Object)new_AST_Send((Object)Self, (Object)symbol30814, 0);
// primary
send107907 = (Object)new_AST_Send((Object)Self, (Object)symbol30784, 0);
// &
send107908 = (Object)new_AST_Send((Object)send107906, (Object)SMB__and, 1, (Object)send107907);
// plus
send107909 = (Object)new_AST_Send((Object)send107908, (Object)symbol30701, 0);
localvariable18232 = (Object)new_AST_Variable_named(L"result");
array16548 = (Object)new_Type_Array_with(1, (Object)localvariable18232);
localvariable18233 = (Object)new_AST_Variable_named(L"receiver");
array16549 = (Object)new_Type_Array_with(1, (Object)localvariable18233);
localvariable18234 = (Object)new_AST_Variable_named(L"each");
array16550 = (Object)new_Type_Array_with(1, (Object)localvariable18234);
// first
send107910 = (Object)new_AST_Send((Object)localvariable18234, (Object)symbol30549, 0);
// named:
send107911 = (Object)new_AST_Send((Object)classreference11505, (Object)symbol30518, 1, (Object)send107910);
block7383 = (Object)new_AST_Block_with((Type_Array)array16550, (Type_Array)empty_Type_Array, 3, 1, send107911);
// collect:
send107912 = (Object)new_AST_Send((Object)localvariable18232, (Object)symbol30816, 1, (Object)block7383);
// keywords:
send107913 = (Object)new_AST_Send((Object)localvariable18233, (Object)symbol30586, 1, (Object)send107912);
// new
send107914 = (Object)new_AST_Send((Object)classreference11495, (Object)symbol30416, 0);
constant23513 = (Object)new_AST_Constant((Object)symbol30549);
// collect:
send107915 = (Object)new_AST_Send((Object)localvariable18232, (Object)symbol30816, 1, (Object)constant23513);
// keywords:
send107916 = (Object)new_AST_Send((Object)send107914, (Object)symbol30586, 1, (Object)send107915);
// selector:
send107917 = (Object)new_AST_Send((Object)localvariable18233, (Object)symbol30583, 1, (Object)send107916);
constant23514 = (Object)new_AST_Constant((Object)symbol30804);
// collect:
send107918 = (Object)new_AST_Send((Object)localvariable18232, (Object)symbol30816, 1, (Object)constant23514);
// arguments:
send107919 = (Object)new_AST_Send((Object)localvariable18233, (Object)symbol30590, 1, (Object)send107918);
block7384 = (Object)new_AST_Block_with((Type_Array)array16549, (Type_Array)empty_Type_Array, 2, 3, send107913, send107917, send107919);
// new
send107920 = (Object)new_AST_Send((Object)classreference11494, (Object)symbol30416, 0);
// value:
send107921 = (Object)new_AST_Send((Object)block7384, (Object)SMB_value_, 1, (Object)send107920);
block7385 = (Object)new_AST_Block_with((Type_Array)array16548, (Type_Array)empty_Type_Array, 1, 1, send107921);
// named:parsing:semantics:
send107922 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23512, (Object)send107909, (Object)block7385);
method31311 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107922);
symbol30681 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure31217 = (Object)new_Runtime_MethodClosure(method31311);
store_method((Type_Class)class5266, (Type_Symbol)symbol30681, (Runtime_MethodClosure)methodclosure31217);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
string10797 = (Object)new_Type_String(L"BLOCK");
constant23515 = (Object)new_AST_Constant((Object)string10797);
string10798 = (Object)new_Type_String(L"[");
constant23516 = (Object)new_AST_Constant((Object)string10798);
// asPEG
send107923 = (Object)new_AST_Send((Object)constant23516, (Object)symbol30703, 0);
// omit:
send107924 = (Object)new_AST_Send((Object)send107923, (Object)symbol30696, 1, (Object)True_Const);
symbol30824 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send107925 = (Object)new_AST_Send((Object)Self, (Object)symbol30824, 0);
symbol30825 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send107926 = (Object)new_AST_Send((Object)Self, (Object)symbol30825, 0);
// &
send107927 = (Object)new_AST_Send((Object)send107925, (Object)SMB__and, 1, (Object)send107926);
// optional
send107928 = (Object)new_AST_Send((Object)send107927, (Object)symbol30705, 0);
// temporaries
send107929 = (Object)new_AST_Send((Object)Self, (Object)symbol30604, 0);
// optional
send107930 = (Object)new_AST_Send((Object)send107929, (Object)symbol30705, 0);
// statements
send107931 = (Object)new_AST_Send((Object)Self, (Object)symbol30599, 0);
// <&
send107932 = (Object)new_AST_Send((Object)send107930, (Object)symbol30725, 1, (Object)send107931);
// <&
send107933 = (Object)new_AST_Send((Object)send107928, (Object)symbol30725, 1, (Object)send107932);
// &
send107934 = (Object)new_AST_Send((Object)send107924, (Object)SMB__and, 1, (Object)send107933);
string10799 = (Object)new_Type_String(L"]");
constant23517 = (Object)new_AST_Constant((Object)string10799);
// asPEG
send107935 = (Object)new_AST_Send((Object)constant23517, (Object)symbol30703, 0);
// omit:
send107936 = (Object)new_AST_Send((Object)send107935, (Object)symbol30696, 1, (Object)True_Const);
// <&
send107937 = (Object)new_AST_Send((Object)send107934, (Object)symbol30725, 1, (Object)send107936);
localvariable18235 = (Object)new_AST_Variable_named(L"result");
array16551 = (Object)new_Type_Array_with(1, (Object)localvariable18235);
localvariable18236 = (Object)new_AST_Variable_named(L"receiver");
array16552 = (Object)new_Type_Array_with(1, (Object)localvariable18236);
// first
send107938 = (Object)new_AST_Send((Object)localvariable18235, (Object)symbol30549, 0);
// new
send107939 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
block7386 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107939);
// resultIfFailed:
send107940 = (Object)new_AST_Send((Object)send107938, (Object)symbol30730, 1, (Object)block7386);
// parameters:
send107941 = (Object)new_AST_Send((Object)localvariable18236, (Object)symbol30608, 1, (Object)send107940);
smallint10786 = (Object)new_Type_SmallInt(2);
constant23518 = (Object)new_AST_Constant((Object)smallint10786);
// at:
send107942 = (Object)new_AST_Send((Object)localvariable18235, (Object)SMB_at_, 1, (Object)constant23518);
// new
send107943 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
block7387 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send107943);
// resultIfFailed:
send107944 = (Object)new_AST_Send((Object)send107942, (Object)symbol30730, 1, (Object)block7387);
// temporaries:
send107945 = (Object)new_AST_Send((Object)localvariable18236, (Object)symbol30605, 1, (Object)send107944);
smallint10787 = (Object)new_Type_SmallInt(3);
constant23519 = (Object)new_AST_Constant((Object)smallint10787);
// at:
send107946 = (Object)new_AST_Send((Object)localvariable18235, (Object)SMB_at_, 1, (Object)constant23519);
// statements:
send107947 = (Object)new_AST_Send((Object)localvariable18236, (Object)symbol30602, 1, (Object)send107946);
block7388 = (Object)new_AST_Block_with((Type_Array)array16552, (Type_Array)empty_Type_Array, 2, 3, send107941, send107945, send107947);
// new
send107948 = (Object)new_AST_Send((Object)classreference11514, (Object)symbol30416, 0);
// value:
send107949 = (Object)new_AST_Send((Object)block7388, (Object)SMB_value_, 1, (Object)send107948);
block7389 = (Object)new_AST_Block_with((Type_Array)array16551, (Type_Array)empty_Type_Array, 1, 1, send107949);
// named:parsing:semantics:
send107950 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23515, (Object)send107937, (Object)block7389);
method31312 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107950);
symbol30623 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure31218 = (Object)new_Runtime_MethodClosure(method31312);
store_method((Type_Class)class5266, (Type_Symbol)symbol30623, (Runtime_MethodClosure)methodclosure31218);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string10800 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant23520 = (Object)new_AST_Constant((Object)string10800);
// symbol
send107951 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
localvariable18237 = (Object)new_AST_Variable_named(L"symbol");
array16553 = (Object)new_Type_Array_with(1, (Object)localvariable18237);
// new
send107952 = (Object)new_AST_Send((Object)classreference11505, (Object)symbol30416, 0);
// symbol:
send107953 = (Object)new_AST_Send((Object)send107952, (Object)symbol30566, 1, (Object)localvariable18237);
block7390 = (Object)new_AST_Block_with((Type_Array)array16553, (Type_Array)empty_Type_Array, 1, 1, send107953);
// named:parsing:semantics:
send107954 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23520, (Object)send107951, (Object)block7390);
method31313 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107954);
symbol30635 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure31219 = (Object)new_Runtime_MethodClosure(method31313);
store_method((Type_Class)class5266, (Type_Symbol)symbol30635, (Runtime_MethodClosure)methodclosure31219);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string10801 = (Object)new_Type_String(L"VARIABLE-NAME");
constant23521 = (Object)new_AST_Constant((Object)string10801);
// identifier
send107955 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
localvariable18238 = (Object)new_AST_Variable_named(L"result");
array16554 = (Object)new_Type_Array_with(1, (Object)localvariable18238);
// createVariable:
send107956 = (Object)new_AST_Send((Object)Self, (Object)symbol30642, 1, (Object)localvariable18238);
block7391 = (Object)new_AST_Block_with((Type_Array)array16554, (Type_Array)empty_Type_Array, 1, 1, send107956);
// named:parsing:semantics:
send107957 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23521, (Object)send107955, (Object)block7391);
method31314 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107957);
symbol30663 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure31220 = (Object)new_Runtime_MethodClosure(method31314);
store_method((Type_Class)class5266, (Type_Symbol)symbol30663, (Runtime_MethodClosure)methodclosure31220);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
string10802 = (Object)new_Type_String(L"TEMPORARIES");
constant23522 = (Object)new_AST_Constant((Object)string10802);
// bar
send107958 = (Object)new_AST_Send((Object)Self, (Object)symbol30825, 0);
symbol30826 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send107959 = (Object)new_AST_Send((Object)Self, (Object)symbol30826, 0);
// times
send107960 = (Object)new_AST_Send((Object)send107959, (Object)symbol30707, 0);
// &
send107961 = (Object)new_AST_Send((Object)send107958, (Object)SMB__and, 1, (Object)send107960);
// bar
send107962 = (Object)new_AST_Send((Object)Self, (Object)symbol30825, 0);
// <&
send107963 = (Object)new_AST_Send((Object)send107961, (Object)symbol30725, 1, (Object)send107962);
// named:parsing:
send107964 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30817, 2, (Object)constant23522, (Object)send107963);
method31315 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107964);
symbol30617 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure31221 = (Object)new_Runtime_MethodClosure(method31315);
store_method((Type_Class)class5266, (Type_Symbol)symbol30617, (Runtime_MethodClosure)methodclosure31221);


// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string10803 = (Object)new_Type_String(L"RETURN");
constant23523 = (Object)new_AST_Constant((Object)string10803);
string10804 = (Object)new_Type_String(L"^");
constant23524 = (Object)new_AST_Constant((Object)string10804);
// asPEG
send107965 = (Object)new_AST_Send((Object)constant23524, (Object)symbol30703, 0);
// omit:
send107966 = (Object)new_AST_Send((Object)send107965, (Object)symbol30696, 1, (Object)True_Const);
// finalExpression
send107967 = (Object)new_AST_Send((Object)Self, (Object)symbol30775, 0);
// &
send107968 = (Object)new_AST_Send((Object)send107966, (Object)SMB__and, 1, (Object)send107967);
localvariable18239 = (Object)new_AST_Variable_named(L"expression");
array16555 = (Object)new_Type_Array_with(1, (Object)localvariable18239);
// new
send107969 = (Object)new_AST_Send((Object)classreference11522, (Object)symbol30416, 0);
// expression:
send107970 = (Object)new_AST_Send((Object)send107969, (Object)symbol30575, 1, (Object)localvariable18239);
block7392 = (Object)new_AST_Block_with((Type_Array)array16555, (Type_Array)empty_Type_Array, 1, 1, send107970);
// named:parsing:semantics:
send107971 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23523, (Object)send107968, (Object)block7392);
method31316 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107971);
symbol30645 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure31222 = (Object)new_Runtime_MethodClosure(method31316);
store_method((Type_Class)class5266, (Type_Symbol)symbol30645, (Runtime_MethodClosure)methodclosure31222);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string10805 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant23525 = (Object)new_AST_Constant((Object)string10805);
// uppercase
send107972 = (Object)new_AST_Send((Object)Self, (Object)symbol30777, 0);
// letter
send107973 = (Object)new_AST_Send((Object)Self, (Object)symbol30802, 0);
// decimalDigit
send107974 = (Object)new_AST_Send((Object)Self, (Object)symbol30803, 0);
// |
send107975 = (Object)new_AST_Send((Object)send107973, (Object)SMB__or, 1, (Object)send107974);
// strongTimes
send107976 = (Object)new_AST_Send((Object)send107975, (Object)symbol30697, 0);
// &&
send107977 = (Object)new_AST_Send((Object)send107972, (Object)symbol30692, 1, (Object)send107976);
localvariable18240 = (Object)new_AST_Variable_named(L"result");
array16556 = (Object)new_Type_Array_with(1, (Object)localvariable18240);
// second
send107978 = (Object)new_AST_Send((Object)localvariable18240, (Object)symbol30804, 0);
// first
send107979 = (Object)new_AST_Send((Object)localvariable18240, (Object)symbol30549, 0);
localvariable18241 = (Object)new_AST_Variable_named(L"c");
localvariable18242 = (Object)new_AST_Variable_named(L"e");
array16557 = (Object)new_Type_Array_with(2, (Object)localvariable18241, (Object)localvariable18242);
// ,
send107980 = (Object)new_AST_Send((Object)localvariable18241, (Object)SMB__concat, 1, (Object)localvariable18242);
block7393 = (Object)new_AST_Block_with((Type_Array)array16557, (Type_Array)empty_Type_Array, 2, 1, send107980);
// inject:into:
send107981 = (Object)new_AST_Send((Object)send107978, (Object)symbol30554, 2, (Object)send107979, (Object)block7393);
block7394 = (Object)new_AST_Block_with((Type_Array)array16556, (Type_Array)empty_Type_Array, 1, 1, send107981);
// named:parsing:semantics:
send107982 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23525, (Object)send107977, (Object)block7394);
method31317 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107982);
symbol30673 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure31223 = (Object)new_Runtime_MethodClosure(method31317);
store_method((Type_Class)class5266, (Type_Symbol)symbol30673, (Runtime_MethodClosure)methodclosure31223);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string10806 = (Object)new_Type_String(L"0-9");
constant23526 = (Object)new_AST_Constant((Object)string10806);
symbol30827 = (Object)new_Type_Symbol_cached(L"asPEGRange");
// asPEGRange
send107983 = (Object)new_AST_Send((Object)constant23526, (Object)symbol30827, 0);
method31318 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send107983);
symbol30657 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure31224 = (Object)new_Runtime_MethodClosure(method31318);
store_method((Type_Class)class5266, (Type_Symbol)symbol30657, (Runtime_MethodClosure)methodclosure31224);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string10807 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant23527 = (Object)new_AST_Constant((Object)string10807);
string10808 = (Object)new_Type_String(L"{");
constant23528 = (Object)new_AST_Constant((Object)string10808);
// asPEG
send107984 = (Object)new_AST_Send((Object)constant23528, (Object)symbol30703, 0);
// omit:
send107985 = (Object)new_AST_Send((Object)send107984, (Object)symbol30696, 1, (Object)True_Const);
// subExpression
send107986 = (Object)new_AST_Send((Object)Self, (Object)symbol30773, 0);
// times
send107987 = (Object)new_AST_Send((Object)send107986, (Object)symbol30707, 0);
// expression
send107988 = (Object)new_AST_Send((Object)Self, (Object)symbol30572, 0);
// <&
send107989 = (Object)new_AST_Send((Object)send107987, (Object)symbol30725, 1, (Object)send107988);
// &
send107990 = (Object)new_AST_Send((Object)send107985, (Object)SMB__and, 1, (Object)send107989);
string10809 = (Object)new_Type_String(L"}");
constant23529 = (Object)new_AST_Constant((Object)string10809);
// asPEG
send107991 = (Object)new_AST_Send((Object)constant23529, (Object)symbol30703, 0);
// omit:
send107992 = (Object)new_AST_Send((Object)send107991, (Object)symbol30696, 1, (Object)True_Const);
// <&
send107993 = (Object)new_AST_Send((Object)send107990, (Object)symbol30725, 1, (Object)send107992);
localvariable18243 = (Object)new_AST_Variable_named(L"result");
array16558 = (Object)new_Type_Array_with(1, (Object)localvariable18243);
// new
send107994 = (Object)new_AST_Send((Object)classreference11503, (Object)symbol30416, 0);
localvariable18244 = (Object)new_AST_Variable_named(L"receiver");
array16559 = (Object)new_Type_Array_with(1, (Object)localvariable18244);
smallint10788 = (Object)new_Type_SmallInt(2);
constant23530 = (Object)new_AST_Constant((Object)smallint10788);
// at:
send107995 = (Object)new_AST_Send((Object)localvariable18243, (Object)SMB_at_, 1, (Object)constant23530);
// add:
send107996 = (Object)new_AST_Send((Object)localvariable18244, (Object)symbol30553, 1, (Object)send107995);
// yourself
send107997 = (Object)new_AST_Send((Object)localvariable18244, (Object)symbol30410, 0);
block7395 = (Object)new_AST_Block_with((Type_Array)array16559, (Type_Array)empty_Type_Array, 2, 2, send107996, send107997);
// first
send107998 = (Object)new_AST_Send((Object)localvariable18243, (Object)symbol30549, 0);
// value:
send107999 = (Object)new_AST_Send((Object)block7395, (Object)SMB_value_, 1, (Object)send107998);
// expressions:
send108000 = (Object)new_AST_Send((Object)send107994, (Object)symbol30722, 1, (Object)send107999);
block7396 = (Object)new_AST_Block_with((Type_Array)array16558, (Type_Array)empty_Type_Array, 1, 1, send108000);
// named:parsing:semantics:
send108001 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23527, (Object)send107993, (Object)block7396);
method31319 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108001);
symbol30685 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure31225 = (Object)new_Runtime_MethodClosure(method31319);
store_method((Type_Class)class5266, (Type_Symbol)symbol30685, (Runtime_MethodClosure)methodclosure31225);


// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
string10810 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant23531 = (Object)new_AST_Constant((Object)string10810);
// unarySelector
send108002 = (Object)new_AST_Send((Object)Self, (Object)symbol30786, 0);
localvariable18245 = (Object)new_AST_Variable_named(L"selector");
array16560 = (Object)new_Type_Array_with(1, (Object)localvariable18245);
// new
send108003 = (Object)new_AST_Send((Object)classreference11497, (Object)symbol30416, 0);
// selector:
send108004 = (Object)new_AST_Send((Object)send108003, (Object)symbol30583, 1, (Object)localvariable18245);
block7397 = (Object)new_AST_Block_with((Type_Array)array16560, (Type_Array)empty_Type_Array, 1, 1, send108004);
// named:parsing:semantics:
send108005 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23531, (Object)send108002, (Object)block7397);
method31320 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108005);
symbol30627 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure31226 = (Object)new_Runtime_MethodClosure(method31320);
store_method((Type_Class)class5266, (Type_Symbol)symbol30627, (Runtime_MethodClosure)methodclosure31226);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string10811 = (Object)new_Type_String(L"NUMBER");
constant23532 = (Object)new_AST_Constant((Object)string10811);
// decimalDigit
send108006 = (Object)new_AST_Send((Object)Self, (Object)symbol30803, 0);
// plus
send108007 = (Object)new_AST_Send((Object)send108006, (Object)symbol30701, 0);
localvariable18246 = (Object)new_AST_Variable_named(L"result");
array16561 = (Object)new_Type_Array_with(1, (Object)localvariable18246);
localvariable18247 = (Object)new_AST_Variable_named(L"receiver");
array16562 = (Object)new_Type_Array_with(1, (Object)localvariable18247);
string10812 = (Object)new_Type_String(L"");
constant23533 = (Object)new_AST_Constant((Object)string10812);
localvariable18248 = (Object)new_AST_Variable_named(L"c");
localvariable18249 = (Object)new_AST_Variable_named(L"e");
array16563 = (Object)new_Type_Array_with(2, (Object)localvariable18248, (Object)localvariable18249);
// ,
send108008 = (Object)new_AST_Send((Object)localvariable18248, (Object)SMB__concat, 1, (Object)localvariable18249);
block7398 = (Object)new_AST_Block_with((Type_Array)array16563, (Type_Array)empty_Type_Array, 3, 1, send108008);
// inject:into:
send108009 = (Object)new_AST_Send((Object)localvariable18246, (Object)symbol30554, 2, (Object)constant23533, (Object)block7398);
// number:
send108010 = (Object)new_AST_Send((Object)localvariable18247, (Object)symbol30560, 1, (Object)send108009);
string10813 = (Object)new_Type_String(L"10");
constant23534 = (Object)new_AST_Constant((Object)string10813);
// base:
send108011 = (Object)new_AST_Send((Object)localvariable18247, (Object)symbol30561, 1, (Object)constant23534);
block7399 = (Object)new_AST_Block_with((Type_Array)array16562, (Type_Array)empty_Type_Array, 2, 2, send108010, send108011);
// new
send108012 = (Object)new_AST_Send((Object)classreference11499, (Object)symbol30416, 0);
// value:
send108013 = (Object)new_AST_Send((Object)block7399, (Object)SMB_value_, 1, (Object)send108012);
block7400 = (Object)new_AST_Block_with((Type_Array)array16561, (Type_Array)empty_Type_Array, 1, 1, send108013);
// named:parsing:semantics:
send108014 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23532, (Object)send108007, (Object)block7400);
method31321 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108014);
symbol30639 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure31227 = (Object)new_Runtime_MethodClosure(method31321);
store_method((Type_Class)class5266, (Type_Symbol)symbol30639, (Runtime_MethodClosure)methodclosure31227);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string10814 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant23535 = (Object)new_AST_Constant((Object)string10814);
symbol30828 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
// asPEGChoice
send108015 = (Object)new_AST_Send((Object)constant23535, (Object)symbol30828, 0);
// separators
send108016 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30818, 0);
// decimalDigit
send108017 = (Object)new_AST_Send((Object)Self, (Object)symbol30803, 0);
// letter
send108018 = (Object)new_AST_Send((Object)Self, (Object)symbol30802, 0);
// <=
send108019 = (Object)new_AST_Send((Object)send108017, (Object)symbol30712, 1, (Object)send108018);
// <=
send108020 = (Object)new_AST_Send((Object)send108016, (Object)symbol30712, 1, (Object)send108019);
// |
send108021 = (Object)new_AST_Send((Object)send108015, (Object)SMB__or, 1, (Object)send108020);
// specialCharacter
send108022 = (Object)new_AST_Send((Object)Self, (Object)symbol30810, 0);
// <=
send108023 = (Object)new_AST_Send((Object)send108021, (Object)symbol30712, 1, (Object)send108022);
method31322 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108023);
symbol30667 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure31228 = (Object)new_Runtime_MethodClosure(method31322);
store_method((Type_Class)class5266, (Type_Symbol)symbol30667, (Runtime_MethodClosure)methodclosure31228);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string10815 = (Object)new_Type_String(L"a-z");
constant23536 = (Object)new_AST_Constant((Object)string10815);
// asPEGRange
send108024 = (Object)new_AST_Send((Object)constant23536, (Object)symbol30827, 0);
method31323 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108024);
symbol30620 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure31229 = (Object)new_Runtime_MethodClosure(method31323);
store_method((Type_Class)class5266, (Type_Symbol)symbol30620, (Runtime_MethodClosure)methodclosure31229);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send108025 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
string10816 = (Object)new_Type_String(L":");
constant23537 = (Object)new_AST_Constant((Object)string10816);
// asPEG
send108026 = (Object)new_AST_Send((Object)constant23537, (Object)symbol30703, 0);
// omit:
send108027 = (Object)new_AST_Send((Object)send108026, (Object)symbol30696, 1, (Object)True_Const);
// &&
send108028 = (Object)new_AST_Send((Object)send108025, (Object)symbol30692, 1, (Object)send108027);
method31324 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108028);
symbol30632 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure31230 = (Object)new_Runtime_MethodClosure(method31324);
store_method((Type_Class)class5266, (Type_Symbol)symbol30632, (Runtime_MethodClosure)methodclosure31230);


// SCParser>>symbols
//symbols
// 	^ symbols
method31325 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13980);
symbol30660 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure31231 = (Object)new_Runtime_MethodClosure(method31325);
store_method((Type_Class)class5266, (Type_Symbol)symbol30660, (Runtime_MethodClosure)methodclosure31231);


// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
string10817 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant23538 = (Object)new_AST_Constant((Object)string10817);
string10818 = (Object)new_Type_String(L"#");
constant23539 = (Object)new_AST_Constant((Object)string10818);
// asPEG
send108029 = (Object)new_AST_Send((Object)constant23539, (Object)symbol30703, 0);
// omit:
send108030 = (Object)new_AST_Send((Object)send108029, (Object)symbol30696, 1, (Object)True_Const);
// symbol
send108031 = (Object)new_AST_Send((Object)Self, (Object)symbol30563, 0);
// &&
send108032 = (Object)new_AST_Send((Object)send108030, (Object)symbol30692, 1, (Object)send108031);
localvariable18250 = (Object)new_AST_Variable_named(L"result");
array16564 = (Object)new_Type_Array_with(1, (Object)localvariable18250);
// new
send108033 = (Object)new_AST_Send((Object)classreference11505, (Object)symbol30416, 0);
// symbol:
send108034 = (Object)new_AST_Send((Object)send108033, (Object)symbol30566, 1, (Object)localvariable18250);
block7401 = (Object)new_AST_Block_with((Type_Array)array16564, (Type_Array)empty_Type_Array, 1, 1, send108034);
// named:parsing:semantics:
send108035 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23538, (Object)send108032, (Object)block7401);
method31326 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108035);
symbol30649 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure31232 = (Object)new_Runtime_MethodClosure(method31326);
store_method((Type_Class)class5266, (Type_Symbol)symbol30649, (Runtime_MethodClosure)methodclosure31232);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable18251 = (Object)new_AST_Variable_named(L"aDictionary");
array16565 = (Object)new_Type_Array_with(1, (Object)localvariable18251);
assign13640 = (Object)new_AST_Assign((Object)instancevariable13978, (Object)localvariable18251);
method31327 = (Object)new_AST_Method_with((Type_Array)array16565, (Type_Array)empty_Type_Array, 2, assign13640, Self);
symbol30677 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure31233 = (Object)new_Runtime_MethodClosure(method31327);
store_method((Type_Class)class5266, (Type_Symbol)symbol30677, (Runtime_MethodClosure)methodclosure31233);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string10819 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant23540 = (Object)new_AST_Constant((Object)string10819);
// asPEGChoice
send108036 = (Object)new_AST_Send((Object)constant23540, (Object)symbol30828, 0);
method31328 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108036);
symbol30614 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure31234 = (Object)new_Runtime_MethodClosure(method31328);
store_method((Type_Class)class5266, (Type_Symbol)symbol30614, (Runtime_MethodClosure)methodclosure31234);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable18252 = (Object)new_AST_Variable_named(L"name");
array16566 = (Object)new_Type_Array_with(1, (Object)localvariable18252);
variable1227 = (Object)new_AST_Variable_named(L"return");
array16567 = (Object)new_Type_Array_with(1, (Object)variable1227);
string10820 = (Object)new_Type_String(L"self");
constant23541 = (Object)new_AST_Constant((Object)string10820);
// =
send108037 = (Object)new_AST_Send((Object)localvariable18252, (Object)SMB__equal, 1, (Object)constant23541);
// new
send108038 = (Object)new_AST_Send((Object)classreference11516, (Object)symbol30416, 0);
// escape:
send108039 = (Object)new_AST_Send((Object)variable1227, (Object)SMB_escape_, 1, (Object)send108038);
block7402 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send108039);
// ifTrue:
send108040 = (Object)new_AST_Send((Object)send108037, (Object)SMB_ifTrue_, 1, (Object)block7402);
string10821 = (Object)new_Type_String(L"super");
constant23542 = (Object)new_AST_Constant((Object)string10821);
// =
send108041 = (Object)new_AST_Send((Object)localvariable18252, (Object)SMB__equal, 1, (Object)constant23542);
// new
send108042 = (Object)new_AST_Send((Object)classreference11496, (Object)symbol30416, 0);
// escape:
send108043 = (Object)new_AST_Send((Object)variable1227, (Object)SMB_escape_, 1, (Object)send108042);
block7403 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send108043);
// ifTrue:
send108044 = (Object)new_AST_Send((Object)send108041, (Object)SMB_ifTrue_, 1, (Object)block7403);
// new
send108045 = (Object)new_AST_Send((Object)classreference11507, (Object)symbol30416, 0);
// name:
send108046 = (Object)new_AST_Send((Object)send108045, (Object)symbol30520, 1, (Object)localvariable18252);
block7404 = (Object)new_AST_Block_with((Type_Array)array16567, (Type_Array)empty_Type_Array, 1, 3, send108040, send108044, send108046);
// on:
send108047 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7404);
method31329 = (Object)new_AST_Method_with((Type_Array)array16566, (Type_Array)empty_Type_Array, 1, send108047);
methodclosure31235 = (Object)new_Runtime_MethodClosure(method31329);
store_method((Type_Class)class5266, (Type_Symbol)symbol30642, (Runtime_MethodClosure)methodclosure31235);


// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string10822 = (Object)new_Type_String(L"A-Z");
constant23543 = (Object)new_AST_Constant((Object)string10822);
// asPEGRange
send108048 = (Object)new_AST_Send((Object)constant23543, (Object)symbol30827, 0);
method31330 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108048);
symbol30670 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure31236 = (Object)new_Runtime_MethodClosure(method31330);
store_method((Type_Class)class5266, (Type_Symbol)symbol30670, (Runtime_MethodClosure)methodclosure31236);


// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
constant23544 = (Object)new_AST_Constant((Object)symbol30793);
string10823 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant23545 = (Object)new_AST_Constant((Object)string10823);
// named:
send108049 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30518, 1, (Object)constant23545);
block7405 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send108049);
// at:ifAbsentPut:
send108050 = (Object)new_AST_Send((Object)instancevariable13978, (Object)symbol30764, 2, (Object)constant23544, (Object)block7405);
method31331 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108050);
symbol30654 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
methodclosure31237 = (Object)new_Runtime_MethodClosure(method31331);
store_method((Type_Class)class5266, (Type_Symbol)symbol30654, (Runtime_MethodClosure)methodclosure31237);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string10824 = (Object)new_Type_String(L"STRING-CONSTANT");
constant23546 = (Object)new_AST_Constant((Object)string10824);
// string
send108051 = (Object)new_AST_Send((Object)Self, (Object)symbol30568, 0);
localvariable18253 = (Object)new_AST_Variable_named(L"result");
array16568 = (Object)new_Type_Array_with(1, (Object)localvariable18253);
// new
send108052 = (Object)new_AST_Send((Object)classreference11509, (Object)symbol30416, 0);
// string:
send108053 = (Object)new_AST_Send((Object)send108052, (Object)symbol30567, 1, (Object)localvariable18253);
block7406 = (Object)new_AST_Block_with((Type_Array)array16568, (Type_Array)empty_Type_Array, 1, 1, send108053);
// named:parsing:semantics:
send108054 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23546, (Object)send108051, (Object)block7406);
method31332 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108054);
symbol30682 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure31238 = (Object)new_Runtime_MethodClosure(method31332);
store_method((Type_Class)class5266, (Type_Symbol)symbol30682, (Runtime_MethodClosure)methodclosure31238);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string10825 = (Object)new_Type_String(L"|");
constant23547 = (Object)new_AST_Constant((Object)string10825);
// asPEG
send108055 = (Object)new_AST_Send((Object)constant23547, (Object)symbol30703, 0);
// omit:
send108056 = (Object)new_AST_Send((Object)send108055, (Object)symbol30696, 1, (Object)True_Const);
method31333 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108056);
symbol30624 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure31239 = (Object)new_Runtime_MethodClosure(method31333);
store_method((Type_Class)class5266, (Type_Symbol)symbol30624, (Runtime_MethodClosure)methodclosure31239);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string10826 = (Object)new_Type_String(L"SYMBOL");
constant23548 = (Object)new_AST_Constant((Object)string10826);
symbol30829 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send108057 = (Object)new_AST_Send((Object)Self, (Object)symbol30829, 0);
// identifier
send108058 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
// binarySelector
send108059 = (Object)new_AST_Send((Object)Self, (Object)symbol30806, 0);
// <=
send108060 = (Object)new_AST_Send((Object)send108058, (Object)symbol30712, 1, (Object)send108059);
// |
send108061 = (Object)new_AST_Send((Object)send108057, (Object)SMB__or, 1, (Object)send108060);
// string
send108062 = (Object)new_AST_Send((Object)Self, (Object)symbol30568, 0);
// <=
send108063 = (Object)new_AST_Send((Object)send108061, (Object)symbol30712, 1, (Object)send108062);
// named:parsing:
send108064 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30817, 2, (Object)constant23548, (Object)send108063);
method31334 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108064);
symbol30636 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure31240 = (Object)new_Runtime_MethodClosure(method31334);
store_method((Type_Class)class5266, (Type_Symbol)symbol30636, (Runtime_MethodClosure)methodclosure31240);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable18254 = (Object)new_AST_Variable_named(L"result");
array16569 = (Object)new_Type_Array_with(1, (Object)localvariable18254);
string10827 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant23549 = (Object)new_AST_Constant((Object)string10827);
// keyword
send108065 = (Object)new_AST_Send((Object)Self, (Object)symbol30814, 0);
// parameterName
send108066 = (Object)new_AST_Send((Object)Self, (Object)symbol30812, 0);
// &
send108067 = (Object)new_AST_Send((Object)send108065, (Object)SMB__and, 1, (Object)send108066);
// plus
send108068 = (Object)new_AST_Send((Object)send108067, (Object)symbol30701, 0);
localvariable18255 = (Object)new_AST_Variable_named(L"pairs");
array16570 = (Object)new_Type_Array_with(1, (Object)localvariable18255);
// new
send108069 = (Object)new_AST_Send((Object)classreference11525, (Object)symbol30416, 0);
assign13641 = (Object)new_AST_Assign((Object)localvariable18254, (Object)send108069);
localvariable18256 = (Object)new_AST_Variable_named(L"pair");
array16571 = (Object)new_Type_Array_with(1, (Object)localvariable18256);
// keywords
send108070 = (Object)new_AST_Send((Object)localvariable18254, (Object)symbol30585, 0);
// first
send108071 = (Object)new_AST_Send((Object)localvariable18256, (Object)symbol30549, 0);
// add:
send108072 = (Object)new_AST_Send((Object)send108070, (Object)symbol30553, 1, (Object)send108071);
// parameters
send108073 = (Object)new_AST_Send((Object)localvariable18254, (Object)symbol30582, 0);
smallint10789 = (Object)new_Type_SmallInt(2);
constant23550 = (Object)new_AST_Constant((Object)smallint10789);
// at:
send108074 = (Object)new_AST_Send((Object)localvariable18256, (Object)SMB_at_, 1, (Object)constant23550);
// createVariable:
send108075 = (Object)new_AST_Send((Object)Self, (Object)symbol30642, 1, (Object)send108074);
// add:
send108076 = (Object)new_AST_Send((Object)send108073, (Object)symbol30553, 1, (Object)send108075);
block7407 = (Object)new_AST_Block_with((Type_Array)array16571, (Type_Array)empty_Type_Array, 2, 2, send108072, send108076);
// do:
send108077 = (Object)new_AST_Send((Object)localvariable18255, (Object)symbol30552, 1, (Object)block7407);
// selectorName
send108078 = (Object)new_AST_Send((Object)localvariable18254, (Object)symbol30581, 0);
// named:
send108079 = (Object)new_AST_Send((Object)classreference11505, (Object)symbol30518, 1, (Object)send108078);
// selector:
send108080 = (Object)new_AST_Send((Object)localvariable18254, (Object)symbol30583, 1, (Object)send108079);
block7408 = (Object)new_AST_Block_with((Type_Array)array16570, (Type_Array)empty_Type_Array, 1, 4, assign13641, send108077, send108080, localvariable18254);
// named:parsing:semantics:
send108081 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23549, (Object)send108068, (Object)block7408);
method31335 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16569, 1, send108081);
symbol30664 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure31241 = (Object)new_Runtime_MethodClosure(method31335);
store_method((Type_Class)class5266, (Type_Symbol)symbol30664, (Runtime_MethodClosure)methodclosure31241);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
string10828 = (Object)new_Type_String(L"ANNOTATION");
constant23551 = (Object)new_AST_Constant((Object)string10828);
string10829 = (Object)new_Type_String(L"<");
constant23552 = (Object)new_AST_Constant((Object)string10829);
// asPEG
send108082 = (Object)new_AST_Send((Object)constant23552, (Object)symbol30703, 0);
// omit:
send108083 = (Object)new_AST_Send((Object)send108082, (Object)symbol30696, 1, (Object)True_Const);
symbol30830 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send108084 = (Object)new_AST_Send((Object)Self, (Object)symbol30830, 0);
symbol30831 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send108085 = (Object)new_AST_Send((Object)Self, (Object)symbol30831, 0);
// |
send108086 = (Object)new_AST_Send((Object)send108084, (Object)SMB__or, 1, (Object)send108085);
// &
send108087 = (Object)new_AST_Send((Object)send108083, (Object)SMB__and, 1, (Object)send108086);
string10830 = (Object)new_Type_String(L">");
constant23553 = (Object)new_AST_Constant((Object)string10830);
// asPEG
send108088 = (Object)new_AST_Send((Object)constant23553, (Object)symbol30703, 0);
// omit:
send108089 = (Object)new_AST_Send((Object)send108088, (Object)symbol30696, 1, (Object)True_Const);
// <&
send108090 = (Object)new_AST_Send((Object)send108087, (Object)symbol30725, 1, (Object)send108089);
// named:parsing:
send108091 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30817, 2, (Object)constant23551, (Object)send108090);
method31336 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108091);
symbol30646 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure31242 = (Object)new_Runtime_MethodClosure(method31336);
store_method((Type_Class)class5266, (Type_Symbol)symbol30646, (Runtime_MethodClosure)methodclosure31242);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send108092 = (Object)new_AST_Send((Object)Self, (Object)symbol30809, 0);
// binaryObjectDescription
send108093 = (Object)new_AST_Send((Object)Self, (Object)symbol30788, 0);
method31337 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send108092, send108093);
symbol30674 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure31243 = (Object)new_Runtime_MethodClosure(method31337);
store_method((Type_Class)class5266, (Type_Symbol)symbol30674, (Runtime_MethodClosure)methodclosure31243);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super1729 = (Object)new_AST_Super((Object)symbol30515, 0);
// new
send108094 = (Object)new_AST_Send((Object)classreference11534, (Object)symbol30416, 0);
assign13642 = (Object)new_AST_Assign((Object)instancevariable13978, (Object)send108094);
// new
send108095 = (Object)new_AST_Send((Object)classreference11534, (Object)symbol30416, 0);
assign13643 = (Object)new_AST_Assign((Object)instancevariable13980, (Object)send108095);
smallint10790 = (Object)new_Type_SmallInt(0);
constant23554 = (Object)new_AST_Constant((Object)smallint10790);
assign13644 = (Object)new_AST_Assign((Object)instancevariable13979, (Object)constant23554);
method31338 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1729, assign13642, assign13643, assign13644, Self);
methodclosure31244 = (Object)new_Runtime_MethodClosure(method31338);
store_method((Type_Class)class5266, (Type_Symbol)symbol30515, (Runtime_MethodClosure)methodclosure31244);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant23555 = (Object)new_AST_Constant((Object)symbol30784);
string10831 = (Object)new_Type_String(L"PRIMARY");
constant23556 = (Object)new_AST_Constant((Object)string10831);
// named:
send108096 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30518, 1, (Object)constant23556);
block7409 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send108096);
// at:ifAbsentPut:
send108097 = (Object)new_AST_Send((Object)instancevariable13978, (Object)symbol30764, 2, (Object)constant23555, (Object)block7409);
method31339 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108097);
symbol30658 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
methodclosure31245 = (Object)new_Runtime_MethodClosure(method31339);
store_method((Type_Class)class5266, (Type_Symbol)symbol30658, (Runtime_MethodClosure)methodclosure31245);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send108098 = (Object)new_AST_Send((Object)Self, (Object)symbol30788, 0);
// binaryExpression
send108099 = (Object)new_AST_Send((Object)Self, (Object)symbol30809, 0);
// <=
send108100 = (Object)new_AST_Send((Object)send108098, (Object)symbol30712, 1, (Object)send108099);
// unaryObjectDescription
send108101 = (Object)new_AST_Send((Object)Self, (Object)symbol30807, 0);
// |
send108102 = (Object)new_AST_Send((Object)send108100, (Object)SMB__or, 1, (Object)send108101);
method31340 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108102);
symbol30628 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
methodclosure31246 = (Object)new_Runtime_MethodClosure(method31340);
store_method((Type_Class)class5266, (Type_Symbol)symbol30628, (Runtime_MethodClosure)methodclosure31246);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable18257 = (Object)new_AST_Variable_named(L"anObject");
array16572 = (Object)new_Type_Array_with(1, (Object)localvariable18257);
variable1228 = (Object)new_AST_Variable_named(L"return");
array16573 = (Object)new_Type_Array_with(1, (Object)variable1228);
// isString
send108103 = (Object)new_AST_Send((Object)localvariable18257, (Object)symbol30811, 0);
// escape:
send108104 = (Object)new_AST_Send((Object)variable1228, (Object)SMB_escape_, 1, (Object)localvariable18257);
block7410 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send108104);
// ifFalse:
send108105 = (Object)new_AST_Send((Object)send108103, (Object)SMB_ifFalse_, 1, (Object)block7410);
// named:
send108106 = (Object)new_AST_Send((Object)classreference11505, (Object)symbol30518, 1, (Object)localvariable18257);
block7411 = (Object)new_AST_Block_with((Type_Array)array16573, (Type_Array)empty_Type_Array, 1, 2, send108105, send108106);
// on:
send108107 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7411);
method31341 = (Object)new_AST_Method_with((Type_Array)array16572, (Type_Array)empty_Type_Array, 1, send108107);
methodclosure31247 = (Object)new_Runtime_MethodClosure(method31341);
store_method((Type_Class)class5266, (Type_Symbol)symbol30651, (Runtime_MethodClosure)methodclosure31247);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
// variableName
send108108 = (Object)new_AST_Send((Object)Self, (Object)symbol30826, 0);
// assignmentOp
send108109 = (Object)new_AST_Send((Object)Self, (Object)symbol30671, 0);
// &
send108110 = (Object)new_AST_Send((Object)send108108, (Object)SMB__and, 1, (Object)send108109);
// times
send108111 = (Object)new_AST_Send((Object)send108110, (Object)symbol30707, 0);
method31342 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108111);
symbol30668 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure31248 = (Object)new_Runtime_MethodClosure(method31342);
store_method((Type_Class)class5266, (Type_Symbol)symbol30668, (Runtime_MethodClosure)methodclosure31248);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string10832 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant23557 = (Object)new_AST_Constant((Object)string10832);
// unarySelector
send108112 = (Object)new_AST_Send((Object)Self, (Object)symbol30786, 0);
localvariable18258 = (Object)new_AST_Variable_named(L"selector");
array16574 = (Object)new_Type_Array_with(1, (Object)localvariable18258);
// new
send108113 = (Object)new_AST_Send((Object)classreference11517, (Object)symbol30416, 0);
// selector:
send108114 = (Object)new_AST_Send((Object)send108113, (Object)symbol30583, 1, (Object)localvariable18258);
block7412 = (Object)new_AST_Block_with((Type_Array)array16574, (Type_Array)empty_Type_Array, 1, 1, send108114);
// named:parsing:semantics:
send108115 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23557, (Object)send108112, (Object)block7412);
method31343 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108115);
symbol30621 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure31249 = (Object)new_Runtime_MethodClosure(method31343);
store_method((Type_Class)class5266, (Type_Symbol)symbol30621, (Runtime_MethodClosure)methodclosure31249);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string10833 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant23558 = (Object)new_AST_Constant((Object)string10833);
string10834 = (Object)new_Type_String(L":");
constant23559 = (Object)new_AST_Constant((Object)string10834);
// asPEG
send108116 = (Object)new_AST_Send((Object)constant23559, (Object)symbol30703, 0);
// omit:
send108117 = (Object)new_AST_Send((Object)send108116, (Object)symbol30696, 1, (Object)True_Const);
// identifier
send108118 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
// &
send108119 = (Object)new_AST_Send((Object)send108117, (Object)SMB__and, 1, (Object)send108118);
// plus
send108120 = (Object)new_AST_Send((Object)send108119, (Object)symbol30701, 0);
localvariable18259 = (Object)new_AST_Variable_named(L"result");
array16575 = (Object)new_Type_Array_with(1, (Object)localvariable18259);
localvariable18260 = (Object)new_AST_Variable_named(L"variable");
array16576 = (Object)new_Type_Array_with(1, (Object)localvariable18260);
// createVariable:
send108121 = (Object)new_AST_Send((Object)Self, (Object)symbol30642, 1, (Object)localvariable18260);
block7413 = (Object)new_AST_Block_with((Type_Array)array16576, (Type_Array)empty_Type_Array, 2, 1, send108121);
// collect:
send108122 = (Object)new_AST_Send((Object)localvariable18259, (Object)symbol30816, 1, (Object)block7413);
block7414 = (Object)new_AST_Block_with((Type_Array)array16575, (Type_Array)empty_Type_Array, 1, 1, send108122);
// named:parsing:semantics:
send108123 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23558, (Object)send108120, (Object)block7414);
method31344 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108123);
symbol30633 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure31250 = (Object)new_Runtime_MethodClosure(method31344);
store_method((Type_Class)class5266, (Type_Symbol)symbol30633, (Runtime_MethodClosure)methodclosure31250);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string10835 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant23560 = (Object)new_AST_Constant((Object)string10835);
symbol30832 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send108124 = (Object)new_AST_Send((Object)Self, (Object)symbol30832, 0);
symbol30833 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send108125 = (Object)new_AST_Send((Object)Self, (Object)symbol30833, 0);
// |
send108126 = (Object)new_AST_Send((Object)send108124, (Object)SMB__or, 1, (Object)send108125);
symbol30834 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send108127 = (Object)new_AST_Send((Object)Self, (Object)symbol30834, 0);
// <=
send108128 = (Object)new_AST_Send((Object)send108126, (Object)symbol30712, 1, (Object)send108127);
// named:parsing:
send108129 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30817, 2, (Object)constant23560, (Object)send108128);
method31345 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108129);
symbol30661 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure31251 = (Object)new_Runtime_MethodClosure(method31345);
store_method((Type_Class)class5266, (Type_Symbol)symbol30661, (Runtime_MethodClosure)methodclosure31251);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
// identifier
send108130 = (Object)new_AST_Send((Object)Self, (Object)symbol30815, 0);
method31346 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send108130);
symbol30678 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure31252 = (Object)new_Runtime_MethodClosure(method31346);
store_method((Type_Class)class5266, (Type_Symbol)symbol30678, (Runtime_MethodClosure)methodclosure31252);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable18261 = (Object)new_AST_Variable_named(L"variables");
localvariable18262 = (Object)new_AST_Variable_named(L"expression");
array16577 = (Object)new_Type_Array_with(2, (Object)localvariable18261, (Object)localvariable18262);
// preStorePrimary
send108131 = (Object)new_AST_Send((Object)Self, (Object)symbol30658, 0);
// preStoreMessageExpression
send108132 = (Object)new_AST_Send((Object)Self, (Object)symbol30654, 0);
// preStoreCascadedMessageExpression
send108133 = (Object)new_AST_Send((Object)Self, (Object)symbol30630, 0);
constant23561 = (Object)new_AST_Constant((Object)symbol30572);
string10836 = (Object)new_Type_String(L"EXPRESSION");
constant23562 = (Object)new_AST_Constant((Object)string10836);
symbol30835 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send108134 = (Object)new_AST_Send((Object)Self, (Object)symbol30835, 0);
// cascadedMessageExpression
send108135 = (Object)new_AST_Send((Object)Self, (Object)symbol30785, 0);
// messageExpression
send108136 = (Object)new_AST_Send((Object)Self, (Object)symbol30793, 0);
// |
send108137 = (Object)new_AST_Send((Object)send108135, (Object)SMB__or, 1, (Object)send108136);
// &
send108138 = (Object)new_AST_Send((Object)send108134, (Object)SMB__and, 1, (Object)send108137);
// primary
send108139 = (Object)new_AST_Send((Object)Self, (Object)symbol30784, 0);
// <=
send108140 = (Object)new_AST_Send((Object)send108138, (Object)symbol30712, 1, (Object)send108139);
localvariable18263 = (Object)new_AST_Variable_named(L"result");
array16578 = (Object)new_Type_Array_with(1, (Object)localvariable18263);
// first
send108141 = (Object)new_AST_Send((Object)localvariable18263, (Object)symbol30549, 0);
assign13645 = (Object)new_AST_Assign((Object)localvariable18261, (Object)send108141);
smallint10791 = (Object)new_Type_SmallInt(2);
constant23563 = (Object)new_AST_Constant((Object)smallint10791);
// at:
send108142 = (Object)new_AST_Send((Object)localvariable18263, (Object)SMB_at_, 1, (Object)constant23563);
assign13646 = (Object)new_AST_Assign((Object)localvariable18262, (Object)send108142);
symbol30836 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send108143 = (Object)new_AST_Send((Object)localvariable18261, (Object)symbol30836, 0);
localvariable18264 = (Object)new_AST_Variable_named(L"variable");
array16579 = (Object)new_Type_Array_with(1, (Object)localvariable18264);
localvariable18265 = (Object)new_AST_Variable_named(L"receiver");
array16580 = (Object)new_Type_Array_with(1, (Object)localvariable18265);
// expression:
send108144 = (Object)new_AST_Send((Object)localvariable18265, (Object)symbol30575, 1, (Object)localvariable18262);
// variable:
send108145 = (Object)new_AST_Send((Object)localvariable18265, (Object)symbol30573, 1, (Object)localvariable18264);
block7415 = (Object)new_AST_Block_with((Type_Array)array16580, (Type_Array)empty_Type_Array, 3, 2, send108144, send108145);
// new
send108146 = (Object)new_AST_Send((Object)classreference11515, (Object)symbol30416, 0);
// value:
send108147 = (Object)new_AST_Send((Object)block7415, (Object)SMB_value_, 1, (Object)send108146);
assign13647 = (Object)new_AST_Assign((Object)localvariable18262, (Object)send108147);
block7416 = (Object)new_AST_Block_with((Type_Array)array16579, (Type_Array)empty_Type_Array, 2, 1, assign13647);
// do:
send108148 = (Object)new_AST_Send((Object)send108143, (Object)symbol30552, 1, (Object)block7416);
block7417 = (Object)new_AST_Block_with((Type_Array)array16578, (Type_Array)empty_Type_Array, 1, 4, assign13645, assign13646, send108148, localvariable18262);
// named:parsing:semantics:
send108149 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23562, (Object)send108140, (Object)block7417);
// at:put:
send108150 = (Object)new_AST_Send((Object)instancevariable13978, (Object)SMB_at_put_, 2, (Object)constant23561, (Object)send108149);
// injectPrimary
send108151 = (Object)new_AST_Send((Object)Self, (Object)symbol30629, 0);
// injectMessageExpression
send108152 = (Object)new_AST_Send((Object)Self, (Object)symbol30672, 0);
// injectCascadedMessageExpression
send108153 = (Object)new_AST_Send((Object)Self, (Object)symbol30659, 0);
constant23564 = (Object)new_AST_Constant((Object)symbol30572);
// at:
send108154 = (Object)new_AST_Send((Object)instancevariable13978, (Object)SMB_at_, 1, (Object)constant23564);
method31347 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16577, 8, send108131, send108132, send108133, send108150, send108151, send108152, send108153, send108154);
symbol30615 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure31253 = (Object)new_Runtime_MethodClosure(method31347);
store_method((Type_Class)class5266, (Type_Symbol)symbol30615, (Runtime_MethodClosure)methodclosure31253);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new
// 						selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
// preStoreBinaryObjectDescription
send108155 = (Object)new_AST_Send((Object)Self, (Object)symbol30644, 0);
constant23565 = (Object)new_AST_Constant((Object)symbol30809);
string10837 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant23566 = (Object)new_AST_Constant((Object)string10837);
// unaryObjectDescription
send108156 = (Object)new_AST_Send((Object)Self, (Object)symbol30807, 0);
// binarySelector
send108157 = (Object)new_AST_Send((Object)Self, (Object)symbol30806, 0);
// &
send108158 = (Object)new_AST_Send((Object)send108156, (Object)SMB__and, 1, (Object)send108157);
// binaryObjectDescription
send108159 = (Object)new_AST_Send((Object)Self, (Object)symbol30788, 0);
// <&
send108160 = (Object)new_AST_Send((Object)send108158, (Object)symbol30725, 1, (Object)send108159);
localvariable18266 = (Object)new_AST_Variable_named(L"parts");
array16581 = (Object)new_Type_Array_with(1, (Object)localvariable18266);
smallint10792 = (Object)new_Type_SmallInt(3);
constant23567 = (Object)new_AST_Constant((Object)smallint10792);
// at:
send108161 = (Object)new_AST_Send((Object)localvariable18266, (Object)SMB_at_, 1, (Object)constant23567);
localvariable18267 = (Object)new_AST_Variable_named(L"receiver");
array16582 = (Object)new_Type_Array_with(1, (Object)localvariable18267);
// first
send108162 = (Object)new_AST_Send((Object)localvariable18266, (Object)symbol30549, 0);
// receiver:
send108163 = (Object)new_AST_Send((Object)localvariable18267, (Object)symbol30589, 1, (Object)send108162);
// new
send108164 = (Object)new_AST_Send((Object)classreference11524, (Object)symbol30416, 0);
smallint10793 = (Object)new_Type_SmallInt(2);
constant23568 = (Object)new_AST_Constant((Object)smallint10793);
// at:
send108165 = (Object)new_AST_Send((Object)localvariable18266, (Object)SMB_at_, 1, (Object)constant23568);
// createSymbol:
send108166 = (Object)new_AST_Send((Object)Self, (Object)symbol30651, 1, (Object)send108165);
// selector:
send108167 = (Object)new_AST_Send((Object)send108164, (Object)symbol30583, 1, (Object)send108166);
// selector:
send108168 = (Object)new_AST_Send((Object)localvariable18267, (Object)symbol30583, 1, (Object)send108167);
block7418 = (Object)new_AST_Block_with((Type_Array)array16582, (Type_Array)empty_Type_Array, 2, 2, send108163, send108168);
// new
send108169 = (Object)new_AST_Send((Object)classreference11512, (Object)symbol30416, 0);
// value:
send108170 = (Object)new_AST_Send((Object)block7418, (Object)SMB_value_, 1, (Object)send108169);
// argumentOfBinary:
send108171 = (Object)new_AST_Send((Object)send108161, (Object)symbol30597, 1, (Object)send108170);
block7419 = (Object)new_AST_Block_with((Type_Array)array16581, (Type_Array)empty_Type_Array, 1, 1, send108171);
// named:parsing:semantics:
send108172 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30772, 3, (Object)constant23566, (Object)send108160, (Object)block7419);
// at:ifAbsentPut:
send108173 = (Object)new_AST_Send((Object)instancevariable13978, (Object)symbol30764, 2, (Object)constant23565, (Object)send108172);
// injectBinaryObjectDescription
send108174 = (Object)new_AST_Send((Object)Self, (Object)symbol30628, 0);
// binaryExpression
send108175 = (Object)new_AST_Send((Object)Self, (Object)symbol30809, 0);
method31348 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send108155, send108173, send108174, send108175);
symbol30643 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure31254 = (Object)new_Runtime_MethodClosure(method31348);
store_method((Type_Class)class5266, (Type_Symbol)symbol30643, (Runtime_MethodClosure)methodclosure31254);

classreference11540 = (Object)new_Organization_ClassReference((Type_Class)class5266);
objectlayout7466 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7466)->values[0] = instancevariable13905;
((Type_Array)objectlayout7466)->values[1] = instancevariable13906;
((Type_Array)objectlayout7466)->values[2] = instancevariable13907;
((Type_Array)objectlayout7466)->values[3] = instancevariable13908;
((Type_Array)objectlayout7466)->values[4] = instancevariable13909;
instancevariable13981 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout7466)->values[5] = instancevariable13981;
symbol30439 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout7467 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable13982 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout7467)->values[0] = instancevariable13982;
class5267 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7467, objectlayout7466);
((Type_Class)class5267)->name = (Type_Symbol)symbol30439;
metaclass4468 = (Object)HEADER(class5267);
classreference11541 = (Object)new_Organization_ClassReference((Type_Class)class5267);
objectlayout7468 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7468)->values[0] = instancevariable13905;
((Type_Array)objectlayout7468)->values[1] = instancevariable13906;
((Type_Array)objectlayout7468)->values[2] = instancevariable13907;
((Type_Array)objectlayout7468)->values[3] = instancevariable13908;
((Type_Array)objectlayout7468)->values[4] = instancevariable13909;
((Type_Array)objectlayout7468)->values[5] = instancevariable13981;
symbol30437 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout7469 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7469)->values[0] = instancevariable13982;
instancevariable13983 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout7469)->values[1] = instancevariable13983;
class5268 = (Object)new_Class_withMeta((Object)class5267, objectlayout7469, objectlayout7468);
((Type_Class)class5268)->name = (Type_Symbol)symbol30437;
metaclass4469 = (Object)HEADER(class5268);

// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable18268 = (Object)new_AST_Variable_named(L"parser");
localvariable18269 = (Object)new_AST_Variable_named(L"string");
array16583 = (Object)new_Type_Array_with(2, (Object)localvariable18268, (Object)localvariable18269);
// assignmentExpressions
send108176 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30835, 0);
assign13648 = (Object)new_AST_Assign((Object)localvariable18268, (Object)send108176);
string10838 = (Object)new_Type_String(L"a :=  b:= c := d");
constant23569 = (Object)new_AST_Constant((Object)string10838);
// on:
send108177 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23569);
assign13649 = (Object)new_AST_Assign((Object)localvariable18269, (Object)send108177);
// match:
send108178 = (Object)new_AST_Send((Object)localvariable18268, (Object)symbol30695, 1, (Object)localvariable18269);
constant23570 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send108179 = (Object)new_AST_Send((Object)send108178, (Object)symbol30816, 1, (Object)constant23570);
// asArray
send108180 = (Object)new_AST_Send((Object)send108179, (Object)SMB_asArray, 0);
// should
send108181 = (Object)new_AST_Send((Object)send108180, (Object)symbol30738, 0);
localvariable18270 = (Object)new_AST_Variable_named(L"receiver");
array16584 = (Object)new_Type_Array_with(1, (Object)localvariable18270);
smallint10794 = (Object)new_Type_SmallInt(1);
constant23571 = (Object)new_AST_Constant((Object)smallint10794);
string10839 = (Object)new_Type_String(L"a");
constant23572 = (Object)new_AST_Constant((Object)string10839);
// at:put:
send108182 = (Object)new_AST_Send((Object)localvariable18270, (Object)SMB_at_put_, 2, (Object)constant23571, (Object)constant23572);
smallint10795 = (Object)new_Type_SmallInt(2);
constant23573 = (Object)new_AST_Constant((Object)smallint10795);
string10840 = (Object)new_Type_String(L"b");
constant23574 = (Object)new_AST_Constant((Object)string10840);
// at:put:
send108183 = (Object)new_AST_Send((Object)localvariable18270, (Object)SMB_at_put_, 2, (Object)constant23573, (Object)constant23574);
smallint10796 = (Object)new_Type_SmallInt(3);
constant23575 = (Object)new_AST_Constant((Object)smallint10796);
string10841 = (Object)new_Type_String(L"c");
constant23576 = (Object)new_AST_Constant((Object)string10841);
// at:put:
send108184 = (Object)new_AST_Send((Object)localvariable18270, (Object)SMB_at_put_, 2, (Object)constant23575, (Object)constant23576);
// yourself
send108185 = (Object)new_AST_Send((Object)localvariable18270, (Object)symbol30410, 0);
block7420 = (Object)new_AST_Block_with((Type_Array)array16584, (Type_Array)empty_Type_Array, 1, 4, send108182, send108183, send108184, send108185);
smallint10797 = (Object)new_Type_SmallInt(3);
constant23577 = (Object)new_AST_Constant((Object)smallint10797);
// new:
send108186 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23577);
// value:
send108187 = (Object)new_AST_Send((Object)block7420, (Object)SMB_value_, 1, (Object)send108186);
// =
send108188 = (Object)new_AST_Send((Object)send108181, (Object)SMB__equal, 1, (Object)send108187);
// position
send108189 = (Object)new_AST_Send((Object)localvariable18269, (Object)symbol30757, 0);
// should
send108190 = (Object)new_AST_Send((Object)send108189, (Object)symbol30738, 0);
smallint10798 = (Object)new_Type_SmallInt(15);
constant23578 = (Object)new_AST_Constant((Object)smallint10798);
// =
send108191 = (Object)new_AST_Send((Object)send108190, (Object)SMB__equal, 1, (Object)constant23578);
string10842 = (Object)new_Type_String(L"");
constant23579 = (Object)new_AST_Constant((Object)string10842);
// on:
send108192 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23579);
assign13650 = (Object)new_AST_Assign((Object)localvariable18269, (Object)send108192);
// match:
send108193 = (Object)new_AST_Send((Object)localvariable18268, (Object)symbol30695, 1, (Object)localvariable18269);
// should
send108194 = (Object)new_AST_Send((Object)send108193, (Object)symbol30738, 0);
// not
send108195 = (Object)new_AST_Send((Object)send108194, (Object)SMB_not, 0);
symbol30837 = (Object)new_Type_Symbol_cached(L"be");
// be
send108196 = (Object)new_AST_Send((Object)send108195, (Object)symbol30837, 0);
// isNil
send108197 = (Object)new_AST_Send((Object)send108196, (Object)SMB_isNil, 0);
method31349 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16583, 7, assign13648, assign13649, send108188, send108191, assign13650, send108197, Self);
symbol30499 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure31255 = (Object)new_Runtime_MethodClosure(method31349);
store_method((Type_Class)class5268, (Type_Symbol)symbol30499, (Runtime_MethodClosure)methodclosure31255);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable18271 = (Object)new_AST_Variable_named(L"parser");
localvariable18272 = (Object)new_AST_Variable_named(L"string");
localvariable18273 = (Object)new_AST_Variable_named(L"result");
array16585 = (Object)new_Type_Array_with(3, (Object)localvariable18271, (Object)localvariable18272, (Object)localvariable18273);
// stringConstant
send108198 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30781, 0);
assign13651 = (Object)new_AST_Assign((Object)localvariable18271, (Object)send108198);
string10843 = (Object)new_Type_String(L"\'abc\'");
constant23580 = (Object)new_AST_Constant((Object)string10843);
// on:
send108199 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23580);
assign13652 = (Object)new_AST_Assign((Object)localvariable18272, (Object)send108199);
// match:
send108200 = (Object)new_AST_Send((Object)localvariable18271, (Object)symbol30695, 1, (Object)localvariable18272);
assign13653 = (Object)new_AST_Assign((Object)localvariable18273, (Object)send108200);
// class
send108201 = (Object)new_AST_Send((Object)localvariable18273, (Object)SMB_class, 0);
// should
send108202 = (Object)new_AST_Send((Object)send108201, (Object)symbol30738, 0);
// =
send108203 = (Object)new_AST_Send((Object)send108202, (Object)SMB__equal, 1, (Object)classreference11509);
// string
send108204 = (Object)new_AST_Send((Object)localvariable18273, (Object)symbol30568, 0);
// should
send108205 = (Object)new_AST_Send((Object)send108204, (Object)symbol30738, 0);
string10844 = (Object)new_Type_String(L"abc");
constant23581 = (Object)new_AST_Constant((Object)string10844);
// =
send108206 = (Object)new_AST_Send((Object)send108205, (Object)SMB__equal, 1, (Object)constant23581);
// position
send108207 = (Object)new_AST_Send((Object)localvariable18272, (Object)symbol30757, 0);
// should
send108208 = (Object)new_AST_Send((Object)send108207, (Object)symbol30738, 0);
smallint10799 = (Object)new_Type_SmallInt(5);
constant23582 = (Object)new_AST_Constant((Object)smallint10799);
// =
send108209 = (Object)new_AST_Send((Object)send108208, (Object)SMB__equal, 1, (Object)constant23582);
string10845 = (Object)new_Type_String(L"\'abc\'\'");
constant23583 = (Object)new_AST_Constant((Object)string10845);
// on:
send108210 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23583);
assign13654 = (Object)new_AST_Assign((Object)localvariable18272, (Object)send108210);
// match:
send108211 = (Object)new_AST_Send((Object)localvariable18271, (Object)symbol30695, 1, (Object)localvariable18272);
assign13655 = (Object)new_AST_Assign((Object)localvariable18273, (Object)send108211);
// class
send108212 = (Object)new_AST_Send((Object)localvariable18273, (Object)SMB_class, 0);
// should
send108213 = (Object)new_AST_Send((Object)send108212, (Object)symbol30738, 0);
// =
send108214 = (Object)new_AST_Send((Object)send108213, (Object)SMB__equal, 1, (Object)classreference11509);
// string
send108215 = (Object)new_AST_Send((Object)localvariable18273, (Object)symbol30568, 0);
// should
send108216 = (Object)new_AST_Send((Object)send108215, (Object)symbol30738, 0);
string10846 = (Object)new_Type_String(L"abc");
constant23584 = (Object)new_AST_Constant((Object)string10846);
// =
send108217 = (Object)new_AST_Send((Object)send108216, (Object)SMB__equal, 1, (Object)constant23584);
// position
send108218 = (Object)new_AST_Send((Object)localvariable18272, (Object)symbol30757, 0);
// should
send108219 = (Object)new_AST_Send((Object)send108218, (Object)symbol30738, 0);
smallint10800 = (Object)new_Type_SmallInt(5);
constant23585 = (Object)new_AST_Constant((Object)smallint10800);
// =
send108220 = (Object)new_AST_Send((Object)send108219, (Object)SMB__equal, 1, (Object)constant23585);
string10847 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant23586 = (Object)new_AST_Constant((Object)string10847);
// on:
send108221 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23586);
assign13656 = (Object)new_AST_Assign((Object)localvariable18272, (Object)send108221);
// match:
send108222 = (Object)new_AST_Send((Object)localvariable18271, (Object)symbol30695, 1, (Object)localvariable18272);
assign13657 = (Object)new_AST_Assign((Object)localvariable18273, (Object)send108222);
// class
send108223 = (Object)new_AST_Send((Object)localvariable18273, (Object)SMB_class, 0);
// should
send108224 = (Object)new_AST_Send((Object)send108223, (Object)symbol30738, 0);
// =
send108225 = (Object)new_AST_Send((Object)send108224, (Object)SMB__equal, 1, (Object)classreference11509);
// string
send108226 = (Object)new_AST_Send((Object)localvariable18273, (Object)symbol30568, 0);
// should
send108227 = (Object)new_AST_Send((Object)send108226, (Object)symbol30738, 0);
string10848 = (Object)new_Type_String(L"abc\'d");
constant23587 = (Object)new_AST_Constant((Object)string10848);
// =
send108228 = (Object)new_AST_Send((Object)send108227, (Object)SMB__equal, 1, (Object)constant23587);
// position
send108229 = (Object)new_AST_Send((Object)localvariable18272, (Object)symbol30757, 0);
// should
send108230 = (Object)new_AST_Send((Object)send108229, (Object)symbol30738, 0);
smallint10801 = (Object)new_Type_SmallInt(8);
constant23588 = (Object)new_AST_Constant((Object)smallint10801);
// =
send108231 = (Object)new_AST_Send((Object)send108230, (Object)SMB__equal, 1, (Object)constant23588);
method31350 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16585, 17, assign13651, assign13652, assign13653, send108203, send108206, send108209, assign13654, assign13655, send108214, send108217, send108220, assign13656, assign13657, send108225, send108228, send108231, Self);
symbol30512 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure31256 = (Object)new_Runtime_MethodClosure(method31350);
store_method((Type_Class)class5268, (Type_Symbol)symbol30512, (Runtime_MethodClosure)methodclosure31256);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable18274 = (Object)new_AST_Variable_named(L"parser");
localvariable18275 = (Object)new_AST_Variable_named(L"string");
array16586 = (Object)new_Type_Array_with(2, (Object)localvariable18274, (Object)localvariable18275);
// character
send108232 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30787, 0);
assign13658 = (Object)new_AST_Assign((Object)localvariable18274, (Object)send108232);
string10849 = (Object)new_Type_String(L"--");
constant23589 = (Object)new_AST_Constant((Object)string10849);
// on:
send108233 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23589);
assign13659 = (Object)new_AST_Assign((Object)localvariable18275, (Object)send108233);
// match:
send108234 = (Object)new_AST_Send((Object)localvariable18274, (Object)symbol30695, 1, (Object)localvariable18275);
// should
send108235 = (Object)new_AST_Send((Object)send108234, (Object)symbol30738, 0);
string10850 = (Object)new_Type_String(L"-");
constant23590 = (Object)new_AST_Constant((Object)string10850);
// =
send108236 = (Object)new_AST_Send((Object)send108235, (Object)SMB__equal, 1, (Object)constant23590);
// position
send108237 = (Object)new_AST_Send((Object)localvariable18275, (Object)symbol30757, 0);
// should
send108238 = (Object)new_AST_Send((Object)send108237, (Object)symbol30738, 0);
smallint10802 = (Object)new_Type_SmallInt(1);
constant23591 = (Object)new_AST_Constant((Object)smallint10802);
// =
send108239 = (Object)new_AST_Send((Object)send108238, (Object)SMB__equal, 1, (Object)constant23591);
string10851 = (Object)new_Type_String(L"__");
constant23592 = (Object)new_AST_Constant((Object)string10851);
// on:
send108240 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23592);
assign13660 = (Object)new_AST_Assign((Object)localvariable18275, (Object)send108240);
// match:
send108241 = (Object)new_AST_Send((Object)localvariable18274, (Object)symbol30695, 1, (Object)localvariable18275);
// should
send108242 = (Object)new_AST_Send((Object)send108241, (Object)symbol30738, 0);
string10852 = (Object)new_Type_String(L"_");
constant23593 = (Object)new_AST_Constant((Object)string10852);
// =
send108243 = (Object)new_AST_Send((Object)send108242, (Object)SMB__equal, 1, (Object)constant23593);
// position
send108244 = (Object)new_AST_Send((Object)localvariable18275, (Object)symbol30757, 0);
// should
send108245 = (Object)new_AST_Send((Object)send108244, (Object)symbol30738, 0);
smallint10803 = (Object)new_Type_SmallInt(1);
constant23594 = (Object)new_AST_Constant((Object)smallint10803);
// =
send108246 = (Object)new_AST_Send((Object)send108245, (Object)SMB__equal, 1, (Object)constant23594);
string10853 = (Object)new_Type_String(L"4");
constant23595 = (Object)new_AST_Constant((Object)string10853);
// on:
send108247 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23595);
assign13661 = (Object)new_AST_Assign((Object)localvariable18275, (Object)send108247);
// match:
send108248 = (Object)new_AST_Send((Object)localvariable18274, (Object)symbol30695, 1, (Object)localvariable18275);
// should
send108249 = (Object)new_AST_Send((Object)send108248, (Object)symbol30738, 0);
string10854 = (Object)new_Type_String(L"4");
constant23596 = (Object)new_AST_Constant((Object)string10854);
// =
send108250 = (Object)new_AST_Send((Object)send108249, (Object)SMB__equal, 1, (Object)constant23596);
// position
send108251 = (Object)new_AST_Send((Object)localvariable18275, (Object)symbol30757, 0);
// should
send108252 = (Object)new_AST_Send((Object)send108251, (Object)symbol30738, 0);
smallint10804 = (Object)new_Type_SmallInt(1);
constant23597 = (Object)new_AST_Constant((Object)smallint10804);
// =
send108253 = (Object)new_AST_Send((Object)send108252, (Object)SMB__equal, 1, (Object)constant23597);
string10855 = (Object)new_Type_String(L"p");
constant23598 = (Object)new_AST_Constant((Object)string10855);
// on:
send108254 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23598);
assign13662 = (Object)new_AST_Assign((Object)localvariable18275, (Object)send108254);
// match:
send108255 = (Object)new_AST_Send((Object)localvariable18274, (Object)symbol30695, 1, (Object)localvariable18275);
// should
send108256 = (Object)new_AST_Send((Object)send108255, (Object)symbol30738, 0);
string10856 = (Object)new_Type_String(L"p");
constant23599 = (Object)new_AST_Constant((Object)string10856);
// =
send108257 = (Object)new_AST_Send((Object)send108256, (Object)SMB__equal, 1, (Object)constant23599);
// position
send108258 = (Object)new_AST_Send((Object)localvariable18275, (Object)symbol30757, 0);
// should
send108259 = (Object)new_AST_Send((Object)send108258, (Object)symbol30738, 0);
smallint10805 = (Object)new_Type_SmallInt(1);
constant23600 = (Object)new_AST_Constant((Object)smallint10805);
// =
send108260 = (Object)new_AST_Send((Object)send108259, (Object)SMB__equal, 1, (Object)constant23600);
string10857 = (Object)new_Type_String(L"&");
constant23601 = (Object)new_AST_Constant((Object)string10857);
// on:
send108261 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23601);
assign13663 = (Object)new_AST_Assign((Object)localvariable18275, (Object)send108261);
// match:
send108262 = (Object)new_AST_Send((Object)localvariable18274, (Object)symbol30695, 1, (Object)localvariable18275);
// should
send108263 = (Object)new_AST_Send((Object)send108262, (Object)symbol30738, 0);
string10858 = (Object)new_Type_String(L"&");
constant23602 = (Object)new_AST_Constant((Object)string10858);
// =
send108264 = (Object)new_AST_Send((Object)send108263, (Object)SMB__equal, 1, (Object)constant23602);
// position
send108265 = (Object)new_AST_Send((Object)localvariable18275, (Object)symbol30757, 0);
// should
send108266 = (Object)new_AST_Send((Object)send108265, (Object)symbol30738, 0);
smallint10806 = (Object)new_Type_SmallInt(1);
constant23603 = (Object)new_AST_Constant((Object)smallint10806);
// =
send108267 = (Object)new_AST_Send((Object)send108266, (Object)SMB__equal, 1, (Object)constant23603);
string10859 = (Object)new_Type_String(L"\'");
constant23604 = (Object)new_AST_Constant((Object)string10859);
// on:
send108268 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23604);
assign13664 = (Object)new_AST_Assign((Object)localvariable18275, (Object)send108268);
// match:
send108269 = (Object)new_AST_Send((Object)localvariable18274, (Object)symbol30695, 1, (Object)localvariable18275);
// should
send108270 = (Object)new_AST_Send((Object)send108269, (Object)symbol30738, 0);
// be
send108271 = (Object)new_AST_Send((Object)send108270, (Object)symbol30837, 0);
// isNil
send108272 = (Object)new_AST_Send((Object)send108271, (Object)SMB_isNil, 0);
// position
send108273 = (Object)new_AST_Send((Object)localvariable18275, (Object)symbol30757, 0);
// should
send108274 = (Object)new_AST_Send((Object)send108273, (Object)symbol30738, 0);
smallint10807 = (Object)new_Type_SmallInt(0);
constant23605 = (Object)new_AST_Constant((Object)smallint10807);
// =
send108275 = (Object)new_AST_Send((Object)send108274, (Object)SMB__equal, 1, (Object)constant23605);
method31351 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16586, 20, assign13658, assign13659, send108236, send108239, assign13660, send108243, send108246, assign13661, send108250, send108253, assign13662, send108257, send108260, assign13663, send108264, send108267, assign13664, send108272, send108275, Self);
symbol30464 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure31257 = (Object)new_Runtime_MethodClosure(method31351);
store_method((Type_Class)class5268, (Type_Symbol)symbol30464, (Runtime_MethodClosure)methodclosure31257);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable18276 = (Object)new_AST_Variable_named(L"parser");
localvariable18277 = (Object)new_AST_Variable_named(L"string");
localvariable18278 = (Object)new_AST_Variable_named(L"result");
array16587 = (Object)new_Type_Array_with(3, (Object)localvariable18276, (Object)localvariable18277, (Object)localvariable18278);
// expression
send108276 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30572, 0);
assign13665 = (Object)new_AST_Assign((Object)localvariable18276, (Object)send108276);
string10860 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant23606 = (Object)new_AST_Constant((Object)string10860);
// on:
send108277 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23606);
assign13666 = (Object)new_AST_Assign((Object)localvariable18277, (Object)send108277);
// match:
send108278 = (Object)new_AST_Send((Object)localvariable18276, (Object)symbol30695, 1, (Object)localvariable18277);
assign13667 = (Object)new_AST_Assign((Object)localvariable18278, (Object)send108278);
// class
send108279 = (Object)new_AST_Send((Object)localvariable18278, (Object)SMB_class, 0);
// should
send108280 = (Object)new_AST_Send((Object)send108279, (Object)symbol30738, 0);
// =
send108281 = (Object)new_AST_Send((Object)send108280, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send108282 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30574, 0);
// class
send108283 = (Object)new_AST_Send((Object)send108282, (Object)SMB_class, 0);
// should
send108284 = (Object)new_AST_Send((Object)send108283, (Object)symbol30738, 0);
// =
send108285 = (Object)new_AST_Send((Object)send108284, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send108286 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30574, 0);
// name
send108287 = (Object)new_AST_Send((Object)send108286, (Object)SMB_name, 0);
// should
send108288 = (Object)new_AST_Send((Object)send108287, (Object)symbol30738, 0);
string10861 = (Object)new_Type_String(L"a");
constant23607 = (Object)new_AST_Constant((Object)string10861);
// =
send108289 = (Object)new_AST_Send((Object)send108288, (Object)SMB__equal, 1, (Object)constant23607);
// expression
send108290 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30572, 0);
assign13668 = (Object)new_AST_Assign((Object)localvariable18278, (Object)send108290);
// class
send108291 = (Object)new_AST_Send((Object)localvariable18278, (Object)SMB_class, 0);
// should
send108292 = (Object)new_AST_Send((Object)send108291, (Object)symbol30738, 0);
// =
send108293 = (Object)new_AST_Send((Object)send108292, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send108294 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30574, 0);
// class
send108295 = (Object)new_AST_Send((Object)send108294, (Object)SMB_class, 0);
// should
send108296 = (Object)new_AST_Send((Object)send108295, (Object)symbol30738, 0);
// =
send108297 = (Object)new_AST_Send((Object)send108296, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send108298 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30574, 0);
// name
send108299 = (Object)new_AST_Send((Object)send108298, (Object)SMB_name, 0);
// should
send108300 = (Object)new_AST_Send((Object)send108299, (Object)symbol30738, 0);
string10862 = (Object)new_Type_String(L"b");
constant23608 = (Object)new_AST_Constant((Object)string10862);
// =
send108301 = (Object)new_AST_Send((Object)send108300, (Object)SMB__equal, 1, (Object)constant23608);
// expression
send108302 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30572, 0);
assign13669 = (Object)new_AST_Assign((Object)localvariable18278, (Object)send108302);
// class
send108303 = (Object)new_AST_Send((Object)localvariable18278, (Object)SMB_class, 0);
// should
send108304 = (Object)new_AST_Send((Object)send108303, (Object)symbol30738, 0);
// =
send108305 = (Object)new_AST_Send((Object)send108304, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send108306 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30574, 0);
// class
send108307 = (Object)new_AST_Send((Object)send108306, (Object)SMB_class, 0);
// should
send108308 = (Object)new_AST_Send((Object)send108307, (Object)symbol30738, 0);
// =
send108309 = (Object)new_AST_Send((Object)send108308, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send108310 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30574, 0);
// name
send108311 = (Object)new_AST_Send((Object)send108310, (Object)SMB_name, 0);
// should
send108312 = (Object)new_AST_Send((Object)send108311, (Object)symbol30738, 0);
string10863 = (Object)new_Type_String(L"c");
constant23609 = (Object)new_AST_Constant((Object)string10863);
// =
send108313 = (Object)new_AST_Send((Object)send108312, (Object)SMB__equal, 1, (Object)constant23609);
// expression
send108314 = (Object)new_AST_Send((Object)localvariable18278, (Object)symbol30572, 0);
// class
send108315 = (Object)new_AST_Send((Object)send108314, (Object)SMB_class, 0);
// should
send108316 = (Object)new_AST_Send((Object)send108315, (Object)symbol30738, 0);
// =
send108317 = (Object)new_AST_Send((Object)send108316, (Object)SMB__equal, 1, (Object)classreference11511);
method31352 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16587, 16, assign13665, assign13666, assign13667, send108281, send108285, send108289, assign13668, send108293, send108297, send108301, assign13669, send108305, send108309, send108313, send108317, Self);
symbol30456 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure31258 = (Object)new_Runtime_MethodClosure(method31352);
store_method((Type_Class)class5268, (Type_Symbol)symbol30456, (Runtime_MethodClosure)methodclosure31258);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable18279 = (Object)new_AST_Variable_named(L"parser");
localvariable18280 = (Object)new_AST_Variable_named(L"string");
localvariable18281 = (Object)new_AST_Variable_named(L"result");
localvariable18282 = (Object)new_AST_Variable_named(L"arg");
array16588 = (Object)new_Type_Array_with(4, (Object)localvariable18279, (Object)localvariable18280, (Object)localvariable18281, (Object)localvariable18282);
// keywordExpression
send108318 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30808, 0);
assign13670 = (Object)new_AST_Assign((Object)localvariable18279, (Object)send108318);
string10864 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23610 = (Object)new_AST_Constant((Object)string10864);
// on:
send108319 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23610);
assign13671 = (Object)new_AST_Assign((Object)localvariable18280, (Object)send108319);
// match:
send108320 = (Object)new_AST_Send((Object)localvariable18279, (Object)symbol30695, 1, (Object)localvariable18280);
assign13672 = (Object)new_AST_Assign((Object)localvariable18281, (Object)send108320);
// class
send108321 = (Object)new_AST_Send((Object)localvariable18281, (Object)SMB_class, 0);
// should
send108322 = (Object)new_AST_Send((Object)send108321, (Object)symbol30738, 0);
// =
send108323 = (Object)new_AST_Send((Object)send108322, (Object)SMB__equal, 1, (Object)classreference11511);
// keywords
send108324 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30585, 0);
// asArray
send108325 = (Object)new_AST_Send((Object)send108324, (Object)SMB_asArray, 0);
// should
send108326 = (Object)new_AST_Send((Object)send108325, (Object)symbol30738, 0);
localvariable18283 = (Object)new_AST_Variable_named(L"receiver");
array16589 = (Object)new_Type_Array_with(1, (Object)localvariable18283);
smallint10808 = (Object)new_Type_SmallInt(1);
constant23611 = (Object)new_AST_Constant((Object)smallint10808);
string10865 = (Object)new_Type_String(L"abc");
constant23612 = (Object)new_AST_Constant((Object)string10865);
// at:put:
send108327 = (Object)new_AST_Send((Object)localvariable18283, (Object)SMB_at_put_, 2, (Object)constant23611, (Object)constant23612);
smallint10809 = (Object)new_Type_SmallInt(2);
constant23613 = (Object)new_AST_Constant((Object)smallint10809);
string10866 = (Object)new_Type_String(L"def");
constant23614 = (Object)new_AST_Constant((Object)string10866);
// at:put:
send108328 = (Object)new_AST_Send((Object)localvariable18283, (Object)SMB_at_put_, 2, (Object)constant23613, (Object)constant23614);
smallint10810 = (Object)new_Type_SmallInt(3);
constant23615 = (Object)new_AST_Constant((Object)smallint10810);
string10867 = (Object)new_Type_String(L"ghi");
constant23616 = (Object)new_AST_Constant((Object)string10867);
// at:put:
send108329 = (Object)new_AST_Send((Object)localvariable18283, (Object)SMB_at_put_, 2, (Object)constant23615, (Object)constant23616);
// yourself
send108330 = (Object)new_AST_Send((Object)localvariable18283, (Object)symbol30410, 0);
block7421 = (Object)new_AST_Block_with((Type_Array)array16589, (Type_Array)empty_Type_Array, 1, 4, send108327, send108328, send108329, send108330);
smallint10811 = (Object)new_Type_SmallInt(3);
constant23617 = (Object)new_AST_Constant((Object)smallint10811);
// new:
send108331 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23617);
// value:
send108332 = (Object)new_AST_Send((Object)block7421, (Object)SMB_value_, 1, (Object)send108331);
// =
send108333 = (Object)new_AST_Send((Object)send108326, (Object)SMB__equal, 1, (Object)send108332);
// selector
send108334 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30580, 0);
// class
send108335 = (Object)new_AST_Send((Object)send108334, (Object)SMB_class, 0);
// should
send108336 = (Object)new_AST_Send((Object)send108335, (Object)symbol30738, 0);
// =
send108337 = (Object)new_AST_Send((Object)send108336, (Object)SMB__equal, 1, (Object)classreference11495);
// selector
send108338 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30580, 0);
// printString
send108339 = (Object)new_AST_Send((Object)send108338, (Object)symbol30698, 0);
// should
send108340 = (Object)new_AST_Send((Object)send108339, (Object)symbol30738, 0);
string10868 = (Object)new_Type_String(L"abc:def:ghi:");
constant23618 = (Object)new_AST_Constant((Object)string10868);
// =
send108341 = (Object)new_AST_Send((Object)send108340, (Object)SMB__equal, 1, (Object)constant23618);
// arguments
send108342 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30587, 0);
// first
send108343 = (Object)new_AST_Send((Object)send108342, (Object)symbol30549, 0);
assign13673 = (Object)new_AST_Assign((Object)localvariable18282, (Object)send108343);
// class
send108344 = (Object)new_AST_Send((Object)localvariable18282, (Object)SMB_class, 0);
// should
send108345 = (Object)new_AST_Send((Object)send108344, (Object)symbol30738, 0);
// =
send108346 = (Object)new_AST_Send((Object)send108345, (Object)SMB__equal, 1, (Object)classreference11499);
// arguments
send108347 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30587, 0);
smallint10812 = (Object)new_Type_SmallInt(2);
constant23619 = (Object)new_AST_Constant((Object)smallint10812);
// at:
send108348 = (Object)new_AST_Send((Object)send108347, (Object)SMB_at_, 1, (Object)constant23619);
assign13674 = (Object)new_AST_Assign((Object)localvariable18282, (Object)send108348);
// class
send108349 = (Object)new_AST_Send((Object)localvariable18282, (Object)SMB_class, 0);
// should
send108350 = (Object)new_AST_Send((Object)send108349, (Object)symbol30738, 0);
// =
send108351 = (Object)new_AST_Send((Object)send108350, (Object)SMB__equal, 1, (Object)classreference11512);
// arguments
send108352 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30587, 0);
smallint10813 = (Object)new_Type_SmallInt(3);
constant23620 = (Object)new_AST_Constant((Object)smallint10813);
// at:
send108353 = (Object)new_AST_Send((Object)send108352, (Object)SMB_at_, 1, (Object)constant23620);
assign13675 = (Object)new_AST_Assign((Object)localvariable18282, (Object)send108353);
// class
send108354 = (Object)new_AST_Send((Object)localvariable18282, (Object)SMB_class, 0);
// should
send108355 = (Object)new_AST_Send((Object)send108354, (Object)symbol30738, 0);
// =
send108356 = (Object)new_AST_Send((Object)send108355, (Object)SMB__equal, 1, (Object)classreference11517);
// receiver
send108357 = (Object)new_AST_Send((Object)localvariable18281, (Object)symbol30591, 0);
// class
send108358 = (Object)new_AST_Send((Object)send108357, (Object)SMB_class, 0);
// should
send108359 = (Object)new_AST_Send((Object)send108358, (Object)symbol30738, 0);
// =
send108360 = (Object)new_AST_Send((Object)send108359, (Object)SMB__equal, 1, (Object)classreference11512);
// position
send108361 = (Object)new_AST_Send((Object)localvariable18280, (Object)symbol30757, 0);
// should
send108362 = (Object)new_AST_Send((Object)send108361, (Object)symbol30738, 0);
smallint10814 = (Object)new_Type_SmallInt(29);
constant23621 = (Object)new_AST_Constant((Object)smallint10814);
// =
send108363 = (Object)new_AST_Send((Object)send108362, (Object)SMB__equal, 1, (Object)constant23621);
method31353 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16588, 16, assign13670, assign13671, assign13672, send108323, send108333, send108337, send108341, assign13673, send108346, assign13674, send108351, assign13675, send108356, send108360, send108363, Self);
symbol30484 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure31259 = (Object)new_Runtime_MethodClosure(method31353);
store_method((Type_Class)class5268, (Type_Symbol)symbol30484, (Runtime_MethodClosure)methodclosure31259);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable18284 = (Object)new_AST_Variable_named(L"parser");
localvariable18285 = (Object)new_AST_Variable_named(L"string");
array16590 = (Object)new_Type_Array_with(2, (Object)localvariable18284, (Object)localvariable18285);
// temporaries
send108364 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30604, 0);
assign13676 = (Object)new_AST_Assign((Object)localvariable18284, (Object)send108364);
string10869 = (Object)new_Type_String(L"|a b c|");
constant23622 = (Object)new_AST_Constant((Object)string10869);
// on:
send108365 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23622);
assign13677 = (Object)new_AST_Assign((Object)localvariable18285, (Object)send108365);
// match:
send108366 = (Object)new_AST_Send((Object)localvariable18284, (Object)symbol30695, 1, (Object)localvariable18285);
constant23623 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send108367 = (Object)new_AST_Send((Object)send108366, (Object)symbol30816, 1, (Object)constant23623);
// asArray
send108368 = (Object)new_AST_Send((Object)send108367, (Object)SMB_asArray, 0);
// should
send108369 = (Object)new_AST_Send((Object)send108368, (Object)symbol30738, 0);
localvariable18286 = (Object)new_AST_Variable_named(L"receiver");
array16591 = (Object)new_Type_Array_with(1, (Object)localvariable18286);
smallint10815 = (Object)new_Type_SmallInt(1);
constant23624 = (Object)new_AST_Constant((Object)smallint10815);
string10870 = (Object)new_Type_String(L"a");
constant23625 = (Object)new_AST_Constant((Object)string10870);
// at:put:
send108370 = (Object)new_AST_Send((Object)localvariable18286, (Object)SMB_at_put_, 2, (Object)constant23624, (Object)constant23625);
smallint10816 = (Object)new_Type_SmallInt(2);
constant23626 = (Object)new_AST_Constant((Object)smallint10816);
string10871 = (Object)new_Type_String(L"b");
constant23627 = (Object)new_AST_Constant((Object)string10871);
// at:put:
send108371 = (Object)new_AST_Send((Object)localvariable18286, (Object)SMB_at_put_, 2, (Object)constant23626, (Object)constant23627);
smallint10817 = (Object)new_Type_SmallInt(3);
constant23628 = (Object)new_AST_Constant((Object)smallint10817);
string10872 = (Object)new_Type_String(L"c");
constant23629 = (Object)new_AST_Constant((Object)string10872);
// at:put:
send108372 = (Object)new_AST_Send((Object)localvariable18286, (Object)SMB_at_put_, 2, (Object)constant23628, (Object)constant23629);
// yourself
send108373 = (Object)new_AST_Send((Object)localvariable18286, (Object)symbol30410, 0);
block7422 = (Object)new_AST_Block_with((Type_Array)array16591, (Type_Array)empty_Type_Array, 1, 4, send108370, send108371, send108372, send108373);
smallint10818 = (Object)new_Type_SmallInt(3);
constant23630 = (Object)new_AST_Constant((Object)smallint10818);
// new:
send108374 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23630);
// value:
send108375 = (Object)new_AST_Send((Object)block7422, (Object)SMB_value_, 1, (Object)send108374);
// =
send108376 = (Object)new_AST_Send((Object)send108369, (Object)SMB__equal, 1, (Object)send108375);
// position
send108377 = (Object)new_AST_Send((Object)localvariable18285, (Object)symbol30757, 0);
// should
send108378 = (Object)new_AST_Send((Object)send108377, (Object)symbol30738, 0);
smallint10819 = (Object)new_Type_SmallInt(7);
constant23631 = (Object)new_AST_Constant((Object)smallint10819);
// =
send108379 = (Object)new_AST_Send((Object)send108378, (Object)SMB__equal, 1, (Object)constant23631);
string10873 = (Object)new_Type_String(L"|  a b c  |");
constant23632 = (Object)new_AST_Constant((Object)string10873);
// on:
send108380 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23632);
assign13678 = (Object)new_AST_Assign((Object)localvariable18285, (Object)send108380);
// match:
send108381 = (Object)new_AST_Send((Object)localvariable18284, (Object)symbol30695, 1, (Object)localvariable18285);
constant23633 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send108382 = (Object)new_AST_Send((Object)send108381, (Object)symbol30816, 1, (Object)constant23633);
// asArray
send108383 = (Object)new_AST_Send((Object)send108382, (Object)SMB_asArray, 0);
// should
send108384 = (Object)new_AST_Send((Object)send108383, (Object)symbol30738, 0);
localvariable18287 = (Object)new_AST_Variable_named(L"receiver");
array16592 = (Object)new_Type_Array_with(1, (Object)localvariable18287);
smallint10820 = (Object)new_Type_SmallInt(1);
constant23634 = (Object)new_AST_Constant((Object)smallint10820);
string10874 = (Object)new_Type_String(L"a");
constant23635 = (Object)new_AST_Constant((Object)string10874);
// at:put:
send108385 = (Object)new_AST_Send((Object)localvariable18287, (Object)SMB_at_put_, 2, (Object)constant23634, (Object)constant23635);
smallint10821 = (Object)new_Type_SmallInt(2);
constant23636 = (Object)new_AST_Constant((Object)smallint10821);
string10875 = (Object)new_Type_String(L"b");
constant23637 = (Object)new_AST_Constant((Object)string10875);
// at:put:
send108386 = (Object)new_AST_Send((Object)localvariable18287, (Object)SMB_at_put_, 2, (Object)constant23636, (Object)constant23637);
smallint10822 = (Object)new_Type_SmallInt(3);
constant23638 = (Object)new_AST_Constant((Object)smallint10822);
string10876 = (Object)new_Type_String(L"c");
constant23639 = (Object)new_AST_Constant((Object)string10876);
// at:put:
send108387 = (Object)new_AST_Send((Object)localvariable18287, (Object)SMB_at_put_, 2, (Object)constant23638, (Object)constant23639);
// yourself
send108388 = (Object)new_AST_Send((Object)localvariable18287, (Object)symbol30410, 0);
block7423 = (Object)new_AST_Block_with((Type_Array)array16592, (Type_Array)empty_Type_Array, 1, 4, send108385, send108386, send108387, send108388);
smallint10823 = (Object)new_Type_SmallInt(3);
constant23640 = (Object)new_AST_Constant((Object)smallint10823);
// new:
send108389 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23640);
// value:
send108390 = (Object)new_AST_Send((Object)block7423, (Object)SMB_value_, 1, (Object)send108389);
// =
send108391 = (Object)new_AST_Send((Object)send108384, (Object)SMB__equal, 1, (Object)send108390);
// position
send108392 = (Object)new_AST_Send((Object)localvariable18285, (Object)symbol30757, 0);
// should
send108393 = (Object)new_AST_Send((Object)send108392, (Object)symbol30738, 0);
smallint10824 = (Object)new_Type_SmallInt(11);
constant23641 = (Object)new_AST_Constant((Object)smallint10824);
// =
send108394 = (Object)new_AST_Send((Object)send108393, (Object)SMB__equal, 1, (Object)constant23641);
method31354 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16590, 8, assign13676, assign13677, send108376, send108379, assign13678, send108391, send108394, Self);
symbol30476 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure31260 = (Object)new_Runtime_MethodClosure(method31354);
store_method((Type_Class)class5268, (Type_Symbol)symbol30476, (Runtime_MethodClosure)methodclosure31260);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable18288 = (Object)new_AST_Variable_named(L"parser");
localvariable18289 = (Object)new_AST_Variable_named(L"string");
localvariable18290 = (Object)new_AST_Variable_named(L"result");
array16593 = (Object)new_Type_Array_with(3, (Object)localvariable18288, (Object)localvariable18289, (Object)localvariable18290);
// messageExpression
send108395 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30793, 0);
assign13679 = (Object)new_AST_Assign((Object)localvariable18288, (Object)send108395);
string10877 = (Object)new_Type_String(L"super+4");
constant23642 = (Object)new_AST_Constant((Object)string10877);
// on:
send108396 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23642);
assign13680 = (Object)new_AST_Assign((Object)localvariable18289, (Object)send108396);
// match:
send108397 = (Object)new_AST_Send((Object)localvariable18288, (Object)symbol30695, 1, (Object)localvariable18289);
assign13681 = (Object)new_AST_Assign((Object)localvariable18290, (Object)send108397);
// class
send108398 = (Object)new_AST_Send((Object)localvariable18290, (Object)SMB_class, 0);
// should
send108399 = (Object)new_AST_Send((Object)send108398, (Object)symbol30738, 0);
// =
send108400 = (Object)new_AST_Send((Object)send108399, (Object)SMB__equal, 1, (Object)classreference11512);
// receiver
send108401 = (Object)new_AST_Send((Object)localvariable18290, (Object)symbol30591, 0);
// class
send108402 = (Object)new_AST_Send((Object)send108401, (Object)SMB_class, 0);
// should
send108403 = (Object)new_AST_Send((Object)send108402, (Object)symbol30738, 0);
// =
send108404 = (Object)new_AST_Send((Object)send108403, (Object)SMB__equal, 1, (Object)classreference11496);
string10878 = (Object)new_Type_String(L"self a: 4 b: 3");
constant23643 = (Object)new_AST_Constant((Object)string10878);
// on:
send108405 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23643);
assign13682 = (Object)new_AST_Assign((Object)localvariable18289, (Object)send108405);
// match:
send108406 = (Object)new_AST_Send((Object)localvariable18288, (Object)symbol30695, 1, (Object)localvariable18289);
assign13683 = (Object)new_AST_Assign((Object)localvariable18290, (Object)send108406);
// class
send108407 = (Object)new_AST_Send((Object)localvariable18290, (Object)SMB_class, 0);
// should
send108408 = (Object)new_AST_Send((Object)send108407, (Object)symbol30738, 0);
// =
send108409 = (Object)new_AST_Send((Object)send108408, (Object)SMB__equal, 1, (Object)classreference11511);
// receiver
send108410 = (Object)new_AST_Send((Object)localvariable18290, (Object)symbol30591, 0);
// class
send108411 = (Object)new_AST_Send((Object)send108410, (Object)SMB_class, 0);
// should
send108412 = (Object)new_AST_Send((Object)send108411, (Object)symbol30738, 0);
// =
send108413 = (Object)new_AST_Send((Object)send108412, (Object)SMB__equal, 1, (Object)classreference11516);
string10879 = (Object)new_Type_String(L"2 d");
constant23644 = (Object)new_AST_Constant((Object)string10879);
// on:
send108414 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23644);
assign13684 = (Object)new_AST_Assign((Object)localvariable18289, (Object)send108414);
// match:
send108415 = (Object)new_AST_Send((Object)localvariable18288, (Object)symbol30695, 1, (Object)localvariable18289);
assign13685 = (Object)new_AST_Assign((Object)localvariable18290, (Object)send108415);
// class
send108416 = (Object)new_AST_Send((Object)localvariable18290, (Object)SMB_class, 0);
// should
send108417 = (Object)new_AST_Send((Object)send108416, (Object)symbol30738, 0);
// =
send108418 = (Object)new_AST_Send((Object)send108417, (Object)SMB__equal, 1, (Object)classreference11517);
// receiver
send108419 = (Object)new_AST_Send((Object)localvariable18290, (Object)symbol30591, 0);
// class
send108420 = (Object)new_AST_Send((Object)send108419, (Object)SMB_class, 0);
// should
send108421 = (Object)new_AST_Send((Object)send108420, (Object)symbol30738, 0);
// =
send108422 = (Object)new_AST_Send((Object)send108421, (Object)SMB__equal, 1, (Object)classreference11499);
// receiver
send108423 = (Object)new_AST_Send((Object)localvariable18290, (Object)symbol30591, 0);
// asInteger
send108424 = (Object)new_AST_Send((Object)send108423, (Object)symbol30558, 0);
// should
send108425 = (Object)new_AST_Send((Object)send108424, (Object)symbol30738, 0);
smallint10825 = (Object)new_Type_SmallInt(2);
constant23645 = (Object)new_AST_Constant((Object)smallint10825);
// =
send108426 = (Object)new_AST_Send((Object)send108425, (Object)SMB__equal, 1, (Object)constant23645);
method31355 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16593, 15, assign13679, assign13680, assign13681, send108400, send108404, assign13682, assign13683, send108409, send108413, assign13684, assign13685, send108418, send108422, send108426, Self);
symbol30509 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure31261 = (Object)new_Runtime_MethodClosure(method31355);
store_method((Type_Class)class5268, (Type_Symbol)symbol30509, (Runtime_MethodClosure)methodclosure31261);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable18291 = (Object)new_AST_Variable_named(L"parser");
localvariable18292 = (Object)new_AST_Variable_named(L"string");
localvariable18293 = (Object)new_AST_Variable_named(L"result");
array16594 = (Object)new_Type_Array_with(3, (Object)localvariable18291, (Object)localvariable18292, (Object)localvariable18293);
symbol30838 = (Object)new_Type_Symbol_cached(L"method");
// method
send108427 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30838, 0);
assign13686 = (Object)new_AST_Assign((Object)localvariable18291, (Object)send108427);
string10880 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant23646 = (Object)new_AST_Constant((Object)string10880);
assign13687 = (Object)new_AST_Assign((Object)localvariable18292, (Object)constant23646);
// parse:
send108428 = (Object)new_AST_Send((Object)localvariable18291, (Object)symbol30709, 1, (Object)localvariable18292);
assign13688 = (Object)new_AST_Assign((Object)localvariable18293, (Object)send108428);
// hasReturnExpression
send108429 = (Object)new_AST_Send((Object)localvariable18293, (Object)symbol30588, 0);
// should
send108430 = (Object)new_AST_Send((Object)send108429, (Object)symbol30738, 0);
// be
send108431 = (Object)new_AST_Send((Object)send108430, (Object)symbol30837, 0);
symbol30839 = (Object)new_Type_Symbol_cached(L"true");
// true
send108432 = (Object)new_AST_Send((Object)send108431, (Object)symbol30839, 0);
// class
send108433 = (Object)new_AST_Send((Object)localvariable18293, (Object)SMB_class, 0);
// should
send108434 = (Object)new_AST_Send((Object)send108433, (Object)symbol30738, 0);
// =
send108435 = (Object)new_AST_Send((Object)send108434, (Object)SMB__equal, 1, (Object)classreference11501);
// message
send108436 = (Object)new_AST_Send((Object)localvariable18293, (Object)symbol30603, 0);
// class
send108437 = (Object)new_AST_Send((Object)send108436, (Object)SMB_class, 0);
// should
send108438 = (Object)new_AST_Send((Object)send108437, (Object)symbol30738, 0);
// =
send108439 = (Object)new_AST_Send((Object)send108438, (Object)SMB__equal, 1, (Object)classreference11525);
// temporaries
send108440 = (Object)new_AST_Send((Object)localvariable18293, (Object)symbol30604, 0);
// size
send108441 = (Object)new_AST_Send((Object)send108440, (Object)SMB_size, 0);
// should
send108442 = (Object)new_AST_Send((Object)send108441, (Object)symbol30738, 0);
smallint10826 = (Object)new_Type_SmallInt(3);
constant23647 = (Object)new_AST_Constant((Object)smallint10826);
// =
send108443 = (Object)new_AST_Send((Object)send108442, (Object)SMB__equal, 1, (Object)constant23647);
// annotations
send108444 = (Object)new_AST_Send((Object)localvariable18293, (Object)symbol30601, 0);
// size
send108445 = (Object)new_AST_Send((Object)send108444, (Object)SMB_size, 0);
// should
send108446 = (Object)new_AST_Send((Object)send108445, (Object)symbol30738, 0);
smallint10827 = (Object)new_Type_SmallInt(3);
constant23648 = (Object)new_AST_Constant((Object)smallint10827);
// =
send108447 = (Object)new_AST_Send((Object)send108446, (Object)SMB__equal, 1, (Object)constant23648);
// statements
send108448 = (Object)new_AST_Send((Object)localvariable18293, (Object)symbol30599, 0);
// size
send108449 = (Object)new_AST_Send((Object)send108448, (Object)SMB_size, 0);
// should
send108450 = (Object)new_AST_Send((Object)send108449, (Object)symbol30738, 0);
smallint10828 = (Object)new_Type_SmallInt(2);
constant23649 = (Object)new_AST_Constant((Object)smallint10828);
// =
send108451 = (Object)new_AST_Send((Object)send108450, (Object)SMB__equal, 1, (Object)constant23649);
method31356 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16594, 10, assign13686, assign13687, assign13688, send108432, send108435, send108439, send108443, send108447, send108451, Self);
symbol30502 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure31262 = (Object)new_Runtime_MethodClosure(method31356);
store_method((Type_Class)class5268, (Type_Symbol)symbol30502, (Runtime_MethodClosure)methodclosure31262);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable18294 = (Object)new_AST_Variable_named(L"parser");
localvariable18295 = (Object)new_AST_Variable_named(L"string");
localvariable18296 = (Object)new_AST_Variable_named(L"result");
array16595 = (Object)new_Type_Array_with(3, (Object)localvariable18294, (Object)localvariable18295, (Object)localvariable18296);
// method
send108452 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30838, 0);
assign13689 = (Object)new_AST_Assign((Object)localvariable18294, (Object)send108452);
string10881 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant23650 = (Object)new_AST_Constant((Object)string10881);
assign13690 = (Object)new_AST_Assign((Object)localvariable18295, (Object)constant23650);
// parse:
send108453 = (Object)new_AST_Send((Object)localvariable18294, (Object)symbol30709, 1, (Object)localvariable18295);
assign13691 = (Object)new_AST_Assign((Object)localvariable18296, (Object)send108453);
// hasReturnExpression
send108454 = (Object)new_AST_Send((Object)localvariable18296, (Object)symbol30588, 0);
// should
send108455 = (Object)new_AST_Send((Object)send108454, (Object)symbol30738, 0);
// be
send108456 = (Object)new_AST_Send((Object)send108455, (Object)symbol30837, 0);
// true
send108457 = (Object)new_AST_Send((Object)send108456, (Object)symbol30839, 0);
// class
send108458 = (Object)new_AST_Send((Object)localvariable18296, (Object)SMB_class, 0);
// should
send108459 = (Object)new_AST_Send((Object)send108458, (Object)symbol30738, 0);
// =
send108460 = (Object)new_AST_Send((Object)send108459, (Object)SMB__equal, 1, (Object)classreference11501);
// message
send108461 = (Object)new_AST_Send((Object)localvariable18296, (Object)symbol30603, 0);
// asString
send108462 = (Object)new_AST_Send((Object)send108461, (Object)SMB_asString, 0);
// should
send108463 = (Object)new_AST_Send((Object)send108462, (Object)symbol30738, 0);
string10882 = (Object)new_Type_String(L"withA:withB:withC:");
constant23651 = (Object)new_AST_Constant((Object)string10882);
// =
send108464 = (Object)new_AST_Send((Object)send108463, (Object)SMB__equal, 1, (Object)constant23651);
method31357 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16595, 7, assign13689, assign13690, assign13691, send108457, send108460, send108464, Self);
symbol30466 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure31263 = (Object)new_Runtime_MethodClosure(method31357);
store_method((Type_Class)class5268, (Type_Symbol)symbol30466, (Runtime_MethodClosure)methodclosure31263);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable18297 = (Object)new_AST_Variable_named(L"parser");
localvariable18298 = (Object)new_AST_Variable_named(L"string");
localvariable18299 = (Object)new_AST_Variable_named(L"result");
array16596 = (Object)new_Type_Array_with(3, (Object)localvariable18297, (Object)localvariable18298, (Object)localvariable18299);
// binaryMessageDefinition
send108465 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30833, 0);
assign13692 = (Object)new_AST_Assign((Object)localvariable18297, (Object)send108465);
string10883 = (Object)new_Type_String(L"+= a");
constant23652 = (Object)new_AST_Constant((Object)string10883);
// on:
send108466 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23652);
assign13693 = (Object)new_AST_Assign((Object)localvariable18298, (Object)send108466);
// match:
send108467 = (Object)new_AST_Send((Object)localvariable18297, (Object)symbol30695, 1, (Object)localvariable18298);
assign13694 = (Object)new_AST_Assign((Object)localvariable18299, (Object)send108467);
// class
send108468 = (Object)new_AST_Send((Object)localvariable18299, (Object)SMB_class, 0);
// should
send108469 = (Object)new_AST_Send((Object)send108468, (Object)symbol30738, 0);
// =
send108470 = (Object)new_AST_Send((Object)send108469, (Object)SMB__equal, 1, (Object)classreference11502);
// selector
send108471 = (Object)new_AST_Send((Object)localvariable18299, (Object)symbol30580, 0);
// printString
send108472 = (Object)new_AST_Send((Object)send108471, (Object)symbol30698, 0);
// should
send108473 = (Object)new_AST_Send((Object)send108472, (Object)symbol30738, 0);
string10884 = (Object)new_Type_String(L"+=");
constant23653 = (Object)new_AST_Constant((Object)string10884);
// =
send108474 = (Object)new_AST_Send((Object)send108473, (Object)SMB__equal, 1, (Object)constant23653);
// parameter
send108475 = (Object)new_AST_Send((Object)localvariable18299, (Object)symbol30594, 0);
// class
send108476 = (Object)new_AST_Send((Object)send108475, (Object)SMB_class, 0);
// should
send108477 = (Object)new_AST_Send((Object)send108476, (Object)symbol30738, 0);
// =
send108478 = (Object)new_AST_Send((Object)send108477, (Object)SMB__equal, 1, (Object)classreference11507);
// parameter
send108479 = (Object)new_AST_Send((Object)localvariable18299, (Object)symbol30594, 0);
// name
send108480 = (Object)new_AST_Send((Object)send108479, (Object)SMB_name, 0);
// asString
send108481 = (Object)new_AST_Send((Object)send108480, (Object)SMB_asString, 0);
// should
send108482 = (Object)new_AST_Send((Object)send108481, (Object)symbol30738, 0);
string10885 = (Object)new_Type_String(L"a");
constant23654 = (Object)new_AST_Constant((Object)string10885);
// =
send108483 = (Object)new_AST_Send((Object)send108482, (Object)SMB__equal, 1, (Object)constant23654);
// position
send108484 = (Object)new_AST_Send((Object)localvariable18298, (Object)symbol30757, 0);
// should
send108485 = (Object)new_AST_Send((Object)send108484, (Object)symbol30738, 0);
smallint10829 = (Object)new_Type_SmallInt(4);
constant23655 = (Object)new_AST_Constant((Object)smallint10829);
// =
send108486 = (Object)new_AST_Send((Object)send108485, (Object)SMB__equal, 1, (Object)constant23655);
string10886 = (Object)new_Type_String(L"|= a");
constant23656 = (Object)new_AST_Constant((Object)string10886);
// on:
send108487 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23656);
assign13695 = (Object)new_AST_Assign((Object)localvariable18298, (Object)send108487);
// match:
send108488 = (Object)new_AST_Send((Object)localvariable18297, (Object)symbol30695, 1, (Object)localvariable18298);
// should
send108489 = (Object)new_AST_Send((Object)send108488, (Object)symbol30738, 0);
// be
send108490 = (Object)new_AST_Send((Object)send108489, (Object)symbol30837, 0);
// isNil
send108491 = (Object)new_AST_Send((Object)send108490, (Object)SMB_isNil, 0);
// position
send108492 = (Object)new_AST_Send((Object)localvariable18298, (Object)symbol30757, 0);
// should
send108493 = (Object)new_AST_Send((Object)send108492, (Object)symbol30738, 0);
smallint10830 = (Object)new_Type_SmallInt(0);
constant23657 = (Object)new_AST_Constant((Object)smallint10830);
// =
send108494 = (Object)new_AST_Send((Object)send108493, (Object)SMB__equal, 1, (Object)constant23657);
string10887 = (Object)new_Type_String(L"-= abc d");
constant23658 = (Object)new_AST_Constant((Object)string10887);
// on:
send108495 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23658);
assign13696 = (Object)new_AST_Assign((Object)localvariable18298, (Object)send108495);
// match:
send108496 = (Object)new_AST_Send((Object)localvariable18297, (Object)symbol30695, 1, (Object)localvariable18298);
assign13697 = (Object)new_AST_Assign((Object)localvariable18299, (Object)send108496);
// class
send108497 = (Object)new_AST_Send((Object)localvariable18299, (Object)SMB_class, 0);
// should
send108498 = (Object)new_AST_Send((Object)send108497, (Object)symbol30738, 0);
// =
send108499 = (Object)new_AST_Send((Object)send108498, (Object)SMB__equal, 1, (Object)classreference11502);
// selector
send108500 = (Object)new_AST_Send((Object)localvariable18299, (Object)symbol30580, 0);
// printString
send108501 = (Object)new_AST_Send((Object)send108500, (Object)symbol30698, 0);
// should
send108502 = (Object)new_AST_Send((Object)send108501, (Object)symbol30738, 0);
string10888 = (Object)new_Type_String(L"-=");
constant23659 = (Object)new_AST_Constant((Object)string10888);
// =
send108503 = (Object)new_AST_Send((Object)send108502, (Object)SMB__equal, 1, (Object)constant23659);
// parameter
send108504 = (Object)new_AST_Send((Object)localvariable18299, (Object)symbol30594, 0);
// class
send108505 = (Object)new_AST_Send((Object)send108504, (Object)SMB_class, 0);
// should
send108506 = (Object)new_AST_Send((Object)send108505, (Object)symbol30738, 0);
// =
send108507 = (Object)new_AST_Send((Object)send108506, (Object)SMB__equal, 1, (Object)classreference11507);
// parameter
send108508 = (Object)new_AST_Send((Object)localvariable18299, (Object)symbol30594, 0);
// name
send108509 = (Object)new_AST_Send((Object)send108508, (Object)SMB_name, 0);
// asString
send108510 = (Object)new_AST_Send((Object)send108509, (Object)SMB_asString, 0);
// should
send108511 = (Object)new_AST_Send((Object)send108510, (Object)symbol30738, 0);
string10889 = (Object)new_Type_String(L"abc");
constant23660 = (Object)new_AST_Constant((Object)string10889);
// =
send108512 = (Object)new_AST_Send((Object)send108511, (Object)SMB__equal, 1, (Object)constant23660);
// position
send108513 = (Object)new_AST_Send((Object)localvariable18298, (Object)symbol30757, 0);
// should
send108514 = (Object)new_AST_Send((Object)send108513, (Object)symbol30738, 0);
smallint10831 = (Object)new_Type_SmallInt(6);
constant23661 = (Object)new_AST_Constant((Object)smallint10831);
// =
send108515 = (Object)new_AST_Send((Object)send108514, (Object)SMB__equal, 1, (Object)constant23661);
method31358 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16596, 19, assign13692, assign13693, assign13694, send108470, send108474, send108478, send108483, send108486, assign13695, send108491, send108494, assign13696, assign13697, send108499, send108503, send108507, send108512, send108515, Self);
symbol30458 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure31264 = (Object)new_Runtime_MethodClosure(method31358);
store_method((Type_Class)class5268, (Type_Symbol)symbol30458, (Runtime_MethodClosure)methodclosure31264);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable18300 = (Object)new_AST_Variable_named(L"parser");
localvariable18301 = (Object)new_AST_Variable_named(L"string");
localvariable18302 = (Object)new_AST_Variable_named(L"result");
array16597 = (Object)new_Type_Array_with(3, (Object)localvariable18300, (Object)localvariable18301, (Object)localvariable18302);
// primary
send108516 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30784, 0);
assign13698 = (Object)new_AST_Assign((Object)localvariable18300, (Object)send108516);
string10890 = (Object)new_Type_String(L"abc ");
constant23662 = (Object)new_AST_Constant((Object)string10890);
// on:
send108517 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23662);
assign13699 = (Object)new_AST_Assign((Object)localvariable18301, (Object)send108517);
// match:
send108518 = (Object)new_AST_Send((Object)localvariable18300, (Object)symbol30695, 1, (Object)localvariable18301);
assign13700 = (Object)new_AST_Assign((Object)localvariable18302, (Object)send108518);
// class
send108519 = (Object)new_AST_Send((Object)localvariable18302, (Object)SMB_class, 0);
// should
send108520 = (Object)new_AST_Send((Object)send108519, (Object)symbol30738, 0);
// =
send108521 = (Object)new_AST_Send((Object)send108520, (Object)SMB__equal, 1, (Object)classreference11507);
// name
send108522 = (Object)new_AST_Send((Object)localvariable18302, (Object)SMB_name, 0);
// should
send108523 = (Object)new_AST_Send((Object)send108522, (Object)symbol30738, 0);
string10891 = (Object)new_Type_String(L"abc");
constant23663 = (Object)new_AST_Constant((Object)string10891);
// =
send108524 = (Object)new_AST_Send((Object)send108523, (Object)SMB__equal, 1, (Object)constant23663);
// position
send108525 = (Object)new_AST_Send((Object)localvariable18301, (Object)symbol30757, 0);
// should
send108526 = (Object)new_AST_Send((Object)send108525, (Object)symbol30738, 0);
smallint10832 = (Object)new_Type_SmallInt(3);
constant23664 = (Object)new_AST_Constant((Object)smallint10832);
// =
send108527 = (Object)new_AST_Send((Object)send108526, (Object)SMB__equal, 1, (Object)constant23664);
string10892 = (Object)new_Type_String(L"3");
constant23665 = (Object)new_AST_Constant((Object)string10892);
// on:
send108528 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23665);
assign13701 = (Object)new_AST_Assign((Object)localvariable18301, (Object)send108528);
// match:
send108529 = (Object)new_AST_Send((Object)localvariable18300, (Object)symbol30695, 1, (Object)localvariable18301);
assign13702 = (Object)new_AST_Assign((Object)localvariable18302, (Object)send108529);
// class
send108530 = (Object)new_AST_Send((Object)localvariable18302, (Object)SMB_class, 0);
// should
send108531 = (Object)new_AST_Send((Object)send108530, (Object)symbol30738, 0);
// =
send108532 = (Object)new_AST_Send((Object)send108531, (Object)SMB__equal, 1, (Object)classreference11499);
// number
send108533 = (Object)new_AST_Send((Object)localvariable18302, (Object)symbol30562, 0);
// should
send108534 = (Object)new_AST_Send((Object)send108533, (Object)symbol30738, 0);
string10893 = (Object)new_Type_String(L"3");
constant23666 = (Object)new_AST_Constant((Object)string10893);
// =
send108535 = (Object)new_AST_Send((Object)send108534, (Object)SMB__equal, 1, (Object)constant23666);
// base
send108536 = (Object)new_AST_Send((Object)localvariable18302, (Object)symbol30559, 0);
// should
send108537 = (Object)new_AST_Send((Object)send108536, (Object)symbol30738, 0);
string10894 = (Object)new_Type_String(L"10");
constant23667 = (Object)new_AST_Constant((Object)string10894);
// =
send108538 = (Object)new_AST_Send((Object)send108537, (Object)SMB__equal, 1, (Object)constant23667);
// position
send108539 = (Object)new_AST_Send((Object)localvariable18301, (Object)symbol30757, 0);
// should
send108540 = (Object)new_AST_Send((Object)send108539, (Object)symbol30738, 0);
smallint10833 = (Object)new_Type_SmallInt(1);
constant23668 = (Object)new_AST_Constant((Object)smallint10833);
// =
send108541 = (Object)new_AST_Send((Object)send108540, (Object)SMB__equal, 1, (Object)constant23668);
method31359 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16597, 13, assign13698, assign13699, assign13700, send108521, send108524, send108527, assign13701, assign13702, send108532, send108535, send108538, send108541, Self);
symbol30486 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure31265 = (Object)new_Runtime_MethodClosure(method31359);
store_method((Type_Class)class5268, (Type_Symbol)symbol30486, (Runtime_MethodClosure)methodclosure31265);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable18303 = (Object)new_AST_Variable_named(L"parser");
localvariable18304 = (Object)new_AST_Variable_named(L"string");
array16598 = (Object)new_Type_Array_with(2, (Object)localvariable18303, (Object)localvariable18304);
// keyword
send108542 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30814, 0);
assign13703 = (Object)new_AST_Assign((Object)localvariable18303, (Object)send108542);
string10895 = (Object)new_Type_String(L"abcd: ");
constant23669 = (Object)new_AST_Constant((Object)string10895);
// on:
send108543 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23669);
assign13704 = (Object)new_AST_Assign((Object)localvariable18304, (Object)send108543);
// match:
send108544 = (Object)new_AST_Send((Object)localvariable18303, (Object)symbol30695, 1, (Object)localvariable18304);
// should
send108545 = (Object)new_AST_Send((Object)send108544, (Object)symbol30738, 0);
string10896 = (Object)new_Type_String(L"abcd");
constant23670 = (Object)new_AST_Constant((Object)string10896);
// =
send108546 = (Object)new_AST_Send((Object)send108545, (Object)SMB__equal, 1, (Object)constant23670);
// position
send108547 = (Object)new_AST_Send((Object)localvariable18304, (Object)symbol30757, 0);
// should
send108548 = (Object)new_AST_Send((Object)send108547, (Object)symbol30738, 0);
smallint10834 = (Object)new_Type_SmallInt(5);
constant23671 = (Object)new_AST_Constant((Object)smallint10834);
// =
send108549 = (Object)new_AST_Send((Object)send108548, (Object)SMB__equal, 1, (Object)constant23671);
string10897 = (Object)new_Type_String(L"abcd ");
constant23672 = (Object)new_AST_Constant((Object)string10897);
// on:
send108550 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23672);
assign13705 = (Object)new_AST_Assign((Object)localvariable18304, (Object)send108550);
// match:
send108551 = (Object)new_AST_Send((Object)localvariable18303, (Object)symbol30695, 1, (Object)localvariable18304);
// should
send108552 = (Object)new_AST_Send((Object)send108551, (Object)symbol30738, 0);
// be
send108553 = (Object)new_AST_Send((Object)send108552, (Object)symbol30837, 0);
// isNil
send108554 = (Object)new_AST_Send((Object)send108553, (Object)SMB_isNil, 0);
// position
send108555 = (Object)new_AST_Send((Object)localvariable18304, (Object)symbol30757, 0);
// should
send108556 = (Object)new_AST_Send((Object)send108555, (Object)symbol30738, 0);
smallint10835 = (Object)new_Type_SmallInt(0);
constant23673 = (Object)new_AST_Constant((Object)smallint10835);
// =
send108557 = (Object)new_AST_Send((Object)send108556, (Object)SMB__equal, 1, (Object)constant23673);
method31360 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16598, 8, assign13703, assign13704, send108546, send108549, assign13705, send108554, send108557, Self);
symbol30478 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure31266 = (Object)new_Runtime_MethodClosure(method31360);
store_method((Type_Class)class5268, (Type_Symbol)symbol30478, (Runtime_MethodClosure)methodclosure31266);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable18305 = (Object)new_AST_Variable_named(L"parser");
localvariable18306 = (Object)new_AST_Variable_named(L"string");
localvariable18307 = (Object)new_AST_Variable_named(L"result");
array16599 = (Object)new_Type_Array_with(3, (Object)localvariable18305, (Object)localvariable18306, (Object)localvariable18307);
// binaryObjectDescription
send108558 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30788, 0);
assign13706 = (Object)new_AST_Assign((Object)localvariable18305, (Object)send108558);
string10898 = (Object)new_Type_String(L"abc def ghi ");
constant23674 = (Object)new_AST_Constant((Object)string10898);
// on:
send108559 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23674);
assign13707 = (Object)new_AST_Assign((Object)localvariable18306, (Object)send108559);
// match:
send108560 = (Object)new_AST_Send((Object)localvariable18305, (Object)symbol30695, 1, (Object)localvariable18306);
assign13708 = (Object)new_AST_Assign((Object)localvariable18307, (Object)send108560);
// class
send108561 = (Object)new_AST_Send((Object)localvariable18307, (Object)SMB_class, 0);
// should
send108562 = (Object)new_AST_Send((Object)send108561, (Object)symbol30738, 0);
// =
send108563 = (Object)new_AST_Send((Object)send108562, (Object)SMB__equal, 1, (Object)classreference11517);
// selector
send108564 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30580, 0);
// class
send108565 = (Object)new_AST_Send((Object)send108564, (Object)SMB_class, 0);
// should
send108566 = (Object)new_AST_Send((Object)send108565, (Object)symbol30738, 0);
// =
send108567 = (Object)new_AST_Send((Object)send108566, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send108568 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30580, 0);
// selector
send108569 = (Object)new_AST_Send((Object)send108568, (Object)symbol30580, 0);
// asString
send108570 = (Object)new_AST_Send((Object)send108569, (Object)SMB_asString, 0);
// should
send108571 = (Object)new_AST_Send((Object)send108570, (Object)symbol30738, 0);
string10899 = (Object)new_Type_String(L"ghi");
constant23675 = (Object)new_AST_Constant((Object)string10899);
// =
send108572 = (Object)new_AST_Send((Object)send108571, (Object)SMB__equal, 1, (Object)constant23675);
// receiver
send108573 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30591, 0);
assign13709 = (Object)new_AST_Assign((Object)localvariable18307, (Object)send108573);
// class
send108574 = (Object)new_AST_Send((Object)localvariable18307, (Object)SMB_class, 0);
// should
send108575 = (Object)new_AST_Send((Object)send108574, (Object)symbol30738, 0);
// =
send108576 = (Object)new_AST_Send((Object)send108575, (Object)SMB__equal, 1, (Object)classreference11517);
// selector
send108577 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30580, 0);
// class
send108578 = (Object)new_AST_Send((Object)send108577, (Object)SMB_class, 0);
// should
send108579 = (Object)new_AST_Send((Object)send108578, (Object)symbol30738, 0);
// =
send108580 = (Object)new_AST_Send((Object)send108579, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send108581 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30580, 0);
// selector
send108582 = (Object)new_AST_Send((Object)send108581, (Object)symbol30580, 0);
// asString
send108583 = (Object)new_AST_Send((Object)send108582, (Object)SMB_asString, 0);
// should
send108584 = (Object)new_AST_Send((Object)send108583, (Object)symbol30738, 0);
string10900 = (Object)new_Type_String(L"def");
constant23676 = (Object)new_AST_Constant((Object)string10900);
// =
send108585 = (Object)new_AST_Send((Object)send108584, (Object)SMB__equal, 1, (Object)constant23676);
// receiver
send108586 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30591, 0);
// class
send108587 = (Object)new_AST_Send((Object)send108586, (Object)SMB_class, 0);
// should
send108588 = (Object)new_AST_Send((Object)send108587, (Object)symbol30738, 0);
// =
send108589 = (Object)new_AST_Send((Object)send108588, (Object)SMB__equal, 1, (Object)classreference11507);
// receiver
send108590 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30591, 0);
// name
send108591 = (Object)new_AST_Send((Object)send108590, (Object)SMB_name, 0);
// should
send108592 = (Object)new_AST_Send((Object)send108591, (Object)symbol30738, 0);
string10901 = (Object)new_Type_String(L"abc");
constant23677 = (Object)new_AST_Constant((Object)string10901);
// =
send108593 = (Object)new_AST_Send((Object)send108592, (Object)SMB__equal, 1, (Object)constant23677);
// position
send108594 = (Object)new_AST_Send((Object)localvariable18306, (Object)symbol30757, 0);
// should
send108595 = (Object)new_AST_Send((Object)send108594, (Object)symbol30738, 0);
smallint10836 = (Object)new_Type_SmallInt(12);
constant23678 = (Object)new_AST_Constant((Object)smallint10836);
// =
send108596 = (Object)new_AST_Send((Object)send108595, (Object)SMB__equal, 1, (Object)constant23678);
string10902 = (Object)new_Type_String(L"3");
constant23679 = (Object)new_AST_Constant((Object)string10902);
// on:
send108597 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23679);
assign13710 = (Object)new_AST_Assign((Object)localvariable18306, (Object)send108597);
// match:
send108598 = (Object)new_AST_Send((Object)localvariable18305, (Object)symbol30695, 1, (Object)localvariable18306);
assign13711 = (Object)new_AST_Assign((Object)localvariable18307, (Object)send108598);
// class
send108599 = (Object)new_AST_Send((Object)localvariable18307, (Object)SMB_class, 0);
// should
send108600 = (Object)new_AST_Send((Object)send108599, (Object)symbol30738, 0);
// =
send108601 = (Object)new_AST_Send((Object)send108600, (Object)SMB__equal, 1, (Object)classreference11499);
// number
send108602 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30562, 0);
// should
send108603 = (Object)new_AST_Send((Object)send108602, (Object)symbol30738, 0);
string10903 = (Object)new_Type_String(L"3");
constant23680 = (Object)new_AST_Constant((Object)string10903);
// =
send108604 = (Object)new_AST_Send((Object)send108603, (Object)SMB__equal, 1, (Object)constant23680);
// position
send108605 = (Object)new_AST_Send((Object)localvariable18306, (Object)symbol30757, 0);
// should
send108606 = (Object)new_AST_Send((Object)send108605, (Object)symbol30738, 0);
smallint10837 = (Object)new_Type_SmallInt(1);
constant23681 = (Object)new_AST_Constant((Object)smallint10837);
// =
send108607 = (Object)new_AST_Send((Object)send108606, (Object)SMB__equal, 1, (Object)constant23681);
string10904 = (Object)new_Type_String(L"abc + ghi * c ");
constant23682 = (Object)new_AST_Constant((Object)string10904);
// on:
send108608 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23682);
assign13712 = (Object)new_AST_Assign((Object)localvariable18306, (Object)send108608);
// match:
send108609 = (Object)new_AST_Send((Object)localvariable18305, (Object)symbol30695, 1, (Object)localvariable18306);
assign13713 = (Object)new_AST_Assign((Object)localvariable18307, (Object)send108609);
// class
send108610 = (Object)new_AST_Send((Object)localvariable18307, (Object)SMB_class, 0);
// should
send108611 = (Object)new_AST_Send((Object)send108610, (Object)symbol30738, 0);
// =
send108612 = (Object)new_AST_Send((Object)send108611, (Object)SMB__equal, 1, (Object)classreference11512);
// selector
send108613 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30580, 0);
// printString
send108614 = (Object)new_AST_Send((Object)send108613, (Object)symbol30698, 0);
// should
send108615 = (Object)new_AST_Send((Object)send108614, (Object)symbol30738, 0);
string10905 = (Object)new_Type_String(L"*");
constant23683 = (Object)new_AST_Constant((Object)string10905);
// =
send108616 = (Object)new_AST_Send((Object)send108615, (Object)SMB__equal, 1, (Object)constant23683);
// argument
send108617 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30598, 0);
// class
send108618 = (Object)new_AST_Send((Object)send108617, (Object)SMB_class, 0);
// should
send108619 = (Object)new_AST_Send((Object)send108618, (Object)symbol30738, 0);
// =
send108620 = (Object)new_AST_Send((Object)send108619, (Object)SMB__equal, 1, (Object)classreference11507);
// argument
send108621 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30598, 0);
// name
send108622 = (Object)new_AST_Send((Object)send108621, (Object)SMB_name, 0);
// should
send108623 = (Object)new_AST_Send((Object)send108622, (Object)symbol30738, 0);
string10906 = (Object)new_Type_String(L"c");
constant23684 = (Object)new_AST_Constant((Object)string10906);
// =
send108624 = (Object)new_AST_Send((Object)send108623, (Object)SMB__equal, 1, (Object)constant23684);
// receiver
send108625 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30591, 0);
assign13714 = (Object)new_AST_Assign((Object)localvariable18307, (Object)send108625);
// class
send108626 = (Object)new_AST_Send((Object)localvariable18307, (Object)SMB_class, 0);
// should
send108627 = (Object)new_AST_Send((Object)send108626, (Object)symbol30738, 0);
// =
send108628 = (Object)new_AST_Send((Object)send108627, (Object)SMB__equal, 1, (Object)classreference11512);
// selector
send108629 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30580, 0);
// printString
send108630 = (Object)new_AST_Send((Object)send108629, (Object)symbol30698, 0);
// should
send108631 = (Object)new_AST_Send((Object)send108630, (Object)symbol30738, 0);
string10907 = (Object)new_Type_String(L"+");
constant23685 = (Object)new_AST_Constant((Object)string10907);
// =
send108632 = (Object)new_AST_Send((Object)send108631, (Object)SMB__equal, 1, (Object)constant23685);
// receiver
send108633 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30591, 0);
// class
send108634 = (Object)new_AST_Send((Object)send108633, (Object)SMB_class, 0);
// should
send108635 = (Object)new_AST_Send((Object)send108634, (Object)symbol30738, 0);
// =
send108636 = (Object)new_AST_Send((Object)send108635, (Object)SMB__equal, 1, (Object)classreference11507);
// receiver
send108637 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30591, 0);
// name
send108638 = (Object)new_AST_Send((Object)send108637, (Object)SMB_name, 0);
// should
send108639 = (Object)new_AST_Send((Object)send108638, (Object)symbol30738, 0);
string10908 = (Object)new_Type_String(L"abc");
constant23686 = (Object)new_AST_Constant((Object)string10908);
// =
send108640 = (Object)new_AST_Send((Object)send108639, (Object)SMB__equal, 1, (Object)constant23686);
// argument
send108641 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30598, 0);
// class
send108642 = (Object)new_AST_Send((Object)send108641, (Object)SMB_class, 0);
// should
send108643 = (Object)new_AST_Send((Object)send108642, (Object)symbol30738, 0);
// =
send108644 = (Object)new_AST_Send((Object)send108643, (Object)SMB__equal, 1, (Object)classreference11507);
// argument
send108645 = (Object)new_AST_Send((Object)localvariable18307, (Object)symbol30598, 0);
// name
send108646 = (Object)new_AST_Send((Object)send108645, (Object)SMB_name, 0);
// should
send108647 = (Object)new_AST_Send((Object)send108646, (Object)symbol30738, 0);
string10909 = (Object)new_Type_String(L"ghi");
constant23687 = (Object)new_AST_Constant((Object)string10909);
// =
send108648 = (Object)new_AST_Send((Object)send108647, (Object)SMB__equal, 1, (Object)constant23687);
// position
send108649 = (Object)new_AST_Send((Object)localvariable18306, (Object)symbol30757, 0);
// should
send108650 = (Object)new_AST_Send((Object)send108649, (Object)symbol30738, 0);
smallint10838 = (Object)new_Type_SmallInt(13);
constant23688 = (Object)new_AST_Constant((Object)smallint10838);
// =
send108651 = (Object)new_AST_Send((Object)send108650, (Object)SMB__equal, 1, (Object)constant23688);
method31361 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16599, 33, assign13706, assign13707, assign13708, send108563, send108567, send108572, assign13709, send108576, send108580, send108585, send108589, send108593, send108596, assign13710, assign13711, send108601, send108604, send108607, assign13712, assign13713, send108612, send108616, send108620, send108624, assign13714, send108628, send108632, send108636, send108640, send108644, send108648, send108651, Self);
symbol30494 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure31267 = (Object)new_Runtime_MethodClosure(method31361);
store_method((Type_Class)class5268, (Type_Symbol)symbol30494, (Runtime_MethodClosure)methodclosure31267);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable18308 = (Object)new_AST_Variable_named(L"parser");
localvariable18309 = (Object)new_AST_Variable_named(L"string");
localvariable18310 = (Object)new_AST_Variable_named(L"result");
array16600 = (Object)new_Type_Array_with(3, (Object)localvariable18308, (Object)localvariable18309, (Object)localvariable18310);
// unarySelector
send108652 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30786, 0);
assign13715 = (Object)new_AST_Assign((Object)localvariable18308, (Object)send108652);
string10910 = (Object)new_Type_String(L"abcd bla");
constant23689 = (Object)new_AST_Constant((Object)string10910);
// on:
send108653 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23689);
assign13716 = (Object)new_AST_Assign((Object)localvariable18309, (Object)send108653);
// match:
send108654 = (Object)new_AST_Send((Object)localvariable18308, (Object)symbol30695, 1, (Object)localvariable18309);
assign13717 = (Object)new_AST_Assign((Object)localvariable18310, (Object)send108654);
// class
send108655 = (Object)new_AST_Send((Object)localvariable18310, (Object)SMB_class, 0);
// should
send108656 = (Object)new_AST_Send((Object)send108655, (Object)symbol30738, 0);
// =
send108657 = (Object)new_AST_Send((Object)send108656, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send108658 = (Object)new_AST_Send((Object)localvariable18310, (Object)symbol30580, 0);
// printString
send108659 = (Object)new_AST_Send((Object)send108658, (Object)symbol30698, 0);
// should
send108660 = (Object)new_AST_Send((Object)send108659, (Object)symbol30738, 0);
string10911 = (Object)new_Type_String(L"abcd");
constant23690 = (Object)new_AST_Constant((Object)string10911);
// =
send108661 = (Object)new_AST_Send((Object)send108660, (Object)SMB__equal, 1, (Object)constant23690);
// position
send108662 = (Object)new_AST_Send((Object)localvariable18309, (Object)symbol30757, 0);
// should
send108663 = (Object)new_AST_Send((Object)send108662, (Object)symbol30738, 0);
smallint10839 = (Object)new_Type_SmallInt(4);
constant23691 = (Object)new_AST_Constant((Object)smallint10839);
// =
send108664 = (Object)new_AST_Send((Object)send108663, (Object)SMB__equal, 1, (Object)constant23691);
string10912 = (Object)new_Type_String(L"abcd: bla");
constant23692 = (Object)new_AST_Constant((Object)string10912);
// on:
send108665 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23692);
assign13718 = (Object)new_AST_Assign((Object)localvariable18309, (Object)send108665);
// match:
send108666 = (Object)new_AST_Send((Object)localvariable18308, (Object)symbol30695, 1, (Object)localvariable18309);
// should
send108667 = (Object)new_AST_Send((Object)send108666, (Object)symbol30738, 0);
// be
send108668 = (Object)new_AST_Send((Object)send108667, (Object)symbol30837, 0);
// isNil
send108669 = (Object)new_AST_Send((Object)send108668, (Object)SMB_isNil, 0);
// position
send108670 = (Object)new_AST_Send((Object)localvariable18309, (Object)symbol30757, 0);
// should
send108671 = (Object)new_AST_Send((Object)send108670, (Object)symbol30738, 0);
smallint10840 = (Object)new_Type_SmallInt(0);
constant23693 = (Object)new_AST_Constant((Object)smallint10840);
// =
send108672 = (Object)new_AST_Send((Object)send108671, (Object)SMB__equal, 1, (Object)constant23693);
method31362 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16600, 10, assign13715, assign13716, assign13717, send108657, send108661, send108664, assign13718, send108669, send108672, Self);
symbol30504 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure31268 = (Object)new_Runtime_MethodClosure(method31362);
store_method((Type_Class)class5268, (Type_Symbol)symbol30504, (Runtime_MethodClosure)methodclosure31268);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable18311 = (Object)new_AST_Variable_named(L"parser");
localvariable18312 = (Object)new_AST_Variable_named(L"string");
localvariable18313 = (Object)new_AST_Variable_named(L"result");
array16601 = (Object)new_Type_Array_with(3, (Object)localvariable18311, (Object)localvariable18312, (Object)localvariable18313);
// array
send108673 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30796, 0);
assign13719 = (Object)new_AST_Assign((Object)localvariable18311, (Object)send108673);
string10913 = (Object)new_Type_String(L"()");
constant23694 = (Object)new_AST_Constant((Object)string10913);
// on:
send108674 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23694);
assign13720 = (Object)new_AST_Assign((Object)localvariable18312, (Object)send108674);
// match:
send108675 = (Object)new_AST_Send((Object)localvariable18311, (Object)symbol30695, 1, (Object)localvariable18312);
assign13721 = (Object)new_AST_Assign((Object)localvariable18313, (Object)send108675);
// class
send108676 = (Object)new_AST_Send((Object)localvariable18313, (Object)SMB_class, 0);
// should
send108677 = (Object)new_AST_Send((Object)send108676, (Object)symbol30738, 0);
// =
send108678 = (Object)new_AST_Send((Object)send108677, (Object)SMB__equal, 1, (Object)classreference11520);
// literals
send108679 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
// asArray
send108680 = (Object)new_AST_Send((Object)send108679, (Object)SMB_asArray, 0);
// should
send108681 = (Object)new_AST_Send((Object)send108680, (Object)symbol30738, 0);
// new
send108682 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30416, 0);
// =
send108683 = (Object)new_AST_Send((Object)send108681, (Object)SMB__equal, 1, (Object)send108682);
string10914 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant23695 = (Object)new_AST_Constant((Object)string10914);
// on:
send108684 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23695);
assign13722 = (Object)new_AST_Assign((Object)localvariable18312, (Object)send108684);
// match:
send108685 = (Object)new_AST_Send((Object)localvariable18311, (Object)symbol30695, 1, (Object)localvariable18312);
assign13723 = (Object)new_AST_Assign((Object)localvariable18313, (Object)send108685);
// class
send108686 = (Object)new_AST_Send((Object)localvariable18313, (Object)SMB_class, 0);
// should
send108687 = (Object)new_AST_Send((Object)send108686, (Object)symbol30738, 0);
// =
send108688 = (Object)new_AST_Send((Object)send108687, (Object)SMB__equal, 1, (Object)classreference11520);
// literals
send108689 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
// size
send108690 = (Object)new_AST_Send((Object)send108689, (Object)SMB_size, 0);
// should
send108691 = (Object)new_AST_Send((Object)send108690, (Object)symbol30738, 0);
smallint10841 = (Object)new_Type_SmallInt(5);
constant23696 = (Object)new_AST_Constant((Object)smallint10841);
// =
send108692 = (Object)new_AST_Send((Object)send108691, (Object)SMB__equal, 1, (Object)constant23696);
// literals
send108693 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
// first
send108694 = (Object)new_AST_Send((Object)send108693, (Object)symbol30549, 0);
// class
send108695 = (Object)new_AST_Send((Object)send108694, (Object)SMB_class, 0);
// should
send108696 = (Object)new_AST_Send((Object)send108695, (Object)symbol30738, 0);
// =
send108697 = (Object)new_AST_Send((Object)send108696, (Object)SMB__equal, 1, (Object)classreference11499);
// literals
send108698 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
// first
send108699 = (Object)new_AST_Send((Object)send108698, (Object)symbol30549, 0);
// number
send108700 = (Object)new_AST_Send((Object)send108699, (Object)symbol30562, 0);
// should
send108701 = (Object)new_AST_Send((Object)send108700, (Object)symbol30738, 0);
string10915 = (Object)new_Type_String(L"1");
constant23697 = (Object)new_AST_Constant((Object)string10915);
// =
send108702 = (Object)new_AST_Send((Object)send108701, (Object)SMB__equal, 1, (Object)constant23697);
// literals
send108703 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10842 = (Object)new_Type_SmallInt(2);
constant23698 = (Object)new_AST_Constant((Object)smallint10842);
// at:
send108704 = (Object)new_AST_Send((Object)send108703, (Object)SMB_at_, 1, (Object)constant23698);
// class
send108705 = (Object)new_AST_Send((Object)send108704, (Object)SMB_class, 0);
// should
send108706 = (Object)new_AST_Send((Object)send108705, (Object)symbol30738, 0);
// =
send108707 = (Object)new_AST_Send((Object)send108706, (Object)SMB__equal, 1, (Object)classreference11505);
// literals
send108708 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10843 = (Object)new_Type_SmallInt(2);
constant23699 = (Object)new_AST_Constant((Object)smallint10843);
// at:
send108709 = (Object)new_AST_Send((Object)send108708, (Object)SMB_at_, 1, (Object)constant23699);
// symbol
send108710 = (Object)new_AST_Send((Object)send108709, (Object)symbol30563, 0);
// should
send108711 = (Object)new_AST_Send((Object)send108710, (Object)symbol30738, 0);
string10916 = (Object)new_Type_String(L"a");
constant23700 = (Object)new_AST_Constant((Object)string10916);
// =
send108712 = (Object)new_AST_Send((Object)send108711, (Object)SMB__equal, 1, (Object)constant23700);
// literals
send108713 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10844 = (Object)new_Type_SmallInt(3);
constant23701 = (Object)new_AST_Constant((Object)smallint10844);
// at:
send108714 = (Object)new_AST_Send((Object)send108713, (Object)SMB_at_, 1, (Object)constant23701);
// class
send108715 = (Object)new_AST_Send((Object)send108714, (Object)SMB_class, 0);
// should
send108716 = (Object)new_AST_Send((Object)send108715, (Object)symbol30738, 0);
// =
send108717 = (Object)new_AST_Send((Object)send108716, (Object)SMB__equal, 1, (Object)classreference11505);
// literals
send108718 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10845 = (Object)new_Type_SmallInt(3);
constant23702 = (Object)new_AST_Constant((Object)smallint10845);
// at:
send108719 = (Object)new_AST_Send((Object)send108718, (Object)SMB_at_, 1, (Object)constant23702);
// symbol
send108720 = (Object)new_AST_Send((Object)send108719, (Object)symbol30563, 0);
// should
send108721 = (Object)new_AST_Send((Object)send108720, (Object)symbol30738, 0);
string10917 = (Object)new_Type_String(L"a");
constant23703 = (Object)new_AST_Constant((Object)string10917);
// =
send108722 = (Object)new_AST_Send((Object)send108721, (Object)SMB__equal, 1, (Object)constant23703);
// literals
send108723 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10846 = (Object)new_Type_SmallInt(4);
constant23704 = (Object)new_AST_Constant((Object)smallint10846);
// at:
send108724 = (Object)new_AST_Send((Object)send108723, (Object)SMB_at_, 1, (Object)constant23704);
// class
send108725 = (Object)new_AST_Send((Object)send108724, (Object)SMB_class, 0);
// should
send108726 = (Object)new_AST_Send((Object)send108725, (Object)symbol30738, 0);
// =
send108727 = (Object)new_AST_Send((Object)send108726, (Object)SMB__equal, 1, (Object)classreference11509);
// literals
send108728 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10847 = (Object)new_Type_SmallInt(4);
constant23705 = (Object)new_AST_Constant((Object)smallint10847);
// at:
send108729 = (Object)new_AST_Send((Object)send108728, (Object)SMB_at_, 1, (Object)constant23705);
// string
send108730 = (Object)new_AST_Send((Object)send108729, (Object)symbol30568, 0);
// should
send108731 = (Object)new_AST_Send((Object)send108730, (Object)symbol30738, 0);
string10918 = (Object)new_Type_String(L"b");
constant23706 = (Object)new_AST_Constant((Object)string10918);
// =
send108732 = (Object)new_AST_Send((Object)send108731, (Object)SMB__equal, 1, (Object)constant23706);
// literals
send108733 = (Object)new_AST_Send((Object)localvariable18313, (Object)symbol30544, 0);
smallint10848 = (Object)new_Type_SmallInt(5);
constant23707 = (Object)new_AST_Constant((Object)smallint10848);
// at:
send108734 = (Object)new_AST_Send((Object)send108733, (Object)SMB_at_, 1, (Object)constant23707);
// class
send108735 = (Object)new_AST_Send((Object)send108734, (Object)SMB_class, 0);
// should
send108736 = (Object)new_AST_Send((Object)send108735, (Object)symbol30738, 0);
// =
send108737 = (Object)new_AST_Send((Object)send108736, (Object)SMB__equal, 1, (Object)classreference11520);
method31363 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16601, 19, assign13719, assign13720, assign13721, send108678, send108683, assign13722, assign13723, send108688, send108692, send108697, send108702, send108707, send108712, send108717, send108722, send108727, send108732, send108737, Self);
symbol30448 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure31269 = (Object)new_Runtime_MethodClosure(method31363);
store_method((Type_Class)class5268, (Type_Symbol)symbol30448, (Runtime_MethodClosure)methodclosure31269);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new
// new
send108738 = (Object)new_AST_Send((Object)classreference11540, (Object)symbol30416, 0);
assign13724 = (Object)new_AST_Assign((Object)instancevariable13983, (Object)send108738);
method31364 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign13724, Self);
symbol30496 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure31270 = (Object)new_Runtime_MethodClosure(method31364);
store_method((Type_Class)class5268, (Type_Symbol)symbol30496, (Runtime_MethodClosure)methodclosure31270);


// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method31365 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol30488 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure31271 = (Object)new_Runtime_MethodClosure(method31365);
store_method((Type_Class)class5268, (Type_Symbol)symbol30488, (Runtime_MethodClosure)methodclosure31271);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable18314 = (Object)new_AST_Variable_named(L"parser");
localvariable18315 = (Object)new_AST_Variable_named(L"string");
array16602 = (Object)new_Type_Array_with(2, (Object)localvariable18314, (Object)localvariable18315);
symbol30840 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send108739 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30840, 0);
assign13725 = (Object)new_AST_Assign((Object)localvariable18314, (Object)send108739);
string10919 = (Object)new_Type_String(L"Abcd ");
constant23708 = (Object)new_AST_Constant((Object)string10919);
// on:
send108740 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23708);
assign13726 = (Object)new_AST_Assign((Object)localvariable18315, (Object)send108740);
// match:
send108741 = (Object)new_AST_Send((Object)localvariable18314, (Object)symbol30695, 1, (Object)localvariable18315);
// should
send108742 = (Object)new_AST_Send((Object)send108741, (Object)symbol30738, 0);
string10920 = (Object)new_Type_String(L"Abcd");
constant23709 = (Object)new_AST_Constant((Object)string10920);
// =
send108743 = (Object)new_AST_Send((Object)send108742, (Object)SMB__equal, 1, (Object)constant23709);
// position
send108744 = (Object)new_AST_Send((Object)localvariable18315, (Object)symbol30757, 0);
// should
send108745 = (Object)new_AST_Send((Object)send108744, (Object)symbol30738, 0);
smallint10849 = (Object)new_Type_SmallInt(4);
constant23710 = (Object)new_AST_Constant((Object)smallint10849);
// =
send108746 = (Object)new_AST_Send((Object)send108745, (Object)SMB__equal, 1, (Object)constant23710);
string10921 = (Object)new_Type_String(L"AbCd145 ");
constant23711 = (Object)new_AST_Constant((Object)string10921);
// on:
send108747 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23711);
assign13727 = (Object)new_AST_Assign((Object)localvariable18315, (Object)send108747);
// match:
send108748 = (Object)new_AST_Send((Object)localvariable18314, (Object)symbol30695, 1, (Object)localvariable18315);
// should
send108749 = (Object)new_AST_Send((Object)send108748, (Object)symbol30738, 0);
string10922 = (Object)new_Type_String(L"AbCd145");
constant23712 = (Object)new_AST_Constant((Object)string10922);
// =
send108750 = (Object)new_AST_Send((Object)send108749, (Object)SMB__equal, 1, (Object)constant23712);
// position
send108751 = (Object)new_AST_Send((Object)localvariable18315, (Object)symbol30757, 0);
// should
send108752 = (Object)new_AST_Send((Object)send108751, (Object)symbol30738, 0);
smallint10850 = (Object)new_Type_SmallInt(7);
constant23713 = (Object)new_AST_Constant((Object)smallint10850);
// =
send108753 = (Object)new_AST_Send((Object)send108752, (Object)SMB__equal, 1, (Object)constant23713);
string10923 = (Object)new_Type_String(L"abcdD");
constant23714 = (Object)new_AST_Constant((Object)string10923);
// on:
send108754 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23714);
assign13728 = (Object)new_AST_Assign((Object)localvariable18315, (Object)send108754);
// match:
send108755 = (Object)new_AST_Send((Object)localvariable18314, (Object)symbol30695, 1, (Object)localvariable18315);
// should
send108756 = (Object)new_AST_Send((Object)send108755, (Object)symbol30738, 0);
// be
send108757 = (Object)new_AST_Send((Object)send108756, (Object)symbol30837, 0);
// isNil
send108758 = (Object)new_AST_Send((Object)send108757, (Object)SMB_isNil, 0);
// position
send108759 = (Object)new_AST_Send((Object)localvariable18315, (Object)symbol30757, 0);
// should
send108760 = (Object)new_AST_Send((Object)send108759, (Object)symbol30738, 0);
smallint10851 = (Object)new_Type_SmallInt(0);
constant23715 = (Object)new_AST_Constant((Object)smallint10851);
// =
send108761 = (Object)new_AST_Send((Object)send108760, (Object)SMB__equal, 1, (Object)constant23715);
method31366 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16602, 11, assign13725, assign13726, send108743, send108746, assign13727, send108750, send108753, assign13728, send108758, send108761, Self);
symbol30481 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure31272 = (Object)new_Runtime_MethodClosure(method31366);
store_method((Type_Class)class5268, (Type_Symbol)symbol30481, (Runtime_MethodClosure)methodclosure31272);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable18316 = (Object)new_AST_Variable_named(L"parser");
localvariable18317 = (Object)new_AST_Variable_named(L"string");
localvariable18318 = (Object)new_AST_Variable_named(L"message");
localvariable18319 = (Object)new_AST_Variable_named(L"return");
array16603 = (Object)new_Type_Array_with(4, (Object)localvariable18316, (Object)localvariable18317, (Object)localvariable18318, (Object)localvariable18319);
// messageExpression
send108762 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30793, 0);
assign13729 = (Object)new_AST_Assign((Object)localvariable18316, (Object)send108762);
string10924 = (Object)new_Type_String(L"super do: this and: that");
constant23716 = (Object)new_AST_Constant((Object)string10924);
// on:
send108763 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23716);
assign13730 = (Object)new_AST_Assign((Object)localvariable18317, (Object)send108763);
// match:
send108764 = (Object)new_AST_Send((Object)localvariable18316, (Object)symbol30695, 1, (Object)localvariable18317);
assign13731 = (Object)new_AST_Assign((Object)localvariable18318, (Object)send108764);
// receiver
send108765 = (Object)new_AST_Send((Object)localvariable18318, (Object)symbol30591, 0);
// class
send108766 = (Object)new_AST_Send((Object)send108765, (Object)SMB_class, 0);
// should
send108767 = (Object)new_AST_Send((Object)send108766, (Object)symbol30738, 0);
// =
send108768 = (Object)new_AST_Send((Object)send108767, (Object)SMB__equal, 1, (Object)classreference11496);
// return
send108769 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30774, 0);
assign13732 = (Object)new_AST_Assign((Object)localvariable18316, (Object)send108769);
string10925 = (Object)new_Type_String(L"^ super do: this and: that");
constant23717 = (Object)new_AST_Constant((Object)string10925);
// on:
send108770 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23717);
assign13733 = (Object)new_AST_Assign((Object)localvariable18317, (Object)send108770);
// match:
send108771 = (Object)new_AST_Send((Object)localvariable18316, (Object)symbol30695, 1, (Object)localvariable18317);
assign13734 = (Object)new_AST_Assign((Object)localvariable18319, (Object)send108771);
// class
send108772 = (Object)new_AST_Send((Object)localvariable18319, (Object)SMB_class, 0);
// should
send108773 = (Object)new_AST_Send((Object)send108772, (Object)symbol30738, 0);
// =
send108774 = (Object)new_AST_Send((Object)send108773, (Object)SMB__equal, 1, (Object)classreference11522);
// expression
send108775 = (Object)new_AST_Send((Object)localvariable18319, (Object)symbol30572, 0);
// receiver
send108776 = (Object)new_AST_Send((Object)send108775, (Object)symbol30591, 0);
// class
send108777 = (Object)new_AST_Send((Object)send108776, (Object)SMB_class, 0);
// should
send108778 = (Object)new_AST_Send((Object)send108777, (Object)symbol30738, 0);
// =
send108779 = (Object)new_AST_Send((Object)send108778, (Object)SMB__equal, 1, (Object)classreference11496);
method31367 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16603, 10, assign13729, assign13730, assign13731, send108768, assign13732, assign13733, assign13734, send108774, send108779, Self);
symbol30473 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure31273 = (Object)new_Runtime_MethodClosure(method31367);
store_method((Type_Class)class5268, (Type_Symbol)symbol30473, (Runtime_MethodClosure)methodclosure31273);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable18320 = (Object)new_AST_Variable_named(L"parser");
localvariable18321 = (Object)new_AST_Variable_named(L"ast");
array16604 = (Object)new_Type_Array_with(2, (Object)localvariable18320, (Object)localvariable18321);
// statements
send108780 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30599, 0);
assign13735 = (Object)new_AST_Assign((Object)localvariable18320, (Object)send108780);
string10926 = (Object)new_Type_String(L"2 fib + 3 ");
constant23718 = (Object)new_AST_Constant((Object)string10926);
// on:
send108781 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23718);
// match:
send108782 = (Object)new_AST_Send((Object)localvariable18320, (Object)symbol30695, 1, (Object)send108781);
// first
send108783 = (Object)new_AST_Send((Object)send108782, (Object)symbol30549, 0);
assign13736 = (Object)new_AST_Assign((Object)localvariable18321, (Object)send108783);
// class
send108784 = (Object)new_AST_Send((Object)localvariable18321, (Object)SMB_class, 0);
// should
send108785 = (Object)new_AST_Send((Object)send108784, (Object)symbol30738, 0);
// =
send108786 = (Object)new_AST_Send((Object)send108785, (Object)SMB__equal, 1, (Object)classreference11512);
// receiver
send108787 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30591, 0);
// class
send108788 = (Object)new_AST_Send((Object)send108787, (Object)SMB_class, 0);
// should
send108789 = (Object)new_AST_Send((Object)send108788, (Object)symbol30738, 0);
// =
send108790 = (Object)new_AST_Send((Object)send108789, (Object)SMB__equal, 1, (Object)classreference11517);
// receiver
send108791 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30591, 0);
// receiver
send108792 = (Object)new_AST_Send((Object)send108791, (Object)symbol30591, 0);
// class
send108793 = (Object)new_AST_Send((Object)send108792, (Object)SMB_class, 0);
// should
send108794 = (Object)new_AST_Send((Object)send108793, (Object)symbol30738, 0);
// =
send108795 = (Object)new_AST_Send((Object)send108794, (Object)SMB__equal, 1, (Object)classreference11499);
// receiver
send108796 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30591, 0);
// receiver
send108797 = (Object)new_AST_Send((Object)send108796, (Object)symbol30591, 0);
// number
send108798 = (Object)new_AST_Send((Object)send108797, (Object)symbol30562, 0);
// should
send108799 = (Object)new_AST_Send((Object)send108798, (Object)symbol30738, 0);
string10927 = (Object)new_Type_String(L"2");
constant23719 = (Object)new_AST_Constant((Object)string10927);
// =
send108800 = (Object)new_AST_Send((Object)send108799, (Object)SMB__equal, 1, (Object)constant23719);
// receiver
send108801 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30591, 0);
// selector
send108802 = (Object)new_AST_Send((Object)send108801, (Object)symbol30580, 0);
// asString
send108803 = (Object)new_AST_Send((Object)send108802, (Object)SMB_asString, 0);
// should
send108804 = (Object)new_AST_Send((Object)send108803, (Object)symbol30738, 0);
string10928 = (Object)new_Type_String(L"fib");
constant23720 = (Object)new_AST_Constant((Object)string10928);
// =
send108805 = (Object)new_AST_Send((Object)send108804, (Object)SMB__equal, 1, (Object)constant23720);
// selector
send108806 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30580, 0);
// asString
send108807 = (Object)new_AST_Send((Object)send108806, (Object)SMB_asString, 0);
// should
send108808 = (Object)new_AST_Send((Object)send108807, (Object)symbol30738, 0);
string10929 = (Object)new_Type_String(L"+");
constant23721 = (Object)new_AST_Constant((Object)string10929);
// =
send108809 = (Object)new_AST_Send((Object)send108808, (Object)SMB__equal, 1, (Object)constant23721);
// argument
send108810 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30598, 0);
// class
send108811 = (Object)new_AST_Send((Object)send108810, (Object)SMB_class, 0);
// should
send108812 = (Object)new_AST_Send((Object)send108811, (Object)symbol30738, 0);
// =
send108813 = (Object)new_AST_Send((Object)send108812, (Object)SMB__equal, 1, (Object)classreference11499);
// argument
send108814 = (Object)new_AST_Send((Object)localvariable18321, (Object)symbol30598, 0);
// number
send108815 = (Object)new_AST_Send((Object)send108814, (Object)symbol30562, 0);
// should
send108816 = (Object)new_AST_Send((Object)send108815, (Object)symbol30738, 0);
string10930 = (Object)new_Type_String(L"3");
constant23722 = (Object)new_AST_Constant((Object)string10930);
// =
send108817 = (Object)new_AST_Send((Object)send108816, (Object)SMB__equal, 1, (Object)constant23722);
method31368 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16604, 11, assign13735, assign13736, send108786, send108790, send108795, send108800, send108805, send108809, send108813, send108817, Self);
symbol30498 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure31274 = (Object)new_Runtime_MethodClosure(method31368);
store_method((Type_Class)class5268, (Type_Symbol)symbol30498, (Runtime_MethodClosure)methodclosure31274);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable18322 = (Object)new_AST_Variable_named(L"parser");
localvariable18323 = (Object)new_AST_Variable_named(L"string");
array16605 = (Object)new_Type_Array_with(2, (Object)localvariable18322, (Object)localvariable18323);
// binarySelector
send108818 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30806, 0);
assign13737 = (Object)new_AST_Assign((Object)localvariable18322, (Object)send108818);
string10931 = (Object)new_Type_String(L"+= a");
constant23723 = (Object)new_AST_Constant((Object)string10931);
// on:
send108819 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23723);
assign13738 = (Object)new_AST_Assign((Object)localvariable18323, (Object)send108819);
// match:
send108820 = (Object)new_AST_Send((Object)localvariable18322, (Object)symbol30695, 1, (Object)localvariable18323);
// printString
send108821 = (Object)new_AST_Send((Object)send108820, (Object)symbol30698, 0);
// should
send108822 = (Object)new_AST_Send((Object)send108821, (Object)symbol30738, 0);
string10932 = (Object)new_Type_String(L"+=");
constant23724 = (Object)new_AST_Constant((Object)string10932);
// =
send108823 = (Object)new_AST_Send((Object)send108822, (Object)SMB__equal, 1, (Object)constant23724);
// position
send108824 = (Object)new_AST_Send((Object)localvariable18323, (Object)symbol30757, 0);
// should
send108825 = (Object)new_AST_Send((Object)send108824, (Object)symbol30738, 0);
smallint10852 = (Object)new_Type_SmallInt(2);
constant23725 = (Object)new_AST_Constant((Object)smallint10852);
// =
send108826 = (Object)new_AST_Send((Object)send108825, (Object)SMB__equal, 1, (Object)constant23725);
string10933 = (Object)new_Type_String(L"|= a");
constant23726 = (Object)new_AST_Constant((Object)string10933);
// on:
send108827 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23726);
assign13739 = (Object)new_AST_Assign((Object)localvariable18323, (Object)send108827);
// match:
send108828 = (Object)new_AST_Send((Object)localvariable18322, (Object)symbol30695, 1, (Object)localvariable18323);
// printString
send108829 = (Object)new_AST_Send((Object)send108828, (Object)symbol30698, 0);
// should
send108830 = (Object)new_AST_Send((Object)send108829, (Object)symbol30738, 0);
string10934 = (Object)new_Type_String(L"|");
constant23727 = (Object)new_AST_Constant((Object)string10934);
// =
send108831 = (Object)new_AST_Send((Object)send108830, (Object)SMB__equal, 1, (Object)constant23727);
// position
send108832 = (Object)new_AST_Send((Object)localvariable18323, (Object)symbol30757, 0);
// should
send108833 = (Object)new_AST_Send((Object)send108832, (Object)symbol30738, 0);
smallint10853 = (Object)new_Type_SmallInt(1);
constant23728 = (Object)new_AST_Constant((Object)smallint10853);
// =
send108834 = (Object)new_AST_Send((Object)send108833, (Object)SMB__equal, 1, (Object)constant23728);
string10935 = (Object)new_Type_String(L"-= a");
constant23729 = (Object)new_AST_Constant((Object)string10935);
// on:
send108835 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23729);
assign13740 = (Object)new_AST_Assign((Object)localvariable18323, (Object)send108835);
// match:
send108836 = (Object)new_AST_Send((Object)localvariable18322, (Object)symbol30695, 1, (Object)localvariable18323);
// printString
send108837 = (Object)new_AST_Send((Object)send108836, (Object)symbol30698, 0);
// should
send108838 = (Object)new_AST_Send((Object)send108837, (Object)symbol30738, 0);
string10936 = (Object)new_Type_String(L"-=");
constant23730 = (Object)new_AST_Constant((Object)string10936);
// =
send108839 = (Object)new_AST_Send((Object)send108838, (Object)SMB__equal, 1, (Object)constant23730);
// position
send108840 = (Object)new_AST_Send((Object)localvariable18323, (Object)symbol30757, 0);
// should
send108841 = (Object)new_AST_Send((Object)send108840, (Object)symbol30738, 0);
smallint10854 = (Object)new_Type_SmallInt(2);
constant23731 = (Object)new_AST_Constant((Object)smallint10854);
// =
send108842 = (Object)new_AST_Send((Object)send108841, (Object)SMB__equal, 1, (Object)constant23731);
string10937 = (Object)new_Type_String(L"=- a");
constant23732 = (Object)new_AST_Constant((Object)string10937);
// on:
send108843 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23732);
assign13741 = (Object)new_AST_Assign((Object)localvariable18323, (Object)send108843);
// match:
send108844 = (Object)new_AST_Send((Object)localvariable18322, (Object)symbol30695, 1, (Object)localvariable18323);
// printString
send108845 = (Object)new_AST_Send((Object)send108844, (Object)symbol30698, 0);
// should
send108846 = (Object)new_AST_Send((Object)send108845, (Object)symbol30738, 0);
string10938 = (Object)new_Type_String(L"=");
constant23733 = (Object)new_AST_Constant((Object)string10938);
// =
send108847 = (Object)new_AST_Send((Object)send108846, (Object)SMB__equal, 1, (Object)constant23733);
// position
send108848 = (Object)new_AST_Send((Object)localvariable18323, (Object)symbol30757, 0);
// should
send108849 = (Object)new_AST_Send((Object)send108848, (Object)symbol30738, 0);
smallint10855 = (Object)new_Type_SmallInt(1);
constant23734 = (Object)new_AST_Constant((Object)smallint10855);
// =
send108850 = (Object)new_AST_Send((Object)send108849, (Object)SMB__equal, 1, (Object)constant23734);
method31369 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16605, 14, assign13737, assign13738, send108823, send108826, assign13739, send108831, send108834, assign13740, send108839, send108842, assign13741, send108847, send108850, Self);
symbol30511 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure31275 = (Object)new_Runtime_MethodClosure(method31369);
store_method((Type_Class)class5268, (Type_Symbol)symbol30511, (Runtime_MethodClosure)methodclosure31275);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable18324 = (Object)new_AST_Variable_named(L"parser");
localvariable18325 = (Object)new_AST_Variable_named(L"string");
localvariable18326 = (Object)new_AST_Variable_named(L"result");
localvariable18327 = (Object)new_AST_Variable_named(L"expression");
array16606 = (Object)new_Type_Array_with(4, (Object)localvariable18324, (Object)localvariable18325, (Object)localvariable18326, (Object)localvariable18327);
// cascadedMessageExpression
send108851 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30785, 0);
assign13742 = (Object)new_AST_Assign((Object)localvariable18324, (Object)send108851);
string10939 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant23735 = (Object)new_AST_Constant((Object)string10939);
// on:
send108852 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23735);
assign13743 = (Object)new_AST_Assign((Object)localvariable18325, (Object)send108852);
// match:
send108853 = (Object)new_AST_Send((Object)localvariable18324, (Object)symbol30695, 1, (Object)localvariable18325);
assign13744 = (Object)new_AST_Assign((Object)localvariable18326, (Object)send108853);
// class
send108854 = (Object)new_AST_Send((Object)localvariable18326, (Object)SMB_class, 0);
// should
send108855 = (Object)new_AST_Send((Object)send108854, (Object)symbol30738, 0);
// =
send108856 = (Object)new_AST_Send((Object)send108855, (Object)SMB__equal, 1, (Object)classreference11521);
// receiver
send108857 = (Object)new_AST_Send((Object)localvariable18326, (Object)symbol30591, 0);
// class
send108858 = (Object)new_AST_Send((Object)send108857, (Object)SMB_class, 0);
// should
send108859 = (Object)new_AST_Send((Object)send108858, (Object)symbol30738, 0);
// =
send108860 = (Object)new_AST_Send((Object)send108859, (Object)SMB__equal, 1, (Object)classreference11499);
// cascades
send108861 = (Object)new_AST_Send((Object)localvariable18326, (Object)symbol30610, 0);
// size
send108862 = (Object)new_AST_Send((Object)send108861, (Object)SMB_size, 0);
// should
send108863 = (Object)new_AST_Send((Object)send108862, (Object)symbol30738, 0);
smallint10856 = (Object)new_Type_SmallInt(4);
constant23736 = (Object)new_AST_Constant((Object)smallint10856);
// =
send108864 = (Object)new_AST_Send((Object)send108863, (Object)SMB__equal, 1, (Object)constant23736);
// cascades
send108865 = (Object)new_AST_Send((Object)localvariable18326, (Object)symbol30610, 0);
smallint10857 = (Object)new_Type_SmallInt(1);
constant23737 = (Object)new_AST_Constant((Object)smallint10857);
// at:
send108866 = (Object)new_AST_Send((Object)send108865, (Object)SMB_at_, 1, (Object)constant23737);
assign13745 = (Object)new_AST_Assign((Object)localvariable18327, (Object)send108866);
// class
send108867 = (Object)new_AST_Send((Object)localvariable18327, (Object)SMB_class, 0);
// should
send108868 = (Object)new_AST_Send((Object)send108867, (Object)symbol30738, 0);
// =
send108869 = (Object)new_AST_Send((Object)send108868, (Object)SMB__equal, 1, (Object)classreference11512);
// cascades
send108870 = (Object)new_AST_Send((Object)localvariable18326, (Object)symbol30610, 0);
smallint10858 = (Object)new_Type_SmallInt(2);
constant23738 = (Object)new_AST_Constant((Object)smallint10858);
// at:
send108871 = (Object)new_AST_Send((Object)send108870, (Object)SMB_at_, 1, (Object)constant23738);
assign13746 = (Object)new_AST_Assign((Object)localvariable18327, (Object)send108871);
// class
send108872 = (Object)new_AST_Send((Object)localvariable18327, (Object)SMB_class, 0);
// should
send108873 = (Object)new_AST_Send((Object)send108872, (Object)symbol30738, 0);
// =
send108874 = (Object)new_AST_Send((Object)send108873, (Object)SMB__equal, 1, (Object)classreference11511);
// cascades
send108875 = (Object)new_AST_Send((Object)localvariable18326, (Object)symbol30610, 0);
smallint10859 = (Object)new_Type_SmallInt(3);
constant23739 = (Object)new_AST_Constant((Object)smallint10859);
// at:
send108876 = (Object)new_AST_Send((Object)send108875, (Object)SMB_at_, 1, (Object)constant23739);
assign13747 = (Object)new_AST_Assign((Object)localvariable18327, (Object)send108876);
// class
send108877 = (Object)new_AST_Send((Object)localvariable18327, (Object)SMB_class, 0);
// should
send108878 = (Object)new_AST_Send((Object)send108877, (Object)symbol30738, 0);
// =
send108879 = (Object)new_AST_Send((Object)send108878, (Object)SMB__equal, 1, (Object)classreference11511);
// cascades
send108880 = (Object)new_AST_Send((Object)localvariable18326, (Object)symbol30610, 0);
smallint10860 = (Object)new_Type_SmallInt(4);
constant23740 = (Object)new_AST_Constant((Object)smallint10860);
// at:
send108881 = (Object)new_AST_Send((Object)send108880, (Object)SMB_at_, 1, (Object)constant23740);
assign13748 = (Object)new_AST_Assign((Object)localvariable18327, (Object)send108881);
// class
send108882 = (Object)new_AST_Send((Object)localvariable18327, (Object)SMB_class, 0);
// should
send108883 = (Object)new_AST_Send((Object)send108882, (Object)symbol30738, 0);
// =
send108884 = (Object)new_AST_Send((Object)send108883, (Object)SMB__equal, 1, (Object)classreference11517);
method31370 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16606, 15, assign13742, assign13743, assign13744, send108856, send108860, send108864, assign13745, send108869, assign13746, send108874, assign13747, send108879, assign13748, send108884, Self);
symbol30471 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure31276 = (Object)new_Runtime_MethodClosure(method31370);
store_method((Type_Class)class5268, (Type_Symbol)symbol30471, (Runtime_MethodClosure)methodclosure31276);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable18328 = (Object)new_AST_Variable_named(L"parser");
localvariable18329 = (Object)new_AST_Variable_named(L"string");
localvariable18330 = (Object)new_AST_Variable_named(L"message");
localvariable18331 = (Object)new_AST_Variable_named(L"return");
array16607 = (Object)new_Type_Array_with(4, (Object)localvariable18328, (Object)localvariable18329, (Object)localvariable18330, (Object)localvariable18331);
// messageExpression
send108885 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30793, 0);
assign13749 = (Object)new_AST_Assign((Object)localvariable18328, (Object)send108885);
string10940 = (Object)new_Type_String(L"self do: this and: that");
constant23741 = (Object)new_AST_Constant((Object)string10940);
// on:
send108886 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23741);
assign13750 = (Object)new_AST_Assign((Object)localvariable18329, (Object)send108886);
// match:
send108887 = (Object)new_AST_Send((Object)localvariable18328, (Object)symbol30695, 1, (Object)localvariable18329);
assign13751 = (Object)new_AST_Assign((Object)localvariable18330, (Object)send108887);
// receiver
send108888 = (Object)new_AST_Send((Object)localvariable18330, (Object)symbol30591, 0);
// class
send108889 = (Object)new_AST_Send((Object)send108888, (Object)SMB_class, 0);
// should
send108890 = (Object)new_AST_Send((Object)send108889, (Object)symbol30738, 0);
// =
send108891 = (Object)new_AST_Send((Object)send108890, (Object)SMB__equal, 1, (Object)classreference11516);
// return
send108892 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30774, 0);
assign13752 = (Object)new_AST_Assign((Object)localvariable18328, (Object)send108892);
string10941 = (Object)new_Type_String(L"^ self do: this and: that");
constant23742 = (Object)new_AST_Constant((Object)string10941);
// on:
send108893 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23742);
assign13753 = (Object)new_AST_Assign((Object)localvariable18329, (Object)send108893);
// match:
send108894 = (Object)new_AST_Send((Object)localvariable18328, (Object)symbol30695, 1, (Object)localvariable18329);
assign13754 = (Object)new_AST_Assign((Object)localvariable18331, (Object)send108894);
// class
send108895 = (Object)new_AST_Send((Object)localvariable18331, (Object)SMB_class, 0);
// should
send108896 = (Object)new_AST_Send((Object)send108895, (Object)symbol30738, 0);
// =
send108897 = (Object)new_AST_Send((Object)send108896, (Object)SMB__equal, 1, (Object)classreference11522);
// expression
send108898 = (Object)new_AST_Send((Object)localvariable18331, (Object)symbol30572, 0);
// receiver
send108899 = (Object)new_AST_Send((Object)send108898, (Object)symbol30591, 0);
// class
send108900 = (Object)new_AST_Send((Object)send108899, (Object)SMB_class, 0);
// should
send108901 = (Object)new_AST_Send((Object)send108900, (Object)symbol30738, 0);
// =
send108902 = (Object)new_AST_Send((Object)send108901, (Object)SMB__equal, 1, (Object)classreference11516);
method31371 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16607, 10, assign13749, assign13750, assign13751, send108891, assign13752, assign13753, assign13754, send108897, send108902, Self);
symbol30463 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure31277 = (Object)new_Runtime_MethodClosure(method31371);
store_method((Type_Class)class5268, (Type_Symbol)symbol30463, (Runtime_MethodClosure)methodclosure31277);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable18332 = (Object)new_AST_Variable_named(L"parser");
localvariable18333 = (Object)new_AST_Variable_named(L"string");
localvariable18334 = (Object)new_AST_Variable_named(L"result");
array16608 = (Object)new_Type_Array_with(3, (Object)localvariable18332, (Object)localvariable18333, (Object)localvariable18334);
// unaryExpression
send108903 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30783, 0);
assign13755 = (Object)new_AST_Assign((Object)localvariable18332, (Object)send108903);
string10942 = (Object)new_Type_String(L"abc def ghi ");
constant23743 = (Object)new_AST_Constant((Object)string10942);
// on:
send108904 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23743);
assign13756 = (Object)new_AST_Assign((Object)localvariable18333, (Object)send108904);
// match:
send108905 = (Object)new_AST_Send((Object)localvariable18332, (Object)symbol30695, 1, (Object)localvariable18333);
assign13757 = (Object)new_AST_Assign((Object)localvariable18334, (Object)send108905);
// class
send108906 = (Object)new_AST_Send((Object)localvariable18334, (Object)SMB_class, 0);
// should
send108907 = (Object)new_AST_Send((Object)send108906, (Object)symbol30738, 0);
// =
send108908 = (Object)new_AST_Send((Object)send108907, (Object)SMB__equal, 1, (Object)classreference11517);
// selector
send108909 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30580, 0);
// class
send108910 = (Object)new_AST_Send((Object)send108909, (Object)SMB_class, 0);
// should
send108911 = (Object)new_AST_Send((Object)send108910, (Object)symbol30738, 0);
// =
send108912 = (Object)new_AST_Send((Object)send108911, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send108913 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30580, 0);
// selector
send108914 = (Object)new_AST_Send((Object)send108913, (Object)symbol30580, 0);
// printString
send108915 = (Object)new_AST_Send((Object)send108914, (Object)symbol30698, 0);
// should
send108916 = (Object)new_AST_Send((Object)send108915, (Object)symbol30738, 0);
string10943 = (Object)new_Type_String(L"ghi");
constant23744 = (Object)new_AST_Constant((Object)string10943);
// =
send108917 = (Object)new_AST_Send((Object)send108916, (Object)SMB__equal, 1, (Object)constant23744);
// receiver
send108918 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30591, 0);
assign13758 = (Object)new_AST_Assign((Object)localvariable18334, (Object)send108918);
// class
send108919 = (Object)new_AST_Send((Object)localvariable18334, (Object)SMB_class, 0);
// should
send108920 = (Object)new_AST_Send((Object)send108919, (Object)symbol30738, 0);
// =
send108921 = (Object)new_AST_Send((Object)send108920, (Object)SMB__equal, 1, (Object)classreference11517);
// selector
send108922 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30580, 0);
// class
send108923 = (Object)new_AST_Send((Object)send108922, (Object)SMB_class, 0);
// should
send108924 = (Object)new_AST_Send((Object)send108923, (Object)symbol30738, 0);
// =
send108925 = (Object)new_AST_Send((Object)send108924, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send108926 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30580, 0);
// selector
send108927 = (Object)new_AST_Send((Object)send108926, (Object)symbol30580, 0);
// printString
send108928 = (Object)new_AST_Send((Object)send108927, (Object)symbol30698, 0);
// should
send108929 = (Object)new_AST_Send((Object)send108928, (Object)symbol30738, 0);
string10944 = (Object)new_Type_String(L"def");
constant23745 = (Object)new_AST_Constant((Object)string10944);
// =
send108930 = (Object)new_AST_Send((Object)send108929, (Object)SMB__equal, 1, (Object)constant23745);
// receiver
send108931 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30591, 0);
// class
send108932 = (Object)new_AST_Send((Object)send108931, (Object)SMB_class, 0);
// should
send108933 = (Object)new_AST_Send((Object)send108932, (Object)symbol30738, 0);
// =
send108934 = (Object)new_AST_Send((Object)send108933, (Object)SMB__equal, 1, (Object)classreference11507);
// receiver
send108935 = (Object)new_AST_Send((Object)localvariable18334, (Object)symbol30591, 0);
// name
send108936 = (Object)new_AST_Send((Object)send108935, (Object)SMB_name, 0);
// should
send108937 = (Object)new_AST_Send((Object)send108936, (Object)symbol30738, 0);
string10945 = (Object)new_Type_String(L"abc");
constant23746 = (Object)new_AST_Constant((Object)string10945);
// =
send108938 = (Object)new_AST_Send((Object)send108937, (Object)SMB__equal, 1, (Object)constant23746);
// position
send108939 = (Object)new_AST_Send((Object)localvariable18333, (Object)symbol30757, 0);
// should
send108940 = (Object)new_AST_Send((Object)send108939, (Object)symbol30738, 0);
smallint10861 = (Object)new_Type_SmallInt(12);
constant23747 = (Object)new_AST_Constant((Object)smallint10861);
// =
send108941 = (Object)new_AST_Send((Object)send108940, (Object)SMB__equal, 1, (Object)constant23747);
string10946 = (Object)new_Type_String(L"abc");
constant23748 = (Object)new_AST_Constant((Object)string10946);
// on:
send108942 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23748);
assign13759 = (Object)new_AST_Assign((Object)localvariable18333, (Object)send108942);
// match:
send108943 = (Object)new_AST_Send((Object)localvariable18332, (Object)symbol30695, 1, (Object)localvariable18333);
// should
send108944 = (Object)new_AST_Send((Object)send108943, (Object)symbol30738, 0);
// be
send108945 = (Object)new_AST_Send((Object)send108944, (Object)symbol30837, 0);
// isNil
send108946 = (Object)new_AST_Send((Object)send108945, (Object)SMB_isNil, 0);
method31372 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16608, 16, assign13755, assign13756, assign13757, send108908, send108912, send108917, assign13758, send108921, send108925, send108930, send108934, send108938, send108941, assign13759, send108946, Self);
symbol30455 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure31278 = (Object)new_Runtime_MethodClosure(method31372);
store_method((Type_Class)class5268, (Type_Symbol)symbol30455, (Runtime_MethodClosure)methodclosure31278);


// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable18335 = (Object)new_AST_Variable_named(L"parser");
localvariable18336 = (Object)new_AST_Variable_named(L"string");
localvariable18337 = (Object)new_AST_Variable_named(L"result");
array16609 = (Object)new_Type_Array_with(3, (Object)localvariable18335, (Object)localvariable18336, (Object)localvariable18337);
// binaryObjectDescription
send108947 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30788, 0);
assign13760 = (Object)new_AST_Assign((Object)localvariable18335, (Object)send108947);
string10947 = (Object)new_Type_String(L"abc + ghi ");
constant23749 = (Object)new_AST_Constant((Object)string10947);
// on:
send108948 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23749);
assign13761 = (Object)new_AST_Assign((Object)localvariable18336, (Object)send108948);
// match:
send108949 = (Object)new_AST_Send((Object)localvariable18335, (Object)symbol30695, 1, (Object)localvariable18336);
assign13762 = (Object)new_AST_Assign((Object)localvariable18337, (Object)send108949);
// class
send108950 = (Object)new_AST_Send((Object)localvariable18337, (Object)SMB_class, 0);
// should
send108951 = (Object)new_AST_Send((Object)send108950, (Object)symbol30738, 0);
// =
send108952 = (Object)new_AST_Send((Object)send108951, (Object)SMB__equal, 1, (Object)classreference11512);
// selector
send108953 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30580, 0);
// printString
send108954 = (Object)new_AST_Send((Object)send108953, (Object)symbol30698, 0);
// should
send108955 = (Object)new_AST_Send((Object)send108954, (Object)symbol30738, 0);
string10948 = (Object)new_Type_String(L"+");
constant23750 = (Object)new_AST_Constant((Object)string10948);
// =
send108956 = (Object)new_AST_Send((Object)send108955, (Object)SMB__equal, 1, (Object)constant23750);
// receiver
send108957 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30591, 0);
// class
send108958 = (Object)new_AST_Send((Object)send108957, (Object)SMB_class, 0);
// should
send108959 = (Object)new_AST_Send((Object)send108958, (Object)symbol30738, 0);
// =
send108960 = (Object)new_AST_Send((Object)send108959, (Object)SMB__equal, 1, (Object)classreference11507);
// receiver
send108961 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30591, 0);
// name
send108962 = (Object)new_AST_Send((Object)send108961, (Object)SMB_name, 0);
// should
send108963 = (Object)new_AST_Send((Object)send108962, (Object)symbol30738, 0);
string10949 = (Object)new_Type_String(L"abc");
constant23751 = (Object)new_AST_Constant((Object)string10949);
// =
send108964 = (Object)new_AST_Send((Object)send108963, (Object)SMB__equal, 1, (Object)constant23751);
// argument
send108965 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30598, 0);
// class
send108966 = (Object)new_AST_Send((Object)send108965, (Object)SMB_class, 0);
// should
send108967 = (Object)new_AST_Send((Object)send108966, (Object)symbol30738, 0);
// =
send108968 = (Object)new_AST_Send((Object)send108967, (Object)SMB__equal, 1, (Object)classreference11507);
// argument
send108969 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30598, 0);
// name
send108970 = (Object)new_AST_Send((Object)send108969, (Object)SMB_name, 0);
// should
send108971 = (Object)new_AST_Send((Object)send108970, (Object)symbol30738, 0);
string10950 = (Object)new_Type_String(L"ghi");
constant23752 = (Object)new_AST_Constant((Object)string10950);
// =
send108972 = (Object)new_AST_Send((Object)send108971, (Object)SMB__equal, 1, (Object)constant23752);
// position
send108973 = (Object)new_AST_Send((Object)localvariable18336, (Object)symbol30757, 0);
// should
send108974 = (Object)new_AST_Send((Object)send108973, (Object)symbol30738, 0);
smallint10862 = (Object)new_Type_SmallInt(9);
constant23753 = (Object)new_AST_Constant((Object)smallint10862);
// =
send108975 = (Object)new_AST_Send((Object)send108974, (Object)SMB__equal, 1, (Object)constant23753);
string10951 = (Object)new_Type_String(L"abc + ghi * c ");
constant23754 = (Object)new_AST_Constant((Object)string10951);
// on:
send108976 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23754);
assign13763 = (Object)new_AST_Assign((Object)localvariable18336, (Object)send108976);
// match:
send108977 = (Object)new_AST_Send((Object)localvariable18335, (Object)symbol30695, 1, (Object)localvariable18336);
assign13764 = (Object)new_AST_Assign((Object)localvariable18337, (Object)send108977);
// class
send108978 = (Object)new_AST_Send((Object)localvariable18337, (Object)SMB_class, 0);
// should
send108979 = (Object)new_AST_Send((Object)send108978, (Object)symbol30738, 0);
// =
send108980 = (Object)new_AST_Send((Object)send108979, (Object)SMB__equal, 1, (Object)classreference11512);
// selector
send108981 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30580, 0);
// printString
send108982 = (Object)new_AST_Send((Object)send108981, (Object)symbol30698, 0);
// should
send108983 = (Object)new_AST_Send((Object)send108982, (Object)symbol30738, 0);
string10952 = (Object)new_Type_String(L"*");
constant23755 = (Object)new_AST_Constant((Object)string10952);
// =
send108984 = (Object)new_AST_Send((Object)send108983, (Object)SMB__equal, 1, (Object)constant23755);
// argument
send108985 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30598, 0);
// class
send108986 = (Object)new_AST_Send((Object)send108985, (Object)SMB_class, 0);
// should
send108987 = (Object)new_AST_Send((Object)send108986, (Object)symbol30738, 0);
// =
send108988 = (Object)new_AST_Send((Object)send108987, (Object)SMB__equal, 1, (Object)classreference11507);
// argument
send108989 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30598, 0);
// name
send108990 = (Object)new_AST_Send((Object)send108989, (Object)SMB_name, 0);
// should
send108991 = (Object)new_AST_Send((Object)send108990, (Object)symbol30738, 0);
string10953 = (Object)new_Type_String(L"c");
constant23756 = (Object)new_AST_Constant((Object)string10953);
// =
send108992 = (Object)new_AST_Send((Object)send108991, (Object)SMB__equal, 1, (Object)constant23756);
// receiver
send108993 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30591, 0);
assign13765 = (Object)new_AST_Assign((Object)localvariable18337, (Object)send108993);
// class
send108994 = (Object)new_AST_Send((Object)localvariable18337, (Object)SMB_class, 0);
// should
send108995 = (Object)new_AST_Send((Object)send108994, (Object)symbol30738, 0);
// =
send108996 = (Object)new_AST_Send((Object)send108995, (Object)SMB__equal, 1, (Object)classreference11512);
// selector
send108997 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30580, 0);
// printString
send108998 = (Object)new_AST_Send((Object)send108997, (Object)symbol30698, 0);
// should
send108999 = (Object)new_AST_Send((Object)send108998, (Object)symbol30738, 0);
string10954 = (Object)new_Type_String(L"+");
constant23757 = (Object)new_AST_Constant((Object)string10954);
// =
send109000 = (Object)new_AST_Send((Object)send108999, (Object)SMB__equal, 1, (Object)constant23757);
// receiver
send109001 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30591, 0);
// class
send109002 = (Object)new_AST_Send((Object)send109001, (Object)SMB_class, 0);
// should
send109003 = (Object)new_AST_Send((Object)send109002, (Object)symbol30738, 0);
// =
send109004 = (Object)new_AST_Send((Object)send109003, (Object)SMB__equal, 1, (Object)classreference11507);
// receiver
send109005 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30591, 0);
// name
send109006 = (Object)new_AST_Send((Object)send109005, (Object)SMB_name, 0);
// should
send109007 = (Object)new_AST_Send((Object)send109006, (Object)symbol30738, 0);
string10955 = (Object)new_Type_String(L"abc");
constant23758 = (Object)new_AST_Constant((Object)string10955);
// =
send109008 = (Object)new_AST_Send((Object)send109007, (Object)SMB__equal, 1, (Object)constant23758);
// argument
send109009 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30598, 0);
// class
send109010 = (Object)new_AST_Send((Object)send109009, (Object)SMB_class, 0);
// should
send109011 = (Object)new_AST_Send((Object)send109010, (Object)symbol30738, 0);
// =
send109012 = (Object)new_AST_Send((Object)send109011, (Object)SMB__equal, 1, (Object)classreference11507);
// argument
send109013 = (Object)new_AST_Send((Object)localvariable18337, (Object)symbol30598, 0);
// name
send109014 = (Object)new_AST_Send((Object)send109013, (Object)SMB_name, 0);
// should
send109015 = (Object)new_AST_Send((Object)send109014, (Object)symbol30738, 0);
string10956 = (Object)new_Type_String(L"ghi");
constant23759 = (Object)new_AST_Constant((Object)string10956);
// =
send109016 = (Object)new_AST_Send((Object)send109015, (Object)SMB__equal, 1, (Object)constant23759);
// position
send109017 = (Object)new_AST_Send((Object)localvariable18336, (Object)symbol30757, 0);
// should
send109018 = (Object)new_AST_Send((Object)send109017, (Object)symbol30738, 0);
smallint10863 = (Object)new_Type_SmallInt(13);
constant23760 = (Object)new_AST_Constant((Object)smallint10863);
// =
send109019 = (Object)new_AST_Send((Object)send109018, (Object)SMB__equal, 1, (Object)constant23760);
method31373 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16609, 25, assign13760, assign13761, assign13762, send108952, send108956, send108960, send108964, send108968, send108972, send108975, assign13763, assign13764, send108980, send108984, send108988, send108992, assign13765, send108996, send109000, send109004, send109008, send109012, send109016, send109019, Self);
symbol30508 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure31279 = (Object)new_Runtime_MethodClosure(method31373);
store_method((Type_Class)class5268, (Type_Symbol)symbol30508, (Runtime_MethodClosure)methodclosure31279);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable18338 = (Object)new_AST_Variable_named(L"parser");
localvariable18339 = (Object)new_AST_Variable_named(L"string");
localvariable18340 = (Object)new_AST_Variable_named(L"result");
array16610 = (Object)new_Type_Array_with(3, (Object)localvariable18338, (Object)localvariable18339, (Object)localvariable18340);
// method
send109020 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30838, 0);
assign13766 = (Object)new_AST_Assign((Object)localvariable18338, (Object)send109020);
string10957 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant23761 = (Object)new_AST_Constant((Object)string10957);
assign13767 = (Object)new_AST_Assign((Object)localvariable18339, (Object)constant23761);
// parse:
send109021 = (Object)new_AST_Send((Object)localvariable18338, (Object)symbol30709, 1, (Object)localvariable18339);
assign13768 = (Object)new_AST_Assign((Object)localvariable18340, (Object)send109021);
// hasReturnExpression
send109022 = (Object)new_AST_Send((Object)localvariable18340, (Object)symbol30588, 0);
// should
send109023 = (Object)new_AST_Send((Object)send109022, (Object)symbol30738, 0);
// be
send109024 = (Object)new_AST_Send((Object)send109023, (Object)symbol30837, 0);
// true
send109025 = (Object)new_AST_Send((Object)send109024, (Object)symbol30839, 0);
// class
send109026 = (Object)new_AST_Send((Object)localvariable18340, (Object)SMB_class, 0);
// should
send109027 = (Object)new_AST_Send((Object)send109026, (Object)symbol30738, 0);
// =
send109028 = (Object)new_AST_Send((Object)send109027, (Object)SMB__equal, 1, (Object)classreference11501);
// message
send109029 = (Object)new_AST_Send((Object)localvariable18340, (Object)symbol30603, 0);
// class
send109030 = (Object)new_AST_Send((Object)send109029, (Object)SMB_class, 0);
// should
send109031 = (Object)new_AST_Send((Object)send109030, (Object)symbol30738, 0);
// =
send109032 = (Object)new_AST_Send((Object)send109031, (Object)SMB__equal, 1, (Object)classreference11525);
// temporaries
send109033 = (Object)new_AST_Send((Object)localvariable18340, (Object)symbol30604, 0);
// size
send109034 = (Object)new_AST_Send((Object)send109033, (Object)SMB_size, 0);
// should
send109035 = (Object)new_AST_Send((Object)send109034, (Object)symbol30738, 0);
smallint10864 = (Object)new_Type_SmallInt(3);
constant23762 = (Object)new_AST_Constant((Object)smallint10864);
// =
send109036 = (Object)new_AST_Send((Object)send109035, (Object)SMB__equal, 1, (Object)constant23762);
// annotations
send109037 = (Object)new_AST_Send((Object)localvariable18340, (Object)symbol30601, 0);
// size
send109038 = (Object)new_AST_Send((Object)send109037, (Object)SMB_size, 0);
// should
send109039 = (Object)new_AST_Send((Object)send109038, (Object)symbol30738, 0);
smallint10865 = (Object)new_Type_SmallInt(3);
constant23763 = (Object)new_AST_Constant((Object)smallint10865);
// =
send109040 = (Object)new_AST_Send((Object)send109039, (Object)SMB__equal, 1, (Object)constant23763);
// statements
send109041 = (Object)new_AST_Send((Object)localvariable18340, (Object)symbol30599, 0);
// size
send109042 = (Object)new_AST_Send((Object)send109041, (Object)SMB_size, 0);
// should
send109043 = (Object)new_AST_Send((Object)send109042, (Object)symbol30738, 0);
smallint10866 = (Object)new_Type_SmallInt(2);
constant23764 = (Object)new_AST_Constant((Object)smallint10866);
// =
send109044 = (Object)new_AST_Send((Object)send109043, (Object)SMB__equal, 1, (Object)constant23764);
method31374 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16610, 10, assign13766, assign13767, assign13768, send109025, send109028, send109032, send109036, send109040, send109044, Self);
symbol30475 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure31280 = (Object)new_Runtime_MethodClosure(method31374);
store_method((Type_Class)class5268, (Type_Symbol)symbol30475, (Runtime_MethodClosure)methodclosure31280);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable18341 = (Object)new_AST_Variable_named(L"parser");
array16611 = (Object)new_Type_Array_with(1, (Object)localvariable18341);
string10958 = (Object)new_Type_String(L"COMMENT");
constant23765 = (Object)new_AST_Constant((Object)string10958);
// commentFormat
send109045 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30819, 0);
// named:parsing:
send109046 = (Object)new_AST_Send((Object)classreference11539, (Object)symbol30817, 2, (Object)constant23765, (Object)send109045);
assign13769 = (Object)new_AST_Assign((Object)localvariable18341, (Object)send109046);
string10959 = (Object)new_Type_String(L"\"Test\"");
constant23766 = (Object)new_AST_Constant((Object)string10959);
// parse:
send109047 = (Object)new_AST_Send((Object)localvariable18341, (Object)symbol30709, 1, (Object)constant23766);
// should
send109048 = (Object)new_AST_Send((Object)send109047, (Object)symbol30738, 0);
// not
send109049 = (Object)new_AST_Send((Object)send109048, (Object)SMB_not, 0);
// be
send109050 = (Object)new_AST_Send((Object)send109049, (Object)symbol30837, 0);
// isNil
send109051 = (Object)new_AST_Send((Object)send109050, (Object)SMB_isNil, 0);
string10960 = (Object)new_Type_String(L"\"Test");
constant23767 = (Object)new_AST_Constant((Object)string10960);
// parse:
send109052 = (Object)new_AST_Send((Object)localvariable18341, (Object)symbol30709, 1, (Object)constant23767);
// should
send109053 = (Object)new_AST_Send((Object)send109052, (Object)symbol30738, 0);
// be
send109054 = (Object)new_AST_Send((Object)send109053, (Object)symbol30837, 0);
// isNil
send109055 = (Object)new_AST_Send((Object)send109054, (Object)SMB_isNil, 0);
method31375 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16611, 4, assign13769, send109051, send109055, Self);
symbol30501 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure31281 = (Object)new_Runtime_MethodClosure(method31375);
store_method((Type_Class)class5268, (Type_Symbol)symbol30501, (Runtime_MethodClosure)methodclosure31281);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable18342 = (Object)new_AST_Variable_named(L"parser");
localvariable18343 = (Object)new_AST_Variable_named(L"string");
localvariable18344 = (Object)new_AST_Variable_named(L"result");
localvariable18345 = (Object)new_AST_Variable_named(L"arg");
array16612 = (Object)new_Type_Array_with(4, (Object)localvariable18342, (Object)localvariable18343, (Object)localvariable18344, (Object)localvariable18345);
// annotation
send109056 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30795, 0);
assign13770 = (Object)new_AST_Assign((Object)localvariable18342, (Object)send109056);
string10961 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant23768 = (Object)new_AST_Constant((Object)string10961);
// on:
send109057 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23768);
assign13771 = (Object)new_AST_Assign((Object)localvariable18343, (Object)send109057);
// match:
send109058 = (Object)new_AST_Send((Object)localvariable18342, (Object)symbol30695, 1, (Object)localvariable18343);
assign13772 = (Object)new_AST_Assign((Object)localvariable18344, (Object)send109058);
// class
send109059 = (Object)new_AST_Send((Object)localvariable18344, (Object)SMB_class, 0);
// should
send109060 = (Object)new_AST_Send((Object)send109059, (Object)symbol30738, 0);
// =
send109061 = (Object)new_AST_Send((Object)send109060, (Object)SMB__equal, 1, (Object)classreference11494);
// keywords
send109062 = (Object)new_AST_Send((Object)localvariable18344, (Object)symbol30585, 0);
// asArray
send109063 = (Object)new_AST_Send((Object)send109062, (Object)SMB_asArray, 0);
constant23769 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send109064 = (Object)new_AST_Send((Object)send109063, (Object)symbol30816, 1, (Object)constant23769);
// should
send109065 = (Object)new_AST_Send((Object)send109064, (Object)symbol30738, 0);
localvariable18346 = (Object)new_AST_Variable_named(L"receiver");
array16613 = (Object)new_Type_Array_with(1, (Object)localvariable18346);
smallint10867 = (Object)new_Type_SmallInt(1);
constant23770 = (Object)new_AST_Constant((Object)smallint10867);
symbol30841 = (Object)new_Type_Symbol_cached(L"abc");
constant23771 = (Object)new_AST_Constant((Object)symbol30841);
// at:put:
send109066 = (Object)new_AST_Send((Object)localvariable18346, (Object)SMB_at_put_, 2, (Object)constant23770, (Object)constant23771);
smallint10868 = (Object)new_Type_SmallInt(2);
constant23772 = (Object)new_AST_Constant((Object)smallint10868);
symbol30842 = (Object)new_Type_Symbol_cached(L"def");
constant23773 = (Object)new_AST_Constant((Object)symbol30842);
// at:put:
send109067 = (Object)new_AST_Send((Object)localvariable18346, (Object)SMB_at_put_, 2, (Object)constant23772, (Object)constant23773);
smallint10869 = (Object)new_Type_SmallInt(3);
constant23774 = (Object)new_AST_Constant((Object)smallint10869);
symbol30843 = (Object)new_Type_Symbol_cached(L"ghi");
constant23775 = (Object)new_AST_Constant((Object)symbol30843);
// at:put:
send109068 = (Object)new_AST_Send((Object)localvariable18346, (Object)SMB_at_put_, 2, (Object)constant23774, (Object)constant23775);
// yourself
send109069 = (Object)new_AST_Send((Object)localvariable18346, (Object)symbol30410, 0);
block7424 = (Object)new_AST_Block_with((Type_Array)array16613, (Type_Array)empty_Type_Array, 1, 4, send109066, send109067, send109068, send109069);
smallint10870 = (Object)new_Type_SmallInt(3);
constant23776 = (Object)new_AST_Constant((Object)smallint10870);
// new:
send109070 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23776);
// value:
send109071 = (Object)new_AST_Send((Object)block7424, (Object)SMB_value_, 1, (Object)send109070);
// =
send109072 = (Object)new_AST_Send((Object)send109065, (Object)SMB__equal, 1, (Object)send109071);
// arguments
send109073 = (Object)new_AST_Send((Object)localvariable18344, (Object)symbol30587, 0);
// first
send109074 = (Object)new_AST_Send((Object)send109073, (Object)symbol30549, 0);
assign13773 = (Object)new_AST_Assign((Object)localvariable18345, (Object)send109074);
// class
send109075 = (Object)new_AST_Send((Object)localvariable18345, (Object)SMB_class, 0);
// should
send109076 = (Object)new_AST_Send((Object)send109075, (Object)symbol30738, 0);
// =
send109077 = (Object)new_AST_Send((Object)send109076, (Object)SMB__equal, 1, (Object)classreference11499);
// arguments
send109078 = (Object)new_AST_Send((Object)localvariable18344, (Object)symbol30587, 0);
smallint10871 = (Object)new_Type_SmallInt(2);
constant23777 = (Object)new_AST_Constant((Object)smallint10871);
// at:
send109079 = (Object)new_AST_Send((Object)send109078, (Object)SMB_at_, 1, (Object)constant23777);
assign13774 = (Object)new_AST_Assign((Object)localvariable18345, (Object)send109079);
// class
send109080 = (Object)new_AST_Send((Object)localvariable18345, (Object)SMB_class, 0);
// should
send109081 = (Object)new_AST_Send((Object)send109080, (Object)symbol30738, 0);
// =
send109082 = (Object)new_AST_Send((Object)send109081, (Object)SMB__equal, 1, (Object)classreference11512);
// arguments
send109083 = (Object)new_AST_Send((Object)localvariable18344, (Object)symbol30587, 0);
smallint10872 = (Object)new_Type_SmallInt(3);
constant23778 = (Object)new_AST_Constant((Object)smallint10872);
// at:
send109084 = (Object)new_AST_Send((Object)send109083, (Object)SMB_at_, 1, (Object)constant23778);
assign13775 = (Object)new_AST_Assign((Object)localvariable18345, (Object)send109084);
// class
send109085 = (Object)new_AST_Send((Object)localvariable18345, (Object)SMB_class, 0);
// should
send109086 = (Object)new_AST_Send((Object)send109085, (Object)symbol30738, 0);
// =
send109087 = (Object)new_AST_Send((Object)send109086, (Object)SMB__equal, 1, (Object)classreference11517);
// atEnd
send109088 = (Object)new_AST_Send((Object)localvariable18343, (Object)SMB_atEnd, 0);
// should
send109089 = (Object)new_AST_Send((Object)send109088, (Object)symbol30738, 0);
// be
send109090 = (Object)new_AST_Send((Object)send109089, (Object)symbol30837, 0);
// true
send109091 = (Object)new_AST_Send((Object)send109090, (Object)symbol30839, 0);
string10962 = (Object)new_Type_String(L"<abc> ");
constant23779 = (Object)new_AST_Constant((Object)string10962);
// on:
send109092 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23779);
assign13776 = (Object)new_AST_Assign((Object)localvariable18343, (Object)send109092);
// match:
send109093 = (Object)new_AST_Send((Object)localvariable18342, (Object)symbol30695, 1, (Object)localvariable18343);
assign13777 = (Object)new_AST_Assign((Object)localvariable18344, (Object)send109093);
// class
send109094 = (Object)new_AST_Send((Object)localvariable18344, (Object)SMB_class, 0);
// should
send109095 = (Object)new_AST_Send((Object)send109094, (Object)symbol30738, 0);
// =
send109096 = (Object)new_AST_Send((Object)send109095, (Object)SMB__equal, 1, (Object)classreference11497);
// selector
send109097 = (Object)new_AST_Send((Object)localvariable18344, (Object)symbol30580, 0);
// asString
send109098 = (Object)new_AST_Send((Object)send109097, (Object)SMB_asString, 0);
// should
send109099 = (Object)new_AST_Send((Object)send109098, (Object)symbol30738, 0);
string10963 = (Object)new_Type_String(L"abc");
constant23780 = (Object)new_AST_Constant((Object)string10963);
// =
send109100 = (Object)new_AST_Send((Object)send109099, (Object)SMB__equal, 1, (Object)constant23780);
// position
send109101 = (Object)new_AST_Send((Object)localvariable18343, (Object)symbol30757, 0);
// should
send109102 = (Object)new_AST_Send((Object)send109101, (Object)symbol30738, 0);
smallint10873 = (Object)new_Type_SmallInt(5);
constant23781 = (Object)new_AST_Constant((Object)smallint10873);
// =
send109103 = (Object)new_AST_Send((Object)send109102, (Object)SMB__equal, 1, (Object)constant23781);
string10964 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant23782 = (Object)new_AST_Constant((Object)string10964);
// on:
send109104 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23782);
assign13778 = (Object)new_AST_Assign((Object)localvariable18343, (Object)send109104);
// match:
send109105 = (Object)new_AST_Send((Object)localvariable18342, (Object)symbol30695, 1, (Object)localvariable18343);
assign13779 = (Object)new_AST_Assign((Object)localvariable18344, (Object)send109105);
// class
send109106 = (Object)new_AST_Send((Object)localvariable18344, (Object)SMB_class, 0);
// should
send109107 = (Object)new_AST_Send((Object)send109106, (Object)symbol30738, 0);
// =
send109108 = (Object)new_AST_Send((Object)send109107, (Object)SMB__equal, 1, (Object)classreference11494);
// keywords
send109109 = (Object)new_AST_Send((Object)localvariable18344, (Object)symbol30585, 0);
// asArray
send109110 = (Object)new_AST_Send((Object)send109109, (Object)SMB_asArray, 0);
constant23783 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send109111 = (Object)new_AST_Send((Object)send109110, (Object)symbol30816, 1, (Object)constant23783);
// should
send109112 = (Object)new_AST_Send((Object)send109111, (Object)symbol30738, 0);
localvariable18347 = (Object)new_AST_Variable_named(L"receiver");
array16614 = (Object)new_Type_Array_with(1, (Object)localvariable18347);
smallint10874 = (Object)new_Type_SmallInt(1);
constant23784 = (Object)new_AST_Constant((Object)smallint10874);
string10965 = (Object)new_Type_String(L"temps");
constant23785 = (Object)new_AST_Constant((Object)string10965);
// at:put:
send109113 = (Object)new_AST_Send((Object)localvariable18347, (Object)SMB_at_put_, 2, (Object)constant23784, (Object)constant23785);
smallint10875 = (Object)new_Type_SmallInt(2);
constant23786 = (Object)new_AST_Constant((Object)smallint10875);
string10966 = (Object)new_Type_String(L"annotations");
constant23787 = (Object)new_AST_Constant((Object)string10966);
// at:put:
send109114 = (Object)new_AST_Send((Object)localvariable18347, (Object)SMB_at_put_, 2, (Object)constant23786, (Object)constant23787);
smallint10876 = (Object)new_Type_SmallInt(3);
constant23788 = (Object)new_AST_Constant((Object)smallint10876);
string10967 = (Object)new_Type_String(L"statements");
constant23789 = (Object)new_AST_Constant((Object)string10967);
// at:put:
send109115 = (Object)new_AST_Send((Object)localvariable18347, (Object)SMB_at_put_, 2, (Object)constant23788, (Object)constant23789);
// yourself
send109116 = (Object)new_AST_Send((Object)localvariable18347, (Object)symbol30410, 0);
block7425 = (Object)new_AST_Block_with((Type_Array)array16614, (Type_Array)empty_Type_Array, 1, 4, send109113, send109114, send109115, send109116);
smallint10877 = (Object)new_Type_SmallInt(3);
constant23790 = (Object)new_AST_Constant((Object)smallint10877);
// new:
send109117 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23790);
// value:
send109118 = (Object)new_AST_Send((Object)block7425, (Object)SMB_value_, 1, (Object)send109117);
// =
send109119 = (Object)new_AST_Send((Object)send109112, (Object)SMB__equal, 1, (Object)send109118);
// atEnd
send109120 = (Object)new_AST_Send((Object)localvariable18343, (Object)SMB_atEnd, 0);
// should
send109121 = (Object)new_AST_Send((Object)send109120, (Object)symbol30738, 0);
// be
send109122 = (Object)new_AST_Send((Object)send109121, (Object)symbol30837, 0);
// true
send109123 = (Object)new_AST_Send((Object)send109122, (Object)symbol30839, 0);
method31376 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16612, 23, assign13770, assign13771, assign13772, send109061, send109072, assign13773, send109077, assign13774, send109082, assign13775, send109087, send109091, assign13776, assign13777, send109096, send109100, send109103, assign13778, assign13779, send109108, send109119, send109123, Self);
symbol30493 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure31282 = (Object)new_Runtime_MethodClosure(method31376);
store_method((Type_Class)class5268, (Type_Symbol)symbol30493, (Runtime_MethodClosure)methodclosure31282);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable18348 = (Object)new_AST_Variable_named(L"parser");
localvariable18349 = (Object)new_AST_Variable_named(L"string");
localvariable18350 = (Object)new_AST_Variable_named(L"result");
array16615 = (Object)new_Type_Array_with(3, (Object)localvariable18348, (Object)localvariable18349, (Object)localvariable18350);
// symbolConstant
send109124 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30779, 0);
assign13780 = (Object)new_AST_Assign((Object)localvariable18348, (Object)send109124);
string10968 = (Object)new_Type_String(L"#abc");
constant23791 = (Object)new_AST_Constant((Object)string10968);
// on:
send109125 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23791);
assign13781 = (Object)new_AST_Assign((Object)localvariable18349, (Object)send109125);
// match:
send109126 = (Object)new_AST_Send((Object)localvariable18348, (Object)symbol30695, 1, (Object)localvariable18349);
assign13782 = (Object)new_AST_Assign((Object)localvariable18350, (Object)send109126);
// class
send109127 = (Object)new_AST_Send((Object)localvariable18350, (Object)SMB_class, 0);
// should
send109128 = (Object)new_AST_Send((Object)send109127, (Object)symbol30738, 0);
// =
send109129 = (Object)new_AST_Send((Object)send109128, (Object)SMB__equal, 1, (Object)classreference11505);
// symbol
send109130 = (Object)new_AST_Send((Object)localvariable18350, (Object)symbol30563, 0);
// should
send109131 = (Object)new_AST_Send((Object)send109130, (Object)symbol30738, 0);
string10969 = (Object)new_Type_String(L"abc");
constant23792 = (Object)new_AST_Constant((Object)string10969);
// =
send109132 = (Object)new_AST_Send((Object)send109131, (Object)SMB__equal, 1, (Object)constant23792);
// position
send109133 = (Object)new_AST_Send((Object)localvariable18349, (Object)symbol30757, 0);
// should
send109134 = (Object)new_AST_Send((Object)send109133, (Object)symbol30738, 0);
smallint10878 = (Object)new_Type_SmallInt(4);
constant23793 = (Object)new_AST_Constant((Object)smallint10878);
// =
send109135 = (Object)new_AST_Send((Object)send109134, (Object)SMB__equal, 1, (Object)constant23793);
method31377 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16615, 7, assign13780, assign13781, assign13782, send109129, send109132, send109135, Self);
symbol30485 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure31283 = (Object)new_Runtime_MethodClosure(method31377);
store_method((Type_Class)class5268, (Type_Symbol)symbol30485, (Runtime_MethodClosure)methodclosure31283);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable18351 = (Object)new_AST_Variable_named(L"parser");
localvariable18352 = (Object)new_AST_Variable_named(L"string");
localvariable18353 = (Object)new_AST_Variable_named(L"result");
array16616 = (Object)new_Type_Array_with(3, (Object)localvariable18351, (Object)localvariable18352, (Object)localvariable18353);
// keywordsArguments
send109136 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30832, 0);
assign13783 = (Object)new_AST_Assign((Object)localvariable18351, (Object)send109136);
string10970 = (Object)new_Type_String(L"test: ab");
constant23794 = (Object)new_AST_Constant((Object)string10970);
// on:
send109137 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23794);
assign13784 = (Object)new_AST_Assign((Object)localvariable18352, (Object)send109137);
// match:
send109138 = (Object)new_AST_Send((Object)localvariable18351, (Object)symbol30695, 1, (Object)localvariable18352);
assign13785 = (Object)new_AST_Assign((Object)localvariable18353, (Object)send109138);
// class
send109139 = (Object)new_AST_Send((Object)localvariable18353, (Object)SMB_class, 0);
// should
send109140 = (Object)new_AST_Send((Object)send109139, (Object)symbol30738, 0);
// =
send109141 = (Object)new_AST_Send((Object)send109140, (Object)SMB__equal, 1, (Object)classreference11525);
// keywords
send109142 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30585, 0);
// should
send109143 = (Object)new_AST_Send((Object)send109142, (Object)symbol30738, 0);
string10971 = (Object)new_Type_String(L"test");
constant23795 = (Object)new_AST_Constant((Object)string10971);
// with:
send109144 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30547, 1, (Object)constant23795);
// =
send109145 = (Object)new_AST_Send((Object)send109143, (Object)SMB__equal, 1, (Object)send109144);
// parameters
send109146 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30582, 0);
// size
send109147 = (Object)new_AST_Send((Object)send109146, (Object)SMB_size, 0);
// should
send109148 = (Object)new_AST_Send((Object)send109147, (Object)symbol30738, 0);
smallint10879 = (Object)new_Type_SmallInt(1);
constant23796 = (Object)new_AST_Constant((Object)smallint10879);
// =
send109149 = (Object)new_AST_Send((Object)send109148, (Object)SMB__equal, 1, (Object)constant23796);
// parameters
send109150 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30582, 0);
// first
send109151 = (Object)new_AST_Send((Object)send109150, (Object)symbol30549, 0);
// should
send109152 = (Object)new_AST_Send((Object)send109151, (Object)symbol30738, 0);
// new
send109153 = (Object)new_AST_Send((Object)classreference11507, (Object)symbol30416, 0);
string10972 = (Object)new_Type_String(L"ab");
constant23797 = (Object)new_AST_Constant((Object)string10972);
// name:
send109154 = (Object)new_AST_Send((Object)send109153, (Object)symbol30520, 1, (Object)constant23797);
// =
send109155 = (Object)new_AST_Send((Object)send109152, (Object)SMB__equal, 1, (Object)send109154);
// position
send109156 = (Object)new_AST_Send((Object)localvariable18352, (Object)symbol30757, 0);
// should
send109157 = (Object)new_AST_Send((Object)send109156, (Object)symbol30738, 0);
smallint10880 = (Object)new_Type_SmallInt(8);
constant23798 = (Object)new_AST_Constant((Object)smallint10880);
// =
send109158 = (Object)new_AST_Send((Object)send109157, (Object)SMB__equal, 1, (Object)constant23798);
string10973 = (Object)new_Type_String(L"bla a");
constant23799 = (Object)new_AST_Constant((Object)string10973);
// on:
send109159 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23799);
assign13786 = (Object)new_AST_Assign((Object)localvariable18352, (Object)send109159);
// match:
send109160 = (Object)new_AST_Send((Object)localvariable18351, (Object)symbol30695, 1, (Object)localvariable18352);
// should
send109161 = (Object)new_AST_Send((Object)send109160, (Object)symbol30738, 0);
// be
send109162 = (Object)new_AST_Send((Object)send109161, (Object)symbol30837, 0);
// isNil
send109163 = (Object)new_AST_Send((Object)send109162, (Object)SMB_isNil, 0);
// position
send109164 = (Object)new_AST_Send((Object)localvariable18352, (Object)symbol30757, 0);
// should
send109165 = (Object)new_AST_Send((Object)send109164, (Object)symbol30738, 0);
smallint10881 = (Object)new_Type_SmallInt(0);
constant23800 = (Object)new_AST_Constant((Object)smallint10881);
// =
send109166 = (Object)new_AST_Send((Object)send109165, (Object)SMB__equal, 1, (Object)constant23800);
string10974 = (Object)new_Type_String(L"test: d bla: c boe");
constant23801 = (Object)new_AST_Constant((Object)string10974);
// on:
send109167 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23801);
assign13787 = (Object)new_AST_Assign((Object)localvariable18352, (Object)send109167);
// match:
send109168 = (Object)new_AST_Send((Object)localvariable18351, (Object)symbol30695, 1, (Object)localvariable18352);
assign13788 = (Object)new_AST_Assign((Object)localvariable18353, (Object)send109168);
// class
send109169 = (Object)new_AST_Send((Object)localvariable18353, (Object)SMB_class, 0);
// should
send109170 = (Object)new_AST_Send((Object)send109169, (Object)symbol30738, 0);
// =
send109171 = (Object)new_AST_Send((Object)send109170, (Object)SMB__equal, 1, (Object)classreference11525);
// keywords
send109172 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30585, 0);
// should
send109173 = (Object)new_AST_Send((Object)send109172, (Object)symbol30738, 0);
symbol30844 = (Object)new_Type_Symbol_cached(L"with:with:");
string10975 = (Object)new_Type_String(L"test");
constant23802 = (Object)new_AST_Constant((Object)string10975);
string10976 = (Object)new_Type_String(L"bla");
constant23803 = (Object)new_AST_Constant((Object)string10976);
// with:with:
send109174 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30844, 2, (Object)constant23802, (Object)constant23803);
// =
send109175 = (Object)new_AST_Send((Object)send109173, (Object)SMB__equal, 1, (Object)send109174);
// parameters
send109176 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30582, 0);
// size
send109177 = (Object)new_AST_Send((Object)send109176, (Object)SMB_size, 0);
// should
send109178 = (Object)new_AST_Send((Object)send109177, (Object)symbol30738, 0);
smallint10882 = (Object)new_Type_SmallInt(2);
constant23804 = (Object)new_AST_Constant((Object)smallint10882);
// =
send109179 = (Object)new_AST_Send((Object)send109178, (Object)SMB__equal, 1, (Object)constant23804);
// parameters
send109180 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30582, 0);
// first
send109181 = (Object)new_AST_Send((Object)send109180, (Object)symbol30549, 0);
// should
send109182 = (Object)new_AST_Send((Object)send109181, (Object)symbol30738, 0);
// new
send109183 = (Object)new_AST_Send((Object)classreference11507, (Object)symbol30416, 0);
string10977 = (Object)new_Type_String(L"d");
constant23805 = (Object)new_AST_Constant((Object)string10977);
// name:
send109184 = (Object)new_AST_Send((Object)send109183, (Object)symbol30520, 1, (Object)constant23805);
// =
send109185 = (Object)new_AST_Send((Object)send109182, (Object)SMB__equal, 1, (Object)send109184);
// parameters
send109186 = (Object)new_AST_Send((Object)localvariable18353, (Object)symbol30582, 0);
// second
send109187 = (Object)new_AST_Send((Object)send109186, (Object)symbol30804, 0);
// should
send109188 = (Object)new_AST_Send((Object)send109187, (Object)symbol30738, 0);
// new
send109189 = (Object)new_AST_Send((Object)classreference11507, (Object)symbol30416, 0);
string10978 = (Object)new_Type_String(L"c");
constant23806 = (Object)new_AST_Constant((Object)string10978);
// name:
send109190 = (Object)new_AST_Send((Object)send109189, (Object)symbol30520, 1, (Object)constant23806);
// =
send109191 = (Object)new_AST_Send((Object)send109188, (Object)SMB__equal, 1, (Object)send109190);
// position
send109192 = (Object)new_AST_Send((Object)localvariable18352, (Object)symbol30757, 0);
// should
send109193 = (Object)new_AST_Send((Object)send109192, (Object)symbol30738, 0);
smallint10883 = (Object)new_Type_SmallInt(15);
constant23807 = (Object)new_AST_Constant((Object)smallint10883);
// =
send109194 = (Object)new_AST_Send((Object)send109193, (Object)SMB__equal, 1, (Object)constant23807);
method31378 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16616, 20, assign13783, assign13784, assign13785, send109141, send109145, send109149, send109155, send109158, assign13786, send109163, send109166, assign13787, assign13788, send109171, send109175, send109179, send109185, send109191, send109194, Self);
symbol30477 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure31284 = (Object)new_Runtime_MethodClosure(method31378);
store_method((Type_Class)class5268, (Type_Symbol)symbol30477, (Runtime_MethodClosure)methodclosure31284);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable18354 = (Object)new_AST_Variable_named(L"parser");
localvariable18355 = (Object)new_AST_Variable_named(L"string");
localvariable18356 = (Object)new_AST_Variable_named(L"result");
array16617 = (Object)new_Type_Array_with(3, (Object)localvariable18354, (Object)localvariable18355, (Object)localvariable18356);
// unaryObjectDescription
send109195 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30807, 0);
assign13789 = (Object)new_AST_Assign((Object)localvariable18354, (Object)send109195);
string10979 = (Object)new_Type_String(L"abc def ghi ");
constant23808 = (Object)new_AST_Constant((Object)string10979);
// on:
send109196 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23808);
assign13790 = (Object)new_AST_Assign((Object)localvariable18355, (Object)send109196);
// match:
send109197 = (Object)new_AST_Send((Object)localvariable18354, (Object)symbol30695, 1, (Object)localvariable18355);
assign13791 = (Object)new_AST_Assign((Object)localvariable18356, (Object)send109197);
// class
send109198 = (Object)new_AST_Send((Object)localvariable18356, (Object)SMB_class, 0);
// should
send109199 = (Object)new_AST_Send((Object)send109198, (Object)symbol30738, 0);
// =
send109200 = (Object)new_AST_Send((Object)send109199, (Object)SMB__equal, 1, (Object)classreference11517);
// selector
send109201 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30580, 0);
// class
send109202 = (Object)new_AST_Send((Object)send109201, (Object)SMB_class, 0);
// should
send109203 = (Object)new_AST_Send((Object)send109202, (Object)symbol30738, 0);
// =
send109204 = (Object)new_AST_Send((Object)send109203, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send109205 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30580, 0);
// selector
send109206 = (Object)new_AST_Send((Object)send109205, (Object)symbol30580, 0);
// printString
send109207 = (Object)new_AST_Send((Object)send109206, (Object)symbol30698, 0);
// should
send109208 = (Object)new_AST_Send((Object)send109207, (Object)symbol30738, 0);
string10980 = (Object)new_Type_String(L"ghi");
constant23809 = (Object)new_AST_Constant((Object)string10980);
// =
send109209 = (Object)new_AST_Send((Object)send109208, (Object)SMB__equal, 1, (Object)constant23809);
// receiver
send109210 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30591, 0);
assign13792 = (Object)new_AST_Assign((Object)localvariable18356, (Object)send109210);
// class
send109211 = (Object)new_AST_Send((Object)localvariable18356, (Object)SMB_class, 0);
// should
send109212 = (Object)new_AST_Send((Object)send109211, (Object)symbol30738, 0);
// =
send109213 = (Object)new_AST_Send((Object)send109212, (Object)SMB__equal, 1, (Object)classreference11517);
// selector
send109214 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30580, 0);
// class
send109215 = (Object)new_AST_Send((Object)send109214, (Object)SMB_class, 0);
// should
send109216 = (Object)new_AST_Send((Object)send109215, (Object)symbol30738, 0);
// =
send109217 = (Object)new_AST_Send((Object)send109216, (Object)SMB__equal, 1, (Object)classreference11523);
// selector
send109218 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30580, 0);
// selector
send109219 = (Object)new_AST_Send((Object)send109218, (Object)symbol30580, 0);
// printString
send109220 = (Object)new_AST_Send((Object)send109219, (Object)symbol30698, 0);
// should
send109221 = (Object)new_AST_Send((Object)send109220, (Object)symbol30738, 0);
string10981 = (Object)new_Type_String(L"def");
constant23810 = (Object)new_AST_Constant((Object)string10981);
// =
send109222 = (Object)new_AST_Send((Object)send109221, (Object)SMB__equal, 1, (Object)constant23810);
// receiver
send109223 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30591, 0);
// class
send109224 = (Object)new_AST_Send((Object)send109223, (Object)SMB_class, 0);
// should
send109225 = (Object)new_AST_Send((Object)send109224, (Object)symbol30738, 0);
// =
send109226 = (Object)new_AST_Send((Object)send109225, (Object)SMB__equal, 1, (Object)classreference11507);
// receiver
send109227 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30591, 0);
// name
send109228 = (Object)new_AST_Send((Object)send109227, (Object)SMB_name, 0);
// should
send109229 = (Object)new_AST_Send((Object)send109228, (Object)symbol30738, 0);
string10982 = (Object)new_Type_String(L"abc");
constant23811 = (Object)new_AST_Constant((Object)string10982);
// =
send109230 = (Object)new_AST_Send((Object)send109229, (Object)SMB__equal, 1, (Object)constant23811);
// position
send109231 = (Object)new_AST_Send((Object)localvariable18355, (Object)symbol30757, 0);
// should
send109232 = (Object)new_AST_Send((Object)send109231, (Object)symbol30738, 0);
smallint10884 = (Object)new_Type_SmallInt(12);
constant23812 = (Object)new_AST_Constant((Object)smallint10884);
// =
send109233 = (Object)new_AST_Send((Object)send109232, (Object)SMB__equal, 1, (Object)constant23812);
string10983 = (Object)new_Type_String(L"3");
constant23813 = (Object)new_AST_Constant((Object)string10983);
// on:
send109234 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23813);
assign13793 = (Object)new_AST_Assign((Object)localvariable18355, (Object)send109234);
// match:
send109235 = (Object)new_AST_Send((Object)localvariable18354, (Object)symbol30695, 1, (Object)localvariable18355);
assign13794 = (Object)new_AST_Assign((Object)localvariable18356, (Object)send109235);
// class
send109236 = (Object)new_AST_Send((Object)localvariable18356, (Object)SMB_class, 0);
// should
send109237 = (Object)new_AST_Send((Object)send109236, (Object)symbol30738, 0);
// =
send109238 = (Object)new_AST_Send((Object)send109237, (Object)SMB__equal, 1, (Object)classreference11499);
// number
send109239 = (Object)new_AST_Send((Object)localvariable18356, (Object)symbol30562, 0);
// should
send109240 = (Object)new_AST_Send((Object)send109239, (Object)symbol30738, 0);
string10984 = (Object)new_Type_String(L"3");
constant23814 = (Object)new_AST_Constant((Object)string10984);
// =
send109241 = (Object)new_AST_Send((Object)send109240, (Object)SMB__equal, 1, (Object)constant23814);
// position
send109242 = (Object)new_AST_Send((Object)localvariable18355, (Object)symbol30757, 0);
// should
send109243 = (Object)new_AST_Send((Object)send109242, (Object)symbol30738, 0);
smallint10885 = (Object)new_Type_SmallInt(1);
constant23815 = (Object)new_AST_Constant((Object)smallint10885);
// =
send109244 = (Object)new_AST_Send((Object)send109243, (Object)SMB__equal, 1, (Object)constant23815);
method31379 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16617, 19, assign13789, assign13790, assign13791, send109200, send109204, send109209, assign13792, send109213, send109217, send109222, send109226, send109230, send109233, assign13793, assign13794, send109238, send109241, send109244, Self);
symbol30503 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure31285 = (Object)new_Runtime_MethodClosure(method31379);
store_method((Type_Class)class5268, (Type_Symbol)symbol30503, (Runtime_MethodClosure)methodclosure31285);


// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable18357 = (Object)new_AST_Variable_named(L"string");
localvariable18358 = (Object)new_AST_Variable_named(L"result");
localvariable18359 = (Object)new_AST_Variable_named(L"var");
localvariable18360 = (Object)new_AST_Variable_named(L"parser");
array16618 = (Object)new_Type_Array_with(4, (Object)localvariable18357, (Object)localvariable18358, (Object)localvariable18359, (Object)localvariable18360);
// blockArguments
send109245 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30824, 0);
assign13795 = (Object)new_AST_Assign((Object)localvariable18360, (Object)send109245);
string10985 = (Object)new_Type_String(L":abcd :def");
constant23816 = (Object)new_AST_Constant((Object)string10985);
// on:
send109246 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23816);
assign13796 = (Object)new_AST_Assign((Object)localvariable18357, (Object)send109246);
// match:
send109247 = (Object)new_AST_Send((Object)localvariable18360, (Object)symbol30695, 1, (Object)localvariable18357);
assign13797 = (Object)new_AST_Assign((Object)localvariable18358, (Object)send109247);
// position
send109248 = (Object)new_AST_Send((Object)localvariable18357, (Object)symbol30757, 0);
// should
send109249 = (Object)new_AST_Send((Object)send109248, (Object)symbol30738, 0);
smallint10886 = (Object)new_Type_SmallInt(10);
constant23817 = (Object)new_AST_Constant((Object)smallint10886);
// =
send109250 = (Object)new_AST_Send((Object)send109249, (Object)SMB__equal, 1, (Object)constant23817);
// class
send109251 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_class, 0);
// should
send109252 = (Object)new_AST_Send((Object)send109251, (Object)symbol30738, 0);
// =
send109253 = (Object)new_AST_Send((Object)send109252, (Object)SMB__equal, 1, (Object)classreference11493);
// size
send109254 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_size, 0);
// should
send109255 = (Object)new_AST_Send((Object)send109254, (Object)symbol30738, 0);
smallint10887 = (Object)new_Type_SmallInt(2);
constant23818 = (Object)new_AST_Constant((Object)smallint10887);
// =
send109256 = (Object)new_AST_Send((Object)send109255, (Object)SMB__equal, 1, (Object)constant23818);
smallint10888 = (Object)new_Type_SmallInt(1);
constant23819 = (Object)new_AST_Constant((Object)smallint10888);
// at:
send109257 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_at_, 1, (Object)constant23819);
assign13798 = (Object)new_AST_Assign((Object)localvariable18359, (Object)send109257);
// class
send109258 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_class, 0);
// should
send109259 = (Object)new_AST_Send((Object)send109258, (Object)symbol30738, 0);
// =
send109260 = (Object)new_AST_Send((Object)send109259, (Object)SMB__equal, 1, (Object)classreference11507);
// name
send109261 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_name, 0);
// should
send109262 = (Object)new_AST_Send((Object)send109261, (Object)symbol30738, 0);
string10986 = (Object)new_Type_String(L"abcd");
constant23820 = (Object)new_AST_Constant((Object)string10986);
// =
send109263 = (Object)new_AST_Send((Object)send109262, (Object)SMB__equal, 1, (Object)constant23820);
smallint10889 = (Object)new_Type_SmallInt(2);
constant23821 = (Object)new_AST_Constant((Object)smallint10889);
// at:
send109264 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_at_, 1, (Object)constant23821);
assign13799 = (Object)new_AST_Assign((Object)localvariable18359, (Object)send109264);
// class
send109265 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_class, 0);
// should
send109266 = (Object)new_AST_Send((Object)send109265, (Object)symbol30738, 0);
// =
send109267 = (Object)new_AST_Send((Object)send109266, (Object)SMB__equal, 1, (Object)classreference11507);
// name
send109268 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_name, 0);
// should
send109269 = (Object)new_AST_Send((Object)send109268, (Object)symbol30738, 0);
string10987 = (Object)new_Type_String(L"def");
constant23822 = (Object)new_AST_Constant((Object)string10987);
// =
send109270 = (Object)new_AST_Send((Object)send109269, (Object)SMB__equal, 1, (Object)constant23822);
string10988 = (Object)new_Type_String(L" :  abcd:   def ");
constant23823 = (Object)new_AST_Constant((Object)string10988);
// on:
send109271 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23823);
assign13800 = (Object)new_AST_Assign((Object)localvariable18357, (Object)send109271);
// match:
send109272 = (Object)new_AST_Send((Object)localvariable18360, (Object)symbol30695, 1, (Object)localvariable18357);
assign13801 = (Object)new_AST_Assign((Object)localvariable18358, (Object)send109272);
// position
send109273 = (Object)new_AST_Send((Object)localvariable18357, (Object)symbol30757, 0);
// should
send109274 = (Object)new_AST_Send((Object)send109273, (Object)symbol30738, 0);
smallint10890 = (Object)new_Type_SmallInt(16);
constant23824 = (Object)new_AST_Constant((Object)smallint10890);
// =
send109275 = (Object)new_AST_Send((Object)send109274, (Object)SMB__equal, 1, (Object)constant23824);
// class
send109276 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_class, 0);
// should
send109277 = (Object)new_AST_Send((Object)send109276, (Object)symbol30738, 0);
// =
send109278 = (Object)new_AST_Send((Object)send109277, (Object)SMB__equal, 1, (Object)classreference11493);
// size
send109279 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_size, 0);
// should
send109280 = (Object)new_AST_Send((Object)send109279, (Object)symbol30738, 0);
smallint10891 = (Object)new_Type_SmallInt(2);
constant23825 = (Object)new_AST_Constant((Object)smallint10891);
// =
send109281 = (Object)new_AST_Send((Object)send109280, (Object)SMB__equal, 1, (Object)constant23825);
// first
send109282 = (Object)new_AST_Send((Object)localvariable18358, (Object)symbol30549, 0);
assign13802 = (Object)new_AST_Assign((Object)localvariable18359, (Object)send109282);
// class
send109283 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_class, 0);
// should
send109284 = (Object)new_AST_Send((Object)send109283, (Object)symbol30738, 0);
// =
send109285 = (Object)new_AST_Send((Object)send109284, (Object)SMB__equal, 1, (Object)classreference11507);
// name
send109286 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_name, 0);
// should
send109287 = (Object)new_AST_Send((Object)send109286, (Object)symbol30738, 0);
string10989 = (Object)new_Type_String(L"abcd");
constant23826 = (Object)new_AST_Constant((Object)string10989);
// =
send109288 = (Object)new_AST_Send((Object)send109287, (Object)SMB__equal, 1, (Object)constant23826);
smallint10892 = (Object)new_Type_SmallInt(2);
constant23827 = (Object)new_AST_Constant((Object)smallint10892);
// at:
send109289 = (Object)new_AST_Send((Object)localvariable18358, (Object)SMB_at_, 1, (Object)constant23827);
assign13803 = (Object)new_AST_Assign((Object)localvariable18359, (Object)send109289);
// class
send109290 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_class, 0);
// should
send109291 = (Object)new_AST_Send((Object)send109290, (Object)symbol30738, 0);
// =
send109292 = (Object)new_AST_Send((Object)send109291, (Object)SMB__equal, 1, (Object)classreference11507);
// name
send109293 = (Object)new_AST_Send((Object)localvariable18359, (Object)SMB_name, 0);
// should
send109294 = (Object)new_AST_Send((Object)send109293, (Object)symbol30738, 0);
string10990 = (Object)new_Type_String(L"def");
constant23828 = (Object)new_AST_Constant((Object)string10990);
// =
send109295 = (Object)new_AST_Send((Object)send109294, (Object)SMB__equal, 1, (Object)constant23828);
method31380 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16618, 24, assign13795, assign13796, assign13797, send109250, send109253, send109256, assign13798, send109260, send109263, assign13799, send109267, send109270, assign13800, assign13801, send109275, send109278, send109281, assign13802, send109285, send109288, assign13803, send109292, send109295, Self);
symbol30467 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure31286 = (Object)new_Runtime_MethodClosure(method31380);
store_method((Type_Class)class5268, (Type_Symbol)symbol30467, (Runtime_MethodClosure)methodclosure31286);


// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable18361 = (Object)new_AST_Variable_named(L"parser");
localvariable18362 = (Object)new_AST_Variable_named(L"string");
localvariable18363 = (Object)new_AST_Variable_named(L"result");
array16619 = (Object)new_Type_Array_with(3, (Object)localvariable18361, (Object)localvariable18362, (Object)localvariable18363);
// subExpression
send109296 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30773, 0);
assign13804 = (Object)new_AST_Assign((Object)localvariable18361, (Object)send109296);
string10991 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23829 = (Object)new_AST_Constant((Object)string10991);
// on:
send109297 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23829);
assign13805 = (Object)new_AST_Assign((Object)localvariable18362, (Object)send109297);
// match:
send109298 = (Object)new_AST_Send((Object)localvariable18361, (Object)symbol30695, 1, (Object)localvariable18362);
// should
send109299 = (Object)new_AST_Send((Object)send109298, (Object)symbol30738, 0);
// be
send109300 = (Object)new_AST_Send((Object)send109299, (Object)symbol30837, 0);
// isNil
send109301 = (Object)new_AST_Send((Object)send109300, (Object)SMB_isNil, 0);
string10992 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant23830 = (Object)new_AST_Constant((Object)string10992);
// on:
send109302 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23830);
assign13806 = (Object)new_AST_Assign((Object)localvariable18362, (Object)send109302);
// match:
send109303 = (Object)new_AST_Send((Object)localvariable18361, (Object)symbol30695, 1, (Object)localvariable18362);
assign13807 = (Object)new_AST_Assign((Object)localvariable18363, (Object)send109303);
// class
send109304 = (Object)new_AST_Send((Object)localvariable18363, (Object)SMB_class, 0);
// should
send109305 = (Object)new_AST_Send((Object)send109304, (Object)symbol30738, 0);
// =
send109306 = (Object)new_AST_Send((Object)send109305, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109307 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30574, 0);
// class
send109308 = (Object)new_AST_Send((Object)send109307, (Object)SMB_class, 0);
// should
send109309 = (Object)new_AST_Send((Object)send109308, (Object)symbol30738, 0);
// =
send109310 = (Object)new_AST_Send((Object)send109309, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109311 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30574, 0);
// name
send109312 = (Object)new_AST_Send((Object)send109311, (Object)SMB_name, 0);
// should
send109313 = (Object)new_AST_Send((Object)send109312, (Object)symbol30738, 0);
string10993 = (Object)new_Type_String(L"a");
constant23831 = (Object)new_AST_Constant((Object)string10993);
// =
send109314 = (Object)new_AST_Send((Object)send109313, (Object)SMB__equal, 1, (Object)constant23831);
// expression
send109315 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30572, 0);
assign13808 = (Object)new_AST_Assign((Object)localvariable18363, (Object)send109315);
// class
send109316 = (Object)new_AST_Send((Object)localvariable18363, (Object)SMB_class, 0);
// should
send109317 = (Object)new_AST_Send((Object)send109316, (Object)symbol30738, 0);
// =
send109318 = (Object)new_AST_Send((Object)send109317, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109319 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30574, 0);
// class
send109320 = (Object)new_AST_Send((Object)send109319, (Object)SMB_class, 0);
// should
send109321 = (Object)new_AST_Send((Object)send109320, (Object)symbol30738, 0);
// =
send109322 = (Object)new_AST_Send((Object)send109321, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109323 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30574, 0);
// name
send109324 = (Object)new_AST_Send((Object)send109323, (Object)SMB_name, 0);
// should
send109325 = (Object)new_AST_Send((Object)send109324, (Object)symbol30738, 0);
string10994 = (Object)new_Type_String(L"b");
constant23832 = (Object)new_AST_Constant((Object)string10994);
// =
send109326 = (Object)new_AST_Send((Object)send109325, (Object)SMB__equal, 1, (Object)constant23832);
// expression
send109327 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30572, 0);
assign13809 = (Object)new_AST_Assign((Object)localvariable18363, (Object)send109327);
// class
send109328 = (Object)new_AST_Send((Object)localvariable18363, (Object)SMB_class, 0);
// should
send109329 = (Object)new_AST_Send((Object)send109328, (Object)symbol30738, 0);
// =
send109330 = (Object)new_AST_Send((Object)send109329, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109331 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30574, 0);
// class
send109332 = (Object)new_AST_Send((Object)send109331, (Object)SMB_class, 0);
// should
send109333 = (Object)new_AST_Send((Object)send109332, (Object)symbol30738, 0);
// =
send109334 = (Object)new_AST_Send((Object)send109333, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109335 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30574, 0);
// name
send109336 = (Object)new_AST_Send((Object)send109335, (Object)SMB_name, 0);
// should
send109337 = (Object)new_AST_Send((Object)send109336, (Object)symbol30738, 0);
string10995 = (Object)new_Type_String(L"c");
constant23833 = (Object)new_AST_Constant((Object)string10995);
// =
send109338 = (Object)new_AST_Send((Object)send109337, (Object)SMB__equal, 1, (Object)constant23833);
// expression
send109339 = (Object)new_AST_Send((Object)localvariable18363, (Object)symbol30572, 0);
// class
send109340 = (Object)new_AST_Send((Object)send109339, (Object)SMB_class, 0);
// should
send109341 = (Object)new_AST_Send((Object)send109340, (Object)symbol30738, 0);
// =
send109342 = (Object)new_AST_Send((Object)send109341, (Object)SMB__equal, 1, (Object)classreference11511);
method31381 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16619, 18, assign13804, assign13805, send109301, assign13806, assign13807, send109306, send109310, send109314, assign13808, send109318, send109322, send109326, assign13809, send109330, send109334, send109338, send109342, Self);
symbol30487 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure31287 = (Object)new_Runtime_MethodClosure(method31381);
store_method((Type_Class)class5268, (Type_Symbol)symbol30487, (Runtime_MethodClosure)methodclosure31287);


// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable18364 = (Object)new_AST_Variable_named(L"parser");
localvariable18365 = (Object)new_AST_Variable_named(L"string");
localvariable18366 = (Object)new_AST_Variable_named(L"result");
array16620 = (Object)new_Type_Array_with(3, (Object)localvariable18364, (Object)localvariable18365, (Object)localvariable18366);
// method
send109343 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30838, 0);
assign13810 = (Object)new_AST_Assign((Object)localvariable18364, (Object)send109343);
string10996 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant23834 = (Object)new_AST_Constant((Object)string10996);
assign13811 = (Object)new_AST_Assign((Object)localvariable18365, (Object)constant23834);
// parse:
send109344 = (Object)new_AST_Send((Object)localvariable18364, (Object)symbol30709, 1, (Object)localvariable18365);
assign13812 = (Object)new_AST_Assign((Object)localvariable18366, (Object)send109344);
// hasReturnExpression
send109345 = (Object)new_AST_Send((Object)localvariable18366, (Object)symbol30588, 0);
// should
send109346 = (Object)new_AST_Send((Object)send109345, (Object)symbol30738, 0);
// be
send109347 = (Object)new_AST_Send((Object)send109346, (Object)symbol30837, 0);
// true
send109348 = (Object)new_AST_Send((Object)send109347, (Object)symbol30839, 0);
// class
send109349 = (Object)new_AST_Send((Object)localvariable18366, (Object)SMB_class, 0);
// should
send109350 = (Object)new_AST_Send((Object)send109349, (Object)symbol30738, 0);
// =
send109351 = (Object)new_AST_Send((Object)send109350, (Object)SMB__equal, 1, (Object)classreference11501);
// message
send109352 = (Object)new_AST_Send((Object)localvariable18366, (Object)symbol30603, 0);
// asString
send109353 = (Object)new_AST_Send((Object)send109352, (Object)SMB_asString, 0);
// should
send109354 = (Object)new_AST_Send((Object)send109353, (Object)symbol30738, 0);
string10997 = (Object)new_Type_String(L"withA:withB:withC:");
constant23835 = (Object)new_AST_Constant((Object)string10997);
// =
send109355 = (Object)new_AST_Send((Object)send109354, (Object)SMB__equal, 1, (Object)constant23835);
// statements
send109356 = (Object)new_AST_Send((Object)localvariable18366, (Object)symbol30599, 0);
// last
send109357 = (Object)new_AST_Send((Object)send109356, (Object)symbol30548, 0);
// hasReturnExpression
send109358 = (Object)new_AST_Send((Object)send109357, (Object)symbol30588, 0);
// should
send109359 = (Object)new_AST_Send((Object)send109358, (Object)symbol30738, 0);
// be
send109360 = (Object)new_AST_Send((Object)send109359, (Object)symbol30837, 0);
// true
send109361 = (Object)new_AST_Send((Object)send109360, (Object)symbol30839, 0);
method31382 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16620, 8, assign13810, assign13811, assign13812, send109348, send109351, send109355, send109361, Self);
symbol30479 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure31288 = (Object)new_Runtime_MethodClosure(method31382);
store_method((Type_Class)class5268, (Type_Symbol)symbol30479, (Runtime_MethodClosure)methodclosure31288);


// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable18367 = (Object)new_AST_Variable_named(L"parser");
localvariable18368 = (Object)new_AST_Variable_named(L"string");
localvariable18369 = (Object)new_AST_Variable_named(L"result");
localvariable18370 = (Object)new_AST_Variable_named(L"arg");
array16621 = (Object)new_Type_Array_with(4, (Object)localvariable18367, (Object)localvariable18368, (Object)localvariable18369, (Object)localvariable18370);
// keywordMessageExpression
send109362 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30789, 0);
assign13813 = (Object)new_AST_Assign((Object)localvariable18367, (Object)send109362);
string10998 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant23836 = (Object)new_AST_Constant((Object)string10998);
// on:
send109363 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23836);
assign13814 = (Object)new_AST_Assign((Object)localvariable18368, (Object)send109363);
// match:
send109364 = (Object)new_AST_Send((Object)localvariable18367, (Object)symbol30695, 1, (Object)localvariable18368);
assign13815 = (Object)new_AST_Assign((Object)localvariable18369, (Object)send109364);
// class
send109365 = (Object)new_AST_Send((Object)localvariable18369, (Object)SMB_class, 0);
// should
send109366 = (Object)new_AST_Send((Object)send109365, (Object)symbol30738, 0);
// =
send109367 = (Object)new_AST_Send((Object)send109366, (Object)SMB__equal, 1, (Object)classreference11511);
// keywords
send109368 = (Object)new_AST_Send((Object)localvariable18369, (Object)symbol30585, 0);
// asArray
send109369 = (Object)new_AST_Send((Object)send109368, (Object)SMB_asArray, 0);
// should
send109370 = (Object)new_AST_Send((Object)send109369, (Object)symbol30738, 0);
localvariable18371 = (Object)new_AST_Variable_named(L"receiver");
array16622 = (Object)new_Type_Array_with(1, (Object)localvariable18371);
smallint10893 = (Object)new_Type_SmallInt(1);
constant23837 = (Object)new_AST_Constant((Object)smallint10893);
string10999 = (Object)new_Type_String(L"abc");
constant23838 = (Object)new_AST_Constant((Object)string10999);
// at:put:
send109371 = (Object)new_AST_Send((Object)localvariable18371, (Object)SMB_at_put_, 2, (Object)constant23837, (Object)constant23838);
smallint10894 = (Object)new_Type_SmallInt(2);
constant23839 = (Object)new_AST_Constant((Object)smallint10894);
string11000 = (Object)new_Type_String(L"def");
constant23840 = (Object)new_AST_Constant((Object)string11000);
// at:put:
send109372 = (Object)new_AST_Send((Object)localvariable18371, (Object)SMB_at_put_, 2, (Object)constant23839, (Object)constant23840);
smallint10895 = (Object)new_Type_SmallInt(3);
constant23841 = (Object)new_AST_Constant((Object)smallint10895);
string11001 = (Object)new_Type_String(L"ghi");
constant23842 = (Object)new_AST_Constant((Object)string11001);
// at:put:
send109373 = (Object)new_AST_Send((Object)localvariable18371, (Object)SMB_at_put_, 2, (Object)constant23841, (Object)constant23842);
// yourself
send109374 = (Object)new_AST_Send((Object)localvariable18371, (Object)symbol30410, 0);
block7426 = (Object)new_AST_Block_with((Type_Array)array16622, (Type_Array)empty_Type_Array, 1, 4, send109371, send109372, send109373, send109374);
smallint10896 = (Object)new_Type_SmallInt(3);
constant23843 = (Object)new_AST_Constant((Object)smallint10896);
// new:
send109375 = (Object)new_AST_Send((Object)classreference11489, (Object)symbol30413, 1, (Object)constant23843);
// value:
send109376 = (Object)new_AST_Send((Object)block7426, (Object)SMB_value_, 1, (Object)send109375);
// =
send109377 = (Object)new_AST_Send((Object)send109370, (Object)SMB__equal, 1, (Object)send109376);
// arguments
send109378 = (Object)new_AST_Send((Object)localvariable18369, (Object)symbol30587, 0);
// first
send109379 = (Object)new_AST_Send((Object)send109378, (Object)symbol30549, 0);
assign13816 = (Object)new_AST_Assign((Object)localvariable18370, (Object)send109379);
// class
send109380 = (Object)new_AST_Send((Object)localvariable18370, (Object)SMB_class, 0);
// should
send109381 = (Object)new_AST_Send((Object)send109380, (Object)symbol30738, 0);
// =
send109382 = (Object)new_AST_Send((Object)send109381, (Object)SMB__equal, 1, (Object)classreference11499);
// arguments
send109383 = (Object)new_AST_Send((Object)localvariable18369, (Object)symbol30587, 0);
smallint10897 = (Object)new_Type_SmallInt(2);
constant23844 = (Object)new_AST_Constant((Object)smallint10897);
// at:
send109384 = (Object)new_AST_Send((Object)send109383, (Object)SMB_at_, 1, (Object)constant23844);
assign13817 = (Object)new_AST_Assign((Object)localvariable18370, (Object)send109384);
// class
send109385 = (Object)new_AST_Send((Object)localvariable18370, (Object)SMB_class, 0);
// should
send109386 = (Object)new_AST_Send((Object)send109385, (Object)symbol30738, 0);
// =
send109387 = (Object)new_AST_Send((Object)send109386, (Object)SMB__equal, 1, (Object)classreference11512);
// arguments
send109388 = (Object)new_AST_Send((Object)localvariable18369, (Object)symbol30587, 0);
smallint10898 = (Object)new_Type_SmallInt(3);
constant23845 = (Object)new_AST_Constant((Object)smallint10898);
// at:
send109389 = (Object)new_AST_Send((Object)send109388, (Object)SMB_at_, 1, (Object)constant23845);
assign13818 = (Object)new_AST_Assign((Object)localvariable18370, (Object)send109389);
// class
send109390 = (Object)new_AST_Send((Object)localvariable18370, (Object)SMB_class, 0);
// should
send109391 = (Object)new_AST_Send((Object)send109390, (Object)symbol30738, 0);
// =
send109392 = (Object)new_AST_Send((Object)send109391, (Object)SMB__equal, 1, (Object)classreference11517);
// position
send109393 = (Object)new_AST_Send((Object)localvariable18368, (Object)symbol30757, 0);
// should
send109394 = (Object)new_AST_Send((Object)send109393, (Object)symbol30738, 0);
smallint10899 = (Object)new_Type_SmallInt(25);
constant23846 = (Object)new_AST_Constant((Object)smallint10899);
// =
send109395 = (Object)new_AST_Send((Object)send109394, (Object)SMB__equal, 1, (Object)constant23846);
method31383 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16621, 13, assign13813, assign13814, assign13815, send109367, send109377, assign13816, send109382, assign13817, send109387, assign13818, send109392, send109395, Self);
symbol30460 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure31289 = (Object)new_Runtime_MethodClosure(method31383);
store_method((Type_Class)class5268, (Type_Symbol)symbol30460, (Runtime_MethodClosure)methodclosure31289);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable18372 = (Object)new_AST_Variable_named(L"parser");
localvariable18373 = (Object)new_AST_Variable_named(L"string");
localvariable18374 = (Object)new_AST_Variable_named(L"result");
array16623 = (Object)new_Type_Array_with(3, (Object)localvariable18372, (Object)localvariable18373, (Object)localvariable18374);
// finalExpression
send109396 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30775, 0);
assign13819 = (Object)new_AST_Assign((Object)localvariable18372, (Object)send109396);
string11002 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23847 = (Object)new_AST_Constant((Object)string11002);
// on:
send109397 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23847);
assign13820 = (Object)new_AST_Assign((Object)localvariable18373, (Object)send109397);
// match:
send109398 = (Object)new_AST_Send((Object)localvariable18372, (Object)symbol30695, 1, (Object)localvariable18373);
assign13821 = (Object)new_AST_Assign((Object)localvariable18374, (Object)send109398);
// class
send109399 = (Object)new_AST_Send((Object)localvariable18374, (Object)SMB_class, 0);
// should
send109400 = (Object)new_AST_Send((Object)send109399, (Object)symbol30738, 0);
// =
send109401 = (Object)new_AST_Send((Object)send109400, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109402 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// class
send109403 = (Object)new_AST_Send((Object)send109402, (Object)SMB_class, 0);
// should
send109404 = (Object)new_AST_Send((Object)send109403, (Object)symbol30738, 0);
// =
send109405 = (Object)new_AST_Send((Object)send109404, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109406 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// name
send109407 = (Object)new_AST_Send((Object)send109406, (Object)SMB_name, 0);
// should
send109408 = (Object)new_AST_Send((Object)send109407, (Object)symbol30738, 0);
string11003 = (Object)new_Type_String(L"a");
constant23848 = (Object)new_AST_Constant((Object)string11003);
// =
send109409 = (Object)new_AST_Send((Object)send109408, (Object)SMB__equal, 1, (Object)constant23848);
// expression
send109410 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30572, 0);
assign13822 = (Object)new_AST_Assign((Object)localvariable18374, (Object)send109410);
// class
send109411 = (Object)new_AST_Send((Object)localvariable18374, (Object)SMB_class, 0);
// should
send109412 = (Object)new_AST_Send((Object)send109411, (Object)symbol30738, 0);
// =
send109413 = (Object)new_AST_Send((Object)send109412, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109414 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// class
send109415 = (Object)new_AST_Send((Object)send109414, (Object)SMB_class, 0);
// should
send109416 = (Object)new_AST_Send((Object)send109415, (Object)symbol30738, 0);
// =
send109417 = (Object)new_AST_Send((Object)send109416, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109418 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// name
send109419 = (Object)new_AST_Send((Object)send109418, (Object)SMB_name, 0);
// should
send109420 = (Object)new_AST_Send((Object)send109419, (Object)symbol30738, 0);
string11004 = (Object)new_Type_String(L"b");
constant23849 = (Object)new_AST_Constant((Object)string11004);
// =
send109421 = (Object)new_AST_Send((Object)send109420, (Object)SMB__equal, 1, (Object)constant23849);
// expression
send109422 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30572, 0);
assign13823 = (Object)new_AST_Assign((Object)localvariable18374, (Object)send109422);
// class
send109423 = (Object)new_AST_Send((Object)localvariable18374, (Object)SMB_class, 0);
// should
send109424 = (Object)new_AST_Send((Object)send109423, (Object)symbol30738, 0);
// =
send109425 = (Object)new_AST_Send((Object)send109424, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109426 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// class
send109427 = (Object)new_AST_Send((Object)send109426, (Object)SMB_class, 0);
// should
send109428 = (Object)new_AST_Send((Object)send109427, (Object)symbol30738, 0);
// =
send109429 = (Object)new_AST_Send((Object)send109428, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109430 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// name
send109431 = (Object)new_AST_Send((Object)send109430, (Object)SMB_name, 0);
// should
send109432 = (Object)new_AST_Send((Object)send109431, (Object)symbol30738, 0);
string11005 = (Object)new_Type_String(L"c");
constant23850 = (Object)new_AST_Constant((Object)string11005);
// =
send109433 = (Object)new_AST_Send((Object)send109432, (Object)SMB__equal, 1, (Object)constant23850);
// expression
send109434 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30572, 0);
// class
send109435 = (Object)new_AST_Send((Object)send109434, (Object)SMB_class, 0);
// should
send109436 = (Object)new_AST_Send((Object)send109435, (Object)symbol30738, 0);
// =
send109437 = (Object)new_AST_Send((Object)send109436, (Object)SMB__equal, 1, (Object)classreference11511);
string11006 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant23851 = (Object)new_AST_Constant((Object)string11006);
// on:
send109438 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23851);
assign13824 = (Object)new_AST_Assign((Object)localvariable18373, (Object)send109438);
// match:
send109439 = (Object)new_AST_Send((Object)localvariable18372, (Object)symbol30695, 1, (Object)localvariable18373);
assign13825 = (Object)new_AST_Assign((Object)localvariable18374, (Object)send109439);
// class
send109440 = (Object)new_AST_Send((Object)localvariable18374, (Object)SMB_class, 0);
// should
send109441 = (Object)new_AST_Send((Object)send109440, (Object)symbol30738, 0);
// =
send109442 = (Object)new_AST_Send((Object)send109441, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109443 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// class
send109444 = (Object)new_AST_Send((Object)send109443, (Object)SMB_class, 0);
// should
send109445 = (Object)new_AST_Send((Object)send109444, (Object)symbol30738, 0);
// =
send109446 = (Object)new_AST_Send((Object)send109445, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109447 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// name
send109448 = (Object)new_AST_Send((Object)send109447, (Object)SMB_name, 0);
// should
send109449 = (Object)new_AST_Send((Object)send109448, (Object)symbol30738, 0);
string11007 = (Object)new_Type_String(L"a");
constant23852 = (Object)new_AST_Constant((Object)string11007);
// =
send109450 = (Object)new_AST_Send((Object)send109449, (Object)SMB__equal, 1, (Object)constant23852);
// expression
send109451 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30572, 0);
assign13826 = (Object)new_AST_Assign((Object)localvariable18374, (Object)send109451);
// class
send109452 = (Object)new_AST_Send((Object)localvariable18374, (Object)SMB_class, 0);
// should
send109453 = (Object)new_AST_Send((Object)send109452, (Object)symbol30738, 0);
// =
send109454 = (Object)new_AST_Send((Object)send109453, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109455 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// class
send109456 = (Object)new_AST_Send((Object)send109455, (Object)SMB_class, 0);
// should
send109457 = (Object)new_AST_Send((Object)send109456, (Object)symbol30738, 0);
// =
send109458 = (Object)new_AST_Send((Object)send109457, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109459 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// name
send109460 = (Object)new_AST_Send((Object)send109459, (Object)SMB_name, 0);
// should
send109461 = (Object)new_AST_Send((Object)send109460, (Object)symbol30738, 0);
string11008 = (Object)new_Type_String(L"b");
constant23853 = (Object)new_AST_Constant((Object)string11008);
// =
send109462 = (Object)new_AST_Send((Object)send109461, (Object)SMB__equal, 1, (Object)constant23853);
// expression
send109463 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30572, 0);
assign13827 = (Object)new_AST_Assign((Object)localvariable18374, (Object)send109463);
// class
send109464 = (Object)new_AST_Send((Object)localvariable18374, (Object)SMB_class, 0);
// should
send109465 = (Object)new_AST_Send((Object)send109464, (Object)symbol30738, 0);
// =
send109466 = (Object)new_AST_Send((Object)send109465, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109467 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// class
send109468 = (Object)new_AST_Send((Object)send109467, (Object)SMB_class, 0);
// should
send109469 = (Object)new_AST_Send((Object)send109468, (Object)symbol30738, 0);
// =
send109470 = (Object)new_AST_Send((Object)send109469, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109471 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30574, 0);
// name
send109472 = (Object)new_AST_Send((Object)send109471, (Object)SMB_name, 0);
// should
send109473 = (Object)new_AST_Send((Object)send109472, (Object)symbol30738, 0);
string11009 = (Object)new_Type_String(L"c");
constant23854 = (Object)new_AST_Constant((Object)string11009);
// =
send109474 = (Object)new_AST_Send((Object)send109473, (Object)SMB__equal, 1, (Object)constant23854);
// expression
send109475 = (Object)new_AST_Send((Object)localvariable18374, (Object)symbol30572, 0);
// class
send109476 = (Object)new_AST_Send((Object)send109475, (Object)SMB_class, 0);
// should
send109477 = (Object)new_AST_Send((Object)send109476, (Object)symbol30738, 0);
// =
send109478 = (Object)new_AST_Send((Object)send109477, (Object)SMB__equal, 1, (Object)classreference11511);
method31384 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16623, 30, assign13819, assign13820, assign13821, send109401, send109405, send109409, assign13822, send109413, send109417, send109421, assign13823, send109425, send109429, send109433, send109437, assign13824, assign13825, send109442, send109446, send109450, assign13826, send109454, send109458, send109462, assign13827, send109466, send109470, send109474, send109478, Self);
symbol30452 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure31290 = (Object)new_Runtime_MethodClosure(method31384);
store_method((Type_Class)class5268, (Type_Symbol)symbol30452, (Runtime_MethodClosure)methodclosure31290);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable18375 = (Object)new_AST_Variable_named(L"parser");
localvariable18376 = (Object)new_AST_Variable_named(L"string");
localvariable18377 = (Object)new_AST_Variable_named(L"result");
array16624 = (Object)new_Type_Array_with(3, (Object)localvariable18375, (Object)localvariable18376, (Object)localvariable18377);
// return
send109479 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30774, 0);
assign13828 = (Object)new_AST_Assign((Object)localvariable18375, (Object)send109479);
string11010 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23855 = (Object)new_AST_Constant((Object)string11010);
// on:
send109480 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23855);
assign13829 = (Object)new_AST_Assign((Object)localvariable18376, (Object)send109480);
// match:
send109481 = (Object)new_AST_Send((Object)localvariable18375, (Object)symbol30695, 1, (Object)localvariable18376);
assign13830 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109481);
// class
send109482 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109483 = (Object)new_AST_Send((Object)send109482, (Object)symbol30738, 0);
// =
send109484 = (Object)new_AST_Send((Object)send109483, (Object)SMB__equal, 1, (Object)classreference11522);
// expression
send109485 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
assign13831 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109485);
// class
send109486 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109487 = (Object)new_AST_Send((Object)send109486, (Object)symbol30738, 0);
// =
send109488 = (Object)new_AST_Send((Object)send109487, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109489 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// class
send109490 = (Object)new_AST_Send((Object)send109489, (Object)SMB_class, 0);
// should
send109491 = (Object)new_AST_Send((Object)send109490, (Object)symbol30738, 0);
// =
send109492 = (Object)new_AST_Send((Object)send109491, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109493 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// name
send109494 = (Object)new_AST_Send((Object)send109493, (Object)SMB_name, 0);
// should
send109495 = (Object)new_AST_Send((Object)send109494, (Object)symbol30738, 0);
string11011 = (Object)new_Type_String(L"a");
constant23856 = (Object)new_AST_Constant((Object)string11011);
// =
send109496 = (Object)new_AST_Send((Object)send109495, (Object)SMB__equal, 1, (Object)constant23856);
// expression
send109497 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
assign13832 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109497);
// class
send109498 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109499 = (Object)new_AST_Send((Object)send109498, (Object)symbol30738, 0);
// =
send109500 = (Object)new_AST_Send((Object)send109499, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109501 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// class
send109502 = (Object)new_AST_Send((Object)send109501, (Object)SMB_class, 0);
// should
send109503 = (Object)new_AST_Send((Object)send109502, (Object)symbol30738, 0);
// =
send109504 = (Object)new_AST_Send((Object)send109503, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109505 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// name
send109506 = (Object)new_AST_Send((Object)send109505, (Object)SMB_name, 0);
// should
send109507 = (Object)new_AST_Send((Object)send109506, (Object)symbol30738, 0);
string11012 = (Object)new_Type_String(L"b");
constant23857 = (Object)new_AST_Constant((Object)string11012);
// =
send109508 = (Object)new_AST_Send((Object)send109507, (Object)SMB__equal, 1, (Object)constant23857);
// expression
send109509 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
assign13833 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109509);
// class
send109510 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109511 = (Object)new_AST_Send((Object)send109510, (Object)symbol30738, 0);
// =
send109512 = (Object)new_AST_Send((Object)send109511, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109513 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// class
send109514 = (Object)new_AST_Send((Object)send109513, (Object)SMB_class, 0);
// should
send109515 = (Object)new_AST_Send((Object)send109514, (Object)symbol30738, 0);
// =
send109516 = (Object)new_AST_Send((Object)send109515, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109517 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// name
send109518 = (Object)new_AST_Send((Object)send109517, (Object)SMB_name, 0);
// should
send109519 = (Object)new_AST_Send((Object)send109518, (Object)symbol30738, 0);
string11013 = (Object)new_Type_String(L"c");
constant23858 = (Object)new_AST_Constant((Object)string11013);
// =
send109520 = (Object)new_AST_Send((Object)send109519, (Object)SMB__equal, 1, (Object)constant23858);
// expression
send109521 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
// class
send109522 = (Object)new_AST_Send((Object)send109521, (Object)SMB_class, 0);
// should
send109523 = (Object)new_AST_Send((Object)send109522, (Object)symbol30738, 0);
// =
send109524 = (Object)new_AST_Send((Object)send109523, (Object)SMB__equal, 1, (Object)classreference11511);
string11014 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant23859 = (Object)new_AST_Constant((Object)string11014);
// on:
send109525 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23859);
assign13834 = (Object)new_AST_Assign((Object)localvariable18376, (Object)send109525);
// match:
send109526 = (Object)new_AST_Send((Object)localvariable18375, (Object)symbol30695, 1, (Object)localvariable18376);
assign13835 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109526);
// class
send109527 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109528 = (Object)new_AST_Send((Object)send109527, (Object)symbol30738, 0);
// =
send109529 = (Object)new_AST_Send((Object)send109528, (Object)SMB__equal, 1, (Object)classreference11522);
// expression
send109530 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
assign13836 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109530);
// class
send109531 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109532 = (Object)new_AST_Send((Object)send109531, (Object)symbol30738, 0);
// =
send109533 = (Object)new_AST_Send((Object)send109532, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109534 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// class
send109535 = (Object)new_AST_Send((Object)send109534, (Object)SMB_class, 0);
// should
send109536 = (Object)new_AST_Send((Object)send109535, (Object)symbol30738, 0);
// =
send109537 = (Object)new_AST_Send((Object)send109536, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109538 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// name
send109539 = (Object)new_AST_Send((Object)send109538, (Object)SMB_name, 0);
// should
send109540 = (Object)new_AST_Send((Object)send109539, (Object)symbol30738, 0);
string11015 = (Object)new_Type_String(L"a");
constant23860 = (Object)new_AST_Constant((Object)string11015);
// =
send109541 = (Object)new_AST_Send((Object)send109540, (Object)SMB__equal, 1, (Object)constant23860);
// expression
send109542 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
assign13837 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109542);
// class
send109543 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109544 = (Object)new_AST_Send((Object)send109543, (Object)symbol30738, 0);
// =
send109545 = (Object)new_AST_Send((Object)send109544, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109546 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// class
send109547 = (Object)new_AST_Send((Object)send109546, (Object)SMB_class, 0);
// should
send109548 = (Object)new_AST_Send((Object)send109547, (Object)symbol30738, 0);
// =
send109549 = (Object)new_AST_Send((Object)send109548, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109550 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// name
send109551 = (Object)new_AST_Send((Object)send109550, (Object)SMB_name, 0);
// should
send109552 = (Object)new_AST_Send((Object)send109551, (Object)symbol30738, 0);
string11016 = (Object)new_Type_String(L"b");
constant23861 = (Object)new_AST_Constant((Object)string11016);
// =
send109553 = (Object)new_AST_Send((Object)send109552, (Object)SMB__equal, 1, (Object)constant23861);
// expression
send109554 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
assign13838 = (Object)new_AST_Assign((Object)localvariable18377, (Object)send109554);
// class
send109555 = (Object)new_AST_Send((Object)localvariable18377, (Object)SMB_class, 0);
// should
send109556 = (Object)new_AST_Send((Object)send109555, (Object)symbol30738, 0);
// =
send109557 = (Object)new_AST_Send((Object)send109556, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109558 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// class
send109559 = (Object)new_AST_Send((Object)send109558, (Object)SMB_class, 0);
// should
send109560 = (Object)new_AST_Send((Object)send109559, (Object)symbol30738, 0);
// =
send109561 = (Object)new_AST_Send((Object)send109560, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109562 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30574, 0);
// name
send109563 = (Object)new_AST_Send((Object)send109562, (Object)SMB_name, 0);
// should
send109564 = (Object)new_AST_Send((Object)send109563, (Object)symbol30738, 0);
string11017 = (Object)new_Type_String(L"c");
constant23862 = (Object)new_AST_Constant((Object)string11017);
// =
send109565 = (Object)new_AST_Send((Object)send109564, (Object)SMB__equal, 1, (Object)constant23862);
// expression
send109566 = (Object)new_AST_Send((Object)localvariable18377, (Object)symbol30572, 0);
// class
send109567 = (Object)new_AST_Send((Object)send109566, (Object)SMB_class, 0);
// should
send109568 = (Object)new_AST_Send((Object)send109567, (Object)symbol30738, 0);
// =
send109569 = (Object)new_AST_Send((Object)send109568, (Object)SMB__equal, 1, (Object)classreference11511);
method31385 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16624, 34, assign13828, assign13829, assign13830, send109484, assign13831, send109488, send109492, send109496, assign13832, send109500, send109504, send109508, assign13833, send109512, send109516, send109520, send109524, assign13834, assign13835, send109529, assign13836, send109533, send109537, send109541, assign13837, send109545, send109549, send109553, assign13838, send109557, send109561, send109565, send109569, Self);
symbol30480 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure31291 = (Object)new_Runtime_MethodClosure(method31385);
store_method((Type_Class)class5268, (Type_Symbol)symbol30480, (Runtime_MethodClosure)methodclosure31291);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable18378 = (Object)new_AST_Variable_named(L"parser");
localvariable18379 = (Object)new_AST_Variable_named(L"string");
localvariable18380 = (Object)new_AST_Variable_named(L"result");
array16625 = (Object)new_Type_Array_with(3, (Object)localvariable18378, (Object)localvariable18379, (Object)localvariable18380);
// expression
send109570 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30572, 0);
assign13839 = (Object)new_AST_Assign((Object)localvariable18378, (Object)send109570);
string11018 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23863 = (Object)new_AST_Constant((Object)string11018);
// on:
send109571 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23863);
assign13840 = (Object)new_AST_Assign((Object)localvariable18379, (Object)send109571);
// match:
send109572 = (Object)new_AST_Send((Object)localvariable18378, (Object)symbol30695, 1, (Object)localvariable18379);
assign13841 = (Object)new_AST_Assign((Object)localvariable18380, (Object)send109572);
// class
send109573 = (Object)new_AST_Send((Object)localvariable18380, (Object)SMB_class, 0);
// should
send109574 = (Object)new_AST_Send((Object)send109573, (Object)symbol30738, 0);
// =
send109575 = (Object)new_AST_Send((Object)send109574, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109576 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30574, 0);
// class
send109577 = (Object)new_AST_Send((Object)send109576, (Object)SMB_class, 0);
// should
send109578 = (Object)new_AST_Send((Object)send109577, (Object)symbol30738, 0);
// =
send109579 = (Object)new_AST_Send((Object)send109578, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109580 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30574, 0);
// name
send109581 = (Object)new_AST_Send((Object)send109580, (Object)SMB_name, 0);
// should
send109582 = (Object)new_AST_Send((Object)send109581, (Object)symbol30738, 0);
string11019 = (Object)new_Type_String(L"a");
constant23864 = (Object)new_AST_Constant((Object)string11019);
// =
send109583 = (Object)new_AST_Send((Object)send109582, (Object)SMB__equal, 1, (Object)constant23864);
// expression
send109584 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30572, 0);
assign13842 = (Object)new_AST_Assign((Object)localvariable18380, (Object)send109584);
// class
send109585 = (Object)new_AST_Send((Object)localvariable18380, (Object)SMB_class, 0);
// should
send109586 = (Object)new_AST_Send((Object)send109585, (Object)symbol30738, 0);
// =
send109587 = (Object)new_AST_Send((Object)send109586, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109588 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30574, 0);
// class
send109589 = (Object)new_AST_Send((Object)send109588, (Object)SMB_class, 0);
// should
send109590 = (Object)new_AST_Send((Object)send109589, (Object)symbol30738, 0);
// =
send109591 = (Object)new_AST_Send((Object)send109590, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109592 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30574, 0);
// name
send109593 = (Object)new_AST_Send((Object)send109592, (Object)SMB_name, 0);
// should
send109594 = (Object)new_AST_Send((Object)send109593, (Object)symbol30738, 0);
string11020 = (Object)new_Type_String(L"b");
constant23865 = (Object)new_AST_Constant((Object)string11020);
// =
send109595 = (Object)new_AST_Send((Object)send109594, (Object)SMB__equal, 1, (Object)constant23865);
// expression
send109596 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30572, 0);
assign13843 = (Object)new_AST_Assign((Object)localvariable18380, (Object)send109596);
// class
send109597 = (Object)new_AST_Send((Object)localvariable18380, (Object)SMB_class, 0);
// should
send109598 = (Object)new_AST_Send((Object)send109597, (Object)symbol30738, 0);
// =
send109599 = (Object)new_AST_Send((Object)send109598, (Object)SMB__equal, 1, (Object)classreference11515);
// variable
send109600 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30574, 0);
// class
send109601 = (Object)new_AST_Send((Object)send109600, (Object)SMB_class, 0);
// should
send109602 = (Object)new_AST_Send((Object)send109601, (Object)symbol30738, 0);
// =
send109603 = (Object)new_AST_Send((Object)send109602, (Object)SMB__equal, 1, (Object)classreference11507);
// variable
send109604 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30574, 0);
// name
send109605 = (Object)new_AST_Send((Object)send109604, (Object)SMB_name, 0);
// should
send109606 = (Object)new_AST_Send((Object)send109605, (Object)symbol30738, 0);
string11021 = (Object)new_Type_String(L"c");
constant23866 = (Object)new_AST_Constant((Object)string11021);
// =
send109607 = (Object)new_AST_Send((Object)send109606, (Object)SMB__equal, 1, (Object)constant23866);
// expression
send109608 = (Object)new_AST_Send((Object)localvariable18380, (Object)symbol30572, 0);
// class
send109609 = (Object)new_AST_Send((Object)send109608, (Object)SMB_class, 0);
// should
send109610 = (Object)new_AST_Send((Object)send109609, (Object)symbol30738, 0);
// =
send109611 = (Object)new_AST_Send((Object)send109610, (Object)SMB__equal, 1, (Object)classreference11511);
method31386 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16625, 16, assign13839, assign13840, assign13841, send109575, send109579, send109583, assign13842, send109587, send109591, send109595, assign13843, send109599, send109603, send109607, send109611, Self);
symbol30505 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure31292 = (Object)new_Runtime_MethodClosure(method31386);
store_method((Type_Class)class5268, (Type_Symbol)symbol30505, (Runtime_MethodClosure)methodclosure31292);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable18381 = (Object)new_AST_Variable_named(L"parser");
localvariable18382 = (Object)new_AST_Variable_named(L"string");
localvariable18383 = (Object)new_AST_Variable_named(L"result");
array16626 = (Object)new_Type_Array_with(3, (Object)localvariable18381, (Object)localvariable18382, (Object)localvariable18383);
// block
send109612 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30799, 0);
assign13844 = (Object)new_AST_Assign((Object)localvariable18381, (Object)send109612);
string11022 = (Object)new_Type_String(L"[]");
constant23867 = (Object)new_AST_Constant((Object)string11022);
// on:
send109613 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23867);
assign13845 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109613);
// match:
send109614 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13846 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109614);
// class
send109615 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109616 = (Object)new_AST_Send((Object)send109615, (Object)symbol30738, 0);
// =
send109617 = (Object)new_AST_Send((Object)send109616, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109618 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109619 = (Object)new_AST_Send((Object)send109618, (Object)SMB_size, 0);
// should
send109620 = (Object)new_AST_Send((Object)send109619, (Object)symbol30738, 0);
smallint10900 = (Object)new_Type_SmallInt(0);
constant23868 = (Object)new_AST_Constant((Object)smallint10900);
// =
send109621 = (Object)new_AST_Send((Object)send109620, (Object)SMB__equal, 1, (Object)constant23868);
// parameters
send109622 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109623 = (Object)new_AST_Send((Object)send109622, (Object)SMB_size, 0);
// should
send109624 = (Object)new_AST_Send((Object)send109623, (Object)symbol30738, 0);
smallint10901 = (Object)new_Type_SmallInt(0);
constant23869 = (Object)new_AST_Constant((Object)smallint10901);
// =
send109625 = (Object)new_AST_Send((Object)send109624, (Object)SMB__equal, 1, (Object)constant23869);
// statements
send109626 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109627 = (Object)new_AST_Send((Object)send109626, (Object)SMB_size, 0);
// should
send109628 = (Object)new_AST_Send((Object)send109627, (Object)symbol30738, 0);
smallint10902 = (Object)new_Type_SmallInt(0);
constant23870 = (Object)new_AST_Constant((Object)smallint10902);
// =
send109629 = (Object)new_AST_Send((Object)send109628, (Object)SMB__equal, 1, (Object)constant23870);
string11023 = (Object)new_Type_String(L"[||]");
constant23871 = (Object)new_AST_Constant((Object)string11023);
// on:
send109630 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23871);
assign13847 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109630);
// match:
send109631 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13848 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109631);
// class
send109632 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109633 = (Object)new_AST_Send((Object)send109632, (Object)symbol30738, 0);
// =
send109634 = (Object)new_AST_Send((Object)send109633, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109635 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109636 = (Object)new_AST_Send((Object)send109635, (Object)SMB_size, 0);
// should
send109637 = (Object)new_AST_Send((Object)send109636, (Object)symbol30738, 0);
smallint10903 = (Object)new_Type_SmallInt(0);
constant23872 = (Object)new_AST_Constant((Object)smallint10903);
// =
send109638 = (Object)new_AST_Send((Object)send109637, (Object)SMB__equal, 1, (Object)constant23872);
// parameters
send109639 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109640 = (Object)new_AST_Send((Object)send109639, (Object)SMB_size, 0);
// should
send109641 = (Object)new_AST_Send((Object)send109640, (Object)symbol30738, 0);
smallint10904 = (Object)new_Type_SmallInt(0);
constant23873 = (Object)new_AST_Constant((Object)smallint10904);
// =
send109642 = (Object)new_AST_Send((Object)send109641, (Object)SMB__equal, 1, (Object)constant23873);
// statements
send109643 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109644 = (Object)new_AST_Send((Object)send109643, (Object)SMB_size, 0);
// should
send109645 = (Object)new_AST_Send((Object)send109644, (Object)symbol30738, 0);
smallint10905 = (Object)new_Type_SmallInt(0);
constant23874 = (Object)new_AST_Constant((Object)smallint10905);
// =
send109646 = (Object)new_AST_Send((Object)send109645, (Object)SMB__equal, 1, (Object)constant23874);
string11024 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant23875 = (Object)new_AST_Constant((Object)string11024);
// on:
send109647 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23875);
assign13849 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109647);
// match:
send109648 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13850 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109648);
// class
send109649 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109650 = (Object)new_AST_Send((Object)send109649, (Object)symbol30738, 0);
// =
send109651 = (Object)new_AST_Send((Object)send109650, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109652 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109653 = (Object)new_AST_Send((Object)send109652, (Object)SMB_size, 0);
// should
send109654 = (Object)new_AST_Send((Object)send109653, (Object)symbol30738, 0);
smallint10906 = (Object)new_Type_SmallInt(0);
constant23876 = (Object)new_AST_Constant((Object)smallint10906);
// =
send109655 = (Object)new_AST_Send((Object)send109654, (Object)SMB__equal, 1, (Object)constant23876);
// parameters
send109656 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109657 = (Object)new_AST_Send((Object)send109656, (Object)SMB_size, 0);
// should
send109658 = (Object)new_AST_Send((Object)send109657, (Object)symbol30738, 0);
smallint10907 = (Object)new_Type_SmallInt(4);
constant23877 = (Object)new_AST_Constant((Object)smallint10907);
// =
send109659 = (Object)new_AST_Send((Object)send109658, (Object)SMB__equal, 1, (Object)constant23877);
// statements
send109660 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109661 = (Object)new_AST_Send((Object)send109660, (Object)SMB_size, 0);
// should
send109662 = (Object)new_AST_Send((Object)send109661, (Object)symbol30738, 0);
smallint10908 = (Object)new_Type_SmallInt(0);
constant23878 = (Object)new_AST_Constant((Object)smallint10908);
// =
send109663 = (Object)new_AST_Send((Object)send109662, (Object)SMB__equal, 1, (Object)constant23878);
string11025 = (Object)new_Type_String(L"[ | a   f d| ]");
constant23879 = (Object)new_AST_Constant((Object)string11025);
// on:
send109664 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23879);
assign13851 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109664);
// match:
send109665 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13852 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109665);
// class
send109666 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109667 = (Object)new_AST_Send((Object)send109666, (Object)symbol30738, 0);
// =
send109668 = (Object)new_AST_Send((Object)send109667, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109669 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109670 = (Object)new_AST_Send((Object)send109669, (Object)SMB_size, 0);
// should
send109671 = (Object)new_AST_Send((Object)send109670, (Object)symbol30738, 0);
smallint10909 = (Object)new_Type_SmallInt(3);
constant23880 = (Object)new_AST_Constant((Object)smallint10909);
// =
send109672 = (Object)new_AST_Send((Object)send109671, (Object)SMB__equal, 1, (Object)constant23880);
// parameters
send109673 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109674 = (Object)new_AST_Send((Object)send109673, (Object)SMB_size, 0);
// should
send109675 = (Object)new_AST_Send((Object)send109674, (Object)symbol30738, 0);
smallint10910 = (Object)new_Type_SmallInt(0);
constant23881 = (Object)new_AST_Constant((Object)smallint10910);
// =
send109676 = (Object)new_AST_Send((Object)send109675, (Object)SMB__equal, 1, (Object)constant23881);
// statements
send109677 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109678 = (Object)new_AST_Send((Object)send109677, (Object)SMB_size, 0);
// should
send109679 = (Object)new_AST_Send((Object)send109678, (Object)symbol30738, 0);
smallint10911 = (Object)new_Type_SmallInt(0);
constant23882 = (Object)new_AST_Constant((Object)smallint10911);
// =
send109680 = (Object)new_AST_Send((Object)send109679, (Object)SMB__equal, 1, (Object)constant23882);
string11026 = (Object)new_Type_String(L"[ || b. d ]");
constant23883 = (Object)new_AST_Constant((Object)string11026);
// on:
send109681 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23883);
assign13853 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109681);
// match:
send109682 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13854 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109682);
// class
send109683 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109684 = (Object)new_AST_Send((Object)send109683, (Object)symbol30738, 0);
// =
send109685 = (Object)new_AST_Send((Object)send109684, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109686 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109687 = (Object)new_AST_Send((Object)send109686, (Object)SMB_size, 0);
// should
send109688 = (Object)new_AST_Send((Object)send109687, (Object)symbol30738, 0);
smallint10912 = (Object)new_Type_SmallInt(0);
constant23884 = (Object)new_AST_Constant((Object)smallint10912);
// =
send109689 = (Object)new_AST_Send((Object)send109688, (Object)SMB__equal, 1, (Object)constant23884);
// parameters
send109690 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109691 = (Object)new_AST_Send((Object)send109690, (Object)SMB_size, 0);
// should
send109692 = (Object)new_AST_Send((Object)send109691, (Object)symbol30738, 0);
smallint10913 = (Object)new_Type_SmallInt(0);
constant23885 = (Object)new_AST_Constant((Object)smallint10913);
// =
send109693 = (Object)new_AST_Send((Object)send109692, (Object)SMB__equal, 1, (Object)constant23885);
// statements
send109694 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109695 = (Object)new_AST_Send((Object)send109694, (Object)SMB_size, 0);
// should
send109696 = (Object)new_AST_Send((Object)send109695, (Object)symbol30738, 0);
smallint10914 = (Object)new_Type_SmallInt(2);
constant23886 = (Object)new_AST_Constant((Object)smallint10914);
// =
send109697 = (Object)new_AST_Send((Object)send109696, (Object)SMB__equal, 1, (Object)constant23886);
string11027 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant23887 = (Object)new_AST_Constant((Object)string11027);
// on:
send109698 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23887);
assign13855 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109698);
// match:
send109699 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13856 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109699);
// class
send109700 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109701 = (Object)new_AST_Send((Object)send109700, (Object)symbol30738, 0);
// =
send109702 = (Object)new_AST_Send((Object)send109701, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109703 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109704 = (Object)new_AST_Send((Object)send109703, (Object)SMB_size, 0);
// should
send109705 = (Object)new_AST_Send((Object)send109704, (Object)symbol30738, 0);
smallint10915 = (Object)new_Type_SmallInt(0);
constant23888 = (Object)new_AST_Constant((Object)smallint10915);
// =
send109706 = (Object)new_AST_Send((Object)send109705, (Object)SMB__equal, 1, (Object)constant23888);
// parameters
send109707 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109708 = (Object)new_AST_Send((Object)send109707, (Object)SMB_size, 0);
// should
send109709 = (Object)new_AST_Send((Object)send109708, (Object)symbol30738, 0);
smallint10916 = (Object)new_Type_SmallInt(0);
constant23889 = (Object)new_AST_Constant((Object)smallint10916);
// =
send109710 = (Object)new_AST_Send((Object)send109709, (Object)SMB__equal, 1, (Object)constant23889);
// statements
send109711 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109712 = (Object)new_AST_Send((Object)send109711, (Object)SMB_size, 0);
// should
send109713 = (Object)new_AST_Send((Object)send109712, (Object)symbol30738, 0);
smallint10917 = (Object)new_Type_SmallInt(2);
constant23890 = (Object)new_AST_Constant((Object)smallint10917);
// =
send109714 = (Object)new_AST_Send((Object)send109713, (Object)SMB__equal, 1, (Object)constant23890);
string11028 = (Object)new_Type_String(L"[ || b. d. ]");
constant23891 = (Object)new_AST_Constant((Object)string11028);
// on:
send109715 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23891);
assign13857 = (Object)new_AST_Assign((Object)localvariable18382, (Object)send109715);
// match:
send109716 = (Object)new_AST_Send((Object)localvariable18381, (Object)symbol30695, 1, (Object)localvariable18382);
assign13858 = (Object)new_AST_Assign((Object)localvariable18383, (Object)send109716);
// class
send109717 = (Object)new_AST_Send((Object)localvariable18383, (Object)SMB_class, 0);
// should
send109718 = (Object)new_AST_Send((Object)send109717, (Object)symbol30738, 0);
// =
send109719 = (Object)new_AST_Send((Object)send109718, (Object)SMB__equal, 1, (Object)classreference11514);
// temporaries
send109720 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30604, 0);
// size
send109721 = (Object)new_AST_Send((Object)send109720, (Object)SMB_size, 0);
// should
send109722 = (Object)new_AST_Send((Object)send109721, (Object)symbol30738, 0);
smallint10918 = (Object)new_Type_SmallInt(0);
constant23892 = (Object)new_AST_Constant((Object)smallint10918);
// =
send109723 = (Object)new_AST_Send((Object)send109722, (Object)SMB__equal, 1, (Object)constant23892);
// parameters
send109724 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30582, 0);
// size
send109725 = (Object)new_AST_Send((Object)send109724, (Object)SMB_size, 0);
// should
send109726 = (Object)new_AST_Send((Object)send109725, (Object)symbol30738, 0);
smallint10919 = (Object)new_Type_SmallInt(0);
constant23893 = (Object)new_AST_Constant((Object)smallint10919);
// =
send109727 = (Object)new_AST_Send((Object)send109726, (Object)SMB__equal, 1, (Object)constant23893);
// statements
send109728 = (Object)new_AST_Send((Object)localvariable18383, (Object)symbol30599, 0);
// size
send109729 = (Object)new_AST_Send((Object)send109728, (Object)SMB_size, 0);
// should
send109730 = (Object)new_AST_Send((Object)send109729, (Object)symbol30738, 0);
smallint10920 = (Object)new_Type_SmallInt(2);
constant23894 = (Object)new_AST_Constant((Object)smallint10920);
// =
send109731 = (Object)new_AST_Send((Object)send109730, (Object)SMB__equal, 1, (Object)constant23894);
method31387 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16626, 44, assign13844, assign13845, assign13846, send109617, send109621, send109625, send109629, assign13847, assign13848, send109634, send109638, send109642, send109646, assign13849, assign13850, send109651, send109655, send109659, send109663, assign13851, assign13852, send109668, send109672, send109676, send109680, assign13853, assign13854, send109685, send109689, send109693, send109697, assign13855, assign13856, send109702, send109706, send109710, send109714, assign13857, assign13858, send109719, send109723, send109727, send109731, Self);
symbol30469 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure31293 = (Object)new_Runtime_MethodClosure(method31387);
store_method((Type_Class)class5268, (Type_Symbol)symbol30469, (Runtime_MethodClosure)methodclosure31293);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable18384 = (Object)new_AST_Variable_named(L"parser");
localvariable18385 = (Object)new_AST_Variable_named(L"string");
array16627 = (Object)new_Type_Array_with(2, (Object)localvariable18384, (Object)localvariable18385);
// symbolKeywords
send109732 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30829, 0);
assign13859 = (Object)new_AST_Assign((Object)localvariable18384, (Object)send109732);
string11029 = (Object)new_Type_String(L"abcd:def: ");
constant23895 = (Object)new_AST_Constant((Object)string11029);
// on:
send109733 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23895);
assign13860 = (Object)new_AST_Assign((Object)localvariable18385, (Object)send109733);
// match:
send109734 = (Object)new_AST_Send((Object)localvariable18384, (Object)symbol30695, 1, (Object)localvariable18385);
// should
send109735 = (Object)new_AST_Send((Object)send109734, (Object)symbol30738, 0);
string11030 = (Object)new_Type_String(L"abcd:def:");
constant23896 = (Object)new_AST_Constant((Object)string11030);
// =
send109736 = (Object)new_AST_Send((Object)send109735, (Object)SMB__equal, 1, (Object)constant23896);
// position
send109737 = (Object)new_AST_Send((Object)localvariable18385, (Object)symbol30757, 0);
// should
send109738 = (Object)new_AST_Send((Object)send109737, (Object)symbol30738, 0);
smallint10921 = (Object)new_Type_SmallInt(9);
constant23897 = (Object)new_AST_Constant((Object)smallint10921);
// =
send109739 = (Object)new_AST_Send((Object)send109738, (Object)SMB__equal, 1, (Object)constant23897);
string11031 = (Object)new_Type_String(L"abcd ");
constant23898 = (Object)new_AST_Constant((Object)string11031);
// on:
send109740 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23898);
assign13861 = (Object)new_AST_Assign((Object)localvariable18385, (Object)send109740);
// match:
send109741 = (Object)new_AST_Send((Object)localvariable18384, (Object)symbol30695, 1, (Object)localvariable18385);
// should
send109742 = (Object)new_AST_Send((Object)send109741, (Object)symbol30738, 0);
// be
send109743 = (Object)new_AST_Send((Object)send109742, (Object)symbol30837, 0);
// isNil
send109744 = (Object)new_AST_Send((Object)send109743, (Object)SMB_isNil, 0);
// position
send109745 = (Object)new_AST_Send((Object)localvariable18385, (Object)symbol30757, 0);
// should
send109746 = (Object)new_AST_Send((Object)send109745, (Object)symbol30738, 0);
smallint10922 = (Object)new_Type_SmallInt(0);
constant23899 = (Object)new_AST_Constant((Object)smallint10922);
// =
send109747 = (Object)new_AST_Send((Object)send109746, (Object)SMB__equal, 1, (Object)constant23899);
method31388 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16627, 8, assign13859, assign13860, send109736, send109739, assign13861, send109744, send109747, Self);
symbol30497 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure31294 = (Object)new_Runtime_MethodClosure(method31388);
store_method((Type_Class)class5268, (Type_Symbol)symbol30497, (Runtime_MethodClosure)methodclosure31294);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable18386 = (Object)new_AST_Variable_named(L"parser");
localvariable18387 = (Object)new_AST_Variable_named(L"string");
localvariable18388 = (Object)new_AST_Variable_named(L"result");
array16628 = (Object)new_Type_Array_with(3, (Object)localvariable18386, (Object)localvariable18387, (Object)localvariable18388);
// binaryMessageDefinition
send109748 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30833, 0);
assign13862 = (Object)new_AST_Assign((Object)localvariable18386, (Object)send109748);
string11032 = (Object)new_Type_String(L"+= a");
constant23900 = (Object)new_AST_Constant((Object)string11032);
// on:
send109749 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23900);
assign13863 = (Object)new_AST_Assign((Object)localvariable18387, (Object)send109749);
// match:
send109750 = (Object)new_AST_Send((Object)localvariable18386, (Object)symbol30695, 1, (Object)localvariable18387);
assign13864 = (Object)new_AST_Assign((Object)localvariable18388, (Object)send109750);
// class
send109751 = (Object)new_AST_Send((Object)localvariable18388, (Object)SMB_class, 0);
// should
send109752 = (Object)new_AST_Send((Object)send109751, (Object)symbol30738, 0);
// =
send109753 = (Object)new_AST_Send((Object)send109752, (Object)SMB__equal, 1, (Object)classreference11502);
// selector
send109754 = (Object)new_AST_Send((Object)localvariable18388, (Object)symbol30580, 0);
// printString
send109755 = (Object)new_AST_Send((Object)send109754, (Object)symbol30698, 0);
// should
send109756 = (Object)new_AST_Send((Object)send109755, (Object)symbol30738, 0);
string11033 = (Object)new_Type_String(L"+=");
constant23901 = (Object)new_AST_Constant((Object)string11033);
// =
send109757 = (Object)new_AST_Send((Object)send109756, (Object)SMB__equal, 1, (Object)constant23901);
// parameter
send109758 = (Object)new_AST_Send((Object)localvariable18388, (Object)symbol30594, 0);
// class
send109759 = (Object)new_AST_Send((Object)send109758, (Object)SMB_class, 0);
// should
send109760 = (Object)new_AST_Send((Object)send109759, (Object)symbol30738, 0);
// =
send109761 = (Object)new_AST_Send((Object)send109760, (Object)SMB__equal, 1, (Object)classreference11507);
// parameter
send109762 = (Object)new_AST_Send((Object)localvariable18388, (Object)symbol30594, 0);
// name
send109763 = (Object)new_AST_Send((Object)send109762, (Object)SMB_name, 0);
// asString
send109764 = (Object)new_AST_Send((Object)send109763, (Object)SMB_asString, 0);
// should
send109765 = (Object)new_AST_Send((Object)send109764, (Object)symbol30738, 0);
string11034 = (Object)new_Type_String(L"a");
constant23902 = (Object)new_AST_Constant((Object)string11034);
// =
send109766 = (Object)new_AST_Send((Object)send109765, (Object)SMB__equal, 1, (Object)constant23902);
// position
send109767 = (Object)new_AST_Send((Object)localvariable18387, (Object)symbol30757, 0);
// should
send109768 = (Object)new_AST_Send((Object)send109767, (Object)symbol30738, 0);
smallint10923 = (Object)new_Type_SmallInt(4);
constant23903 = (Object)new_AST_Constant((Object)smallint10923);
// =
send109769 = (Object)new_AST_Send((Object)send109768, (Object)SMB__equal, 1, (Object)constant23903);
string11035 = (Object)new_Type_String(L"|= a");
constant23904 = (Object)new_AST_Constant((Object)string11035);
// on:
send109770 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23904);
assign13865 = (Object)new_AST_Assign((Object)localvariable18387, (Object)send109770);
// match:
send109771 = (Object)new_AST_Send((Object)localvariable18386, (Object)symbol30695, 1, (Object)localvariable18387);
// should
send109772 = (Object)new_AST_Send((Object)send109771, (Object)symbol30738, 0);
// be
send109773 = (Object)new_AST_Send((Object)send109772, (Object)symbol30837, 0);
// isNil
send109774 = (Object)new_AST_Send((Object)send109773, (Object)SMB_isNil, 0);
// position
send109775 = (Object)new_AST_Send((Object)localvariable18387, (Object)symbol30757, 0);
// should
send109776 = (Object)new_AST_Send((Object)send109775, (Object)symbol30738, 0);
smallint10924 = (Object)new_Type_SmallInt(0);
constant23905 = (Object)new_AST_Constant((Object)smallint10924);
// =
send109777 = (Object)new_AST_Send((Object)send109776, (Object)SMB__equal, 1, (Object)constant23905);
string11036 = (Object)new_Type_String(L"-= abc d");
constant23906 = (Object)new_AST_Constant((Object)string11036);
// on:
send109778 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23906);
assign13866 = (Object)new_AST_Assign((Object)localvariable18387, (Object)send109778);
// match:
send109779 = (Object)new_AST_Send((Object)localvariable18386, (Object)symbol30695, 1, (Object)localvariable18387);
assign13867 = (Object)new_AST_Assign((Object)localvariable18388, (Object)send109779);
// class
send109780 = (Object)new_AST_Send((Object)localvariable18388, (Object)SMB_class, 0);
// should
send109781 = (Object)new_AST_Send((Object)send109780, (Object)symbol30738, 0);
// =
send109782 = (Object)new_AST_Send((Object)send109781, (Object)SMB__equal, 1, (Object)classreference11502);
// selector
send109783 = (Object)new_AST_Send((Object)localvariable18388, (Object)symbol30580, 0);
// printString
send109784 = (Object)new_AST_Send((Object)send109783, (Object)symbol30698, 0);
// should
send109785 = (Object)new_AST_Send((Object)send109784, (Object)symbol30738, 0);
string11037 = (Object)new_Type_String(L"-=");
constant23907 = (Object)new_AST_Constant((Object)string11037);
// =
send109786 = (Object)new_AST_Send((Object)send109785, (Object)SMB__equal, 1, (Object)constant23907);
// parameter
send109787 = (Object)new_AST_Send((Object)localvariable18388, (Object)symbol30594, 0);
// name
send109788 = (Object)new_AST_Send((Object)send109787, (Object)SMB_name, 0);
// asString
send109789 = (Object)new_AST_Send((Object)send109788, (Object)SMB_asString, 0);
// should
send109790 = (Object)new_AST_Send((Object)send109789, (Object)symbol30738, 0);
string11038 = (Object)new_Type_String(L"abc");
constant23908 = (Object)new_AST_Constant((Object)string11038);
// =
send109791 = (Object)new_AST_Send((Object)send109790, (Object)SMB__equal, 1, (Object)constant23908);
// parameter
send109792 = (Object)new_AST_Send((Object)localvariable18388, (Object)symbol30594, 0);
// class
send109793 = (Object)new_AST_Send((Object)send109792, (Object)SMB_class, 0);
// should
send109794 = (Object)new_AST_Send((Object)send109793, (Object)symbol30738, 0);
// =
send109795 = (Object)new_AST_Send((Object)send109794, (Object)SMB__equal, 1, (Object)classreference11507);
// position
send109796 = (Object)new_AST_Send((Object)localvariable18387, (Object)symbol30757, 0);
// should
send109797 = (Object)new_AST_Send((Object)send109796, (Object)symbol30738, 0);
smallint10925 = (Object)new_Type_SmallInt(6);
constant23909 = (Object)new_AST_Constant((Object)smallint10925);
// =
send109798 = (Object)new_AST_Send((Object)send109797, (Object)SMB__equal, 1, (Object)constant23909);
method31389 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16628, 19, assign13862, assign13863, assign13864, send109753, send109757, send109761, send109766, send109769, assign13865, send109774, send109777, assign13866, assign13867, send109782, send109786, send109791, send109795, send109798, Self);
symbol30489 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure31295 = (Object)new_Runtime_MethodClosure(method31389);
store_method((Type_Class)class5268, (Type_Symbol)symbol30489, (Runtime_MethodClosure)methodclosure31295);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable18389 = (Object)new_AST_Variable_named(L"parser");
localvariable18390 = (Object)new_AST_Variable_named(L"string");
array16629 = (Object)new_Type_Array_with(2, (Object)localvariable18389, (Object)localvariable18390);
// identifier
send109799 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30815, 0);
assign13868 = (Object)new_AST_Assign((Object)localvariable18389, (Object)send109799);
string11039 = (Object)new_Type_String(L"abcd ");
constant23910 = (Object)new_AST_Constant((Object)string11039);
// on:
send109800 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23910);
assign13869 = (Object)new_AST_Assign((Object)localvariable18390, (Object)send109800);
// match:
send109801 = (Object)new_AST_Send((Object)localvariable18389, (Object)symbol30695, 1, (Object)localvariable18390);
// should
send109802 = (Object)new_AST_Send((Object)send109801, (Object)symbol30738, 0);
string11040 = (Object)new_Type_String(L"abcd");
constant23911 = (Object)new_AST_Constant((Object)string11040);
// =
send109803 = (Object)new_AST_Send((Object)send109802, (Object)SMB__equal, 1, (Object)constant23911);
// position
send109804 = (Object)new_AST_Send((Object)localvariable18390, (Object)symbol30757, 0);
// should
send109805 = (Object)new_AST_Send((Object)send109804, (Object)symbol30738, 0);
smallint10926 = (Object)new_Type_SmallInt(4);
constant23912 = (Object)new_AST_Constant((Object)smallint10926);
// =
send109806 = (Object)new_AST_Send((Object)send109805, (Object)SMB__equal, 1, (Object)constant23912);
string11041 = (Object)new_Type_String(L"AbCd145 ");
constant23913 = (Object)new_AST_Constant((Object)string11041);
// on:
send109807 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23913);
assign13870 = (Object)new_AST_Assign((Object)localvariable18390, (Object)send109807);
// match:
send109808 = (Object)new_AST_Send((Object)localvariable18389, (Object)symbol30695, 1, (Object)localvariable18390);
// should
send109809 = (Object)new_AST_Send((Object)send109808, (Object)symbol30738, 0);
string11042 = (Object)new_Type_String(L"AbCd145");
constant23914 = (Object)new_AST_Constant((Object)string11042);
// =
send109810 = (Object)new_AST_Send((Object)send109809, (Object)SMB__equal, 1, (Object)constant23914);
// position
send109811 = (Object)new_AST_Send((Object)localvariable18390, (Object)symbol30757, 0);
// should
send109812 = (Object)new_AST_Send((Object)send109811, (Object)symbol30738, 0);
smallint10927 = (Object)new_Type_SmallInt(7);
constant23915 = (Object)new_AST_Constant((Object)smallint10927);
// =
send109813 = (Object)new_AST_Send((Object)send109812, (Object)SMB__equal, 1, (Object)constant23915);
string11043 = (Object)new_Type_String(L"1a");
constant23916 = (Object)new_AST_Constant((Object)string11043);
// on:
send109814 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23916);
assign13871 = (Object)new_AST_Assign((Object)localvariable18390, (Object)send109814);
// match:
send109815 = (Object)new_AST_Send((Object)localvariable18389, (Object)symbol30695, 1, (Object)localvariable18390);
// should
send109816 = (Object)new_AST_Send((Object)send109815, (Object)symbol30738, 0);
// be
send109817 = (Object)new_AST_Send((Object)send109816, (Object)symbol30837, 0);
// isNil
send109818 = (Object)new_AST_Send((Object)send109817, (Object)SMB_isNil, 0);
// position
send109819 = (Object)new_AST_Send((Object)localvariable18390, (Object)symbol30757, 0);
// should
send109820 = (Object)new_AST_Send((Object)send109819, (Object)symbol30738, 0);
smallint10928 = (Object)new_Type_SmallInt(0);
constant23917 = (Object)new_AST_Constant((Object)smallint10928);
// =
send109821 = (Object)new_AST_Send((Object)send109820, (Object)SMB__equal, 1, (Object)constant23917);
method31390 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16629, 11, assign13868, assign13869, send109803, send109806, assign13870, send109810, send109813, assign13871, send109818, send109821, Self);
symbol30510 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure31296 = (Object)new_Runtime_MethodClosure(method31390);
store_method((Type_Class)class5268, (Type_Symbol)symbol30510, (Runtime_MethodClosure)methodclosure31296);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable18391 = (Object)new_AST_Variable_named(L"parser");
localvariable18392 = (Object)new_AST_Variable_named(L"string");
localvariable18393 = (Object)new_AST_Variable_named(L"result");
array16630 = (Object)new_Type_Array_with(3, (Object)localvariable18391, (Object)localvariable18392, (Object)localvariable18393);
// characterConstant
send109822 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30780, 0);
assign13872 = (Object)new_AST_Assign((Object)localvariable18391, (Object)send109822);
string11044 = (Object)new_Type_String(L"a");
constant23918 = (Object)new_AST_Constant((Object)string11044);
// on:
send109823 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23918);
assign13873 = (Object)new_AST_Assign((Object)localvariable18392, (Object)send109823);
// match:
send109824 = (Object)new_AST_Send((Object)localvariable18391, (Object)symbol30695, 1, (Object)localvariable18392);
// should
send109825 = (Object)new_AST_Send((Object)send109824, (Object)symbol30738, 0);
// be
send109826 = (Object)new_AST_Send((Object)send109825, (Object)symbol30837, 0);
// isNil
send109827 = (Object)new_AST_Send((Object)send109826, (Object)SMB_isNil, 0);
// position
send109828 = (Object)new_AST_Send((Object)localvariable18392, (Object)symbol30757, 0);
// should
send109829 = (Object)new_AST_Send((Object)send109828, (Object)symbol30738, 0);
smallint10929 = (Object)new_Type_SmallInt(0);
constant23919 = (Object)new_AST_Constant((Object)smallint10929);
// =
send109830 = (Object)new_AST_Send((Object)send109829, (Object)SMB__equal, 1, (Object)constant23919);
string11045 = (Object)new_Type_String(L"$_");
constant23920 = (Object)new_AST_Constant((Object)string11045);
// on:
send109831 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23920);
assign13874 = (Object)new_AST_Assign((Object)localvariable18392, (Object)send109831);
// match:
send109832 = (Object)new_AST_Send((Object)localvariable18391, (Object)symbol30695, 1, (Object)localvariable18392);
assign13875 = (Object)new_AST_Assign((Object)localvariable18393, (Object)send109832);
// class
send109833 = (Object)new_AST_Send((Object)localvariable18393, (Object)SMB_class, 0);
// should
send109834 = (Object)new_AST_Send((Object)send109833, (Object)symbol30738, 0);
// =
send109835 = (Object)new_AST_Send((Object)send109834, (Object)SMB__equal, 1, (Object)classreference11519);
// char
send109836 = (Object)new_AST_Send((Object)localvariable18393, (Object)symbol30713, 0);
// should
send109837 = (Object)new_AST_Send((Object)send109836, (Object)symbol30738, 0);
character541 = (Object)new_Type_Character(L'_');
constant23921 = (Object)new_AST_Constant((Object)character541);
// =
send109838 = (Object)new_AST_Send((Object)send109837, (Object)SMB__equal, 1, (Object)constant23921);
// position
send109839 = (Object)new_AST_Send((Object)localvariable18392, (Object)symbol30757, 0);
// should
send109840 = (Object)new_AST_Send((Object)send109839, (Object)symbol30738, 0);
smallint10930 = (Object)new_Type_SmallInt(2);
constant23922 = (Object)new_AST_Constant((Object)smallint10930);
// =
send109841 = (Object)new_AST_Send((Object)send109840, (Object)SMB__equal, 1, (Object)constant23922);
method31391 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16630, 10, assign13872, assign13873, send109827, send109830, assign13874, assign13875, send109835, send109838, send109841, Self);
symbol30507 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure31297 = (Object)new_Runtime_MethodClosure(method31391);
store_method((Type_Class)class5268, (Type_Symbol)symbol30507, (Runtime_MethodClosure)methodclosure31297);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable18394 = (Object)new_AST_Variable_named(L"parser");
localvariable18395 = (Object)new_AST_Variable_named(L"string");
array16631 = (Object)new_Type_Array_with(2, (Object)localvariable18394, (Object)localvariable18395);
// separator
send109842 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30770, 0);
assign13876 = (Object)new_AST_Assign((Object)localvariable18394, (Object)send109842);
string11046 = (Object)new_Type_String(L"\"Test\"");
constant23923 = (Object)new_AST_Constant((Object)string11046);
// on:
send109843 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23923);
assign13877 = (Object)new_AST_Assign((Object)localvariable18395, (Object)send109843);
// match:
send109844 = (Object)new_AST_Send((Object)localvariable18394, (Object)symbol30695, 1, (Object)localvariable18395);
// should
send109845 = (Object)new_AST_Send((Object)send109844, (Object)symbol30738, 0);
// not
send109846 = (Object)new_AST_Send((Object)send109845, (Object)SMB_not, 0);
// be
send109847 = (Object)new_AST_Send((Object)send109846, (Object)symbol30837, 0);
// isNil
send109848 = (Object)new_AST_Send((Object)send109847, (Object)SMB_isNil, 0);
// position
send109849 = (Object)new_AST_Send((Object)localvariable18395, (Object)symbol30757, 0);
// should
send109850 = (Object)new_AST_Send((Object)send109849, (Object)symbol30738, 0);
smallint10931 = (Object)new_Type_SmallInt(6);
constant23924 = (Object)new_AST_Constant((Object)smallint10931);
// =
send109851 = (Object)new_AST_Send((Object)send109850, (Object)SMB__equal, 1, (Object)constant23924);
string11047 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant23925 = (Object)new_AST_Constant((Object)string11047);
// on:
send109852 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23925);
assign13878 = (Object)new_AST_Assign((Object)localvariable18395, (Object)send109852);
// match:
send109853 = (Object)new_AST_Send((Object)localvariable18394, (Object)symbol30695, 1, (Object)localvariable18395);
// should
send109854 = (Object)new_AST_Send((Object)send109853, (Object)symbol30738, 0);
// not
send109855 = (Object)new_AST_Send((Object)send109854, (Object)SMB_not, 0);
// be
send109856 = (Object)new_AST_Send((Object)send109855, (Object)symbol30837, 0);
// isNil
send109857 = (Object)new_AST_Send((Object)send109856, (Object)SMB_isNil, 0);
// position
send109858 = (Object)new_AST_Send((Object)localvariable18395, (Object)symbol30757, 0);
// should
send109859 = (Object)new_AST_Send((Object)send109858, (Object)symbol30738, 0);
smallint10932 = (Object)new_Type_SmallInt(18);
constant23926 = (Object)new_AST_Constant((Object)smallint10932);
// =
send109860 = (Object)new_AST_Send((Object)send109859, (Object)SMB__equal, 1, (Object)constant23926);
string11048 = (Object)new_Type_String(L"");
constant23927 = (Object)new_AST_Constant((Object)string11048);
// on:
send109861 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23927);
assign13879 = (Object)new_AST_Assign((Object)localvariable18395, (Object)send109861);
// match:
send109862 = (Object)new_AST_Send((Object)localvariable18394, (Object)symbol30695, 1, (Object)localvariable18395);
// should
send109863 = (Object)new_AST_Send((Object)send109862, (Object)symbol30738, 0);
// not
send109864 = (Object)new_AST_Send((Object)send109863, (Object)SMB_not, 0);
// be
send109865 = (Object)new_AST_Send((Object)send109864, (Object)symbol30837, 0);
// isNil
send109866 = (Object)new_AST_Send((Object)send109865, (Object)SMB_isNil, 0);
// position
send109867 = (Object)new_AST_Send((Object)localvariable18395, (Object)symbol30757, 0);
// should
send109868 = (Object)new_AST_Send((Object)send109867, (Object)symbol30738, 0);
smallint10933 = (Object)new_Type_SmallInt(0);
constant23928 = (Object)new_AST_Constant((Object)smallint10933);
// =
send109869 = (Object)new_AST_Send((Object)send109868, (Object)SMB__equal, 1, (Object)constant23928);
method31392 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16631, 11, assign13876, assign13877, send109848, send109851, assign13878, send109857, send109860, assign13879, send109866, send109869, Self);
symbol30490 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure31298 = (Object)new_Runtime_MethodClosure(method31392);
store_method((Type_Class)class5268, (Type_Symbol)symbol30490, (Runtime_MethodClosure)methodclosure31298);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable18396 = (Object)new_AST_Variable_named(L"parser");
localvariable18397 = (Object)new_AST_Variable_named(L"string");
array16632 = (Object)new_Type_Array_with(2, (Object)localvariable18396, (Object)localvariable18397);
// string
send109870 = (Object)new_AST_Send((Object)instancevariable13983, (Object)symbol30568, 0);
assign13880 = (Object)new_AST_Assign((Object)localvariable18396, (Object)send109870);
string11049 = (Object)new_Type_String(L"");
constant23929 = (Object)new_AST_Constant((Object)string11049);
// on:
send109871 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23929);
assign13881 = (Object)new_AST_Assign((Object)localvariable18397, (Object)send109871);
// match:
send109872 = (Object)new_AST_Send((Object)localvariable18396, (Object)symbol30695, 1, (Object)localvariable18397);
// should
send109873 = (Object)new_AST_Send((Object)send109872, (Object)symbol30738, 0);
// be
send109874 = (Object)new_AST_Send((Object)send109873, (Object)symbol30837, 0);
// isNil
send109875 = (Object)new_AST_Send((Object)send109874, (Object)SMB_isNil, 0);
// position
send109876 = (Object)new_AST_Send((Object)localvariable18397, (Object)symbol30757, 0);
// should
send109877 = (Object)new_AST_Send((Object)send109876, (Object)symbol30738, 0);
smallint10934 = (Object)new_Type_SmallInt(0);
constant23930 = (Object)new_AST_Constant((Object)smallint10934);
// =
send109878 = (Object)new_AST_Send((Object)send109877, (Object)SMB__equal, 1, (Object)constant23930);
string11050 = (Object)new_Type_String(L"\'abc\'");
constant23931 = (Object)new_AST_Constant((Object)string11050);
// on:
send109879 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23931);
assign13882 = (Object)new_AST_Assign((Object)localvariable18397, (Object)send109879);
// match:
send109880 = (Object)new_AST_Send((Object)localvariable18396, (Object)symbol30695, 1, (Object)localvariable18397);
// should
send109881 = (Object)new_AST_Send((Object)send109880, (Object)symbol30738, 0);
string11051 = (Object)new_Type_String(L"abc");
constant23932 = (Object)new_AST_Constant((Object)string11051);
// =
send109882 = (Object)new_AST_Send((Object)send109881, (Object)SMB__equal, 1, (Object)constant23932);
// position
send109883 = (Object)new_AST_Send((Object)localvariable18397, (Object)symbol30757, 0);
// should
send109884 = (Object)new_AST_Send((Object)send109883, (Object)symbol30738, 0);
smallint10935 = (Object)new_Type_SmallInt(5);
constant23933 = (Object)new_AST_Constant((Object)smallint10935);
// =
send109885 = (Object)new_AST_Send((Object)send109884, (Object)SMB__equal, 1, (Object)constant23933);
string11052 = (Object)new_Type_String(L"\'abc\'\'");
constant23934 = (Object)new_AST_Constant((Object)string11052);
// on:
send109886 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23934);
assign13883 = (Object)new_AST_Assign((Object)localvariable18397, (Object)send109886);
// match:
send109887 = (Object)new_AST_Send((Object)localvariable18396, (Object)symbol30695, 1, (Object)localvariable18397);
// should
send109888 = (Object)new_AST_Send((Object)send109887, (Object)symbol30738, 0);
string11053 = (Object)new_Type_String(L"abc");
constant23935 = (Object)new_AST_Constant((Object)string11053);
// =
send109889 = (Object)new_AST_Send((Object)send109888, (Object)SMB__equal, 1, (Object)constant23935);
// position
send109890 = (Object)new_AST_Send((Object)localvariable18397, (Object)symbol30757, 0);
// should
send109891 = (Object)new_AST_Send((Object)send109890, (Object)symbol30738, 0);
smallint10936 = (Object)new_Type_SmallInt(5);
constant23936 = (Object)new_AST_Constant((Object)smallint10936);
// =
send109892 = (Object)new_AST_Send((Object)send109891, (Object)SMB__equal, 1, (Object)constant23936);
string11054 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant23937 = (Object)new_AST_Constant((Object)string11054);
// on:
send109893 = (Object)new_AST_Send((Object)classreference11537, (Object)SMB_on_, 1, (Object)constant23937);
assign13884 = (Object)new_AST_Assign((Object)localvariable18397, (Object)send109893);
// match:
send109894 = (Object)new_AST_Send((Object)localvariable18396, (Object)symbol30695, 1, (Object)localvariable18397);
// should
send109895 = (Object)new_AST_Send((Object)send109894, (Object)symbol30738, 0);
string11055 = (Object)new_Type_String(L"abc\'d");
constant23938 = (Object)new_AST_Constant((Object)string11055);
// =
send109896 = (Object)new_AST_Send((Object)send109895, (Object)SMB__equal, 1, (Object)constant23938);
// position
send109897 = (Object)new_AST_Send((Object)localvariable18397, (Object)symbol30757, 0);
// should
send109898 = (Object)new_AST_Send((Object)send109897, (Object)symbol30738, 0);
smallint10937 = (Object)new_Type_SmallInt(8);
constant23939 = (Object)new_AST_Constant((Object)smallint10937);
// =
send109899 = (Object)new_AST_Send((Object)send109898, (Object)SMB__equal, 1, (Object)constant23939);
method31393 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16632, 14, assign13880, assign13881, send109875, send109878, assign13882, send109882, send109885, assign13883, send109889, send109892, assign13884, send109896, send109899, Self);
symbol30482 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure31299 = (Object)new_Runtime_MethodClosure(method31393);
store_method((Type_Class)class5268, (Type_Symbol)symbol30482, (Runtime_MethodClosure)methodclosure31299);

classreference11542 = (Object)new_Organization_ClassReference((Type_Class)class5268);
classreference11543 = (Object)new_Organization_ClassReference((Type_Class)class5225);
objectlayout7470 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7470)->values[0] = instancevariable13905;
((Type_Array)objectlayout7470)->values[1] = instancevariable13906;
((Type_Array)objectlayout7470)->values[2] = instancevariable13907;
((Type_Array)objectlayout7470)->values[3] = instancevariable13908;
((Type_Array)objectlayout7470)->values[4] = instancevariable13909;
instancevariable13984 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout7470)->values[5] = instancevariable13984;
symbol30424 = (Object)new_Type_Symbol_cached(L"Nil");
class5269 = (Object)new_Class_withMeta((Object)class5225, empty_object_layout, objectlayout7470);
((Type_Class)class5269)->name = (Type_Symbol)symbol30424;
metaclass4470 = (Object)HEADER(class5269);

// Nil>>isNil
//isNil
// 	^ true
method31394 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure31300 = (Object)new_Runtime_MethodClosure(method31394);
store_method((Type_Class)class5269, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure31300);

classreference11544 = (Object)new_Organization_ClassReference((Type_Class)class5269);
symbol30845 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send109900 = (Object)new_AST_Send((Object)classreference11544, (Object)symbol30845, 0);
// ~=
send109901 = (Object)new_AST_Send((Object)send107185, (Object)symbol30411, 1, (Object)send109900);
method31395 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109901);
symbol30425 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
methodclosure31301 = (Object)new_Runtime_MethodClosure(method31395);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30425, (Runtime_MethodClosure)methodclosure31301);


// Behavior>>superclass
//superclass
// 	"Answer the receiver's superclass, a Class."
// 
// 	^superclass
instancevariable13985 = (Object)new_AST_InstVariable(1, L"superclass");
method31396 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13985);
methodclosure31302 = (Object)new_Runtime_MethodClosure(method31396);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30417, (Runtime_MethodClosure)methodclosure31302);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable18398 = (Object)new_AST_Variable_named(L"sizeRequested");
array16633 = (Object)new_Type_Array_with(1, (Object)localvariable18398);
// basicNew:
send109902 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable18398);
// initialize
send109903 = (Object)new_AST_Send((Object)send109902, (Object)symbol30515, 0);
method31397 = (Object)new_AST_Method_with((Type_Array)array16633, (Type_Array)empty_Type_Array, 1, send109903);
methodclosure31303 = (Object)new_Runtime_MethodClosure(method31397);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30413, (Runtime_MethodClosure)methodclosure31303);


// Behavior>>pInstVarNames
//// new
send109904 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
method31398 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send109904);
symbol30429 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
methodclosure31304 = (Object)new_Runtime_MethodClosure(method31398);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30429, (Runtime_MethodClosure)methodclosure31304);


// Behavior>>instVariables
//localvariable18399 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable18400 = (Object)new_AST_Variable_named(L"instVars");
localvariable18401 = (Object)new_AST_Variable_named(L"instVar");
array16634 = (Object)new_Type_Array_with(3, (Object)localvariable18399, (Object)localvariable18400, (Object)localvariable18401);
symbol30430 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
// parentInstVariables
send109905 = (Object)new_AST_Send((Object)Self, (Object)symbol30430, 0);
assign13885 = (Object)new_AST_Assign((Object)localvariable18400, (Object)send109905);
// pInstVarNames
send109906 = (Object)new_AST_Send((Object)Self, (Object)symbol30429, 0);
localvariable18402 = (Object)new_AST_Variable_named(L"each");
array16635 = (Object)new_Type_Array_with(1, (Object)localvariable18402);
localvariable18403 = (Object)new_AST_Variable_named(L"var");
array16636 = (Object)new_Type_Array_with(1, (Object)localvariable18403);
// name
send109907 = (Object)new_AST_Send((Object)localvariable18403, (Object)SMB_name, 0);
// =
send109908 = (Object)new_AST_Send((Object)send109907, (Object)SMB__equal, 1, (Object)localvariable18402);
symbol30846 = (Object)new_Type_Symbol_cached(L"error:");
string11056 = (Object)new_Type_String(L"Double Declaration of \"");
constant23940 = (Object)new_AST_Constant((Object)string11056);
// ,
send109909 = (Object)new_AST_Send((Object)constant23940, (Object)SMB__concat, 1, (Object)localvariable18402);
string11057 = (Object)new_Type_String(L"\"");
constant23941 = (Object)new_AST_Constant((Object)string11057);
// ,
send109910 = (Object)new_AST_Send((Object)send109909, (Object)SMB__concat, 1, (Object)constant23941);
// error:
send109911 = (Object)new_AST_Send((Object)Self, (Object)symbol30846, 1, (Object)send109910);
block7427 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send109911);
// ifTrue:
send109912 = (Object)new_AST_Send((Object)send109908, (Object)SMB_ifTrue_, 1, (Object)block7427);
block7428 = (Object)new_AST_Block_with((Type_Array)array16636, (Type_Array)empty_Type_Array, 2, 1, send109912);
// do:
send109913 = (Object)new_AST_Send((Object)localvariable18400, (Object)symbol30552, 1, (Object)block7428);
// named:
send109914 = (Object)new_AST_Send((Object)classreference11485, (Object)symbol30518, 1, (Object)localvariable18402);
assign13886 = (Object)new_AST_Assign((Object)localvariable18401, (Object)send109914);
// size
send109915 = (Object)new_AST_Send((Object)localvariable18400, (Object)SMB_size, 0);
// localId:
send109916 = (Object)new_AST_Send((Object)localvariable18401, (Object)symbol30519, 1, (Object)send109915);
// add:
send109917 = (Object)new_AST_Send((Object)localvariable18400, (Object)symbol30553, 1, (Object)localvariable18401);
block7429 = (Object)new_AST_Block_with((Type_Array)array16635, (Type_Array)empty_Type_Array, 1, 4, send109913, assign13886, send109916, send109917);
// do:
send109918 = (Object)new_AST_Send((Object)send109906, (Object)symbol30552, 1, (Object)block7429);
method31399 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16634, 3, assign13885, send109918, localvariable18400);
symbol30422 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure31305 = (Object)new_Runtime_MethodClosure(method31399);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30422, (Runtime_MethodClosure)methodclosure31305);


// Behavior>>methods
//instancevariable13986 = (Object)new_AST_InstVariable(2, L"methods");
method31400 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13986);
symbol30414 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure31306 = (Object)new_Runtime_MethodClosure(method31400);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30414, (Runtime_MethodClosure)methodclosure31306);


// Behavior>>parentInstVariables
//localvariable18404 = (Object)new_AST_Variable_named(L"instVars");
array16637 = (Object)new_Type_Array_with(1, (Object)localvariable18404);
// new
send109919 = (Object)new_AST_Send((Object)classreference11493, (Object)symbol30416, 0);
assign13887 = (Object)new_AST_Assign((Object)localvariable18404, (Object)send109919);
// hasSuperclass
send109920 = (Object)new_AST_Send((Object)Self, (Object)symbol30425, 0);
symbol30847 = (Object)new_Type_Symbol_cached(L"addAll:");
// superclass
send109921 = (Object)new_AST_Send((Object)Self, (Object)symbol30417, 0);
// layout
send109922 = (Object)new_AST_Send((Object)send109921, (Object)symbol30415, 0);
// addAll:
send109923 = (Object)new_AST_Send((Object)localvariable18404, (Object)symbol30847, 1, (Object)send109922);
block7430 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send109923);
block7431 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send109924 = (Object)new_AST_Send((Object)send109920, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7430, (Object)block7431);
method31401 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array16637, 3, assign13887, send109924, localvariable18404);
methodclosure31307 = (Object)new_Runtime_MethodClosure(method31401);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30430, (Runtime_MethodClosure)methodclosure31307);


// Behavior>>layout
//instancevariable13987 = (Object)new_AST_InstVariable(0, L"layout");
method31402 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable13987);
methodclosure31308 = (Object)new_Runtime_MethodClosure(method31402);
store_method((Type_Class)Behavior, (Type_Symbol)symbol30415, (Runtime_MethodClosure)methodclosure31308);

classreference11545 = (Object)new_Organization_ClassReference((Type_Class)Behavior);
classreference11546 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
objectlayout7471 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7471)->values[0] = instancevariable13905;
((Type_Array)objectlayout7471)->values[1] = instancevariable13906;
((Type_Array)objectlayout7471)->values[2] = instancevariable13907;
((Type_Array)objectlayout7471)->values[3] = instancevariable13908;
((Type_Array)objectlayout7471)->values[4] = instancevariable13909;
symbol30531 = (Object)new_Type_Symbol_cached(L"Stream");
class5259 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7471);
((Type_Class)class5259)->name = (Type_Symbol)symbol30531;
metaclass4471 = (Object)HEADER(class5259);
classreference11547 = (Object)new_Organization_ClassReference((Type_Class)class5259);
classreference11548 = (Object)new_Organization_ClassReference((Type_Class)class5261);
classreference11549 = (Object)new_Organization_ClassReference((Type_Class)class5260);
}


/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send109925 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30488, 0);
Object result = (Object)Eval((Object)send109925);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send109926 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30496, 0);
Object result = (Object)Eval((Object)send109926);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send109927 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30493, 0);
Object result = (Object)Eval((Object)send109927);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send109928 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30448, 0);
Object result = (Object)Eval((Object)send109928);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send109929 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30499, 0);
Object result = (Object)Eval((Object)send109929);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send109930 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30458, 0);
Object result = (Object)Eval((Object)send109930);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send109931 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30508, 0);
Object result = (Object)Eval((Object)send109931);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send109932 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30489, 0);
Object result = (Object)Eval((Object)send109932);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send109933 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30494, 0);
Object result = (Object)Eval((Object)send109933);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send109934 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30511, 0);
Object result = (Object)Eval((Object)send109934);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send109935 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30469, 0);
Object result = (Object)Eval((Object)send109935);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send109936 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30467, 0);
Object result = (Object)Eval((Object)send109936);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send109937 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30481, 0);
Object result = (Object)Eval((Object)send109937);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send109938 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30471, 0);
Object result = (Object)Eval((Object)send109938);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send109939 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30464, 0);
Object result = (Object)Eval((Object)send109939);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send109940 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30507, 0);
Object result = (Object)Eval((Object)send109940);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send109941 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30501, 0);
Object result = (Object)Eval((Object)send109941);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send109942 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30505, 0);
Object result = (Object)Eval((Object)send109942);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send109943 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30452, 0);
Object result = (Object)Eval((Object)send109943);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send109944 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30510, 0);
Object result = (Object)Eval((Object)send109944);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send109945 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30478, 0);
Object result = (Object)Eval((Object)send109945);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send109946 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30484, 0);
Object result = (Object)Eval((Object)send109946);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send109947 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30460, 0);
Object result = (Object)Eval((Object)send109947);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send109948 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30477, 0);
Object result = (Object)Eval((Object)send109948);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send109949 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30509, 0);
Object result = (Object)Eval((Object)send109949);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send109950 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30502, 0);
Object result = (Object)Eval((Object)send109950);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send109951 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30475, 0);
Object result = (Object)Eval((Object)send109951);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send109952 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30466, 0);
Object result = (Object)Eval((Object)send109952);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send109953 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30479, 0);
Object result = (Object)Eval((Object)send109953);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send109954 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30486, 0);
Object result = (Object)Eval((Object)send109954);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send109955 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30480, 0);
Object result = (Object)Eval((Object)send109955);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send109956 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30456, 0);
Object result = (Object)Eval((Object)send109956);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send109957 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30463, 0);
Object result = (Object)Eval((Object)send109957);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send109958 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30490, 0);
Object result = (Object)Eval((Object)send109958);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send109959 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30482, 0);
Object result = (Object)Eval((Object)send109959);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send109960 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30512, 0);
Object result = (Object)Eval((Object)send109960);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send109961 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30487, 0);
Object result = (Object)Eval((Object)send109961);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send109962 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30473, 0);
Object result = (Object)Eval((Object)send109962);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send109963 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30485, 0);
Object result = (Object)Eval((Object)send109963);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send109964 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30497, 0);
Object result = (Object)Eval((Object)send109964);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send109965 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30476, 0);
Object result = (Object)Eval((Object)send109965);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send109966 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30498, 0);
Object result = (Object)Eval((Object)send109966);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send109967 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30455, 0);
Object result = (Object)Eval((Object)send109967);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send109968 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30503, 0);
Object result = (Object)Eval((Object)send109968);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send109969 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30504, 0);
Object result = (Object)Eval((Object)send109969);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send109970 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol30496, 0);
Eval((Object)send109970);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class5268;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})