// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object objectlayout7501;
Object instancevariable5974;
Object instancevariable5975;
Object instancevariable5976;
Object instancevariable5977;
Object instancevariable5978;
Object instancevariable5979;
Object symbol35503;
Object objectlayout7502;
Object instancevariable5980;
Object class4027;
Object metaclass4027;
Object objectlayout7503;
Object symbol35609;
Object class4028;
Object metaclass4028;
Object objectlayout7504;
Object instancevariable5981;
Object symbol35676;
Object objectlayout7505;
Object instancevariable5982;
Object instancevariable5983;
Object instancevariable5984;
Object class4029;
Object metaclass4029;
Object objectlayout7506;
Object symbol35867;
Object objectlayout7507;
Object instancevariable5985;
Object instancevariable5986;
Object instancevariable5987;
Object class4030;
Object metaclass4030;
Object objectlayout7508;
Object symbol35615;
Object objectlayout7509;
Object class4031;
Object metaclass4031;
Object objectlayout7510;
Object symbol35719;
Object objectlayout7511;
Object instancevariable5988;
Object class4032;
Object metaclass4032;
Object objectlayout7512;
Object symbol35650;
Object objectlayout7513;
Object instancevariable5989;
Object class4033;
Object metaclass4033;
Object objectlayout7514;
Object symbol35500;
Object objectlayout7515;
Object instancevariable5990;
Object class4034;
Object metaclass4034;
Object objectlayout7516;
Object symbol35583;
Object objectlayout7517;
Object instancevariable5991;
Object instancevariable5992;
Object instancevariable5993;
Object class4035;
Object metaclass4035;
Object objectlayout7518;
Object symbol35832;
Object objectlayout7519;
Object instancevariable5994;
Object instancevariable5995;
Object class4036;
Object metaclass4036;
Object objectlayout7520;
Object symbol35640;
Object objectlayout7521;
Object instancevariable5996;
Object class4037;
Object metaclass4037;
Object objectlayout7522;
Object symbol35840;
Object objectlayout7523;
Object instancevariable5997;
Object instancevariable5998;
Object class4038;
Object metaclass4038;
Object objectlayout7524;
Object symbol35836;
Object objectlayout7525;
Object instancevariable5999;
Object instancevariable6000;
Object class4039;
Object metaclass4039;
Object objectlayout7526;
Object symbol35942;
Object class4040;
Object metaclass4040;
Object objectlayout7527;
Object symbol35937;
Object objectlayout7528;
Object instancevariable6001;
Object class4041;
Object metaclass4041;
Object objectlayout7529;
Object symbol35849;
Object objectlayout7530;
Object instancevariable6002;
Object instancevariable6003;
Object class4042;
Object metaclass4042;
Object objectlayout7531;
Object symbol35938;
Object class4043;
Object metaclass4043;
Object objectlayout7532;
Object symbol35638;
Object objectlayout7533;
Object instancevariable6004;
Object class4044;
Object metaclass4044;
Object objectlayout7534;
Object symbol35663;
Object class4045;
Object metaclass4045;
Object objectlayout7535;
Object symbol35662;
Object objectlayout7536;
Object instancevariable6005;
Object instancevariable6006;
Object instancevariable6007;
Object class4046;
Object metaclass4046;
Object objectlayout7537;
Object symbol35661;
Object objectlayout7538;
Object class4047;
Object metaclass4047;
Object objectlayout7539;
Object symbol35523;
Object objectlayout7540;
Object instancevariable6008;
Object instancevariable6009;
Object class4048;
Object metaclass4048;
Object objectlayout7541;
Object instancevariable6010;
Object instancevariable6011;
Object symbol35590;
Object objectlayout7542;
Object instancevariable6012;
Object instancevariable6013;
Object instancevariable6014;
Object instancevariable6015;
Object class4049;
Object metaclass4049;
Object objectlayout7543;
Object symbol35635;
Object objectlayout7544;
Object instancevariable6016;
Object instancevariable6017;
Object class4050;
Object metaclass4050;
Object objectlayout7545;
Object symbol35847;
Object objectlayout7546;
Object class4051;
Object metaclass4051;
Object objectlayout7547;
Object symbol35875;
Object objectlayout7548;
Object instancevariable6018;
Object class4052;
Object metaclass4052;
Object objectlayout7549;
Object symbol35730;
Object objectlayout7550;
Object instancevariable6019;
Object class4053;
Object metaclass4053;
Object objectlayout7551;
Object symbol35558;
Object objectlayout7552;
Object class4054;
Object metaclass4054;
Object objectlayout7553;
Object symbol35540;
Object objectlayout7554;
Object instancevariable6020;
Object class4055;
Object metaclass4055;
Object objectlayout7555;
Object symbol35675;
Object objectlayout7556;
Object class4056;
Object metaclass4056;
Object objectlayout7557;
Object symbol35529;
Object objectlayout7558;
Object instancevariable6021;
Object instancevariable6022;
Object class4057;
Object metaclass4057;
Object objectlayout7559;
Object symbol35729;
Object objectlayout7560;
Object class4058;
Object metaclass4058;
Object objectlayout7561;
Object symbol35586;
Object objectlayout7562;
Object instancevariable6023;
Object class4059;
Object metaclass4059;
Object objectlayout7563;
Object symbol35577;
Object objectlayout7564;
Object instancevariable6024;
Object class4060;
Object metaclass4060;
Object objectlayout7565;
Object symbol35553;
Object objectlayout7566;
Object instancevariable6025;
Object class4061;
Object metaclass4061;
Object objectlayout7567;
Object symbol35597;
Object objectlayout7568;
Object instancevariable6026;
Object class4062;
Object metaclass4062;
Object objectlayout7569;
Object symbol35570;
Object objectlayout7570;
Object class4063;
Object metaclass4063;
Object objectlayout7571;
Object symbol35578;
Object objectlayout7572;
Object class4064;
Object metaclass4064;
Object objectlayout7573;
Object symbol35535;
Object objectlayout7574;
Object instancevariable6027;
Object instancevariable6028;
Object class4065;
Object metaclass4065;
Object objectlayout7575;
Object symbol35571;
Object objectlayout7576;
Object class4066;
Object metaclass4066;
Object objectlayout7577;
Object symbol35771;
Object objectlayout7578;
Object class4067;
Object metaclass4067;
Object objectlayout7579;
Object symbol35544;
Object objectlayout7580;
Object instancevariable6029;
Object instancevariable6030;
Object instancevariable6031;
Object instancevariable6032;
Object class4068;
Object metaclass4068;
Object objectlayout7581;
Object symbol35724;
Object objectlayout7582;
Object class4069;
Object metaclass4069;
Object objectlayout7583;
Object symbol35525;
Object objectlayout7584;
Object instancevariable6033;
Object class4070;
Object metaclass4070;
Object objectlayout7585;
Object symbol35556;
Object objectlayout7586;
Object instancevariable6034;
Object instancevariable6035;
Object class4071;
Object metaclass4071;
Object objectlayout7587;
Object symbol35537;
Object objectlayout7588;
Object instancevariable6036;
Object instancevariable6037;
Object class4072;
Object metaclass4072;
Object objectlayout7589;
Object symbol35573;
Object objectlayout7590;
Object instancevariable6038;
Object instancevariable6039;
Object instancevariable6040;
Object class4073;
Object metaclass4073;
Object objectlayout7591;
Object symbol35546;
Object objectlayout7592;
Object instancevariable6041;
Object class4074;
Object metaclass4074;
Object objectlayout7593;
Object symbol35530;
Object objectlayout7594;
Object instancevariable6042;
Object class4075;
Object metaclass4075;
Object objectlayout7595;
Object symbol35538;
Object objectlayout7596;
Object instancevariable6043;
Object instancevariable6044;
Object class4076;
Object metaclass4076;
Object objectlayout7597;
Object symbol35566;
Object objectlayout7598;
Object instancevariable6045;
Object class4077;
Object metaclass4077;
Object objectlayout7599;
Object symbol35531;
Object objectlayout7600;
Object instancevariable6046;
Object class4078;
Object metaclass4078;
Object objectlayout7601;
Object symbol35539;
Object objectlayout7602;
Object instancevariable6047;
Object instancevariable6048;
Object class4079;
Object metaclass4079;
Object objectlayout7603;
Object symbol35815;
Object objectlayout7604;
Object instancevariable6049;
Object class4080;
Object metaclass4080;
Object objectlayout7605;
Object symbol35689;
Object class4081;
Object metaclass4081;
Object objectlayout7606;
Object symbol35671;
Object objectlayout7607;
Object instancevariable6050;
Object instancevariable6051;
Object instancevariable6052;
Object class4082;
Object metaclass4082;
Object objectlayout7608;
Object symbol35917;
Object objectlayout7609;
Object instancevariable6053;
Object instancevariable6054;
Object class4083;
Object metaclass4083;
Object objectlayout7610;
Object symbol35688;
Object class4084;
Object metaclass4084;
Object objectlayout7611;
Object symbol35687;
Object class4085;
Object metaclass4085;
Object objectlayout7612;
Object symbol35534;
Object objectlayout7613;
Object instancevariable6055;
Object instancevariable6056;
Object instancevariable6057;
Object class4086;
Object metaclass4086;
Object objectlayout7614;
Object symbol35901;
Object objectlayout7615;
Object instancevariable6058;
Object class4087;
Object metaclass4087;
Object classreference4794;
Object classreference4795;
Object method25149;
Object string27537;
Object string27538;
Object smallint20396;
Object smallint20397;
Object info3586;
Object methodclosure25147;
Object localvariable26380;
Object array21136;
Object method25150;
Object string27539;
Object string27540;
Object smallint20398;
Object smallint20399;
Object info3587;
Object symbol35519;
Object methodclosure25148;
Object localvariable26381;
Object array21137;
Object symbol35946;
Object send182671;
Object string27541;
Object string27542;
Object smallint20400;
Object smallint20401;
Object info3588;
Object method25151;
Object symbol35518;
Object methodclosure25149;
Object classreference4796;
Object send182672;
Object string27543;
Object string27544;
Object smallint20402;
Object smallint20403;
Object info3589;
Object symbol35643;
Object send182673;
Object send182674;
Object method25152;
Object methodclosure25150;
Object localvariable26382;
Object array21138;
Object smallint20404;
Object constant35475;
Object symbol35647;
Object send182675;
Object string27545;
Object string27546;
Object smallint20405;
Object smallint20406;
Object info3590;
Object localvariable26383;
Object array21139;
Object send182676;
Object send182677;
Object block12607;
Object send182678;
Object method25153;
Object symbol35642;
Object methodclosure25151;
Object classreference4797;
Object localvariable26384;
Object array21140;
Object send182679;
Object string27547;
Object string27548;
Object smallint20407;
Object smallint20408;
Object info3591;
Object method25154;
Object symbol35630;
Object methodclosure25152;
Object localvariable26385;
Object array21141;
Object method25155;
Object string27549;
Object string27550;
Object smallint20409;
Object smallint20410;
Object info3592;
Object symbol35631;
Object methodclosure25153;
Object classreference4798;
Object localvariable26386;
Object array21142;
Object localvariable26387;
Object array21143;
Object variable1557;
Object array21144;
Object symbol35626;
Object send182680;
Object string27551;
Object string27552;
Object smallint20411;
Object smallint20412;
Object info3593;
Object symbol35947;
Object constant35476;
Object send182681;
Object super1960;
Object send182682;
Object block12608;
Object send182683;
Object string27553;
Object constant35477;
Object symbol35514;
Object send182684;
Object send182685;
Object string27554;
Object constant35478;
Object send182686;
Object send182687;
Object assign22394;
Object symbol35736;
Object send182688;
Object symbol35948;
Object send182689;
Object block12609;
Object send182690;
Object method25156;
Object methodclosure25154;
Object classreference4799;
Object send182691;
Object string27555;
Object string27556;
Object smallint20413;
Object smallint20414;
Object info3594;
Object method25157;
Object symbol35659;
Object methodclosure25155;
Object localvariable26388;
Object array21145;
Object variable1558;
Object array21146;
Object send182692;
Object string27557;
Object string27558;
Object smallint20415;
Object smallint20416;
Object info3595;
Object send182693;
Object block12610;
Object send182694;
Object block12611;
Object send182695;
Object block12612;
Object send182696;
Object method25158;
Object symbol35646;
Object methodclosure25156;
Object localvariable26389;
Object array21147;
Object variable1559;
Object array21148;
Object send182697;
Object string27559;
Object string27560;
Object smallint20417;
Object smallint20418;
Object info3596;
Object send182698;
Object block12613;
Object send182699;
Object block12614;
Object send182700;
Object block12615;
Object send182701;
Object method25159;
Object symbol35658;
Object methodclosure25157;
Object localvariable26390;
Object array21149;
Object variable1560;
Object array21150;
Object send182702;
Object string27561;
Object string27562;
Object smallint20419;
Object smallint20420;
Object info3597;
Object assign22395;
Object smallint20421;
Object constant35479;
Object symbol35648;
Object send182703;
Object smallint20422;
Object constant35480;
Object send182704;
Object block12616;
Object send182705;
Object smallint20423;
Object constant35481;
Object send182706;
Object smallint20424;
Object constant35482;
Object send182707;
Object block12617;
Object send182708;
Object block12618;
Object send182709;
Object smallint20425;
Object constant35483;
Object send182710;
Object smallint20426;
Object constant35484;
Object send182711;
Object block12619;
Object send182712;
Object block12620;
Object send182713;
Object smallint20427;
Object constant35485;
Object smallint20428;
Object constant35486;
Object send182714;
Object send182715;
Object send182716;
Object send182717;
Object send182718;
Object block12621;
Object send182719;
Object block12622;
Object send182720;
Object block12623;
Object send182721;
Object method25160;
Object symbol35657;
Object methodclosure25158;
Object localvariable26391;
Object array21151;
Object send182722;
Object string27563;
Object string27564;
Object smallint20429;
Object smallint20430;
Object info3598;
Object send182723;
Object method25161;
Object methodclosure25159;
Object send182724;
Object string27565;
Object string27566;
Object smallint20431;
Object smallint20432;
Object info3599;
Object symbol35639;
Object send182725;
Object method25162;
Object methodclosure25160;
Object localvariable26392;
Object array21152;
Object send182726;
Object string27567;
Object string27568;
Object smallint20433;
Object smallint20434;
Object info3600;
Object send182727;
Object method25163;
Object methodclosure25161;
Object smallint20435;
Object constant35487;
Object send182728;
Object string27569;
Object string27570;
Object smallint20436;
Object smallint20437;
Object info3601;
Object method25164;
Object symbol35654;
Object methodclosure25162;
Object smallint20438;
Object constant35488;
Object send182729;
Object string27571;
Object string27572;
Object smallint20439;
Object smallint20440;
Object info3602;
Object method25165;
Object symbol35655;
Object methodclosure25163;
Object smallint20441;
Object constant35489;
Object send182730;
Object string27573;
Object string27574;
Object smallint20442;
Object smallint20443;
Object info3603;
Object method25166;
Object symbol35656;
Object methodclosure25164;
Object classreference4800;
Object localvariable26393;
Object array21153;
Object variable1561;
Object array21154;
Object send182731;
Object string27575;
Object string27576;
Object smallint20444;
Object smallint20445;
Object info3604;
Object send182732;
Object block12624;
Object send182733;
Object block12625;
Object send182734;
Object block12626;
Object send182735;
Object method25167;
Object methodclosure25165;
Object localvariable26394;
Object localvariable26395;
Object array21155;
Object localvariable26396;
Object array21156;
Object assign22396;
Object send182736;
Object string27577;
Object string27578;
Object smallint20446;
Object smallint20447;
Object info3605;
Object block12627;
Object send182737;
Object smallint20448;
Object constant35490;
Object send182738;
Object assign22397;
Object block12628;
Object send182739;
Object method25168;
Object methodclosure25166;
Object localvariable26397;
Object array21157;
Object send182740;
Object string27579;
Object string27580;
Object smallint20449;
Object smallint20450;
Object info3606;
Object send182741;
Object method25169;
Object methodclosure25167;
Object classreference4801;
Object localvariable26398;
Object array21158;
Object smallint20451;
Object constant35491;
Object send182742;
Object string27581;
Object string27582;
Object smallint20452;
Object smallint20453;
Object info3607;
Object localvariable26399;
Object array21159;
Object send182743;
Object send182744;
Object block12629;
Object send182745;
Object method25170;
Object methodclosure25168;
Object send182746;
Object string27583;
Object string27584;
Object smallint20454;
Object smallint20455;
Object info3608;
Object smallint20456;
Object constant35492;
Object send182747;
Object method25171;
Object symbol35634;
Object methodclosure25169;
Object send182748;
Object string27585;
Object string27586;
Object smallint20457;
Object smallint20458;
Object info3609;
Object smallint20459;
Object constant35493;
Object send182749;
Object smallint20460;
Object constant35494;
Object send182750;
Object character131;
Object constant35495;
Object send182751;
Object block12630;
Object send182752;
Object symbol35949;
Object string27587;
Object constant35496;
Object send182753;
Object string27588;
Object constant35497;
Object send182754;
Object send182755;
Object block12631;
Object send182756;
Object classreference4802;
Object localvariable26400;
Object array21160;
Object assign22398;
Object method25172;
Object string27589;
Object string27590;
Object smallint20461;
Object smallint20462;
Object info3610;
Object symbol35874;
Object methodclosure25170;
Object localvariable26401;
Object array21161;
Object localvariable26402;
Object array21162;
Object variable1562;
Object array21163;
Object symbol35950;
Object send182757;
Object string27591;
Object string27592;
Object smallint20463;
Object smallint20464;
Object info3611;
Object assign22399;
Object send182758;
Object block12632;
Object send182759;
Object symbol35951;
Object send182760;
Object send182761;
Object block12633;
Object send182762;
Object send182763;
Object send182764;
Object block12634;
Object send182765;
Object block12635;
Object send182766;
Object method25173;
Object symbol35850;
Object methodclosure25171;
Object localvariable26403;
Object array21164;
Object assign22400;
Object method25174;
Object string27593;
Object string27594;
Object smallint20465;
Object smallint20466;
Object info3612;
Object symbol35873;
Object methodclosure25172;
Object localvariable26404;
Object localvariable26405;
Object array21165;
Object localvariable26406;
Object array21166;
Object send182767;
Object string27595;
Object string27596;
Object smallint20467;
Object smallint20468;
Object info3613;
Object send182768;
Object send182769;
Object send182770;
Object block12636;
Object symbol35612;
Object send182771;
Object send182772;
Object method25175;
Object symbol35872;
Object methodclosure25173;
Object smallint20469;
Object constant35498;
Object send182773;
Object smallint20470;
Object constant35499;
Object send182774;
Object send182775;
Object method25176;
Object symbol35636;
Object methodclosure25174;
Object localvariable26407;
Object array21167;
Object classreference4803;
Object symbol35517;
Object super1961;
Object symbol35876;
Object classreference4804;
Object localvariable26408;
Object array21168;
Object send182776;
Object string27597;
Object string27598;
Object smallint20471;
Object smallint20472;
Object info3614;
Object send182777;
Object symbol35715;
Object send182778;
Object block12637;
Object send182779;
Object smallint20473;
Object constant35500;
Object send182780;
Object assign22401;
Object send182781;
Object method25177;
Object symbol35714;
Object methodclosure25175;
Object localvariable26409;
Object array21169;
Object classreference4805;
Object localvariable26410;
Object array21170;
Object send182782;
Object string27599;
Object string27600;
Object smallint20474;
Object smallint20475;
Object info3615;
Object send182783;
Object method25178;
Object symbol35699;
Object methodclosure25176;
Object super1962;
Object method25179;
Object string27601;
Object string27602;
Object smallint20476;
Object smallint20477;
Object info3616;
Object methodclosure25177;
Object send182784;
Object string27603;
Object string27604;
Object smallint20478;
Object smallint20479;
Object info3617;
Object send182785;
Object method25180;
Object symbol35692;
Object methodclosure25178;
Object localvariable26411;
Object array21171;
Object localvariable26412;
Object array21172;
Object send182786;
Object string27605;
Object string27606;
Object smallint20480;
Object smallint20481;
Object info3618;
Object symbol35602;
Object send182787;
Object smallint20482;
Object constant35501;
Object send182788;
Object send182789;
Object assign22402;
Object symbol35694;
Object localvariable26413;
Object localvariable26414;
Object array21173;
Object send182790;
Object block12638;
Object send182791;
Object send182792;
Object method25181;
Object symbol35696;
Object methodclosure25179;
Object localvariable26415;
Object array21174;
Object variable1563;
Object array21175;
Object send182793;
Object string27607;
Object string27608;
Object smallint20483;
Object smallint20484;
Object info3619;
Object send182794;
Object block12639;
Object send182795;
Object send182796;
Object send182797;
Object send182798;
Object send182799;
Object block12640;
Object send182800;
Object send182801;
Object send182802;
Object send182803;
Object send182804;
Object block12641;
Object send182805;
Object smallint20485;
Object constant35502;
Object send182806;
Object localvariable26416;
Object array21176;
Object send182807;
Object send182808;
Object send182809;
Object send182810;
Object block12642;
Object send182811;
Object block12643;
Object send182812;
Object block12644;
Object send182813;
Object method25182;
Object methodclosure25180;
Object smallint20486;
Object constant35503;
Object send182814;
Object string27609;
Object string27610;
Object smallint20487;
Object smallint20488;
Object info3620;
Object method25183;
Object symbol35693;
Object methodclosure25181;
Object localvariable26417;
Object array21177;
Object smallint20489;
Object constant35504;
Object send182815;
Object string27611;
Object string27612;
Object smallint20490;
Object smallint20491;
Object info3621;
Object localvariable26418;
Object array21178;
Object send182816;
Object send182817;
Object block12645;
Object send182818;
Object method25184;
Object methodclosure25182;
Object send182819;
Object string27613;
Object string27614;
Object smallint20492;
Object smallint20493;
Object info3622;
Object smallint20494;
Object constant35505;
Object send182820;
Object method25185;
Object methodclosure25183;
Object localvariable26419;
Object localvariable26420;
Object array21179;
Object localvariable26421;
Object array21180;
Object assign22403;
Object localvariable26422;
Object array21181;
Object symbol35952;
Object send182821;
Object string27615;
Object string27616;
Object smallint20495;
Object smallint20496;
Object info3623;
Object assign22404;
Object block12646;
Object send182822;
Object method25186;
Object symbol35697;
Object methodclosure25184;
Object localvariable26423;
Object array21182;
Object smallint20497;
Object constant35506;
Object send182823;
Object string27617;
Object string27618;
Object smallint20498;
Object smallint20499;
Object info3624;
Object localvariable26424;
Object array21183;
Object send182824;
Object send182825;
Object block12647;
Object send182826;
Object method25187;
Object methodclosure25185;
Object localvariable26425;
Object array21184;
Object symbol35622;
Object super1963;
Object symbol35953;
Object string27619;
Object constant35507;
Object send182827;
Object string27620;
Object string27621;
Object smallint20500;
Object smallint20501;
Object info3625;
Object localvariable26426;
Object array21185;
Object send182828;
Object string27622;
Object constant35508;
Object send182829;
Object block12648;
Object send182830;
Object string27623;
Object constant35509;
Object send182831;
Object method25188;
Object methodclosure25186;
Object localvariable26427;
Object localvariable26428;
Object localvariable26429;
Object localvariable26430;
Object array21186;
Object localvariable26431;
Object localvariable26432;
Object array21187;
Object send182832;
Object string27624;
Object string27625;
Object smallint20502;
Object smallint20503;
Object info3626;
Object assign22405;
Object smallint20504;
Object constant35510;
Object send182833;
Object assign22406;
Object smallint20505;
Object constant35511;
Object send182834;
Object assign22407;
Object send182835;
Object block12649;
Object send182836;
Object send182837;
Object send182838;
Object block12650;
Object send182839;
Object method25189;
Object symbol35698;
Object methodclosure25187;
Object localvariable26433;
Object array21188;
Object smallint20506;
Object constant35512;
Object send182840;
Object string27626;
Object string27627;
Object smallint20507;
Object smallint20508;
Object info3627;
Object method25190;
Object symbol35695;
Object methodclosure25188;
Object localvariable26434;
Object array21189;
Object localvariable26435;
Object array21190;
Object send182841;
Object string27628;
Object string27629;
Object smallint20509;
Object smallint20510;
Object info3628;
Object send182842;
Object assign22408;
Object smallint20511;
Object constant35513;
Object send182843;
Object localvariable26436;
Object array21191;
Object send182844;
Object send182845;
Object block12651;
Object send182846;
Object method25191;
Object symbol35691;
Object methodclosure25189;
Object localvariable26437;
Object array21192;
Object localvariable26438;
Object array21193;
Object smallint20512;
Object constant35514;
Object send182847;
Object string27630;
Object string27631;
Object smallint20513;
Object smallint20514;
Object info3629;
Object assign22409;
Object smallint20515;
Object constant35515;
Object send182848;
Object method25192;
Object symbol35690;
Object methodclosure25190;
Object send182849;
Object string27632;
Object string27633;
Object smallint20516;
Object smallint20517;
Object info3630;
Object symbol35717;
Object send182850;
Object send182851;
Object send182852;
Object assign22410;
Object smallint20518;
Object constant35516;
Object send182853;
Object smallint20519;
Object constant35517;
Object send182854;
Object assign22411;
Object method25193;
Object symbol35716;
Object methodclosure25191;
Object localvariable26439;
Object array21194;
Object assign22412;
Object symbol35664;
Object send182855;
Object string27634;
Object string27635;
Object smallint20520;
Object smallint20521;
Object info3631;
Object method25194;
Object symbol35718;
Object methodclosure25192;
Object localvariable26440;
Object array21195;
Object send182856;
Object string27636;
Object string27637;
Object smallint20522;
Object smallint20523;
Object info3632;
Object method25195;
Object methodclosure25193;
Object send182857;
Object string27638;
Object string27639;
Object smallint20524;
Object smallint20525;
Object info3633;
Object smallint20526;
Object constant35518;
Object send182858;
Object method25196;
Object methodclosure25194;
Object send182859;
Object string27640;
Object string27641;
Object smallint20527;
Object smallint20528;
Object info3634;
Object smallint20529;
Object constant35519;
Object send182860;
Object method25197;
Object methodclosure25195;
Object localvariable26441;
Object localvariable26442;
Object array21196;
Object variable1564;
Object array21197;
Object send182861;
Object string27642;
Object string27643;
Object smallint20530;
Object smallint20531;
Object info3635;
Object assign22413;
Object send182862;
Object send182863;
Object send182864;
Object smallint20532;
Object constant35520;
Object send182865;
Object send182866;
Object block12652;
Object send182867;
Object smallint20533;
Object constant35521;
Object send182868;
Object assign22414;
Object smallint20534;
Object constant35522;
Object send182869;
Object send182870;
Object block12653;
Object send182871;
Object smallint20535;
Object constant35523;
Object localvariable26443;
Object array21198;
Object send182872;
Object send182873;
Object send182874;
Object send182875;
Object send182876;
Object block12654;
Object send182877;
Object smallint20536;
Object constant35524;
Object assign22415;
Object assign22416;
Object block12655;
Object send182878;
Object method25198;
Object methodclosure25196;
Object send182879;
Object string27644;
Object string27645;
Object smallint20537;
Object smallint20538;
Object info3636;
Object symbol35954;
Object smallint20539;
Object constant35525;
Object send182880;
Object smallint20540;
Object constant35526;
Object send182881;
Object assign22417;
Object smallint20541;
Object constant35527;
Object send182882;
Object assign22418;
Object method25199;
Object methodclosure25197;
Object smallint20542;
Object constant35528;
Object send182883;
Object string27646;
Object string27647;
Object smallint20543;
Object smallint20544;
Object info3637;
Object method25200;
Object methodclosure25198;
Object localvariable26444;
Object array21199;
Object localvariable26445;
Object array21200;
Object send182884;
Object string27648;
Object string27649;
Object smallint20545;
Object smallint20546;
Object info3638;
Object assign22419;
Object symbol35955;
Object symbol35956;
Object send182885;
Object send182886;
Object method25201;
Object symbol35712;
Object methodclosure25199;
Object localvariable26446;
Object localvariable26447;
Object array21201;
Object send182887;
Object string27650;
Object string27651;
Object smallint20547;
Object smallint20548;
Object info3639;
Object symbol35713;
Object send182888;
Object send182889;
Object method25202;
Object methodclosure25200;
Object localvariable26448;
Object array21202;
Object send182890;
Object string27652;
Object string27653;
Object smallint20549;
Object smallint20550;
Object info3640;
Object send182891;
Object send182892;
Object method25203;
Object methodclosure25201;
Object localvariable26449;
Object array21203;
Object localvariable26450;
Object array21204;
Object send182893;
Object string27654;
Object string27655;
Object smallint20551;
Object smallint20552;
Object info3641;
Object send182894;
Object assign22420;
Object symbol35878;
Object send182895;
Object method25204;
Object methodclosure25202;
Object send182896;
Object string27656;
Object string27657;
Object smallint20553;
Object smallint20554;
Object info3642;
Object send182897;
Object method25205;
Object methodclosure25203;
Object localvariable26451;
Object array21205;
Object send182898;
Object string27658;
Object string27659;
Object smallint20555;
Object smallint20556;
Object info3643;
Object send182899;
Object method25206;
Object methodclosure25204;
Object localvariable26452;
Object array21206;
Object localvariable26453;
Object array21207;
Object variable1565;
Object array21208;
Object localvariable26454;
Object array21209;
Object symbol35843;
Object send182900;
Object string27660;
Object string27661;
Object smallint20557;
Object smallint20558;
Object info3644;
Object assign22421;
Object send182901;
Object block12656;
Object send182902;
Object block12657;
Object send182903;
Object block12658;
Object send182904;
Object method25207;
Object methodclosure25205;
Object localvariable26455;
Object array21210;
Object super1964;
Object assign22422;
Object method25208;
Object string27662;
Object string27663;
Object smallint20559;
Object smallint20560;
Object info3645;
Object methodclosure25206;
Object send182905;
Object string27664;
Object string27665;
Object smallint20561;
Object smallint20562;
Object info3646;
Object assign22423;
Object localvariable26456;
Object array21211;
Object send182906;
Object send182907;
Object block12659;
Object send182908;
Object method25209;
Object symbol35641;
Object methodclosure25207;
Object classreference4806;
Object send182909;
Object string27666;
Object string27667;
Object smallint20563;
Object smallint20564;
Object info3647;
Object smallint20565;
Object constant35529;
Object send182910;
Object string27668;
Object constant35530;
Object send182911;
Object block12660;
Object send182912;
Object classreference4807;
Object localvariable26457;
Object array21212;
Object super1965;
Object assign22424;
Object method25210;
Object string27669;
Object string27670;
Object smallint20566;
Object smallint20567;
Object info3648;
Object methodclosure25208;
Object localvariable26458;
Object array21213;
Object send182913;
Object string27671;
Object string27672;
Object smallint20568;
Object smallint20569;
Object info3649;
Object assign22425;
Object method25211;
Object symbol35941;
Object methodclosure25209;
Object localvariable26459;
Object array21214;
Object localvariable26460;
Object array21215;
Object variable1566;
Object array21216;
Object send182914;
Object string27673;
Object string27674;
Object smallint20570;
Object smallint20571;
Object info3650;
Object assign22426;
Object symbol35940;
Object send182915;
Object send182916;
Object block12661;
Object send182917;
Object send182918;
Object localvariable26461;
Object array21217;
Object send182919;
Object block12662;
Object send182920;
Object send182921;
Object block12663;
Object send182922;
Object block12664;
Object send182923;
Object method25212;
Object methodclosure25210;
Object send182924;
Object string27675;
Object string27676;
Object smallint20572;
Object smallint20573;
Object info3651;
Object method25213;
Object methodclosure25211;
Object send182925;
Object method25214;
Object methodclosure25212;
Object localvariable26462;
Object array21218;
Object symbol35669;
Object send182926;
Object string27677;
Object string27678;
Object smallint20574;
Object smallint20575;
Object info3652;
Object method25215;
Object methodclosure25213;
Object localvariable26463;
Object array21219;
Object super1966;
Object assign22427;
Object symbol35721;
Object string27679;
Object constant35531;
Object send182927;
Object string27680;
Object string27681;
Object smallint20576;
Object smallint20577;
Object info3653;
Object string27682;
Object constant35532;
Object send182928;
Object send182929;
Object method25216;
Object methodclosure25214;
Object send182930;
Object string27683;
Object string27684;
Object smallint20578;
Object smallint20579;
Object info3654;
Object method25217;
Object methodclosure25215;
Object send182931;
Object string27685;
Object string27686;
Object smallint20580;
Object smallint20581;
Object info3655;
Object send182932;
Object method25218;
Object symbol35637;
Object methodclosure25216;
Object localvariable26464;
Object array21220;
Object variable1567;
Object array21221;
Object send182933;
Object string27687;
Object string27688;
Object smallint20582;
Object smallint20583;
Object info3656;
Object send182934;
Object send182935;
Object block12665;
Object send182936;
Object send182937;
Object assign22428;
Object smallint20584;
Object constant35533;
Object smallint20585;
Object constant35534;
Object send182938;
Object send182939;
Object send182940;
Object block12666;
Object send182941;
Object method25219;
Object methodclosure25217;
Object classreference4808;
Object localvariable26465;
Object array21222;
Object method25220;
Object string27689;
Object string27690;
Object smallint20586;
Object smallint20587;
Object info3657;
Object methodclosure25218;
Object localvariable26466;
Object array21223;
Object send182942;
Object string27691;
Object string27692;
Object smallint20588;
Object smallint20589;
Object info3658;
Object method25221;
Object methodclosure25219;
Object classreference4809;
Object classreference4810;
Object localvariable26467;
Object array21224;
Object assign22429;
Object method25222;
Object string27693;
Object string27694;
Object smallint20590;
Object smallint20591;
Object info3659;
Object symbol35932;
Object methodclosure25220;
Object method25223;
Object string27695;
Object string27696;
Object smallint20592;
Object smallint20593;
Object info3660;
Object symbol35933;
Object methodclosure25221;
Object classreference4811;
Object method25224;
Object string27697;
Object string27698;
Object smallint20594;
Object smallint20595;
Object info3661;
Object symbol35720;
Object methodclosure25222;
Object localvariable26468;
Object array21225;
Object assign22430;
Object method25225;
Object string27699;
Object string27700;
Object smallint20596;
Object smallint20597;
Object info3662;
Object symbol35869;
Object methodclosure25223;
Object method25226;
Object string27701;
Object string27702;
Object smallint20598;
Object smallint20599;
Object info3663;
Object methodclosure25224;
Object localvariable26469;
Object array21226;
Object assign22431;
Object method25227;
Object string27703;
Object string27704;
Object smallint20600;
Object smallint20601;
Object info3664;
Object symbol35871;
Object methodclosure25225;
Object method25228;
Object string27705;
Object string27706;
Object smallint20602;
Object smallint20603;
Object info3665;
Object symbol35870;
Object methodclosure25226;
Object method25229;
Object string27707;
Object string27708;
Object smallint20604;
Object smallint20605;
Object info3666;
Object symbol35868;
Object methodclosure25227;
Object localvariable26470;
Object array21227;
Object assign22432;
Object method25230;
Object string27709;
Object string27710;
Object smallint20606;
Object smallint20607;
Object info3667;
Object methodclosure25228;
Object localvariable26471;
Object array21228;
Object super1967;
Object string27711;
Object constant35535;
Object send182943;
Object string27712;
Object string27713;
Object smallint20608;
Object smallint20609;
Object info3668;
Object send182944;
Object send182945;
Object string27714;
Object constant35536;
Object send182946;
Object send182947;
Object send182948;
Object string27715;
Object constant35537;
Object send182949;
Object send182950;
Object send182951;
Object method25231;
Object methodclosure25229;
Object localvariable26472;
Object array21229;
Object send182952;
Object string27716;
Object string27717;
Object smallint20610;
Object smallint20611;
Object info3669;
Object send182953;
Object send182954;
Object method25232;
Object symbol35855;
Object methodclosure25230;
Object classreference4812;
Object method25233;
Object string27718;
Object string27719;
Object smallint20612;
Object smallint20613;
Object info3670;
Object symbol35651;
Object methodclosure25231;
Object localvariable26473;
Object array21230;
Object assign22433;
Object method25234;
Object string27720;
Object string27721;
Object smallint20614;
Object smallint20615;
Object info3671;
Object symbol35652;
Object methodclosure25232;
Object classreference4813;
Object localvariable26474;
Object array21231;
Object send182955;
Object string27722;
Object string27723;
Object smallint20616;
Object smallint20617;
Object info3672;
Object send182956;
Object send182957;
Object block12667;
Object send182958;
Object method25235;
Object methodclosure25233;
Object classreference4814;
Object method25236;
Object string27724;
Object string27725;
Object smallint20618;
Object smallint20619;
Object info3673;
Object symbol35627;
Object methodclosure25234;
Object instancevariable6059;
Object method25237;
Object string27726;
Object string27727;
Object smallint20620;
Object smallint20621;
Object info3674;
Object methodclosure25235;
Object symbol35509;
Object string27728;
Object constant35538;
Object send182959;
Object string27729;
Object string27730;
Object smallint20622;
Object smallint20623;
Object info3675;
Object method25238;
Object symbol35510;
Object methodclosure25236;
Object classreference4815;
Object method25239;
Object string27731;
Object string27732;
Object smallint20624;
Object smallint20625;
Object info3676;
Object symbol35548;
Object methodclosure25237;
Object localvariable26475;
Object localvariable26476;
Object localvariable26477;
Object array21232;
Object symbol35755;
Object send182960;
Object string27733;
Object string27734;
Object smallint20626;
Object smallint20627;
Object info3677;
Object assign22434;
Object classreference4816;
Object localvariable26478;
Object array21233;
Object variable1568;
Object array21234;
Object smallint20628;
Object constant35539;
Object send182961;
Object string27735;
Object string27736;
Object smallint20629;
Object smallint20630;
Object info3678;
Object send182962;
Object assign22435;
Object send182963;
Object block12668;
Object send182964;
Object smallint20631;
Object constant35540;
Object send182965;
Object classreference4817;
Object smallint20632;
Object constant35541;
Object assign22436;
Object method25240;
Object string27737;
Object string27738;
Object smallint20633;
Object smallint20634;
Object info3679;
Object symbol35883;
Object methodclosure25238;
Object localvariable26479;
Object array21235;
Object smallint20635;
Object constant35542;
Object localvariable26480;
Object array21236;
Object send182966;
Object string27739;
Object string27740;
Object smallint20636;
Object smallint20637;
Object info3680;
Object send182967;
Object send182968;
Object block12669;
Object send182969;
Object method25241;
Object symbol35928;
Object methodclosure25239;
Object localvariable26481;
Object array21237;
Object smallint20638;
Object constant35543;
Object localvariable26482;
Object array21238;
Object send182970;
Object string27741;
Object string27742;
Object smallint20639;
Object smallint20640;
Object info3681;
Object send182971;
Object block12670;
Object send182972;
Object method25242;
Object symbol35921;
Object methodclosure25240;
Object symbol35957;
Object send182973;
Object string27743;
Object string27744;
Object smallint20641;
Object smallint20642;
Object info3682;
Object localvariable26483;
Object array21239;
Object symbol35897;
Object send182974;
Object block12671;
Object send182975;
Object method25243;
Object symbol35893;
Object methodclosure25241;
Object localvariable26484;
Object array21240;
Object localvariable26485;
Object array21241;
Object symbol35918;
Object send182976;
Object string27745;
Object string27746;
Object smallint20643;
Object smallint20644;
Object info3683;
Object symbol35958;
Object localvariable26486;
Object localvariable26487;
Object array21242;
Object symbol35959;
Object send182977;
Object send182978;
Object block12672;
Object send182979;
Object symbol35960;
Object send182980;
Object send182981;
Object block12673;
Object send182982;
Object block12674;
Object send182983;
Object send182984;
Object block12675;
Object send182985;
Object send182986;
Object send182987;
Object symbol35846;
Object send182988;
Object send182989;
Object send182990;
Object block12676;
Object send182991;
Object send182992;
Object send182993;
Object send182994;
Object send182995;
Object block12677;
Object send182996;
Object block12678;
Object send182997;
Object block12679;
Object send182998;
Object assign22437;
Object symbol35899;
Object localvariable26488;
Object array21243;
Object send182999;
Object send183000;
Object block12680;
Object send183001;
Object method25244;
Object symbol35903;
Object methodclosure25242;
Object symbol35930;
Object smallint20645;
Object constant35544;
Object send183002;
Object string27747;
Object string27748;
Object smallint20646;
Object smallint20647;
Object info3684;
Object send183003;
Object method25245;
Object symbol35931;
Object methodclosure25243;
Object localvariable26489;
Object array21244;
Object variable1569;
Object array21245;
Object localvariable26490;
Object array21246;
Object symbol35667;
Object send183004;
Object string27749;
Object string27750;
Object smallint20648;
Object smallint20649;
Object info3685;
Object send183005;
Object block12681;
Object send183006;
Object block12682;
Object send183007;
Object block12683;
Object send183008;
Object method25246;
Object symbol35915;
Object methodclosure25244;
Object localvariable26491;
Object array21247;
Object localvariable26492;
Object array21248;
Object symbol35961;
Object send183009;
Object string27751;
Object string27752;
Object smallint20650;
Object smallint20651;
Object info3686;
Object send183010;
Object assign22438;
Object symbol35912;
Object localvariable26493;
Object array21249;
Object send183011;
Object send183012;
Object block12684;
Object send183013;
Object block12685;
Object send183014;
Object method25247;
Object symbol35887;
Object methodclosure25245;
Object super1968;
Object smallint20652;
Object constant35545;
Object send183015;
Object string27753;
Object string27754;
Object smallint20653;
Object smallint20654;
Object info3687;
Object assign22439;
Object smallint20655;
Object constant35546;
Object send183016;
Object assign22440;
Object smallint20656;
Object constant35547;
Object assign22441;
Object method25248;
Object methodclosure25246;
Object localvariable26494;
Object localvariable26495;
Object array21250;
Object localvariable26496;
Object array21251;
Object variable1570;
Object array21252;
Object symbol35914;
Object send183017;
Object string27755;
Object string27756;
Object smallint20657;
Object smallint20658;
Object info3688;
Object block12686;
Object send183018;
Object assign22442;
Object symbol35962;
Object send183019;
Object send183020;
Object block12687;
Object send183021;
Object send183022;
Object block12688;
Object send183023;
Object method25249;
Object symbol35880;
Object methodclosure25247;
Object localvariable26497;
Object array21253;
Object send183024;
Object string27757;
Object string27758;
Object smallint20659;
Object smallint20660;
Object info3689;
Object send183025;
Object method25250;
Object symbol35925;
Object methodclosure25248;
Object localvariable26498;
Object array21254;
Object symbol35884;
Object symbol35898;
Object send183026;
Object string27759;
Object string27760;
Object smallint20661;
Object smallint20662;
Object info3690;
Object block12689;
Object send183027;
Object method25251;
Object methodclosure25249;
Object string27761;
Object constant35548;
Object send183028;
Object string27762;
Object string27763;
Object smallint20663;
Object smallint20664;
Object info3691;
Object method25252;
Object symbol35907;
Object methodclosure25250;
Object method25253;
Object string27764;
Object string27765;
Object smallint20665;
Object smallint20666;
Object info3692;
Object symbol35890;
Object methodclosure25251;
Object localvariable26499;
Object localvariable26500;
Object array21255;
Object send183029;
Object string27766;
Object string27767;
Object smallint20667;
Object smallint20668;
Object info3693;
Object send183030;
Object method25254;
Object symbol35919;
Object methodclosure25252;
Object localvariable26501;
Object array21256;
Object variable1571;
Object array21257;
Object localvariable26502;
Object array21258;
Object send183031;
Object string27768;
Object string27769;
Object smallint20669;
Object smallint20670;
Object info3694;
Object send183032;
Object block12690;
Object send183033;
Object block12691;
Object send183034;
Object block12692;
Object send183035;
Object method25255;
Object symbol35879;
Object methodclosure25253;
Object send183036;
Object string27770;
Object string27771;
Object smallint20671;
Object smallint20672;
Object info3695;
Object assign22443;
Object send183037;
Object assign22444;
Object method25256;
Object symbol35900;
Object methodclosure25254;
Object localvariable26503;
Object array21259;
Object localvariable26504;
Object localvariable26505;
Object array21260;
Object symbol35963;
Object send183038;
Object string27772;
Object string27773;
Object smallint20673;
Object smallint20674;
Object info3696;
Object send183039;
Object block12693;
Object send183040;
Object method25257;
Object methodclosure25255;
Object localvariable26506;
Object localvariable26507;
Object array21261;
Object localvariable26508;
Object localvariable26509;
Object array21262;
Object variable1572;
Object array21263;
Object symbol35926;
Object send183041;
Object string27774;
Object string27775;
Object smallint20675;
Object smallint20676;
Object info3697;
Object assign22445;
Object smallint20677;
Object constant35549;
Object send183042;
Object send183043;
Object send183044;
Object block12694;
Object send183045;
Object send183046;
Object assign22446;
Object smallint20678;
Object constant35550;
Object send183047;
Object localvariable26510;
Object array21264;
Object smallint20679;
Object constant35551;
Object send183048;
Object send183049;
Object send183050;
Object smallint20680;
Object constant35552;
Object send183051;
Object send183052;
Object send183053;
Object block12695;
Object send183054;
Object send183055;
Object send183056;
Object smallint20681;
Object constant35553;
Object send183057;
Object assign22447;
Object block12696;
Object send183058;
Object method25258;
Object methodclosure25256;
Object localvariable26511;
Object array21265;
Object symbol35913;
Object send183059;
Object string27776;
Object string27777;
Object smallint20682;
Object smallint20683;
Object info3698;
Object block12697;
Object send183060;
Object method25259;
Object symbol35929;
Object methodclosure25257;
Object localvariable26512;
Object array21266;
Object variable1573;
Object array21267;
Object localvariable26513;
Object array21268;
Object send183061;
Object string27778;
Object string27779;
Object smallint20684;
Object smallint20685;
Object info3699;
Object send183062;
Object block12698;
Object send183063;
Object block12699;
Object send183064;
Object block12700;
Object send183065;
Object method25260;
Object symbol35922;
Object methodclosure25258;
Object localvariable26514;
Object array21269;
Object send183066;
Object string27780;
Object string27781;
Object smallint20686;
Object smallint20687;
Object info3700;
Object block12701;
Object send183067;
Object method25261;
Object methodclosure25259;
Object localvariable26515;
Object array21270;
Object send183068;
Object string27782;
Object string27783;
Object smallint20688;
Object smallint20689;
Object info3701;
Object variable1574;
Object send183069;
Object block12702;
Object send183070;
Object send183071;
Object send183072;
Object send183073;
Object method25262;
Object symbol35894;
Object methodclosure25260;
Object localvariable26516;
Object array21271;
Object send183074;
Object string27784;
Object string27785;
Object smallint20690;
Object smallint20691;
Object info3702;
Object send183075;
Object symbol35964;
Object send183076;
Object assign22448;
Object localvariable26517;
Object array21272;
Object symbol35965;
Object send183077;
Object block12703;
Object send183078;
Object symbol35966;
Object send183079;
Object method25263;
Object symbol35904;
Object methodclosure25261;
Object localvariable26518;
Object array21273;
Object localvariable26519;
Object array21274;
Object string27786;
Object constant35554;
Object send183080;
Object string27787;
Object string27788;
Object smallint20692;
Object smallint20693;
Object info3703;
Object send183081;
Object send183082;
Object send183083;
Object string27789;
Object constant35555;
Object send183084;
Object assign22449;
Object localvariable26520;
Object array21275;
Object assign22450;
Object block12704;
Object character132;
Object constant35556;
Object send183085;
Object block12705;
Object send183086;
Object string27790;
Object constant35557;
Object send183087;
Object symbol35967;
Object send183088;
Object block12706;
Object send183089;
Object string27791;
Object constant35558;
Object send183090;
Object block12707;
Object send183091;
Object character133;
Object constant35559;
Object send183092;
Object method25264;
Object symbol35916;
Object methodclosure25262;
Object localvariable26521;
Object array21276;
Object localvariable26522;
Object array21277;
Object character134;
Object constant35560;
Object send183093;
Object string27792;
Object string27793;
Object smallint20694;
Object smallint20695;
Object info3704;
Object assign22451;
Object localvariable26523;
Object array21278;
Object assign22452;
Object block12708;
Object send183094;
Object block12709;
Object send183095;
Object symbol35968;
Object send183096;
Object block12710;
Object send183097;
Object character135;
Object constant35561;
Object send183098;
Object method25265;
Object symbol35888;
Object methodclosure25263;
Object localvariable26524;
Object array21279;
Object symbol35886;
Object send183099;
Object string27794;
Object string27795;
Object smallint20696;
Object smallint20697;
Object info3705;
Object method25266;
Object methodclosure25264;
Object localvariable26525;
Object array21280;
Object symbol35906;
Object send183100;
Object string27796;
Object string27797;
Object smallint20698;
Object smallint20699;
Object info3706;
Object block12711;
Object send183101;
Object method25267;
Object symbol35881;
Object methodclosure25265;
Object localvariable26526;
Object array21281;
Object symbol35969;
Object send183102;
Object string27798;
Object string27799;
Object smallint20700;
Object smallint20701;
Object info3707;
Object method25268;
Object methodclosure25266;
Object string27800;
Object constant35562;
Object send183103;
Object string27801;
Object string27802;
Object smallint20702;
Object smallint20703;
Object info3708;
Object method25269;
Object methodclosure25267;
Object localvariable26527;
Object localvariable26528;
Object array21282;
Object send183104;
Object string27803;
Object string27804;
Object smallint20704;
Object smallint20705;
Object info3709;
Object send183105;
Object send183106;
Object block12712;
Object send183107;
Object smallint20706;
Object constant35563;
Object send183108;
Object assign22453;
Object send183109;
Object send183110;
Object method25270;
Object symbol35908;
Object methodclosure25268;
Object localvariable26529;
Object array21283;
Object send183111;
Object string27805;
Object string27806;
Object smallint20707;
Object smallint20708;
Object info3710;
Object send183112;
Object send183113;
Object assign22454;
Object localvariable26530;
Object array21284;
Object send183114;
Object block12713;
Object send183115;
Object send183116;
Object method25271;
Object symbol35891;
Object methodclosure25269;
Object localvariable26531;
Object localvariable26532;
Object array21285;
Object localvariable26533;
Object localvariable26534;
Object array21286;
Object variable1575;
Object array21287;
Object send183117;
Object string27807;
Object string27808;
Object smallint20709;
Object smallint20710;
Object info3711;
Object assign22455;
Object smallint20711;
Object constant35564;
Object send183118;
Object send183119;
Object send183120;
Object block12714;
Object send183121;
Object send183122;
Object assign22456;
Object send183123;
Object block12715;
Object send183124;
Object method25272;
Object methodclosure25270;
Object localvariable26535;
Object array21288;
Object variable1576;
Object array21289;
Object send183125;
Object string27809;
Object string27810;
Object smallint20712;
Object smallint20713;
Object info3712;
Object send183126;
Object block12716;
Object send183127;
Object symbol35927;
Object send183128;
Object send183129;
Object block12717;
Object send183130;
Object send183131;
Object send183132;
Object send183133;
Object send183134;
Object block12718;
Object send183135;
Object localvariable26536;
Object array21290;
Object send183136;
Object send183137;
Object block12719;
Object send183138;
Object send183139;
Object send183140;
Object send183141;
Object block12720;
Object send183142;
Object block12721;
Object send183143;
Object block12722;
Object send183144;
Object method25273;
Object methodclosure25271;
Object localvariable26537;
Object localvariable26538;
Object array21291;
Object localvariable26539;
Object array21292;
Object send183145;
Object string27811;
Object string27812;
Object smallint20714;
Object smallint20715;
Object info3713;
Object block12723;
Object send183146;
Object assign22457;
Object send183147;
Object method25274;
Object symbol35885;
Object methodclosure25272;
Object localvariable26540;
Object array21293;
Object localvariable26541;
Object array21294;
Object send183148;
Object string27813;
Object string27814;
Object smallint20716;
Object smallint20717;
Object info3714;
Object send183149;
Object assign22458;
Object localvariable26542;
Object array21295;
Object send183150;
Object send183151;
Object send183152;
Object block12724;
Object send183153;
Object block12725;
Object send183154;
Object method25275;
Object symbol35923;
Object methodclosure25273;
Object send183155;
Object string27815;
Object string27816;
Object smallint20718;
Object smallint20719;
Object info3715;
Object method25276;
Object symbol35895;
Object methodclosure25274;
Object localvariable26543;
Object array21296;
Object send183156;
Object string27817;
Object string27818;
Object smallint20720;
Object smallint20721;
Object info3716;
Object send183157;
Object send183158;
Object method25277;
Object methodclosure25275;
Object localvariable26544;
Object localvariable26545;
Object array21297;
Object variable1577;
Object array21298;
Object symbol35889;
Object send183159;
Object string27819;
Object string27820;
Object smallint20722;
Object smallint20723;
Object info3717;
Object send183160;
Object block12726;
Object send183161;
Object send183162;
Object send183163;
Object send183164;
Object send183165;
Object block12727;
Object send183166;
Object send183167;
Object block12728;
Object send183168;
Object block12729;
Object send183169;
Object method25278;
Object symbol35905;
Object methodclosure25276;
Object localvariable26546;
Object array21299;
Object symbol35970;
Object send183170;
Object string27821;
Object string27822;
Object smallint20724;
Object smallint20725;
Object info3718;
Object method25279;
Object symbol35877;
Object methodclosure25277;
Object localvariable26547;
Object array21300;
Object send183171;
Object string27823;
Object string27824;
Object smallint20726;
Object smallint20727;
Object info3719;
Object smallint20728;
Object constant35565;
Object send183172;
Object send183173;
Object method25280;
Object methodclosure25278;
Object localvariable26548;
Object array21301;
Object localvariable26549;
Object array21302;
Object smallint20729;
Object constant35566;
Object assign22459;
Object localvariable26550;
Object array21303;
Object send183174;
Object string27825;
Object string27826;
Object smallint20730;
Object smallint20731;
Object info3720;
Object smallint20732;
Object constant35567;
Object send183175;
Object assign22460;
Object block12730;
Object send183176;
Object block12731;
Object send183177;
Object method25281;
Object symbol35910;
Object methodclosure25279;
Object localvariable26551;
Object array21304;
Object variable1578;
Object array21305;
Object localvariable26552;
Object localvariable26553;
Object array21306;
Object send183178;
Object string27827;
Object string27828;
Object smallint20733;
Object smallint20734;
Object info3721;
Object send183179;
Object block12732;
Object send183180;
Object block12733;
Object send183181;
Object block12734;
Object send183182;
Object method25282;
Object symbol35882;
Object methodclosure25280;
Object method25283;
Object string27829;
Object string27830;
Object smallint20735;
Object smallint20736;
Object info3722;
Object methodclosure25281;
Object localvariable26554;
Object array21307;
Object localvariable26555;
Object array21308;
Object send183183;
Object string27831;
Object string27832;
Object smallint20737;
Object smallint20738;
Object info3723;
Object send183184;
Object assign22461;
Object localvariable26556;
Object array21309;
Object send183185;
Object send183186;
Object send183187;
Object send183188;
Object block12735;
Object send183189;
Object method25284;
Object methodclosure25282;
Object localvariable26557;
Object localvariable26558;
Object array21310;
Object localvariable26559;
Object array21311;
Object variable1579;
Object array21312;
Object send183190;
Object string27833;
Object string27834;
Object smallint20739;
Object smallint20740;
Object info3724;
Object assign22462;
Object smallint20741;
Object constant35568;
Object send183191;
Object send183192;
Object send183193;
Object block12736;
Object send183194;
Object send183195;
Object block12737;
Object send183196;
Object method25285;
Object symbol35920;
Object methodclosure25283;
Object localvariable26560;
Object array21313;
Object localvariable26561;
Object array21314;
Object send183197;
Object string27835;
Object string27836;
Object smallint20742;
Object smallint20743;
Object info3725;
Object assign22463;
Object localvariable26562;
Object localvariable26563;
Object array21315;
Object send183198;
Object send183199;
Object block12738;
Object send183200;
Object block12739;
Object send183201;
Object localvariable26564;
Object array21316;
Object send183202;
Object block12740;
Object send183203;
Object method25286;
Object symbol35909;
Object methodclosure25284;
Object localvariable26565;
Object localvariable26566;
Object array21317;
Object localvariable26567;
Object array21318;
Object array21319;
Object send183204;
Object string27837;
Object string27838;
Object smallint20744;
Object smallint20745;
Object info3726;
Object assign22464;
Object smallint20746;
Object constant35569;
Object send183205;
Object symbol35971;
Object send183206;
Object send183207;
Object block12741;
Object send183208;
Object send183209;
Object send183210;
Object block12742;
Object send183211;
Object block12743;
Object send183212;
Object method25287;
Object symbol35892;
Object methodclosure25285;
Object method25288;
Object string27839;
Object string27840;
Object smallint20747;
Object smallint20748;
Object info3727;
Object methodclosure25286;
Object symbol35972;
Object send183213;
Object string27841;
Object string27842;
Object smallint20749;
Object smallint20750;
Object info3728;
Object send183214;
Object method25289;
Object methodclosure25287;
Object localvariable26568;
Object array21320;
Object classreference4818;
Object send183215;
Object string27843;
Object string27844;
Object smallint20751;
Object smallint20752;
Object info3729;
Object send183216;
Object assign22465;
Object symbol35973;
Object localvariable26569;
Object localvariable26570;
Object array21321;
Object send183217;
Object send183218;
Object block12744;
Object send183219;
Object send183220;
Object send183221;
Object block12745;
Object send183222;
Object block12746;
Object send183223;
Object send183224;
Object block12747;
Object send183225;
Object send183226;
Object send183227;
Object send183228;
Object send183229;
Object send183230;
Object block12748;
Object send183231;
Object send183232;
Object send183233;
Object send183234;
Object send183235;
Object block12749;
Object send183236;
Object block12750;
Object send183237;
Object block12751;
Object send183238;
Object localvariable26571;
Object array21322;
Object send183239;
Object block12752;
Object send183240;
Object symbol35974;
Object send183241;
Object method25290;
Object symbol35902;
Object methodclosure25288;
Object localvariable26572;
Object array21323;
Object localvariable26573;
Object localvariable26574;
Object array21324;
Object send183242;
Object string27845;
Object string27846;
Object smallint20753;
Object smallint20754;
Object info3730;
Object assign22466;
Object send183243;
Object assign22467;
Object smallint20755;
Object constant35570;
Object localvariable26575;
Object array21325;
Object send183244;
Object send183245;
Object send183246;
Object send183247;
Object block12753;
Object send183248;
Object assign22468;
Object assign22469;
Object method25291;
Object methodclosure25289;
Object localvariable26576;
Object localvariable26577;
Object array21326;
Object localvariable26578;
Object array21327;
Object variable1580;
Object array21328;
Object send183249;
Object string27847;
Object string27848;
Object smallint20756;
Object smallint20757;
Object info3731;
Object assign22470;
Object smallint20758;
Object constant35571;
Object send183250;
Object send183251;
Object send183252;
Object block12754;
Object send183253;
Object send183254;
Object block12755;
Object send183255;
Object method25292;
Object methodclosure25290;
Object localvariable26579;
Object localvariable26580;
Object array21329;
Object localvariable26581;
Object array21330;
Object variable1581;
Object array21331;
Object send183256;
Object string27849;
Object string27850;
Object smallint20759;
Object smallint20760;
Object info3732;
Object assign22471;
Object smallint20761;
Object constant35572;
Object send183257;
Object send183258;
Object send183259;
Object block12756;
Object send183260;
Object send183261;
Object block12757;
Object send183262;
Object block12758;
Object send183263;
Object method25293;
Object methodclosure25291;
Object localvariable26582;
Object array21332;
Object smallint20762;
Object constant35573;
Object localvariable26583;
Object array21333;
Object send183264;
Object string27851;
Object string27852;
Object smallint20763;
Object smallint20764;
Object info3733;
Object send183265;
Object block12759;
Object send183266;
Object method25294;
Object methodclosure25292;
Object localvariable26584;
Object array21334;
Object send183267;
Object string27853;
Object string27854;
Object smallint20765;
Object smallint20766;
Object info3734;
Object block12760;
Object send183268;
Object method25295;
Object symbol35924;
Object methodclosure25293;
Object method25296;
Object string27855;
Object string27856;
Object smallint20767;
Object smallint20768;
Object info3735;
Object symbol35896;
Object methodclosure25294;
Object localvariable26585;
Object localvariable26586;
Object array21335;
Object localvariable26587;
Object array21336;
Object variable1582;
Object array21337;
Object symbol35975;
Object send183269;
Object string27857;
Object string27858;
Object smallint20769;
Object smallint20770;
Object info3736;
Object assign22472;
Object smallint20771;
Object constant35574;
Object send183270;
Object send183271;
Object send183272;
Object block12761;
Object send183273;
Object send183274;
Object block12762;
Object send183275;
Object method25297;
Object methodclosure25295;
Object localvariable26588;
Object array21338;
Object classreference4819;
Object send183276;
Object string27859;
Object string27860;
Object smallint20772;
Object smallint20773;
Object info3737;
Object send183277;
Object assign22473;
Object localvariable26589;
Object array21339;
Object send183278;
Object block12763;
Object send183279;
Object method25298;
Object methodclosure25296;
Object localvariable26590;
Object array21340;
Object send183280;
Object string27861;
Object string27862;
Object smallint20774;
Object smallint20775;
Object info3738;
Object localvariable26591;
Object localvariable26592;
Object array21341;
Object send183281;
Object block12764;
Object send183282;
Object block12765;
Object send183283;
Object method25299;
Object methodclosure25297;
Object localvariable26593;
Object array21342;
Object localvariable26594;
Object localvariable26595;
Object localvariable26596;
Object array21343;
Object variable1583;
Object array21344;
Object send183284;
Object string27863;
Object string27864;
Object smallint20776;
Object smallint20777;
Object info3739;
Object assign22474;
Object send183285;
Object symbol35976;
Object send183286;
Object smallint20778;
Object constant35575;
Object send183287;
Object assign22475;
Object localvariable26597;
Object array21345;
Object send183288;
Object assign22476;
Object send183289;
Object send183290;
Object block12766;
Object send183291;
Object send183292;
Object block12767;
Object send183293;
Object block12768;
Object send183294;
Object smallint20779;
Object constant35576;
Object smallint20780;
Object constant35577;
Object send183295;
Object localvariable26598;
Object array21346;
Object send183296;
Object assign22477;
Object send183297;
Object send183298;
Object block12769;
Object send183299;
Object send183300;
Object block12770;
Object send183301;
Object block12771;
Object send183302;
Object smallint20781;
Object constant35578;
Object block12772;
Object send183303;
Object method25300;
Object symbol35911;
Object methodclosure25298;
Object send183304;
Object string27865;
Object string27866;
Object smallint20782;
Object smallint20783;
Object info3740;
Object send183305;
Object method25301;
Object methodclosure25299;
Object localvariable26599;
Object array21347;
Object send183306;
Object string27867;
Object string27868;
Object smallint20784;
Object smallint20785;
Object info3741;
Object send183307;
Object method25302;
Object methodclosure25300;
Object variable1584;
Object array21348;
Object send183308;
Object string27869;
Object string27870;
Object smallint20786;
Object smallint20787;
Object info3742;
Object symbol35977;
Object constant35579;
Object send183309;
Object block12773;
Object send183310;
Object symbol35665;
Object super1969;
Object block12774;
Object send183311;
Object method25303;
Object methodclosure25301;
Object variable1585;
Object array21349;
Object send183312;
Object string27871;
Object string27872;
Object smallint20788;
Object smallint20789;
Object info3743;
Object constant35580;
Object send183313;
Object block12775;
Object send183314;
Object symbol35621;
Object super1970;
Object block12776;
Object send183315;
Object method25304;
Object methodclosure25302;
Object send183316;
Object send183317;
Object block12777;
Object send183318;
Object method25305;
Object symbol35672;
Object methodclosure25303;
Object localvariable26600;
Object localvariable26601;
Object array21350;
Object super1971;
Object assign22478;
Object send183319;
Object string27873;
Object string27874;
Object smallint20790;
Object smallint20791;
Object info3744;
Object smallint20792;
Object constant35581;
Object send183320;
Object send183321;
Object assign22479;
Object method25306;
Object symbol35666;
Object methodclosure25304;
Object send183322;
Object string27875;
Object string27876;
Object smallint20793;
Object smallint20794;
Object info3745;
Object method25307;
Object symbol35668;
Object methodclosure25305;
Object localvariable26602;
Object array21351;
Object localvariable26603;
Object array21352;
Object symbol35863;
Object send183323;
Object string27877;
Object string27878;
Object smallint20795;
Object smallint20796;
Object info3746;
Object assign22480;
Object symbol35978;
Object send183324;
Object method25308;
Object symbol35674;
Object methodclosure25306;
Object localvariable26604;
Object array21353;
Object localvariable26605;
Object localvariable26606;
Object array21354;
Object variable1586;
Object array21355;
Object assign22481;
Object send183325;
Object string27879;
Object string27880;
Object smallint20797;
Object smallint20798;
Object info3747;
Object send183326;
Object block12778;
Object send183327;
Object assign22482;
Object symbol35979;
Object send183328;
Object assign22483;
Object symbol35980;
Object send183329;
Object send183330;
Object block12779;
Object send183331;
Object send183332;
Object send183333;
Object block12780;
Object send183334;
Object block12781;
Object send183335;
Object method25309;
Object symbol35673;
Object methodclosure25307;
Object localvariable26607;
Object array21356;
Object send183336;
Object string27881;
Object string27882;
Object smallint20799;
Object smallint20800;
Object info3748;
Object block12782;
Object block12783;
Object send183337;
Object method25310;
Object methodclosure25308;
Object localvariable26608;
Object array21357;
Object localvariable26609;
Object localvariable26610;
Object array21358;
Object variable1587;
Object array21359;
Object symbol35981;
Object send183338;
Object string27883;
Object string27884;
Object smallint20801;
Object smallint20802;
Object info3749;
Object assign22484;
Object assign22485;
Object send183339;
Object block12784;
Object send183340;
Object send183341;
Object block12785;
Object send183342;
Object send183343;
Object symbol35521;
Object send183344;
Object send183345;
Object send183346;
Object block12786;
Object send183347;
Object block12787;
Object send183348;
Object block12788;
Object send183349;
Object method25311;
Object methodclosure25309;
Object localvariable26611;
Object array21360;
Object classreference4820;
Object localvariable26612;
Object array21361;
Object assign22486;
Object method25312;
Object string27885;
Object string27886;
Object smallint20803;
Object smallint20804;
Object info3750;
Object symbol35861;
Object methodclosure25310;
Object localvariable26613;
Object array21362;
Object localvariable26614;
Object array21363;
Object variable1588;
Object array21364;
Object send183350;
Object string27887;
Object string27888;
Object smallint20805;
Object smallint20806;
Object info3751;
Object assign22487;
Object symbol35982;
Object block12789;
Object send183351;
Object block12790;
Object send183352;
Object send183353;
Object block12791;
Object send183354;
Object block12792;
Object send183355;
Object method25313;
Object methodclosure25311;
Object localvariable26615;
Object array21365;
Object send183356;
Object string27889;
Object string27890;
Object smallint20807;
Object smallint20808;
Object info3752;
Object assign22488;
Object method25314;
Object methodclosure25312;
Object super1972;
Object send183357;
Object string27891;
Object string27892;
Object smallint20809;
Object smallint20810;
Object info3753;
Object symbol35854;
Object send183358;
Object assign22489;
Object method25315;
Object methodclosure25313;
Object localvariable26616;
Object array21366;
Object assign22490;
Object method25316;
Object string27893;
Object string27894;
Object smallint20811;
Object smallint20812;
Object info3754;
Object symbol35860;
Object methodclosure25314;
Object localvariable26617;
Object array21367;
Object localvariable26618;
Object localvariable26619;
Object array21368;
Object send183359;
Object string27895;
Object string27896;
Object smallint20813;
Object smallint20814;
Object info3755;
Object assign22491;
Object send183360;
Object assign22492;
Object method25317;
Object symbol35862;
Object methodclosure25315;
Object localvariable26620;
Object array21369;
Object localvariable26621;
Object array21370;
Object send183361;
Object string27897;
Object string27898;
Object smallint20815;
Object smallint20816;
Object info3756;
Object assign22493;
Object method25318;
Object methodclosure25316;
Object symbol35857;
Object send183362;
Object string27899;
Object string27900;
Object smallint20817;
Object smallint20818;
Object info3757;
Object symbol35839;
Object send183363;
Object assign22494;
Object block12793;
Object send183364;
Object method25319;
Object symbol35859;
Object methodclosure25317;
Object localvariable26622;
Object localvariable26623;
Object localvariable26624;
Object array21371;
Object symbol35858;
Object send183365;
Object string27901;
Object string27902;
Object smallint20819;
Object smallint20820;
Object info3758;
Object send183366;
Object method25320;
Object symbol35856;
Object methodclosure25318;
Object send183367;
Object string27903;
Object string27904;
Object smallint20821;
Object smallint20822;
Object info3759;
Object method25321;
Object methodclosure25319;
Object localvariable26625;
Object localvariable26626;
Object array21372;
Object send183368;
Object string27905;
Object string27906;
Object smallint20823;
Object smallint20824;
Object info3760;
Object send183369;
Object method25322;
Object methodclosure25320;
Object send183370;
Object string27907;
Object string27908;
Object smallint20825;
Object smallint20826;
Object info3761;
Object send183371;
Object send183372;
Object send183373;
Object send183374;
Object send183375;
Object assign22495;
Object block12794;
Object send183376;
Object smallint20827;
Object constant35582;
Object smallint20828;
Object constant35583;
Object send183377;
Object send183378;
Object method25323;
Object methodclosure25321;
Object send183379;
Object string27909;
Object string27910;
Object smallint20829;
Object smallint20830;
Object info3762;
Object method25324;
Object symbol35853;
Object methodclosure25322;
Object localvariable26627;
Object array21373;
Object send183380;
Object string27911;
Object string27912;
Object smallint20831;
Object smallint20832;
Object info3763;
Object send183381;
Object method25325;
Object methodclosure25323;
Object send183382;
Object string27913;
Object string27914;
Object smallint20833;
Object smallint20834;
Object info3764;
Object send183383;
Object method25326;
Object methodclosure25324;
Object constant35584;
Object method25327;
Object string27915;
Object string27916;
Object smallint20835;
Object smallint20836;
Object info3765;
Object methodclosure25325;
Object constant35585;
Object method25328;
Object string27917;
Object string27918;
Object smallint20837;
Object smallint20838;
Object info3766;
Object methodclosure25326;
Object localvariable26628;
Object localvariable26629;
Object array21374;
Object send183384;
Object string27919;
Object string27920;
Object smallint20839;
Object smallint20840;
Object info3767;
Object send183385;
Object method25329;
Object methodclosure25327;
Object string27921;
Object constant35586;
Object send183386;
Object assign22496;
Object send183387;
Object assign22497;
Object send183388;
Object symbol35983;
Object send183389;
Object classreference4821;
Object localvariable26630;
Object array21375;
Object assign22498;
Object method25330;
Object string27922;
Object string27923;
Object smallint20841;
Object smallint20842;
Object info3768;
Object symbol35754;
Object methodclosure25328;
Object method25331;
Object string27924;
Object string27925;
Object smallint20843;
Object smallint20844;
Object info3769;
Object methodclosure25329;
Object localvariable26631;
Object array21376;
Object assign22499;
Object method25332;
Object string27926;
Object string27927;
Object smallint20845;
Object smallint20846;
Object info3770;
Object symbol35756;
Object methodclosure25330;
Object method25333;
Object string27928;
Object string27929;
Object smallint20847;
Object smallint20848;
Object info3771;
Object symbol35757;
Object methodclosure25331;
Object send183390;
Object send183391;
Object send183392;
Object send183393;
Object classreference4822;
Object send183394;
Object string27930;
Object string27931;
Object smallint20849;
Object smallint20850;
Object info3772;
Object send183395;
Object send183396;
Object method25334;
Object methodclosure25332;
Object super1973;
Object method25335;
Object string27932;
Object string27933;
Object smallint20851;
Object smallint20852;
Object info3773;
Object methodclosure25333;
Object localvariable26632;
Object array21377;
Object assign22500;
Object method25336;
Object string27934;
Object string27935;
Object smallint20853;
Object smallint20854;
Object info3774;
Object methodclosure25334;
Object localvariable26633;
Object array21378;
Object super1974;
Object localvariable26634;
Object array21379;
Object string27936;
Object constant35587;
Object send183397;
Object string27937;
Object string27938;
Object smallint20855;
Object smallint20856;
Object info3775;
Object send183398;
Object send183399;
Object string27939;
Object constant35588;
Object send183400;
Object block12795;
Object send183401;
Object method25337;
Object methodclosure25335;
Object localvariable26635;
Object array21380;
Object symbol35607;
Object send183402;
Object string27940;
Object string27941;
Object smallint20857;
Object smallint20858;
Object info3776;
Object symbol35984;
Object send183403;
Object send183404;
Object method25338;
Object symbol35722;
Object methodclosure25336;
Object localvariable26636;
Object array21381;
Object send183405;
Object string27942;
Object string27943;
Object smallint20859;
Object smallint20860;
Object info3777;
Object send183406;
Object send183407;
Object method25339;
Object methodclosure25337;
Object localvariable26637;
Object array21382;
Object send183408;
Object string27944;
Object string27945;
Object smallint20861;
Object smallint20862;
Object info3778;
Object symbol35985;
Object send183409;
Object send183410;
Object method25340;
Object symbol35723;
Object methodclosure25338;
Object send183411;
Object string27946;
Object string27947;
Object smallint20863;
Object smallint20864;
Object info3779;
Object send183412;
Object method25341;
Object methodclosure25339;
Object method25342;
Object string27948;
Object string27949;
Object smallint20865;
Object smallint20866;
Object info3780;
Object methodclosure25340;
Object send183413;
Object send183414;
Object send183415;
Object send183416;
Object string27950;
Object constant35589;
Object send183417;
Object send183418;
Object assign22501;
Object send183419;
Object send183420;
Object send183421;
Object send183422;
Object send183423;
Object send183424;
Object send183425;
Object send183426;
Object send183427;
Object send183428;
Object string27951;
Object constant35590;
Object send183429;
Object send183430;
Object assign22502;
Object send183431;
Object send183432;
Object send183433;
Object send183434;
Object send183435;
Object send183436;
Object send183437;
Object send183438;
Object send183439;
Object send183440;
Object string27952;
Object constant35591;
Object send183441;
Object send183442;
Object send183443;
Object send183444;
Object classreference4823;
Object localvariable26638;
Object array21383;
Object assign22503;
Object method25343;
Object string27953;
Object string27954;
Object smallint20867;
Object smallint20868;
Object info3781;
Object symbol35726;
Object methodclosure25341;
Object method25344;
Object string27955;
Object string27956;
Object smallint20869;
Object smallint20870;
Object info3782;
Object symbol35728;
Object methodclosure25342;
Object send183445;
Object string27957;
Object string27958;
Object smallint20871;
Object smallint20872;
Object info3783;
Object symbol35986;
Object localvariable26639;
Object array21384;
Object symbol35516;
Object send183446;
Object symbol35678;
Object send183447;
Object block12796;
Object send183448;
Object block12797;
Object send183449;
Object method25345;
Object methodclosure25343;
Object super1975;
Object send183450;
Object string27959;
Object string27960;
Object smallint20873;
Object smallint20874;
Object info3784;
Object assign22504;
Object method25346;
Object methodclosure25344;
Object method25347;
Object string27961;
Object string27962;
Object smallint20875;
Object smallint20876;
Object info3785;
Object methodclosure25345;
Object localvariable26640;
Object array21385;
Object assign22505;
Object method25348;
Object string27963;
Object string27964;
Object smallint20877;
Object smallint20878;
Object info3786;
Object symbol35739;
Object methodclosure25346;
Object send183451;
Object method25349;
Object symbol35576;
Object methodclosure25347;
Object localvariable26641;
Object localvariable26642;
Object localvariable26643;
Object array21386;
Object symbol35987;
Object send183452;
Object string27965;
Object string27966;
Object smallint20879;
Object smallint20880;
Object info3787;
Object assign22506;
Object string27967;
Object constant35592;
Object send183453;
Object assign22507;
Object send183454;
Object assign22508;
Object send183455;
Object send183456;
Object classreference4824;
Object localvariable26644;
Object array21387;
Object assign22509;
Object method25350;
Object string27968;
Object string27969;
Object smallint20881;
Object smallint20882;
Object info3788;
Object methodclosure25348;
Object method25351;
Object string27970;
Object string27971;
Object smallint20883;
Object smallint20884;
Object info3789;
Object methodclosure25349;
Object localvariable26645;
Object array21388;
Object send183457;
Object string27972;
Object string27973;
Object smallint20885;
Object smallint20886;
Object info3790;
Object send183458;
Object send183459;
Object send183460;
Object super1976;
Object method25352;
Object methodclosure25350;
Object send183461;
Object send183462;
Object send183463;
Object send183464;
Object classreference4825;
Object send183465;
Object string27974;
Object string27975;
Object smallint20887;
Object smallint20888;
Object info3791;
Object symbol35706;
Object send183466;
Object method25353;
Object symbol35740;
Object methodclosure25351;
Object send183467;
Object send183468;
Object send183469;
Object send183470;
Object send183471;
Object string27976;
Object constant35593;
Object send183472;
Object send183473;
Object assign22510;
Object send183474;
Object send183475;
Object send183476;
Object send183477;
Object send183478;
Object send183479;
Object send183480;
Object send183481;
Object send183482;
Object send183483;
Object send183484;
Object string27977;
Object constant35594;
Object send183485;
Object send183486;
Object send183487;
Object send183488;
Object send183489;
Object send183490;
Object send183491;
Object send183492;
Object string27978;
Object constant35595;
Object send183493;
Object symbol35988;
Object send183494;
Object send183495;
Object smallint20889;
Object constant35596;
Object send183496;
Object string27979;
Object constant35597;
Object send183497;
Object assign22511;
Object send183498;
Object send183499;
Object symbol35989;
Object send183500;
Object send183501;
Object method25354;
Object symbol35568;
Object methodclosure25352;
Object localvariable26646;
Object localvariable26647;
Object localvariable26648;
Object localvariable26649;
Object array21389;
Object symbol35990;
Object send183502;
Object string27980;
Object string27981;
Object smallint20890;
Object smallint20891;
Object info3792;
Object assign22512;
Object string27982;
Object constant35598;
Object send183503;
Object assign22513;
Object send183504;
Object assign22514;
Object send183505;
Object send183506;
Object send183507;
Object classreference4826;
Object localvariable26650;
Object array21390;
Object string27983;
Object constant35599;
Object send183508;
Object string27984;
Object string27985;
Object smallint20892;
Object smallint20893;
Object info3793;
Object method25355;
Object methodclosure25353;
Object send183509;
Object symbol35991;
Object send183510;
Object assign22515;
Object string27986;
Object constant35600;
Object send183511;
Object assign22516;
Object send183512;
Object assign22517;
Object send183513;
Object send183514;
Object classreference4827;
Object localvariable26651;
Object array21391;
Object assign22518;
Object method25356;
Object string27987;
Object string27988;
Object smallint20894;
Object smallint20895;
Object info3794;
Object methodclosure25354;
Object method25357;
Object string27989;
Object string27990;
Object smallint20896;
Object smallint20897;
Object info3795;
Object methodclosure25355;
Object method25358;
Object string27991;
Object string27992;
Object smallint20898;
Object smallint20899;
Object info3796;
Object methodclosure25356;
Object send183515;
Object send183516;
Object send183517;
Object send183518;
Object send183519;
Object send183520;
Object method25359;
Object symbol35596;
Object methodclosure25357;
Object localvariable26652;
Object localvariable26653;
Object localvariable26654;
Object array21392;
Object symbol35992;
Object send183521;
Object string27993;
Object string27994;
Object smallint20900;
Object smallint20901;
Object info3797;
Object assign22519;
Object string27995;
Object constant35601;
Object send183522;
Object assign22520;
Object send183523;
Object assign22521;
Object send183524;
Object send183525;
Object classreference4828;
Object localvariable26655;
Object array21393;
Object assign22522;
Object method25360;
Object string27996;
Object string27997;
Object smallint20902;
Object smallint20903;
Object info3798;
Object methodclosure25358;
Object method25361;
Object string27998;
Object string27999;
Object smallint20904;
Object smallint20905;
Object info3799;
Object methodclosure25359;
Object localvariable26656;
Object array21394;
Object symbol35681;
Object send183526;
Object string28000;
Object string28001;
Object smallint20906;
Object smallint20907;
Object info3800;
Object assign22523;
Object method25362;
Object methodclosure25360;
Object method25363;
Object string28002;
Object string28003;
Object smallint20908;
Object smallint20909;
Object info3801;
Object methodclosure25361;
Object super1977;
Object method25364;
Object string28004;
Object string28005;
Object smallint20910;
Object smallint20911;
Object info3802;
Object methodclosure25362;
Object localvariable26657;
Object array21395;
Object assign22524;
Object method25365;
Object string28006;
Object string28007;
Object smallint20912;
Object smallint20913;
Object info3803;
Object symbol35735;
Object methodclosure25363;
Object localvariable26658;
Object array21396;
Object send183527;
Object string28008;
Object string28009;
Object smallint20914;
Object smallint20915;
Object info3804;
Object send183528;
Object send183529;
Object send183530;
Object super1978;
Object send183531;
Object send183532;
Object send183533;
Object send183534;
Object method25366;
Object methodclosure25364;
Object send183535;
Object send183536;
Object send183537;
Object send183538;
Object string28010;
Object constant35602;
Object send183539;
Object send183540;
Object send183541;
Object send183542;
Object send183543;
Object send183544;
Object send183545;
Object send183546;
Object string28011;
Object constant35603;
Object send183547;
Object send183548;
Object assign22525;
Object send183549;
Object send183550;
Object send183551;
Object send183552;
Object send183553;
Object send183554;
Object string28012;
Object constant35604;
Object send183555;
Object send183556;
Object send183557;
Object send183558;
Object send183559;
Object send183560;
Object send183561;
Object send183562;
Object string28013;
Object constant35605;
Object send183563;
Object send183564;
Object assign22526;
Object send183565;
Object send183566;
Object send183567;
Object send183568;
Object send183569;
Object send183570;
Object string28014;
Object constant35606;
Object send183571;
Object send183572;
Object send183573;
Object send183574;
Object send183575;
Object send183576;
Object send183577;
Object send183578;
Object string28015;
Object constant35607;
Object send183579;
Object send183580;
Object send183581;
Object send183582;
Object send183583;
Object send183584;
Object send183585;
Object send183586;
Object string28016;
Object constant35608;
Object send183587;
Object send183588;
Object send183589;
Object smallint20916;
Object constant35609;
Object send183590;
Object method25367;
Object symbol35588;
Object methodclosure25365;
Object localvariable26659;
Object localvariable26660;
Object localvariable26661;
Object localvariable26662;
Object array21397;
Object symbol35993;
Object send183591;
Object string28017;
Object string28018;
Object smallint20917;
Object smallint20918;
Object info3805;
Object assign22527;
Object string28019;
Object constant35610;
Object send183592;
Object assign22528;
Object send183593;
Object assign22529;
Object send183594;
Object send183595;
Object classreference4829;
Object method25368;
Object string28020;
Object string28021;
Object smallint20919;
Object smallint20920;
Object info3806;
Object symbol35725;
Object methodclosure25366;
Object localvariable26663;
Object array21398;
Object assign22530;
Object method25369;
Object string28022;
Object string28023;
Object smallint20921;
Object smallint20922;
Object info3807;
Object methodclosure25367;
Object localvariable26664;
Object array21399;
Object assign22531;
Object method25370;
Object string28024;
Object string28025;
Object smallint20923;
Object smallint20924;
Object info3808;
Object symbol35727;
Object methodclosure25368;
Object method25371;
Object string28026;
Object string28027;
Object smallint20925;
Object smallint20926;
Object info3809;
Object methodclosure25369;
Object send183596;
Object send183597;
Object send183598;
Object send183599;
Object classreference4830;
Object localvariable26665;
Object array21400;
Object assign22532;
Object method25372;
Object string28028;
Object string28029;
Object smallint20927;
Object smallint20928;
Object info3810;
Object symbol35700;
Object methodclosure25370;
Object localvariable26666;
Object array21401;
Object symbol35701;
Object send183600;
Object string28030;
Object string28031;
Object smallint20929;
Object smallint20930;
Object info3811;
Object send183601;
Object method25373;
Object methodclosure25371;
Object symbol35704;
Object send183602;
Object string28032;
Object string28033;
Object smallint20931;
Object smallint20932;
Object info3812;
Object string28034;
Object constant35611;
Object send183603;
Object send183604;
Object send183605;
Object symbol35994;
Object send183606;
Object symbol35703;
Object send183607;
Object method25374;
Object methodclosure25372;
Object method25375;
Object string28035;
Object string28036;
Object smallint20933;
Object smallint20934;
Object info3813;
Object methodclosure25373;
Object localvariable26667;
Object array21402;
Object assign22533;
Object method25376;
Object string28037;
Object string28038;
Object smallint20935;
Object smallint20936;
Object info3814;
Object symbol35705;
Object methodclosure25374;
Object send183608;
Object string28039;
Object string28040;
Object smallint20937;
Object smallint20938;
Object info3815;
Object symbol35995;
Object send183609;
Object send183610;
Object method25377;
Object symbol35702;
Object methodclosure25375;
Object method25378;
Object string28041;
Object string28042;
Object smallint20939;
Object smallint20940;
Object info3816;
Object methodclosure25376;
Object send183611;
Object send183612;
Object send183613;
Object send183614;
Object smallint20941;
Object constant35612;
Object send183615;
Object send183616;
Object smallint20942;
Object constant35613;
Object send183617;
Object assign22534;
Object send183618;
Object send183619;
Object send183620;
Object send183621;
Object smallint20943;
Object constant35614;
Object send183622;
Object assign22535;
Object send183623;
Object send183624;
Object send183625;
Object send183626;
Object smallint20944;
Object constant35615;
Object send183627;
Object assign22536;
Object send183628;
Object send183629;
Object send183630;
Object send183631;
Object smallint20945;
Object constant35616;
Object send183632;
Object assign22537;
Object send183633;
Object send183634;
Object send183635;
Object method25379;
Object symbol35541;
Object methodclosure25377;
Object localvariable26668;
Object localvariable26669;
Object localvariable26670;
Object array21403;
Object send183636;
Object string28043;
Object string28044;
Object smallint20946;
Object smallint20947;
Object info3817;
Object assign22538;
Object string28045;
Object constant35617;
Object send183637;
Object assign22539;
Object send183638;
Object assign22540;
Object send183639;
Object send183640;
Object send183641;
Object send183642;
Object send183643;
Object send183644;
Object send183645;
Object send183646;
Object send183647;
Object send183648;
Object send183649;
Object string28046;
Object constant35618;
Object send183650;
Object send183651;
Object assign22541;
Object send183652;
Object send183653;
Object send183654;
Object send183655;
Object send183656;
Object send183657;
Object send183658;
Object send183659;
Object send183660;
Object send183661;
Object send183662;
Object string28047;
Object constant35619;
Object send183663;
Object send183664;
Object send183665;
Object send183666;
Object send183667;
Object send183668;
Object send183669;
Object send183670;
Object string28048;
Object constant35620;
Object send183671;
Object send183672;
Object send183673;
Object smallint20948;
Object constant35621;
Object send183674;
Object string28049;
Object constant35622;
Object send183675;
Object assign22542;
Object send183676;
Object assign22543;
Object send183677;
Object send183678;
Object send183679;
Object send183680;
Object send183681;
Object string28050;
Object constant35623;
Object send183682;
Object send183683;
Object send183684;
Object smallint20949;
Object constant35624;
Object send183685;
Object string28051;
Object constant35625;
Object send183686;
Object assign22544;
Object send183687;
Object assign22545;
Object send183688;
Object send183689;
Object send183690;
Object send183691;
Object send183692;
Object send183693;
Object string28052;
Object constant35626;
Object send183694;
Object send183695;
Object send183696;
Object send183697;
Object send183698;
Object send183699;
Object send183700;
Object send183701;
Object string28053;
Object constant35627;
Object send183702;
Object send183703;
Object assign22546;
Object send183704;
Object send183705;
Object send183706;
Object send183707;
Object send183708;
Object send183709;
Object string28054;
Object constant35628;
Object send183710;
Object send183711;
Object send183712;
Object send183713;
Object send183714;
Object send183715;
Object send183716;
Object send183717;
Object string28055;
Object constant35629;
Object send183718;
Object send183719;
Object send183720;
Object send183721;
Object send183722;
Object send183723;
Object send183724;
Object send183725;
Object string28056;
Object constant35630;
Object send183726;
Object send183727;
Object send183728;
Object smallint20950;
Object constant35631;
Object send183729;
Object method25380;
Object symbol35561;
Object methodclosure25378;
Object localvariable26671;
Object localvariable26672;
Object array21404;
Object symbol35996;
Object send183730;
Object string28057;
Object string28058;
Object smallint20951;
Object smallint20952;
Object info3818;
Object assign22547;
Object string28059;
Object constant35632;
Object send183731;
Object assign22548;
Object send183732;
Object send183733;
Object send183734;
Object string28060;
Object constant35633;
Object send183735;
Object send183736;
Object send183737;
Object smallint20953;
Object constant35634;
Object send183738;
Object string28061;
Object constant35635;
Object send183739;
Object assign22549;
Object send183740;
Object send183741;
Object send183742;
Object string28062;
Object constant35636;
Object send183743;
Object send183744;
Object send183745;
Object smallint20954;
Object constant35637;
Object send183746;
Object string28063;
Object constant35638;
Object send183747;
Object assign22550;
Object send183748;
Object send183749;
Object send183750;
Object string28064;
Object constant35639;
Object send183751;
Object send183752;
Object send183753;
Object smallint20955;
Object constant35640;
Object send183754;
Object string28065;
Object constant35641;
Object send183755;
Object assign22551;
Object send183756;
Object send183757;
Object send183758;
Object string28066;
Object constant35642;
Object send183759;
Object send183760;
Object send183761;
Object smallint20956;
Object constant35643;
Object send183762;
Object method25381;
Object symbol35581;
Object methodclosure25379;
Object localvariable26673;
Object localvariable26674;
Object localvariable26675;
Object array21405;
Object symbol35997;
Object send183763;
Object string28067;
Object string28068;
Object smallint20957;
Object smallint20958;
Object info3819;
Object assign22552;
Object string28069;
Object constant35644;
Object send183764;
Object assign22553;
Object send183765;
Object send183766;
Object send183767;
Object send183768;
Object send183769;
Object send183770;
Object smallint20959;
Object constant35645;
Object send183771;
Object string28070;
Object constant35646;
Object send183772;
Object assign22554;
Object send183773;
Object assign22555;
Object send183774;
Object send183775;
Object classreference4831;
Object localvariable26676;
Object array21406;
Object assign22556;
Object method25382;
Object string28071;
Object string28072;
Object smallint20960;
Object smallint20961;
Object info3820;
Object symbol35864;
Object methodclosure25380;
Object method25383;
Object string28073;
Object string28074;
Object smallint20962;
Object smallint20963;
Object info3821;
Object symbol35865;
Object methodclosure25381;
Object send183776;
Object string28075;
Object string28076;
Object smallint20964;
Object smallint20965;
Object info3822;
Object send183777;
Object send183778;
Object method25384;
Object symbol35866;
Object methodclosure25382;
Object send183779;
Object send183780;
Object send183781;
Object character136;
Object constant35647;
Object send183782;
Object send183783;
Object send183784;
Object smallint20966;
Object constant35648;
Object send183785;
Object method25385;
Object symbol35598;
Object methodclosure25383;
Object localvariable26677;
Object localvariable26678;
Object array21407;
Object symbol35747;
Object send183786;
Object string28077;
Object string28078;
Object smallint20967;
Object smallint20968;
Object info3823;
Object assign22557;
Object string28079;
Object constant35649;
Object send183787;
Object assign22558;
Object send183788;
Object constant35650;
Object send183789;
Object send183790;
Object send183791;
Object localvariable26679;
Object array21408;
Object smallint20969;
Object constant35651;
Object string28080;
Object constant35652;
Object send183792;
Object smallint20970;
Object constant35653;
Object string28081;
Object constant35654;
Object send183793;
Object smallint20971;
Object constant35655;
Object string28082;
Object constant35656;
Object send183794;
Object symbol35515;
Object send183795;
Object block12798;
Object smallint20972;
Object constant35657;
Object send183796;
Object send183797;
Object send183798;
Object send183799;
Object send183800;
Object smallint20973;
Object constant35658;
Object send183801;
Object string28083;
Object constant35659;
Object send183802;
Object assign22559;
Object send183803;
Object constant35660;
Object send183804;
Object send183805;
Object send183806;
Object localvariable26680;
Object array21409;
Object smallint20974;
Object constant35661;
Object string28084;
Object constant35662;
Object send183807;
Object smallint20975;
Object constant35663;
Object string28085;
Object constant35664;
Object send183808;
Object smallint20976;
Object constant35665;
Object string28086;
Object constant35666;
Object send183809;
Object send183810;
Object block12799;
Object smallint20977;
Object constant35667;
Object send183811;
Object send183812;
Object send183813;
Object send183814;
Object send183815;
Object smallint20978;
Object constant35668;
Object send183816;
Object method25386;
Object symbol35543;
Object methodclosure25384;
Object localvariable26681;
Object localvariable26682;
Object localvariable26683;
Object array21410;
Object symbol35998;
Object send183817;
Object string28087;
Object string28088;
Object smallint20979;
Object smallint20980;
Object info3824;
Object assign22560;
Object string28089;
Object constant35669;
Object assign22561;
Object send183818;
Object assign22562;
Object send183819;
Object send183820;
Object send183821;
Object symbol35999;
Object send183822;
Object send183823;
Object send183824;
Object classreference4832;
Object method25387;
Object string28090;
Object string28091;
Object smallint20981;
Object smallint20982;
Object info3825;
Object symbol35744;
Object methodclosure25385;
Object localvariable26684;
Object array21411;
Object assign22563;
Object method25388;
Object string28092;
Object string28093;
Object smallint20983;
Object smallint20984;
Object info3826;
Object symbol35748;
Object methodclosure25386;
Object localvariable26685;
Object array21412;
Object assign22564;
Object method25389;
Object string28094;
Object string28095;
Object smallint20985;
Object smallint20986;
Object info3827;
Object symbol35745;
Object methodclosure25387;
Object localvariable26686;
Object array21413;
Object assign22565;
Object method25390;
Object string28096;
Object string28097;
Object smallint20987;
Object smallint20988;
Object info3828;
Object symbol35741;
Object methodclosure25388;
Object localvariable26687;
Object array21414;
Object super1979;
Object string28098;
Object constant35670;
Object send183825;
Object string28099;
Object string28100;
Object smallint20989;
Object smallint20990;
Object info3829;
Object symbol35746;
Object send183826;
Object send183827;
Object string28101;
Object constant35671;
Object send183828;
Object method25391;
Object methodclosure25389;
Object localvariable26688;
Object array21415;
Object assign22566;
Object method25392;
Object string28102;
Object string28103;
Object smallint20991;
Object smallint20992;
Object info3830;
Object symbol35749;
Object methodclosure25390;
Object symbol35743;
Object send183829;
Object string28104;
Object string28105;
Object smallint20993;
Object smallint20994;
Object info3831;
Object send183830;
Object method25393;
Object methodclosure25391;
Object localvariable26689;
Object array21416;
Object smallint20995;
Object constant35672;
Object constant35673;
Object send183831;
Object string28106;
Object string28107;
Object smallint20996;
Object smallint20997;
Object info3832;
Object smallint20998;
Object constant35674;
Object constant35675;
Object send183832;
Object smallint20999;
Object constant35676;
Object constant35677;
Object send183833;
Object smallint21000;
Object constant35678;
Object constant35679;
Object send183834;
Object send183835;
Object block12800;
Object smallint21001;
Object constant35680;
Object send183836;
Object send183837;
Object method25394;
Object symbol35742;
Object methodclosure25392;
Object method25395;
Object string28108;
Object string28109;
Object smallint21002;
Object smallint21003;
Object info3833;
Object methodclosure25393;
Object method25396;
Object string28110;
Object string28111;
Object smallint21004;
Object smallint21005;
Object info3834;
Object methodclosure25394;
Object method25397;
Object string28112;
Object string28113;
Object smallint21006;
Object smallint21007;
Object info3835;
Object methodclosure25395;
Object send183838;
Object send183839;
Object send183840;
Object send183841;
Object string28114;
Object constant35681;
Object send183842;
Object method25398;
Object symbol35563;
Object methodclosure25396;
Object localvariable26690;
Object localvariable26691;
Object array21417;
Object send183843;
Object string28115;
Object string28116;
Object smallint21008;
Object smallint21009;
Object info3836;
Object assign22567;
Object string28117;
Object constant35682;
Object send183844;
Object assign22568;
Object send183845;
Object send183846;
Object send183847;
Object send183848;
Object send183849;
Object send183850;
Object send183851;
Object smallint21010;
Object constant35683;
Object send183852;
Object string28118;
Object constant35684;
Object send183853;
Object assign22569;
Object send183854;
Object send183855;
Object send183856;
Object send183857;
Object send183858;
Object send183859;
Object send183860;
Object smallint21011;
Object constant35685;
Object send183861;
Object string28119;
Object constant35686;
Object send183862;
Object assign22570;
Object send183863;
Object send183864;
Object send183865;
Object send183866;
Object send183867;
Object send183868;
Object send183869;
Object smallint21012;
Object constant35687;
Object send183870;
Object method25399;
Object symbol35555;
Object methodclosure25397;
Object localvariable26692;
Object array21418;
Object string28120;
Object constant35688;
Object symbol36000;
Object send183871;
Object string28121;
Object string28122;
Object smallint21013;
Object smallint21014;
Object info3837;
Object send183872;
Object assign22571;
Object string28123;
Object constant35689;
Object send183873;
Object send183874;
Object send183875;
Object send183876;
Object send183877;
Object string28124;
Object constant35690;
Object send183878;
Object send183879;
Object send183880;
Object send183881;
Object method25400;
Object symbol35591;
Object methodclosure25398;
Object localvariable26693;
Object localvariable26694;
Object localvariable26695;
Object array21419;
Object send183882;
Object string28125;
Object string28126;
Object smallint21015;
Object smallint21016;
Object info3838;
Object assign22572;
Object string28127;
Object constant35691;
Object assign22573;
Object send183883;
Object assign22574;
Object send183884;
Object send183885;
Object send183886;
Object send183887;
Object send183888;
Object send183889;
Object send183890;
Object send183891;
Object send183892;
Object send183893;
Object string28128;
Object constant35692;
Object send183894;
Object send183895;
Object send183896;
Object send183897;
Object send183898;
Object send183899;
Object send183900;
Object method25401;
Object symbol35545;
Object methodclosure25399;
Object localvariable26696;
Object localvariable26697;
Object array21420;
Object symbol36001;
Object send183901;
Object string28129;
Object string28130;
Object smallint21017;
Object smallint21018;
Object info3839;
Object assign22575;
Object string28131;
Object constant35693;
Object send183902;
Object assign22576;
Object send183903;
Object send183904;
Object string28132;
Object constant35694;
Object send183905;
Object send183906;
Object send183907;
Object smallint21019;
Object constant35695;
Object send183908;
Object string28133;
Object constant35696;
Object send183909;
Object assign22577;
Object send183910;
Object send183911;
Object send183912;
Object send183913;
Object send183914;
Object send183915;
Object smallint21020;
Object constant35697;
Object send183916;
Object method25402;
Object symbol35565;
Object methodclosure25400;
Object localvariable26698;
Object localvariable26699;
Object localvariable26700;
Object array21421;
Object symbol36002;
Object send183917;
Object string28134;
Object string28135;
Object smallint21021;
Object smallint21022;
Object info3840;
Object assign22578;
Object string28136;
Object constant35698;
Object send183918;
Object assign22579;
Object send183919;
Object assign22580;
Object send183920;
Object send183921;
Object send183922;
Object send183923;
Object send183924;
Object send183925;
Object send183926;
Object send183927;
Object send183928;
Object send183929;
Object string28137;
Object constant35699;
Object send183930;
Object send183931;
Object assign22581;
Object send183932;
Object send183933;
Object send183934;
Object send183935;
Object send183936;
Object send183937;
Object send183938;
Object send183939;
Object send183940;
Object send183941;
Object string28138;
Object constant35700;
Object send183942;
Object send183943;
Object assign22582;
Object send183944;
Object send183945;
Object send183946;
Object send183947;
Object send183948;
Object send183949;
Object send183950;
Object send183951;
Object send183952;
Object send183953;
Object string28139;
Object constant35701;
Object send183954;
Object send183955;
Object send183956;
Object send183957;
Object send183958;
Object string28140;
Object constant35702;
Object send183959;
Object assign22583;
Object send183960;
Object assign22584;
Object send183961;
Object send183962;
Object send183963;
Object send183964;
Object send183965;
Object send183966;
Object send183967;
Object send183968;
Object send183969;
Object send183970;
Object string28141;
Object constant35703;
Object send183971;
Object send183972;
Object assign22585;
Object send183973;
Object send183974;
Object send183975;
Object send183976;
Object send183977;
Object send183978;
Object send183979;
Object send183980;
Object send183981;
Object send183982;
Object string28142;
Object constant35704;
Object send183983;
Object send183984;
Object assign22586;
Object send183985;
Object send183986;
Object send183987;
Object send183988;
Object send183989;
Object send183990;
Object send183991;
Object send183992;
Object send183993;
Object send183994;
Object string28143;
Object constant35705;
Object send183995;
Object send183996;
Object send183997;
Object send183998;
Object send183999;
Object method25403;
Object symbol35557;
Object methodclosure25401;
Object localvariable26701;
Object localvariable26702;
Object array21422;
Object symbol36003;
Object send184000;
Object string28144;
Object string28145;
Object smallint21023;
Object smallint21024;
Object info3841;
Object assign22587;
Object string28146;
Object constant35706;
Object send184001;
Object assign22588;
Object send184002;
Object constant35707;
Object send184003;
Object send184004;
Object send184005;
Object localvariable26703;
Object array21423;
Object smallint21025;
Object constant35708;
Object string28147;
Object constant35709;
Object send184006;
Object smallint21026;
Object constant35710;
Object string28148;
Object constant35711;
Object send184007;
Object smallint21027;
Object constant35712;
Object string28149;
Object constant35713;
Object send184008;
Object send184009;
Object block12801;
Object smallint21028;
Object constant35714;
Object send184010;
Object send184011;
Object send184012;
Object send184013;
Object send184014;
Object smallint21029;
Object constant35715;
Object send184015;
Object string28150;
Object constant35716;
Object send184016;
Object assign22589;
Object send184017;
Object send184018;
Object send184019;
Object send184020;
Object send184021;
Object method25404;
Object symbol35585;
Object methodclosure25402;
Object localvariable26704;
Object localvariable26705;
Object localvariable26706;
Object localvariable26707;
Object array21424;
Object send184022;
Object string28151;
Object string28152;
Object smallint21030;
Object smallint21031;
Object info3842;
Object assign22590;
Object string28153;
Object constant35717;
Object send184023;
Object assign22591;
Object send184024;
Object assign22592;
Object send184025;
Object send184026;
Object send184027;
Object classreference4833;
Object send184028;
Object send184029;
Object assign22593;
Object string28154;
Object constant35718;
Object send184030;
Object assign22594;
Object send184031;
Object assign22595;
Object send184032;
Object send184033;
Object send184034;
Object send184035;
Object send184036;
Object send184037;
Object send184038;
Object send184039;
Object method25405;
Object symbol35593;
Object methodclosure25403;
Object localvariable26708;
Object localvariable26709;
Object localvariable26710;
Object localvariable26711;
Object array21425;
Object symbol36004;
Object send184040;
Object string28155;
Object string28156;
Object smallint21032;
Object smallint21033;
Object info3843;
Object assign22596;
Object string28157;
Object constant35719;
Object send184041;
Object assign22597;
Object send184042;
Object assign22598;
Object send184043;
Object send184044;
Object send184045;
Object symbol35738;
Object send184046;
Object send184047;
Object send184048;
Object localvariable26712;
Object array21426;
Object smallint21034;
Object constant35720;
Object string28158;
Object constant35721;
Object send184049;
Object smallint21035;
Object constant35722;
Object string28159;
Object constant35723;
Object send184050;
Object smallint21036;
Object constant35724;
Object string28160;
Object constant35725;
Object send184051;
Object send184052;
Object block12802;
Object smallint21037;
Object constant35726;
Object send184053;
Object send184054;
Object send184055;
Object send184056;
Object send184057;
Object assign22599;
Object send184058;
Object send184059;
Object send184060;
Object send184061;
Object smallint21038;
Object constant35727;
Object send184062;
Object assign22600;
Object send184063;
Object send184064;
Object send184065;
Object send184066;
Object smallint21039;
Object constant35728;
Object send184067;
Object assign22601;
Object send184068;
Object send184069;
Object send184070;
Object send184071;
Object send184072;
Object smallint21040;
Object constant35729;
Object send184073;
Object method25406;
Object symbol35550;
Object methodclosure25404;
Object localvariable26713;
Object localvariable26714;
Object localvariable26715;
Object array21427;
Object symbol36005;
Object send184074;
Object string28161;
Object string28162;
Object smallint21041;
Object smallint21042;
Object info3844;
Object assign22602;
Object string28163;
Object constant35730;
Object send184075;
Object assign22603;
Object send184076;
Object assign22604;
Object send184077;
Object send184078;
Object classreference4834;
Object localvariable26716;
Object array21428;
Object assign22605;
Object method25407;
Object string28164;
Object string28165;
Object smallint21043;
Object smallint21044;
Object info3845;
Object symbol35750;
Object methodclosure25405;
Object method25408;
Object string28166;
Object string28167;
Object smallint21045;
Object smallint21046;
Object info3846;
Object symbol35751;
Object methodclosure25406;
Object send184079;
Object string28168;
Object string28169;
Object smallint21047;
Object smallint21048;
Object info3847;
Object send184080;
Object method25409;
Object methodclosure25407;
Object send184081;
Object string28170;
Object string28171;
Object smallint21049;
Object smallint21050;
Object info3848;
Object send184082;
Object method25410;
Object symbol35733;
Object methodclosure25408;
Object send184083;
Object send184084;
Object send184085;
Object send184086;
Object string28172;
Object constant35731;
Object send184087;
Object send184088;
Object send184089;
Object send184090;
Object send184091;
Object send184092;
Object send184093;
Object send184094;
Object send184095;
Object string28173;
Object constant35732;
Object send184096;
Object send184097;
Object send184098;
Object smallint21051;
Object constant35733;
Object send184099;
Object string28174;
Object constant35734;
Object send184100;
Object assign22606;
Object send184101;
Object send184102;
Object send184103;
Object send184104;
Object send184105;
Object send184106;
Object smallint21052;
Object constant35735;
Object send184107;
Object string28175;
Object constant35736;
Object send184108;
Object assign22607;
Object send184109;
Object assign22608;
Object send184110;
Object send184111;
Object send184112;
Object send184113;
Object send184114;
Object send184115;
Object string28176;
Object constant35737;
Object send184116;
Object send184117;
Object send184118;
Object send184119;
Object send184120;
Object string28177;
Object constant35738;
Object send184121;
Object send184122;
Object send184123;
Object send184124;
Object send184125;
Object send184126;
Object send184127;
Object smallint21053;
Object constant35739;
Object send184128;
Object method25411;
Object symbol35547;
Object methodclosure25409;
Object localvariable26717;
Object localvariable26718;
Object localvariable26719;
Object array21429;
Object symbol36006;
Object send184129;
Object string28178;
Object string28179;
Object smallint21054;
Object smallint21055;
Object info3849;
Object assign22609;
Object string28180;
Object constant35740;
Object send184130;
Object assign22610;
Object send184131;
Object assign22611;
Object send184132;
Object send184133;
Object send184134;
Object send184135;
Object send184136;
Object send184137;
Object string28181;
Object constant35741;
Object send184138;
Object send184139;
Object send184140;
Object smallint21056;
Object constant35742;
Object send184141;
Object string28182;
Object constant35743;
Object send184142;
Object assign22612;
Object send184143;
Object send184144;
Object send184145;
Object send184146;
Object send184147;
Object send184148;
Object smallint21057;
Object constant35744;
Object send184149;
Object method25412;
Object symbol35575;
Object methodclosure25410;
Object localvariable26720;
Object localvariable26721;
Object localvariable26722;
Object array21430;
Object send184150;
Object string28183;
Object string28184;
Object smallint21058;
Object smallint21059;
Object info3850;
Object assign22613;
Object string28185;
Object constant35745;
Object send184151;
Object assign22614;
Object send184152;
Object assign22615;
Object send184153;
Object send184154;
Object send184155;
Object send184156;
Object assign22616;
Object send184157;
Object send184158;
Object send184159;
Object send184160;
Object send184161;
Object send184162;
Object send184163;
Object send184164;
Object send184165;
Object send184166;
Object string28186;
Object constant35746;
Object send184167;
Object send184168;
Object assign22617;
Object send184169;
Object send184170;
Object send184171;
Object send184172;
Object send184173;
Object send184174;
Object send184175;
Object send184176;
Object send184177;
Object send184178;
Object string28187;
Object constant35747;
Object send184179;
Object send184180;
Object assign22618;
Object send184181;
Object send184182;
Object send184183;
Object send184184;
Object send184185;
Object send184186;
Object send184187;
Object send184188;
Object send184189;
Object send184190;
Object string28188;
Object constant35748;
Object send184191;
Object send184192;
Object send184193;
Object send184194;
Object send184195;
Object string28189;
Object constant35749;
Object send184196;
Object assign22619;
Object send184197;
Object assign22620;
Object send184198;
Object send184199;
Object send184200;
Object send184201;
Object assign22621;
Object send184202;
Object send184203;
Object send184204;
Object send184205;
Object send184206;
Object send184207;
Object send184208;
Object send184209;
Object send184210;
Object send184211;
Object string28190;
Object constant35750;
Object send184212;
Object send184213;
Object assign22622;
Object send184214;
Object send184215;
Object send184216;
Object send184217;
Object send184218;
Object send184219;
Object send184220;
Object send184221;
Object send184222;
Object send184223;
Object string28191;
Object constant35751;
Object send184224;
Object send184225;
Object assign22623;
Object send184226;
Object send184227;
Object send184228;
Object send184229;
Object send184230;
Object send184231;
Object send184232;
Object send184233;
Object send184234;
Object send184235;
Object string28192;
Object constant35752;
Object send184236;
Object send184237;
Object send184238;
Object send184239;
Object send184240;
Object method25413;
Object symbol35567;
Object methodclosure25411;
Object localvariable26723;
Object localvariable26724;
Object localvariable26725;
Object array21431;
Object symbol36007;
Object send184241;
Object string28193;
Object string28194;
Object smallint21060;
Object smallint21061;
Object info3851;
Object assign22624;
Object string28195;
Object constant35753;
Object send184242;
Object assign22625;
Object send184243;
Object assign22626;
Object send184244;
Object send184245;
Object send184246;
Object send184247;
Object send184248;
Object send184249;
Object send184250;
Object send184251;
Object send184252;
Object send184253;
Object send184254;
Object string28196;
Object constant35754;
Object send184255;
Object send184256;
Object assign22627;
Object send184257;
Object send184258;
Object send184259;
Object send184260;
Object send184261;
Object send184262;
Object send184263;
Object send184264;
Object send184265;
Object send184266;
Object send184267;
Object string28197;
Object constant35755;
Object send184268;
Object send184269;
Object send184270;
Object send184271;
Object send184272;
Object send184273;
Object send184274;
Object send184275;
Object string28198;
Object constant35756;
Object send184276;
Object send184277;
Object send184278;
Object smallint21062;
Object constant35757;
Object send184279;
Object string28199;
Object constant35758;
Object send184280;
Object assign22628;
Object send184281;
Object assign22629;
Object send184282;
Object send184283;
Object send184284;
Object send184285;
Object send184286;
Object string28200;
Object constant35759;
Object send184287;
Object send184288;
Object send184289;
Object smallint21063;
Object constant35760;
Object send184290;
Object method25414;
Object symbol35559;
Object methodclosure25412;
Object localvariable26726;
Object localvariable26727;
Object localvariable26728;
Object localvariable26729;
Object array21432;
Object symbol36008;
Object send184291;
Object string28201;
Object string28202;
Object smallint21064;
Object smallint21065;
Object info3852;
Object assign22630;
Object string28203;
Object constant35761;
Object send184292;
Object assign22631;
Object send184293;
Object assign22632;
Object send184294;
Object send184295;
Object send184296;
Object send184297;
Object send184298;
Object send184299;
Object localvariable26730;
Object array21433;
Object smallint21066;
Object constant35762;
Object string28204;
Object constant35763;
Object send184300;
Object smallint21067;
Object constant35764;
Object string28205;
Object constant35765;
Object send184301;
Object smallint21068;
Object constant35766;
Object string28206;
Object constant35767;
Object send184302;
Object send184303;
Object block12803;
Object smallint21069;
Object constant35768;
Object send184304;
Object send184305;
Object send184306;
Object send184307;
Object send184308;
Object send184309;
Object classreference4835;
Object super1980;
Object send184310;
Object string28207;
Object string28208;
Object smallint21070;
Object smallint21071;
Object info3853;
Object assign22633;
Object method25415;
Object methodclosure25413;
Object method25416;
Object string28209;
Object string28210;
Object smallint21072;
Object smallint21073;
Object info3854;
Object methodclosure25414;
Object localvariable26731;
Object array21434;
Object assign22634;
Object method25417;
Object string28211;
Object string28212;
Object smallint21074;
Object smallint21075;
Object info3855;
Object symbol35737;
Object methodclosure25415;
Object symbol36009;
Object string28213;
Object constant35769;
Object send184311;
Object string28214;
Object string28215;
Object smallint21076;
Object smallint21077;
Object info3856;
Object string28216;
Object constant35770;
Object send184312;
Object method25418;
Object symbol35731;
Object methodclosure25416;
Object send184313;
Object send184314;
Object send184315;
Object send184316;
Object string28217;
Object constant35771;
Object send184317;
Object send184318;
Object send184319;
Object assign22635;
Object send184320;
Object send184321;
Object send184322;
Object send184323;
Object smallint21078;
Object constant35772;
Object send184324;
Object assign22636;
Object send184325;
Object send184326;
Object send184327;
Object send184328;
Object smallint21079;
Object constant35773;
Object send184329;
Object assign22637;
Object send184330;
Object send184331;
Object send184332;
Object send184333;
Object send184334;
Object send184335;
Object send184336;
Object send184337;
Object send184338;
Object smallint21080;
Object constant35774;
Object send184339;
Object method25419;
Object symbol35587;
Object methodclosure25417;
Object localvariable26732;
Object localvariable26733;
Object localvariable26734;
Object array21435;
Object symbol36010;
Object send184340;
Object string28218;
Object string28219;
Object smallint21081;
Object smallint21082;
Object info3857;
Object assign22638;
Object string28220;
Object constant35775;
Object send184341;
Object assign22639;
Object send184342;
Object assign22640;
Object send184343;
Object send184344;
Object classreference4836;
Object method25420;
Object string28221;
Object string28222;
Object smallint21083;
Object smallint21084;
Object info3858;
Object methodclosure25418;
Object send184345;
Object string28223;
Object string28224;
Object smallint21085;
Object smallint21086;
Object info3859;
Object send184346;
Object method25421;
Object methodclosure25419;
Object localvariable26735;
Object array21436;
Object assign22641;
Object method25422;
Object string28225;
Object string28226;
Object smallint21087;
Object smallint21088;
Object info3860;
Object symbol35707;
Object methodclosure25420;
Object send184347;
Object string28227;
Object string28228;
Object smallint21089;
Object smallint21090;
Object info3861;
Object send184348;
Object method25423;
Object methodclosure25421;
Object send184349;
Object string28229;
Object string28230;
Object smallint21091;
Object smallint21092;
Object info3862;
Object send184350;
Object method25424;
Object symbol35708;
Object methodclosure25422;
Object localvariable26736;
Object array21437;
Object send184351;
Object string28231;
Object string28232;
Object smallint21093;
Object smallint21094;
Object info3863;
Object method25425;
Object methodclosure25423;
Object send184352;
Object send184353;
Object send184354;
Object string28233;
Object constant35776;
Object send184355;
Object send184356;
Object send184357;
Object smallint21095;
Object constant35777;
Object send184358;
Object method25426;
Object symbol35595;
Object methodclosure25424;
Object localvariable26737;
Object localvariable26738;
Object localvariable26739;
Object array21438;
Object symbol36011;
Object send184359;
Object string28234;
Object string28235;
Object smallint21096;
Object smallint21097;
Object info3864;
Object assign22642;
Object string28236;
Object constant35778;
Object send184360;
Object assign22643;
Object send184361;
Object assign22644;
Object send184362;
Object send184363;
Object classreference4837;
Object localvariable26740;
Object array21439;
Object assign22645;
Object method25427;
Object string28237;
Object string28238;
Object smallint21098;
Object smallint21099;
Object info3865;
Object symbol35684;
Object methodclosure25425;
Object method25428;
Object string28239;
Object string28240;
Object smallint21100;
Object smallint21101;
Object info3866;
Object symbol35685;
Object methodclosure25426;
Object send184364;
Object string28241;
Object string28242;
Object smallint21102;
Object smallint21103;
Object info3867;
Object send184365;
Object method25429;
Object methodclosure25427;
Object send184366;
Object send184367;
Object send184368;
Object send184369;
Object send184370;
Object send184371;
Object string28243;
Object constant35779;
Object send184372;
Object assign22646;
Object send184373;
Object assign22647;
Object send184374;
Object send184375;
Object send184376;
Object send184377;
Object send184378;
Object send184379;
Object smallint21104;
Object constant35780;
Object send184380;
Object send184381;
Object send184382;
Object send184383;
Object send184384;
Object send184385;
Object send184386;
Object send184387;
Object send184388;
Object send184389;
Object string28244;
Object constant35781;
Object send184390;
Object send184391;
Object smallint21105;
Object constant35782;
Object send184392;
Object send184393;
Object send184394;
Object send184395;
Object send184396;
Object smallint21106;
Object constant35783;
Object send184397;
Object send184398;
Object send184399;
Object string28245;
Object constant35784;
Object send184400;
Object send184401;
Object smallint21107;
Object constant35785;
Object send184402;
Object send184403;
Object send184404;
Object send184405;
Object send184406;
Object smallint21108;
Object constant35786;
Object send184407;
Object send184408;
Object send184409;
Object string28246;
Object constant35787;
Object send184410;
Object send184411;
Object smallint21109;
Object constant35788;
Object send184412;
Object send184413;
Object send184414;
Object classreference4838;
Object method25430;
Object string28247;
Object string28248;
Object smallint21110;
Object smallint21111;
Object info3868;
Object symbol35710;
Object methodclosure25428;
Object send184415;
Object string28249;
Object string28250;
Object smallint21112;
Object smallint21113;
Object info3869;
Object symbol35709;
Object send184416;
Object send184417;
Object method25431;
Object symbol35711;
Object methodclosure25429;
Object localvariable26741;
Object array21440;
Object assign22648;
Object method25432;
Object string28251;
Object string28252;
Object smallint21114;
Object smallint21115;
Object info3870;
Object methodclosure25430;
Object send184418;
Object send184419;
Object smallint21116;
Object constant35789;
Object send184420;
Object send184421;
Object send184422;
Object string28253;
Object constant35790;
Object send184423;
Object send184424;
Object smallint21117;
Object constant35791;
Object send184425;
Object send184426;
Object send184427;
Object send184428;
Object method25433;
Object symbol35532;
Object methodclosure25431;
Object localvariable26742;
Object localvariable26743;
Object array21441;
Object symbol36012;
Object send184429;
Object string28254;
Object string28255;
Object smallint21118;
Object smallint21119;
Object info3871;
Object assign22649;
Object string28256;
Object constant35792;
Object send184430;
Object assign22650;
Object send184431;
Object send184432;
Object string28257;
Object constant35793;
Object send184433;
Object send184434;
Object send184435;
Object smallint21120;
Object constant35794;
Object send184436;
Object string28258;
Object constant35795;
Object send184437;
Object assign22651;
Object send184438;
Object send184439;
Object string28259;
Object constant35796;
Object send184440;
Object send184441;
Object send184442;
Object smallint21121;
Object constant35797;
Object send184443;
Object string28260;
Object constant35798;
Object send184444;
Object assign22652;
Object send184445;
Object send184446;
Object send184447;
Object send184448;
Object send184449;
Object send184450;
Object smallint21122;
Object constant35799;
Object send184451;
Object method25434;
Object symbol35560;
Object methodclosure25432;
Object localvariable26744;
Object localvariable26745;
Object localvariable26746;
Object array21442;
Object send184452;
Object string28261;
Object string28262;
Object smallint21123;
Object smallint21124;
Object info3872;
Object assign22653;
Object string28263;
Object constant35800;
Object send184453;
Object assign22654;
Object send184454;
Object assign22655;
Object send184455;
Object send184456;
Object send184457;
Object send184458;
Object send184459;
Object send184460;
Object string28264;
Object constant35801;
Object send184461;
Object send184462;
Object send184463;
Object send184464;
Object send184465;
Object send184466;
Object send184467;
Object send184468;
Object string28265;
Object constant35802;
Object send184469;
Object send184470;
Object send184471;
Object send184472;
Object send184473;
Object send184474;
Object send184475;
Object send184476;
Object string28266;
Object constant35803;
Object send184477;
Object send184478;
Object send184479;
Object smallint21125;
Object constant35804;
Object send184480;
Object string28267;
Object constant35805;
Object send184481;
Object assign22656;
Object send184482;
Object assign22657;
Object send184483;
Object send184484;
Object send184485;
Object send184486;
Object send184487;
Object send184488;
Object string28268;
Object constant35806;
Object send184489;
Object send184490;
Object send184491;
Object send184492;
Object send184493;
Object send184494;
Object send184495;
Object send184496;
Object string28269;
Object constant35807;
Object send184497;
Object send184498;
Object assign22658;
Object send184499;
Object send184500;
Object send184501;
Object send184502;
Object send184503;
Object send184504;
Object string28270;
Object constant35808;
Object send184505;
Object send184506;
Object send184507;
Object send184508;
Object send184509;
Object send184510;
Object send184511;
Object send184512;
Object string28271;
Object constant35809;
Object send184513;
Object send184514;
Object send184515;
Object send184516;
Object send184517;
Object send184518;
Object send184519;
Object send184520;
Object string28272;
Object constant35810;
Object send184521;
Object send184522;
Object send184523;
Object smallint21126;
Object constant35811;
Object send184524;
Object method25435;
Object symbol35552;
Object methodclosure25433;
Object localvariable26747;
Object localvariable26748;
Object array21443;
Object symbol36013;
Object send184525;
Object string28273;
Object string28274;
Object smallint21127;
Object smallint21128;
Object info3873;
Object assign22659;
Object string28275;
Object constant35812;
Object send184526;
Object assign22660;
Object send184527;
Object send184528;
Object string28276;
Object constant35813;
Object send184529;
Object send184530;
Object send184531;
Object smallint21129;
Object constant35814;
Object send184532;
Object string28277;
Object constant35815;
Object send184533;
Object assign22661;
Object send184534;
Object send184535;
Object string28278;
Object constant35816;
Object send184536;
Object send184537;
Object send184538;
Object smallint21130;
Object constant35817;
Object send184539;
Object string28279;
Object constant35818;
Object send184540;
Object assign22662;
Object send184541;
Object send184542;
Object string28280;
Object constant35819;
Object send184543;
Object send184544;
Object send184545;
Object smallint21131;
Object constant35820;
Object send184546;
Object string28281;
Object constant35821;
Object send184547;
Object assign22663;
Object send184548;
Object send184549;
Object string28282;
Object constant35822;
Object send184550;
Object send184551;
Object send184552;
Object smallint21132;
Object constant35823;
Object send184553;
Object string28283;
Object constant35824;
Object send184554;
Object assign22664;
Object send184555;
Object send184556;
Object string28284;
Object constant35825;
Object send184557;
Object send184558;
Object send184559;
Object smallint21133;
Object constant35826;
Object send184560;
Object string28285;
Object constant35827;
Object send184561;
Object assign22665;
Object send184562;
Object send184563;
Object send184564;
Object send184565;
Object send184566;
Object send184567;
Object smallint21134;
Object constant35828;
Object send184568;
Object method25436;
Object symbol35580;
Object methodclosure25434;
Object localvariable26749;
Object localvariable26750;
Object array21444;
Object symbol36014;
Object send184569;
Object string28286;
Object string28287;
Object smallint21135;
Object smallint21136;
Object info3874;
Object assign22666;
Object string28288;
Object constant35829;
Object send184570;
Object assign22667;
Object send184571;
Object send184572;
Object string28289;
Object constant35830;
Object send184573;
Object send184574;
Object send184575;
Object smallint21137;
Object constant35831;
Object send184576;
Object string28290;
Object constant35832;
Object send184577;
Object assign22668;
Object send184578;
Object send184579;
Object string28291;
Object constant35833;
Object send184580;
Object send184581;
Object send184582;
Object smallint21138;
Object constant35834;
Object send184583;
Object string28292;
Object constant35835;
Object send184584;
Object assign22669;
Object send184585;
Object send184586;
Object send184587;
Object send184588;
Object send184589;
Object send184590;
Object smallint21139;
Object constant35836;
Object send184591;
Object method25437;
Object symbol35549;
Object methodclosure25435;
Object localvariable26751;
Object localvariable26752;
Object array21445;
Object send184592;
Object string28293;
Object string28294;
Object smallint21140;
Object smallint21141;
Object info3875;
Object assign22670;
Object string28295;
Object constant35837;
Object send184593;
Object assign22671;
Object send184594;
Object send184595;
Object send184596;
Object send184597;
Object send184598;
Object send184599;
Object smallint21142;
Object constant35838;
Object send184600;
Object string28296;
Object constant35839;
Object send184601;
Object assign22672;
Object send184602;
Object send184603;
Object string28297;
Object constant35840;
Object send184604;
Object send184605;
Object send184606;
Object smallint21143;
Object constant35841;
Object send184607;
Object string28298;
Object constant35842;
Object send184608;
Object assign22673;
Object send184609;
Object send184610;
Object string28299;
Object constant35843;
Object send184611;
Object send184612;
Object send184613;
Object smallint21144;
Object constant35844;
Object send184614;
Object string28300;
Object constant35845;
Object send184615;
Object assign22674;
Object send184616;
Object send184617;
Object string28301;
Object constant35846;
Object send184618;
Object send184619;
Object send184620;
Object smallint21145;
Object constant35847;
Object send184621;
Object method25438;
Object symbol35569;
Object methodclosure25436;
Object localvariable26753;
Object localvariable26754;
Object localvariable26755;
Object array21446;
Object send184622;
Object string28302;
Object string28303;
Object smallint21146;
Object smallint21147;
Object info3876;
Object assign22675;
Object string28304;
Object constant35848;
Object send184623;
Object assign22676;
Object send184624;
Object assign22677;
Object send184625;
Object send184626;
Object send184627;
Object send184628;
Object send184629;
Object send184630;
Object string28305;
Object constant35849;
Object send184631;
Object send184632;
Object send184633;
Object send184634;
Object send184635;
Object send184636;
Object send184637;
Object send184638;
Object send184639;
Object string28306;
Object constant35850;
Object send184640;
Object send184641;
Object send184642;
Object smallint21148;
Object constant35851;
Object send184643;
Object string28307;
Object constant35852;
Object send184644;
Object assign22678;
Object send184645;
Object send184646;
Object send184647;
Object send184648;
Object send184649;
Object send184650;
Object smallint21149;
Object constant35853;
Object send184651;
Object string28308;
Object constant35854;
Object send184652;
Object assign22679;
Object send184653;
Object assign22680;
Object send184654;
Object send184655;
Object send184656;
Object send184657;
Object send184658;
Object send184659;
Object string28309;
Object constant35855;
Object send184660;
Object send184661;
Object send184662;
Object send184663;
Object send184664;
Object send184665;
Object send184666;
Object send184667;
Object send184668;
Object string28310;
Object constant35856;
Object send184669;
Object send184670;
Object send184671;
Object smallint21150;
Object constant35857;
Object send184672;
Object method25439;
Object symbol35589;
Object methodclosure25437;
Object localvariable26756;
Object localvariable26757;
Object localvariable26758;
Object array21447;
Object symbol36015;
Object send184673;
Object string28311;
Object string28312;
Object smallint21151;
Object smallint21152;
Object info3877;
Object assign22681;
Object string28313;
Object constant35858;
Object send184674;
Object assign22682;
Object send184675;
Object assign22683;
Object send184676;
Object send184677;
Object send184678;
Object send184679;
Object send184680;
Object string28314;
Object constant35859;
Object send184681;
Object send184682;
Object send184683;
Object smallint21153;
Object constant35860;
Object send184684;
Object string28315;
Object constant35861;
Object send184685;
Object assign22684;
Object send184686;
Object assign22685;
Object send184687;
Object send184688;
Object send184689;
Object send184690;
Object send184691;
Object string28316;
Object constant35862;
Object send184692;
Object send184693;
Object send184694;
Object smallint21154;
Object constant35863;
Object send184695;
Object string28317;
Object constant35864;
Object send184696;
Object assign22686;
Object send184697;
Object assign22687;
Object send184698;
Object send184699;
Object send184700;
Object send184701;
Object send184702;
Object string28318;
Object constant35865;
Object send184703;
Object send184704;
Object send184705;
Object smallint21155;
Object constant35866;
Object send184706;
Object method25440;
Object symbol35542;
Object methodclosure25438;
Object localvariable26759;
Object localvariable26760;
Object localvariable26761;
Object array21448;
Object send184707;
Object string28319;
Object string28320;
Object smallint21156;
Object smallint21157;
Object info3878;
Object assign22688;
Object string28321;
Object constant35867;
Object assign22689;
Object send184708;
Object assign22690;
Object send184709;
Object send184710;
Object send184711;
Object send184712;
Object send184713;
Object send184714;
Object send184715;
Object send184716;
Object send184717;
Object send184718;
Object classreference4839;
Object localvariable26762;
Object array21449;
Object symbol36016;
Object send184719;
Object string28322;
Object string28323;
Object smallint21158;
Object smallint21159;
Object info3879;
Object assign22691;
Object method25441;
Object symbol35752;
Object methodclosure25439;
Object localvariable26763;
Object array21450;
Object variable1589;
Object array21451;
Object symbol35734;
Object super1981;
Object send184720;
Object string28324;
Object string28325;
Object smallint21160;
Object smallint21161;
Object info3880;
Object block12804;
Object send184721;
Object symbol35753;
Object send184722;
Object block12805;
Object send184723;
Object method25442;
Object methodclosure25440;
Object super1982;
Object send184724;
Object string28326;
Object string28327;
Object smallint21162;
Object smallint21163;
Object info3881;
Object assign22692;
Object method25443;
Object methodclosure25441;
Object localvariable26764;
Object array21452;
Object variable1590;
Object array21453;
Object send184725;
Object string28328;
Object string28329;
Object smallint21164;
Object smallint21165;
Object info3882;
Object symbol36017;
Object localvariable26765;
Object array21454;
Object send184726;
Object send184727;
Object send184728;
Object send184729;
Object send184730;
Object send184731;
Object send184732;
Object block12806;
Object send184733;
Object block12807;
Object send184734;
Object block12808;
Object send184735;
Object method25444;
Object methodclosure25442;
Object method25445;
Object string28330;
Object string28331;
Object smallint21166;
Object smallint21167;
Object info3883;
Object methodclosure25443;
Object send184736;
Object send184737;
Object send184738;
Object send184739;
Object smallint21168;
Object constant35868;
Object send184740;
Object send184741;
Object send184742;
Object send184743;
Object smallint21169;
Object constant35869;
Object send184744;
Object send184745;
Object send184746;
Object send184747;
Object smallint21170;
Object constant35870;
Object send184748;
Object method25446;
Object symbol35562;
Object methodclosure25444;
Object localvariable26766;
Object localvariable26767;
Object localvariable26768;
Object array21455;
Object symbol36018;
Object send184749;
Object string28332;
Object string28333;
Object smallint21171;
Object smallint21172;
Object info3884;
Object assign22693;
Object string28334;
Object constant35871;
Object send184750;
Object assign22694;
Object send184751;
Object assign22695;
Object send184752;
Object send184753;
Object send184754;
Object send184755;
Object send184756;
Object string28335;
Object constant35872;
Object send184757;
Object send184758;
Object send184759;
Object send184760;
Object send184761;
Object smallint21173;
Object constant35873;
Object send184762;
Object send184763;
Object send184764;
Object send184765;
Object send184766;
Object string28336;
Object constant35874;
Object send184767;
Object send184768;
Object send184769;
Object send184770;
Object smallint21174;
Object constant35875;
Object send184771;
Object string28337;
Object constant35876;
Object send184772;
Object assign22696;
Object send184773;
Object send184774;
Object send184775;
Object send184776;
Object send184777;
Object send184778;
Object smallint21175;
Object constant35877;
Object send184779;
Object string28338;
Object constant35878;
Object send184780;
Object assign22697;
Object send184781;
Object assign22698;
Object send184782;
Object send184783;
Object send184784;
Object send184785;
Object send184786;
Object symbol36019;
Object string28339;
Object constant35879;
Object string28340;
Object constant35880;
Object send184787;
Object send184788;
Object send184789;
Object send184790;
Object send184791;
Object smallint21176;
Object constant35881;
Object send184792;
Object send184793;
Object send184794;
Object send184795;
Object send184796;
Object string28341;
Object constant35882;
Object send184797;
Object send184798;
Object send184799;
Object symbol36020;
Object send184800;
Object send184801;
Object send184802;
Object string28342;
Object constant35883;
Object send184803;
Object send184804;
Object send184805;
Object send184806;
Object smallint21177;
Object constant35884;
Object send184807;
Object method25447;
Object symbol35554;
Object methodclosure25445;
Object localvariable26769;
Object localvariable26770;
Object array21456;
Object send184808;
Object string28343;
Object string28344;
Object smallint21178;
Object smallint21179;
Object info3885;
Object assign22699;
Object string28345;
Object constant35885;
Object send184809;
Object send184810;
Object send184811;
Object assign22700;
Object send184812;
Object send184813;
Object send184814;
Object send184815;
Object send184816;
Object send184817;
Object send184818;
Object send184819;
Object send184820;
Object send184821;
Object send184822;
Object send184823;
Object send184824;
Object send184825;
Object send184826;
Object send184827;
Object string28346;
Object constant35886;
Object send184828;
Object send184829;
Object send184830;
Object send184831;
Object send184832;
Object string28347;
Object constant35887;
Object send184833;
Object send184834;
Object send184835;
Object send184836;
Object string28348;
Object constant35888;
Object send184837;
Object send184838;
Object send184839;
Object send184840;
Object send184841;
Object send184842;
Object send184843;
Object send184844;
Object string28349;
Object constant35889;
Object send184845;
Object method25448;
Object symbol35582;
Object methodclosure25446;
Object localvariable26771;
Object localvariable26772;
Object localvariable26773;
Object localvariable26774;
Object array21457;
Object symbol36021;
Object send184846;
Object string28350;
Object string28351;
Object smallint21180;
Object smallint21181;
Object info3886;
Object assign22701;
Object string28352;
Object constant35890;
Object send184847;
Object assign22702;
Object send184848;
Object assign22703;
Object send184849;
Object send184850;
Object classreference4840;
Object localvariable26775;
Object array21458;
Object assign22704;
Object method25449;
Object string28353;
Object string28354;
Object smallint21182;
Object smallint21183;
Object info3887;
Object methodclosure25447;
Object method25450;
Object string28355;
Object string28356;
Object smallint21184;
Object smallint21185;
Object info3888;
Object methodclosure25448;
Object send184851;
Object send184852;
Object send184853;
Object constant35891;
Object send184854;
Object send184855;
Object localvariable26776;
Object array21459;
Object smallint21186;
Object constant35892;
Object symbol36022;
Object constant35893;
Object send184856;
Object smallint21187;
Object constant35894;
Object symbol36023;
Object constant35895;
Object send184857;
Object smallint21188;
Object constant35896;
Object symbol36024;
Object constant35897;
Object send184858;
Object send184859;
Object block12809;
Object smallint21189;
Object constant35898;
Object send184860;
Object send184861;
Object send184862;
Object send184863;
Object send184864;
Object assign22705;
Object send184865;
Object send184866;
Object send184867;
Object send184868;
Object smallint21190;
Object constant35899;
Object send184869;
Object assign22706;
Object send184870;
Object send184871;
Object send184872;
Object send184873;
Object smallint21191;
Object constant35900;
Object send184874;
Object assign22707;
Object send184875;
Object send184876;
Object send184877;
Object send184878;
Object send184879;
Object send184880;
Object send184881;
Object string28357;
Object constant35901;
Object send184882;
Object assign22708;
Object send184883;
Object assign22709;
Object send184884;
Object send184885;
Object classreference4841;
Object send184886;
Object send184887;
Object send184888;
Object send184889;
Object string28358;
Object constant35902;
Object send184890;
Object send184891;
Object send184892;
Object smallint21192;
Object constant35903;
Object send184893;
Object string28359;
Object constant35904;
Object send184894;
Object assign22710;
Object send184895;
Object assign22711;
Object send184896;
Object send184897;
Object send184898;
Object send184899;
Object send184900;
Object constant35905;
Object send184901;
Object send184902;
Object localvariable26777;
Object array21460;
Object smallint21193;
Object constant35906;
Object string28360;
Object constant35907;
Object send184903;
Object smallint21194;
Object constant35908;
Object string28361;
Object constant35909;
Object send184904;
Object smallint21195;
Object constant35910;
Object string28362;
Object constant35911;
Object send184905;
Object send184906;
Object block12810;
Object smallint21196;
Object constant35912;
Object send184907;
Object send184908;
Object send184909;
Object send184910;
Object send184911;
Object send184912;
Object send184913;
Object method25451;
Object symbol35579;
Object methodclosure25449;
Object localvariable26778;
Object localvariable26779;
Object localvariable26780;
Object array21461;
Object symbol36025;
Object send184914;
Object string28363;
Object string28364;
Object smallint21197;
Object smallint21198;
Object info3889;
Object assign22712;
Object string28365;
Object constant35913;
Object send184915;
Object assign22713;
Object send184916;
Object send184917;
Object send184918;
Object send184919;
Object string28366;
Object constant35914;
Object send184920;
Object assign22714;
Object send184921;
Object assign22715;
Object send184922;
Object send184923;
Object send184924;
Object send184925;
Object send184926;
Object send184927;
Object send184928;
Object send184929;
Object send184930;
Object send184931;
Object string28367;
Object constant35915;
Object send184932;
Object send184933;
Object assign22716;
Object send184934;
Object send184935;
Object send184936;
Object send184937;
Object send184938;
Object send184939;
Object send184940;
Object send184941;
Object send184942;
Object send184943;
Object string28368;
Object constant35916;
Object send184944;
Object send184945;
Object assign22717;
Object send184946;
Object send184947;
Object send184948;
Object send184949;
Object send184950;
Object send184951;
Object send184952;
Object send184953;
Object send184954;
Object send184955;
Object string28369;
Object constant35917;
Object send184956;
Object send184957;
Object send184958;
Object send184959;
Object send184960;
Object method25452;
Object symbol35599;
Object methodclosure25450;
Object localvariable26781;
Object localvariable26782;
Object localvariable26783;
Object localvariable26784;
Object array21462;
Object symbol36026;
Object send184961;
Object string28370;
Object string28371;
Object smallint21199;
Object smallint21200;
Object info3890;
Object assign22718;
Object string28372;
Object constant35918;
Object send184962;
Object assign22719;
Object send184963;
Object assign22720;
Object send184964;
Object send184965;
Object smallint21201;
Object constant35919;
Object send184966;
Object send184967;
Object send184968;
Object send184969;
Object send184970;
Object send184971;
Object smallint21202;
Object constant35920;
Object send184972;
Object smallint21203;
Object constant35921;
Object send184973;
Object assign22721;
Object send184974;
Object send184975;
Object send184976;
Object send184977;
Object send184978;
Object string28373;
Object constant35922;
Object send184979;
Object smallint21204;
Object constant35923;
Object send184980;
Object assign22722;
Object send184981;
Object send184982;
Object send184983;
Object send184984;
Object send184985;
Object string28374;
Object constant35924;
Object send184986;
Object string28375;
Object constant35925;
Object send184987;
Object assign22723;
Object send184988;
Object assign22724;
Object send184989;
Object send184990;
Object smallint21205;
Object constant35926;
Object send184991;
Object send184992;
Object send184993;
Object send184994;
Object send184995;
Object send184996;
Object smallint21206;
Object constant35927;
Object send184997;
Object send184998;
Object assign22725;
Object send184999;
Object send185000;
Object send185001;
Object send185002;
Object send185003;
Object string28376;
Object constant35928;
Object send185004;
Object smallint21207;
Object constant35929;
Object send185005;
Object assign22726;
Object send185006;
Object send185007;
Object send185008;
Object send185009;
Object send185010;
Object string28377;
Object constant35930;
Object send185011;
Object method25453;
Object symbol35536;
Object methodclosure25451;
Object localvariable26785;
Object localvariable26786;
Object array21463;
Object symbol36027;
Object send185012;
Object string28378;
Object string28379;
Object smallint21208;
Object smallint21209;
Object info3891;
Object assign22727;
Object string28380;
Object constant35931;
Object send185013;
Object assign22728;
Object send185014;
Object send185015;
Object string28381;
Object constant35932;
Object send185016;
Object send185017;
Object send185018;
Object smallint21210;
Object constant35933;
Object send185019;
Object string28382;
Object constant35934;
Object send185020;
Object assign22729;
Object send185021;
Object send185022;
Object send185023;
Object send185024;
Object send185025;
Object send185026;
Object smallint21211;
Object constant35935;
Object send185027;
Object method25454;
Object symbol35564;
Object methodclosure25452;
Object localvariable26787;
Object localvariable26788;
Object localvariable26789;
Object array21464;
Object send185028;
Object string28383;
Object string28384;
Object smallint21212;
Object smallint21213;
Object info3892;
Object assign22730;
Object string28385;
Object constant35936;
Object send185029;
Object assign22731;
Object send185030;
Object assign22732;
Object send185031;
Object send185032;
Object send185033;
Object send185034;
Object send185035;
Object send185036;
Object send185037;
Object string28386;
Object constant35937;
Object send185038;
Object assign22733;
Object send185039;
Object assign22734;
Object send185040;
Object send185041;
Object send185042;
Object send185043;
Object send185044;
Object send185045;
Object send185046;
Object string28387;
Object constant35938;
Object send185047;
Object assign22735;
Object send185048;
Object assign22736;
Object send185049;
Object send185050;
Object send185051;
Object send185052;
Object send185053;
Object send185054;
Object send185055;
Object send185056;
Object send185057;
Object send185058;
Object smallint21214;
Object constant35939;
Object send185059;
Object method25455;
Object symbol35572;
Object methodclosure25453;
Object classreference4842;
Object string28388;
Object constant35940;
Object string28389;
Object constant35941;
Object send185060;
Object string28390;
Object string28391;
Object smallint21215;
Object smallint21216;
Object info3893;
Object symbol35845;
Object send185061;
Object send185062;
Object send185063;
Object localvariable26790;
Object array21465;
Object send185064;
Object send185065;
Object block12811;
Object send185066;
Object method25456;
Object symbol35787;
Object methodclosure25454;
Object symbol36028;
Object send185067;
Object string28392;
Object string28393;
Object smallint21217;
Object smallint21218;
Object info3894;
Object symbol36029;
Object send185068;
Object send185069;
Object symbol36030;
Object send185070;
Object send185071;
Object symbol36031;
Object send185072;
Object send185073;
Object symbol36032;
Object send185074;
Object send185075;
Object symbol36033;
Object send185076;
Object send185077;
Object method25457;
Object symbol35780;
Object methodclosure25455;
Object string28394;
Object constant35942;
Object send185078;
Object string28395;
Object string28396;
Object smallint21219;
Object smallint21220;
Object info3895;
Object localvariable26791;
Object array21466;
Object symbol35768;
Object send185079;
Object block12812;
Object send185080;
Object method25458;
Object symbol35825;
Object methodclosure25456;
Object send185081;
Object string28397;
Object string28398;
Object smallint21221;
Object smallint21222;
Object info3896;
Object string28399;
Object constant35943;
Object send185082;
Object symbol35841;
Object send185083;
Object send185084;
Object send185085;
Object method25459;
Object symbol35797;
Object methodclosure25457;
Object constant35944;
Object string28400;
Object constant35945;
Object send185086;
Object string28401;
Object string28402;
Object smallint21223;
Object smallint21224;
Object info3897;
Object block12813;
Object send185087;
Object method25460;
Object symbol35762;
Object methodclosure25458;
Object string28403;
Object constant35946;
Object send185088;
Object string28404;
Object string28405;
Object smallint21225;
Object smallint21226;
Object info3898;
Object symbol36034;
Object send185089;
Object send185090;
Object localvariable26792;
Object array21467;
Object localvariable26793;
Object array21468;
Object symbol35732;
Object symbol35763;
Object send185091;
Object send185092;
Object send185093;
Object smallint21227;
Object constant35947;
Object send185094;
Object send185095;
Object send185096;
Object block12814;
Object send185097;
Object send185098;
Object block12815;
Object send185099;
Object method25461;
Object symbol35790;
Object methodclosure25459;
Object string28406;
Object constant35948;
Object send185100;
Object string28407;
Object string28408;
Object smallint21228;
Object smallint21229;
Object info3899;
Object send185101;
Object send185102;
Object symbol35848;
Object send185103;
Object localvariable26794;
Object array21469;
Object localvariable26795;
Object array21470;
Object constant35949;
Object send185104;
Object send185105;
Object localvariable26796;
Object array21471;
Object constant35950;
Object send185106;
Object send185107;
Object constant35951;
Object send185108;
Object string28409;
Object constant35952;
Object send185109;
Object string28410;
Object constant35953;
Object send185110;
Object send185111;
Object send185112;
Object block12816;
Object send185113;
Object send185114;
Object send185115;
Object constant35954;
Object send185116;
Object send185117;
Object block12817;
Object send185118;
Object send185119;
Object block12818;
Object send185120;
Object method25462;
Object symbol35807;
Object methodclosure25460;
Object send185121;
Object string28411;
Object string28412;
Object smallint21230;
Object smallint21231;
Object info3900;
Object symbol35838;
Object string28413;
Object constant35955;
Object send185122;
Object send185123;
Object send185124;
Object method25463;
Object symbol35819;
Object methodclosure25461;
Object string28414;
Object constant35956;
Object send185125;
Object string28415;
Object string28416;
Object smallint21232;
Object smallint21233;
Object info3901;
Object send185126;
Object send185127;
Object send185128;
Object send185129;
Object send185130;
Object send185131;
Object send185132;
Object method25464;
Object symbol35779;
Object methodclosure25462;
Object send185133;
Object string28417;
Object string28418;
Object smallint21234;
Object smallint21235;
Object info3902;
Object send185134;
Object send185135;
Object symbol36035;
Object send185136;
Object send185137;
Object send185138;
Object send185139;
Object method25465;
Object symbol35800;
Object methodclosure25463;
Object string28419;
Object constant35957;
Object send185140;
Object string28420;
Object string28421;
Object smallint21236;
Object smallint21237;
Object info3903;
Object localvariable26797;
Object array21472;
Object send185141;
Object send185142;
Object block12819;
Object send185143;
Object method25466;
Object symbol35812;
Object methodclosure25464;
Object string28422;
Object constant35958;
Object send185144;
Object string28423;
Object string28424;
Object smallint21238;
Object smallint21239;
Object info3904;
Object localvariable26798;
Object array21473;
Object classreference4843;
Object send185145;
Object string28425;
Object string28426;
Object smallint21240;
Object smallint21241;
Object info3905;
Object send185146;
Object method25467;
Object methodclosure25465;
Object send185147;
Object send185148;
Object block12820;
Object send185149;
Object method25468;
Object symbol35772;
Object methodclosure25466;
Object super1983;
Object classreference4844;
Object localvariable26799;
Object localvariable26800;
Object array21474;
Object send185150;
Object string28427;
Object string28428;
Object smallint21242;
Object smallint21243;
Object info3906;
Object send185151;
Object block12821;
Object send185152;
Object method25469;
Object methodclosure25467;
Object localvariable26801;
Object array21475;
Object variable1591;
Object array21476;
Object send185153;
Object string28429;
Object string28430;
Object smallint21244;
Object smallint21245;
Object info3907;
Object block12822;
Object send185154;
Object block12823;
Object send185155;
Object method25470;
Object methodclosure25468;
Object send185156;
Object string28431;
Object string28432;
Object smallint21246;
Object smallint21247;
Object info3908;
Object assign22737;
Object send185157;
Object assign22738;
Object smallint21248;
Object constant35959;
Object assign22739;
Object method25471;
Object methodclosure25469;
Object symbol36036;
Object send185158;
Object string28433;
Object string28434;
Object smallint21249;
Object smallint21250;
Object info3909;
Object symbol35759;
Object send185159;
Object send185160;
Object symbol35837;
Object send185161;
Object method25472;
Object symbol35784;
Object methodclosure25470;
Object string28435;
Object constant35960;
Object send185162;
Object string28436;
Object string28437;
Object smallint21251;
Object smallint21252;
Object info3910;
Object send185163;
Object send185164;
Object send185165;
Object method25473;
Object symbol35829;
Object methodclosure25471;
Object send185166;
Object string28438;
Object string28439;
Object smallint21253;
Object smallint21254;
Object info3911;
Object send185167;
Object send185168;
Object method25474;
Object symbol35822;
Object methodclosure25472;
Object symbol36037;
Object send185169;
Object string28440;
Object string28441;
Object smallint21255;
Object smallint21256;
Object info3912;
Object send185170;
Object send185171;
Object send185172;
Object send185173;
Object send185174;
Object send185175;
Object symbol36038;
Object send185176;
Object send185177;
Object method25475;
Object symbol35766;
Object methodclosure25473;
Object localvariable26802;
Object array21477;
Object string28442;
Object constant35961;
Object send185178;
Object string28443;
Object string28444;
Object smallint21257;
Object smallint21258;
Object info3913;
Object send185179;
Object send185180;
Object send185181;
Object localvariable26803;
Object array21478;
Object send185182;
Object assign22740;
Object smallint21259;
Object constant35962;
Object send185183;
Object localvariable26804;
Object array21479;
Object localvariable26805;
Object array21480;
Object send185184;
Object send185185;
Object block12824;
Object send185186;
Object send185187;
Object assign22741;
Object block12825;
Object send185188;
Object block12826;
Object send185189;
Object method25476;
Object symbol35794;
Object methodclosure25474;
Object constant35963;
Object string28445;
Object constant35964;
Object send185190;
Object string28446;
Object string28447;
Object smallint21260;
Object smallint21261;
Object info3914;
Object block12827;
Object send185191;
Object method25477;
Object symbol35804;
Object methodclosure25475;
Object string28448;
Object constant35965;
Object string28449;
Object constant35966;
Object send185192;
Object string28450;
Object string28451;
Object smallint21262;
Object smallint21263;
Object info3915;
Object send185193;
Object send185194;
Object send185195;
Object send185196;
Object symbol35939;
Object send185197;
Object send185198;
Object string28452;
Object constant35967;
Object send185199;
Object send185200;
Object send185201;
Object localvariable26806;
Object array21481;
Object classreference4845;
Object localvariable26807;
Object array21482;
Object assign22742;
Object method25478;
Object string28453;
Object string28454;
Object smallint21264;
Object smallint21265;
Object info3916;
Object symbol35934;
Object methodclosure25476;
Object variable1592;
Object array21483;
Object symbol36039;
Object send185202;
Object string28455;
Object string28456;
Object smallint21266;
Object smallint21267;
Object info3917;
Object localvariable26808;
Object array21484;
Object send185203;
Object symbol36040;
Object send185204;
Object block12828;
Object send185205;
Object block12829;
Object send185206;
Object block12830;
Object send185207;
Object block12831;
Object send185208;
Object method25479;
Object methodclosure25477;
Object send185209;
Object localvariable26809;
Object array21485;
Object smallint21268;
Object constant35968;
Object send185210;
Object send185211;
Object send185212;
Object block12832;
Object send185213;
Object send185214;
Object send185215;
Object block12833;
Object send185216;
Object method25480;
Object symbol35816;
Object methodclosure25478;
Object string28457;
Object constant35969;
Object symbol36041;
Object send185217;
Object string28458;
Object string28459;
Object smallint21269;
Object smallint21270;
Object info3918;
Object string28460;
Object constant35970;
Object send185218;
Object send185219;
Object send185220;
Object send185221;
Object string28461;
Object constant35971;
Object send185222;
Object localvariable26810;
Object array21486;
Object send185223;
Object send185224;
Object block12834;
Object send185225;
Object send185226;
Object localvariable26811;
Object localvariable26812;
Object array21487;
Object send185227;
Object block12835;
Object send185228;
Object send185229;
Object block12836;
Object send185230;
Object block12837;
Object send185231;
Object method25481;
Object symbol35776;
Object methodclosure25479;
Object localvariable26813;
Object array21488;
Object assign22743;
Object method25482;
Object string28462;
Object string28463;
Object smallint21271;
Object smallint21272;
Object info3919;
Object symbol35788;
Object methodclosure25480;
Object send185232;
Object string28464;
Object string28465;
Object smallint21273;
Object smallint21274;
Object info3920;
Object send185233;
Object method25483;
Object symbol35758;
Object methodclosure25481;
Object send185234;
Object string28466;
Object string28467;
Object smallint21275;
Object smallint21276;
Object info3921;
Object send185235;
Object send185236;
Object send185237;
Object method25484;
Object symbol35781;
Object methodclosure25482;
Object string28468;
Object constant35972;
Object send185238;
Object string28469;
Object string28470;
Object smallint21277;
Object smallint21278;
Object info3922;
Object send185239;
Object send185240;
Object send185241;
Object send185242;
Object send185243;
Object method25485;
Object symbol35826;
Object methodclosure25483;
Object string28471;
Object constant35973;
Object string28472;
Object constant35974;
Object send185244;
Object string28473;
Object string28474;
Object smallint21279;
Object smallint21280;
Object info3923;
Object send185245;
Object symbol36042;
Object send185246;
Object send185247;
Object symbol36043;
Object send185248;
Object send185249;
Object string28475;
Object constant35975;
Object send185250;
Object send185251;
Object send185252;
Object send185253;
Object method25486;
Object symbol35798;
Object methodclosure25484;
Object localvariable26814;
Object array21489;
Object variable1593;
Object array21490;
Object send185254;
Object string28476;
Object string28477;
Object smallint21281;
Object smallint21282;
Object info3924;
Object send185255;
Object block12838;
Object send185256;
Object send185257;
Object block12839;
Object send185258;
Object method25487;
Object methodclosure25485;
Object localvariable26815;
Object localvariable26816;
Object array21491;
Object send185259;
Object string28478;
Object string28479;
Object smallint21283;
Object smallint21284;
Object info3925;
Object symbol35821;
Object send185260;
Object symbol35820;
Object send185261;
Object constant35976;
Object string28480;
Object constant35977;
Object send185262;
Object send185263;
Object send185264;
Object send185265;
Object send185266;
Object send185267;
Object send185268;
Object localvariable26817;
Object array21492;
Object send185269;
Object assign22744;
Object smallint21285;
Object constant35978;
Object send185270;
Object assign22745;
Object symbol36044;
Object send185271;
Object localvariable26818;
Object array21493;
Object localvariable26819;
Object array21494;
Object send185272;
Object send185273;
Object block12840;
Object send185274;
Object send185275;
Object assign22746;
Object block12841;
Object send185276;
Object block12842;
Object send185277;
Object send185278;
Object send185279;
Object send185280;
Object symbol35808;
Object send185281;
Object constant35979;
Object send185282;
Object method25488;
Object symbol35791;
Object methodclosure25486;
Object localvariable26820;
Object array21495;
Object string28481;
Object constant35980;
Object send185283;
Object string28482;
Object string28483;
Object smallint21286;
Object smallint21287;
Object info3926;
Object send185284;
Object send185285;
Object send185286;
Object symbol36045;
Object send185287;
Object send185288;
Object symbol36046;
Object send185289;
Object send185290;
Object send185291;
Object send185292;
Object localvariable26821;
Object array21496;
Object smallint21288;
Object constant35981;
Object send185293;
Object symbol36047;
Object send185294;
Object send185295;
Object localvariable26822;
Object array21497;
Object send185296;
Object send185297;
Object send185298;
Object smallint21289;
Object constant35982;
Object send185299;
Object send185300;
Object block12843;
Object send185301;
Object send185302;
Object block12844;
Object send185303;
Object block12845;
Object send185304;
Object send185305;
Object send185306;
Object send185307;
Object method25489;
Object methodclosure25487;
Object string28484;
Object constant35983;
Object send185308;
Object string28485;
Object string28486;
Object smallint21290;
Object smallint21291;
Object info3927;
Object localvariable26823;
Object array21498;
Object send185309;
Object block12846;
Object send185310;
Object method25490;
Object symbol35801;
Object methodclosure25488;
Object localvariable26824;
Object localvariable26825;
Object array21499;
Object string28487;
Object constant35984;
Object send185311;
Object string28488;
Object string28489;
Object smallint21292;
Object smallint21293;
Object info3928;
Object send185312;
Object assign22747;
Object string28490;
Object constant35985;
Object send185313;
Object send185314;
Object send185315;
Object send185316;
Object symbol35844;
Object send185317;
Object localvariable26826;
Object array21500;
Object symbol36048;
Object send185318;
Object assign22748;
Object string28491;
Object constant35986;
Object localvariable26827;
Object localvariable26828;
Object array21501;
Object send185319;
Object block12847;
Object send185320;
Object assign22749;
Object localvariable26829;
Object localvariable26830;
Object array21502;
Object string28492;
Object constant35987;
Object send185321;
Object string28493;
Object constant35988;
Object localvariable26831;
Object localvariable26832;
Object array21503;
Object send185322;
Object block12848;
Object send185323;
Object send185324;
Object block12849;
Object send185325;
Object block12850;
Object send185326;
Object method25491;
Object symbol35813;
Object methodclosure25489;
Object localvariable26833;
Object array21504;
Object string28494;
Object constant35989;
Object send185327;
Object string28495;
Object string28496;
Object smallint21294;
Object smallint21295;
Object info3929;
Object assign22750;
Object string28497;
Object constant35990;
Object send185328;
Object send185329;
Object send185330;
Object send185331;
Object send185332;
Object send185333;
Object symbol36049;
Object send185334;
Object send185335;
Object send185336;
Object send185337;
Object send185338;
Object send185339;
Object send185340;
Object send185341;
Object send185342;
Object string28498;
Object constant35991;
Object send185343;
Object send185344;
Object send185345;
Object localvariable26834;
Object array21505;
Object send185346;
Object send185347;
Object block12851;
Object send185348;
Object method25492;
Object symbol35773;
Object methodclosure25490;
Object send185349;
Object string28499;
Object string28500;
Object smallint21296;
Object smallint21297;
Object info3930;
Object method25493;
Object symbol35785;
Object methodclosure25491;
Object localvariable26835;
Object array21506;
Object localvariable26836;
Object array21507;
Object send185350;
Object string28501;
Object string28502;
Object smallint21298;
Object smallint21299;
Object info3931;
Object string28503;
Object constant35992;
Object send185351;
Object send185352;
Object send185353;
Object send185354;
Object assign22751;
Object symbol35520;
Object send185355;
Object symbol36050;
Object send185356;
Object block12852;
Object super1984;
Object block12853;
Object send185357;
Object block12854;
Object send185358;
Object method25494;
Object methodclosure25492;
Object send185359;
Object string28504;
Object string28505;
Object smallint21300;
Object smallint21301;
Object info3932;
Object send185360;
Object method25495;
Object symbol35823;
Object methodclosure25493;
Object string28506;
Object constant35993;
Object string28507;
Object constant35994;
Object send185361;
Object string28508;
Object string28509;
Object smallint21302;
Object smallint21303;
Object info3933;
Object send185362;
Object send185363;
Object send185364;
Object localvariable26837;
Object array21508;
Object send185365;
Object send185366;
Object block12855;
Object send185367;
Object method25496;
Object symbol35767;
Object methodclosure25494;
Object string28510;
Object constant35995;
Object send185368;
Object string28511;
Object string28512;
Object smallint21304;
Object smallint21305;
Object info3934;
Object send185369;
Object method25497;
Object symbol35795;
Object methodclosure25495;
Object send185370;
Object string28513;
Object string28514;
Object smallint21306;
Object smallint21307;
Object info3935;
Object constant35996;
Object string28515;
Object constant35997;
Object send185371;
Object send185372;
Object send185373;
Object send185374;
Object send185375;
Object localvariable26838;
Object array21509;
Object smallint21308;
Object constant35998;
Object send185376;
Object localvariable26839;
Object array21510;
Object send185377;
Object send185378;
Object classreference4846;
Object send185379;
Object smallint21309;
Object constant35999;
Object send185380;
Object send185381;
Object send185382;
Object send185383;
Object block12856;
Object send185384;
Object send185385;
Object send185386;
Object block12857;
Object send185387;
Object send185388;
Object symbol35761;
Object send185389;
Object send185390;
Object method25498;
Object symbol35760;
Object methodclosure25496;
Object send185391;
Object string28516;
Object string28517;
Object smallint21310;
Object smallint21311;
Object info3936;
Object string28518;
Object constant36000;
Object send185392;
Object send185393;
Object send185394;
Object method25499;
Object symbol35805;
Object methodclosure25497;
Object string28519;
Object constant36001;
Object send185395;
Object string28520;
Object string28521;
Object smallint21312;
Object smallint21313;
Object info3937;
Object send185396;
Object send185397;
Object localvariable26840;
Object array21511;
Object smallint21314;
Object constant36002;
Object send185398;
Object send185399;
Object send185400;
Object block12858;
Object send185401;
Object method25500;
Object symbol35817;
Object methodclosure25498;
Object string28522;
Object constant36003;
Object send185402;
Object string28523;
Object string28524;
Object smallint21315;
Object smallint21316;
Object info3938;
Object method25501;
Object symbol35777;
Object methodclosure25499;
Object string28525;
Object constant36004;
Object string28526;
Object constant36005;
Object send185403;
Object string28527;
Object string28528;
Object smallint21317;
Object smallint21318;
Object info3939;
Object send185404;
Object send185405;
Object symbol36051;
Object send185406;
Object send185407;
Object send185408;
Object send185409;
Object send185410;
Object send185411;
Object send185412;
Object send185413;
Object send185414;
Object string28529;
Object constant36006;
Object send185415;
Object send185416;
Object send185417;
Object localvariable26841;
Object array21512;
Object localvariable26842;
Object array21513;
Object send185418;
Object symbol35943;
Object send185419;
Object block12859;
Object send185420;
Object send185421;
Object smallint21319;
Object constant36007;
Object send185422;
Object send185423;
Object block12860;
Object send185424;
Object send185425;
Object smallint21320;
Object constant36008;
Object send185426;
Object send185427;
Object block12861;
Object classreference4847;
Object method25502;
Object string28530;
Object string28531;
Object smallint21321;
Object smallint21322;
Object info3940;
Object methodclosure25500;
Object localvariable26843;
Object array21514;
Object assign22752;
Object method25503;
Object string28532;
Object string28533;
Object smallint21323;
Object smallint21324;
Object info3941;
Object methodclosure25501;
Object send185428;
Object string28534;
Object string28535;
Object smallint21325;
Object smallint21326;
Object info3942;
Object localvariable26844;
Object array21515;
Object send185429;
Object send185430;
Object block12862;
Object send185431;
Object block12863;
Object send185432;
Object method25504;
Object methodclosure25502;
Object localvariable26845;
Object array21516;
Object assign22753;
Object method25505;
Object string28536;
Object string28537;
Object smallint21327;
Object smallint21328;
Object info3943;
Object methodclosure25503;
Object super1985;
Object send185433;
Object string28538;
Object string28539;
Object smallint21329;
Object smallint21330;
Object info3944;
Object send185434;
Object send185435;
Object send185436;
Object send185437;
Object send185438;
Object method25506;
Object methodclosure25504;
Object method25507;
Object string28540;
Object string28541;
Object smallint21331;
Object smallint21332;
Object info3945;
Object methodclosure25505;
Object method25508;
Object string28542;
Object string28543;
Object smallint21333;
Object smallint21334;
Object info3946;
Object methodclosure25506;
Object localvariable26846;
Object array21517;
Object assign22754;
Object method25509;
Object string28544;
Object string28545;
Object smallint21335;
Object smallint21336;
Object info3947;
Object methodclosure25507;
Object send185439;
Object send185440;
Object block12864;
Object send185441;
Object method25510;
Object symbol35789;
Object methodclosure25508;
Object string28546;
Object constant36009;
Object send185442;
Object string28547;
Object string28548;
Object smallint21337;
Object smallint21338;
Object info3948;
Object method25511;
Object symbol35810;
Object methodclosure25509;
Object string28549;
Object constant36010;
Object send185443;
Object string28550;
Object string28551;
Object smallint21339;
Object smallint21340;
Object info3949;
Object localvariable26847;
Object array21518;
Object send185444;
Object send185445;
Object block12865;
Object send185446;
Object method25512;
Object symbol35770;
Object methodclosure25510;
Object string28552;
Object constant36011;
Object send185447;
Object string28553;
Object string28554;
Object smallint21341;
Object smallint21342;
Object info3950;
Object string28555;
Object constant36012;
Object send185448;
Object send185449;
Object method25513;
Object methodclosure25511;
Object string28556;
Object constant36013;
Object send185450;
Object string28557;
Object string28558;
Object smallint21343;
Object smallint21344;
Object info3951;
Object send185451;
Object send185452;
Object send185453;
Object string28559;
Object constant36014;
Object send185454;
Object send185455;
Object send185456;
Object method25514;
Object symbol35782;
Object methodclosure25512;
Object string28560;
Object constant36015;
Object symbol36052;
Object send185457;
Object string28561;
Object string28562;
Object smallint21345;
Object smallint21346;
Object info3952;
Object send185458;
Object send185459;
Object send185460;
Object send185461;
Object send185462;
Object send185463;
Object send185464;
Object send185465;
Object send185466;
Object send185467;
Object localvariable26848;
Object array21519;
Object localvariable26849;
Object array21520;
Object send185468;
Object send185469;
Object smallint21347;
Object constant36016;
Object send185470;
Object send185471;
Object block12866;
Object send185472;
Object send185473;
Object smallint21348;
Object constant36017;
Object send185474;
Object send185475;
Object smallint21349;
Object constant36018;
Object send185476;
Object send185477;
Object send185478;
Object block12867;
Object send185479;
Object send185480;
Object block12868;
Object send185481;
Object send185482;
Object send185483;
Object method25515;
Object symbol35827;
Object methodclosure25513;
Object string28563;
Object constant36019;
Object send185484;
Object string28564;
Object string28565;
Object smallint21350;
Object smallint21351;
Object info3953;
Object localvariable26850;
Object array21521;
Object send185485;
Object send185486;
Object block12869;
Object send185487;
Object method25516;
Object symbol35799;
Object methodclosure25514;
Object constant36020;
Object string28566;
Object constant36021;
Object send185488;
Object string28567;
Object string28568;
Object smallint21352;
Object smallint21353;
Object info3954;
Object block12870;
Object send185489;
Object method25517;
Object methodclosure25515;
Object string28569;
Object constant36022;
Object send185490;
Object string28570;
Object string28571;
Object smallint21354;
Object smallint21355;
Object info3955;
Object method25518;
Object symbol35764;
Object methodclosure25516;
Object string28572;
Object constant36023;
Object send185491;
Object string28573;
Object string28574;
Object smallint21356;
Object smallint21357;
Object info3956;
Object string28575;
Object constant36024;
Object send185492;
Object send185493;
Object send185494;
Object send185495;
Object localvariable26851;
Object array21522;
Object send185496;
Object send185497;
Object send185498;
Object block12871;
Object send185499;
Object method25519;
Object symbol35792;
Object methodclosure25517;
Object string28576;
Object constant36025;
Object symbol36053;
Object send185500;
Object string28577;
Object string28578;
Object smallint21358;
Object smallint21359;
Object info3957;
Object symbol36054;
Object send185501;
Object symbol36055;
Object send185502;
Object send185503;
Object send185504;
Object send185505;
Object localvariable26852;
Object array21523;
Object send185506;
Object send185507;
Object localvariable26853;
Object localvariable26854;
Object array21524;
Object send185508;
Object block12872;
Object send185509;
Object block12873;
Object send185510;
Object method25520;
Object symbol35809;
Object methodclosure25518;
Object send185511;
Object string28579;
Object string28580;
Object smallint21360;
Object smallint21361;
Object info3958;
Object send185512;
Object method25521;
Object symbol35802;
Object methodclosure25519;
Object string28581;
Object constant36026;
Object send185513;
Object string28582;
Object string28583;
Object smallint21362;
Object smallint21363;
Object info3959;
Object send185514;
Object send185515;
Object symbol36056;
Object send185516;
Object send185517;
Object send185518;
Object method25522;
Object symbol35830;
Object methodclosure25520;
Object symbol36057;
Object send185519;
Object string28584;
Object string28585;
Object smallint21364;
Object smallint21365;
Object info3960;
Object send185520;
Object send185521;
Object method25523;
Object symbol35814;
Object methodclosure25521;
Object string28586;
Object constant36027;
Object send185522;
Object string28587;
Object string28588;
Object smallint21366;
Object smallint21367;
Object info3961;
Object localvariable26855;
Object array21525;
Object send185523;
Object send185524;
Object block12874;
Object send185525;
Object method25524;
Object symbol35774;
Object methodclosure25522;
Object localvariable26856;
Object array21526;
Object string28589;
Object constant36028;
Object send185526;
Object string28590;
Object string28591;
Object smallint21368;
Object smallint21369;
Object info3962;
Object send185527;
Object send185528;
Object send185529;
Object localvariable26857;
Object array21527;
Object send185530;
Object assign22755;
Object localvariable26858;
Object array21528;
Object send185531;
Object send185532;
Object send185533;
Object send185534;
Object smallint21370;
Object constant36029;
Object send185535;
Object send185536;
Object send185537;
Object block12875;
Object send185538;
Object send185539;
Object send185540;
Object send185541;
Object block12876;
Object send185542;
Object method25525;
Object symbol35786;
Object methodclosure25523;
Object string28592;
Object constant36030;
Object send185543;
Object string28593;
Object string28594;
Object smallint21371;
Object smallint21372;
Object info3963;
Object send185544;
Object localvariable26859;
Object array21529;
Object string28595;
Object constant36031;
Object localvariable26860;
Object localvariable26861;
Object array21530;
Object send185545;
Object string28596;
Object constant36032;
Object send185546;
Object block12877;
Object send185547;
Object block12878;
Object send185548;
Object method25526;
Object symbol35824;
Object methodclosure25524;
Object localvariable26862;
Object array21531;
Object variable1594;
Object array21532;
Object string28597;
Object constant36033;
Object send185549;
Object string28598;
Object string28599;
Object smallint21373;
Object smallint21374;
Object info3964;
Object send185550;
Object send185551;
Object block12879;
Object send185552;
Object string28600;
Object constant36034;
Object send185553;
Object send185554;
Object send185555;
Object block12880;
Object send185556;
Object send185557;
Object send185558;
Object block12881;
Object send185559;
Object method25527;
Object methodclosure25525;
Object string28601;
Object constant36035;
Object string28602;
Object constant36036;
Object send185560;
Object string28603;
Object string28604;
Object smallint21375;
Object smallint21376;
Object info3965;
Object send185561;
Object send185562;
Object send185563;
Object localvariable26863;
Object array21533;
Object send185564;
Object send185565;
Object send185566;
Object block12882;
Object send185567;
Object method25528;
Object symbol35796;
Object methodclosure25526;
Object send185568;
Object string28605;
Object string28606;
Object smallint21377;
Object smallint21378;
Object info3966;
Object send185569;
Object send185570;
Object send185571;
Object send185572;
Object method25529;
Object methodclosure25527;
Object string28607;
Object constant36037;
Object string28608;
Object constant36038;
Object send185573;
Object string28609;
Object string28610;
Object smallint21379;
Object smallint21380;
Object info3967;
Object send185574;
Object send185575;
Object send185576;
Object send185577;
Object localvariable26864;
Object array21534;
Object localvariable26865;
Object array21535;
Object send185578;
Object block12883;
Object send185579;
Object block12884;
Object send185580;
Object method25530;
Object symbol35806;
Object methodclosure25528;
Object localvariable26866;
Object array21536;
Object string28611;
Object constant36039;
Object send185581;
Object string28612;
Object string28613;
Object smallint21381;
Object smallint21382;
Object info3968;
Object assign22756;
Object send185582;
Object send185583;
Object send185584;
Object send185585;
Object method25531;
Object symbol35818;
Object methodclosure25529;
Object method25532;
Object string28614;
Object string28615;
Object smallint21383;
Object smallint21384;
Object info3969;
Object symbol35778;
Object methodclosure25530;
Object string28616;
Object constant36040;
Object send185586;
Object string28617;
Object string28618;
Object smallint21385;
Object smallint21386;
Object info3970;
Object send185587;
Object send185588;
Object send185589;
Object send185590;
Object send185591;
Object send185592;
Object send185593;
Object send185594;
Object method25533;
Object symbol35811;
Object methodclosure25531;
Object string28619;
Object constant36041;
Object send185595;
Object string28620;
Object string28621;
Object smallint21387;
Object smallint21388;
Object info3971;
Object send185596;
Object send185597;
Object send185598;
Object send185599;
Object send185600;
Object send185601;
Object localvariable26867;
Object array21537;
Object smallint21389;
Object constant36042;
Object send185602;
Object symbol35944;
Object localvariable26868;
Object array21538;
Object send185603;
Object send185604;
Object block12885;
Object send185605;
Object send185606;
Object block12886;
Object send185607;
Object method25534;
Object symbol35783;
Object methodclosure25532;
Object string28622;
Object constant36043;
Object send185608;
Object string28623;
Object string28624;
Object smallint21390;
Object smallint21391;
Object info3972;
Object send185609;
Object send185610;
Object send185611;
Object send185612;
Object send185613;
Object localvariable26869;
Object array21539;
Object send185614;
Object send185615;
Object localvariable26870;
Object localvariable26871;
Object array21540;
Object send185616;
Object block12887;
Object send185617;
Object block12888;
Object send185618;
Object method25535;
Object symbol35828;
Object methodclosure25533;
Object constant36044;
Object string28625;
Object constant36045;
Object send185619;
Object string28626;
Object string28627;
Object smallint21392;
Object smallint21393;
Object info3973;
Object block12889;
Object send185620;
Object method25536;
Object methodclosure25534;
Object string28628;
Object constant36046;
Object send185621;
Object string28629;
Object string28630;
Object smallint21394;
Object smallint21395;
Object info3974;
Object method25537;
Object symbol35765;
Object methodclosure25535;
Object string28631;
Object constant36047;
Object send185622;
Object string28632;
Object string28633;
Object smallint21396;
Object smallint21397;
Object info3975;
Object send185623;
Object send185624;
Object send185625;
Object send185626;
Object send185627;
Object send185628;
Object method25538;
Object symbol35793;
Object methodclosure25536;
Object string28634;
Object constant36048;
Object send185629;
Object string28635;
Object string28636;
Object smallint21398;
Object smallint21399;
Object info3976;
Object send185630;
Object send185631;
Object send185632;
Object localvariable26872;
Object array21541;
Object localvariable26873;
Object array21542;
Object localvariable26874;
Object array21543;
Object send185633;
Object send185634;
Object block12890;
Object send185635;
Object send185636;
Object send185637;
Object constant36049;
Object send185638;
Object send185639;
Object send185640;
Object constant36050;
Object send185641;
Object send185642;
Object block12891;
Object send185643;
Object send185644;
Object block12892;
Object send185645;
Object method25539;
Object symbol35803;
Object methodclosure25537;
Object string28637;
Object constant36051;
Object send185646;
Object string28638;
Object string28639;
Object smallint21400;
Object smallint21401;
Object info3977;
Object send185647;
Object localvariable26875;
Object array21544;
Object localvariable26876;
Object array21545;
Object string28640;
Object constant36052;
Object localvariable26877;
Object localvariable26878;
Object array21546;
Object send185648;
Object block12893;
Object send185649;
Object send185650;
Object string28641;
Object constant36053;
Object send185651;
Object block12894;
Object send185652;
Object send185653;
Object block12895;
Object send185654;
Object method25540;
Object symbol35831;
Object methodclosure25538;
Object string28642;
Object constant36054;
Object send185655;
Object string28643;
Object string28644;
Object smallint21402;
Object smallint21403;
Object info3978;
Object send185656;
Object send185657;
Object localvariable26879;
Object array21547;
Object localvariable26880;
Object array21548;
Object send185658;
Object send185659;
Object send185660;
Object smallint21404;
Object constant36055;
Object send185661;
Object send185662;
Object block12896;
Object send185663;
Object send185664;
Object block12897;
Object send185665;
Object method25541;
Object symbol35775;
Object methodclosure25539;
Object send185666;
Object string28645;
Object string28646;
Object smallint21405;
Object smallint21406;
Object info3979;
Object assign22757;
Object method25542;
Object symbol35584;
Object methodclosure25540;
Object localvariable26881;
Object localvariable26882;
Object localvariable26883;
Object array21549;
Object send185667;
Object string28647;
Object string28648;
Object smallint21407;
Object smallint21408;
Object info3980;
Object assign22758;
Object string28649;
Object constant36056;
Object assign22759;
Object send185668;
Object assign22760;
Object send185669;
Object send185670;
Object send185671;
Object send185672;
Object send185673;
Object send185674;
Object send185675;
Object send185676;
Object send185677;
Object send185678;
Object send185679;
Object send185680;
Object send185681;
Object send185682;
Object smallint21409;
Object constant36057;
Object send185683;
Object send185684;
Object send185685;
Object send185686;
Object smallint21410;
Object constant36058;
Object send185687;
Object send185688;
Object send185689;
Object send185690;
Object smallint21411;
Object constant36059;
Object send185691;
Object method25543;
Object symbol35592;
Object methodclosure25541;
Object localvariable26884;
Object localvariable26885;
Object localvariable26886;
Object array21550;
Object send185692;
Object string28650;
Object string28651;
Object smallint21412;
Object smallint21413;
Object info3981;
Object assign22761;
Object string28652;
Object constant36060;
Object send185693;
Object assign22762;
Object send185694;
Object assign22763;
Object send185695;
Object send185696;
Object send185697;
Object send185698;
Object send185699;
Object send185700;
Object smallint21414;
Object constant36061;
Object send185701;
Object send185702;
Object send185703;
Object send185704;
Object smallint21415;
Object constant36062;
Object send185705;
Object send185706;
Object send185707;
Object send185708;
Object smallint21416;
Object constant36063;
Object send185709;
Object string28653;
Object constant36064;
Object send185710;
Object assign22764;
Object send185711;
Object assign22765;
Object send185712;
Object send185713;
Object send185714;
Object send185715;
Object send185716;
Object send185717;
Object smallint21417;
Object constant36065;
Object send185718;
Object send185719;
Object send185720;
Object send185721;
Object smallint21418;
Object constant36066;
Object send185722;
Object send185723;
Object send185724;
Object send185725;
Object smallint21419;
Object constant36067;
Object send185726;
Object string28654;
Object constant36068;
Object send185727;
Object assign22766;
Object send185728;
Object assign22767;
Object send185729;
Object send185730;
Object send185731;
Object send185732;
Object send185733;
Object send185734;
Object smallint21420;
Object constant36069;
Object send185735;
Object send185736;
Object send185737;
Object send185738;
Object smallint21421;
Object constant36070;
Object send185739;
Object send185740;
Object send185741;
Object send185742;
Object smallint21422;
Object constant36071;
Object send185743;
Object string28655;
Object constant36072;
Object send185744;
Object assign22768;
Object send185745;
Object assign22769;
Object send185746;
Object send185747;
Object send185748;
Object send185749;
Object send185750;
Object send185751;
Object smallint21423;
Object constant36073;
Object send185752;
Object send185753;
Object send185754;
Object send185755;
Object smallint21424;
Object constant36074;
Object send185756;
Object send185757;
Object send185758;
Object send185759;
Object smallint21425;
Object constant36075;
Object send185760;
Object string28656;
Object constant36076;
Object send185761;
Object assign22770;
Object send185762;
Object assign22771;
Object send185763;
Object send185764;
Object send185765;
Object send185766;
Object send185767;
Object send185768;
Object smallint21426;
Object constant36077;
Object send185769;
Object send185770;
Object send185771;
Object send185772;
Object smallint21427;
Object constant36078;
Object send185773;
Object send185774;
Object send185775;
Object send185776;
Object smallint21428;
Object constant36079;
Object send185777;
Object string28657;
Object constant36080;
Object send185778;
Object assign22772;
Object send185779;
Object assign22773;
Object send185780;
Object send185781;
Object send185782;
Object send185783;
Object send185784;
Object send185785;
Object smallint21429;
Object constant36081;
Object send185786;
Object send185787;
Object send185788;
Object send185789;
Object smallint21430;
Object constant36082;
Object send185790;
Object send185791;
Object send185792;
Object send185793;
Object smallint21431;
Object constant36083;
Object send185794;
Object string28658;
Object constant36084;
Object send185795;
Object assign22774;
Object send185796;
Object assign22775;
Object send185797;
Object send185798;
Object send185799;
Object send185800;
Object send185801;
Object send185802;
Object smallint21432;
Object constant36085;
Object send185803;
Object send185804;
Object send185805;
Object send185806;
Object smallint21433;
Object constant36086;
Object send185807;
Object send185808;
Object send185809;
Object send185810;
Object smallint21434;
Object constant36087;
Object send185811;
Object method25544;
Object symbol35574;
Object methodclosure25542;
Object localvariable26887;
Object localvariable26888;
Object localvariable26889;
Object array21551;
Object send185812;
Object string28659;
Object string28660;
Object smallint21435;
Object smallint21436;
Object info3982;
Object assign22776;
Object string28661;
Object constant36088;
Object send185813;
Object assign22777;
Object send185814;
Object assign22778;
Object send185815;
Object send185816;
Object send185817;
Object send185818;
Object send185819;
Object send185820;
Object send185821;
Object send185822;
Object send185823;
Object send185824;
Object string28662;
Object constant36089;
Object send185825;
Object send185826;
Object assign22779;
Object send185827;
Object send185828;
Object send185829;
Object send185830;
Object send185831;
Object send185832;
Object send185833;
Object send185834;
Object send185835;
Object send185836;
Object string28663;
Object constant36090;
Object send185837;
Object send185838;
Object assign22780;
Object send185839;
Object send185840;
Object send185841;
Object send185842;
Object send185843;
Object send185844;
Object send185845;
Object send185846;
Object send185847;
Object send185848;
Object string28664;
Object constant36091;
Object send185849;
Object send185850;
Object send185851;
Object send185852;
Object send185853;
Object method25545;
Object symbol35594;
Object methodclosure25543;
Object localvariable26890;
Object localvariable26891;
Object localvariable26892;
Object array21552;
Object send185854;
Object string28665;
Object string28666;
Object smallint21437;
Object smallint21438;
Object info3983;
Object assign22781;
Object string28667;
Object constant36092;
Object send185855;
Object assign22782;
Object send185856;
Object assign22783;
Object send185857;
Object send185858;
Object send185859;
Object send185860;
Object send185861;
Object string28668;
Object constant36093;
Object send185862;
Object send185863;
Object send185864;
Object smallint21439;
Object constant36094;
Object send185865;
Object string28669;
Object constant36095;
Object send185866;
Object assign22784;
Object send185867;
Object assign22785;
Object send185868;
Object send185869;
Object send185870;
Object send185871;
Object send185872;
Object string28670;
Object constant36096;
Object send185873;
Object send185874;
Object send185875;
Object string28671;
Object constant36097;
Object send185876;
Object send185877;
Object send185878;
Object smallint21440;
Object constant36098;
Object send185879;
Object method25546;
Object symbol35551;
Object methodclosure25544;
Object classreference4848;
Object localvariable26893;
Object array21553;
Object symbol35833;
Object send185880;
Object string28672;
Object string28673;
Object smallint21441;
Object smallint21442;
Object info3984;
Object localvariable26894;
Object array21554;
Object symbol36058;
Object send185881;
Object symbol36059;
Object send185882;
Object block12898;
Object send185883;
Object block12899;
Object send185884;
Object method25547;
Object symbol35852;
Object methodclosure25545;
Object send185885;
Object string28674;
Object string28675;
Object smallint21443;
Object smallint21444;
Object info3985;
Object symbol35936;
Object send185886;
Object method25548;
Object methodclosure25546;
Object localvariable26895;
Object array21555;
Object assign22786;
Object method25549;
Object string28676;
Object string28677;
Object smallint21445;
Object smallint21446;
Object info3986;
Object methodclosure25547;
Object localvariable26896;
Object array21556;
Object assign22787;
Object method25550;
Object string28678;
Object string28679;
Object smallint21447;
Object smallint21448;
Object info3987;
Object methodclosure25548;
Object classreference4849;
Object localvariable26897;
Object array21557;
Object assign22788;
Object method25551;
Object string28680;
Object string28681;
Object smallint21449;
Object smallint21450;
Object info3988;
Object methodclosure25549;
Object localvariable26898;
Object array21558;
Object symbol35935;
Object send185887;
Object string28682;
Object string28683;
Object smallint21451;
Object smallint21452;
Object info3989;
Object send185888;
Object method25552;
Object methodclosure25550;
Object method25553;
Object string28684;
Object string28685;
Object smallint21453;
Object smallint21454;
Object info3990;
Object methodclosure25551;
Object localvariable26899;
Object array21559;
Object super1986;
Object assign22789;
Object assign22790;
Object method25554;
Object string28686;
Object string28687;
Object smallint21455;
Object smallint21456;
Object info3991;
Object methodclosure25552;
Object localvariable26900;
Object localvariable26901;
Object array21560;
Object localvariable26902;
Object array21561;
Object send185889;
Object string28688;
Object string28689;
Object smallint21457;
Object smallint21458;
Object info3992;
Object block12900;
Object send185890;
Object send185891;
Object assign22791;
Object send185892;
Object block12901;
Object send185893;
Object block12902;
Object send185894;
Object method25555;
Object methodclosure25553;
Object method25556;
Object string28690;
Object string28691;
Object smallint21459;
Object smallint21460;
Object info3993;
Object methodclosure25554;
Object send185895;
Object string28692;
Object string28693;
Object smallint21461;
Object smallint21462;
Object info3994;
Object method25557;
Object methodclosure25555;
Object method25558;
Object string28694;
Object string28695;
Object smallint21463;
Object smallint21464;
Object info3995;
Object symbol35834;
Object methodclosure25556;
Object variable1595;
Object array21562;
Object super1987;
Object send185896;
Object string28696;
Object string28697;
Object smallint21465;
Object smallint21466;
Object info3996;
Object block12903;
Object send185897;
Object string28698;
Object constant36099;
Object send185898;
Object string28699;
Object constant36100;
Object send185899;
Object block12904;
Object send185900;
Object method25559;
Object methodclosure25557;
Object localvariable26903;
Object array21563;
Object send185901;
Object string28700;
Object string28701;
Object smallint21467;
Object smallint21468;
Object info3997;
Object send185902;
Object method25560;
Object methodclosure25558;
Object localvariable26904;
Object array21564;
Object send185903;
Object string28702;
Object string28703;
Object smallint21469;
Object smallint21470;
Object info3998;
Object symbol36060;
Object send185904;
Object block12905;
Object send185905;
Object method25561;
Object symbol35835;
Object methodclosure25559;
Object localvariable26905;
Object array21565;
Object classreference4850;
Object localvariable26906;
Object array21566;
Object assign22792;
Object method25562;
Object string28704;
Object string28705;
Object smallint21471;
Object smallint21472;
Object info3999;
Object methodclosure25560;
Object localvariable26907;
Object array21567;
Object localvariable26908;
Object localvariable26909;
Object array21568;
Object variable1596;
Object array21569;
Object send185906;
Object string28706;
Object string28707;
Object smallint21473;
Object smallint21474;
Object info4000;
Object assign22793;
Object localvariable26910;
Object array21570;
Object send185907;
Object block12906;
Object send185908;
Object send185909;
Object assign22794;
Object send185910;
Object block12907;
Object send185911;
Object symbol35842;
Object send185912;
Object send185913;
Object block12908;
Object send185914;
Object block12909;
Object send185915;
Object send185916;
Object smallint21475;
Object constant36101;
Object send185917;
Object send185918;
Object send185919;
Object block12910;
Object send185920;
Object block12911;
Object send185921;
Object method25563;
Object methodclosure25561;
Object method25564;
Object string28708;
Object string28709;
Object smallint21476;
Object smallint21477;
Object info4001;
Object methodclosure25562;
Object super1988;
Object send185922;
Object string28710;
Object string28711;
Object smallint21478;
Object smallint21479;
Object info4002;
Object send185923;
Object method25565;
Object methodclosure25563;
Object localvariable26911;
Object array21571;
Object super1989;
Object assign22795;
Object assign22796;
Object method25566;
Object string28712;
Object string28713;
Object smallint21480;
Object smallint21481;
Object info4003;
Object methodclosure25564;
Object localvariable26912;
Object array21572;
Object send185924;
Object string28714;
Object string28715;
Object smallint21482;
Object smallint21483;
Object info4004;
Object send185925;
Object method25567;
Object methodclosure25565;
Object send185926;
Object string28716;
Object string28717;
Object smallint21484;
Object smallint21485;
Object info4005;
Object send185927;
Object send185928;
Object method25568;
Object methodclosure25566;
Object method25569;
Object string28718;
Object string28719;
Object smallint21486;
Object smallint21487;
Object info4006;
Object methodclosure25567;
Object send185929;
Object string28720;
Object string28721;
Object smallint21488;
Object smallint21489;
Object info4007;
Object method25570;
Object methodclosure25568;
Object send185930;
Object string28722;
Object string28723;
Object smallint21490;
Object smallint21491;
Object info4008;
Object send185931;
Object method25571;
Object methodclosure25569;
Object method25572;
Object string28724;
Object string28725;
Object smallint21492;
Object smallint21493;
Object info4009;
Object methodclosure25570;
Object classreference4851;
Object localvariable26913;
Object array21573;
Object localvariable26914;
Object localvariable26915;
Object array21574;
Object variable1597;
Object array21575;
Object send185932;
Object string28726;
Object string28727;
Object smallint21494;
Object smallint21495;
Object info4010;
Object assign22797;
Object send185933;
Object assign22798;
Object send185934;
Object block12912;
Object send185935;
Object send185936;
Object send185937;
Object block12913;
Object send185938;
Object method25573;
Object methodclosure25571;
Object classreference4852;
Object localvariable26916;
Object array21576;
Object variable1598;
Object array21577;
Object classreference4853;
Object localvariable26917;
Object array21578;
Object send185939;
Object string28728;
Object string28729;
Object smallint21496;
Object smallint21497;
Object info4011;
Object method25574;
Object methodclosure25572;
Object localvariable26918;
Object array21579;
Object assign22799;
Object method25575;
Object string28730;
Object string28731;
Object smallint21498;
Object smallint21499;
Object info4012;
Object symbol35945;
Object methodclosure25573;
Object localvariable26919;
Object array21580;
Object method25576;
Object string28732;
Object string28733;
Object smallint21500;
Object smallint21501;
Object info4013;
Object methodclosure25574;
Object send185940;
Object string28734;
Object string28735;
Object smallint21502;
Object smallint21503;
Object info4014;
Object classreference4854;
Object send185941;
Object block12914;
Object send185942;
Object send185943;
Object block12915;
Object send185944;
Object method25577;
Object methodclosure25575;
Object method25578;
Object string28736;
Object string28737;
Object smallint21504;
Object smallint21505;
Object info4015;
Object methodclosure25576;
Object localvariable26920;
Object array21581;
Object super1990;
Object assign22800;
Object assign22801;
Object method25579;
Object string28738;
Object string28739;
Object smallint21506;
Object smallint21507;
Object info4016;
Object methodclosure25577;
Object send185945;
Object string28740;
Object string28741;
Object smallint21508;
Object smallint21509;
Object info4017;
Object method25580;
Object methodclosure25578;
Object send185946;
Object string28742;
Object string28743;
Object smallint21510;
Object smallint21511;
Object info4018;
Object method25581;
Object methodclosure25579;
Object assign22802;
Object method25582;
Object string28744;
Object string28745;
Object smallint21512;
Object smallint21513;
Object info4019;
Object methodclosure25580;
Object send185947;
Object string28746;
Object string28747;
Object smallint21514;
Object smallint21515;
Object info4020;
Object method25583;
Object methodclosure25581;
Object localvariable26921;
Object array21582;
Object send185948;
Object string28748;
Object string28749;
Object smallint21516;
Object smallint21517;
Object info4021;
Object send185949;
Object send185950;
Object method25584;
Object methodclosure25582;
Object localvariable26922;
Object array21583;
Object symbol36061;
Object send185951;
Object string28750;
Object string28751;
Object smallint21518;
Object smallint21519;
Object info4022;
Object method25585;
Object methodclosure25583;
Object method25586;
Object string28752;
Object string28753;
Object smallint21520;
Object smallint21521;
Object info4023;
Object methodclosure25584;
Object send185952;
Object string28754;
Object string28755;
Object smallint21522;
Object smallint21523;
Object info4024;
Object send185953;
Object method25587;
Object symbol35851;
Object methodclosure25585;
Object localvariable26923;
Object array21584;
Object localvariable26924;
Object localvariable26925;
Object array21585;
Object send185954;
Object string28756;
Object string28757;
Object smallint21524;
Object smallint21525;
Object info4025;
Object assign22803;
Object send185955;
Object assign22804;
Object symbol36062;
Object send185956;
Object block12916;
Object send185957;
Object method25588;
Object methodclosure25586;
Object method25589;
Object string28758;
Object string28759;
Object smallint21526;
Object smallint21527;
Object info4026;
Object methodclosure25587;
Object localvariable26926;
Object array21586;
Object send185958;
Object string28760;
Object string28761;
Object smallint21528;
Object smallint21529;
Object info4027;
Object send185959;
Object method25590;
Object methodclosure25588;
Object constant36102;
Object method25591;
Object string28762;
Object string28763;
Object smallint21530;
Object smallint21531;
Object info4028;
Object methodclosure25589;
Object classreference4855;
Object localvariable26927;
Object array21587;
Object send185960;
Object string28764;
Object string28765;
Object smallint21532;
Object smallint21533;
Object info4029;
Object method25592;
Object methodclosure25590;
Object classreference4856;
Object classreference4857;
Object classreference4858;
Object send185961;
Object string28766;
Object string28767;
Object smallint21534;
Object smallint21535;
Object info4030;
Object send185962;
Object symbol36063;
Object smallint21536;
Object constant36103;
Object send185963;
Object send185964;
Object send185965;
Object send185966;
Object send185967;
Object method25593;
Object symbol35683;
Object methodclosure25591;
Object method25594;
Object string28768;
Object string28769;
Object smallint21537;
Object smallint21538;
Object info4031;
Object symbol35680;
Object methodclosure25592;
Object localvariable26928;
Object array21588;
Object assign22805;
Object method25595;
Object string28770;
Object string28771;
Object smallint21539;
Object smallint21540;
Object info4032;
Object symbol35677;
Object methodclosure25593;
Object localvariable26929;
Object array21589;
Object send185968;
Object string28772;
Object string28773;
Object smallint21541;
Object smallint21542;
Object info4033;
Object method25596;
Object methodclosure25594;
Object method25597;
Object string28774;
Object string28775;
Object smallint21543;
Object smallint21544;
Object info4034;
Object methodclosure25595;
Object localvariable26930;
Object array21590;
Object localvariable26931;
Object array21591;
Object variable1599;
Object array21592;
Object send185969;
Object string28776;
Object string28777;
Object smallint21545;
Object smallint21546;
Object info4035;
Object constant36104;
Object send185970;
Object super1991;
Object send185971;
Object block12917;
Object send185972;
Object string28778;
Object constant36105;
Object send185973;
Object send185974;
Object smallint21547;
Object constant36106;
Object send185975;
Object send185976;
Object send185977;
Object send185978;
Object send185979;
Object string28779;
Object constant36107;
Object send185980;
Object send185981;
Object assign22806;
Object send185982;
Object send185983;
Object block12918;
Object send185984;
Object method25598;
Object methodclosure25596;
Object string28780;
Object constant36108;
Object method25599;
Object string28781;
Object string28782;
Object smallint21548;
Object smallint21549;
Object info4036;
Object symbol35682;
Object methodclosure25597;
Object send185985;
Object string28783;
Object string28784;
Object smallint21550;
Object smallint21551;
Object info4037;
Object send185986;
Object symbol36064;
Object send185987;
Object assign22807;
Object block12919;
Object send185988;
Object method25600;
Object symbol35679;
Object methodclosure25598;
Object method25601;
Object string28785;
Object string28786;
Object smallint21552;
Object smallint21553;
Object info4038;
Object methodclosure25599;
Object classreference4859;
Object send185989;
Object string28787;
Object string28788;
Object smallint21554;
Object smallint21555;
Object info4039;
Object send185990;
Object method25602;
Object methodclosure25600;
Object method25603;
Object string28789;
Object string28790;
Object smallint21556;
Object smallint21557;
Object info4040;
Object methodclosure25601;
Object localvariable26932;
Object array21593;
Object localvariable26933;
Object array21594;
Object assign22808;
Object send185991;
Object string28791;
Object string28792;
Object smallint21558;
Object smallint21559;
Object info4041;
Object assign22809;
Object send185992;
Object smallint21560;
Object constant36109;
Object send185993;
Object send185994;
Object smallint21561;
Object constant36110;
Object send185995;
Object send185996;
Object send185997;
Object send185998;
Object string28793;
Object constant36111;
Object send185999;
Object block12920;
Object send186000;
Object method25604;
Object methodclosure25602;
Object localvariable26934;
Object array21595;
Object send186001;
Object string28794;
Object string28795;
Object smallint21562;
Object smallint21563;
Object info4042;
Object send186002;
Object send186003;
Object method25605;
Object methodclosure25603;
Object send186004;
Object string28796;
Object string28797;
Object smallint21564;
Object smallint21565;
Object info4043;
Object send186005;
Object method25606;
Object methodclosure25604;
Object send186006;
Object string28798;
Object string28799;
Object smallint21566;
Object smallint21567;
Object info4044;
Object method25607;
Object methodclosure25605;
Object localvariable26935;
Object array21596;
Object send186007;
Object string28800;
Object string28801;
Object smallint21568;
Object smallint21569;
Object info4045;
Object send186008;
Object method25608;
Object methodclosure25606;
Object classreference4860;
Object method25609;
Object string28802;
Object string28803;
Object smallint21570;
Object smallint21571;
Object info4046;
Object methodclosure25607;
Object localvariable26936;
Object array21597;
Object send186009;
Object string28804;
Object string28805;
Object smallint21572;
Object smallint21573;
Object info4047;
Object send186010;
Object method25610;
Object methodclosure25608;
Object method25611;
Object string28806;
Object string28807;
Object smallint21574;
Object smallint21575;
Object info4048;
Object methodclosure25609;
Object method25612;
Object string28808;
Object string28809;
Object smallint21576;
Object smallint21577;
Object info4049;
Object methodclosure25610;
Object send186011;
Object string28810;
Object string28811;
Object smallint21578;
Object smallint21579;
Object info4050;
Object symbol35506;
Object send186012;
Object method25613;
Object methodclosure25611;
Object localvariable26937;
Object array21598;
Object method25614;
Object string28812;
Object string28813;
Object smallint21580;
Object smallint21581;
Object info4051;
Object methodclosure25612;
Object method25615;
Object string28814;
Object string28815;
Object smallint21582;
Object smallint21583;
Object info4052;
Object methodclosure25613;
Object localvariable26938;
Object array21599;
Object send186013;
Object string28816;
Object string28817;
Object smallint21584;
Object smallint21585;
Object info4053;
Object method25616;
Object methodclosure25614;
Object localvariable26939;
Object array21600;
Object send186014;
Object string28818;
Object string28819;
Object smallint21586;
Object smallint21587;
Object info4054;
Object symbol35606;
Object send186015;
Object method25617;
Object methodclosure25615;
Object send186016;
Object string28820;
Object string28821;
Object smallint21588;
Object smallint21589;
Object info4055;
Object send186017;
Object method25618;
Object methodclosure25616;
Object send186018;
Object string28822;
Object string28823;
Object smallint21590;
Object smallint21591;
Object info4056;
Object string28824;
Object constant36112;
Object send186019;
Object method25619;
Object symbol35507;
Object methodclosure25617;
Object localvariable26940;
Object array21601;
Object string28825;
Object constant36113;
Object send186020;
Object string28826;
Object string28827;
Object smallint21592;
Object smallint21593;
Object info4057;
Object send186021;
Object string28828;
Object constant36114;
Object send186022;
Object smallint21594;
Object constant36115;
Object send186023;
Object send186024;
Object send186025;
Object send186026;
Object send186027;
Object send186028;
Object method25620;
Object methodclosure25618;
Object classreference4861;
Object localvariable26941;
Object array21602;
Object super1992;
Object string28829;
Object constant36116;
Object send186029;
Object string28830;
Object string28831;
Object smallint21595;
Object smallint21596;
Object info4058;
Object send186030;
Object send186031;
Object method25621;
Object methodclosure25619;
Object instancevariable6060;
Object method25622;
Object string28832;
Object string28833;
Object smallint21597;
Object smallint21598;
Object info4059;
Object methodclosure25620;
Object instancevariable6061;
Object method25623;
Object string28834;
Object string28835;
Object smallint21599;
Object smallint21600;
Object info4060;
Object symbol35623;
Object methodclosure25621;
Object symbol35513;
Object send186032;
Object string28836;
Object string28837;
Object smallint21601;
Object smallint21602;
Object info4061;
Object method25624;
Object methodclosure25622;
Object send186033;
Object string28838;
Object string28839;
Object smallint21603;
Object smallint21604;
Object info4062;
Object string28840;
Object constant36117;
Object send186034;
Object smallint21605;
Object constant36118;
Object send186035;
Object send186036;
Object send186037;
Object send186038;
Object send186039;
Object send186040;
Object method25625;
Object methodclosure25623;
Object method25626;
Object string28841;
Object string28842;
Object smallint21606;
Object smallint21607;
Object info4063;
Object symbol35508;
Object methodclosure25624;
Object string28843;
Object constant36119;
Object send186041;
Object string28844;
Object string28845;
Object smallint21608;
Object smallint21609;
Object info4064;
Object method25627;
Object methodclosure25625;
Object classreference4862;
Object classreference4863;
Object localvariable26942;
Object array21603;
Object super1993;
Object symbol36065;
Object send186042;
Object string28846;
Object string28847;
Object smallint21610;
Object smallint21611;
Object info4065;
Object send186043;
Object send186044;
Object method25628;
Object methodclosure25626;
Object constant36120;
Object method25629;
Object string28848;
Object string28849;
Object smallint21612;
Object smallint21613;
Object info4066;
Object methodclosure25627;
Object method25630;
Object string28850;
Object string28851;
Object smallint21614;
Object smallint21615;
Object info4067;
Object methodclosure25628;
Object send186045;
Object string28852;
Object string28853;
Object smallint21616;
Object smallint21617;
Object info4068;
Object method25631;
Object symbol35617;
Object methodclosure25629;
Object localvariable26943;
Object array21604;
Object send186046;
Object string28854;
Object string28855;
Object smallint21618;
Object smallint21619;
Object info4069;
Object symbol36066;
Object send186047;
Object method25632;
Object symbol35620;
Object methodclosure25630;
Object classreference4864;
Object send186048;
Object string28856;
Object string28857;
Object smallint21620;
Object smallint21621;
Object info4070;
Object send186049;
Object method25633;
Object methodclosure25631;
Object localvariable26944;
Object localvariable26945;
Object localvariable26946;
Object array21605;
Object symbol35604;
Object send186050;
Object string28858;
Object string28859;
Object smallint21622;
Object smallint21623;
Object info4071;
Object assign22810;
Object send186051;
Object localvariable26947;
Object array21606;
Object localvariable26948;
Object array21607;
Object send186052;
Object send186053;
Object string28860;
Object constant36121;
Object send186054;
Object string28861;
Object constant36122;
Object send186055;
Object send186056;
Object block12921;
Object send186057;
Object block12922;
Object send186058;
Object send186059;
Object assign22811;
Object send186060;
Object send186061;
Object send186062;
Object block12923;
Object send186063;
Object method25634;
Object symbol35616;
Object methodclosure25632;
Object instancevariable6062;
Object method25635;
Object string28862;
Object string28863;
Object smallint21624;
Object smallint21625;
Object info4072;
Object symbol35605;
Object methodclosure25633;
Object instancevariable6063;
Object method25636;
Object string28864;
Object string28865;
Object smallint21626;
Object smallint21627;
Object info4073;
Object symbol35613;
Object methodclosure25634;
Object send186064;
Object string28866;
Object string28867;
Object smallint21628;
Object smallint21629;
Object info4074;
Object method25637;
Object methodclosure25635;
Object localvariable26949;
Object array21608;
Object variable1600;
Object array21609;
Object symbol35614;
Object send186065;
Object string28868;
Object string28869;
Object smallint21630;
Object smallint21631;
Object info4075;
Object send186066;
Object block12924;
Object send186067;
Object send186068;
Object send186069;
Object block12925;
Object send186070;
Object send186071;
Object block12926;
Object send186072;
Object method25638;
Object methodclosure25636;
Object localvariable26950;
Object array21610;
Object send186073;
Object string28870;
Object string28871;
Object smallint21632;
Object smallint21633;
Object info4076;
Object send186074;
Object method25639;
Object methodclosure25637;
Object localvariable26951;
Object array21611;
Object symbol35618;
Object send186075;
Object string28872;
Object string28873;
Object smallint21634;
Object smallint21635;
Object info4077;
Object send186076;
Object method25640;
Object methodclosure25638;
Object method25641;
Object string28874;
Object string28875;
Object smallint21636;
Object smallint21637;
Object info4078;
Object methodclosure25639;
Object localvariable26952;
Object array21612;
Object assign22812;
Object method25642;
Object string28876;
Object string28877;
Object smallint21638;
Object smallint21639;
Object info4079;
Object symbol35603;
Object methodclosure25640;
Object instancevariable6064;
Object method25643;
Object string28878;
Object string28879;
Object smallint21640;
Object smallint21641;
Object info4080;
Object methodclosure25641;
Object send186077;
Object string28880;
Object string28881;
Object smallint21642;
Object smallint21643;
Object info4081;
Object symbol36067;
Object send186078;
Object send186079;
Object method25644;
Object symbol35611;
Object methodclosure25642;
Object localvariable26953;
Object array21613;
Object send186080;
Object string28882;
Object string28883;
Object smallint21644;
Object smallint21645;
Object info4082;
Object assign22813;
Object send186081;
Object send186082;
Object send186083;
Object send186084;
Object block12927;
Object block12928;
Object send186085;
Object method25645;
Object methodclosure25643;
Object send186086;
Object string28884;
Object string28885;
Object smallint21646;
Object smallint21647;
Object info4083;
Object method25646;
Object symbol35601;
Object methodclosure25644;
Object classreference4865;
Object classreference4866;
Object classreference4867;
Object localvariable26954;
Object array21614;
Object assign22814;
Object send186087;
Object string28886;
Object string28887;
Object smallint21648;
Object smallint21649;
Object info4084;
Object assign22815;
Object smallint21650;
Object constant36123;
Object assign22816;
Object send186088;
Object method25647;
Object methodclosure25645;
Object smallint21651;
Object constant36124;
Object assign22817;
Object method25648;
Object string28888;
Object string28889;
Object smallint21652;
Object smallint21653;
Object info4085;
Object methodclosure25646;
Object classreference4868;
Object classreference4869;
Object classreference4870;

void SCParserTest_create_ast() {
objectlayout7501 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
instancevariable5974 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout7501)->values[0] = instancevariable5974;
instancevariable5975 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout7501)->values[1] = instancevariable5975;
instancevariable5976 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout7501)->values[2] = instancevariable5976;
instancevariable5977 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout7501)->values[3] = instancevariable5977;
instancevariable5978 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout7501)->values[4] = instancevariable5978;
instancevariable5979 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout7501)->values[5] = instancevariable5979;
symbol35503 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout7502 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable5980 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout7502)->values[0] = instancevariable5980;
class4027 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7502, objectlayout7501);
((Type_Class)class4027)->name = (Type_Symbol)symbol35503;
metaclass4027 = (Object)HEADER(class4027);
objectlayout7503 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7503)->values[0] = instancevariable5974;
((Type_Array)objectlayout7503)->values[1] = instancevariable5975;
((Type_Array)objectlayout7503)->values[2] = instancevariable5976;
((Type_Array)objectlayout7503)->values[3] = instancevariable5977;
((Type_Array)objectlayout7503)->values[4] = instancevariable5978;
symbol35609 = (Object)new_Type_Symbol_cached(L"Type");
class4028 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7503);
((Type_Class)class4028)->name = (Type_Symbol)symbol35609;
metaclass4028 = (Object)HEADER(class4028);
objectlayout7504 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7504)->values[0] = instancevariable5974;
((Type_Array)objectlayout7504)->values[1] = instancevariable5975;
((Type_Array)objectlayout7504)->values[2] = instancevariable5976;
((Type_Array)objectlayout7504)->values[3] = instancevariable5977;
((Type_Array)objectlayout7504)->values[4] = instancevariable5978;
instancevariable5981 = (Object)new_AST_InstVariable(5, L"uidCounter");
((Type_Array)objectlayout7504)->values[5] = instancevariable5981;
symbol35676 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout7505 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable5982 = (Object)new_AST_InstVariable(0, L"sourceObject");
((Type_Array)objectlayout7505)->values[0] = instancevariable5982;
instancevariable5983 = (Object)new_AST_InstVariable(1, L"uid");
((Type_Array)objectlayout7505)->values[1] = instancevariable5983;
instancevariable5984 = (Object)new_AST_InstVariable(2, L"id");
((Type_Array)objectlayout7505)->values[2] = instancevariable5984;
class4029 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7505, objectlayout7504);
((Type_Class)class4029)->name = (Type_Symbol)symbol35676;
metaclass4029 = (Object)HEADER(class4029);
objectlayout7506 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7506)->values[0] = instancevariable5974;
((Type_Array)objectlayout7506)->values[1] = instancevariable5975;
((Type_Array)objectlayout7506)->values[2] = instancevariable5976;
((Type_Array)objectlayout7506)->values[3] = instancevariable5977;
((Type_Array)objectlayout7506)->values[4] = instancevariable5978;
((Type_Array)objectlayout7506)->values[5] = instancevariable5981;
symbol35867 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout7507 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7507)->values[0] = instancevariable5982;
((Type_Array)objectlayout7507)->values[1] = instancevariable5983;
((Type_Array)objectlayout7507)->values[2] = instancevariable5984;
instancevariable5985 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout7507)->values[3] = instancevariable5985;
instancevariable5986 = (Object)new_AST_InstVariable(4, L"scopeId");
((Type_Array)objectlayout7507)->values[4] = instancevariable5986;
instancevariable5987 = (Object)new_AST_InstVariable(5, L"localId");
((Type_Array)objectlayout7507)->values[5] = instancevariable5987;
class4030 = (Object)new_Class_withMeta((Object)class4029, objectlayout7507, objectlayout7506);
((Type_Class)class4030)->name = (Type_Symbol)symbol35867;
metaclass4030 = (Object)HEADER(class4030);
objectlayout7508 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7508)->values[0] = instancevariable5974;
((Type_Array)objectlayout7508)->values[1] = instancevariable5975;
((Type_Array)objectlayout7508)->values[2] = instancevariable5976;
((Type_Array)objectlayout7508)->values[3] = instancevariable5977;
((Type_Array)objectlayout7508)->values[4] = instancevariable5978;
((Type_Array)objectlayout7508)->values[5] = instancevariable5981;
symbol35615 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout7509 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7509)->values[0] = instancevariable5982;
((Type_Array)objectlayout7509)->values[1] = instancevariable5983;
((Type_Array)objectlayout7509)->values[2] = instancevariable5984;
((Type_Array)objectlayout7509)->values[3] = instancevariable5985;
((Type_Array)objectlayout7509)->values[4] = instancevariable5986;
((Type_Array)objectlayout7509)->values[5] = instancevariable5987;
class4031 = (Object)new_Class_withMeta((Object)class4030, objectlayout7509, objectlayout7508);
((Type_Class)class4031)->name = (Type_Symbol)symbol35615;
metaclass4031 = (Object)HEADER(class4031);
objectlayout7510 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7510)->values[0] = instancevariable5974;
((Type_Array)objectlayout7510)->values[1] = instancevariable5975;
((Type_Array)objectlayout7510)->values[2] = instancevariable5976;
((Type_Array)objectlayout7510)->values[3] = instancevariable5977;
((Type_Array)objectlayout7510)->values[4] = instancevariable5978;
((Type_Array)objectlayout7510)->values[5] = instancevariable5981;
symbol35719 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout7511 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout7511)->values[0] = instancevariable5982;
((Type_Array)objectlayout7511)->values[1] = instancevariable5983;
((Type_Array)objectlayout7511)->values[2] = instancevariable5984;
((Type_Array)objectlayout7511)->values[3] = instancevariable5985;
((Type_Array)objectlayout7511)->values[4] = instancevariable5986;
((Type_Array)objectlayout7511)->values[5] = instancevariable5987;
instancevariable5988 = (Object)new_AST_InstVariable(6, L"key");
((Type_Array)objectlayout7511)->values[6] = instancevariable5988;
class4032 = (Object)new_Class_withMeta((Object)class4030, objectlayout7511, objectlayout7510);
((Type_Class)class4032)->name = (Type_Symbol)symbol35719;
metaclass4032 = (Object)HEADER(class4032);
objectlayout7512 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7512)->values[0] = instancevariable5974;
((Type_Array)objectlayout7512)->values[1] = instancevariable5975;
((Type_Array)objectlayout7512)->values[2] = instancevariable5976;
((Type_Array)objectlayout7512)->values[3] = instancevariable5977;
((Type_Array)objectlayout7512)->values[4] = instancevariable5978;
symbol35650 = (Object)new_Type_Symbol_cached(L"RuntimeObject");
objectlayout7513 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable5989 = (Object)new_AST_InstVariable(0, L"code");
((Type_Array)objectlayout7513)->values[0] = instancevariable5989;
class4033 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7513, objectlayout7512);
((Type_Class)class4033)->name = (Type_Symbol)symbol35650;
metaclass4033 = (Object)HEADER(class4033);
objectlayout7514 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7514)->values[0] = instancevariable5974;
((Type_Array)objectlayout7514)->values[1] = instancevariable5975;
((Type_Array)objectlayout7514)->values[2] = instancevariable5976;
((Type_Array)objectlayout7514)->values[3] = instancevariable5977;
((Type_Array)objectlayout7514)->values[4] = instancevariable5978;
((Type_Array)objectlayout7514)->values[5] = instancevariable5979;
symbol35500 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout7515 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout7515)->values[0] = instancevariable5980;
instancevariable5990 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout7515)->values[1] = instancevariable5990;
class4034 = (Object)new_Class_withMeta((Object)class4027, objectlayout7515, objectlayout7514);
((Type_Class)class4034)->name = (Type_Symbol)symbol35500;
metaclass4034 = (Object)HEADER(class4034);
objectlayout7516 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7516)->values[0] = instancevariable5974;
((Type_Array)objectlayout7516)->values[1] = instancevariable5975;
((Type_Array)objectlayout7516)->values[2] = instancevariable5976;
((Type_Array)objectlayout7516)->values[3] = instancevariable5977;
((Type_Array)objectlayout7516)->values[4] = instancevariable5978;
symbol35583 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout7517 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable5991 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout7517)->values[0] = instancevariable5991;
instancevariable5992 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout7517)->values[1] = instancevariable5992;
instancevariable5993 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout7517)->values[2] = instancevariable5993;
class4035 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7517, objectlayout7516);
((Type_Class)class4035)->name = (Type_Symbol)symbol35583;
metaclass4035 = (Object)HEADER(class4035);
objectlayout7518 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7518)->values[0] = instancevariable5974;
((Type_Array)objectlayout7518)->values[1] = instancevariable5975;
((Type_Array)objectlayout7518)->values[2] = instancevariable5976;
((Type_Array)objectlayout7518)->values[3] = instancevariable5977;
((Type_Array)objectlayout7518)->values[4] = instancevariable5978;
symbol35832 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout7519 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable5994 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout7519)->values[0] = instancevariable5994;
instancevariable5995 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout7519)->values[1] = instancevariable5995;
class4036 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout7519, objectlayout7518);
((Type_Class)class4036)->name = (Type_Symbol)symbol35832;
metaclass4036 = (Object)HEADER(class4036);
objectlayout7520 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7520)->values[0] = instancevariable5974;
((Type_Array)objectlayout7520)->values[1] = instancevariable5975;
((Type_Array)objectlayout7520)->values[2] = instancevariable5976;
((Type_Array)objectlayout7520)->values[3] = instancevariable5977;
((Type_Array)objectlayout7520)->values[4] = instancevariable5978;
symbol35640 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout7521 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7521)->values[0] = instancevariable5994;
((Type_Array)objectlayout7521)->values[1] = instancevariable5995;
instancevariable5996 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout7521)->values[2] = instancevariable5996;
class4037 = (Object)new_Class_withMeta((Object)class4036, objectlayout7521, objectlayout7520);
((Type_Class)class4037)->name = (Type_Symbol)symbol35640;
metaclass4037 = (Object)HEADER(class4037);
objectlayout7522 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7522)->values[0] = instancevariable5974;
((Type_Array)objectlayout7522)->values[1] = instancevariable5975;
((Type_Array)objectlayout7522)->values[2] = instancevariable5976;
((Type_Array)objectlayout7522)->values[3] = instancevariable5977;
((Type_Array)objectlayout7522)->values[4] = instancevariable5978;
symbol35840 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout7523 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7523)->values[0] = instancevariable5994;
((Type_Array)objectlayout7523)->values[1] = instancevariable5995;
instancevariable5997 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout7523)->values[2] = instancevariable5997;
instancevariable5998 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout7523)->values[3] = instancevariable5998;
class4038 = (Object)new_Class_withMeta((Object)class4036, objectlayout7523, objectlayout7522);
((Type_Class)class4038)->name = (Type_Symbol)symbol35840;
metaclass4038 = (Object)HEADER(class4038);
objectlayout7524 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7524)->values[0] = instancevariable5974;
((Type_Array)objectlayout7524)->values[1] = instancevariable5975;
((Type_Array)objectlayout7524)->values[2] = instancevariable5976;
((Type_Array)objectlayout7524)->values[3] = instancevariable5977;
((Type_Array)objectlayout7524)->values[4] = instancevariable5978;
symbol35836 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout7525 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7525)->values[0] = instancevariable5994;
((Type_Array)objectlayout7525)->values[1] = instancevariable5995;
instancevariable5999 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout7525)->values[2] = instancevariable5999;
instancevariable6000 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout7525)->values[3] = instancevariable6000;
class4039 = (Object)new_Class_withMeta((Object)class4036, objectlayout7525, objectlayout7524);
((Type_Class)class4039)->name = (Type_Symbol)symbol35836;
metaclass4039 = (Object)HEADER(class4039);
objectlayout7526 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7526)->values[0] = instancevariable5974;
((Type_Array)objectlayout7526)->values[1] = instancevariable5975;
((Type_Array)objectlayout7526)->values[2] = instancevariable5976;
((Type_Array)objectlayout7526)->values[3] = instancevariable5977;
((Type_Array)objectlayout7526)->values[4] = instancevariable5978;
symbol35942 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class4040 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7526);
((Type_Class)class4040)->name = (Type_Symbol)symbol35942;
metaclass4040 = (Object)HEADER(class4040);
objectlayout7527 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7527)->values[0] = instancevariable5974;
((Type_Array)objectlayout7527)->values[1] = instancevariable5975;
((Type_Array)objectlayout7527)->values[2] = instancevariable5976;
((Type_Array)objectlayout7527)->values[3] = instancevariable5977;
((Type_Array)objectlayout7527)->values[4] = instancevariable5978;
symbol35937 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout7528 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable6001 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout7528)->values[0] = instancevariable6001;
class4041 = (Object)new_Class_withMeta((Object)class4040, objectlayout7528, objectlayout7527);
((Type_Class)class4041)->name = (Type_Symbol)symbol35937;
metaclass4041 = (Object)HEADER(class4041);
objectlayout7529 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7529)->values[0] = instancevariable5974;
((Type_Array)objectlayout7529)->values[1] = instancevariable5975;
((Type_Array)objectlayout7529)->values[2] = instancevariable5976;
((Type_Array)objectlayout7529)->values[3] = instancevariable5977;
((Type_Array)objectlayout7529)->values[4] = instancevariable5978;
symbol35849 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout7530 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7530)->values[0] = instancevariable5994;
((Type_Array)objectlayout7530)->values[1] = instancevariable5995;
instancevariable6002 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout7530)->values[2] = instancevariable6002;
instancevariable6003 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout7530)->values[3] = instancevariable6003;
class4042 = (Object)new_Class_withMeta((Object)class4036, objectlayout7530, objectlayout7529);
((Type_Class)class4042)->name = (Type_Symbol)symbol35849;
metaclass4042 = (Object)HEADER(class4042);
objectlayout7531 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7531)->values[0] = instancevariable5974;
((Type_Array)objectlayout7531)->values[1] = instancevariable5975;
((Type_Array)objectlayout7531)->values[2] = instancevariable5976;
((Type_Array)objectlayout7531)->values[3] = instancevariable5977;
((Type_Array)objectlayout7531)->values[4] = instancevariable5978;
symbol35938 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class4043 = (Object)new_Class_withMeta((Object)class4040, empty_object_layout, objectlayout7531);
((Type_Class)class4043)->name = (Type_Symbol)symbol35938;
metaclass4043 = (Object)HEADER(class4043);
objectlayout7532 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7532)->values[0] = instancevariable5974;
((Type_Array)objectlayout7532)->values[1] = instancevariable5975;
((Type_Array)objectlayout7532)->values[2] = instancevariable5976;
((Type_Array)objectlayout7532)->values[3] = instancevariable5977;
((Type_Array)objectlayout7532)->values[4] = instancevariable5978;
symbol35638 = (Object)new_Type_Symbol_cached(L"PEGTerminal");
objectlayout7533 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7533)->values[0] = instancevariable5994;
((Type_Array)objectlayout7533)->values[1] = instancevariable5995;
instancevariable6004 = (Object)new_AST_InstVariable(2, L"string");
((Type_Array)objectlayout7533)->values[2] = instancevariable6004;
class4044 = (Object)new_Class_withMeta((Object)class4036, objectlayout7533, objectlayout7532);
((Type_Class)class4044)->name = (Type_Symbol)symbol35638;
metaclass4044 = (Object)HEADER(class4044);
objectlayout7534 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7534)->values[0] = instancevariable5974;
((Type_Array)objectlayout7534)->values[1] = instancevariable5975;
((Type_Array)objectlayout7534)->values[2] = instancevariable5976;
((Type_Array)objectlayout7534)->values[3] = instancevariable5977;
((Type_Array)objectlayout7534)->values[4] = instancevariable5978;
symbol35663 = (Object)new_Type_Symbol_cached(L"Stream");
class4045 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7534);
((Type_Class)class4045)->name = (Type_Symbol)symbol35663;
metaclass4045 = (Object)HEADER(class4045);
objectlayout7535 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7535)->values[0] = instancevariable5974;
((Type_Array)objectlayout7535)->values[1] = instancevariable5975;
((Type_Array)objectlayout7535)->values[2] = instancevariable5976;
((Type_Array)objectlayout7535)->values[3] = instancevariable5977;
((Type_Array)objectlayout7535)->values[4] = instancevariable5978;
symbol35662 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout7536 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable6005 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout7536)->values[0] = instancevariable6005;
instancevariable6006 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout7536)->values[1] = instancevariable6006;
instancevariable6007 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout7536)->values[2] = instancevariable6007;
class4046 = (Object)new_Class_withMeta((Object)class4045, objectlayout7536, objectlayout7535);
((Type_Class)class4046)->name = (Type_Symbol)symbol35662;
metaclass4046 = (Object)HEADER(class4046);
objectlayout7537 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7537)->values[0] = instancevariable5974;
((Type_Array)objectlayout7537)->values[1] = instancevariable5975;
((Type_Array)objectlayout7537)->values[2] = instancevariable5976;
((Type_Array)objectlayout7537)->values[3] = instancevariable5977;
((Type_Array)objectlayout7537)->values[4] = instancevariable5978;
symbol35661 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout7538 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7538)->values[0] = instancevariable6005;
((Type_Array)objectlayout7538)->values[1] = instancevariable6006;
((Type_Array)objectlayout7538)->values[2] = instancevariable6007;
class4047 = (Object)new_Class_withMeta((Object)class4046, objectlayout7538, objectlayout7537);
((Type_Class)class4047)->name = (Type_Symbol)symbol35661;
metaclass4047 = (Object)HEADER(class4047);
objectlayout7539 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7539)->values[0] = instancevariable5974;
((Type_Array)objectlayout7539)->values[1] = instancevariable5975;
((Type_Array)objectlayout7539)->values[2] = instancevariable5976;
((Type_Array)objectlayout7539)->values[3] = instancevariable5977;
((Type_Array)objectlayout7539)->values[4] = instancevariable5978;
symbol35523 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout7540 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7540)->values[0] = instancevariable6005;
((Type_Array)objectlayout7540)->values[1] = instancevariable6006;
((Type_Array)objectlayout7540)->values[2] = instancevariable6007;
instancevariable6008 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout7540)->values[3] = instancevariable6008;
instancevariable6009 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout7540)->values[4] = instancevariable6009;
class4048 = (Object)new_Class_withMeta((Object)class4047, objectlayout7540, objectlayout7539);
((Type_Class)class4048)->name = (Type_Symbol)symbol35523;
metaclass4048 = (Object)HEADER(class4048);
objectlayout7541 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout7541)->values[0] = instancevariable5974;
((Type_Array)objectlayout7541)->values[1] = instancevariable5975;
((Type_Array)objectlayout7541)->values[2] = instancevariable5976;
((Type_Array)objectlayout7541)->values[3] = instancevariable5977;
((Type_Array)objectlayout7541)->values[4] = instancevariable5978;
instancevariable6010 = (Object)new_AST_InstVariable(5, L"separators");
((Type_Array)objectlayout7541)->values[5] = instancevariable6010;
instancevariable6011 = (Object)new_AST_InstVariable(6, L"separator");
((Type_Array)objectlayout7541)->values[6] = instancevariable6011;
symbol35590 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout7542 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7542)->values[0] = instancevariable5994;
((Type_Array)objectlayout7542)->values[1] = instancevariable5995;
instancevariable6012 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout7542)->values[2] = instancevariable6012;
instancevariable6013 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout7542)->values[3] = instancevariable6013;
instancevariable6014 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout7542)->values[4] = instancevariable6014;
instancevariable6015 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout7542)->values[5] = instancevariable6015;
class4049 = (Object)new_Class_withMeta((Object)class4036, objectlayout7542, objectlayout7541);
((Type_Class)class4049)->name = (Type_Symbol)symbol35590;
metaclass4049 = (Object)HEADER(class4049);
objectlayout7543 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7543)->values[0] = instancevariable5974;
((Type_Array)objectlayout7543)->values[1] = instancevariable5975;
((Type_Array)objectlayout7543)->values[2] = instancevariable5976;
((Type_Array)objectlayout7543)->values[3] = instancevariable5977;
((Type_Array)objectlayout7543)->values[4] = instancevariable5978;
symbol35635 = (Object)new_Type_Symbol_cached(L"PEGRange");
objectlayout7544 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7544)->values[0] = instancevariable5994;
((Type_Array)objectlayout7544)->values[1] = instancevariable5995;
instancevariable6016 = (Object)new_AST_InstVariable(2, L"start");
((Type_Array)objectlayout7544)->values[2] = instancevariable6016;
instancevariable6017 = (Object)new_AST_InstVariable(3, L"stop");
((Type_Array)objectlayout7544)->values[3] = instancevariable6017;
class4050 = (Object)new_Class_withMeta((Object)class4036, objectlayout7544, objectlayout7543);
((Type_Class)class4050)->name = (Type_Symbol)symbol35635;
metaclass4050 = (Object)HEADER(class4050);
objectlayout7545 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7545)->values[0] = instancevariable5974;
((Type_Array)objectlayout7545)->values[1] = instancevariable5975;
((Type_Array)objectlayout7545)->values[2] = instancevariable5976;
((Type_Array)objectlayout7545)->values[3] = instancevariable5977;
((Type_Array)objectlayout7545)->values[4] = instancevariable5978;
symbol35847 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout7546 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7546)->values[0] = instancevariable5994;
((Type_Array)objectlayout7546)->values[1] = instancevariable5995;
((Type_Array)objectlayout7546)->values[2] = instancevariable5999;
((Type_Array)objectlayout7546)->values[3] = instancevariable6000;
class4051 = (Object)new_Class_withMeta((Object)class4039, objectlayout7546, objectlayout7545);
((Type_Class)class4051)->name = (Type_Symbol)symbol35847;
metaclass4051 = (Object)HEADER(class4051);
objectlayout7547 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7547)->values[0] = instancevariable5974;
((Type_Array)objectlayout7547)->values[1] = instancevariable5975;
((Type_Array)objectlayout7547)->values[2] = instancevariable5976;
((Type_Array)objectlayout7547)->values[3] = instancevariable5977;
((Type_Array)objectlayout7547)->values[4] = instancevariable5978;
symbol35875 = (Object)new_Type_Symbol_cached(L"PEGNotExpression");
objectlayout7548 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7548)->values[0] = instancevariable5994;
((Type_Array)objectlayout7548)->values[1] = instancevariable5995;
instancevariable6018 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout7548)->values[2] = instancevariable6018;
class4052 = (Object)new_Class_withMeta((Object)class4036, objectlayout7548, objectlayout7547);
((Type_Class)class4052)->name = (Type_Symbol)symbol35875;
metaclass4052 = (Object)HEADER(class4052);
objectlayout7549 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7549)->values[0] = instancevariable5974;
((Type_Array)objectlayout7549)->values[1] = instancevariable5975;
((Type_Array)objectlayout7549)->values[2] = instancevariable5976;
((Type_Array)objectlayout7549)->values[3] = instancevariable5977;
((Type_Array)objectlayout7549)->values[4] = instancevariable5978;
((Type_Array)objectlayout7549)->values[5] = instancevariable5981;
symbol35730 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout7550 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7550)->values[0] = instancevariable5982;
((Type_Array)objectlayout7550)->values[1] = instancevariable5983;
((Type_Array)objectlayout7550)->values[2] = instancevariable5984;
instancevariable6019 = (Object)new_AST_InstVariable(3, L"selector");
((Type_Array)objectlayout7550)->values[3] = instancevariable6019;
class4053 = (Object)new_Class_withMeta((Object)class4029, objectlayout7550, objectlayout7549);
((Type_Class)class4053)->name = (Type_Symbol)symbol35730;
metaclass4053 = (Object)HEADER(class4053);
objectlayout7551 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7551)->values[0] = instancevariable5974;
((Type_Array)objectlayout7551)->values[1] = instancevariable5975;
((Type_Array)objectlayout7551)->values[2] = instancevariable5976;
((Type_Array)objectlayout7551)->values[3] = instancevariable5977;
((Type_Array)objectlayout7551)->values[4] = instancevariable5978;
((Type_Array)objectlayout7551)->values[5] = instancevariable5981;
symbol35558 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout7552 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7552)->values[0] = instancevariable5982;
((Type_Array)objectlayout7552)->values[1] = instancevariable5983;
((Type_Array)objectlayout7552)->values[2] = instancevariable5984;
((Type_Array)objectlayout7552)->values[3] = instancevariable6019;
class4054 = (Object)new_Class_withMeta((Object)class4053, objectlayout7552, objectlayout7551);
((Type_Class)class4054)->name = (Type_Symbol)symbol35558;
metaclass4054 = (Object)HEADER(class4054);
objectlayout7553 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7553)->values[0] = instancevariable5974;
((Type_Array)objectlayout7553)->values[1] = instancevariable5975;
((Type_Array)objectlayout7553)->values[2] = instancevariable5976;
((Type_Array)objectlayout7553)->values[3] = instancevariable5977;
((Type_Array)objectlayout7553)->values[4] = instancevariable5978;
((Type_Array)objectlayout7553)->values[5] = instancevariable5981;
symbol35540 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout7554 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7554)->values[0] = instancevariable5982;
((Type_Array)objectlayout7554)->values[1] = instancevariable5983;
((Type_Array)objectlayout7554)->values[2] = instancevariable5984;
((Type_Array)objectlayout7554)->values[3] = instancevariable6019;
instancevariable6020 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout7554)->values[4] = instancevariable6020;
class4055 = (Object)new_Class_withMeta((Object)class4054, objectlayout7554, objectlayout7553);
((Type_Class)class4055)->name = (Type_Symbol)symbol35540;
metaclass4055 = (Object)HEADER(class4055);
objectlayout7555 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7555)->values[0] = instancevariable5974;
((Type_Array)objectlayout7555)->values[1] = instancevariable5975;
((Type_Array)objectlayout7555)->values[2] = instancevariable5976;
((Type_Array)objectlayout7555)->values[3] = instancevariable5977;
((Type_Array)objectlayout7555)->values[4] = instancevariable5978;
((Type_Array)objectlayout7555)->values[5] = instancevariable5981;
symbol35675 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout7556 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7556)->values[0] = instancevariable5982;
((Type_Array)objectlayout7556)->values[1] = instancevariable5983;
((Type_Array)objectlayout7556)->values[2] = instancevariable5984;
class4056 = (Object)new_Class_withMeta((Object)class4029, objectlayout7556, objectlayout7555);
((Type_Class)class4056)->name = (Type_Symbol)symbol35675;
metaclass4056 = (Object)HEADER(class4056);
objectlayout7557 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7557)->values[0] = instancevariable5974;
((Type_Array)objectlayout7557)->values[1] = instancevariable5975;
((Type_Array)objectlayout7557)->values[2] = instancevariable5976;
((Type_Array)objectlayout7557)->values[3] = instancevariable5977;
((Type_Array)objectlayout7557)->values[4] = instancevariable5978;
((Type_Array)objectlayout7557)->values[5] = instancevariable5981;
symbol35529 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout7558 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7558)->values[0] = instancevariable5982;
((Type_Array)objectlayout7558)->values[1] = instancevariable5983;
((Type_Array)objectlayout7558)->values[2] = instancevariable5984;
instancevariable6021 = (Object)new_AST_InstVariable(3, L"number");
((Type_Array)objectlayout7558)->values[3] = instancevariable6021;
instancevariable6022 = (Object)new_AST_InstVariable(4, L"base");
((Type_Array)objectlayout7558)->values[4] = instancevariable6022;
class4057 = (Object)new_Class_withMeta((Object)class4056, objectlayout7558, objectlayout7557);
((Type_Class)class4057)->name = (Type_Symbol)symbol35529;
metaclass4057 = (Object)HEADER(class4057);
objectlayout7559 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7559)->values[0] = instancevariable5974;
((Type_Array)objectlayout7559)->values[1] = instancevariable5975;
((Type_Array)objectlayout7559)->values[2] = instancevariable5976;
((Type_Array)objectlayout7559)->values[3] = instancevariable5977;
((Type_Array)objectlayout7559)->values[4] = instancevariable5978;
((Type_Array)objectlayout7559)->values[5] = instancevariable5981;
symbol35729 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout7560 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7560)->values[0] = instancevariable5982;
((Type_Array)objectlayout7560)->values[1] = instancevariable5983;
((Type_Array)objectlayout7560)->values[2] = instancevariable5984;
((Type_Array)objectlayout7560)->values[3] = instancevariable6019;
class4058 = (Object)new_Class_withMeta((Object)class4053, objectlayout7560, objectlayout7559);
((Type_Class)class4058)->name = (Type_Symbol)symbol35729;
metaclass4058 = (Object)HEADER(class4058);
objectlayout7561 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7561)->values[0] = instancevariable5974;
((Type_Array)objectlayout7561)->values[1] = instancevariable5975;
((Type_Array)objectlayout7561)->values[2] = instancevariable5976;
((Type_Array)objectlayout7561)->values[3] = instancevariable5977;
((Type_Array)objectlayout7561)->values[4] = instancevariable5978;
((Type_Array)objectlayout7561)->values[5] = instancevariable5981;
symbol35586 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout7562 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7562)->values[0] = instancevariable5982;
((Type_Array)objectlayout7562)->values[1] = instancevariable5983;
((Type_Array)objectlayout7562)->values[2] = instancevariable5984;
((Type_Array)objectlayout7562)->values[3] = instancevariable6019;
instancevariable6023 = (Object)new_AST_InstVariable(4, L"keywords");
((Type_Array)objectlayout7562)->values[4] = instancevariable6023;
class4059 = (Object)new_Class_withMeta((Object)class4053, objectlayout7562, objectlayout7561);
((Type_Class)class4059)->name = (Type_Symbol)symbol35586;
metaclass4059 = (Object)HEADER(class4059);
objectlayout7563 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7563)->values[0] = instancevariable5974;
((Type_Array)objectlayout7563)->values[1] = instancevariable5975;
((Type_Array)objectlayout7563)->values[2] = instancevariable5976;
((Type_Array)objectlayout7563)->values[3] = instancevariable5977;
((Type_Array)objectlayout7563)->values[4] = instancevariable5978;
((Type_Array)objectlayout7563)->values[5] = instancevariable5981;
symbol35577 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout7564 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7564)->values[0] = instancevariable5982;
((Type_Array)objectlayout7564)->values[1] = instancevariable5983;
((Type_Array)objectlayout7564)->values[2] = instancevariable5984;
((Type_Array)objectlayout7564)->values[3] = instancevariable6019;
((Type_Array)objectlayout7564)->values[4] = instancevariable6023;
instancevariable6024 = (Object)new_AST_InstVariable(5, L"arguments");
((Type_Array)objectlayout7564)->values[5] = instancevariable6024;
class4060 = (Object)new_Class_withMeta((Object)class4059, objectlayout7564, objectlayout7563);
((Type_Class)class4060)->name = (Type_Symbol)symbol35577;
metaclass4060 = (Object)HEADER(class4060);
objectlayout7565 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7565)->values[0] = instancevariable5974;
((Type_Array)objectlayout7565)->values[1] = instancevariable5975;
((Type_Array)objectlayout7565)->values[2] = instancevariable5976;
((Type_Array)objectlayout7565)->values[3] = instancevariable5977;
((Type_Array)objectlayout7565)->values[4] = instancevariable5978;
((Type_Array)objectlayout7565)->values[5] = instancevariable5981;
symbol35553 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout7566 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7566)->values[0] = instancevariable5982;
((Type_Array)objectlayout7566)->values[1] = instancevariable5983;
((Type_Array)objectlayout7566)->values[2] = instancevariable5984;
((Type_Array)objectlayout7566)->values[3] = instancevariable6019;
((Type_Array)objectlayout7566)->values[4] = instancevariable6023;
instancevariable6025 = (Object)new_AST_InstVariable(5, L"parameters");
((Type_Array)objectlayout7566)->values[5] = instancevariable6025;
class4061 = (Object)new_Class_withMeta((Object)class4059, objectlayout7566, objectlayout7565);
((Type_Class)class4061)->name = (Type_Symbol)symbol35553;
metaclass4061 = (Object)HEADER(class4061);
objectlayout7567 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7567)->values[0] = instancevariable5974;
((Type_Array)objectlayout7567)->values[1] = instancevariable5975;
((Type_Array)objectlayout7567)->values[2] = instancevariable5976;
((Type_Array)objectlayout7567)->values[3] = instancevariable5977;
((Type_Array)objectlayout7567)->values[4] = instancevariable5978;
((Type_Array)objectlayout7567)->values[5] = instancevariable5981;
symbol35597 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout7568 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7568)->values[0] = instancevariable5982;
((Type_Array)objectlayout7568)->values[1] = instancevariable5983;
((Type_Array)objectlayout7568)->values[2] = instancevariable5984;
instancevariable6026 = (Object)new_AST_InstVariable(3, L"char");
((Type_Array)objectlayout7568)->values[3] = instancevariable6026;
class4062 = (Object)new_Class_withMeta((Object)class4056, objectlayout7568, objectlayout7567);
((Type_Class)class4062)->name = (Type_Symbol)symbol35597;
metaclass4062 = (Object)HEADER(class4062);
objectlayout7569 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7569)->values[0] = instancevariable5974;
((Type_Array)objectlayout7569)->values[1] = instancevariable5975;
((Type_Array)objectlayout7569)->values[2] = instancevariable5976;
((Type_Array)objectlayout7569)->values[3] = instancevariable5977;
((Type_Array)objectlayout7569)->values[4] = instancevariable5978;
((Type_Array)objectlayout7569)->values[5] = instancevariable5981;
symbol35570 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout7570 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7570)->values[0] = instancevariable5982;
((Type_Array)objectlayout7570)->values[1] = instancevariable5983;
((Type_Array)objectlayout7570)->values[2] = instancevariable5984;
class4063 = (Object)new_Class_withMeta((Object)class4029, objectlayout7570, objectlayout7569);
((Type_Class)class4063)->name = (Type_Symbol)symbol35570;
metaclass4063 = (Object)HEADER(class4063);
objectlayout7571 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7571)->values[0] = instancevariable5974;
((Type_Array)objectlayout7571)->values[1] = instancevariable5975;
((Type_Array)objectlayout7571)->values[2] = instancevariable5976;
((Type_Array)objectlayout7571)->values[3] = instancevariable5977;
((Type_Array)objectlayout7571)->values[4] = instancevariable5978;
((Type_Array)objectlayout7571)->values[5] = instancevariable5981;
symbol35578 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout7572 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7572)->values[0] = instancevariable5982;
((Type_Array)objectlayout7572)->values[1] = instancevariable5983;
((Type_Array)objectlayout7572)->values[2] = instancevariable5984;
((Type_Array)objectlayout7572)->values[3] = instancevariable6019;
class4064 = (Object)new_Class_withMeta((Object)class4054, objectlayout7572, objectlayout7571);
((Type_Class)class4064)->name = (Type_Symbol)symbol35578;
metaclass4064 = (Object)HEADER(class4064);
objectlayout7573 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7573)->values[0] = instancevariable5974;
((Type_Array)objectlayout7573)->values[1] = instancevariable5975;
((Type_Array)objectlayout7573)->values[2] = instancevariable5976;
((Type_Array)objectlayout7573)->values[3] = instancevariable5977;
((Type_Array)objectlayout7573)->values[4] = instancevariable5978;
((Type_Array)objectlayout7573)->values[5] = instancevariable5981;
symbol35535 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout7574 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7574)->values[0] = instancevariable5982;
((Type_Array)objectlayout7574)->values[1] = instancevariable5983;
((Type_Array)objectlayout7574)->values[2] = instancevariable5984;
instancevariable6027 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout7574)->values[3] = instancevariable6027;
instancevariable6028 = (Object)new_AST_InstVariable(4, L"type");
((Type_Array)objectlayout7574)->values[4] = instancevariable6028;
class4065 = (Object)new_Class_withMeta((Object)class4029, objectlayout7574, objectlayout7573);
((Type_Class)class4065)->name = (Type_Symbol)symbol35535;
metaclass4065 = (Object)HEADER(class4065);
objectlayout7575 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7575)->values[0] = instancevariable5974;
((Type_Array)objectlayout7575)->values[1] = instancevariable5975;
((Type_Array)objectlayout7575)->values[2] = instancevariable5976;
((Type_Array)objectlayout7575)->values[3] = instancevariable5977;
((Type_Array)objectlayout7575)->values[4] = instancevariable5978;
((Type_Array)objectlayout7575)->values[5] = instancevariable5981;
symbol35571 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout7576 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7576)->values[0] = instancevariable5982;
((Type_Array)objectlayout7576)->values[1] = instancevariable5983;
((Type_Array)objectlayout7576)->values[2] = instancevariable5984;
class4066 = (Object)new_Class_withMeta((Object)class4029, objectlayout7576, objectlayout7575);
((Type_Class)class4066)->name = (Type_Symbol)symbol35571;
metaclass4066 = (Object)HEADER(class4066);
objectlayout7577 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7577)->values[0] = instancevariable5974;
((Type_Array)objectlayout7577)->values[1] = instancevariable5975;
((Type_Array)objectlayout7577)->values[2] = instancevariable5976;
((Type_Array)objectlayout7577)->values[3] = instancevariable5977;
((Type_Array)objectlayout7577)->values[4] = instancevariable5978;
((Type_Array)objectlayout7577)->values[5] = instancevariable5981;
symbol35771 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout7578 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7578)->values[0] = instancevariable5982;
((Type_Array)objectlayout7578)->values[1] = instancevariable5983;
((Type_Array)objectlayout7578)->values[2] = instancevariable5984;
((Type_Array)objectlayout7578)->values[3] = instancevariable6019;
class4067 = (Object)new_Class_withMeta((Object)class4054, objectlayout7578, objectlayout7577);
((Type_Class)class4067)->name = (Type_Symbol)symbol35771;
metaclass4067 = (Object)HEADER(class4067);
objectlayout7579 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7579)->values[0] = instancevariable5974;
((Type_Array)objectlayout7579)->values[1] = instancevariable5975;
((Type_Array)objectlayout7579)->values[2] = instancevariable5976;
((Type_Array)objectlayout7579)->values[3] = instancevariable5977;
((Type_Array)objectlayout7579)->values[4] = instancevariable5978;
((Type_Array)objectlayout7579)->values[5] = instancevariable5981;
symbol35544 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout7580 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout7580)->values[0] = instancevariable5982;
((Type_Array)objectlayout7580)->values[1] = instancevariable5983;
((Type_Array)objectlayout7580)->values[2] = instancevariable5984;
instancevariable6029 = (Object)new_AST_InstVariable(3, L"message");
((Type_Array)objectlayout7580)->values[3] = instancevariable6029;
instancevariable6030 = (Object)new_AST_InstVariable(4, L"annotations");
((Type_Array)objectlayout7580)->values[4] = instancevariable6030;
instancevariable6031 = (Object)new_AST_InstVariable(5, L"temporaries");
((Type_Array)objectlayout7580)->values[5] = instancevariable6031;
instancevariable6032 = (Object)new_AST_InstVariable(6, L"statements");
((Type_Array)objectlayout7580)->values[6] = instancevariable6032;
class4068 = (Object)new_Class_withMeta((Object)class4029, objectlayout7580, objectlayout7579);
((Type_Class)class4068)->name = (Type_Symbol)symbol35544;
metaclass4068 = (Object)HEADER(class4068);
objectlayout7581 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7581)->values[0] = instancevariable5974;
((Type_Array)objectlayout7581)->values[1] = instancevariable5975;
((Type_Array)objectlayout7581)->values[2] = instancevariable5976;
((Type_Array)objectlayout7581)->values[3] = instancevariable5977;
((Type_Array)objectlayout7581)->values[4] = instancevariable5978;
((Type_Array)objectlayout7581)->values[5] = instancevariable5981;
symbol35724 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout7582 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout7582)->values[0] = instancevariable5982;
((Type_Array)objectlayout7582)->values[1] = instancevariable5983;
((Type_Array)objectlayout7582)->values[2] = instancevariable5984;
class4069 = (Object)new_Class_withMeta((Object)class4029, objectlayout7582, objectlayout7581);
((Type_Class)class4069)->name = (Type_Symbol)symbol35724;
metaclass4069 = (Object)HEADER(class4069);
objectlayout7583 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7583)->values[0] = instancevariable5974;
((Type_Array)objectlayout7583)->values[1] = instancevariable5975;
((Type_Array)objectlayout7583)->values[2] = instancevariable5976;
((Type_Array)objectlayout7583)->values[3] = instancevariable5977;
((Type_Array)objectlayout7583)->values[4] = instancevariable5978;
((Type_Array)objectlayout7583)->values[5] = instancevariable5981;
symbol35525 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout7584 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7584)->values[0] = instancevariable5982;
((Type_Array)objectlayout7584)->values[1] = instancevariable5983;
((Type_Array)objectlayout7584)->values[2] = instancevariable5984;
instancevariable6033 = (Object)new_AST_InstVariable(3, L"literals");
((Type_Array)objectlayout7584)->values[3] = instancevariable6033;
class4070 = (Object)new_Class_withMeta((Object)class4056, objectlayout7584, objectlayout7583);
((Type_Class)class4070)->name = (Type_Symbol)symbol35525;
metaclass4070 = (Object)HEADER(class4070);
objectlayout7585 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7585)->values[0] = instancevariable5974;
((Type_Array)objectlayout7585)->values[1] = instancevariable5975;
((Type_Array)objectlayout7585)->values[2] = instancevariable5976;
((Type_Array)objectlayout7585)->values[3] = instancevariable5977;
((Type_Array)objectlayout7585)->values[4] = instancevariable5978;
((Type_Array)objectlayout7585)->values[5] = instancevariable5981;
symbol35556 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout7586 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7586)->values[0] = instancevariable5982;
((Type_Array)objectlayout7586)->values[1] = instancevariable5983;
((Type_Array)objectlayout7586)->values[2] = instancevariable5984;
instancevariable6034 = (Object)new_AST_InstVariable(3, L"variable");
((Type_Array)objectlayout7586)->values[3] = instancevariable6034;
instancevariable6035 = (Object)new_AST_InstVariable(4, L"expression");
((Type_Array)objectlayout7586)->values[4] = instancevariable6035;
class4071 = (Object)new_Class_withMeta((Object)class4069, objectlayout7586, objectlayout7585);
((Type_Class)class4071)->name = (Type_Symbol)symbol35556;
metaclass4071 = (Object)HEADER(class4071);
objectlayout7587 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7587)->values[0] = instancevariable5974;
((Type_Array)objectlayout7587)->values[1] = instancevariable5975;
((Type_Array)objectlayout7587)->values[2] = instancevariable5976;
((Type_Array)objectlayout7587)->values[3] = instancevariable5977;
((Type_Array)objectlayout7587)->values[4] = instancevariable5978;
((Type_Array)objectlayout7587)->values[5] = instancevariable5981;
symbol35537 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout7588 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7588)->values[0] = instancevariable5982;
((Type_Array)objectlayout7588)->values[1] = instancevariable5983;
((Type_Array)objectlayout7588)->values[2] = instancevariable5984;
instancevariable6036 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout7588)->values[3] = instancevariable6036;
instancevariable6037 = (Object)new_AST_InstVariable(4, L"cascades");
((Type_Array)objectlayout7588)->values[4] = instancevariable6037;
class4072 = (Object)new_Class_withMeta((Object)class4069, objectlayout7588, objectlayout7587);
((Type_Class)class4072)->name = (Type_Symbol)symbol35537;
metaclass4072 = (Object)HEADER(class4072);
objectlayout7589 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7589)->values[0] = instancevariable5974;
((Type_Array)objectlayout7589)->values[1] = instancevariable5975;
((Type_Array)objectlayout7589)->values[2] = instancevariable5976;
((Type_Array)objectlayout7589)->values[3] = instancevariable5977;
((Type_Array)objectlayout7589)->values[4] = instancevariable5978;
((Type_Array)objectlayout7589)->values[5] = instancevariable5981;
symbol35573 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout7590 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7590)->values[0] = instancevariable5982;
((Type_Array)objectlayout7590)->values[1] = instancevariable5983;
((Type_Array)objectlayout7590)->values[2] = instancevariable5984;
instancevariable6038 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout7590)->values[3] = instancevariable6038;
instancevariable6039 = (Object)new_AST_InstVariable(4, L"temporaries");
((Type_Array)objectlayout7590)->values[4] = instancevariable6039;
instancevariable6040 = (Object)new_AST_InstVariable(5, L"statements");
((Type_Array)objectlayout7590)->values[5] = instancevariable6040;
class4073 = (Object)new_Class_withMeta((Object)class4029, objectlayout7590, objectlayout7589);
((Type_Class)class4073)->name = (Type_Symbol)symbol35573;
metaclass4073 = (Object)HEADER(class4073);
objectlayout7591 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7591)->values[0] = instancevariable5974;
((Type_Array)objectlayout7591)->values[1] = instancevariable5975;
((Type_Array)objectlayout7591)->values[2] = instancevariable5976;
((Type_Array)objectlayout7591)->values[3] = instancevariable5977;
((Type_Array)objectlayout7591)->values[4] = instancevariable5978;
((Type_Array)objectlayout7591)->values[5] = instancevariable5981;
symbol35546 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout7592 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7592)->values[0] = instancevariable5982;
((Type_Array)objectlayout7592)->values[1] = instancevariable5983;
((Type_Array)objectlayout7592)->values[2] = instancevariable5984;
((Type_Array)objectlayout7592)->values[3] = instancevariable6019;
instancevariable6041 = (Object)new_AST_InstVariable(4, L"parameter");
((Type_Array)objectlayout7592)->values[4] = instancevariable6041;
class4074 = (Object)new_Class_withMeta((Object)class4058, objectlayout7592, objectlayout7591);
((Type_Class)class4074)->name = (Type_Symbol)symbol35546;
metaclass4074 = (Object)HEADER(class4074);
objectlayout7593 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7593)->values[0] = instancevariable5974;
((Type_Array)objectlayout7593)->values[1] = instancevariable5975;
((Type_Array)objectlayout7593)->values[2] = instancevariable5976;
((Type_Array)objectlayout7593)->values[3] = instancevariable5977;
((Type_Array)objectlayout7593)->values[4] = instancevariable5978;
((Type_Array)objectlayout7593)->values[5] = instancevariable5981;
symbol35530 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout7594 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7594)->values[0] = instancevariable5982;
((Type_Array)objectlayout7594)->values[1] = instancevariable5983;
((Type_Array)objectlayout7594)->values[2] = instancevariable5984;
instancevariable6042 = (Object)new_AST_InstVariable(3, L"symbol");
((Type_Array)objectlayout7594)->values[3] = instancevariable6042;
class4075 = (Object)new_Class_withMeta((Object)class4056, objectlayout7594, objectlayout7593);
((Type_Class)class4075)->name = (Type_Symbol)symbol35530;
metaclass4075 = (Object)HEADER(class4075);
objectlayout7595 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7595)->values[0] = instancevariable5974;
((Type_Array)objectlayout7595)->values[1] = instancevariable5975;
((Type_Array)objectlayout7595)->values[2] = instancevariable5976;
((Type_Array)objectlayout7595)->values[3] = instancevariable5977;
((Type_Array)objectlayout7595)->values[4] = instancevariable5978;
((Type_Array)objectlayout7595)->values[5] = instancevariable5981;
symbol35538 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout7596 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7596)->values[0] = instancevariable5982;
((Type_Array)objectlayout7596)->values[1] = instancevariable5983;
((Type_Array)objectlayout7596)->values[2] = instancevariable5984;
((Type_Array)objectlayout7596)->values[3] = instancevariable6019;
instancevariable6043 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout7596)->values[4] = instancevariable6043;
instancevariable6044 = (Object)new_AST_InstVariable(5, L"argument");
((Type_Array)objectlayout7596)->values[5] = instancevariable6044;
class4076 = (Object)new_Class_withMeta((Object)class4058, objectlayout7596, objectlayout7595);
((Type_Class)class4076)->name = (Type_Symbol)symbol35538;
metaclass4076 = (Object)HEADER(class4076);
objectlayout7597 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7597)->values[0] = instancevariable5974;
((Type_Array)objectlayout7597)->values[1] = instancevariable5975;
((Type_Array)objectlayout7597)->values[2] = instancevariable5976;
((Type_Array)objectlayout7597)->values[3] = instancevariable5977;
((Type_Array)objectlayout7597)->values[4] = instancevariable5978;
((Type_Array)objectlayout7597)->values[5] = instancevariable5981;
symbol35566 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout7598 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7598)->values[0] = instancevariable5982;
((Type_Array)objectlayout7598)->values[1] = instancevariable5983;
((Type_Array)objectlayout7598)->values[2] = instancevariable5984;
instancevariable6045 = (Object)new_AST_InstVariable(3, L"expression");
((Type_Array)objectlayout7598)->values[3] = instancevariable6045;
class4077 = (Object)new_Class_withMeta((Object)class4069, objectlayout7598, objectlayout7597);
((Type_Class)class4077)->name = (Type_Symbol)symbol35566;
metaclass4077 = (Object)HEADER(class4077);
objectlayout7599 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7599)->values[0] = instancevariable5974;
((Type_Array)objectlayout7599)->values[1] = instancevariable5975;
((Type_Array)objectlayout7599)->values[2] = instancevariable5976;
((Type_Array)objectlayout7599)->values[3] = instancevariable5977;
((Type_Array)objectlayout7599)->values[4] = instancevariable5978;
((Type_Array)objectlayout7599)->values[5] = instancevariable5981;
symbol35531 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout7600 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7600)->values[0] = instancevariable5982;
((Type_Array)objectlayout7600)->values[1] = instancevariable5983;
((Type_Array)objectlayout7600)->values[2] = instancevariable5984;
instancevariable6046 = (Object)new_AST_InstVariable(3, L"string");
((Type_Array)objectlayout7600)->values[3] = instancevariable6046;
class4078 = (Object)new_Class_withMeta((Object)class4056, objectlayout7600, objectlayout7599);
((Type_Class)class4078)->name = (Type_Symbol)symbol35531;
metaclass4078 = (Object)HEADER(class4078);
objectlayout7601 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7601)->values[0] = instancevariable5974;
((Type_Array)objectlayout7601)->values[1] = instancevariable5975;
((Type_Array)objectlayout7601)->values[2] = instancevariable5976;
((Type_Array)objectlayout7601)->values[3] = instancevariable5977;
((Type_Array)objectlayout7601)->values[4] = instancevariable5978;
((Type_Array)objectlayout7601)->values[5] = instancevariable5981;
symbol35539 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout7602 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout7602)->values[0] = instancevariable5982;
((Type_Array)objectlayout7602)->values[1] = instancevariable5983;
((Type_Array)objectlayout7602)->values[2] = instancevariable5984;
((Type_Array)objectlayout7602)->values[3] = instancevariable6019;
((Type_Array)objectlayout7602)->values[4] = instancevariable6023;
instancevariable6047 = (Object)new_AST_InstVariable(5, L"receiver");
((Type_Array)objectlayout7602)->values[5] = instancevariable6047;
instancevariable6048 = (Object)new_AST_InstVariable(6, L"arguments");
((Type_Array)objectlayout7602)->values[6] = instancevariable6048;
class4079 = (Object)new_Class_withMeta((Object)class4059, objectlayout7602, objectlayout7601);
((Type_Class)class4079)->name = (Type_Symbol)symbol35539;
metaclass4079 = (Object)HEADER(class4079);
objectlayout7603 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout7603)->values[0] = instancevariable5974;
((Type_Array)objectlayout7603)->values[1] = instancevariable5975;
((Type_Array)objectlayout7603)->values[2] = instancevariable5976;
((Type_Array)objectlayout7603)->values[3] = instancevariable5977;
((Type_Array)objectlayout7603)->values[4] = instancevariable5978;
((Type_Array)objectlayout7603)->values[5] = instancevariable5981;
symbol35815 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout7604 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7604)->values[0] = instancevariable5982;
((Type_Array)objectlayout7604)->values[1] = instancevariable5983;
((Type_Array)objectlayout7604)->values[2] = instancevariable5984;
instancevariable6049 = (Object)new_AST_InstVariable(3, L"expressions");
((Type_Array)objectlayout7604)->values[3] = instancevariable6049;
class4080 = (Object)new_Class_withMeta((Object)class4069, objectlayout7604, objectlayout7603);
((Type_Class)class4080)->name = (Type_Symbol)symbol35815;
metaclass4080 = (Object)HEADER(class4080);
objectlayout7605 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7605)->values[0] = instancevariable5974;
((Type_Array)objectlayout7605)->values[1] = instancevariable5975;
((Type_Array)objectlayout7605)->values[2] = instancevariable5976;
((Type_Array)objectlayout7605)->values[3] = instancevariable5977;
((Type_Array)objectlayout7605)->values[4] = instancevariable5978;
symbol35689 = (Object)new_Type_Symbol_cached(L"Collection");
class4081 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout7605);
((Type_Class)class4081)->name = (Type_Symbol)symbol35689;
metaclass4081 = (Object)HEADER(class4081);
objectlayout7606 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7606)->values[0] = instancevariable5974;
((Type_Array)objectlayout7606)->values[1] = instancevariable5975;
((Type_Array)objectlayout7606)->values[2] = instancevariable5976;
((Type_Array)objectlayout7606)->values[3] = instancevariable5977;
((Type_Array)objectlayout7606)->values[4] = instancevariable5978;
symbol35671 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout7607 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable6050 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout7607)->values[0] = instancevariable6050;
instancevariable6051 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout7607)->values[1] = instancevariable6051;
instancevariable6052 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout7607)->values[2] = instancevariable6052;
class4082 = (Object)new_Class_withMeta((Object)class4081, objectlayout7607, objectlayout7606);
((Type_Class)class4082)->name = (Type_Symbol)symbol35671;
metaclass4082 = (Object)HEADER(class4082);
objectlayout7608 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7608)->values[0] = instancevariable5974;
((Type_Array)objectlayout7608)->values[1] = instancevariable5975;
((Type_Array)objectlayout7608)->values[2] = instancevariable5976;
((Type_Array)objectlayout7608)->values[3] = instancevariable5977;
((Type_Array)objectlayout7608)->values[4] = instancevariable5978;
symbol35917 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout7609 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable6053 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout7609)->values[0] = instancevariable6053;
instancevariable6054 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout7609)->values[1] = instancevariable6054;
class4083 = (Object)new_Class_withMeta((Object)class4081, objectlayout7609, objectlayout7608);
((Type_Class)class4083)->name = (Type_Symbol)symbol35917;
metaclass4083 = (Object)HEADER(class4083);
objectlayout7610 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7610)->values[0] = instancevariable5974;
((Type_Array)objectlayout7610)->values[1] = instancevariable5975;
((Type_Array)objectlayout7610)->values[2] = instancevariable5976;
((Type_Array)objectlayout7610)->values[3] = instancevariable5977;
((Type_Array)objectlayout7610)->values[4] = instancevariable5978;
symbol35688 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class4084 = (Object)new_Class_withMeta((Object)class4081, empty_object_layout, objectlayout7610);
((Type_Class)class4084)->name = (Type_Symbol)symbol35688;
metaclass4084 = (Object)HEADER(class4084);
objectlayout7611 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7611)->values[0] = instancevariable5974;
((Type_Array)objectlayout7611)->values[1] = instancevariable5975;
((Type_Array)objectlayout7611)->values[2] = instancevariable5976;
((Type_Array)objectlayout7611)->values[3] = instancevariable5977;
((Type_Array)objectlayout7611)->values[4] = instancevariable5978;
symbol35687 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class4085 = (Object)new_Class_withMeta((Object)class4084, empty_object_layout, objectlayout7611);
((Type_Class)class4085)->name = (Type_Symbol)symbol35687;
metaclass4085 = (Object)HEADER(class4085);
objectlayout7612 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7612)->values[0] = instancevariable5974;
((Type_Array)objectlayout7612)->values[1] = instancevariable5975;
((Type_Array)objectlayout7612)->values[2] = instancevariable5976;
((Type_Array)objectlayout7612)->values[3] = instancevariable5977;
((Type_Array)objectlayout7612)->values[4] = instancevariable5978;
symbol35534 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout7613 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable6055 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout7613)->values[0] = instancevariable6055;
instancevariable6056 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout7613)->values[1] = instancevariable6056;
instancevariable6057 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout7613)->values[2] = instancevariable6057;
class4086 = (Object)new_Class_withMeta((Object)class4084, objectlayout7613, objectlayout7612);
((Type_Class)class4086)->name = (Type_Symbol)symbol35534;
metaclass4086 = (Object)HEADER(class4086);
objectlayout7614 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout7614)->values[0] = instancevariable5974;
((Type_Array)objectlayout7614)->values[1] = instancevariable5975;
((Type_Array)objectlayout7614)->values[2] = instancevariable5976;
((Type_Array)objectlayout7614)->values[3] = instancevariable5977;
((Type_Array)objectlayout7614)->values[4] = instancevariable5978;
symbol35901 = (Object)new_Type_Symbol_cached(L"SortedCollection");
objectlayout7615 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout7615)->values[0] = instancevariable6055;
((Type_Array)objectlayout7615)->values[1] = instancevariable6056;
((Type_Array)objectlayout7615)->values[2] = instancevariable6057;
instancevariable6058 = (Object)new_AST_InstVariable(3, L"sortBlock");
((Type_Array)objectlayout7615)->values[3] = instancevariable6058;
class4087 = (Object)new_Class_withMeta((Object)class4086, objectlayout7615, objectlayout7614);
((Type_Class)class4087)->name = (Type_Symbol)symbol35901;
metaclass4087 = (Object)HEADER(class4087);
classreference4794 = (Object)new_Organization_ClassReference((Type_Class)class4027);
classreference4795 = (Object)new_Organization_ClassReference((Type_Class)Type_Nil_Class);

// Nil>>isNil
//isNil
// 	^ true
method25149 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
string27537 = (Object)new_Type_String(L"isNil");
string27538 = (Object)new_Type_String(L"isNil\n\t^ true");
smallint20396 = (Object)new_Type_SmallInt(-1);
smallint20397 = (Object)new_Type_SmallInt(-1);
info3586 = (Object)new_AST_Info((Type_String)string27538,(Type_String)string27537, (Type_SmallInt)smallint20396, (Type_SmallInt)smallint20397);
((AST_Method)method25149)->info = (AST_Info)info3586;
methodclosure25147 = (Object)new_Runtime_MethodClosure(method25149);
store_method((Type_Class)Type_Nil_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure25147);


// Nil>>ifNotNil:
//ifNotNil: aBlock
localvariable26380 = (Object)new_AST_Variable_named(L"aBlock");
array21136 = (Object)new_Type_Array_with(1, (Object)localvariable26380);
method25150 = (Object)new_AST_Method_with((Type_Array)array21136, (Type_Array)empty_Type_Array, 1, Self);
string27539 = (Object)new_Type_String(L"ifNotNil:");
string27540 = (Object)new_Type_String(L"ifNotNil: aBlock");
smallint20398 = (Object)new_Type_SmallInt(-1);
smallint20399 = (Object)new_Type_SmallInt(-1);
info3587 = (Object)new_AST_Info((Type_String)string27540,(Type_String)string27539, (Type_SmallInt)smallint20398, (Type_SmallInt)smallint20399);
((AST_Method)method25150)->info = (AST_Info)info3587;
symbol35519 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
methodclosure25148 = (Object)new_Runtime_MethodClosure(method25150);
store_method((Type_Class)Type_Nil_Class, (Type_Symbol)symbol35519, (Runtime_MethodClosure)methodclosure25148);


// Nil>>ifNil:
//ifNil: aBlock
// 	^ aBlock value
localvariable26381 = (Object)new_AST_Variable_named(L"aBlock");
array21137 = (Object)new_Type_Array_with(1, (Object)localvariable26381);
symbol35946 = (Object)new_Type_Symbol_cached(L"value");
// value
send182671 = (Object)new_AST_Send((Object)localvariable26381, (Object)symbol35946, 0);
string27541 = (Object)new_Type_String(L"ifNil:");
string27542 = (Object)new_Type_String(L"ifNil: aBlock\n\t^ aBlock value");
smallint20400 = (Object)new_Type_SmallInt(-1);
smallint20401 = (Object)new_Type_SmallInt(-1);
info3588 = (Object)new_AST_Info((Type_String)string27542,(Type_String)string27541, (Type_SmallInt)smallint20400, (Type_SmallInt)smallint20401);
((AST_Send)send182671)->info = (AST_Info)info3588;
method25151 = (Object)new_AST_Method_with((Type_Array)array21137, (Type_Array)empty_Type_Array, 1, send182671);
((AST_Method)method25151)->info = (AST_Info)info3588;
symbol35518 = (Object)new_Type_Symbol_cached(L"ifNil:");
methodclosure25149 = (Object)new_Runtime_MethodClosure(method25151);
store_method((Type_Class)Type_Nil_Class, (Type_Symbol)symbol35518, (Runtime_MethodClosure)methodclosure25149);

classreference4796 = (Object)new_Organization_ClassReference((Type_Class)Type_Symbol_Class);

// Symbol>>capitalized
//capitalized
// 	^ self asString capitalized asSymbol
// asString
send182672 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);
string27543 = (Object)new_Type_String(L"capitalized");
string27544 = (Object)new_Type_String(L"capitalized\n\t^ self asString capitalized asSymbol");
smallint20402 = (Object)new_Type_SmallInt(-1);
smallint20403 = (Object)new_Type_SmallInt(-1);
info3589 = (Object)new_AST_Info((Type_String)string27544,(Type_String)string27543, (Type_SmallInt)smallint20402, (Type_SmallInt)smallint20403);
((AST_Send)send182672)->info = (AST_Info)info3589;
symbol35643 = (Object)new_Type_Symbol_cached(L"capitalized");
// capitalized
send182673 = (Object)new_AST_Send((Object)send182672, (Object)symbol35643, 0);
((AST_Send)send182673)->info = (AST_Info)info3589;
// asSymbol
send182674 = (Object)new_AST_Send((Object)send182673, (Object)SMB_asSymbol, 0);
((AST_Send)send182674)->info = (AST_Info)info3589;
method25152 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182674);
((AST_Method)method25152)->info = (AST_Info)info3589;
methodclosure25150 = (Object)new_Runtime_MethodClosure(method25152);
store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol35643, (Runtime_MethodClosure)methodclosure25150);


// Symbol>>do:
//do: aBlock 
// 	"Refer to the comment in Collection|do:."
// 	1 to: self size do:
// 		[:index | aBlock value: (self at: index)]
localvariable26382 = (Object)new_AST_Variable_named(L"aBlock");
array21138 = (Object)new_Type_Array_with(1, (Object)localvariable26382);
smallint20404 = (Object)new_Type_SmallInt(1);
constant35475 = (Object)new_AST_Constant((Object)smallint20404);
symbol35647 = (Object)new_Type_Symbol_cached(L"to:do:");
// size
send182675 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27545 = (Object)new_Type_String(L"do:");
string27546 = (Object)new_Type_String(L"do: aBlock \n\t\"Refer to the comment in Collection|do:.\"\n\t1 to: self size do:\n\t\t[:index | aBlock value: (self at: index)]");
smallint20405 = (Object)new_Type_SmallInt(-1);
smallint20406 = (Object)new_Type_SmallInt(-1);
info3590 = (Object)new_AST_Info((Type_String)string27546,(Type_String)string27545, (Type_SmallInt)smallint20405, (Type_SmallInt)smallint20406);
((AST_Send)send182675)->info = (AST_Info)info3590;
localvariable26383 = (Object)new_AST_Variable_named(L"index");
array21139 = (Object)new_Type_Array_with(1, (Object)localvariable26383);
// at:
send182676 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26383);
((AST_Send)send182676)->info = (AST_Info)info3590;
// value:
send182677 = (Object)new_AST_Send((Object)localvariable26382, (Object)SMB_value_, 1, (Object)send182676);
((AST_Send)send182677)->info = (AST_Info)info3590;
block12607 = (Object)new_AST_Block_with((Type_Array)array21139, (Type_Array)empty_Type_Array, 1, 1, send182677);
// to:do:
send182678 = (Object)new_AST_Send((Object)constant35475, (Object)symbol35647, 2, (Object)send182675, (Object)block12607);
((AST_Send)send182678)->info = (AST_Info)info3590;
method25153 = (Object)new_AST_Method_with((Type_Array)array21138, (Type_Array)empty_Type_Array, 2, send182678, Self);
((AST_Method)method25153)->info = (AST_Info)info3590;
symbol35642 = (Object)new_Type_Symbol_cached(L"do:");
methodclosure25151 = (Object)new_Runtime_MethodClosure(method25153);
store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol35642, (Runtime_MethodClosure)methodclosure25151);

classreference4797 = (Object)new_Organization_ClassReference((Type_Class)False_Class);

// False>>or:
//or: aBlock
// 	^ aBlock value.
localvariable26384 = (Object)new_AST_Variable_named(L"aBlock");
array21140 = (Object)new_Type_Array_with(1, (Object)localvariable26384);
// value
send182679 = (Object)new_AST_Send((Object)localvariable26384, (Object)symbol35946, 0);
string27547 = (Object)new_Type_String(L"or:");
string27548 = (Object)new_Type_String(L"or: aBlock\n\t^ aBlock value.");
smallint20407 = (Object)new_Type_SmallInt(-1);
smallint20408 = (Object)new_Type_SmallInt(-1);
info3591 = (Object)new_AST_Info((Type_String)string27548,(Type_String)string27547, (Type_SmallInt)smallint20407, (Type_SmallInt)smallint20408);
((AST_Send)send182679)->info = (AST_Info)info3591;
method25154 = (Object)new_AST_Method_with((Type_Array)array21140, (Type_Array)empty_Type_Array, 1, send182679);
((AST_Method)method25154)->info = (AST_Info)info3591;
symbol35630 = (Object)new_Type_Symbol_cached(L"or:");
methodclosure25152 = (Object)new_Runtime_MethodClosure(method25154);
store_method((Type_Class)False_Class, (Type_Symbol)symbol35630, (Runtime_MethodClosure)methodclosure25152);


// False>>and:
//and: aBoolean
localvariable26385 = (Object)new_AST_Variable_named(L"aBoolean");
array21141 = (Object)new_Type_Array_with(1, (Object)localvariable26385);
method25155 = (Object)new_AST_Method_with((Type_Array)array21141, (Type_Array)empty_Type_Array, 1, Self);
string27549 = (Object)new_Type_String(L"and:");
string27550 = (Object)new_Type_String(L"and: aBoolean");
smallint20409 = (Object)new_Type_SmallInt(-1);
smallint20410 = (Object)new_Type_SmallInt(-1);
info3592 = (Object)new_AST_Info((Type_String)string27550,(Type_String)string27549, (Type_SmallInt)smallint20409, (Type_SmallInt)smallint20410);
((AST_Method)method25155)->info = (AST_Info)info3592;
symbol35631 = (Object)new_Type_Symbol_cached(L"and:");
methodclosure25153 = (Object)new_Runtime_MethodClosure(method25155);
store_method((Type_Class)False_Class, (Type_Symbol)symbol35631, (Runtime_MethodClosure)methodclosure25153);

classreference4798 = (Object)new_Organization_ClassReference((Type_Class)class4028);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable26386 = (Object)new_AST_Variable_named(L"aMessage");
array21142 = (Object)new_Type_Array_with(1, (Object)localvariable26386);
localvariable26387 = (Object)new_AST_Variable_named(L"selector");
array21143 = (Object)new_Type_Array_with(1, (Object)localvariable26387);
variable1557 = (Object)new_AST_Variable_named(L"return");
array21144 = (Object)new_Type_Array_with(1, (Object)variable1557);
symbol35626 = (Object)new_Type_Symbol_cached(L"selector");
// selector
send182680 = (Object)new_AST_Send((Object)localvariable26386, (Object)symbol35626, 0);
string27551 = (Object)new_Type_String(L"doesNotUnderstand:");
string27552 = (Object)new_Type_String(L"doesNotUnderstand: aMessage\n\t| selector |\n\t(aMessage selector = #accept:) \n\t\tifFalse: [ ^ super doesNotUnderstand: aMessage ].\n\tselector := (\'visit\', self objectName, \':\') asSymbol.\n\t^ (aMessage argument) perform: selector with: self. ");
smallint20411 = (Object)new_Type_SmallInt(-1);
smallint20412 = (Object)new_Type_SmallInt(-1);
info3593 = (Object)new_AST_Info((Type_String)string27552,(Type_String)string27551, (Type_SmallInt)smallint20411, (Type_SmallInt)smallint20412);
((AST_Send)send182680)->info = (AST_Info)info3593;
symbol35947 = (Object)new_Type_Symbol_cached(L"accept:");
constant35476 = (Object)new_AST_Constant((Object)symbol35947);
// =
send182681 = (Object)new_AST_Send((Object)send182680, (Object)SMB__equal, 1, (Object)constant35476);
((AST_Send)send182681)->info = (AST_Info)info3593;
super1960 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable26386);
// escape:
send182682 = (Object)new_AST_Send((Object)variable1557, (Object)SMB_escape_, 1, (Object)super1960);
((AST_Send)send182682)->info = (AST_Info)info3593;
block12608 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182682);
// ifFalse:
send182683 = (Object)new_AST_Send((Object)send182681, (Object)SMB_ifFalse_, 1, (Object)block12608);
((AST_Send)send182683)->info = (AST_Info)info3593;
string27553 = (Object)new_Type_String(L"visit");
constant35477 = (Object)new_AST_Constant((Object)string27553);
symbol35514 = (Object)new_Type_Symbol_cached(L"objectName");
// objectName
send182684 = (Object)new_AST_Send((Object)Self, (Object)symbol35514, 0);
((AST_Send)send182684)->info = (AST_Info)info3593;
// ,
send182685 = (Object)new_AST_Send((Object)constant35477, (Object)SMB__concat, 1, (Object)send182684);
((AST_Send)send182685)->info = (AST_Info)info3593;
string27554 = (Object)new_Type_String(L":");
constant35478 = (Object)new_AST_Constant((Object)string27554);
// ,
send182686 = (Object)new_AST_Send((Object)send182685, (Object)SMB__concat, 1, (Object)constant35478);
((AST_Send)send182686)->info = (AST_Info)info3593;
// asSymbol
send182687 = (Object)new_AST_Send((Object)send182686, (Object)SMB_asSymbol, 0);
((AST_Send)send182687)->info = (AST_Info)info3593;
assign22394 = (Object)new_AST_Assign((Object)localvariable26387, (Object)send182687);
symbol35736 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send182688 = (Object)new_AST_Send((Object)localvariable26386, (Object)symbol35736, 0);
((AST_Send)send182688)->info = (AST_Info)info3593;
symbol35948 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send182689 = (Object)new_AST_Send((Object)send182688, (Object)symbol35948, 2, (Object)localvariable26387, (Object)Self);
((AST_Send)send182689)->info = (AST_Info)info3593;
block12609 = (Object)new_AST_Block_with((Type_Array)array21144, (Type_Array)empty_Type_Array, 1, 3, send182683, assign22394, send182689);
// on:
send182690 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12609);
method25156 = (Object)new_AST_Method_with((Type_Array)array21142, (Type_Array)array21143, 1, send182690);
((AST_Method)method25156)->info = (AST_Info)info3593;
methodclosure25154 = (Object)new_Runtime_MethodClosure(method25156);
store_method((Type_Class)class4028, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure25154);

classreference4799 = (Object)new_Organization_ClassReference((Type_Class)Type_Character_Class);

// Character>>charCode
//charCode
// 	^ self asSmallInt.
// asSmallInt
send182691 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
string27555 = (Object)new_Type_String(L"charCode");
string27556 = (Object)new_Type_String(L"charCode\n\t^ self asSmallInt.");
smallint20413 = (Object)new_Type_SmallInt(-1);
smallint20414 = (Object)new_Type_SmallInt(-1);
info3594 = (Object)new_AST_Info((Type_String)string27556,(Type_String)string27555, (Type_SmallInt)smallint20413, (Type_SmallInt)smallint20414);
((AST_Send)send182691)->info = (AST_Info)info3594;
method25157 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182691);
((AST_Method)method25157)->info = (AST_Info)info3594;
symbol35659 = (Object)new_Type_Symbol_cached(L"charCode");
methodclosure25155 = (Object)new_Runtime_MethodClosure(method25157);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol35659, (Runtime_MethodClosure)methodclosure25155);


// Character>>max:
//max: aMagnitude 
// 	"Answer the receiver or the argument, whichever has the greater 
// 	magnitude."
// 
// 	self > aMagnitude
// 		ifTrue: [^self]
// 		ifFalse: [^aMagnitude]
localvariable26388 = (Object)new_AST_Variable_named(L"aMagnitude");
array21145 = (Object)new_Type_Array_with(1, (Object)localvariable26388);
variable1558 = (Object)new_AST_Variable_named(L"return");
array21146 = (Object)new_Type_Array_with(1, (Object)variable1558);
// >
send182692 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable26388);
string27557 = (Object)new_Type_String(L"max:");
string27558 = (Object)new_Type_String(L"max: aMagnitude \n\t\"Answer the receiver or the argument, whichever has the greater \n\tmagnitude.\"\n\n\tself > aMagnitude\n\t\tifTrue: [^self]\n\t\tifFalse: [^aMagnitude]");
smallint20415 = (Object)new_Type_SmallInt(-1);
smallint20416 = (Object)new_Type_SmallInt(-1);
info3595 = (Object)new_AST_Info((Type_String)string27558,(Type_String)string27557, (Type_SmallInt)smallint20415, (Type_SmallInt)smallint20416);
((AST_Send)send182692)->info = (AST_Info)info3595;
// escape:
send182693 = (Object)new_AST_Send((Object)variable1558, (Object)SMB_escape_, 1, (Object)Self);
((AST_Send)send182693)->info = (AST_Info)info3595;
block12610 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182693);
// escape:
send182694 = (Object)new_AST_Send((Object)variable1558, (Object)SMB_escape_, 1, (Object)localvariable26388);
((AST_Send)send182694)->info = (AST_Info)info3595;
block12611 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182694);
// ifTrue:ifFalse:
send182695 = (Object)new_AST_Send((Object)send182692, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12610, (Object)block12611);
((AST_Send)send182695)->info = (AST_Info)info3595;
block12612 = (Object)new_AST_Block_with((Type_Array)array21146, (Type_Array)empty_Type_Array, 1, 2, send182695, Self);
// on:
send182696 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12612);
method25158 = (Object)new_AST_Method_with((Type_Array)array21145, (Type_Array)empty_Type_Array, 1, send182696);
((AST_Method)method25158)->info = (AST_Info)info3595;
symbol35646 = (Object)new_Type_Symbol_cached(L"max:");
methodclosure25156 = (Object)new_Runtime_MethodClosure(method25158);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol35646, (Runtime_MethodClosure)methodclosure25156);


// Character>>min:
//min: aMagnitude 
// 	"Answer the receiver or the argument, whichever has the lesser 
// 	magnitude."
// 
// 	self < aMagnitude
// 		ifTrue: [^self]
// 		ifFalse: [^aMagnitude]
localvariable26389 = (Object)new_AST_Variable_named(L"aMagnitude");
array21147 = (Object)new_Type_Array_with(1, (Object)localvariable26389);
variable1559 = (Object)new_AST_Variable_named(L"return");
array21148 = (Object)new_Type_Array_with(1, (Object)variable1559);
// <
send182697 = (Object)new_AST_Send((Object)Self, (Object)SMB__lt, 1, (Object)localvariable26389);
string27559 = (Object)new_Type_String(L"min:");
string27560 = (Object)new_Type_String(L"min: aMagnitude \n\t\"Answer the receiver or the argument, whichever has the lesser \n\tmagnitude.\"\n\n\tself < aMagnitude\n\t\tifTrue: [^self]\n\t\tifFalse: [^aMagnitude]");
smallint20417 = (Object)new_Type_SmallInt(-1);
smallint20418 = (Object)new_Type_SmallInt(-1);
info3596 = (Object)new_AST_Info((Type_String)string27560,(Type_String)string27559, (Type_SmallInt)smallint20417, (Type_SmallInt)smallint20418);
((AST_Send)send182697)->info = (AST_Info)info3596;
// escape:
send182698 = (Object)new_AST_Send((Object)variable1559, (Object)SMB_escape_, 1, (Object)Self);
((AST_Send)send182698)->info = (AST_Info)info3596;
block12613 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182698);
// escape:
send182699 = (Object)new_AST_Send((Object)variable1559, (Object)SMB_escape_, 1, (Object)localvariable26389);
((AST_Send)send182699)->info = (AST_Info)info3596;
block12614 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182699);
// ifTrue:ifFalse:
send182700 = (Object)new_AST_Send((Object)send182697, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12613, (Object)block12614);
((AST_Send)send182700)->info = (AST_Info)info3596;
block12615 = (Object)new_AST_Block_with((Type_Array)array21148, (Type_Array)empty_Type_Array, 1, 2, send182700, Self);
// on:
send182701 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12615);
method25159 = (Object)new_AST_Method_with((Type_Array)array21147, (Type_Array)empty_Type_Array, 1, send182701);
((AST_Method)method25159)->info = (AST_Info)info3596;
symbol35658 = (Object)new_Type_Symbol_cached(L"min:");
methodclosure25157 = (Object)new_Runtime_MethodClosure(method25159);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol35658, (Runtime_MethodClosure)methodclosure25157);


// Character>>asUppercase
//asUppercase
// 	"If the receiver is lowercase, answer its matching uppercase Character."
// 	"A tentative implementation.  Eventually this should consult the Unicode table."	
// 
// 	| v |
// 	v := self charCode.
// 	(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])
// 		ifTrue: [^ (0 - 32 + self asSmallInt) asCharacter ]
// 		ifFalse: [^ self]
localvariable26390 = (Object)new_AST_Variable_named(L"v");
array21149 = (Object)new_Type_Array_with(1, (Object)localvariable26390);
variable1560 = (Object)new_AST_Variable_named(L"return");
array21150 = (Object)new_Type_Array_with(1, (Object)variable1560);
// charCode
send182702 = (Object)new_AST_Send((Object)Self, (Object)symbol35659, 0);
string27561 = (Object)new_Type_String(L"asUppercase");
string27562 = (Object)new_Type_String(L"asUppercase\n\t\"If the receiver is lowercase, answer its matching uppercase Character.\"\n\t\"A tentative implementation.  Eventually this should consult the Unicode table.\"\t\n\n\t| v |\n\tv := self charCode.\n\t(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])\n\t\tifTrue: [^ (0 - 32 + self asSmallInt) asCharacter ]\n\t\tifFalse: [^ self]");
smallint20419 = (Object)new_Type_SmallInt(-1);
smallint20420 = (Object)new_Type_SmallInt(-1);
info3597 = (Object)new_AST_Info((Type_String)string27562,(Type_String)string27561, (Type_SmallInt)smallint20419, (Type_SmallInt)smallint20420);
((AST_Send)send182702)->info = (AST_Info)info3597;
assign22395 = (Object)new_AST_Assign((Object)localvariable26390, (Object)send182702);
smallint20421 = (Object)new_Type_SmallInt(97);
constant35479 = (Object)new_AST_Constant((Object)smallint20421);
symbol35648 = (Object)new_Type_Symbol_cached(L"<=");
// <=
send182703 = (Object)new_AST_Send((Object)constant35479, (Object)symbol35648, 1, (Object)localvariable26390);
((AST_Send)send182703)->info = (AST_Info)info3597;
smallint20422 = (Object)new_Type_SmallInt(122);
constant35480 = (Object)new_AST_Constant((Object)smallint20422);
// <=
send182704 = (Object)new_AST_Send((Object)localvariable26390, (Object)symbol35648, 1, (Object)constant35480);
((AST_Send)send182704)->info = (AST_Info)info3597;
block12616 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182704);
// and:
send182705 = (Object)new_AST_Send((Object)send182703, (Object)symbol35631, 1, (Object)block12616);
((AST_Send)send182705)->info = (AST_Info)info3597;
smallint20423 = (Object)new_Type_SmallInt(224);
constant35481 = (Object)new_AST_Constant((Object)smallint20423);
// <=
send182706 = (Object)new_AST_Send((Object)constant35481, (Object)symbol35648, 1, (Object)localvariable26390);
((AST_Send)send182706)->info = (AST_Info)info3597;
smallint20424 = (Object)new_Type_SmallInt(246);
constant35482 = (Object)new_AST_Constant((Object)smallint20424);
// <=
send182707 = (Object)new_AST_Send((Object)localvariable26390, (Object)symbol35648, 1, (Object)constant35482);
((AST_Send)send182707)->info = (AST_Info)info3597;
block12617 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182707);
// and:
send182708 = (Object)new_AST_Send((Object)send182706, (Object)symbol35631, 1, (Object)block12617);
((AST_Send)send182708)->info = (AST_Info)info3597;
block12618 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182708);
// or:
send182709 = (Object)new_AST_Send((Object)send182705, (Object)symbol35630, 1, (Object)block12618);
((AST_Send)send182709)->info = (AST_Info)info3597;
smallint20425 = (Object)new_Type_SmallInt(248);
constant35483 = (Object)new_AST_Constant((Object)smallint20425);
// <=
send182710 = (Object)new_AST_Send((Object)constant35483, (Object)symbol35648, 1, (Object)localvariable26390);
((AST_Send)send182710)->info = (AST_Info)info3597;
smallint20426 = (Object)new_Type_SmallInt(254);
constant35484 = (Object)new_AST_Constant((Object)smallint20426);
// <=
send182711 = (Object)new_AST_Send((Object)localvariable26390, (Object)symbol35648, 1, (Object)constant35484);
((AST_Send)send182711)->info = (AST_Info)info3597;
block12619 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182711);
// and:
send182712 = (Object)new_AST_Send((Object)send182710, (Object)symbol35631, 1, (Object)block12619);
((AST_Send)send182712)->info = (AST_Info)info3597;
block12620 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182712);
// or:
send182713 = (Object)new_AST_Send((Object)send182709, (Object)symbol35630, 1, (Object)block12620);
((AST_Send)send182713)->info = (AST_Info)info3597;
smallint20427 = (Object)new_Type_SmallInt(0);
constant35485 = (Object)new_AST_Constant((Object)smallint20427);
smallint20428 = (Object)new_Type_SmallInt(32);
constant35486 = (Object)new_AST_Constant((Object)smallint20428);
// -
send182714 = (Object)new_AST_Send((Object)constant35485, (Object)SMB__minus, 1, (Object)constant35486);
((AST_Send)send182714)->info = (AST_Info)info3597;
// asSmallInt
send182715 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
((AST_Send)send182715)->info = (AST_Info)info3597;
// +
send182716 = (Object)new_AST_Send((Object)send182714, (Object)SMB__plus, 1, (Object)send182715);
((AST_Send)send182716)->info = (AST_Info)info3597;
// asCharacter
send182717 = (Object)new_AST_Send((Object)send182716, (Object)SMB_asCharacter, 0);
((AST_Send)send182717)->info = (AST_Info)info3597;
// escape:
send182718 = (Object)new_AST_Send((Object)variable1560, (Object)SMB_escape_, 1, (Object)send182717);
((AST_Send)send182718)->info = (AST_Info)info3597;
block12621 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182718);
// escape:
send182719 = (Object)new_AST_Send((Object)variable1560, (Object)SMB_escape_, 1, (Object)Self);
((AST_Send)send182719)->info = (AST_Info)info3597;
block12622 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182719);
// ifTrue:ifFalse:
send182720 = (Object)new_AST_Send((Object)send182713, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12621, (Object)block12622);
((AST_Send)send182720)->info = (AST_Info)info3597;
block12623 = (Object)new_AST_Block_with((Type_Array)array21150, (Type_Array)empty_Type_Array, 1, 3, assign22395, send182720, Self);
// on:
send182721 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12623);
method25160 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21149, 1, send182721);
((AST_Method)method25160)->info = (AST_Info)info3597;
symbol35657 = (Object)new_Type_Symbol_cached(L"asUppercase");
methodclosure25158 = (Object)new_Runtime_MethodClosure(method25160);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol35657, (Runtime_MethodClosure)methodclosure25158);


// Character>>>
//> aCharacter 
// 	"Answer true if the receiver's value < aCharacter's value."
// 
// 	^ aCharacter < self asSmallInt
localvariable26391 = (Object)new_AST_Variable_named(L"aCharacter");
array21151 = (Object)new_Type_Array_with(1, (Object)localvariable26391);
// asSmallInt
send182722 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
string27563 = (Object)new_Type_String(L">");
string27564 = (Object)new_Type_String(L"> aCharacter \n\t\"Answer true if the receiver\'s value < aCharacter\'s value.\"\n\n\t^ aCharacter < self asSmallInt");
smallint20429 = (Object)new_Type_SmallInt(-1);
smallint20430 = (Object)new_Type_SmallInt(-1);
info3598 = (Object)new_AST_Info((Type_String)string27564,(Type_String)string27563, (Type_SmallInt)smallint20429, (Type_SmallInt)smallint20430);
((AST_Send)send182722)->info = (AST_Info)info3598;
// <
send182723 = (Object)new_AST_Send((Object)localvariable26391, (Object)SMB__lt, 1, (Object)send182722);
((AST_Send)send182723)->info = (AST_Info)info3598;
method25161 = (Object)new_AST_Method_with((Type_Array)array21151, (Type_Array)empty_Type_Array, 1, send182723);
((AST_Method)method25161)->info = (AST_Info)info3598;
methodclosure25159 = (Object)new_Runtime_MethodClosure(method25161);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)SMB__gt, (Runtime_MethodClosure)methodclosure25159);


// Character>>asPEG
//asPEG
// 	^ self asString asPEG
// asString
send182724 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);
string27565 = (Object)new_Type_String(L"asPEG");
string27566 = (Object)new_Type_String(L"asPEG\n\t^ self asString asPEG");
smallint20431 = (Object)new_Type_SmallInt(-1);
smallint20432 = (Object)new_Type_SmallInt(-1);
info3599 = (Object)new_AST_Info((Type_String)string27566,(Type_String)string27565, (Type_SmallInt)smallint20431, (Type_SmallInt)smallint20432);
((AST_Send)send182724)->info = (AST_Info)info3599;
symbol35639 = (Object)new_Type_Symbol_cached(L"asPEG");
// asPEG
send182725 = (Object)new_AST_Send((Object)send182724, (Object)symbol35639, 0);
((AST_Send)send182725)->info = (AST_Info)info3599;
method25162 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182725);
((AST_Method)method25162)->info = (AST_Info)info3599;
methodclosure25160 = (Object)new_Runtime_MethodClosure(method25162);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol35639, (Runtime_MethodClosure)methodclosure25160);


// Character>><
//< aCharacter 
// 	"Answer true if the receiver's value < aCharacter's value."
// 
// 	^ aCharacter > self asSmallInt
localvariable26392 = (Object)new_AST_Variable_named(L"aCharacter");
array21152 = (Object)new_Type_Array_with(1, (Object)localvariable26392);
// asSmallInt
send182726 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
string27567 = (Object)new_Type_String(L"<");
string27568 = (Object)new_Type_String(L"< aCharacter \n\t\"Answer true if the receiver\'s value < aCharacter\'s value.\"\n\n\t^ aCharacter > self asSmallInt");
smallint20433 = (Object)new_Type_SmallInt(-1);
smallint20434 = (Object)new_Type_SmallInt(-1);
info3600 = (Object)new_AST_Info((Type_String)string27568,(Type_String)string27567, (Type_SmallInt)smallint20433, (Type_SmallInt)smallint20434);
((AST_Send)send182726)->info = (AST_Info)info3600;
// >
send182727 = (Object)new_AST_Send((Object)localvariable26392, (Object)SMB__gt, 1, (Object)send182726);
((AST_Send)send182727)->info = (AST_Info)info3600;
method25163 = (Object)new_AST_Method_with((Type_Array)array21152, (Type_Array)empty_Type_Array, 1, send182727);
((AST_Method)method25163)->info = (AST_Info)info3600;
methodclosure25161 = (Object)new_Runtime_MethodClosure(method25163);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)SMB__lt, (Runtime_MethodClosure)methodclosure25161);


// a PInternalMetaclass P#Character>>space
//space
// 	^ 32 asCharacter
smallint20435 = (Object)new_Type_SmallInt(32);
constant35487 = (Object)new_AST_Constant((Object)smallint20435);
// asCharacter
send182728 = (Object)new_AST_Send((Object)constant35487, (Object)SMB_asCharacter, 0);
string27569 = (Object)new_Type_String(L"space");
string27570 = (Object)new_Type_String(L"space\n\t^ 32 asCharacter");
smallint20436 = (Object)new_Type_SmallInt(-1);
smallint20437 = (Object)new_Type_SmallInt(-1);
info3601 = (Object)new_AST_Info((Type_String)string27570,(Type_String)string27569, (Type_SmallInt)smallint20436, (Type_SmallInt)smallint20437);
((AST_Send)send182728)->info = (AST_Info)info3601;
method25164 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182728);
((AST_Method)method25164)->info = (AST_Info)info3601;
symbol35654 = (Object)new_Type_Symbol_cached(L"space");
methodclosure25162 = (Object)new_Runtime_MethodClosure(method25164);
store_method((Type_Class)HEADER(Type_Character_Class), (Type_Symbol)symbol35654, (Runtime_MethodClosure)methodclosure25162);


// a PInternalMetaclass P#Character>>cr
//cr
// 	^ 13 asCharacter
smallint20438 = (Object)new_Type_SmallInt(13);
constant35488 = (Object)new_AST_Constant((Object)smallint20438);
// asCharacter
send182729 = (Object)new_AST_Send((Object)constant35488, (Object)SMB_asCharacter, 0);
string27571 = (Object)new_Type_String(L"cr");
string27572 = (Object)new_Type_String(L"cr\n\t^ 13 asCharacter");
smallint20439 = (Object)new_Type_SmallInt(-1);
smallint20440 = (Object)new_Type_SmallInt(-1);
info3602 = (Object)new_AST_Info((Type_String)string27572,(Type_String)string27571, (Type_SmallInt)smallint20439, (Type_SmallInt)smallint20440);
((AST_Send)send182729)->info = (AST_Info)info3602;
method25165 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182729);
((AST_Method)method25165)->info = (AST_Info)info3602;
symbol35655 = (Object)new_Type_Symbol_cached(L"cr");
methodclosure25163 = (Object)new_Runtime_MethodClosure(method25165);
store_method((Type_Class)HEADER(Type_Character_Class), (Type_Symbol)symbol35655, (Runtime_MethodClosure)methodclosure25163);


// a PInternalMetaclass P#Character>>tab
//tab
// 	^ 9 asCharacter
smallint20441 = (Object)new_Type_SmallInt(9);
constant35489 = (Object)new_AST_Constant((Object)smallint20441);
// asCharacter
send182730 = (Object)new_AST_Send((Object)constant35489, (Object)SMB_asCharacter, 0);
string27573 = (Object)new_Type_String(L"tab");
string27574 = (Object)new_Type_String(L"tab\n\t^ 9 asCharacter");
smallint20442 = (Object)new_Type_SmallInt(-1);
smallint20443 = (Object)new_Type_SmallInt(-1);
info3603 = (Object)new_AST_Info((Type_String)string27574,(Type_String)string27573, (Type_SmallInt)smallint20442, (Type_SmallInt)smallint20443);
((AST_Send)send182730)->info = (AST_Info)info3603;
method25166 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182730);
((AST_Method)method25166)->info = (AST_Info)info3603;
symbol35656 = (Object)new_Type_Symbol_cached(L"tab");
methodclosure25164 = (Object)new_Runtime_MethodClosure(method25166);
store_method((Type_Class)HEADER(Type_Character_Class), (Type_Symbol)symbol35656, (Runtime_MethodClosure)methodclosure25164);

classreference4800 = (Object)new_Organization_ClassReference((Type_Class)Type_SmallInt_Class);

// SmallInt>>max:
//max: aMagnitude 
// 	"Answer the receiver or the argument, whichever has the greater 
// 	magnitude."
// 
// 	self > aMagnitude
// 		ifTrue: [^self]
// 		ifFalse: [^aMagnitude]
localvariable26393 = (Object)new_AST_Variable_named(L"aMagnitude");
array21153 = (Object)new_Type_Array_with(1, (Object)localvariable26393);
variable1561 = (Object)new_AST_Variable_named(L"return");
array21154 = (Object)new_Type_Array_with(1, (Object)variable1561);
// >
send182731 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable26393);
string27575 = (Object)new_Type_String(L"max:");
string27576 = (Object)new_Type_String(L"max: aMagnitude \n\t\"Answer the receiver or the argument, whichever has the greater \n\tmagnitude.\"\n\n\tself > aMagnitude\n\t\tifTrue: [^self]\n\t\tifFalse: [^aMagnitude]");
smallint20444 = (Object)new_Type_SmallInt(-1);
smallint20445 = (Object)new_Type_SmallInt(-1);
info3604 = (Object)new_AST_Info((Type_String)string27576,(Type_String)string27575, (Type_SmallInt)smallint20444, (Type_SmallInt)smallint20445);
((AST_Send)send182731)->info = (AST_Info)info3604;
// escape:
send182732 = (Object)new_AST_Send((Object)variable1561, (Object)SMB_escape_, 1, (Object)Self);
((AST_Send)send182732)->info = (AST_Info)info3604;
block12624 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182732);
// escape:
send182733 = (Object)new_AST_Send((Object)variable1561, (Object)SMB_escape_, 1, (Object)localvariable26393);
((AST_Send)send182733)->info = (AST_Info)info3604;
block12625 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182733);
// ifTrue:ifFalse:
send182734 = (Object)new_AST_Send((Object)send182731, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12624, (Object)block12625);
((AST_Send)send182734)->info = (AST_Info)info3604;
block12626 = (Object)new_AST_Block_with((Type_Array)array21154, (Type_Array)empty_Type_Array, 1, 2, send182734, Self);
// on:
send182735 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12626);
method25167 = (Object)new_AST_Method_with((Type_Array)array21153, (Type_Array)empty_Type_Array, 1, send182735);
((AST_Method)method25167)->info = (AST_Info)info3604;
methodclosure25165 = (Object)new_Runtime_MethodClosure(method25167);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol35646, (Runtime_MethodClosure)methodclosure25165);


// SmallInt>>to:do:
//to: stop do: aBlock 
// 	"Normally compiled in-line, and therefore not overridable.
// 	Evaluate aBlock for each element of the interval (self to: stop by: 1)."
// 	| nextValue |
// 	nextValue := self.
// 	[nextValue <= stop]
// 		whileTrue: 
// 			[aBlock value: nextValue.
// 			nextValue := nextValue + 1]
localvariable26394 = (Object)new_AST_Variable_named(L"stop");
localvariable26395 = (Object)new_AST_Variable_named(L"aBlock");
array21155 = (Object)new_Type_Array_with(2, (Object)localvariable26394, (Object)localvariable26395);
localvariable26396 = (Object)new_AST_Variable_named(L"nextValue");
array21156 = (Object)new_Type_Array_with(1, (Object)localvariable26396);
assign22396 = (Object)new_AST_Assign((Object)localvariable26396, (Object)Self);
// <=
send182736 = (Object)new_AST_Send((Object)localvariable26396, (Object)symbol35648, 1, (Object)localvariable26394);
string27577 = (Object)new_Type_String(L"to:do:");
string27578 = (Object)new_Type_String(L"to: stop do: aBlock \n\t\"Normally compiled in-line, and therefore not overridable.\n\tEvaluate aBlock for each element of the interval (self to: stop by: 1).\"\n\t| nextValue |\n\tnextValue := self.\n\t[nextValue <= stop]\n\t\twhileTrue: \n\t\t\t[aBlock value: nextValue.\n\t\t\tnextValue := nextValue + 1]");
smallint20446 = (Object)new_Type_SmallInt(-1);
smallint20447 = (Object)new_Type_SmallInt(-1);
info3605 = (Object)new_AST_Info((Type_String)string27578,(Type_String)string27577, (Type_SmallInt)smallint20446, (Type_SmallInt)smallint20447);
((AST_Send)send182736)->info = (AST_Info)info3605;
block12627 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182736);
// value:
send182737 = (Object)new_AST_Send((Object)localvariable26395, (Object)SMB_value_, 1, (Object)localvariable26396);
((AST_Send)send182737)->info = (AST_Info)info3605;
smallint20448 = (Object)new_Type_SmallInt(1);
constant35490 = (Object)new_AST_Constant((Object)smallint20448);
// +
send182738 = (Object)new_AST_Send((Object)localvariable26396, (Object)SMB__plus, 1, (Object)constant35490);
((AST_Send)send182738)->info = (AST_Info)info3605;
assign22397 = (Object)new_AST_Assign((Object)localvariable26396, (Object)send182738);
block12628 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, send182737, assign22397);
// whileTrue:
send182739 = (Object)new_AST_Send((Object)block12627, (Object)SMB_whileTrue_, 1, (Object)block12628);
((AST_Send)send182739)->info = (AST_Info)info3605;
method25168 = (Object)new_AST_Method_with((Type_Array)array21155, (Type_Array)array21156, 3, assign22396, send182739, Self);
((AST_Method)method25168)->info = (AST_Info)info3605;
methodclosure25166 = (Object)new_Runtime_MethodClosure(method25168);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol35647, (Runtime_MethodClosure)methodclosure25166);


// SmallInt>><=
//<= aSmallInt
// 	^ (self > aSmallInt) not.
localvariable26397 = (Object)new_AST_Variable_named(L"aSmallInt");
array21157 = (Object)new_Type_Array_with(1, (Object)localvariable26397);
// >
send182740 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable26397);
string27579 = (Object)new_Type_String(L"<=");
string27580 = (Object)new_Type_String(L"<= aSmallInt\n\t^ (self > aSmallInt) not.");
smallint20449 = (Object)new_Type_SmallInt(-1);
smallint20450 = (Object)new_Type_SmallInt(-1);
info3606 = (Object)new_AST_Info((Type_String)string27580,(Type_String)string27579, (Type_SmallInt)smallint20449, (Type_SmallInt)smallint20450);
((AST_Send)send182740)->info = (AST_Info)info3606;
// not
send182741 = (Object)new_AST_Send((Object)send182740, (Object)SMB_not, 0);
((AST_Send)send182741)->info = (AST_Info)info3606;
method25169 = (Object)new_AST_Method_with((Type_Array)array21157, (Type_Array)empty_Type_Array, 1, send182741);
((AST_Method)method25169)->info = (AST_Info)info3606;
methodclosure25167 = (Object)new_Runtime_MethodClosure(method25169);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol35648, (Runtime_MethodClosure)methodclosure25167);

classreference4801 = (Object)new_Organization_ClassReference((Type_Class)Type_String_Class);

// String>>do:
//do: aBlock 
// 	"Refer to the comment in Collection|do:."
// 	1 to: self size do:
// 		[:index | aBlock value: (self at: index)]
localvariable26398 = (Object)new_AST_Variable_named(L"aBlock");
array21158 = (Object)new_Type_Array_with(1, (Object)localvariable26398);
smallint20451 = (Object)new_Type_SmallInt(1);
constant35491 = (Object)new_AST_Constant((Object)smallint20451);
// size
send182742 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27581 = (Object)new_Type_String(L"do:");
string27582 = (Object)new_Type_String(L"do: aBlock \n\t\"Refer to the comment in Collection|do:.\"\n\t1 to: self size do:\n\t\t[:index | aBlock value: (self at: index)]");
smallint20452 = (Object)new_Type_SmallInt(-1);
smallint20453 = (Object)new_Type_SmallInt(-1);
info3607 = (Object)new_AST_Info((Type_String)string27582,(Type_String)string27581, (Type_SmallInt)smallint20452, (Type_SmallInt)smallint20453);
((AST_Send)send182742)->info = (AST_Info)info3607;
localvariable26399 = (Object)new_AST_Variable_named(L"index");
array21159 = (Object)new_Type_Array_with(1, (Object)localvariable26399);
// at:
send182743 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26399);
((AST_Send)send182743)->info = (AST_Info)info3607;
// value:
send182744 = (Object)new_AST_Send((Object)localvariable26398, (Object)SMB_value_, 1, (Object)send182743);
((AST_Send)send182744)->info = (AST_Info)info3607;
block12629 = (Object)new_AST_Block_with((Type_Array)array21159, (Type_Array)empty_Type_Array, 1, 1, send182744);
// to:do:
send182745 = (Object)new_AST_Send((Object)constant35491, (Object)symbol35647, 2, (Object)send182742, (Object)block12629);
((AST_Send)send182745)->info = (AST_Info)info3607;
method25170 = (Object)new_AST_Method_with((Type_Array)array21158, (Type_Array)empty_Type_Array, 2, send182745, Self);
((AST_Method)method25170)->info = (AST_Info)info3607;
methodclosure25168 = (Object)new_Runtime_MethodClosure(method25170);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35642, (Runtime_MethodClosure)methodclosure25168);


// String>>isEmpty
//isEmpty 
// 	^ self size = 0.
// size
send182746 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27583 = (Object)new_Type_String(L"isEmpty");
string27584 = (Object)new_Type_String(L"isEmpty \n\t^ self size = 0.");
smallint20454 = (Object)new_Type_SmallInt(-1);
smallint20455 = (Object)new_Type_SmallInt(-1);
info3608 = (Object)new_AST_Info((Type_String)string27584,(Type_String)string27583, (Type_SmallInt)smallint20454, (Type_SmallInt)smallint20455);
((AST_Send)send182746)->info = (AST_Info)info3608;
smallint20456 = (Object)new_Type_SmallInt(0);
constant35492 = (Object)new_AST_Constant((Object)smallint20456);
// =
send182747 = (Object)new_AST_Send((Object)send182746, (Object)SMB__equal, 1, (Object)constant35492);
((AST_Send)send182747)->info = (AST_Info)info3608;
method25171 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182747);
((AST_Method)method25171)->info = (AST_Info)info3608;
symbol35634 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure25169 = (Object)new_Runtime_MethodClosure(method25171);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35634, (Runtime_MethodClosure)methodclosure25169);


// String>>asPEGRange
//asPEGRange
// 	((self size = 3) and: [ (self at: 2) = $- ])
// 		ifFalse: [ self error: 'Cannot convert ', self, ' to PEG range. Expected format: beginchar-endchar' ].
// 	^ PEGRange between: (self at: 1) and: (self at: 3)
// size
send182748 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27585 = (Object)new_Type_String(L"asPEGRange");
string27586 = (Object)new_Type_String(L"asPEGRange\n\t((self size = 3) and: [ (self at: 2) = $- ])\n\t\tifFalse: [ self error: \'Cannot convert \', self, \' to PEG range. Expected format: beginchar-endchar\' ].\n\t^ PEGRange between: (self at: 1) and: (self at: 3)");
smallint20457 = (Object)new_Type_SmallInt(-1);
smallint20458 = (Object)new_Type_SmallInt(-1);
info3609 = (Object)new_AST_Info((Type_String)string27586,(Type_String)string27585, (Type_SmallInt)smallint20457, (Type_SmallInt)smallint20458);
((AST_Send)send182748)->info = (AST_Info)info3609;
smallint20459 = (Object)new_Type_SmallInt(3);
constant35493 = (Object)new_AST_Constant((Object)smallint20459);
// =
send182749 = (Object)new_AST_Send((Object)send182748, (Object)SMB__equal, 1, (Object)constant35493);
((AST_Send)send182749)->info = (AST_Info)info3609;
smallint20460 = (Object)new_Type_SmallInt(2);
constant35494 = (Object)new_AST_Constant((Object)smallint20460);
// at:
send182750 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant35494);
((AST_Send)send182750)->info = (AST_Info)info3609;
character131 = (Object)new_Type_Character(L'-');
constant35495 = (Object)new_AST_Constant((Object)character131);
// =
send182751 = (Object)new_AST_Send((Object)send182750, (Object)SMB__equal, 1, (Object)constant35495);
((AST_Send)send182751)->info = (AST_Info)info3609;
block12630 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182751);
// and:
send182752 = (Object)new_AST_Send((Object)send182749, (Object)symbol35631, 1, (Object)block12630);
((AST_Send)send182752)->info = (AST_Info)info3609;
symbol35949 = (Object)new_Type_Symbol_cached(L"error:");
string27587 = (Object)new_Type_String(L"Cannot convert ");
constant35496 = (Object)new_AST_Constant((Object)string27587);
// ,
send182753 = (Object)new_AST_Send((Object)constant35496, (Object)SMB__concat, 1, (Object)Self);
((AST_Send)send182753)->info = (AST_Info)info3609;
string27588 = (Object)new_Type_String(L" to PEG range. Expected format: beginchar-endchar");
constant35497 = (Object)new_AST_Constant((Object)string27588);
// ,
send182754 = (Object)new_AST_Send((Object)send182753, (Object)SMB__concat, 1, (Object)constant35497);
((AST_Send)send182754)->info = (AST_Info)info3609;
// error:
send182755 = (Object)new_AST_Send((Object)Self, (Object)symbol35949, 1, (Object)send182754);
((AST_Send)send182755)->info = (AST_Info)info3609;
block12631 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182755);
// ifFalse:
send182756 = (Object)new_AST_Send((Object)send182752, (Object)SMB_ifFalse_, 1, (Object)block12631);
((AST_Send)send182756)->info = (AST_Info)info3609;
classreference4802 = (Object)new_Organization_ClassReference((Type_Class)class4050);

// PEGRange>>start:
//start: int
// 	start := int
localvariable26400 = (Object)new_AST_Variable_named(L"int");
array21160 = (Object)new_Type_Array_with(1, (Object)localvariable26400);
assign22398 = (Object)new_AST_Assign((Object)instancevariable6016, (Object)localvariable26400);
method25172 = (Object)new_AST_Method_with((Type_Array)array21160, (Type_Array)empty_Type_Array, 2, assign22398, Self);
string27589 = (Object)new_Type_String(L"start:");
string27590 = (Object)new_Type_String(L"start: int\n\tstart := int");
smallint20461 = (Object)new_Type_SmallInt(-1);
smallint20462 = (Object)new_Type_SmallInt(-1);
info3610 = (Object)new_AST_Info((Type_String)string27590,(Type_String)string27589, (Type_SmallInt)smallint20461, (Type_SmallInt)smallint20462);
((AST_Method)method25172)->info = (AST_Info)info3610;
symbol35874 = (Object)new_Type_Symbol_cached(L"start:");
methodclosure25170 = (Object)new_Runtime_MethodClosure(method25172);
store_method((Type_Class)class4050, (Type_Symbol)symbol35874, (Runtime_MethodClosure)methodclosure25170);


// PEGRange>>privateMatch:
//privateMatch: input
// 	| char |
// 	char := input next.
// 	char ifNil: [ ^ char ].
// 	(char >= start and: [ char <= stop ])
// 		ifTrue: [ ^ char asString ].
// 	^ nil
localvariable26401 = (Object)new_AST_Variable_named(L"input");
array21161 = (Object)new_Type_Array_with(1, (Object)localvariable26401);
localvariable26402 = (Object)new_AST_Variable_named(L"char");
array21162 = (Object)new_Type_Array_with(1, (Object)localvariable26402);
variable1562 = (Object)new_AST_Variable_named(L"return");
array21163 = (Object)new_Type_Array_with(1, (Object)variable1562);
symbol35950 = (Object)new_Type_Symbol_cached(L"next");
// next
send182757 = (Object)new_AST_Send((Object)localvariable26401, (Object)symbol35950, 0);
string27591 = (Object)new_Type_String(L"privateMatch:");
string27592 = (Object)new_Type_String(L"privateMatch: input\n\t| char |\n\tchar := input next.\n\tchar ifNil: [ ^ char ].\n\t(char >= start and: [ char <= stop ])\n\t\tifTrue: [ ^ char asString ].\n\t^ nil");
smallint20463 = (Object)new_Type_SmallInt(-1);
smallint20464 = (Object)new_Type_SmallInt(-1);
info3611 = (Object)new_AST_Info((Type_String)string27592,(Type_String)string27591, (Type_SmallInt)smallint20463, (Type_SmallInt)smallint20464);
((AST_Send)send182757)->info = (AST_Info)info3611;
assign22399 = (Object)new_AST_Assign((Object)localvariable26402, (Object)send182757);
// escape:
send182758 = (Object)new_AST_Send((Object)variable1562, (Object)SMB_escape_, 1, (Object)localvariable26402);
((AST_Send)send182758)->info = (AST_Info)info3611;
block12632 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182758);
// ifNil:
send182759 = (Object)new_AST_Send((Object)localvariable26402, (Object)symbol35518, 1, (Object)block12632);
((AST_Send)send182759)->info = (AST_Info)info3611;
symbol35951 = (Object)new_Type_Symbol_cached(L">=");
// >=
send182760 = (Object)new_AST_Send((Object)localvariable26402, (Object)symbol35951, 1, (Object)instancevariable6016);
((AST_Send)send182760)->info = (AST_Info)info3611;
// <=
send182761 = (Object)new_AST_Send((Object)localvariable26402, (Object)symbol35648, 1, (Object)instancevariable6017);
((AST_Send)send182761)->info = (AST_Info)info3611;
block12633 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182761);
// and:
send182762 = (Object)new_AST_Send((Object)send182760, (Object)symbol35631, 1, (Object)block12633);
((AST_Send)send182762)->info = (AST_Info)info3611;
// asString
send182763 = (Object)new_AST_Send((Object)localvariable26402, (Object)SMB_asString, 0);
((AST_Send)send182763)->info = (AST_Info)info3611;
// escape:
send182764 = (Object)new_AST_Send((Object)variable1562, (Object)SMB_escape_, 1, (Object)send182763);
((AST_Send)send182764)->info = (AST_Info)info3611;
block12634 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182764);
// ifTrue:
send182765 = (Object)new_AST_Send((Object)send182762, (Object)SMB_ifTrue_, 1, (Object)block12634);
((AST_Send)send182765)->info = (AST_Info)info3611;
block12635 = (Object)new_AST_Block_with((Type_Array)array21163, (Type_Array)empty_Type_Array, 1, 4, assign22399, send182759, send182765, Nil_Const);
// on:
send182766 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12635);
method25173 = (Object)new_AST_Method_with((Type_Array)array21161, (Type_Array)array21162, 1, send182766);
((AST_Method)method25173)->info = (AST_Info)info3611;
symbol35850 = (Object)new_Type_Symbol_cached(L"privateMatch:");
methodclosure25171 = (Object)new_Runtime_MethodClosure(method25173);
store_method((Type_Class)class4050, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25171);


// PEGRange>>stop:
//stop: int
// 	stop := int
localvariable26403 = (Object)new_AST_Variable_named(L"int");
array21164 = (Object)new_Type_Array_with(1, (Object)localvariable26403);
assign22400 = (Object)new_AST_Assign((Object)instancevariable6017, (Object)localvariable26403);
method25174 = (Object)new_AST_Method_with((Type_Array)array21164, (Type_Array)empty_Type_Array, 2, assign22400, Self);
string27593 = (Object)new_Type_String(L"stop:");
string27594 = (Object)new_Type_String(L"stop: int\n\tstop := int");
smallint20465 = (Object)new_Type_SmallInt(-1);
smallint20466 = (Object)new_Type_SmallInt(-1);
info3612 = (Object)new_AST_Info((Type_String)string27594,(Type_String)string27593, (Type_SmallInt)smallint20465, (Type_SmallInt)smallint20466);
((AST_Method)method25174)->info = (AST_Info)info3612;
symbol35873 = (Object)new_Type_Symbol_cached(L"stop:");
methodclosure25172 = (Object)new_Runtime_MethodClosure(method25174);
store_method((Type_Class)class4050, (Type_Symbol)symbol35873, (Runtime_MethodClosure)methodclosure25172);


// a PMetaclass P#PEGRange>>between:and:
//between: start and: stop
// 	^ self new
// 		start: (start min: stop);
// 		stop: (start max: stop)
localvariable26404 = (Object)new_AST_Variable_named(L"start");
localvariable26405 = (Object)new_AST_Variable_named(L"stop");
array21165 = (Object)new_Type_Array_with(2, (Object)localvariable26404, (Object)localvariable26405);
localvariable26406 = (Object)new_AST_Variable_named(L"receiver");
array21166 = (Object)new_Type_Array_with(1, (Object)localvariable26406);
// min:
send182767 = (Object)new_AST_Send((Object)localvariable26404, (Object)symbol35658, 1, (Object)localvariable26405);
string27595 = (Object)new_Type_String(L"between:and:");
string27596 = (Object)new_Type_String(L"between: start and: stop\n\t^ self new\n\t\tstart: (start min: stop);\n\t\tstop: (start max: stop)");
smallint20467 = (Object)new_Type_SmallInt(-1);
smallint20468 = (Object)new_Type_SmallInt(-1);
info3613 = (Object)new_AST_Info((Type_String)string27596,(Type_String)string27595, (Type_SmallInt)smallint20467, (Type_SmallInt)smallint20468);
((AST_Send)send182767)->info = (AST_Info)info3613;
// start:
send182768 = (Object)new_AST_Send((Object)localvariable26406, (Object)symbol35874, 1, (Object)send182767);
((AST_Send)send182768)->info = (AST_Info)info3613;
// max:
send182769 = (Object)new_AST_Send((Object)localvariable26404, (Object)symbol35646, 1, (Object)localvariable26405);
((AST_Send)send182769)->info = (AST_Info)info3613;
// stop:
send182770 = (Object)new_AST_Send((Object)localvariable26406, (Object)symbol35873, 1, (Object)send182769);
((AST_Send)send182770)->info = (AST_Info)info3613;
block12636 = (Object)new_AST_Block_with((Type_Array)array21166, (Type_Array)empty_Type_Array, 1, 2, send182768, send182770);
symbol35612 = (Object)new_Type_Symbol_cached(L"new");
// new
send182771 = (Object)new_AST_Send((Object)Self, (Object)symbol35612, 0);
((AST_Send)send182771)->info = (AST_Info)info3613;
// value:
send182772 = (Object)new_AST_Send((Object)block12636, (Object)SMB_value_, 1, (Object)send182771);
((AST_Send)send182772)->info = (AST_Info)info3613;
method25175 = (Object)new_AST_Method_with((Type_Array)array21165, (Type_Array)empty_Type_Array, 1, send182772);
((AST_Method)method25175)->info = (AST_Info)info3613;
symbol35872 = (Object)new_Type_Symbol_cached(L"between:and:");
methodclosure25173 = (Object)new_Runtime_MethodClosure(method25175);
store_method((Type_Class)metaclass4050, (Type_Symbol)symbol35872, (Runtime_MethodClosure)methodclosure25173);

smallint20469 = (Object)new_Type_SmallInt(1);
constant35498 = (Object)new_AST_Constant((Object)smallint20469);
// at:
send182773 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant35498);
((AST_Send)send182773)->info = (AST_Info)info3609;
smallint20470 = (Object)new_Type_SmallInt(3);
constant35499 = (Object)new_AST_Constant((Object)smallint20470);
// at:
send182774 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant35499);
((AST_Send)send182774)->info = (AST_Info)info3609;
// between:and:
send182775 = (Object)new_AST_Send((Object)classreference4802, (Object)symbol35872, 2, (Object)send182773, (Object)send182774);
((AST_Send)send182775)->info = (AST_Info)info3609;
method25176 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send182756, send182775);
((AST_Method)method25176)->info = (AST_Info)info3609;
symbol35636 = (Object)new_Type_Symbol_cached(L"asPEGRange");
methodclosure25174 = (Object)new_Runtime_MethodClosure(method25176);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35636, (Runtime_MethodClosure)methodclosure25174);


// String>>asPEGChoice
//asPEGChoice
// 	| result |
// 	result := PEGOrderedChoiceExpression new.
// 	self do: [ :char | result <= char asPEG ].
// 	^ result
localvariable26407 = (Object)new_AST_Variable_named(L"result");
array21167 = (Object)new_Type_Array_with(1, (Object)localvariable26407);
classreference4803 = (Object)new_Organization_ClassReference((Type_Class)class4037);

// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
symbol35517 = (Object)new_Type_Symbol_cached(L"initialize");
super1961 = (Object)new_AST_Super((Object)symbol35517, 0);
symbol35876 = (Object)new_Type_Symbol_cached(L"initialize:");
classreference4804 = (Object)new_Organization_ClassReference((Type_Class)class4086);

// OrderedCollection>>addLast:
//addLast: newObject 
// 	"Add newObject to the end of the receiver. Answer newObject."
// 
// 	lastIndex = array size ifTrue: [self makeRoomAtLast].
// 	lastIndex := lastIndex + 1.
// 	array at: lastIndex put: newObject.
// 	^ newObject
localvariable26408 = (Object)new_AST_Variable_named(L"newObject");
array21168 = (Object)new_Type_Array_with(1, (Object)localvariable26408);
// size
send182776 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_size, 0);
string27597 = (Object)new_Type_String(L"addLast:");
string27598 = (Object)new_Type_String(L"addLast: newObject \n\t\"Add newObject to the end of the receiver. Answer newObject.\"\n\n\tlastIndex = array size ifTrue: [self makeRoomAtLast].\n\tlastIndex := lastIndex + 1.\n\tarray at: lastIndex put: newObject.\n\t^ newObject");
smallint20471 = (Object)new_Type_SmallInt(-1);
smallint20472 = (Object)new_Type_SmallInt(-1);
info3614 = (Object)new_AST_Info((Type_String)string27598,(Type_String)string27597, (Type_SmallInt)smallint20471, (Type_SmallInt)smallint20472);
((AST_Send)send182776)->info = (AST_Info)info3614;
// =
send182777 = (Object)new_AST_Send((Object)instancevariable6057, (Object)SMB__equal, 1, (Object)send182776);
((AST_Send)send182777)->info = (AST_Info)info3614;
symbol35715 = (Object)new_Type_Symbol_cached(L"makeRoomAtLast");
// makeRoomAtLast
send182778 = (Object)new_AST_Send((Object)Self, (Object)symbol35715, 0);
((AST_Send)send182778)->info = (AST_Info)info3614;
block12637 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182778);
// ifTrue:
send182779 = (Object)new_AST_Send((Object)send182777, (Object)SMB_ifTrue_, 1, (Object)block12637);
((AST_Send)send182779)->info = (AST_Info)info3614;
smallint20473 = (Object)new_Type_SmallInt(1);
constant35500 = (Object)new_AST_Constant((Object)smallint20473);
// +
send182780 = (Object)new_AST_Send((Object)instancevariable6057, (Object)SMB__plus, 1, (Object)constant35500);
((AST_Send)send182780)->info = (AST_Info)info3614;
assign22401 = (Object)new_AST_Assign((Object)instancevariable6057, (Object)send182780);
// at:put:
send182781 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_at_put_, 2, (Object)instancevariable6057, (Object)localvariable26408);
((AST_Send)send182781)->info = (AST_Info)info3614;
method25177 = (Object)new_AST_Method_with((Type_Array)array21168, (Type_Array)empty_Type_Array, 4, send182779, assign22401, send182781, localvariable26408);
((AST_Method)method25177)->info = (AST_Info)info3614;
symbol35714 = (Object)new_Type_Symbol_cached(L"addLast:");
methodclosure25175 = (Object)new_Runtime_MethodClosure(method25177);
store_method((Type_Class)class4086, (Type_Symbol)symbol35714, (Runtime_MethodClosure)methodclosure25175);


// OrderedCollection>>grow
//grow
// 	"Become larger. Typically, a subclass has to override this if the subclass
// 	adds instance variables."
// 	| newArray |
// 	newArray := Array new: self size + self growSize.
// 	newArray replaceFrom: 1 to: array size with: array startingAt: 1.
// 	array := newArray
localvariable26409 = (Object)new_AST_Variable_named(L"newArray");
array21169 = (Object)new_Type_Array_with(1, (Object)localvariable26409);
classreference4805 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);

// Array>>last:
//last: aNode
// 	^ self at: self size put: aNode.
localvariable26410 = (Object)new_AST_Variable_named(L"aNode");
array21170 = (Object)new_Type_Array_with(1, (Object)localvariable26410);
// size
send182782 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27599 = (Object)new_Type_String(L"last:");
string27600 = (Object)new_Type_String(L"last: aNode\n\t^ self at: self size put: aNode.");
smallint20474 = (Object)new_Type_SmallInt(-1);
smallint20475 = (Object)new_Type_SmallInt(-1);
info3615 = (Object)new_AST_Info((Type_String)string27600,(Type_String)string27599, (Type_SmallInt)smallint20474, (Type_SmallInt)smallint20475);
((AST_Send)send182782)->info = (AST_Info)info3615;
// at:put:
send182783 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send182782, (Object)localvariable26410);
((AST_Send)send182783)->info = (AST_Info)info3615;
method25178 = (Object)new_AST_Method_with((Type_Array)array21170, (Type_Array)empty_Type_Array, 1, send182783);
((AST_Method)method25178)->info = (AST_Info)info3615;
symbol35699 = (Object)new_Type_Symbol_cached(L"last:");
methodclosure25176 = (Object)new_Runtime_MethodClosure(method25178);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35699, (Runtime_MethodClosure)methodclosure25176);


// Array>>initialize
//initialize 
// 	super initialize.
super1962 = (Object)new_AST_Super((Object)symbol35517, 0);
method25179 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1962, Self);
string27601 = (Object)new_Type_String(L"initialize");
string27602 = (Object)new_Type_String(L"initialize \n\tsuper initialize.");
smallint20476 = (Object)new_Type_SmallInt(-1);
smallint20477 = (Object)new_Type_SmallInt(-1);
info3616 = (Object)new_AST_Info((Type_String)string27602,(Type_String)string27601, (Type_SmallInt)smallint20476, (Type_SmallInt)smallint20477);
((AST_Method)method25179)->info = (AST_Info)info3616;
methodclosure25177 = (Object)new_Runtime_MethodClosure(method25179);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25177);


// Array>>last
//last
// 	^ self at: self size.
// size
send182784 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27603 = (Object)new_Type_String(L"last");
string27604 = (Object)new_Type_String(L"last\n\t^ self at: self size.");
smallint20478 = (Object)new_Type_SmallInt(-1);
smallint20479 = (Object)new_Type_SmallInt(-1);
info3617 = (Object)new_AST_Info((Type_String)string27604,(Type_String)string27603, (Type_SmallInt)smallint20478, (Type_SmallInt)smallint20479);
((AST_Send)send182784)->info = (AST_Info)info3617;
// at:
send182785 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send182784);
((AST_Send)send182785)->info = (AST_Info)info3617;
method25180 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182785);
((AST_Method)method25180)->info = (AST_Info)info3617;
symbol35692 = (Object)new_Type_Symbol_cached(L"last");
methodclosure25178 = (Object)new_Runtime_MethodClosure(method25180);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35692, (Runtime_MethodClosure)methodclosure25178);


// Array>>add:
//add: anElement
// 	| result |
// 	result := self class new: self size +1.
// 	self doWithIndex: [:el :i | result at: i put: el ].
// 	result last: anElement.
// 	^ result.
localvariable26411 = (Object)new_AST_Variable_named(L"anElement");
array21171 = (Object)new_Type_Array_with(1, (Object)localvariable26411);
localvariable26412 = (Object)new_AST_Variable_named(L"result");
array21172 = (Object)new_Type_Array_with(1, (Object)localvariable26412);
// class
send182786 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
string27605 = (Object)new_Type_String(L"add:");
string27606 = (Object)new_Type_String(L"add: anElement\n\t| result |\n\tresult := self class new: self size +1.\n\tself doWithIndex: [:el :i | result at: i put: el ].\n\tresult last: anElement.\n\t^ result.");
smallint20480 = (Object)new_Type_SmallInt(-1);
smallint20481 = (Object)new_Type_SmallInt(-1);
info3618 = (Object)new_AST_Info((Type_String)string27606,(Type_String)string27605, (Type_SmallInt)smallint20480, (Type_SmallInt)smallint20481);
((AST_Send)send182786)->info = (AST_Info)info3618;
symbol35602 = (Object)new_Type_Symbol_cached(L"new:");
// size
send182787 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
((AST_Send)send182787)->info = (AST_Info)info3618;
smallint20482 = (Object)new_Type_SmallInt(1);
constant35501 = (Object)new_AST_Constant((Object)smallint20482);
// +
send182788 = (Object)new_AST_Send((Object)send182787, (Object)SMB__plus, 1, (Object)constant35501);
((AST_Send)send182788)->info = (AST_Info)info3618;
// new:
send182789 = (Object)new_AST_Send((Object)send182786, (Object)symbol35602, 1, (Object)send182788);
((AST_Send)send182789)->info = (AST_Info)info3618;
assign22402 = (Object)new_AST_Assign((Object)localvariable26412, (Object)send182789);
symbol35694 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
localvariable26413 = (Object)new_AST_Variable_named(L"el");
localvariable26414 = (Object)new_AST_Variable_named(L"i");
array21173 = (Object)new_Type_Array_with(2, (Object)localvariable26413, (Object)localvariable26414);
// at:put:
send182790 = (Object)new_AST_Send((Object)localvariable26412, (Object)SMB_at_put_, 2, (Object)localvariable26414, (Object)localvariable26413);
((AST_Send)send182790)->info = (AST_Info)info3618;
block12638 = (Object)new_AST_Block_with((Type_Array)array21173, (Type_Array)empty_Type_Array, 1, 1, send182790);
// doWithIndex:
send182791 = (Object)new_AST_Send((Object)Self, (Object)symbol35694, 1, (Object)block12638);
((AST_Send)send182791)->info = (AST_Info)info3618;
// last:
send182792 = (Object)new_AST_Send((Object)localvariable26412, (Object)symbol35699, 1, (Object)localvariable26411);
((AST_Send)send182792)->info = (AST_Info)info3618;
method25181 = (Object)new_AST_Method_with((Type_Array)array21171, (Type_Array)array21172, 4, assign22402, send182791, send182792, localvariable26412);
((AST_Method)method25181)->info = (AST_Info)info3618;
symbol35696 = (Object)new_Type_Symbol_cached(L"add:");
methodclosure25179 = (Object)new_Runtime_MethodClosure(method25181);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35696, (Runtime_MethodClosure)methodclosure25179);


// Array>>=
//= other
// 	self == other ifTrue: [^ true].
// 	self class = other class ifFalse: [ ^ false].
// 	self size = other size ifFalse: [ ^ false ].
// 	1 to: self size do: [ :index|
// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].
// 	].
// 	^ true.
localvariable26415 = (Object)new_AST_Variable_named(L"other");
array21174 = (Object)new_Type_Array_with(1, (Object)localvariable26415);
variable1563 = (Object)new_AST_Variable_named(L"return");
array21175 = (Object)new_Type_Array_with(1, (Object)variable1563);
// ==
send182793 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable26415);
string27607 = (Object)new_Type_String(L"=");
string27608 = (Object)new_Type_String(L"= other\n\tself == other ifTrue: [^ true].\n\tself class = other class ifFalse: [ ^ false].\n\tself size = other size ifFalse: [ ^ false ].\n\t1 to: self size do: [ :index|\n\t \t(self at: index) = (other at: index) ifFalse: [ ^ false].\n\t].\n\t^ true.");
smallint20483 = (Object)new_Type_SmallInt(-1);
smallint20484 = (Object)new_Type_SmallInt(-1);
info3619 = (Object)new_AST_Info((Type_String)string27608,(Type_String)string27607, (Type_SmallInt)smallint20483, (Type_SmallInt)smallint20484);
((AST_Send)send182793)->info = (AST_Info)info3619;
// escape:
send182794 = (Object)new_AST_Send((Object)variable1563, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send182794)->info = (AST_Info)info3619;
block12639 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182794);
// ifTrue:
send182795 = (Object)new_AST_Send((Object)send182793, (Object)SMB_ifTrue_, 1, (Object)block12639);
((AST_Send)send182795)->info = (AST_Info)info3619;
// class
send182796 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
((AST_Send)send182796)->info = (AST_Info)info3619;
// class
send182797 = (Object)new_AST_Send((Object)localvariable26415, (Object)SMB_class, 0);
((AST_Send)send182797)->info = (AST_Info)info3619;
// =
send182798 = (Object)new_AST_Send((Object)send182796, (Object)SMB__equal, 1, (Object)send182797);
((AST_Send)send182798)->info = (AST_Info)info3619;
// escape:
send182799 = (Object)new_AST_Send((Object)variable1563, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send182799)->info = (AST_Info)info3619;
block12640 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182799);
// ifFalse:
send182800 = (Object)new_AST_Send((Object)send182798, (Object)SMB_ifFalse_, 1, (Object)block12640);
((AST_Send)send182800)->info = (AST_Info)info3619;
// size
send182801 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
((AST_Send)send182801)->info = (AST_Info)info3619;
// size
send182802 = (Object)new_AST_Send((Object)localvariable26415, (Object)SMB_size, 0);
((AST_Send)send182802)->info = (AST_Info)info3619;
// =
send182803 = (Object)new_AST_Send((Object)send182801, (Object)SMB__equal, 1, (Object)send182802);
((AST_Send)send182803)->info = (AST_Info)info3619;
// escape:
send182804 = (Object)new_AST_Send((Object)variable1563, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send182804)->info = (AST_Info)info3619;
block12641 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182804);
// ifFalse:
send182805 = (Object)new_AST_Send((Object)send182803, (Object)SMB_ifFalse_, 1, (Object)block12641);
((AST_Send)send182805)->info = (AST_Info)info3619;
smallint20485 = (Object)new_Type_SmallInt(1);
constant35502 = (Object)new_AST_Constant((Object)smallint20485);
// size
send182806 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
((AST_Send)send182806)->info = (AST_Info)info3619;
localvariable26416 = (Object)new_AST_Variable_named(L"index");
array21176 = (Object)new_Type_Array_with(1, (Object)localvariable26416);
// at:
send182807 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26416);
((AST_Send)send182807)->info = (AST_Info)info3619;
// at:
send182808 = (Object)new_AST_Send((Object)localvariable26415, (Object)SMB_at_, 1, (Object)localvariable26416);
((AST_Send)send182808)->info = (AST_Info)info3619;
// =
send182809 = (Object)new_AST_Send((Object)send182807, (Object)SMB__equal, 1, (Object)send182808);
((AST_Send)send182809)->info = (AST_Info)info3619;
// escape:
send182810 = (Object)new_AST_Send((Object)variable1563, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send182810)->info = (AST_Info)info3619;
block12642 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182810);
// ifFalse:
send182811 = (Object)new_AST_Send((Object)send182809, (Object)SMB_ifFalse_, 1, (Object)block12642);
((AST_Send)send182811)->info = (AST_Info)info3619;
block12643 = (Object)new_AST_Block_with((Type_Array)array21176, (Type_Array)empty_Type_Array, 2, 1, send182811);
// to:do:
send182812 = (Object)new_AST_Send((Object)constant35502, (Object)symbol35647, 2, (Object)send182806, (Object)block12643);
((AST_Send)send182812)->info = (AST_Info)info3619;
block12644 = (Object)new_AST_Block_with((Type_Array)array21175, (Type_Array)empty_Type_Array, 1, 5, send182795, send182800, send182805, send182812, True_Const);
// on:
send182813 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12644);
method25182 = (Object)new_AST_Method_with((Type_Array)array21174, (Type_Array)empty_Type_Array, 1, send182813);
((AST_Method)method25182)->info = (AST_Info)info3619;
methodclosure25180 = (Object)new_Runtime_MethodClosure(method25182);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure25180);


// Array>>first
//first
// 	^ self at: 1.
smallint20486 = (Object)new_Type_SmallInt(1);
constant35503 = (Object)new_AST_Constant((Object)smallint20486);
// at:
send182814 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant35503);
string27609 = (Object)new_Type_String(L"first");
string27610 = (Object)new_Type_String(L"first\n\t^ self at: 1.");
smallint20487 = (Object)new_Type_SmallInt(-1);
smallint20488 = (Object)new_Type_SmallInt(-1);
info3620 = (Object)new_AST_Info((Type_String)string27610,(Type_String)string27609, (Type_SmallInt)smallint20487, (Type_SmallInt)smallint20488);
((AST_Send)send182814)->info = (AST_Info)info3620;
method25183 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182814);
((AST_Method)method25183)->info = (AST_Info)info3620;
symbol35693 = (Object)new_Type_Symbol_cached(L"first");
methodclosure25181 = (Object)new_Runtime_MethodClosure(method25183);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35693, (Runtime_MethodClosure)methodclosure25181);


// Array>>do:
//do: aBlockClosure 
// 	1 to: self size do: 
// 		[:index | aBlockClosure value: (self at: index)]
localvariable26417 = (Object)new_AST_Variable_named(L"aBlockClosure");
array21177 = (Object)new_Type_Array_with(1, (Object)localvariable26417);
smallint20489 = (Object)new_Type_SmallInt(1);
constant35504 = (Object)new_AST_Constant((Object)smallint20489);
// size
send182815 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27611 = (Object)new_Type_String(L"do:");
string27612 = (Object)new_Type_String(L"do: aBlockClosure \n\t1 to: self size do: \n\t\t[:index | aBlockClosure value: (self at: index)]");
smallint20490 = (Object)new_Type_SmallInt(-1);
smallint20491 = (Object)new_Type_SmallInt(-1);
info3621 = (Object)new_AST_Info((Type_String)string27612,(Type_String)string27611, (Type_SmallInt)smallint20490, (Type_SmallInt)smallint20491);
((AST_Send)send182815)->info = (AST_Info)info3621;
localvariable26418 = (Object)new_AST_Variable_named(L"index");
array21178 = (Object)new_Type_Array_with(1, (Object)localvariable26418);
// at:
send182816 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26418);
((AST_Send)send182816)->info = (AST_Info)info3621;
// value:
send182817 = (Object)new_AST_Send((Object)localvariable26417, (Object)SMB_value_, 1, (Object)send182816);
((AST_Send)send182817)->info = (AST_Info)info3621;
block12645 = (Object)new_AST_Block_with((Type_Array)array21178, (Type_Array)empty_Type_Array, 1, 1, send182817);
// to:do:
send182818 = (Object)new_AST_Send((Object)constant35504, (Object)symbol35647, 2, (Object)send182815, (Object)block12645);
((AST_Send)send182818)->info = (AST_Info)info3621;
method25184 = (Object)new_AST_Method_with((Type_Array)array21177, (Type_Array)empty_Type_Array, 2, send182818, Self);
((AST_Method)method25184)->info = (AST_Info)info3621;
methodclosure25182 = (Object)new_Runtime_MethodClosure(method25184);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35642, (Runtime_MethodClosure)methodclosure25182);


// Array>>isEmpty
//isEmpty
// 	^ self size = 0
// size
send182819 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27613 = (Object)new_Type_String(L"isEmpty");
string27614 = (Object)new_Type_String(L"isEmpty\n\t^ self size = 0");
smallint20492 = (Object)new_Type_SmallInt(-1);
smallint20493 = (Object)new_Type_SmallInt(-1);
info3622 = (Object)new_AST_Info((Type_String)string27614,(Type_String)string27613, (Type_SmallInt)smallint20492, (Type_SmallInt)smallint20493);
((AST_Send)send182819)->info = (AST_Info)info3622;
smallint20494 = (Object)new_Type_SmallInt(0);
constant35505 = (Object)new_AST_Constant((Object)smallint20494);
// =
send182820 = (Object)new_AST_Send((Object)send182819, (Object)SMB__equal, 1, (Object)constant35505);
((AST_Send)send182820)->info = (AST_Info)info3622;
method25185 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182820);
((AST_Method)method25185)->info = (AST_Info)info3622;
methodclosure25183 = (Object)new_Runtime_MethodClosure(method25185);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35634, (Runtime_MethodClosure)methodclosure25183);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable26419 = (Object)new_AST_Variable_named(L"thisValue");
localvariable26420 = (Object)new_AST_Variable_named(L"binaryBlock");
array21179 = (Object)new_Type_Array_with(2, (Object)localvariable26419, (Object)localvariable26420);
localvariable26421 = (Object)new_AST_Variable_named(L"nextValue");
array21180 = (Object)new_Type_Array_with(1, (Object)localvariable26421);
assign22403 = (Object)new_AST_Assign((Object)localvariable26421, (Object)localvariable26419);
localvariable26422 = (Object)new_AST_Variable_named(L"each");
array21181 = (Object)new_Type_Array_with(1, (Object)localvariable26422);
symbol35952 = (Object)new_Type_Symbol_cached(L"value:value:");
// value:value:
send182821 = (Object)new_AST_Send((Object)localvariable26420, (Object)symbol35952, 2, (Object)localvariable26421, (Object)localvariable26422);
string27615 = (Object)new_Type_String(L"inject:into:");
string27616 = (Object)new_Type_String(L"inject: thisValue into: binaryBlock \n\t\"Accumulate a running value associated with evaluating the argument, \n\tbinaryBlock, with the current value of the argument, thisValue, and the \n\treceiver as block arguments. For instance, to sum the numeric elements \n\tof a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + \n\tnext].\"\n\n\t| nextValue |\n\tnextValue := thisValue.\n\tself do: [:each | nextValue := binaryBlock value: nextValue value: each].\n\t^nextValue");
smallint20495 = (Object)new_Type_SmallInt(-1);
smallint20496 = (Object)new_Type_SmallInt(-1);
info3623 = (Object)new_AST_Info((Type_String)string27616,(Type_String)string27615, (Type_SmallInt)smallint20495, (Type_SmallInt)smallint20496);
((AST_Send)send182821)->info = (AST_Info)info3623;
assign22404 = (Object)new_AST_Assign((Object)localvariable26421, (Object)send182821);
block12646 = (Object)new_AST_Block_with((Type_Array)array21181, (Type_Array)empty_Type_Array, 1, 1, assign22404);
// do:
send182822 = (Object)new_AST_Send((Object)Self, (Object)symbol35642, 1, (Object)block12646);
((AST_Send)send182822)->info = (AST_Info)info3623;
method25186 = (Object)new_AST_Method_with((Type_Array)array21179, (Type_Array)array21180, 3, assign22403, send182822, localvariable26421);
((AST_Method)method25186)->info = (AST_Info)info3623;
symbol35697 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure25184 = (Object)new_Runtime_MethodClosure(method25186);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35697, (Runtime_MethodClosure)methodclosure25184);


// Array>>doWithIndex:
//doWithIndex: aBlockClosure 
// 	1 to: self size do:
// 		[:index | aBlockClosure value: (self at: index) value: index]
localvariable26423 = (Object)new_AST_Variable_named(L"aBlockClosure");
array21182 = (Object)new_Type_Array_with(1, (Object)localvariable26423);
smallint20497 = (Object)new_Type_SmallInt(1);
constant35506 = (Object)new_AST_Constant((Object)smallint20497);
// size
send182823 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27617 = (Object)new_Type_String(L"doWithIndex:");
string27618 = (Object)new_Type_String(L"doWithIndex: aBlockClosure \n\t1 to: self size do:\n\t\t[:index | aBlockClosure value: (self at: index) value: index]");
smallint20498 = (Object)new_Type_SmallInt(-1);
smallint20499 = (Object)new_Type_SmallInt(-1);
info3624 = (Object)new_AST_Info((Type_String)string27618,(Type_String)string27617, (Type_SmallInt)smallint20498, (Type_SmallInt)smallint20499);
((AST_Send)send182823)->info = (AST_Info)info3624;
localvariable26424 = (Object)new_AST_Variable_named(L"index");
array21183 = (Object)new_Type_Array_with(1, (Object)localvariable26424);
// at:
send182824 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26424);
((AST_Send)send182824)->info = (AST_Info)info3624;
// value:value:
send182825 = (Object)new_AST_Send((Object)localvariable26423, (Object)symbol35952, 2, (Object)send182824, (Object)localvariable26424);
((AST_Send)send182825)->info = (AST_Info)info3624;
block12647 = (Object)new_AST_Block_with((Type_Array)array21183, (Type_Array)empty_Type_Array, 1, 1, send182825);
// to:do:
send182826 = (Object)new_AST_Send((Object)constant35506, (Object)symbol35647, 2, (Object)send182823, (Object)block12647);
((AST_Send)send182826)->info = (AST_Info)info3624;
method25187 = (Object)new_AST_Method_with((Type_Array)array21182, (Type_Array)empty_Type_Array, 2, send182826, Self);
((AST_Method)method25187)->info = (AST_Info)info3624;
methodclosure25185 = (Object)new_Runtime_MethodClosure(method25187);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35694, (Runtime_MethodClosure)methodclosure25185);


// Array>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' #( '.
// 	self do: [:each|
// 		each printOn: aStream.
// 		aStream nextPutAll: ' '
// 	].
// 	aStream nextPutAll: ')'.
localvariable26425 = (Object)new_AST_Variable_named(L"aStream");
array21184 = (Object)new_Type_Array_with(1, (Object)localvariable26425);
symbol35622 = (Object)new_Type_Symbol_cached(L"printOn:");
super1963 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26425);
symbol35953 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string27619 = (Object)new_Type_String(L" #( ");
constant35507 = (Object)new_AST_Constant((Object)string27619);
// nextPutAll:
send182827 = (Object)new_AST_Send((Object)localvariable26425, (Object)symbol35953, 1, (Object)constant35507);
string27620 = (Object)new_Type_String(L"printOn:");
string27621 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \' #( \'.\n\tself do: [:each|\n\t\teach printOn: aStream.\n\t\taStream nextPutAll: \' \'\n\t].\n\taStream nextPutAll: \')\'.");
smallint20500 = (Object)new_Type_SmallInt(-1);
smallint20501 = (Object)new_Type_SmallInt(-1);
info3625 = (Object)new_AST_Info((Type_String)string27621,(Type_String)string27620, (Type_SmallInt)smallint20500, (Type_SmallInt)smallint20501);
((AST_Send)send182827)->info = (AST_Info)info3625;
localvariable26426 = (Object)new_AST_Variable_named(L"each");
array21185 = (Object)new_Type_Array_with(1, (Object)localvariable26426);
// printOn:
send182828 = (Object)new_AST_Send((Object)localvariable26426, (Object)symbol35622, 1, (Object)localvariable26425);
((AST_Send)send182828)->info = (AST_Info)info3625;
string27622 = (Object)new_Type_String(L" ");
constant35508 = (Object)new_AST_Constant((Object)string27622);
// nextPutAll:
send182829 = (Object)new_AST_Send((Object)localvariable26425, (Object)symbol35953, 1, (Object)constant35508);
((AST_Send)send182829)->info = (AST_Info)info3625;
block12648 = (Object)new_AST_Block_with((Type_Array)array21185, (Type_Array)empty_Type_Array, 1, 2, send182828, send182829);
// do:
send182830 = (Object)new_AST_Send((Object)Self, (Object)symbol35642, 1, (Object)block12648);
((AST_Send)send182830)->info = (AST_Info)info3625;
string27623 = (Object)new_Type_String(L")");
constant35509 = (Object)new_AST_Constant((Object)string27623);
// nextPutAll:
send182831 = (Object)new_AST_Send((Object)localvariable26425, (Object)symbol35953, 1, (Object)constant35509);
((AST_Send)send182831)->info = (AST_Info)info3625;
method25188 = (Object)new_AST_Method_with((Type_Array)array21184, (Type_Array)empty_Type_Array, 5, super1963, send182827, send182830, send182831, Self);
((AST_Method)method25188)->info = (AST_Info)info3625;
methodclosure25186 = (Object)new_Runtime_MethodClosure(method25188);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25186);


// Array>>replaceFrom:to:with:startingAt:
//replaceFrom: start to: stop with: replacement startingAt: repStart 
// 	"This destructively replaces elements from start to stop in the receiver 
// 	starting at index, repStart, in the sequenceable collection, 
// 	replacementCollection. Answer the receiver. No range checks are 
// 	performed."
// 
// 	| index repOff |
// 	repOff := repStart - start.
// 	index := start - 1.
// 	[(index := index + 1) <= stop]
// 		whileTrue: [self at: index put: (replacement at: repOff + index)]
localvariable26427 = (Object)new_AST_Variable_named(L"start");
localvariable26428 = (Object)new_AST_Variable_named(L"stop");
localvariable26429 = (Object)new_AST_Variable_named(L"replacement");
localvariable26430 = (Object)new_AST_Variable_named(L"repStart");
array21186 = (Object)new_Type_Array_with(4, (Object)localvariable26427, (Object)localvariable26428, (Object)localvariable26429, (Object)localvariable26430);
localvariable26431 = (Object)new_AST_Variable_named(L"index");
localvariable26432 = (Object)new_AST_Variable_named(L"repOff");
array21187 = (Object)new_Type_Array_with(2, (Object)localvariable26431, (Object)localvariable26432);
// -
send182832 = (Object)new_AST_Send((Object)localvariable26430, (Object)SMB__minus, 1, (Object)localvariable26427);
string27624 = (Object)new_Type_String(L"replaceFrom:to:with:startingAt:");
string27625 = (Object)new_Type_String(L"replaceFrom: start to: stop with: replacement startingAt: repStart \n\t\"This destructively replaces elements from start to stop in the receiver \n\tstarting at index, repStart, in the sequenceable collection, \n\treplacementCollection. Answer the receiver. No range checks are \n\tperformed.\"\n\n\t| index repOff |\n\trepOff := repStart - start.\n\tindex := start - 1.\n\t[(index := index + 1) <= stop]\n\t\twhileTrue: [self at: index put: (replacement at: repOff + index)]");
smallint20502 = (Object)new_Type_SmallInt(-1);
smallint20503 = (Object)new_Type_SmallInt(-1);
info3626 = (Object)new_AST_Info((Type_String)string27625,(Type_String)string27624, (Type_SmallInt)smallint20502, (Type_SmallInt)smallint20503);
((AST_Send)send182832)->info = (AST_Info)info3626;
assign22405 = (Object)new_AST_Assign((Object)localvariable26432, (Object)send182832);
smallint20504 = (Object)new_Type_SmallInt(1);
constant35510 = (Object)new_AST_Constant((Object)smallint20504);
// -
send182833 = (Object)new_AST_Send((Object)localvariable26427, (Object)SMB__minus, 1, (Object)constant35510);
((AST_Send)send182833)->info = (AST_Info)info3626;
assign22406 = (Object)new_AST_Assign((Object)localvariable26431, (Object)send182833);
smallint20505 = (Object)new_Type_SmallInt(1);
constant35511 = (Object)new_AST_Constant((Object)smallint20505);
// +
send182834 = (Object)new_AST_Send((Object)localvariable26431, (Object)SMB__plus, 1, (Object)constant35511);
((AST_Send)send182834)->info = (AST_Info)info3626;
assign22407 = (Object)new_AST_Assign((Object)localvariable26431, (Object)send182834);
// <=
send182835 = (Object)new_AST_Send((Object)assign22407, (Object)symbol35648, 1, (Object)localvariable26428);
((AST_Send)send182835)->info = (AST_Info)info3626;
block12649 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182835);
// +
send182836 = (Object)new_AST_Send((Object)localvariable26432, (Object)SMB__plus, 1, (Object)localvariable26431);
((AST_Send)send182836)->info = (AST_Info)info3626;
// at:
send182837 = (Object)new_AST_Send((Object)localvariable26429, (Object)SMB_at_, 1, (Object)send182836);
((AST_Send)send182837)->info = (AST_Info)info3626;
// at:put:
send182838 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable26431, (Object)send182837);
((AST_Send)send182838)->info = (AST_Info)info3626;
block12650 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182838);
// whileTrue:
send182839 = (Object)new_AST_Send((Object)block12649, (Object)SMB_whileTrue_, 1, (Object)block12650);
((AST_Send)send182839)->info = (AST_Info)info3626;
method25189 = (Object)new_AST_Method_with((Type_Array)array21186, (Type_Array)array21187, 4, assign22405, assign22406, send182839, Self);
((AST_Method)method25189)->info = (AST_Info)info3626;
symbol35698 = (Object)new_Type_Symbol_cached(L"replaceFrom:to:with:startingAt:");
methodclosure25187 = (Object)new_Runtime_MethodClosure(method25189);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35698, (Runtime_MethodClosure)methodclosure25187);


// Array>>first:
//first: aValue
// 	^ self at: 1 put: aValue.
localvariable26433 = (Object)new_AST_Variable_named(L"aValue");
array21188 = (Object)new_Type_Array_with(1, (Object)localvariable26433);
smallint20506 = (Object)new_Type_SmallInt(1);
constant35512 = (Object)new_AST_Constant((Object)smallint20506);
// at:put:
send182840 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant35512, (Object)localvariable26433);
string27626 = (Object)new_Type_String(L"first:");
string27627 = (Object)new_Type_String(L"first: aValue\n\t^ self at: 1 put: aValue.");
smallint20507 = (Object)new_Type_SmallInt(-1);
smallint20508 = (Object)new_Type_SmallInt(-1);
info3627 = (Object)new_AST_Info((Type_String)string27627,(Type_String)string27626, (Type_SmallInt)smallint20507, (Type_SmallInt)smallint20508);
((AST_Send)send182840)->info = (AST_Info)info3627;
method25190 = (Object)new_AST_Method_with((Type_Array)array21188, (Type_Array)empty_Type_Array, 1, send182840);
((AST_Method)method25190)->info = (AST_Info)info3627;
symbol35695 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure25188 = (Object)new_Runtime_MethodClosure(method25190);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol35695, (Runtime_MethodClosure)methodclosure25188);


// a PInternalMetaclass P#Array>>newFrom:
//newFrom: aCollection
// 	| result |
// 	result := self new: aCollection size.
// 	1 to: aCollection size do: [ :index|
// 		result at: index put: (aCollection  at: index).
// 	].
// 	^ result.
localvariable26434 = (Object)new_AST_Variable_named(L"aCollection");
array21189 = (Object)new_Type_Array_with(1, (Object)localvariable26434);
localvariable26435 = (Object)new_AST_Variable_named(L"result");
array21190 = (Object)new_Type_Array_with(1, (Object)localvariable26435);
// size
send182841 = (Object)new_AST_Send((Object)localvariable26434, (Object)SMB_size, 0);
string27628 = (Object)new_Type_String(L"newFrom:");
string27629 = (Object)new_Type_String(L"newFrom: aCollection\n\t| result |\n\tresult := self new: aCollection size.\n\t1 to: aCollection size do: [ :index|\n\t\tresult at: index put: (aCollection  at: index).\n\t].\n\t^ result.");
smallint20509 = (Object)new_Type_SmallInt(-1);
smallint20510 = (Object)new_Type_SmallInt(-1);
info3628 = (Object)new_AST_Info((Type_String)string27629,(Type_String)string27628, (Type_SmallInt)smallint20509, (Type_SmallInt)smallint20510);
((AST_Send)send182841)->info = (AST_Info)info3628;
// new:
send182842 = (Object)new_AST_Send((Object)Self, (Object)symbol35602, 1, (Object)send182841);
((AST_Send)send182842)->info = (AST_Info)info3628;
assign22408 = (Object)new_AST_Assign((Object)localvariable26435, (Object)send182842);
smallint20511 = (Object)new_Type_SmallInt(1);
constant35513 = (Object)new_AST_Constant((Object)smallint20511);
// size
send182843 = (Object)new_AST_Send((Object)localvariable26434, (Object)SMB_size, 0);
((AST_Send)send182843)->info = (AST_Info)info3628;
localvariable26436 = (Object)new_AST_Variable_named(L"index");
array21191 = (Object)new_Type_Array_with(1, (Object)localvariable26436);
// at:
send182844 = (Object)new_AST_Send((Object)localvariable26434, (Object)SMB_at_, 1, (Object)localvariable26436);
((AST_Send)send182844)->info = (AST_Info)info3628;
// at:put:
send182845 = (Object)new_AST_Send((Object)localvariable26435, (Object)SMB_at_put_, 2, (Object)localvariable26436, (Object)send182844);
((AST_Send)send182845)->info = (AST_Info)info3628;
block12651 = (Object)new_AST_Block_with((Type_Array)array21191, (Type_Array)empty_Type_Array, 1, 1, send182845);
// to:do:
send182846 = (Object)new_AST_Send((Object)constant35513, (Object)symbol35647, 2, (Object)send182843, (Object)block12651);
((AST_Send)send182846)->info = (AST_Info)info3628;
method25191 = (Object)new_AST_Method_with((Type_Array)array21189, (Type_Array)array21190, 3, assign22408, send182846, localvariable26435);
((AST_Method)method25191)->info = (AST_Info)info3628;
symbol35691 = (Object)new_Type_Symbol_cached(L"newFrom:");
methodclosure25189 = (Object)new_Runtime_MethodClosure(method25191);
store_method((Type_Class)HEADER(Type_Array_Class), (Type_Symbol)symbol35691, (Runtime_MethodClosure)methodclosure25189);


// a PInternalMetaclass P#Array>>with:
//with: anObject
// 	| result |
// 	result := (self new: 1).
// 	result at: 1 put: anObject.
// 	^ result.
localvariable26437 = (Object)new_AST_Variable_named(L"anObject");
array21192 = (Object)new_Type_Array_with(1, (Object)localvariable26437);
localvariable26438 = (Object)new_AST_Variable_named(L"result");
array21193 = (Object)new_Type_Array_with(1, (Object)localvariable26438);
smallint20512 = (Object)new_Type_SmallInt(1);
constant35514 = (Object)new_AST_Constant((Object)smallint20512);
// new:
send182847 = (Object)new_AST_Send((Object)Self, (Object)symbol35602, 1, (Object)constant35514);
string27630 = (Object)new_Type_String(L"with:");
string27631 = (Object)new_Type_String(L"with: anObject\n\t| result |\n\tresult := (self new: 1).\n\tresult at: 1 put: anObject.\n\t^ result.");
smallint20513 = (Object)new_Type_SmallInt(-1);
smallint20514 = (Object)new_Type_SmallInt(-1);
info3629 = (Object)new_AST_Info((Type_String)string27631,(Type_String)string27630, (Type_SmallInt)smallint20513, (Type_SmallInt)smallint20514);
((AST_Send)send182847)->info = (AST_Info)info3629;
assign22409 = (Object)new_AST_Assign((Object)localvariable26438, (Object)send182847);
smallint20515 = (Object)new_Type_SmallInt(1);
constant35515 = (Object)new_AST_Constant((Object)smallint20515);
// at:put:
send182848 = (Object)new_AST_Send((Object)localvariable26438, (Object)SMB_at_put_, 2, (Object)constant35515, (Object)localvariable26437);
((AST_Send)send182848)->info = (AST_Info)info3629;
method25192 = (Object)new_AST_Method_with((Type_Array)array21192, (Type_Array)array21193, 3, assign22409, send182848, localvariable26438);
((AST_Method)method25192)->info = (AST_Info)info3629;
symbol35690 = (Object)new_Type_Symbol_cached(L"with:");
methodclosure25190 = (Object)new_Runtime_MethodClosure(method25192);
store_method((Type_Class)HEADER(Type_Array_Class), (Type_Symbol)symbol35690, (Runtime_MethodClosure)methodclosure25190);

// size
send182849 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27632 = (Object)new_Type_String(L"grow");
string27633 = (Object)new_Type_String(L"grow\n\t\"Become larger. Typically, a subclass has to override this if the subclass\n\tadds instance variables.\"\n\t| newArray |\n\tnewArray := Array new: self size + self growSize.\n\tnewArray replaceFrom: 1 to: array size with: array startingAt: 1.\n\tarray := newArray");
smallint20516 = (Object)new_Type_SmallInt(-1);
smallint20517 = (Object)new_Type_SmallInt(-1);
info3630 = (Object)new_AST_Info((Type_String)string27633,(Type_String)string27632, (Type_SmallInt)smallint20516, (Type_SmallInt)smallint20517);
((AST_Send)send182849)->info = (AST_Info)info3630;
symbol35717 = (Object)new_Type_Symbol_cached(L"growSize");
// growSize
send182850 = (Object)new_AST_Send((Object)Self, (Object)symbol35717, 0);
((AST_Send)send182850)->info = (AST_Info)info3630;
// +
send182851 = (Object)new_AST_Send((Object)send182849, (Object)SMB__plus, 1, (Object)send182850);
((AST_Send)send182851)->info = (AST_Info)info3630;
// new:
send182852 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)send182851);
((AST_Send)send182852)->info = (AST_Info)info3630;
assign22410 = (Object)new_AST_Assign((Object)localvariable26409, (Object)send182852);
smallint20518 = (Object)new_Type_SmallInt(1);
constant35516 = (Object)new_AST_Constant((Object)smallint20518);
// size
send182853 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_size, 0);
((AST_Send)send182853)->info = (AST_Info)info3630;
smallint20519 = (Object)new_Type_SmallInt(1);
constant35517 = (Object)new_AST_Constant((Object)smallint20519);
// replaceFrom:to:with:startingAt:
send182854 = (Object)new_AST_Send((Object)localvariable26409, (Object)symbol35698, 4, (Object)constant35516, (Object)send182853, (Object)instancevariable6055, (Object)constant35517);
((AST_Send)send182854)->info = (AST_Info)info3630;
assign22411 = (Object)new_AST_Assign((Object)instancevariable6055, (Object)localvariable26409);
method25193 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21169, 4, assign22410, send182854, assign22411, Self);
((AST_Method)method25193)->info = (AST_Info)info3630;
symbol35716 = (Object)new_Type_Symbol_cached(L"grow");
methodclosure25191 = (Object)new_Runtime_MethodClosure(method25193);
store_method((Type_Class)class4086, (Type_Symbol)symbol35716, (Runtime_MethodClosure)methodclosure25191);


// OrderedCollection>>setCollection:
//setCollection: anArray
// 	array := anArray.
// 	self reset
localvariable26439 = (Object)new_AST_Variable_named(L"anArray");
array21194 = (Object)new_Type_Array_with(1, (Object)localvariable26439);
assign22412 = (Object)new_AST_Assign((Object)instancevariable6055, (Object)localvariable26439);
symbol35664 = (Object)new_Type_Symbol_cached(L"reset");
// reset
send182855 = (Object)new_AST_Send((Object)Self, (Object)symbol35664, 0);
string27634 = (Object)new_Type_String(L"setCollection:");
string27635 = (Object)new_Type_String(L"setCollection: anArray\n\tarray := anArray.\n\tself reset");
smallint20520 = (Object)new_Type_SmallInt(-1);
smallint20521 = (Object)new_Type_SmallInt(-1);
info3631 = (Object)new_AST_Info((Type_String)string27635,(Type_String)string27634, (Type_SmallInt)smallint20520, (Type_SmallInt)smallint20521);
((AST_Send)send182855)->info = (AST_Info)info3631;
method25194 = (Object)new_AST_Method_with((Type_Array)array21194, (Type_Array)empty_Type_Array, 3, assign22412, send182855, Self);
((AST_Method)method25194)->info = (AST_Info)info3631;
symbol35718 = (Object)new_Type_Symbol_cached(L"setCollection:");
methodclosure25192 = (Object)new_Runtime_MethodClosure(method25194);
store_method((Type_Class)class4086, (Type_Symbol)symbol35718, (Runtime_MethodClosure)methodclosure25192);


// OrderedCollection>>add:
//add: newObject
// 
// 	^self addLast: newObject
localvariable26440 = (Object)new_AST_Variable_named(L"newObject");
array21195 = (Object)new_Type_Array_with(1, (Object)localvariable26440);
// addLast:
send182856 = (Object)new_AST_Send((Object)Self, (Object)symbol35714, 1, (Object)localvariable26440);
string27636 = (Object)new_Type_String(L"add:");
string27637 = (Object)new_Type_String(L"add: newObject\n\n\t^self addLast: newObject");
smallint20522 = (Object)new_Type_SmallInt(-1);
smallint20523 = (Object)new_Type_SmallInt(-1);
info3632 = (Object)new_AST_Info((Type_String)string27637,(Type_String)string27636, (Type_SmallInt)smallint20522, (Type_SmallInt)smallint20523);
((AST_Send)send182856)->info = (AST_Info)info3632;
method25195 = (Object)new_AST_Method_with((Type_Array)array21195, (Type_Array)empty_Type_Array, 1, send182856);
((AST_Method)method25195)->info = (AST_Info)info3632;
methodclosure25193 = (Object)new_Runtime_MethodClosure(method25195);
store_method((Type_Class)class4086, (Type_Symbol)symbol35696, (Runtime_MethodClosure)methodclosure25193);


// OrderedCollection>>size
//size
// 	"Answer how many elements the receiver contains."
// 
// 	^ lastIndex - firstIndex + 1
// -
send182857 = (Object)new_AST_Send((Object)instancevariable6057, (Object)SMB__minus, 1, (Object)instancevariable6056);
string27638 = (Object)new_Type_String(L"size");
string27639 = (Object)new_Type_String(L"size\n\t\"Answer how many elements the receiver contains.\"\n\n\t^ lastIndex - firstIndex + 1");
smallint20524 = (Object)new_Type_SmallInt(-1);
smallint20525 = (Object)new_Type_SmallInt(-1);
info3633 = (Object)new_AST_Info((Type_String)string27639,(Type_String)string27638, (Type_SmallInt)smallint20524, (Type_SmallInt)smallint20525);
((AST_Send)send182857)->info = (AST_Info)info3633;
smallint20526 = (Object)new_Type_SmallInt(1);
constant35518 = (Object)new_AST_Constant((Object)smallint20526);
// +
send182858 = (Object)new_AST_Send((Object)send182857, (Object)SMB__plus, 1, (Object)constant35518);
((AST_Send)send182858)->info = (AST_Info)info3633;
method25196 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182858);
((AST_Method)method25196)->info = (AST_Info)info3633;
methodclosure25194 = (Object)new_Runtime_MethodClosure(method25196);
store_method((Type_Class)class4086, (Type_Symbol)SMB_size, (Runtime_MethodClosure)methodclosure25194);


// OrderedCollection>>growSize
//growSize
// 	^ array size max: 2
// size
send182859 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_size, 0);
string27640 = (Object)new_Type_String(L"growSize");
string27641 = (Object)new_Type_String(L"growSize\n\t^ array size max: 2");
smallint20527 = (Object)new_Type_SmallInt(-1);
smallint20528 = (Object)new_Type_SmallInt(-1);
info3634 = (Object)new_AST_Info((Type_String)string27641,(Type_String)string27640, (Type_SmallInt)smallint20527, (Type_SmallInt)smallint20528);
((AST_Send)send182859)->info = (AST_Info)info3634;
smallint20529 = (Object)new_Type_SmallInt(2);
constant35519 = (Object)new_AST_Constant((Object)smallint20529);
// max:
send182860 = (Object)new_AST_Send((Object)send182859, (Object)symbol35646, 1, (Object)constant35519);
((AST_Send)send182860)->info = (AST_Info)info3634;
method25197 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182860);
((AST_Method)method25197)->info = (AST_Info)info3634;
methodclosure25195 = (Object)new_Runtime_MethodClosure(method25197);
store_method((Type_Class)class4086, (Type_Symbol)symbol35717, (Runtime_MethodClosure)methodclosure25195);


// OrderedCollection>>makeRoomAtLast
//makeRoomAtLast
// 	| newLast delta |
// 	newLast := self size.
// 	array size - self size = 0 ifTrue: [self grow].
// 	(delta := firstIndex - 1) = 0 ifTrue: [^ self].
// 	"we might be here under false premises or grow did the job for us"
// 	1 to: newLast do:
// 		[:index |
// 		array at: index put: (array at: index + delta).
// 		array at: index + delta put: nil].
// 	firstIndex := 1.
// 	lastIndex := newLast
localvariable26441 = (Object)new_AST_Variable_named(L"newLast");
localvariable26442 = (Object)new_AST_Variable_named(L"delta");
array21196 = (Object)new_Type_Array_with(2, (Object)localvariable26441, (Object)localvariable26442);
variable1564 = (Object)new_AST_Variable_named(L"return");
array21197 = (Object)new_Type_Array_with(1, (Object)variable1564);
// size
send182861 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27642 = (Object)new_Type_String(L"makeRoomAtLast");
string27643 = (Object)new_Type_String(L"makeRoomAtLast\n\t| newLast delta |\n\tnewLast := self size.\n\tarray size - self size = 0 ifTrue: [self grow].\n\t(delta := firstIndex - 1) = 0 ifTrue: [^ self].\n\t\"we might be here under false premises or grow did the job for us\"\n\t1 to: newLast do:\n\t\t[:index |\n\t\tarray at: index put: (array at: index + delta).\n\t\tarray at: index + delta put: nil].\n\tfirstIndex := 1.\n\tlastIndex := newLast");
smallint20530 = (Object)new_Type_SmallInt(-1);
smallint20531 = (Object)new_Type_SmallInt(-1);
info3635 = (Object)new_AST_Info((Type_String)string27643,(Type_String)string27642, (Type_SmallInt)smallint20530, (Type_SmallInt)smallint20531);
((AST_Send)send182861)->info = (AST_Info)info3635;
assign22413 = (Object)new_AST_Assign((Object)localvariable26441, (Object)send182861);
// size
send182862 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_size, 0);
((AST_Send)send182862)->info = (AST_Info)info3635;
// size
send182863 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
((AST_Send)send182863)->info = (AST_Info)info3635;
// -
send182864 = (Object)new_AST_Send((Object)send182862, (Object)SMB__minus, 1, (Object)send182863);
((AST_Send)send182864)->info = (AST_Info)info3635;
smallint20532 = (Object)new_Type_SmallInt(0);
constant35520 = (Object)new_AST_Constant((Object)smallint20532);
// =
send182865 = (Object)new_AST_Send((Object)send182864, (Object)SMB__equal, 1, (Object)constant35520);
((AST_Send)send182865)->info = (AST_Info)info3635;
// grow
send182866 = (Object)new_AST_Send((Object)Self, (Object)symbol35716, 0);
((AST_Send)send182866)->info = (AST_Info)info3635;
block12652 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182866);
// ifTrue:
send182867 = (Object)new_AST_Send((Object)send182865, (Object)SMB_ifTrue_, 1, (Object)block12652);
((AST_Send)send182867)->info = (AST_Info)info3635;
smallint20533 = (Object)new_Type_SmallInt(1);
constant35521 = (Object)new_AST_Constant((Object)smallint20533);
// -
send182868 = (Object)new_AST_Send((Object)instancevariable6056, (Object)SMB__minus, 1, (Object)constant35521);
((AST_Send)send182868)->info = (AST_Info)info3635;
assign22414 = (Object)new_AST_Assign((Object)localvariable26442, (Object)send182868);
smallint20534 = (Object)new_Type_SmallInt(0);
constant35522 = (Object)new_AST_Constant((Object)smallint20534);
// =
send182869 = (Object)new_AST_Send((Object)assign22414, (Object)SMB__equal, 1, (Object)constant35522);
((AST_Send)send182869)->info = (AST_Info)info3635;
// escape:
send182870 = (Object)new_AST_Send((Object)variable1564, (Object)SMB_escape_, 1, (Object)Self);
((AST_Send)send182870)->info = (AST_Info)info3635;
block12653 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182870);
// ifTrue:
send182871 = (Object)new_AST_Send((Object)send182869, (Object)SMB_ifTrue_, 1, (Object)block12653);
((AST_Send)send182871)->info = (AST_Info)info3635;
smallint20535 = (Object)new_Type_SmallInt(1);
constant35523 = (Object)new_AST_Constant((Object)smallint20535);
localvariable26443 = (Object)new_AST_Variable_named(L"index");
array21198 = (Object)new_Type_Array_with(1, (Object)localvariable26443);
// +
send182872 = (Object)new_AST_Send((Object)localvariable26443, (Object)SMB__plus, 1, (Object)localvariable26442);
((AST_Send)send182872)->info = (AST_Info)info3635;
// at:
send182873 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_at_, 1, (Object)send182872);
((AST_Send)send182873)->info = (AST_Info)info3635;
// at:put:
send182874 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_at_put_, 2, (Object)localvariable26443, (Object)send182873);
((AST_Send)send182874)->info = (AST_Info)info3635;
// +
send182875 = (Object)new_AST_Send((Object)localvariable26443, (Object)SMB__plus, 1, (Object)localvariable26442);
((AST_Send)send182875)->info = (AST_Info)info3635;
// at:put:
send182876 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_at_put_, 2, (Object)send182875, (Object)Nil_Const);
((AST_Send)send182876)->info = (AST_Info)info3635;
block12654 = (Object)new_AST_Block_with((Type_Array)array21198, (Type_Array)empty_Type_Array, 2, 2, send182874, send182876);
// to:do:
send182877 = (Object)new_AST_Send((Object)constant35523, (Object)symbol35647, 2, (Object)localvariable26441, (Object)block12654);
((AST_Send)send182877)->info = (AST_Info)info3635;
smallint20536 = (Object)new_Type_SmallInt(1);
constant35524 = (Object)new_AST_Constant((Object)smallint20536);
assign22415 = (Object)new_AST_Assign((Object)instancevariable6056, (Object)constant35524);
assign22416 = (Object)new_AST_Assign((Object)instancevariable6057, (Object)localvariable26441);
block12655 = (Object)new_AST_Block_with((Type_Array)array21197, (Type_Array)empty_Type_Array, 1, 7, assign22413, send182867, send182871, send182877, assign22415, assign22416, Self);
// on:
send182878 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12655);
method25198 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21196, 1, send182878);
((AST_Method)method25198)->info = (AST_Info)info3635;
methodclosure25196 = (Object)new_Runtime_MethodClosure(method25198);
store_method((Type_Class)class4086, (Type_Symbol)symbol35715, (Runtime_MethodClosure)methodclosure25196);


// OrderedCollection>>reset
//reset
// 	firstIndex := array size // 3 max: 1.
// 	lastIndex := firstIndex - 1
// size
send182879 = (Object)new_AST_Send((Object)instancevariable6055, (Object)SMB_size, 0);
string27644 = (Object)new_Type_String(L"reset");
string27645 = (Object)new_Type_String(L"reset\n\tfirstIndex := array size // 3 max: 1.\n\tlastIndex := firstIndex - 1");
smallint20537 = (Object)new_Type_SmallInt(-1);
smallint20538 = (Object)new_Type_SmallInt(-1);
info3636 = (Object)new_AST_Info((Type_String)string27645,(Type_String)string27644, (Type_SmallInt)smallint20537, (Type_SmallInt)smallint20538);
((AST_Send)send182879)->info = (AST_Info)info3636;
symbol35954 = (Object)new_Type_Symbol_cached(L"//");
smallint20539 = (Object)new_Type_SmallInt(3);
constant35525 = (Object)new_AST_Constant((Object)smallint20539);
// //
send182880 = (Object)new_AST_Send((Object)send182879, (Object)symbol35954, 1, (Object)constant35525);
((AST_Send)send182880)->info = (AST_Info)info3636;
smallint20540 = (Object)new_Type_SmallInt(1);
constant35526 = (Object)new_AST_Constant((Object)smallint20540);
// max:
send182881 = (Object)new_AST_Send((Object)send182880, (Object)symbol35646, 1, (Object)constant35526);
((AST_Send)send182881)->info = (AST_Info)info3636;
assign22417 = (Object)new_AST_Assign((Object)instancevariable6056, (Object)send182881);
smallint20541 = (Object)new_Type_SmallInt(1);
constant35527 = (Object)new_AST_Constant((Object)smallint20541);
// -
send182882 = (Object)new_AST_Send((Object)instancevariable6056, (Object)SMB__minus, 1, (Object)constant35527);
((AST_Send)send182882)->info = (AST_Info)info3636;
assign22418 = (Object)new_AST_Assign((Object)instancevariable6057, (Object)send182882);
method25199 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, assign22417, assign22418, Self);
((AST_Method)method25199)->info = (AST_Info)info3636;
methodclosure25197 = (Object)new_Runtime_MethodClosure(method25199);
store_method((Type_Class)class4086, (Type_Symbol)symbol35664, (Runtime_MethodClosure)methodclosure25197);


// a PMetaclass P#OrderedCollection>>new
//new
// 	^ self new: 10
smallint20542 = (Object)new_Type_SmallInt(10);
constant35528 = (Object)new_AST_Constant((Object)smallint20542);
// new:
send182883 = (Object)new_AST_Send((Object)Self, (Object)symbol35602, 1, (Object)constant35528);
string27646 = (Object)new_Type_String(L"new");
string27647 = (Object)new_Type_String(L"new\n\t^ self new: 10");
smallint20543 = (Object)new_Type_SmallInt(-1);
smallint20544 = (Object)new_Type_SmallInt(-1);
info3637 = (Object)new_AST_Info((Type_String)string27647,(Type_String)string27646, (Type_SmallInt)smallint20543, (Type_SmallInt)smallint20544);
((AST_Send)send182883)->info = (AST_Info)info3637;
method25200 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182883);
((AST_Method)method25200)->info = (AST_Info)info3637;
methodclosure25198 = (Object)new_Runtime_MethodClosure(method25200);
store_method((Type_Class)metaclass4086, (Type_Symbol)symbol35612, (Runtime_MethodClosure)methodclosure25198);


// a PMetaclass P#OrderedCollection>>ofSize:
//ofSize: n
// 	"Create a new collection of size n with nil as its elements.
// 	This method exists because OrderedCollection new: n creates an
// 	empty collection,  not one of size n."
// 	| collection |
// 	collection := self new: n.
// 	collection setContents: (collection collector).
// 	^ collection
// 
localvariable26444 = (Object)new_AST_Variable_named(L"n");
array21199 = (Object)new_Type_Array_with(1, (Object)localvariable26444);
localvariable26445 = (Object)new_AST_Variable_named(L"collection");
array21200 = (Object)new_Type_Array_with(1, (Object)localvariable26445);
// new:
send182884 = (Object)new_AST_Send((Object)Self, (Object)symbol35602, 1, (Object)localvariable26444);
string27648 = (Object)new_Type_String(L"ofSize:");
string27649 = (Object)new_Type_String(L"ofSize: n\n\t\"Create a new collection of size n with nil as its elements.\n\tThis method exists because OrderedCollection new: n creates an\n\tempty collection,  not one of size n.\"\n\t| collection |\n\tcollection := self new: n.\n\tcollection setContents: (collection collector).\n\t^ collection\n");
smallint20545 = (Object)new_Type_SmallInt(-1);
smallint20546 = (Object)new_Type_SmallInt(-1);
info3638 = (Object)new_AST_Info((Type_String)string27649,(Type_String)string27648, (Type_SmallInt)smallint20545, (Type_SmallInt)smallint20546);
((AST_Send)send182884)->info = (AST_Info)info3638;
assign22419 = (Object)new_AST_Assign((Object)localvariable26445, (Object)send182884);
symbol35955 = (Object)new_Type_Symbol_cached(L"setContents:");
symbol35956 = (Object)new_Type_Symbol_cached(L"collector");
// collector
send182885 = (Object)new_AST_Send((Object)localvariable26445, (Object)symbol35956, 0);
((AST_Send)send182885)->info = (AST_Info)info3638;
// setContents:
send182886 = (Object)new_AST_Send((Object)localvariable26445, (Object)symbol35955, 1, (Object)send182885);
((AST_Send)send182886)->info = (AST_Info)info3638;
method25201 = (Object)new_AST_Method_with((Type_Array)array21199, (Type_Array)array21200, 3, assign22419, send182886, localvariable26445);
((AST_Method)method25201)->info = (AST_Info)info3638;
symbol35712 = (Object)new_Type_Symbol_cached(L"ofSize:");
methodclosure25199 = (Object)new_Runtime_MethodClosure(method25201);
store_method((Type_Class)metaclass4086, (Type_Symbol)symbol35712, (Runtime_MethodClosure)methodclosure25199);


// a PMetaclass P#OrderedCollection>>new:withAll:
//new: anInteger withAll: anObject
// 	^ self basicNew setContents: (Array new: anInteger withAll: anObject)
localvariable26446 = (Object)new_AST_Variable_named(L"anInteger");
localvariable26447 = (Object)new_AST_Variable_named(L"anObject");
array21201 = (Object)new_Type_Array_with(2, (Object)localvariable26446, (Object)localvariable26447);
// basicNew
send182887 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string27650 = (Object)new_Type_String(L"new:withAll:");
string27651 = (Object)new_Type_String(L"new: anInteger withAll: anObject\n\t^ self basicNew setContents: (Array new: anInteger withAll: anObject)");
smallint20547 = (Object)new_Type_SmallInt(-1);
smallint20548 = (Object)new_Type_SmallInt(-1);
info3639 = (Object)new_AST_Info((Type_String)string27651,(Type_String)string27650, (Type_SmallInt)smallint20547, (Type_SmallInt)smallint20548);
((AST_Send)send182887)->info = (AST_Info)info3639;
symbol35713 = (Object)new_Type_Symbol_cached(L"new:withAll:");
// new:withAll:
send182888 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35713, 2, (Object)localvariable26446, (Object)localvariable26447);
((AST_Send)send182888)->info = (AST_Info)info3639;
// setContents:
send182889 = (Object)new_AST_Send((Object)send182887, (Object)symbol35955, 1, (Object)send182888);
((AST_Send)send182889)->info = (AST_Info)info3639;
method25202 = (Object)new_AST_Method_with((Type_Array)array21201, (Type_Array)empty_Type_Array, 1, send182889);
((AST_Method)method25202)->info = (AST_Info)info3639;
methodclosure25200 = (Object)new_Runtime_MethodClosure(method25202);
store_method((Type_Class)metaclass4086, (Type_Symbol)symbol35713, (Runtime_MethodClosure)methodclosure25200);


// a PMetaclass P#OrderedCollection>>new:
//new: anInteger 
// 	"Create a collection with enough room allocated to contain up to anInteger elements.
// 	The new instance will be of size 0 (allocated room is not necessarily used)."
// 	
// 	^self basicNew setCollection: (Array new: anInteger)
localvariable26448 = (Object)new_AST_Variable_named(L"anInteger");
array21202 = (Object)new_Type_Array_with(1, (Object)localvariable26448);
// basicNew
send182890 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string27652 = (Object)new_Type_String(L"new:");
string27653 = (Object)new_Type_String(L"new: anInteger \n\t\"Create a collection with enough room allocated to contain up to anInteger elements.\n\tThe new instance will be of size 0 (allocated room is not necessarily used).\"\n\t\n\t^self basicNew setCollection: (Array new: anInteger)");
smallint20549 = (Object)new_Type_SmallInt(-1);
smallint20550 = (Object)new_Type_SmallInt(-1);
info3640 = (Object)new_AST_Info((Type_String)string27653,(Type_String)string27652, (Type_SmallInt)smallint20549, (Type_SmallInt)smallint20550);
((AST_Send)send182890)->info = (AST_Info)info3640;
// new:
send182891 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)localvariable26448);
((AST_Send)send182891)->info = (AST_Info)info3640;
// setCollection:
send182892 = (Object)new_AST_Send((Object)send182890, (Object)symbol35718, 1, (Object)send182891);
((AST_Send)send182892)->info = (AST_Info)info3640;
method25203 = (Object)new_AST_Method_with((Type_Array)array21202, (Type_Array)empty_Type_Array, 1, send182892);
((AST_Method)method25203)->info = (AST_Info)info3640;
methodclosure25201 = (Object)new_Runtime_MethodClosure(method25203);
store_method((Type_Class)metaclass4086, (Type_Symbol)symbol35602, (Runtime_MethodClosure)methodclosure25201);


// a PMetaclass P#OrderedCollection>>newFrom:
//newFrom: aCollection 
// 	"Answer an instance of me containing the same elements as aCollection."
// 
// 	| newCollection |
// 	newCollection := self new: aCollection size.
// 	newCollection addAll: aCollection.
// 	^newCollection
// 
// "	OrderedCollection newFrom: {1. 2. 3}
// 	{1. 2. 3} as: OrderedCollection
// 	{4. 2. 7} as: SortedCollection
// "
localvariable26449 = (Object)new_AST_Variable_named(L"aCollection");
array21203 = (Object)new_Type_Array_with(1, (Object)localvariable26449);
localvariable26450 = (Object)new_AST_Variable_named(L"newCollection");
array21204 = (Object)new_Type_Array_with(1, (Object)localvariable26450);
// size
send182893 = (Object)new_AST_Send((Object)localvariable26449, (Object)SMB_size, 0);
string27654 = (Object)new_Type_String(L"newFrom:");
string27655 = (Object)new_Type_String(L"newFrom: aCollection \n\t\"Answer an instance of me containing the same elements as aCollection.\"\n\n\t| newCollection |\n\tnewCollection := self new: aCollection size.\n\tnewCollection addAll: aCollection.\n\t^newCollection\n\n\"\tOrderedCollection newFrom: {1. 2. 3}\n\t{1. 2. 3} as: OrderedCollection\n\t{4. 2. 7} as: SortedCollection\n\"");
smallint20551 = (Object)new_Type_SmallInt(-1);
smallint20552 = (Object)new_Type_SmallInt(-1);
info3641 = (Object)new_AST_Info((Type_String)string27655,(Type_String)string27654, (Type_SmallInt)smallint20551, (Type_SmallInt)smallint20552);
((AST_Send)send182893)->info = (AST_Info)info3641;
// new:
send182894 = (Object)new_AST_Send((Object)Self, (Object)symbol35602, 1, (Object)send182893);
((AST_Send)send182894)->info = (AST_Info)info3641;
assign22420 = (Object)new_AST_Assign((Object)localvariable26450, (Object)send182894);
symbol35878 = (Object)new_Type_Symbol_cached(L"addAll:");
// addAll:
send182895 = (Object)new_AST_Send((Object)localvariable26450, (Object)symbol35878, 1, (Object)localvariable26449);
((AST_Send)send182895)->info = (AST_Info)info3641;
method25204 = (Object)new_AST_Method_with((Type_Array)array21203, (Type_Array)array21204, 3, assign22420, send182895, localvariable26450);
((AST_Method)method25204)->info = (AST_Info)info3641;
methodclosure25202 = (Object)new_Runtime_MethodClosure(method25204);
store_method((Type_Class)metaclass4086, (Type_Symbol)symbol35691, (Runtime_MethodClosure)methodclosure25202);

// new
send182896 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string27656 = (Object)new_Type_String(L"initialize");
string27657 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tself initialize: OrderedCollection new.");
smallint20553 = (Object)new_Type_SmallInt(-1);
smallint20554 = (Object)new_Type_SmallInt(-1);
info3642 = (Object)new_AST_Info((Type_String)string27657,(Type_String)string27656, (Type_SmallInt)smallint20553, (Type_SmallInt)smallint20554);
((AST_Send)send182896)->info = (AST_Info)info3642;
// initialize:
send182897 = (Object)new_AST_Send((Object)Self, (Object)symbol35876, 1, (Object)send182896);
((AST_Send)send182897)->info = (AST_Info)info3642;
method25205 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1961, send182897, Self);
((AST_Method)method25205)->info = (AST_Info)info3642;
methodclosure25203 = (Object)new_Runtime_MethodClosure(method25205);
store_method((Type_Class)class4037, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25203);


// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable26451 = (Object)new_AST_Variable_named(L"child");
array21205 = (Object)new_Type_Array_with(1, (Object)localvariable26451);
// asPEG
send182898 = (Object)new_AST_Send((Object)localvariable26451, (Object)symbol35639, 0);
string27658 = (Object)new_Type_String(L"<=");
string27659 = (Object)new_Type_String(L"<= child\n\tchildren add: child asPEG");
smallint20555 = (Object)new_Type_SmallInt(-1);
smallint20556 = (Object)new_Type_SmallInt(-1);
info3643 = (Object)new_AST_Info((Type_String)string27659,(Type_String)string27658, (Type_SmallInt)smallint20555, (Type_SmallInt)smallint20556);
((AST_Send)send182898)->info = (AST_Info)info3643;
// add:
send182899 = (Object)new_AST_Send((Object)instancevariable5996, (Object)symbol35696, 1, (Object)send182898);
((AST_Send)send182899)->info = (AST_Info)info3643;
method25206 = (Object)new_AST_Method_with((Type_Array)array21205, (Type_Array)empty_Type_Array, 2, send182899, Self);
((AST_Method)method25206)->info = (AST_Info)info3643;
methodclosure25204 = (Object)new_Runtime_MethodClosure(method25206);
store_method((Type_Class)class4037, (Type_Symbol)symbol35648, (Runtime_MethodClosure)methodclosure25204);


// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable26452 = (Object)new_AST_Variable_named(L"input");
array21206 = (Object)new_Type_Array_with(1, (Object)localvariable26452);
localvariable26453 = (Object)new_AST_Variable_named(L"match");
array21207 = (Object)new_Type_Array_with(1, (Object)localvariable26453);
variable1565 = (Object)new_AST_Variable_named(L"return");
array21208 = (Object)new_Type_Array_with(1, (Object)variable1565);
localvariable26454 = (Object)new_AST_Variable_named(L"child");
array21209 = (Object)new_Type_Array_with(1, (Object)localvariable26454);
symbol35843 = (Object)new_Type_Symbol_cached(L"match:");
// match:
send182900 = (Object)new_AST_Send((Object)localvariable26454, (Object)symbol35843, 1, (Object)localvariable26452);
string27660 = (Object)new_Type_String(L"privateMatch:");
string27661 = (Object)new_Type_String(L"privateMatch: input\n\t|match |\n\tchildren do: [ :child |\n\t\tmatch := child match: input.\n\t\tmatch ifNotNil: [ ^ match].\n\t].\n\t^ nil");
smallint20557 = (Object)new_Type_SmallInt(-1);
smallint20558 = (Object)new_Type_SmallInt(-1);
info3644 = (Object)new_AST_Info((Type_String)string27661,(Type_String)string27660, (Type_SmallInt)smallint20557, (Type_SmallInt)smallint20558);
((AST_Send)send182900)->info = (AST_Info)info3644;
assign22421 = (Object)new_AST_Assign((Object)localvariable26453, (Object)send182900);
// escape:
send182901 = (Object)new_AST_Send((Object)variable1565, (Object)SMB_escape_, 1, (Object)localvariable26453);
((AST_Send)send182901)->info = (AST_Info)info3644;
block12656 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182901);
// ifNotNil:
send182902 = (Object)new_AST_Send((Object)localvariable26453, (Object)symbol35519, 1, (Object)block12656);
((AST_Send)send182902)->info = (AST_Info)info3644;
block12657 = (Object)new_AST_Block_with((Type_Array)array21209, (Type_Array)empty_Type_Array, 2, 2, assign22421, send182902);
// do:
send182903 = (Object)new_AST_Send((Object)instancevariable5996, (Object)symbol35642, 1, (Object)block12657);
((AST_Send)send182903)->info = (AST_Info)info3644;
block12658 = (Object)new_AST_Block_with((Type_Array)array21208, (Type_Array)empty_Type_Array, 1, 2, send182903, Nil_Const);
// on:
send182904 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12658);
method25207 = (Object)new_AST_Method_with((Type_Array)array21206, (Type_Array)array21207, 1, send182904);
((AST_Method)method25207)->info = (AST_Info)info3644;
methodclosure25205 = (Object)new_Runtime_MethodClosure(method25207);
store_method((Type_Class)class4037, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25205);


// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable26455 = (Object)new_AST_Variable_named(L"newChildren");
array21210 = (Object)new_Type_Array_with(1, (Object)localvariable26455);
super1964 = (Object)new_AST_Super((Object)symbol35517, 0);
assign22422 = (Object)new_AST_Assign((Object)instancevariable5996, (Object)localvariable26455);
method25208 = (Object)new_AST_Method_with((Type_Array)array21210, (Type_Array)empty_Type_Array, 3, super1964, assign22422, Self);
string27662 = (Object)new_Type_String(L"initialize:");
string27663 = (Object)new_Type_String(L"initialize: newChildren\n\tsuper initialize.\n\tchildren := newChildren");
smallint20559 = (Object)new_Type_SmallInt(-1);
smallint20560 = (Object)new_Type_SmallInt(-1);
info3645 = (Object)new_AST_Info((Type_String)string27663,(Type_String)string27662, (Type_SmallInt)smallint20559, (Type_SmallInt)smallint20560);
((AST_Method)method25208)->info = (AST_Info)info3645;
methodclosure25206 = (Object)new_Runtime_MethodClosure(method25208);
store_method((Type_Class)class4037, (Type_Symbol)symbol35876, (Runtime_MethodClosure)methodclosure25206);

// new
send182905 = (Object)new_AST_Send((Object)classreference4803, (Object)symbol35612, 0);
string27664 = (Object)new_Type_String(L"asPEGChoice");
string27665 = (Object)new_Type_String(L"asPEGChoice\n\t| result |\n\tresult := PEGOrderedChoiceExpression new.\n\tself do: [ :char | result <= char asPEG ].\n\t^ result");
smallint20561 = (Object)new_Type_SmallInt(-1);
smallint20562 = (Object)new_Type_SmallInt(-1);
info3646 = (Object)new_AST_Info((Type_String)string27665,(Type_String)string27664, (Type_SmallInt)smallint20561, (Type_SmallInt)smallint20562);
((AST_Send)send182905)->info = (AST_Info)info3646;
assign22423 = (Object)new_AST_Assign((Object)localvariable26407, (Object)send182905);
localvariable26456 = (Object)new_AST_Variable_named(L"char");
array21211 = (Object)new_Type_Array_with(1, (Object)localvariable26456);
// asPEG
send182906 = (Object)new_AST_Send((Object)localvariable26456, (Object)symbol35639, 0);
((AST_Send)send182906)->info = (AST_Info)info3646;
// <=
send182907 = (Object)new_AST_Send((Object)localvariable26407, (Object)symbol35648, 1, (Object)send182906);
((AST_Send)send182907)->info = (AST_Info)info3646;
block12659 = (Object)new_AST_Block_with((Type_Array)array21211, (Type_Array)empty_Type_Array, 1, 1, send182907);
// do:
send182908 = (Object)new_AST_Send((Object)Self, (Object)symbol35642, 1, (Object)block12659);
((AST_Send)send182908)->info = (AST_Info)info3646;
method25209 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21167, 3, assign22423, send182908, localvariable26407);
((AST_Method)method25209)->info = (AST_Info)info3646;
symbol35641 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
methodclosure25207 = (Object)new_Runtime_MethodClosure(method25209);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35641, (Runtime_MethodClosure)methodclosure25207);


// String>>asPEG
//asPEG
// 	^ PEGTerminal new: self
classreference4806 = (Object)new_Organization_ClassReference((Type_Class)class4044);

// PEGTerminal>>not
//not
// 	(string size = 1)
// 		ifFalse: [ self error: 'Only allowed on terminals of size 1' ].
// 	^ PEGNotExpression new: self
// size
send182909 = (Object)new_AST_Send((Object)instancevariable6004, (Object)SMB_size, 0);
string27666 = (Object)new_Type_String(L"not");
string27667 = (Object)new_Type_String(L"not\n\t(string size = 1)\n\t\tifFalse: [ self error: \'Only allowed on terminals of size 1\' ].\n\t^ PEGNotExpression new: self");
smallint20563 = (Object)new_Type_SmallInt(-1);
smallint20564 = (Object)new_Type_SmallInt(-1);
info3647 = (Object)new_AST_Info((Type_String)string27667,(Type_String)string27666, (Type_SmallInt)smallint20563, (Type_SmallInt)smallint20564);
((AST_Send)send182909)->info = (AST_Info)info3647;
smallint20565 = (Object)new_Type_SmallInt(1);
constant35529 = (Object)new_AST_Constant((Object)smallint20565);
// =
send182910 = (Object)new_AST_Send((Object)send182909, (Object)SMB__equal, 1, (Object)constant35529);
((AST_Send)send182910)->info = (AST_Info)info3647;
string27668 = (Object)new_Type_String(L"Only allowed on terminals of size 1");
constant35530 = (Object)new_AST_Constant((Object)string27668);
// error:
send182911 = (Object)new_AST_Send((Object)Self, (Object)symbol35949, 1, (Object)constant35530);
((AST_Send)send182911)->info = (AST_Info)info3647;
block12660 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send182911);
// ifFalse:
send182912 = (Object)new_AST_Send((Object)send182910, (Object)SMB_ifFalse_, 1, (Object)block12660);
((AST_Send)send182912)->info = (AST_Info)info3647;
classreference4807 = (Object)new_Organization_ClassReference((Type_Class)class4052);

// PEGNotExpression>>initialize:
//initialize: theChild
// 	super initialize.
// 	child := theChild
localvariable26457 = (Object)new_AST_Variable_named(L"theChild");
array21212 = (Object)new_Type_Array_with(1, (Object)localvariable26457);
super1965 = (Object)new_AST_Super((Object)symbol35517, 0);
assign22424 = (Object)new_AST_Assign((Object)instancevariable6018, (Object)localvariable26457);
method25210 = (Object)new_AST_Method_with((Type_Array)array21212, (Type_Array)empty_Type_Array, 3, super1965, assign22424, Self);
string27669 = (Object)new_Type_String(L"initialize:");
string27670 = (Object)new_Type_String(L"initialize: theChild\n\tsuper initialize.\n\tchild := theChild");
smallint20566 = (Object)new_Type_SmallInt(-1);
smallint20567 = (Object)new_Type_SmallInt(-1);
info3648 = (Object)new_AST_Info((Type_String)string27670,(Type_String)string27669, (Type_SmallInt)smallint20566, (Type_SmallInt)smallint20567);
((AST_Method)method25210)->info = (AST_Info)info3648;
methodclosure25208 = (Object)new_Runtime_MethodClosure(method25210);
store_method((Type_Class)class4052, (Type_Symbol)symbol35876, (Runtime_MethodClosure)methodclosure25208);


// PEGNotExpression>>consume:
//consume: bool
// 	" As 'optimization' we make consume depend on omit. "
// 	omit := bool not.
localvariable26458 = (Object)new_AST_Variable_named(L"bool");
array21213 = (Object)new_Type_Array_with(1, (Object)localvariable26458);
// not
send182913 = (Object)new_AST_Send((Object)localvariable26458, (Object)SMB_not, 0);
string27671 = (Object)new_Type_String(L"consume:");
string27672 = (Object)new_Type_String(L"consume: bool\n\t\" As \'optimization\' we make consume depend on omit. \"\n\tomit := bool not.");
smallint20568 = (Object)new_Type_SmallInt(-1);
smallint20569 = (Object)new_Type_SmallInt(-1);
info3649 = (Object)new_AST_Info((Type_String)string27672,(Type_String)string27671, (Type_SmallInt)smallint20568, (Type_SmallInt)smallint20569);
((AST_Send)send182913)->info = (AST_Info)info3649;
assign22425 = (Object)new_AST_Assign((Object)instancevariable5995, (Object)send182913);
method25211 = (Object)new_AST_Method_with((Type_Array)array21213, (Type_Array)empty_Type_Array, 2, assign22425, Self);
((AST_Method)method25211)->info = (AST_Info)info3649;
symbol35941 = (Object)new_Type_Symbol_cached(L"consume:");
methodclosure25209 = (Object)new_Runtime_MethodClosure(method25211);
store_method((Type_Class)class4052, (Type_Symbol)symbol35941, (Runtime_MethodClosure)methodclosure25209);


// PEGNotExpression>>privateMatch:
//privateMatch: input
// 	| match |
// 	match := child match: input.
// 	match ifNil: [
// 		self consume ifFalse: [ ^ true ]. " If we don't consume, just succeed and continue. '"
// 		^ input next ifNotNil: [ :char | char asString ]. " If we consume, we fail if next is end of string (nil) "
// 		].
// 	^ nil.
localvariable26459 = (Object)new_AST_Variable_named(L"input");
array21214 = (Object)new_Type_Array_with(1, (Object)localvariable26459);
localvariable26460 = (Object)new_AST_Variable_named(L"match");
array21215 = (Object)new_Type_Array_with(1, (Object)localvariable26460);
variable1566 = (Object)new_AST_Variable_named(L"return");
array21216 = (Object)new_Type_Array_with(1, (Object)variable1566);
// match:
send182914 = (Object)new_AST_Send((Object)instancevariable6018, (Object)symbol35843, 1, (Object)localvariable26459);
string27673 = (Object)new_Type_String(L"privateMatch:");
string27674 = (Object)new_Type_String(L"privateMatch: input\n\t| match |\n\tmatch := child match: input.\n\tmatch ifNil: [\n\t\tself consume ifFalse: [ ^ true ]. \" If we don\'t consume, just succeed and continue. \'\"\n\t\t^ input next ifNotNil: [ :char | char asString ]. \" If we consume, we fail if next is end of string (nil) \"\n\t\t].\n\t^ nil.");
smallint20570 = (Object)new_Type_SmallInt(-1);
smallint20571 = (Object)new_Type_SmallInt(-1);
info3650 = (Object)new_AST_Info((Type_String)string27674,(Type_String)string27673, (Type_SmallInt)smallint20570, (Type_SmallInt)smallint20571);
((AST_Send)send182914)->info = (AST_Info)info3650;
assign22426 = (Object)new_AST_Assign((Object)localvariable26460, (Object)send182914);
symbol35940 = (Object)new_Type_Symbol_cached(L"consume");
// consume
send182915 = (Object)new_AST_Send((Object)Self, (Object)symbol35940, 0);
((AST_Send)send182915)->info = (AST_Info)info3650;
// escape:
send182916 = (Object)new_AST_Send((Object)variable1566, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send182916)->info = (AST_Info)info3650;
block12661 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182916);
// ifFalse:
send182917 = (Object)new_AST_Send((Object)send182915, (Object)SMB_ifFalse_, 1, (Object)block12661);
((AST_Send)send182917)->info = (AST_Info)info3650;
// next
send182918 = (Object)new_AST_Send((Object)localvariable26459, (Object)symbol35950, 0);
((AST_Send)send182918)->info = (AST_Info)info3650;
localvariable26461 = (Object)new_AST_Variable_named(L"char");
array21217 = (Object)new_Type_Array_with(1, (Object)localvariable26461);
// asString
send182919 = (Object)new_AST_Send((Object)localvariable26461, (Object)SMB_asString, 0);
((AST_Send)send182919)->info = (AST_Info)info3650;
block12662 = (Object)new_AST_Block_with((Type_Array)array21217, (Type_Array)empty_Type_Array, 3, 1, send182919);
// ifNotNil:
send182920 = (Object)new_AST_Send((Object)send182918, (Object)symbol35519, 1, (Object)block12662);
((AST_Send)send182920)->info = (AST_Info)info3650;
// escape:
send182921 = (Object)new_AST_Send((Object)variable1566, (Object)SMB_escape_, 1, (Object)send182920);
((AST_Send)send182921)->info = (AST_Info)info3650;
block12663 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send182917, send182921);
// ifNil:
send182922 = (Object)new_AST_Send((Object)localvariable26460, (Object)symbol35518, 1, (Object)block12663);
((AST_Send)send182922)->info = (AST_Info)info3650;
block12664 = (Object)new_AST_Block_with((Type_Array)array21216, (Type_Array)empty_Type_Array, 1, 3, assign22426, send182922, Nil_Const);
// on:
send182923 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12664);
method25212 = (Object)new_AST_Method_with((Type_Array)array21214, (Type_Array)array21215, 1, send182923);
((AST_Method)method25212)->info = (AST_Info)info3650;
methodclosure25210 = (Object)new_Runtime_MethodClosure(method25212);
store_method((Type_Class)class4052, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25210);


// PEGNotExpression>>consume
//consume
// 	^ omit not
// not
send182924 = (Object)new_AST_Send((Object)instancevariable5995, (Object)SMB_not, 0);
string27675 = (Object)new_Type_String(L"consume");
string27676 = (Object)new_Type_String(L"consume\n\t^ omit not");
smallint20572 = (Object)new_Type_SmallInt(-1);
smallint20573 = (Object)new_Type_SmallInt(-1);
info3651 = (Object)new_AST_Info((Type_String)string27676,(Type_String)string27675, (Type_SmallInt)smallint20572, (Type_SmallInt)smallint20573);
((AST_Send)send182924)->info = (AST_Info)info3651;
method25213 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182924);
((AST_Method)method25213)->info = (AST_Info)info3651;
methodclosure25211 = (Object)new_Runtime_MethodClosure(method25213);
store_method((Type_Class)class4052, (Type_Symbol)symbol35940, (Runtime_MethodClosure)methodclosure25211);

// new:
send182925 = (Object)new_AST_Send((Object)classreference4807, (Object)symbol35602, 1, (Object)Self);
((AST_Send)send182925)->info = (AST_Info)info3647;
method25214 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send182912, send182925);
((AST_Method)method25214)->info = (AST_Info)info3647;
methodclosure25212 = (Object)new_Runtime_MethodClosure(method25214);
store_method((Type_Class)class4044, (Type_Symbol)SMB_not, (Runtime_MethodClosure)methodclosure25212);


// PEGTerminal>>privateMatch:
//privateMatch: input
// 	^ input scan: string
localvariable26462 = (Object)new_AST_Variable_named(L"input");
array21218 = (Object)new_Type_Array_with(1, (Object)localvariable26462);
symbol35669 = (Object)new_Type_Symbol_cached(L"scan:");
// scan:
send182926 = (Object)new_AST_Send((Object)localvariable26462, (Object)symbol35669, 1, (Object)instancevariable6004);
string27677 = (Object)new_Type_String(L"privateMatch:");
string27678 = (Object)new_Type_String(L"privateMatch: input\n\t^ input scan: string");
smallint20574 = (Object)new_Type_SmallInt(-1);
smallint20575 = (Object)new_Type_SmallInt(-1);
info3652 = (Object)new_AST_Info((Type_String)string27678,(Type_String)string27677, (Type_SmallInt)smallint20574, (Type_SmallInt)smallint20575);
((AST_Send)send182926)->info = (AST_Info)info3652;
method25215 = (Object)new_AST_Method_with((Type_Array)array21218, (Type_Array)empty_Type_Array, 1, send182926);
((AST_Method)method25215)->info = (AST_Info)info3652;
methodclosure25213 = (Object)new_Runtime_MethodClosure(method25215);
store_method((Type_Class)class4044, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25213);


// PEGTerminal>>initialize:
//initialize: aString
// 	super initialize.
// 	string := aString.
// 	self name: '''', string, ''''
localvariable26463 = (Object)new_AST_Variable_named(L"aString");
array21219 = (Object)new_Type_Array_with(1, (Object)localvariable26463);
super1966 = (Object)new_AST_Super((Object)symbol35517, 0);
assign22427 = (Object)new_AST_Assign((Object)instancevariable6004, (Object)localvariable26463);
symbol35721 = (Object)new_Type_Symbol_cached(L"name:");
string27679 = (Object)new_Type_String(L"\'");
constant35531 = (Object)new_AST_Constant((Object)string27679);
// ,
send182927 = (Object)new_AST_Send((Object)constant35531, (Object)SMB__concat, 1, (Object)instancevariable6004);
string27680 = (Object)new_Type_String(L"initialize:");
string27681 = (Object)new_Type_String(L"initialize: aString\n\tsuper initialize.\n\tstring := aString.\n\tself name: \'\'\'\', string, \'\'\'\'");
smallint20576 = (Object)new_Type_SmallInt(-1);
smallint20577 = (Object)new_Type_SmallInt(-1);
info3653 = (Object)new_AST_Info((Type_String)string27681,(Type_String)string27680, (Type_SmallInt)smallint20576, (Type_SmallInt)smallint20577);
((AST_Send)send182927)->info = (AST_Info)info3653;
string27682 = (Object)new_Type_String(L"\'");
constant35532 = (Object)new_AST_Constant((Object)string27682);
// ,
send182928 = (Object)new_AST_Send((Object)send182927, (Object)SMB__concat, 1, (Object)constant35532);
((AST_Send)send182928)->info = (AST_Info)info3653;
// name:
send182929 = (Object)new_AST_Send((Object)Self, (Object)symbol35721, 1, (Object)send182928);
((AST_Send)send182929)->info = (AST_Info)info3653;
method25216 = (Object)new_AST_Method_with((Type_Array)array21219, (Type_Array)empty_Type_Array, 4, super1966, assign22427, send182929, Self);
((AST_Method)method25216)->info = (AST_Info)info3653;
methodclosure25214 = (Object)new_Runtime_MethodClosure(method25216);
store_method((Type_Class)class4044, (Type_Symbol)symbol35876, (Runtime_MethodClosure)methodclosure25214);

// new:
send182930 = (Object)new_AST_Send((Object)classreference4806, (Object)symbol35602, 1, (Object)Self);
string27683 = (Object)new_Type_String(L"asPEG");
string27684 = (Object)new_Type_String(L"asPEG\n\t^ PEGTerminal new: self");
smallint20578 = (Object)new_Type_SmallInt(-1);
smallint20579 = (Object)new_Type_SmallInt(-1);
info3654 = (Object)new_AST_Info((Type_String)string27684,(Type_String)string27683, (Type_SmallInt)smallint20578, (Type_SmallInt)smallint20579);
((AST_Send)send182930)->info = (AST_Info)info3654;
method25217 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182930);
((AST_Method)method25217)->info = (AST_Info)info3654;
methodclosure25215 = (Object)new_Runtime_MethodClosure(method25217);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35639, (Runtime_MethodClosure)methodclosure25215);


// String>>copy
//copy
// 	^ self asSymbol asString
// asSymbol
send182931 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSymbol, 0);
string27685 = (Object)new_Type_String(L"copy");
string27686 = (Object)new_Type_String(L"copy\n\t^ self asSymbol asString");
smallint20580 = (Object)new_Type_SmallInt(-1);
smallint20581 = (Object)new_Type_SmallInt(-1);
info3655 = (Object)new_AST_Info((Type_String)string27686,(Type_String)string27685, (Type_SmallInt)smallint20580, (Type_SmallInt)smallint20581);
((AST_Send)send182931)->info = (AST_Info)info3655;
// asString
send182932 = (Object)new_AST_Send((Object)send182931, (Object)SMB_asString, 0);
((AST_Send)send182932)->info = (AST_Info)info3655;
method25218 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182932);
((AST_Method)method25218)->info = (AST_Info)info3655;
symbol35637 = (Object)new_Type_Symbol_cached(L"copy");
methodclosure25216 = (Object)new_Runtime_MethodClosure(method25218);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35637, (Runtime_MethodClosure)methodclosure25216);


// String>>capitalized
//capitalized
// 	"Return a copy with the first letter capitalized"
// 	| cap |
// 	self isEmpty ifTrue: [ ^self copy ].
// 	cap := self copy.
// 	cap at: 1 put: (cap at: 1) asUppercase.
// 	^ cap
localvariable26464 = (Object)new_AST_Variable_named(L"cap");
array21220 = (Object)new_Type_Array_with(1, (Object)localvariable26464);
variable1567 = (Object)new_AST_Variable_named(L"return");
array21221 = (Object)new_Type_Array_with(1, (Object)variable1567);
// isEmpty
send182933 = (Object)new_AST_Send((Object)Self, (Object)symbol35634, 0);
string27687 = (Object)new_Type_String(L"capitalized");
string27688 = (Object)new_Type_String(L"capitalized\n\t\"Return a copy with the first letter capitalized\"\n\t| cap |\n\tself isEmpty ifTrue: [ ^self copy ].\n\tcap := self copy.\n\tcap at: 1 put: (cap at: 1) asUppercase.\n\t^ cap");
smallint20582 = (Object)new_Type_SmallInt(-1);
smallint20583 = (Object)new_Type_SmallInt(-1);
info3656 = (Object)new_AST_Info((Type_String)string27688,(Type_String)string27687, (Type_SmallInt)smallint20582, (Type_SmallInt)smallint20583);
((AST_Send)send182933)->info = (AST_Info)info3656;
// copy
send182934 = (Object)new_AST_Send((Object)Self, (Object)symbol35637, 0);
((AST_Send)send182934)->info = (AST_Info)info3656;
// escape:
send182935 = (Object)new_AST_Send((Object)variable1567, (Object)SMB_escape_, 1, (Object)send182934);
((AST_Send)send182935)->info = (AST_Info)info3656;
block12665 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182935);
// ifTrue:
send182936 = (Object)new_AST_Send((Object)send182933, (Object)SMB_ifTrue_, 1, (Object)block12665);
((AST_Send)send182936)->info = (AST_Info)info3656;
// copy
send182937 = (Object)new_AST_Send((Object)Self, (Object)symbol35637, 0);
((AST_Send)send182937)->info = (AST_Info)info3656;
assign22428 = (Object)new_AST_Assign((Object)localvariable26464, (Object)send182937);
smallint20584 = (Object)new_Type_SmallInt(1);
constant35533 = (Object)new_AST_Constant((Object)smallint20584);
smallint20585 = (Object)new_Type_SmallInt(1);
constant35534 = (Object)new_AST_Constant((Object)smallint20585);
// at:
send182938 = (Object)new_AST_Send((Object)localvariable26464, (Object)SMB_at_, 1, (Object)constant35534);
((AST_Send)send182938)->info = (AST_Info)info3656;
// asUppercase
send182939 = (Object)new_AST_Send((Object)send182938, (Object)symbol35657, 0);
((AST_Send)send182939)->info = (AST_Info)info3656;
// at:put:
send182940 = (Object)new_AST_Send((Object)localvariable26464, (Object)SMB_at_put_, 2, (Object)constant35533, (Object)send182939);
((AST_Send)send182940)->info = (AST_Info)info3656;
block12666 = (Object)new_AST_Block_with((Type_Array)array21221, (Type_Array)empty_Type_Array, 1, 4, send182936, assign22428, send182940, localvariable26464);
// on:
send182941 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12666);
method25219 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21220, 1, send182941);
((AST_Method)method25219)->info = (AST_Info)info3656;
methodclosure25217 = (Object)new_Runtime_MethodClosure(method25219);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol35643, (Runtime_MethodClosure)methodclosure25217);

classreference4808 = (Object)new_Organization_ClassReference((Type_Class)True_Class);

// True>>or:
//or: aBoolean
localvariable26465 = (Object)new_AST_Variable_named(L"aBoolean");
array21222 = (Object)new_Type_Array_with(1, (Object)localvariable26465);
method25220 = (Object)new_AST_Method_with((Type_Array)array21222, (Type_Array)empty_Type_Array, 1, Self);
string27689 = (Object)new_Type_String(L"or:");
string27690 = (Object)new_Type_String(L"or: aBoolean");
smallint20586 = (Object)new_Type_SmallInt(-1);
smallint20587 = (Object)new_Type_SmallInt(-1);
info3657 = (Object)new_AST_Info((Type_String)string27690,(Type_String)string27689, (Type_SmallInt)smallint20586, (Type_SmallInt)smallint20587);
((AST_Method)method25220)->info = (AST_Info)info3657;
methodclosure25218 = (Object)new_Runtime_MethodClosure(method25220);
store_method((Type_Class)True_Class, (Type_Symbol)symbol35630, (Runtime_MethodClosure)methodclosure25218);


// True>>and:
//and: aBlock
// 	^ aBlock value.
localvariable26466 = (Object)new_AST_Variable_named(L"aBlock");
array21223 = (Object)new_Type_Array_with(1, (Object)localvariable26466);
// value
send182942 = (Object)new_AST_Send((Object)localvariable26466, (Object)symbol35946, 0);
string27691 = (Object)new_Type_String(L"and:");
string27692 = (Object)new_Type_String(L"and: aBlock\n\t^ aBlock value.");
smallint20588 = (Object)new_Type_SmallInt(-1);
smallint20589 = (Object)new_Type_SmallInt(-1);
info3658 = (Object)new_AST_Info((Type_String)string27692,(Type_String)string27691, (Type_SmallInt)smallint20588, (Type_SmallInt)smallint20589);
((AST_Send)send182942)->info = (AST_Info)info3658;
method25221 = (Object)new_AST_Method_with((Type_Array)array21223, (Type_Array)empty_Type_Array, 1, send182942);
((AST_Method)method25221)->info = (AST_Info)info3658;
methodclosure25219 = (Object)new_Runtime_MethodClosure(method25221);
store_method((Type_Class)True_Class, (Type_Symbol)symbol35631, (Runtime_MethodClosure)methodclosure25219);

classreference4809 = (Object)new_Organization_ClassReference((Type_Class)class4031);
classreference4810 = (Object)new_Organization_ClassReference((Type_Class)class4032);

// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable26467 = (Object)new_AST_Variable_named(L"anObject");
array21224 = (Object)new_Type_Array_with(1, (Object)localvariable26467);
assign22429 = (Object)new_AST_Assign((Object)instancevariable5988, (Object)localvariable26467);
method25222 = (Object)new_AST_Method_with((Type_Array)array21224, (Type_Array)empty_Type_Array, 2, assign22429, Self);
string27693 = (Object)new_Type_String(L"key:");
string27694 = (Object)new_Type_String(L"key: anObject\n\tkey := anObject");
smallint20590 = (Object)new_Type_SmallInt(-1);
smallint20591 = (Object)new_Type_SmallInt(-1);
info3659 = (Object)new_AST_Info((Type_String)string27694,(Type_String)string27693, (Type_SmallInt)smallint20590, (Type_SmallInt)smallint20591);
((AST_Method)method25222)->info = (AST_Info)info3659;
symbol35932 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure25220 = (Object)new_Runtime_MethodClosure(method25222);
store_method((Type_Class)class4032, (Type_Symbol)symbol35932, (Runtime_MethodClosure)methodclosure25220);


// LocalVariable>>key
//key
// 	^ key
method25223 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5988);
string27695 = (Object)new_Type_String(L"key");
string27696 = (Object)new_Type_String(L"key\n\t^ key");
smallint20592 = (Object)new_Type_SmallInt(-1);
smallint20593 = (Object)new_Type_SmallInt(-1);
info3660 = (Object)new_AST_Info((Type_String)string27696,(Type_String)string27695, (Type_SmallInt)smallint20592, (Type_SmallInt)smallint20593);
((AST_Method)method25223)->info = (AST_Info)info3660;
symbol35933 = (Object)new_Type_Symbol_cached(L"key");
methodclosure25221 = (Object)new_Runtime_MethodClosure(method25223);
store_method((Type_Class)class4032, (Type_Symbol)symbol35933, (Runtime_MethodClosure)methodclosure25221);

classreference4811 = (Object)new_Organization_ClassReference((Type_Class)class4030);

// Variable>>asPVariable
//asPVariable
// 	^ self.
method25224 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string27697 = (Object)new_Type_String(L"asPVariable");
string27698 = (Object)new_Type_String(L"asPVariable\n\t^ self.");
smallint20594 = (Object)new_Type_SmallInt(-1);
smallint20595 = (Object)new_Type_SmallInt(-1);
info3661 = (Object)new_AST_Info((Type_String)string27698,(Type_String)string27697, (Type_SmallInt)smallint20594, (Type_SmallInt)smallint20595);
((AST_Method)method25224)->info = (AST_Info)info3661;
symbol35720 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure25222 = (Object)new_Runtime_MethodClosure(method25224);
store_method((Type_Class)class4030, (Type_Symbol)symbol35720, (Runtime_MethodClosure)methodclosure25222);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable26468 = (Object)new_AST_Variable_named(L"anObject");
array21225 = (Object)new_Type_Array_with(1, (Object)localvariable26468);
assign22430 = (Object)new_AST_Assign((Object)instancevariable5986, (Object)localvariable26468);
method25225 = (Object)new_AST_Method_with((Type_Array)array21225, (Type_Array)empty_Type_Array, 2, assign22430, Self);
string27699 = (Object)new_Type_String(L"scopeId:");
string27700 = (Object)new_Type_String(L"scopeId: anObject\n\tscopeId := anObject");
smallint20596 = (Object)new_Type_SmallInt(-1);
smallint20597 = (Object)new_Type_SmallInt(-1);
info3662 = (Object)new_AST_Info((Type_String)string27700,(Type_String)string27699, (Type_SmallInt)smallint20596, (Type_SmallInt)smallint20597);
((AST_Method)method25225)->info = (AST_Info)info3662;
symbol35869 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure25223 = (Object)new_Runtime_MethodClosure(method25225);
store_method((Type_Class)class4030, (Type_Symbol)symbol35869, (Runtime_MethodClosure)methodclosure25223);


// Variable>>name
//name
// 	^ name
method25226 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5985);
string27701 = (Object)new_Type_String(L"name");
string27702 = (Object)new_Type_String(L"name\n\t^ name");
smallint20598 = (Object)new_Type_SmallInt(-1);
smallint20599 = (Object)new_Type_SmallInt(-1);
info3663 = (Object)new_AST_Info((Type_String)string27702,(Type_String)string27701, (Type_SmallInt)smallint20598, (Type_SmallInt)smallint20599);
((AST_Method)method25226)->info = (AST_Info)info3663;
methodclosure25224 = (Object)new_Runtime_MethodClosure(method25226);
store_method((Type_Class)class4030, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure25224);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable26469 = (Object)new_AST_Variable_named(L"anObject");
array21226 = (Object)new_Type_Array_with(1, (Object)localvariable26469);
assign22431 = (Object)new_AST_Assign((Object)instancevariable5987, (Object)localvariable26469);
method25227 = (Object)new_AST_Method_with((Type_Array)array21226, (Type_Array)empty_Type_Array, 2, assign22431, Self);
string27703 = (Object)new_Type_String(L"localId:");
string27704 = (Object)new_Type_String(L"localId: anObject\n\tlocalId := anObject");
smallint20600 = (Object)new_Type_SmallInt(-1);
smallint20601 = (Object)new_Type_SmallInt(-1);
info3664 = (Object)new_AST_Info((Type_String)string27704,(Type_String)string27703, (Type_SmallInt)smallint20600, (Type_SmallInt)smallint20601);
((AST_Method)method25227)->info = (AST_Info)info3664;
symbol35871 = (Object)new_Type_Symbol_cached(L"localId:");
methodclosure25225 = (Object)new_Runtime_MethodClosure(method25227);
store_method((Type_Class)class4030, (Type_Symbol)symbol35871, (Runtime_MethodClosure)methodclosure25225);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method25228 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5986);
string27705 = (Object)new_Type_String(L"scopeId");
string27706 = (Object)new_Type_String(L"scopeId\n\t^ scopeId");
smallint20602 = (Object)new_Type_SmallInt(-1);
smallint20603 = (Object)new_Type_SmallInt(-1);
info3665 = (Object)new_AST_Info((Type_String)string27706,(Type_String)string27705, (Type_SmallInt)smallint20602, (Type_SmallInt)smallint20603);
((AST_Method)method25228)->info = (AST_Info)info3665;
symbol35870 = (Object)new_Type_Symbol_cached(L"scopeId");
methodclosure25226 = (Object)new_Runtime_MethodClosure(method25228);
store_method((Type_Class)class4030, (Type_Symbol)symbol35870, (Runtime_MethodClosure)methodclosure25226);


// Variable>>localId
//localId
// 	^ localId
method25229 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5987);
string27707 = (Object)new_Type_String(L"localId");
string27708 = (Object)new_Type_String(L"localId\n\t^ localId");
smallint20604 = (Object)new_Type_SmallInt(-1);
smallint20605 = (Object)new_Type_SmallInt(-1);
info3666 = (Object)new_AST_Info((Type_String)string27708,(Type_String)string27707, (Type_SmallInt)smallint20604, (Type_SmallInt)smallint20605);
((AST_Method)method25229)->info = (AST_Info)info3666;
symbol35868 = (Object)new_Type_Symbol_cached(L"localId");
methodclosure25227 = (Object)new_Runtime_MethodClosure(method25229);
store_method((Type_Class)class4030, (Type_Symbol)symbol35868, (Runtime_MethodClosure)methodclosure25227);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable26470 = (Object)new_AST_Variable_named(L"anObject");
array21227 = (Object)new_Type_Array_with(1, (Object)localvariable26470);
assign22432 = (Object)new_AST_Assign((Object)instancevariable5985, (Object)localvariable26470);
method25230 = (Object)new_AST_Method_with((Type_Array)array21227, (Type_Array)empty_Type_Array, 2, assign22432, Self);
string27709 = (Object)new_Type_String(L"name:");
string27710 = (Object)new_Type_String(L"name: anObject \n\tname := anObject");
smallint20606 = (Object)new_Type_SmallInt(-1);
smallint20607 = (Object)new_Type_SmallInt(-1);
info3667 = (Object)new_AST_Info((Type_String)string27710,(Type_String)string27709, (Type_SmallInt)smallint20606, (Type_SmallInt)smallint20607);
((AST_Method)method25230)->info = (AST_Info)info3667;
methodclosure25228 = (Object)new_Runtime_MethodClosure(method25230);
store_method((Type_Class)class4030, (Type_Symbol)symbol35721, (Runtime_MethodClosure)methodclosure25228);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable26471 = (Object)new_AST_Variable_named(L"aStream");
array21228 = (Object)new_Type_Array_with(1, (Object)localvariable26471);
super1967 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26471);
string27711 = (Object)new_Type_String(L" ");
constant35535 = (Object)new_AST_Constant((Object)string27711);
// nextPutAll:
send182943 = (Object)new_AST_Send((Object)localvariable26471, (Object)symbol35953, 1, (Object)constant35535);
string27712 = (Object)new_Type_String(L"printOn:");
string27713 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \' \'.\n\tself name printOn: aStream.\n\taStream nextPutAll: \' \'.\n\tself scopeId printOn: aStream.\n\taStream nextPutAll: \'@\'.\n\tself localId printOn: aStream.");
smallint20608 = (Object)new_Type_SmallInt(-1);
smallint20609 = (Object)new_Type_SmallInt(-1);
info3668 = (Object)new_AST_Info((Type_String)string27713,(Type_String)string27712, (Type_SmallInt)smallint20608, (Type_SmallInt)smallint20609);
((AST_Send)send182943)->info = (AST_Info)info3668;
// name
send182944 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send182944)->info = (AST_Info)info3668;
// printOn:
send182945 = (Object)new_AST_Send((Object)send182944, (Object)symbol35622, 1, (Object)localvariable26471);
((AST_Send)send182945)->info = (AST_Info)info3668;
string27714 = (Object)new_Type_String(L" ");
constant35536 = (Object)new_AST_Constant((Object)string27714);
// nextPutAll:
send182946 = (Object)new_AST_Send((Object)localvariable26471, (Object)symbol35953, 1, (Object)constant35536);
((AST_Send)send182946)->info = (AST_Info)info3668;
// scopeId
send182947 = (Object)new_AST_Send((Object)Self, (Object)symbol35870, 0);
((AST_Send)send182947)->info = (AST_Info)info3668;
// printOn:
send182948 = (Object)new_AST_Send((Object)send182947, (Object)symbol35622, 1, (Object)localvariable26471);
((AST_Send)send182948)->info = (AST_Info)info3668;
string27715 = (Object)new_Type_String(L"@");
constant35537 = (Object)new_AST_Constant((Object)string27715);
// nextPutAll:
send182949 = (Object)new_AST_Send((Object)localvariable26471, (Object)symbol35953, 1, (Object)constant35537);
((AST_Send)send182949)->info = (AST_Info)info3668;
// localId
send182950 = (Object)new_AST_Send((Object)Self, (Object)symbol35868, 0);
((AST_Send)send182950)->info = (AST_Info)info3668;
// printOn:
send182951 = (Object)new_AST_Send((Object)send182950, (Object)symbol35622, 1, (Object)localvariable26471);
((AST_Send)send182951)->info = (AST_Info)info3668;
method25231 = (Object)new_AST_Method_with((Type_Array)array21228, (Type_Array)empty_Type_Array, 8, super1967, send182943, send182945, send182946, send182948, send182949, send182951, Self);
((AST_Method)method25231)->info = (AST_Info)info3668;
methodclosure25229 = (Object)new_Runtime_MethodClosure(method25231);
store_method((Type_Class)class4030, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25229);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable26472 = (Object)new_AST_Variable_named(L"aSymbol");
array21229 = (Object)new_Type_Array_with(1, (Object)localvariable26472);
// new
send182952 = (Object)new_AST_Send((Object)Self, (Object)symbol35612, 0);
string27716 = (Object)new_Type_String(L"named:");
string27717 = (Object)new_Type_String(L"named: aSymbol\n\t^ self new\n\t\tname: aSymbol asSymbol.");
smallint20610 = (Object)new_Type_SmallInt(-1);
smallint20611 = (Object)new_Type_SmallInt(-1);
info3669 = (Object)new_AST_Info((Type_String)string27717,(Type_String)string27716, (Type_SmallInt)smallint20610, (Type_SmallInt)smallint20611);
((AST_Send)send182952)->info = (AST_Info)info3669;
// asSymbol
send182953 = (Object)new_AST_Send((Object)localvariable26472, (Object)SMB_asSymbol, 0);
((AST_Send)send182953)->info = (AST_Info)info3669;
// name:
send182954 = (Object)new_AST_Send((Object)send182952, (Object)symbol35721, 1, (Object)send182953);
((AST_Send)send182954)->info = (AST_Info)info3669;
method25232 = (Object)new_AST_Method_with((Type_Array)array21229, (Type_Array)empty_Type_Array, 1, send182954);
((AST_Method)method25232)->info = (AST_Info)info3669;
symbol35855 = (Object)new_Type_Symbol_cached(L"named:");
methodclosure25230 = (Object)new_Runtime_MethodClosure(method25232);
store_method((Type_Class)metaclass4030, (Type_Symbol)symbol35855, (Runtime_MethodClosure)methodclosure25230);

classreference4812 = (Object)new_Organization_ClassReference((Type_Class)class4033);

// RuntimeObject>>code
//code
// 	^ code
method25233 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5989);
string27718 = (Object)new_Type_String(L"code");
string27719 = (Object)new_Type_String(L"code\n\t^ code");
smallint20612 = (Object)new_Type_SmallInt(-1);
smallint20613 = (Object)new_Type_SmallInt(-1);
info3670 = (Object)new_AST_Info((Type_String)string27719,(Type_String)string27718, (Type_SmallInt)smallint20612, (Type_SmallInt)smallint20613);
((AST_Method)method25233)->info = (AST_Info)info3670;
symbol35651 = (Object)new_Type_Symbol_cached(L"code");
methodclosure25231 = (Object)new_Runtime_MethodClosure(method25233);
store_method((Type_Class)class4033, (Type_Symbol)symbol35651, (Runtime_MethodClosure)methodclosure25231);


// RuntimeObject>>code:
//code: aBlock
// 	code := aBlock
localvariable26473 = (Object)new_AST_Variable_named(L"aBlock");
array21230 = (Object)new_Type_Array_with(1, (Object)localvariable26473);
assign22433 = (Object)new_AST_Assign((Object)instancevariable5989, (Object)localvariable26473);
method25234 = (Object)new_AST_Method_with((Type_Array)array21230, (Type_Array)empty_Type_Array, 2, assign22433, Self);
string27720 = (Object)new_Type_String(L"code:");
string27721 = (Object)new_Type_String(L"code: aBlock\n\tcode := aBlock");
smallint20614 = (Object)new_Type_SmallInt(-1);
smallint20615 = (Object)new_Type_SmallInt(-1);
info3671 = (Object)new_AST_Info((Type_String)string27721,(Type_String)string27720, (Type_SmallInt)smallint20614, (Type_SmallInt)smallint20615);
((AST_Method)method25234)->info = (AST_Info)info3671;
symbol35652 = (Object)new_Type_Symbol_cached(L"code:");
methodclosure25232 = (Object)new_Runtime_MethodClosure(method25234);
store_method((Type_Class)class4033, (Type_Symbol)symbol35652, (Runtime_MethodClosure)methodclosure25232);

classreference4813 = (Object)new_Organization_ClassReference((Type_Class)Runtime_BlockClosure_Class);

// BlockClosure>>whileTrue:
//whileTrue: aBlock
// 	self value ifTrue: [
// 		aBlock value.
// 		self whileTrue: aBlock
// 	]
localvariable26474 = (Object)new_AST_Variable_named(L"aBlock");
array21231 = (Object)new_Type_Array_with(1, (Object)localvariable26474);
// value
send182955 = (Object)new_AST_Send((Object)Self, (Object)symbol35946, 0);
string27722 = (Object)new_Type_String(L"whileTrue:");
string27723 = (Object)new_Type_String(L"whileTrue: aBlock\n\tself value ifTrue: [\n\t\taBlock value.\n\t\tself whileTrue: aBlock\n\t]");
smallint20616 = (Object)new_Type_SmallInt(-1);
smallint20617 = (Object)new_Type_SmallInt(-1);
info3672 = (Object)new_AST_Info((Type_String)string27723,(Type_String)string27722, (Type_SmallInt)smallint20616, (Type_SmallInt)smallint20617);
((AST_Send)send182955)->info = (AST_Info)info3672;
// value
send182956 = (Object)new_AST_Send((Object)localvariable26474, (Object)symbol35946, 0);
((AST_Send)send182956)->info = (AST_Info)info3672;
// whileTrue:
send182957 = (Object)new_AST_Send((Object)Self, (Object)SMB_whileTrue_, 1, (Object)localvariable26474);
((AST_Send)send182957)->info = (AST_Info)info3672;
block12667 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, send182956, send182957);
// ifTrue:
send182958 = (Object)new_AST_Send((Object)send182955, (Object)SMB_ifTrue_, 1, (Object)block12667);
((AST_Send)send182958)->info = (AST_Info)info3672;
method25235 = (Object)new_AST_Method_with((Type_Array)array21231, (Type_Array)empty_Type_Array, 2, send182958, Self);
((AST_Method)method25235)->info = (AST_Info)info3672;
methodclosure25233 = (Object)new_Runtime_MethodClosure(method25235);
store_method((Type_Class)Runtime_BlockClosure_Class, (Type_Symbol)SMB_whileTrue_, (Runtime_MethodClosure)methodclosure25233);

classreference4814 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// Message>>arguments
//arguments
// 	^ self
method25236 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string27724 = (Object)new_Type_String(L"arguments");
string27725 = (Object)new_Type_String(L"arguments\n\t^ self");
smallint20618 = (Object)new_Type_SmallInt(-1);
smallint20619 = (Object)new_Type_SmallInt(-1);
info3673 = (Object)new_AST_Info((Type_String)string27725,(Type_String)string27724, (Type_SmallInt)smallint20618, (Type_SmallInt)smallint20619);
((AST_Method)method25236)->info = (AST_Info)info3673;
symbol35627 = (Object)new_Type_Symbol_cached(L"arguments");
methodclosure25234 = (Object)new_Runtime_MethodClosure(method25236);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol35627, (Runtime_MethodClosure)methodclosure25234);


// Message>>selector
//selector 
// 	^ selector
instancevariable6059 = (Object)new_AST_InstVariable(0, L"selector");
method25237 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6059);
string27726 = (Object)new_Type_String(L"selector");
string27727 = (Object)new_Type_String(L"selector \n\t^ selector");
smallint20620 = (Object)new_Type_SmallInt(-1);
smallint20621 = (Object)new_Type_SmallInt(-1);
info3674 = (Object)new_AST_Info((Type_String)string27727,(Type_String)string27726, (Type_SmallInt)smallint20620, (Type_SmallInt)smallint20621);
((AST_Method)method25237)->info = (AST_Info)info3674;
methodclosure25235 = (Object)new_Runtime_MethodClosure(method25237);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol35626, (Runtime_MethodClosure)methodclosure25235);


// a PInternalMetaclass P#Message>>pTypeName
//pTypeName
// 	^ self basicPTypeName: 'Runtime'.
symbol35509 = (Object)new_Type_Symbol_cached(L"basicPTypeName:");
string27728 = (Object)new_Type_String(L"Runtime");
constant35538 = (Object)new_AST_Constant((Object)string27728);
// basicPTypeName:
send182959 = (Object)new_AST_Send((Object)Self, (Object)symbol35509, 1, (Object)constant35538);
string27729 = (Object)new_Type_String(L"pTypeName");
string27730 = (Object)new_Type_String(L"pTypeName\n\t^ self basicPTypeName: \'Runtime\'.");
smallint20622 = (Object)new_Type_SmallInt(-1);
smallint20623 = (Object)new_Type_SmallInt(-1);
info3675 = (Object)new_AST_Info((Type_String)string27730,(Type_String)string27729, (Type_SmallInt)smallint20622, (Type_SmallInt)smallint20623);
((AST_Send)send182959)->info = (AST_Info)info3675;
method25238 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182959);
((AST_Method)method25238)->info = (AST_Info)info3675;
symbol35510 = (Object)new_Type_Symbol_cached(L"pTypeName");
methodclosure25236 = (Object)new_Runtime_MethodClosure(method25238);
store_method((Type_Class)HEADER(Runtime_Message_Class), (Type_Symbol)symbol35510, (Runtime_MethodClosure)methodclosure25236);

classreference4815 = (Object)new_Organization_ClassReference((Type_Class)class4034);

// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method25239 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string27731 = (Object)new_Type_String(L"testParseTestMethods");
string27732 = (Object)new_Type_String(L"testParseTestMethods\n\t<temps: 6 annotations: 1 statements: 3>\n\t| parser string result code annotations annotation |\n\tparser := scparser method.\n\tself class methodDict keys do: [ :key | \n\t\t\tTranscript show: key; cr.\n\t\t\tcode := self class sourceCodeAt: key.\n\t\t\tstring := PEGStringScanner on: code separator: scparser separator.\n\t\t\tresult := parser match: string.\n\t\t\tresult class should = ASTMethod.\n\t\t\tannotations := result annotations select:[ :ann | \n\t\t\t\tann class = ASTKeywordAnnotation \n\t\t\t\t\tand: [ ann keywords asArray = ((Array new: 3)\n\t\t\t\t\t\t\tat: 1 put: #temps;\n\t\t\t\t\t\t\tat: 2 put: #annotations;\n\t\t\t\t\t\t\tat: 3 put: #statements;\n\t\t\t\t\t\t\tyourself) ] ].\n\t\t\tannotations size = 1 ifTrue:\n\t\t\t\t\t[ annotation := annotations first.\n\t\t\t\t\tresult temporaries size = annotation arguments first asInteger.\n\t\t\t\t\tresult annotations size = (annotation arguments at: 2) asInteger.\n\t\t\t\t\tresult statements size = (annotation arguments at: 3) asInteger ].\n\t\t\t\"string atEnd should be true.\"\n\t\t\tresult \n\t]\t\"inspect\"");
smallint20624 = (Object)new_Type_SmallInt(-1);
smallint20625 = (Object)new_Type_SmallInt(-1);
info3676 = (Object)new_AST_Info((Type_String)string27732,(Type_String)string27731, (Type_SmallInt)smallint20624, (Type_SmallInt)smallint20625);
((AST_Method)method25239)->info = (AST_Info)info3676;
symbol35548 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure25237 = (Object)new_Runtime_MethodClosure(method25239);
store_method((Type_Class)class4034, (Type_Symbol)symbol35548, (Runtime_MethodClosure)methodclosure25237);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable26475 = (Object)new_AST_Variable_named(L"parser");
localvariable26476 = (Object)new_AST_Variable_named(L"string");
localvariable26477 = (Object)new_AST_Variable_named(L"result");
array21232 = (Object)new_Type_Array_with(3, (Object)localvariable26475, (Object)localvariable26476, (Object)localvariable26477);
symbol35755 = (Object)new_Type_Symbol_cached(L"expression");
// expression
send182960 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35755, 0);
string27733 = (Object)new_Type_String(L"testScopedExpression");
string27734 = (Object)new_Type_String(L"testScopedExpression\n\t| parser string result |\n\tparser := scparser expression.\n\tstring := PEGStringScanner on: \'(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");
smallint20626 = (Object)new_Type_SmallInt(-1);
smallint20627 = (Object)new_Type_SmallInt(-1);
info3677 = (Object)new_AST_Info((Type_String)string27734,(Type_String)string27733, (Type_SmallInt)smallint20626, (Type_SmallInt)smallint20627);
((AST_Send)send182960)->info = (AST_Info)info3677;
assign22434 = (Object)new_AST_Assign((Object)localvariable26475, (Object)send182960);
classreference4816 = (Object)new_Organization_ClassReference((Type_Class)class4048);

// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable26478 = (Object)new_AST_Variable_named(L"bucket");
array21233 = (Object)new_Type_Array_with(1, (Object)localvariable26478);
variable1568 = (Object)new_AST_Variable_named(L"return");
array21234 = (Object)new_Type_Array_with(1, (Object)variable1568);
smallint20628 = (Object)new_Type_SmallInt(1);
constant35539 = (Object)new_AST_Constant((Object)smallint20628);
// +
send182961 = (Object)new_AST_Send((Object)instancevariable6006, (Object)SMB__plus, 1, (Object)constant35539);
string27735 = (Object)new_Type_String(L"bucket");
string27736 = (Object)new_Type_String(L"bucket\n\t| bucket |\n\tbucket := cache at: position + 1.\n\tbucket ifNotNil: [ ^ bucket ].\n\t^ cache at: position + 1 put: (SmallDictionary new).");
smallint20629 = (Object)new_Type_SmallInt(-1);
smallint20630 = (Object)new_Type_SmallInt(-1);
info3678 = (Object)new_AST_Info((Type_String)string27736,(Type_String)string27735, (Type_SmallInt)smallint20629, (Type_SmallInt)smallint20630);
((AST_Send)send182961)->info = (AST_Info)info3678;
// at:
send182962 = (Object)new_AST_Send((Object)instancevariable6009, (Object)SMB_at_, 1, (Object)send182961);
((AST_Send)send182962)->info = (AST_Info)info3678;
assign22435 = (Object)new_AST_Assign((Object)localvariable26478, (Object)send182962);
// escape:
send182963 = (Object)new_AST_Send((Object)variable1568, (Object)SMB_escape_, 1, (Object)localvariable26478);
((AST_Send)send182963)->info = (AST_Info)info3678;
block12668 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182963);
// ifNotNil:
send182964 = (Object)new_AST_Send((Object)localvariable26478, (Object)symbol35519, 1, (Object)block12668);
((AST_Send)send182964)->info = (AST_Info)info3678;
smallint20631 = (Object)new_Type_SmallInt(1);
constant35540 = (Object)new_AST_Constant((Object)smallint20631);
// +
send182965 = (Object)new_AST_Send((Object)instancevariable6006, (Object)SMB__plus, 1, (Object)constant35540);
((AST_Send)send182965)->info = (AST_Info)info3678;
classreference4817 = (Object)new_Organization_ClassReference((Type_Class)class4082);

// SmallDictionary>>empty
//empty
// 	size := 0
smallint20632 = (Object)new_Type_SmallInt(0);
constant35541 = (Object)new_AST_Constant((Object)smallint20632);
assign22436 = (Object)new_AST_Assign((Object)instancevariable6052, (Object)constant35541);
method25240 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign22436, Self);
string27737 = (Object)new_Type_String(L"empty");
string27738 = (Object)new_Type_String(L"empty\n\tsize := 0");
smallint20633 = (Object)new_Type_SmallInt(-1);
smallint20634 = (Object)new_Type_SmallInt(-1);
info3679 = (Object)new_AST_Info((Type_String)string27738,(Type_String)string27737, (Type_SmallInt)smallint20633, (Type_SmallInt)smallint20634);
((AST_Method)method25240)->info = (AST_Info)info3679;
symbol35883 = (Object)new_Type_Symbol_cached(L"empty");
methodclosure25238 = (Object)new_Runtime_MethodClosure(method25240);
store_method((Type_Class)class4082, (Type_Symbol)symbol35883, (Runtime_MethodClosure)methodclosure25238);


// SmallDictionary>>keysAndValuesDo:
//keysAndValuesDo: aBlock
// 	1 to: size do: [:i | aBlock value: (keys at: i) value: (values at: i)]
localvariable26479 = (Object)new_AST_Variable_named(L"aBlock");
array21235 = (Object)new_Type_Array_with(1, (Object)localvariable26479);
smallint20635 = (Object)new_Type_SmallInt(1);
constant35542 = (Object)new_AST_Constant((Object)smallint20635);
localvariable26480 = (Object)new_AST_Variable_named(L"i");
array21236 = (Object)new_Type_Array_with(1, (Object)localvariable26480);
// at:
send182966 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26480);
string27739 = (Object)new_Type_String(L"keysAndValuesDo:");
string27740 = (Object)new_Type_String(L"keysAndValuesDo: aBlock\n\t1 to: size do: [:i | aBlock value: (keys at: i) value: (values at: i)]");
smallint20636 = (Object)new_Type_SmallInt(-1);
smallint20637 = (Object)new_Type_SmallInt(-1);
info3680 = (Object)new_AST_Info((Type_String)string27740,(Type_String)string27739, (Type_SmallInt)smallint20636, (Type_SmallInt)smallint20637);
((AST_Send)send182966)->info = (AST_Info)info3680;
// at:
send182967 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26480);
((AST_Send)send182967)->info = (AST_Info)info3680;
// value:value:
send182968 = (Object)new_AST_Send((Object)localvariable26479, (Object)symbol35952, 2, (Object)send182966, (Object)send182967);
((AST_Send)send182968)->info = (AST_Info)info3680;
block12669 = (Object)new_AST_Block_with((Type_Array)array21236, (Type_Array)empty_Type_Array, 1, 1, send182968);
// to:do:
send182969 = (Object)new_AST_Send((Object)constant35542, (Object)symbol35647, 2, (Object)instancevariable6052, (Object)block12669);
((AST_Send)send182969)->info = (AST_Info)info3680;
method25241 = (Object)new_AST_Method_with((Type_Array)array21235, (Type_Array)empty_Type_Array, 2, send182969, Self);
((AST_Method)method25241)->info = (AST_Info)info3680;
symbol35928 = (Object)new_Type_Symbol_cached(L"keysAndValuesDo:");
methodclosure25239 = (Object)new_Runtime_MethodClosure(method25241);
store_method((Type_Class)class4082, (Type_Symbol)symbol35928, (Runtime_MethodClosure)methodclosure25239);


// SmallDictionary>>keysDo:
//keysDo: aBlock 
// 	1 to: size do: [:i | aBlock value: (keys at: i)]
localvariable26481 = (Object)new_AST_Variable_named(L"aBlock");
array21237 = (Object)new_Type_Array_with(1, (Object)localvariable26481);
smallint20638 = (Object)new_Type_SmallInt(1);
constant35543 = (Object)new_AST_Constant((Object)smallint20638);
localvariable26482 = (Object)new_AST_Variable_named(L"i");
array21238 = (Object)new_Type_Array_with(1, (Object)localvariable26482);
// at:
send182970 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26482);
string27741 = (Object)new_Type_String(L"keysDo:");
string27742 = (Object)new_Type_String(L"keysDo: aBlock \n\t1 to: size do: [:i | aBlock value: (keys at: i)]");
smallint20639 = (Object)new_Type_SmallInt(-1);
smallint20640 = (Object)new_Type_SmallInt(-1);
info3681 = (Object)new_AST_Info((Type_String)string27742,(Type_String)string27741, (Type_SmallInt)smallint20639, (Type_SmallInt)smallint20640);
((AST_Send)send182970)->info = (AST_Info)info3681;
// value:
send182971 = (Object)new_AST_Send((Object)localvariable26481, (Object)SMB_value_, 1, (Object)send182970);
((AST_Send)send182971)->info = (AST_Info)info3681;
block12670 = (Object)new_AST_Block_with((Type_Array)array21238, (Type_Array)empty_Type_Array, 1, 1, send182971);
// to:do:
send182972 = (Object)new_AST_Send((Object)constant35543, (Object)symbol35647, 2, (Object)instancevariable6052, (Object)block12670);
((AST_Send)send182972)->info = (AST_Info)info3681;
method25242 = (Object)new_AST_Method_with((Type_Array)array21237, (Type_Array)empty_Type_Array, 2, send182972, Self);
((AST_Method)method25242)->info = (AST_Info)info3681;
symbol35921 = (Object)new_Type_Symbol_cached(L"keysDo:");
methodclosure25240 = (Object)new_Runtime_MethodClosure(method25242);
store_method((Type_Class)class4082, (Type_Symbol)symbol35921, (Runtime_MethodClosure)methodclosure25240);


// SmallDictionary>>removeUnreferencedKeys
//removeUnreferencedKeys   "Undeclared removeUnreferencedKeys"
// 
// 	^ self unreferencedKeys do: [:key | self removeKey: key].
symbol35957 = (Object)new_Type_Symbol_cached(L"unreferencedKeys");
// unreferencedKeys
send182973 = (Object)new_AST_Send((Object)Self, (Object)symbol35957, 0);
string27743 = (Object)new_Type_String(L"removeUnreferencedKeys");
string27744 = (Object)new_Type_String(L"removeUnreferencedKeys   \"Undeclared removeUnreferencedKeys\"\n\n\t^ self unreferencedKeys do: [:key | self removeKey: key].");
smallint20641 = (Object)new_Type_SmallInt(-1);
smallint20642 = (Object)new_Type_SmallInt(-1);
info3682 = (Object)new_AST_Info((Type_String)string27744,(Type_String)string27743, (Type_SmallInt)smallint20641, (Type_SmallInt)smallint20642);
((AST_Send)send182973)->info = (AST_Info)info3682;
localvariable26483 = (Object)new_AST_Variable_named(L"key");
array21239 = (Object)new_Type_Array_with(1, (Object)localvariable26483);
symbol35897 = (Object)new_Type_Symbol_cached(L"removeKey:");
// removeKey:
send182974 = (Object)new_AST_Send((Object)Self, (Object)symbol35897, 1, (Object)localvariable26483);
((AST_Send)send182974)->info = (AST_Info)info3682;
block12671 = (Object)new_AST_Block_with((Type_Array)array21239, (Type_Array)empty_Type_Array, 1, 1, send182974);
// do:
send182975 = (Object)new_AST_Send((Object)send182973, (Object)symbol35642, 1, (Object)block12671);
((AST_Send)send182975)->info = (AST_Info)info3682;
method25243 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send182975);
((AST_Method)method25243)->info = (AST_Info)info3682;
symbol35893 = (Object)new_Type_Symbol_cached(L"removeUnreferencedKeys");
methodclosure25241 = (Object)new_Runtime_MethodClosure(method25243);
store_method((Type_Class)class4082, (Type_Symbol)symbol35893, (Runtime_MethodClosure)methodclosure25241);


// SmallDictionary>>explorerContentsWithIndexCollect:
//explorerContentsWithIndexCollect: twoArgBlock
// 
// 	| sortedKeys |
// 	sortedKeys := self keys asSortedCollection: [:x :y |
// 		((x isString and: [y isString])
// 			or: [x isNumber and: [y isNumber]])
// 			ifTrue: [x < y]
// 			ifFalse: [x class == y class
// 				ifTrue: [x printString < y printString]
// 				ifFalse: [x class name < y class name]]].
// 	^ sortedKeys collect: [:k | twoArgBlock value: (self at: k) value: k].
// 
localvariable26484 = (Object)new_AST_Variable_named(L"twoArgBlock");
array21240 = (Object)new_Type_Array_with(1, (Object)localvariable26484);
localvariable26485 = (Object)new_AST_Variable_named(L"sortedKeys");
array21241 = (Object)new_Type_Array_with(1, (Object)localvariable26485);
symbol35918 = (Object)new_Type_Symbol_cached(L"keys");
// keys
send182976 = (Object)new_AST_Send((Object)Self, (Object)symbol35918, 0);
string27745 = (Object)new_Type_String(L"explorerContentsWithIndexCollect:");
string27746 = (Object)new_Type_String(L"explorerContentsWithIndexCollect: twoArgBlock\n\n\t| sortedKeys |\n\tsortedKeys := self keys asSortedCollection: [:x :y |\n\t\t((x isString and: [y isString])\n\t\t\tor: [x isNumber and: [y isNumber]])\n\t\t\tifTrue: [x < y]\n\t\t\tifFalse: [x class == y class\n\t\t\t\tifTrue: [x printString < y printString]\n\t\t\t\tifFalse: [x class name < y class name]]].\n\t^ sortedKeys collect: [:k | twoArgBlock value: (self at: k) value: k].\n");
smallint20643 = (Object)new_Type_SmallInt(-1);
smallint20644 = (Object)new_Type_SmallInt(-1);
info3683 = (Object)new_AST_Info((Type_String)string27746,(Type_String)string27745, (Type_SmallInt)smallint20643, (Type_SmallInt)smallint20644);
((AST_Send)send182976)->info = (AST_Info)info3683;
symbol35958 = (Object)new_Type_Symbol_cached(L"asSortedCollection:");
localvariable26486 = (Object)new_AST_Variable_named(L"x");
localvariable26487 = (Object)new_AST_Variable_named(L"y");
array21242 = (Object)new_Type_Array_with(2, (Object)localvariable26486, (Object)localvariable26487);
symbol35959 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send182977 = (Object)new_AST_Send((Object)localvariable26486, (Object)symbol35959, 0);
((AST_Send)send182977)->info = (AST_Info)info3683;
// isString
send182978 = (Object)new_AST_Send((Object)localvariable26487, (Object)symbol35959, 0);
((AST_Send)send182978)->info = (AST_Info)info3683;
block12672 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182978);
// and:
send182979 = (Object)new_AST_Send((Object)send182977, (Object)symbol35631, 1, (Object)block12672);
((AST_Send)send182979)->info = (AST_Info)info3683;
symbol35960 = (Object)new_Type_Symbol_cached(L"isNumber");
// isNumber
send182980 = (Object)new_AST_Send((Object)localvariable26486, (Object)symbol35960, 0);
((AST_Send)send182980)->info = (AST_Info)info3683;
// isNumber
send182981 = (Object)new_AST_Send((Object)localvariable26487, (Object)symbol35960, 0);
((AST_Send)send182981)->info = (AST_Info)info3683;
block12673 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182981);
// and:
send182982 = (Object)new_AST_Send((Object)send182980, (Object)symbol35631, 1, (Object)block12673);
((AST_Send)send182982)->info = (AST_Info)info3683;
block12674 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182982);
// or:
send182983 = (Object)new_AST_Send((Object)send182979, (Object)symbol35630, 1, (Object)block12674);
((AST_Send)send182983)->info = (AST_Info)info3683;
// <
send182984 = (Object)new_AST_Send((Object)localvariable26486, (Object)SMB__lt, 1, (Object)localvariable26487);
((AST_Send)send182984)->info = (AST_Info)info3683;
block12675 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182984);
// class
send182985 = (Object)new_AST_Send((Object)localvariable26486, (Object)SMB_class, 0);
((AST_Send)send182985)->info = (AST_Info)info3683;
// class
send182986 = (Object)new_AST_Send((Object)localvariable26487, (Object)SMB_class, 0);
((AST_Send)send182986)->info = (AST_Info)info3683;
// ==
send182987 = (Object)new_AST_Send((Object)send182985, (Object)SMB__pequal, 1, (Object)send182986);
((AST_Send)send182987)->info = (AST_Info)info3683;
symbol35846 = (Object)new_Type_Symbol_cached(L"printString");
// printString
send182988 = (Object)new_AST_Send((Object)localvariable26486, (Object)symbol35846, 0);
((AST_Send)send182988)->info = (AST_Info)info3683;
// printString
send182989 = (Object)new_AST_Send((Object)localvariable26487, (Object)symbol35846, 0);
((AST_Send)send182989)->info = (AST_Info)info3683;
// <
send182990 = (Object)new_AST_Send((Object)send182988, (Object)SMB__lt, 1, (Object)send182989);
((AST_Send)send182990)->info = (AST_Info)info3683;
block12676 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182990);
// class
send182991 = (Object)new_AST_Send((Object)localvariable26486, (Object)SMB_class, 0);
((AST_Send)send182991)->info = (AST_Info)info3683;
// name
send182992 = (Object)new_AST_Send((Object)send182991, (Object)SMB_name, 0);
((AST_Send)send182992)->info = (AST_Info)info3683;
// class
send182993 = (Object)new_AST_Send((Object)localvariable26487, (Object)SMB_class, 0);
((AST_Send)send182993)->info = (AST_Info)info3683;
// name
send182994 = (Object)new_AST_Send((Object)send182993, (Object)SMB_name, 0);
((AST_Send)send182994)->info = (AST_Info)info3683;
// <
send182995 = (Object)new_AST_Send((Object)send182992, (Object)SMB__lt, 1, (Object)send182994);
((AST_Send)send182995)->info = (AST_Info)info3683;
block12677 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send182995);
// ifTrue:ifFalse:
send182996 = (Object)new_AST_Send((Object)send182987, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12676, (Object)block12677);
((AST_Send)send182996)->info = (AST_Info)info3683;
block12678 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send182996);
// ifTrue:ifFalse:
send182997 = (Object)new_AST_Send((Object)send182983, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12675, (Object)block12678);
((AST_Send)send182997)->info = (AST_Info)info3683;
block12679 = (Object)new_AST_Block_with((Type_Array)array21242, (Type_Array)empty_Type_Array, 1, 1, send182997);
// asSortedCollection:
send182998 = (Object)new_AST_Send((Object)send182976, (Object)symbol35958, 1, (Object)block12679);
((AST_Send)send182998)->info = (AST_Info)info3683;
assign22437 = (Object)new_AST_Assign((Object)localvariable26485, (Object)send182998);
symbol35899 = (Object)new_Type_Symbol_cached(L"collect:");
localvariable26488 = (Object)new_AST_Variable_named(L"k");
array21243 = (Object)new_Type_Array_with(1, (Object)localvariable26488);
// at:
send182999 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable26488);
((AST_Send)send182999)->info = (AST_Info)info3683;
// value:value:
send183000 = (Object)new_AST_Send((Object)localvariable26484, (Object)symbol35952, 2, (Object)send182999, (Object)localvariable26488);
((AST_Send)send183000)->info = (AST_Info)info3683;
block12680 = (Object)new_AST_Block_with((Type_Array)array21243, (Type_Array)empty_Type_Array, 1, 1, send183000);
// collect:
send183001 = (Object)new_AST_Send((Object)localvariable26485, (Object)symbol35899, 1, (Object)block12680);
((AST_Send)send183001)->info = (AST_Info)info3683;
method25244 = (Object)new_AST_Method_with((Type_Array)array21240, (Type_Array)array21241, 2, assign22437, send183001);
((AST_Method)method25244)->info = (AST_Info)info3683;
symbol35903 = (Object)new_Type_Symbol_cached(L"explorerContentsWithIndexCollect:");
methodclosure25242 = (Object)new_Runtime_MethodClosure(method25244);
store_method((Type_Class)class4082, (Type_Symbol)symbol35903, (Runtime_MethodClosure)methodclosure25242);


// SmallDictionary>>growKeysAndValues
//growKeysAndValues
// 	self growTo: size * 2
symbol35930 = (Object)new_Type_Symbol_cached(L"growTo:");
smallint20645 = (Object)new_Type_SmallInt(2);
constant35544 = (Object)new_AST_Constant((Object)smallint20645);
// *
send183002 = (Object)new_AST_Send((Object)instancevariable6052, (Object)SMB__times, 1, (Object)constant35544);
string27747 = (Object)new_Type_String(L"growKeysAndValues");
string27748 = (Object)new_Type_String(L"growKeysAndValues\n\tself growTo: size * 2");
smallint20646 = (Object)new_Type_SmallInt(-1);
smallint20647 = (Object)new_Type_SmallInt(-1);
info3684 = (Object)new_AST_Info((Type_String)string27748,(Type_String)string27747, (Type_SmallInt)smallint20646, (Type_SmallInt)smallint20647);
((AST_Send)send183002)->info = (AST_Info)info3684;
// growTo:
send183003 = (Object)new_AST_Send((Object)Self, (Object)symbol35930, 1, (Object)send183002);
((AST_Send)send183003)->info = (AST_Info)info3684;
method25245 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send183003, Self);
((AST_Method)method25245)->info = (AST_Info)info3684;
symbol35931 = (Object)new_Type_Symbol_cached(L"growKeysAndValues");
methodclosure25243 = (Object)new_Runtime_MethodClosure(method25245);
store_method((Type_Class)class4082, (Type_Symbol)symbol35931, (Runtime_MethodClosure)methodclosure25243);


// SmallDictionary>>hasBindingThatBeginsWith:
//hasBindingThatBeginsWith: aString
// 	"Answer true if the receiver has a key that begins with aString, false otherwise"
// 	
// 	self keysDo:[:each | 
// 		(each beginsWith: aString)
// 			ifTrue:[^true]].
// 	^false
localvariable26489 = (Object)new_AST_Variable_named(L"aString");
array21244 = (Object)new_Type_Array_with(1, (Object)localvariable26489);
variable1569 = (Object)new_AST_Variable_named(L"return");
array21245 = (Object)new_Type_Array_with(1, (Object)variable1569);
localvariable26490 = (Object)new_AST_Variable_named(L"each");
array21246 = (Object)new_Type_Array_with(1, (Object)localvariable26490);
symbol35667 = (Object)new_Type_Symbol_cached(L"beginsWith:");
// beginsWith:
send183004 = (Object)new_AST_Send((Object)localvariable26490, (Object)symbol35667, 1, (Object)localvariable26489);
string27749 = (Object)new_Type_String(L"hasBindingThatBeginsWith:");
string27750 = (Object)new_Type_String(L"hasBindingThatBeginsWith: aString\n\t\"Answer true if the receiver has a key that begins with aString, false otherwise\"\n\t\n\tself keysDo:[:each | \n\t\t(each beginsWith: aString)\n\t\t\tifTrue:[^true]].\n\t^false");
smallint20648 = (Object)new_Type_SmallInt(-1);
smallint20649 = (Object)new_Type_SmallInt(-1);
info3685 = (Object)new_AST_Info((Type_String)string27750,(Type_String)string27749, (Type_SmallInt)smallint20648, (Type_SmallInt)smallint20649);
((AST_Send)send183004)->info = (AST_Info)info3685;
// escape:
send183005 = (Object)new_AST_Send((Object)variable1569, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send183005)->info = (AST_Info)info3685;
block12681 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183005);
// ifTrue:
send183006 = (Object)new_AST_Send((Object)send183004, (Object)SMB_ifTrue_, 1, (Object)block12681);
((AST_Send)send183006)->info = (AST_Info)info3685;
block12682 = (Object)new_AST_Block_with((Type_Array)array21246, (Type_Array)empty_Type_Array, 2, 1, send183006);
// keysDo:
send183007 = (Object)new_AST_Send((Object)Self, (Object)symbol35921, 1, (Object)block12682);
((AST_Send)send183007)->info = (AST_Info)info3685;
block12683 = (Object)new_AST_Block_with((Type_Array)array21245, (Type_Array)empty_Type_Array, 1, 2, send183007, False_Const);
// on:
send183008 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12683);
method25246 = (Object)new_AST_Method_with((Type_Array)array21244, (Type_Array)empty_Type_Array, 1, send183008);
((AST_Method)method25246)->info = (AST_Info)info3685;
symbol35915 = (Object)new_Type_Symbol_cached(L"hasBindingThatBeginsWith:");
methodclosure25244 = (Object)new_Runtime_MethodClosure(method25246);
store_method((Type_Class)class4082, (Type_Symbol)symbol35915, (Runtime_MethodClosure)methodclosure25244);


// SmallDictionary>>associationsSelect:
//associationsSelect: aBlock 
// 	"Evaluate aBlock with each of my associations as the argument. Collect
// 	into a new dictionary, only those associations for which aBlock evaluates
// 	to true."
// 
// 	| newCollection |
// 	newCollection := self species new.
// 	self associationsDo: 
// 		[:each | 
// 		(aBlock value: each) ifTrue: [newCollection add: each]].
// 	^newCollection
localvariable26491 = (Object)new_AST_Variable_named(L"aBlock");
array21247 = (Object)new_Type_Array_with(1, (Object)localvariable26491);
localvariable26492 = (Object)new_AST_Variable_named(L"newCollection");
array21248 = (Object)new_Type_Array_with(1, (Object)localvariable26492);
symbol35961 = (Object)new_Type_Symbol_cached(L"species");
// species
send183009 = (Object)new_AST_Send((Object)Self, (Object)symbol35961, 0);
string27751 = (Object)new_Type_String(L"associationsSelect:");
string27752 = (Object)new_Type_String(L"associationsSelect: aBlock \n\t\"Evaluate aBlock with each of my associations as the argument. Collect\n\tinto a new dictionary, only those associations for which aBlock evaluates\n\tto true.\"\n\n\t| newCollection |\n\tnewCollection := self species new.\n\tself associationsDo: \n\t\t[:each | \n\t\t(aBlock value: each) ifTrue: [newCollection add: each]].\n\t^newCollection");
smallint20650 = (Object)new_Type_SmallInt(-1);
smallint20651 = (Object)new_Type_SmallInt(-1);
info3686 = (Object)new_AST_Info((Type_String)string27752,(Type_String)string27751, (Type_SmallInt)smallint20650, (Type_SmallInt)smallint20651);
((AST_Send)send183009)->info = (AST_Info)info3686;
// new
send183010 = (Object)new_AST_Send((Object)send183009, (Object)symbol35612, 0);
((AST_Send)send183010)->info = (AST_Info)info3686;
assign22438 = (Object)new_AST_Assign((Object)localvariable26492, (Object)send183010);
symbol35912 = (Object)new_Type_Symbol_cached(L"associationsDo:");
localvariable26493 = (Object)new_AST_Variable_named(L"each");
array21249 = (Object)new_Type_Array_with(1, (Object)localvariable26493);
// value:
send183011 = (Object)new_AST_Send((Object)localvariable26491, (Object)SMB_value_, 1, (Object)localvariable26493);
((AST_Send)send183011)->info = (AST_Info)info3686;
// add:
send183012 = (Object)new_AST_Send((Object)localvariable26492, (Object)symbol35696, 1, (Object)localvariable26493);
((AST_Send)send183012)->info = (AST_Info)info3686;
block12684 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183012);
// ifTrue:
send183013 = (Object)new_AST_Send((Object)send183011, (Object)SMB_ifTrue_, 1, (Object)block12684);
((AST_Send)send183013)->info = (AST_Info)info3686;
block12685 = (Object)new_AST_Block_with((Type_Array)array21249, (Type_Array)empty_Type_Array, 1, 1, send183013);
// associationsDo:
send183014 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12685);
((AST_Send)send183014)->info = (AST_Info)info3686;
method25247 = (Object)new_AST_Method_with((Type_Array)array21247, (Type_Array)array21248, 3, assign22438, send183014, localvariable26492);
((AST_Method)method25247)->info = (AST_Info)info3686;
symbol35887 = (Object)new_Type_Symbol_cached(L"associationsSelect:");
methodclosure25245 = (Object)new_Runtime_MethodClosure(method25247);
store_method((Type_Class)class4082, (Type_Symbol)symbol35887, (Runtime_MethodClosure)methodclosure25245);


// SmallDictionary>>initialize
//initialize
// 	super initialize.
// 	keys := Array new: 2.
// 	values := Array new: 2.
// 	size := 0
super1968 = (Object)new_AST_Super((Object)symbol35517, 0);
smallint20652 = (Object)new_Type_SmallInt(2);
constant35545 = (Object)new_AST_Constant((Object)smallint20652);
// new:
send183015 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35545);
string27753 = (Object)new_Type_String(L"initialize");
string27754 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tkeys := Array new: 2.\n\tvalues := Array new: 2.\n\tsize := 0");
smallint20653 = (Object)new_Type_SmallInt(-1);
smallint20654 = (Object)new_Type_SmallInt(-1);
info3687 = (Object)new_AST_Info((Type_String)string27754,(Type_String)string27753, (Type_SmallInt)smallint20653, (Type_SmallInt)smallint20654);
((AST_Send)send183015)->info = (AST_Info)info3687;
assign22439 = (Object)new_AST_Assign((Object)instancevariable6050, (Object)send183015);
smallint20655 = (Object)new_Type_SmallInt(2);
constant35546 = (Object)new_AST_Constant((Object)smallint20655);
// new:
send183016 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35546);
((AST_Send)send183016)->info = (AST_Info)info3687;
assign22440 = (Object)new_AST_Assign((Object)instancevariable6051, (Object)send183016);
smallint20656 = (Object)new_Type_SmallInt(0);
constant35547 = (Object)new_AST_Constant((Object)smallint20656);
assign22441 = (Object)new_AST_Assign((Object)instancevariable6052, (Object)constant35547);
method25248 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1968, assign22439, assign22440, assign22441, Self);
((AST_Method)method25248)->info = (AST_Info)info3687;
methodclosure25246 = (Object)new_Runtime_MethodClosure(method25248);
store_method((Type_Class)class4082, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25246);


// SmallDictionary>>at:ifPresentAndInMemory:
//at: key ifPresentAndInMemory: aBlock
// 	"Lookup the given key in the receiver. If it is present, answer the value of evaluating the given block with the value associated with the key. Otherwise, answer nil."
// 
// 	| v |
// 	v := self at: key ifAbsent: [^ nil].
// 	v isInMemory ifFalse: [^ nil].
// 	^ aBlock value: v
// 
localvariable26494 = (Object)new_AST_Variable_named(L"key");
localvariable26495 = (Object)new_AST_Variable_named(L"aBlock");
array21250 = (Object)new_Type_Array_with(2, (Object)localvariable26494, (Object)localvariable26495);
localvariable26496 = (Object)new_AST_Variable_named(L"v");
array21251 = (Object)new_Type_Array_with(1, (Object)localvariable26496);
variable1570 = (Object)new_AST_Variable_named(L"return");
array21252 = (Object)new_Type_Array_with(1, (Object)variable1570);
symbol35914 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");
// escape:
send183017 = (Object)new_AST_Send((Object)variable1570, (Object)SMB_escape_, 1, (Object)Nil_Const);
string27755 = (Object)new_Type_String(L"at:ifPresentAndInMemory:");
string27756 = (Object)new_Type_String(L"at: key ifPresentAndInMemory: aBlock\n\t\"Lookup the given key in the receiver. If it is present, answer the value of evaluating the given block with the value associated with the key. Otherwise, answer nil.\"\n\n\t| v |\n\tv := self at: key ifAbsent: [^ nil].\n\tv isInMemory ifFalse: [^ nil].\n\t^ aBlock value: v\n");
smallint20657 = (Object)new_Type_SmallInt(-1);
smallint20658 = (Object)new_Type_SmallInt(-1);
info3688 = (Object)new_AST_Info((Type_String)string27756,(Type_String)string27755, (Type_SmallInt)smallint20657, (Type_SmallInt)smallint20658);
((AST_Send)send183017)->info = (AST_Info)info3688;
block12686 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183017);
// at:ifAbsent:
send183018 = (Object)new_AST_Send((Object)Self, (Object)symbol35914, 2, (Object)localvariable26494, (Object)block12686);
((AST_Send)send183018)->info = (AST_Info)info3688;
assign22442 = (Object)new_AST_Assign((Object)localvariable26496, (Object)send183018);
symbol35962 = (Object)new_Type_Symbol_cached(L"isInMemory");
// isInMemory
send183019 = (Object)new_AST_Send((Object)localvariable26496, (Object)symbol35962, 0);
((AST_Send)send183019)->info = (AST_Info)info3688;
// escape:
send183020 = (Object)new_AST_Send((Object)variable1570, (Object)SMB_escape_, 1, (Object)Nil_Const);
((AST_Send)send183020)->info = (AST_Info)info3688;
block12687 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183020);
// ifFalse:
send183021 = (Object)new_AST_Send((Object)send183019, (Object)SMB_ifFalse_, 1, (Object)block12687);
((AST_Send)send183021)->info = (AST_Info)info3688;
// value:
send183022 = (Object)new_AST_Send((Object)localvariable26495, (Object)SMB_value_, 1, (Object)localvariable26496);
((AST_Send)send183022)->info = (AST_Info)info3688;
block12688 = (Object)new_AST_Block_with((Type_Array)array21252, (Type_Array)empty_Type_Array, 1, 3, assign22442, send183021, send183022);
// on:
send183023 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12688);
method25249 = (Object)new_AST_Method_with((Type_Array)array21250, (Type_Array)array21251, 1, send183023);
((AST_Method)method25249)->info = (AST_Info)info3688;
symbol35880 = (Object)new_Type_Symbol_cached(L"at:ifPresentAndInMemory:");
methodclosure25247 = (Object)new_Runtime_MethodClosure(method25249);
store_method((Type_Class)class4082, (Type_Symbol)symbol35880, (Runtime_MethodClosure)methodclosure25247);


// SmallDictionary>>remove:
//remove:anAssociation
// 
// 	self removeKey:anAssociation key.
localvariable26497 = (Object)new_AST_Variable_named(L"anAssociation");
array21253 = (Object)new_Type_Array_with(1, (Object)localvariable26497);
// key
send183024 = (Object)new_AST_Send((Object)localvariable26497, (Object)symbol35933, 0);
string27757 = (Object)new_Type_String(L"remove:");
string27758 = (Object)new_Type_String(L"remove:anAssociation\n\n\tself removeKey:anAssociation key.");
smallint20659 = (Object)new_Type_SmallInt(-1);
smallint20660 = (Object)new_Type_SmallInt(-1);
info3689 = (Object)new_AST_Info((Type_String)string27758,(Type_String)string27757, (Type_SmallInt)smallint20659, (Type_SmallInt)smallint20660);
((AST_Send)send183024)->info = (AST_Info)info3689;
// removeKey:
send183025 = (Object)new_AST_Send((Object)Self, (Object)symbol35897, 1, (Object)send183024);
((AST_Send)send183025)->info = (AST_Info)info3689;
method25250 = (Object)new_AST_Method_with((Type_Array)array21253, (Type_Array)empty_Type_Array, 2, send183025, Self);
((AST_Method)method25250)->info = (AST_Info)info3689;
symbol35925 = (Object)new_Type_Symbol_cached(L"remove:");
methodclosure25248 = (Object)new_Runtime_MethodClosure(method25250);
store_method((Type_Class)class4082, (Type_Symbol)symbol35925, (Runtime_MethodClosure)methodclosure25248);


// SmallDictionary>>removeKey:
//removeKey: key 
// 	"Remove key from the receiver.
// 	If key is not in the receiver, notify an error."
// 
// 	^ self removeKey: key ifAbsent: [self errorKeyNotFound]
localvariable26498 = (Object)new_AST_Variable_named(L"key");
array21254 = (Object)new_Type_Array_with(1, (Object)localvariable26498);
symbol35884 = (Object)new_Type_Symbol_cached(L"removeKey:ifAbsent:");
symbol35898 = (Object)new_Type_Symbol_cached(L"errorKeyNotFound");
// errorKeyNotFound
send183026 = (Object)new_AST_Send((Object)Self, (Object)symbol35898, 0);
string27759 = (Object)new_Type_String(L"removeKey:");
string27760 = (Object)new_Type_String(L"removeKey: key \n\t\"Remove key from the receiver.\n\tIf key is not in the receiver, notify an error.\"\n\n\t^ self removeKey: key ifAbsent: [self errorKeyNotFound]");
smallint20661 = (Object)new_Type_SmallInt(-1);
smallint20662 = (Object)new_Type_SmallInt(-1);
info3690 = (Object)new_AST_Info((Type_String)string27760,(Type_String)string27759, (Type_SmallInt)smallint20661, (Type_SmallInt)smallint20662);
((AST_Send)send183026)->info = (AST_Info)info3690;
block12689 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183026);
// removeKey:ifAbsent:
send183027 = (Object)new_AST_Send((Object)Self, (Object)symbol35884, 2, (Object)localvariable26498, (Object)block12689);
((AST_Send)send183027)->info = (AST_Info)info3690;
method25251 = (Object)new_AST_Method_with((Type_Array)array21254, (Type_Array)empty_Type_Array, 1, send183027);
((AST_Method)method25251)->info = (AST_Info)info3690;
methodclosure25249 = (Object)new_Runtime_MethodClosure(method25251);
store_method((Type_Class)class4082, (Type_Symbol)symbol35897, (Runtime_MethodClosure)methodclosure25249);


// SmallDictionary>>errorValueNotFound
//errorValueNotFound
// 
// 	self error: 'value not found'
string27761 = (Object)new_Type_String(L"value not found");
constant35548 = (Object)new_AST_Constant((Object)string27761);
// error:
send183028 = (Object)new_AST_Send((Object)Self, (Object)symbol35949, 1, (Object)constant35548);
string27762 = (Object)new_Type_String(L"errorValueNotFound");
string27763 = (Object)new_Type_String(L"errorValueNotFound\n\n\tself error: \'value not found\'");
smallint20663 = (Object)new_Type_SmallInt(-1);
smallint20664 = (Object)new_Type_SmallInt(-1);
info3691 = (Object)new_AST_Info((Type_String)string27763,(Type_String)string27762, (Type_SmallInt)smallint20663, (Type_SmallInt)smallint20664);
((AST_Send)send183028)->info = (AST_Info)info3691;
method25252 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send183028, Self);
((AST_Method)method25252)->info = (AST_Info)info3691;
symbol35907 = (Object)new_Type_Symbol_cached(L"errorValueNotFound");
methodclosure25250 = (Object)new_Runtime_MethodClosure(method25252);
store_method((Type_Class)class4082, (Type_Symbol)symbol35907, (Runtime_MethodClosure)methodclosure25250);


// SmallDictionary>>customizeExplorerContents
//customizeExplorerContents
// 
// 	^ true.
// 
method25253 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
string27764 = (Object)new_Type_String(L"customizeExplorerContents");
string27765 = (Object)new_Type_String(L"customizeExplorerContents\n\n\t^ true.\n");
smallint20665 = (Object)new_Type_SmallInt(-1);
smallint20666 = (Object)new_Type_SmallInt(-1);
info3692 = (Object)new_AST_Info((Type_String)string27765,(Type_String)string27764, (Type_SmallInt)smallint20665, (Type_SmallInt)smallint20666);
((AST_Method)method25253)->info = (AST_Info)info3692;
symbol35890 = (Object)new_Type_Symbol_cached(L"customizeExplorerContents");
methodclosure25251 = (Object)new_Runtime_MethodClosure(method25253);
store_method((Type_Class)class4082, (Type_Symbol)symbol35890, (Runtime_MethodClosure)methodclosure25251);


// SmallDictionary>>remove:ifAbsent:
//remove: oldObject ifAbsent: anExceptionBlock 
// 	self removeKey: oldObject key ifAbsent: anExceptionBlock.
// 	^oldObject
localvariable26499 = (Object)new_AST_Variable_named(L"oldObject");
localvariable26500 = (Object)new_AST_Variable_named(L"anExceptionBlock");
array21255 = (Object)new_Type_Array_with(2, (Object)localvariable26499, (Object)localvariable26500);
// key
send183029 = (Object)new_AST_Send((Object)localvariable26499, (Object)symbol35933, 0);
string27766 = (Object)new_Type_String(L"remove:ifAbsent:");
string27767 = (Object)new_Type_String(L"remove: oldObject ifAbsent: anExceptionBlock \n\tself removeKey: oldObject key ifAbsent: anExceptionBlock.\n\t^oldObject");
smallint20667 = (Object)new_Type_SmallInt(-1);
smallint20668 = (Object)new_Type_SmallInt(-1);
info3693 = (Object)new_AST_Info((Type_String)string27767,(Type_String)string27766, (Type_SmallInt)smallint20667, (Type_SmallInt)smallint20668);
((AST_Send)send183029)->info = (AST_Info)info3693;
// removeKey:ifAbsent:
send183030 = (Object)new_AST_Send((Object)Self, (Object)symbol35884, 2, (Object)send183029, (Object)localvariable26500);
((AST_Send)send183030)->info = (AST_Info)info3693;
method25254 = (Object)new_AST_Method_with((Type_Array)array21255, (Type_Array)empty_Type_Array, 2, send183030, localvariable26499);
((AST_Method)method25254)->info = (AST_Info)info3693;
symbol35919 = (Object)new_Type_Symbol_cached(L"remove:ifAbsent:");
methodclosure25252 = (Object)new_Runtime_MethodClosure(method25254);
store_method((Type_Class)class4082, (Type_Symbol)symbol35919, (Runtime_MethodClosure)methodclosure25252);


// SmallDictionary>>includesIdentity:
//includesIdentity: aValue
// 	"Answer whether aValue is one of the values of the receiver.  Contrast #includes: in which there is only an equality check, here there is an identity check"
// 
// 	self do: [:each | aValue == each ifTrue: [^ true]].
// 	^ false
localvariable26501 = (Object)new_AST_Variable_named(L"aValue");
array21256 = (Object)new_Type_Array_with(1, (Object)localvariable26501);
variable1571 = (Object)new_AST_Variable_named(L"return");
array21257 = (Object)new_Type_Array_with(1, (Object)variable1571);
localvariable26502 = (Object)new_AST_Variable_named(L"each");
array21258 = (Object)new_Type_Array_with(1, (Object)localvariable26502);
// ==
send183031 = (Object)new_AST_Send((Object)localvariable26501, (Object)SMB__pequal, 1, (Object)localvariable26502);
string27768 = (Object)new_Type_String(L"includesIdentity:");
string27769 = (Object)new_Type_String(L"includesIdentity: aValue\n\t\"Answer whether aValue is one of the values of the receiver.  Contrast #includes: in which there is only an equality check, here there is an identity check\"\n\n\tself do: [:each | aValue == each ifTrue: [^ true]].\n\t^ false");
smallint20669 = (Object)new_Type_SmallInt(-1);
smallint20670 = (Object)new_Type_SmallInt(-1);
info3694 = (Object)new_AST_Info((Type_String)string27769,(Type_String)string27768, (Type_SmallInt)smallint20669, (Type_SmallInt)smallint20670);
((AST_Send)send183031)->info = (AST_Info)info3694;
// escape:
send183032 = (Object)new_AST_Send((Object)variable1571, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send183032)->info = (AST_Info)info3694;
block12690 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183032);
// ifTrue:
send183033 = (Object)new_AST_Send((Object)send183031, (Object)SMB_ifTrue_, 1, (Object)block12690);
((AST_Send)send183033)->info = (AST_Info)info3694;
block12691 = (Object)new_AST_Block_with((Type_Array)array21258, (Type_Array)empty_Type_Array, 2, 1, send183033);
// do:
send183034 = (Object)new_AST_Send((Object)Self, (Object)symbol35642, 1, (Object)block12691);
((AST_Send)send183034)->info = (AST_Info)info3694;
block12692 = (Object)new_AST_Block_with((Type_Array)array21257, (Type_Array)empty_Type_Array, 1, 2, send183034, False_Const);
// on:
send183035 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12692);
method25255 = (Object)new_AST_Method_with((Type_Array)array21256, (Type_Array)empty_Type_Array, 1, send183035);
((AST_Method)method25255)->info = (AST_Info)info3694;
symbol35879 = (Object)new_Type_Symbol_cached(L"includesIdentity:");
methodclosure25253 = (Object)new_Runtime_MethodClosure(method25255);
store_method((Type_Class)class4082, (Type_Symbol)symbol35879, (Runtime_MethodClosure)methodclosure25253);


// SmallDictionary>>postCopy
//postCopy
// 	keys := keys copy.
// 	values := values copy
// copy
send183036 = (Object)new_AST_Send((Object)instancevariable6050, (Object)symbol35637, 0);
string27770 = (Object)new_Type_String(L"postCopy");
string27771 = (Object)new_Type_String(L"postCopy\n\tkeys := keys copy.\n\tvalues := values copy");
smallint20671 = (Object)new_Type_SmallInt(-1);
smallint20672 = (Object)new_Type_SmallInt(-1);
info3695 = (Object)new_AST_Info((Type_String)string27771,(Type_String)string27770, (Type_SmallInt)smallint20671, (Type_SmallInt)smallint20672);
((AST_Send)send183036)->info = (AST_Info)info3695;
assign22443 = (Object)new_AST_Assign((Object)instancevariable6050, (Object)send183036);
// copy
send183037 = (Object)new_AST_Send((Object)instancevariable6051, (Object)symbol35637, 0);
((AST_Send)send183037)->info = (AST_Info)info3695;
assign22444 = (Object)new_AST_Assign((Object)instancevariable6051, (Object)send183037);
method25256 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, assign22443, assign22444, Self);
((AST_Method)method25256)->info = (AST_Info)info3695;
symbol35900 = (Object)new_Type_Symbol_cached(L"postCopy");
methodclosure25254 = (Object)new_Runtime_MethodClosure(method25256);
store_method((Type_Class)class4082, (Type_Symbol)symbol35900, (Runtime_MethodClosure)methodclosure25254);


// SmallDictionary>>associationsDo:
//associationsDo: aBlock 
// 	self keysAndValuesDo: [:key :value | aBlock value: key -> value]
localvariable26503 = (Object)new_AST_Variable_named(L"aBlock");
array21259 = (Object)new_Type_Array_with(1, (Object)localvariable26503);
localvariable26504 = (Object)new_AST_Variable_named(L"key");
localvariable26505 = (Object)new_AST_Variable_named(L"value");
array21260 = (Object)new_Type_Array_with(2, (Object)localvariable26504, (Object)localvariable26505);
symbol35963 = (Object)new_Type_Symbol_cached(L"->");
// ->
send183038 = (Object)new_AST_Send((Object)localvariable26504, (Object)symbol35963, 1, (Object)localvariable26505);
string27772 = (Object)new_Type_String(L"associationsDo:");
string27773 = (Object)new_Type_String(L"associationsDo: aBlock \n\tself keysAndValuesDo: [:key :value | aBlock value: key -> value]");
smallint20673 = (Object)new_Type_SmallInt(-1);
smallint20674 = (Object)new_Type_SmallInt(-1);
info3696 = (Object)new_AST_Info((Type_String)string27773,(Type_String)string27772, (Type_SmallInt)smallint20673, (Type_SmallInt)smallint20674);
((AST_Send)send183038)->info = (AST_Info)info3696;
// value:
send183039 = (Object)new_AST_Send((Object)localvariable26503, (Object)SMB_value_, 1, (Object)send183038);
((AST_Send)send183039)->info = (AST_Info)info3696;
block12693 = (Object)new_AST_Block_with((Type_Array)array21260, (Type_Array)empty_Type_Array, 1, 1, send183039);
// keysAndValuesDo:
send183040 = (Object)new_AST_Send((Object)Self, (Object)symbol35928, 1, (Object)block12693);
((AST_Send)send183040)->info = (AST_Info)info3696;
method25257 = (Object)new_AST_Method_with((Type_Array)array21259, (Type_Array)empty_Type_Array, 2, send183040, Self);
((AST_Method)method25257)->info = (AST_Info)info3696;
methodclosure25255 = (Object)new_Runtime_MethodClosure(method25257);
store_method((Type_Class)class4082, (Type_Symbol)symbol35912, (Runtime_MethodClosure)methodclosure25255);


// SmallDictionary>>removeKey:ifAbsent:
//removeKey: key ifAbsent: aBlock 
// 	"Remove key (and its associated value) from the receiver. If key is not in 
// 	the receiver, answer the result of evaluating aBlock. Otherwise, answer 
// 	the value externally named by key."
// 
// 	| index value |
// 	index := self findIndexForKey:  key.
// 	index == 0 ifTrue: [^aBlock value].
// 	
// 	value := values at: index.
// 	index to: size - 1
// 		do: 
// 			[:i | 
// 			keys at: i put: (keys at: i + 1).
// 			values at: i put: (values at: i + 1)].
// 	keys at: size put: nil.
// 	values at: size put: nil.
// 	size := size - 1.
// 	^value
localvariable26506 = (Object)new_AST_Variable_named(L"key");
localvariable26507 = (Object)new_AST_Variable_named(L"aBlock");
array21261 = (Object)new_Type_Array_with(2, (Object)localvariable26506, (Object)localvariable26507);
localvariable26508 = (Object)new_AST_Variable_named(L"index");
localvariable26509 = (Object)new_AST_Variable_named(L"value");
array21262 = (Object)new_Type_Array_with(2, (Object)localvariable26508, (Object)localvariable26509);
variable1572 = (Object)new_AST_Variable_named(L"return");
array21263 = (Object)new_Type_Array_with(1, (Object)variable1572);
symbol35926 = (Object)new_Type_Symbol_cached(L"findIndexForKey:");
// findIndexForKey:
send183041 = (Object)new_AST_Send((Object)Self, (Object)symbol35926, 1, (Object)localvariable26506);
string27774 = (Object)new_Type_String(L"removeKey:ifAbsent:");
string27775 = (Object)new_Type_String(L"removeKey: key ifAbsent: aBlock \n\t\"Remove key (and its associated value) from the receiver. If key is not in \n\tthe receiver, answer the result of evaluating aBlock. Otherwise, answer \n\tthe value externally named by key.\"\n\n\t| index value |\n\tindex := self findIndexForKey:  key.\n\tindex == 0 ifTrue: [^aBlock value].\n\t\n\tvalue := values at: index.\n\tindex to: size - 1\n\t\tdo: \n\t\t\t[:i | \n\t\t\tkeys at: i put: (keys at: i + 1).\n\t\t\tvalues at: i put: (values at: i + 1)].\n\tkeys at: size put: nil.\n\tvalues at: size put: nil.\n\tsize := size - 1.\n\t^value");
smallint20675 = (Object)new_Type_SmallInt(-1);
smallint20676 = (Object)new_Type_SmallInt(-1);
info3697 = (Object)new_AST_Info((Type_String)string27775,(Type_String)string27774, (Type_SmallInt)smallint20675, (Type_SmallInt)smallint20676);
((AST_Send)send183041)->info = (AST_Info)info3697;
assign22445 = (Object)new_AST_Assign((Object)localvariable26508, (Object)send183041);
smallint20677 = (Object)new_Type_SmallInt(0);
constant35549 = (Object)new_AST_Constant((Object)smallint20677);
// ==
send183042 = (Object)new_AST_Send((Object)localvariable26508, (Object)SMB__pequal, 1, (Object)constant35549);
((AST_Send)send183042)->info = (AST_Info)info3697;
// value
send183043 = (Object)new_AST_Send((Object)localvariable26507, (Object)symbol35946, 0);
((AST_Send)send183043)->info = (AST_Info)info3697;
// escape:
send183044 = (Object)new_AST_Send((Object)variable1572, (Object)SMB_escape_, 1, (Object)send183043);
((AST_Send)send183044)->info = (AST_Info)info3697;
block12694 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183044);
// ifTrue:
send183045 = (Object)new_AST_Send((Object)send183042, (Object)SMB_ifTrue_, 1, (Object)block12694);
((AST_Send)send183045)->info = (AST_Info)info3697;
// at:
send183046 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26508);
((AST_Send)send183046)->info = (AST_Info)info3697;
assign22446 = (Object)new_AST_Assign((Object)localvariable26509, (Object)send183046);
smallint20678 = (Object)new_Type_SmallInt(1);
constant35550 = (Object)new_AST_Constant((Object)smallint20678);
// -
send183047 = (Object)new_AST_Send((Object)instancevariable6052, (Object)SMB__minus, 1, (Object)constant35550);
((AST_Send)send183047)->info = (AST_Info)info3697;
localvariable26510 = (Object)new_AST_Variable_named(L"i");
array21264 = (Object)new_Type_Array_with(1, (Object)localvariable26510);
smallint20679 = (Object)new_Type_SmallInt(1);
constant35551 = (Object)new_AST_Constant((Object)smallint20679);
// +
send183048 = (Object)new_AST_Send((Object)localvariable26510, (Object)SMB__plus, 1, (Object)constant35551);
((AST_Send)send183048)->info = (AST_Info)info3697;
// at:
send183049 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)send183048);
((AST_Send)send183049)->info = (AST_Info)info3697;
// at:put:
send183050 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_put_, 2, (Object)localvariable26510, (Object)send183049);
((AST_Send)send183050)->info = (AST_Info)info3697;
smallint20680 = (Object)new_Type_SmallInt(1);
constant35552 = (Object)new_AST_Constant((Object)smallint20680);
// +
send183051 = (Object)new_AST_Send((Object)localvariable26510, (Object)SMB__plus, 1, (Object)constant35552);
((AST_Send)send183051)->info = (AST_Info)info3697;
// at:
send183052 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)send183051);
((AST_Send)send183052)->info = (AST_Info)info3697;
// at:put:
send183053 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_put_, 2, (Object)localvariable26510, (Object)send183052);
((AST_Send)send183053)->info = (AST_Info)info3697;
block12695 = (Object)new_AST_Block_with((Type_Array)array21264, (Type_Array)empty_Type_Array, 2, 2, send183050, send183053);
// to:do:
send183054 = (Object)new_AST_Send((Object)localvariable26508, (Object)symbol35647, 2, (Object)send183047, (Object)block12695);
((AST_Send)send183054)->info = (AST_Info)info3697;
// at:put:
send183055 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_put_, 2, (Object)instancevariable6052, (Object)Nil_Const);
((AST_Send)send183055)->info = (AST_Info)info3697;
// at:put:
send183056 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_put_, 2, (Object)instancevariable6052, (Object)Nil_Const);
((AST_Send)send183056)->info = (AST_Info)info3697;
smallint20681 = (Object)new_Type_SmallInt(1);
constant35553 = (Object)new_AST_Constant((Object)smallint20681);
// -
send183057 = (Object)new_AST_Send((Object)instancevariable6052, (Object)SMB__minus, 1, (Object)constant35553);
((AST_Send)send183057)->info = (AST_Info)info3697;
assign22447 = (Object)new_AST_Assign((Object)instancevariable6052, (Object)send183057);
block12696 = (Object)new_AST_Block_with((Type_Array)array21263, (Type_Array)empty_Type_Array, 1, 8, assign22445, send183045, assign22446, send183054, send183055, send183056, assign22447, localvariable26509);
// on:
send183058 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12696);
method25258 = (Object)new_AST_Method_with((Type_Array)array21261, (Type_Array)array21262, 1, send183058);
((AST_Method)method25258)->info = (AST_Info)info3697;
methodclosure25256 = (Object)new_Runtime_MethodClosure(method25258);
store_method((Type_Class)class4082, (Type_Symbol)symbol35884, (Runtime_MethodClosure)methodclosure25256);


// SmallDictionary>>associationAt:
//associationAt: key 
// 	^ self associationAt: key ifAbsent: [self errorKeyNotFound]
localvariable26511 = (Object)new_AST_Variable_named(L"key");
array21265 = (Object)new_Type_Array_with(1, (Object)localvariable26511);
symbol35913 = (Object)new_Type_Symbol_cached(L"associationAt:ifAbsent:");
// errorKeyNotFound
send183059 = (Object)new_AST_Send((Object)Self, (Object)symbol35898, 0);
string27776 = (Object)new_Type_String(L"associationAt:");
string27777 = (Object)new_Type_String(L"associationAt: key \n\t^ self associationAt: key ifAbsent: [self errorKeyNotFound]");
smallint20682 = (Object)new_Type_SmallInt(-1);
smallint20683 = (Object)new_Type_SmallInt(-1);
info3698 = (Object)new_AST_Info((Type_String)string27777,(Type_String)string27776, (Type_SmallInt)smallint20682, (Type_SmallInt)smallint20683);
((AST_Send)send183059)->info = (AST_Info)info3698;
block12697 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183059);
// associationAt:ifAbsent:
send183060 = (Object)new_AST_Send((Object)Self, (Object)symbol35913, 2, (Object)localvariable26511, (Object)block12697);
((AST_Send)send183060)->info = (AST_Info)info3698;
method25259 = (Object)new_AST_Method_with((Type_Array)array21265, (Type_Array)empty_Type_Array, 1, send183060);
((AST_Method)method25259)->info = (AST_Info)info3698;
symbol35929 = (Object)new_Type_Symbol_cached(L"associationAt:");
methodclosure25257 = (Object)new_Runtime_MethodClosure(method25259);
store_method((Type_Class)class4082, (Type_Symbol)symbol35929, (Runtime_MethodClosure)methodclosure25257);


// SmallDictionary>>includes:
//includes: aValue
// 	self do: [:each | aValue = each ifTrue: [^true]].
// 	^false
localvariable26512 = (Object)new_AST_Variable_named(L"aValue");
array21266 = (Object)new_Type_Array_with(1, (Object)localvariable26512);
variable1573 = (Object)new_AST_Variable_named(L"return");
array21267 = (Object)new_Type_Array_with(1, (Object)variable1573);
localvariable26513 = (Object)new_AST_Variable_named(L"each");
array21268 = (Object)new_Type_Array_with(1, (Object)localvariable26513);
// =
send183061 = (Object)new_AST_Send((Object)localvariable26512, (Object)SMB__equal, 1, (Object)localvariable26513);
string27778 = (Object)new_Type_String(L"includes:");
string27779 = (Object)new_Type_String(L"includes: aValue\n\tself do: [:each | aValue = each ifTrue: [^true]].\n\t^false");
smallint20684 = (Object)new_Type_SmallInt(-1);
smallint20685 = (Object)new_Type_SmallInt(-1);
info3699 = (Object)new_AST_Info((Type_String)string27779,(Type_String)string27778, (Type_SmallInt)smallint20684, (Type_SmallInt)smallint20685);
((AST_Send)send183061)->info = (AST_Info)info3699;
// escape:
send183062 = (Object)new_AST_Send((Object)variable1573, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send183062)->info = (AST_Info)info3699;
block12698 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183062);
// ifTrue:
send183063 = (Object)new_AST_Send((Object)send183061, (Object)SMB_ifTrue_, 1, (Object)block12698);
((AST_Send)send183063)->info = (AST_Info)info3699;
block12699 = (Object)new_AST_Block_with((Type_Array)array21268, (Type_Array)empty_Type_Array, 2, 1, send183063);
// do:
send183064 = (Object)new_AST_Send((Object)Self, (Object)symbol35642, 1, (Object)block12699);
((AST_Send)send183064)->info = (AST_Info)info3699;
block12700 = (Object)new_AST_Block_with((Type_Array)array21267, (Type_Array)empty_Type_Array, 1, 2, send183064, False_Const);
// on:
send183065 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12700);
method25260 = (Object)new_AST_Method_with((Type_Array)array21266, (Type_Array)empty_Type_Array, 1, send183065);
((AST_Method)method25260)->info = (AST_Info)info3699;
symbol35922 = (Object)new_Type_Symbol_cached(L"includes:");
methodclosure25258 = (Object)new_Runtime_MethodClosure(method25260);
store_method((Type_Class)class4082, (Type_Symbol)symbol35922, (Runtime_MethodClosure)methodclosure25258);


// SmallDictionary>>at:
//at: key 
// 	"Answer the value associated with the key."
// 
// 	^ self at: key ifAbsent: [self errorKeyNotFound]
localvariable26514 = (Object)new_AST_Variable_named(L"key");
array21269 = (Object)new_Type_Array_with(1, (Object)localvariable26514);
// errorKeyNotFound
send183066 = (Object)new_AST_Send((Object)Self, (Object)symbol35898, 0);
string27780 = (Object)new_Type_String(L"at:");
string27781 = (Object)new_Type_String(L"at: key \n\t\"Answer the value associated with the key.\"\n\n\t^ self at: key ifAbsent: [self errorKeyNotFound]");
smallint20686 = (Object)new_Type_SmallInt(-1);
smallint20687 = (Object)new_Type_SmallInt(-1);
info3700 = (Object)new_AST_Info((Type_String)string27781,(Type_String)string27780, (Type_SmallInt)smallint20686, (Type_SmallInt)smallint20687);
((AST_Send)send183066)->info = (AST_Info)info3700;
block12701 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183066);
// at:ifAbsent:
send183067 = (Object)new_AST_Send((Object)Self, (Object)symbol35914, 2, (Object)localvariable26514, (Object)block12701);
((AST_Send)send183067)->info = (AST_Info)info3700;
method25261 = (Object)new_AST_Method_with((Type_Array)array21269, (Type_Array)empty_Type_Array, 1, send183067);
((AST_Method)method25261)->info = (AST_Info)info3700;
methodclosure25259 = (Object)new_Runtime_MethodClosure(method25261);
store_method((Type_Class)class4082, (Type_Symbol)SMB_at_, (Runtime_MethodClosure)methodclosure25259);


// SmallDictionary>>includesAssociation:
//includesAssociation: anAssociation
//   ^ (self   
//       associationAt: anAssociation key
//       ifAbsent: [ ^ false ]) value = anAssociation value
// 
localvariable26515 = (Object)new_AST_Variable_named(L"anAssociation");
array21270 = (Object)new_Type_Array_with(1, (Object)localvariable26515);
// key
send183068 = (Object)new_AST_Send((Object)localvariable26515, (Object)symbol35933, 0);
string27782 = (Object)new_Type_String(L"includesAssociation:");
string27783 = (Object)new_Type_String(L"includesAssociation: anAssociation\n  ^ (self   \n      associationAt: anAssociation key\n      ifAbsent: [ ^ false ]) value = anAssociation value\n");
smallint20688 = (Object)new_Type_SmallInt(-1);
smallint20689 = (Object)new_Type_SmallInt(-1);
info3701 = (Object)new_AST_Info((Type_String)string27783,(Type_String)string27782, (Type_SmallInt)smallint20688, (Type_SmallInt)smallint20689);
((AST_Send)send183068)->info = (AST_Info)info3701;
variable1574 = (Object)new_AST_Variable_named(L"return");
// escape:
send183069 = (Object)new_AST_Send((Object)variable1574, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183069)->info = (AST_Info)info3701;
block12702 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183069);
// associationAt:ifAbsent:
send183070 = (Object)new_AST_Send((Object)Self, (Object)symbol35913, 2, (Object)send183068, (Object)block12702);
((AST_Send)send183070)->info = (AST_Info)info3701;
// value
send183071 = (Object)new_AST_Send((Object)send183070, (Object)symbol35946, 0);
((AST_Send)send183071)->info = (AST_Info)info3701;
// value
send183072 = (Object)new_AST_Send((Object)localvariable26515, (Object)symbol35946, 0);
((AST_Send)send183072)->info = (AST_Info)info3701;
// =
send183073 = (Object)new_AST_Send((Object)send183071, (Object)SMB__equal, 1, (Object)send183072);
((AST_Send)send183073)->info = (AST_Info)info3701;
method25262 = (Object)new_AST_Method_with((Type_Array)array21270, (Type_Array)empty_Type_Array, 1, send183073);
((AST_Method)method25262)->info = (AST_Info)info3701;
symbol35894 = (Object)new_Type_Symbol_cached(L"includesAssociation:");
methodclosure25260 = (Object)new_Runtime_MethodClosure(method25262);
store_method((Type_Class)class4082, (Type_Symbol)symbol35894, (Runtime_MethodClosure)methodclosure25260);


// SmallDictionary>>associations
//associations
// 	"Answer a Collection containing the receiver's associations."
// 	| out |
// 	out := (Array new: self size) writeStream.
// 	self associationsDo: [:value | out nextPut: value].
// 	^ out contents
localvariable26516 = (Object)new_AST_Variable_named(L"out");
array21271 = (Object)new_Type_Array_with(1, (Object)localvariable26516);
// size
send183074 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27784 = (Object)new_Type_String(L"associations");
string27785 = (Object)new_Type_String(L"associations\n\t\"Answer a Collection containing the receiver\'s associations.\"\n\t| out |\n\tout := (Array new: self size) writeStream.\n\tself associationsDo: [:value | out nextPut: value].\n\t^ out contents");
smallint20690 = (Object)new_Type_SmallInt(-1);
smallint20691 = (Object)new_Type_SmallInt(-1);
info3702 = (Object)new_AST_Info((Type_String)string27785,(Type_String)string27784, (Type_SmallInt)smallint20690, (Type_SmallInt)smallint20691);
((AST_Send)send183074)->info = (AST_Info)info3702;
// new:
send183075 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)send183074);
((AST_Send)send183075)->info = (AST_Info)info3702;
symbol35964 = (Object)new_Type_Symbol_cached(L"writeStream");
// writeStream
send183076 = (Object)new_AST_Send((Object)send183075, (Object)symbol35964, 0);
((AST_Send)send183076)->info = (AST_Info)info3702;
assign22448 = (Object)new_AST_Assign((Object)localvariable26516, (Object)send183076);
localvariable26517 = (Object)new_AST_Variable_named(L"value");
array21272 = (Object)new_Type_Array_with(1, (Object)localvariable26517);
symbol35965 = (Object)new_Type_Symbol_cached(L"nextPut:");
// nextPut:
send183077 = (Object)new_AST_Send((Object)localvariable26516, (Object)symbol35965, 1, (Object)localvariable26517);
((AST_Send)send183077)->info = (AST_Info)info3702;
block12703 = (Object)new_AST_Block_with((Type_Array)array21272, (Type_Array)empty_Type_Array, 1, 1, send183077);
// associationsDo:
send183078 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12703);
((AST_Send)send183078)->info = (AST_Info)info3702;
symbol35966 = (Object)new_Type_Symbol_cached(L"contents");
// contents
send183079 = (Object)new_AST_Send((Object)localvariable26516, (Object)symbol35966, 0);
((AST_Send)send183079)->info = (AST_Info)info3702;
method25263 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21271, 3, assign22448, send183078, send183079);
((AST_Method)method25263)->info = (AST_Info)info3702;
symbol35904 = (Object)new_Type_Symbol_cached(L"associations");
methodclosure25261 = (Object)new_Runtime_MethodClosure(method25263);
store_method((Type_Class)class4082, (Type_Symbol)symbol35904, (Runtime_MethodClosure)methodclosure25261);


// SmallDictionary>>storeOn:
//storeOn: aStream
// 	| noneYet |
// 	aStream nextPutAll: '(('.
// 	aStream nextPutAll: self class name.
// 	aStream nextPutAll: ' new)'.
// 	noneYet := true.
// 	self associationsDo: [ :each | 
// 			noneYet
// 				ifTrue: [ noneYet := false ]
// 				ifFalse: [ aStream nextPut: $; ].
// 			aStream nextPutAll: ' add: '.
// 			aStream store: each].
// 	noneYet ifFalse: [ aStream nextPutAll: '; yourself'].
// 	aStream nextPut: $)
localvariable26518 = (Object)new_AST_Variable_named(L"aStream");
array21273 = (Object)new_Type_Array_with(1, (Object)localvariable26518);
localvariable26519 = (Object)new_AST_Variable_named(L"noneYet");
array21274 = (Object)new_Type_Array_with(1, (Object)localvariable26519);
string27786 = (Object)new_Type_String(L"((");
constant35554 = (Object)new_AST_Constant((Object)string27786);
// nextPutAll:
send183080 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35953, 1, (Object)constant35554);
string27787 = (Object)new_Type_String(L"storeOn:");
string27788 = (Object)new_Type_String(L"storeOn: aStream\n\t| noneYet |\n\taStream nextPutAll: \'((\'.\n\taStream nextPutAll: self class name.\n\taStream nextPutAll: \' new)\'.\n\tnoneYet := true.\n\tself associationsDo: [ :each | \n\t\t\tnoneYet\n\t\t\t\tifTrue: [ noneYet := false ]\n\t\t\t\tifFalse: [ aStream nextPut: $; ].\n\t\t\taStream nextPutAll: \' add: \'.\n\t\t\taStream store: each].\n\tnoneYet ifFalse: [ aStream nextPutAll: \'; yourself\'].\n\taStream nextPut: $)");
smallint20692 = (Object)new_Type_SmallInt(-1);
smallint20693 = (Object)new_Type_SmallInt(-1);
info3703 = (Object)new_AST_Info((Type_String)string27788,(Type_String)string27787, (Type_SmallInt)smallint20692, (Type_SmallInt)smallint20693);
((AST_Send)send183080)->info = (AST_Info)info3703;
// class
send183081 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
((AST_Send)send183081)->info = (AST_Info)info3703;
// name
send183082 = (Object)new_AST_Send((Object)send183081, (Object)SMB_name, 0);
((AST_Send)send183082)->info = (AST_Info)info3703;
// nextPutAll:
send183083 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35953, 1, (Object)send183082);
((AST_Send)send183083)->info = (AST_Info)info3703;
string27789 = (Object)new_Type_String(L" new)");
constant35555 = (Object)new_AST_Constant((Object)string27789);
// nextPutAll:
send183084 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35953, 1, (Object)constant35555);
((AST_Send)send183084)->info = (AST_Info)info3703;
assign22449 = (Object)new_AST_Assign((Object)localvariable26519, (Object)True_Const);
localvariable26520 = (Object)new_AST_Variable_named(L"each");
array21275 = (Object)new_Type_Array_with(1, (Object)localvariable26520);
assign22450 = (Object)new_AST_Assign((Object)localvariable26519, (Object)False_Const);
block12704 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, assign22450);
character132 = (Object)new_Type_Character(L';');
constant35556 = (Object)new_AST_Constant((Object)character132);
// nextPut:
send183085 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35965, 1, (Object)constant35556);
((AST_Send)send183085)->info = (AST_Info)info3703;
block12705 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183085);
// ifTrue:ifFalse:
send183086 = (Object)new_AST_Send((Object)localvariable26519, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12704, (Object)block12705);
((AST_Send)send183086)->info = (AST_Info)info3703;
string27790 = (Object)new_Type_String(L" add: ");
constant35557 = (Object)new_AST_Constant((Object)string27790);
// nextPutAll:
send183087 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35953, 1, (Object)constant35557);
((AST_Send)send183087)->info = (AST_Info)info3703;
symbol35967 = (Object)new_Type_Symbol_cached(L"store:");
// store:
send183088 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35967, 1, (Object)localvariable26520);
((AST_Send)send183088)->info = (AST_Info)info3703;
block12706 = (Object)new_AST_Block_with((Type_Array)array21275, (Type_Array)empty_Type_Array, 1, 3, send183086, send183087, send183088);
// associationsDo:
send183089 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12706);
((AST_Send)send183089)->info = (AST_Info)info3703;
string27791 = (Object)new_Type_String(L"; yourself");
constant35558 = (Object)new_AST_Constant((Object)string27791);
// nextPutAll:
send183090 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35953, 1, (Object)constant35558);
((AST_Send)send183090)->info = (AST_Info)info3703;
block12707 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183090);
// ifFalse:
send183091 = (Object)new_AST_Send((Object)localvariable26519, (Object)SMB_ifFalse_, 1, (Object)block12707);
((AST_Send)send183091)->info = (AST_Info)info3703;
character133 = (Object)new_Type_Character(L')');
constant35559 = (Object)new_AST_Constant((Object)character133);
// nextPut:
send183092 = (Object)new_AST_Send((Object)localvariable26518, (Object)symbol35965, 1, (Object)constant35559);
((AST_Send)send183092)->info = (AST_Info)info3703;
method25264 = (Object)new_AST_Method_with((Type_Array)array21273, (Type_Array)array21274, 8, send183080, send183083, send183084, assign22449, send183089, send183091, send183092, Self);
((AST_Method)method25264)->info = (AST_Info)info3703;
symbol35916 = (Object)new_Type_Symbol_cached(L"storeOn:");
methodclosure25262 = (Object)new_Runtime_MethodClosure(method25264);
store_method((Type_Class)class4082, (Type_Symbol)symbol35916, (Runtime_MethodClosure)methodclosure25262);


// SmallDictionary>>printElementsOn:
//printElementsOn: aStream
// 	| noneYet |
// 	aStream nextPut: $(.
// 	noneYet := true.
// 	self associationsDo: [ :each | 
// 			noneYet
// 				ifTrue: [ noneYet := false ]
// 				ifFalse: [ aStream space ].
// 			aStream print: each].
// 	aStream nextPut: $)
localvariable26521 = (Object)new_AST_Variable_named(L"aStream");
array21276 = (Object)new_Type_Array_with(1, (Object)localvariable26521);
localvariable26522 = (Object)new_AST_Variable_named(L"noneYet");
array21277 = (Object)new_Type_Array_with(1, (Object)localvariable26522);
character134 = (Object)new_Type_Character(L'(');
constant35560 = (Object)new_AST_Constant((Object)character134);
// nextPut:
send183093 = (Object)new_AST_Send((Object)localvariable26521, (Object)symbol35965, 1, (Object)constant35560);
string27792 = (Object)new_Type_String(L"printElementsOn:");
string27793 = (Object)new_Type_String(L"printElementsOn: aStream\n\t| noneYet |\n\taStream nextPut: $(.\n\tnoneYet := true.\n\tself associationsDo: [ :each | \n\t\t\tnoneYet\n\t\t\t\tifTrue: [ noneYet := false ]\n\t\t\t\tifFalse: [ aStream space ].\n\t\t\taStream print: each].\n\taStream nextPut: $)");
smallint20694 = (Object)new_Type_SmallInt(-1);
smallint20695 = (Object)new_Type_SmallInt(-1);
info3704 = (Object)new_AST_Info((Type_String)string27793,(Type_String)string27792, (Type_SmallInt)smallint20694, (Type_SmallInt)smallint20695);
((AST_Send)send183093)->info = (AST_Info)info3704;
assign22451 = (Object)new_AST_Assign((Object)localvariable26522, (Object)True_Const);
localvariable26523 = (Object)new_AST_Variable_named(L"each");
array21278 = (Object)new_Type_Array_with(1, (Object)localvariable26523);
assign22452 = (Object)new_AST_Assign((Object)localvariable26522, (Object)False_Const);
block12708 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, assign22452);
// space
send183094 = (Object)new_AST_Send((Object)localvariable26521, (Object)symbol35654, 0);
((AST_Send)send183094)->info = (AST_Info)info3704;
block12709 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183094);
// ifTrue:ifFalse:
send183095 = (Object)new_AST_Send((Object)localvariable26522, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12708, (Object)block12709);
((AST_Send)send183095)->info = (AST_Info)info3704;
symbol35968 = (Object)new_Type_Symbol_cached(L"print:");
// print:
send183096 = (Object)new_AST_Send((Object)localvariable26521, (Object)symbol35968, 1, (Object)localvariable26523);
((AST_Send)send183096)->info = (AST_Info)info3704;
block12710 = (Object)new_AST_Block_with((Type_Array)array21278, (Type_Array)empty_Type_Array, 1, 2, send183095, send183096);
// associationsDo:
send183097 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12710);
((AST_Send)send183097)->info = (AST_Info)info3704;
character135 = (Object)new_Type_Character(L')');
constant35561 = (Object)new_AST_Constant((Object)character135);
// nextPut:
send183098 = (Object)new_AST_Send((Object)localvariable26521, (Object)symbol35965, 1, (Object)constant35561);
((AST_Send)send183098)->info = (AST_Info)info3704;
method25265 = (Object)new_AST_Method_with((Type_Array)array21276, (Type_Array)array21277, 5, send183093, assign22451, send183097, send183098, Self);
((AST_Method)method25265)->info = (AST_Info)info3704;
symbol35888 = (Object)new_Type_Symbol_cached(L"printElementsOn:");
methodclosure25263 = (Object)new_Runtime_MethodClosure(method25265);
store_method((Type_Class)class4082, (Type_Symbol)symbol35888, (Runtime_MethodClosure)methodclosure25263);


// SmallDictionary>>do:
//do: aBlock
// 
// 	^ self valuesDo: aBlock.
localvariable26524 = (Object)new_AST_Variable_named(L"aBlock");
array21279 = (Object)new_Type_Array_with(1, (Object)localvariable26524);
symbol35886 = (Object)new_Type_Symbol_cached(L"valuesDo:");
// valuesDo:
send183099 = (Object)new_AST_Send((Object)Self, (Object)symbol35886, 1, (Object)localvariable26524);
string27794 = (Object)new_Type_String(L"do:");
string27795 = (Object)new_Type_String(L"do: aBlock\n\n\t^ self valuesDo: aBlock.");
smallint20696 = (Object)new_Type_SmallInt(-1);
smallint20697 = (Object)new_Type_SmallInt(-1);
info3705 = (Object)new_AST_Info((Type_String)string27795,(Type_String)string27794, (Type_SmallInt)smallint20696, (Type_SmallInt)smallint20697);
((AST_Send)send183099)->info = (AST_Info)info3705;
method25266 = (Object)new_AST_Method_with((Type_Array)array21279, (Type_Array)empty_Type_Array, 1, send183099);
((AST_Method)method25266)->info = (AST_Info)info3705;
methodclosure25264 = (Object)new_Runtime_MethodClosure(method25266);
store_method((Type_Class)class4082, (Type_Symbol)symbol35642, (Runtime_MethodClosure)methodclosure25264);


// SmallDictionary>>keyAtIdentityValue:
//keyAtIdentityValue: value 
// 	"Answer the key that is the external name for the argument, value. If 
// 	there is none, answer nil.
// 	Note: There can be multiple keys with the same value. Only one is returned."
// 
// 	^self keyAtIdentityValue: value ifAbsent: [self errorValueNotFound]
localvariable26525 = (Object)new_AST_Variable_named(L"value");
array21280 = (Object)new_Type_Array_with(1, (Object)localvariable26525);
symbol35906 = (Object)new_Type_Symbol_cached(L"keyAtIdentityValue:ifAbsent:");
// errorValueNotFound
send183100 = (Object)new_AST_Send((Object)Self, (Object)symbol35907, 0);
string27796 = (Object)new_Type_String(L"keyAtIdentityValue:");
string27797 = (Object)new_Type_String(L"keyAtIdentityValue: value \n\t\"Answer the key that is the external name for the argument, value. If \n\tthere is none, answer nil.\n\tNote: There can be multiple keys with the same value. Only one is returned.\"\n\n\t^self keyAtIdentityValue: value ifAbsent: [self errorValueNotFound]");
smallint20698 = (Object)new_Type_SmallInt(-1);
smallint20699 = (Object)new_Type_SmallInt(-1);
info3706 = (Object)new_AST_Info((Type_String)string27797,(Type_String)string27796, (Type_SmallInt)smallint20698, (Type_SmallInt)smallint20699);
((AST_Send)send183100)->info = (AST_Info)info3706;
block12711 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183100);
// keyAtIdentityValue:ifAbsent:
send183101 = (Object)new_AST_Send((Object)Self, (Object)symbol35906, 2, (Object)localvariable26525, (Object)block12711);
((AST_Send)send183101)->info = (AST_Info)info3706;
method25267 = (Object)new_AST_Method_with((Type_Array)array21280, (Type_Array)empty_Type_Array, 1, send183101);
((AST_Method)method25267)->info = (AST_Info)info3706;
symbol35881 = (Object)new_Type_Symbol_cached(L"keyAtIdentityValue:");
methodclosure25265 = (Object)new_Runtime_MethodClosure(method25267);
store_method((Type_Class)class4082, (Type_Symbol)symbol35881, (Runtime_MethodClosure)methodclosure25265);


// SmallDictionary>>findIndexForKey:
//findIndexForKey: aKey 
// 	^ keys indexOf: aKey.
localvariable26526 = (Object)new_AST_Variable_named(L"aKey");
array21281 = (Object)new_Type_Array_with(1, (Object)localvariable26526);
symbol35969 = (Object)new_Type_Symbol_cached(L"indexOf:");
// indexOf:
send183102 = (Object)new_AST_Send((Object)instancevariable6050, (Object)symbol35969, 1, (Object)localvariable26526);
string27798 = (Object)new_Type_String(L"findIndexForKey:");
string27799 = (Object)new_Type_String(L"findIndexForKey: aKey \n\t^ keys indexOf: aKey.");
smallint20700 = (Object)new_Type_SmallInt(-1);
smallint20701 = (Object)new_Type_SmallInt(-1);
info3707 = (Object)new_AST_Info((Type_String)string27799,(Type_String)string27798, (Type_SmallInt)smallint20700, (Type_SmallInt)smallint20701);
((AST_Send)send183102)->info = (AST_Info)info3707;
method25268 = (Object)new_AST_Method_with((Type_Array)array21281, (Type_Array)empty_Type_Array, 1, send183102);
((AST_Method)method25268)->info = (AST_Info)info3707;
methodclosure25266 = (Object)new_Runtime_MethodClosure(method25268);
store_method((Type_Class)class4082, (Type_Symbol)symbol35926, (Runtime_MethodClosure)methodclosure25266);


// SmallDictionary>>errorKeyNotFound
//errorKeyNotFound
// 
// 	self error: 'key not found'
string27800 = (Object)new_Type_String(L"key not found");
constant35562 = (Object)new_AST_Constant((Object)string27800);
// error:
send183103 = (Object)new_AST_Send((Object)Self, (Object)symbol35949, 1, (Object)constant35562);
string27801 = (Object)new_Type_String(L"errorKeyNotFound");
string27802 = (Object)new_Type_String(L"errorKeyNotFound\n\n\tself error: \'key not found\'");
smallint20702 = (Object)new_Type_SmallInt(-1);
smallint20703 = (Object)new_Type_SmallInt(-1);
info3708 = (Object)new_AST_Info((Type_String)string27802,(Type_String)string27801, (Type_SmallInt)smallint20702, (Type_SmallInt)smallint20703);
((AST_Send)send183103)->info = (AST_Info)info3708;
method25269 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send183103, Self);
((AST_Method)method25269)->info = (AST_Info)info3708;
methodclosure25267 = (Object)new_Runtime_MethodClosure(method25269);
store_method((Type_Class)class4082, (Type_Symbol)symbol35898, (Runtime_MethodClosure)methodclosure25267);


// SmallDictionary>>privateAt:put:
//privateAt: key put: value 
// 	size == keys size ifTrue: [self growKeysAndValues].
// 	size := size + 1.
// 	keys at: size put: key.
// 	^values at: size put: value
localvariable26527 = (Object)new_AST_Variable_named(L"key");
localvariable26528 = (Object)new_AST_Variable_named(L"value");
array21282 = (Object)new_Type_Array_with(2, (Object)localvariable26527, (Object)localvariable26528);
// size
send183104 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_size, 0);
string27803 = (Object)new_Type_String(L"privateAt:put:");
string27804 = (Object)new_Type_String(L"privateAt: key put: value \n\tsize == keys size ifTrue: [self growKeysAndValues].\n\tsize := size + 1.\n\tkeys at: size put: key.\n\t^values at: size put: value");
smallint20704 = (Object)new_Type_SmallInt(-1);
smallint20705 = (Object)new_Type_SmallInt(-1);
info3709 = (Object)new_AST_Info((Type_String)string27804,(Type_String)string27803, (Type_SmallInt)smallint20704, (Type_SmallInt)smallint20705);
((AST_Send)send183104)->info = (AST_Info)info3709;
// ==
send183105 = (Object)new_AST_Send((Object)instancevariable6052, (Object)SMB__pequal, 1, (Object)send183104);
((AST_Send)send183105)->info = (AST_Info)info3709;
// growKeysAndValues
send183106 = (Object)new_AST_Send((Object)Self, (Object)symbol35931, 0);
((AST_Send)send183106)->info = (AST_Info)info3709;
block12712 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183106);
// ifTrue:
send183107 = (Object)new_AST_Send((Object)send183105, (Object)SMB_ifTrue_, 1, (Object)block12712);
((AST_Send)send183107)->info = (AST_Info)info3709;
smallint20706 = (Object)new_Type_SmallInt(1);
constant35563 = (Object)new_AST_Constant((Object)smallint20706);
// +
send183108 = (Object)new_AST_Send((Object)instancevariable6052, (Object)SMB__plus, 1, (Object)constant35563);
((AST_Send)send183108)->info = (AST_Info)info3709;
assign22453 = (Object)new_AST_Assign((Object)instancevariable6052, (Object)send183108);
// at:put:
send183109 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_put_, 2, (Object)instancevariable6052, (Object)localvariable26527);
((AST_Send)send183109)->info = (AST_Info)info3709;
// at:put:
send183110 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_put_, 2, (Object)instancevariable6052, (Object)localvariable26528);
((AST_Send)send183110)->info = (AST_Info)info3709;
method25270 = (Object)new_AST_Method_with((Type_Array)array21282, (Type_Array)empty_Type_Array, 4, send183107, assign22453, send183109, send183110);
((AST_Method)method25270)->info = (AST_Info)info3709;
symbol35908 = (Object)new_Type_Symbol_cached(L"privateAt:put:");
methodclosure25268 = (Object)new_Runtime_MethodClosure(method25270);
store_method((Type_Class)class4082, (Type_Symbol)symbol35908, (Runtime_MethodClosure)methodclosure25268);


// SmallDictionary>>values
//values
// 	"Answer a Collection containing the receiver's values."
// 	"^ values copyFrom: 1 to: size."
// 	
// | out |
// 	out := (Array new: self size) writeStream.
// 	self valuesDo: [:value | out nextPut: value].
// 	^ out contents
localvariable26529 = (Object)new_AST_Variable_named(L"out");
array21283 = (Object)new_Type_Array_with(1, (Object)localvariable26529);
// size
send183111 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27805 = (Object)new_Type_String(L"values");
string27806 = (Object)new_Type_String(L"values\n\t\"Answer a Collection containing the receiver\'s values.\"\n\t\"^ values copyFrom: 1 to: size.\"\n\t\n| out |\n\tout := (Array new: self size) writeStream.\n\tself valuesDo: [:value | out nextPut: value].\n\t^ out contents");
smallint20707 = (Object)new_Type_SmallInt(-1);
smallint20708 = (Object)new_Type_SmallInt(-1);
info3710 = (Object)new_AST_Info((Type_String)string27806,(Type_String)string27805, (Type_SmallInt)smallint20707, (Type_SmallInt)smallint20708);
((AST_Send)send183111)->info = (AST_Info)info3710;
// new:
send183112 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)send183111);
((AST_Send)send183112)->info = (AST_Info)info3710;
// writeStream
send183113 = (Object)new_AST_Send((Object)send183112, (Object)symbol35964, 0);
((AST_Send)send183113)->info = (AST_Info)info3710;
assign22454 = (Object)new_AST_Assign((Object)localvariable26529, (Object)send183113);
localvariable26530 = (Object)new_AST_Variable_named(L"value");
array21284 = (Object)new_Type_Array_with(1, (Object)localvariable26530);
// nextPut:
send183114 = (Object)new_AST_Send((Object)localvariable26529, (Object)symbol35965, 1, (Object)localvariable26530);
((AST_Send)send183114)->info = (AST_Info)info3710;
block12713 = (Object)new_AST_Block_with((Type_Array)array21284, (Type_Array)empty_Type_Array, 1, 1, send183114);
// valuesDo:
send183115 = (Object)new_AST_Send((Object)Self, (Object)symbol35886, 1, (Object)block12713);
((AST_Send)send183115)->info = (AST_Info)info3710;
// contents
send183116 = (Object)new_AST_Send((Object)localvariable26529, (Object)symbol35966, 0);
((AST_Send)send183116)->info = (AST_Info)info3710;
method25271 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21283, 3, assign22454, send183115, send183116);
((AST_Method)method25271)->info = (AST_Info)info3710;
symbol35891 = (Object)new_Type_Symbol_cached(L"values");
methodclosure25269 = (Object)new_Runtime_MethodClosure(method25271);
store_method((Type_Class)class4082, (Type_Symbol)symbol35891, (Runtime_MethodClosure)methodclosure25269);


// SmallDictionary>>associationAt:ifAbsent:
//associationAt: key ifAbsent: aBlock 
// 	"Answer the association with the given key.
// 	If key is not found, return the result of evaluating aBlock."
// 
// 	| index value |
// 	index := keys indexOf: key.
// 	index == 0 ifTrue: [ ^ aBlock value].
// 	
// 	value := values at: index.
// 	^ key->value.
localvariable26531 = (Object)new_AST_Variable_named(L"key");
localvariable26532 = (Object)new_AST_Variable_named(L"aBlock");
array21285 = (Object)new_Type_Array_with(2, (Object)localvariable26531, (Object)localvariable26532);
localvariable26533 = (Object)new_AST_Variable_named(L"index");
localvariable26534 = (Object)new_AST_Variable_named(L"value");
array21286 = (Object)new_Type_Array_with(2, (Object)localvariable26533, (Object)localvariable26534);
variable1575 = (Object)new_AST_Variable_named(L"return");
array21287 = (Object)new_Type_Array_with(1, (Object)variable1575);
// indexOf:
send183117 = (Object)new_AST_Send((Object)instancevariable6050, (Object)symbol35969, 1, (Object)localvariable26531);
string27807 = (Object)new_Type_String(L"associationAt:ifAbsent:");
string27808 = (Object)new_Type_String(L"associationAt: key ifAbsent: aBlock \n\t\"Answer the association with the given key.\n\tIf key is not found, return the result of evaluating aBlock.\"\n\n\t| index value |\n\tindex := keys indexOf: key.\n\tindex == 0 ifTrue: [ ^ aBlock value].\n\t\n\tvalue := values at: index.\n\t^ key->value.");
smallint20709 = (Object)new_Type_SmallInt(-1);
smallint20710 = (Object)new_Type_SmallInt(-1);
info3711 = (Object)new_AST_Info((Type_String)string27808,(Type_String)string27807, (Type_SmallInt)smallint20709, (Type_SmallInt)smallint20710);
((AST_Send)send183117)->info = (AST_Info)info3711;
assign22455 = (Object)new_AST_Assign((Object)localvariable26533, (Object)send183117);
smallint20711 = (Object)new_Type_SmallInt(0);
constant35564 = (Object)new_AST_Constant((Object)smallint20711);
// ==
send183118 = (Object)new_AST_Send((Object)localvariable26533, (Object)SMB__pequal, 1, (Object)constant35564);
((AST_Send)send183118)->info = (AST_Info)info3711;
// value
send183119 = (Object)new_AST_Send((Object)localvariable26532, (Object)symbol35946, 0);
((AST_Send)send183119)->info = (AST_Info)info3711;
// escape:
send183120 = (Object)new_AST_Send((Object)variable1575, (Object)SMB_escape_, 1, (Object)send183119);
((AST_Send)send183120)->info = (AST_Info)info3711;
block12714 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183120);
// ifTrue:
send183121 = (Object)new_AST_Send((Object)send183118, (Object)SMB_ifTrue_, 1, (Object)block12714);
((AST_Send)send183121)->info = (AST_Info)info3711;
// at:
send183122 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26533);
((AST_Send)send183122)->info = (AST_Info)info3711;
assign22456 = (Object)new_AST_Assign((Object)localvariable26534, (Object)send183122);
// ->
send183123 = (Object)new_AST_Send((Object)localvariable26531, (Object)symbol35963, 1, (Object)localvariable26534);
((AST_Send)send183123)->info = (AST_Info)info3711;
block12715 = (Object)new_AST_Block_with((Type_Array)array21287, (Type_Array)empty_Type_Array, 1, 4, assign22455, send183121, assign22456, send183123);
// on:
send183124 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12715);
method25272 = (Object)new_AST_Method_with((Type_Array)array21285, (Type_Array)array21286, 1, send183124);
((AST_Method)method25272)->info = (AST_Info)info3711;
methodclosure25270 = (Object)new_Runtime_MethodClosure(method25272);
store_method((Type_Class)class4082, (Type_Symbol)symbol35913, (Runtime_MethodClosure)methodclosure25270);


// SmallDictionary>>=
//= aDictionary
// 	"Two dictionaries are equal if
// 	 (a) they are the same 'kind' of thing.
// 	 (b) they have the same set of keys.
// 	 (c) for each (common) key, they have the same value"
// 
// 	self == aDictionary ifTrue: [ ^ true ].
// 	(aDictionary isDictionary) ifFalse: [^false].
// 	self size = aDictionary size ifFalse: [^false].
// 	self associationsDo: [:assoc|
// 		(aDictionary at: assoc key ifAbsent: [^false]) = assoc value
// 			ifFalse: [^false]].
// 	^true
// 
localvariable26535 = (Object)new_AST_Variable_named(L"aDictionary");
array21288 = (Object)new_Type_Array_with(1, (Object)localvariable26535);
variable1576 = (Object)new_AST_Variable_named(L"return");
array21289 = (Object)new_Type_Array_with(1, (Object)variable1576);
// ==
send183125 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable26535);
string27809 = (Object)new_Type_String(L"=");
string27810 = (Object)new_Type_String(L"= aDictionary\n\t\"Two dictionaries are equal if\n\t (a) they are the same \'kind\' of thing.\n\t (b) they have the same set of keys.\n\t (c) for each (common) key, they have the same value\"\n\n\tself == aDictionary ifTrue: [ ^ true ].\n\t(aDictionary isDictionary) ifFalse: [^false].\n\tself size = aDictionary size ifFalse: [^false].\n\tself associationsDo: [:assoc|\n\t\t(aDictionary at: assoc key ifAbsent: [^false]) = assoc value\n\t\t\tifFalse: [^false]].\n\t^true\n");
smallint20712 = (Object)new_Type_SmallInt(-1);
smallint20713 = (Object)new_Type_SmallInt(-1);
info3712 = (Object)new_AST_Info((Type_String)string27810,(Type_String)string27809, (Type_SmallInt)smallint20712, (Type_SmallInt)smallint20713);
((AST_Send)send183125)->info = (AST_Info)info3712;
// escape:
send183126 = (Object)new_AST_Send((Object)variable1576, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send183126)->info = (AST_Info)info3712;
block12716 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183126);
// ifTrue:
send183127 = (Object)new_AST_Send((Object)send183125, (Object)SMB_ifTrue_, 1, (Object)block12716);
((AST_Send)send183127)->info = (AST_Info)info3712;
symbol35927 = (Object)new_Type_Symbol_cached(L"isDictionary");
// isDictionary
send183128 = (Object)new_AST_Send((Object)localvariable26535, (Object)symbol35927, 0);
((AST_Send)send183128)->info = (AST_Info)info3712;
// escape:
send183129 = (Object)new_AST_Send((Object)variable1576, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183129)->info = (AST_Info)info3712;
block12717 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183129);
// ifFalse:
send183130 = (Object)new_AST_Send((Object)send183128, (Object)SMB_ifFalse_, 1, (Object)block12717);
((AST_Send)send183130)->info = (AST_Info)info3712;
// size
send183131 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
((AST_Send)send183131)->info = (AST_Info)info3712;
// size
send183132 = (Object)new_AST_Send((Object)localvariable26535, (Object)SMB_size, 0);
((AST_Send)send183132)->info = (AST_Info)info3712;
// =
send183133 = (Object)new_AST_Send((Object)send183131, (Object)SMB__equal, 1, (Object)send183132);
((AST_Send)send183133)->info = (AST_Info)info3712;
// escape:
send183134 = (Object)new_AST_Send((Object)variable1576, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183134)->info = (AST_Info)info3712;
block12718 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183134);
// ifFalse:
send183135 = (Object)new_AST_Send((Object)send183133, (Object)SMB_ifFalse_, 1, (Object)block12718);
((AST_Send)send183135)->info = (AST_Info)info3712;
localvariable26536 = (Object)new_AST_Variable_named(L"assoc");
array21290 = (Object)new_Type_Array_with(1, (Object)localvariable26536);
// key
send183136 = (Object)new_AST_Send((Object)localvariable26536, (Object)symbol35933, 0);
((AST_Send)send183136)->info = (AST_Info)info3712;
// escape:
send183137 = (Object)new_AST_Send((Object)variable1576, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183137)->info = (AST_Info)info3712;
block12719 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183137);
// at:ifAbsent:
send183138 = (Object)new_AST_Send((Object)localvariable26535, (Object)symbol35914, 2, (Object)send183136, (Object)block12719);
((AST_Send)send183138)->info = (AST_Info)info3712;
// value
send183139 = (Object)new_AST_Send((Object)localvariable26536, (Object)symbol35946, 0);
((AST_Send)send183139)->info = (AST_Info)info3712;
// =
send183140 = (Object)new_AST_Send((Object)send183138, (Object)SMB__equal, 1, (Object)send183139);
((AST_Send)send183140)->info = (AST_Info)info3712;
// escape:
send183141 = (Object)new_AST_Send((Object)variable1576, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183141)->info = (AST_Info)info3712;
block12720 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183141);
// ifFalse:
send183142 = (Object)new_AST_Send((Object)send183140, (Object)SMB_ifFalse_, 1, (Object)block12720);
((AST_Send)send183142)->info = (AST_Info)info3712;
block12721 = (Object)new_AST_Block_with((Type_Array)array21290, (Type_Array)empty_Type_Array, 2, 1, send183142);
// associationsDo:
send183143 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12721);
((AST_Send)send183143)->info = (AST_Info)info3712;
block12722 = (Object)new_AST_Block_with((Type_Array)array21289, (Type_Array)empty_Type_Array, 1, 5, send183127, send183130, send183135, send183143, True_Const);
// on:
send183144 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12722);
method25273 = (Object)new_AST_Method_with((Type_Array)array21288, (Type_Array)empty_Type_Array, 1, send183144);
((AST_Method)method25273)->info = (AST_Info)info3712;
methodclosure25271 = (Object)new_Runtime_MethodClosure(method25273);
store_method((Type_Class)class4082, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure25271);


// SmallDictionary>>at:ifPresent:
//at: key ifPresent: aBlock
// 	"Lookup the given key in the receiver. If it is present, answer the value of evaluating the given block with the value associated with the key. Otherwise, answer nil."
// 
// 	| v |
// 	v := self at: key ifAbsent: [^ nil].
// 	^ aBlock value: v
// 
localvariable26537 = (Object)new_AST_Variable_named(L"key");
localvariable26538 = (Object)new_AST_Variable_named(L"aBlock");
array21291 = (Object)new_Type_Array_with(2, (Object)localvariable26537, (Object)localvariable26538);
localvariable26539 = (Object)new_AST_Variable_named(L"v");
array21292 = (Object)new_Type_Array_with(1, (Object)localvariable26539);
// escape:
send183145 = (Object)new_AST_Send((Object)variable1572, (Object)SMB_escape_, 1, (Object)Nil_Const);
string27811 = (Object)new_Type_String(L"at:ifPresent:");
string27812 = (Object)new_Type_String(L"at: key ifPresent: aBlock\n\t\"Lookup the given key in the receiver. If it is present, answer the value of evaluating the given block with the value associated with the key. Otherwise, answer nil.\"\n\n\t| v |\n\tv := self at: key ifAbsent: [^ nil].\n\t^ aBlock value: v\n");
smallint20714 = (Object)new_Type_SmallInt(-1);
smallint20715 = (Object)new_Type_SmallInt(-1);
info3713 = (Object)new_AST_Info((Type_String)string27812,(Type_String)string27811, (Type_SmallInt)smallint20714, (Type_SmallInt)smallint20715);
((AST_Send)send183145)->info = (AST_Info)info3713;
block12723 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183145);
// at:ifAbsent:
send183146 = (Object)new_AST_Send((Object)Self, (Object)symbol35914, 2, (Object)localvariable26537, (Object)block12723);
((AST_Send)send183146)->info = (AST_Info)info3713;
assign22457 = (Object)new_AST_Assign((Object)localvariable26539, (Object)send183146);
// value:
send183147 = (Object)new_AST_Send((Object)localvariable26538, (Object)SMB_value_, 1, (Object)localvariable26539);
((AST_Send)send183147)->info = (AST_Info)info3713;
method25274 = (Object)new_AST_Method_with((Type_Array)array21291, (Type_Array)array21292, 2, assign22457, send183147);
((AST_Method)method25274)->info = (AST_Info)info3713;
symbol35885 = (Object)new_Type_Symbol_cached(L"at:ifPresent:");
methodclosure25272 = (Object)new_Runtime_MethodClosure(method25274);
store_method((Type_Class)class4082, (Type_Symbol)symbol35885, (Runtime_MethodClosure)methodclosure25272);


// SmallDictionary>>select:
//select: aBlock 
// 	"Evaluate aBlock with each of my values as the argument. Collect into a
// 	new dictionary, only those associations for which aBlock evaluates to
// 	true."
// 
// 	| newCollection |
// 	newCollection := self species new.
// 	self associationsDo: 
// 		[:each | 
// 		(aBlock value: each value) ifTrue: [newCollection add: each]].
// 	^newCollection
localvariable26540 = (Object)new_AST_Variable_named(L"aBlock");
array21293 = (Object)new_Type_Array_with(1, (Object)localvariable26540);
localvariable26541 = (Object)new_AST_Variable_named(L"newCollection");
array21294 = (Object)new_Type_Array_with(1, (Object)localvariable26541);
// species
send183148 = (Object)new_AST_Send((Object)Self, (Object)symbol35961, 0);
string27813 = (Object)new_Type_String(L"select:");
string27814 = (Object)new_Type_String(L"select: aBlock \n\t\"Evaluate aBlock with each of my values as the argument. Collect into a\n\tnew dictionary, only those associations for which aBlock evaluates to\n\ttrue.\"\n\n\t| newCollection |\n\tnewCollection := self species new.\n\tself associationsDo: \n\t\t[:each | \n\t\t(aBlock value: each value) ifTrue: [newCollection add: each]].\n\t^newCollection");
smallint20716 = (Object)new_Type_SmallInt(-1);
smallint20717 = (Object)new_Type_SmallInt(-1);
info3714 = (Object)new_AST_Info((Type_String)string27814,(Type_String)string27813, (Type_SmallInt)smallint20716, (Type_SmallInt)smallint20717);
((AST_Send)send183148)->info = (AST_Info)info3714;
// new
send183149 = (Object)new_AST_Send((Object)send183148, (Object)symbol35612, 0);
((AST_Send)send183149)->info = (AST_Info)info3714;
assign22458 = (Object)new_AST_Assign((Object)localvariable26541, (Object)send183149);
localvariable26542 = (Object)new_AST_Variable_named(L"each");
array21295 = (Object)new_Type_Array_with(1, (Object)localvariable26542);
// value
send183150 = (Object)new_AST_Send((Object)localvariable26542, (Object)symbol35946, 0);
((AST_Send)send183150)->info = (AST_Info)info3714;
// value:
send183151 = (Object)new_AST_Send((Object)localvariable26540, (Object)SMB_value_, 1, (Object)send183150);
((AST_Send)send183151)->info = (AST_Info)info3714;
// add:
send183152 = (Object)new_AST_Send((Object)localvariable26541, (Object)symbol35696, 1, (Object)localvariable26542);
((AST_Send)send183152)->info = (AST_Info)info3714;
block12724 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183152);
// ifTrue:
send183153 = (Object)new_AST_Send((Object)send183151, (Object)SMB_ifTrue_, 1, (Object)block12724);
((AST_Send)send183153)->info = (AST_Info)info3714;
block12725 = (Object)new_AST_Block_with((Type_Array)array21295, (Type_Array)empty_Type_Array, 1, 1, send183153);
// associationsDo:
send183154 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12725);
((AST_Send)send183154)->info = (AST_Info)info3714;
method25275 = (Object)new_AST_Method_with((Type_Array)array21293, (Type_Array)array21294, 3, assign22458, send183154, localvariable26541);
((AST_Method)method25275)->info = (AST_Info)info3714;
symbol35923 = (Object)new_Type_Symbol_cached(L"select:");
methodclosure25273 = (Object)new_Runtime_MethodClosure(method25275);
store_method((Type_Class)class4082, (Type_Symbol)symbol35923, (Runtime_MethodClosure)methodclosure25273);


// SmallDictionary>>capacity
//capacity
// 	^keys size
// size
send183155 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_size, 0);
string27815 = (Object)new_Type_String(L"capacity");
string27816 = (Object)new_Type_String(L"capacity\n\t^keys size");
smallint20718 = (Object)new_Type_SmallInt(-1);
smallint20719 = (Object)new_Type_SmallInt(-1);
info3715 = (Object)new_AST_Info((Type_String)string27816,(Type_String)string27815, (Type_SmallInt)smallint20718, (Type_SmallInt)smallint20719);
((AST_Send)send183155)->info = (AST_Info)info3715;
method25276 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183155);
((AST_Method)method25276)->info = (AST_Info)info3715;
symbol35895 = (Object)new_Type_Symbol_cached(L"capacity");
methodclosure25274 = (Object)new_Runtime_MethodClosure(method25276);
store_method((Type_Class)class4082, (Type_Symbol)symbol35895, (Runtime_MethodClosure)methodclosure25274);


// SmallDictionary>>add:
//add: anAssociation 
// 	self at: anAssociation key put: anAssociation value.
// 	^anAssociation
localvariable26543 = (Object)new_AST_Variable_named(L"anAssociation");
array21296 = (Object)new_Type_Array_with(1, (Object)localvariable26543);
// key
send183156 = (Object)new_AST_Send((Object)localvariable26543, (Object)symbol35933, 0);
string27817 = (Object)new_Type_String(L"add:");
string27818 = (Object)new_Type_String(L"add: anAssociation \n\tself at: anAssociation key put: anAssociation value.\n\t^anAssociation");
smallint20720 = (Object)new_Type_SmallInt(-1);
smallint20721 = (Object)new_Type_SmallInt(-1);
info3716 = (Object)new_AST_Info((Type_String)string27818,(Type_String)string27817, (Type_SmallInt)smallint20720, (Type_SmallInt)smallint20721);
((AST_Send)send183156)->info = (AST_Info)info3716;
// value
send183157 = (Object)new_AST_Send((Object)localvariable26543, (Object)symbol35946, 0);
((AST_Send)send183157)->info = (AST_Info)info3716;
// at:put:
send183158 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send183156, (Object)send183157);
((AST_Send)send183158)->info = (AST_Info)info3716;
method25277 = (Object)new_AST_Method_with((Type_Array)array21296, (Type_Array)empty_Type_Array, 2, send183158, localvariable26543);
((AST_Method)method25277)->info = (AST_Info)info3716;
methodclosure25275 = (Object)new_Runtime_MethodClosure(method25277);
store_method((Type_Class)class4082, (Type_Symbol)symbol35696, (Runtime_MethodClosure)methodclosure25275);


// SmallDictionary>>declare:from:
//declare: key from: aDictionary 
// 	"Add key to the receiver. If key already exists, do nothing. If aDictionary 
// 	includes key, then remove it from aDictionary and use its association as 
// 	the element of the receiver."
// 
// 	(self includesKey: key) ifTrue: [^ self].
// 	(aDictionary includesKey: key)
// 		ifTrue: 
// 			[self add: (aDictionary associationAt: key).
// 			aDictionary removeKey: key]
// 		ifFalse: 
// 			[self add: key -> nil]
localvariable26544 = (Object)new_AST_Variable_named(L"key");
localvariable26545 = (Object)new_AST_Variable_named(L"aDictionary");
array21297 = (Object)new_Type_Array_with(2, (Object)localvariable26544, (Object)localvariable26545);
variable1577 = (Object)new_AST_Variable_named(L"return");
array21298 = (Object)new_Type_Array_with(1, (Object)variable1577);
symbol35889 = (Object)new_Type_Symbol_cached(L"includesKey:");
// includesKey:
send183159 = (Object)new_AST_Send((Object)Self, (Object)symbol35889, 1, (Object)localvariable26544);
string27819 = (Object)new_Type_String(L"declare:from:");
string27820 = (Object)new_Type_String(L"declare: key from: aDictionary \n\t\"Add key to the receiver. If key already exists, do nothing. If aDictionary \n\tincludes key, then remove it from aDictionary and use its association as \n\tthe element of the receiver.\"\n\n\t(self includesKey: key) ifTrue: [^ self].\n\t(aDictionary includesKey: key)\n\t\tifTrue: \n\t\t\t[self add: (aDictionary associationAt: key).\n\t\t\taDictionary removeKey: key]\n\t\tifFalse: \n\t\t\t[self add: key -> nil]");
smallint20722 = (Object)new_Type_SmallInt(-1);
smallint20723 = (Object)new_Type_SmallInt(-1);
info3717 = (Object)new_AST_Info((Type_String)string27820,(Type_String)string27819, (Type_SmallInt)smallint20722, (Type_SmallInt)smallint20723);
((AST_Send)send183159)->info = (AST_Info)info3717;
// escape:
send183160 = (Object)new_AST_Send((Object)variable1577, (Object)SMB_escape_, 1, (Object)Self);
((AST_Send)send183160)->info = (AST_Info)info3717;
block12726 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183160);
// ifTrue:
send183161 = (Object)new_AST_Send((Object)send183159, (Object)SMB_ifTrue_, 1, (Object)block12726);
((AST_Send)send183161)->info = (AST_Info)info3717;
// includesKey:
send183162 = (Object)new_AST_Send((Object)localvariable26545, (Object)symbol35889, 1, (Object)localvariable26544);
((AST_Send)send183162)->info = (AST_Info)info3717;
// associationAt:
send183163 = (Object)new_AST_Send((Object)localvariable26545, (Object)symbol35929, 1, (Object)localvariable26544);
((AST_Send)send183163)->info = (AST_Info)info3717;
// add:
send183164 = (Object)new_AST_Send((Object)Self, (Object)symbol35696, 1, (Object)send183163);
((AST_Send)send183164)->info = (AST_Info)info3717;
// removeKey:
send183165 = (Object)new_AST_Send((Object)localvariable26545, (Object)symbol35897, 1, (Object)localvariable26544);
((AST_Send)send183165)->info = (AST_Info)info3717;
block12727 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send183164, send183165);
// ->
send183166 = (Object)new_AST_Send((Object)localvariable26544, (Object)symbol35963, 1, (Object)Nil_Const);
((AST_Send)send183166)->info = (AST_Info)info3717;
// add:
send183167 = (Object)new_AST_Send((Object)Self, (Object)symbol35696, 1, (Object)send183166);
((AST_Send)send183167)->info = (AST_Info)info3717;
block12728 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183167);
// ifTrue:ifFalse:
send183168 = (Object)new_AST_Send((Object)send183162, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12727, (Object)block12728);
((AST_Send)send183168)->info = (AST_Info)info3717;
block12729 = (Object)new_AST_Block_with((Type_Array)array21298, (Type_Array)empty_Type_Array, 1, 3, send183161, send183168, Self);
// on:
send183169 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12729);
method25278 = (Object)new_AST_Method_with((Type_Array)array21297, (Type_Array)empty_Type_Array, 1, send183169);
((AST_Method)method25278)->info = (AST_Info)info3717;
symbol35905 = (Object)new_Type_Symbol_cached(L"declare:from:");
methodclosure25276 = (Object)new_Runtime_MethodClosure(method25278);
store_method((Type_Class)class4082, (Type_Symbol)symbol35905, (Runtime_MethodClosure)methodclosure25276);


// SmallDictionary>>flattenOnStream:
//flattenOnStream: aStream
// " seems to not be the best solution to do that. 
//   Imagine if the class Stream should have a method #writeSomething for each object existing in Pharo.
//   Objects themeself have the information on how to be print . Not the stream. "
// 	^aStream writeDictionary:self.
localvariable26546 = (Object)new_AST_Variable_named(L"aStream");
array21299 = (Object)new_Type_Array_with(1, (Object)localvariable26546);
symbol35970 = (Object)new_Type_Symbol_cached(L"writeDictionary:");
// writeDictionary:
send183170 = (Object)new_AST_Send((Object)localvariable26546, (Object)symbol35970, 1, (Object)Self);
string27821 = (Object)new_Type_String(L"flattenOnStream:");
string27822 = (Object)new_Type_String(L"flattenOnStream: aStream\n\" seems to not be the best solution to do that. \n  Imagine if the class Stream should have a method #writeSomething for each object existing in Pharo.\n  Objects themeself have the information on how to be print . Not the stream. \"\n\t^aStream writeDictionary:self.");
smallint20724 = (Object)new_Type_SmallInt(-1);
smallint20725 = (Object)new_Type_SmallInt(-1);
info3718 = (Object)new_AST_Info((Type_String)string27822,(Type_String)string27821, (Type_SmallInt)smallint20724, (Type_SmallInt)smallint20725);
((AST_Send)send183170)->info = (AST_Info)info3718;
method25279 = (Object)new_AST_Method_with((Type_Array)array21299, (Type_Array)empty_Type_Array, 1, send183170);
((AST_Method)method25279)->info = (AST_Info)info3718;
symbol35877 = (Object)new_Type_Symbol_cached(L"flattenOnStream:");
methodclosure25277 = (Object)new_Runtime_MethodClosure(method25279);
store_method((Type_Class)class4082, (Type_Symbol)symbol35877, (Runtime_MethodClosure)methodclosure25277);


// SmallDictionary>>includesKey:
//includesKey: key 
// 	"Answer whether the receiver has a key equal to the argument, key."
// 	
// 	^ ((self findIndexForKey: key) = 0) not
localvariable26547 = (Object)new_AST_Variable_named(L"key");
array21300 = (Object)new_Type_Array_with(1, (Object)localvariable26547);
// findIndexForKey:
send183171 = (Object)new_AST_Send((Object)Self, (Object)symbol35926, 1, (Object)localvariable26547);
string27823 = (Object)new_Type_String(L"includesKey:");
string27824 = (Object)new_Type_String(L"includesKey: key \n\t\"Answer whether the receiver has a key equal to the argument, key.\"\n\t\n\t^ ((self findIndexForKey: key) = 0) not");
smallint20726 = (Object)new_Type_SmallInt(-1);
smallint20727 = (Object)new_Type_SmallInt(-1);
info3719 = (Object)new_AST_Info((Type_String)string27824,(Type_String)string27823, (Type_SmallInt)smallint20726, (Type_SmallInt)smallint20727);
((AST_Send)send183171)->info = (AST_Info)info3719;
smallint20728 = (Object)new_Type_SmallInt(0);
constant35565 = (Object)new_AST_Constant((Object)smallint20728);
// =
send183172 = (Object)new_AST_Send((Object)send183171, (Object)SMB__equal, 1, (Object)constant35565);
((AST_Send)send183172)->info = (AST_Info)info3719;
// not
send183173 = (Object)new_AST_Send((Object)send183172, (Object)SMB_not, 0);
((AST_Send)send183173)->info = (AST_Info)info3719;
method25280 = (Object)new_AST_Method_with((Type_Array)array21300, (Type_Array)empty_Type_Array, 1, send183173);
((AST_Method)method25280)->info = (AST_Info)info3719;
methodclosure25278 = (Object)new_Runtime_MethodClosure(method25280);
store_method((Type_Class)class4082, (Type_Symbol)symbol35889, (Runtime_MethodClosure)methodclosure25278);


// SmallDictionary>>occurrencesOf:
//occurrencesOf: aValue
// 	"Answer how many of the receiver's elements are equal to anObject."
// 
// 	| count |
// 	count := 0.
// 	self do: [:each | aValue = each ifTrue: [count := count + 1]].
// 	^count
localvariable26548 = (Object)new_AST_Variable_named(L"aValue");
array21301 = (Object)new_Type_Array_with(1, (Object)localvariable26548);
localvariable26549 = (Object)new_AST_Variable_named(L"count");
array21302 = (Object)new_Type_Array_with(1, (Object)localvariable26549);
smallint20729 = (Object)new_Type_SmallInt(0);
constant35566 = (Object)new_AST_Constant((Object)smallint20729);
assign22459 = (Object)new_AST_Assign((Object)localvariable26549, (Object)constant35566);
localvariable26550 = (Object)new_AST_Variable_named(L"each");
array21303 = (Object)new_Type_Array_with(1, (Object)localvariable26550);
// =
send183174 = (Object)new_AST_Send((Object)localvariable26548, (Object)SMB__equal, 1, (Object)localvariable26550);
string27825 = (Object)new_Type_String(L"occurrencesOf:");
string27826 = (Object)new_Type_String(L"occurrencesOf: aValue\n\t\"Answer how many of the receiver\'s elements are equal to anObject.\"\n\n\t| count |\n\tcount := 0.\n\tself do: [:each | aValue = each ifTrue: [count := count + 1]].\n\t^count");
smallint20730 = (Object)new_Type_SmallInt(-1);
smallint20731 = (Object)new_Type_SmallInt(-1);
info3720 = (Object)new_AST_Info((Type_String)string27826,(Type_String)string27825, (Type_SmallInt)smallint20730, (Type_SmallInt)smallint20731);
((AST_Send)send183174)->info = (AST_Info)info3720;
smallint20732 = (Object)new_Type_SmallInt(1);
constant35567 = (Object)new_AST_Constant((Object)smallint20732);
// +
send183175 = (Object)new_AST_Send((Object)localvariable26549, (Object)SMB__plus, 1, (Object)constant35567);
((AST_Send)send183175)->info = (AST_Info)info3720;
assign22460 = (Object)new_AST_Assign((Object)localvariable26549, (Object)send183175);
block12730 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, assign22460);
// ifTrue:
send183176 = (Object)new_AST_Send((Object)send183174, (Object)SMB_ifTrue_, 1, (Object)block12730);
((AST_Send)send183176)->info = (AST_Info)info3720;
block12731 = (Object)new_AST_Block_with((Type_Array)array21303, (Type_Array)empty_Type_Array, 1, 1, send183176);
// do:
send183177 = (Object)new_AST_Send((Object)Self, (Object)symbol35642, 1, (Object)block12731);
((AST_Send)send183177)->info = (AST_Info)info3720;
method25281 = (Object)new_AST_Method_with((Type_Array)array21301, (Type_Array)array21302, 3, assign22459, send183177, localvariable26549);
((AST_Method)method25281)->info = (AST_Info)info3720;
symbol35910 = (Object)new_Type_Symbol_cached(L"occurrencesOf:");
methodclosure25279 = (Object)new_Runtime_MethodClosure(method25281);
store_method((Type_Class)class4082, (Type_Symbol)symbol35910, (Runtime_MethodClosure)methodclosure25279);


// SmallDictionary>>keyForIdentity:
//keyForIdentity: aValue
// 	"If aValue is one of the values of the receive, return its key, else return nil.  Contrast #keyAtValue: in which there is only an equality check, here there is an identity check"
// 
// 	self keysAndValuesDo: [:key :value |  value == aValue ifTrue: [^  key]].
// 	^ nil
localvariable26551 = (Object)new_AST_Variable_named(L"aValue");
array21304 = (Object)new_Type_Array_with(1, (Object)localvariable26551);
variable1578 = (Object)new_AST_Variable_named(L"return");
array21305 = (Object)new_Type_Array_with(1, (Object)variable1578);
localvariable26552 = (Object)new_AST_Variable_named(L"key");
localvariable26553 = (Object)new_AST_Variable_named(L"value");
array21306 = (Object)new_Type_Array_with(2, (Object)localvariable26552, (Object)localvariable26553);
// ==
send183178 = (Object)new_AST_Send((Object)localvariable26553, (Object)SMB__pequal, 1, (Object)localvariable26551);
string27827 = (Object)new_Type_String(L"keyForIdentity:");
string27828 = (Object)new_Type_String(L"keyForIdentity: aValue\n\t\"If aValue is one of the values of the receive, return its key, else return nil.  Contrast #keyAtValue: in which there is only an equality check, here there is an identity check\"\n\n\tself keysAndValuesDo: [:key :value |  value == aValue ifTrue: [^  key]].\n\t^ nil");
smallint20733 = (Object)new_Type_SmallInt(-1);
smallint20734 = (Object)new_Type_SmallInt(-1);
info3721 = (Object)new_AST_Info((Type_String)string27828,(Type_String)string27827, (Type_SmallInt)smallint20733, (Type_SmallInt)smallint20734);
((AST_Send)send183178)->info = (AST_Info)info3721;
// escape:
send183179 = (Object)new_AST_Send((Object)variable1578, (Object)SMB_escape_, 1, (Object)localvariable26552);
((AST_Send)send183179)->info = (AST_Info)info3721;
block12732 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183179);
// ifTrue:
send183180 = (Object)new_AST_Send((Object)send183178, (Object)SMB_ifTrue_, 1, (Object)block12732);
((AST_Send)send183180)->info = (AST_Info)info3721;
block12733 = (Object)new_AST_Block_with((Type_Array)array21306, (Type_Array)empty_Type_Array, 2, 1, send183180);
// keysAndValuesDo:
send183181 = (Object)new_AST_Send((Object)Self, (Object)symbol35928, 1, (Object)block12733);
((AST_Send)send183181)->info = (AST_Info)info3721;
block12734 = (Object)new_AST_Block_with((Type_Array)array21305, (Type_Array)empty_Type_Array, 1, 2, send183181, Nil_Const);
// on:
send183182 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12734);
method25282 = (Object)new_AST_Method_with((Type_Array)array21304, (Type_Array)empty_Type_Array, 1, send183182);
((AST_Method)method25282)->info = (AST_Info)info3721;
symbol35882 = (Object)new_Type_Symbol_cached(L"keyForIdentity:");
methodclosure25280 = (Object)new_Runtime_MethodClosure(method25282);
store_method((Type_Class)class4082, (Type_Symbol)symbol35882, (Runtime_MethodClosure)methodclosure25280);


// SmallDictionary>>isDictionary
//isDictionary
// 	^true
method25283 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
string27829 = (Object)new_Type_String(L"isDictionary");
string27830 = (Object)new_Type_String(L"isDictionary\n\t^true");
smallint20735 = (Object)new_Type_SmallInt(-1);
smallint20736 = (Object)new_Type_SmallInt(-1);
info3722 = (Object)new_AST_Info((Type_String)string27830,(Type_String)string27829, (Type_SmallInt)smallint20735, (Type_SmallInt)smallint20736);
((AST_Method)method25283)->info = (AST_Info)info3722;
methodclosure25281 = (Object)new_Runtime_MethodClosure(method25283);
store_method((Type_Class)class4082, (Type_Symbol)symbol35927, (Runtime_MethodClosure)methodclosure25281);


// SmallDictionary>>collect:
//collect: aBlock 
// 	"Evaluate aBlock with each of my values as the argument.  Collect the
// 	resulting values into a collection that is like me. Answer with the new
// 	collection."
// 	| newCollection |
// 	newCollection := self species new.
// 	self associationsDo:[:each |
// 		newCollection at: each key put: (aBlock value: each value).
// 	].
// 	^newCollection
localvariable26554 = (Object)new_AST_Variable_named(L"aBlock");
array21307 = (Object)new_Type_Array_with(1, (Object)localvariable26554);
localvariable26555 = (Object)new_AST_Variable_named(L"newCollection");
array21308 = (Object)new_Type_Array_with(1, (Object)localvariable26555);
// species
send183183 = (Object)new_AST_Send((Object)Self, (Object)symbol35961, 0);
string27831 = (Object)new_Type_String(L"collect:");
string27832 = (Object)new_Type_String(L"collect: aBlock \n\t\"Evaluate aBlock with each of my values as the argument.  Collect the\n\tresulting values into a collection that is like me. Answer with the new\n\tcollection.\"\n\t| newCollection |\n\tnewCollection := self species new.\n\tself associationsDo:[:each |\n\t\tnewCollection at: each key put: (aBlock value: each value).\n\t].\n\t^newCollection");
smallint20737 = (Object)new_Type_SmallInt(-1);
smallint20738 = (Object)new_Type_SmallInt(-1);
info3723 = (Object)new_AST_Info((Type_String)string27832,(Type_String)string27831, (Type_SmallInt)smallint20737, (Type_SmallInt)smallint20738);
((AST_Send)send183183)->info = (AST_Info)info3723;
// new
send183184 = (Object)new_AST_Send((Object)send183183, (Object)symbol35612, 0);
((AST_Send)send183184)->info = (AST_Info)info3723;
assign22461 = (Object)new_AST_Assign((Object)localvariable26555, (Object)send183184);
localvariable26556 = (Object)new_AST_Variable_named(L"each");
array21309 = (Object)new_Type_Array_with(1, (Object)localvariable26556);
// key
send183185 = (Object)new_AST_Send((Object)localvariable26556, (Object)symbol35933, 0);
((AST_Send)send183185)->info = (AST_Info)info3723;
// value
send183186 = (Object)new_AST_Send((Object)localvariable26556, (Object)symbol35946, 0);
((AST_Send)send183186)->info = (AST_Info)info3723;
// value:
send183187 = (Object)new_AST_Send((Object)localvariable26554, (Object)SMB_value_, 1, (Object)send183186);
((AST_Send)send183187)->info = (AST_Info)info3723;
// at:put:
send183188 = (Object)new_AST_Send((Object)localvariable26555, (Object)SMB_at_put_, 2, (Object)send183185, (Object)send183187);
((AST_Send)send183188)->info = (AST_Info)info3723;
block12735 = (Object)new_AST_Block_with((Type_Array)array21309, (Type_Array)empty_Type_Array, 1, 1, send183188);
// associationsDo:
send183189 = (Object)new_AST_Send((Object)Self, (Object)symbol35912, 1, (Object)block12735);
((AST_Send)send183189)->info = (AST_Info)info3723;
method25284 = (Object)new_AST_Method_with((Type_Array)array21307, (Type_Array)array21308, 3, assign22461, send183189, localvariable26555);
((AST_Method)method25284)->info = (AST_Info)info3723;
methodclosure25282 = (Object)new_Runtime_MethodClosure(method25284);
store_method((Type_Class)class4082, (Type_Symbol)symbol35899, (Runtime_MethodClosure)methodclosure25282);


// SmallDictionary>>keyAtValue:ifAbsent:
//keyAtValue: value ifAbsent: exceptionBlock
// 	"Answer the key that is the external name for the argument, value. If 
// 	there is none, answer the result of evaluating exceptionBlock.
// 	: Use =, not ==, so stings like 'this' can be found.  Note that MethodDictionary continues to use == so it will be fast."
// 	
// 	| index |
// 	index := (values indexOf: value).
// 	index == 0 
// 		ifTrue: [ ^ exceptionBlock value].
// 		
// 	^ keys at: index.
// 
// 
localvariable26557 = (Object)new_AST_Variable_named(L"value");
localvariable26558 = (Object)new_AST_Variable_named(L"exceptionBlock");
array21310 = (Object)new_Type_Array_with(2, (Object)localvariable26557, (Object)localvariable26558);
localvariable26559 = (Object)new_AST_Variable_named(L"index");
array21311 = (Object)new_Type_Array_with(1, (Object)localvariable26559);
variable1579 = (Object)new_AST_Variable_named(L"return");
array21312 = (Object)new_Type_Array_with(1, (Object)variable1579);
// indexOf:
send183190 = (Object)new_AST_Send((Object)instancevariable6051, (Object)symbol35969, 1, (Object)localvariable26557);
string27833 = (Object)new_Type_String(L"keyAtValue:ifAbsent:");
string27834 = (Object)new_Type_String(L"keyAtValue: value ifAbsent: exceptionBlock\n\t\"Answer the key that is the external name for the argument, value. If \n\tthere is none, answer the result of evaluating exceptionBlock.\n\t: Use =, not ==, so stings like \'this\' can be found.  Note that MethodDictionary continues to use == so it will be fast.\"\n\t\n\t| index |\n\tindex := (values indexOf: value).\n\tindex == 0 \n\t\tifTrue: [ ^ exceptionBlock value].\n\t\t\n\t^ keys at: index.\n\n");
smallint20739 = (Object)new_Type_SmallInt(-1);
smallint20740 = (Object)new_Type_SmallInt(-1);
info3724 = (Object)new_AST_Info((Type_String)string27834,(Type_String)string27833, (Type_SmallInt)smallint20739, (Type_SmallInt)smallint20740);
((AST_Send)send183190)->info = (AST_Info)info3724;
assign22462 = (Object)new_AST_Assign((Object)localvariable26559, (Object)send183190);
smallint20741 = (Object)new_Type_SmallInt(0);
constant35568 = (Object)new_AST_Constant((Object)smallint20741);
// ==
send183191 = (Object)new_AST_Send((Object)localvariable26559, (Object)SMB__pequal, 1, (Object)constant35568);
((AST_Send)send183191)->info = (AST_Info)info3724;
// value
send183192 = (Object)new_AST_Send((Object)localvariable26558, (Object)symbol35946, 0);
((AST_Send)send183192)->info = (AST_Info)info3724;
// escape:
send183193 = (Object)new_AST_Send((Object)variable1579, (Object)SMB_escape_, 1, (Object)send183192);
((AST_Send)send183193)->info = (AST_Info)info3724;
block12736 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183193);
// ifTrue:
send183194 = (Object)new_AST_Send((Object)send183191, (Object)SMB_ifTrue_, 1, (Object)block12736);
((AST_Send)send183194)->info = (AST_Info)info3724;
// at:
send183195 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26559);
((AST_Send)send183195)->info = (AST_Info)info3724;
block12737 = (Object)new_AST_Block_with((Type_Array)array21312, (Type_Array)empty_Type_Array, 1, 3, assign22462, send183194, send183195);
// on:
send183196 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12737);
method25285 = (Object)new_AST_Method_with((Type_Array)array21310, (Type_Array)array21311, 1, send183196);
((AST_Method)method25285)->info = (AST_Info)info3724;
symbol35920 = (Object)new_Type_Symbol_cached(L"keyAtValue:ifAbsent:");
methodclosure25283 = (Object)new_Runtime_MethodClosure(method25285);
store_method((Type_Class)class4082, (Type_Symbol)symbol35920, (Runtime_MethodClosure)methodclosure25283);


// SmallDictionary>>keysAndValuesRemove:
//keysAndValuesRemove: keyValueBlock
// 	"Removes all entries for which keyValueBlock returns true."
// 	"When removing many items, you must not do it while iterating over the dictionary, since it may be changing.  This method takes care of tallying the removals in a first pass, and then performing all the deletions afterward.  Many places in the sytem could be simplified by using this method."
// 
// 	| removals |
// 	removals := OrderedCollection new.
// 	self keysAndValuesDo:
// 		[:key :value | (keyValueBlock value:  key value:  value)
// 			ifTrue: [removals add:  key]].
//  	removals do:
// 		[:aKey | self removeKey: aKey]
localvariable26560 = (Object)new_AST_Variable_named(L"keyValueBlock");
array21313 = (Object)new_Type_Array_with(1, (Object)localvariable26560);
localvariable26561 = (Object)new_AST_Variable_named(L"removals");
array21314 = (Object)new_Type_Array_with(1, (Object)localvariable26561);
// new
send183197 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string27835 = (Object)new_Type_String(L"keysAndValuesRemove:");
string27836 = (Object)new_Type_String(L"keysAndValuesRemove: keyValueBlock\n\t\"Removes all entries for which keyValueBlock returns true.\"\n\t\"When removing many items, you must not do it while iterating over the dictionary, since it may be changing.  This method takes care of tallying the removals in a first pass, and then performing all the deletions afterward.  Many places in the sytem could be simplified by using this method.\"\n\n\t| removals |\n\tremovals := OrderedCollection new.\n\tself keysAndValuesDo:\n\t\t[:key :value | (keyValueBlock value:  key value:  value)\n\t\t\tifTrue: [removals add:  key]].\n \tremovals do:\n\t\t[:aKey | self removeKey: aKey]");
smallint20742 = (Object)new_Type_SmallInt(-1);
smallint20743 = (Object)new_Type_SmallInt(-1);
info3725 = (Object)new_AST_Info((Type_String)string27836,(Type_String)string27835, (Type_SmallInt)smallint20742, (Type_SmallInt)smallint20743);
((AST_Send)send183197)->info = (AST_Info)info3725;
assign22463 = (Object)new_AST_Assign((Object)localvariable26561, (Object)send183197);
localvariable26562 = (Object)new_AST_Variable_named(L"key");
localvariable26563 = (Object)new_AST_Variable_named(L"value");
array21315 = (Object)new_Type_Array_with(2, (Object)localvariable26562, (Object)localvariable26563);
// value:value:
send183198 = (Object)new_AST_Send((Object)localvariable26560, (Object)symbol35952, 2, (Object)localvariable26562, (Object)localvariable26563);
((AST_Send)send183198)->info = (AST_Info)info3725;
// add:
send183199 = (Object)new_AST_Send((Object)localvariable26561, (Object)symbol35696, 1, (Object)localvariable26562);
((AST_Send)send183199)->info = (AST_Info)info3725;
block12738 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183199);
// ifTrue:
send183200 = (Object)new_AST_Send((Object)send183198, (Object)SMB_ifTrue_, 1, (Object)block12738);
((AST_Send)send183200)->info = (AST_Info)info3725;
block12739 = (Object)new_AST_Block_with((Type_Array)array21315, (Type_Array)empty_Type_Array, 1, 1, send183200);
// keysAndValuesDo:
send183201 = (Object)new_AST_Send((Object)Self, (Object)symbol35928, 1, (Object)block12739);
((AST_Send)send183201)->info = (AST_Info)info3725;
localvariable26564 = (Object)new_AST_Variable_named(L"aKey");
array21316 = (Object)new_Type_Array_with(1, (Object)localvariable26564);
// removeKey:
send183202 = (Object)new_AST_Send((Object)Self, (Object)symbol35897, 1, (Object)localvariable26564);
((AST_Send)send183202)->info = (AST_Info)info3725;
block12740 = (Object)new_AST_Block_with((Type_Array)array21316, (Type_Array)empty_Type_Array, 1, 1, send183202);
// do:
send183203 = (Object)new_AST_Send((Object)localvariable26561, (Object)symbol35642, 1, (Object)block12740);
((AST_Send)send183203)->info = (AST_Info)info3725;
method25286 = (Object)new_AST_Method_with((Type_Array)array21313, (Type_Array)array21314, 4, assign22463, send183201, send183203, Self);
((AST_Method)method25286)->info = (AST_Info)info3725;
symbol35909 = (Object)new_Type_Symbol_cached(L"keysAndValuesRemove:");
methodclosure25284 = (Object)new_Runtime_MethodClosure(method25286);
store_method((Type_Class)class4082, (Type_Symbol)symbol35909, (Runtime_MethodClosure)methodclosure25284);


// SmallDictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	"Return the value at the given key. 
// 	If key is not included in the receiver store the result 
// 	of evaluating aBlock as new value."
// 	
// 	| index |
// 	index := self findIndexForKey:  key.
// 	index == 0 
// 		ifFalse: [ 	
// 			^ values at: index.
// 			]
// 		ifTrue: [
// 			^ self privateAt: key put: aBlock value.
// 			]
localvariable26565 = (Object)new_AST_Variable_named(L"key");
localvariable26566 = (Object)new_AST_Variable_named(L"aBlock");
array21317 = (Object)new_Type_Array_with(2, (Object)localvariable26565, (Object)localvariable26566);
localvariable26567 = (Object)new_AST_Variable_named(L"index");
array21318 = (Object)new_Type_Array_with(1, (Object)localvariable26567);
array21319 = (Object)new_Type_Array_with(1, (Object)variable1574);
// findIndexForKey:
send183204 = (Object)new_AST_Send((Object)Self, (Object)symbol35926, 1, (Object)localvariable26565);
string27837 = (Object)new_Type_String(L"at:ifAbsentPut:");
string27838 = (Object)new_Type_String(L"at: key ifAbsentPut: aBlock \n\t\"Return the value at the given key. \n\tIf key is not included in the receiver store the result \n\tof evaluating aBlock as new value.\"\n\t\n\t| index |\n\tindex := self findIndexForKey:  key.\n\tindex == 0 \n\t\tifFalse: [ \t\n\t\t\t^ values at: index.\n\t\t\t]\n\t\tifTrue: [\n\t\t\t^ self privateAt: key put: aBlock value.\n\t\t\t]");
smallint20744 = (Object)new_Type_SmallInt(-1);
smallint20745 = (Object)new_Type_SmallInt(-1);
info3726 = (Object)new_AST_Info((Type_String)string27838,(Type_String)string27837, (Type_SmallInt)smallint20744, (Type_SmallInt)smallint20745);
((AST_Send)send183204)->info = (AST_Info)info3726;
assign22464 = (Object)new_AST_Assign((Object)localvariable26567, (Object)send183204);
smallint20746 = (Object)new_Type_SmallInt(0);
constant35569 = (Object)new_AST_Constant((Object)smallint20746);
// ==
send183205 = (Object)new_AST_Send((Object)localvariable26567, (Object)SMB__pequal, 1, (Object)constant35569);
((AST_Send)send183205)->info = (AST_Info)info3726;
symbol35971 = (Object)new_Type_Symbol_cached(L"ifFalse:ifTrue:");
// at:
send183206 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26567);
((AST_Send)send183206)->info = (AST_Info)info3726;
// escape:
send183207 = (Object)new_AST_Send((Object)variable1574, (Object)SMB_escape_, 1, (Object)send183206);
((AST_Send)send183207)->info = (AST_Info)info3726;
block12741 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183207);
// value
send183208 = (Object)new_AST_Send((Object)localvariable26566, (Object)symbol35946, 0);
((AST_Send)send183208)->info = (AST_Info)info3726;
// privateAt:put:
send183209 = (Object)new_AST_Send((Object)Self, (Object)symbol35908, 2, (Object)localvariable26565, (Object)send183208);
((AST_Send)send183209)->info = (AST_Info)info3726;
// escape:
send183210 = (Object)new_AST_Send((Object)variable1574, (Object)SMB_escape_, 1, (Object)send183209);
((AST_Send)send183210)->info = (AST_Info)info3726;
block12742 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183210);
// ifFalse:ifTrue:
send183211 = (Object)new_AST_Send((Object)send183205, (Object)symbol35971, 2, (Object)block12741, (Object)block12742);
((AST_Send)send183211)->info = (AST_Info)info3726;
block12743 = (Object)new_AST_Block_with((Type_Array)array21319, (Type_Array)empty_Type_Array, 1, 3, assign22464, send183211, Self);
// on:
send183212 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12743);
method25287 = (Object)new_AST_Method_with((Type_Array)array21317, (Type_Array)array21318, 1, send183212);
((AST_Method)method25287)->info = (AST_Info)info3726;
symbol35892 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
methodclosure25285 = (Object)new_Runtime_MethodClosure(method25287);
store_method((Type_Class)class4082, (Type_Symbol)symbol35892, (Runtime_MethodClosure)methodclosure25285);


// SmallDictionary>>size
//size
// 	^size
method25288 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6052);
string27839 = (Object)new_Type_String(L"size");
string27840 = (Object)new_Type_String(L"size\n\t^size");
smallint20747 = (Object)new_Type_SmallInt(-1);
smallint20748 = (Object)new_Type_SmallInt(-1);
info3727 = (Object)new_AST_Info((Type_String)string27840,(Type_String)string27839, (Type_SmallInt)smallint20747, (Type_SmallInt)smallint20748);
((AST_Method)method25288)->info = (AST_Info)info3727;
methodclosure25286 = (Object)new_Runtime_MethodClosure(method25288);
store_method((Type_Class)class4082, (Type_Symbol)SMB_size, (Runtime_MethodClosure)methodclosure25286);


// SmallDictionary>>copy
//copy
// 	^ self shallowCopy postCopy.
symbol35972 = (Object)new_Type_Symbol_cached(L"shallowCopy");
// shallowCopy
send183213 = (Object)new_AST_Send((Object)Self, (Object)symbol35972, 0);
string27841 = (Object)new_Type_String(L"copy");
string27842 = (Object)new_Type_String(L"copy\n\t^ self shallowCopy postCopy.");
smallint20749 = (Object)new_Type_SmallInt(-1);
smallint20750 = (Object)new_Type_SmallInt(-1);
info3728 = (Object)new_AST_Info((Type_String)string27842,(Type_String)string27841, (Type_SmallInt)smallint20749, (Type_SmallInt)smallint20750);
((AST_Send)send183213)->info = (AST_Info)info3728;
// postCopy
send183214 = (Object)new_AST_Send((Object)send183213, (Object)symbol35900, 0);
((AST_Send)send183214)->info = (AST_Info)info3728;
method25289 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183214);
((AST_Method)method25289)->info = (AST_Info)info3728;
methodclosure25287 = (Object)new_Runtime_MethodClosure(method25289);
store_method((Type_Class)class4082, (Type_Symbol)symbol35637, (Runtime_MethodClosure)methodclosure25287);


// SmallDictionary>>keysSortedSafely
//keysSortedSafely
// 	"Answer a SortedCollection containing the receiver's keys."
// 	| sortedKeys |
// 	sortedKeys := SortedCollection new: self size.
// 	sortedKeys sortBlock:
// 		[:x :y |  "Should really be use <obj, string, num> compareSafely..."
// 		((x isString and: [y isString])
// 			or: [x isNumber and: [y isNumber]])
// 			ifTrue: [x < y]
// 			ifFalse: [x class == y class
// 				ifTrue: [x printString < y printString]
// 				ifFalse: [x class name < y class name]]].
// 	self keysDo: [:each | sortedKeys addLast: each].
// 	^ sortedKeys reSort
localvariable26568 = (Object)new_AST_Variable_named(L"sortedKeys");
array21320 = (Object)new_Type_Array_with(1, (Object)localvariable26568);
classreference4818 = (Object)new_Organization_ClassReference((Type_Class)class4087);
// size
send183215 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27843 = (Object)new_Type_String(L"keysSortedSafely");
string27844 = (Object)new_Type_String(L"keysSortedSafely\n\t\"Answer a SortedCollection containing the receiver\'s keys.\"\n\t| sortedKeys |\n\tsortedKeys := SortedCollection new: self size.\n\tsortedKeys sortBlock:\n\t\t[:x :y |  \"Should really be use <obj, string, num> compareSafely...\"\n\t\t((x isString and: [y isString])\n\t\t\tor: [x isNumber and: [y isNumber]])\n\t\t\tifTrue: [x < y]\n\t\t\tifFalse: [x class == y class\n\t\t\t\tifTrue: [x printString < y printString]\n\t\t\t\tifFalse: [x class name < y class name]]].\n\tself keysDo: [:each | sortedKeys addLast: each].\n\t^ sortedKeys reSort");
smallint20751 = (Object)new_Type_SmallInt(-1);
smallint20752 = (Object)new_Type_SmallInt(-1);
info3729 = (Object)new_AST_Info((Type_String)string27844,(Type_String)string27843, (Type_SmallInt)smallint20751, (Type_SmallInt)smallint20752);
((AST_Send)send183215)->info = (AST_Info)info3729;
// new:
send183216 = (Object)new_AST_Send((Object)classreference4818, (Object)symbol35602, 1, (Object)send183215);
((AST_Send)send183216)->info = (AST_Info)info3729;
assign22465 = (Object)new_AST_Assign((Object)localvariable26568, (Object)send183216);
symbol35973 = (Object)new_Type_Symbol_cached(L"sortBlock:");
localvariable26569 = (Object)new_AST_Variable_named(L"x");
localvariable26570 = (Object)new_AST_Variable_named(L"y");
array21321 = (Object)new_Type_Array_with(2, (Object)localvariable26569, (Object)localvariable26570);
// isString
send183217 = (Object)new_AST_Send((Object)localvariable26569, (Object)symbol35959, 0);
((AST_Send)send183217)->info = (AST_Info)info3729;
// isString
send183218 = (Object)new_AST_Send((Object)localvariable26570, (Object)symbol35959, 0);
((AST_Send)send183218)->info = (AST_Info)info3729;
block12744 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183218);
// and:
send183219 = (Object)new_AST_Send((Object)send183217, (Object)symbol35631, 1, (Object)block12744);
((AST_Send)send183219)->info = (AST_Info)info3729;
// isNumber
send183220 = (Object)new_AST_Send((Object)localvariable26569, (Object)symbol35960, 0);
((AST_Send)send183220)->info = (AST_Info)info3729;
// isNumber
send183221 = (Object)new_AST_Send((Object)localvariable26570, (Object)symbol35960, 0);
((AST_Send)send183221)->info = (AST_Info)info3729;
block12745 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183221);
// and:
send183222 = (Object)new_AST_Send((Object)send183220, (Object)symbol35631, 1, (Object)block12745);
((AST_Send)send183222)->info = (AST_Info)info3729;
block12746 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183222);
// or:
send183223 = (Object)new_AST_Send((Object)send183219, (Object)symbol35630, 1, (Object)block12746);
((AST_Send)send183223)->info = (AST_Info)info3729;
// <
send183224 = (Object)new_AST_Send((Object)localvariable26569, (Object)SMB__lt, 1, (Object)localvariable26570);
((AST_Send)send183224)->info = (AST_Info)info3729;
block12747 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183224);
// class
send183225 = (Object)new_AST_Send((Object)localvariable26569, (Object)SMB_class, 0);
((AST_Send)send183225)->info = (AST_Info)info3729;
// class
send183226 = (Object)new_AST_Send((Object)localvariable26570, (Object)SMB_class, 0);
((AST_Send)send183226)->info = (AST_Info)info3729;
// ==
send183227 = (Object)new_AST_Send((Object)send183225, (Object)SMB__pequal, 1, (Object)send183226);
((AST_Send)send183227)->info = (AST_Info)info3729;
// printString
send183228 = (Object)new_AST_Send((Object)localvariable26569, (Object)symbol35846, 0);
((AST_Send)send183228)->info = (AST_Info)info3729;
// printString
send183229 = (Object)new_AST_Send((Object)localvariable26570, (Object)symbol35846, 0);
((AST_Send)send183229)->info = (AST_Info)info3729;
// <
send183230 = (Object)new_AST_Send((Object)send183228, (Object)SMB__lt, 1, (Object)send183229);
((AST_Send)send183230)->info = (AST_Info)info3729;
block12748 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183230);
// class
send183231 = (Object)new_AST_Send((Object)localvariable26569, (Object)SMB_class, 0);
((AST_Send)send183231)->info = (AST_Info)info3729;
// name
send183232 = (Object)new_AST_Send((Object)send183231, (Object)SMB_name, 0);
((AST_Send)send183232)->info = (AST_Info)info3729;
// class
send183233 = (Object)new_AST_Send((Object)localvariable26570, (Object)SMB_class, 0);
((AST_Send)send183233)->info = (AST_Info)info3729;
// name
send183234 = (Object)new_AST_Send((Object)send183233, (Object)SMB_name, 0);
((AST_Send)send183234)->info = (AST_Info)info3729;
// <
send183235 = (Object)new_AST_Send((Object)send183232, (Object)SMB__lt, 1, (Object)send183234);
((AST_Send)send183235)->info = (AST_Info)info3729;
block12749 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183235);
// ifTrue:ifFalse:
send183236 = (Object)new_AST_Send((Object)send183227, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12748, (Object)block12749);
((AST_Send)send183236)->info = (AST_Info)info3729;
block12750 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183236);
// ifTrue:ifFalse:
send183237 = (Object)new_AST_Send((Object)send183223, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12747, (Object)block12750);
((AST_Send)send183237)->info = (AST_Info)info3729;
block12751 = (Object)new_AST_Block_with((Type_Array)array21321, (Type_Array)empty_Type_Array, 1, 1, send183237);
// sortBlock:
send183238 = (Object)new_AST_Send((Object)localvariable26568, (Object)symbol35973, 1, (Object)block12751);
((AST_Send)send183238)->info = (AST_Info)info3729;
localvariable26571 = (Object)new_AST_Variable_named(L"each");
array21322 = (Object)new_Type_Array_with(1, (Object)localvariable26571);
// addLast:
send183239 = (Object)new_AST_Send((Object)localvariable26568, (Object)symbol35714, 1, (Object)localvariable26571);
((AST_Send)send183239)->info = (AST_Info)info3729;
block12752 = (Object)new_AST_Block_with((Type_Array)array21322, (Type_Array)empty_Type_Array, 1, 1, send183239);
// keysDo:
send183240 = (Object)new_AST_Send((Object)Self, (Object)symbol35921, 1, (Object)block12752);
((AST_Send)send183240)->info = (AST_Info)info3729;
symbol35974 = (Object)new_Type_Symbol_cached(L"reSort");
// reSort
send183241 = (Object)new_AST_Send((Object)localvariable26568, (Object)symbol35974, 0);
((AST_Send)send183241)->info = (AST_Info)info3729;
method25290 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21320, 4, assign22465, send183238, send183240, send183241);
((AST_Method)method25290)->info = (AST_Info)info3729;
symbol35902 = (Object)new_Type_Symbol_cached(L"keysSortedSafely");
methodclosure25288 = (Object)new_Runtime_MethodClosure(method25290);
store_method((Type_Class)class4082, (Type_Symbol)symbol35902, (Runtime_MethodClosure)methodclosure25288);


// SmallDictionary>>growTo:
//growTo: aSize 
// 	| newKeys newValues |
// 	newKeys := Array new: aSize.
// 	newValues := Array new: aSize.
// 	1 to: size
// 		do: 
// 			[:i | 
// 			newKeys at: i put: (keys at: i).
// 			newValues at: i put: (values at: i)].
// 	keys := newKeys.
// 	values := newValues
localvariable26572 = (Object)new_AST_Variable_named(L"aSize");
array21323 = (Object)new_Type_Array_with(1, (Object)localvariable26572);
localvariable26573 = (Object)new_AST_Variable_named(L"newKeys");
localvariable26574 = (Object)new_AST_Variable_named(L"newValues");
array21324 = (Object)new_Type_Array_with(2, (Object)localvariable26573, (Object)localvariable26574);
// new:
send183242 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)localvariable26572);
string27845 = (Object)new_Type_String(L"growTo:");
string27846 = (Object)new_Type_String(L"growTo: aSize \n\t| newKeys newValues |\n\tnewKeys := Array new: aSize.\n\tnewValues := Array new: aSize.\n\t1 to: size\n\t\tdo: \n\t\t\t[:i | \n\t\t\tnewKeys at: i put: (keys at: i).\n\t\t\tnewValues at: i put: (values at: i)].\n\tkeys := newKeys.\n\tvalues := newValues");
smallint20753 = (Object)new_Type_SmallInt(-1);
smallint20754 = (Object)new_Type_SmallInt(-1);
info3730 = (Object)new_AST_Info((Type_String)string27846,(Type_String)string27845, (Type_SmallInt)smallint20753, (Type_SmallInt)smallint20754);
((AST_Send)send183242)->info = (AST_Info)info3730;
assign22466 = (Object)new_AST_Assign((Object)localvariable26573, (Object)send183242);
// new:
send183243 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)localvariable26572);
((AST_Send)send183243)->info = (AST_Info)info3730;
assign22467 = (Object)new_AST_Assign((Object)localvariable26574, (Object)send183243);
smallint20755 = (Object)new_Type_SmallInt(1);
constant35570 = (Object)new_AST_Constant((Object)smallint20755);
localvariable26575 = (Object)new_AST_Variable_named(L"i");
array21325 = (Object)new_Type_Array_with(1, (Object)localvariable26575);
// at:
send183244 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26575);
((AST_Send)send183244)->info = (AST_Info)info3730;
// at:put:
send183245 = (Object)new_AST_Send((Object)localvariable26573, (Object)SMB_at_put_, 2, (Object)localvariable26575, (Object)send183244);
((AST_Send)send183245)->info = (AST_Info)info3730;
// at:
send183246 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26575);
((AST_Send)send183246)->info = (AST_Info)info3730;
// at:put:
send183247 = (Object)new_AST_Send((Object)localvariable26574, (Object)SMB_at_put_, 2, (Object)localvariable26575, (Object)send183246);
((AST_Send)send183247)->info = (AST_Info)info3730;
block12753 = (Object)new_AST_Block_with((Type_Array)array21325, (Type_Array)empty_Type_Array, 1, 2, send183245, send183247);
// to:do:
send183248 = (Object)new_AST_Send((Object)constant35570, (Object)symbol35647, 2, (Object)instancevariable6052, (Object)block12753);
((AST_Send)send183248)->info = (AST_Info)info3730;
assign22468 = (Object)new_AST_Assign((Object)instancevariable6050, (Object)localvariable26573);
assign22469 = (Object)new_AST_Assign((Object)instancevariable6051, (Object)localvariable26574);
method25291 = (Object)new_AST_Method_with((Type_Array)array21323, (Type_Array)array21324, 6, assign22466, assign22467, send183248, assign22468, assign22469, Self);
((AST_Method)method25291)->info = (AST_Info)info3730;
methodclosure25289 = (Object)new_Runtime_MethodClosure(method25291);
store_method((Type_Class)class4082, (Type_Symbol)symbol35930, (Runtime_MethodClosure)methodclosure25289);


// SmallDictionary>>at:ifAbsent:
//at: key ifAbsent: aBlock 
// 	"Answer the value associated with the key or, if key isn't found,
// 	answer the result of evaluating aBlock."
// 
// 	| index |
// 	index := self findIndexForKey:  key.
// 	index == 0 ifTrue: [^ aBlock value].
// 	
// 	^ values at: index.
// 
// 	"| assoc |
// 	assoc := array at: (self findElementOrNil: key).
// 	assoc ifNil: [^ aBlock value].
// 	^ assoc value"
localvariable26576 = (Object)new_AST_Variable_named(L"key");
localvariable26577 = (Object)new_AST_Variable_named(L"aBlock");
array21326 = (Object)new_Type_Array_with(2, (Object)localvariable26576, (Object)localvariable26577);
localvariable26578 = (Object)new_AST_Variable_named(L"index");
array21327 = (Object)new_Type_Array_with(1, (Object)localvariable26578);
variable1580 = (Object)new_AST_Variable_named(L"return");
array21328 = (Object)new_Type_Array_with(1, (Object)variable1580);
// findIndexForKey:
send183249 = (Object)new_AST_Send((Object)Self, (Object)symbol35926, 1, (Object)localvariable26576);
string27847 = (Object)new_Type_String(L"at:ifAbsent:");
string27848 = (Object)new_Type_String(L"at: key ifAbsent: aBlock \n\t\"Answer the value associated with the key or, if key isn\'t found,\n\tanswer the result of evaluating aBlock.\"\n\n\t| index |\n\tindex := self findIndexForKey:  key.\n\tindex == 0 ifTrue: [^ aBlock value].\n\t\n\t^ values at: index.\n\n\t\"| assoc |\n\tassoc := array at: (self findElementOrNil: key).\n\tassoc ifNil: [^ aBlock value].\n\t^ assoc value\"");
smallint20756 = (Object)new_Type_SmallInt(-1);
smallint20757 = (Object)new_Type_SmallInt(-1);
info3731 = (Object)new_AST_Info((Type_String)string27848,(Type_String)string27847, (Type_SmallInt)smallint20756, (Type_SmallInt)smallint20757);
((AST_Send)send183249)->info = (AST_Info)info3731;
assign22470 = (Object)new_AST_Assign((Object)localvariable26578, (Object)send183249);
smallint20758 = (Object)new_Type_SmallInt(0);
constant35571 = (Object)new_AST_Constant((Object)smallint20758);
// ==
send183250 = (Object)new_AST_Send((Object)localvariable26578, (Object)SMB__pequal, 1, (Object)constant35571);
((AST_Send)send183250)->info = (AST_Info)info3731;
// value
send183251 = (Object)new_AST_Send((Object)localvariable26577, (Object)symbol35946, 0);
((AST_Send)send183251)->info = (AST_Info)info3731;
// escape:
send183252 = (Object)new_AST_Send((Object)variable1580, (Object)SMB_escape_, 1, (Object)send183251);
((AST_Send)send183252)->info = (AST_Info)info3731;
block12754 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183252);
// ifTrue:
send183253 = (Object)new_AST_Send((Object)send183250, (Object)SMB_ifTrue_, 1, (Object)block12754);
((AST_Send)send183253)->info = (AST_Info)info3731;
// at:
send183254 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26578);
((AST_Send)send183254)->info = (AST_Info)info3731;
block12755 = (Object)new_AST_Block_with((Type_Array)array21328, (Type_Array)empty_Type_Array, 1, 3, assign22470, send183253, send183254);
// on:
send183255 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12755);
method25292 = (Object)new_AST_Method_with((Type_Array)array21326, (Type_Array)array21327, 1, send183255);
((AST_Method)method25292)->info = (AST_Info)info3731;
methodclosure25290 = (Object)new_Runtime_MethodClosure(method25292);
store_method((Type_Class)class4082, (Type_Symbol)symbol35914, (Runtime_MethodClosure)methodclosure25290);


// SmallDictionary>>at:put:
//at: key put: value 
// 	"Set the value at key to be anObject.  If key is not found, create a
// 	new entry for key and set is value to anObject. Answer anObject."
// 
// 	| index |
// 	index := self findIndexForKey:  key.
// 	index == 0
// 		ifFalse: [
// 			^ values at: index put: value]
// 		ifTrue: [
// 			^ self privateAt: key put: value
// 			].	
// 	
localvariable26579 = (Object)new_AST_Variable_named(L"key");
localvariable26580 = (Object)new_AST_Variable_named(L"value");
array21329 = (Object)new_Type_Array_with(2, (Object)localvariable26579, (Object)localvariable26580);
localvariable26581 = (Object)new_AST_Variable_named(L"index");
array21330 = (Object)new_Type_Array_with(1, (Object)localvariable26581);
variable1581 = (Object)new_AST_Variable_named(L"return");
array21331 = (Object)new_Type_Array_with(1, (Object)variable1581);
// findIndexForKey:
send183256 = (Object)new_AST_Send((Object)Self, (Object)symbol35926, 1, (Object)localvariable26579);
string27849 = (Object)new_Type_String(L"at:put:");
string27850 = (Object)new_Type_String(L"at: key put: value \n\t\"Set the value at key to be anObject.  If key is not found, create a\n\tnew entry for key and set is value to anObject. Answer anObject.\"\n\n\t| index |\n\tindex := self findIndexForKey:  key.\n\tindex == 0\n\t\tifFalse: [\n\t\t\t^ values at: index put: value]\n\t\tifTrue: [\n\t\t\t^ self privateAt: key put: value\n\t\t\t].\t\n\t");
smallint20759 = (Object)new_Type_SmallInt(-1);
smallint20760 = (Object)new_Type_SmallInt(-1);
info3732 = (Object)new_AST_Info((Type_String)string27850,(Type_String)string27849, (Type_SmallInt)smallint20759, (Type_SmallInt)smallint20760);
((AST_Send)send183256)->info = (AST_Info)info3732;
assign22471 = (Object)new_AST_Assign((Object)localvariable26581, (Object)send183256);
smallint20761 = (Object)new_Type_SmallInt(0);
constant35572 = (Object)new_AST_Constant((Object)smallint20761);
// ==
send183257 = (Object)new_AST_Send((Object)localvariable26581, (Object)SMB__pequal, 1, (Object)constant35572);
((AST_Send)send183257)->info = (AST_Info)info3732;
// at:put:
send183258 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_put_, 2, (Object)localvariable26581, (Object)localvariable26580);
((AST_Send)send183258)->info = (AST_Info)info3732;
// escape:
send183259 = (Object)new_AST_Send((Object)variable1581, (Object)SMB_escape_, 1, (Object)send183258);
((AST_Send)send183259)->info = (AST_Info)info3732;
block12756 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183259);
// privateAt:put:
send183260 = (Object)new_AST_Send((Object)Self, (Object)symbol35908, 2, (Object)localvariable26579, (Object)localvariable26580);
((AST_Send)send183260)->info = (AST_Info)info3732;
// escape:
send183261 = (Object)new_AST_Send((Object)variable1581, (Object)SMB_escape_, 1, (Object)send183260);
((AST_Send)send183261)->info = (AST_Info)info3732;
block12757 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183261);
// ifFalse:ifTrue:
send183262 = (Object)new_AST_Send((Object)send183257, (Object)symbol35971, 2, (Object)block12756, (Object)block12757);
((AST_Send)send183262)->info = (AST_Info)info3732;
block12758 = (Object)new_AST_Block_with((Type_Array)array21331, (Type_Array)empty_Type_Array, 1, 3, assign22471, send183262, Self);
// on:
send183263 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12758);
method25293 = (Object)new_AST_Method_with((Type_Array)array21329, (Type_Array)array21330, 1, send183263);
((AST_Method)method25293)->info = (AST_Info)info3732;
methodclosure25291 = (Object)new_Runtime_MethodClosure(method25293);
store_method((Type_Class)class4082, (Type_Symbol)SMB_at_put_, (Runtime_MethodClosure)methodclosure25291);


// SmallDictionary>>valuesDo:
//valuesDo: aBlock 
// 	"Evaluate aBlock for each of the receiver's values."
// 
// 1 to: size do: [:i | aBlock value: (values at: i)]
localvariable26582 = (Object)new_AST_Variable_named(L"aBlock");
array21332 = (Object)new_Type_Array_with(1, (Object)localvariable26582);
smallint20762 = (Object)new_Type_SmallInt(1);
constant35573 = (Object)new_AST_Constant((Object)smallint20762);
localvariable26583 = (Object)new_AST_Variable_named(L"i");
array21333 = (Object)new_Type_Array_with(1, (Object)localvariable26583);
// at:
send183264 = (Object)new_AST_Send((Object)instancevariable6051, (Object)SMB_at_, 1, (Object)localvariable26583);
string27851 = (Object)new_Type_String(L"valuesDo:");
string27852 = (Object)new_Type_String(L"valuesDo: aBlock \n\t\"Evaluate aBlock for each of the receiver\'s values.\"\n\n1 to: size do: [:i | aBlock value: (values at: i)]");
smallint20763 = (Object)new_Type_SmallInt(-1);
smallint20764 = (Object)new_Type_SmallInt(-1);
info3733 = (Object)new_AST_Info((Type_String)string27852,(Type_String)string27851, (Type_SmallInt)smallint20763, (Type_SmallInt)smallint20764);
((AST_Send)send183264)->info = (AST_Info)info3733;
// value:
send183265 = (Object)new_AST_Send((Object)localvariable26582, (Object)SMB_value_, 1, (Object)send183264);
((AST_Send)send183265)->info = (AST_Info)info3733;
block12759 = (Object)new_AST_Block_with((Type_Array)array21333, (Type_Array)empty_Type_Array, 1, 1, send183265);
// to:do:
send183266 = (Object)new_AST_Send((Object)constant35573, (Object)symbol35647, 2, (Object)instancevariable6052, (Object)block12759);
((AST_Send)send183266)->info = (AST_Info)info3733;
method25294 = (Object)new_AST_Method_with((Type_Array)array21332, (Type_Array)empty_Type_Array, 2, send183266, Self);
((AST_Method)method25294)->info = (AST_Info)info3733;
methodclosure25292 = (Object)new_Runtime_MethodClosure(method25294);
store_method((Type_Class)class4082, (Type_Symbol)symbol35886, (Runtime_MethodClosure)methodclosure25292);


// SmallDictionary>>keyAtValue:
//keyAtValue: value 
// 	"Answer the key that is the external name for the argument, value. If 
// 	there is none, answer nil."
// 
// 	^self keyAtValue: value ifAbsent: [self errorValueNotFound]
localvariable26584 = (Object)new_AST_Variable_named(L"value");
array21334 = (Object)new_Type_Array_with(1, (Object)localvariable26584);
// errorValueNotFound
send183267 = (Object)new_AST_Send((Object)Self, (Object)symbol35907, 0);
string27853 = (Object)new_Type_String(L"keyAtValue:");
string27854 = (Object)new_Type_String(L"keyAtValue: value \n\t\"Answer the key that is the external name for the argument, value. If \n\tthere is none, answer nil.\"\n\n\t^self keyAtValue: value ifAbsent: [self errorValueNotFound]");
smallint20765 = (Object)new_Type_SmallInt(-1);
smallint20766 = (Object)new_Type_SmallInt(-1);
info3734 = (Object)new_AST_Info((Type_String)string27854,(Type_String)string27853, (Type_SmallInt)smallint20765, (Type_SmallInt)smallint20766);
((AST_Send)send183267)->info = (AST_Info)info3734;
block12760 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183267);
// keyAtValue:ifAbsent:
send183268 = (Object)new_AST_Send((Object)Self, (Object)symbol35920, 2, (Object)localvariable26584, (Object)block12760);
((AST_Send)send183268)->info = (AST_Info)info3734;
method25295 = (Object)new_AST_Method_with((Type_Array)array21334, (Type_Array)empty_Type_Array, 1, send183268);
((AST_Method)method25295)->info = (AST_Info)info3734;
symbol35924 = (Object)new_Type_Symbol_cached(L"keyAtValue:");
methodclosure25293 = (Object)new_Runtime_MethodClosure(method25295);
store_method((Type_Class)class4082, (Type_Symbol)symbol35924, (Runtime_MethodClosure)methodclosure25293);


// SmallDictionary>>rehash
//rehash
// 	"we don't use hashing, nothing to be done"
method25296 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string27855 = (Object)new_Type_String(L"rehash");
string27856 = (Object)new_Type_String(L"rehash\n\t\"we don\'t use hashing, nothing to be done\"");
smallint20767 = (Object)new_Type_SmallInt(-1);
smallint20768 = (Object)new_Type_SmallInt(-1);
info3735 = (Object)new_AST_Info((Type_String)string27856,(Type_String)string27855, (Type_SmallInt)smallint20767, (Type_SmallInt)smallint20768);
((AST_Method)method25296)->info = (AST_Info)info3735;
symbol35896 = (Object)new_Type_Symbol_cached(L"rehash");
methodclosure25294 = (Object)new_Runtime_MethodClosure(method25296);
store_method((Type_Class)class4082, (Type_Symbol)symbol35896, (Runtime_MethodClosure)methodclosure25294);


// SmallDictionary>>keyAtIdentityValue:ifAbsent:
//keyAtIdentityValue: value ifAbsent: exceptionBlock
// 	"Answer the key that is the external name for the argument, value. If 
// 	there is none, answer the result of evaluating exceptionBlock.
// 	Note: There can be multiple keys with the same value. Only one is returned."
//  	
// 	| index |
// 	index := (values identityIndexOf: value).
// 	index == 0 
// 		ifTrue: [ ^ exceptionBlock value].
// 	^ keys at: index.
// 
localvariable26585 = (Object)new_AST_Variable_named(L"value");
localvariable26586 = (Object)new_AST_Variable_named(L"exceptionBlock");
array21335 = (Object)new_Type_Array_with(2, (Object)localvariable26585, (Object)localvariable26586);
localvariable26587 = (Object)new_AST_Variable_named(L"index");
array21336 = (Object)new_Type_Array_with(1, (Object)localvariable26587);
variable1582 = (Object)new_AST_Variable_named(L"return");
array21337 = (Object)new_Type_Array_with(1, (Object)variable1582);
symbol35975 = (Object)new_Type_Symbol_cached(L"identityIndexOf:");
// identityIndexOf:
send183269 = (Object)new_AST_Send((Object)instancevariable6051, (Object)symbol35975, 1, (Object)localvariable26585);
string27857 = (Object)new_Type_String(L"keyAtIdentityValue:ifAbsent:");
string27858 = (Object)new_Type_String(L"keyAtIdentityValue: value ifAbsent: exceptionBlock\n\t\"Answer the key that is the external name for the argument, value. If \n\tthere is none, answer the result of evaluating exceptionBlock.\n\tNote: There can be multiple keys with the same value. Only one is returned.\"\n \t\n\t| index |\n\tindex := (values identityIndexOf: value).\n\tindex == 0 \n\t\tifTrue: [ ^ exceptionBlock value].\n\t^ keys at: index.\n");
smallint20769 = (Object)new_Type_SmallInt(-1);
smallint20770 = (Object)new_Type_SmallInt(-1);
info3736 = (Object)new_AST_Info((Type_String)string27858,(Type_String)string27857, (Type_SmallInt)smallint20769, (Type_SmallInt)smallint20770);
((AST_Send)send183269)->info = (AST_Info)info3736;
assign22472 = (Object)new_AST_Assign((Object)localvariable26587, (Object)send183269);
smallint20771 = (Object)new_Type_SmallInt(0);
constant35574 = (Object)new_AST_Constant((Object)smallint20771);
// ==
send183270 = (Object)new_AST_Send((Object)localvariable26587, (Object)SMB__pequal, 1, (Object)constant35574);
((AST_Send)send183270)->info = (AST_Info)info3736;
// value
send183271 = (Object)new_AST_Send((Object)localvariable26586, (Object)symbol35946, 0);
((AST_Send)send183271)->info = (AST_Info)info3736;
// escape:
send183272 = (Object)new_AST_Send((Object)variable1582, (Object)SMB_escape_, 1, (Object)send183271);
((AST_Send)send183272)->info = (AST_Info)info3736;
block12761 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183272);
// ifTrue:
send183273 = (Object)new_AST_Send((Object)send183270, (Object)SMB_ifTrue_, 1, (Object)block12761);
((AST_Send)send183273)->info = (AST_Info)info3736;
// at:
send183274 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26587);
((AST_Send)send183274)->info = (AST_Info)info3736;
block12762 = (Object)new_AST_Block_with((Type_Array)array21337, (Type_Array)empty_Type_Array, 1, 3, assign22472, send183273, send183274);
// on:
send183275 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12762);
method25297 = (Object)new_AST_Method_with((Type_Array)array21335, (Type_Array)array21336, 1, send183275);
((AST_Method)method25297)->info = (AST_Info)info3736;
methodclosure25295 = (Object)new_Runtime_MethodClosure(method25297);
store_method((Type_Class)class4082, (Type_Symbol)symbol35906, (Runtime_MethodClosure)methodclosure25295);


// SmallDictionary>>keys
//keys
// 	"Answer a Set containing the receiver's keys."
// 	
// "	^ keys copyFrom: 1 to: size."
// 	| aSet |
// 	aSet := Set new: self size.
// 	self keysDo: [:key | aSet add: key].
// 	^ aSet
// 
localvariable26588 = (Object)new_AST_Variable_named(L"aSet");
array21338 = (Object)new_Type_Array_with(1, (Object)localvariable26588);
classreference4819 = (Object)new_Organization_ClassReference((Type_Class)class4083);
// size
send183276 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
string27859 = (Object)new_Type_String(L"keys");
string27860 = (Object)new_Type_String(L"keys\n\t\"Answer a Set containing the receiver\'s keys.\"\n\t\n\"\t^ keys copyFrom: 1 to: size.\"\n\t| aSet |\n\taSet := Set new: self size.\n\tself keysDo: [:key | aSet add: key].\n\t^ aSet\n");
smallint20772 = (Object)new_Type_SmallInt(-1);
smallint20773 = (Object)new_Type_SmallInt(-1);
info3737 = (Object)new_AST_Info((Type_String)string27860,(Type_String)string27859, (Type_SmallInt)smallint20772, (Type_SmallInt)smallint20773);
((AST_Send)send183276)->info = (AST_Info)info3737;
// new:
send183277 = (Object)new_AST_Send((Object)classreference4819, (Object)symbol35602, 1, (Object)send183276);
((AST_Send)send183277)->info = (AST_Info)info3737;
assign22473 = (Object)new_AST_Assign((Object)localvariable26588, (Object)send183277);
localvariable26589 = (Object)new_AST_Variable_named(L"key");
array21339 = (Object)new_Type_Array_with(1, (Object)localvariable26589);
// add:
send183278 = (Object)new_AST_Send((Object)localvariable26588, (Object)symbol35696, 1, (Object)localvariable26589);
((AST_Send)send183278)->info = (AST_Info)info3737;
block12763 = (Object)new_AST_Block_with((Type_Array)array21339, (Type_Array)empty_Type_Array, 1, 1, send183278);
// keysDo:
send183279 = (Object)new_AST_Send((Object)Self, (Object)symbol35921, 1, (Object)block12763);
((AST_Send)send183279)->info = (AST_Info)info3737;
method25298 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21338, 3, assign22473, send183279, localvariable26588);
((AST_Method)method25298)->info = (AST_Info)info3737;
methodclosure25296 = (Object)new_Runtime_MethodClosure(method25298);
store_method((Type_Class)class4082, (Type_Symbol)symbol35918, (Runtime_MethodClosure)methodclosure25296);


// SmallDictionary>>addAll:
//addAll: aKeyedCollection
// 	aKeyedCollection == self 
// 		ifFalse: [
// 			aKeyedCollection keysAndValuesDo: [:key :value | self at: key put: value]].
// 	^aKeyedCollection
localvariable26590 = (Object)new_AST_Variable_named(L"aKeyedCollection");
array21340 = (Object)new_Type_Array_with(1, (Object)localvariable26590);
// ==
send183280 = (Object)new_AST_Send((Object)localvariable26590, (Object)SMB__pequal, 1, (Object)Self);
string27861 = (Object)new_Type_String(L"addAll:");
string27862 = (Object)new_Type_String(L"addAll: aKeyedCollection\n\taKeyedCollection == self \n\t\tifFalse: [\n\t\t\taKeyedCollection keysAndValuesDo: [:key :value | self at: key put: value]].\n\t^aKeyedCollection");
smallint20774 = (Object)new_Type_SmallInt(-1);
smallint20775 = (Object)new_Type_SmallInt(-1);
info3738 = (Object)new_AST_Info((Type_String)string27862,(Type_String)string27861, (Type_SmallInt)smallint20774, (Type_SmallInt)smallint20775);
((AST_Send)send183280)->info = (AST_Info)info3738;
localvariable26591 = (Object)new_AST_Variable_named(L"key");
localvariable26592 = (Object)new_AST_Variable_named(L"value");
array21341 = (Object)new_Type_Array_with(2, (Object)localvariable26591, (Object)localvariable26592);
// at:put:
send183281 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable26591, (Object)localvariable26592);
((AST_Send)send183281)->info = (AST_Info)info3738;
block12764 = (Object)new_AST_Block_with((Type_Array)array21341, (Type_Array)empty_Type_Array, 2, 1, send183281);
// keysAndValuesDo:
send183282 = (Object)new_AST_Send((Object)localvariable26590, (Object)symbol35928, 1, (Object)block12764);
((AST_Send)send183282)->info = (AST_Info)info3738;
block12765 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send183282);
// ifFalse:
send183283 = (Object)new_AST_Send((Object)send183280, (Object)SMB_ifFalse_, 1, (Object)block12765);
((AST_Send)send183283)->info = (AST_Info)info3738;
method25299 = (Object)new_AST_Method_with((Type_Array)array21340, (Type_Array)empty_Type_Array, 2, send183283, localvariable26590);
((AST_Method)method25299)->info = (AST_Info)info3738;
methodclosure25297 = (Object)new_Runtime_MethodClosure(method25299);
store_method((Type_Class)class4082, (Type_Symbol)symbol35878, (Runtime_MethodClosure)methodclosure25297);


// SmallDictionary>>scanFor:
//scanFor: anObject
// 	"Scan the key array for the first slot containing either a nil (indicating an empty slot) or an element that matches anObject. Answer the index of that slot or zero if no slot is found. This method will be overridden in various subclasses that have different interpretations for matching elements."
// 	| element start finish |
// 	finish := keys size.
// 	start := (anObject hash \\ finish) + 1.
// 
// 	"Search from (hash mod size) to the end."
// 	start to: finish do:
// 		[:index | ((element := keys at: index) == nil or: [element  = anObject])
// 			ifTrue: [^ index ]].
// 
// 	"Search from 1 to where we started."
// 	1 to: start-1 do:
// 		[:index | ((element := keys at: index) == nil or: [element  = anObject])
// 			ifTrue: [^ index ]].
// 
// 	^ 0  "No match AND no empty slot"
localvariable26593 = (Object)new_AST_Variable_named(L"anObject");
array21342 = (Object)new_Type_Array_with(1, (Object)localvariable26593);
localvariable26594 = (Object)new_AST_Variable_named(L"element");
localvariable26595 = (Object)new_AST_Variable_named(L"start");
localvariable26596 = (Object)new_AST_Variable_named(L"finish");
array21343 = (Object)new_Type_Array_with(3, (Object)localvariable26594, (Object)localvariable26595, (Object)localvariable26596);
variable1583 = (Object)new_AST_Variable_named(L"return");
array21344 = (Object)new_Type_Array_with(1, (Object)variable1583);
// size
send183284 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_size, 0);
string27863 = (Object)new_Type_String(L"scanFor:");
string27864 = (Object)new_Type_String(L"scanFor: anObject\n\t\"Scan the key array for the first slot containing either a nil (indicating an empty slot) or an element that matches anObject. Answer the index of that slot or zero if no slot is found. This method will be overridden in various subclasses that have different interpretations for matching elements.\"\n\t| element start finish |\n\tfinish := keys size.\n\tstart := (anObject hash \\\\ finish) + 1.\n\n\t\"Search from (hash mod size) to the end.\"\n\tstart to: finish do:\n\t\t[:index | ((element := keys at: index) == nil or: [element  = anObject])\n\t\t\tifTrue: [^ index ]].\n\n\t\"Search from 1 to where we started.\"\n\t1 to: start-1 do:\n\t\t[:index | ((element := keys at: index) == nil or: [element  = anObject])\n\t\t\tifTrue: [^ index ]].\n\n\t^ 0  \"No match AND no empty slot\"");
smallint20776 = (Object)new_Type_SmallInt(-1);
smallint20777 = (Object)new_Type_SmallInt(-1);
info3739 = (Object)new_AST_Info((Type_String)string27864,(Type_String)string27863, (Type_SmallInt)smallint20776, (Type_SmallInt)smallint20777);
((AST_Send)send183284)->info = (AST_Info)info3739;
assign22474 = (Object)new_AST_Assign((Object)localvariable26596, (Object)send183284);
// hash
send183285 = (Object)new_AST_Send((Object)localvariable26593, (Object)SMB_hash, 0);
((AST_Send)send183285)->info = (AST_Info)info3739;
symbol35976 = (Object)new_Type_Symbol_cached(L"\\\\");
// \\a
send183286 = (Object)new_AST_Send((Object)send183285, (Object)symbol35976, 1, (Object)localvariable26596);
((AST_Send)send183286)->info = (AST_Info)info3739;
smallint20778 = (Object)new_Type_SmallInt(1);
constant35575 = (Object)new_AST_Constant((Object)smallint20778);
// +
send183287 = (Object)new_AST_Send((Object)send183286, (Object)SMB__plus, 1, (Object)constant35575);
((AST_Send)send183287)->info = (AST_Info)info3739;
assign22475 = (Object)new_AST_Assign((Object)localvariable26595, (Object)send183287);
localvariable26597 = (Object)new_AST_Variable_named(L"index");
array21345 = (Object)new_Type_Array_with(1, (Object)localvariable26597);
// at:
send183288 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26597);
((AST_Send)send183288)->info = (AST_Info)info3739;
assign22476 = (Object)new_AST_Assign((Object)localvariable26594, (Object)send183288);
// ==
send183289 = (Object)new_AST_Send((Object)assign22476, (Object)SMB__pequal, 1, (Object)Nil_Const);
((AST_Send)send183289)->info = (AST_Info)info3739;
// =
send183290 = (Object)new_AST_Send((Object)localvariable26594, (Object)SMB__equal, 1, (Object)localvariable26593);
((AST_Send)send183290)->info = (AST_Info)info3739;
block12766 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183290);
// or:
send183291 = (Object)new_AST_Send((Object)send183289, (Object)symbol35630, 1, (Object)block12766);
((AST_Send)send183291)->info = (AST_Info)info3739;
// escape:
send183292 = (Object)new_AST_Send((Object)variable1583, (Object)SMB_escape_, 1, (Object)localvariable26597);
((AST_Send)send183292)->info = (AST_Info)info3739;
block12767 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183292);
// ifTrue:
send183293 = (Object)new_AST_Send((Object)send183291, (Object)SMB_ifTrue_, 1, (Object)block12767);
((AST_Send)send183293)->info = (AST_Info)info3739;
block12768 = (Object)new_AST_Block_with((Type_Array)array21345, (Type_Array)empty_Type_Array, 2, 1, send183293);
// to:do:
send183294 = (Object)new_AST_Send((Object)localvariable26595, (Object)symbol35647, 2, (Object)localvariable26596, (Object)block12768);
((AST_Send)send183294)->info = (AST_Info)info3739;
smallint20779 = (Object)new_Type_SmallInt(1);
constant35576 = (Object)new_AST_Constant((Object)smallint20779);
smallint20780 = (Object)new_Type_SmallInt(1);
constant35577 = (Object)new_AST_Constant((Object)smallint20780);
// -
send183295 = (Object)new_AST_Send((Object)localvariable26595, (Object)SMB__minus, 1, (Object)constant35577);
((AST_Send)send183295)->info = (AST_Info)info3739;
localvariable26598 = (Object)new_AST_Variable_named(L"index");
array21346 = (Object)new_Type_Array_with(1, (Object)localvariable26598);
// at:
send183296 = (Object)new_AST_Send((Object)instancevariable6050, (Object)SMB_at_, 1, (Object)localvariable26598);
((AST_Send)send183296)->info = (AST_Info)info3739;
assign22477 = (Object)new_AST_Assign((Object)localvariable26594, (Object)send183296);
// ==
send183297 = (Object)new_AST_Send((Object)assign22477, (Object)SMB__pequal, 1, (Object)Nil_Const);
((AST_Send)send183297)->info = (AST_Info)info3739;
// =
send183298 = (Object)new_AST_Send((Object)localvariable26594, (Object)SMB__equal, 1, (Object)localvariable26593);
((AST_Send)send183298)->info = (AST_Info)info3739;
block12769 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183298);
// or:
send183299 = (Object)new_AST_Send((Object)send183297, (Object)symbol35630, 1, (Object)block12769);
((AST_Send)send183299)->info = (AST_Info)info3739;
// escape:
send183300 = (Object)new_AST_Send((Object)variable1583, (Object)SMB_escape_, 1, (Object)localvariable26598);
((AST_Send)send183300)->info = (AST_Info)info3739;
block12770 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183300);
// ifTrue:
send183301 = (Object)new_AST_Send((Object)send183299, (Object)SMB_ifTrue_, 1, (Object)block12770);
((AST_Send)send183301)->info = (AST_Info)info3739;
block12771 = (Object)new_AST_Block_with((Type_Array)array21346, (Type_Array)empty_Type_Array, 2, 1, send183301);
// to:do:
send183302 = (Object)new_AST_Send((Object)constant35576, (Object)symbol35647, 2, (Object)send183295, (Object)block12771);
((AST_Send)send183302)->info = (AST_Info)info3739;
smallint20781 = (Object)new_Type_SmallInt(0);
constant35578 = (Object)new_AST_Constant((Object)smallint20781);
block12772 = (Object)new_AST_Block_with((Type_Array)array21344, (Type_Array)empty_Type_Array, 1, 5, assign22474, assign22475, send183294, send183302, constant35578);
// on:
send183303 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12772);
method25300 = (Object)new_AST_Method_with((Type_Array)array21342, (Type_Array)array21343, 1, send183303);
((AST_Method)method25300)->info = (AST_Info)info3739;
symbol35911 = (Object)new_Type_Symbol_cached(L"scanFor:");
methodclosure25298 = (Object)new_Runtime_MethodClosure(method25300);
store_method((Type_Class)class4082, (Type_Symbol)symbol35911, (Runtime_MethodClosure)methodclosure25298);


// a PMetaclass P#SmallDictionary>>new
//new
// 	^self basicNew initialize
// basicNew
send183304 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string27865 = (Object)new_Type_String(L"new");
string27866 = (Object)new_Type_String(L"new\n\t^self basicNew initialize");
smallint20782 = (Object)new_Type_SmallInt(-1);
smallint20783 = (Object)new_Type_SmallInt(-1);
info3740 = (Object)new_AST_Info((Type_String)string27866,(Type_String)string27865, (Type_SmallInt)smallint20782, (Type_SmallInt)smallint20783);
((AST_Send)send183304)->info = (AST_Info)info3740;
// initialize
send183305 = (Object)new_AST_Send((Object)send183304, (Object)symbol35517, 0);
((AST_Send)send183305)->info = (AST_Info)info3740;
method25301 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183305);
((AST_Method)method25301)->info = (AST_Info)info3740;
methodclosure25299 = (Object)new_Runtime_MethodClosure(method25301);
store_method((Type_Class)metaclass4082, (Type_Symbol)symbol35612, (Runtime_MethodClosure)methodclosure25299);


// a PMetaclass P#SmallDictionary>>new:
//new: aSize 
// 	"Ignore the size"
// 
// 	^self basicNew initialize
localvariable26599 = (Object)new_AST_Variable_named(L"aSize");
array21347 = (Object)new_Type_Array_with(1, (Object)localvariable26599);
// basicNew
send183306 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string27867 = (Object)new_Type_String(L"new:");
string27868 = (Object)new_Type_String(L"new: aSize \n\t\"Ignore the size\"\n\n\t^self basicNew initialize");
smallint20784 = (Object)new_Type_SmallInt(-1);
smallint20785 = (Object)new_Type_SmallInt(-1);
info3741 = (Object)new_AST_Info((Type_String)string27868,(Type_String)string27867, (Type_SmallInt)smallint20784, (Type_SmallInt)smallint20785);
((AST_Send)send183306)->info = (AST_Info)info3741;
// initialize
send183307 = (Object)new_AST_Send((Object)send183306, (Object)symbol35517, 0);
((AST_Send)send183307)->info = (AST_Info)info3741;
method25302 = (Object)new_AST_Method_with((Type_Array)array21347, (Type_Array)empty_Type_Array, 1, send183307);
((AST_Method)method25302)->info = (AST_Info)info3741;
methodclosure25300 = (Object)new_Runtime_MethodClosure(method25302);
store_method((Type_Class)metaclass4082, (Type_Symbol)symbol35602, (Runtime_MethodClosure)methodclosure25300);


// a PMetaclass P#SmallDictionary>>pClassMethods
//pClassMethods
// 	self = SmallDictionary ifTrue: [
// 		^ #all.
// 	].
// 	^ super pClassMethods.
variable1584 = (Object)new_AST_Variable_named(L"return");
array21348 = (Object)new_Type_Array_with(1, (Object)variable1584);
// =
send183308 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)classreference4817);
string27869 = (Object)new_Type_String(L"pClassMethods");
string27870 = (Object)new_Type_String(L"pClassMethods\n\tself = SmallDictionary ifTrue: [\n\t\t^ #all.\n\t].\n\t^ super pClassMethods.");
smallint20786 = (Object)new_Type_SmallInt(-1);
smallint20787 = (Object)new_Type_SmallInt(-1);
info3742 = (Object)new_AST_Info((Type_String)string27870,(Type_String)string27869, (Type_SmallInt)smallint20786, (Type_SmallInt)smallint20787);
((AST_Send)send183308)->info = (AST_Info)info3742;
symbol35977 = (Object)new_Type_Symbol_cached(L"all");
constant35579 = (Object)new_AST_Constant((Object)symbol35977);
// escape:
send183309 = (Object)new_AST_Send((Object)variable1584, (Object)SMB_escape_, 1, (Object)constant35579);
((AST_Send)send183309)->info = (AST_Info)info3742;
block12773 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183309);
// ifTrue:
send183310 = (Object)new_AST_Send((Object)send183308, (Object)SMB_ifTrue_, 1, (Object)block12773);
((AST_Send)send183310)->info = (AST_Info)info3742;
symbol35665 = (Object)new_Type_Symbol_cached(L"pClassMethods");
super1969 = (Object)new_AST_Super((Object)symbol35665, 0);
block12774 = (Object)new_AST_Block_with((Type_Array)array21348, (Type_Array)empty_Type_Array, 1, 2, send183310, super1969);
// on:
send183311 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12774);
method25303 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183311);
((AST_Method)method25303)->info = (AST_Info)info3742;
methodclosure25301 = (Object)new_Runtime_MethodClosure(method25303);
store_method((Type_Class)metaclass4082, (Type_Symbol)symbol35665, (Runtime_MethodClosure)methodclosure25301);


// a PMetaclass P#SmallDictionary>>pMethods
//pMethods
// 	self = SmallDictionary ifTrue: [
// 		^ #all.
// 	].
// 	^ super pMethods.
variable1585 = (Object)new_AST_Variable_named(L"return");
array21349 = (Object)new_Type_Array_with(1, (Object)variable1585);
// =
send183312 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)classreference4817);
string27871 = (Object)new_Type_String(L"pMethods");
string27872 = (Object)new_Type_String(L"pMethods\n\tself = SmallDictionary ifTrue: [\n\t\t^ #all.\n\t].\n\t^ super pMethods.");
smallint20788 = (Object)new_Type_SmallInt(-1);
smallint20789 = (Object)new_Type_SmallInt(-1);
info3743 = (Object)new_AST_Info((Type_String)string27872,(Type_String)string27871, (Type_SmallInt)smallint20788, (Type_SmallInt)smallint20789);
((AST_Send)send183312)->info = (AST_Info)info3743;
constant35580 = (Object)new_AST_Constant((Object)symbol35977);
// escape:
send183313 = (Object)new_AST_Send((Object)variable1585, (Object)SMB_escape_, 1, (Object)constant35580);
((AST_Send)send183313)->info = (AST_Info)info3743;
block12775 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183313);
// ifTrue:
send183314 = (Object)new_AST_Send((Object)send183312, (Object)SMB_ifTrue_, 1, (Object)block12775);
((AST_Send)send183314)->info = (AST_Info)info3743;
symbol35621 = (Object)new_Type_Symbol_cached(L"pMethods");
super1970 = (Object)new_AST_Super((Object)symbol35621, 0);
block12776 = (Object)new_AST_Block_with((Type_Array)array21349, (Type_Array)empty_Type_Array, 1, 2, send183314, super1970);
// on:
send183315 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12776);
method25304 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183315);
((AST_Method)method25304)->info = (AST_Info)info3743;
methodclosure25302 = (Object)new_Runtime_MethodClosure(method25304);
store_method((Type_Class)metaclass4082, (Type_Symbol)symbol35621, (Runtime_MethodClosure)methodclosure25302);

// new
send183316 = (Object)new_AST_Send((Object)classreference4817, (Object)symbol35612, 0);
((AST_Send)send183316)->info = (AST_Info)info3678;
// at:put:
send183317 = (Object)new_AST_Send((Object)instancevariable6009, (Object)SMB_at_put_, 2, (Object)send182965, (Object)send183316);
((AST_Send)send183317)->info = (AST_Info)info3678;
block12777 = (Object)new_AST_Block_with((Type_Array)array21234, (Type_Array)empty_Type_Array, 1, 3, assign22435, send182964, send183317);
// on:
send183318 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12777);
method25305 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21233, 1, send183318);
((AST_Method)method25305)->info = (AST_Info)info3678;
symbol35672 = (Object)new_Type_Symbol_cached(L"bucket");
methodclosure25303 = (Object)new_Runtime_MethodClosure(method25305);
store_method((Type_Class)class4048, (Type_Symbol)symbol35672, (Runtime_MethodClosure)methodclosure25303);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable26600 = (Object)new_AST_Variable_named(L"aString");
localvariable26601 = (Object)new_AST_Variable_named(L"aSeparator");
array21350 = (Object)new_Type_Array_with(2, (Object)localvariable26600, (Object)localvariable26601);
super1971 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable26600);
assign22478 = (Object)new_AST_Assign((Object)instancevariable6008, (Object)localvariable26601);
// size
send183319 = (Object)new_AST_Send((Object)localvariable26600, (Object)SMB_size, 0);
string27873 = (Object)new_Type_String(L"on:separator:");
string27874 = (Object)new_Type_String(L"on: aString separator: aSeparator\n\tsuper on: aString.\n\tseparator := aSeparator.\n\tcache := Array new: (aString size + 1).");
smallint20790 = (Object)new_Type_SmallInt(-1);
smallint20791 = (Object)new_Type_SmallInt(-1);
info3744 = (Object)new_AST_Info((Type_String)string27874,(Type_String)string27873, (Type_SmallInt)smallint20790, (Type_SmallInt)smallint20791);
((AST_Send)send183319)->info = (AST_Info)info3744;
smallint20792 = (Object)new_Type_SmallInt(1);
constant35581 = (Object)new_AST_Constant((Object)smallint20792);
// +
send183320 = (Object)new_AST_Send((Object)send183319, (Object)SMB__plus, 1, (Object)constant35581);
((AST_Send)send183320)->info = (AST_Info)info3744;
// new:
send183321 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)send183320);
((AST_Send)send183321)->info = (AST_Info)info3744;
assign22479 = (Object)new_AST_Assign((Object)instancevariable6009, (Object)send183321);
method25306 = (Object)new_AST_Method_with((Type_Array)array21350, (Type_Array)empty_Type_Array, 4, super1971, assign22478, assign22479, Self);
((AST_Method)method25306)->info = (AST_Info)info3744;
symbol35666 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure25304 = (Object)new_Runtime_MethodClosure(method25306);
store_method((Type_Class)class4048, (Type_Symbol)symbol35666, (Runtime_MethodClosure)methodclosure25304);


// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
// match:
send183322 = (Object)new_AST_Send((Object)instancevariable6008, (Object)symbol35843, 1, (Object)Self);
string27875 = (Object)new_Type_String(L"skipWhitespace");
string27876 = (Object)new_Type_String(L"skipWhitespace\n\t^ separator match: self");
smallint20793 = (Object)new_Type_SmallInt(-1);
smallint20794 = (Object)new_Type_SmallInt(-1);
info3745 = (Object)new_AST_Info((Type_String)string27876,(Type_String)string27875, (Type_SmallInt)smallint20793, (Type_SmallInt)smallint20794);
((AST_Send)send183322)->info = (AST_Info)info3745;
method25307 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183322);
((AST_Method)method25307)->info = (AST_Info)info3745;
symbol35668 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
methodclosure25305 = (Object)new_Runtime_MethodClosure(method25307);
store_method((Type_Class)class4048, (Type_Symbol)symbol35668, (Runtime_MethodClosure)methodclosure25305);


// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable26602 = (Object)new_AST_Variable_named(L"parser");
array21351 = (Object)new_Type_Array_with(1, (Object)localvariable26602);
localvariable26603 = (Object)new_AST_Variable_named(L"result");
array21352 = (Object)new_Type_Array_with(1, (Object)localvariable26603);
symbol35863 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send183323 = (Object)new_AST_Send((Object)localvariable26602, (Object)symbol35863, 1, (Object)Self);
string27877 = (Object)new_Type_String(L"doMatch:");
string27878 = (Object)new_Type_String(L"doMatch: parser\n\t| result |\n\t\"First match then store position\"\n\tresult := parser performMatch: self.\n\t^ position @ result");
smallint20795 = (Object)new_Type_SmallInt(-1);
smallint20796 = (Object)new_Type_SmallInt(-1);
info3746 = (Object)new_AST_Info((Type_String)string27878,(Type_String)string27877, (Type_SmallInt)smallint20795, (Type_SmallInt)smallint20796);
((AST_Send)send183323)->info = (AST_Info)info3746;
assign22480 = (Object)new_AST_Assign((Object)localvariable26603, (Object)send183323);
symbol35978 = (Object)new_Type_Symbol_cached(L"@");
// @
send183324 = (Object)new_AST_Send((Object)instancevariable6006, (Object)symbol35978, 1, (Object)localvariable26603);
((AST_Send)send183324)->info = (AST_Info)info3746;
method25308 = (Object)new_AST_Method_with((Type_Array)array21351, (Type_Array)array21352, 2, assign22480, send183324);
((AST_Method)method25308)->info = (AST_Info)info3746;
symbol35674 = (Object)new_Type_Symbol_cached(L"doMatch:");
methodclosure25306 = (Object)new_Runtime_MethodClosure(method25308);
store_method((Type_Class)class4048, (Type_Symbol)symbol35674, (Runtime_MethodClosure)methodclosure25306);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable26604 = (Object)new_AST_Variable_named(L"parser");
array21353 = (Object)new_Type_Array_with(1, (Object)localvariable26604);
localvariable26605 = (Object)new_AST_Variable_named(L"result");
localvariable26606 = (Object)new_AST_Variable_named(L"doCache");
array21354 = (Object)new_Type_Array_with(2, (Object)localvariable26605, (Object)localvariable26606);
variable1586 = (Object)new_AST_Variable_named(L"return");
array21355 = (Object)new_Type_Array_with(1, (Object)variable1586);
assign22481 = (Object)new_AST_Assign((Object)localvariable26606, (Object)True_Const);
// bucket
send183325 = (Object)new_AST_Send((Object)Self, (Object)symbol35672, 0);
string27879 = (Object)new_Type_String(L"memoizeMatch:");
string27880 = (Object)new_Type_String(L"memoizeMatch: parser \n\t| result doCache |\n\tdoCache := true.\n\tdoCache ifTrue: [\n\t\tresult := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].\n\t\tposition := result x.\n\t\t^ result y.\n\t]\n\tifFalse: [ ^ (self doMatch: parser) y]");
smallint20797 = (Object)new_Type_SmallInt(-1);
smallint20798 = (Object)new_Type_SmallInt(-1);
info3747 = (Object)new_AST_Info((Type_String)string27880,(Type_String)string27879, (Type_SmallInt)smallint20797, (Type_SmallInt)smallint20798);
((AST_Send)send183325)->info = (AST_Info)info3747;
// doMatch:
send183326 = (Object)new_AST_Send((Object)Self, (Object)symbol35674, 1, (Object)localvariable26604);
((AST_Send)send183326)->info = (AST_Info)info3747;
block12778 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183326);
// at:ifAbsentPut:
send183327 = (Object)new_AST_Send((Object)send183325, (Object)symbol35892, 2, (Object)localvariable26604, (Object)block12778);
((AST_Send)send183327)->info = (AST_Info)info3747;
assign22482 = (Object)new_AST_Assign((Object)localvariable26605, (Object)send183327);
symbol35979 = (Object)new_Type_Symbol_cached(L"x");
// x
send183328 = (Object)new_AST_Send((Object)localvariable26605, (Object)symbol35979, 0);
((AST_Send)send183328)->info = (AST_Info)info3747;
assign22483 = (Object)new_AST_Assign((Object)instancevariable6006, (Object)send183328);
symbol35980 = (Object)new_Type_Symbol_cached(L"y");
// y
send183329 = (Object)new_AST_Send((Object)localvariable26605, (Object)symbol35980, 0);
((AST_Send)send183329)->info = (AST_Info)info3747;
// escape:
send183330 = (Object)new_AST_Send((Object)variable1586, (Object)SMB_escape_, 1, (Object)send183329);
((AST_Send)send183330)->info = (AST_Info)info3747;
block12779 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign22482, assign22483, send183330);
// doMatch:
send183331 = (Object)new_AST_Send((Object)Self, (Object)symbol35674, 1, (Object)localvariable26604);
((AST_Send)send183331)->info = (AST_Info)info3747;
// y
send183332 = (Object)new_AST_Send((Object)send183331, (Object)symbol35980, 0);
((AST_Send)send183332)->info = (AST_Info)info3747;
// escape:
send183333 = (Object)new_AST_Send((Object)variable1586, (Object)SMB_escape_, 1, (Object)send183332);
((AST_Send)send183333)->info = (AST_Info)info3747;
block12780 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183333);
// ifTrue:ifFalse:
send183334 = (Object)new_AST_Send((Object)localvariable26606, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12779, (Object)block12780);
((AST_Send)send183334)->info = (AST_Info)info3747;
block12781 = (Object)new_AST_Block_with((Type_Array)array21355, (Type_Array)empty_Type_Array, 1, 3, assign22481, send183334, Self);
// on:
send183335 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12781);
method25309 = (Object)new_AST_Method_with((Type_Array)array21353, (Type_Array)array21354, 1, send183335);
((AST_Method)method25309)->info = (AST_Info)info3747;
symbol35673 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
methodclosure25307 = (Object)new_Runtime_MethodClosure(method25309);
store_method((Type_Class)class4048, (Type_Symbol)symbol35673, (Runtime_MethodClosure)methodclosure25307);


// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable26607 = (Object)new_AST_Variable_named(L"otherString");
array21356 = (Object)new_Type_Array_with(1, (Object)localvariable26607);
// beginsWith:
send183336 = (Object)new_AST_Send((Object)Self, (Object)symbol35667, 1, (Object)localvariable26607);
string27881 = (Object)new_Type_String(L"scan:");
string27882 = (Object)new_Type_String(L"scan: otherString\n\t\" Maybe we should use other objects to mark... \"\n\t^ (self beginsWith: otherString)\n\t\tifTrue: [ otherString ]\n\t\tifFalse: [ nil ]");
smallint20799 = (Object)new_Type_SmallInt(-1);
smallint20800 = (Object)new_Type_SmallInt(-1);
info3748 = (Object)new_AST_Info((Type_String)string27882,(Type_String)string27881, (Type_SmallInt)smallint20799, (Type_SmallInt)smallint20800);
((AST_Send)send183336)->info = (AST_Info)info3748;
block12782 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable26607);
block12783 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send183337 = (Object)new_AST_Send((Object)send183336, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12782, (Object)block12783);
((AST_Send)send183337)->info = (AST_Info)info3748;
method25310 = (Object)new_AST_Method_with((Type_Array)array21356, (Type_Array)empty_Type_Array, 1, send183337);
((AST_Method)method25310)->info = (AST_Info)info3748;
methodclosure25308 = (Object)new_Runtime_MethodClosure(method25310);
store_method((Type_Class)class4048, (Type_Symbol)symbol35669, (Runtime_MethodClosure)methodclosure25308);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable26608 = (Object)new_AST_Variable_named(L"subCollection");
array21357 = (Object)new_Type_Array_with(1, (Object)localvariable26608);
localvariable26609 = (Object)new_AST_Variable_named(L"pattern");
localvariable26610 = (Object)new_AST_Variable_named(L"startMatch");
array21358 = (Object)new_Type_Array_with(2, (Object)localvariable26609, (Object)localvariable26610);
variable1587 = (Object)new_AST_Variable_named(L"return");
array21359 = (Object)new_Type_Array_with(1, (Object)variable1587);
symbol35981 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send183338 = (Object)new_AST_Send((Object)localvariable26608, (Object)symbol35981, 0);
string27883 = (Object)new_Type_String(L"beginsWith:");
string27884 = (Object)new_Type_String(L"beginsWith: subCollection \n\t| pattern startMatch |\n\tpattern := subCollection readStream.\n\tstartMatch := nil.\n\t[ pattern atEnd ] whileFalse: \n\t\t[ self atEnd ifTrue: [ ^ false ].\n\t\tself next ~= pattern next \n\t\t\tifTrue: [ ^ false ] ].\n\t^ true");
smallint20801 = (Object)new_Type_SmallInt(-1);
smallint20802 = (Object)new_Type_SmallInt(-1);
info3749 = (Object)new_AST_Info((Type_String)string27884,(Type_String)string27883, (Type_SmallInt)smallint20801, (Type_SmallInt)smallint20802);
((AST_Send)send183338)->info = (AST_Info)info3749;
assign22484 = (Object)new_AST_Assign((Object)localvariable26609, (Object)send183338);
assign22485 = (Object)new_AST_Assign((Object)localvariable26610, (Object)Nil_Const);
// atEnd
send183339 = (Object)new_AST_Send((Object)localvariable26609, (Object)SMB_atEnd, 0);
((AST_Send)send183339)->info = (AST_Info)info3749;
block12784 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183339);
// atEnd
send183340 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
((AST_Send)send183340)->info = (AST_Info)info3749;
// escape:
send183341 = (Object)new_AST_Send((Object)variable1587, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183341)->info = (AST_Info)info3749;
block12785 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183341);
// ifTrue:
send183342 = (Object)new_AST_Send((Object)send183340, (Object)SMB_ifTrue_, 1, (Object)block12785);
((AST_Send)send183342)->info = (AST_Info)info3749;
// next
send183343 = (Object)new_AST_Send((Object)Self, (Object)symbol35950, 0);
((AST_Send)send183343)->info = (AST_Info)info3749;
symbol35521 = (Object)new_Type_Symbol_cached(L"~=");
// next
send183344 = (Object)new_AST_Send((Object)localvariable26609, (Object)symbol35950, 0);
((AST_Send)send183344)->info = (AST_Info)info3749;
// ~=
send183345 = (Object)new_AST_Send((Object)send183343, (Object)symbol35521, 1, (Object)send183344);
((AST_Send)send183345)->info = (AST_Info)info3749;
// escape:
send183346 = (Object)new_AST_Send((Object)variable1587, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send183346)->info = (AST_Info)info3749;
block12786 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183346);
// ifTrue:
send183347 = (Object)new_AST_Send((Object)send183345, (Object)SMB_ifTrue_, 1, (Object)block12786);
((AST_Send)send183347)->info = (AST_Info)info3749;
block12787 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send183342, send183347);
// whileFalse:
send183348 = (Object)new_AST_Send((Object)block12784, (Object)SMB_whileFalse_, 1, (Object)block12787);
((AST_Send)send183348)->info = (AST_Info)info3749;
block12788 = (Object)new_AST_Block_with((Type_Array)array21359, (Type_Array)empty_Type_Array, 1, 4, assign22484, assign22485, send183348, True_Const);
// on:
send183349 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12788);
method25311 = (Object)new_AST_Method_with((Type_Array)array21357, (Type_Array)array21358, 1, send183349);
((AST_Method)method25311)->info = (AST_Info)info3749;
methodclosure25309 = (Object)new_Runtime_MethodClosure(method25311);
store_method((Type_Class)class4048, (Type_Symbol)symbol35667, (Runtime_MethodClosure)methodclosure25309);


// a PMetaclass P#PEGStringScanner>>on:
//on: aString
// 	^ self on: aString separator: PEGParser separator.
localvariable26611 = (Object)new_AST_Variable_named(L"aString");
array21360 = (Object)new_Type_Array_with(1, (Object)localvariable26611);
classreference4820 = (Object)new_Organization_ClassReference((Type_Class)class4049);

// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable26612 = (Object)new_AST_Variable_named(L"aBlock");
array21361 = (Object)new_Type_Array_with(1, (Object)localvariable26612);
assign22486 = (Object)new_AST_Assign((Object)instancevariable6013, (Object)localvariable26612);
method25312 = (Object)new_AST_Method_with((Type_Array)array21361, (Type_Array)empty_Type_Array, 2, assign22486, Self);
string27885 = (Object)new_Type_String(L"semantics:");
string27886 = (Object)new_Type_String(L"semantics: aBlock\n\tsemantics := aBlock");
smallint20803 = (Object)new_Type_SmallInt(-1);
smallint20804 = (Object)new_Type_SmallInt(-1);
info3750 = (Object)new_AST_Info((Type_String)string27886,(Type_String)string27885, (Type_SmallInt)smallint20803, (Type_SmallInt)smallint20804);
((AST_Method)method25312)->info = (AST_Info)info3750;
symbol35861 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure25310 = (Object)new_Runtime_MethodClosure(method25312);
store_method((Type_Class)class4049, (Type_Symbol)symbol35861, (Runtime_MethodClosure)methodclosure25310);


// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable26613 = (Object)new_AST_Variable_named(L"input");
array21362 = (Object)new_Type_Array_with(1, (Object)localvariable26613);
localvariable26614 = (Object)new_AST_Variable_named(L"match");
array21363 = (Object)new_Type_Array_with(1, (Object)localvariable26614);
variable1588 = (Object)new_AST_Variable_named(L"return");
array21364 = (Object)new_Type_Array_with(1, (Object)variable1588);
// match:
send183350 = (Object)new_AST_Send((Object)instancevariable6012, (Object)symbol35843, 1, (Object)localvariable26613);
string27887 = (Object)new_Type_String(L"performMatch:");
string27888 = (Object)new_Type_String(L"performMatch: input\n\t| match |\n\tmatch := expression match: input.\n\t^ match ifNil: [ match ]\n\t\tifNotNil: [\n\t\t\tsemantics ifNil: [ ^ match ].\n\t\t\tsemantics value: match ]");
smallint20805 = (Object)new_Type_SmallInt(-1);
smallint20806 = (Object)new_Type_SmallInt(-1);
info3751 = (Object)new_AST_Info((Type_String)string27888,(Type_String)string27887, (Type_SmallInt)smallint20805, (Type_SmallInt)smallint20806);
((AST_Send)send183350)->info = (AST_Info)info3751;
assign22487 = (Object)new_AST_Assign((Object)localvariable26614, (Object)send183350);
symbol35982 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block12789 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable26614);
// escape:
send183351 = (Object)new_AST_Send((Object)variable1588, (Object)SMB_escape_, 1, (Object)localvariable26614);
((AST_Send)send183351)->info = (AST_Info)info3751;
block12790 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send183351);
// ifNil:
send183352 = (Object)new_AST_Send((Object)instancevariable6013, (Object)symbol35518, 1, (Object)block12790);
((AST_Send)send183352)->info = (AST_Info)info3751;
// value:
send183353 = (Object)new_AST_Send((Object)instancevariable6013, (Object)SMB_value_, 1, (Object)localvariable26614);
((AST_Send)send183353)->info = (AST_Info)info3751;
block12791 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send183352, send183353);
// ifNil:ifNotNil:
send183354 = (Object)new_AST_Send((Object)localvariable26614, (Object)symbol35982, 2, (Object)block12789, (Object)block12791);
((AST_Send)send183354)->info = (AST_Info)info3751;
block12792 = (Object)new_AST_Block_with((Type_Array)array21364, (Type_Array)empty_Type_Array, 1, 2, assign22487, send183354);
// on:
send183355 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12792);
method25313 = (Object)new_AST_Method_with((Type_Array)array21362, (Type_Array)array21363, 1, send183355);
((AST_Method)method25313)->info = (AST_Info)info3751;
methodclosure25311 = (Object)new_Runtime_MethodClosure(method25313);
store_method((Type_Class)class4049, (Type_Symbol)symbol35863, (Runtime_MethodClosure)methodclosure25311);


// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable26615 = (Object)new_AST_Variable_named(L"theExpression");
array21365 = (Object)new_Type_Array_with(1, (Object)localvariable26615);
// asPEG
send183356 = (Object)new_AST_Send((Object)localvariable26615, (Object)symbol35639, 0);
string27889 = (Object)new_Type_String(L"<=");
string27890 = (Object)new_Type_String(L"<= theExpression\n\texpression := theExpression asPEG");
smallint20807 = (Object)new_Type_SmallInt(-1);
smallint20808 = (Object)new_Type_SmallInt(-1);
info3752 = (Object)new_AST_Info((Type_String)string27890,(Type_String)string27889, (Type_SmallInt)smallint20807, (Type_SmallInt)smallint20808);
((AST_Send)send183356)->info = (AST_Info)info3752;
assign22488 = (Object)new_AST_Assign((Object)instancevariable6012, (Object)send183356);
method25314 = (Object)new_AST_Method_with((Type_Array)array21365, (Type_Array)empty_Type_Array, 2, assign22488, Self);
((AST_Method)method25314)->info = (AST_Info)info3752;
methodclosure25312 = (Object)new_Runtime_MethodClosure(method25314);
store_method((Type_Class)class4049, (Type_Symbol)symbol35648, (Runtime_MethodClosure)methodclosure25312);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super1972 = (Object)new_AST_Super((Object)symbol35517, 0);
// class
send183357 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
string27891 = (Object)new_Type_String(L"initialize");
string27892 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tseparator := self class separator");
smallint20809 = (Object)new_Type_SmallInt(-1);
smallint20810 = (Object)new_Type_SmallInt(-1);
info3753 = (Object)new_AST_Info((Type_String)string27892,(Type_String)string27891, (Type_SmallInt)smallint20809, (Type_SmallInt)smallint20810);
((AST_Send)send183357)->info = (AST_Info)info3753;
symbol35854 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send183358 = (Object)new_AST_Send((Object)send183357, (Object)symbol35854, 0);
((AST_Send)send183358)->info = (AST_Info)info3753;
assign22489 = (Object)new_AST_Assign((Object)instancevariable6015, (Object)send183358);
method25315 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1972, assign22489, Self);
((AST_Method)method25315)->info = (AST_Info)info3753;
methodclosure25313 = (Object)new_Runtime_MethodClosure(method25315);
store_method((Type_Class)class4049, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25313);


// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable26616 = (Object)new_AST_Variable_named(L"aSeparator");
array21366 = (Object)new_Type_Array_with(1, (Object)localvariable26616);
assign22490 = (Object)new_AST_Assign((Object)instancevariable6015, (Object)localvariable26616);
method25316 = (Object)new_AST_Method_with((Type_Array)array21366, (Type_Array)empty_Type_Array, 2, assign22490, Self);
string27893 = (Object)new_Type_String(L"separator:");
string27894 = (Object)new_Type_String(L"separator: aSeparator\n\tseparator := aSeparator");
smallint20811 = (Object)new_Type_SmallInt(-1);
smallint20812 = (Object)new_Type_SmallInt(-1);
info3754 = (Object)new_AST_Info((Type_String)string27894,(Type_String)string27893, (Type_SmallInt)smallint20811, (Type_SmallInt)smallint20812);
((AST_Method)method25316)->info = (AST_Info)info3754;
symbol35860 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure25314 = (Object)new_Runtime_MethodClosure(method25316);
store_method((Type_Class)class4049, (Type_Symbol)symbol35860, (Runtime_MethodClosure)methodclosure25314);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable26617 = (Object)new_AST_Variable_named(L"input");
array21367 = (Object)new_Type_Array_with(1, (Object)localvariable26617);
localvariable26618 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable26619 = (Object)new_AST_Variable_named(L"result");
array21368 = (Object)new_Type_Array_with(2, (Object)localvariable26618, (Object)localvariable26619);
// on:separator:
send183359 = (Object)new_AST_Send((Object)classreference4816, (Object)symbol35666, 2, (Object)localvariable26617, (Object)instancevariable6015);
string27895 = (Object)new_Type_String(L"parse:");
string27896 = (Object)new_Type_String(L"parse: input\n\t| memoizingString result |\n\tmemoizingString := PEGStringScanner on: input separator: separator.\n\tresult := self match: memoizingString.\n\t\n\t^ result");
smallint20813 = (Object)new_Type_SmallInt(-1);
smallint20814 = (Object)new_Type_SmallInt(-1);
info3755 = (Object)new_AST_Info((Type_String)string27896,(Type_String)string27895, (Type_SmallInt)smallint20813, (Type_SmallInt)smallint20814);
((AST_Send)send183359)->info = (AST_Info)info3755;
assign22491 = (Object)new_AST_Assign((Object)localvariable26618, (Object)send183359);
// match:
send183360 = (Object)new_AST_Send((Object)Self, (Object)symbol35843, 1, (Object)localvariable26618);
((AST_Send)send183360)->info = (AST_Info)info3755;
assign22492 = (Object)new_AST_Assign((Object)localvariable26619, (Object)send183360);
method25317 = (Object)new_AST_Method_with((Type_Array)array21367, (Type_Array)array21368, 3, assign22491, assign22492, localvariable26619);
((AST_Method)method25317)->info = (AST_Info)info3755;
symbol35862 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure25315 = (Object)new_Runtime_MethodClosure(method25317);
store_method((Type_Class)class4049, (Type_Symbol)symbol35862, (Runtime_MethodClosure)methodclosure25315);


// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable26620 = (Object)new_AST_Variable_named(L"input");
array21369 = (Object)new_Type_Array_with(1, (Object)localvariable26620);
localvariable26621 = (Object)new_AST_Variable_named(L"result");
array21370 = (Object)new_Type_Array_with(1, (Object)localvariable26621);
// memoizeMatch:
send183361 = (Object)new_AST_Send((Object)localvariable26620, (Object)symbol35673, 1, (Object)Self);
string27897 = (Object)new_Type_String(L"match:");
string27898 = (Object)new_Type_String(L"match: input\n \t\"| result |\n\tself debug: input.\n\tresult :=\"\n\t| result |\n\tresult := input memoizeMatch: self.\n\t\"self debugEnd: input.\"\n\t^ result");
smallint20815 = (Object)new_Type_SmallInt(-1);
smallint20816 = (Object)new_Type_SmallInt(-1);
info3756 = (Object)new_AST_Info((Type_String)string27898,(Type_String)string27897, (Type_SmallInt)smallint20815, (Type_SmallInt)smallint20816);
((AST_Send)send183361)->info = (AST_Info)info3756;
assign22493 = (Object)new_AST_Assign((Object)localvariable26621, (Object)send183361);
method25318 = (Object)new_AST_Method_with((Type_Array)array21369, (Type_Array)array21370, 2, assign22493, localvariable26621);
((AST_Method)method25318)->info = (AST_Info)info3756;
methodclosure25316 = (Object)new_Runtime_MethodClosure(method25318);
store_method((Type_Class)class4049, (Type_Symbol)symbol35843, (Runtime_MethodClosure)methodclosure25316);


// a PMetaclass P#PEGParser>>basicSeparator
//basicSeparator
// 	separator ifNil: [
// 		separator := self basicSeparators strongTimes.
// 	].
// 	^ separator
symbol35857 = (Object)new_Type_Symbol_cached(L"basicSeparators");
// basicSeparators
send183362 = (Object)new_AST_Send((Object)Self, (Object)symbol35857, 0);
string27899 = (Object)new_Type_String(L"basicSeparator");
string27900 = (Object)new_Type_String(L"basicSeparator\n\tseparator ifNil: [\n\t\tseparator := self basicSeparators strongTimes.\n\t].\n\t^ separator");
smallint20817 = (Object)new_Type_SmallInt(-1);
smallint20818 = (Object)new_Type_SmallInt(-1);
info3757 = (Object)new_AST_Info((Type_String)string27900,(Type_String)string27899, (Type_SmallInt)smallint20817, (Type_SmallInt)smallint20818);
((AST_Send)send183362)->info = (AST_Info)info3757;
symbol35839 = (Object)new_Type_Symbol_cached(L"strongTimes");
// strongTimes
send183363 = (Object)new_AST_Send((Object)send183362, (Object)symbol35839, 0);
((AST_Send)send183363)->info = (AST_Info)info3757;
assign22494 = (Object)new_AST_Assign((Object)instancevariable6011, (Object)send183363);
block12793 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign22494);
// ifNil:
send183364 = (Object)new_AST_Send((Object)instancevariable6011, (Object)symbol35518, 1, (Object)block12793);
((AST_Send)send183364)->info = (AST_Info)info3757;
method25319 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send183364, instancevariable6011);
((AST_Method)method25319)->info = (AST_Info)info3757;
symbol35859 = (Object)new_Type_Symbol_cached(L"basicSeparator");
methodclosure25317 = (Object)new_Runtime_MethodClosure(method25319);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35859, (Runtime_MethodClosure)methodclosure25317);


// a PMetaclass P#PEGParser>>named:parsing:semantics:
//named: theName parsing: expression semantics: semantics
// 	^ (self named: theName parsing: expression) semantics: semantics
localvariable26622 = (Object)new_AST_Variable_named(L"theName");
localvariable26623 = (Object)new_AST_Variable_named(L"expression");
localvariable26624 = (Object)new_AST_Variable_named(L"semantics");
array21371 = (Object)new_Type_Array_with(3, (Object)localvariable26622, (Object)localvariable26623, (Object)localvariable26624);
symbol35858 = (Object)new_Type_Symbol_cached(L"named:parsing:");
// named:parsing:
send183365 = (Object)new_AST_Send((Object)Self, (Object)symbol35858, 2, (Object)localvariable26622, (Object)localvariable26623);
string27901 = (Object)new_Type_String(L"named:parsing:semantics:");
string27902 = (Object)new_Type_String(L"named: theName parsing: expression semantics: semantics\n\t^ (self named: theName parsing: expression) semantics: semantics");
smallint20819 = (Object)new_Type_SmallInt(-1);
smallint20820 = (Object)new_Type_SmallInt(-1);
info3758 = (Object)new_AST_Info((Type_String)string27902,(Type_String)string27901, (Type_SmallInt)smallint20819, (Type_SmallInt)smallint20820);
((AST_Send)send183365)->info = (AST_Info)info3758;
// semantics:
send183366 = (Object)new_AST_Send((Object)send183365, (Object)symbol35861, 1, (Object)localvariable26624);
((AST_Send)send183366)->info = (AST_Info)info3758;
method25320 = (Object)new_AST_Method_with((Type_Array)array21371, (Type_Array)empty_Type_Array, 1, send183366);
((AST_Method)method25320)->info = (AST_Info)info3758;
symbol35856 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
methodclosure25318 = (Object)new_Runtime_MethodClosure(method25320);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35856, (Runtime_MethodClosure)methodclosure25318);


// a PMetaclass P#PEGParser>>separator
//separator
// 	^ PEGParser basicSeparator
// basicSeparator
send183367 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35859, 0);
string27903 = (Object)new_Type_String(L"separator");
string27904 = (Object)new_Type_String(L"separator\n\t^ PEGParser basicSeparator");
smallint20821 = (Object)new_Type_SmallInt(-1);
smallint20822 = (Object)new_Type_SmallInt(-1);
info3759 = (Object)new_AST_Info((Type_String)string27904,(Type_String)string27903, (Type_SmallInt)smallint20821, (Type_SmallInt)smallint20822);
((AST_Send)send183367)->info = (AST_Info)info3759;
method25321 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183367);
((AST_Method)method25321)->info = (AST_Info)info3759;
methodclosure25319 = (Object)new_Runtime_MethodClosure(method25321);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35854, (Runtime_MethodClosure)methodclosure25319);


// a PMetaclass P#PEGParser>>named:parsing:
//named: theName parsing: expression
// 	^ (self named: theName) <= expression
localvariable26625 = (Object)new_AST_Variable_named(L"theName");
localvariable26626 = (Object)new_AST_Variable_named(L"expression");
array21372 = (Object)new_Type_Array_with(2, (Object)localvariable26625, (Object)localvariable26626);
// named:
send183368 = (Object)new_AST_Send((Object)Self, (Object)symbol35855, 1, (Object)localvariable26625);
string27905 = (Object)new_Type_String(L"named:parsing:");
string27906 = (Object)new_Type_String(L"named: theName parsing: expression\n\t^ (self named: theName) <= expression");
smallint20823 = (Object)new_Type_SmallInt(-1);
smallint20824 = (Object)new_Type_SmallInt(-1);
info3760 = (Object)new_AST_Info((Type_String)string27906,(Type_String)string27905, (Type_SmallInt)smallint20823, (Type_SmallInt)smallint20824);
((AST_Send)send183368)->info = (AST_Info)info3760;
// <=
send183369 = (Object)new_AST_Send((Object)send183368, (Object)symbol35648, 1, (Object)localvariable26626);
((AST_Send)send183369)->info = (AST_Info)info3760;
method25322 = (Object)new_AST_Method_with((Type_Array)array21372, (Type_Array)empty_Type_Array, 1, send183369);
((AST_Method)method25322)->info = (AST_Info)info3760;
methodclosure25320 = (Object)new_Runtime_MethodClosure(method25322);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35858, (Runtime_MethodClosure)methodclosure25320);


// a PMetaclass P#PEGParser>>basicSeparators
//basicSeparators
// 	separators ifNil: [ separators := (Character space asPEG) | Character tab <= Character cr ].
// 	1*2.
// 	separators isNil.
// 	^ separators  " Separators := nil "
// space
send183370 = (Object)new_AST_Send((Object)classreference4799, (Object)symbol35654, 0);
string27907 = (Object)new_Type_String(L"basicSeparators");
string27908 = (Object)new_Type_String(L"basicSeparators\n\tseparators ifNil: [ separators := (Character space asPEG) | Character tab <= Character cr ].\n\t1*2.\n\tseparators isNil.\n\t^ separators  \" Separators := nil \"");
smallint20825 = (Object)new_Type_SmallInt(-1);
smallint20826 = (Object)new_Type_SmallInt(-1);
info3761 = (Object)new_AST_Info((Type_String)string27908,(Type_String)string27907, (Type_SmallInt)smallint20825, (Type_SmallInt)smallint20826);
((AST_Send)send183370)->info = (AST_Info)info3761;
// asPEG
send183371 = (Object)new_AST_Send((Object)send183370, (Object)symbol35639, 0);
((AST_Send)send183371)->info = (AST_Info)info3761;
// tab
send183372 = (Object)new_AST_Send((Object)classreference4799, (Object)symbol35656, 0);
((AST_Send)send183372)->info = (AST_Info)info3761;
// |
send183373 = (Object)new_AST_Send((Object)send183371, (Object)SMB__or, 1, (Object)send183372);
((AST_Send)send183373)->info = (AST_Info)info3761;
// cr
send183374 = (Object)new_AST_Send((Object)classreference4799, (Object)symbol35655, 0);
((AST_Send)send183374)->info = (AST_Info)info3761;
// <=
send183375 = (Object)new_AST_Send((Object)send183373, (Object)symbol35648, 1, (Object)send183374);
((AST_Send)send183375)->info = (AST_Info)info3761;
assign22495 = (Object)new_AST_Assign((Object)instancevariable6010, (Object)send183375);
block12794 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign22495);
// ifNil:
send183376 = (Object)new_AST_Send((Object)instancevariable6010, (Object)symbol35518, 1, (Object)block12794);
((AST_Send)send183376)->info = (AST_Info)info3761;
smallint20827 = (Object)new_Type_SmallInt(1);
constant35582 = (Object)new_AST_Constant((Object)smallint20827);
smallint20828 = (Object)new_Type_SmallInt(2);
constant35583 = (Object)new_AST_Constant((Object)smallint20828);
// *
send183377 = (Object)new_AST_Send((Object)constant35582, (Object)SMB__times, 1, (Object)constant35583);
((AST_Send)send183377)->info = (AST_Info)info3761;
// isNil
send183378 = (Object)new_AST_Send((Object)instancevariable6010, (Object)SMB_isNil, 0);
((AST_Send)send183378)->info = (AST_Info)info3761;
method25323 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send183376, send183377, send183378, instancevariable6010);
((AST_Method)method25323)->info = (AST_Info)info3761;
methodclosure25321 = (Object)new_Runtime_MethodClosure(method25323);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35857, (Runtime_MethodClosure)methodclosure25321);


// a PMetaclass P#PEGParser>>separators
//separators
// 	^ PEGParser basicSeparators
// basicSeparators
send183379 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35857, 0);
string27909 = (Object)new_Type_String(L"separators");
string27910 = (Object)new_Type_String(L"separators\n\t^ PEGParser basicSeparators");
smallint20829 = (Object)new_Type_SmallInt(-1);
smallint20830 = (Object)new_Type_SmallInt(-1);
info3762 = (Object)new_AST_Info((Type_String)string27910,(Type_String)string27909, (Type_SmallInt)smallint20829, (Type_SmallInt)smallint20830);
((AST_Send)send183379)->info = (AST_Info)info3762;
method25324 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183379);
((AST_Method)method25324)->info = (AST_Info)info3762;
symbol35853 = (Object)new_Type_Symbol_cached(L"separators");
methodclosure25322 = (Object)new_Runtime_MethodClosure(method25324);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35853, (Runtime_MethodClosure)methodclosure25322);


// a PMetaclass P#PEGParser>>named:
//named: theName
// 	^ self new name: theName
localvariable26627 = (Object)new_AST_Variable_named(L"theName");
array21373 = (Object)new_Type_Array_with(1, (Object)localvariable26627);
// new
send183380 = (Object)new_AST_Send((Object)Self, (Object)symbol35612, 0);
string27911 = (Object)new_Type_String(L"named:");
string27912 = (Object)new_Type_String(L"named: theName\n\t^ self new name: theName");
smallint20831 = (Object)new_Type_SmallInt(-1);
smallint20832 = (Object)new_Type_SmallInt(-1);
info3763 = (Object)new_AST_Info((Type_String)string27912,(Type_String)string27911, (Type_SmallInt)smallint20831, (Type_SmallInt)smallint20832);
((AST_Send)send183380)->info = (AST_Info)info3763;
// name:
send183381 = (Object)new_AST_Send((Object)send183380, (Object)symbol35721, 1, (Object)localvariable26627);
((AST_Send)send183381)->info = (AST_Info)info3763;
method25325 = (Object)new_AST_Method_with((Type_Array)array21373, (Type_Array)empty_Type_Array, 1, send183381);
((AST_Method)method25325)->info = (AST_Info)info3763;
methodclosure25323 = (Object)new_Runtime_MethodClosure(method25325);
store_method((Type_Class)metaclass4049, (Type_Symbol)symbol35855, (Runtime_MethodClosure)methodclosure25323);

// separator
send183382 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35854, 0);
string27913 = (Object)new_Type_String(L"on:");
string27914 = (Object)new_Type_String(L"on: aString\n\t^ self on: aString separator: PEGParser separator.");
smallint20833 = (Object)new_Type_SmallInt(-1);
smallint20834 = (Object)new_Type_SmallInt(-1);
info3764 = (Object)new_AST_Info((Type_String)string27914,(Type_String)string27913, (Type_SmallInt)smallint20833, (Type_SmallInt)smallint20834);
((AST_Send)send183382)->info = (AST_Info)info3764;
// on:separator:
send183383 = (Object)new_AST_Send((Object)Self, (Object)symbol35666, 2, (Object)localvariable26611, (Object)send183382);
((AST_Send)send183383)->info = (AST_Info)info3764;
method25326 = (Object)new_AST_Method_with((Type_Array)array21360, (Type_Array)empty_Type_Array, 1, send183383);
((AST_Method)method25326)->info = (AST_Info)info3764;
methodclosure25324 = (Object)new_Runtime_MethodClosure(method25326);
store_method((Type_Class)metaclass4048, (Type_Symbol)SMB_on_, (Runtime_MethodClosure)methodclosure25324);


// a PMetaclass P#PEGStringScanner>>pMethods
//pMethods 
// 	^ #all.
constant35584 = (Object)new_AST_Constant((Object)symbol35977);
method25327 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant35584);
string27915 = (Object)new_Type_String(L"pMethods");
string27916 = (Object)new_Type_String(L"pMethods \n\t^ #all.");
smallint20835 = (Object)new_Type_SmallInt(-1);
smallint20836 = (Object)new_Type_SmallInt(-1);
info3765 = (Object)new_AST_Info((Type_String)string27916,(Type_String)string27915, (Type_SmallInt)smallint20835, (Type_SmallInt)smallint20836);
((AST_Method)method25327)->info = (AST_Info)info3765;
methodclosure25325 = (Object)new_Runtime_MethodClosure(method25327);
store_method((Type_Class)metaclass4048, (Type_Symbol)symbol35621, (Runtime_MethodClosure)methodclosure25325);


// a PMetaclass P#PEGStringScanner>>pClassMethods
//pClassMethods 
// 	^ #all.
constant35585 = (Object)new_AST_Constant((Object)symbol35977);
method25328 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant35585);
string27917 = (Object)new_Type_String(L"pClassMethods");
string27918 = (Object)new_Type_String(L"pClassMethods \n\t^ #all.");
smallint20837 = (Object)new_Type_SmallInt(-1);
smallint20838 = (Object)new_Type_SmallInt(-1);
info3766 = (Object)new_AST_Info((Type_String)string27918,(Type_String)string27917, (Type_SmallInt)smallint20837, (Type_SmallInt)smallint20838);
((AST_Method)method25328)->info = (AST_Info)info3766;
methodclosure25326 = (Object)new_Runtime_MethodClosure(method25328);
store_method((Type_Class)metaclass4048, (Type_Symbol)symbol35665, (Runtime_MethodClosure)methodclosure25326);


// a PMetaclass P#PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	^ self basicNew on: aString separator: aSeparator
localvariable26628 = (Object)new_AST_Variable_named(L"aString");
localvariable26629 = (Object)new_AST_Variable_named(L"aSeparator");
array21374 = (Object)new_Type_Array_with(2, (Object)localvariable26628, (Object)localvariable26629);
// basicNew
send183384 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string27919 = (Object)new_Type_String(L"on:separator:");
string27920 = (Object)new_Type_String(L"on: aString separator: aSeparator\n\t^ self basicNew on: aString separator: aSeparator");
smallint20839 = (Object)new_Type_SmallInt(-1);
smallint20840 = (Object)new_Type_SmallInt(-1);
info3767 = (Object)new_AST_Info((Type_String)string27920,(Type_String)string27919, (Type_SmallInt)smallint20839, (Type_SmallInt)smallint20840);
((AST_Send)send183384)->info = (AST_Info)info3767;
// on:separator:
send183385 = (Object)new_AST_Send((Object)send183384, (Object)symbol35666, 2, (Object)localvariable26628, (Object)localvariable26629);
((AST_Send)send183385)->info = (AST_Info)info3767;
method25329 = (Object)new_AST_Method_with((Type_Array)array21374, (Type_Array)empty_Type_Array, 1, send183385);
((AST_Method)method25329)->info = (AST_Info)info3767;
methodclosure25327 = (Object)new_Runtime_MethodClosure(method25329);
store_method((Type_Class)metaclass4048, (Type_Symbol)symbol35666, (Runtime_MethodClosure)methodclosure25327);

string27921 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant35586 = (Object)new_AST_Constant((Object)string27921);
// on:
send183386 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35586);
((AST_Send)send183386)->info = (AST_Info)info3677;
assign22496 = (Object)new_AST_Assign((Object)localvariable26476, (Object)send183386);
// match:
send183387 = (Object)new_AST_Send((Object)localvariable26475, (Object)symbol35843, 1, (Object)localvariable26476);
((AST_Send)send183387)->info = (AST_Info)info3677;
assign22497 = (Object)new_AST_Assign((Object)localvariable26477, (Object)send183387);
// class
send183388 = (Object)new_AST_Send((Object)localvariable26477, (Object)SMB_class, 0);
((AST_Send)send183388)->info = (AST_Info)info3677;
symbol35983 = (Object)new_Type_Symbol_cached(L"should");
// should
send183389 = (Object)new_AST_Send((Object)send183388, (Object)symbol35983, 0);
((AST_Send)send183389)->info = (AST_Info)info3677;
classreference4821 = (Object)new_Organization_ClassReference((Type_Class)class4071);

// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable26630 = (Object)new_AST_Variable_named(L"anObject");
array21375 = (Object)new_Type_Array_with(1, (Object)localvariable26630);
assign22498 = (Object)new_AST_Assign((Object)instancevariable6035, (Object)localvariable26630);
method25330 = (Object)new_AST_Method_with((Type_Array)array21375, (Type_Array)empty_Type_Array, 2, assign22498, Self);
string27922 = (Object)new_Type_String(L"expression:");
string27923 = (Object)new_Type_String(L"expression: anObject\n\texpression := anObject");
smallint20841 = (Object)new_Type_SmallInt(-1);
smallint20842 = (Object)new_Type_SmallInt(-1);
info3768 = (Object)new_AST_Info((Type_String)string27923,(Type_String)string27922, (Type_SmallInt)smallint20841, (Type_SmallInt)smallint20842);
((AST_Method)method25330)->info = (AST_Info)info3768;
symbol35754 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure25328 = (Object)new_Runtime_MethodClosure(method25330);
store_method((Type_Class)class4071, (Type_Symbol)symbol35754, (Runtime_MethodClosure)methodclosure25328);


// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method25331 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6035);
string27924 = (Object)new_Type_String(L"expression");
string27925 = (Object)new_Type_String(L"expression\n\t^ expression");
smallint20843 = (Object)new_Type_SmallInt(-1);
smallint20844 = (Object)new_Type_SmallInt(-1);
info3769 = (Object)new_AST_Info((Type_String)string27925,(Type_String)string27924, (Type_SmallInt)smallint20843, (Type_SmallInt)smallint20844);
((AST_Method)method25331)->info = (AST_Info)info3769;
methodclosure25329 = (Object)new_Runtime_MethodClosure(method25331);
store_method((Type_Class)class4071, (Type_Symbol)symbol35755, (Runtime_MethodClosure)methodclosure25329);


// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable26631 = (Object)new_AST_Variable_named(L"anObject");
array21376 = (Object)new_Type_Array_with(1, (Object)localvariable26631);
assign22499 = (Object)new_AST_Assign((Object)instancevariable6034, (Object)localvariable26631);
method25332 = (Object)new_AST_Method_with((Type_Array)array21376, (Type_Array)empty_Type_Array, 2, assign22499, Self);
string27926 = (Object)new_Type_String(L"variable:");
string27927 = (Object)new_Type_String(L"variable: anObject\n\tvariable := anObject");
smallint20845 = (Object)new_Type_SmallInt(-1);
smallint20846 = (Object)new_Type_SmallInt(-1);
info3770 = (Object)new_AST_Info((Type_String)string27927,(Type_String)string27926, (Type_SmallInt)smallint20845, (Type_SmallInt)smallint20846);
((AST_Method)method25332)->info = (AST_Info)info3770;
symbol35756 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure25330 = (Object)new_Runtime_MethodClosure(method25332);
store_method((Type_Class)class4071, (Type_Symbol)symbol35756, (Runtime_MethodClosure)methodclosure25330);


// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method25333 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6034);
string27928 = (Object)new_Type_String(L"variable");
string27929 = (Object)new_Type_String(L"variable\n\t^ variable");
smallint20847 = (Object)new_Type_SmallInt(-1);
smallint20848 = (Object)new_Type_SmallInt(-1);
info3771 = (Object)new_AST_Info((Type_String)string27929,(Type_String)string27928, (Type_SmallInt)smallint20847, (Type_SmallInt)smallint20848);
((AST_Method)method25333)->info = (AST_Info)info3771;
symbol35757 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure25331 = (Object)new_Runtime_MethodClosure(method25333);
store_method((Type_Class)class4071, (Type_Symbol)symbol35757, (Runtime_MethodClosure)methodclosure25331);

// =
send183390 = (Object)new_AST_Send((Object)send183389, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183390)->info = (AST_Info)info3677;
// variable
send183391 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35757, 0);
((AST_Send)send183391)->info = (AST_Info)info3677;
// class
send183392 = (Object)new_AST_Send((Object)send183391, (Object)SMB_class, 0);
((AST_Send)send183392)->info = (AST_Info)info3677;
// should
send183393 = (Object)new_AST_Send((Object)send183392, (Object)symbol35983, 0);
((AST_Send)send183393)->info = (AST_Info)info3677;
classreference4822 = (Object)new_Organization_ClassReference((Type_Class)class4065);

// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name
// new
send183394 = (Object)new_AST_Send((Object)classreference4810, (Object)symbol35612, 0);
string27930 = (Object)new_Type_String(L"asPVariable");
string27931 = (Object)new_Type_String(L"asPVariable \n\t^PLocalVariable new name: self name");
smallint20849 = (Object)new_Type_SmallInt(-1);
smallint20850 = (Object)new_Type_SmallInt(-1);
info3772 = (Object)new_AST_Info((Type_String)string27931,(Type_String)string27930, (Type_SmallInt)smallint20849, (Type_SmallInt)smallint20850);
((AST_Send)send183394)->info = (AST_Info)info3772;
// name
send183395 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send183395)->info = (AST_Info)info3772;
// name:
send183396 = (Object)new_AST_Send((Object)send183394, (Object)symbol35721, 1, (Object)send183395);
((AST_Send)send183396)->info = (AST_Info)info3772;
method25334 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183396);
((AST_Method)method25334)->info = (AST_Info)info3772;
methodclosure25332 = (Object)new_Runtime_MethodClosure(method25334);
store_method((Type_Class)class4065, (Type_Symbol)symbol35720, (Runtime_MethodClosure)methodclosure25332);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super1973 = (Object)new_AST_Super((Object)symbol35517, 0);
method25335 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1973, Self);
string27932 = (Object)new_Type_String(L"initialize");
string27933 = (Object)new_Type_String(L"initialize\n\tsuper initialize.");
smallint20851 = (Object)new_Type_SmallInt(-1);
smallint20852 = (Object)new_Type_SmallInt(-1);
info3773 = (Object)new_AST_Info((Type_String)string27933,(Type_String)string27932, (Type_SmallInt)smallint20851, (Type_SmallInt)smallint20852);
((AST_Method)method25335)->info = (AST_Info)info3773;
methodclosure25333 = (Object)new_Runtime_MethodClosure(method25335);
store_method((Type_Class)class4065, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25333);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable26632 = (Object)new_AST_Variable_named(L"anObject");
array21377 = (Object)new_Type_Array_with(1, (Object)localvariable26632);
assign22500 = (Object)new_AST_Assign((Object)instancevariable6027, (Object)localvariable26632);
method25336 = (Object)new_AST_Method_with((Type_Array)array21377, (Type_Array)empty_Type_Array, 2, assign22500, Self);
string27934 = (Object)new_Type_String(L"name:");
string27935 = (Object)new_Type_String(L"name: anObject\n\tname := anObject");
smallint20853 = (Object)new_Type_SmallInt(-1);
smallint20854 = (Object)new_Type_SmallInt(-1);
info3774 = (Object)new_AST_Info((Type_String)string27935,(Type_String)string27934, (Type_SmallInt)smallint20853, (Type_SmallInt)smallint20854);
((AST_Method)method25336)->info = (AST_Info)info3774;
methodclosure25334 = (Object)new_Runtime_MethodClosure(method25336);
store_method((Type_Class)class4065, (Type_Symbol)symbol35721, (Runtime_MethodClosure)methodclosure25334);


// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable26633 = (Object)new_AST_Variable_named(L"aStream");
array21378 = (Object)new_Type_Array_with(1, (Object)localvariable26633);
super1974 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26633);
localvariable26634 = (Object)new_AST_Variable_named(L"receiver");
array21379 = (Object)new_Type_Array_with(1, (Object)localvariable26634);
string27936 = (Object)new_Type_String(L"(");
constant35587 = (Object)new_AST_Constant((Object)string27936);
// nextPutAll:
send183397 = (Object)new_AST_Send((Object)localvariable26634, (Object)symbol35953, 1, (Object)constant35587);
string27937 = (Object)new_Type_String(L"printOn:");
string27938 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \'(\';\n\t\tnextPutAll: self name;\n\t\tnextPutAll: \')\'\n");
smallint20855 = (Object)new_Type_SmallInt(-1);
smallint20856 = (Object)new_Type_SmallInt(-1);
info3775 = (Object)new_AST_Info((Type_String)string27938,(Type_String)string27937, (Type_SmallInt)smallint20855, (Type_SmallInt)smallint20856);
((AST_Send)send183397)->info = (AST_Info)info3775;
// name
send183398 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send183398)->info = (AST_Info)info3775;
// nextPutAll:
send183399 = (Object)new_AST_Send((Object)localvariable26634, (Object)symbol35953, 1, (Object)send183398);
((AST_Send)send183399)->info = (AST_Info)info3775;
string27939 = (Object)new_Type_String(L")");
constant35588 = (Object)new_AST_Constant((Object)string27939);
// nextPutAll:
send183400 = (Object)new_AST_Send((Object)localvariable26634, (Object)symbol35953, 1, (Object)constant35588);
((AST_Send)send183400)->info = (AST_Info)info3775;
block12795 = (Object)new_AST_Block_with((Type_Array)array21379, (Type_Array)empty_Type_Array, 1, 3, send183397, send183399, send183400);
// value:
send183401 = (Object)new_AST_Send((Object)block12795, (Object)SMB_value_, 1, (Object)localvariable26633);
((AST_Send)send183401)->info = (AST_Info)info3775;
method25337 = (Object)new_AST_Method_with((Type_Array)array21378, (Type_Array)empty_Type_Array, 3, super1974, send183401, Self);
((AST_Method)method25337)->info = (AST_Info)info3775;
methodclosure25335 = (Object)new_Runtime_MethodClosure(method25337);
store_method((Type_Class)class4065, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25335);


// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable26635 = (Object)new_AST_Variable_named(L"anObject");
array21380 = (Object)new_Type_Array_with(1, (Object)localvariable26635);
symbol35607 = (Object)new_Type_Symbol_cached(L"layout");
// layout
send183402 = (Object)new_AST_Send((Object)Self, (Object)symbol35607, 0);
string27940 = (Object)new_Type_String(L"combineTypeWith:");
string27941 = (Object)new_Type_String(L"combineTypeWith: anObject\n\tself layout combineWith: anObject layout.");
smallint20857 = (Object)new_Type_SmallInt(-1);
smallint20858 = (Object)new_Type_SmallInt(-1);
info3776 = (Object)new_AST_Info((Type_String)string27941,(Type_String)string27940, (Type_SmallInt)smallint20857, (Type_SmallInt)smallint20858);
((AST_Send)send183402)->info = (AST_Info)info3776;
symbol35984 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send183403 = (Object)new_AST_Send((Object)localvariable26635, (Object)symbol35607, 0);
((AST_Send)send183403)->info = (AST_Info)info3776;
// combineWith:
send183404 = (Object)new_AST_Send((Object)send183402, (Object)symbol35984, 1, (Object)send183403);
((AST_Send)send183404)->info = (AST_Info)info3776;
method25338 = (Object)new_AST_Method_with((Type_Array)array21380, (Type_Array)empty_Type_Array, 2, send183404, Self);
((AST_Method)method25338)->info = (AST_Info)info3776;
symbol35722 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure25336 = (Object)new_Runtime_MethodClosure(method25338);
store_method((Type_Class)class4065, (Type_Symbol)symbol35722, (Runtime_MethodClosure)methodclosure25336);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable26636 = (Object)new_AST_Variable_named(L"other");
array21381 = (Object)new_Type_Array_with(1, (Object)localvariable26636);
// name
send183405 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
string27942 = (Object)new_Type_String(L"=");
string27943 = (Object)new_Type_String(L"= other \n\t^ self name = other name. ");
smallint20859 = (Object)new_Type_SmallInt(-1);
smallint20860 = (Object)new_Type_SmallInt(-1);
info3777 = (Object)new_AST_Info((Type_String)string27943,(Type_String)string27942, (Type_SmallInt)smallint20859, (Type_SmallInt)smallint20860);
((AST_Send)send183405)->info = (AST_Info)info3777;
// name
send183406 = (Object)new_AST_Send((Object)localvariable26636, (Object)SMB_name, 0);
((AST_Send)send183406)->info = (AST_Info)info3777;
// =
send183407 = (Object)new_AST_Send((Object)send183405, (Object)SMB__equal, 1, (Object)send183406);
((AST_Send)send183407)->info = (AST_Info)info3777;
method25339 = (Object)new_AST_Method_with((Type_Array)array21381, (Type_Array)empty_Type_Array, 1, send183407);
((AST_Method)method25339)->info = (AST_Info)info3777;
methodclosure25337 = (Object)new_Runtime_MethodClosure(method25339);
store_method((Type_Class)class4065, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure25337);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable26637 = (Object)new_AST_Variable_named(L"anObject");
array21382 = (Object)new_Type_Array_with(1, (Object)localvariable26637);
// layout
send183408 = (Object)new_AST_Send((Object)Self, (Object)symbol35607, 0);
string27944 = (Object)new_Type_String(L"hasSameTypeAs:");
string27945 = (Object)new_Type_String(L"hasSameTypeAs: anObject\n\t^ self layout isSameTypeAs: anObject layout ");
smallint20861 = (Object)new_Type_SmallInt(-1);
smallint20862 = (Object)new_Type_SmallInt(-1);
info3778 = (Object)new_AST_Info((Type_String)string27945,(Type_String)string27944, (Type_SmallInt)smallint20861, (Type_SmallInt)smallint20862);
((AST_Send)send183408)->info = (AST_Info)info3778;
symbol35985 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send183409 = (Object)new_AST_Send((Object)localvariable26637, (Object)symbol35607, 0);
((AST_Send)send183409)->info = (AST_Info)info3778;
// isSameTypeAs:
send183410 = (Object)new_AST_Send((Object)send183408, (Object)symbol35985, 1, (Object)send183409);
((AST_Send)send183410)->info = (AST_Info)info3778;
method25340 = (Object)new_AST_Method_with((Type_Array)array21382, (Type_Array)empty_Type_Array, 1, send183410);
((AST_Method)method25340)->info = (AST_Info)info3778;
symbol35723 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure25338 = (Object)new_Runtime_MethodClosure(method25340);
store_method((Type_Class)class4065, (Type_Symbol)symbol35723, (Runtime_MethodClosure)methodclosure25338);


// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send183411 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
string27946 = (Object)new_Type_String(L"hash");
string27947 = (Object)new_Type_String(L"hash\n\t^ self name hash");
smallint20863 = (Object)new_Type_SmallInt(-1);
smallint20864 = (Object)new_Type_SmallInt(-1);
info3779 = (Object)new_AST_Info((Type_String)string27947,(Type_String)string27946, (Type_SmallInt)smallint20863, (Type_SmallInt)smallint20864);
((AST_Send)send183411)->info = (AST_Info)info3779;
// hash
send183412 = (Object)new_AST_Send((Object)send183411, (Object)SMB_hash, 0);
((AST_Send)send183412)->info = (AST_Info)info3779;
method25341 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183412);
((AST_Method)method25341)->info = (AST_Info)info3779;
methodclosure25339 = (Object)new_Runtime_MethodClosure(method25341);
store_method((Type_Class)class4065, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure25339);


// ASTVariable>>name
//name
// 	^ name
method25342 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6027);
string27948 = (Object)new_Type_String(L"name");
string27949 = (Object)new_Type_String(L"name\n\t^ name");
smallint20865 = (Object)new_Type_SmallInt(-1);
smallint20866 = (Object)new_Type_SmallInt(-1);
info3780 = (Object)new_AST_Info((Type_String)string27949,(Type_String)string27948, (Type_SmallInt)smallint20865, (Type_SmallInt)smallint20866);
((AST_Method)method25342)->info = (AST_Info)info3780;
methodclosure25340 = (Object)new_Runtime_MethodClosure(method25342);
store_method((Type_Class)class4065, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure25340);

// =
send183413 = (Object)new_AST_Send((Object)send183393, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183413)->info = (AST_Info)info3677;
// variable
send183414 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35757, 0);
((AST_Send)send183414)->info = (AST_Info)info3677;
// name
send183415 = (Object)new_AST_Send((Object)send183414, (Object)SMB_name, 0);
((AST_Send)send183415)->info = (AST_Info)info3677;
// should
send183416 = (Object)new_AST_Send((Object)send183415, (Object)symbol35983, 0);
((AST_Send)send183416)->info = (AST_Info)info3677;
string27950 = (Object)new_Type_String(L"a");
constant35589 = (Object)new_AST_Constant((Object)string27950);
// =
send183417 = (Object)new_AST_Send((Object)send183416, (Object)SMB__equal, 1, (Object)constant35589);
((AST_Send)send183417)->info = (AST_Info)info3677;
// expression
send183418 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35755, 0);
((AST_Send)send183418)->info = (AST_Info)info3677;
assign22501 = (Object)new_AST_Assign((Object)localvariable26477, (Object)send183418);
// class
send183419 = (Object)new_AST_Send((Object)localvariable26477, (Object)SMB_class, 0);
((AST_Send)send183419)->info = (AST_Info)info3677;
// should
send183420 = (Object)new_AST_Send((Object)send183419, (Object)symbol35983, 0);
((AST_Send)send183420)->info = (AST_Info)info3677;
// =
send183421 = (Object)new_AST_Send((Object)send183420, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183421)->info = (AST_Info)info3677;
// variable
send183422 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35757, 0);
((AST_Send)send183422)->info = (AST_Info)info3677;
// class
send183423 = (Object)new_AST_Send((Object)send183422, (Object)SMB_class, 0);
((AST_Send)send183423)->info = (AST_Info)info3677;
// should
send183424 = (Object)new_AST_Send((Object)send183423, (Object)symbol35983, 0);
((AST_Send)send183424)->info = (AST_Info)info3677;
// =
send183425 = (Object)new_AST_Send((Object)send183424, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183425)->info = (AST_Info)info3677;
// variable
send183426 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35757, 0);
((AST_Send)send183426)->info = (AST_Info)info3677;
// name
send183427 = (Object)new_AST_Send((Object)send183426, (Object)SMB_name, 0);
((AST_Send)send183427)->info = (AST_Info)info3677;
// should
send183428 = (Object)new_AST_Send((Object)send183427, (Object)symbol35983, 0);
((AST_Send)send183428)->info = (AST_Info)info3677;
string27951 = (Object)new_Type_String(L"b");
constant35590 = (Object)new_AST_Constant((Object)string27951);
// =
send183429 = (Object)new_AST_Send((Object)send183428, (Object)SMB__equal, 1, (Object)constant35590);
((AST_Send)send183429)->info = (AST_Info)info3677;
// expression
send183430 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35755, 0);
((AST_Send)send183430)->info = (AST_Info)info3677;
assign22502 = (Object)new_AST_Assign((Object)localvariable26477, (Object)send183430);
// class
send183431 = (Object)new_AST_Send((Object)localvariable26477, (Object)SMB_class, 0);
((AST_Send)send183431)->info = (AST_Info)info3677;
// should
send183432 = (Object)new_AST_Send((Object)send183431, (Object)symbol35983, 0);
((AST_Send)send183432)->info = (AST_Info)info3677;
// =
send183433 = (Object)new_AST_Send((Object)send183432, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183433)->info = (AST_Info)info3677;
// variable
send183434 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35757, 0);
((AST_Send)send183434)->info = (AST_Info)info3677;
// class
send183435 = (Object)new_AST_Send((Object)send183434, (Object)SMB_class, 0);
((AST_Send)send183435)->info = (AST_Info)info3677;
// should
send183436 = (Object)new_AST_Send((Object)send183435, (Object)symbol35983, 0);
((AST_Send)send183436)->info = (AST_Info)info3677;
// =
send183437 = (Object)new_AST_Send((Object)send183436, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183437)->info = (AST_Info)info3677;
// variable
send183438 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35757, 0);
((AST_Send)send183438)->info = (AST_Info)info3677;
// name
send183439 = (Object)new_AST_Send((Object)send183438, (Object)SMB_name, 0);
((AST_Send)send183439)->info = (AST_Info)info3677;
// should
send183440 = (Object)new_AST_Send((Object)send183439, (Object)symbol35983, 0);
((AST_Send)send183440)->info = (AST_Info)info3677;
string27952 = (Object)new_Type_String(L"c");
constant35591 = (Object)new_AST_Constant((Object)string27952);
// =
send183441 = (Object)new_AST_Send((Object)send183440, (Object)SMB__equal, 1, (Object)constant35591);
((AST_Send)send183441)->info = (AST_Info)info3677;
// expression
send183442 = (Object)new_AST_Send((Object)localvariable26477, (Object)symbol35755, 0);
((AST_Send)send183442)->info = (AST_Info)info3677;
// class
send183443 = (Object)new_AST_Send((Object)send183442, (Object)SMB_class, 0);
((AST_Send)send183443)->info = (AST_Info)info3677;
// should
send183444 = (Object)new_AST_Send((Object)send183443, (Object)symbol35983, 0);
((AST_Send)send183444)->info = (AST_Info)info3677;
classreference4823 = (Object)new_Organization_ClassReference((Type_Class)class4079);

// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable26638 = (Object)new_AST_Variable_named(L"anObject");
array21383 = (Object)new_Type_Array_with(1, (Object)localvariable26638);
assign22503 = (Object)new_AST_Assign((Object)instancevariable6047, (Object)localvariable26638);
method25343 = (Object)new_AST_Method_with((Type_Array)array21383, (Type_Array)empty_Type_Array, 2, assign22503, Self);
string27953 = (Object)new_Type_String(L"receiver:");
string27954 = (Object)new_Type_String(L"receiver: anObject\n\treceiver := anObject");
smallint20867 = (Object)new_Type_SmallInt(-1);
smallint20868 = (Object)new_Type_SmallInt(-1);
info3781 = (Object)new_AST_Info((Type_String)string27954,(Type_String)string27953, (Type_SmallInt)smallint20867, (Type_SmallInt)smallint20868);
((AST_Method)method25343)->info = (AST_Info)info3781;
symbol35726 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure25341 = (Object)new_Runtime_MethodClosure(method25343);
store_method((Type_Class)class4079, (Type_Symbol)symbol35726, (Runtime_MethodClosure)methodclosure25341);


// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method25344 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6047);
string27955 = (Object)new_Type_String(L"receiver");
string27956 = (Object)new_Type_String(L"receiver\n\t^ receiver");
smallint20869 = (Object)new_Type_SmallInt(-1);
smallint20870 = (Object)new_Type_SmallInt(-1);
info3782 = (Object)new_AST_Info((Type_String)string27956,(Type_String)string27955, (Type_SmallInt)smallint20869, (Type_SmallInt)smallint20870);
((AST_Method)method25344)->info = (AST_Info)info3782;
symbol35728 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure25342 = (Object)new_Runtime_MethodClosure(method25344);
store_method((Type_Class)class4079, (Type_Symbol)symbol35728, (Runtime_MethodClosure)methodclosure25342);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// arguments
send183445 = (Object)new_AST_Send((Object)Self, (Object)symbol35627, 0);
string27957 = (Object)new_Type_String(L"hasReturnExpression");
string27958 = (Object)new_Type_String(L"hasReturnExpression\n\t^ self arguments anySatisfy: [ :el | \n\t\tel isReturnExpression \n\t\t\tor: [ el hasReturnExpression ]].");
smallint20871 = (Object)new_Type_SmallInt(-1);
smallint20872 = (Object)new_Type_SmallInt(-1);
info3783 = (Object)new_AST_Info((Type_String)string27958,(Type_String)string27957, (Type_SmallInt)smallint20871, (Type_SmallInt)smallint20872);
((AST_Send)send183445)->info = (AST_Info)info3783;
symbol35986 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable26639 = (Object)new_AST_Variable_named(L"el");
array21384 = (Object)new_Type_Array_with(1, (Object)localvariable26639);
symbol35516 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
// isReturnExpression
send183446 = (Object)new_AST_Send((Object)localvariable26639, (Object)symbol35516, 0);
((AST_Send)send183446)->info = (AST_Info)info3783;
symbol35678 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
// hasReturnExpression
send183447 = (Object)new_AST_Send((Object)localvariable26639, (Object)symbol35678, 0);
((AST_Send)send183447)->info = (AST_Info)info3783;
block12796 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send183447);
// or:
send183448 = (Object)new_AST_Send((Object)send183446, (Object)symbol35630, 1, (Object)block12796);
((AST_Send)send183448)->info = (AST_Info)info3783;
block12797 = (Object)new_AST_Block_with((Type_Array)array21384, (Type_Array)empty_Type_Array, 1, 1, send183448);
// anySatisfy:
send183449 = (Object)new_AST_Send((Object)send183445, (Object)symbol35986, 1, (Object)block12797);
((AST_Send)send183449)->info = (AST_Info)info3783;
method25345 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183449);
((AST_Method)method25345)->info = (AST_Info)info3783;
methodclosure25343 = (Object)new_Runtime_MethodClosure(method25345);
store_method((Type_Class)class4079, (Type_Symbol)symbol35678, (Runtime_MethodClosure)methodclosure25343);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super1975 = (Object)new_AST_Super((Object)symbol35517, 0);
// new
send183450 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string27959 = (Object)new_Type_String(L"initialize");
string27960 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\targuments := OrderedCollection new.");
smallint20873 = (Object)new_Type_SmallInt(-1);
smallint20874 = (Object)new_Type_SmallInt(-1);
info3784 = (Object)new_AST_Info((Type_String)string27960,(Type_String)string27959, (Type_SmallInt)smallint20873, (Type_SmallInt)smallint20874);
((AST_Send)send183450)->info = (AST_Info)info3784;
assign22504 = (Object)new_AST_Assign((Object)instancevariable6048, (Object)send183450);
method25346 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1975, assign22504, Self);
((AST_Method)method25346)->info = (AST_Info)info3784;
methodclosure25344 = (Object)new_Runtime_MethodClosure(method25346);
store_method((Type_Class)class4079, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25344);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method25347 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6048);
string27961 = (Object)new_Type_String(L"arguments");
string27962 = (Object)new_Type_String(L"arguments\n\t^ arguments");
smallint20875 = (Object)new_Type_SmallInt(-1);
smallint20876 = (Object)new_Type_SmallInt(-1);
info3785 = (Object)new_AST_Info((Type_String)string27962,(Type_String)string27961, (Type_SmallInt)smallint20875, (Type_SmallInt)smallint20876);
((AST_Method)method25347)->info = (AST_Info)info3785;
methodclosure25345 = (Object)new_Runtime_MethodClosure(method25347);
store_method((Type_Class)class4079, (Type_Symbol)symbol35627, (Runtime_MethodClosure)methodclosure25345);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable26640 = (Object)new_AST_Variable_named(L"anObject");
array21385 = (Object)new_Type_Array_with(1, (Object)localvariable26640);
assign22505 = (Object)new_AST_Assign((Object)instancevariable6048, (Object)localvariable26640);
method25348 = (Object)new_AST_Method_with((Type_Array)array21385, (Type_Array)empty_Type_Array, 2, assign22505, Self);
string27963 = (Object)new_Type_String(L"arguments:");
string27964 = (Object)new_Type_String(L"arguments: anObject\n\targuments := anObject");
smallint20877 = (Object)new_Type_SmallInt(-1);
smallint20878 = (Object)new_Type_SmallInt(-1);
info3786 = (Object)new_AST_Info((Type_String)string27964,(Type_String)string27963, (Type_SmallInt)smallint20877, (Type_SmallInt)smallint20878);
((AST_Method)method25348)->info = (AST_Info)info3786;
symbol35739 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure25346 = (Object)new_Runtime_MethodClosure(method25348);
store_method((Type_Class)class4079, (Type_Symbol)symbol35739, (Runtime_MethodClosure)methodclosure25346);

// =
send183451 = (Object)new_AST_Send((Object)send183444, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send183451)->info = (AST_Info)info3677;
method25349 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21232, 16, assign22434, assign22496, assign22497, send183390, send183413, send183417, assign22501, send183421, send183425, send183429, assign22502, send183433, send183437, send183441, send183451, Self);
((AST_Method)method25349)->info = (AST_Info)info3677;
symbol35576 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure25347 = (Object)new_Runtime_MethodClosure(method25349);
store_method((Type_Class)class4034, (Type_Symbol)symbol35576, (Runtime_MethodClosure)methodclosure25347);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable26641 = (Object)new_AST_Variable_named(L"parser");
localvariable26642 = (Object)new_AST_Variable_named(L"string");
localvariable26643 = (Object)new_AST_Variable_named(L"result");
array21386 = (Object)new_Type_Array_with(3, (Object)localvariable26641, (Object)localvariable26642, (Object)localvariable26643);
symbol35987 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send183452 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35987, 0);
string27965 = (Object)new_Type_String(L"testUnaryExpression");
string27966 = (Object)new_Type_String(L"testUnaryExpression\n\t| parser string result |\n\tparser := scparser unaryExpression.\n\tstring := PEGStringScanner on: \'abc def ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'ghi\'.\n\tresult := result receiver.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'def\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tstring position should = 12.\n\tstring := PEGStringScanner on: \'abc\'.\n\t(parser match: string) should be isNil");
smallint20879 = (Object)new_Type_SmallInt(-1);
smallint20880 = (Object)new_Type_SmallInt(-1);
info3787 = (Object)new_AST_Info((Type_String)string27966,(Type_String)string27965, (Type_SmallInt)smallint20879, (Type_SmallInt)smallint20880);
((AST_Send)send183452)->info = (AST_Info)info3787;
assign22506 = (Object)new_AST_Assign((Object)localvariable26641, (Object)send183452);
string27967 = (Object)new_Type_String(L"abc def ghi ");
constant35592 = (Object)new_AST_Constant((Object)string27967);
// on:
send183453 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35592);
((AST_Send)send183453)->info = (AST_Info)info3787;
assign22507 = (Object)new_AST_Assign((Object)localvariable26642, (Object)send183453);
// match:
send183454 = (Object)new_AST_Send((Object)localvariable26641, (Object)symbol35843, 1, (Object)localvariable26642);
((AST_Send)send183454)->info = (AST_Info)info3787;
assign22508 = (Object)new_AST_Assign((Object)localvariable26643, (Object)send183454);
// class
send183455 = (Object)new_AST_Send((Object)localvariable26643, (Object)SMB_class, 0);
((AST_Send)send183455)->info = (AST_Info)info3787;
// should
send183456 = (Object)new_AST_Send((Object)send183455, (Object)symbol35983, 0);
((AST_Send)send183456)->info = (AST_Info)info3787;
classreference4824 = (Object)new_Organization_ClassReference((Type_Class)class4055);

// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable26644 = (Object)new_AST_Variable_named(L"anObject");
array21387 = (Object)new_Type_Array_with(1, (Object)localvariable26644);
assign22509 = (Object)new_AST_Assign((Object)instancevariable6020, (Object)localvariable26644);
method25350 = (Object)new_AST_Method_with((Type_Array)array21387, (Type_Array)empty_Type_Array, 2, assign22509, Self);
string27968 = (Object)new_Type_String(L"receiver:");
string27969 = (Object)new_Type_String(L"receiver: anObject\n\treceiver := anObject");
smallint20881 = (Object)new_Type_SmallInt(-1);
smallint20882 = (Object)new_Type_SmallInt(-1);
info3788 = (Object)new_AST_Info((Type_String)string27969,(Type_String)string27968, (Type_SmallInt)smallint20881, (Type_SmallInt)smallint20882);
((AST_Method)method25350)->info = (AST_Info)info3788;
methodclosure25348 = (Object)new_Runtime_MethodClosure(method25350);
store_method((Type_Class)class4055, (Type_Symbol)symbol35726, (Runtime_MethodClosure)methodclosure25348);


// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method25351 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6020);
string27970 = (Object)new_Type_String(L"receiver");
string27971 = (Object)new_Type_String(L"receiver\n\t^ receiver");
smallint20883 = (Object)new_Type_SmallInt(-1);
smallint20884 = (Object)new_Type_SmallInt(-1);
info3789 = (Object)new_AST_Info((Type_String)string27971,(Type_String)string27970, (Type_SmallInt)smallint20883, (Type_SmallInt)smallint20884);
((AST_Method)method25351)->info = (AST_Info)info3789;
methodclosure25349 = (Object)new_Runtime_MethodClosure(method25351);
store_method((Type_Class)class4055, (Type_Symbol)symbol35728, (Runtime_MethodClosure)methodclosure25349);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable26645 = (Object)new_AST_Variable_named(L"aStream");
array21388 = (Object)new_Type_Array_with(1, (Object)localvariable26645);
// receiver
send183457 = (Object)new_AST_Send((Object)Self, (Object)symbol35728, 0);
string27972 = (Object)new_Type_String(L"printOn:");
string27973 = (Object)new_Type_String(L"printOn: aStream\n\tself receiver printOn: aStream.\n\taStream nextPutAll: String space.\n\tsuper printOn: aStream.");
smallint20885 = (Object)new_Type_SmallInt(-1);
smallint20886 = (Object)new_Type_SmallInt(-1);
info3790 = (Object)new_AST_Info((Type_String)string27973,(Type_String)string27972, (Type_SmallInt)smallint20885, (Type_SmallInt)smallint20886);
((AST_Send)send183457)->info = (AST_Info)info3790;
// printOn:
send183458 = (Object)new_AST_Send((Object)send183457, (Object)symbol35622, 1, (Object)localvariable26645);
((AST_Send)send183458)->info = (AST_Info)info3790;
// space
send183459 = (Object)new_AST_Send((Object)classreference4801, (Object)symbol35654, 0);
((AST_Send)send183459)->info = (AST_Info)info3790;
// nextPutAll:
send183460 = (Object)new_AST_Send((Object)localvariable26645, (Object)symbol35953, 1, (Object)send183459);
((AST_Send)send183460)->info = (AST_Info)info3790;
super1976 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26645);
method25352 = (Object)new_AST_Method_with((Type_Array)array21388, (Type_Array)empty_Type_Array, 4, send183458, send183460, super1976, Self);
((AST_Method)method25352)->info = (AST_Info)info3790;
methodclosure25350 = (Object)new_Runtime_MethodClosure(method25352);
store_method((Type_Class)class4055, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25350);

// =
send183461 = (Object)new_AST_Send((Object)send183456, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send183461)->info = (AST_Info)info3787;
// selector
send183462 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35626, 0);
((AST_Send)send183462)->info = (AST_Info)info3787;
// class
send183463 = (Object)new_AST_Send((Object)send183462, (Object)SMB_class, 0);
((AST_Send)send183463)->info = (AST_Info)info3787;
// should
send183464 = (Object)new_AST_Send((Object)send183463, (Object)symbol35983, 0);
((AST_Send)send183464)->info = (AST_Info)info3787;
classreference4825 = (Object)new_Organization_ClassReference((Type_Class)class4054);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send183465 = (Object)new_AST_Send((Object)Self, (Object)symbol35626, 0);
string27974 = (Object)new_Type_String(L"selectorSymbol");
string27975 = (Object)new_Type_String(L"selectorSymbol\n\t^ self selector symbol");
smallint20887 = (Object)new_Type_SmallInt(-1);
smallint20888 = (Object)new_Type_SmallInt(-1);
info3791 = (Object)new_AST_Info((Type_String)string27975,(Type_String)string27974, (Type_SmallInt)smallint20887, (Type_SmallInt)smallint20888);
((AST_Send)send183465)->info = (AST_Info)info3791;
symbol35706 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send183466 = (Object)new_AST_Send((Object)send183465, (Object)symbol35706, 0);
((AST_Send)send183466)->info = (AST_Info)info3791;
method25353 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183466);
((AST_Method)method25353)->info = (AST_Info)info3791;
symbol35740 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
methodclosure25351 = (Object)new_Runtime_MethodClosure(method25353);
store_method((Type_Class)class4054, (Type_Symbol)symbol35740, (Runtime_MethodClosure)methodclosure25351);

// =
send183467 = (Object)new_AST_Send((Object)send183464, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send183467)->info = (AST_Info)info3787;
// selector
send183468 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35626, 0);
((AST_Send)send183468)->info = (AST_Info)info3787;
// selector
send183469 = (Object)new_AST_Send((Object)send183468, (Object)symbol35626, 0);
((AST_Send)send183469)->info = (AST_Info)info3787;
// printString
send183470 = (Object)new_AST_Send((Object)send183469, (Object)symbol35846, 0);
((AST_Send)send183470)->info = (AST_Info)info3787;
// should
send183471 = (Object)new_AST_Send((Object)send183470, (Object)symbol35983, 0);
((AST_Send)send183471)->info = (AST_Info)info3787;
string27976 = (Object)new_Type_String(L"ghi");
constant35593 = (Object)new_AST_Constant((Object)string27976);
// =
send183472 = (Object)new_AST_Send((Object)send183471, (Object)SMB__equal, 1, (Object)constant35593);
((AST_Send)send183472)->info = (AST_Info)info3787;
// receiver
send183473 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35728, 0);
((AST_Send)send183473)->info = (AST_Info)info3787;
assign22510 = (Object)new_AST_Assign((Object)localvariable26643, (Object)send183473);
// class
send183474 = (Object)new_AST_Send((Object)localvariable26643, (Object)SMB_class, 0);
((AST_Send)send183474)->info = (AST_Info)info3787;
// should
send183475 = (Object)new_AST_Send((Object)send183474, (Object)symbol35983, 0);
((AST_Send)send183475)->info = (AST_Info)info3787;
// =
send183476 = (Object)new_AST_Send((Object)send183475, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send183476)->info = (AST_Info)info3787;
// selector
send183477 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35626, 0);
((AST_Send)send183477)->info = (AST_Info)info3787;
// class
send183478 = (Object)new_AST_Send((Object)send183477, (Object)SMB_class, 0);
((AST_Send)send183478)->info = (AST_Info)info3787;
// should
send183479 = (Object)new_AST_Send((Object)send183478, (Object)symbol35983, 0);
((AST_Send)send183479)->info = (AST_Info)info3787;
// =
send183480 = (Object)new_AST_Send((Object)send183479, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send183480)->info = (AST_Info)info3787;
// selector
send183481 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35626, 0);
((AST_Send)send183481)->info = (AST_Info)info3787;
// selector
send183482 = (Object)new_AST_Send((Object)send183481, (Object)symbol35626, 0);
((AST_Send)send183482)->info = (AST_Info)info3787;
// printString
send183483 = (Object)new_AST_Send((Object)send183482, (Object)symbol35846, 0);
((AST_Send)send183483)->info = (AST_Info)info3787;
// should
send183484 = (Object)new_AST_Send((Object)send183483, (Object)symbol35983, 0);
((AST_Send)send183484)->info = (AST_Info)info3787;
string27977 = (Object)new_Type_String(L"def");
constant35594 = (Object)new_AST_Constant((Object)string27977);
// =
send183485 = (Object)new_AST_Send((Object)send183484, (Object)SMB__equal, 1, (Object)constant35594);
((AST_Send)send183485)->info = (AST_Info)info3787;
// receiver
send183486 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35728, 0);
((AST_Send)send183486)->info = (AST_Info)info3787;
// class
send183487 = (Object)new_AST_Send((Object)send183486, (Object)SMB_class, 0);
((AST_Send)send183487)->info = (AST_Info)info3787;
// should
send183488 = (Object)new_AST_Send((Object)send183487, (Object)symbol35983, 0);
((AST_Send)send183488)->info = (AST_Info)info3787;
// =
send183489 = (Object)new_AST_Send((Object)send183488, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183489)->info = (AST_Info)info3787;
// receiver
send183490 = (Object)new_AST_Send((Object)localvariable26643, (Object)symbol35728, 0);
((AST_Send)send183490)->info = (AST_Info)info3787;
// name
send183491 = (Object)new_AST_Send((Object)send183490, (Object)SMB_name, 0);
((AST_Send)send183491)->info = (AST_Info)info3787;
// should
send183492 = (Object)new_AST_Send((Object)send183491, (Object)symbol35983, 0);
((AST_Send)send183492)->info = (AST_Info)info3787;
string27978 = (Object)new_Type_String(L"abc");
constant35595 = (Object)new_AST_Constant((Object)string27978);
// =
send183493 = (Object)new_AST_Send((Object)send183492, (Object)SMB__equal, 1, (Object)constant35595);
((AST_Send)send183493)->info = (AST_Info)info3787;
symbol35988 = (Object)new_Type_Symbol_cached(L"position");
// position
send183494 = (Object)new_AST_Send((Object)localvariable26642, (Object)symbol35988, 0);
((AST_Send)send183494)->info = (AST_Info)info3787;
// should
send183495 = (Object)new_AST_Send((Object)send183494, (Object)symbol35983, 0);
((AST_Send)send183495)->info = (AST_Info)info3787;
smallint20889 = (Object)new_Type_SmallInt(12);
constant35596 = (Object)new_AST_Constant((Object)smallint20889);
// =
send183496 = (Object)new_AST_Send((Object)send183495, (Object)SMB__equal, 1, (Object)constant35596);
((AST_Send)send183496)->info = (AST_Info)info3787;
string27979 = (Object)new_Type_String(L"abc");
constant35597 = (Object)new_AST_Constant((Object)string27979);
// on:
send183497 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35597);
((AST_Send)send183497)->info = (AST_Info)info3787;
assign22511 = (Object)new_AST_Assign((Object)localvariable26642, (Object)send183497);
// match:
send183498 = (Object)new_AST_Send((Object)localvariable26641, (Object)symbol35843, 1, (Object)localvariable26642);
((AST_Send)send183498)->info = (AST_Info)info3787;
// should
send183499 = (Object)new_AST_Send((Object)send183498, (Object)symbol35983, 0);
((AST_Send)send183499)->info = (AST_Info)info3787;
symbol35989 = (Object)new_Type_Symbol_cached(L"be");
// be
send183500 = (Object)new_AST_Send((Object)send183499, (Object)symbol35989, 0);
((AST_Send)send183500)->info = (AST_Info)info3787;
// isNil
send183501 = (Object)new_AST_Send((Object)send183500, (Object)SMB_isNil, 0);
((AST_Send)send183501)->info = (AST_Info)info3787;
method25354 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21386, 16, assign22506, assign22507, assign22508, send183461, send183467, send183472, assign22510, send183476, send183480, send183485, send183489, send183493, send183496, assign22511, send183501, Self);
((AST_Method)method25354)->info = (AST_Info)info3787;
symbol35568 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure25352 = (Object)new_Runtime_MethodClosure(method25354);
store_method((Type_Class)class4034, (Type_Symbol)symbol35568, (Runtime_MethodClosure)methodclosure25352);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable26646 = (Object)new_AST_Variable_named(L"parser");
localvariable26647 = (Object)new_AST_Variable_named(L"string");
localvariable26648 = (Object)new_AST_Variable_named(L"message");
localvariable26649 = (Object)new_AST_Variable_named(L"return");
array21389 = (Object)new_Type_Array_with(4, (Object)localvariable26646, (Object)localvariable26647, (Object)localvariable26648, (Object)localvariable26649);
symbol35990 = (Object)new_Type_Symbol_cached(L"messageExpression");
// messageExpression
send183502 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35990, 0);
string27980 = (Object)new_Type_String(L"testSelf");
string27981 = (Object)new_Type_String(L"testSelf\n\t| parser string message return |\n\tparser := scparser messageExpression.\n\t\n\tstring := PEGStringScanner on: \'self do: this and: that\'.\n \tmessage := parser match: string.\n\tmessage receiver class should = ASTSelf.\n\t\n\tparser := scparser return.\n\tstring := PEGStringScanner on: \'^ self do: this and: that\'.\n \treturn := parser match: string.\n\treturn class should = ASTReturnExpression.\n\treturn expression receiver class should = ASTSelf.");
smallint20890 = (Object)new_Type_SmallInt(-1);
smallint20891 = (Object)new_Type_SmallInt(-1);
info3792 = (Object)new_AST_Info((Type_String)string27981,(Type_String)string27980, (Type_SmallInt)smallint20890, (Type_SmallInt)smallint20891);
((AST_Send)send183502)->info = (AST_Info)info3792;
assign22512 = (Object)new_AST_Assign((Object)localvariable26646, (Object)send183502);
string27982 = (Object)new_Type_String(L"self do: this and: that");
constant35598 = (Object)new_AST_Constant((Object)string27982);
// on:
send183503 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35598);
((AST_Send)send183503)->info = (AST_Info)info3792;
assign22513 = (Object)new_AST_Assign((Object)localvariable26647, (Object)send183503);
// match:
send183504 = (Object)new_AST_Send((Object)localvariable26646, (Object)symbol35843, 1, (Object)localvariable26647);
((AST_Send)send183504)->info = (AST_Info)info3792;
assign22514 = (Object)new_AST_Assign((Object)localvariable26648, (Object)send183504);
// receiver
send183505 = (Object)new_AST_Send((Object)localvariable26648, (Object)symbol35728, 0);
((AST_Send)send183505)->info = (AST_Info)info3792;
// class
send183506 = (Object)new_AST_Send((Object)send183505, (Object)SMB_class, 0);
((AST_Send)send183506)->info = (AST_Info)info3792;
// should
send183507 = (Object)new_AST_Send((Object)send183506, (Object)symbol35983, 0);
((AST_Send)send183507)->info = (AST_Info)info3792;
classreference4826 = (Object)new_Organization_ClassReference((Type_Class)class4066);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable26650 = (Object)new_AST_Variable_named(L"aStream");
array21390 = (Object)new_Type_Array_with(1, (Object)localvariable26650);
string27983 = (Object)new_Type_String(L"self");
constant35599 = (Object)new_AST_Constant((Object)string27983);
// nextPutAll:
send183508 = (Object)new_AST_Send((Object)localvariable26650, (Object)symbol35953, 1, (Object)constant35599);
string27984 = (Object)new_Type_String(L"printOn:");
string27985 = (Object)new_Type_String(L"printOn: aStream\n\taStream nextPutAll: \'self\'.");
smallint20892 = (Object)new_Type_SmallInt(-1);
smallint20893 = (Object)new_Type_SmallInt(-1);
info3793 = (Object)new_AST_Info((Type_String)string27985,(Type_String)string27984, (Type_SmallInt)smallint20892, (Type_SmallInt)smallint20893);
((AST_Send)send183508)->info = (AST_Info)info3793;
method25355 = (Object)new_AST_Method_with((Type_Array)array21390, (Type_Array)empty_Type_Array, 2, send183508, Self);
((AST_Method)method25355)->info = (AST_Info)info3793;
methodclosure25353 = (Object)new_Runtime_MethodClosure(method25355);
store_method((Type_Class)class4066, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25353);

// =
send183509 = (Object)new_AST_Send((Object)send183507, (Object)SMB__equal, 1, (Object)classreference4826);
((AST_Send)send183509)->info = (AST_Info)info3792;
symbol35991 = (Object)new_Type_Symbol_cached(L"return");
// return
send183510 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35991, 0);
((AST_Send)send183510)->info = (AST_Info)info3792;
assign22515 = (Object)new_AST_Assign((Object)localvariable26646, (Object)send183510);
string27986 = (Object)new_Type_String(L"^ self do: this and: that");
constant35600 = (Object)new_AST_Constant((Object)string27986);
// on:
send183511 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35600);
((AST_Send)send183511)->info = (AST_Info)info3792;
assign22516 = (Object)new_AST_Assign((Object)localvariable26647, (Object)send183511);
// match:
send183512 = (Object)new_AST_Send((Object)localvariable26646, (Object)symbol35843, 1, (Object)localvariable26647);
((AST_Send)send183512)->info = (AST_Info)info3792;
assign22517 = (Object)new_AST_Assign((Object)localvariable26649, (Object)send183512);
// class
send183513 = (Object)new_AST_Send((Object)localvariable26649, (Object)SMB_class, 0);
((AST_Send)send183513)->info = (AST_Info)info3792;
// should
send183514 = (Object)new_AST_Send((Object)send183513, (Object)symbol35983, 0);
((AST_Send)send183514)->info = (AST_Info)info3792;
classreference4827 = (Object)new_Organization_ClassReference((Type_Class)class4077);

// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable26651 = (Object)new_AST_Variable_named(L"anObject");
array21391 = (Object)new_Type_Array_with(1, (Object)localvariable26651);
assign22518 = (Object)new_AST_Assign((Object)instancevariable6045, (Object)localvariable26651);
method25356 = (Object)new_AST_Method_with((Type_Array)array21391, (Type_Array)empty_Type_Array, 2, assign22518, Self);
string27987 = (Object)new_Type_String(L"expression:");
string27988 = (Object)new_Type_String(L"expression: anObject\n\texpression := anObject");
smallint20894 = (Object)new_Type_SmallInt(-1);
smallint20895 = (Object)new_Type_SmallInt(-1);
info3794 = (Object)new_AST_Info((Type_String)string27988,(Type_String)string27987, (Type_SmallInt)smallint20894, (Type_SmallInt)smallint20895);
((AST_Method)method25356)->info = (AST_Info)info3794;
methodclosure25354 = (Object)new_Runtime_MethodClosure(method25356);
store_method((Type_Class)class4077, (Type_Symbol)symbol35754, (Runtime_MethodClosure)methodclosure25354);


// ASTReturnExpression>>expression
//expression
// 	^ expression
method25357 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6045);
string27989 = (Object)new_Type_String(L"expression");
string27990 = (Object)new_Type_String(L"expression\n\t^ expression");
smallint20896 = (Object)new_Type_SmallInt(-1);
smallint20897 = (Object)new_Type_SmallInt(-1);
info3795 = (Object)new_AST_Info((Type_String)string27990,(Type_String)string27989, (Type_SmallInt)smallint20896, (Type_SmallInt)smallint20897);
((AST_Method)method25357)->info = (AST_Info)info3795;
methodclosure25355 = (Object)new_Runtime_MethodClosure(method25357);
store_method((Type_Class)class4077, (Type_Symbol)symbol35755, (Runtime_MethodClosure)methodclosure25355);


// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method25358 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
string27991 = (Object)new_Type_String(L"isReturnExpression");
string27992 = (Object)new_Type_String(L"isReturnExpression\n\t^ true");
smallint20898 = (Object)new_Type_SmallInt(-1);
smallint20899 = (Object)new_Type_SmallInt(-1);
info3796 = (Object)new_AST_Info((Type_String)string27992,(Type_String)string27991, (Type_SmallInt)smallint20898, (Type_SmallInt)smallint20899);
((AST_Method)method25358)->info = (AST_Info)info3796;
methodclosure25356 = (Object)new_Runtime_MethodClosure(method25358);
store_method((Type_Class)class4077, (Type_Symbol)symbol35516, (Runtime_MethodClosure)methodclosure25356);

// =
send183515 = (Object)new_AST_Send((Object)send183514, (Object)SMB__equal, 1, (Object)classreference4827);
((AST_Send)send183515)->info = (AST_Info)info3792;
// expression
send183516 = (Object)new_AST_Send((Object)localvariable26649, (Object)symbol35755, 0);
((AST_Send)send183516)->info = (AST_Info)info3792;
// receiver
send183517 = (Object)new_AST_Send((Object)send183516, (Object)symbol35728, 0);
((AST_Send)send183517)->info = (AST_Info)info3792;
// class
send183518 = (Object)new_AST_Send((Object)send183517, (Object)SMB_class, 0);
((AST_Send)send183518)->info = (AST_Info)info3792;
// should
send183519 = (Object)new_AST_Send((Object)send183518, (Object)symbol35983, 0);
((AST_Send)send183519)->info = (AST_Info)info3792;
// =
send183520 = (Object)new_AST_Send((Object)send183519, (Object)SMB__equal, 1, (Object)classreference4826);
((AST_Send)send183520)->info = (AST_Info)info3792;
method25359 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21389, 10, assign22512, assign22513, assign22514, send183509, assign22515, assign22516, assign22517, send183515, send183520, Self);
((AST_Method)method25359)->info = (AST_Info)info3792;
symbol35596 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure25357 = (Object)new_Runtime_MethodClosure(method25359);
store_method((Type_Class)class4034, (Type_Symbol)symbol35596, (Runtime_MethodClosure)methodclosure25357);


// SCParserTest>>testBinaryExpression2
//testBinaryExpression2
// 	" becomes ((abc | ghi) <= c) "
// 	| string result parser |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'a <<<<<<<< ghi <= c <= d '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '<='.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'd'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '<='.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '<<<<<<<<'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'a'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 24
localvariable26652 = (Object)new_AST_Variable_named(L"string");
localvariable26653 = (Object)new_AST_Variable_named(L"result");
localvariable26654 = (Object)new_AST_Variable_named(L"parser");
array21392 = (Object)new_Type_Array_with(3, (Object)localvariable26652, (Object)localvariable26653, (Object)localvariable26654);
symbol35992 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send183521 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35992, 0);
string27993 = (Object)new_Type_String(L"testBinaryExpression2");
string27994 = (Object)new_Type_String(L"testBinaryExpression2\n\t\" becomes ((abc | ghi) <= c) \"\n\t| string result parser |\n\tparser := scparser binaryObjectDescription.\n\tstring := PEGStringScanner on: \'a <<<<<<<< ghi <= c <= d \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'<=\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'d\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'<=\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'c\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'<<<<<<<<\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'a\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 24");
smallint20900 = (Object)new_Type_SmallInt(-1);
smallint20901 = (Object)new_Type_SmallInt(-1);
info3797 = (Object)new_AST_Info((Type_String)string27994,(Type_String)string27993, (Type_SmallInt)smallint20900, (Type_SmallInt)smallint20901);
((AST_Send)send183521)->info = (AST_Info)info3797;
assign22519 = (Object)new_AST_Assign((Object)localvariable26654, (Object)send183521);
string27995 = (Object)new_Type_String(L"a <<<<<<<< ghi <= c <= d ");
constant35601 = (Object)new_AST_Constant((Object)string27995);
// on:
send183522 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35601);
((AST_Send)send183522)->info = (AST_Info)info3797;
assign22520 = (Object)new_AST_Assign((Object)localvariable26652, (Object)send183522);
// match:
send183523 = (Object)new_AST_Send((Object)localvariable26654, (Object)symbol35843, 1, (Object)localvariable26652);
((AST_Send)send183523)->info = (AST_Info)info3797;
assign22521 = (Object)new_AST_Assign((Object)localvariable26653, (Object)send183523);
// class
send183524 = (Object)new_AST_Send((Object)localvariable26653, (Object)SMB_class, 0);
((AST_Send)send183524)->info = (AST_Info)info3797;
// should
send183525 = (Object)new_AST_Send((Object)send183524, (Object)symbol35983, 0);
((AST_Send)send183525)->info = (AST_Info)info3797;
classreference4828 = (Object)new_Organization_ClassReference((Type_Class)class4076);

// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable26655 = (Object)new_AST_Variable_named(L"anObject");
array21393 = (Object)new_Type_Array_with(1, (Object)localvariable26655);
assign22522 = (Object)new_AST_Assign((Object)instancevariable6043, (Object)localvariable26655);
method25360 = (Object)new_AST_Method_with((Type_Array)array21393, (Type_Array)empty_Type_Array, 2, assign22522, Self);
string27996 = (Object)new_Type_String(L"receiver:");
string27997 = (Object)new_Type_String(L"receiver: anObject \n\treceiver := anObject");
smallint20902 = (Object)new_Type_SmallInt(-1);
smallint20903 = (Object)new_Type_SmallInt(-1);
info3798 = (Object)new_AST_Info((Type_String)string27997,(Type_String)string27996, (Type_SmallInt)smallint20902, (Type_SmallInt)smallint20903);
((AST_Method)method25360)->info = (AST_Info)info3798;
methodclosure25358 = (Object)new_Runtime_MethodClosure(method25360);
store_method((Type_Class)class4076, (Type_Symbol)symbol35726, (Runtime_MethodClosure)methodclosure25358);


// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method25361 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6043);
string27998 = (Object)new_Type_String(L"receiver");
string27999 = (Object)new_Type_String(L"receiver\n\t^ receiver");
smallint20904 = (Object)new_Type_SmallInt(-1);
smallint20905 = (Object)new_Type_SmallInt(-1);
info3799 = (Object)new_AST_Info((Type_String)string27999,(Type_String)string27998, (Type_SmallInt)smallint20904, (Type_SmallInt)smallint20905);
((AST_Method)method25361)->info = (AST_Info)info3799;
methodclosure25359 = (Object)new_Runtime_MethodClosure(method25361);
store_method((Type_Class)class4076, (Type_Symbol)symbol35728, (Runtime_MethodClosure)methodclosure25359);


// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	receiver := receiver argumentOfBinary: outer
localvariable26656 = (Object)new_AST_Variable_named(L"outer");
array21394 = (Object)new_Type_Array_with(1, (Object)localvariable26656);
symbol35681 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
// argumentOfBinary:
send183526 = (Object)new_AST_Send((Object)instancevariable6043, (Object)symbol35681, 1, (Object)localvariable26656);
string28000 = (Object)new_Type_String(L"argumentOfBinary:");
string28001 = (Object)new_Type_String(L"argumentOfBinary: outer\n\treceiver := receiver argumentOfBinary: outer");
smallint20906 = (Object)new_Type_SmallInt(-1);
smallint20907 = (Object)new_Type_SmallInt(-1);
info3800 = (Object)new_AST_Info((Type_String)string28001,(Type_String)string28000, (Type_SmallInt)smallint20906, (Type_SmallInt)smallint20907);
((AST_Send)send183526)->info = (AST_Info)info3800;
assign22523 = (Object)new_AST_Assign((Object)instancevariable6043, (Object)send183526);
method25362 = (Object)new_AST_Method_with((Type_Array)array21394, (Type_Array)empty_Type_Array, 2, assign22523, Self);
((AST_Method)method25362)->info = (AST_Info)info3800;
methodclosure25360 = (Object)new_Runtime_MethodClosure(method25362);
store_method((Type_Class)class4076, (Type_Symbol)symbol35681, (Runtime_MethodClosure)methodclosure25360);


// ASTBinaryExpression>>argument
//argument
// 	^ argument
method25363 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6044);
string28002 = (Object)new_Type_String(L"argument");
string28003 = (Object)new_Type_String(L"argument\n\t^ argument");
smallint20908 = (Object)new_Type_SmallInt(-1);
smallint20909 = (Object)new_Type_SmallInt(-1);
info3801 = (Object)new_AST_Info((Type_String)string28003,(Type_String)string28002, (Type_SmallInt)smallint20908, (Type_SmallInt)smallint20909);
((AST_Method)method25363)->info = (AST_Info)info3801;
methodclosure25361 = (Object)new_Runtime_MethodClosure(method25363);
store_method((Type_Class)class4076, (Type_Symbol)symbol35736, (Runtime_MethodClosure)methodclosure25361);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super1977 = (Object)new_AST_Super((Object)symbol35517, 0);
method25364 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1977, Self);
string28004 = (Object)new_Type_String(L"initialize");
string28005 = (Object)new_Type_String(L"initialize\n\tsuper initialize.");
smallint20910 = (Object)new_Type_SmallInt(-1);
smallint20911 = (Object)new_Type_SmallInt(-1);
info3802 = (Object)new_AST_Info((Type_String)string28005,(Type_String)string28004, (Type_SmallInt)smallint20910, (Type_SmallInt)smallint20911);
((AST_Method)method25364)->info = (AST_Info)info3802;
methodclosure25362 = (Object)new_Runtime_MethodClosure(method25364);
store_method((Type_Class)class4076, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25362);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable26657 = (Object)new_AST_Variable_named(L"anObject");
array21395 = (Object)new_Type_Array_with(1, (Object)localvariable26657);
assign22524 = (Object)new_AST_Assign((Object)instancevariable6044, (Object)localvariable26657);
method25365 = (Object)new_AST_Method_with((Type_Array)array21395, (Type_Array)empty_Type_Array, 2, assign22524, Self);
string28006 = (Object)new_Type_String(L"argument:");
string28007 = (Object)new_Type_String(L"argument: anObject \n\targument := anObject");
smallint20912 = (Object)new_Type_SmallInt(-1);
smallint20913 = (Object)new_Type_SmallInt(-1);
info3803 = (Object)new_AST_Info((Type_String)string28007,(Type_String)string28006, (Type_SmallInt)smallint20912, (Type_SmallInt)smallint20913);
((AST_Method)method25365)->info = (AST_Info)info3803;
symbol35735 = (Object)new_Type_Symbol_cached(L"argument:");
methodclosure25363 = (Object)new_Runtime_MethodClosure(method25365);
store_method((Type_Class)class4076, (Type_Symbol)symbol35735, (Runtime_MethodClosure)methodclosure25363);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable26658 = (Object)new_AST_Variable_named(L"aStream");
array21396 = (Object)new_Type_Array_with(1, (Object)localvariable26658);
// receiver
send183527 = (Object)new_AST_Send((Object)Self, (Object)symbol35728, 0);
string28008 = (Object)new_Type_String(L"printOn:");
string28009 = (Object)new_Type_String(L"printOn: aStream\n\tself receiver printOn: aStream.\n\taStream nextPutAll: String space.\n\tsuper printOn: aStream.\n\taStream nextPutAll: String space.\n\tself argument printOn: aStream.");
smallint20914 = (Object)new_Type_SmallInt(-1);
smallint20915 = (Object)new_Type_SmallInt(-1);
info3804 = (Object)new_AST_Info((Type_String)string28009,(Type_String)string28008, (Type_SmallInt)smallint20914, (Type_SmallInt)smallint20915);
((AST_Send)send183527)->info = (AST_Info)info3804;
// printOn:
send183528 = (Object)new_AST_Send((Object)send183527, (Object)symbol35622, 1, (Object)localvariable26658);
((AST_Send)send183528)->info = (AST_Info)info3804;
// space
send183529 = (Object)new_AST_Send((Object)classreference4801, (Object)symbol35654, 0);
((AST_Send)send183529)->info = (AST_Info)info3804;
// nextPutAll:
send183530 = (Object)new_AST_Send((Object)localvariable26658, (Object)symbol35953, 1, (Object)send183529);
((AST_Send)send183530)->info = (AST_Info)info3804;
super1978 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26658);
// space
send183531 = (Object)new_AST_Send((Object)classreference4801, (Object)symbol35654, 0);
((AST_Send)send183531)->info = (AST_Info)info3804;
// nextPutAll:
send183532 = (Object)new_AST_Send((Object)localvariable26658, (Object)symbol35953, 1, (Object)send183531);
((AST_Send)send183532)->info = (AST_Info)info3804;
// argument
send183533 = (Object)new_AST_Send((Object)Self, (Object)symbol35736, 0);
((AST_Send)send183533)->info = (AST_Info)info3804;
// printOn:
send183534 = (Object)new_AST_Send((Object)send183533, (Object)symbol35622, 1, (Object)localvariable26658);
((AST_Send)send183534)->info = (AST_Info)info3804;
method25366 = (Object)new_AST_Method_with((Type_Array)array21396, (Type_Array)empty_Type_Array, 6, send183528, send183530, super1978, send183532, send183534, Self);
((AST_Method)method25366)->info = (AST_Info)info3804;
methodclosure25364 = (Object)new_Runtime_MethodClosure(method25366);
store_method((Type_Class)class4076, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25364);

// =
send183535 = (Object)new_AST_Send((Object)send183525, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send183535)->info = (AST_Info)info3797;
// selector
send183536 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35626, 0);
((AST_Send)send183536)->info = (AST_Info)info3797;
// printString
send183537 = (Object)new_AST_Send((Object)send183536, (Object)symbol35846, 0);
((AST_Send)send183537)->info = (AST_Info)info3797;
// should
send183538 = (Object)new_AST_Send((Object)send183537, (Object)symbol35983, 0);
((AST_Send)send183538)->info = (AST_Info)info3797;
string28010 = (Object)new_Type_String(L"<=");
constant35602 = (Object)new_AST_Constant((Object)string28010);
// =
send183539 = (Object)new_AST_Send((Object)send183538, (Object)SMB__equal, 1, (Object)constant35602);
((AST_Send)send183539)->info = (AST_Info)info3797;
// argument
send183540 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35736, 0);
((AST_Send)send183540)->info = (AST_Info)info3797;
// class
send183541 = (Object)new_AST_Send((Object)send183540, (Object)SMB_class, 0);
((AST_Send)send183541)->info = (AST_Info)info3797;
// should
send183542 = (Object)new_AST_Send((Object)send183541, (Object)symbol35983, 0);
((AST_Send)send183542)->info = (AST_Info)info3797;
// =
send183543 = (Object)new_AST_Send((Object)send183542, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183543)->info = (AST_Info)info3797;
// argument
send183544 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35736, 0);
((AST_Send)send183544)->info = (AST_Info)info3797;
// name
send183545 = (Object)new_AST_Send((Object)send183544, (Object)SMB_name, 0);
((AST_Send)send183545)->info = (AST_Info)info3797;
// should
send183546 = (Object)new_AST_Send((Object)send183545, (Object)symbol35983, 0);
((AST_Send)send183546)->info = (AST_Info)info3797;
string28011 = (Object)new_Type_String(L"d");
constant35603 = (Object)new_AST_Constant((Object)string28011);
// =
send183547 = (Object)new_AST_Send((Object)send183546, (Object)SMB__equal, 1, (Object)constant35603);
((AST_Send)send183547)->info = (AST_Info)info3797;
// receiver
send183548 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35728, 0);
((AST_Send)send183548)->info = (AST_Info)info3797;
assign22525 = (Object)new_AST_Assign((Object)localvariable26653, (Object)send183548);
// class
send183549 = (Object)new_AST_Send((Object)localvariable26653, (Object)SMB_class, 0);
((AST_Send)send183549)->info = (AST_Info)info3797;
// should
send183550 = (Object)new_AST_Send((Object)send183549, (Object)symbol35983, 0);
((AST_Send)send183550)->info = (AST_Info)info3797;
// =
send183551 = (Object)new_AST_Send((Object)send183550, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send183551)->info = (AST_Info)info3797;
// selector
send183552 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35626, 0);
((AST_Send)send183552)->info = (AST_Info)info3797;
// printString
send183553 = (Object)new_AST_Send((Object)send183552, (Object)symbol35846, 0);
((AST_Send)send183553)->info = (AST_Info)info3797;
// should
send183554 = (Object)new_AST_Send((Object)send183553, (Object)symbol35983, 0);
((AST_Send)send183554)->info = (AST_Info)info3797;
string28012 = (Object)new_Type_String(L"<=");
constant35604 = (Object)new_AST_Constant((Object)string28012);
// =
send183555 = (Object)new_AST_Send((Object)send183554, (Object)SMB__equal, 1, (Object)constant35604);
((AST_Send)send183555)->info = (AST_Info)info3797;
// argument
send183556 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35736, 0);
((AST_Send)send183556)->info = (AST_Info)info3797;
// class
send183557 = (Object)new_AST_Send((Object)send183556, (Object)SMB_class, 0);
((AST_Send)send183557)->info = (AST_Info)info3797;
// should
send183558 = (Object)new_AST_Send((Object)send183557, (Object)symbol35983, 0);
((AST_Send)send183558)->info = (AST_Info)info3797;
// =
send183559 = (Object)new_AST_Send((Object)send183558, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183559)->info = (AST_Info)info3797;
// argument
send183560 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35736, 0);
((AST_Send)send183560)->info = (AST_Info)info3797;
// name
send183561 = (Object)new_AST_Send((Object)send183560, (Object)SMB_name, 0);
((AST_Send)send183561)->info = (AST_Info)info3797;
// should
send183562 = (Object)new_AST_Send((Object)send183561, (Object)symbol35983, 0);
((AST_Send)send183562)->info = (AST_Info)info3797;
string28013 = (Object)new_Type_String(L"c");
constant35605 = (Object)new_AST_Constant((Object)string28013);
// =
send183563 = (Object)new_AST_Send((Object)send183562, (Object)SMB__equal, 1, (Object)constant35605);
((AST_Send)send183563)->info = (AST_Info)info3797;
// receiver
send183564 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35728, 0);
((AST_Send)send183564)->info = (AST_Info)info3797;
assign22526 = (Object)new_AST_Assign((Object)localvariable26653, (Object)send183564);
// class
send183565 = (Object)new_AST_Send((Object)localvariable26653, (Object)SMB_class, 0);
((AST_Send)send183565)->info = (AST_Info)info3797;
// should
send183566 = (Object)new_AST_Send((Object)send183565, (Object)symbol35983, 0);
((AST_Send)send183566)->info = (AST_Info)info3797;
// =
send183567 = (Object)new_AST_Send((Object)send183566, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send183567)->info = (AST_Info)info3797;
// selector
send183568 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35626, 0);
((AST_Send)send183568)->info = (AST_Info)info3797;
// printString
send183569 = (Object)new_AST_Send((Object)send183568, (Object)symbol35846, 0);
((AST_Send)send183569)->info = (AST_Info)info3797;
// should
send183570 = (Object)new_AST_Send((Object)send183569, (Object)symbol35983, 0);
((AST_Send)send183570)->info = (AST_Info)info3797;
string28014 = (Object)new_Type_String(L"<<<<<<<<");
constant35606 = (Object)new_AST_Constant((Object)string28014);
// =
send183571 = (Object)new_AST_Send((Object)send183570, (Object)SMB__equal, 1, (Object)constant35606);
((AST_Send)send183571)->info = (AST_Info)info3797;
// receiver
send183572 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35728, 0);
((AST_Send)send183572)->info = (AST_Info)info3797;
// class
send183573 = (Object)new_AST_Send((Object)send183572, (Object)SMB_class, 0);
((AST_Send)send183573)->info = (AST_Info)info3797;
// should
send183574 = (Object)new_AST_Send((Object)send183573, (Object)symbol35983, 0);
((AST_Send)send183574)->info = (AST_Info)info3797;
// =
send183575 = (Object)new_AST_Send((Object)send183574, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183575)->info = (AST_Info)info3797;
// receiver
send183576 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35728, 0);
((AST_Send)send183576)->info = (AST_Info)info3797;
// name
send183577 = (Object)new_AST_Send((Object)send183576, (Object)SMB_name, 0);
((AST_Send)send183577)->info = (AST_Info)info3797;
// should
send183578 = (Object)new_AST_Send((Object)send183577, (Object)symbol35983, 0);
((AST_Send)send183578)->info = (AST_Info)info3797;
string28015 = (Object)new_Type_String(L"a");
constant35607 = (Object)new_AST_Constant((Object)string28015);
// =
send183579 = (Object)new_AST_Send((Object)send183578, (Object)SMB__equal, 1, (Object)constant35607);
((AST_Send)send183579)->info = (AST_Info)info3797;
// argument
send183580 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35736, 0);
((AST_Send)send183580)->info = (AST_Info)info3797;
// class
send183581 = (Object)new_AST_Send((Object)send183580, (Object)SMB_class, 0);
((AST_Send)send183581)->info = (AST_Info)info3797;
// should
send183582 = (Object)new_AST_Send((Object)send183581, (Object)symbol35983, 0);
((AST_Send)send183582)->info = (AST_Info)info3797;
// =
send183583 = (Object)new_AST_Send((Object)send183582, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183583)->info = (AST_Info)info3797;
// argument
send183584 = (Object)new_AST_Send((Object)localvariable26653, (Object)symbol35736, 0);
((AST_Send)send183584)->info = (AST_Info)info3797;
// name
send183585 = (Object)new_AST_Send((Object)send183584, (Object)SMB_name, 0);
((AST_Send)send183585)->info = (AST_Info)info3797;
// should
send183586 = (Object)new_AST_Send((Object)send183585, (Object)symbol35983, 0);
((AST_Send)send183586)->info = (AST_Info)info3797;
string28016 = (Object)new_Type_String(L"ghi");
constant35608 = (Object)new_AST_Constant((Object)string28016);
// =
send183587 = (Object)new_AST_Send((Object)send183586, (Object)SMB__equal, 1, (Object)constant35608);
((AST_Send)send183587)->info = (AST_Info)info3797;
// position
send183588 = (Object)new_AST_Send((Object)localvariable26652, (Object)symbol35988, 0);
((AST_Send)send183588)->info = (AST_Info)info3797;
// should
send183589 = (Object)new_AST_Send((Object)send183588, (Object)symbol35983, 0);
((AST_Send)send183589)->info = (AST_Info)info3797;
smallint20916 = (Object)new_Type_SmallInt(24);
constant35609 = (Object)new_AST_Constant((Object)smallint20916);
// =
send183590 = (Object)new_AST_Send((Object)send183589, (Object)SMB__equal, 1, (Object)constant35609);
((AST_Send)send183590)->info = (AST_Info)info3797;
method25367 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21392, 21, assign22519, assign22520, assign22521, send183535, send183539, send183543, send183547, assign22525, send183551, send183555, send183559, send183563, assign22526, send183567, send183571, send183575, send183579, send183583, send183587, send183590, Self);
((AST_Method)method25367)->info = (AST_Info)info3797;
symbol35588 = (Object)new_Type_Symbol_cached(L"testBinaryExpression2");
methodclosure25365 = (Object)new_Runtime_MethodClosure(method25367);
store_method((Type_Class)class4034, (Type_Symbol)symbol35588, (Runtime_MethodClosure)methodclosure25365);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable26659 = (Object)new_AST_Variable_named(L"parser");
localvariable26660 = (Object)new_AST_Variable_named(L"string");
localvariable26661 = (Object)new_AST_Variable_named(L"result");
localvariable26662 = (Object)new_AST_Variable_named(L"expression");
array21397 = (Object)new_Type_Array_with(4, (Object)localvariable26659, (Object)localvariable26660, (Object)localvariable26661, (Object)localvariable26662);
symbol35993 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
// cascadedMessageExpression
send183591 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35993, 0);
string28017 = (Object)new_Type_String(L"testCascadedMessageExpression");
string28018 = (Object)new_Type_String(L"testCascadedMessageExpression\n\t| parser string result expression |\n\tparser := scparser cascadedMessageExpression.\n\tstring := PEGStringScanner on: \'2+4; x: 3 b; d: 3 c: 4; x \'.\n\tresult := parser match: string.\n\tresult class should = ASTMessageCascadeExpression.\n\tresult receiver class should = ASTNumber.\n\tresult cascades size should = 4.\n\texpression := result cascades at: 1.\n\texpression class should = ASTBinaryExpression.\n\texpression := result cascades at: 2.\n\texpression class should = ASTMessageExpression.\n\texpression := result cascades at: 3.\n\texpression class should = ASTMessageExpression.\n\texpression := result cascades at: 4.\n\texpression class should = ASTUnaryExpression");
smallint20917 = (Object)new_Type_SmallInt(-1);
smallint20918 = (Object)new_Type_SmallInt(-1);
info3805 = (Object)new_AST_Info((Type_String)string28018,(Type_String)string28017, (Type_SmallInt)smallint20917, (Type_SmallInt)smallint20918);
((AST_Send)send183591)->info = (AST_Info)info3805;
assign22527 = (Object)new_AST_Assign((Object)localvariable26659, (Object)send183591);
string28019 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant35610 = (Object)new_AST_Constant((Object)string28019);
// on:
send183592 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35610);
((AST_Send)send183592)->info = (AST_Info)info3805;
assign22528 = (Object)new_AST_Assign((Object)localvariable26660, (Object)send183592);
// match:
send183593 = (Object)new_AST_Send((Object)localvariable26659, (Object)symbol35843, 1, (Object)localvariable26660);
((AST_Send)send183593)->info = (AST_Info)info3805;
assign22529 = (Object)new_AST_Assign((Object)localvariable26661, (Object)send183593);
// class
send183594 = (Object)new_AST_Send((Object)localvariable26661, (Object)SMB_class, 0);
((AST_Send)send183594)->info = (AST_Info)info3805;
// should
send183595 = (Object)new_AST_Send((Object)send183594, (Object)symbol35983, 0);
((AST_Send)send183595)->info = (AST_Info)info3805;
classreference4829 = (Object)new_Organization_ClassReference((Type_Class)class4072);

// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method25368 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6037);
string28020 = (Object)new_Type_String(L"cascades");
string28021 = (Object)new_Type_String(L"cascades\n\t^ cascades");
smallint20919 = (Object)new_Type_SmallInt(-1);
smallint20920 = (Object)new_Type_SmallInt(-1);
info3806 = (Object)new_AST_Info((Type_String)string28021,(Type_String)string28020, (Type_SmallInt)smallint20919, (Type_SmallInt)smallint20920);
((AST_Method)method25368)->info = (AST_Info)info3806;
symbol35725 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure25366 = (Object)new_Runtime_MethodClosure(method25368);
store_method((Type_Class)class4072, (Type_Symbol)symbol35725, (Runtime_MethodClosure)methodclosure25366);


// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable26663 = (Object)new_AST_Variable_named(L"anObject");
array21398 = (Object)new_Type_Array_with(1, (Object)localvariable26663);
assign22530 = (Object)new_AST_Assign((Object)instancevariable6036, (Object)localvariable26663);
method25369 = (Object)new_AST_Method_with((Type_Array)array21398, (Type_Array)empty_Type_Array, 2, assign22530, Self);
string28022 = (Object)new_Type_String(L"receiver:");
string28023 = (Object)new_Type_String(L"receiver: anObject\n\treceiver := anObject");
smallint20921 = (Object)new_Type_SmallInt(-1);
smallint20922 = (Object)new_Type_SmallInt(-1);
info3807 = (Object)new_AST_Info((Type_String)string28023,(Type_String)string28022, (Type_SmallInt)smallint20921, (Type_SmallInt)smallint20922);
((AST_Method)method25369)->info = (AST_Info)info3807;
methodclosure25367 = (Object)new_Runtime_MethodClosure(method25369);
store_method((Type_Class)class4072, (Type_Symbol)symbol35726, (Runtime_MethodClosure)methodclosure25367);


// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable26664 = (Object)new_AST_Variable_named(L"anObject");
array21399 = (Object)new_Type_Array_with(1, (Object)localvariable26664);
assign22531 = (Object)new_AST_Assign((Object)instancevariable6037, (Object)localvariable26664);
method25370 = (Object)new_AST_Method_with((Type_Array)array21399, (Type_Array)empty_Type_Array, 2, assign22531, Self);
string28024 = (Object)new_Type_String(L"cascades:");
string28025 = (Object)new_Type_String(L"cascades: anObject\n\tcascades := anObject");
smallint20923 = (Object)new_Type_SmallInt(-1);
smallint20924 = (Object)new_Type_SmallInt(-1);
info3808 = (Object)new_AST_Info((Type_String)string28025,(Type_String)string28024, (Type_SmallInt)smallint20923, (Type_SmallInt)smallint20924);
((AST_Method)method25370)->info = (AST_Info)info3808;
symbol35727 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure25368 = (Object)new_Runtime_MethodClosure(method25370);
store_method((Type_Class)class4072, (Type_Symbol)symbol35727, (Runtime_MethodClosure)methodclosure25368);


// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method25371 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6036);
string28026 = (Object)new_Type_String(L"receiver");
string28027 = (Object)new_Type_String(L"receiver\n\t^ receiver");
smallint20925 = (Object)new_Type_SmallInt(-1);
smallint20926 = (Object)new_Type_SmallInt(-1);
info3809 = (Object)new_AST_Info((Type_String)string28027,(Type_String)string28026, (Type_SmallInt)smallint20925, (Type_SmallInt)smallint20926);
((AST_Method)method25371)->info = (AST_Info)info3809;
methodclosure25369 = (Object)new_Runtime_MethodClosure(method25371);
store_method((Type_Class)class4072, (Type_Symbol)symbol35728, (Runtime_MethodClosure)methodclosure25369);

// =
send183596 = (Object)new_AST_Send((Object)send183595, (Object)SMB__equal, 1, (Object)classreference4829);
((AST_Send)send183596)->info = (AST_Info)info3805;
// receiver
send183597 = (Object)new_AST_Send((Object)localvariable26661, (Object)symbol35728, 0);
((AST_Send)send183597)->info = (AST_Info)info3805;
// class
send183598 = (Object)new_AST_Send((Object)send183597, (Object)SMB_class, 0);
((AST_Send)send183598)->info = (AST_Info)info3805;
// should
send183599 = (Object)new_AST_Send((Object)send183598, (Object)symbol35983, 0);
((AST_Send)send183599)->info = (AST_Info)info3805;
classreference4830 = (Object)new_Organization_ClassReference((Type_Class)class4057);

// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable26665 = (Object)new_AST_Variable_named(L"anObject");
array21400 = (Object)new_Type_Array_with(1, (Object)localvariable26665);
assign22532 = (Object)new_AST_Assign((Object)instancevariable6021, (Object)localvariable26665);
method25372 = (Object)new_AST_Method_with((Type_Array)array21400, (Type_Array)empty_Type_Array, 2, assign22532, Self);
string28028 = (Object)new_Type_String(L"number:");
string28029 = (Object)new_Type_String(L"number: anObject\n\tnumber := anObject");
smallint20927 = (Object)new_Type_SmallInt(-1);
smallint20928 = (Object)new_Type_SmallInt(-1);
info3810 = (Object)new_AST_Info((Type_String)string28029,(Type_String)string28028, (Type_SmallInt)smallint20927, (Type_SmallInt)smallint20928);
((AST_Method)method25372)->info = (AST_Info)info3810;
symbol35700 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure25370 = (Object)new_Runtime_MethodClosure(method25372);
store_method((Type_Class)class4057, (Type_Symbol)symbol35700, (Runtime_MethodClosure)methodclosure25370);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable26666 = (Object)new_AST_Variable_named(L"aStream");
array21401 = (Object)new_Type_Array_with(1, (Object)localvariable26666);
symbol35701 = (Object)new_Type_Symbol_cached(L"number");
// number
send183600 = (Object)new_AST_Send((Object)Self, (Object)symbol35701, 0);
string28030 = (Object)new_Type_String(L"printOn:");
string28031 = (Object)new_Type_String(L"printOn: aStream\n\taStream nextPutAll: self number.");
smallint20929 = (Object)new_Type_SmallInt(-1);
smallint20930 = (Object)new_Type_SmallInt(-1);
info3811 = (Object)new_AST_Info((Type_String)string28031,(Type_String)string28030, (Type_SmallInt)smallint20929, (Type_SmallInt)smallint20930);
((AST_Send)send183600)->info = (AST_Info)info3811;
// nextPutAll:
send183601 = (Object)new_AST_Send((Object)localvariable26666, (Object)symbol35953, 1, (Object)send183600);
((AST_Send)send183601)->info = (AST_Info)info3811;
method25373 = (Object)new_AST_Method_with((Type_Array)array21401, (Type_Array)empty_Type_Array, 2, send183601, Self);
((AST_Method)method25373)->info = (AST_Info)info3811;
methodclosure25371 = (Object)new_Runtime_MethodClosure(method25373);
store_method((Type_Class)class4057, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25371);


// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
symbol35704 = (Object)new_Type_Symbol_cached(L"base");
// base
send183602 = (Object)new_AST_Send((Object)Self, (Object)symbol35704, 0);
string28032 = (Object)new_Type_String(L"asInteger");
string28033 = (Object)new_Type_String(L"asInteger\n\t^ (self base, \'r\', self number) asNumber asInteger");
smallint20931 = (Object)new_Type_SmallInt(-1);
smallint20932 = (Object)new_Type_SmallInt(-1);
info3812 = (Object)new_AST_Info((Type_String)string28033,(Type_String)string28032, (Type_SmallInt)smallint20931, (Type_SmallInt)smallint20932);
((AST_Send)send183602)->info = (AST_Info)info3812;
string28034 = (Object)new_Type_String(L"r");
constant35611 = (Object)new_AST_Constant((Object)string28034);
// ,
send183603 = (Object)new_AST_Send((Object)send183602, (Object)SMB__concat, 1, (Object)constant35611);
((AST_Send)send183603)->info = (AST_Info)info3812;
// number
send183604 = (Object)new_AST_Send((Object)Self, (Object)symbol35701, 0);
((AST_Send)send183604)->info = (AST_Info)info3812;
// ,
send183605 = (Object)new_AST_Send((Object)send183603, (Object)SMB__concat, 1, (Object)send183604);
((AST_Send)send183605)->info = (AST_Info)info3812;
symbol35994 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send183606 = (Object)new_AST_Send((Object)send183605, (Object)symbol35994, 0);
((AST_Send)send183606)->info = (AST_Info)info3812;
symbol35703 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send183607 = (Object)new_AST_Send((Object)send183606, (Object)symbol35703, 0);
((AST_Send)send183607)->info = (AST_Info)info3812;
method25374 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183607);
((AST_Method)method25374)->info = (AST_Info)info3812;
methodclosure25372 = (Object)new_Runtime_MethodClosure(method25374);
store_method((Type_Class)class4057, (Type_Symbol)symbol35703, (Runtime_MethodClosure)methodclosure25372);


// ASTNumber>>number
//number
// 	^ number
method25375 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6021);
string28035 = (Object)new_Type_String(L"number");
string28036 = (Object)new_Type_String(L"number\n\t^ number");
smallint20933 = (Object)new_Type_SmallInt(-1);
smallint20934 = (Object)new_Type_SmallInt(-1);
info3813 = (Object)new_AST_Info((Type_String)string28036,(Type_String)string28035, (Type_SmallInt)smallint20933, (Type_SmallInt)smallint20934);
((AST_Method)method25375)->info = (AST_Info)info3813;
methodclosure25373 = (Object)new_Runtime_MethodClosure(method25375);
store_method((Type_Class)class4057, (Type_Symbol)symbol35701, (Runtime_MethodClosure)methodclosure25373);


// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable26667 = (Object)new_AST_Variable_named(L"anObject");
array21402 = (Object)new_Type_Array_with(1, (Object)localvariable26667);
assign22533 = (Object)new_AST_Assign((Object)instancevariable6022, (Object)localvariable26667);
method25376 = (Object)new_AST_Method_with((Type_Array)array21402, (Type_Array)empty_Type_Array, 2, assign22533, Self);
string28037 = (Object)new_Type_String(L"base:");
string28038 = (Object)new_Type_String(L"base: anObject\n\tbase := anObject");
smallint20935 = (Object)new_Type_SmallInt(-1);
smallint20936 = (Object)new_Type_SmallInt(-1);
info3814 = (Object)new_AST_Info((Type_String)string28038,(Type_String)string28037, (Type_SmallInt)smallint20935, (Type_SmallInt)smallint20936);
((AST_Method)method25376)->info = (AST_Info)info3814;
symbol35705 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure25374 = (Object)new_Runtime_MethodClosure(method25376);
store_method((Type_Class)class4057, (Type_Symbol)symbol35705, (Runtime_MethodClosure)methodclosure25374);


// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger
// new
send183608 = (Object)new_AST_Send((Object)classreference4800, (Object)symbol35612, 0);
string28039 = (Object)new_Type_String(L"asPSmallInt");
string28040 = (Object)new_Type_String(L"asPSmallInt\n\t^PSmallInt new int: self asInteger");
smallint20937 = (Object)new_Type_SmallInt(-1);
smallint20938 = (Object)new_Type_SmallInt(-1);
info3815 = (Object)new_AST_Info((Type_String)string28040,(Type_String)string28039, (Type_SmallInt)smallint20937, (Type_SmallInt)smallint20938);
((AST_Send)send183608)->info = (AST_Info)info3815;
symbol35995 = (Object)new_Type_Symbol_cached(L"int:");
// asInteger
send183609 = (Object)new_AST_Send((Object)Self, (Object)symbol35703, 0);
((AST_Send)send183609)->info = (AST_Info)info3815;
// int:
send183610 = (Object)new_AST_Send((Object)send183608, (Object)symbol35995, 1, (Object)send183609);
((AST_Send)send183610)->info = (AST_Info)info3815;
method25377 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183610);
((AST_Method)method25377)->info = (AST_Info)info3815;
symbol35702 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure25375 = (Object)new_Runtime_MethodClosure(method25377);
store_method((Type_Class)class4057, (Type_Symbol)symbol35702, (Runtime_MethodClosure)methodclosure25375);


// ASTNumber>>base
//base
// 	^ base
method25378 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6022);
string28041 = (Object)new_Type_String(L"base");
string28042 = (Object)new_Type_String(L"base\n\t^ base");
smallint20939 = (Object)new_Type_SmallInt(-1);
smallint20940 = (Object)new_Type_SmallInt(-1);
info3816 = (Object)new_AST_Info((Type_String)string28042,(Type_String)string28041, (Type_SmallInt)smallint20939, (Type_SmallInt)smallint20940);
((AST_Method)method25378)->info = (AST_Info)info3816;
methodclosure25376 = (Object)new_Runtime_MethodClosure(method25378);
store_method((Type_Class)class4057, (Type_Symbol)symbol35704, (Runtime_MethodClosure)methodclosure25376);

// =
send183611 = (Object)new_AST_Send((Object)send183599, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send183611)->info = (AST_Info)info3805;
// cascades
send183612 = (Object)new_AST_Send((Object)localvariable26661, (Object)symbol35725, 0);
((AST_Send)send183612)->info = (AST_Info)info3805;
// size
send183613 = (Object)new_AST_Send((Object)send183612, (Object)SMB_size, 0);
((AST_Send)send183613)->info = (AST_Info)info3805;
// should
send183614 = (Object)new_AST_Send((Object)send183613, (Object)symbol35983, 0);
((AST_Send)send183614)->info = (AST_Info)info3805;
smallint20941 = (Object)new_Type_SmallInt(4);
constant35612 = (Object)new_AST_Constant((Object)smallint20941);
// =
send183615 = (Object)new_AST_Send((Object)send183614, (Object)SMB__equal, 1, (Object)constant35612);
((AST_Send)send183615)->info = (AST_Info)info3805;
// cascades
send183616 = (Object)new_AST_Send((Object)localvariable26661, (Object)symbol35725, 0);
((AST_Send)send183616)->info = (AST_Info)info3805;
smallint20942 = (Object)new_Type_SmallInt(1);
constant35613 = (Object)new_AST_Constant((Object)smallint20942);
// at:
send183617 = (Object)new_AST_Send((Object)send183616, (Object)SMB_at_, 1, (Object)constant35613);
((AST_Send)send183617)->info = (AST_Info)info3805;
assign22534 = (Object)new_AST_Assign((Object)localvariable26662, (Object)send183617);
// class
send183618 = (Object)new_AST_Send((Object)localvariable26662, (Object)SMB_class, 0);
((AST_Send)send183618)->info = (AST_Info)info3805;
// should
send183619 = (Object)new_AST_Send((Object)send183618, (Object)symbol35983, 0);
((AST_Send)send183619)->info = (AST_Info)info3805;
// =
send183620 = (Object)new_AST_Send((Object)send183619, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send183620)->info = (AST_Info)info3805;
// cascades
send183621 = (Object)new_AST_Send((Object)localvariable26661, (Object)symbol35725, 0);
((AST_Send)send183621)->info = (AST_Info)info3805;
smallint20943 = (Object)new_Type_SmallInt(2);
constant35614 = (Object)new_AST_Constant((Object)smallint20943);
// at:
send183622 = (Object)new_AST_Send((Object)send183621, (Object)SMB_at_, 1, (Object)constant35614);
((AST_Send)send183622)->info = (AST_Info)info3805;
assign22535 = (Object)new_AST_Assign((Object)localvariable26662, (Object)send183622);
// class
send183623 = (Object)new_AST_Send((Object)localvariable26662, (Object)SMB_class, 0);
((AST_Send)send183623)->info = (AST_Info)info3805;
// should
send183624 = (Object)new_AST_Send((Object)send183623, (Object)symbol35983, 0);
((AST_Send)send183624)->info = (AST_Info)info3805;
// =
send183625 = (Object)new_AST_Send((Object)send183624, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send183625)->info = (AST_Info)info3805;
// cascades
send183626 = (Object)new_AST_Send((Object)localvariable26661, (Object)symbol35725, 0);
((AST_Send)send183626)->info = (AST_Info)info3805;
smallint20944 = (Object)new_Type_SmallInt(3);
constant35615 = (Object)new_AST_Constant((Object)smallint20944);
// at:
send183627 = (Object)new_AST_Send((Object)send183626, (Object)SMB_at_, 1, (Object)constant35615);
((AST_Send)send183627)->info = (AST_Info)info3805;
assign22536 = (Object)new_AST_Assign((Object)localvariable26662, (Object)send183627);
// class
send183628 = (Object)new_AST_Send((Object)localvariable26662, (Object)SMB_class, 0);
((AST_Send)send183628)->info = (AST_Info)info3805;
// should
send183629 = (Object)new_AST_Send((Object)send183628, (Object)symbol35983, 0);
((AST_Send)send183629)->info = (AST_Info)info3805;
// =
send183630 = (Object)new_AST_Send((Object)send183629, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send183630)->info = (AST_Info)info3805;
// cascades
send183631 = (Object)new_AST_Send((Object)localvariable26661, (Object)symbol35725, 0);
((AST_Send)send183631)->info = (AST_Info)info3805;
smallint20945 = (Object)new_Type_SmallInt(4);
constant35616 = (Object)new_AST_Constant((Object)smallint20945);
// at:
send183632 = (Object)new_AST_Send((Object)send183631, (Object)SMB_at_, 1, (Object)constant35616);
((AST_Send)send183632)->info = (AST_Info)info3805;
assign22537 = (Object)new_AST_Assign((Object)localvariable26662, (Object)send183632);
// class
send183633 = (Object)new_AST_Send((Object)localvariable26662, (Object)SMB_class, 0);
((AST_Send)send183633)->info = (AST_Info)info3805;
// should
send183634 = (Object)new_AST_Send((Object)send183633, (Object)symbol35983, 0);
((AST_Send)send183634)->info = (AST_Info)info3805;
// =
send183635 = (Object)new_AST_Send((Object)send183634, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send183635)->info = (AST_Info)info3805;
method25379 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21397, 15, assign22527, assign22528, assign22529, send183596, send183611, send183615, assign22534, send183620, assign22535, send183625, assign22536, send183630, assign22537, send183635, Self);
((AST_Method)method25379)->info = (AST_Info)info3805;
symbol35541 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure25377 = (Object)new_Runtime_MethodClosure(method25379);
store_method((Type_Class)class4034, (Type_Symbol)symbol35541, (Runtime_MethodClosure)methodclosure25377);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable26668 = (Object)new_AST_Variable_named(L"parser");
localvariable26669 = (Object)new_AST_Variable_named(L"string");
localvariable26670 = (Object)new_AST_Variable_named(L"result");
array21403 = (Object)new_Type_Array_with(3, (Object)localvariable26668, (Object)localvariable26669, (Object)localvariable26670);
// binaryObjectDescription
send183636 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35992, 0);
string28043 = (Object)new_Type_String(L"testBinaryObjectDescription");
string28044 = (Object)new_Type_String(L"testBinaryObjectDescription\n\t| parser string result |\n\tparser := scparser binaryObjectDescription.\t\" unary object description -> unary expression \"\n\tstring := PEGStringScanner on: \'abc def ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector asString should = \'ghi\'.\n\tresult := result receiver.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector asString should = \'def\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tstring position should = 12.\t\" unary object description -> primary \"\n\tstring := PEGStringScanner on: \'3\'.\n\tresult := parser match: string.\n\tresult class should = ASTNumber.\n\tresult number should = \'3\'.\n\tstring position should = 1.\t\" binary expression \"\n\tstring := PEGStringScanner on: \'abc + ghi * c \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'*\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'c\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'+\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 13");
smallint20946 = (Object)new_Type_SmallInt(-1);
smallint20947 = (Object)new_Type_SmallInt(-1);
info3817 = (Object)new_AST_Info((Type_String)string28044,(Type_String)string28043, (Type_SmallInt)smallint20946, (Type_SmallInt)smallint20947);
((AST_Send)send183636)->info = (AST_Info)info3817;
assign22538 = (Object)new_AST_Assign((Object)localvariable26668, (Object)send183636);
string28045 = (Object)new_Type_String(L"abc def ghi ");
constant35617 = (Object)new_AST_Constant((Object)string28045);
// on:
send183637 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35617);
((AST_Send)send183637)->info = (AST_Info)info3817;
assign22539 = (Object)new_AST_Assign((Object)localvariable26669, (Object)send183637);
// match:
send183638 = (Object)new_AST_Send((Object)localvariable26668, (Object)symbol35843, 1, (Object)localvariable26669);
((AST_Send)send183638)->info = (AST_Info)info3817;
assign22540 = (Object)new_AST_Assign((Object)localvariable26670, (Object)send183638);
// class
send183639 = (Object)new_AST_Send((Object)localvariable26670, (Object)SMB_class, 0);
((AST_Send)send183639)->info = (AST_Info)info3817;
// should
send183640 = (Object)new_AST_Send((Object)send183639, (Object)symbol35983, 0);
((AST_Send)send183640)->info = (AST_Info)info3817;
// =
send183641 = (Object)new_AST_Send((Object)send183640, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send183641)->info = (AST_Info)info3817;
// selector
send183642 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35626, 0);
((AST_Send)send183642)->info = (AST_Info)info3817;
// class
send183643 = (Object)new_AST_Send((Object)send183642, (Object)SMB_class, 0);
((AST_Send)send183643)->info = (AST_Info)info3817;
// should
send183644 = (Object)new_AST_Send((Object)send183643, (Object)symbol35983, 0);
((AST_Send)send183644)->info = (AST_Info)info3817;
// =
send183645 = (Object)new_AST_Send((Object)send183644, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send183645)->info = (AST_Info)info3817;
// selector
send183646 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35626, 0);
((AST_Send)send183646)->info = (AST_Info)info3817;
// selector
send183647 = (Object)new_AST_Send((Object)send183646, (Object)symbol35626, 0);
((AST_Send)send183647)->info = (AST_Info)info3817;
// asString
send183648 = (Object)new_AST_Send((Object)send183647, (Object)SMB_asString, 0);
((AST_Send)send183648)->info = (AST_Info)info3817;
// should
send183649 = (Object)new_AST_Send((Object)send183648, (Object)symbol35983, 0);
((AST_Send)send183649)->info = (AST_Info)info3817;
string28046 = (Object)new_Type_String(L"ghi");
constant35618 = (Object)new_AST_Constant((Object)string28046);
// =
send183650 = (Object)new_AST_Send((Object)send183649, (Object)SMB__equal, 1, (Object)constant35618);
((AST_Send)send183650)->info = (AST_Info)info3817;
// receiver
send183651 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35728, 0);
((AST_Send)send183651)->info = (AST_Info)info3817;
assign22541 = (Object)new_AST_Assign((Object)localvariable26670, (Object)send183651);
// class
send183652 = (Object)new_AST_Send((Object)localvariable26670, (Object)SMB_class, 0);
((AST_Send)send183652)->info = (AST_Info)info3817;
// should
send183653 = (Object)new_AST_Send((Object)send183652, (Object)symbol35983, 0);
((AST_Send)send183653)->info = (AST_Info)info3817;
// =
send183654 = (Object)new_AST_Send((Object)send183653, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send183654)->info = (AST_Info)info3817;
// selector
send183655 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35626, 0);
((AST_Send)send183655)->info = (AST_Info)info3817;
// class
send183656 = (Object)new_AST_Send((Object)send183655, (Object)SMB_class, 0);
((AST_Send)send183656)->info = (AST_Info)info3817;
// should
send183657 = (Object)new_AST_Send((Object)send183656, (Object)symbol35983, 0);
((AST_Send)send183657)->info = (AST_Info)info3817;
// =
send183658 = (Object)new_AST_Send((Object)send183657, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send183658)->info = (AST_Info)info3817;
// selector
send183659 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35626, 0);
((AST_Send)send183659)->info = (AST_Info)info3817;
// selector
send183660 = (Object)new_AST_Send((Object)send183659, (Object)symbol35626, 0);
((AST_Send)send183660)->info = (AST_Info)info3817;
// asString
send183661 = (Object)new_AST_Send((Object)send183660, (Object)SMB_asString, 0);
((AST_Send)send183661)->info = (AST_Info)info3817;
// should
send183662 = (Object)new_AST_Send((Object)send183661, (Object)symbol35983, 0);
((AST_Send)send183662)->info = (AST_Info)info3817;
string28047 = (Object)new_Type_String(L"def");
constant35619 = (Object)new_AST_Constant((Object)string28047);
// =
send183663 = (Object)new_AST_Send((Object)send183662, (Object)SMB__equal, 1, (Object)constant35619);
((AST_Send)send183663)->info = (AST_Info)info3817;
// receiver
send183664 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35728, 0);
((AST_Send)send183664)->info = (AST_Info)info3817;
// class
send183665 = (Object)new_AST_Send((Object)send183664, (Object)SMB_class, 0);
((AST_Send)send183665)->info = (AST_Info)info3817;
// should
send183666 = (Object)new_AST_Send((Object)send183665, (Object)symbol35983, 0);
((AST_Send)send183666)->info = (AST_Info)info3817;
// =
send183667 = (Object)new_AST_Send((Object)send183666, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183667)->info = (AST_Info)info3817;
// receiver
send183668 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35728, 0);
((AST_Send)send183668)->info = (AST_Info)info3817;
// name
send183669 = (Object)new_AST_Send((Object)send183668, (Object)SMB_name, 0);
((AST_Send)send183669)->info = (AST_Info)info3817;
// should
send183670 = (Object)new_AST_Send((Object)send183669, (Object)symbol35983, 0);
((AST_Send)send183670)->info = (AST_Info)info3817;
string28048 = (Object)new_Type_String(L"abc");
constant35620 = (Object)new_AST_Constant((Object)string28048);
// =
send183671 = (Object)new_AST_Send((Object)send183670, (Object)SMB__equal, 1, (Object)constant35620);
((AST_Send)send183671)->info = (AST_Info)info3817;
// position
send183672 = (Object)new_AST_Send((Object)localvariable26669, (Object)symbol35988, 0);
((AST_Send)send183672)->info = (AST_Info)info3817;
// should
send183673 = (Object)new_AST_Send((Object)send183672, (Object)symbol35983, 0);
((AST_Send)send183673)->info = (AST_Info)info3817;
smallint20948 = (Object)new_Type_SmallInt(12);
constant35621 = (Object)new_AST_Constant((Object)smallint20948);
// =
send183674 = (Object)new_AST_Send((Object)send183673, (Object)SMB__equal, 1, (Object)constant35621);
((AST_Send)send183674)->info = (AST_Info)info3817;
string28049 = (Object)new_Type_String(L"3");
constant35622 = (Object)new_AST_Constant((Object)string28049);
// on:
send183675 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35622);
((AST_Send)send183675)->info = (AST_Info)info3817;
assign22542 = (Object)new_AST_Assign((Object)localvariable26669, (Object)send183675);
// match:
send183676 = (Object)new_AST_Send((Object)localvariable26668, (Object)symbol35843, 1, (Object)localvariable26669);
((AST_Send)send183676)->info = (AST_Info)info3817;
assign22543 = (Object)new_AST_Assign((Object)localvariable26670, (Object)send183676);
// class
send183677 = (Object)new_AST_Send((Object)localvariable26670, (Object)SMB_class, 0);
((AST_Send)send183677)->info = (AST_Info)info3817;
// should
send183678 = (Object)new_AST_Send((Object)send183677, (Object)symbol35983, 0);
((AST_Send)send183678)->info = (AST_Info)info3817;
// =
send183679 = (Object)new_AST_Send((Object)send183678, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send183679)->info = (AST_Info)info3817;
// number
send183680 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35701, 0);
((AST_Send)send183680)->info = (AST_Info)info3817;
// should
send183681 = (Object)new_AST_Send((Object)send183680, (Object)symbol35983, 0);
((AST_Send)send183681)->info = (AST_Info)info3817;
string28050 = (Object)new_Type_String(L"3");
constant35623 = (Object)new_AST_Constant((Object)string28050);
// =
send183682 = (Object)new_AST_Send((Object)send183681, (Object)SMB__equal, 1, (Object)constant35623);
((AST_Send)send183682)->info = (AST_Info)info3817;
// position
send183683 = (Object)new_AST_Send((Object)localvariable26669, (Object)symbol35988, 0);
((AST_Send)send183683)->info = (AST_Info)info3817;
// should
send183684 = (Object)new_AST_Send((Object)send183683, (Object)symbol35983, 0);
((AST_Send)send183684)->info = (AST_Info)info3817;
smallint20949 = (Object)new_Type_SmallInt(1);
constant35624 = (Object)new_AST_Constant((Object)smallint20949);
// =
send183685 = (Object)new_AST_Send((Object)send183684, (Object)SMB__equal, 1, (Object)constant35624);
((AST_Send)send183685)->info = (AST_Info)info3817;
string28051 = (Object)new_Type_String(L"abc + ghi * c ");
constant35625 = (Object)new_AST_Constant((Object)string28051);
// on:
send183686 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35625);
((AST_Send)send183686)->info = (AST_Info)info3817;
assign22544 = (Object)new_AST_Assign((Object)localvariable26669, (Object)send183686);
// match:
send183687 = (Object)new_AST_Send((Object)localvariable26668, (Object)symbol35843, 1, (Object)localvariable26669);
((AST_Send)send183687)->info = (AST_Info)info3817;
assign22545 = (Object)new_AST_Assign((Object)localvariable26670, (Object)send183687);
// class
send183688 = (Object)new_AST_Send((Object)localvariable26670, (Object)SMB_class, 0);
((AST_Send)send183688)->info = (AST_Info)info3817;
// should
send183689 = (Object)new_AST_Send((Object)send183688, (Object)symbol35983, 0);
((AST_Send)send183689)->info = (AST_Info)info3817;
// =
send183690 = (Object)new_AST_Send((Object)send183689, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send183690)->info = (AST_Info)info3817;
// selector
send183691 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35626, 0);
((AST_Send)send183691)->info = (AST_Info)info3817;
// printString
send183692 = (Object)new_AST_Send((Object)send183691, (Object)symbol35846, 0);
((AST_Send)send183692)->info = (AST_Info)info3817;
// should
send183693 = (Object)new_AST_Send((Object)send183692, (Object)symbol35983, 0);
((AST_Send)send183693)->info = (AST_Info)info3817;
string28052 = (Object)new_Type_String(L"*");
constant35626 = (Object)new_AST_Constant((Object)string28052);
// =
send183694 = (Object)new_AST_Send((Object)send183693, (Object)SMB__equal, 1, (Object)constant35626);
((AST_Send)send183694)->info = (AST_Info)info3817;
// argument
send183695 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35736, 0);
((AST_Send)send183695)->info = (AST_Info)info3817;
// class
send183696 = (Object)new_AST_Send((Object)send183695, (Object)SMB_class, 0);
((AST_Send)send183696)->info = (AST_Info)info3817;
// should
send183697 = (Object)new_AST_Send((Object)send183696, (Object)symbol35983, 0);
((AST_Send)send183697)->info = (AST_Info)info3817;
// =
send183698 = (Object)new_AST_Send((Object)send183697, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183698)->info = (AST_Info)info3817;
// argument
send183699 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35736, 0);
((AST_Send)send183699)->info = (AST_Info)info3817;
// name
send183700 = (Object)new_AST_Send((Object)send183699, (Object)SMB_name, 0);
((AST_Send)send183700)->info = (AST_Info)info3817;
// should
send183701 = (Object)new_AST_Send((Object)send183700, (Object)symbol35983, 0);
((AST_Send)send183701)->info = (AST_Info)info3817;
string28053 = (Object)new_Type_String(L"c");
constant35627 = (Object)new_AST_Constant((Object)string28053);
// =
send183702 = (Object)new_AST_Send((Object)send183701, (Object)SMB__equal, 1, (Object)constant35627);
((AST_Send)send183702)->info = (AST_Info)info3817;
// receiver
send183703 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35728, 0);
((AST_Send)send183703)->info = (AST_Info)info3817;
assign22546 = (Object)new_AST_Assign((Object)localvariable26670, (Object)send183703);
// class
send183704 = (Object)new_AST_Send((Object)localvariable26670, (Object)SMB_class, 0);
((AST_Send)send183704)->info = (AST_Info)info3817;
// should
send183705 = (Object)new_AST_Send((Object)send183704, (Object)symbol35983, 0);
((AST_Send)send183705)->info = (AST_Info)info3817;
// =
send183706 = (Object)new_AST_Send((Object)send183705, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send183706)->info = (AST_Info)info3817;
// selector
send183707 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35626, 0);
((AST_Send)send183707)->info = (AST_Info)info3817;
// printString
send183708 = (Object)new_AST_Send((Object)send183707, (Object)symbol35846, 0);
((AST_Send)send183708)->info = (AST_Info)info3817;
// should
send183709 = (Object)new_AST_Send((Object)send183708, (Object)symbol35983, 0);
((AST_Send)send183709)->info = (AST_Info)info3817;
string28054 = (Object)new_Type_String(L"+");
constant35628 = (Object)new_AST_Constant((Object)string28054);
// =
send183710 = (Object)new_AST_Send((Object)send183709, (Object)SMB__equal, 1, (Object)constant35628);
((AST_Send)send183710)->info = (AST_Info)info3817;
// receiver
send183711 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35728, 0);
((AST_Send)send183711)->info = (AST_Info)info3817;
// class
send183712 = (Object)new_AST_Send((Object)send183711, (Object)SMB_class, 0);
((AST_Send)send183712)->info = (AST_Info)info3817;
// should
send183713 = (Object)new_AST_Send((Object)send183712, (Object)symbol35983, 0);
((AST_Send)send183713)->info = (AST_Info)info3817;
// =
send183714 = (Object)new_AST_Send((Object)send183713, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183714)->info = (AST_Info)info3817;
// receiver
send183715 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35728, 0);
((AST_Send)send183715)->info = (AST_Info)info3817;
// name
send183716 = (Object)new_AST_Send((Object)send183715, (Object)SMB_name, 0);
((AST_Send)send183716)->info = (AST_Info)info3817;
// should
send183717 = (Object)new_AST_Send((Object)send183716, (Object)symbol35983, 0);
((AST_Send)send183717)->info = (AST_Info)info3817;
string28055 = (Object)new_Type_String(L"abc");
constant35629 = (Object)new_AST_Constant((Object)string28055);
// =
send183718 = (Object)new_AST_Send((Object)send183717, (Object)SMB__equal, 1, (Object)constant35629);
((AST_Send)send183718)->info = (AST_Info)info3817;
// argument
send183719 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35736, 0);
((AST_Send)send183719)->info = (AST_Info)info3817;
// class
send183720 = (Object)new_AST_Send((Object)send183719, (Object)SMB_class, 0);
((AST_Send)send183720)->info = (AST_Info)info3817;
// should
send183721 = (Object)new_AST_Send((Object)send183720, (Object)symbol35983, 0);
((AST_Send)send183721)->info = (AST_Info)info3817;
// =
send183722 = (Object)new_AST_Send((Object)send183721, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183722)->info = (AST_Info)info3817;
// argument
send183723 = (Object)new_AST_Send((Object)localvariable26670, (Object)symbol35736, 0);
((AST_Send)send183723)->info = (AST_Info)info3817;
// name
send183724 = (Object)new_AST_Send((Object)send183723, (Object)SMB_name, 0);
((AST_Send)send183724)->info = (AST_Info)info3817;
// should
send183725 = (Object)new_AST_Send((Object)send183724, (Object)symbol35983, 0);
((AST_Send)send183725)->info = (AST_Info)info3817;
string28056 = (Object)new_Type_String(L"ghi");
constant35630 = (Object)new_AST_Constant((Object)string28056);
// =
send183726 = (Object)new_AST_Send((Object)send183725, (Object)SMB__equal, 1, (Object)constant35630);
((AST_Send)send183726)->info = (AST_Info)info3817;
// position
send183727 = (Object)new_AST_Send((Object)localvariable26669, (Object)symbol35988, 0);
((AST_Send)send183727)->info = (AST_Info)info3817;
// should
send183728 = (Object)new_AST_Send((Object)send183727, (Object)symbol35983, 0);
((AST_Send)send183728)->info = (AST_Info)info3817;
smallint20950 = (Object)new_Type_SmallInt(13);
constant35631 = (Object)new_AST_Constant((Object)smallint20950);
// =
send183729 = (Object)new_AST_Send((Object)send183728, (Object)SMB__equal, 1, (Object)constant35631);
((AST_Send)send183729)->info = (AST_Info)info3817;
method25380 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21403, 33, assign22538, assign22539, assign22540, send183641, send183645, send183650, assign22541, send183654, send183658, send183663, send183667, send183671, send183674, assign22542, assign22543, send183679, send183682, send183685, assign22544, assign22545, send183690, send183694, send183698, send183702, assign22546, send183706, send183710, send183714, send183718, send183722, send183726, send183729, Self);
((AST_Method)method25380)->info = (AST_Info)info3817;
symbol35561 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure25378 = (Object)new_Runtime_MethodClosure(method25380);
store_method((Type_Class)class4034, (Type_Symbol)symbol35561, (Runtime_MethodClosure)methodclosure25378);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable26671 = (Object)new_AST_Variable_named(L"parser");
localvariable26672 = (Object)new_AST_Variable_named(L"string");
array21404 = (Object)new_Type_Array_with(2, (Object)localvariable26671, (Object)localvariable26672);
symbol35996 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send183730 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35996, 0);
string28057 = (Object)new_Type_String(L"testBinarySelector");
string28058 = (Object)new_Type_String(L"testBinarySelector\n\t| parser string |\n\tparser := scparser binarySelector.\n\tstring := PEGStringScanner on: \'+= a\'.\n\t(parser match: string) printString should = \'+=\'.\n\tstring position should = 2.\n\tstring := PEGStringScanner on: \'|= a\'.\n\t(parser match: string) printString should = \'|\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'-= a\'.\n\t(parser match: string) printString should = \'-=\'.\n\tstring position should = 2.\n\tstring := PEGStringScanner on: \'=- a\'.\n\t(parser match: string) printString should = \'=\'.\n\tstring position should = 1");
smallint20951 = (Object)new_Type_SmallInt(-1);
smallint20952 = (Object)new_Type_SmallInt(-1);
info3818 = (Object)new_AST_Info((Type_String)string28058,(Type_String)string28057, (Type_SmallInt)smallint20951, (Type_SmallInt)smallint20952);
((AST_Send)send183730)->info = (AST_Info)info3818;
assign22547 = (Object)new_AST_Assign((Object)localvariable26671, (Object)send183730);
string28059 = (Object)new_Type_String(L"+= a");
constant35632 = (Object)new_AST_Constant((Object)string28059);
// on:
send183731 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35632);
((AST_Send)send183731)->info = (AST_Info)info3818;
assign22548 = (Object)new_AST_Assign((Object)localvariable26672, (Object)send183731);
// match:
send183732 = (Object)new_AST_Send((Object)localvariable26671, (Object)symbol35843, 1, (Object)localvariable26672);
((AST_Send)send183732)->info = (AST_Info)info3818;
// printString
send183733 = (Object)new_AST_Send((Object)send183732, (Object)symbol35846, 0);
((AST_Send)send183733)->info = (AST_Info)info3818;
// should
send183734 = (Object)new_AST_Send((Object)send183733, (Object)symbol35983, 0);
((AST_Send)send183734)->info = (AST_Info)info3818;
string28060 = (Object)new_Type_String(L"+=");
constant35633 = (Object)new_AST_Constant((Object)string28060);
// =
send183735 = (Object)new_AST_Send((Object)send183734, (Object)SMB__equal, 1, (Object)constant35633);
((AST_Send)send183735)->info = (AST_Info)info3818;
// position
send183736 = (Object)new_AST_Send((Object)localvariable26672, (Object)symbol35988, 0);
((AST_Send)send183736)->info = (AST_Info)info3818;
// should
send183737 = (Object)new_AST_Send((Object)send183736, (Object)symbol35983, 0);
((AST_Send)send183737)->info = (AST_Info)info3818;
smallint20953 = (Object)new_Type_SmallInt(2);
constant35634 = (Object)new_AST_Constant((Object)smallint20953);
// =
send183738 = (Object)new_AST_Send((Object)send183737, (Object)SMB__equal, 1, (Object)constant35634);
((AST_Send)send183738)->info = (AST_Info)info3818;
string28061 = (Object)new_Type_String(L"|= a");
constant35635 = (Object)new_AST_Constant((Object)string28061);
// on:
send183739 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35635);
((AST_Send)send183739)->info = (AST_Info)info3818;
assign22549 = (Object)new_AST_Assign((Object)localvariable26672, (Object)send183739);
// match:
send183740 = (Object)new_AST_Send((Object)localvariable26671, (Object)symbol35843, 1, (Object)localvariable26672);
((AST_Send)send183740)->info = (AST_Info)info3818;
// printString
send183741 = (Object)new_AST_Send((Object)send183740, (Object)symbol35846, 0);
((AST_Send)send183741)->info = (AST_Info)info3818;
// should
send183742 = (Object)new_AST_Send((Object)send183741, (Object)symbol35983, 0);
((AST_Send)send183742)->info = (AST_Info)info3818;
string28062 = (Object)new_Type_String(L"|");
constant35636 = (Object)new_AST_Constant((Object)string28062);
// =
send183743 = (Object)new_AST_Send((Object)send183742, (Object)SMB__equal, 1, (Object)constant35636);
((AST_Send)send183743)->info = (AST_Info)info3818;
// position
send183744 = (Object)new_AST_Send((Object)localvariable26672, (Object)symbol35988, 0);
((AST_Send)send183744)->info = (AST_Info)info3818;
// should
send183745 = (Object)new_AST_Send((Object)send183744, (Object)symbol35983, 0);
((AST_Send)send183745)->info = (AST_Info)info3818;
smallint20954 = (Object)new_Type_SmallInt(1);
constant35637 = (Object)new_AST_Constant((Object)smallint20954);
// =
send183746 = (Object)new_AST_Send((Object)send183745, (Object)SMB__equal, 1, (Object)constant35637);
((AST_Send)send183746)->info = (AST_Info)info3818;
string28063 = (Object)new_Type_String(L"-= a");
constant35638 = (Object)new_AST_Constant((Object)string28063);
// on:
send183747 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35638);
((AST_Send)send183747)->info = (AST_Info)info3818;
assign22550 = (Object)new_AST_Assign((Object)localvariable26672, (Object)send183747);
// match:
send183748 = (Object)new_AST_Send((Object)localvariable26671, (Object)symbol35843, 1, (Object)localvariable26672);
((AST_Send)send183748)->info = (AST_Info)info3818;
// printString
send183749 = (Object)new_AST_Send((Object)send183748, (Object)symbol35846, 0);
((AST_Send)send183749)->info = (AST_Info)info3818;
// should
send183750 = (Object)new_AST_Send((Object)send183749, (Object)symbol35983, 0);
((AST_Send)send183750)->info = (AST_Info)info3818;
string28064 = (Object)new_Type_String(L"-=");
constant35639 = (Object)new_AST_Constant((Object)string28064);
// =
send183751 = (Object)new_AST_Send((Object)send183750, (Object)SMB__equal, 1, (Object)constant35639);
((AST_Send)send183751)->info = (AST_Info)info3818;
// position
send183752 = (Object)new_AST_Send((Object)localvariable26672, (Object)symbol35988, 0);
((AST_Send)send183752)->info = (AST_Info)info3818;
// should
send183753 = (Object)new_AST_Send((Object)send183752, (Object)symbol35983, 0);
((AST_Send)send183753)->info = (AST_Info)info3818;
smallint20955 = (Object)new_Type_SmallInt(2);
constant35640 = (Object)new_AST_Constant((Object)smallint20955);
// =
send183754 = (Object)new_AST_Send((Object)send183753, (Object)SMB__equal, 1, (Object)constant35640);
((AST_Send)send183754)->info = (AST_Info)info3818;
string28065 = (Object)new_Type_String(L"=- a");
constant35641 = (Object)new_AST_Constant((Object)string28065);
// on:
send183755 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35641);
((AST_Send)send183755)->info = (AST_Info)info3818;
assign22551 = (Object)new_AST_Assign((Object)localvariable26672, (Object)send183755);
// match:
send183756 = (Object)new_AST_Send((Object)localvariable26671, (Object)symbol35843, 1, (Object)localvariable26672);
((AST_Send)send183756)->info = (AST_Info)info3818;
// printString
send183757 = (Object)new_AST_Send((Object)send183756, (Object)symbol35846, 0);
((AST_Send)send183757)->info = (AST_Info)info3818;
// should
send183758 = (Object)new_AST_Send((Object)send183757, (Object)symbol35983, 0);
((AST_Send)send183758)->info = (AST_Info)info3818;
string28066 = (Object)new_Type_String(L"=");
constant35642 = (Object)new_AST_Constant((Object)string28066);
// =
send183759 = (Object)new_AST_Send((Object)send183758, (Object)SMB__equal, 1, (Object)constant35642);
((AST_Send)send183759)->info = (AST_Info)info3818;
// position
send183760 = (Object)new_AST_Send((Object)localvariable26672, (Object)symbol35988, 0);
((AST_Send)send183760)->info = (AST_Info)info3818;
// should
send183761 = (Object)new_AST_Send((Object)send183760, (Object)symbol35983, 0);
((AST_Send)send183761)->info = (AST_Info)info3818;
smallint20956 = (Object)new_Type_SmallInt(1);
constant35643 = (Object)new_AST_Constant((Object)smallint20956);
// =
send183762 = (Object)new_AST_Send((Object)send183761, (Object)SMB__equal, 1, (Object)constant35643);
((AST_Send)send183762)->info = (AST_Info)info3818;
method25381 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21404, 14, assign22547, assign22548, send183735, send183738, assign22549, send183743, send183746, assign22550, send183751, send183754, assign22551, send183759, send183762, Self);
((AST_Method)method25381)->info = (AST_Info)info3818;
symbol35581 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure25379 = (Object)new_Runtime_MethodClosure(method25381);
store_method((Type_Class)class4034, (Type_Symbol)symbol35581, (Runtime_MethodClosure)methodclosure25379);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable26673 = (Object)new_AST_Variable_named(L"parser");
localvariable26674 = (Object)new_AST_Variable_named(L"string");
localvariable26675 = (Object)new_AST_Variable_named(L"result");
array21405 = (Object)new_Type_Array_with(3, (Object)localvariable26673, (Object)localvariable26674, (Object)localvariable26675);
symbol35997 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send183763 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35997, 0);
string28067 = (Object)new_Type_String(L"testCharacterConstant");
string28068 = (Object)new_Type_String(L"testCharacterConstant\n\t| parser string result |\n\tparser := scparser characterConstant.\n\tstring := PEGStringScanner on: \'a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'$_\'.\n\tresult := parser match: string.\n\tresult class should = ASTCharacter.\n\tresult char should = $_.\n\tstring position should = 2");
smallint20957 = (Object)new_Type_SmallInt(-1);
smallint20958 = (Object)new_Type_SmallInt(-1);
info3819 = (Object)new_AST_Info((Type_String)string28068,(Type_String)string28067, (Type_SmallInt)smallint20957, (Type_SmallInt)smallint20958);
((AST_Send)send183763)->info = (AST_Info)info3819;
assign22552 = (Object)new_AST_Assign((Object)localvariable26673, (Object)send183763);
string28069 = (Object)new_Type_String(L"a");
constant35644 = (Object)new_AST_Constant((Object)string28069);
// on:
send183764 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35644);
((AST_Send)send183764)->info = (AST_Info)info3819;
assign22553 = (Object)new_AST_Assign((Object)localvariable26674, (Object)send183764);
// match:
send183765 = (Object)new_AST_Send((Object)localvariable26673, (Object)symbol35843, 1, (Object)localvariable26674);
((AST_Send)send183765)->info = (AST_Info)info3819;
// should
send183766 = (Object)new_AST_Send((Object)send183765, (Object)symbol35983, 0);
((AST_Send)send183766)->info = (AST_Info)info3819;
// be
send183767 = (Object)new_AST_Send((Object)send183766, (Object)symbol35989, 0);
((AST_Send)send183767)->info = (AST_Info)info3819;
// isNil
send183768 = (Object)new_AST_Send((Object)send183767, (Object)SMB_isNil, 0);
((AST_Send)send183768)->info = (AST_Info)info3819;
// position
send183769 = (Object)new_AST_Send((Object)localvariable26674, (Object)symbol35988, 0);
((AST_Send)send183769)->info = (AST_Info)info3819;
// should
send183770 = (Object)new_AST_Send((Object)send183769, (Object)symbol35983, 0);
((AST_Send)send183770)->info = (AST_Info)info3819;
smallint20959 = (Object)new_Type_SmallInt(0);
constant35645 = (Object)new_AST_Constant((Object)smallint20959);
// =
send183771 = (Object)new_AST_Send((Object)send183770, (Object)SMB__equal, 1, (Object)constant35645);
((AST_Send)send183771)->info = (AST_Info)info3819;
string28070 = (Object)new_Type_String(L"$_");
constant35646 = (Object)new_AST_Constant((Object)string28070);
// on:
send183772 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35646);
((AST_Send)send183772)->info = (AST_Info)info3819;
assign22554 = (Object)new_AST_Assign((Object)localvariable26674, (Object)send183772);
// match:
send183773 = (Object)new_AST_Send((Object)localvariable26673, (Object)symbol35843, 1, (Object)localvariable26674);
((AST_Send)send183773)->info = (AST_Info)info3819;
assign22555 = (Object)new_AST_Assign((Object)localvariable26675, (Object)send183773);
// class
send183774 = (Object)new_AST_Send((Object)localvariable26675, (Object)SMB_class, 0);
((AST_Send)send183774)->info = (AST_Info)info3819;
// should
send183775 = (Object)new_AST_Send((Object)send183774, (Object)symbol35983, 0);
((AST_Send)send183775)->info = (AST_Info)info3819;
classreference4831 = (Object)new_Organization_ClassReference((Type_Class)class4062);

// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable26676 = (Object)new_AST_Variable_named(L"aChar");
array21406 = (Object)new_Type_Array_with(1, (Object)localvariable26676);
assign22556 = (Object)new_AST_Assign((Object)instancevariable6026, (Object)localvariable26676);
method25382 = (Object)new_AST_Method_with((Type_Array)array21406, (Type_Array)empty_Type_Array, 2, assign22556, Self);
string28071 = (Object)new_Type_String(L"char:");
string28072 = (Object)new_Type_String(L"char: aChar\n\tchar := aChar");
smallint20960 = (Object)new_Type_SmallInt(-1);
smallint20961 = (Object)new_Type_SmallInt(-1);
info3820 = (Object)new_AST_Info((Type_String)string28072,(Type_String)string28071, (Type_SmallInt)smallint20960, (Type_SmallInt)smallint20961);
((AST_Method)method25382)->info = (AST_Info)info3820;
symbol35864 = (Object)new_Type_Symbol_cached(L"char:");
methodclosure25380 = (Object)new_Runtime_MethodClosure(method25382);
store_method((Type_Class)class4062, (Type_Symbol)symbol35864, (Runtime_MethodClosure)methodclosure25380);


// ASTCharacter>>char
//char
// 	^ char
method25383 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6026);
string28073 = (Object)new_Type_String(L"char");
string28074 = (Object)new_Type_String(L"char\n\t^ char");
smallint20962 = (Object)new_Type_SmallInt(-1);
smallint20963 = (Object)new_Type_SmallInt(-1);
info3821 = (Object)new_AST_Info((Type_String)string28074,(Type_String)string28073, (Type_SmallInt)smallint20962, (Type_SmallInt)smallint20963);
((AST_Method)method25383)->info = (AST_Info)info3821;
symbol35865 = (Object)new_Type_Symbol_cached(L"char");
methodclosure25381 = (Object)new_Runtime_MethodClosure(method25383);
store_method((Type_Class)class4062, (Type_Symbol)symbol35865, (Runtime_MethodClosure)methodclosure25381);


// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char
// new
send183776 = (Object)new_AST_Send((Object)classreference4799, (Object)symbol35612, 0);
string28075 = (Object)new_Type_String(L"asPCharacter");
string28076 = (Object)new_Type_String(L"asPCharacter\n\t^PCharacter new char: self char");
smallint20964 = (Object)new_Type_SmallInt(-1);
smallint20965 = (Object)new_Type_SmallInt(-1);
info3822 = (Object)new_AST_Info((Type_String)string28076,(Type_String)string28075, (Type_SmallInt)smallint20964, (Type_SmallInt)smallint20965);
((AST_Send)send183776)->info = (AST_Info)info3822;
// char
send183777 = (Object)new_AST_Send((Object)Self, (Object)symbol35865, 0);
((AST_Send)send183777)->info = (AST_Info)info3822;
// char:
send183778 = (Object)new_AST_Send((Object)send183776, (Object)symbol35864, 1, (Object)send183777);
((AST_Send)send183778)->info = (AST_Info)info3822;
method25384 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183778);
((AST_Method)method25384)->info = (AST_Info)info3822;
symbol35866 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure25382 = (Object)new_Runtime_MethodClosure(method25384);
store_method((Type_Class)class4062, (Type_Symbol)symbol35866, (Runtime_MethodClosure)methodclosure25382);

// =
send183779 = (Object)new_AST_Send((Object)send183775, (Object)SMB__equal, 1, (Object)classreference4831);
((AST_Send)send183779)->info = (AST_Info)info3819;
// char
send183780 = (Object)new_AST_Send((Object)localvariable26675, (Object)symbol35865, 0);
((AST_Send)send183780)->info = (AST_Info)info3819;
// should
send183781 = (Object)new_AST_Send((Object)send183780, (Object)symbol35983, 0);
((AST_Send)send183781)->info = (AST_Info)info3819;
character136 = (Object)new_Type_Character(L'_');
constant35647 = (Object)new_AST_Constant((Object)character136);
// =
send183782 = (Object)new_AST_Send((Object)send183781, (Object)SMB__equal, 1, (Object)constant35647);
((AST_Send)send183782)->info = (AST_Info)info3819;
// position
send183783 = (Object)new_AST_Send((Object)localvariable26674, (Object)symbol35988, 0);
((AST_Send)send183783)->info = (AST_Info)info3819;
// should
send183784 = (Object)new_AST_Send((Object)send183783, (Object)symbol35983, 0);
((AST_Send)send183784)->info = (AST_Info)info3819;
smallint20966 = (Object)new_Type_SmallInt(2);
constant35648 = (Object)new_AST_Constant((Object)smallint20966);
// =
send183785 = (Object)new_AST_Send((Object)send183784, (Object)SMB__equal, 1, (Object)constant35648);
((AST_Send)send183785)->info = (AST_Info)info3819;
method25385 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21405, 10, assign22552, assign22553, send183768, send183771, assign22554, assign22555, send183779, send183782, send183785, Self);
((AST_Method)method25385)->info = (AST_Info)info3819;
symbol35598 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure25383 = (Object)new_Runtime_MethodClosure(method25385);
store_method((Type_Class)class4034, (Type_Symbol)symbol35598, (Runtime_MethodClosure)methodclosure25383);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable26677 = (Object)new_AST_Variable_named(L"parser");
localvariable26678 = (Object)new_AST_Variable_named(L"string");
array21407 = (Object)new_Type_Array_with(2, (Object)localvariable26677, (Object)localvariable26678);
symbol35747 = (Object)new_Type_Symbol_cached(L"temporaries");
// temporaries
send183786 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35747, 0);
string28077 = (Object)new_Type_String(L"testTemporaries");
string28078 = (Object)new_Type_String(L"testTemporaries\n\t| parser string |\n\tparser := scparser temporaries.\n\tstring := PEGStringScanner on: \'|a b c|\'.\n\t((parser match: string) collect: #name) asArray should = ((Array new: 3)\n\tat: 1 put: \'a\';\n\tat: 2 put: \'b\';\n\tat: 3 put: \'c\';\n\tyourself).\n\tstring position should = 7.\n\tstring := PEGStringScanner on: \'|  a b c  |\'.\n\t((parser match: string) collect: #name) asArray should = ((Array new: 3)\n\tat: 1 put: \'a\';\n\tat: 2 put: \'b\';\n\tat: 3 put: \'c\';\n\tyourself).\n\tstring position should = 11");
smallint20967 = (Object)new_Type_SmallInt(-1);
smallint20968 = (Object)new_Type_SmallInt(-1);
info3823 = (Object)new_AST_Info((Type_String)string28078,(Type_String)string28077, (Type_SmallInt)smallint20967, (Type_SmallInt)smallint20968);
((AST_Send)send183786)->info = (AST_Info)info3823;
assign22557 = (Object)new_AST_Assign((Object)localvariable26677, (Object)send183786);
string28079 = (Object)new_Type_String(L"|a b c|");
constant35649 = (Object)new_AST_Constant((Object)string28079);
// on:
send183787 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35649);
((AST_Send)send183787)->info = (AST_Info)info3823;
assign22558 = (Object)new_AST_Assign((Object)localvariable26678, (Object)send183787);
// match:
send183788 = (Object)new_AST_Send((Object)localvariable26677, (Object)symbol35843, 1, (Object)localvariable26678);
((AST_Send)send183788)->info = (AST_Info)info3823;
constant35650 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send183789 = (Object)new_AST_Send((Object)send183788, (Object)symbol35899, 1, (Object)constant35650);
((AST_Send)send183789)->info = (AST_Info)info3823;
// asArray
send183790 = (Object)new_AST_Send((Object)send183789, (Object)SMB_asArray, 0);
((AST_Send)send183790)->info = (AST_Info)info3823;
// should
send183791 = (Object)new_AST_Send((Object)send183790, (Object)symbol35983, 0);
((AST_Send)send183791)->info = (AST_Info)info3823;
localvariable26679 = (Object)new_AST_Variable_named(L"receiver");
array21408 = (Object)new_Type_Array_with(1, (Object)localvariable26679);
smallint20969 = (Object)new_Type_SmallInt(1);
constant35651 = (Object)new_AST_Constant((Object)smallint20969);
string28080 = (Object)new_Type_String(L"a");
constant35652 = (Object)new_AST_Constant((Object)string28080);
// at:put:
send183792 = (Object)new_AST_Send((Object)localvariable26679, (Object)SMB_at_put_, 2, (Object)constant35651, (Object)constant35652);
((AST_Send)send183792)->info = (AST_Info)info3823;
smallint20970 = (Object)new_Type_SmallInt(2);
constant35653 = (Object)new_AST_Constant((Object)smallint20970);
string28081 = (Object)new_Type_String(L"b");
constant35654 = (Object)new_AST_Constant((Object)string28081);
// at:put:
send183793 = (Object)new_AST_Send((Object)localvariable26679, (Object)SMB_at_put_, 2, (Object)constant35653, (Object)constant35654);
((AST_Send)send183793)->info = (AST_Info)info3823;
smallint20971 = (Object)new_Type_SmallInt(3);
constant35655 = (Object)new_AST_Constant((Object)smallint20971);
string28082 = (Object)new_Type_String(L"c");
constant35656 = (Object)new_AST_Constant((Object)string28082);
// at:put:
send183794 = (Object)new_AST_Send((Object)localvariable26679, (Object)SMB_at_put_, 2, (Object)constant35655, (Object)constant35656);
((AST_Send)send183794)->info = (AST_Info)info3823;
symbol35515 = (Object)new_Type_Symbol_cached(L"yourself");
// yourself
send183795 = (Object)new_AST_Send((Object)localvariable26679, (Object)symbol35515, 0);
((AST_Send)send183795)->info = (AST_Info)info3823;
block12798 = (Object)new_AST_Block_with((Type_Array)array21408, (Type_Array)empty_Type_Array, 1, 4, send183792, send183793, send183794, send183795);
smallint20972 = (Object)new_Type_SmallInt(3);
constant35657 = (Object)new_AST_Constant((Object)smallint20972);
// new:
send183796 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35657);
((AST_Send)send183796)->info = (AST_Info)info3823;
// value:
send183797 = (Object)new_AST_Send((Object)block12798, (Object)SMB_value_, 1, (Object)send183796);
((AST_Send)send183797)->info = (AST_Info)info3823;
// =
send183798 = (Object)new_AST_Send((Object)send183791, (Object)SMB__equal, 1, (Object)send183797);
((AST_Send)send183798)->info = (AST_Info)info3823;
// position
send183799 = (Object)new_AST_Send((Object)localvariable26678, (Object)symbol35988, 0);
((AST_Send)send183799)->info = (AST_Info)info3823;
// should
send183800 = (Object)new_AST_Send((Object)send183799, (Object)symbol35983, 0);
((AST_Send)send183800)->info = (AST_Info)info3823;
smallint20973 = (Object)new_Type_SmallInt(7);
constant35658 = (Object)new_AST_Constant((Object)smallint20973);
// =
send183801 = (Object)new_AST_Send((Object)send183800, (Object)SMB__equal, 1, (Object)constant35658);
((AST_Send)send183801)->info = (AST_Info)info3823;
string28083 = (Object)new_Type_String(L"|  a b c  |");
constant35659 = (Object)new_AST_Constant((Object)string28083);
// on:
send183802 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35659);
((AST_Send)send183802)->info = (AST_Info)info3823;
assign22559 = (Object)new_AST_Assign((Object)localvariable26678, (Object)send183802);
// match:
send183803 = (Object)new_AST_Send((Object)localvariable26677, (Object)symbol35843, 1, (Object)localvariable26678);
((AST_Send)send183803)->info = (AST_Info)info3823;
constant35660 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send183804 = (Object)new_AST_Send((Object)send183803, (Object)symbol35899, 1, (Object)constant35660);
((AST_Send)send183804)->info = (AST_Info)info3823;
// asArray
send183805 = (Object)new_AST_Send((Object)send183804, (Object)SMB_asArray, 0);
((AST_Send)send183805)->info = (AST_Info)info3823;
// should
send183806 = (Object)new_AST_Send((Object)send183805, (Object)symbol35983, 0);
((AST_Send)send183806)->info = (AST_Info)info3823;
localvariable26680 = (Object)new_AST_Variable_named(L"receiver");
array21409 = (Object)new_Type_Array_with(1, (Object)localvariable26680);
smallint20974 = (Object)new_Type_SmallInt(1);
constant35661 = (Object)new_AST_Constant((Object)smallint20974);
string28084 = (Object)new_Type_String(L"a");
constant35662 = (Object)new_AST_Constant((Object)string28084);
// at:put:
send183807 = (Object)new_AST_Send((Object)localvariable26680, (Object)SMB_at_put_, 2, (Object)constant35661, (Object)constant35662);
((AST_Send)send183807)->info = (AST_Info)info3823;
smallint20975 = (Object)new_Type_SmallInt(2);
constant35663 = (Object)new_AST_Constant((Object)smallint20975);
string28085 = (Object)new_Type_String(L"b");
constant35664 = (Object)new_AST_Constant((Object)string28085);
// at:put:
send183808 = (Object)new_AST_Send((Object)localvariable26680, (Object)SMB_at_put_, 2, (Object)constant35663, (Object)constant35664);
((AST_Send)send183808)->info = (AST_Info)info3823;
smallint20976 = (Object)new_Type_SmallInt(3);
constant35665 = (Object)new_AST_Constant((Object)smallint20976);
string28086 = (Object)new_Type_String(L"c");
constant35666 = (Object)new_AST_Constant((Object)string28086);
// at:put:
send183809 = (Object)new_AST_Send((Object)localvariable26680, (Object)SMB_at_put_, 2, (Object)constant35665, (Object)constant35666);
((AST_Send)send183809)->info = (AST_Info)info3823;
// yourself
send183810 = (Object)new_AST_Send((Object)localvariable26680, (Object)symbol35515, 0);
((AST_Send)send183810)->info = (AST_Info)info3823;
block12799 = (Object)new_AST_Block_with((Type_Array)array21409, (Type_Array)empty_Type_Array, 1, 4, send183807, send183808, send183809, send183810);
smallint20977 = (Object)new_Type_SmallInt(3);
constant35667 = (Object)new_AST_Constant((Object)smallint20977);
// new:
send183811 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35667);
((AST_Send)send183811)->info = (AST_Info)info3823;
// value:
send183812 = (Object)new_AST_Send((Object)block12799, (Object)SMB_value_, 1, (Object)send183811);
((AST_Send)send183812)->info = (AST_Info)info3823;
// =
send183813 = (Object)new_AST_Send((Object)send183806, (Object)SMB__equal, 1, (Object)send183812);
((AST_Send)send183813)->info = (AST_Info)info3823;
// position
send183814 = (Object)new_AST_Send((Object)localvariable26678, (Object)symbol35988, 0);
((AST_Send)send183814)->info = (AST_Info)info3823;
// should
send183815 = (Object)new_AST_Send((Object)send183814, (Object)symbol35983, 0);
((AST_Send)send183815)->info = (AST_Info)info3823;
smallint20978 = (Object)new_Type_SmallInt(11);
constant35668 = (Object)new_AST_Constant((Object)smallint20978);
// =
send183816 = (Object)new_AST_Send((Object)send183815, (Object)SMB__equal, 1, (Object)constant35668);
((AST_Send)send183816)->info = (AST_Info)info3823;
method25386 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21407, 8, assign22557, assign22558, send183798, send183801, assign22559, send183813, send183816, Self);
((AST_Method)method25386)->info = (AST_Info)info3823;
symbol35543 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure25384 = (Object)new_Runtime_MethodClosure(method25386);
store_method((Type_Class)class4034, (Type_Symbol)symbol35543, (Runtime_MethodClosure)methodclosure25384);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable26681 = (Object)new_AST_Variable_named(L"parser");
localvariable26682 = (Object)new_AST_Variable_named(L"string");
localvariable26683 = (Object)new_AST_Variable_named(L"result");
array21410 = (Object)new_Type_Array_with(3, (Object)localvariable26681, (Object)localvariable26682, (Object)localvariable26683);
symbol35998 = (Object)new_Type_Symbol_cached(L"method");
// method
send183817 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35998, 0);
string28087 = (Object)new_Type_String(L"testMethod3");
string28088 = (Object)new_Type_String(L"testMethod3\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'withA: a withB: b withC: c\n\t\t^ 1\n\t\'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message asString should = \'withA:withB:withC:\'");
smallint20979 = (Object)new_Type_SmallInt(-1);
smallint20980 = (Object)new_Type_SmallInt(-1);
info3824 = (Object)new_AST_Info((Type_String)string28088,(Type_String)string28087, (Type_SmallInt)smallint20979, (Type_SmallInt)smallint20980);
((AST_Send)send183817)->info = (AST_Info)info3824;
assign22560 = (Object)new_AST_Assign((Object)localvariable26681, (Object)send183817);
string28089 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant35669 = (Object)new_AST_Constant((Object)string28089);
assign22561 = (Object)new_AST_Assign((Object)localvariable26682, (Object)constant35669);
// parse:
send183818 = (Object)new_AST_Send((Object)localvariable26681, (Object)symbol35862, 1, (Object)localvariable26682);
((AST_Send)send183818)->info = (AST_Info)info3824;
assign22562 = (Object)new_AST_Assign((Object)localvariable26683, (Object)send183818);
// hasReturnExpression
send183819 = (Object)new_AST_Send((Object)localvariable26683, (Object)symbol35678, 0);
((AST_Send)send183819)->info = (AST_Info)info3824;
// should
send183820 = (Object)new_AST_Send((Object)send183819, (Object)symbol35983, 0);
((AST_Send)send183820)->info = (AST_Info)info3824;
// be
send183821 = (Object)new_AST_Send((Object)send183820, (Object)symbol35989, 0);
((AST_Send)send183821)->info = (AST_Info)info3824;
symbol35999 = (Object)new_Type_Symbol_cached(L"true");
// true
send183822 = (Object)new_AST_Send((Object)send183821, (Object)symbol35999, 0);
((AST_Send)send183822)->info = (AST_Info)info3824;
// class
send183823 = (Object)new_AST_Send((Object)localvariable26683, (Object)SMB_class, 0);
((AST_Send)send183823)->info = (AST_Info)info3824;
// should
send183824 = (Object)new_AST_Send((Object)send183823, (Object)symbol35983, 0);
((AST_Send)send183824)->info = (AST_Info)info3824;
classreference4832 = (Object)new_Organization_ClassReference((Type_Class)class4068);

// ASTMethod>>annotations
//annotations
// 	^ annotations
method25387 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6030);
string28090 = (Object)new_Type_String(L"annotations");
string28091 = (Object)new_Type_String(L"annotations\n\t^ annotations");
smallint20981 = (Object)new_Type_SmallInt(-1);
smallint20982 = (Object)new_Type_SmallInt(-1);
info3825 = (Object)new_AST_Info((Type_String)string28091,(Type_String)string28090, (Type_SmallInt)smallint20981, (Type_SmallInt)smallint20982);
((AST_Method)method25387)->info = (AST_Info)info3825;
symbol35744 = (Object)new_Type_Symbol_cached(L"annotations");
methodclosure25385 = (Object)new_Runtime_MethodClosure(method25387);
store_method((Type_Class)class4068, (Type_Symbol)symbol35744, (Runtime_MethodClosure)methodclosure25385);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable26684 = (Object)new_AST_Variable_named(L"anObject");
array21411 = (Object)new_Type_Array_with(1, (Object)localvariable26684);
assign22563 = (Object)new_AST_Assign((Object)instancevariable6031, (Object)localvariable26684);
method25388 = (Object)new_AST_Method_with((Type_Array)array21411, (Type_Array)empty_Type_Array, 2, assign22563, Self);
string28092 = (Object)new_Type_String(L"temporaries:");
string28093 = (Object)new_Type_String(L"temporaries: anObject\n\ttemporaries := anObject");
smallint20983 = (Object)new_Type_SmallInt(-1);
smallint20984 = (Object)new_Type_SmallInt(-1);
info3826 = (Object)new_AST_Info((Type_String)string28093,(Type_String)string28092, (Type_SmallInt)smallint20983, (Type_SmallInt)smallint20984);
((AST_Method)method25388)->info = (AST_Info)info3826;
symbol35748 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure25386 = (Object)new_Runtime_MethodClosure(method25388);
store_method((Type_Class)class4068, (Type_Symbol)symbol35748, (Runtime_MethodClosure)methodclosure25386);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable26685 = (Object)new_AST_Variable_named(L"anObject");
array21412 = (Object)new_Type_Array_with(1, (Object)localvariable26685);
assign22564 = (Object)new_AST_Assign((Object)instancevariable6032, (Object)localvariable26685);
method25389 = (Object)new_AST_Method_with((Type_Array)array21412, (Type_Array)empty_Type_Array, 2, assign22564, Self);
string28094 = (Object)new_Type_String(L"statements:");
string28095 = (Object)new_Type_String(L"statements: anObject\n\tstatements := anObject");
smallint20985 = (Object)new_Type_SmallInt(-1);
smallint20986 = (Object)new_Type_SmallInt(-1);
info3827 = (Object)new_AST_Info((Type_String)string28095,(Type_String)string28094, (Type_SmallInt)smallint20985, (Type_SmallInt)smallint20986);
((AST_Method)method25389)->info = (AST_Info)info3827;
symbol35745 = (Object)new_Type_Symbol_cached(L"statements:");
methodclosure25387 = (Object)new_Runtime_MethodClosure(method25389);
store_method((Type_Class)class4068, (Type_Symbol)symbol35745, (Runtime_MethodClosure)methodclosure25387);


// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable26686 = (Object)new_AST_Variable_named(L"anObject");
array21413 = (Object)new_Type_Array_with(1, (Object)localvariable26686);
assign22565 = (Object)new_AST_Assign((Object)instancevariable6029, (Object)localvariable26686);
method25390 = (Object)new_AST_Method_with((Type_Array)array21413, (Type_Array)empty_Type_Array, 2, assign22565, Self);
string28096 = (Object)new_Type_String(L"message:");
string28097 = (Object)new_Type_String(L"message: anObject\n\tmessage := anObject");
smallint20987 = (Object)new_Type_SmallInt(-1);
smallint20988 = (Object)new_Type_SmallInt(-1);
info3828 = (Object)new_AST_Info((Type_String)string28097,(Type_String)string28096, (Type_SmallInt)smallint20987, (Type_SmallInt)smallint20988);
((AST_Method)method25390)->info = (AST_Info)info3828;
symbol35741 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure25388 = (Object)new_Runtime_MethodClosure(method25390);
store_method((Type_Class)class4068, (Type_Symbol)symbol35741, (Runtime_MethodClosure)methodclosure25388);


// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable26687 = (Object)new_AST_Variable_named(L"aStream");
array21414 = (Object)new_Type_Array_with(1, (Object)localvariable26687);
super1979 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26687);
string28098 = (Object)new_Type_String(L"(");
constant35670 = (Object)new_AST_Constant((Object)string28098);
// nextPutAll:
send183825 = (Object)new_AST_Send((Object)localvariable26687, (Object)symbol35953, 1, (Object)constant35670);
string28099 = (Object)new_Type_String(L"printOn:");
string28100 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \'(\'.\n\tself message printOn: aStream.\n\taStream nextPutAll: \')\'.");
smallint20989 = (Object)new_Type_SmallInt(-1);
smallint20990 = (Object)new_Type_SmallInt(-1);
info3829 = (Object)new_AST_Info((Type_String)string28100,(Type_String)string28099, (Type_SmallInt)smallint20989, (Type_SmallInt)smallint20990);
((AST_Send)send183825)->info = (AST_Info)info3829;
symbol35746 = (Object)new_Type_Symbol_cached(L"message");
// message
send183826 = (Object)new_AST_Send((Object)Self, (Object)symbol35746, 0);
((AST_Send)send183826)->info = (AST_Info)info3829;
// printOn:
send183827 = (Object)new_AST_Send((Object)send183826, (Object)symbol35622, 1, (Object)localvariable26687);
((AST_Send)send183827)->info = (AST_Info)info3829;
string28101 = (Object)new_Type_String(L")");
constant35671 = (Object)new_AST_Constant((Object)string28101);
// nextPutAll:
send183828 = (Object)new_AST_Send((Object)localvariable26687, (Object)symbol35953, 1, (Object)constant35671);
((AST_Send)send183828)->info = (AST_Info)info3829;
method25391 = (Object)new_AST_Method_with((Type_Array)array21414, (Type_Array)empty_Type_Array, 5, super1979, send183825, send183827, send183828, Self);
((AST_Method)method25391)->info = (AST_Info)info3829;
methodclosure25389 = (Object)new_Runtime_MethodClosure(method25391);
store_method((Type_Class)class4068, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25389);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable26688 = (Object)new_AST_Variable_named(L"anObject");
array21415 = (Object)new_Type_Array_with(1, (Object)localvariable26688);
assign22566 = (Object)new_AST_Assign((Object)instancevariable6030, (Object)localvariable26688);
method25392 = (Object)new_AST_Method_with((Type_Array)array21415, (Type_Array)empty_Type_Array, 2, assign22566, Self);
string28102 = (Object)new_Type_String(L"annotations:");
string28103 = (Object)new_Type_String(L"annotations: anObject\n\tannotations := anObject");
smallint20991 = (Object)new_Type_SmallInt(-1);
smallint20992 = (Object)new_Type_SmallInt(-1);
info3830 = (Object)new_AST_Info((Type_String)string28103,(Type_String)string28102, (Type_SmallInt)smallint20991, (Type_SmallInt)smallint20992);
((AST_Method)method25392)->info = (AST_Info)info3830;
symbol35749 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure25390 = (Object)new_Runtime_MethodClosure(method25392);
store_method((Type_Class)class4068, (Type_Symbol)symbol35749, (Runtime_MethodClosure)methodclosure25390);


// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
symbol35743 = (Object)new_Type_Symbol_cached(L"statements");
// statements
send183829 = (Object)new_AST_Send((Object)Self, (Object)symbol35743, 0);
string28104 = (Object)new_Type_String(L"hasReturnExpression");
string28105 = (Object)new_Type_String(L"hasReturnExpression\n\t^ self statements hasReturnExpression");
smallint20993 = (Object)new_Type_SmallInt(-1);
smallint20994 = (Object)new_Type_SmallInt(-1);
info3831 = (Object)new_AST_Info((Type_String)string28105,(Type_String)string28104, (Type_SmallInt)smallint20993, (Type_SmallInt)smallint20994);
((AST_Send)send183829)->info = (AST_Info)info3831;
// hasReturnExpression
send183830 = (Object)new_AST_Send((Object)send183829, (Object)symbol35678, 0);
((AST_Send)send183830)->info = (AST_Info)info3831;
method25393 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183830);
((AST_Method)method25393)->info = (AST_Info)info3831;
methodclosure25391 = (Object)new_Runtime_MethodClosure(method25393);
store_method((Type_Class)class4068, (Type_Symbol)symbol35678, (Runtime_MethodClosure)methodclosure25391);


// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable26689 = (Object)new_AST_Variable_named(L"receiver");
array21416 = (Object)new_Type_Array_with(1, (Object)localvariable26689);
smallint20995 = (Object)new_Type_SmallInt(1);
constant35672 = (Object)new_AST_Constant((Object)smallint20995);
constant35673 = (Object)new_AST_Constant((Object)symbol35744);
// at:put:
send183831 = (Object)new_AST_Send((Object)localvariable26689, (Object)SMB_at_put_, 2, (Object)constant35672, (Object)constant35673);
string28106 = (Object)new_Type_String(L"astSelectors");
string28107 = (Object)new_Type_String(L"astSelectors \n\t^ (Array new: 4)\n\tat: 1 put: #annotations;\n\tat: 2 put: #message;\n\tat: 3 put: #statements;\n\tat: 4 put: #temporaries;\n\tyourself.");
smallint20996 = (Object)new_Type_SmallInt(-1);
smallint20997 = (Object)new_Type_SmallInt(-1);
info3832 = (Object)new_AST_Info((Type_String)string28107,(Type_String)string28106, (Type_SmallInt)smallint20996, (Type_SmallInt)smallint20997);
((AST_Send)send183831)->info = (AST_Info)info3832;
smallint20998 = (Object)new_Type_SmallInt(2);
constant35674 = (Object)new_AST_Constant((Object)smallint20998);
constant35675 = (Object)new_AST_Constant((Object)symbol35746);
// at:put:
send183832 = (Object)new_AST_Send((Object)localvariable26689, (Object)SMB_at_put_, 2, (Object)constant35674, (Object)constant35675);
((AST_Send)send183832)->info = (AST_Info)info3832;
smallint20999 = (Object)new_Type_SmallInt(3);
constant35676 = (Object)new_AST_Constant((Object)smallint20999);
constant35677 = (Object)new_AST_Constant((Object)symbol35743);
// at:put:
send183833 = (Object)new_AST_Send((Object)localvariable26689, (Object)SMB_at_put_, 2, (Object)constant35676, (Object)constant35677);
((AST_Send)send183833)->info = (AST_Info)info3832;
smallint21000 = (Object)new_Type_SmallInt(4);
constant35678 = (Object)new_AST_Constant((Object)smallint21000);
constant35679 = (Object)new_AST_Constant((Object)symbol35747);
// at:put:
send183834 = (Object)new_AST_Send((Object)localvariable26689, (Object)SMB_at_put_, 2, (Object)constant35678, (Object)constant35679);
((AST_Send)send183834)->info = (AST_Info)info3832;
// yourself
send183835 = (Object)new_AST_Send((Object)localvariable26689, (Object)symbol35515, 0);
((AST_Send)send183835)->info = (AST_Info)info3832;
block12800 = (Object)new_AST_Block_with((Type_Array)array21416, (Type_Array)empty_Type_Array, 1, 5, send183831, send183832, send183833, send183834, send183835);
smallint21001 = (Object)new_Type_SmallInt(4);
constant35680 = (Object)new_AST_Constant((Object)smallint21001);
// new:
send183836 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35680);
((AST_Send)send183836)->info = (AST_Info)info3832;
// value:
send183837 = (Object)new_AST_Send((Object)block12800, (Object)SMB_value_, 1, (Object)send183836);
((AST_Send)send183837)->info = (AST_Info)info3832;
method25394 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send183837);
((AST_Method)method25394)->info = (AST_Info)info3832;
symbol35742 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure25392 = (Object)new_Runtime_MethodClosure(method25394);
store_method((Type_Class)class4068, (Type_Symbol)symbol35742, (Runtime_MethodClosure)methodclosure25392);


// ASTMethod>>message
//message
// 	^ message
method25395 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6029);
string28108 = (Object)new_Type_String(L"message");
string28109 = (Object)new_Type_String(L"message\n\t^ message");
smallint21002 = (Object)new_Type_SmallInt(-1);
smallint21003 = (Object)new_Type_SmallInt(-1);
info3833 = (Object)new_AST_Info((Type_String)string28109,(Type_String)string28108, (Type_SmallInt)smallint21002, (Type_SmallInt)smallint21003);
((AST_Method)method25395)->info = (AST_Info)info3833;
methodclosure25393 = (Object)new_Runtime_MethodClosure(method25395);
store_method((Type_Class)class4068, (Type_Symbol)symbol35746, (Runtime_MethodClosure)methodclosure25393);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method25396 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6031);
string28110 = (Object)new_Type_String(L"temporaries");
string28111 = (Object)new_Type_String(L"temporaries\n\t^ temporaries");
smallint21004 = (Object)new_Type_SmallInt(-1);
smallint21005 = (Object)new_Type_SmallInt(-1);
info3834 = (Object)new_AST_Info((Type_String)string28111,(Type_String)string28110, (Type_SmallInt)smallint21004, (Type_SmallInt)smallint21005);
((AST_Method)method25396)->info = (AST_Info)info3834;
methodclosure25394 = (Object)new_Runtime_MethodClosure(method25396);
store_method((Type_Class)class4068, (Type_Symbol)symbol35747, (Runtime_MethodClosure)methodclosure25394);


// ASTMethod>>statements
//statements
// 	^ statements
method25397 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6032);
string28112 = (Object)new_Type_String(L"statements");
string28113 = (Object)new_Type_String(L"statements\n\t^ statements");
smallint21006 = (Object)new_Type_SmallInt(-1);
smallint21007 = (Object)new_Type_SmallInt(-1);
info3835 = (Object)new_AST_Info((Type_String)string28113,(Type_String)string28112, (Type_SmallInt)smallint21006, (Type_SmallInt)smallint21007);
((AST_Method)method25397)->info = (AST_Info)info3835;
methodclosure25395 = (Object)new_Runtime_MethodClosure(method25397);
store_method((Type_Class)class4068, (Type_Symbol)symbol35743, (Runtime_MethodClosure)methodclosure25395);

// =
send183838 = (Object)new_AST_Send((Object)send183824, (Object)SMB__equal, 1, (Object)classreference4832);
((AST_Send)send183838)->info = (AST_Info)info3824;
// message
send183839 = (Object)new_AST_Send((Object)localvariable26683, (Object)symbol35746, 0);
((AST_Send)send183839)->info = (AST_Info)info3824;
// asString
send183840 = (Object)new_AST_Send((Object)send183839, (Object)SMB_asString, 0);
((AST_Send)send183840)->info = (AST_Info)info3824;
// should
send183841 = (Object)new_AST_Send((Object)send183840, (Object)symbol35983, 0);
((AST_Send)send183841)->info = (AST_Info)info3824;
string28114 = (Object)new_Type_String(L"withA:withB:withC:");
constant35681 = (Object)new_AST_Constant((Object)string28114);
// =
send183842 = (Object)new_AST_Send((Object)send183841, (Object)SMB__equal, 1, (Object)constant35681);
((AST_Send)send183842)->info = (AST_Info)info3824;
method25398 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21410, 7, assign22560, assign22561, assign22562, send183822, send183838, send183842, Self);
((AST_Method)method25398)->info = (AST_Info)info3824;
symbol35563 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure25396 = (Object)new_Runtime_MethodClosure(method25398);
store_method((Type_Class)class4034, (Type_Symbol)symbol35563, (Runtime_MethodClosure)methodclosure25396);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable26690 = (Object)new_AST_Variable_named(L"parser");
localvariable26691 = (Object)new_AST_Variable_named(L"string");
array21417 = (Object)new_Type_Array_with(2, (Object)localvariable26690, (Object)localvariable26691);
// separator
send183843 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35854, 0);
string28115 = (Object)new_Type_String(L"testSeparator");
string28116 = (Object)new_Type_String(L"testSeparator\n\t| parser string |\n\tparser := scparser separator.\n\tstring := PEGStringScanner on: \'\"Test\"\'.\n\t(parser match: string) should not be isNil.\n\tstring position should = 6.\n\tstring := PEGStringScanner on: \' \t\"Test\" \"boe\"\t\"\" ab\'.\n\t(parser match: string) should not be isNil.\n\tstring position should = 18.\n\tstring := PEGStringScanner on: \'\'.\n\t(parser match: string) should not be isNil.\n\tstring position should = 0");
smallint21008 = (Object)new_Type_SmallInt(-1);
smallint21009 = (Object)new_Type_SmallInt(-1);
info3836 = (Object)new_AST_Info((Type_String)string28116,(Type_String)string28115, (Type_SmallInt)smallint21008, (Type_SmallInt)smallint21009);
((AST_Send)send183843)->info = (AST_Info)info3836;
assign22567 = (Object)new_AST_Assign((Object)localvariable26690, (Object)send183843);
string28117 = (Object)new_Type_String(L"\"Test\"");
constant35682 = (Object)new_AST_Constant((Object)string28117);
// on:
send183844 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35682);
((AST_Send)send183844)->info = (AST_Info)info3836;
assign22568 = (Object)new_AST_Assign((Object)localvariable26691, (Object)send183844);
// match:
send183845 = (Object)new_AST_Send((Object)localvariable26690, (Object)symbol35843, 1, (Object)localvariable26691);
((AST_Send)send183845)->info = (AST_Info)info3836;
// should
send183846 = (Object)new_AST_Send((Object)send183845, (Object)symbol35983, 0);
((AST_Send)send183846)->info = (AST_Info)info3836;
// not
send183847 = (Object)new_AST_Send((Object)send183846, (Object)SMB_not, 0);
((AST_Send)send183847)->info = (AST_Info)info3836;
// be
send183848 = (Object)new_AST_Send((Object)send183847, (Object)symbol35989, 0);
((AST_Send)send183848)->info = (AST_Info)info3836;
// isNil
send183849 = (Object)new_AST_Send((Object)send183848, (Object)SMB_isNil, 0);
((AST_Send)send183849)->info = (AST_Info)info3836;
// position
send183850 = (Object)new_AST_Send((Object)localvariable26691, (Object)symbol35988, 0);
((AST_Send)send183850)->info = (AST_Info)info3836;
// should
send183851 = (Object)new_AST_Send((Object)send183850, (Object)symbol35983, 0);
((AST_Send)send183851)->info = (AST_Info)info3836;
smallint21010 = (Object)new_Type_SmallInt(6);
constant35683 = (Object)new_AST_Constant((Object)smallint21010);
// =
send183852 = (Object)new_AST_Send((Object)send183851, (Object)SMB__equal, 1, (Object)constant35683);
((AST_Send)send183852)->info = (AST_Info)info3836;
string28118 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant35684 = (Object)new_AST_Constant((Object)string28118);
// on:
send183853 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35684);
((AST_Send)send183853)->info = (AST_Info)info3836;
assign22569 = (Object)new_AST_Assign((Object)localvariable26691, (Object)send183853);
// match:
send183854 = (Object)new_AST_Send((Object)localvariable26690, (Object)symbol35843, 1, (Object)localvariable26691);
((AST_Send)send183854)->info = (AST_Info)info3836;
// should
send183855 = (Object)new_AST_Send((Object)send183854, (Object)symbol35983, 0);
((AST_Send)send183855)->info = (AST_Info)info3836;
// not
send183856 = (Object)new_AST_Send((Object)send183855, (Object)SMB_not, 0);
((AST_Send)send183856)->info = (AST_Info)info3836;
// be
send183857 = (Object)new_AST_Send((Object)send183856, (Object)symbol35989, 0);
((AST_Send)send183857)->info = (AST_Info)info3836;
// isNil
send183858 = (Object)new_AST_Send((Object)send183857, (Object)SMB_isNil, 0);
((AST_Send)send183858)->info = (AST_Info)info3836;
// position
send183859 = (Object)new_AST_Send((Object)localvariable26691, (Object)symbol35988, 0);
((AST_Send)send183859)->info = (AST_Info)info3836;
// should
send183860 = (Object)new_AST_Send((Object)send183859, (Object)symbol35983, 0);
((AST_Send)send183860)->info = (AST_Info)info3836;
smallint21011 = (Object)new_Type_SmallInt(18);
constant35685 = (Object)new_AST_Constant((Object)smallint21011);
// =
send183861 = (Object)new_AST_Send((Object)send183860, (Object)SMB__equal, 1, (Object)constant35685);
((AST_Send)send183861)->info = (AST_Info)info3836;
string28119 = (Object)new_Type_String(L"");
constant35686 = (Object)new_AST_Constant((Object)string28119);
// on:
send183862 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35686);
((AST_Send)send183862)->info = (AST_Info)info3836;
assign22570 = (Object)new_AST_Assign((Object)localvariable26691, (Object)send183862);
// match:
send183863 = (Object)new_AST_Send((Object)localvariable26690, (Object)symbol35843, 1, (Object)localvariable26691);
((AST_Send)send183863)->info = (AST_Info)info3836;
// should
send183864 = (Object)new_AST_Send((Object)send183863, (Object)symbol35983, 0);
((AST_Send)send183864)->info = (AST_Info)info3836;
// not
send183865 = (Object)new_AST_Send((Object)send183864, (Object)SMB_not, 0);
((AST_Send)send183865)->info = (AST_Info)info3836;
// be
send183866 = (Object)new_AST_Send((Object)send183865, (Object)symbol35989, 0);
((AST_Send)send183866)->info = (AST_Info)info3836;
// isNil
send183867 = (Object)new_AST_Send((Object)send183866, (Object)SMB_isNil, 0);
((AST_Send)send183867)->info = (AST_Info)info3836;
// position
send183868 = (Object)new_AST_Send((Object)localvariable26691, (Object)symbol35988, 0);
((AST_Send)send183868)->info = (AST_Info)info3836;
// should
send183869 = (Object)new_AST_Send((Object)send183868, (Object)symbol35983, 0);
((AST_Send)send183869)->info = (AST_Info)info3836;
smallint21012 = (Object)new_Type_SmallInt(0);
constant35687 = (Object)new_AST_Constant((Object)smallint21012);
// =
send183870 = (Object)new_AST_Send((Object)send183869, (Object)SMB__equal, 1, (Object)constant35687);
((AST_Send)send183870)->info = (AST_Info)info3836;
method25399 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21417, 11, assign22567, assign22568, send183849, send183852, assign22569, send183858, send183861, assign22570, send183867, send183870, Self);
((AST_Method)method25399)->info = (AST_Info)info3836;
symbol35555 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure25397 = (Object)new_Runtime_MethodClosure(method25399);
store_method((Type_Class)class4034, (Type_Symbol)symbol35555, (Runtime_MethodClosure)methodclosure25397);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable26692 = (Object)new_AST_Variable_named(L"parser");
array21418 = (Object)new_Type_Array_with(1, (Object)localvariable26692);
string28120 = (Object)new_Type_String(L"COMMENT");
constant35688 = (Object)new_AST_Constant((Object)string28120);
symbol36000 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send183871 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36000, 0);
string28121 = (Object)new_Type_String(L"testComment");
string28122 = (Object)new_Type_String(L"testComment\n\t| parser |\n\tparser := PEGParser named: \'COMMENT\' parsing: scparser commentFormat.\n\t(parser parse: \'\"Test\"\') should not be isNil.\n\t(parser parse: \'\"Test\') should be isNil");
smallint21013 = (Object)new_Type_SmallInt(-1);
smallint21014 = (Object)new_Type_SmallInt(-1);
info3837 = (Object)new_AST_Info((Type_String)string28122,(Type_String)string28121, (Type_SmallInt)smallint21013, (Type_SmallInt)smallint21014);
((AST_Send)send183871)->info = (AST_Info)info3837;
// named:parsing:
send183872 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35858, 2, (Object)constant35688, (Object)send183871);
((AST_Send)send183872)->info = (AST_Info)info3837;
assign22571 = (Object)new_AST_Assign((Object)localvariable26692, (Object)send183872);
string28123 = (Object)new_Type_String(L"\"Test\"");
constant35689 = (Object)new_AST_Constant((Object)string28123);
// parse:
send183873 = (Object)new_AST_Send((Object)localvariable26692, (Object)symbol35862, 1, (Object)constant35689);
((AST_Send)send183873)->info = (AST_Info)info3837;
// should
send183874 = (Object)new_AST_Send((Object)send183873, (Object)symbol35983, 0);
((AST_Send)send183874)->info = (AST_Info)info3837;
// not
send183875 = (Object)new_AST_Send((Object)send183874, (Object)SMB_not, 0);
((AST_Send)send183875)->info = (AST_Info)info3837;
// be
send183876 = (Object)new_AST_Send((Object)send183875, (Object)symbol35989, 0);
((AST_Send)send183876)->info = (AST_Info)info3837;
// isNil
send183877 = (Object)new_AST_Send((Object)send183876, (Object)SMB_isNil, 0);
((AST_Send)send183877)->info = (AST_Info)info3837;
string28124 = (Object)new_Type_String(L"\"Test");
constant35690 = (Object)new_AST_Constant((Object)string28124);
// parse:
send183878 = (Object)new_AST_Send((Object)localvariable26692, (Object)symbol35862, 1, (Object)constant35690);
((AST_Send)send183878)->info = (AST_Info)info3837;
// should
send183879 = (Object)new_AST_Send((Object)send183878, (Object)symbol35983, 0);
((AST_Send)send183879)->info = (AST_Info)info3837;
// be
send183880 = (Object)new_AST_Send((Object)send183879, (Object)symbol35989, 0);
((AST_Send)send183880)->info = (AST_Info)info3837;
// isNil
send183881 = (Object)new_AST_Send((Object)send183880, (Object)SMB_isNil, 0);
((AST_Send)send183881)->info = (AST_Info)info3837;
method25400 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21418, 4, assign22571, send183877, send183881, Self);
((AST_Method)method25400)->info = (AST_Info)info3837;
symbol35591 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure25398 = (Object)new_Runtime_MethodClosure(method25400);
store_method((Type_Class)class4034, (Type_Symbol)symbol35591, (Runtime_MethodClosure)methodclosure25398);


// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable26693 = (Object)new_AST_Variable_named(L"parser");
localvariable26694 = (Object)new_AST_Variable_named(L"string");
localvariable26695 = (Object)new_AST_Variable_named(L"result");
array21419 = (Object)new_Type_Array_with(3, (Object)localvariable26693, (Object)localvariable26694, (Object)localvariable26695);
// method
send183882 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35998, 0);
string28125 = (Object)new_Type_String(L"testMethod4");
string28126 = (Object)new_Type_String(L"testMethod4\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t\'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message asString should = \'withA:withB:withC:\'.\n\tresult statements last hasReturnExpression should be true.");
smallint21015 = (Object)new_Type_SmallInt(-1);
smallint21016 = (Object)new_Type_SmallInt(-1);
info3838 = (Object)new_AST_Info((Type_String)string28126,(Type_String)string28125, (Type_SmallInt)smallint21015, (Type_SmallInt)smallint21016);
((AST_Send)send183882)->info = (AST_Info)info3838;
assign22572 = (Object)new_AST_Assign((Object)localvariable26693, (Object)send183882);
string28127 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant35691 = (Object)new_AST_Constant((Object)string28127);
assign22573 = (Object)new_AST_Assign((Object)localvariable26694, (Object)constant35691);
// parse:
send183883 = (Object)new_AST_Send((Object)localvariable26693, (Object)symbol35862, 1, (Object)localvariable26694);
((AST_Send)send183883)->info = (AST_Info)info3838;
assign22574 = (Object)new_AST_Assign((Object)localvariable26695, (Object)send183883);
// hasReturnExpression
send183884 = (Object)new_AST_Send((Object)localvariable26695, (Object)symbol35678, 0);
((AST_Send)send183884)->info = (AST_Info)info3838;
// should
send183885 = (Object)new_AST_Send((Object)send183884, (Object)symbol35983, 0);
((AST_Send)send183885)->info = (AST_Info)info3838;
// be
send183886 = (Object)new_AST_Send((Object)send183885, (Object)symbol35989, 0);
((AST_Send)send183886)->info = (AST_Info)info3838;
// true
send183887 = (Object)new_AST_Send((Object)send183886, (Object)symbol35999, 0);
((AST_Send)send183887)->info = (AST_Info)info3838;
// class
send183888 = (Object)new_AST_Send((Object)localvariable26695, (Object)SMB_class, 0);
((AST_Send)send183888)->info = (AST_Info)info3838;
// should
send183889 = (Object)new_AST_Send((Object)send183888, (Object)symbol35983, 0);
((AST_Send)send183889)->info = (AST_Info)info3838;
// =
send183890 = (Object)new_AST_Send((Object)send183889, (Object)SMB__equal, 1, (Object)classreference4832);
((AST_Send)send183890)->info = (AST_Info)info3838;
// message
send183891 = (Object)new_AST_Send((Object)localvariable26695, (Object)symbol35746, 0);
((AST_Send)send183891)->info = (AST_Info)info3838;
// asString
send183892 = (Object)new_AST_Send((Object)send183891, (Object)SMB_asString, 0);
((AST_Send)send183892)->info = (AST_Info)info3838;
// should
send183893 = (Object)new_AST_Send((Object)send183892, (Object)symbol35983, 0);
((AST_Send)send183893)->info = (AST_Info)info3838;
string28128 = (Object)new_Type_String(L"withA:withB:withC:");
constant35692 = (Object)new_AST_Constant((Object)string28128);
// =
send183894 = (Object)new_AST_Send((Object)send183893, (Object)SMB__equal, 1, (Object)constant35692);
((AST_Send)send183894)->info = (AST_Info)info3838;
// statements
send183895 = (Object)new_AST_Send((Object)localvariable26695, (Object)symbol35743, 0);
((AST_Send)send183895)->info = (AST_Info)info3838;
// last
send183896 = (Object)new_AST_Send((Object)send183895, (Object)symbol35692, 0);
((AST_Send)send183896)->info = (AST_Info)info3838;
// hasReturnExpression
send183897 = (Object)new_AST_Send((Object)send183896, (Object)symbol35678, 0);
((AST_Send)send183897)->info = (AST_Info)info3838;
// should
send183898 = (Object)new_AST_Send((Object)send183897, (Object)symbol35983, 0);
((AST_Send)send183898)->info = (AST_Info)info3838;
// be
send183899 = (Object)new_AST_Send((Object)send183898, (Object)symbol35989, 0);
((AST_Send)send183899)->info = (AST_Info)info3838;
// true
send183900 = (Object)new_AST_Send((Object)send183899, (Object)symbol35999, 0);
((AST_Send)send183900)->info = (AST_Info)info3838;
method25401 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21419, 8, assign22572, assign22573, assign22574, send183887, send183890, send183894, send183900, Self);
((AST_Method)method25401)->info = (AST_Info)info3838;
symbol35545 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure25399 = (Object)new_Runtime_MethodClosure(method25401);
store_method((Type_Class)class4034, (Type_Symbol)symbol35545, (Runtime_MethodClosure)methodclosure25399);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable26696 = (Object)new_AST_Variable_named(L"parser");
localvariable26697 = (Object)new_AST_Variable_named(L"string");
array21420 = (Object)new_Type_Array_with(2, (Object)localvariable26696, (Object)localvariable26697);
symbol36001 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send183901 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36001, 0);
string28129 = (Object)new_Type_String(L"testKeyword");
string28130 = (Object)new_Type_String(L"testKeyword\n\t| parser string |\n\tparser := scparser keyword.\n\tstring := PEGStringScanner on: \'abcd: \'.\n\t(parser match: string) should = \'abcd\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'abcd \'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");
smallint21017 = (Object)new_Type_SmallInt(-1);
smallint21018 = (Object)new_Type_SmallInt(-1);
info3839 = (Object)new_AST_Info((Type_String)string28130,(Type_String)string28129, (Type_SmallInt)smallint21017, (Type_SmallInt)smallint21018);
((AST_Send)send183901)->info = (AST_Info)info3839;
assign22575 = (Object)new_AST_Assign((Object)localvariable26696, (Object)send183901);
string28131 = (Object)new_Type_String(L"abcd: ");
constant35693 = (Object)new_AST_Constant((Object)string28131);
// on:
send183902 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35693);
((AST_Send)send183902)->info = (AST_Info)info3839;
assign22576 = (Object)new_AST_Assign((Object)localvariable26697, (Object)send183902);
// match:
send183903 = (Object)new_AST_Send((Object)localvariable26696, (Object)symbol35843, 1, (Object)localvariable26697);
((AST_Send)send183903)->info = (AST_Info)info3839;
// should
send183904 = (Object)new_AST_Send((Object)send183903, (Object)symbol35983, 0);
((AST_Send)send183904)->info = (AST_Info)info3839;
string28132 = (Object)new_Type_String(L"abcd");
constant35694 = (Object)new_AST_Constant((Object)string28132);
// =
send183905 = (Object)new_AST_Send((Object)send183904, (Object)SMB__equal, 1, (Object)constant35694);
((AST_Send)send183905)->info = (AST_Info)info3839;
// position
send183906 = (Object)new_AST_Send((Object)localvariable26697, (Object)symbol35988, 0);
((AST_Send)send183906)->info = (AST_Info)info3839;
// should
send183907 = (Object)new_AST_Send((Object)send183906, (Object)symbol35983, 0);
((AST_Send)send183907)->info = (AST_Info)info3839;
smallint21019 = (Object)new_Type_SmallInt(5);
constant35695 = (Object)new_AST_Constant((Object)smallint21019);
// =
send183908 = (Object)new_AST_Send((Object)send183907, (Object)SMB__equal, 1, (Object)constant35695);
((AST_Send)send183908)->info = (AST_Info)info3839;
string28133 = (Object)new_Type_String(L"abcd ");
constant35696 = (Object)new_AST_Constant((Object)string28133);
// on:
send183909 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35696);
((AST_Send)send183909)->info = (AST_Info)info3839;
assign22577 = (Object)new_AST_Assign((Object)localvariable26697, (Object)send183909);
// match:
send183910 = (Object)new_AST_Send((Object)localvariable26696, (Object)symbol35843, 1, (Object)localvariable26697);
((AST_Send)send183910)->info = (AST_Info)info3839;
// should
send183911 = (Object)new_AST_Send((Object)send183910, (Object)symbol35983, 0);
((AST_Send)send183911)->info = (AST_Info)info3839;
// be
send183912 = (Object)new_AST_Send((Object)send183911, (Object)symbol35989, 0);
((AST_Send)send183912)->info = (AST_Info)info3839;
// isNil
send183913 = (Object)new_AST_Send((Object)send183912, (Object)SMB_isNil, 0);
((AST_Send)send183913)->info = (AST_Info)info3839;
// position
send183914 = (Object)new_AST_Send((Object)localvariable26697, (Object)symbol35988, 0);
((AST_Send)send183914)->info = (AST_Info)info3839;
// should
send183915 = (Object)new_AST_Send((Object)send183914, (Object)symbol35983, 0);
((AST_Send)send183915)->info = (AST_Info)info3839;
smallint21020 = (Object)new_Type_SmallInt(0);
constant35697 = (Object)new_AST_Constant((Object)smallint21020);
// =
send183916 = (Object)new_AST_Send((Object)send183915, (Object)SMB__equal, 1, (Object)constant35697);
((AST_Send)send183916)->info = (AST_Info)info3839;
method25402 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21420, 8, assign22575, assign22576, send183905, send183908, assign22577, send183913, send183916, Self);
((AST_Method)method25402)->info = (AST_Info)info3839;
symbol35565 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure25400 = (Object)new_Runtime_MethodClosure(method25402);
store_method((Type_Class)class4034, (Type_Symbol)symbol35565, (Runtime_MethodClosure)methodclosure25400);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable26698 = (Object)new_AST_Variable_named(L"parser");
localvariable26699 = (Object)new_AST_Variable_named(L"string");
localvariable26700 = (Object)new_AST_Variable_named(L"result");
array21421 = (Object)new_Type_Array_with(3, (Object)localvariable26698, (Object)localvariable26699, (Object)localvariable26700);
symbol36002 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send183917 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36002, 0);
string28134 = (Object)new_Type_String(L"testFinalExpression");
string28135 = (Object)new_Type_String(L"testFinalExpression\n\t| parser string result |\n\tparser := scparser finalExpression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");
smallint21021 = (Object)new_Type_SmallInt(-1);
smallint21022 = (Object)new_Type_SmallInt(-1);
info3840 = (Object)new_AST_Info((Type_String)string28135,(Type_String)string28134, (Type_SmallInt)smallint21021, (Type_SmallInt)smallint21022);
((AST_Send)send183917)->info = (AST_Info)info3840;
assign22578 = (Object)new_AST_Assign((Object)localvariable26698, (Object)send183917);
string28136 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant35698 = (Object)new_AST_Constant((Object)string28136);
// on:
send183918 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35698);
((AST_Send)send183918)->info = (AST_Info)info3840;
assign22579 = (Object)new_AST_Assign((Object)localvariable26699, (Object)send183918);
// match:
send183919 = (Object)new_AST_Send((Object)localvariable26698, (Object)symbol35843, 1, (Object)localvariable26699);
((AST_Send)send183919)->info = (AST_Info)info3840;
assign22580 = (Object)new_AST_Assign((Object)localvariable26700, (Object)send183919);
// class
send183920 = (Object)new_AST_Send((Object)localvariable26700, (Object)SMB_class, 0);
((AST_Send)send183920)->info = (AST_Info)info3840;
// should
send183921 = (Object)new_AST_Send((Object)send183920, (Object)symbol35983, 0);
((AST_Send)send183921)->info = (AST_Info)info3840;
// =
send183922 = (Object)new_AST_Send((Object)send183921, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183922)->info = (AST_Info)info3840;
// variable
send183923 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183923)->info = (AST_Info)info3840;
// class
send183924 = (Object)new_AST_Send((Object)send183923, (Object)SMB_class, 0);
((AST_Send)send183924)->info = (AST_Info)info3840;
// should
send183925 = (Object)new_AST_Send((Object)send183924, (Object)symbol35983, 0);
((AST_Send)send183925)->info = (AST_Info)info3840;
// =
send183926 = (Object)new_AST_Send((Object)send183925, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183926)->info = (AST_Info)info3840;
// variable
send183927 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183927)->info = (AST_Info)info3840;
// name
send183928 = (Object)new_AST_Send((Object)send183927, (Object)SMB_name, 0);
((AST_Send)send183928)->info = (AST_Info)info3840;
// should
send183929 = (Object)new_AST_Send((Object)send183928, (Object)symbol35983, 0);
((AST_Send)send183929)->info = (AST_Info)info3840;
string28137 = (Object)new_Type_String(L"a");
constant35699 = (Object)new_AST_Constant((Object)string28137);
// =
send183930 = (Object)new_AST_Send((Object)send183929, (Object)SMB__equal, 1, (Object)constant35699);
((AST_Send)send183930)->info = (AST_Info)info3840;
// expression
send183931 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35755, 0);
((AST_Send)send183931)->info = (AST_Info)info3840;
assign22581 = (Object)new_AST_Assign((Object)localvariable26700, (Object)send183931);
// class
send183932 = (Object)new_AST_Send((Object)localvariable26700, (Object)SMB_class, 0);
((AST_Send)send183932)->info = (AST_Info)info3840;
// should
send183933 = (Object)new_AST_Send((Object)send183932, (Object)symbol35983, 0);
((AST_Send)send183933)->info = (AST_Info)info3840;
// =
send183934 = (Object)new_AST_Send((Object)send183933, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183934)->info = (AST_Info)info3840;
// variable
send183935 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183935)->info = (AST_Info)info3840;
// class
send183936 = (Object)new_AST_Send((Object)send183935, (Object)SMB_class, 0);
((AST_Send)send183936)->info = (AST_Info)info3840;
// should
send183937 = (Object)new_AST_Send((Object)send183936, (Object)symbol35983, 0);
((AST_Send)send183937)->info = (AST_Info)info3840;
// =
send183938 = (Object)new_AST_Send((Object)send183937, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183938)->info = (AST_Info)info3840;
// variable
send183939 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183939)->info = (AST_Info)info3840;
// name
send183940 = (Object)new_AST_Send((Object)send183939, (Object)SMB_name, 0);
((AST_Send)send183940)->info = (AST_Info)info3840;
// should
send183941 = (Object)new_AST_Send((Object)send183940, (Object)symbol35983, 0);
((AST_Send)send183941)->info = (AST_Info)info3840;
string28138 = (Object)new_Type_String(L"b");
constant35700 = (Object)new_AST_Constant((Object)string28138);
// =
send183942 = (Object)new_AST_Send((Object)send183941, (Object)SMB__equal, 1, (Object)constant35700);
((AST_Send)send183942)->info = (AST_Info)info3840;
// expression
send183943 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35755, 0);
((AST_Send)send183943)->info = (AST_Info)info3840;
assign22582 = (Object)new_AST_Assign((Object)localvariable26700, (Object)send183943);
// class
send183944 = (Object)new_AST_Send((Object)localvariable26700, (Object)SMB_class, 0);
((AST_Send)send183944)->info = (AST_Info)info3840;
// should
send183945 = (Object)new_AST_Send((Object)send183944, (Object)symbol35983, 0);
((AST_Send)send183945)->info = (AST_Info)info3840;
// =
send183946 = (Object)new_AST_Send((Object)send183945, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183946)->info = (AST_Info)info3840;
// variable
send183947 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183947)->info = (AST_Info)info3840;
// class
send183948 = (Object)new_AST_Send((Object)send183947, (Object)SMB_class, 0);
((AST_Send)send183948)->info = (AST_Info)info3840;
// should
send183949 = (Object)new_AST_Send((Object)send183948, (Object)symbol35983, 0);
((AST_Send)send183949)->info = (AST_Info)info3840;
// =
send183950 = (Object)new_AST_Send((Object)send183949, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183950)->info = (AST_Info)info3840;
// variable
send183951 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183951)->info = (AST_Info)info3840;
// name
send183952 = (Object)new_AST_Send((Object)send183951, (Object)SMB_name, 0);
((AST_Send)send183952)->info = (AST_Info)info3840;
// should
send183953 = (Object)new_AST_Send((Object)send183952, (Object)symbol35983, 0);
((AST_Send)send183953)->info = (AST_Info)info3840;
string28139 = (Object)new_Type_String(L"c");
constant35701 = (Object)new_AST_Constant((Object)string28139);
// =
send183954 = (Object)new_AST_Send((Object)send183953, (Object)SMB__equal, 1, (Object)constant35701);
((AST_Send)send183954)->info = (AST_Info)info3840;
// expression
send183955 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35755, 0);
((AST_Send)send183955)->info = (AST_Info)info3840;
// class
send183956 = (Object)new_AST_Send((Object)send183955, (Object)SMB_class, 0);
((AST_Send)send183956)->info = (AST_Info)info3840;
// should
send183957 = (Object)new_AST_Send((Object)send183956, (Object)symbol35983, 0);
((AST_Send)send183957)->info = (AST_Info)info3840;
// =
send183958 = (Object)new_AST_Send((Object)send183957, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send183958)->info = (AST_Info)info3840;
string28140 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant35702 = (Object)new_AST_Constant((Object)string28140);
// on:
send183959 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35702);
((AST_Send)send183959)->info = (AST_Info)info3840;
assign22583 = (Object)new_AST_Assign((Object)localvariable26699, (Object)send183959);
// match:
send183960 = (Object)new_AST_Send((Object)localvariable26698, (Object)symbol35843, 1, (Object)localvariable26699);
((AST_Send)send183960)->info = (AST_Info)info3840;
assign22584 = (Object)new_AST_Assign((Object)localvariable26700, (Object)send183960);
// class
send183961 = (Object)new_AST_Send((Object)localvariable26700, (Object)SMB_class, 0);
((AST_Send)send183961)->info = (AST_Info)info3840;
// should
send183962 = (Object)new_AST_Send((Object)send183961, (Object)symbol35983, 0);
((AST_Send)send183962)->info = (AST_Info)info3840;
// =
send183963 = (Object)new_AST_Send((Object)send183962, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183963)->info = (AST_Info)info3840;
// variable
send183964 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183964)->info = (AST_Info)info3840;
// class
send183965 = (Object)new_AST_Send((Object)send183964, (Object)SMB_class, 0);
((AST_Send)send183965)->info = (AST_Info)info3840;
// should
send183966 = (Object)new_AST_Send((Object)send183965, (Object)symbol35983, 0);
((AST_Send)send183966)->info = (AST_Info)info3840;
// =
send183967 = (Object)new_AST_Send((Object)send183966, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183967)->info = (AST_Info)info3840;
// variable
send183968 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183968)->info = (AST_Info)info3840;
// name
send183969 = (Object)new_AST_Send((Object)send183968, (Object)SMB_name, 0);
((AST_Send)send183969)->info = (AST_Info)info3840;
// should
send183970 = (Object)new_AST_Send((Object)send183969, (Object)symbol35983, 0);
((AST_Send)send183970)->info = (AST_Info)info3840;
string28141 = (Object)new_Type_String(L"a");
constant35703 = (Object)new_AST_Constant((Object)string28141);
// =
send183971 = (Object)new_AST_Send((Object)send183970, (Object)SMB__equal, 1, (Object)constant35703);
((AST_Send)send183971)->info = (AST_Info)info3840;
// expression
send183972 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35755, 0);
((AST_Send)send183972)->info = (AST_Info)info3840;
assign22585 = (Object)new_AST_Assign((Object)localvariable26700, (Object)send183972);
// class
send183973 = (Object)new_AST_Send((Object)localvariable26700, (Object)SMB_class, 0);
((AST_Send)send183973)->info = (AST_Info)info3840;
// should
send183974 = (Object)new_AST_Send((Object)send183973, (Object)symbol35983, 0);
((AST_Send)send183974)->info = (AST_Info)info3840;
// =
send183975 = (Object)new_AST_Send((Object)send183974, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183975)->info = (AST_Info)info3840;
// variable
send183976 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183976)->info = (AST_Info)info3840;
// class
send183977 = (Object)new_AST_Send((Object)send183976, (Object)SMB_class, 0);
((AST_Send)send183977)->info = (AST_Info)info3840;
// should
send183978 = (Object)new_AST_Send((Object)send183977, (Object)symbol35983, 0);
((AST_Send)send183978)->info = (AST_Info)info3840;
// =
send183979 = (Object)new_AST_Send((Object)send183978, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183979)->info = (AST_Info)info3840;
// variable
send183980 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183980)->info = (AST_Info)info3840;
// name
send183981 = (Object)new_AST_Send((Object)send183980, (Object)SMB_name, 0);
((AST_Send)send183981)->info = (AST_Info)info3840;
// should
send183982 = (Object)new_AST_Send((Object)send183981, (Object)symbol35983, 0);
((AST_Send)send183982)->info = (AST_Info)info3840;
string28142 = (Object)new_Type_String(L"b");
constant35704 = (Object)new_AST_Constant((Object)string28142);
// =
send183983 = (Object)new_AST_Send((Object)send183982, (Object)SMB__equal, 1, (Object)constant35704);
((AST_Send)send183983)->info = (AST_Info)info3840;
// expression
send183984 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35755, 0);
((AST_Send)send183984)->info = (AST_Info)info3840;
assign22586 = (Object)new_AST_Assign((Object)localvariable26700, (Object)send183984);
// class
send183985 = (Object)new_AST_Send((Object)localvariable26700, (Object)SMB_class, 0);
((AST_Send)send183985)->info = (AST_Info)info3840;
// should
send183986 = (Object)new_AST_Send((Object)send183985, (Object)symbol35983, 0);
((AST_Send)send183986)->info = (AST_Info)info3840;
// =
send183987 = (Object)new_AST_Send((Object)send183986, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send183987)->info = (AST_Info)info3840;
// variable
send183988 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183988)->info = (AST_Info)info3840;
// class
send183989 = (Object)new_AST_Send((Object)send183988, (Object)SMB_class, 0);
((AST_Send)send183989)->info = (AST_Info)info3840;
// should
send183990 = (Object)new_AST_Send((Object)send183989, (Object)symbol35983, 0);
((AST_Send)send183990)->info = (AST_Info)info3840;
// =
send183991 = (Object)new_AST_Send((Object)send183990, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send183991)->info = (AST_Info)info3840;
// variable
send183992 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35757, 0);
((AST_Send)send183992)->info = (AST_Info)info3840;
// name
send183993 = (Object)new_AST_Send((Object)send183992, (Object)SMB_name, 0);
((AST_Send)send183993)->info = (AST_Info)info3840;
// should
send183994 = (Object)new_AST_Send((Object)send183993, (Object)symbol35983, 0);
((AST_Send)send183994)->info = (AST_Info)info3840;
string28143 = (Object)new_Type_String(L"c");
constant35705 = (Object)new_AST_Constant((Object)string28143);
// =
send183995 = (Object)new_AST_Send((Object)send183994, (Object)SMB__equal, 1, (Object)constant35705);
((AST_Send)send183995)->info = (AST_Info)info3840;
// expression
send183996 = (Object)new_AST_Send((Object)localvariable26700, (Object)symbol35755, 0);
((AST_Send)send183996)->info = (AST_Info)info3840;
// class
send183997 = (Object)new_AST_Send((Object)send183996, (Object)SMB_class, 0);
((AST_Send)send183997)->info = (AST_Info)info3840;
// should
send183998 = (Object)new_AST_Send((Object)send183997, (Object)symbol35983, 0);
((AST_Send)send183998)->info = (AST_Info)info3840;
// =
send183999 = (Object)new_AST_Send((Object)send183998, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send183999)->info = (AST_Info)info3840;
method25403 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21421, 30, assign22578, assign22579, assign22580, send183922, send183926, send183930, assign22581, send183934, send183938, send183942, assign22582, send183946, send183950, send183954, send183958, assign22583, assign22584, send183963, send183967, send183971, assign22585, send183975, send183979, send183983, assign22586, send183987, send183991, send183995, send183999, Self);
((AST_Method)method25403)->info = (AST_Info)info3840;
symbol35557 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure25401 = (Object)new_Runtime_MethodClosure(method25403);
store_method((Type_Class)class4034, (Type_Symbol)symbol35557, (Runtime_MethodClosure)methodclosure25401);


// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable26701 = (Object)new_AST_Variable_named(L"parser");
localvariable26702 = (Object)new_AST_Variable_named(L"string");
array21422 = (Object)new_Type_Array_with(2, (Object)localvariable26701, (Object)localvariable26702);
symbol36003 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send184000 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36003, 0);
string28144 = (Object)new_Type_String(L"testAssignmentExpressions");
string28145 = (Object)new_Type_String(L"testAssignmentExpressions\n\t| parser string |\n\tparser := scparser assignmentExpressions.\n\tstring := PEGStringScanner on: \'a :=  b:= c := d\'.\n\t((parser match: string) collect: #name) asArray should = ((Array new: 3)\n\tat: 1 put: \'a\';\n\tat: 2 put: \'b\';\n\tat: 3 put: \'c\';\n\tyourself).\n\tstring position should = 15.\n\tstring := PEGStringScanner on: \'\'.\n\t(parser match: string) should not be isNil");
smallint21023 = (Object)new_Type_SmallInt(-1);
smallint21024 = (Object)new_Type_SmallInt(-1);
info3841 = (Object)new_AST_Info((Type_String)string28145,(Type_String)string28144, (Type_SmallInt)smallint21023, (Type_SmallInt)smallint21024);
((AST_Send)send184000)->info = (AST_Info)info3841;
assign22587 = (Object)new_AST_Assign((Object)localvariable26701, (Object)send184000);
string28146 = (Object)new_Type_String(L"a :=  b:= c := d");
constant35706 = (Object)new_AST_Constant((Object)string28146);
// on:
send184001 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35706);
((AST_Send)send184001)->info = (AST_Info)info3841;
assign22588 = (Object)new_AST_Assign((Object)localvariable26702, (Object)send184001);
// match:
send184002 = (Object)new_AST_Send((Object)localvariable26701, (Object)symbol35843, 1, (Object)localvariable26702);
((AST_Send)send184002)->info = (AST_Info)info3841;
constant35707 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send184003 = (Object)new_AST_Send((Object)send184002, (Object)symbol35899, 1, (Object)constant35707);
((AST_Send)send184003)->info = (AST_Info)info3841;
// asArray
send184004 = (Object)new_AST_Send((Object)send184003, (Object)SMB_asArray, 0);
((AST_Send)send184004)->info = (AST_Info)info3841;
// should
send184005 = (Object)new_AST_Send((Object)send184004, (Object)symbol35983, 0);
((AST_Send)send184005)->info = (AST_Info)info3841;
localvariable26703 = (Object)new_AST_Variable_named(L"receiver");
array21423 = (Object)new_Type_Array_with(1, (Object)localvariable26703);
smallint21025 = (Object)new_Type_SmallInt(1);
constant35708 = (Object)new_AST_Constant((Object)smallint21025);
string28147 = (Object)new_Type_String(L"a");
constant35709 = (Object)new_AST_Constant((Object)string28147);
// at:put:
send184006 = (Object)new_AST_Send((Object)localvariable26703, (Object)SMB_at_put_, 2, (Object)constant35708, (Object)constant35709);
((AST_Send)send184006)->info = (AST_Info)info3841;
smallint21026 = (Object)new_Type_SmallInt(2);
constant35710 = (Object)new_AST_Constant((Object)smallint21026);
string28148 = (Object)new_Type_String(L"b");
constant35711 = (Object)new_AST_Constant((Object)string28148);
// at:put:
send184007 = (Object)new_AST_Send((Object)localvariable26703, (Object)SMB_at_put_, 2, (Object)constant35710, (Object)constant35711);
((AST_Send)send184007)->info = (AST_Info)info3841;
smallint21027 = (Object)new_Type_SmallInt(3);
constant35712 = (Object)new_AST_Constant((Object)smallint21027);
string28149 = (Object)new_Type_String(L"c");
constant35713 = (Object)new_AST_Constant((Object)string28149);
// at:put:
send184008 = (Object)new_AST_Send((Object)localvariable26703, (Object)SMB_at_put_, 2, (Object)constant35712, (Object)constant35713);
((AST_Send)send184008)->info = (AST_Info)info3841;
// yourself
send184009 = (Object)new_AST_Send((Object)localvariable26703, (Object)symbol35515, 0);
((AST_Send)send184009)->info = (AST_Info)info3841;
block12801 = (Object)new_AST_Block_with((Type_Array)array21423, (Type_Array)empty_Type_Array, 1, 4, send184006, send184007, send184008, send184009);
smallint21028 = (Object)new_Type_SmallInt(3);
constant35714 = (Object)new_AST_Constant((Object)smallint21028);
// new:
send184010 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35714);
((AST_Send)send184010)->info = (AST_Info)info3841;
// value:
send184011 = (Object)new_AST_Send((Object)block12801, (Object)SMB_value_, 1, (Object)send184010);
((AST_Send)send184011)->info = (AST_Info)info3841;
// =
send184012 = (Object)new_AST_Send((Object)send184005, (Object)SMB__equal, 1, (Object)send184011);
((AST_Send)send184012)->info = (AST_Info)info3841;
// position
send184013 = (Object)new_AST_Send((Object)localvariable26702, (Object)symbol35988, 0);
((AST_Send)send184013)->info = (AST_Info)info3841;
// should
send184014 = (Object)new_AST_Send((Object)send184013, (Object)symbol35983, 0);
((AST_Send)send184014)->info = (AST_Info)info3841;
smallint21029 = (Object)new_Type_SmallInt(15);
constant35715 = (Object)new_AST_Constant((Object)smallint21029);
// =
send184015 = (Object)new_AST_Send((Object)send184014, (Object)SMB__equal, 1, (Object)constant35715);
((AST_Send)send184015)->info = (AST_Info)info3841;
string28150 = (Object)new_Type_String(L"");
constant35716 = (Object)new_AST_Constant((Object)string28150);
// on:
send184016 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35716);
((AST_Send)send184016)->info = (AST_Info)info3841;
assign22589 = (Object)new_AST_Assign((Object)localvariable26702, (Object)send184016);
// match:
send184017 = (Object)new_AST_Send((Object)localvariable26701, (Object)symbol35843, 1, (Object)localvariable26702);
((AST_Send)send184017)->info = (AST_Info)info3841;
// should
send184018 = (Object)new_AST_Send((Object)send184017, (Object)symbol35983, 0);
((AST_Send)send184018)->info = (AST_Info)info3841;
// not
send184019 = (Object)new_AST_Send((Object)send184018, (Object)SMB_not, 0);
((AST_Send)send184019)->info = (AST_Info)info3841;
// be
send184020 = (Object)new_AST_Send((Object)send184019, (Object)symbol35989, 0);
((AST_Send)send184020)->info = (AST_Info)info3841;
// isNil
send184021 = (Object)new_AST_Send((Object)send184020, (Object)SMB_isNil, 0);
((AST_Send)send184021)->info = (AST_Info)info3841;
method25404 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21422, 7, assign22587, assign22588, send184012, send184015, assign22589, send184021, Self);
((AST_Method)method25404)->info = (AST_Info)info3841;
symbol35585 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure25402 = (Object)new_Runtime_MethodClosure(method25404);
store_method((Type_Class)class4034, (Type_Symbol)symbol35585, (Runtime_MethodClosure)methodclosure25402);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable26704 = (Object)new_AST_Variable_named(L"parser");
localvariable26705 = (Object)new_AST_Variable_named(L"string");
localvariable26706 = (Object)new_AST_Variable_named(L"message");
localvariable26707 = (Object)new_AST_Variable_named(L"return");
array21424 = (Object)new_Type_Array_with(4, (Object)localvariable26704, (Object)localvariable26705, (Object)localvariable26706, (Object)localvariable26707);
// messageExpression
send184022 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35990, 0);
string28151 = (Object)new_Type_String(L"testSuper");
string28152 = (Object)new_Type_String(L"testSuper\n\t| parser string message return |\n\tparser := scparser messageExpression.\n\t\n\tstring := PEGStringScanner on: \'super do: this and: that\'.\n \tmessage := parser match: string.\n\tmessage receiver class should = ASTSuper.\n\t\n\tparser := scparser return.\n\tstring := PEGStringScanner on: \'^ super do: this and: that\'.\n \treturn := parser match: string.\n\treturn class should = ASTReturnExpression.\n\treturn expression receiver class should = ASTSuper.");
smallint21030 = (Object)new_Type_SmallInt(-1);
smallint21031 = (Object)new_Type_SmallInt(-1);
info3842 = (Object)new_AST_Info((Type_String)string28152,(Type_String)string28151, (Type_SmallInt)smallint21030, (Type_SmallInt)smallint21031);
((AST_Send)send184022)->info = (AST_Info)info3842;
assign22590 = (Object)new_AST_Assign((Object)localvariable26704, (Object)send184022);
string28153 = (Object)new_Type_String(L"super do: this and: that");
constant35717 = (Object)new_AST_Constant((Object)string28153);
// on:
send184023 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35717);
((AST_Send)send184023)->info = (AST_Info)info3842;
assign22591 = (Object)new_AST_Assign((Object)localvariable26705, (Object)send184023);
// match:
send184024 = (Object)new_AST_Send((Object)localvariable26704, (Object)symbol35843, 1, (Object)localvariable26705);
((AST_Send)send184024)->info = (AST_Info)info3842;
assign22592 = (Object)new_AST_Assign((Object)localvariable26706, (Object)send184024);
// receiver
send184025 = (Object)new_AST_Send((Object)localvariable26706, (Object)symbol35728, 0);
((AST_Send)send184025)->info = (AST_Info)info3842;
// class
send184026 = (Object)new_AST_Send((Object)send184025, (Object)SMB_class, 0);
((AST_Send)send184026)->info = (AST_Info)info3842;
// should
send184027 = (Object)new_AST_Send((Object)send184026, (Object)symbol35983, 0);
((AST_Send)send184027)->info = (AST_Info)info3842;
classreference4833 = (Object)new_Organization_ClassReference((Type_Class)class4063);
// =
send184028 = (Object)new_AST_Send((Object)send184027, (Object)SMB__equal, 1, (Object)classreference4833);
((AST_Send)send184028)->info = (AST_Info)info3842;
// return
send184029 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35991, 0);
((AST_Send)send184029)->info = (AST_Info)info3842;
assign22593 = (Object)new_AST_Assign((Object)localvariable26704, (Object)send184029);
string28154 = (Object)new_Type_String(L"^ super do: this and: that");
constant35718 = (Object)new_AST_Constant((Object)string28154);
// on:
send184030 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35718);
((AST_Send)send184030)->info = (AST_Info)info3842;
assign22594 = (Object)new_AST_Assign((Object)localvariable26705, (Object)send184030);
// match:
send184031 = (Object)new_AST_Send((Object)localvariable26704, (Object)symbol35843, 1, (Object)localvariable26705);
((AST_Send)send184031)->info = (AST_Info)info3842;
assign22595 = (Object)new_AST_Assign((Object)localvariable26707, (Object)send184031);
// class
send184032 = (Object)new_AST_Send((Object)localvariable26707, (Object)SMB_class, 0);
((AST_Send)send184032)->info = (AST_Info)info3842;
// should
send184033 = (Object)new_AST_Send((Object)send184032, (Object)symbol35983, 0);
((AST_Send)send184033)->info = (AST_Info)info3842;
// =
send184034 = (Object)new_AST_Send((Object)send184033, (Object)SMB__equal, 1, (Object)classreference4827);
((AST_Send)send184034)->info = (AST_Info)info3842;
// expression
send184035 = (Object)new_AST_Send((Object)localvariable26707, (Object)symbol35755, 0);
((AST_Send)send184035)->info = (AST_Info)info3842;
// receiver
send184036 = (Object)new_AST_Send((Object)send184035, (Object)symbol35728, 0);
((AST_Send)send184036)->info = (AST_Info)info3842;
// class
send184037 = (Object)new_AST_Send((Object)send184036, (Object)SMB_class, 0);
((AST_Send)send184037)->info = (AST_Info)info3842;
// should
send184038 = (Object)new_AST_Send((Object)send184037, (Object)symbol35983, 0);
((AST_Send)send184038)->info = (AST_Info)info3842;
// =
send184039 = (Object)new_AST_Send((Object)send184038, (Object)SMB__equal, 1, (Object)classreference4833);
((AST_Send)send184039)->info = (AST_Info)info3842;
method25405 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21424, 10, assign22590, assign22591, assign22592, send184028, assign22593, assign22594, assign22595, send184034, send184039, Self);
((AST_Method)method25405)->info = (AST_Info)info3842;
symbol35593 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure25403 = (Object)new_Runtime_MethodClosure(method25405);
store_method((Type_Class)class4034, (Type_Symbol)symbol35593, (Runtime_MethodClosure)methodclosure25403);


// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable26708 = (Object)new_AST_Variable_named(L"parser");
localvariable26709 = (Object)new_AST_Variable_named(L"string");
localvariable26710 = (Object)new_AST_Variable_named(L"result");
localvariable26711 = (Object)new_AST_Variable_named(L"arg");
array21425 = (Object)new_Type_Array_with(4, (Object)localvariable26708, (Object)localvariable26709, (Object)localvariable26710, (Object)localvariable26711);
symbol36004 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send184040 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36004, 0);
string28155 = (Object)new_Type_String(L"testKeywordMessageExpression");
string28156 = (Object)new_Type_String(L"testKeywordMessageExpression\n\t| parser string result arg |\n\tparser := scparser keywordMessageExpression.\n\tstring := PEGStringScanner on: \'abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTMessageExpression.\n\tresult keywords asArray should = ((Array new: 3)\n\tat: 1 put: \'abc\';\n\tat: 2 put: \'def\';\n\tat: 3 put: \'ghi\';\n\tyourself).\n\targ := result arguments first.\n\targ class should = ASTNumber.\n\targ := result arguments at: 2.\n\targ class should = ASTBinaryExpression.\n\targ := result arguments at: 3.\n\targ class should = ASTUnaryExpression.\n\tstring position should = 25");
smallint21032 = (Object)new_Type_SmallInt(-1);
smallint21033 = (Object)new_Type_SmallInt(-1);
info3843 = (Object)new_AST_Info((Type_String)string28156,(Type_String)string28155, (Type_SmallInt)smallint21032, (Type_SmallInt)smallint21033);
((AST_Send)send184040)->info = (AST_Info)info3843;
assign22596 = (Object)new_AST_Assign((Object)localvariable26708, (Object)send184040);
string28157 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant35719 = (Object)new_AST_Constant((Object)string28157);
// on:
send184041 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35719);
((AST_Send)send184041)->info = (AST_Info)info3843;
assign22597 = (Object)new_AST_Assign((Object)localvariable26709, (Object)send184041);
// match:
send184042 = (Object)new_AST_Send((Object)localvariable26708, (Object)symbol35843, 1, (Object)localvariable26709);
((AST_Send)send184042)->info = (AST_Info)info3843;
assign22598 = (Object)new_AST_Assign((Object)localvariable26710, (Object)send184042);
// class
send184043 = (Object)new_AST_Send((Object)localvariable26710, (Object)SMB_class, 0);
((AST_Send)send184043)->info = (AST_Info)info3843;
// should
send184044 = (Object)new_AST_Send((Object)send184043, (Object)symbol35983, 0);
((AST_Send)send184044)->info = (AST_Info)info3843;
// =
send184045 = (Object)new_AST_Send((Object)send184044, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send184045)->info = (AST_Info)info3843;
symbol35738 = (Object)new_Type_Symbol_cached(L"keywords");
// keywords
send184046 = (Object)new_AST_Send((Object)localvariable26710, (Object)symbol35738, 0);
((AST_Send)send184046)->info = (AST_Info)info3843;
// asArray
send184047 = (Object)new_AST_Send((Object)send184046, (Object)SMB_asArray, 0);
((AST_Send)send184047)->info = (AST_Info)info3843;
// should
send184048 = (Object)new_AST_Send((Object)send184047, (Object)symbol35983, 0);
((AST_Send)send184048)->info = (AST_Info)info3843;
localvariable26712 = (Object)new_AST_Variable_named(L"receiver");
array21426 = (Object)new_Type_Array_with(1, (Object)localvariable26712);
smallint21034 = (Object)new_Type_SmallInt(1);
constant35720 = (Object)new_AST_Constant((Object)smallint21034);
string28158 = (Object)new_Type_String(L"abc");
constant35721 = (Object)new_AST_Constant((Object)string28158);
// at:put:
send184049 = (Object)new_AST_Send((Object)localvariable26712, (Object)SMB_at_put_, 2, (Object)constant35720, (Object)constant35721);
((AST_Send)send184049)->info = (AST_Info)info3843;
smallint21035 = (Object)new_Type_SmallInt(2);
constant35722 = (Object)new_AST_Constant((Object)smallint21035);
string28159 = (Object)new_Type_String(L"def");
constant35723 = (Object)new_AST_Constant((Object)string28159);
// at:put:
send184050 = (Object)new_AST_Send((Object)localvariable26712, (Object)SMB_at_put_, 2, (Object)constant35722, (Object)constant35723);
((AST_Send)send184050)->info = (AST_Info)info3843;
smallint21036 = (Object)new_Type_SmallInt(3);
constant35724 = (Object)new_AST_Constant((Object)smallint21036);
string28160 = (Object)new_Type_String(L"ghi");
constant35725 = (Object)new_AST_Constant((Object)string28160);
// at:put:
send184051 = (Object)new_AST_Send((Object)localvariable26712, (Object)SMB_at_put_, 2, (Object)constant35724, (Object)constant35725);
((AST_Send)send184051)->info = (AST_Info)info3843;
// yourself
send184052 = (Object)new_AST_Send((Object)localvariable26712, (Object)symbol35515, 0);
((AST_Send)send184052)->info = (AST_Info)info3843;
block12802 = (Object)new_AST_Block_with((Type_Array)array21426, (Type_Array)empty_Type_Array, 1, 4, send184049, send184050, send184051, send184052);
smallint21037 = (Object)new_Type_SmallInt(3);
constant35726 = (Object)new_AST_Constant((Object)smallint21037);
// new:
send184053 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35726);
((AST_Send)send184053)->info = (AST_Info)info3843;
// value:
send184054 = (Object)new_AST_Send((Object)block12802, (Object)SMB_value_, 1, (Object)send184053);
((AST_Send)send184054)->info = (AST_Info)info3843;
// =
send184055 = (Object)new_AST_Send((Object)send184048, (Object)SMB__equal, 1, (Object)send184054);
((AST_Send)send184055)->info = (AST_Info)info3843;
// arguments
send184056 = (Object)new_AST_Send((Object)localvariable26710, (Object)symbol35627, 0);
((AST_Send)send184056)->info = (AST_Info)info3843;
// first
send184057 = (Object)new_AST_Send((Object)send184056, (Object)symbol35693, 0);
((AST_Send)send184057)->info = (AST_Info)info3843;
assign22599 = (Object)new_AST_Assign((Object)localvariable26711, (Object)send184057);
// class
send184058 = (Object)new_AST_Send((Object)localvariable26711, (Object)SMB_class, 0);
((AST_Send)send184058)->info = (AST_Info)info3843;
// should
send184059 = (Object)new_AST_Send((Object)send184058, (Object)symbol35983, 0);
((AST_Send)send184059)->info = (AST_Info)info3843;
// =
send184060 = (Object)new_AST_Send((Object)send184059, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184060)->info = (AST_Info)info3843;
// arguments
send184061 = (Object)new_AST_Send((Object)localvariable26710, (Object)symbol35627, 0);
((AST_Send)send184061)->info = (AST_Info)info3843;
smallint21038 = (Object)new_Type_SmallInt(2);
constant35727 = (Object)new_AST_Constant((Object)smallint21038);
// at:
send184062 = (Object)new_AST_Send((Object)send184061, (Object)SMB_at_, 1, (Object)constant35727);
((AST_Send)send184062)->info = (AST_Info)info3843;
assign22600 = (Object)new_AST_Assign((Object)localvariable26711, (Object)send184062);
// class
send184063 = (Object)new_AST_Send((Object)localvariable26711, (Object)SMB_class, 0);
((AST_Send)send184063)->info = (AST_Info)info3843;
// should
send184064 = (Object)new_AST_Send((Object)send184063, (Object)symbol35983, 0);
((AST_Send)send184064)->info = (AST_Info)info3843;
// =
send184065 = (Object)new_AST_Send((Object)send184064, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184065)->info = (AST_Info)info3843;
// arguments
send184066 = (Object)new_AST_Send((Object)localvariable26710, (Object)symbol35627, 0);
((AST_Send)send184066)->info = (AST_Info)info3843;
smallint21039 = (Object)new_Type_SmallInt(3);
constant35728 = (Object)new_AST_Constant((Object)smallint21039);
// at:
send184067 = (Object)new_AST_Send((Object)send184066, (Object)SMB_at_, 1, (Object)constant35728);
((AST_Send)send184067)->info = (AST_Info)info3843;
assign22601 = (Object)new_AST_Assign((Object)localvariable26711, (Object)send184067);
// class
send184068 = (Object)new_AST_Send((Object)localvariable26711, (Object)SMB_class, 0);
((AST_Send)send184068)->info = (AST_Info)info3843;
// should
send184069 = (Object)new_AST_Send((Object)send184068, (Object)symbol35983, 0);
((AST_Send)send184069)->info = (AST_Info)info3843;
// =
send184070 = (Object)new_AST_Send((Object)send184069, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send184070)->info = (AST_Info)info3843;
// position
send184071 = (Object)new_AST_Send((Object)localvariable26709, (Object)symbol35988, 0);
((AST_Send)send184071)->info = (AST_Info)info3843;
// should
send184072 = (Object)new_AST_Send((Object)send184071, (Object)symbol35983, 0);
((AST_Send)send184072)->info = (AST_Info)info3843;
smallint21040 = (Object)new_Type_SmallInt(25);
constant35729 = (Object)new_AST_Constant((Object)smallint21040);
// =
send184073 = (Object)new_AST_Send((Object)send184072, (Object)SMB__equal, 1, (Object)constant35729);
((AST_Send)send184073)->info = (AST_Info)info3843;
method25406 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21425, 13, assign22596, assign22597, assign22598, send184045, send184055, assign22599, send184060, assign22600, send184065, assign22601, send184070, send184073, Self);
((AST_Method)method25406)->info = (AST_Info)info3843;
symbol35550 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure25404 = (Object)new_Runtime_MethodClosure(method25406);
store_method((Type_Class)class4034, (Type_Symbol)symbol35550, (Runtime_MethodClosure)methodclosure25404);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable26713 = (Object)new_AST_Variable_named(L"parser");
localvariable26714 = (Object)new_AST_Variable_named(L"string");
localvariable26715 = (Object)new_AST_Variable_named(L"result");
array21427 = (Object)new_Type_Array_with(3, (Object)localvariable26713, (Object)localvariable26714, (Object)localvariable26715);
symbol36005 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send184074 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36005, 0);
string28161 = (Object)new_Type_String(L"testBinaryMessageDefinition");
string28162 = (Object)new_Type_String(L"testBinaryMessageDefinition\n\t| parser string result |\n\tparser := scparser binaryMessageDefinition.\n\tstring := PEGStringScanner on: \'+= a\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'+=\'.\n\tresult parameter class should = ASTVariable.\n\tresult parameter name asString should = \'a\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'|= a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'-= abc d\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'-=\'.\n\tresult parameter name asString should = \'abc\'.\n\tresult parameter class should = ASTVariable.\n\tstring position should = 6");
smallint21041 = (Object)new_Type_SmallInt(-1);
smallint21042 = (Object)new_Type_SmallInt(-1);
info3844 = (Object)new_AST_Info((Type_String)string28162,(Type_String)string28161, (Type_SmallInt)smallint21041, (Type_SmallInt)smallint21042);
((AST_Send)send184074)->info = (AST_Info)info3844;
assign22602 = (Object)new_AST_Assign((Object)localvariable26713, (Object)send184074);
string28163 = (Object)new_Type_String(L"+= a");
constant35730 = (Object)new_AST_Constant((Object)string28163);
// on:
send184075 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35730);
((AST_Send)send184075)->info = (AST_Info)info3844;
assign22603 = (Object)new_AST_Assign((Object)localvariable26714, (Object)send184075);
// match:
send184076 = (Object)new_AST_Send((Object)localvariable26713, (Object)symbol35843, 1, (Object)localvariable26714);
((AST_Send)send184076)->info = (AST_Info)info3844;
assign22604 = (Object)new_AST_Assign((Object)localvariable26715, (Object)send184076);
// class
send184077 = (Object)new_AST_Send((Object)localvariable26715, (Object)SMB_class, 0);
((AST_Send)send184077)->info = (AST_Info)info3844;
// should
send184078 = (Object)new_AST_Send((Object)send184077, (Object)symbol35983, 0);
((AST_Send)send184078)->info = (AST_Info)info3844;
classreference4834 = (Object)new_Organization_ClassReference((Type_Class)class4074);

// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable26716 = (Object)new_AST_Variable_named(L"anObject");
array21428 = (Object)new_Type_Array_with(1, (Object)localvariable26716);
assign22605 = (Object)new_AST_Assign((Object)instancevariable6041, (Object)localvariable26716);
method25407 = (Object)new_AST_Method_with((Type_Array)array21428, (Type_Array)empty_Type_Array, 2, assign22605, Self);
string28164 = (Object)new_Type_String(L"parameter:");
string28165 = (Object)new_Type_String(L"parameter: anObject\n\tparameter := anObject");
smallint21043 = (Object)new_Type_SmallInt(-1);
smallint21044 = (Object)new_Type_SmallInt(-1);
info3845 = (Object)new_AST_Info((Type_String)string28165,(Type_String)string28164, (Type_SmallInt)smallint21043, (Type_SmallInt)smallint21044);
((AST_Method)method25407)->info = (AST_Info)info3845;
symbol35750 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure25405 = (Object)new_Runtime_MethodClosure(method25407);
store_method((Type_Class)class4074, (Type_Symbol)symbol35750, (Runtime_MethodClosure)methodclosure25405);


// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method25408 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6041);
string28166 = (Object)new_Type_String(L"parameter");
string28167 = (Object)new_Type_String(L"parameter\n\t^ parameter");
smallint21045 = (Object)new_Type_SmallInt(-1);
smallint21046 = (Object)new_Type_SmallInt(-1);
info3846 = (Object)new_AST_Info((Type_String)string28167,(Type_String)string28166, (Type_SmallInt)smallint21045, (Type_SmallInt)smallint21046);
((AST_Method)method25408)->info = (AST_Info)info3846;
symbol35751 = (Object)new_Type_Symbol_cached(L"parameter");
methodclosure25406 = (Object)new_Runtime_MethodClosure(method25408);
store_method((Type_Class)class4074, (Type_Symbol)symbol35751, (Runtime_MethodClosure)methodclosure25406);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send184079 = (Object)new_AST_Send((Object)Self, (Object)symbol35626, 0);
string28168 = (Object)new_Type_String(L"selectorSymbol");
string28169 = (Object)new_Type_String(L"selectorSymbol\n\t^ self selector symbol");
smallint21047 = (Object)new_Type_SmallInt(-1);
smallint21048 = (Object)new_Type_SmallInt(-1);
info3847 = (Object)new_AST_Info((Type_String)string28169,(Type_String)string28168, (Type_SmallInt)smallint21047, (Type_SmallInt)smallint21048);
((AST_Send)send184079)->info = (AST_Info)info3847;
// symbol
send184080 = (Object)new_AST_Send((Object)send184079, (Object)symbol35706, 0);
((AST_Send)send184080)->info = (AST_Info)info3847;
method25409 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184080);
((AST_Method)method25409)->info = (AST_Info)info3847;
methodclosure25407 = (Object)new_Runtime_MethodClosure(method25409);
store_method((Type_Class)class4074, (Type_Symbol)symbol35740, (Runtime_MethodClosure)methodclosure25407);


// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
// parameter
send184081 = (Object)new_AST_Send((Object)Self, (Object)symbol35751, 0);
string28170 = (Object)new_Type_String(L"parameters");
string28171 = (Object)new_Type_String(L"parameters\n\t^ OrderedCollection with: self parameter.");
smallint21049 = (Object)new_Type_SmallInt(-1);
smallint21050 = (Object)new_Type_SmallInt(-1);
info3848 = (Object)new_AST_Info((Type_String)string28171,(Type_String)string28170, (Type_SmallInt)smallint21049, (Type_SmallInt)smallint21050);
((AST_Send)send184081)->info = (AST_Info)info3848;
// with:
send184082 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35690, 1, (Object)send184081);
((AST_Send)send184082)->info = (AST_Info)info3848;
method25410 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184082);
((AST_Method)method25410)->info = (AST_Info)info3848;
symbol35733 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure25408 = (Object)new_Runtime_MethodClosure(method25410);
store_method((Type_Class)class4074, (Type_Symbol)symbol35733, (Runtime_MethodClosure)methodclosure25408);

// =
send184083 = (Object)new_AST_Send((Object)send184078, (Object)SMB__equal, 1, (Object)classreference4834);
((AST_Send)send184083)->info = (AST_Info)info3844;
// selector
send184084 = (Object)new_AST_Send((Object)localvariable26715, (Object)symbol35626, 0);
((AST_Send)send184084)->info = (AST_Info)info3844;
// printString
send184085 = (Object)new_AST_Send((Object)send184084, (Object)symbol35846, 0);
((AST_Send)send184085)->info = (AST_Info)info3844;
// should
send184086 = (Object)new_AST_Send((Object)send184085, (Object)symbol35983, 0);
((AST_Send)send184086)->info = (AST_Info)info3844;
string28172 = (Object)new_Type_String(L"+=");
constant35731 = (Object)new_AST_Constant((Object)string28172);
// =
send184087 = (Object)new_AST_Send((Object)send184086, (Object)SMB__equal, 1, (Object)constant35731);
((AST_Send)send184087)->info = (AST_Info)info3844;
// parameter
send184088 = (Object)new_AST_Send((Object)localvariable26715, (Object)symbol35751, 0);
((AST_Send)send184088)->info = (AST_Info)info3844;
// class
send184089 = (Object)new_AST_Send((Object)send184088, (Object)SMB_class, 0);
((AST_Send)send184089)->info = (AST_Info)info3844;
// should
send184090 = (Object)new_AST_Send((Object)send184089, (Object)symbol35983, 0);
((AST_Send)send184090)->info = (AST_Info)info3844;
// =
send184091 = (Object)new_AST_Send((Object)send184090, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184091)->info = (AST_Info)info3844;
// parameter
send184092 = (Object)new_AST_Send((Object)localvariable26715, (Object)symbol35751, 0);
((AST_Send)send184092)->info = (AST_Info)info3844;
// name
send184093 = (Object)new_AST_Send((Object)send184092, (Object)SMB_name, 0);
((AST_Send)send184093)->info = (AST_Info)info3844;
// asString
send184094 = (Object)new_AST_Send((Object)send184093, (Object)SMB_asString, 0);
((AST_Send)send184094)->info = (AST_Info)info3844;
// should
send184095 = (Object)new_AST_Send((Object)send184094, (Object)symbol35983, 0);
((AST_Send)send184095)->info = (AST_Info)info3844;
string28173 = (Object)new_Type_String(L"a");
constant35732 = (Object)new_AST_Constant((Object)string28173);
// =
send184096 = (Object)new_AST_Send((Object)send184095, (Object)SMB__equal, 1, (Object)constant35732);
((AST_Send)send184096)->info = (AST_Info)info3844;
// position
send184097 = (Object)new_AST_Send((Object)localvariable26714, (Object)symbol35988, 0);
((AST_Send)send184097)->info = (AST_Info)info3844;
// should
send184098 = (Object)new_AST_Send((Object)send184097, (Object)symbol35983, 0);
((AST_Send)send184098)->info = (AST_Info)info3844;
smallint21051 = (Object)new_Type_SmallInt(4);
constant35733 = (Object)new_AST_Constant((Object)smallint21051);
// =
send184099 = (Object)new_AST_Send((Object)send184098, (Object)SMB__equal, 1, (Object)constant35733);
((AST_Send)send184099)->info = (AST_Info)info3844;
string28174 = (Object)new_Type_String(L"|= a");
constant35734 = (Object)new_AST_Constant((Object)string28174);
// on:
send184100 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35734);
((AST_Send)send184100)->info = (AST_Info)info3844;
assign22606 = (Object)new_AST_Assign((Object)localvariable26714, (Object)send184100);
// match:
send184101 = (Object)new_AST_Send((Object)localvariable26713, (Object)symbol35843, 1, (Object)localvariable26714);
((AST_Send)send184101)->info = (AST_Info)info3844;
// should
send184102 = (Object)new_AST_Send((Object)send184101, (Object)symbol35983, 0);
((AST_Send)send184102)->info = (AST_Info)info3844;
// be
send184103 = (Object)new_AST_Send((Object)send184102, (Object)symbol35989, 0);
((AST_Send)send184103)->info = (AST_Info)info3844;
// isNil
send184104 = (Object)new_AST_Send((Object)send184103, (Object)SMB_isNil, 0);
((AST_Send)send184104)->info = (AST_Info)info3844;
// position
send184105 = (Object)new_AST_Send((Object)localvariable26714, (Object)symbol35988, 0);
((AST_Send)send184105)->info = (AST_Info)info3844;
// should
send184106 = (Object)new_AST_Send((Object)send184105, (Object)symbol35983, 0);
((AST_Send)send184106)->info = (AST_Info)info3844;
smallint21052 = (Object)new_Type_SmallInt(0);
constant35735 = (Object)new_AST_Constant((Object)smallint21052);
// =
send184107 = (Object)new_AST_Send((Object)send184106, (Object)SMB__equal, 1, (Object)constant35735);
((AST_Send)send184107)->info = (AST_Info)info3844;
string28175 = (Object)new_Type_String(L"-= abc d");
constant35736 = (Object)new_AST_Constant((Object)string28175);
// on:
send184108 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35736);
((AST_Send)send184108)->info = (AST_Info)info3844;
assign22607 = (Object)new_AST_Assign((Object)localvariable26714, (Object)send184108);
// match:
send184109 = (Object)new_AST_Send((Object)localvariable26713, (Object)symbol35843, 1, (Object)localvariable26714);
((AST_Send)send184109)->info = (AST_Info)info3844;
assign22608 = (Object)new_AST_Assign((Object)localvariable26715, (Object)send184109);
// class
send184110 = (Object)new_AST_Send((Object)localvariable26715, (Object)SMB_class, 0);
((AST_Send)send184110)->info = (AST_Info)info3844;
// should
send184111 = (Object)new_AST_Send((Object)send184110, (Object)symbol35983, 0);
((AST_Send)send184111)->info = (AST_Info)info3844;
// =
send184112 = (Object)new_AST_Send((Object)send184111, (Object)SMB__equal, 1, (Object)classreference4834);
((AST_Send)send184112)->info = (AST_Info)info3844;
// selector
send184113 = (Object)new_AST_Send((Object)localvariable26715, (Object)symbol35626, 0);
((AST_Send)send184113)->info = (AST_Info)info3844;
// printString
send184114 = (Object)new_AST_Send((Object)send184113, (Object)symbol35846, 0);
((AST_Send)send184114)->info = (AST_Info)info3844;
// should
send184115 = (Object)new_AST_Send((Object)send184114, (Object)symbol35983, 0);
((AST_Send)send184115)->info = (AST_Info)info3844;
string28176 = (Object)new_Type_String(L"-=");
constant35737 = (Object)new_AST_Constant((Object)string28176);
// =
send184116 = (Object)new_AST_Send((Object)send184115, (Object)SMB__equal, 1, (Object)constant35737);
((AST_Send)send184116)->info = (AST_Info)info3844;
// parameter
send184117 = (Object)new_AST_Send((Object)localvariable26715, (Object)symbol35751, 0);
((AST_Send)send184117)->info = (AST_Info)info3844;
// name
send184118 = (Object)new_AST_Send((Object)send184117, (Object)SMB_name, 0);
((AST_Send)send184118)->info = (AST_Info)info3844;
// asString
send184119 = (Object)new_AST_Send((Object)send184118, (Object)SMB_asString, 0);
((AST_Send)send184119)->info = (AST_Info)info3844;
// should
send184120 = (Object)new_AST_Send((Object)send184119, (Object)symbol35983, 0);
((AST_Send)send184120)->info = (AST_Info)info3844;
string28177 = (Object)new_Type_String(L"abc");
constant35738 = (Object)new_AST_Constant((Object)string28177);
// =
send184121 = (Object)new_AST_Send((Object)send184120, (Object)SMB__equal, 1, (Object)constant35738);
((AST_Send)send184121)->info = (AST_Info)info3844;
// parameter
send184122 = (Object)new_AST_Send((Object)localvariable26715, (Object)symbol35751, 0);
((AST_Send)send184122)->info = (AST_Info)info3844;
// class
send184123 = (Object)new_AST_Send((Object)send184122, (Object)SMB_class, 0);
((AST_Send)send184123)->info = (AST_Info)info3844;
// should
send184124 = (Object)new_AST_Send((Object)send184123, (Object)symbol35983, 0);
((AST_Send)send184124)->info = (AST_Info)info3844;
// =
send184125 = (Object)new_AST_Send((Object)send184124, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184125)->info = (AST_Info)info3844;
// position
send184126 = (Object)new_AST_Send((Object)localvariable26714, (Object)symbol35988, 0);
((AST_Send)send184126)->info = (AST_Info)info3844;
// should
send184127 = (Object)new_AST_Send((Object)send184126, (Object)symbol35983, 0);
((AST_Send)send184127)->info = (AST_Info)info3844;
smallint21053 = (Object)new_Type_SmallInt(6);
constant35739 = (Object)new_AST_Constant((Object)smallint21053);
// =
send184128 = (Object)new_AST_Send((Object)send184127, (Object)SMB__equal, 1, (Object)constant35739);
((AST_Send)send184128)->info = (AST_Info)info3844;
method25411 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21427, 19, assign22602, assign22603, assign22604, send184083, send184087, send184091, send184096, send184099, assign22606, send184104, send184107, assign22607, assign22608, send184112, send184116, send184121, send184125, send184128, Self);
((AST_Method)method25411)->info = (AST_Info)info3844;
symbol35547 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure25409 = (Object)new_Runtime_MethodClosure(method25411);
store_method((Type_Class)class4034, (Type_Symbol)symbol35547, (Runtime_MethodClosure)methodclosure25409);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable26717 = (Object)new_AST_Variable_named(L"parser");
localvariable26718 = (Object)new_AST_Variable_named(L"string");
localvariable26719 = (Object)new_AST_Variable_named(L"result");
array21429 = (Object)new_Type_Array_with(3, (Object)localvariable26717, (Object)localvariable26718, (Object)localvariable26719);
symbol36006 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send184129 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36006, 0);
string28178 = (Object)new_Type_String(L"testUnarySelector");
string28179 = (Object)new_Type_String(L"testUnarySelector\n\t| parser string result |\n\tparser := scparser unarySelector.\n\tstring := PEGStringScanner on: \'abcd bla\'.\n\tresult := parser match: string.\n\tresult class should = ASTUnarySelector.\n\tresult selector printString should = \'abcd\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'abcd: bla\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");
smallint21054 = (Object)new_Type_SmallInt(-1);
smallint21055 = (Object)new_Type_SmallInt(-1);
info3849 = (Object)new_AST_Info((Type_String)string28179,(Type_String)string28178, (Type_SmallInt)smallint21054, (Type_SmallInt)smallint21055);
((AST_Send)send184129)->info = (AST_Info)info3849;
assign22609 = (Object)new_AST_Assign((Object)localvariable26717, (Object)send184129);
string28180 = (Object)new_Type_String(L"abcd bla");
constant35740 = (Object)new_AST_Constant((Object)string28180);
// on:
send184130 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35740);
((AST_Send)send184130)->info = (AST_Info)info3849;
assign22610 = (Object)new_AST_Assign((Object)localvariable26718, (Object)send184130);
// match:
send184131 = (Object)new_AST_Send((Object)localvariable26717, (Object)symbol35843, 1, (Object)localvariable26718);
((AST_Send)send184131)->info = (AST_Info)info3849;
assign22611 = (Object)new_AST_Assign((Object)localvariable26719, (Object)send184131);
// class
send184132 = (Object)new_AST_Send((Object)localvariable26719, (Object)SMB_class, 0);
((AST_Send)send184132)->info = (AST_Info)info3849;
// should
send184133 = (Object)new_AST_Send((Object)send184132, (Object)symbol35983, 0);
((AST_Send)send184133)->info = (AST_Info)info3849;
// =
send184134 = (Object)new_AST_Send((Object)send184133, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send184134)->info = (AST_Info)info3849;
// selector
send184135 = (Object)new_AST_Send((Object)localvariable26719, (Object)symbol35626, 0);
((AST_Send)send184135)->info = (AST_Info)info3849;
// printString
send184136 = (Object)new_AST_Send((Object)send184135, (Object)symbol35846, 0);
((AST_Send)send184136)->info = (AST_Info)info3849;
// should
send184137 = (Object)new_AST_Send((Object)send184136, (Object)symbol35983, 0);
((AST_Send)send184137)->info = (AST_Info)info3849;
string28181 = (Object)new_Type_String(L"abcd");
constant35741 = (Object)new_AST_Constant((Object)string28181);
// =
send184138 = (Object)new_AST_Send((Object)send184137, (Object)SMB__equal, 1, (Object)constant35741);
((AST_Send)send184138)->info = (AST_Info)info3849;
// position
send184139 = (Object)new_AST_Send((Object)localvariable26718, (Object)symbol35988, 0);
((AST_Send)send184139)->info = (AST_Info)info3849;
// should
send184140 = (Object)new_AST_Send((Object)send184139, (Object)symbol35983, 0);
((AST_Send)send184140)->info = (AST_Info)info3849;
smallint21056 = (Object)new_Type_SmallInt(4);
constant35742 = (Object)new_AST_Constant((Object)smallint21056);
// =
send184141 = (Object)new_AST_Send((Object)send184140, (Object)SMB__equal, 1, (Object)constant35742);
((AST_Send)send184141)->info = (AST_Info)info3849;
string28182 = (Object)new_Type_String(L"abcd: bla");
constant35743 = (Object)new_AST_Constant((Object)string28182);
// on:
send184142 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35743);
((AST_Send)send184142)->info = (AST_Info)info3849;
assign22612 = (Object)new_AST_Assign((Object)localvariable26718, (Object)send184142);
// match:
send184143 = (Object)new_AST_Send((Object)localvariable26717, (Object)symbol35843, 1, (Object)localvariable26718);
((AST_Send)send184143)->info = (AST_Info)info3849;
// should
send184144 = (Object)new_AST_Send((Object)send184143, (Object)symbol35983, 0);
((AST_Send)send184144)->info = (AST_Info)info3849;
// be
send184145 = (Object)new_AST_Send((Object)send184144, (Object)symbol35989, 0);
((AST_Send)send184145)->info = (AST_Info)info3849;
// isNil
send184146 = (Object)new_AST_Send((Object)send184145, (Object)SMB_isNil, 0);
((AST_Send)send184146)->info = (AST_Info)info3849;
// position
send184147 = (Object)new_AST_Send((Object)localvariable26718, (Object)symbol35988, 0);
((AST_Send)send184147)->info = (AST_Info)info3849;
// should
send184148 = (Object)new_AST_Send((Object)send184147, (Object)symbol35983, 0);
((AST_Send)send184148)->info = (AST_Info)info3849;
smallint21057 = (Object)new_Type_SmallInt(0);
constant35744 = (Object)new_AST_Constant((Object)smallint21057);
// =
send184149 = (Object)new_AST_Send((Object)send184148, (Object)SMB__equal, 1, (Object)constant35744);
((AST_Send)send184149)->info = (AST_Info)info3849;
method25412 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21429, 10, assign22609, assign22610, assign22611, send184134, send184138, send184141, assign22612, send184146, send184149, Self);
((AST_Method)method25412)->info = (AST_Info)info3849;
symbol35575 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure25410 = (Object)new_Runtime_MethodClosure(method25412);
store_method((Type_Class)class4034, (Type_Symbol)symbol35575, (Runtime_MethodClosure)methodclosure25410);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable26720 = (Object)new_AST_Variable_named(L"parser");
localvariable26721 = (Object)new_AST_Variable_named(L"string");
localvariable26722 = (Object)new_AST_Variable_named(L"result");
array21430 = (Object)new_Type_Array_with(3, (Object)localvariable26720, (Object)localvariable26721, (Object)localvariable26722);
// return
send184150 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35991, 0);
string28183 = (Object)new_Type_String(L"testReturn");
string28184 = (Object)new_Type_String(L"testReturn\n\t| parser string result |\n\tparser := scparser return.\n\tstring := PEGStringScanner on: \'^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTReturnExpression.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression.\n\tstring := PEGStringScanner on: \'^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. \'.\n\tresult := parser match: string.\n\tresult class should = ASTReturnExpression.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");
smallint21058 = (Object)new_Type_SmallInt(-1);
smallint21059 = (Object)new_Type_SmallInt(-1);
info3850 = (Object)new_AST_Info((Type_String)string28184,(Type_String)string28183, (Type_SmallInt)smallint21058, (Type_SmallInt)smallint21059);
((AST_Send)send184150)->info = (AST_Info)info3850;
assign22613 = (Object)new_AST_Assign((Object)localvariable26720, (Object)send184150);
string28185 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant35745 = (Object)new_AST_Constant((Object)string28185);
// on:
send184151 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35745);
((AST_Send)send184151)->info = (AST_Info)info3850;
assign22614 = (Object)new_AST_Assign((Object)localvariable26721, (Object)send184151);
// match:
send184152 = (Object)new_AST_Send((Object)localvariable26720, (Object)symbol35843, 1, (Object)localvariable26721);
((AST_Send)send184152)->info = (AST_Info)info3850;
assign22615 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184152);
// class
send184153 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184153)->info = (AST_Info)info3850;
// should
send184154 = (Object)new_AST_Send((Object)send184153, (Object)symbol35983, 0);
((AST_Send)send184154)->info = (AST_Info)info3850;
// =
send184155 = (Object)new_AST_Send((Object)send184154, (Object)SMB__equal, 1, (Object)classreference4827);
((AST_Send)send184155)->info = (AST_Info)info3850;
// expression
send184156 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184156)->info = (AST_Info)info3850;
assign22616 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184156);
// class
send184157 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184157)->info = (AST_Info)info3850;
// should
send184158 = (Object)new_AST_Send((Object)send184157, (Object)symbol35983, 0);
((AST_Send)send184158)->info = (AST_Info)info3850;
// =
send184159 = (Object)new_AST_Send((Object)send184158, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184159)->info = (AST_Info)info3850;
// variable
send184160 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184160)->info = (AST_Info)info3850;
// class
send184161 = (Object)new_AST_Send((Object)send184160, (Object)SMB_class, 0);
((AST_Send)send184161)->info = (AST_Info)info3850;
// should
send184162 = (Object)new_AST_Send((Object)send184161, (Object)symbol35983, 0);
((AST_Send)send184162)->info = (AST_Info)info3850;
// =
send184163 = (Object)new_AST_Send((Object)send184162, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184163)->info = (AST_Info)info3850;
// variable
send184164 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184164)->info = (AST_Info)info3850;
// name
send184165 = (Object)new_AST_Send((Object)send184164, (Object)SMB_name, 0);
((AST_Send)send184165)->info = (AST_Info)info3850;
// should
send184166 = (Object)new_AST_Send((Object)send184165, (Object)symbol35983, 0);
((AST_Send)send184166)->info = (AST_Info)info3850;
string28186 = (Object)new_Type_String(L"a");
constant35746 = (Object)new_AST_Constant((Object)string28186);
// =
send184167 = (Object)new_AST_Send((Object)send184166, (Object)SMB__equal, 1, (Object)constant35746);
((AST_Send)send184167)->info = (AST_Info)info3850;
// expression
send184168 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184168)->info = (AST_Info)info3850;
assign22617 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184168);
// class
send184169 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184169)->info = (AST_Info)info3850;
// should
send184170 = (Object)new_AST_Send((Object)send184169, (Object)symbol35983, 0);
((AST_Send)send184170)->info = (AST_Info)info3850;
// =
send184171 = (Object)new_AST_Send((Object)send184170, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184171)->info = (AST_Info)info3850;
// variable
send184172 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184172)->info = (AST_Info)info3850;
// class
send184173 = (Object)new_AST_Send((Object)send184172, (Object)SMB_class, 0);
((AST_Send)send184173)->info = (AST_Info)info3850;
// should
send184174 = (Object)new_AST_Send((Object)send184173, (Object)symbol35983, 0);
((AST_Send)send184174)->info = (AST_Info)info3850;
// =
send184175 = (Object)new_AST_Send((Object)send184174, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184175)->info = (AST_Info)info3850;
// variable
send184176 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184176)->info = (AST_Info)info3850;
// name
send184177 = (Object)new_AST_Send((Object)send184176, (Object)SMB_name, 0);
((AST_Send)send184177)->info = (AST_Info)info3850;
// should
send184178 = (Object)new_AST_Send((Object)send184177, (Object)symbol35983, 0);
((AST_Send)send184178)->info = (AST_Info)info3850;
string28187 = (Object)new_Type_String(L"b");
constant35747 = (Object)new_AST_Constant((Object)string28187);
// =
send184179 = (Object)new_AST_Send((Object)send184178, (Object)SMB__equal, 1, (Object)constant35747);
((AST_Send)send184179)->info = (AST_Info)info3850;
// expression
send184180 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184180)->info = (AST_Info)info3850;
assign22618 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184180);
// class
send184181 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184181)->info = (AST_Info)info3850;
// should
send184182 = (Object)new_AST_Send((Object)send184181, (Object)symbol35983, 0);
((AST_Send)send184182)->info = (AST_Info)info3850;
// =
send184183 = (Object)new_AST_Send((Object)send184182, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184183)->info = (AST_Info)info3850;
// variable
send184184 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184184)->info = (AST_Info)info3850;
// class
send184185 = (Object)new_AST_Send((Object)send184184, (Object)SMB_class, 0);
((AST_Send)send184185)->info = (AST_Info)info3850;
// should
send184186 = (Object)new_AST_Send((Object)send184185, (Object)symbol35983, 0);
((AST_Send)send184186)->info = (AST_Info)info3850;
// =
send184187 = (Object)new_AST_Send((Object)send184186, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184187)->info = (AST_Info)info3850;
// variable
send184188 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184188)->info = (AST_Info)info3850;
// name
send184189 = (Object)new_AST_Send((Object)send184188, (Object)SMB_name, 0);
((AST_Send)send184189)->info = (AST_Info)info3850;
// should
send184190 = (Object)new_AST_Send((Object)send184189, (Object)symbol35983, 0);
((AST_Send)send184190)->info = (AST_Info)info3850;
string28188 = (Object)new_Type_String(L"c");
constant35748 = (Object)new_AST_Constant((Object)string28188);
// =
send184191 = (Object)new_AST_Send((Object)send184190, (Object)SMB__equal, 1, (Object)constant35748);
((AST_Send)send184191)->info = (AST_Info)info3850;
// expression
send184192 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184192)->info = (AST_Info)info3850;
// class
send184193 = (Object)new_AST_Send((Object)send184192, (Object)SMB_class, 0);
((AST_Send)send184193)->info = (AST_Info)info3850;
// should
send184194 = (Object)new_AST_Send((Object)send184193, (Object)symbol35983, 0);
((AST_Send)send184194)->info = (AST_Info)info3850;
// =
send184195 = (Object)new_AST_Send((Object)send184194, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send184195)->info = (AST_Info)info3850;
string28189 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant35749 = (Object)new_AST_Constant((Object)string28189);
// on:
send184196 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35749);
((AST_Send)send184196)->info = (AST_Info)info3850;
assign22619 = (Object)new_AST_Assign((Object)localvariable26721, (Object)send184196);
// match:
send184197 = (Object)new_AST_Send((Object)localvariable26720, (Object)symbol35843, 1, (Object)localvariable26721);
((AST_Send)send184197)->info = (AST_Info)info3850;
assign22620 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184197);
// class
send184198 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184198)->info = (AST_Info)info3850;
// should
send184199 = (Object)new_AST_Send((Object)send184198, (Object)symbol35983, 0);
((AST_Send)send184199)->info = (AST_Info)info3850;
// =
send184200 = (Object)new_AST_Send((Object)send184199, (Object)SMB__equal, 1, (Object)classreference4827);
((AST_Send)send184200)->info = (AST_Info)info3850;
// expression
send184201 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184201)->info = (AST_Info)info3850;
assign22621 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184201);
// class
send184202 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184202)->info = (AST_Info)info3850;
// should
send184203 = (Object)new_AST_Send((Object)send184202, (Object)symbol35983, 0);
((AST_Send)send184203)->info = (AST_Info)info3850;
// =
send184204 = (Object)new_AST_Send((Object)send184203, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184204)->info = (AST_Info)info3850;
// variable
send184205 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184205)->info = (AST_Info)info3850;
// class
send184206 = (Object)new_AST_Send((Object)send184205, (Object)SMB_class, 0);
((AST_Send)send184206)->info = (AST_Info)info3850;
// should
send184207 = (Object)new_AST_Send((Object)send184206, (Object)symbol35983, 0);
((AST_Send)send184207)->info = (AST_Info)info3850;
// =
send184208 = (Object)new_AST_Send((Object)send184207, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184208)->info = (AST_Info)info3850;
// variable
send184209 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184209)->info = (AST_Info)info3850;
// name
send184210 = (Object)new_AST_Send((Object)send184209, (Object)SMB_name, 0);
((AST_Send)send184210)->info = (AST_Info)info3850;
// should
send184211 = (Object)new_AST_Send((Object)send184210, (Object)symbol35983, 0);
((AST_Send)send184211)->info = (AST_Info)info3850;
string28190 = (Object)new_Type_String(L"a");
constant35750 = (Object)new_AST_Constant((Object)string28190);
// =
send184212 = (Object)new_AST_Send((Object)send184211, (Object)SMB__equal, 1, (Object)constant35750);
((AST_Send)send184212)->info = (AST_Info)info3850;
// expression
send184213 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184213)->info = (AST_Info)info3850;
assign22622 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184213);
// class
send184214 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184214)->info = (AST_Info)info3850;
// should
send184215 = (Object)new_AST_Send((Object)send184214, (Object)symbol35983, 0);
((AST_Send)send184215)->info = (AST_Info)info3850;
// =
send184216 = (Object)new_AST_Send((Object)send184215, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184216)->info = (AST_Info)info3850;
// variable
send184217 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184217)->info = (AST_Info)info3850;
// class
send184218 = (Object)new_AST_Send((Object)send184217, (Object)SMB_class, 0);
((AST_Send)send184218)->info = (AST_Info)info3850;
// should
send184219 = (Object)new_AST_Send((Object)send184218, (Object)symbol35983, 0);
((AST_Send)send184219)->info = (AST_Info)info3850;
// =
send184220 = (Object)new_AST_Send((Object)send184219, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184220)->info = (AST_Info)info3850;
// variable
send184221 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184221)->info = (AST_Info)info3850;
// name
send184222 = (Object)new_AST_Send((Object)send184221, (Object)SMB_name, 0);
((AST_Send)send184222)->info = (AST_Info)info3850;
// should
send184223 = (Object)new_AST_Send((Object)send184222, (Object)symbol35983, 0);
((AST_Send)send184223)->info = (AST_Info)info3850;
string28191 = (Object)new_Type_String(L"b");
constant35751 = (Object)new_AST_Constant((Object)string28191);
// =
send184224 = (Object)new_AST_Send((Object)send184223, (Object)SMB__equal, 1, (Object)constant35751);
((AST_Send)send184224)->info = (AST_Info)info3850;
// expression
send184225 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184225)->info = (AST_Info)info3850;
assign22623 = (Object)new_AST_Assign((Object)localvariable26722, (Object)send184225);
// class
send184226 = (Object)new_AST_Send((Object)localvariable26722, (Object)SMB_class, 0);
((AST_Send)send184226)->info = (AST_Info)info3850;
// should
send184227 = (Object)new_AST_Send((Object)send184226, (Object)symbol35983, 0);
((AST_Send)send184227)->info = (AST_Info)info3850;
// =
send184228 = (Object)new_AST_Send((Object)send184227, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184228)->info = (AST_Info)info3850;
// variable
send184229 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184229)->info = (AST_Info)info3850;
// class
send184230 = (Object)new_AST_Send((Object)send184229, (Object)SMB_class, 0);
((AST_Send)send184230)->info = (AST_Info)info3850;
// should
send184231 = (Object)new_AST_Send((Object)send184230, (Object)symbol35983, 0);
((AST_Send)send184231)->info = (AST_Info)info3850;
// =
send184232 = (Object)new_AST_Send((Object)send184231, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184232)->info = (AST_Info)info3850;
// variable
send184233 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35757, 0);
((AST_Send)send184233)->info = (AST_Info)info3850;
// name
send184234 = (Object)new_AST_Send((Object)send184233, (Object)SMB_name, 0);
((AST_Send)send184234)->info = (AST_Info)info3850;
// should
send184235 = (Object)new_AST_Send((Object)send184234, (Object)symbol35983, 0);
((AST_Send)send184235)->info = (AST_Info)info3850;
string28192 = (Object)new_Type_String(L"c");
constant35752 = (Object)new_AST_Constant((Object)string28192);
// =
send184236 = (Object)new_AST_Send((Object)send184235, (Object)SMB__equal, 1, (Object)constant35752);
((AST_Send)send184236)->info = (AST_Info)info3850;
// expression
send184237 = (Object)new_AST_Send((Object)localvariable26722, (Object)symbol35755, 0);
((AST_Send)send184237)->info = (AST_Info)info3850;
// class
send184238 = (Object)new_AST_Send((Object)send184237, (Object)SMB_class, 0);
((AST_Send)send184238)->info = (AST_Info)info3850;
// should
send184239 = (Object)new_AST_Send((Object)send184238, (Object)symbol35983, 0);
((AST_Send)send184239)->info = (AST_Info)info3850;
// =
send184240 = (Object)new_AST_Send((Object)send184239, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send184240)->info = (AST_Info)info3850;
method25413 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21430, 34, assign22613, assign22614, assign22615, send184155, assign22616, send184159, send184163, send184167, assign22617, send184171, send184175, send184179, assign22618, send184183, send184187, send184191, send184195, assign22619, assign22620, send184200, assign22621, send184204, send184208, send184212, assign22622, send184216, send184220, send184224, assign22623, send184228, send184232, send184236, send184240, Self);
((AST_Method)method25413)->info = (AST_Info)info3850;
symbol35567 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure25411 = (Object)new_Runtime_MethodClosure(method25413);
store_method((Type_Class)class4034, (Type_Symbol)symbol35567, (Runtime_MethodClosure)methodclosure25411);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable26723 = (Object)new_AST_Variable_named(L"parser");
localvariable26724 = (Object)new_AST_Variable_named(L"string");
localvariable26725 = (Object)new_AST_Variable_named(L"result");
array21431 = (Object)new_Type_Array_with(3, (Object)localvariable26723, (Object)localvariable26724, (Object)localvariable26725);
symbol36007 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send184241 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36007, 0);
string28193 = (Object)new_Type_String(L"testUnaryObjectDescription");
string28194 = (Object)new_Type_String(L"testUnaryObjectDescription\n\t| parser string result |\n\tparser := scparser unaryObjectDescription.\t\" unary expression \"\n\tstring := PEGStringScanner on: \'abc def ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'ghi\'.\n\tresult := result receiver.\n\tresult class should = ASTUnaryExpression.\n\tresult selector class should = ASTUnarySelector.\n\tresult selector selector printString should = \'def\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tstring position should = 12.\t\" primary \"\n\tstring := PEGStringScanner on: \'3\'.\n\tresult := parser match: string.\n\tresult class should = ASTNumber.\n\tresult number should = \'3\'.\n\tstring position should = 1");
smallint21060 = (Object)new_Type_SmallInt(-1);
smallint21061 = (Object)new_Type_SmallInt(-1);
info3851 = (Object)new_AST_Info((Type_String)string28194,(Type_String)string28193, (Type_SmallInt)smallint21060, (Type_SmallInt)smallint21061);
((AST_Send)send184241)->info = (AST_Info)info3851;
assign22624 = (Object)new_AST_Assign((Object)localvariable26723, (Object)send184241);
string28195 = (Object)new_Type_String(L"abc def ghi ");
constant35753 = (Object)new_AST_Constant((Object)string28195);
// on:
send184242 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35753);
((AST_Send)send184242)->info = (AST_Info)info3851;
assign22625 = (Object)new_AST_Assign((Object)localvariable26724, (Object)send184242);
// match:
send184243 = (Object)new_AST_Send((Object)localvariable26723, (Object)symbol35843, 1, (Object)localvariable26724);
((AST_Send)send184243)->info = (AST_Info)info3851;
assign22626 = (Object)new_AST_Assign((Object)localvariable26725, (Object)send184243);
// class
send184244 = (Object)new_AST_Send((Object)localvariable26725, (Object)SMB_class, 0);
((AST_Send)send184244)->info = (AST_Info)info3851;
// should
send184245 = (Object)new_AST_Send((Object)send184244, (Object)symbol35983, 0);
((AST_Send)send184245)->info = (AST_Info)info3851;
// =
send184246 = (Object)new_AST_Send((Object)send184245, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send184246)->info = (AST_Info)info3851;
// selector
send184247 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35626, 0);
((AST_Send)send184247)->info = (AST_Info)info3851;
// class
send184248 = (Object)new_AST_Send((Object)send184247, (Object)SMB_class, 0);
((AST_Send)send184248)->info = (AST_Info)info3851;
// should
send184249 = (Object)new_AST_Send((Object)send184248, (Object)symbol35983, 0);
((AST_Send)send184249)->info = (AST_Info)info3851;
// =
send184250 = (Object)new_AST_Send((Object)send184249, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send184250)->info = (AST_Info)info3851;
// selector
send184251 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35626, 0);
((AST_Send)send184251)->info = (AST_Info)info3851;
// selector
send184252 = (Object)new_AST_Send((Object)send184251, (Object)symbol35626, 0);
((AST_Send)send184252)->info = (AST_Info)info3851;
// printString
send184253 = (Object)new_AST_Send((Object)send184252, (Object)symbol35846, 0);
((AST_Send)send184253)->info = (AST_Info)info3851;
// should
send184254 = (Object)new_AST_Send((Object)send184253, (Object)symbol35983, 0);
((AST_Send)send184254)->info = (AST_Info)info3851;
string28196 = (Object)new_Type_String(L"ghi");
constant35754 = (Object)new_AST_Constant((Object)string28196);
// =
send184255 = (Object)new_AST_Send((Object)send184254, (Object)SMB__equal, 1, (Object)constant35754);
((AST_Send)send184255)->info = (AST_Info)info3851;
// receiver
send184256 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35728, 0);
((AST_Send)send184256)->info = (AST_Info)info3851;
assign22627 = (Object)new_AST_Assign((Object)localvariable26725, (Object)send184256);
// class
send184257 = (Object)new_AST_Send((Object)localvariable26725, (Object)SMB_class, 0);
((AST_Send)send184257)->info = (AST_Info)info3851;
// should
send184258 = (Object)new_AST_Send((Object)send184257, (Object)symbol35983, 0);
((AST_Send)send184258)->info = (AST_Info)info3851;
// =
send184259 = (Object)new_AST_Send((Object)send184258, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send184259)->info = (AST_Info)info3851;
// selector
send184260 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35626, 0);
((AST_Send)send184260)->info = (AST_Info)info3851;
// class
send184261 = (Object)new_AST_Send((Object)send184260, (Object)SMB_class, 0);
((AST_Send)send184261)->info = (AST_Info)info3851;
// should
send184262 = (Object)new_AST_Send((Object)send184261, (Object)symbol35983, 0);
((AST_Send)send184262)->info = (AST_Info)info3851;
// =
send184263 = (Object)new_AST_Send((Object)send184262, (Object)SMB__equal, 1, (Object)classreference4825);
((AST_Send)send184263)->info = (AST_Info)info3851;
// selector
send184264 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35626, 0);
((AST_Send)send184264)->info = (AST_Info)info3851;
// selector
send184265 = (Object)new_AST_Send((Object)send184264, (Object)symbol35626, 0);
((AST_Send)send184265)->info = (AST_Info)info3851;
// printString
send184266 = (Object)new_AST_Send((Object)send184265, (Object)symbol35846, 0);
((AST_Send)send184266)->info = (AST_Info)info3851;
// should
send184267 = (Object)new_AST_Send((Object)send184266, (Object)symbol35983, 0);
((AST_Send)send184267)->info = (AST_Info)info3851;
string28197 = (Object)new_Type_String(L"def");
constant35755 = (Object)new_AST_Constant((Object)string28197);
// =
send184268 = (Object)new_AST_Send((Object)send184267, (Object)SMB__equal, 1, (Object)constant35755);
((AST_Send)send184268)->info = (AST_Info)info3851;
// receiver
send184269 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35728, 0);
((AST_Send)send184269)->info = (AST_Info)info3851;
// class
send184270 = (Object)new_AST_Send((Object)send184269, (Object)SMB_class, 0);
((AST_Send)send184270)->info = (AST_Info)info3851;
// should
send184271 = (Object)new_AST_Send((Object)send184270, (Object)symbol35983, 0);
((AST_Send)send184271)->info = (AST_Info)info3851;
// =
send184272 = (Object)new_AST_Send((Object)send184271, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184272)->info = (AST_Info)info3851;
// receiver
send184273 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35728, 0);
((AST_Send)send184273)->info = (AST_Info)info3851;
// name
send184274 = (Object)new_AST_Send((Object)send184273, (Object)SMB_name, 0);
((AST_Send)send184274)->info = (AST_Info)info3851;
// should
send184275 = (Object)new_AST_Send((Object)send184274, (Object)symbol35983, 0);
((AST_Send)send184275)->info = (AST_Info)info3851;
string28198 = (Object)new_Type_String(L"abc");
constant35756 = (Object)new_AST_Constant((Object)string28198);
// =
send184276 = (Object)new_AST_Send((Object)send184275, (Object)SMB__equal, 1, (Object)constant35756);
((AST_Send)send184276)->info = (AST_Info)info3851;
// position
send184277 = (Object)new_AST_Send((Object)localvariable26724, (Object)symbol35988, 0);
((AST_Send)send184277)->info = (AST_Info)info3851;
// should
send184278 = (Object)new_AST_Send((Object)send184277, (Object)symbol35983, 0);
((AST_Send)send184278)->info = (AST_Info)info3851;
smallint21062 = (Object)new_Type_SmallInt(12);
constant35757 = (Object)new_AST_Constant((Object)smallint21062);
// =
send184279 = (Object)new_AST_Send((Object)send184278, (Object)SMB__equal, 1, (Object)constant35757);
((AST_Send)send184279)->info = (AST_Info)info3851;
string28199 = (Object)new_Type_String(L"3");
constant35758 = (Object)new_AST_Constant((Object)string28199);
// on:
send184280 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35758);
((AST_Send)send184280)->info = (AST_Info)info3851;
assign22628 = (Object)new_AST_Assign((Object)localvariable26724, (Object)send184280);
// match:
send184281 = (Object)new_AST_Send((Object)localvariable26723, (Object)symbol35843, 1, (Object)localvariable26724);
((AST_Send)send184281)->info = (AST_Info)info3851;
assign22629 = (Object)new_AST_Assign((Object)localvariable26725, (Object)send184281);
// class
send184282 = (Object)new_AST_Send((Object)localvariable26725, (Object)SMB_class, 0);
((AST_Send)send184282)->info = (AST_Info)info3851;
// should
send184283 = (Object)new_AST_Send((Object)send184282, (Object)symbol35983, 0);
((AST_Send)send184283)->info = (AST_Info)info3851;
// =
send184284 = (Object)new_AST_Send((Object)send184283, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184284)->info = (AST_Info)info3851;
// number
send184285 = (Object)new_AST_Send((Object)localvariable26725, (Object)symbol35701, 0);
((AST_Send)send184285)->info = (AST_Info)info3851;
// should
send184286 = (Object)new_AST_Send((Object)send184285, (Object)symbol35983, 0);
((AST_Send)send184286)->info = (AST_Info)info3851;
string28200 = (Object)new_Type_String(L"3");
constant35759 = (Object)new_AST_Constant((Object)string28200);
// =
send184287 = (Object)new_AST_Send((Object)send184286, (Object)SMB__equal, 1, (Object)constant35759);
((AST_Send)send184287)->info = (AST_Info)info3851;
// position
send184288 = (Object)new_AST_Send((Object)localvariable26724, (Object)symbol35988, 0);
((AST_Send)send184288)->info = (AST_Info)info3851;
// should
send184289 = (Object)new_AST_Send((Object)send184288, (Object)symbol35983, 0);
((AST_Send)send184289)->info = (AST_Info)info3851;
smallint21063 = (Object)new_Type_SmallInt(1);
constant35760 = (Object)new_AST_Constant((Object)smallint21063);
// =
send184290 = (Object)new_AST_Send((Object)send184289, (Object)SMB__equal, 1, (Object)constant35760);
((AST_Send)send184290)->info = (AST_Info)info3851;
method25414 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21431, 19, assign22624, assign22625, assign22626, send184246, send184250, send184255, assign22627, send184259, send184263, send184268, send184272, send184276, send184279, assign22628, assign22629, send184284, send184287, send184290, Self);
((AST_Method)method25414)->info = (AST_Info)info3851;
symbol35559 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure25412 = (Object)new_Runtime_MethodClosure(method25414);
store_method((Type_Class)class4034, (Type_Symbol)symbol35559, (Runtime_MethodClosure)methodclosure25412);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable26726 = (Object)new_AST_Variable_named(L"parser");
localvariable26727 = (Object)new_AST_Variable_named(L"string");
localvariable26728 = (Object)new_AST_Variable_named(L"result");
localvariable26729 = (Object)new_AST_Variable_named(L"arg");
array21432 = (Object)new_Type_Array_with(4, (Object)localvariable26726, (Object)localvariable26727, (Object)localvariable26728, (Object)localvariable26729);
symbol36008 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send184291 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36008, 0);
string28201 = (Object)new_Type_String(L"testKeywordExpression");
string28202 = (Object)new_Type_String(L"testKeywordExpression\n\t| parser string result arg |\n\tparser := scparser keywordExpression.\n\tstring := PEGStringScanner on: \'2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTMessageExpression.\n\tresult keywords asArray should = ((Array new: 3)\n\tat: 1 put: \'abc\';\n\tat: 2 put: \'def\';\n\tat: 3 put: \'ghi\';\n\tyourself).\n\tresult selector class should = ASTKeywordSelector.\n\tresult selector printString should = \'abc:def:ghi:\'.\n\targ := result arguments first.\n\targ class should = ASTNumber.\n\targ := result arguments at: 2.\n\targ class should = ASTBinaryExpression.\n\targ := result arguments at: 3.\n\targ class should = ASTUnaryExpression.\n\tresult receiver class should = ASTBinaryExpression.\n\tstring position should = 29");
smallint21064 = (Object)new_Type_SmallInt(-1);
smallint21065 = (Object)new_Type_SmallInt(-1);
info3852 = (Object)new_AST_Info((Type_String)string28202,(Type_String)string28201, (Type_SmallInt)smallint21064, (Type_SmallInt)smallint21065);
((AST_Send)send184291)->info = (AST_Info)info3852;
assign22630 = (Object)new_AST_Assign((Object)localvariable26726, (Object)send184291);
string28203 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant35761 = (Object)new_AST_Constant((Object)string28203);
// on:
send184292 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35761);
((AST_Send)send184292)->info = (AST_Info)info3852;
assign22631 = (Object)new_AST_Assign((Object)localvariable26727, (Object)send184292);
// match:
send184293 = (Object)new_AST_Send((Object)localvariable26726, (Object)symbol35843, 1, (Object)localvariable26727);
((AST_Send)send184293)->info = (AST_Info)info3852;
assign22632 = (Object)new_AST_Assign((Object)localvariable26728, (Object)send184293);
// class
send184294 = (Object)new_AST_Send((Object)localvariable26728, (Object)SMB_class, 0);
((AST_Send)send184294)->info = (AST_Info)info3852;
// should
send184295 = (Object)new_AST_Send((Object)send184294, (Object)symbol35983, 0);
((AST_Send)send184295)->info = (AST_Info)info3852;
// =
send184296 = (Object)new_AST_Send((Object)send184295, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send184296)->info = (AST_Info)info3852;
// keywords
send184297 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35738, 0);
((AST_Send)send184297)->info = (AST_Info)info3852;
// asArray
send184298 = (Object)new_AST_Send((Object)send184297, (Object)SMB_asArray, 0);
((AST_Send)send184298)->info = (AST_Info)info3852;
// should
send184299 = (Object)new_AST_Send((Object)send184298, (Object)symbol35983, 0);
((AST_Send)send184299)->info = (AST_Info)info3852;
localvariable26730 = (Object)new_AST_Variable_named(L"receiver");
array21433 = (Object)new_Type_Array_with(1, (Object)localvariable26730);
smallint21066 = (Object)new_Type_SmallInt(1);
constant35762 = (Object)new_AST_Constant((Object)smallint21066);
string28204 = (Object)new_Type_String(L"abc");
constant35763 = (Object)new_AST_Constant((Object)string28204);
// at:put:
send184300 = (Object)new_AST_Send((Object)localvariable26730, (Object)SMB_at_put_, 2, (Object)constant35762, (Object)constant35763);
((AST_Send)send184300)->info = (AST_Info)info3852;
smallint21067 = (Object)new_Type_SmallInt(2);
constant35764 = (Object)new_AST_Constant((Object)smallint21067);
string28205 = (Object)new_Type_String(L"def");
constant35765 = (Object)new_AST_Constant((Object)string28205);
// at:put:
send184301 = (Object)new_AST_Send((Object)localvariable26730, (Object)SMB_at_put_, 2, (Object)constant35764, (Object)constant35765);
((AST_Send)send184301)->info = (AST_Info)info3852;
smallint21068 = (Object)new_Type_SmallInt(3);
constant35766 = (Object)new_AST_Constant((Object)smallint21068);
string28206 = (Object)new_Type_String(L"ghi");
constant35767 = (Object)new_AST_Constant((Object)string28206);
// at:put:
send184302 = (Object)new_AST_Send((Object)localvariable26730, (Object)SMB_at_put_, 2, (Object)constant35766, (Object)constant35767);
((AST_Send)send184302)->info = (AST_Info)info3852;
// yourself
send184303 = (Object)new_AST_Send((Object)localvariable26730, (Object)symbol35515, 0);
((AST_Send)send184303)->info = (AST_Info)info3852;
block12803 = (Object)new_AST_Block_with((Type_Array)array21433, (Type_Array)empty_Type_Array, 1, 4, send184300, send184301, send184302, send184303);
smallint21069 = (Object)new_Type_SmallInt(3);
constant35768 = (Object)new_AST_Constant((Object)smallint21069);
// new:
send184304 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35768);
((AST_Send)send184304)->info = (AST_Info)info3852;
// value:
send184305 = (Object)new_AST_Send((Object)block12803, (Object)SMB_value_, 1, (Object)send184304);
((AST_Send)send184305)->info = (AST_Info)info3852;
// =
send184306 = (Object)new_AST_Send((Object)send184299, (Object)SMB__equal, 1, (Object)send184305);
((AST_Send)send184306)->info = (AST_Info)info3852;
// selector
send184307 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35626, 0);
((AST_Send)send184307)->info = (AST_Info)info3852;
// class
send184308 = (Object)new_AST_Send((Object)send184307, (Object)SMB_class, 0);
((AST_Send)send184308)->info = (AST_Info)info3852;
// should
send184309 = (Object)new_AST_Send((Object)send184308, (Object)symbol35983, 0);
((AST_Send)send184309)->info = (AST_Info)info3852;
classreference4835 = (Object)new_Organization_ClassReference((Type_Class)class4059);

// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super1980 = (Object)new_AST_Super((Object)symbol35517, 0);
// new
send184310 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28207 = (Object)new_Type_String(L"initialize");
string28208 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tkeywords := OrderedCollection new.");
smallint21070 = (Object)new_Type_SmallInt(-1);
smallint21071 = (Object)new_Type_SmallInt(-1);
info3853 = (Object)new_AST_Info((Type_String)string28208,(Type_String)string28207, (Type_SmallInt)smallint21070, (Type_SmallInt)smallint21071);
((AST_Send)send184310)->info = (AST_Info)info3853;
assign22633 = (Object)new_AST_Assign((Object)instancevariable6023, (Object)send184310);
method25415 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1980, assign22633, Self);
((AST_Method)method25415)->info = (AST_Info)info3853;
methodclosure25413 = (Object)new_Runtime_MethodClosure(method25415);
store_method((Type_Class)class4059, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25413);


// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method25416 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6023);
string28209 = (Object)new_Type_String(L"keywords");
string28210 = (Object)new_Type_String(L"keywords\n\t^ keywords");
smallint21072 = (Object)new_Type_SmallInt(-1);
smallint21073 = (Object)new_Type_SmallInt(-1);
info3854 = (Object)new_AST_Info((Type_String)string28210,(Type_String)string28209, (Type_SmallInt)smallint21072, (Type_SmallInt)smallint21073);
((AST_Method)method25416)->info = (AST_Info)info3854;
methodclosure25414 = (Object)new_Runtime_MethodClosure(method25416);
store_method((Type_Class)class4059, (Type_Symbol)symbol35738, (Runtime_MethodClosure)methodclosure25414);


// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable26731 = (Object)new_AST_Variable_named(L"anObject");
array21434 = (Object)new_Type_Array_with(1, (Object)localvariable26731);
assign22634 = (Object)new_AST_Assign((Object)instancevariable6023, (Object)localvariable26731);
method25417 = (Object)new_AST_Method_with((Type_Array)array21434, (Type_Array)empty_Type_Array, 2, assign22634, Self);
string28211 = (Object)new_Type_String(L"keywords:");
string28212 = (Object)new_Type_String(L"keywords: anObject\n\tkeywords := anObject");
smallint21074 = (Object)new_Type_SmallInt(-1);
smallint21075 = (Object)new_Type_SmallInt(-1);
info3855 = (Object)new_AST_Info((Type_String)string28212,(Type_String)string28211, (Type_SmallInt)smallint21074, (Type_SmallInt)smallint21075);
((AST_Method)method25417)->info = (AST_Info)info3855;
symbol35737 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure25415 = (Object)new_Runtime_MethodClosure(method25417);
store_method((Type_Class)class4059, (Type_Symbol)symbol35737, (Runtime_MethodClosure)methodclosure25415);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol36009 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string28213 = (Object)new_Type_String(L":");
constant35769 = (Object)new_AST_Constant((Object)string28213);
// joinUsing:
send184311 = (Object)new_AST_Send((Object)instancevariable6023, (Object)symbol36009, 1, (Object)constant35769);
string28214 = (Object)new_Type_String(L"selectorName");
string28215 = (Object)new_Type_String(L"selectorName\n\t^ (keywords joinUsing: \':\'), \':\'.");
smallint21076 = (Object)new_Type_SmallInt(-1);
smallint21077 = (Object)new_Type_SmallInt(-1);
info3856 = (Object)new_AST_Info((Type_String)string28215,(Type_String)string28214, (Type_SmallInt)smallint21076, (Type_SmallInt)smallint21077);
((AST_Send)send184311)->info = (AST_Info)info3856;
string28216 = (Object)new_Type_String(L":");
constant35770 = (Object)new_AST_Constant((Object)string28216);
// ,
send184312 = (Object)new_AST_Send((Object)send184311, (Object)SMB__concat, 1, (Object)constant35770);
((AST_Send)send184312)->info = (AST_Info)info3856;
method25418 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184312);
((AST_Method)method25418)->info = (AST_Info)info3856;
symbol35731 = (Object)new_Type_Symbol_cached(L"selectorName");
methodclosure25416 = (Object)new_Runtime_MethodClosure(method25418);
store_method((Type_Class)class4059, (Type_Symbol)symbol35731, (Runtime_MethodClosure)methodclosure25416);

// =
send184313 = (Object)new_AST_Send((Object)send184309, (Object)SMB__equal, 1, (Object)classreference4835);
((AST_Send)send184313)->info = (AST_Info)info3852;
// selector
send184314 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35626, 0);
((AST_Send)send184314)->info = (AST_Info)info3852;
// printString
send184315 = (Object)new_AST_Send((Object)send184314, (Object)symbol35846, 0);
((AST_Send)send184315)->info = (AST_Info)info3852;
// should
send184316 = (Object)new_AST_Send((Object)send184315, (Object)symbol35983, 0);
((AST_Send)send184316)->info = (AST_Info)info3852;
string28217 = (Object)new_Type_String(L"abc:def:ghi:");
constant35771 = (Object)new_AST_Constant((Object)string28217);
// =
send184317 = (Object)new_AST_Send((Object)send184316, (Object)SMB__equal, 1, (Object)constant35771);
((AST_Send)send184317)->info = (AST_Info)info3852;
// arguments
send184318 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35627, 0);
((AST_Send)send184318)->info = (AST_Info)info3852;
// first
send184319 = (Object)new_AST_Send((Object)send184318, (Object)symbol35693, 0);
((AST_Send)send184319)->info = (AST_Info)info3852;
assign22635 = (Object)new_AST_Assign((Object)localvariable26729, (Object)send184319);
// class
send184320 = (Object)new_AST_Send((Object)localvariable26729, (Object)SMB_class, 0);
((AST_Send)send184320)->info = (AST_Info)info3852;
// should
send184321 = (Object)new_AST_Send((Object)send184320, (Object)symbol35983, 0);
((AST_Send)send184321)->info = (AST_Info)info3852;
// =
send184322 = (Object)new_AST_Send((Object)send184321, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184322)->info = (AST_Info)info3852;
// arguments
send184323 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35627, 0);
((AST_Send)send184323)->info = (AST_Info)info3852;
smallint21078 = (Object)new_Type_SmallInt(2);
constant35772 = (Object)new_AST_Constant((Object)smallint21078);
// at:
send184324 = (Object)new_AST_Send((Object)send184323, (Object)SMB_at_, 1, (Object)constant35772);
((AST_Send)send184324)->info = (AST_Info)info3852;
assign22636 = (Object)new_AST_Assign((Object)localvariable26729, (Object)send184324);
// class
send184325 = (Object)new_AST_Send((Object)localvariable26729, (Object)SMB_class, 0);
((AST_Send)send184325)->info = (AST_Info)info3852;
// should
send184326 = (Object)new_AST_Send((Object)send184325, (Object)symbol35983, 0);
((AST_Send)send184326)->info = (AST_Info)info3852;
// =
send184327 = (Object)new_AST_Send((Object)send184326, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184327)->info = (AST_Info)info3852;
// arguments
send184328 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35627, 0);
((AST_Send)send184328)->info = (AST_Info)info3852;
smallint21079 = (Object)new_Type_SmallInt(3);
constant35773 = (Object)new_AST_Constant((Object)smallint21079);
// at:
send184329 = (Object)new_AST_Send((Object)send184328, (Object)SMB_at_, 1, (Object)constant35773);
((AST_Send)send184329)->info = (AST_Info)info3852;
assign22637 = (Object)new_AST_Assign((Object)localvariable26729, (Object)send184329);
// class
send184330 = (Object)new_AST_Send((Object)localvariable26729, (Object)SMB_class, 0);
((AST_Send)send184330)->info = (AST_Info)info3852;
// should
send184331 = (Object)new_AST_Send((Object)send184330, (Object)symbol35983, 0);
((AST_Send)send184331)->info = (AST_Info)info3852;
// =
send184332 = (Object)new_AST_Send((Object)send184331, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send184332)->info = (AST_Info)info3852;
// receiver
send184333 = (Object)new_AST_Send((Object)localvariable26728, (Object)symbol35728, 0);
((AST_Send)send184333)->info = (AST_Info)info3852;
// class
send184334 = (Object)new_AST_Send((Object)send184333, (Object)SMB_class, 0);
((AST_Send)send184334)->info = (AST_Info)info3852;
// should
send184335 = (Object)new_AST_Send((Object)send184334, (Object)symbol35983, 0);
((AST_Send)send184335)->info = (AST_Info)info3852;
// =
send184336 = (Object)new_AST_Send((Object)send184335, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184336)->info = (AST_Info)info3852;
// position
send184337 = (Object)new_AST_Send((Object)localvariable26727, (Object)symbol35988, 0);
((AST_Send)send184337)->info = (AST_Info)info3852;
// should
send184338 = (Object)new_AST_Send((Object)send184337, (Object)symbol35983, 0);
((AST_Send)send184338)->info = (AST_Info)info3852;
smallint21080 = (Object)new_Type_SmallInt(29);
constant35774 = (Object)new_AST_Constant((Object)smallint21080);
// =
send184339 = (Object)new_AST_Send((Object)send184338, (Object)SMB__equal, 1, (Object)constant35774);
((AST_Send)send184339)->info = (AST_Info)info3852;
method25419 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21432, 16, assign22630, assign22631, assign22632, send184296, send184306, send184313, send184317, assign22635, send184322, assign22636, send184327, assign22637, send184332, send184336, send184339, Self);
((AST_Method)method25419)->info = (AST_Info)info3852;
symbol35587 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure25417 = (Object)new_Runtime_MethodClosure(method25419);
store_method((Type_Class)class4034, (Type_Symbol)symbol35587, (Runtime_MethodClosure)methodclosure25417);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable26732 = (Object)new_AST_Variable_named(L"parser");
localvariable26733 = (Object)new_AST_Variable_named(L"string");
localvariable26734 = (Object)new_AST_Variable_named(L"result");
array21435 = (Object)new_Type_Array_with(3, (Object)localvariable26732, (Object)localvariable26733, (Object)localvariable26734);
symbol36010 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send184340 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36010, 0);
string28218 = (Object)new_Type_String(L"testSymbolConstant");
string28219 = (Object)new_Type_String(L"testSymbolConstant\n\t| parser string result |\n\tparser := scparser symbolConstant.\n\tstring := PEGStringScanner on: \'#abc\'.\n\tresult := parser match: string.\n\tresult class should = ASTSymbol.\n\tresult symbol should = \'abc\'.\n\tstring position should = 4");
smallint21081 = (Object)new_Type_SmallInt(-1);
smallint21082 = (Object)new_Type_SmallInt(-1);
info3857 = (Object)new_AST_Info((Type_String)string28219,(Type_String)string28218, (Type_SmallInt)smallint21081, (Type_SmallInt)smallint21082);
((AST_Send)send184340)->info = (AST_Info)info3857;
assign22638 = (Object)new_AST_Assign((Object)localvariable26732, (Object)send184340);
string28220 = (Object)new_Type_String(L"#abc");
constant35775 = (Object)new_AST_Constant((Object)string28220);
// on:
send184341 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35775);
((AST_Send)send184341)->info = (AST_Info)info3857;
assign22639 = (Object)new_AST_Assign((Object)localvariable26733, (Object)send184341);
// match:
send184342 = (Object)new_AST_Send((Object)localvariable26732, (Object)symbol35843, 1, (Object)localvariable26733);
((AST_Send)send184342)->info = (AST_Info)info3857;
assign22640 = (Object)new_AST_Assign((Object)localvariable26734, (Object)send184342);
// class
send184343 = (Object)new_AST_Send((Object)localvariable26734, (Object)SMB_class, 0);
((AST_Send)send184343)->info = (AST_Info)info3857;
// should
send184344 = (Object)new_AST_Send((Object)send184343, (Object)symbol35983, 0);
((AST_Send)send184344)->info = (AST_Info)info3857;
classreference4836 = (Object)new_Organization_ClassReference((Type_Class)class4075);

// ASTSymbol>>symbol
//symbol
// 	^ symbol
method25420 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6042);
string28221 = (Object)new_Type_String(L"symbol");
string28222 = (Object)new_Type_String(L"symbol\n\t^ symbol");
smallint21083 = (Object)new_Type_SmallInt(-1);
smallint21084 = (Object)new_Type_SmallInt(-1);
info3858 = (Object)new_AST_Info((Type_String)string28222,(Type_String)string28221, (Type_SmallInt)smallint21083, (Type_SmallInt)smallint21084);
((AST_Method)method25420)->info = (AST_Info)info3858;
methodclosure25418 = (Object)new_Runtime_MethodClosure(method25420);
store_method((Type_Class)class4075, (Type_Symbol)symbol35706, (Runtime_MethodClosure)methodclosure25418);


// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send184345 = (Object)new_AST_Send((Object)Self, (Object)symbol35706, 0);
string28223 = (Object)new_Type_String(L"asSymbol");
string28224 = (Object)new_Type_String(L"asSymbol\n\t^ self symbol asSymbol");
smallint21085 = (Object)new_Type_SmallInt(-1);
smallint21086 = (Object)new_Type_SmallInt(-1);
info3859 = (Object)new_AST_Info((Type_String)string28224,(Type_String)string28223, (Type_SmallInt)smallint21085, (Type_SmallInt)smallint21086);
((AST_Send)send184345)->info = (AST_Info)info3859;
// asSymbol
send184346 = (Object)new_AST_Send((Object)send184345, (Object)SMB_asSymbol, 0);
((AST_Send)send184346)->info = (AST_Info)info3859;
method25421 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184346);
((AST_Method)method25421)->info = (AST_Info)info3859;
methodclosure25419 = (Object)new_Runtime_MethodClosure(method25421);
store_method((Type_Class)class4075, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure25419);


// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable26735 = (Object)new_AST_Variable_named(L"aSymbol");
array21436 = (Object)new_Type_Array_with(1, (Object)localvariable26735);
assign22641 = (Object)new_AST_Assign((Object)instancevariable6042, (Object)localvariable26735);
method25422 = (Object)new_AST_Method_with((Type_Array)array21436, (Type_Array)empty_Type_Array, 2, assign22641, Self);
string28225 = (Object)new_Type_String(L"symbol:");
string28226 = (Object)new_Type_String(L"symbol: aSymbol\n\tsymbol := aSymbol");
smallint21087 = (Object)new_Type_SmallInt(-1);
smallint21088 = (Object)new_Type_SmallInt(-1);
info3860 = (Object)new_AST_Info((Type_String)string28226,(Type_String)string28225, (Type_SmallInt)smallint21087, (Type_SmallInt)smallint21088);
((AST_Method)method25422)->info = (AST_Info)info3860;
symbol35707 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure25420 = (Object)new_Runtime_MethodClosure(method25422);
store_method((Type_Class)class4075, (Type_Symbol)symbol35707, (Runtime_MethodClosure)methodclosure25420);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
// symbol
send184347 = (Object)new_AST_Send((Object)Self, (Object)symbol35706, 0);
string28227 = (Object)new_Type_String(L"asString");
string28228 = (Object)new_Type_String(L"asString\n\t^ self symbol asString");
smallint21089 = (Object)new_Type_SmallInt(-1);
smallint21090 = (Object)new_Type_SmallInt(-1);
info3861 = (Object)new_AST_Info((Type_String)string28228,(Type_String)string28227, (Type_SmallInt)smallint21089, (Type_SmallInt)smallint21090);
((AST_Send)send184347)->info = (AST_Info)info3861;
// asString
send184348 = (Object)new_AST_Send((Object)send184347, (Object)SMB_asString, 0);
((AST_Send)send184348)->info = (AST_Info)info3861;
method25423 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184348);
((AST_Method)method25423)->info = (AST_Info)info3861;
methodclosure25421 = (Object)new_Runtime_MethodClosure(method25423);
store_method((Type_Class)class4075, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure25421);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol
// symbol
send184349 = (Object)new_AST_Send((Object)Self, (Object)symbol35706, 0);
string28229 = (Object)new_Type_String(L"asPSymbol");
string28230 = (Object)new_Type_String(L"asPSymbol\n\t^PSymbol named: self symbol");
smallint21091 = (Object)new_Type_SmallInt(-1);
smallint21092 = (Object)new_Type_SmallInt(-1);
info3862 = (Object)new_AST_Info((Type_String)string28230,(Type_String)string28229, (Type_SmallInt)smallint21091, (Type_SmallInt)smallint21092);
((AST_Send)send184349)->info = (AST_Info)info3862;
// named:
send184350 = (Object)new_AST_Send((Object)classreference4796, (Object)symbol35855, 1, (Object)send184349);
((AST_Send)send184350)->info = (AST_Info)info3862;
method25424 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184350);
((AST_Method)method25424)->info = (AST_Info)info3862;
symbol35708 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure25422 = (Object)new_Runtime_MethodClosure(method25424);
store_method((Type_Class)class4075, (Type_Symbol)symbol35708, (Runtime_MethodClosure)methodclosure25422);


// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable26736 = (Object)new_AST_Variable_named(L"aStream");
array21437 = (Object)new_Type_Array_with(1, (Object)localvariable26736);
// nextPutAll:
send184351 = (Object)new_AST_Send((Object)localvariable26736, (Object)symbol35953, 1, (Object)instancevariable6042);
string28231 = (Object)new_Type_String(L"printOn:");
string28232 = (Object)new_Type_String(L"printOn: aStream\n\taStream nextPutAll: symbol.");
smallint21093 = (Object)new_Type_SmallInt(-1);
smallint21094 = (Object)new_Type_SmallInt(-1);
info3863 = (Object)new_AST_Info((Type_String)string28232,(Type_String)string28231, (Type_SmallInt)smallint21093, (Type_SmallInt)smallint21094);
((AST_Send)send184351)->info = (AST_Info)info3863;
method25425 = (Object)new_AST_Method_with((Type_Array)array21437, (Type_Array)empty_Type_Array, 2, send184351, Self);
((AST_Method)method25425)->info = (AST_Info)info3863;
methodclosure25423 = (Object)new_Runtime_MethodClosure(method25425);
store_method((Type_Class)class4075, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25423);

// =
send184352 = (Object)new_AST_Send((Object)send184344, (Object)SMB__equal, 1, (Object)classreference4836);
((AST_Send)send184352)->info = (AST_Info)info3857;
// symbol
send184353 = (Object)new_AST_Send((Object)localvariable26734, (Object)symbol35706, 0);
((AST_Send)send184353)->info = (AST_Info)info3857;
// should
send184354 = (Object)new_AST_Send((Object)send184353, (Object)symbol35983, 0);
((AST_Send)send184354)->info = (AST_Info)info3857;
string28233 = (Object)new_Type_String(L"abc");
constant35776 = (Object)new_AST_Constant((Object)string28233);
// =
send184355 = (Object)new_AST_Send((Object)send184354, (Object)SMB__equal, 1, (Object)constant35776);
((AST_Send)send184355)->info = (AST_Info)info3857;
// position
send184356 = (Object)new_AST_Send((Object)localvariable26733, (Object)symbol35988, 0);
((AST_Send)send184356)->info = (AST_Info)info3857;
// should
send184357 = (Object)new_AST_Send((Object)send184356, (Object)symbol35983, 0);
((AST_Send)send184357)->info = (AST_Info)info3857;
smallint21095 = (Object)new_Type_SmallInt(4);
constant35777 = (Object)new_AST_Constant((Object)smallint21095);
// =
send184358 = (Object)new_AST_Send((Object)send184357, (Object)SMB__equal, 1, (Object)constant35777);
((AST_Send)send184358)->info = (AST_Info)info3857;
method25426 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21435, 7, assign22638, assign22639, assign22640, send184352, send184355, send184358, Self);
((AST_Method)method25426)->info = (AST_Info)info3857;
symbol35595 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure25424 = (Object)new_Runtime_MethodClosure(method25426);
store_method((Type_Class)class4034, (Type_Symbol)symbol35595, (Runtime_MethodClosure)methodclosure25424);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable26737 = (Object)new_AST_Variable_named(L"parser");
localvariable26738 = (Object)new_AST_Variable_named(L"string");
localvariable26739 = (Object)new_AST_Variable_named(L"result");
array21438 = (Object)new_Type_Array_with(3, (Object)localvariable26737, (Object)localvariable26738, (Object)localvariable26739);
symbol36011 = (Object)new_Type_Symbol_cached(L"array");
// array
send184359 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36011, 0);
string28234 = (Object)new_Type_String(L"testArray");
string28235 = (Object)new_Type_String(L"testArray\n\t| parser string result |\n\tparser := scparser array.\n\tstring := PEGStringScanner on: \'()\'.\n\tresult := parser match: string.\n\tresult class should = ASTArray.\n\tresult literals asArray should = Array new.\n\tstring := PEGStringScanner on: \'(1 a #a \'\'b\'\' (4)))\'.\n\tresult := parser match: string.\n\tresult class should = ASTArray.\n\tresult literals size should = 5.\n\tresult literals first class should = ASTNumber.\n\tresult literals first number should = \'1\'.\n\t(result literals at: 2) class should = ASTSymbol.\n\t(result literals at: 2) symbol should = \'a\'.\n\t(result literals at: 3) class should = ASTSymbol.\n\t(result literals at: 3) symbol should = \'a\'.\n\t(result literals at: 4) class should = ASTString.\n\t(result literals at: 4) string should = \'b\'.\n\t(result literals at: 5) class should = ASTArray");
smallint21096 = (Object)new_Type_SmallInt(-1);
smallint21097 = (Object)new_Type_SmallInt(-1);
info3864 = (Object)new_AST_Info((Type_String)string28235,(Type_String)string28234, (Type_SmallInt)smallint21096, (Type_SmallInt)smallint21097);
((AST_Send)send184359)->info = (AST_Info)info3864;
assign22642 = (Object)new_AST_Assign((Object)localvariable26737, (Object)send184359);
string28236 = (Object)new_Type_String(L"()");
constant35778 = (Object)new_AST_Constant((Object)string28236);
// on:
send184360 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35778);
((AST_Send)send184360)->info = (AST_Info)info3864;
assign22643 = (Object)new_AST_Assign((Object)localvariable26738, (Object)send184360);
// match:
send184361 = (Object)new_AST_Send((Object)localvariable26737, (Object)symbol35843, 1, (Object)localvariable26738);
((AST_Send)send184361)->info = (AST_Info)info3864;
assign22644 = (Object)new_AST_Assign((Object)localvariable26739, (Object)send184361);
// class
send184362 = (Object)new_AST_Send((Object)localvariable26739, (Object)SMB_class, 0);
((AST_Send)send184362)->info = (AST_Info)info3864;
// should
send184363 = (Object)new_AST_Send((Object)send184362, (Object)symbol35983, 0);
((AST_Send)send184363)->info = (AST_Info)info3864;
classreference4837 = (Object)new_Organization_ClassReference((Type_Class)class4070);

// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable26740 = (Object)new_AST_Variable_named(L"aCollection");
array21439 = (Object)new_Type_Array_with(1, (Object)localvariable26740);
assign22645 = (Object)new_AST_Assign((Object)instancevariable6033, (Object)localvariable26740);
method25427 = (Object)new_AST_Method_with((Type_Array)array21439, (Type_Array)empty_Type_Array, 2, assign22645, Self);
string28237 = (Object)new_Type_String(L"literals:");
string28238 = (Object)new_Type_String(L"literals: aCollection\n\tliterals := aCollection");
smallint21098 = (Object)new_Type_SmallInt(-1);
smallint21099 = (Object)new_Type_SmallInt(-1);
info3865 = (Object)new_AST_Info((Type_String)string28238,(Type_String)string28237, (Type_SmallInt)smallint21098, (Type_SmallInt)smallint21099);
((AST_Method)method25427)->info = (AST_Info)info3865;
symbol35684 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure25425 = (Object)new_Runtime_MethodClosure(method25427);
store_method((Type_Class)class4070, (Type_Symbol)symbol35684, (Runtime_MethodClosure)methodclosure25425);


// ASTArray>>literals
//literals
// 	^ literals
method25428 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6033);
string28239 = (Object)new_Type_String(L"literals");
string28240 = (Object)new_Type_String(L"literals\n\t^ literals");
smallint21100 = (Object)new_Type_SmallInt(-1);
smallint21101 = (Object)new_Type_SmallInt(-1);
info3866 = (Object)new_AST_Info((Type_String)string28240,(Type_String)string28239, (Type_SmallInt)smallint21100, (Type_SmallInt)smallint21101);
((AST_Method)method25428)->info = (AST_Info)info3866;
symbol35685 = (Object)new_Type_Symbol_cached(L"literals");
methodclosure25426 = (Object)new_Runtime_MethodClosure(method25428);
store_method((Type_Class)class4070, (Type_Symbol)symbol35685, (Runtime_MethodClosure)methodclosure25426);


// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
// literals
send184364 = (Object)new_AST_Send((Object)Self, (Object)symbol35685, 0);
string28241 = (Object)new_Type_String(L"isEmpty");
string28242 = (Object)new_Type_String(L"isEmpty\n\t^ self literals isEmpty");
smallint21102 = (Object)new_Type_SmallInt(-1);
smallint21103 = (Object)new_Type_SmallInt(-1);
info3867 = (Object)new_AST_Info((Type_String)string28242,(Type_String)string28241, (Type_SmallInt)smallint21102, (Type_SmallInt)smallint21103);
((AST_Send)send184364)->info = (AST_Info)info3867;
// isEmpty
send184365 = (Object)new_AST_Send((Object)send184364, (Object)symbol35634, 0);
((AST_Send)send184365)->info = (AST_Info)info3867;
method25429 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184365);
((AST_Method)method25429)->info = (AST_Info)info3867;
methodclosure25427 = (Object)new_Runtime_MethodClosure(method25429);
store_method((Type_Class)class4070, (Type_Symbol)symbol35634, (Runtime_MethodClosure)methodclosure25427);

// =
send184366 = (Object)new_AST_Send((Object)send184363, (Object)SMB__equal, 1, (Object)classreference4837);
((AST_Send)send184366)->info = (AST_Info)info3864;
// literals
send184367 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184367)->info = (AST_Info)info3864;
// asArray
send184368 = (Object)new_AST_Send((Object)send184367, (Object)SMB_asArray, 0);
((AST_Send)send184368)->info = (AST_Info)info3864;
// should
send184369 = (Object)new_AST_Send((Object)send184368, (Object)symbol35983, 0);
((AST_Send)send184369)->info = (AST_Info)info3864;
// new
send184370 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35612, 0);
((AST_Send)send184370)->info = (AST_Info)info3864;
// =
send184371 = (Object)new_AST_Send((Object)send184369, (Object)SMB__equal, 1, (Object)send184370);
((AST_Send)send184371)->info = (AST_Info)info3864;
string28243 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant35779 = (Object)new_AST_Constant((Object)string28243);
// on:
send184372 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35779);
((AST_Send)send184372)->info = (AST_Info)info3864;
assign22646 = (Object)new_AST_Assign((Object)localvariable26738, (Object)send184372);
// match:
send184373 = (Object)new_AST_Send((Object)localvariable26737, (Object)symbol35843, 1, (Object)localvariable26738);
((AST_Send)send184373)->info = (AST_Info)info3864;
assign22647 = (Object)new_AST_Assign((Object)localvariable26739, (Object)send184373);
// class
send184374 = (Object)new_AST_Send((Object)localvariable26739, (Object)SMB_class, 0);
((AST_Send)send184374)->info = (AST_Info)info3864;
// should
send184375 = (Object)new_AST_Send((Object)send184374, (Object)symbol35983, 0);
((AST_Send)send184375)->info = (AST_Info)info3864;
// =
send184376 = (Object)new_AST_Send((Object)send184375, (Object)SMB__equal, 1, (Object)classreference4837);
((AST_Send)send184376)->info = (AST_Info)info3864;
// literals
send184377 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184377)->info = (AST_Info)info3864;
// size
send184378 = (Object)new_AST_Send((Object)send184377, (Object)SMB_size, 0);
((AST_Send)send184378)->info = (AST_Info)info3864;
// should
send184379 = (Object)new_AST_Send((Object)send184378, (Object)symbol35983, 0);
((AST_Send)send184379)->info = (AST_Info)info3864;
smallint21104 = (Object)new_Type_SmallInt(5);
constant35780 = (Object)new_AST_Constant((Object)smallint21104);
// =
send184380 = (Object)new_AST_Send((Object)send184379, (Object)SMB__equal, 1, (Object)constant35780);
((AST_Send)send184380)->info = (AST_Info)info3864;
// literals
send184381 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184381)->info = (AST_Info)info3864;
// first
send184382 = (Object)new_AST_Send((Object)send184381, (Object)symbol35693, 0);
((AST_Send)send184382)->info = (AST_Info)info3864;
// class
send184383 = (Object)new_AST_Send((Object)send184382, (Object)SMB_class, 0);
((AST_Send)send184383)->info = (AST_Info)info3864;
// should
send184384 = (Object)new_AST_Send((Object)send184383, (Object)symbol35983, 0);
((AST_Send)send184384)->info = (AST_Info)info3864;
// =
send184385 = (Object)new_AST_Send((Object)send184384, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184385)->info = (AST_Info)info3864;
// literals
send184386 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184386)->info = (AST_Info)info3864;
// first
send184387 = (Object)new_AST_Send((Object)send184386, (Object)symbol35693, 0);
((AST_Send)send184387)->info = (AST_Info)info3864;
// number
send184388 = (Object)new_AST_Send((Object)send184387, (Object)symbol35701, 0);
((AST_Send)send184388)->info = (AST_Info)info3864;
// should
send184389 = (Object)new_AST_Send((Object)send184388, (Object)symbol35983, 0);
((AST_Send)send184389)->info = (AST_Info)info3864;
string28244 = (Object)new_Type_String(L"1");
constant35781 = (Object)new_AST_Constant((Object)string28244);
// =
send184390 = (Object)new_AST_Send((Object)send184389, (Object)SMB__equal, 1, (Object)constant35781);
((AST_Send)send184390)->info = (AST_Info)info3864;
// literals
send184391 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184391)->info = (AST_Info)info3864;
smallint21105 = (Object)new_Type_SmallInt(2);
constant35782 = (Object)new_AST_Constant((Object)smallint21105);
// at:
send184392 = (Object)new_AST_Send((Object)send184391, (Object)SMB_at_, 1, (Object)constant35782);
((AST_Send)send184392)->info = (AST_Info)info3864;
// class
send184393 = (Object)new_AST_Send((Object)send184392, (Object)SMB_class, 0);
((AST_Send)send184393)->info = (AST_Info)info3864;
// should
send184394 = (Object)new_AST_Send((Object)send184393, (Object)symbol35983, 0);
((AST_Send)send184394)->info = (AST_Info)info3864;
// =
send184395 = (Object)new_AST_Send((Object)send184394, (Object)SMB__equal, 1, (Object)classreference4836);
((AST_Send)send184395)->info = (AST_Info)info3864;
// literals
send184396 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184396)->info = (AST_Info)info3864;
smallint21106 = (Object)new_Type_SmallInt(2);
constant35783 = (Object)new_AST_Constant((Object)smallint21106);
// at:
send184397 = (Object)new_AST_Send((Object)send184396, (Object)SMB_at_, 1, (Object)constant35783);
((AST_Send)send184397)->info = (AST_Info)info3864;
// symbol
send184398 = (Object)new_AST_Send((Object)send184397, (Object)symbol35706, 0);
((AST_Send)send184398)->info = (AST_Info)info3864;
// should
send184399 = (Object)new_AST_Send((Object)send184398, (Object)symbol35983, 0);
((AST_Send)send184399)->info = (AST_Info)info3864;
string28245 = (Object)new_Type_String(L"a");
constant35784 = (Object)new_AST_Constant((Object)string28245);
// =
send184400 = (Object)new_AST_Send((Object)send184399, (Object)SMB__equal, 1, (Object)constant35784);
((AST_Send)send184400)->info = (AST_Info)info3864;
// literals
send184401 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184401)->info = (AST_Info)info3864;
smallint21107 = (Object)new_Type_SmallInt(3);
constant35785 = (Object)new_AST_Constant((Object)smallint21107);
// at:
send184402 = (Object)new_AST_Send((Object)send184401, (Object)SMB_at_, 1, (Object)constant35785);
((AST_Send)send184402)->info = (AST_Info)info3864;
// class
send184403 = (Object)new_AST_Send((Object)send184402, (Object)SMB_class, 0);
((AST_Send)send184403)->info = (AST_Info)info3864;
// should
send184404 = (Object)new_AST_Send((Object)send184403, (Object)symbol35983, 0);
((AST_Send)send184404)->info = (AST_Info)info3864;
// =
send184405 = (Object)new_AST_Send((Object)send184404, (Object)SMB__equal, 1, (Object)classreference4836);
((AST_Send)send184405)->info = (AST_Info)info3864;
// literals
send184406 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184406)->info = (AST_Info)info3864;
smallint21108 = (Object)new_Type_SmallInt(3);
constant35786 = (Object)new_AST_Constant((Object)smallint21108);
// at:
send184407 = (Object)new_AST_Send((Object)send184406, (Object)SMB_at_, 1, (Object)constant35786);
((AST_Send)send184407)->info = (AST_Info)info3864;
// symbol
send184408 = (Object)new_AST_Send((Object)send184407, (Object)symbol35706, 0);
((AST_Send)send184408)->info = (AST_Info)info3864;
// should
send184409 = (Object)new_AST_Send((Object)send184408, (Object)symbol35983, 0);
((AST_Send)send184409)->info = (AST_Info)info3864;
string28246 = (Object)new_Type_String(L"a");
constant35787 = (Object)new_AST_Constant((Object)string28246);
// =
send184410 = (Object)new_AST_Send((Object)send184409, (Object)SMB__equal, 1, (Object)constant35787);
((AST_Send)send184410)->info = (AST_Info)info3864;
// literals
send184411 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184411)->info = (AST_Info)info3864;
smallint21109 = (Object)new_Type_SmallInt(4);
constant35788 = (Object)new_AST_Constant((Object)smallint21109);
// at:
send184412 = (Object)new_AST_Send((Object)send184411, (Object)SMB_at_, 1, (Object)constant35788);
((AST_Send)send184412)->info = (AST_Info)info3864;
// class
send184413 = (Object)new_AST_Send((Object)send184412, (Object)SMB_class, 0);
((AST_Send)send184413)->info = (AST_Info)info3864;
// should
send184414 = (Object)new_AST_Send((Object)send184413, (Object)symbol35983, 0);
((AST_Send)send184414)->info = (AST_Info)info3864;
classreference4838 = (Object)new_Organization_ClassReference((Type_Class)class4078);

// ASTString>>string
//string
// 	^ string
method25430 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6046);
string28247 = (Object)new_Type_String(L"string");
string28248 = (Object)new_Type_String(L"string\n\t^ string");
smallint21110 = (Object)new_Type_SmallInt(-1);
smallint21111 = (Object)new_Type_SmallInt(-1);
info3868 = (Object)new_AST_Info((Type_String)string28248,(Type_String)string28247, (Type_SmallInt)smallint21110, (Type_SmallInt)smallint21111);
((AST_Method)method25430)->info = (AST_Info)info3868;
symbol35710 = (Object)new_Type_Symbol_cached(L"string");
methodclosure25428 = (Object)new_Runtime_MethodClosure(method25430);
store_method((Type_Class)class4078, (Type_Symbol)symbol35710, (Runtime_MethodClosure)methodclosure25428);


// ASTString>>asPString
//asPString 
// 	^PString new string: self string
// new
send184415 = (Object)new_AST_Send((Object)classreference4801, (Object)symbol35612, 0);
string28249 = (Object)new_Type_String(L"asPString");
string28250 = (Object)new_Type_String(L"asPString \n\t^PString new string: self string");
smallint21112 = (Object)new_Type_SmallInt(-1);
smallint21113 = (Object)new_Type_SmallInt(-1);
info3869 = (Object)new_AST_Info((Type_String)string28250,(Type_String)string28249, (Type_SmallInt)smallint21112, (Type_SmallInt)smallint21113);
((AST_Send)send184415)->info = (AST_Info)info3869;
symbol35709 = (Object)new_Type_Symbol_cached(L"string:");
// string
send184416 = (Object)new_AST_Send((Object)Self, (Object)symbol35710, 0);
((AST_Send)send184416)->info = (AST_Info)info3869;
// string:
send184417 = (Object)new_AST_Send((Object)send184415, (Object)symbol35709, 1, (Object)send184416);
((AST_Send)send184417)->info = (AST_Info)info3869;
method25431 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send184417);
((AST_Method)method25431)->info = (AST_Info)info3869;
symbol35711 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure25429 = (Object)new_Runtime_MethodClosure(method25431);
store_method((Type_Class)class4078, (Type_Symbol)symbol35711, (Runtime_MethodClosure)methodclosure25429);


// ASTString>>string:
//string: aString
// 	string := aString
localvariable26741 = (Object)new_AST_Variable_named(L"aString");
array21440 = (Object)new_Type_Array_with(1, (Object)localvariable26741);
assign22648 = (Object)new_AST_Assign((Object)instancevariable6046, (Object)localvariable26741);
method25432 = (Object)new_AST_Method_with((Type_Array)array21440, (Type_Array)empty_Type_Array, 2, assign22648, Self);
string28251 = (Object)new_Type_String(L"string:");
string28252 = (Object)new_Type_String(L"string: aString\n\tstring := aString");
smallint21114 = (Object)new_Type_SmallInt(-1);
smallint21115 = (Object)new_Type_SmallInt(-1);
info3870 = (Object)new_AST_Info((Type_String)string28252,(Type_String)string28251, (Type_SmallInt)smallint21114, (Type_SmallInt)smallint21115);
((AST_Method)method25432)->info = (AST_Info)info3870;
methodclosure25430 = (Object)new_Runtime_MethodClosure(method25432);
store_method((Type_Class)class4078, (Type_Symbol)symbol35709, (Runtime_MethodClosure)methodclosure25430);

// =
send184418 = (Object)new_AST_Send((Object)send184414, (Object)SMB__equal, 1, (Object)classreference4838);
((AST_Send)send184418)->info = (AST_Info)info3864;
// literals
send184419 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184419)->info = (AST_Info)info3864;
smallint21116 = (Object)new_Type_SmallInt(4);
constant35789 = (Object)new_AST_Constant((Object)smallint21116);
// at:
send184420 = (Object)new_AST_Send((Object)send184419, (Object)SMB_at_, 1, (Object)constant35789);
((AST_Send)send184420)->info = (AST_Info)info3864;
// string
send184421 = (Object)new_AST_Send((Object)send184420, (Object)symbol35710, 0);
((AST_Send)send184421)->info = (AST_Info)info3864;
// should
send184422 = (Object)new_AST_Send((Object)send184421, (Object)symbol35983, 0);
((AST_Send)send184422)->info = (AST_Info)info3864;
string28253 = (Object)new_Type_String(L"b");
constant35790 = (Object)new_AST_Constant((Object)string28253);
// =
send184423 = (Object)new_AST_Send((Object)send184422, (Object)SMB__equal, 1, (Object)constant35790);
((AST_Send)send184423)->info = (AST_Info)info3864;
// literals
send184424 = (Object)new_AST_Send((Object)localvariable26739, (Object)symbol35685, 0);
((AST_Send)send184424)->info = (AST_Info)info3864;
smallint21117 = (Object)new_Type_SmallInt(5);
constant35791 = (Object)new_AST_Constant((Object)smallint21117);
// at:
send184425 = (Object)new_AST_Send((Object)send184424, (Object)SMB_at_, 1, (Object)constant35791);
((AST_Send)send184425)->info = (AST_Info)info3864;
// class
send184426 = (Object)new_AST_Send((Object)send184425, (Object)SMB_class, 0);
((AST_Send)send184426)->info = (AST_Info)info3864;
// should
send184427 = (Object)new_AST_Send((Object)send184426, (Object)symbol35983, 0);
((AST_Send)send184427)->info = (AST_Info)info3864;
// =
send184428 = (Object)new_AST_Send((Object)send184427, (Object)SMB__equal, 1, (Object)classreference4837);
((AST_Send)send184428)->info = (AST_Info)info3864;
method25433 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21438, 19, assign22642, assign22643, assign22644, send184366, send184371, assign22646, assign22647, send184376, send184380, send184385, send184390, send184395, send184400, send184405, send184410, send184418, send184423, send184428, Self);
((AST_Method)method25433)->info = (AST_Info)info3864;
symbol35532 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure25431 = (Object)new_Runtime_MethodClosure(method25433);
store_method((Type_Class)class4034, (Type_Symbol)symbol35532, (Runtime_MethodClosure)methodclosure25431);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable26742 = (Object)new_AST_Variable_named(L"parser");
localvariable26743 = (Object)new_AST_Variable_named(L"string");
array21441 = (Object)new_Type_Array_with(2, (Object)localvariable26742, (Object)localvariable26743);
symbol36012 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send184429 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36012, 0);
string28254 = (Object)new_Type_String(L"testCapitalIdentifier");
string28255 = (Object)new_Type_String(L"testCapitalIdentifier\n\t| parser string |\n\tparser := scparser capitalIdentifier.\n\tstring := PEGStringScanner on: \'Abcd \'.\n\t(parser match: string) should = \'Abcd\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'AbCd145 \'.\n\t(parser match: string) should = \'AbCd145\'.\n\tstring position should = 7.\n\tstring := PEGStringScanner on: \'abcdD\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");
smallint21118 = (Object)new_Type_SmallInt(-1);
smallint21119 = (Object)new_Type_SmallInt(-1);
info3871 = (Object)new_AST_Info((Type_String)string28255,(Type_String)string28254, (Type_SmallInt)smallint21118, (Type_SmallInt)smallint21119);
((AST_Send)send184429)->info = (AST_Info)info3871;
assign22649 = (Object)new_AST_Assign((Object)localvariable26742, (Object)send184429);
string28256 = (Object)new_Type_String(L"Abcd ");
constant35792 = (Object)new_AST_Constant((Object)string28256);
// on:
send184430 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35792);
((AST_Send)send184430)->info = (AST_Info)info3871;
assign22650 = (Object)new_AST_Assign((Object)localvariable26743, (Object)send184430);
// match:
send184431 = (Object)new_AST_Send((Object)localvariable26742, (Object)symbol35843, 1, (Object)localvariable26743);
((AST_Send)send184431)->info = (AST_Info)info3871;
// should
send184432 = (Object)new_AST_Send((Object)send184431, (Object)symbol35983, 0);
((AST_Send)send184432)->info = (AST_Info)info3871;
string28257 = (Object)new_Type_String(L"Abcd");
constant35793 = (Object)new_AST_Constant((Object)string28257);
// =
send184433 = (Object)new_AST_Send((Object)send184432, (Object)SMB__equal, 1, (Object)constant35793);
((AST_Send)send184433)->info = (AST_Info)info3871;
// position
send184434 = (Object)new_AST_Send((Object)localvariable26743, (Object)symbol35988, 0);
((AST_Send)send184434)->info = (AST_Info)info3871;
// should
send184435 = (Object)new_AST_Send((Object)send184434, (Object)symbol35983, 0);
((AST_Send)send184435)->info = (AST_Info)info3871;
smallint21120 = (Object)new_Type_SmallInt(4);
constant35794 = (Object)new_AST_Constant((Object)smallint21120);
// =
send184436 = (Object)new_AST_Send((Object)send184435, (Object)SMB__equal, 1, (Object)constant35794);
((AST_Send)send184436)->info = (AST_Info)info3871;
string28258 = (Object)new_Type_String(L"AbCd145 ");
constant35795 = (Object)new_AST_Constant((Object)string28258);
// on:
send184437 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35795);
((AST_Send)send184437)->info = (AST_Info)info3871;
assign22651 = (Object)new_AST_Assign((Object)localvariable26743, (Object)send184437);
// match:
send184438 = (Object)new_AST_Send((Object)localvariable26742, (Object)symbol35843, 1, (Object)localvariable26743);
((AST_Send)send184438)->info = (AST_Info)info3871;
// should
send184439 = (Object)new_AST_Send((Object)send184438, (Object)symbol35983, 0);
((AST_Send)send184439)->info = (AST_Info)info3871;
string28259 = (Object)new_Type_String(L"AbCd145");
constant35796 = (Object)new_AST_Constant((Object)string28259);
// =
send184440 = (Object)new_AST_Send((Object)send184439, (Object)SMB__equal, 1, (Object)constant35796);
((AST_Send)send184440)->info = (AST_Info)info3871;
// position
send184441 = (Object)new_AST_Send((Object)localvariable26743, (Object)symbol35988, 0);
((AST_Send)send184441)->info = (AST_Info)info3871;
// should
send184442 = (Object)new_AST_Send((Object)send184441, (Object)symbol35983, 0);
((AST_Send)send184442)->info = (AST_Info)info3871;
smallint21121 = (Object)new_Type_SmallInt(7);
constant35797 = (Object)new_AST_Constant((Object)smallint21121);
// =
send184443 = (Object)new_AST_Send((Object)send184442, (Object)SMB__equal, 1, (Object)constant35797);
((AST_Send)send184443)->info = (AST_Info)info3871;
string28260 = (Object)new_Type_String(L"abcdD");
constant35798 = (Object)new_AST_Constant((Object)string28260);
// on:
send184444 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35798);
((AST_Send)send184444)->info = (AST_Info)info3871;
assign22652 = (Object)new_AST_Assign((Object)localvariable26743, (Object)send184444);
// match:
send184445 = (Object)new_AST_Send((Object)localvariable26742, (Object)symbol35843, 1, (Object)localvariable26743);
((AST_Send)send184445)->info = (AST_Info)info3871;
// should
send184446 = (Object)new_AST_Send((Object)send184445, (Object)symbol35983, 0);
((AST_Send)send184446)->info = (AST_Info)info3871;
// be
send184447 = (Object)new_AST_Send((Object)send184446, (Object)symbol35989, 0);
((AST_Send)send184447)->info = (AST_Info)info3871;
// isNil
send184448 = (Object)new_AST_Send((Object)send184447, (Object)SMB_isNil, 0);
((AST_Send)send184448)->info = (AST_Info)info3871;
// position
send184449 = (Object)new_AST_Send((Object)localvariable26743, (Object)symbol35988, 0);
((AST_Send)send184449)->info = (AST_Info)info3871;
// should
send184450 = (Object)new_AST_Send((Object)send184449, (Object)symbol35983, 0);
((AST_Send)send184450)->info = (AST_Info)info3871;
smallint21122 = (Object)new_Type_SmallInt(0);
constant35799 = (Object)new_AST_Constant((Object)smallint21122);
// =
send184451 = (Object)new_AST_Send((Object)send184450, (Object)SMB__equal, 1, (Object)constant35799);
((AST_Send)send184451)->info = (AST_Info)info3871;
method25434 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21441, 11, assign22649, assign22650, send184433, send184436, assign22651, send184440, send184443, assign22652, send184448, send184451, Self);
((AST_Method)method25434)->info = (AST_Info)info3871;
symbol35560 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure25432 = (Object)new_Runtime_MethodClosure(method25434);
store_method((Type_Class)class4034, (Type_Symbol)symbol35560, (Runtime_MethodClosure)methodclosure25432);


// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes ((abc + ghi) * c) "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable26744 = (Object)new_AST_Variable_named(L"parser");
localvariable26745 = (Object)new_AST_Variable_named(L"string");
localvariable26746 = (Object)new_AST_Variable_named(L"result");
array21442 = (Object)new_Type_Array_with(3, (Object)localvariable26744, (Object)localvariable26745, (Object)localvariable26746);
// binaryObjectDescription
send184452 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35992, 0);
string28261 = (Object)new_Type_String(L"testBinaryExpression");
string28262 = (Object)new_Type_String(L"testBinaryExpression\n\t| parser string result |\n\tparser := scparser binaryObjectDescription.\n\tstring := PEGStringScanner on: \'abc + ghi \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'+\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 9.\t\" becomes ((abc + ghi) * c) \"\n\tstring := PEGStringScanner on: \'abc + ghi * c \'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'*\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'c\'.\n\tresult := result receiver.\n\tresult class should = ASTBinaryExpression.\n\tresult selector printString should = \'+\'.\n\tresult receiver class should = ASTVariable.\n\tresult receiver name should = \'abc\'.\n\tresult argument class should = ASTVariable.\n\tresult argument name should = \'ghi\'.\n\tstring position should = 13");
smallint21123 = (Object)new_Type_SmallInt(-1);
smallint21124 = (Object)new_Type_SmallInt(-1);
info3872 = (Object)new_AST_Info((Type_String)string28262,(Type_String)string28261, (Type_SmallInt)smallint21123, (Type_SmallInt)smallint21124);
((AST_Send)send184452)->info = (AST_Info)info3872;
assign22653 = (Object)new_AST_Assign((Object)localvariable26744, (Object)send184452);
string28263 = (Object)new_Type_String(L"abc + ghi ");
constant35800 = (Object)new_AST_Constant((Object)string28263);
// on:
send184453 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35800);
((AST_Send)send184453)->info = (AST_Info)info3872;
assign22654 = (Object)new_AST_Assign((Object)localvariable26745, (Object)send184453);
// match:
send184454 = (Object)new_AST_Send((Object)localvariable26744, (Object)symbol35843, 1, (Object)localvariable26745);
((AST_Send)send184454)->info = (AST_Info)info3872;
assign22655 = (Object)new_AST_Assign((Object)localvariable26746, (Object)send184454);
// class
send184455 = (Object)new_AST_Send((Object)localvariable26746, (Object)SMB_class, 0);
((AST_Send)send184455)->info = (AST_Info)info3872;
// should
send184456 = (Object)new_AST_Send((Object)send184455, (Object)symbol35983, 0);
((AST_Send)send184456)->info = (AST_Info)info3872;
// =
send184457 = (Object)new_AST_Send((Object)send184456, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184457)->info = (AST_Info)info3872;
// selector
send184458 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35626, 0);
((AST_Send)send184458)->info = (AST_Info)info3872;
// printString
send184459 = (Object)new_AST_Send((Object)send184458, (Object)symbol35846, 0);
((AST_Send)send184459)->info = (AST_Info)info3872;
// should
send184460 = (Object)new_AST_Send((Object)send184459, (Object)symbol35983, 0);
((AST_Send)send184460)->info = (AST_Info)info3872;
string28264 = (Object)new_Type_String(L"+");
constant35801 = (Object)new_AST_Constant((Object)string28264);
// =
send184461 = (Object)new_AST_Send((Object)send184460, (Object)SMB__equal, 1, (Object)constant35801);
((AST_Send)send184461)->info = (AST_Info)info3872;
// receiver
send184462 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35728, 0);
((AST_Send)send184462)->info = (AST_Info)info3872;
// class
send184463 = (Object)new_AST_Send((Object)send184462, (Object)SMB_class, 0);
((AST_Send)send184463)->info = (AST_Info)info3872;
// should
send184464 = (Object)new_AST_Send((Object)send184463, (Object)symbol35983, 0);
((AST_Send)send184464)->info = (AST_Info)info3872;
// =
send184465 = (Object)new_AST_Send((Object)send184464, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184465)->info = (AST_Info)info3872;
// receiver
send184466 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35728, 0);
((AST_Send)send184466)->info = (AST_Info)info3872;
// name
send184467 = (Object)new_AST_Send((Object)send184466, (Object)SMB_name, 0);
((AST_Send)send184467)->info = (AST_Info)info3872;
// should
send184468 = (Object)new_AST_Send((Object)send184467, (Object)symbol35983, 0);
((AST_Send)send184468)->info = (AST_Info)info3872;
string28265 = (Object)new_Type_String(L"abc");
constant35802 = (Object)new_AST_Constant((Object)string28265);
// =
send184469 = (Object)new_AST_Send((Object)send184468, (Object)SMB__equal, 1, (Object)constant35802);
((AST_Send)send184469)->info = (AST_Info)info3872;
// argument
send184470 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35736, 0);
((AST_Send)send184470)->info = (AST_Info)info3872;
// class
send184471 = (Object)new_AST_Send((Object)send184470, (Object)SMB_class, 0);
((AST_Send)send184471)->info = (AST_Info)info3872;
// should
send184472 = (Object)new_AST_Send((Object)send184471, (Object)symbol35983, 0);
((AST_Send)send184472)->info = (AST_Info)info3872;
// =
send184473 = (Object)new_AST_Send((Object)send184472, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184473)->info = (AST_Info)info3872;
// argument
send184474 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35736, 0);
((AST_Send)send184474)->info = (AST_Info)info3872;
// name
send184475 = (Object)new_AST_Send((Object)send184474, (Object)SMB_name, 0);
((AST_Send)send184475)->info = (AST_Info)info3872;
// should
send184476 = (Object)new_AST_Send((Object)send184475, (Object)symbol35983, 0);
((AST_Send)send184476)->info = (AST_Info)info3872;
string28266 = (Object)new_Type_String(L"ghi");
constant35803 = (Object)new_AST_Constant((Object)string28266);
// =
send184477 = (Object)new_AST_Send((Object)send184476, (Object)SMB__equal, 1, (Object)constant35803);
((AST_Send)send184477)->info = (AST_Info)info3872;
// position
send184478 = (Object)new_AST_Send((Object)localvariable26745, (Object)symbol35988, 0);
((AST_Send)send184478)->info = (AST_Info)info3872;
// should
send184479 = (Object)new_AST_Send((Object)send184478, (Object)symbol35983, 0);
((AST_Send)send184479)->info = (AST_Info)info3872;
smallint21125 = (Object)new_Type_SmallInt(9);
constant35804 = (Object)new_AST_Constant((Object)smallint21125);
// =
send184480 = (Object)new_AST_Send((Object)send184479, (Object)SMB__equal, 1, (Object)constant35804);
((AST_Send)send184480)->info = (AST_Info)info3872;
string28267 = (Object)new_Type_String(L"abc + ghi * c ");
constant35805 = (Object)new_AST_Constant((Object)string28267);
// on:
send184481 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35805);
((AST_Send)send184481)->info = (AST_Info)info3872;
assign22656 = (Object)new_AST_Assign((Object)localvariable26745, (Object)send184481);
// match:
send184482 = (Object)new_AST_Send((Object)localvariable26744, (Object)symbol35843, 1, (Object)localvariable26745);
((AST_Send)send184482)->info = (AST_Info)info3872;
assign22657 = (Object)new_AST_Assign((Object)localvariable26746, (Object)send184482);
// class
send184483 = (Object)new_AST_Send((Object)localvariable26746, (Object)SMB_class, 0);
((AST_Send)send184483)->info = (AST_Info)info3872;
// should
send184484 = (Object)new_AST_Send((Object)send184483, (Object)symbol35983, 0);
((AST_Send)send184484)->info = (AST_Info)info3872;
// =
send184485 = (Object)new_AST_Send((Object)send184484, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184485)->info = (AST_Info)info3872;
// selector
send184486 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35626, 0);
((AST_Send)send184486)->info = (AST_Info)info3872;
// printString
send184487 = (Object)new_AST_Send((Object)send184486, (Object)symbol35846, 0);
((AST_Send)send184487)->info = (AST_Info)info3872;
// should
send184488 = (Object)new_AST_Send((Object)send184487, (Object)symbol35983, 0);
((AST_Send)send184488)->info = (AST_Info)info3872;
string28268 = (Object)new_Type_String(L"*");
constant35806 = (Object)new_AST_Constant((Object)string28268);
// =
send184489 = (Object)new_AST_Send((Object)send184488, (Object)SMB__equal, 1, (Object)constant35806);
((AST_Send)send184489)->info = (AST_Info)info3872;
// argument
send184490 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35736, 0);
((AST_Send)send184490)->info = (AST_Info)info3872;
// class
send184491 = (Object)new_AST_Send((Object)send184490, (Object)SMB_class, 0);
((AST_Send)send184491)->info = (AST_Info)info3872;
// should
send184492 = (Object)new_AST_Send((Object)send184491, (Object)symbol35983, 0);
((AST_Send)send184492)->info = (AST_Info)info3872;
// =
send184493 = (Object)new_AST_Send((Object)send184492, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184493)->info = (AST_Info)info3872;
// argument
send184494 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35736, 0);
((AST_Send)send184494)->info = (AST_Info)info3872;
// name
send184495 = (Object)new_AST_Send((Object)send184494, (Object)SMB_name, 0);
((AST_Send)send184495)->info = (AST_Info)info3872;
// should
send184496 = (Object)new_AST_Send((Object)send184495, (Object)symbol35983, 0);
((AST_Send)send184496)->info = (AST_Info)info3872;
string28269 = (Object)new_Type_String(L"c");
constant35807 = (Object)new_AST_Constant((Object)string28269);
// =
send184497 = (Object)new_AST_Send((Object)send184496, (Object)SMB__equal, 1, (Object)constant35807);
((AST_Send)send184497)->info = (AST_Info)info3872;
// receiver
send184498 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35728, 0);
((AST_Send)send184498)->info = (AST_Info)info3872;
assign22658 = (Object)new_AST_Assign((Object)localvariable26746, (Object)send184498);
// class
send184499 = (Object)new_AST_Send((Object)localvariable26746, (Object)SMB_class, 0);
((AST_Send)send184499)->info = (AST_Info)info3872;
// should
send184500 = (Object)new_AST_Send((Object)send184499, (Object)symbol35983, 0);
((AST_Send)send184500)->info = (AST_Info)info3872;
// =
send184501 = (Object)new_AST_Send((Object)send184500, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184501)->info = (AST_Info)info3872;
// selector
send184502 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35626, 0);
((AST_Send)send184502)->info = (AST_Info)info3872;
// printString
send184503 = (Object)new_AST_Send((Object)send184502, (Object)symbol35846, 0);
((AST_Send)send184503)->info = (AST_Info)info3872;
// should
send184504 = (Object)new_AST_Send((Object)send184503, (Object)symbol35983, 0);
((AST_Send)send184504)->info = (AST_Info)info3872;
string28270 = (Object)new_Type_String(L"+");
constant35808 = (Object)new_AST_Constant((Object)string28270);
// =
send184505 = (Object)new_AST_Send((Object)send184504, (Object)SMB__equal, 1, (Object)constant35808);
((AST_Send)send184505)->info = (AST_Info)info3872;
// receiver
send184506 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35728, 0);
((AST_Send)send184506)->info = (AST_Info)info3872;
// class
send184507 = (Object)new_AST_Send((Object)send184506, (Object)SMB_class, 0);
((AST_Send)send184507)->info = (AST_Info)info3872;
// should
send184508 = (Object)new_AST_Send((Object)send184507, (Object)symbol35983, 0);
((AST_Send)send184508)->info = (AST_Info)info3872;
// =
send184509 = (Object)new_AST_Send((Object)send184508, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184509)->info = (AST_Info)info3872;
// receiver
send184510 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35728, 0);
((AST_Send)send184510)->info = (AST_Info)info3872;
// name
send184511 = (Object)new_AST_Send((Object)send184510, (Object)SMB_name, 0);
((AST_Send)send184511)->info = (AST_Info)info3872;
// should
send184512 = (Object)new_AST_Send((Object)send184511, (Object)symbol35983, 0);
((AST_Send)send184512)->info = (AST_Info)info3872;
string28271 = (Object)new_Type_String(L"abc");
constant35809 = (Object)new_AST_Constant((Object)string28271);
// =
send184513 = (Object)new_AST_Send((Object)send184512, (Object)SMB__equal, 1, (Object)constant35809);
((AST_Send)send184513)->info = (AST_Info)info3872;
// argument
send184514 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35736, 0);
((AST_Send)send184514)->info = (AST_Info)info3872;
// class
send184515 = (Object)new_AST_Send((Object)send184514, (Object)SMB_class, 0);
((AST_Send)send184515)->info = (AST_Info)info3872;
// should
send184516 = (Object)new_AST_Send((Object)send184515, (Object)symbol35983, 0);
((AST_Send)send184516)->info = (AST_Info)info3872;
// =
send184517 = (Object)new_AST_Send((Object)send184516, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184517)->info = (AST_Info)info3872;
// argument
send184518 = (Object)new_AST_Send((Object)localvariable26746, (Object)symbol35736, 0);
((AST_Send)send184518)->info = (AST_Info)info3872;
// name
send184519 = (Object)new_AST_Send((Object)send184518, (Object)SMB_name, 0);
((AST_Send)send184519)->info = (AST_Info)info3872;
// should
send184520 = (Object)new_AST_Send((Object)send184519, (Object)symbol35983, 0);
((AST_Send)send184520)->info = (AST_Info)info3872;
string28272 = (Object)new_Type_String(L"ghi");
constant35810 = (Object)new_AST_Constant((Object)string28272);
// =
send184521 = (Object)new_AST_Send((Object)send184520, (Object)SMB__equal, 1, (Object)constant35810);
((AST_Send)send184521)->info = (AST_Info)info3872;
// position
send184522 = (Object)new_AST_Send((Object)localvariable26745, (Object)symbol35988, 0);
((AST_Send)send184522)->info = (AST_Info)info3872;
// should
send184523 = (Object)new_AST_Send((Object)send184522, (Object)symbol35983, 0);
((AST_Send)send184523)->info = (AST_Info)info3872;
smallint21126 = (Object)new_Type_SmallInt(13);
constant35811 = (Object)new_AST_Constant((Object)smallint21126);
// =
send184524 = (Object)new_AST_Send((Object)send184523, (Object)SMB__equal, 1, (Object)constant35811);
((AST_Send)send184524)->info = (AST_Info)info3872;
method25435 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21442, 25, assign22653, assign22654, assign22655, send184457, send184461, send184465, send184469, send184473, send184477, send184480, assign22656, assign22657, send184485, send184489, send184493, send184497, assign22658, send184501, send184505, send184509, send184513, send184517, send184521, send184524, Self);
((AST_Method)method25435)->info = (AST_Info)info3872;
symbol35552 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure25433 = (Object)new_Runtime_MethodClosure(method25435);
store_method((Type_Class)class4034, (Type_Symbol)symbol35552, (Runtime_MethodClosure)methodclosure25433);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable26747 = (Object)new_AST_Variable_named(L"parser");
localvariable26748 = (Object)new_AST_Variable_named(L"string");
array21443 = (Object)new_Type_Array_with(2, (Object)localvariable26747, (Object)localvariable26748);
symbol36013 = (Object)new_Type_Symbol_cached(L"character");
// character
send184525 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36013, 0);
string28273 = (Object)new_Type_String(L"testCharacter");
string28274 = (Object)new_Type_String(L"testCharacter\n\t| parser string |\n\tparser := scparser character.\n\tstring := PEGStringScanner on: \'--\'.\n\t(parser match: string) should = \'-\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'__\'.\n\t(parser match: string) should = \'_\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'4\'.\n\t(parser match: string) should = \'4\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'p\'.\n\t(parser match: string) should = \'p\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'&\'.\n\t(parser match: string) should = \'&\'.\n\tstring position should = 1.\n\tstring := PEGStringScanner on: \'\'\'\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");
smallint21127 = (Object)new_Type_SmallInt(-1);
smallint21128 = (Object)new_Type_SmallInt(-1);
info3873 = (Object)new_AST_Info((Type_String)string28274,(Type_String)string28273, (Type_SmallInt)smallint21127, (Type_SmallInt)smallint21128);
((AST_Send)send184525)->info = (AST_Info)info3873;
assign22659 = (Object)new_AST_Assign((Object)localvariable26747, (Object)send184525);
string28275 = (Object)new_Type_String(L"--");
constant35812 = (Object)new_AST_Constant((Object)string28275);
// on:
send184526 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35812);
((AST_Send)send184526)->info = (AST_Info)info3873;
assign22660 = (Object)new_AST_Assign((Object)localvariable26748, (Object)send184526);
// match:
send184527 = (Object)new_AST_Send((Object)localvariable26747, (Object)symbol35843, 1, (Object)localvariable26748);
((AST_Send)send184527)->info = (AST_Info)info3873;
// should
send184528 = (Object)new_AST_Send((Object)send184527, (Object)symbol35983, 0);
((AST_Send)send184528)->info = (AST_Info)info3873;
string28276 = (Object)new_Type_String(L"-");
constant35813 = (Object)new_AST_Constant((Object)string28276);
// =
send184529 = (Object)new_AST_Send((Object)send184528, (Object)SMB__equal, 1, (Object)constant35813);
((AST_Send)send184529)->info = (AST_Info)info3873;
// position
send184530 = (Object)new_AST_Send((Object)localvariable26748, (Object)symbol35988, 0);
((AST_Send)send184530)->info = (AST_Info)info3873;
// should
send184531 = (Object)new_AST_Send((Object)send184530, (Object)symbol35983, 0);
((AST_Send)send184531)->info = (AST_Info)info3873;
smallint21129 = (Object)new_Type_SmallInt(1);
constant35814 = (Object)new_AST_Constant((Object)smallint21129);
// =
send184532 = (Object)new_AST_Send((Object)send184531, (Object)SMB__equal, 1, (Object)constant35814);
((AST_Send)send184532)->info = (AST_Info)info3873;
string28277 = (Object)new_Type_String(L"__");
constant35815 = (Object)new_AST_Constant((Object)string28277);
// on:
send184533 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35815);
((AST_Send)send184533)->info = (AST_Info)info3873;
assign22661 = (Object)new_AST_Assign((Object)localvariable26748, (Object)send184533);
// match:
send184534 = (Object)new_AST_Send((Object)localvariable26747, (Object)symbol35843, 1, (Object)localvariable26748);
((AST_Send)send184534)->info = (AST_Info)info3873;
// should
send184535 = (Object)new_AST_Send((Object)send184534, (Object)symbol35983, 0);
((AST_Send)send184535)->info = (AST_Info)info3873;
string28278 = (Object)new_Type_String(L"_");
constant35816 = (Object)new_AST_Constant((Object)string28278);
// =
send184536 = (Object)new_AST_Send((Object)send184535, (Object)SMB__equal, 1, (Object)constant35816);
((AST_Send)send184536)->info = (AST_Info)info3873;
// position
send184537 = (Object)new_AST_Send((Object)localvariable26748, (Object)symbol35988, 0);
((AST_Send)send184537)->info = (AST_Info)info3873;
// should
send184538 = (Object)new_AST_Send((Object)send184537, (Object)symbol35983, 0);
((AST_Send)send184538)->info = (AST_Info)info3873;
smallint21130 = (Object)new_Type_SmallInt(1);
constant35817 = (Object)new_AST_Constant((Object)smallint21130);
// =
send184539 = (Object)new_AST_Send((Object)send184538, (Object)SMB__equal, 1, (Object)constant35817);
((AST_Send)send184539)->info = (AST_Info)info3873;
string28279 = (Object)new_Type_String(L"4");
constant35818 = (Object)new_AST_Constant((Object)string28279);
// on:
send184540 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35818);
((AST_Send)send184540)->info = (AST_Info)info3873;
assign22662 = (Object)new_AST_Assign((Object)localvariable26748, (Object)send184540);
// match:
send184541 = (Object)new_AST_Send((Object)localvariable26747, (Object)symbol35843, 1, (Object)localvariable26748);
((AST_Send)send184541)->info = (AST_Info)info3873;
// should
send184542 = (Object)new_AST_Send((Object)send184541, (Object)symbol35983, 0);
((AST_Send)send184542)->info = (AST_Info)info3873;
string28280 = (Object)new_Type_String(L"4");
constant35819 = (Object)new_AST_Constant((Object)string28280);
// =
send184543 = (Object)new_AST_Send((Object)send184542, (Object)SMB__equal, 1, (Object)constant35819);
((AST_Send)send184543)->info = (AST_Info)info3873;
// position
send184544 = (Object)new_AST_Send((Object)localvariable26748, (Object)symbol35988, 0);
((AST_Send)send184544)->info = (AST_Info)info3873;
// should
send184545 = (Object)new_AST_Send((Object)send184544, (Object)symbol35983, 0);
((AST_Send)send184545)->info = (AST_Info)info3873;
smallint21131 = (Object)new_Type_SmallInt(1);
constant35820 = (Object)new_AST_Constant((Object)smallint21131);
// =
send184546 = (Object)new_AST_Send((Object)send184545, (Object)SMB__equal, 1, (Object)constant35820);
((AST_Send)send184546)->info = (AST_Info)info3873;
string28281 = (Object)new_Type_String(L"p");
constant35821 = (Object)new_AST_Constant((Object)string28281);
// on:
send184547 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35821);
((AST_Send)send184547)->info = (AST_Info)info3873;
assign22663 = (Object)new_AST_Assign((Object)localvariable26748, (Object)send184547);
// match:
send184548 = (Object)new_AST_Send((Object)localvariable26747, (Object)symbol35843, 1, (Object)localvariable26748);
((AST_Send)send184548)->info = (AST_Info)info3873;
// should
send184549 = (Object)new_AST_Send((Object)send184548, (Object)symbol35983, 0);
((AST_Send)send184549)->info = (AST_Info)info3873;
string28282 = (Object)new_Type_String(L"p");
constant35822 = (Object)new_AST_Constant((Object)string28282);
// =
send184550 = (Object)new_AST_Send((Object)send184549, (Object)SMB__equal, 1, (Object)constant35822);
((AST_Send)send184550)->info = (AST_Info)info3873;
// position
send184551 = (Object)new_AST_Send((Object)localvariable26748, (Object)symbol35988, 0);
((AST_Send)send184551)->info = (AST_Info)info3873;
// should
send184552 = (Object)new_AST_Send((Object)send184551, (Object)symbol35983, 0);
((AST_Send)send184552)->info = (AST_Info)info3873;
smallint21132 = (Object)new_Type_SmallInt(1);
constant35823 = (Object)new_AST_Constant((Object)smallint21132);
// =
send184553 = (Object)new_AST_Send((Object)send184552, (Object)SMB__equal, 1, (Object)constant35823);
((AST_Send)send184553)->info = (AST_Info)info3873;
string28283 = (Object)new_Type_String(L"&");
constant35824 = (Object)new_AST_Constant((Object)string28283);
// on:
send184554 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35824);
((AST_Send)send184554)->info = (AST_Info)info3873;
assign22664 = (Object)new_AST_Assign((Object)localvariable26748, (Object)send184554);
// match:
send184555 = (Object)new_AST_Send((Object)localvariable26747, (Object)symbol35843, 1, (Object)localvariable26748);
((AST_Send)send184555)->info = (AST_Info)info3873;
// should
send184556 = (Object)new_AST_Send((Object)send184555, (Object)symbol35983, 0);
((AST_Send)send184556)->info = (AST_Info)info3873;
string28284 = (Object)new_Type_String(L"&");
constant35825 = (Object)new_AST_Constant((Object)string28284);
// =
send184557 = (Object)new_AST_Send((Object)send184556, (Object)SMB__equal, 1, (Object)constant35825);
((AST_Send)send184557)->info = (AST_Info)info3873;
// position
send184558 = (Object)new_AST_Send((Object)localvariable26748, (Object)symbol35988, 0);
((AST_Send)send184558)->info = (AST_Info)info3873;
// should
send184559 = (Object)new_AST_Send((Object)send184558, (Object)symbol35983, 0);
((AST_Send)send184559)->info = (AST_Info)info3873;
smallint21133 = (Object)new_Type_SmallInt(1);
constant35826 = (Object)new_AST_Constant((Object)smallint21133);
// =
send184560 = (Object)new_AST_Send((Object)send184559, (Object)SMB__equal, 1, (Object)constant35826);
((AST_Send)send184560)->info = (AST_Info)info3873;
string28285 = (Object)new_Type_String(L"\'");
constant35827 = (Object)new_AST_Constant((Object)string28285);
// on:
send184561 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35827);
((AST_Send)send184561)->info = (AST_Info)info3873;
assign22665 = (Object)new_AST_Assign((Object)localvariable26748, (Object)send184561);
// match:
send184562 = (Object)new_AST_Send((Object)localvariable26747, (Object)symbol35843, 1, (Object)localvariable26748);
((AST_Send)send184562)->info = (AST_Info)info3873;
// should
send184563 = (Object)new_AST_Send((Object)send184562, (Object)symbol35983, 0);
((AST_Send)send184563)->info = (AST_Info)info3873;
// be
send184564 = (Object)new_AST_Send((Object)send184563, (Object)symbol35989, 0);
((AST_Send)send184564)->info = (AST_Info)info3873;
// isNil
send184565 = (Object)new_AST_Send((Object)send184564, (Object)SMB_isNil, 0);
((AST_Send)send184565)->info = (AST_Info)info3873;
// position
send184566 = (Object)new_AST_Send((Object)localvariable26748, (Object)symbol35988, 0);
((AST_Send)send184566)->info = (AST_Info)info3873;
// should
send184567 = (Object)new_AST_Send((Object)send184566, (Object)symbol35983, 0);
((AST_Send)send184567)->info = (AST_Info)info3873;
smallint21134 = (Object)new_Type_SmallInt(0);
constant35828 = (Object)new_AST_Constant((Object)smallint21134);
// =
send184568 = (Object)new_AST_Send((Object)send184567, (Object)SMB__equal, 1, (Object)constant35828);
((AST_Send)send184568)->info = (AST_Info)info3873;
method25436 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21443, 20, assign22659, assign22660, send184529, send184532, assign22661, send184536, send184539, assign22662, send184543, send184546, assign22663, send184550, send184553, assign22664, send184557, send184560, assign22665, send184565, send184568, Self);
((AST_Method)method25436)->info = (AST_Info)info3873;
symbol35580 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure25434 = (Object)new_Runtime_MethodClosure(method25436);
store_method((Type_Class)class4034, (Type_Symbol)symbol35580, (Runtime_MethodClosure)methodclosure25434);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable26749 = (Object)new_AST_Variable_named(L"parser");
localvariable26750 = (Object)new_AST_Variable_named(L"string");
array21444 = (Object)new_Type_Array_with(2, (Object)localvariable26749, (Object)localvariable26750);
symbol36014 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send184569 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36014, 0);
string28286 = (Object)new_Type_String(L"testIdentifier");
string28287 = (Object)new_Type_String(L"testIdentifier\n\t| parser string |\n\tparser := scparser identifier.\n\tstring := PEGStringScanner on: \'abcd \'.\n\t(parser match: string) should = \'abcd\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'AbCd145 \'.\n\t(parser match: string) should = \'AbCd145\'.\n\tstring position should = 7.\n\tstring := PEGStringScanner on: \'1a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");
smallint21135 = (Object)new_Type_SmallInt(-1);
smallint21136 = (Object)new_Type_SmallInt(-1);
info3874 = (Object)new_AST_Info((Type_String)string28287,(Type_String)string28286, (Type_SmallInt)smallint21135, (Type_SmallInt)smallint21136);
((AST_Send)send184569)->info = (AST_Info)info3874;
assign22666 = (Object)new_AST_Assign((Object)localvariable26749, (Object)send184569);
string28288 = (Object)new_Type_String(L"abcd ");
constant35829 = (Object)new_AST_Constant((Object)string28288);
// on:
send184570 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35829);
((AST_Send)send184570)->info = (AST_Info)info3874;
assign22667 = (Object)new_AST_Assign((Object)localvariable26750, (Object)send184570);
// match:
send184571 = (Object)new_AST_Send((Object)localvariable26749, (Object)symbol35843, 1, (Object)localvariable26750);
((AST_Send)send184571)->info = (AST_Info)info3874;
// should
send184572 = (Object)new_AST_Send((Object)send184571, (Object)symbol35983, 0);
((AST_Send)send184572)->info = (AST_Info)info3874;
string28289 = (Object)new_Type_String(L"abcd");
constant35830 = (Object)new_AST_Constant((Object)string28289);
// =
send184573 = (Object)new_AST_Send((Object)send184572, (Object)SMB__equal, 1, (Object)constant35830);
((AST_Send)send184573)->info = (AST_Info)info3874;
// position
send184574 = (Object)new_AST_Send((Object)localvariable26750, (Object)symbol35988, 0);
((AST_Send)send184574)->info = (AST_Info)info3874;
// should
send184575 = (Object)new_AST_Send((Object)send184574, (Object)symbol35983, 0);
((AST_Send)send184575)->info = (AST_Info)info3874;
smallint21137 = (Object)new_Type_SmallInt(4);
constant35831 = (Object)new_AST_Constant((Object)smallint21137);
// =
send184576 = (Object)new_AST_Send((Object)send184575, (Object)SMB__equal, 1, (Object)constant35831);
((AST_Send)send184576)->info = (AST_Info)info3874;
string28290 = (Object)new_Type_String(L"AbCd145 ");
constant35832 = (Object)new_AST_Constant((Object)string28290);
// on:
send184577 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35832);
((AST_Send)send184577)->info = (AST_Info)info3874;
assign22668 = (Object)new_AST_Assign((Object)localvariable26750, (Object)send184577);
// match:
send184578 = (Object)new_AST_Send((Object)localvariable26749, (Object)symbol35843, 1, (Object)localvariable26750);
((AST_Send)send184578)->info = (AST_Info)info3874;
// should
send184579 = (Object)new_AST_Send((Object)send184578, (Object)symbol35983, 0);
((AST_Send)send184579)->info = (AST_Info)info3874;
string28291 = (Object)new_Type_String(L"AbCd145");
constant35833 = (Object)new_AST_Constant((Object)string28291);
// =
send184580 = (Object)new_AST_Send((Object)send184579, (Object)SMB__equal, 1, (Object)constant35833);
((AST_Send)send184580)->info = (AST_Info)info3874;
// position
send184581 = (Object)new_AST_Send((Object)localvariable26750, (Object)symbol35988, 0);
((AST_Send)send184581)->info = (AST_Info)info3874;
// should
send184582 = (Object)new_AST_Send((Object)send184581, (Object)symbol35983, 0);
((AST_Send)send184582)->info = (AST_Info)info3874;
smallint21138 = (Object)new_Type_SmallInt(7);
constant35834 = (Object)new_AST_Constant((Object)smallint21138);
// =
send184583 = (Object)new_AST_Send((Object)send184582, (Object)SMB__equal, 1, (Object)constant35834);
((AST_Send)send184583)->info = (AST_Info)info3874;
string28292 = (Object)new_Type_String(L"1a");
constant35835 = (Object)new_AST_Constant((Object)string28292);
// on:
send184584 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35835);
((AST_Send)send184584)->info = (AST_Info)info3874;
assign22669 = (Object)new_AST_Assign((Object)localvariable26750, (Object)send184584);
// match:
send184585 = (Object)new_AST_Send((Object)localvariable26749, (Object)symbol35843, 1, (Object)localvariable26750);
((AST_Send)send184585)->info = (AST_Info)info3874;
// should
send184586 = (Object)new_AST_Send((Object)send184585, (Object)symbol35983, 0);
((AST_Send)send184586)->info = (AST_Info)info3874;
// be
send184587 = (Object)new_AST_Send((Object)send184586, (Object)symbol35989, 0);
((AST_Send)send184587)->info = (AST_Info)info3874;
// isNil
send184588 = (Object)new_AST_Send((Object)send184587, (Object)SMB_isNil, 0);
((AST_Send)send184588)->info = (AST_Info)info3874;
// position
send184589 = (Object)new_AST_Send((Object)localvariable26750, (Object)symbol35988, 0);
((AST_Send)send184589)->info = (AST_Info)info3874;
// should
send184590 = (Object)new_AST_Send((Object)send184589, (Object)symbol35983, 0);
((AST_Send)send184590)->info = (AST_Info)info3874;
smallint21139 = (Object)new_Type_SmallInt(0);
constant35836 = (Object)new_AST_Constant((Object)smallint21139);
// =
send184591 = (Object)new_AST_Send((Object)send184590, (Object)SMB__equal, 1, (Object)constant35836);
((AST_Send)send184591)->info = (AST_Info)info3874;
method25437 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21444, 11, assign22666, assign22667, send184573, send184576, assign22668, send184580, send184583, assign22669, send184588, send184591, Self);
((AST_Method)method25437)->info = (AST_Info)info3874;
symbol35549 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure25435 = (Object)new_Runtime_MethodClosure(method25437);
store_method((Type_Class)class4034, (Type_Symbol)symbol35549, (Runtime_MethodClosure)methodclosure25435);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable26751 = (Object)new_AST_Variable_named(L"parser");
localvariable26752 = (Object)new_AST_Variable_named(L"string");
array21445 = (Object)new_Type_Array_with(2, (Object)localvariable26751, (Object)localvariable26752);
// string
send184592 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35710, 0);
string28293 = (Object)new_Type_String(L"testString");
string28294 = (Object)new_Type_String(L"testString\n\t| parser string |\n\tparser := scparser string.\n\tstring := PEGStringScanner on: \'\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'.\n\t(parser match: string) should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'\'.\n\t(parser match: string) should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'d\'\'\'.\n\t(parser match: string) should = \'abc\'\'d\'.\n\tstring position should = 8");
smallint21140 = (Object)new_Type_SmallInt(-1);
smallint21141 = (Object)new_Type_SmallInt(-1);
info3875 = (Object)new_AST_Info((Type_String)string28294,(Type_String)string28293, (Type_SmallInt)smallint21140, (Type_SmallInt)smallint21141);
((AST_Send)send184592)->info = (AST_Info)info3875;
assign22670 = (Object)new_AST_Assign((Object)localvariable26751, (Object)send184592);
string28295 = (Object)new_Type_String(L"");
constant35837 = (Object)new_AST_Constant((Object)string28295);
// on:
send184593 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35837);
((AST_Send)send184593)->info = (AST_Info)info3875;
assign22671 = (Object)new_AST_Assign((Object)localvariable26752, (Object)send184593);
// match:
send184594 = (Object)new_AST_Send((Object)localvariable26751, (Object)symbol35843, 1, (Object)localvariable26752);
((AST_Send)send184594)->info = (AST_Info)info3875;
// should
send184595 = (Object)new_AST_Send((Object)send184594, (Object)symbol35983, 0);
((AST_Send)send184595)->info = (AST_Info)info3875;
// be
send184596 = (Object)new_AST_Send((Object)send184595, (Object)symbol35989, 0);
((AST_Send)send184596)->info = (AST_Info)info3875;
// isNil
send184597 = (Object)new_AST_Send((Object)send184596, (Object)SMB_isNil, 0);
((AST_Send)send184597)->info = (AST_Info)info3875;
// position
send184598 = (Object)new_AST_Send((Object)localvariable26752, (Object)symbol35988, 0);
((AST_Send)send184598)->info = (AST_Info)info3875;
// should
send184599 = (Object)new_AST_Send((Object)send184598, (Object)symbol35983, 0);
((AST_Send)send184599)->info = (AST_Info)info3875;
smallint21142 = (Object)new_Type_SmallInt(0);
constant35838 = (Object)new_AST_Constant((Object)smallint21142);
// =
send184600 = (Object)new_AST_Send((Object)send184599, (Object)SMB__equal, 1, (Object)constant35838);
((AST_Send)send184600)->info = (AST_Info)info3875;
string28296 = (Object)new_Type_String(L"\'abc\'");
constant35839 = (Object)new_AST_Constant((Object)string28296);
// on:
send184601 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35839);
((AST_Send)send184601)->info = (AST_Info)info3875;
assign22672 = (Object)new_AST_Assign((Object)localvariable26752, (Object)send184601);
// match:
send184602 = (Object)new_AST_Send((Object)localvariable26751, (Object)symbol35843, 1, (Object)localvariable26752);
((AST_Send)send184602)->info = (AST_Info)info3875;
// should
send184603 = (Object)new_AST_Send((Object)send184602, (Object)symbol35983, 0);
((AST_Send)send184603)->info = (AST_Info)info3875;
string28297 = (Object)new_Type_String(L"abc");
constant35840 = (Object)new_AST_Constant((Object)string28297);
// =
send184604 = (Object)new_AST_Send((Object)send184603, (Object)SMB__equal, 1, (Object)constant35840);
((AST_Send)send184604)->info = (AST_Info)info3875;
// position
send184605 = (Object)new_AST_Send((Object)localvariable26752, (Object)symbol35988, 0);
((AST_Send)send184605)->info = (AST_Info)info3875;
// should
send184606 = (Object)new_AST_Send((Object)send184605, (Object)symbol35983, 0);
((AST_Send)send184606)->info = (AST_Info)info3875;
smallint21143 = (Object)new_Type_SmallInt(5);
constant35841 = (Object)new_AST_Constant((Object)smallint21143);
// =
send184607 = (Object)new_AST_Send((Object)send184606, (Object)SMB__equal, 1, (Object)constant35841);
((AST_Send)send184607)->info = (AST_Info)info3875;
string28298 = (Object)new_Type_String(L"\'abc\'\'");
constant35842 = (Object)new_AST_Constant((Object)string28298);
// on:
send184608 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35842);
((AST_Send)send184608)->info = (AST_Info)info3875;
assign22673 = (Object)new_AST_Assign((Object)localvariable26752, (Object)send184608);
// match:
send184609 = (Object)new_AST_Send((Object)localvariable26751, (Object)symbol35843, 1, (Object)localvariable26752);
((AST_Send)send184609)->info = (AST_Info)info3875;
// should
send184610 = (Object)new_AST_Send((Object)send184609, (Object)symbol35983, 0);
((AST_Send)send184610)->info = (AST_Info)info3875;
string28299 = (Object)new_Type_String(L"abc");
constant35843 = (Object)new_AST_Constant((Object)string28299);
// =
send184611 = (Object)new_AST_Send((Object)send184610, (Object)SMB__equal, 1, (Object)constant35843);
((AST_Send)send184611)->info = (AST_Info)info3875;
// position
send184612 = (Object)new_AST_Send((Object)localvariable26752, (Object)symbol35988, 0);
((AST_Send)send184612)->info = (AST_Info)info3875;
// should
send184613 = (Object)new_AST_Send((Object)send184612, (Object)symbol35983, 0);
((AST_Send)send184613)->info = (AST_Info)info3875;
smallint21144 = (Object)new_Type_SmallInt(5);
constant35844 = (Object)new_AST_Constant((Object)smallint21144);
// =
send184614 = (Object)new_AST_Send((Object)send184613, (Object)SMB__equal, 1, (Object)constant35844);
((AST_Send)send184614)->info = (AST_Info)info3875;
string28300 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant35845 = (Object)new_AST_Constant((Object)string28300);
// on:
send184615 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35845);
((AST_Send)send184615)->info = (AST_Info)info3875;
assign22674 = (Object)new_AST_Assign((Object)localvariable26752, (Object)send184615);
// match:
send184616 = (Object)new_AST_Send((Object)localvariable26751, (Object)symbol35843, 1, (Object)localvariable26752);
((AST_Send)send184616)->info = (AST_Info)info3875;
// should
send184617 = (Object)new_AST_Send((Object)send184616, (Object)symbol35983, 0);
((AST_Send)send184617)->info = (AST_Info)info3875;
string28301 = (Object)new_Type_String(L"abc\'d");
constant35846 = (Object)new_AST_Constant((Object)string28301);
// =
send184618 = (Object)new_AST_Send((Object)send184617, (Object)SMB__equal, 1, (Object)constant35846);
((AST_Send)send184618)->info = (AST_Info)info3875;
// position
send184619 = (Object)new_AST_Send((Object)localvariable26752, (Object)symbol35988, 0);
((AST_Send)send184619)->info = (AST_Info)info3875;
// should
send184620 = (Object)new_AST_Send((Object)send184619, (Object)symbol35983, 0);
((AST_Send)send184620)->info = (AST_Info)info3875;
smallint21145 = (Object)new_Type_SmallInt(8);
constant35847 = (Object)new_AST_Constant((Object)smallint21145);
// =
send184621 = (Object)new_AST_Send((Object)send184620, (Object)SMB__equal, 1, (Object)constant35847);
((AST_Send)send184621)->info = (AST_Info)info3875;
method25438 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21445, 14, assign22670, assign22671, send184597, send184600, assign22672, send184604, send184607, assign22673, send184611, send184614, assign22674, send184618, send184621, Self);
((AST_Method)method25438)->info = (AST_Info)info3875;
symbol35569 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure25436 = (Object)new_Runtime_MethodClosure(method25438);
store_method((Type_Class)class4034, (Type_Symbol)symbol35569, (Runtime_MethodClosure)methodclosure25436);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable26753 = (Object)new_AST_Variable_named(L"parser");
localvariable26754 = (Object)new_AST_Variable_named(L"string");
localvariable26755 = (Object)new_AST_Variable_named(L"result");
array21446 = (Object)new_Type_Array_with(3, (Object)localvariable26753, (Object)localvariable26754, (Object)localvariable26755);
// binaryMessageDefinition
send184622 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36005, 0);
string28302 = (Object)new_Type_String(L"testBinaryArgument");
string28303 = (Object)new_Type_String(L"testBinaryArgument\n\t| parser string result |\n\tparser := scparser binaryMessageDefinition.\n\tstring := PEGStringScanner on: \'+= a\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'+=\'.\n\tresult parameter class should = ASTVariable.\n\tresult parameter name asString should = \'a\'.\n\tstring position should = 4.\n\tstring := PEGStringScanner on: \'|= a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'-= abc d\'.\n\tresult := parser match: string.\n\tresult class should = ASTBinaryMessageDefinition.\n\tresult selector printString should = \'-=\'.\n\tresult parameter class should = ASTVariable.\n\tresult parameter name asString should = \'abc\'.\n\tstring position should = 6");
smallint21146 = (Object)new_Type_SmallInt(-1);
smallint21147 = (Object)new_Type_SmallInt(-1);
info3876 = (Object)new_AST_Info((Type_String)string28303,(Type_String)string28302, (Type_SmallInt)smallint21146, (Type_SmallInt)smallint21147);
((AST_Send)send184622)->info = (AST_Info)info3876;
assign22675 = (Object)new_AST_Assign((Object)localvariable26753, (Object)send184622);
string28304 = (Object)new_Type_String(L"+= a");
constant35848 = (Object)new_AST_Constant((Object)string28304);
// on:
send184623 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35848);
((AST_Send)send184623)->info = (AST_Info)info3876;
assign22676 = (Object)new_AST_Assign((Object)localvariable26754, (Object)send184623);
// match:
send184624 = (Object)new_AST_Send((Object)localvariable26753, (Object)symbol35843, 1, (Object)localvariable26754);
((AST_Send)send184624)->info = (AST_Info)info3876;
assign22677 = (Object)new_AST_Assign((Object)localvariable26755, (Object)send184624);
// class
send184625 = (Object)new_AST_Send((Object)localvariable26755, (Object)SMB_class, 0);
((AST_Send)send184625)->info = (AST_Info)info3876;
// should
send184626 = (Object)new_AST_Send((Object)send184625, (Object)symbol35983, 0);
((AST_Send)send184626)->info = (AST_Info)info3876;
// =
send184627 = (Object)new_AST_Send((Object)send184626, (Object)SMB__equal, 1, (Object)classreference4834);
((AST_Send)send184627)->info = (AST_Info)info3876;
// selector
send184628 = (Object)new_AST_Send((Object)localvariable26755, (Object)symbol35626, 0);
((AST_Send)send184628)->info = (AST_Info)info3876;
// printString
send184629 = (Object)new_AST_Send((Object)send184628, (Object)symbol35846, 0);
((AST_Send)send184629)->info = (AST_Info)info3876;
// should
send184630 = (Object)new_AST_Send((Object)send184629, (Object)symbol35983, 0);
((AST_Send)send184630)->info = (AST_Info)info3876;
string28305 = (Object)new_Type_String(L"+=");
constant35849 = (Object)new_AST_Constant((Object)string28305);
// =
send184631 = (Object)new_AST_Send((Object)send184630, (Object)SMB__equal, 1, (Object)constant35849);
((AST_Send)send184631)->info = (AST_Info)info3876;
// parameter
send184632 = (Object)new_AST_Send((Object)localvariable26755, (Object)symbol35751, 0);
((AST_Send)send184632)->info = (AST_Info)info3876;
// class
send184633 = (Object)new_AST_Send((Object)send184632, (Object)SMB_class, 0);
((AST_Send)send184633)->info = (AST_Info)info3876;
// should
send184634 = (Object)new_AST_Send((Object)send184633, (Object)symbol35983, 0);
((AST_Send)send184634)->info = (AST_Info)info3876;
// =
send184635 = (Object)new_AST_Send((Object)send184634, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184635)->info = (AST_Info)info3876;
// parameter
send184636 = (Object)new_AST_Send((Object)localvariable26755, (Object)symbol35751, 0);
((AST_Send)send184636)->info = (AST_Info)info3876;
// name
send184637 = (Object)new_AST_Send((Object)send184636, (Object)SMB_name, 0);
((AST_Send)send184637)->info = (AST_Info)info3876;
// asString
send184638 = (Object)new_AST_Send((Object)send184637, (Object)SMB_asString, 0);
((AST_Send)send184638)->info = (AST_Info)info3876;
// should
send184639 = (Object)new_AST_Send((Object)send184638, (Object)symbol35983, 0);
((AST_Send)send184639)->info = (AST_Info)info3876;
string28306 = (Object)new_Type_String(L"a");
constant35850 = (Object)new_AST_Constant((Object)string28306);
// =
send184640 = (Object)new_AST_Send((Object)send184639, (Object)SMB__equal, 1, (Object)constant35850);
((AST_Send)send184640)->info = (AST_Info)info3876;
// position
send184641 = (Object)new_AST_Send((Object)localvariable26754, (Object)symbol35988, 0);
((AST_Send)send184641)->info = (AST_Info)info3876;
// should
send184642 = (Object)new_AST_Send((Object)send184641, (Object)symbol35983, 0);
((AST_Send)send184642)->info = (AST_Info)info3876;
smallint21148 = (Object)new_Type_SmallInt(4);
constant35851 = (Object)new_AST_Constant((Object)smallint21148);
// =
send184643 = (Object)new_AST_Send((Object)send184642, (Object)SMB__equal, 1, (Object)constant35851);
((AST_Send)send184643)->info = (AST_Info)info3876;
string28307 = (Object)new_Type_String(L"|= a");
constant35852 = (Object)new_AST_Constant((Object)string28307);
// on:
send184644 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35852);
((AST_Send)send184644)->info = (AST_Info)info3876;
assign22678 = (Object)new_AST_Assign((Object)localvariable26754, (Object)send184644);
// match:
send184645 = (Object)new_AST_Send((Object)localvariable26753, (Object)symbol35843, 1, (Object)localvariable26754);
((AST_Send)send184645)->info = (AST_Info)info3876;
// should
send184646 = (Object)new_AST_Send((Object)send184645, (Object)symbol35983, 0);
((AST_Send)send184646)->info = (AST_Info)info3876;
// be
send184647 = (Object)new_AST_Send((Object)send184646, (Object)symbol35989, 0);
((AST_Send)send184647)->info = (AST_Info)info3876;
// isNil
send184648 = (Object)new_AST_Send((Object)send184647, (Object)SMB_isNil, 0);
((AST_Send)send184648)->info = (AST_Info)info3876;
// position
send184649 = (Object)new_AST_Send((Object)localvariable26754, (Object)symbol35988, 0);
((AST_Send)send184649)->info = (AST_Info)info3876;
// should
send184650 = (Object)new_AST_Send((Object)send184649, (Object)symbol35983, 0);
((AST_Send)send184650)->info = (AST_Info)info3876;
smallint21149 = (Object)new_Type_SmallInt(0);
constant35853 = (Object)new_AST_Constant((Object)smallint21149);
// =
send184651 = (Object)new_AST_Send((Object)send184650, (Object)SMB__equal, 1, (Object)constant35853);
((AST_Send)send184651)->info = (AST_Info)info3876;
string28308 = (Object)new_Type_String(L"-= abc d");
constant35854 = (Object)new_AST_Constant((Object)string28308);
// on:
send184652 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35854);
((AST_Send)send184652)->info = (AST_Info)info3876;
assign22679 = (Object)new_AST_Assign((Object)localvariable26754, (Object)send184652);
// match:
send184653 = (Object)new_AST_Send((Object)localvariable26753, (Object)symbol35843, 1, (Object)localvariable26754);
((AST_Send)send184653)->info = (AST_Info)info3876;
assign22680 = (Object)new_AST_Assign((Object)localvariable26755, (Object)send184653);
// class
send184654 = (Object)new_AST_Send((Object)localvariable26755, (Object)SMB_class, 0);
((AST_Send)send184654)->info = (AST_Info)info3876;
// should
send184655 = (Object)new_AST_Send((Object)send184654, (Object)symbol35983, 0);
((AST_Send)send184655)->info = (AST_Info)info3876;
// =
send184656 = (Object)new_AST_Send((Object)send184655, (Object)SMB__equal, 1, (Object)classreference4834);
((AST_Send)send184656)->info = (AST_Info)info3876;
// selector
send184657 = (Object)new_AST_Send((Object)localvariable26755, (Object)symbol35626, 0);
((AST_Send)send184657)->info = (AST_Info)info3876;
// printString
send184658 = (Object)new_AST_Send((Object)send184657, (Object)symbol35846, 0);
((AST_Send)send184658)->info = (AST_Info)info3876;
// should
send184659 = (Object)new_AST_Send((Object)send184658, (Object)symbol35983, 0);
((AST_Send)send184659)->info = (AST_Info)info3876;
string28309 = (Object)new_Type_String(L"-=");
constant35855 = (Object)new_AST_Constant((Object)string28309);
// =
send184660 = (Object)new_AST_Send((Object)send184659, (Object)SMB__equal, 1, (Object)constant35855);
((AST_Send)send184660)->info = (AST_Info)info3876;
// parameter
send184661 = (Object)new_AST_Send((Object)localvariable26755, (Object)symbol35751, 0);
((AST_Send)send184661)->info = (AST_Info)info3876;
// class
send184662 = (Object)new_AST_Send((Object)send184661, (Object)SMB_class, 0);
((AST_Send)send184662)->info = (AST_Info)info3876;
// should
send184663 = (Object)new_AST_Send((Object)send184662, (Object)symbol35983, 0);
((AST_Send)send184663)->info = (AST_Info)info3876;
// =
send184664 = (Object)new_AST_Send((Object)send184663, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184664)->info = (AST_Info)info3876;
// parameter
send184665 = (Object)new_AST_Send((Object)localvariable26755, (Object)symbol35751, 0);
((AST_Send)send184665)->info = (AST_Info)info3876;
// name
send184666 = (Object)new_AST_Send((Object)send184665, (Object)SMB_name, 0);
((AST_Send)send184666)->info = (AST_Info)info3876;
// asString
send184667 = (Object)new_AST_Send((Object)send184666, (Object)SMB_asString, 0);
((AST_Send)send184667)->info = (AST_Info)info3876;
// should
send184668 = (Object)new_AST_Send((Object)send184667, (Object)symbol35983, 0);
((AST_Send)send184668)->info = (AST_Info)info3876;
string28310 = (Object)new_Type_String(L"abc");
constant35856 = (Object)new_AST_Constant((Object)string28310);
// =
send184669 = (Object)new_AST_Send((Object)send184668, (Object)SMB__equal, 1, (Object)constant35856);
((AST_Send)send184669)->info = (AST_Info)info3876;
// position
send184670 = (Object)new_AST_Send((Object)localvariable26754, (Object)symbol35988, 0);
((AST_Send)send184670)->info = (AST_Info)info3876;
// should
send184671 = (Object)new_AST_Send((Object)send184670, (Object)symbol35983, 0);
((AST_Send)send184671)->info = (AST_Info)info3876;
smallint21150 = (Object)new_Type_SmallInt(6);
constant35857 = (Object)new_AST_Constant((Object)smallint21150);
// =
send184672 = (Object)new_AST_Send((Object)send184671, (Object)SMB__equal, 1, (Object)constant35857);
((AST_Send)send184672)->info = (AST_Info)info3876;
method25439 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21446, 19, assign22675, assign22676, assign22677, send184627, send184631, send184635, send184640, send184643, assign22678, send184648, send184651, assign22679, assign22680, send184656, send184660, send184664, send184669, send184672, Self);
((AST_Method)method25439)->info = (AST_Info)info3876;
symbol35589 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure25437 = (Object)new_Runtime_MethodClosure(method25439);
store_method((Type_Class)class4034, (Type_Symbol)symbol35589, (Runtime_MethodClosure)methodclosure25437);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable26756 = (Object)new_AST_Variable_named(L"parser");
localvariable26757 = (Object)new_AST_Variable_named(L"string");
localvariable26758 = (Object)new_AST_Variable_named(L"result");
array21447 = (Object)new_Type_Array_with(3, (Object)localvariable26756, (Object)localvariable26757, (Object)localvariable26758);
symbol36015 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send184673 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36015, 0);
string28311 = (Object)new_Type_String(L"testStringConstant");
string28312 = (Object)new_Type_String(L"testStringConstant\n\t| parser string result |\n\tparser := scparser stringConstant.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'.\n\tresult := parser match: string.\n\tresult class should = ASTString.\n\tresult string should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'\'.\n\tresult := parser match: string.\n\tresult class should = ASTString.\n\tresult string should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'\'\'abc\'\'\'\'d\'\' \'\'\'.\n\tresult := parser match: string.\n\tresult class should = ASTString.\n\tresult string should = \'abc\'\'d\'.\n\tstring position should = 8");
smallint21151 = (Object)new_Type_SmallInt(-1);
smallint21152 = (Object)new_Type_SmallInt(-1);
info3877 = (Object)new_AST_Info((Type_String)string28312,(Type_String)string28311, (Type_SmallInt)smallint21151, (Type_SmallInt)smallint21152);
((AST_Send)send184673)->info = (AST_Info)info3877;
assign22681 = (Object)new_AST_Assign((Object)localvariable26756, (Object)send184673);
string28313 = (Object)new_Type_String(L"\'abc\'");
constant35858 = (Object)new_AST_Constant((Object)string28313);
// on:
send184674 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35858);
((AST_Send)send184674)->info = (AST_Info)info3877;
assign22682 = (Object)new_AST_Assign((Object)localvariable26757, (Object)send184674);
// match:
send184675 = (Object)new_AST_Send((Object)localvariable26756, (Object)symbol35843, 1, (Object)localvariable26757);
((AST_Send)send184675)->info = (AST_Info)info3877;
assign22683 = (Object)new_AST_Assign((Object)localvariable26758, (Object)send184675);
// class
send184676 = (Object)new_AST_Send((Object)localvariable26758, (Object)SMB_class, 0);
((AST_Send)send184676)->info = (AST_Info)info3877;
// should
send184677 = (Object)new_AST_Send((Object)send184676, (Object)symbol35983, 0);
((AST_Send)send184677)->info = (AST_Info)info3877;
// =
send184678 = (Object)new_AST_Send((Object)send184677, (Object)SMB__equal, 1, (Object)classreference4838);
((AST_Send)send184678)->info = (AST_Info)info3877;
// string
send184679 = (Object)new_AST_Send((Object)localvariable26758, (Object)symbol35710, 0);
((AST_Send)send184679)->info = (AST_Info)info3877;
// should
send184680 = (Object)new_AST_Send((Object)send184679, (Object)symbol35983, 0);
((AST_Send)send184680)->info = (AST_Info)info3877;
string28314 = (Object)new_Type_String(L"abc");
constant35859 = (Object)new_AST_Constant((Object)string28314);
// =
send184681 = (Object)new_AST_Send((Object)send184680, (Object)SMB__equal, 1, (Object)constant35859);
((AST_Send)send184681)->info = (AST_Info)info3877;
// position
send184682 = (Object)new_AST_Send((Object)localvariable26757, (Object)symbol35988, 0);
((AST_Send)send184682)->info = (AST_Info)info3877;
// should
send184683 = (Object)new_AST_Send((Object)send184682, (Object)symbol35983, 0);
((AST_Send)send184683)->info = (AST_Info)info3877;
smallint21153 = (Object)new_Type_SmallInt(5);
constant35860 = (Object)new_AST_Constant((Object)smallint21153);
// =
send184684 = (Object)new_AST_Send((Object)send184683, (Object)SMB__equal, 1, (Object)constant35860);
((AST_Send)send184684)->info = (AST_Info)info3877;
string28315 = (Object)new_Type_String(L"\'abc\'\'");
constant35861 = (Object)new_AST_Constant((Object)string28315);
// on:
send184685 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35861);
((AST_Send)send184685)->info = (AST_Info)info3877;
assign22684 = (Object)new_AST_Assign((Object)localvariable26757, (Object)send184685);
// match:
send184686 = (Object)new_AST_Send((Object)localvariable26756, (Object)symbol35843, 1, (Object)localvariable26757);
((AST_Send)send184686)->info = (AST_Info)info3877;
assign22685 = (Object)new_AST_Assign((Object)localvariable26758, (Object)send184686);
// class
send184687 = (Object)new_AST_Send((Object)localvariable26758, (Object)SMB_class, 0);
((AST_Send)send184687)->info = (AST_Info)info3877;
// should
send184688 = (Object)new_AST_Send((Object)send184687, (Object)symbol35983, 0);
((AST_Send)send184688)->info = (AST_Info)info3877;
// =
send184689 = (Object)new_AST_Send((Object)send184688, (Object)SMB__equal, 1, (Object)classreference4838);
((AST_Send)send184689)->info = (AST_Info)info3877;
// string
send184690 = (Object)new_AST_Send((Object)localvariable26758, (Object)symbol35710, 0);
((AST_Send)send184690)->info = (AST_Info)info3877;
// should
send184691 = (Object)new_AST_Send((Object)send184690, (Object)symbol35983, 0);
((AST_Send)send184691)->info = (AST_Info)info3877;
string28316 = (Object)new_Type_String(L"abc");
constant35862 = (Object)new_AST_Constant((Object)string28316);
// =
send184692 = (Object)new_AST_Send((Object)send184691, (Object)SMB__equal, 1, (Object)constant35862);
((AST_Send)send184692)->info = (AST_Info)info3877;
// position
send184693 = (Object)new_AST_Send((Object)localvariable26757, (Object)symbol35988, 0);
((AST_Send)send184693)->info = (AST_Info)info3877;
// should
send184694 = (Object)new_AST_Send((Object)send184693, (Object)symbol35983, 0);
((AST_Send)send184694)->info = (AST_Info)info3877;
smallint21154 = (Object)new_Type_SmallInt(5);
constant35863 = (Object)new_AST_Constant((Object)smallint21154);
// =
send184695 = (Object)new_AST_Send((Object)send184694, (Object)SMB__equal, 1, (Object)constant35863);
((AST_Send)send184695)->info = (AST_Info)info3877;
string28317 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant35864 = (Object)new_AST_Constant((Object)string28317);
// on:
send184696 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35864);
((AST_Send)send184696)->info = (AST_Info)info3877;
assign22686 = (Object)new_AST_Assign((Object)localvariable26757, (Object)send184696);
// match:
send184697 = (Object)new_AST_Send((Object)localvariable26756, (Object)symbol35843, 1, (Object)localvariable26757);
((AST_Send)send184697)->info = (AST_Info)info3877;
assign22687 = (Object)new_AST_Assign((Object)localvariable26758, (Object)send184697);
// class
send184698 = (Object)new_AST_Send((Object)localvariable26758, (Object)SMB_class, 0);
((AST_Send)send184698)->info = (AST_Info)info3877;
// should
send184699 = (Object)new_AST_Send((Object)send184698, (Object)symbol35983, 0);
((AST_Send)send184699)->info = (AST_Info)info3877;
// =
send184700 = (Object)new_AST_Send((Object)send184699, (Object)SMB__equal, 1, (Object)classreference4838);
((AST_Send)send184700)->info = (AST_Info)info3877;
// string
send184701 = (Object)new_AST_Send((Object)localvariable26758, (Object)symbol35710, 0);
((AST_Send)send184701)->info = (AST_Info)info3877;
// should
send184702 = (Object)new_AST_Send((Object)send184701, (Object)symbol35983, 0);
((AST_Send)send184702)->info = (AST_Info)info3877;
string28318 = (Object)new_Type_String(L"abc\'d");
constant35865 = (Object)new_AST_Constant((Object)string28318);
// =
send184703 = (Object)new_AST_Send((Object)send184702, (Object)SMB__equal, 1, (Object)constant35865);
((AST_Send)send184703)->info = (AST_Info)info3877;
// position
send184704 = (Object)new_AST_Send((Object)localvariable26757, (Object)symbol35988, 0);
((AST_Send)send184704)->info = (AST_Info)info3877;
// should
send184705 = (Object)new_AST_Send((Object)send184704, (Object)symbol35983, 0);
((AST_Send)send184705)->info = (AST_Info)info3877;
smallint21155 = (Object)new_Type_SmallInt(8);
constant35866 = (Object)new_AST_Constant((Object)smallint21155);
// =
send184706 = (Object)new_AST_Send((Object)send184705, (Object)SMB__equal, 1, (Object)constant35866);
((AST_Send)send184706)->info = (AST_Info)info3877;
method25440 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21447, 17, assign22681, assign22682, assign22683, send184678, send184681, send184684, assign22684, assign22685, send184689, send184692, send184695, assign22686, assign22687, send184700, send184703, send184706, Self);
((AST_Method)method25440)->info = (AST_Info)info3877;
symbol35542 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure25438 = (Object)new_Runtime_MethodClosure(method25440);
store_method((Type_Class)class4034, (Type_Symbol)symbol35542, (Runtime_MethodClosure)methodclosure25438);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable26759 = (Object)new_AST_Variable_named(L"parser");
localvariable26760 = (Object)new_AST_Variable_named(L"string");
localvariable26761 = (Object)new_AST_Variable_named(L"result");
array21448 = (Object)new_Type_Array_with(3, (Object)localvariable26759, (Object)localvariable26760, (Object)localvariable26761);
// method
send184707 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35998, 0);
string28319 = (Object)new_Type_String(L"testMethod2");
string28320 = (Object)new_Type_String(L"testMethod2\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" \'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message class should = ASTKeywordMessageDefinition.\n\tresult temporaries size should = 3.\n\tresult annotations size should = 3.\n\tresult statements size should = 2");
smallint21156 = (Object)new_Type_SmallInt(-1);
smallint21157 = (Object)new_Type_SmallInt(-1);
info3878 = (Object)new_AST_Info((Type_String)string28320,(Type_String)string28319, (Type_SmallInt)smallint21156, (Type_SmallInt)smallint21157);
((AST_Send)send184707)->info = (AST_Info)info3878;
assign22688 = (Object)new_AST_Assign((Object)localvariable26759, (Object)send184707);
string28321 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant35867 = (Object)new_AST_Constant((Object)string28321);
assign22689 = (Object)new_AST_Assign((Object)localvariable26760, (Object)constant35867);
// parse:
send184708 = (Object)new_AST_Send((Object)localvariable26759, (Object)symbol35862, 1, (Object)localvariable26760);
((AST_Send)send184708)->info = (AST_Info)info3878;
assign22690 = (Object)new_AST_Assign((Object)localvariable26761, (Object)send184708);
// hasReturnExpression
send184709 = (Object)new_AST_Send((Object)localvariable26761, (Object)symbol35678, 0);
((AST_Send)send184709)->info = (AST_Info)info3878;
// should
send184710 = (Object)new_AST_Send((Object)send184709, (Object)symbol35983, 0);
((AST_Send)send184710)->info = (AST_Info)info3878;
// be
send184711 = (Object)new_AST_Send((Object)send184710, (Object)symbol35989, 0);
((AST_Send)send184711)->info = (AST_Info)info3878;
// true
send184712 = (Object)new_AST_Send((Object)send184711, (Object)symbol35999, 0);
((AST_Send)send184712)->info = (AST_Info)info3878;
// class
send184713 = (Object)new_AST_Send((Object)localvariable26761, (Object)SMB_class, 0);
((AST_Send)send184713)->info = (AST_Info)info3878;
// should
send184714 = (Object)new_AST_Send((Object)send184713, (Object)symbol35983, 0);
((AST_Send)send184714)->info = (AST_Info)info3878;
// =
send184715 = (Object)new_AST_Send((Object)send184714, (Object)SMB__equal, 1, (Object)classreference4832);
((AST_Send)send184715)->info = (AST_Info)info3878;
// message
send184716 = (Object)new_AST_Send((Object)localvariable26761, (Object)symbol35746, 0);
((AST_Send)send184716)->info = (AST_Info)info3878;
// class
send184717 = (Object)new_AST_Send((Object)send184716, (Object)SMB_class, 0);
((AST_Send)send184717)->info = (AST_Info)info3878;
// should
send184718 = (Object)new_AST_Send((Object)send184717, (Object)symbol35983, 0);
((AST_Send)send184718)->info = (AST_Info)info3878;
classreference4839 = (Object)new_Organization_ClassReference((Type_Class)class4061);

// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable26762 = (Object)new_AST_Variable_named(L"aCollection");
array21449 = (Object)new_Type_Array_with(1, (Object)localvariable26762);
symbol36016 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send184719 = (Object)new_AST_Send((Object)Self, (Object)symbol36016, 0);
string28322 = (Object)new_Type_String(L"parameters:");
string28323 = (Object)new_Type_String(L"parameters: aCollection\n\tself halt.\n\tparameters := aCollection");
smallint21158 = (Object)new_Type_SmallInt(-1);
smallint21159 = (Object)new_Type_SmallInt(-1);
info3879 = (Object)new_AST_Info((Type_String)string28323,(Type_String)string28322, (Type_SmallInt)smallint21158, (Type_SmallInt)smallint21159);
((AST_Send)send184719)->info = (AST_Info)info3879;
assign22691 = (Object)new_AST_Assign((Object)instancevariable6025, (Object)localvariable26762);
method25441 = (Object)new_AST_Method_with((Type_Array)array21449, (Type_Array)empty_Type_Array, 3, send184719, assign22691, Self);
((AST_Method)method25441)->info = (AST_Info)info3879;
symbol35752 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure25439 = (Object)new_Runtime_MethodClosure(method25441);
store_method((Type_Class)class4061, (Type_Symbol)symbol35752, (Runtime_MethodClosure)methodclosure25439);


// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable26763 = (Object)new_AST_Variable_named(L"aSelector");
array21450 = (Object)new_Type_Array_with(1, (Object)localvariable26763);
variable1589 = (Object)new_AST_Variable_named(L"return");
array21451 = (Object)new_Type_Array_with(1, (Object)variable1589);
symbol35734 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
super1981 = (Object)new_AST_Super((Object)symbol35734, 1, (Object)localvariable26763);
// escape:
send184720 = (Object)new_AST_Send((Object)variable1589, (Object)SMB_escape_, 1, (Object)False_Const);
string28324 = (Object)new_Type_String(L"compatibleWith:");
string28325 = (Object)new_Type_String(L"compatibleWith: aSelector \n\t(super compatibleWith: aSelector)\n\t\tifFalse: [^ false].\n\t\"check if each argument has the same layout\"\n\t^ self compatibleArgumentsWith: aSelector.");
smallint21160 = (Object)new_Type_SmallInt(-1);
smallint21161 = (Object)new_Type_SmallInt(-1);
info3880 = (Object)new_AST_Info((Type_String)string28325,(Type_String)string28324, (Type_SmallInt)smallint21160, (Type_SmallInt)smallint21161);
((AST_Send)send184720)->info = (AST_Info)info3880;
block12804 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send184720);
// ifFalse:
send184721 = (Object)new_AST_Send((Object)super1981, (Object)SMB_ifFalse_, 1, (Object)block12804);
((AST_Send)send184721)->info = (AST_Info)info3880;
symbol35753 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
// compatibleArgumentsWith:
send184722 = (Object)new_AST_Send((Object)Self, (Object)symbol35753, 1, (Object)localvariable26763);
((AST_Send)send184722)->info = (AST_Info)info3880;
block12805 = (Object)new_AST_Block_with((Type_Array)array21451, (Type_Array)empty_Type_Array, 1, 2, send184721, send184722);
// on:
send184723 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12805);
method25442 = (Object)new_AST_Method_with((Type_Array)array21450, (Type_Array)empty_Type_Array, 1, send184723);
((AST_Method)method25442)->info = (AST_Info)info3880;
methodclosure25440 = (Object)new_Runtime_MethodClosure(method25442);
store_method((Type_Class)class4061, (Type_Symbol)symbol35734, (Runtime_MethodClosure)methodclosure25440);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super1982 = (Object)new_AST_Super((Object)symbol35517, 0);
// new
send184724 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28326 = (Object)new_Type_String(L"initialize");
string28327 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tparameters := OrderedCollection new.");
smallint21162 = (Object)new_Type_SmallInt(-1);
smallint21163 = (Object)new_Type_SmallInt(-1);
info3881 = (Object)new_AST_Info((Type_String)string28327,(Type_String)string28326, (Type_SmallInt)smallint21162, (Type_SmallInt)smallint21163);
((AST_Send)send184724)->info = (AST_Info)info3881;
assign22692 = (Object)new_AST_Assign((Object)instancevariable6025, (Object)send184724);
method25443 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1982, assign22692, Self);
((AST_Method)method25443)->info = (AST_Info)info3881;
methodclosure25441 = (Object)new_Runtime_MethodClosure(method25443);
store_method((Type_Class)class4061, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25441);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable26764 = (Object)new_AST_Variable_named(L"aSelector");
array21452 = (Object)new_Type_Array_with(1, (Object)localvariable26764);
variable1590 = (Object)new_AST_Variable_named(L"return");
array21453 = (Object)new_Type_Array_with(1, (Object)variable1590);
// size
send184725 = (Object)new_AST_Send((Object)instancevariable6025, (Object)SMB_size, 0);
string28328 = (Object)new_Type_String(L"compatibleArgumentsWith:");
string28329 = (Object)new_Type_String(L"compatibleArgumentsWith: aSelector\n\t parameters size timesRepeat: [:index | \n\t\t(parameters at: index) layout = (aSelector parameters at: index) layout\n\t\t\tifFalse: [^ false]\n\t].\n\t^ true");
smallint21164 = (Object)new_Type_SmallInt(-1);
smallint21165 = (Object)new_Type_SmallInt(-1);
info3882 = (Object)new_AST_Info((Type_String)string28329,(Type_String)string28328, (Type_SmallInt)smallint21164, (Type_SmallInt)smallint21165);
((AST_Send)send184725)->info = (AST_Info)info3882;
symbol36017 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable26765 = (Object)new_AST_Variable_named(L"index");
array21454 = (Object)new_Type_Array_with(1, (Object)localvariable26765);
// at:
send184726 = (Object)new_AST_Send((Object)instancevariable6025, (Object)SMB_at_, 1, (Object)localvariable26765);
((AST_Send)send184726)->info = (AST_Info)info3882;
// layout
send184727 = (Object)new_AST_Send((Object)send184726, (Object)symbol35607, 0);
((AST_Send)send184727)->info = (AST_Info)info3882;
// parameters
send184728 = (Object)new_AST_Send((Object)localvariable26764, (Object)symbol35733, 0);
((AST_Send)send184728)->info = (AST_Info)info3882;
// at:
send184729 = (Object)new_AST_Send((Object)send184728, (Object)SMB_at_, 1, (Object)localvariable26765);
((AST_Send)send184729)->info = (AST_Info)info3882;
// layout
send184730 = (Object)new_AST_Send((Object)send184729, (Object)symbol35607, 0);
((AST_Send)send184730)->info = (AST_Info)info3882;
// =
send184731 = (Object)new_AST_Send((Object)send184727, (Object)SMB__equal, 1, (Object)send184730);
((AST_Send)send184731)->info = (AST_Info)info3882;
// escape:
send184732 = (Object)new_AST_Send((Object)variable1590, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send184732)->info = (AST_Info)info3882;
block12806 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send184732);
// ifFalse:
send184733 = (Object)new_AST_Send((Object)send184731, (Object)SMB_ifFalse_, 1, (Object)block12806);
((AST_Send)send184733)->info = (AST_Info)info3882;
block12807 = (Object)new_AST_Block_with((Type_Array)array21454, (Type_Array)empty_Type_Array, 2, 1, send184733);
// timesRepeat:
send184734 = (Object)new_AST_Send((Object)send184725, (Object)symbol36017, 1, (Object)block12807);
((AST_Send)send184734)->info = (AST_Info)info3882;
block12808 = (Object)new_AST_Block_with((Type_Array)array21453, (Type_Array)empty_Type_Array, 1, 2, send184734, True_Const);
// on:
send184735 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12808);
method25444 = (Object)new_AST_Method_with((Type_Array)array21452, (Type_Array)empty_Type_Array, 1, send184735);
((AST_Method)method25444)->info = (AST_Info)info3882;
methodclosure25442 = (Object)new_Runtime_MethodClosure(method25444);
store_method((Type_Class)class4061, (Type_Symbol)symbol35753, (Runtime_MethodClosure)methodclosure25442);


// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method25445 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6025);
string28330 = (Object)new_Type_String(L"parameters");
string28331 = (Object)new_Type_String(L"parameters\n\t^ parameters");
smallint21166 = (Object)new_Type_SmallInt(-1);
smallint21167 = (Object)new_Type_SmallInt(-1);
info3883 = (Object)new_AST_Info((Type_String)string28331,(Type_String)string28330, (Type_SmallInt)smallint21166, (Type_SmallInt)smallint21167);
((AST_Method)method25445)->info = (AST_Info)info3883;
methodclosure25443 = (Object)new_Runtime_MethodClosure(method25445);
store_method((Type_Class)class4061, (Type_Symbol)symbol35733, (Runtime_MethodClosure)methodclosure25443);

// =
send184736 = (Object)new_AST_Send((Object)send184718, (Object)SMB__equal, 1, (Object)classreference4839);
((AST_Send)send184736)->info = (AST_Info)info3878;
// temporaries
send184737 = (Object)new_AST_Send((Object)localvariable26761, (Object)symbol35747, 0);
((AST_Send)send184737)->info = (AST_Info)info3878;
// size
send184738 = (Object)new_AST_Send((Object)send184737, (Object)SMB_size, 0);
((AST_Send)send184738)->info = (AST_Info)info3878;
// should
send184739 = (Object)new_AST_Send((Object)send184738, (Object)symbol35983, 0);
((AST_Send)send184739)->info = (AST_Info)info3878;
smallint21168 = (Object)new_Type_SmallInt(3);
constant35868 = (Object)new_AST_Constant((Object)smallint21168);
// =
send184740 = (Object)new_AST_Send((Object)send184739, (Object)SMB__equal, 1, (Object)constant35868);
((AST_Send)send184740)->info = (AST_Info)info3878;
// annotations
send184741 = (Object)new_AST_Send((Object)localvariable26761, (Object)symbol35744, 0);
((AST_Send)send184741)->info = (AST_Info)info3878;
// size
send184742 = (Object)new_AST_Send((Object)send184741, (Object)SMB_size, 0);
((AST_Send)send184742)->info = (AST_Info)info3878;
// should
send184743 = (Object)new_AST_Send((Object)send184742, (Object)symbol35983, 0);
((AST_Send)send184743)->info = (AST_Info)info3878;
smallint21169 = (Object)new_Type_SmallInt(3);
constant35869 = (Object)new_AST_Constant((Object)smallint21169);
// =
send184744 = (Object)new_AST_Send((Object)send184743, (Object)SMB__equal, 1, (Object)constant35869);
((AST_Send)send184744)->info = (AST_Info)info3878;
// statements
send184745 = (Object)new_AST_Send((Object)localvariable26761, (Object)symbol35743, 0);
((AST_Send)send184745)->info = (AST_Info)info3878;
// size
send184746 = (Object)new_AST_Send((Object)send184745, (Object)SMB_size, 0);
((AST_Send)send184746)->info = (AST_Info)info3878;
// should
send184747 = (Object)new_AST_Send((Object)send184746, (Object)symbol35983, 0);
((AST_Send)send184747)->info = (AST_Info)info3878;
smallint21170 = (Object)new_Type_SmallInt(2);
constant35870 = (Object)new_AST_Constant((Object)smallint21170);
// =
send184748 = (Object)new_AST_Send((Object)send184747, (Object)SMB__equal, 1, (Object)constant35870);
((AST_Send)send184748)->info = (AST_Info)info3878;
method25446 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21448, 10, assign22688, assign22689, assign22690, send184712, send184715, send184736, send184740, send184744, send184748, Self);
((AST_Method)method25446)->info = (AST_Info)info3878;
symbol35562 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure25444 = (Object)new_Runtime_MethodClosure(method25446);
store_method((Type_Class)class4034, (Type_Symbol)symbol35562, (Runtime_MethodClosure)methodclosure25444);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable26766 = (Object)new_AST_Variable_named(L"parser");
localvariable26767 = (Object)new_AST_Variable_named(L"string");
localvariable26768 = (Object)new_AST_Variable_named(L"result");
array21455 = (Object)new_Type_Array_with(3, (Object)localvariable26766, (Object)localvariable26767, (Object)localvariable26768);
symbol36018 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send184749 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36018, 0);
string28332 = (Object)new_Type_String(L"testKeywordsArguments");
string28333 = (Object)new_Type_String(L"testKeywordsArguments\n\t| parser string result |\n\tparser := scparser keywordsArguments.\n\tstring := PEGStringScanner on: \'test: ab\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordMessageDefinition.\n\tresult keywords should = (OrderedCollection with: \'test\').\n\tresult parameters size should = 1.\n\tresult parameters first should = (ASTVariable new name: \'ab\').\n\tstring position should = 8.\n\tstring := PEGStringScanner on: \'bla a\'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0.\n\tstring := PEGStringScanner on: \'test: d bla: c boe\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordMessageDefinition.\n\tresult keywords should = (OrderedCollection with: \'test\' with: \'bla\').\n\tresult parameters size should = 2.\n\tresult parameters first should = (ASTVariable new name: \'d\').\n\tresult parameters second should = (ASTVariable new name: \'c\').\n\tstring position should = 15");
smallint21171 = (Object)new_Type_SmallInt(-1);
smallint21172 = (Object)new_Type_SmallInt(-1);
info3884 = (Object)new_AST_Info((Type_String)string28333,(Type_String)string28332, (Type_SmallInt)smallint21171, (Type_SmallInt)smallint21172);
((AST_Send)send184749)->info = (AST_Info)info3884;
assign22693 = (Object)new_AST_Assign((Object)localvariable26766, (Object)send184749);
string28334 = (Object)new_Type_String(L"test: ab");
constant35871 = (Object)new_AST_Constant((Object)string28334);
// on:
send184750 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35871);
((AST_Send)send184750)->info = (AST_Info)info3884;
assign22694 = (Object)new_AST_Assign((Object)localvariable26767, (Object)send184750);
// match:
send184751 = (Object)new_AST_Send((Object)localvariable26766, (Object)symbol35843, 1, (Object)localvariable26767);
((AST_Send)send184751)->info = (AST_Info)info3884;
assign22695 = (Object)new_AST_Assign((Object)localvariable26768, (Object)send184751);
// class
send184752 = (Object)new_AST_Send((Object)localvariable26768, (Object)SMB_class, 0);
((AST_Send)send184752)->info = (AST_Info)info3884;
// should
send184753 = (Object)new_AST_Send((Object)send184752, (Object)symbol35983, 0);
((AST_Send)send184753)->info = (AST_Info)info3884;
// =
send184754 = (Object)new_AST_Send((Object)send184753, (Object)SMB__equal, 1, (Object)classreference4839);
((AST_Send)send184754)->info = (AST_Info)info3884;
// keywords
send184755 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35738, 0);
((AST_Send)send184755)->info = (AST_Info)info3884;
// should
send184756 = (Object)new_AST_Send((Object)send184755, (Object)symbol35983, 0);
((AST_Send)send184756)->info = (AST_Info)info3884;
string28335 = (Object)new_Type_String(L"test");
constant35872 = (Object)new_AST_Constant((Object)string28335);
// with:
send184757 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35690, 1, (Object)constant35872);
((AST_Send)send184757)->info = (AST_Info)info3884;
// =
send184758 = (Object)new_AST_Send((Object)send184756, (Object)SMB__equal, 1, (Object)send184757);
((AST_Send)send184758)->info = (AST_Info)info3884;
// parameters
send184759 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35733, 0);
((AST_Send)send184759)->info = (AST_Info)info3884;
// size
send184760 = (Object)new_AST_Send((Object)send184759, (Object)SMB_size, 0);
((AST_Send)send184760)->info = (AST_Info)info3884;
// should
send184761 = (Object)new_AST_Send((Object)send184760, (Object)symbol35983, 0);
((AST_Send)send184761)->info = (AST_Info)info3884;
smallint21173 = (Object)new_Type_SmallInt(1);
constant35873 = (Object)new_AST_Constant((Object)smallint21173);
// =
send184762 = (Object)new_AST_Send((Object)send184761, (Object)SMB__equal, 1, (Object)constant35873);
((AST_Send)send184762)->info = (AST_Info)info3884;
// parameters
send184763 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35733, 0);
((AST_Send)send184763)->info = (AST_Info)info3884;
// first
send184764 = (Object)new_AST_Send((Object)send184763, (Object)symbol35693, 0);
((AST_Send)send184764)->info = (AST_Info)info3884;
// should
send184765 = (Object)new_AST_Send((Object)send184764, (Object)symbol35983, 0);
((AST_Send)send184765)->info = (AST_Info)info3884;
// new
send184766 = (Object)new_AST_Send((Object)classreference4822, (Object)symbol35612, 0);
((AST_Send)send184766)->info = (AST_Info)info3884;
string28336 = (Object)new_Type_String(L"ab");
constant35874 = (Object)new_AST_Constant((Object)string28336);
// name:
send184767 = (Object)new_AST_Send((Object)send184766, (Object)symbol35721, 1, (Object)constant35874);
((AST_Send)send184767)->info = (AST_Info)info3884;
// =
send184768 = (Object)new_AST_Send((Object)send184765, (Object)SMB__equal, 1, (Object)send184767);
((AST_Send)send184768)->info = (AST_Info)info3884;
// position
send184769 = (Object)new_AST_Send((Object)localvariable26767, (Object)symbol35988, 0);
((AST_Send)send184769)->info = (AST_Info)info3884;
// should
send184770 = (Object)new_AST_Send((Object)send184769, (Object)symbol35983, 0);
((AST_Send)send184770)->info = (AST_Info)info3884;
smallint21174 = (Object)new_Type_SmallInt(8);
constant35875 = (Object)new_AST_Constant((Object)smallint21174);
// =
send184771 = (Object)new_AST_Send((Object)send184770, (Object)SMB__equal, 1, (Object)constant35875);
((AST_Send)send184771)->info = (AST_Info)info3884;
string28337 = (Object)new_Type_String(L"bla a");
constant35876 = (Object)new_AST_Constant((Object)string28337);
// on:
send184772 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35876);
((AST_Send)send184772)->info = (AST_Info)info3884;
assign22696 = (Object)new_AST_Assign((Object)localvariable26767, (Object)send184772);
// match:
send184773 = (Object)new_AST_Send((Object)localvariable26766, (Object)symbol35843, 1, (Object)localvariable26767);
((AST_Send)send184773)->info = (AST_Info)info3884;
// should
send184774 = (Object)new_AST_Send((Object)send184773, (Object)symbol35983, 0);
((AST_Send)send184774)->info = (AST_Info)info3884;
// be
send184775 = (Object)new_AST_Send((Object)send184774, (Object)symbol35989, 0);
((AST_Send)send184775)->info = (AST_Info)info3884;
// isNil
send184776 = (Object)new_AST_Send((Object)send184775, (Object)SMB_isNil, 0);
((AST_Send)send184776)->info = (AST_Info)info3884;
// position
send184777 = (Object)new_AST_Send((Object)localvariable26767, (Object)symbol35988, 0);
((AST_Send)send184777)->info = (AST_Info)info3884;
// should
send184778 = (Object)new_AST_Send((Object)send184777, (Object)symbol35983, 0);
((AST_Send)send184778)->info = (AST_Info)info3884;
smallint21175 = (Object)new_Type_SmallInt(0);
constant35877 = (Object)new_AST_Constant((Object)smallint21175);
// =
send184779 = (Object)new_AST_Send((Object)send184778, (Object)SMB__equal, 1, (Object)constant35877);
((AST_Send)send184779)->info = (AST_Info)info3884;
string28338 = (Object)new_Type_String(L"test: d bla: c boe");
constant35878 = (Object)new_AST_Constant((Object)string28338);
// on:
send184780 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35878);
((AST_Send)send184780)->info = (AST_Info)info3884;
assign22697 = (Object)new_AST_Assign((Object)localvariable26767, (Object)send184780);
// match:
send184781 = (Object)new_AST_Send((Object)localvariable26766, (Object)symbol35843, 1, (Object)localvariable26767);
((AST_Send)send184781)->info = (AST_Info)info3884;
assign22698 = (Object)new_AST_Assign((Object)localvariable26768, (Object)send184781);
// class
send184782 = (Object)new_AST_Send((Object)localvariable26768, (Object)SMB_class, 0);
((AST_Send)send184782)->info = (AST_Info)info3884;
// should
send184783 = (Object)new_AST_Send((Object)send184782, (Object)symbol35983, 0);
((AST_Send)send184783)->info = (AST_Info)info3884;
// =
send184784 = (Object)new_AST_Send((Object)send184783, (Object)SMB__equal, 1, (Object)classreference4839);
((AST_Send)send184784)->info = (AST_Info)info3884;
// keywords
send184785 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35738, 0);
((AST_Send)send184785)->info = (AST_Info)info3884;
// should
send184786 = (Object)new_AST_Send((Object)send184785, (Object)symbol35983, 0);
((AST_Send)send184786)->info = (AST_Info)info3884;
symbol36019 = (Object)new_Type_Symbol_cached(L"with:with:");
string28339 = (Object)new_Type_String(L"test");
constant35879 = (Object)new_AST_Constant((Object)string28339);
string28340 = (Object)new_Type_String(L"bla");
constant35880 = (Object)new_AST_Constant((Object)string28340);
// with:with:
send184787 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol36019, 2, (Object)constant35879, (Object)constant35880);
((AST_Send)send184787)->info = (AST_Info)info3884;
// =
send184788 = (Object)new_AST_Send((Object)send184786, (Object)SMB__equal, 1, (Object)send184787);
((AST_Send)send184788)->info = (AST_Info)info3884;
// parameters
send184789 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35733, 0);
((AST_Send)send184789)->info = (AST_Info)info3884;
// size
send184790 = (Object)new_AST_Send((Object)send184789, (Object)SMB_size, 0);
((AST_Send)send184790)->info = (AST_Info)info3884;
// should
send184791 = (Object)new_AST_Send((Object)send184790, (Object)symbol35983, 0);
((AST_Send)send184791)->info = (AST_Info)info3884;
smallint21176 = (Object)new_Type_SmallInt(2);
constant35881 = (Object)new_AST_Constant((Object)smallint21176);
// =
send184792 = (Object)new_AST_Send((Object)send184791, (Object)SMB__equal, 1, (Object)constant35881);
((AST_Send)send184792)->info = (AST_Info)info3884;
// parameters
send184793 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35733, 0);
((AST_Send)send184793)->info = (AST_Info)info3884;
// first
send184794 = (Object)new_AST_Send((Object)send184793, (Object)symbol35693, 0);
((AST_Send)send184794)->info = (AST_Info)info3884;
// should
send184795 = (Object)new_AST_Send((Object)send184794, (Object)symbol35983, 0);
((AST_Send)send184795)->info = (AST_Info)info3884;
// new
send184796 = (Object)new_AST_Send((Object)classreference4822, (Object)symbol35612, 0);
((AST_Send)send184796)->info = (AST_Info)info3884;
string28341 = (Object)new_Type_String(L"d");
constant35882 = (Object)new_AST_Constant((Object)string28341);
// name:
send184797 = (Object)new_AST_Send((Object)send184796, (Object)symbol35721, 1, (Object)constant35882);
((AST_Send)send184797)->info = (AST_Info)info3884;
// =
send184798 = (Object)new_AST_Send((Object)send184795, (Object)SMB__equal, 1, (Object)send184797);
((AST_Send)send184798)->info = (AST_Info)info3884;
// parameters
send184799 = (Object)new_AST_Send((Object)localvariable26768, (Object)symbol35733, 0);
((AST_Send)send184799)->info = (AST_Info)info3884;
symbol36020 = (Object)new_Type_Symbol_cached(L"second");
// second
send184800 = (Object)new_AST_Send((Object)send184799, (Object)symbol36020, 0);
((AST_Send)send184800)->info = (AST_Info)info3884;
// should
send184801 = (Object)new_AST_Send((Object)send184800, (Object)symbol35983, 0);
((AST_Send)send184801)->info = (AST_Info)info3884;
// new
send184802 = (Object)new_AST_Send((Object)classreference4822, (Object)symbol35612, 0);
((AST_Send)send184802)->info = (AST_Info)info3884;
string28342 = (Object)new_Type_String(L"c");
constant35883 = (Object)new_AST_Constant((Object)string28342);
// name:
send184803 = (Object)new_AST_Send((Object)send184802, (Object)symbol35721, 1, (Object)constant35883);
((AST_Send)send184803)->info = (AST_Info)info3884;
// =
send184804 = (Object)new_AST_Send((Object)send184801, (Object)SMB__equal, 1, (Object)send184803);
((AST_Send)send184804)->info = (AST_Info)info3884;
// position
send184805 = (Object)new_AST_Send((Object)localvariable26767, (Object)symbol35988, 0);
((AST_Send)send184805)->info = (AST_Info)info3884;
// should
send184806 = (Object)new_AST_Send((Object)send184805, (Object)symbol35983, 0);
((AST_Send)send184806)->info = (AST_Info)info3884;
smallint21177 = (Object)new_Type_SmallInt(15);
constant35884 = (Object)new_AST_Constant((Object)smallint21177);
// =
send184807 = (Object)new_AST_Send((Object)send184806, (Object)SMB__equal, 1, (Object)constant35884);
((AST_Send)send184807)->info = (AST_Info)info3884;
method25447 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21455, 20, assign22693, assign22694, assign22695, send184754, send184758, send184762, send184768, send184771, assign22696, send184776, send184779, assign22697, assign22698, send184784, send184788, send184792, send184798, send184804, send184807, Self);
((AST_Method)method25447)->info = (AST_Info)info3884;
symbol35554 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure25445 = (Object)new_Runtime_MethodClosure(method25447);
store_method((Type_Class)class4034, (Type_Symbol)symbol35554, (Runtime_MethodClosure)methodclosure25445);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable26769 = (Object)new_AST_Variable_named(L"parser");
localvariable26770 = (Object)new_AST_Variable_named(L"ast");
array21456 = (Object)new_Type_Array_with(2, (Object)localvariable26769, (Object)localvariable26770);
// statements
send184808 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35743, 0);
string28343 = (Object)new_Type_String(L"testUnaryAndBinaryPrecedence");
string28344 = (Object)new_Type_String(L"testUnaryAndBinaryPrecedence\n\t| parser ast |\n\tparser := scparser statements.\n\t\n\tast := (parser match: (PEGStringScanner on: \'2 fib + 3 \')) first.\n\t\n\tast class should = ASTBinaryExpression.\n\tast receiver class should = ASTUnaryExpression.\n\tast receiver receiver class should = ASTNumber.\n\tast receiver receiver number should = \'2\'.\n\tast receiver selector asString should = \'fib\'.\n\t\n\tast selector asString should = \'+\'.\n\t\n\tast argument class should = ASTNumber.\n\tast argument number should = \'3\'.\n\t\n\t");
smallint21178 = (Object)new_Type_SmallInt(-1);
smallint21179 = (Object)new_Type_SmallInt(-1);
info3885 = (Object)new_AST_Info((Type_String)string28344,(Type_String)string28343, (Type_SmallInt)smallint21178, (Type_SmallInt)smallint21179);
((AST_Send)send184808)->info = (AST_Info)info3885;
assign22699 = (Object)new_AST_Assign((Object)localvariable26769, (Object)send184808);
string28345 = (Object)new_Type_String(L"2 fib + 3 ");
constant35885 = (Object)new_AST_Constant((Object)string28345);
// on:
send184809 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35885);
((AST_Send)send184809)->info = (AST_Info)info3885;
// match:
send184810 = (Object)new_AST_Send((Object)localvariable26769, (Object)symbol35843, 1, (Object)send184809);
((AST_Send)send184810)->info = (AST_Info)info3885;
// first
send184811 = (Object)new_AST_Send((Object)send184810, (Object)symbol35693, 0);
((AST_Send)send184811)->info = (AST_Info)info3885;
assign22700 = (Object)new_AST_Assign((Object)localvariable26770, (Object)send184811);
// class
send184812 = (Object)new_AST_Send((Object)localvariable26770, (Object)SMB_class, 0);
((AST_Send)send184812)->info = (AST_Info)info3885;
// should
send184813 = (Object)new_AST_Send((Object)send184812, (Object)symbol35983, 0);
((AST_Send)send184813)->info = (AST_Info)info3885;
// =
send184814 = (Object)new_AST_Send((Object)send184813, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184814)->info = (AST_Info)info3885;
// receiver
send184815 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35728, 0);
((AST_Send)send184815)->info = (AST_Info)info3885;
// class
send184816 = (Object)new_AST_Send((Object)send184815, (Object)SMB_class, 0);
((AST_Send)send184816)->info = (AST_Info)info3885;
// should
send184817 = (Object)new_AST_Send((Object)send184816, (Object)symbol35983, 0);
((AST_Send)send184817)->info = (AST_Info)info3885;
// =
send184818 = (Object)new_AST_Send((Object)send184817, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send184818)->info = (AST_Info)info3885;
// receiver
send184819 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35728, 0);
((AST_Send)send184819)->info = (AST_Info)info3885;
// receiver
send184820 = (Object)new_AST_Send((Object)send184819, (Object)symbol35728, 0);
((AST_Send)send184820)->info = (AST_Info)info3885;
// class
send184821 = (Object)new_AST_Send((Object)send184820, (Object)SMB_class, 0);
((AST_Send)send184821)->info = (AST_Info)info3885;
// should
send184822 = (Object)new_AST_Send((Object)send184821, (Object)symbol35983, 0);
((AST_Send)send184822)->info = (AST_Info)info3885;
// =
send184823 = (Object)new_AST_Send((Object)send184822, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184823)->info = (AST_Info)info3885;
// receiver
send184824 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35728, 0);
((AST_Send)send184824)->info = (AST_Info)info3885;
// receiver
send184825 = (Object)new_AST_Send((Object)send184824, (Object)symbol35728, 0);
((AST_Send)send184825)->info = (AST_Info)info3885;
// number
send184826 = (Object)new_AST_Send((Object)send184825, (Object)symbol35701, 0);
((AST_Send)send184826)->info = (AST_Info)info3885;
// should
send184827 = (Object)new_AST_Send((Object)send184826, (Object)symbol35983, 0);
((AST_Send)send184827)->info = (AST_Info)info3885;
string28346 = (Object)new_Type_String(L"2");
constant35886 = (Object)new_AST_Constant((Object)string28346);
// =
send184828 = (Object)new_AST_Send((Object)send184827, (Object)SMB__equal, 1, (Object)constant35886);
((AST_Send)send184828)->info = (AST_Info)info3885;
// receiver
send184829 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35728, 0);
((AST_Send)send184829)->info = (AST_Info)info3885;
// selector
send184830 = (Object)new_AST_Send((Object)send184829, (Object)symbol35626, 0);
((AST_Send)send184830)->info = (AST_Info)info3885;
// asString
send184831 = (Object)new_AST_Send((Object)send184830, (Object)SMB_asString, 0);
((AST_Send)send184831)->info = (AST_Info)info3885;
// should
send184832 = (Object)new_AST_Send((Object)send184831, (Object)symbol35983, 0);
((AST_Send)send184832)->info = (AST_Info)info3885;
string28347 = (Object)new_Type_String(L"fib");
constant35887 = (Object)new_AST_Constant((Object)string28347);
// =
send184833 = (Object)new_AST_Send((Object)send184832, (Object)SMB__equal, 1, (Object)constant35887);
((AST_Send)send184833)->info = (AST_Info)info3885;
// selector
send184834 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35626, 0);
((AST_Send)send184834)->info = (AST_Info)info3885;
// asString
send184835 = (Object)new_AST_Send((Object)send184834, (Object)SMB_asString, 0);
((AST_Send)send184835)->info = (AST_Info)info3885;
// should
send184836 = (Object)new_AST_Send((Object)send184835, (Object)symbol35983, 0);
((AST_Send)send184836)->info = (AST_Info)info3885;
string28348 = (Object)new_Type_String(L"+");
constant35888 = (Object)new_AST_Constant((Object)string28348);
// =
send184837 = (Object)new_AST_Send((Object)send184836, (Object)SMB__equal, 1, (Object)constant35888);
((AST_Send)send184837)->info = (AST_Info)info3885;
// argument
send184838 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35736, 0);
((AST_Send)send184838)->info = (AST_Info)info3885;
// class
send184839 = (Object)new_AST_Send((Object)send184838, (Object)SMB_class, 0);
((AST_Send)send184839)->info = (AST_Info)info3885;
// should
send184840 = (Object)new_AST_Send((Object)send184839, (Object)symbol35983, 0);
((AST_Send)send184840)->info = (AST_Info)info3885;
// =
send184841 = (Object)new_AST_Send((Object)send184840, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184841)->info = (AST_Info)info3885;
// argument
send184842 = (Object)new_AST_Send((Object)localvariable26770, (Object)symbol35736, 0);
((AST_Send)send184842)->info = (AST_Info)info3885;
// number
send184843 = (Object)new_AST_Send((Object)send184842, (Object)symbol35701, 0);
((AST_Send)send184843)->info = (AST_Info)info3885;
// should
send184844 = (Object)new_AST_Send((Object)send184843, (Object)symbol35983, 0);
((AST_Send)send184844)->info = (AST_Info)info3885;
string28349 = (Object)new_Type_String(L"3");
constant35889 = (Object)new_AST_Constant((Object)string28349);
// =
send184845 = (Object)new_AST_Send((Object)send184844, (Object)SMB__equal, 1, (Object)constant35889);
((AST_Send)send184845)->info = (AST_Info)info3885;
method25448 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21456, 11, assign22699, assign22700, send184814, send184818, send184823, send184828, send184833, send184837, send184841, send184845, Self);
((AST_Method)method25448)->info = (AST_Info)info3885;
symbol35582 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure25446 = (Object)new_Runtime_MethodClosure(method25448);
store_method((Type_Class)class4034, (Type_Symbol)symbol35582, (Runtime_MethodClosure)methodclosure25446);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable26771 = (Object)new_AST_Variable_named(L"parser");
localvariable26772 = (Object)new_AST_Variable_named(L"string");
localvariable26773 = (Object)new_AST_Variable_named(L"result");
localvariable26774 = (Object)new_AST_Variable_named(L"arg");
array21457 = (Object)new_Type_Array_with(4, (Object)localvariable26771, (Object)localvariable26772, (Object)localvariable26773, (Object)localvariable26774);
symbol36021 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send184846 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36021, 0);
string28350 = (Object)new_Type_String(L"testAnnotation");
string28351 = (Object)new_Type_String(L"testAnnotation\n\t| parser string result arg |\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\tparser := scparser annotation.\n\tstring := PEGStringScanner on: \'<abc: 1 def: (2 + 3) ghi: (3 b)>\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordAnnotation.\n\t(result keywords asArray collect: #asSymbol) should = ((Array new: 3)\n\tat: 1 put: #abc;\n\tat: 2 put: #def;\n\tat: 3 put: #ghi;\n\tyourself).\n\targ := result arguments first.\n\targ class should = ASTNumber.\n\targ := result arguments at: 2.\n\targ class should = ASTBinaryExpression.\n\targ := result arguments at: 3.\n\targ class should = ASTUnaryExpression.\n\tstring atEnd should be true.\n\tstring := PEGStringScanner on: \'<abc> \'.\n\tresult := parser match: string.\n\tresult class should = ASTUnaryAnnotation.\n\tresult selector asString should = \'abc\'.\n\tstring position should = 5.\n\tstring := PEGStringScanner on: \'<temps: 4 annotations: 1 statements: 2>\'.\n\tresult := parser match: string.\n\tresult class should = ASTKeywordAnnotation.\n\t(result keywords asArray collect: #asSymbol) should = ((Array new: 3)\n\tat: 1 put: \'temps\';\n\tat: 2 put: \'annotations\';\n\tat: 3 put: \'statements\';\n\tyourself).\n\tstring atEnd should be true.");
smallint21180 = (Object)new_Type_SmallInt(-1);
smallint21181 = (Object)new_Type_SmallInt(-1);
info3886 = (Object)new_AST_Info((Type_String)string28351,(Type_String)string28350, (Type_SmallInt)smallint21180, (Type_SmallInt)smallint21181);
((AST_Send)send184846)->info = (AST_Info)info3886;
assign22701 = (Object)new_AST_Assign((Object)localvariable26771, (Object)send184846);
string28352 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant35890 = (Object)new_AST_Constant((Object)string28352);
// on:
send184847 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35890);
((AST_Send)send184847)->info = (AST_Info)info3886;
assign22702 = (Object)new_AST_Assign((Object)localvariable26772, (Object)send184847);
// match:
send184848 = (Object)new_AST_Send((Object)localvariable26771, (Object)symbol35843, 1, (Object)localvariable26772);
((AST_Send)send184848)->info = (AST_Info)info3886;
assign22703 = (Object)new_AST_Assign((Object)localvariable26773, (Object)send184848);
// class
send184849 = (Object)new_AST_Send((Object)localvariable26773, (Object)SMB_class, 0);
((AST_Send)send184849)->info = (AST_Info)info3886;
// should
send184850 = (Object)new_AST_Send((Object)send184849, (Object)symbol35983, 0);
((AST_Send)send184850)->info = (AST_Info)info3886;
classreference4840 = (Object)new_Organization_ClassReference((Type_Class)class4060);

// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable26775 = (Object)new_AST_Variable_named(L"anObject");
array21458 = (Object)new_Type_Array_with(1, (Object)localvariable26775);
assign22704 = (Object)new_AST_Assign((Object)instancevariable6024, (Object)localvariable26775);
method25449 = (Object)new_AST_Method_with((Type_Array)array21458, (Type_Array)empty_Type_Array, 2, assign22704, Self);
string28353 = (Object)new_Type_String(L"arguments:");
string28354 = (Object)new_Type_String(L"arguments: anObject\n\targuments := anObject");
smallint21182 = (Object)new_Type_SmallInt(-1);
smallint21183 = (Object)new_Type_SmallInt(-1);
info3887 = (Object)new_AST_Info((Type_String)string28354,(Type_String)string28353, (Type_SmallInt)smallint21182, (Type_SmallInt)smallint21183);
((AST_Method)method25449)->info = (AST_Info)info3887;
methodclosure25447 = (Object)new_Runtime_MethodClosure(method25449);
store_method((Type_Class)class4060, (Type_Symbol)symbol35739, (Runtime_MethodClosure)methodclosure25447);


// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method25450 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6024);
string28355 = (Object)new_Type_String(L"arguments");
string28356 = (Object)new_Type_String(L"arguments\n\t^ arguments");
smallint21184 = (Object)new_Type_SmallInt(-1);
smallint21185 = (Object)new_Type_SmallInt(-1);
info3888 = (Object)new_AST_Info((Type_String)string28356,(Type_String)string28355, (Type_SmallInt)smallint21184, (Type_SmallInt)smallint21185);
((AST_Method)method25450)->info = (AST_Info)info3888;
methodclosure25448 = (Object)new_Runtime_MethodClosure(method25450);
store_method((Type_Class)class4060, (Type_Symbol)symbol35627, (Runtime_MethodClosure)methodclosure25448);

// =
send184851 = (Object)new_AST_Send((Object)send184850, (Object)SMB__equal, 1, (Object)classreference4840);
((AST_Send)send184851)->info = (AST_Info)info3886;
// keywords
send184852 = (Object)new_AST_Send((Object)localvariable26773, (Object)symbol35738, 0);
((AST_Send)send184852)->info = (AST_Info)info3886;
// asArray
send184853 = (Object)new_AST_Send((Object)send184852, (Object)SMB_asArray, 0);
((AST_Send)send184853)->info = (AST_Info)info3886;
constant35891 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send184854 = (Object)new_AST_Send((Object)send184853, (Object)symbol35899, 1, (Object)constant35891);
((AST_Send)send184854)->info = (AST_Info)info3886;
// should
send184855 = (Object)new_AST_Send((Object)send184854, (Object)symbol35983, 0);
((AST_Send)send184855)->info = (AST_Info)info3886;
localvariable26776 = (Object)new_AST_Variable_named(L"receiver");
array21459 = (Object)new_Type_Array_with(1, (Object)localvariable26776);
smallint21186 = (Object)new_Type_SmallInt(1);
constant35892 = (Object)new_AST_Constant((Object)smallint21186);
symbol36022 = (Object)new_Type_Symbol_cached(L"abc");
constant35893 = (Object)new_AST_Constant((Object)symbol36022);
// at:put:
send184856 = (Object)new_AST_Send((Object)localvariable26776, (Object)SMB_at_put_, 2, (Object)constant35892, (Object)constant35893);
((AST_Send)send184856)->info = (AST_Info)info3886;
smallint21187 = (Object)new_Type_SmallInt(2);
constant35894 = (Object)new_AST_Constant((Object)smallint21187);
symbol36023 = (Object)new_Type_Symbol_cached(L"def");
constant35895 = (Object)new_AST_Constant((Object)symbol36023);
// at:put:
send184857 = (Object)new_AST_Send((Object)localvariable26776, (Object)SMB_at_put_, 2, (Object)constant35894, (Object)constant35895);
((AST_Send)send184857)->info = (AST_Info)info3886;
smallint21188 = (Object)new_Type_SmallInt(3);
constant35896 = (Object)new_AST_Constant((Object)smallint21188);
symbol36024 = (Object)new_Type_Symbol_cached(L"ghi");
constant35897 = (Object)new_AST_Constant((Object)symbol36024);
// at:put:
send184858 = (Object)new_AST_Send((Object)localvariable26776, (Object)SMB_at_put_, 2, (Object)constant35896, (Object)constant35897);
((AST_Send)send184858)->info = (AST_Info)info3886;
// yourself
send184859 = (Object)new_AST_Send((Object)localvariable26776, (Object)symbol35515, 0);
((AST_Send)send184859)->info = (AST_Info)info3886;
block12809 = (Object)new_AST_Block_with((Type_Array)array21459, (Type_Array)empty_Type_Array, 1, 4, send184856, send184857, send184858, send184859);
smallint21189 = (Object)new_Type_SmallInt(3);
constant35898 = (Object)new_AST_Constant((Object)smallint21189);
// new:
send184860 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35898);
((AST_Send)send184860)->info = (AST_Info)info3886;
// value:
send184861 = (Object)new_AST_Send((Object)block12809, (Object)SMB_value_, 1, (Object)send184860);
((AST_Send)send184861)->info = (AST_Info)info3886;
// =
send184862 = (Object)new_AST_Send((Object)send184855, (Object)SMB__equal, 1, (Object)send184861);
((AST_Send)send184862)->info = (AST_Info)info3886;
// arguments
send184863 = (Object)new_AST_Send((Object)localvariable26773, (Object)symbol35627, 0);
((AST_Send)send184863)->info = (AST_Info)info3886;
// first
send184864 = (Object)new_AST_Send((Object)send184863, (Object)symbol35693, 0);
((AST_Send)send184864)->info = (AST_Info)info3886;
assign22705 = (Object)new_AST_Assign((Object)localvariable26774, (Object)send184864);
// class
send184865 = (Object)new_AST_Send((Object)localvariable26774, (Object)SMB_class, 0);
((AST_Send)send184865)->info = (AST_Info)info3886;
// should
send184866 = (Object)new_AST_Send((Object)send184865, (Object)symbol35983, 0);
((AST_Send)send184866)->info = (AST_Info)info3886;
// =
send184867 = (Object)new_AST_Send((Object)send184866, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send184867)->info = (AST_Info)info3886;
// arguments
send184868 = (Object)new_AST_Send((Object)localvariable26773, (Object)symbol35627, 0);
((AST_Send)send184868)->info = (AST_Info)info3886;
smallint21190 = (Object)new_Type_SmallInt(2);
constant35899 = (Object)new_AST_Constant((Object)smallint21190);
// at:
send184869 = (Object)new_AST_Send((Object)send184868, (Object)SMB_at_, 1, (Object)constant35899);
((AST_Send)send184869)->info = (AST_Info)info3886;
assign22706 = (Object)new_AST_Assign((Object)localvariable26774, (Object)send184869);
// class
send184870 = (Object)new_AST_Send((Object)localvariable26774, (Object)SMB_class, 0);
((AST_Send)send184870)->info = (AST_Info)info3886;
// should
send184871 = (Object)new_AST_Send((Object)send184870, (Object)symbol35983, 0);
((AST_Send)send184871)->info = (AST_Info)info3886;
// =
send184872 = (Object)new_AST_Send((Object)send184871, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send184872)->info = (AST_Info)info3886;
// arguments
send184873 = (Object)new_AST_Send((Object)localvariable26773, (Object)symbol35627, 0);
((AST_Send)send184873)->info = (AST_Info)info3886;
smallint21191 = (Object)new_Type_SmallInt(3);
constant35900 = (Object)new_AST_Constant((Object)smallint21191);
// at:
send184874 = (Object)new_AST_Send((Object)send184873, (Object)SMB_at_, 1, (Object)constant35900);
((AST_Send)send184874)->info = (AST_Info)info3886;
assign22707 = (Object)new_AST_Assign((Object)localvariable26774, (Object)send184874);
// class
send184875 = (Object)new_AST_Send((Object)localvariable26774, (Object)SMB_class, 0);
((AST_Send)send184875)->info = (AST_Info)info3886;
// should
send184876 = (Object)new_AST_Send((Object)send184875, (Object)symbol35983, 0);
((AST_Send)send184876)->info = (AST_Info)info3886;
// =
send184877 = (Object)new_AST_Send((Object)send184876, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send184877)->info = (AST_Info)info3886;
// atEnd
send184878 = (Object)new_AST_Send((Object)localvariable26772, (Object)SMB_atEnd, 0);
((AST_Send)send184878)->info = (AST_Info)info3886;
// should
send184879 = (Object)new_AST_Send((Object)send184878, (Object)symbol35983, 0);
((AST_Send)send184879)->info = (AST_Info)info3886;
// be
send184880 = (Object)new_AST_Send((Object)send184879, (Object)symbol35989, 0);
((AST_Send)send184880)->info = (AST_Info)info3886;
// true
send184881 = (Object)new_AST_Send((Object)send184880, (Object)symbol35999, 0);
((AST_Send)send184881)->info = (AST_Info)info3886;
string28357 = (Object)new_Type_String(L"<abc> ");
constant35901 = (Object)new_AST_Constant((Object)string28357);
// on:
send184882 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35901);
((AST_Send)send184882)->info = (AST_Info)info3886;
assign22708 = (Object)new_AST_Assign((Object)localvariable26772, (Object)send184882);
// match:
send184883 = (Object)new_AST_Send((Object)localvariable26771, (Object)symbol35843, 1, (Object)localvariable26772);
((AST_Send)send184883)->info = (AST_Info)info3886;
assign22709 = (Object)new_AST_Assign((Object)localvariable26773, (Object)send184883);
// class
send184884 = (Object)new_AST_Send((Object)localvariable26773, (Object)SMB_class, 0);
((AST_Send)send184884)->info = (AST_Info)info3886;
// should
send184885 = (Object)new_AST_Send((Object)send184884, (Object)symbol35983, 0);
((AST_Send)send184885)->info = (AST_Info)info3886;
classreference4841 = (Object)new_Organization_ClassReference((Type_Class)class4064);
// =
send184886 = (Object)new_AST_Send((Object)send184885, (Object)SMB__equal, 1, (Object)classreference4841);
((AST_Send)send184886)->info = (AST_Info)info3886;
// selector
send184887 = (Object)new_AST_Send((Object)localvariable26773, (Object)symbol35626, 0);
((AST_Send)send184887)->info = (AST_Info)info3886;
// asString
send184888 = (Object)new_AST_Send((Object)send184887, (Object)SMB_asString, 0);
((AST_Send)send184888)->info = (AST_Info)info3886;
// should
send184889 = (Object)new_AST_Send((Object)send184888, (Object)symbol35983, 0);
((AST_Send)send184889)->info = (AST_Info)info3886;
string28358 = (Object)new_Type_String(L"abc");
constant35902 = (Object)new_AST_Constant((Object)string28358);
// =
send184890 = (Object)new_AST_Send((Object)send184889, (Object)SMB__equal, 1, (Object)constant35902);
((AST_Send)send184890)->info = (AST_Info)info3886;
// position
send184891 = (Object)new_AST_Send((Object)localvariable26772, (Object)symbol35988, 0);
((AST_Send)send184891)->info = (AST_Info)info3886;
// should
send184892 = (Object)new_AST_Send((Object)send184891, (Object)symbol35983, 0);
((AST_Send)send184892)->info = (AST_Info)info3886;
smallint21192 = (Object)new_Type_SmallInt(5);
constant35903 = (Object)new_AST_Constant((Object)smallint21192);
// =
send184893 = (Object)new_AST_Send((Object)send184892, (Object)SMB__equal, 1, (Object)constant35903);
((AST_Send)send184893)->info = (AST_Info)info3886;
string28359 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant35904 = (Object)new_AST_Constant((Object)string28359);
// on:
send184894 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35904);
((AST_Send)send184894)->info = (AST_Info)info3886;
assign22710 = (Object)new_AST_Assign((Object)localvariable26772, (Object)send184894);
// match:
send184895 = (Object)new_AST_Send((Object)localvariable26771, (Object)symbol35843, 1, (Object)localvariable26772);
((AST_Send)send184895)->info = (AST_Info)info3886;
assign22711 = (Object)new_AST_Assign((Object)localvariable26773, (Object)send184895);
// class
send184896 = (Object)new_AST_Send((Object)localvariable26773, (Object)SMB_class, 0);
((AST_Send)send184896)->info = (AST_Info)info3886;
// should
send184897 = (Object)new_AST_Send((Object)send184896, (Object)symbol35983, 0);
((AST_Send)send184897)->info = (AST_Info)info3886;
// =
send184898 = (Object)new_AST_Send((Object)send184897, (Object)SMB__equal, 1, (Object)classreference4840);
((AST_Send)send184898)->info = (AST_Info)info3886;
// keywords
send184899 = (Object)new_AST_Send((Object)localvariable26773, (Object)symbol35738, 0);
((AST_Send)send184899)->info = (AST_Info)info3886;
// asArray
send184900 = (Object)new_AST_Send((Object)send184899, (Object)SMB_asArray, 0);
((AST_Send)send184900)->info = (AST_Info)info3886;
constant35905 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send184901 = (Object)new_AST_Send((Object)send184900, (Object)symbol35899, 1, (Object)constant35905);
((AST_Send)send184901)->info = (AST_Info)info3886;
// should
send184902 = (Object)new_AST_Send((Object)send184901, (Object)symbol35983, 0);
((AST_Send)send184902)->info = (AST_Info)info3886;
localvariable26777 = (Object)new_AST_Variable_named(L"receiver");
array21460 = (Object)new_Type_Array_with(1, (Object)localvariable26777);
smallint21193 = (Object)new_Type_SmallInt(1);
constant35906 = (Object)new_AST_Constant((Object)smallint21193);
string28360 = (Object)new_Type_String(L"temps");
constant35907 = (Object)new_AST_Constant((Object)string28360);
// at:put:
send184903 = (Object)new_AST_Send((Object)localvariable26777, (Object)SMB_at_put_, 2, (Object)constant35906, (Object)constant35907);
((AST_Send)send184903)->info = (AST_Info)info3886;
smallint21194 = (Object)new_Type_SmallInt(2);
constant35908 = (Object)new_AST_Constant((Object)smallint21194);
string28361 = (Object)new_Type_String(L"annotations");
constant35909 = (Object)new_AST_Constant((Object)string28361);
// at:put:
send184904 = (Object)new_AST_Send((Object)localvariable26777, (Object)SMB_at_put_, 2, (Object)constant35908, (Object)constant35909);
((AST_Send)send184904)->info = (AST_Info)info3886;
smallint21195 = (Object)new_Type_SmallInt(3);
constant35910 = (Object)new_AST_Constant((Object)smallint21195);
string28362 = (Object)new_Type_String(L"statements");
constant35911 = (Object)new_AST_Constant((Object)string28362);
// at:put:
send184905 = (Object)new_AST_Send((Object)localvariable26777, (Object)SMB_at_put_, 2, (Object)constant35910, (Object)constant35911);
((AST_Send)send184905)->info = (AST_Info)info3886;
// yourself
send184906 = (Object)new_AST_Send((Object)localvariable26777, (Object)symbol35515, 0);
((AST_Send)send184906)->info = (AST_Info)info3886;
block12810 = (Object)new_AST_Block_with((Type_Array)array21460, (Type_Array)empty_Type_Array, 1, 4, send184903, send184904, send184905, send184906);
smallint21196 = (Object)new_Type_SmallInt(3);
constant35912 = (Object)new_AST_Constant((Object)smallint21196);
// new:
send184907 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35602, 1, (Object)constant35912);
((AST_Send)send184907)->info = (AST_Info)info3886;
// value:
send184908 = (Object)new_AST_Send((Object)block12810, (Object)SMB_value_, 1, (Object)send184907);
((AST_Send)send184908)->info = (AST_Info)info3886;
// =
send184909 = (Object)new_AST_Send((Object)send184902, (Object)SMB__equal, 1, (Object)send184908);
((AST_Send)send184909)->info = (AST_Info)info3886;
// atEnd
send184910 = (Object)new_AST_Send((Object)localvariable26772, (Object)SMB_atEnd, 0);
((AST_Send)send184910)->info = (AST_Info)info3886;
// should
send184911 = (Object)new_AST_Send((Object)send184910, (Object)symbol35983, 0);
((AST_Send)send184911)->info = (AST_Info)info3886;
// be
send184912 = (Object)new_AST_Send((Object)send184911, (Object)symbol35989, 0);
((AST_Send)send184912)->info = (AST_Info)info3886;
// true
send184913 = (Object)new_AST_Send((Object)send184912, (Object)symbol35999, 0);
((AST_Send)send184913)->info = (AST_Info)info3886;
method25451 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21457, 23, assign22701, assign22702, assign22703, send184851, send184862, assign22705, send184867, assign22706, send184872, assign22707, send184877, send184881, assign22708, assign22709, send184886, send184890, send184893, assign22710, assign22711, send184898, send184909, send184913, Self);
((AST_Method)method25451)->info = (AST_Info)info3886;
symbol35579 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure25449 = (Object)new_Runtime_MethodClosure(method25451);
store_method((Type_Class)class4034, (Type_Symbol)symbol35579, (Runtime_MethodClosure)methodclosure25449);


// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable26778 = (Object)new_AST_Variable_named(L"parser");
localvariable26779 = (Object)new_AST_Variable_named(L"string");
localvariable26780 = (Object)new_AST_Variable_named(L"result");
array21461 = (Object)new_Type_Array_with(3, (Object)localvariable26778, (Object)localvariable26779, (Object)localvariable26780);
symbol36025 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send184914 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36025, 0);
string28363 = (Object)new_Type_String(L"testSubExpression");
string28364 = (Object)new_Type_String(L"testSubExpression\n\t| parser string result |\n\tparser := scparser subExpression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\t(parser match: string) should be isNil.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");
smallint21197 = (Object)new_Type_SmallInt(-1);
smallint21198 = (Object)new_Type_SmallInt(-1);
info3889 = (Object)new_AST_Info((Type_String)string28364,(Type_String)string28363, (Type_SmallInt)smallint21197, (Type_SmallInt)smallint21198);
((AST_Send)send184914)->info = (AST_Info)info3889;
assign22712 = (Object)new_AST_Assign((Object)localvariable26778, (Object)send184914);
string28365 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant35913 = (Object)new_AST_Constant((Object)string28365);
// on:
send184915 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35913);
((AST_Send)send184915)->info = (AST_Info)info3889;
assign22713 = (Object)new_AST_Assign((Object)localvariable26779, (Object)send184915);
// match:
send184916 = (Object)new_AST_Send((Object)localvariable26778, (Object)symbol35843, 1, (Object)localvariable26779);
((AST_Send)send184916)->info = (AST_Info)info3889;
// should
send184917 = (Object)new_AST_Send((Object)send184916, (Object)symbol35983, 0);
((AST_Send)send184917)->info = (AST_Info)info3889;
// be
send184918 = (Object)new_AST_Send((Object)send184917, (Object)symbol35989, 0);
((AST_Send)send184918)->info = (AST_Info)info3889;
// isNil
send184919 = (Object)new_AST_Send((Object)send184918, (Object)SMB_isNil, 0);
((AST_Send)send184919)->info = (AST_Info)info3889;
string28366 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant35914 = (Object)new_AST_Constant((Object)string28366);
// on:
send184920 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35914);
((AST_Send)send184920)->info = (AST_Info)info3889;
assign22714 = (Object)new_AST_Assign((Object)localvariable26779, (Object)send184920);
// match:
send184921 = (Object)new_AST_Send((Object)localvariable26778, (Object)symbol35843, 1, (Object)localvariable26779);
((AST_Send)send184921)->info = (AST_Info)info3889;
assign22715 = (Object)new_AST_Assign((Object)localvariable26780, (Object)send184921);
// class
send184922 = (Object)new_AST_Send((Object)localvariable26780, (Object)SMB_class, 0);
((AST_Send)send184922)->info = (AST_Info)info3889;
// should
send184923 = (Object)new_AST_Send((Object)send184922, (Object)symbol35983, 0);
((AST_Send)send184923)->info = (AST_Info)info3889;
// =
send184924 = (Object)new_AST_Send((Object)send184923, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184924)->info = (AST_Info)info3889;
// variable
send184925 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35757, 0);
((AST_Send)send184925)->info = (AST_Info)info3889;
// class
send184926 = (Object)new_AST_Send((Object)send184925, (Object)SMB_class, 0);
((AST_Send)send184926)->info = (AST_Info)info3889;
// should
send184927 = (Object)new_AST_Send((Object)send184926, (Object)symbol35983, 0);
((AST_Send)send184927)->info = (AST_Info)info3889;
// =
send184928 = (Object)new_AST_Send((Object)send184927, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184928)->info = (AST_Info)info3889;
// variable
send184929 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35757, 0);
((AST_Send)send184929)->info = (AST_Info)info3889;
// name
send184930 = (Object)new_AST_Send((Object)send184929, (Object)SMB_name, 0);
((AST_Send)send184930)->info = (AST_Info)info3889;
// should
send184931 = (Object)new_AST_Send((Object)send184930, (Object)symbol35983, 0);
((AST_Send)send184931)->info = (AST_Info)info3889;
string28367 = (Object)new_Type_String(L"a");
constant35915 = (Object)new_AST_Constant((Object)string28367);
// =
send184932 = (Object)new_AST_Send((Object)send184931, (Object)SMB__equal, 1, (Object)constant35915);
((AST_Send)send184932)->info = (AST_Info)info3889;
// expression
send184933 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35755, 0);
((AST_Send)send184933)->info = (AST_Info)info3889;
assign22716 = (Object)new_AST_Assign((Object)localvariable26780, (Object)send184933);
// class
send184934 = (Object)new_AST_Send((Object)localvariable26780, (Object)SMB_class, 0);
((AST_Send)send184934)->info = (AST_Info)info3889;
// should
send184935 = (Object)new_AST_Send((Object)send184934, (Object)symbol35983, 0);
((AST_Send)send184935)->info = (AST_Info)info3889;
// =
send184936 = (Object)new_AST_Send((Object)send184935, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184936)->info = (AST_Info)info3889;
// variable
send184937 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35757, 0);
((AST_Send)send184937)->info = (AST_Info)info3889;
// class
send184938 = (Object)new_AST_Send((Object)send184937, (Object)SMB_class, 0);
((AST_Send)send184938)->info = (AST_Info)info3889;
// should
send184939 = (Object)new_AST_Send((Object)send184938, (Object)symbol35983, 0);
((AST_Send)send184939)->info = (AST_Info)info3889;
// =
send184940 = (Object)new_AST_Send((Object)send184939, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184940)->info = (AST_Info)info3889;
// variable
send184941 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35757, 0);
((AST_Send)send184941)->info = (AST_Info)info3889;
// name
send184942 = (Object)new_AST_Send((Object)send184941, (Object)SMB_name, 0);
((AST_Send)send184942)->info = (AST_Info)info3889;
// should
send184943 = (Object)new_AST_Send((Object)send184942, (Object)symbol35983, 0);
((AST_Send)send184943)->info = (AST_Info)info3889;
string28368 = (Object)new_Type_String(L"b");
constant35916 = (Object)new_AST_Constant((Object)string28368);
// =
send184944 = (Object)new_AST_Send((Object)send184943, (Object)SMB__equal, 1, (Object)constant35916);
((AST_Send)send184944)->info = (AST_Info)info3889;
// expression
send184945 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35755, 0);
((AST_Send)send184945)->info = (AST_Info)info3889;
assign22717 = (Object)new_AST_Assign((Object)localvariable26780, (Object)send184945);
// class
send184946 = (Object)new_AST_Send((Object)localvariable26780, (Object)SMB_class, 0);
((AST_Send)send184946)->info = (AST_Info)info3889;
// should
send184947 = (Object)new_AST_Send((Object)send184946, (Object)symbol35983, 0);
((AST_Send)send184947)->info = (AST_Info)info3889;
// =
send184948 = (Object)new_AST_Send((Object)send184947, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send184948)->info = (AST_Info)info3889;
// variable
send184949 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35757, 0);
((AST_Send)send184949)->info = (AST_Info)info3889;
// class
send184950 = (Object)new_AST_Send((Object)send184949, (Object)SMB_class, 0);
((AST_Send)send184950)->info = (AST_Info)info3889;
// should
send184951 = (Object)new_AST_Send((Object)send184950, (Object)symbol35983, 0);
((AST_Send)send184951)->info = (AST_Info)info3889;
// =
send184952 = (Object)new_AST_Send((Object)send184951, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184952)->info = (AST_Info)info3889;
// variable
send184953 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35757, 0);
((AST_Send)send184953)->info = (AST_Info)info3889;
// name
send184954 = (Object)new_AST_Send((Object)send184953, (Object)SMB_name, 0);
((AST_Send)send184954)->info = (AST_Info)info3889;
// should
send184955 = (Object)new_AST_Send((Object)send184954, (Object)symbol35983, 0);
((AST_Send)send184955)->info = (AST_Info)info3889;
string28369 = (Object)new_Type_String(L"c");
constant35917 = (Object)new_AST_Constant((Object)string28369);
// =
send184956 = (Object)new_AST_Send((Object)send184955, (Object)SMB__equal, 1, (Object)constant35917);
((AST_Send)send184956)->info = (AST_Info)info3889;
// expression
send184957 = (Object)new_AST_Send((Object)localvariable26780, (Object)symbol35755, 0);
((AST_Send)send184957)->info = (AST_Info)info3889;
// class
send184958 = (Object)new_AST_Send((Object)send184957, (Object)SMB_class, 0);
((AST_Send)send184958)->info = (AST_Info)info3889;
// should
send184959 = (Object)new_AST_Send((Object)send184958, (Object)symbol35983, 0);
((AST_Send)send184959)->info = (AST_Info)info3889;
// =
send184960 = (Object)new_AST_Send((Object)send184959, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send184960)->info = (AST_Info)info3889;
method25452 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21461, 18, assign22712, assign22713, send184919, assign22714, assign22715, send184924, send184928, send184932, assign22716, send184936, send184940, send184944, assign22717, send184948, send184952, send184956, send184960, Self);
((AST_Method)method25452)->info = (AST_Info)info3889;
symbol35599 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure25450 = (Object)new_Runtime_MethodClosure(method25452);
store_method((Type_Class)class4034, (Type_Symbol)symbol35599, (Runtime_MethodClosure)methodclosure25450);


// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable26781 = (Object)new_AST_Variable_named(L"string");
localvariable26782 = (Object)new_AST_Variable_named(L"result");
localvariable26783 = (Object)new_AST_Variable_named(L"var");
localvariable26784 = (Object)new_AST_Variable_named(L"parser");
array21462 = (Object)new_Type_Array_with(4, (Object)localvariable26781, (Object)localvariable26782, (Object)localvariable26783, (Object)localvariable26784);
symbol36026 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send184961 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36026, 0);
string28370 = (Object)new_Type_String(L"testBlockArguments");
string28371 = (Object)new_Type_String(L"testBlockArguments\n\t| string result var parser |\n\tparser := scparser blockArguments.\n\tstring := PEGStringScanner on: \':abcd :def\'.\n\tresult := parser match: string.\n\tstring position should = 10.\n\tresult class should = OrderedCollection.\n\tresult size should = 2.\n\tvar := result at: 1.\n\tvar class should = ASTVariable.\n\tvar name should = \'abcd\'.\n\tvar := result at: 2.\n\tvar class should = ASTVariable.\n\tvar name should = \'def\'.\n\tstring := PEGStringScanner on: \' :  abcd:   def \'.\n\tresult := parser match: string.\n\tstring position should = 16.\n\tresult class should = OrderedCollection.\n\tresult size should = 2.\n\tvar := result first.\n\tvar class should = ASTVariable.\n\tvar name should = \'abcd\'.\n\tvar := result at: 2.\n\tvar class should = ASTVariable.\n\tvar name should = \'def\'");
smallint21199 = (Object)new_Type_SmallInt(-1);
smallint21200 = (Object)new_Type_SmallInt(-1);
info3890 = (Object)new_AST_Info((Type_String)string28371,(Type_String)string28370, (Type_SmallInt)smallint21199, (Type_SmallInt)smallint21200);
((AST_Send)send184961)->info = (AST_Info)info3890;
assign22718 = (Object)new_AST_Assign((Object)localvariable26784, (Object)send184961);
string28372 = (Object)new_Type_String(L":abcd :def");
constant35918 = (Object)new_AST_Constant((Object)string28372);
// on:
send184962 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35918);
((AST_Send)send184962)->info = (AST_Info)info3890;
assign22719 = (Object)new_AST_Assign((Object)localvariable26781, (Object)send184962);
// match:
send184963 = (Object)new_AST_Send((Object)localvariable26784, (Object)symbol35843, 1, (Object)localvariable26781);
((AST_Send)send184963)->info = (AST_Info)info3890;
assign22720 = (Object)new_AST_Assign((Object)localvariable26782, (Object)send184963);
// position
send184964 = (Object)new_AST_Send((Object)localvariable26781, (Object)symbol35988, 0);
((AST_Send)send184964)->info = (AST_Info)info3890;
// should
send184965 = (Object)new_AST_Send((Object)send184964, (Object)symbol35983, 0);
((AST_Send)send184965)->info = (AST_Info)info3890;
smallint21201 = (Object)new_Type_SmallInt(10);
constant35919 = (Object)new_AST_Constant((Object)smallint21201);
// =
send184966 = (Object)new_AST_Send((Object)send184965, (Object)SMB__equal, 1, (Object)constant35919);
((AST_Send)send184966)->info = (AST_Info)info3890;
// class
send184967 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_class, 0);
((AST_Send)send184967)->info = (AST_Info)info3890;
// should
send184968 = (Object)new_AST_Send((Object)send184967, (Object)symbol35983, 0);
((AST_Send)send184968)->info = (AST_Info)info3890;
// =
send184969 = (Object)new_AST_Send((Object)send184968, (Object)SMB__equal, 1, (Object)classreference4804);
((AST_Send)send184969)->info = (AST_Info)info3890;
// size
send184970 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_size, 0);
((AST_Send)send184970)->info = (AST_Info)info3890;
// should
send184971 = (Object)new_AST_Send((Object)send184970, (Object)symbol35983, 0);
((AST_Send)send184971)->info = (AST_Info)info3890;
smallint21202 = (Object)new_Type_SmallInt(2);
constant35920 = (Object)new_AST_Constant((Object)smallint21202);
// =
send184972 = (Object)new_AST_Send((Object)send184971, (Object)SMB__equal, 1, (Object)constant35920);
((AST_Send)send184972)->info = (AST_Info)info3890;
smallint21203 = (Object)new_Type_SmallInt(1);
constant35921 = (Object)new_AST_Constant((Object)smallint21203);
// at:
send184973 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_at_, 1, (Object)constant35921);
((AST_Send)send184973)->info = (AST_Info)info3890;
assign22721 = (Object)new_AST_Assign((Object)localvariable26783, (Object)send184973);
// class
send184974 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_class, 0);
((AST_Send)send184974)->info = (AST_Info)info3890;
// should
send184975 = (Object)new_AST_Send((Object)send184974, (Object)symbol35983, 0);
((AST_Send)send184975)->info = (AST_Info)info3890;
// =
send184976 = (Object)new_AST_Send((Object)send184975, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184976)->info = (AST_Info)info3890;
// name
send184977 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_name, 0);
((AST_Send)send184977)->info = (AST_Info)info3890;
// should
send184978 = (Object)new_AST_Send((Object)send184977, (Object)symbol35983, 0);
((AST_Send)send184978)->info = (AST_Info)info3890;
string28373 = (Object)new_Type_String(L"abcd");
constant35922 = (Object)new_AST_Constant((Object)string28373);
// =
send184979 = (Object)new_AST_Send((Object)send184978, (Object)SMB__equal, 1, (Object)constant35922);
((AST_Send)send184979)->info = (AST_Info)info3890;
smallint21204 = (Object)new_Type_SmallInt(2);
constant35923 = (Object)new_AST_Constant((Object)smallint21204);
// at:
send184980 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_at_, 1, (Object)constant35923);
((AST_Send)send184980)->info = (AST_Info)info3890;
assign22722 = (Object)new_AST_Assign((Object)localvariable26783, (Object)send184980);
// class
send184981 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_class, 0);
((AST_Send)send184981)->info = (AST_Info)info3890;
// should
send184982 = (Object)new_AST_Send((Object)send184981, (Object)symbol35983, 0);
((AST_Send)send184982)->info = (AST_Info)info3890;
// =
send184983 = (Object)new_AST_Send((Object)send184982, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send184983)->info = (AST_Info)info3890;
// name
send184984 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_name, 0);
((AST_Send)send184984)->info = (AST_Info)info3890;
// should
send184985 = (Object)new_AST_Send((Object)send184984, (Object)symbol35983, 0);
((AST_Send)send184985)->info = (AST_Info)info3890;
string28374 = (Object)new_Type_String(L"def");
constant35924 = (Object)new_AST_Constant((Object)string28374);
// =
send184986 = (Object)new_AST_Send((Object)send184985, (Object)SMB__equal, 1, (Object)constant35924);
((AST_Send)send184986)->info = (AST_Info)info3890;
string28375 = (Object)new_Type_String(L" :  abcd:   def ");
constant35925 = (Object)new_AST_Constant((Object)string28375);
// on:
send184987 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35925);
((AST_Send)send184987)->info = (AST_Info)info3890;
assign22723 = (Object)new_AST_Assign((Object)localvariable26781, (Object)send184987);
// match:
send184988 = (Object)new_AST_Send((Object)localvariable26784, (Object)symbol35843, 1, (Object)localvariable26781);
((AST_Send)send184988)->info = (AST_Info)info3890;
assign22724 = (Object)new_AST_Assign((Object)localvariable26782, (Object)send184988);
// position
send184989 = (Object)new_AST_Send((Object)localvariable26781, (Object)symbol35988, 0);
((AST_Send)send184989)->info = (AST_Info)info3890;
// should
send184990 = (Object)new_AST_Send((Object)send184989, (Object)symbol35983, 0);
((AST_Send)send184990)->info = (AST_Info)info3890;
smallint21205 = (Object)new_Type_SmallInt(16);
constant35926 = (Object)new_AST_Constant((Object)smallint21205);
// =
send184991 = (Object)new_AST_Send((Object)send184990, (Object)SMB__equal, 1, (Object)constant35926);
((AST_Send)send184991)->info = (AST_Info)info3890;
// class
send184992 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_class, 0);
((AST_Send)send184992)->info = (AST_Info)info3890;
// should
send184993 = (Object)new_AST_Send((Object)send184992, (Object)symbol35983, 0);
((AST_Send)send184993)->info = (AST_Info)info3890;
// =
send184994 = (Object)new_AST_Send((Object)send184993, (Object)SMB__equal, 1, (Object)classreference4804);
((AST_Send)send184994)->info = (AST_Info)info3890;
// size
send184995 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_size, 0);
((AST_Send)send184995)->info = (AST_Info)info3890;
// should
send184996 = (Object)new_AST_Send((Object)send184995, (Object)symbol35983, 0);
((AST_Send)send184996)->info = (AST_Info)info3890;
smallint21206 = (Object)new_Type_SmallInt(2);
constant35927 = (Object)new_AST_Constant((Object)smallint21206);
// =
send184997 = (Object)new_AST_Send((Object)send184996, (Object)SMB__equal, 1, (Object)constant35927);
((AST_Send)send184997)->info = (AST_Info)info3890;
// first
send184998 = (Object)new_AST_Send((Object)localvariable26782, (Object)symbol35693, 0);
((AST_Send)send184998)->info = (AST_Info)info3890;
assign22725 = (Object)new_AST_Assign((Object)localvariable26783, (Object)send184998);
// class
send184999 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_class, 0);
((AST_Send)send184999)->info = (AST_Info)info3890;
// should
send185000 = (Object)new_AST_Send((Object)send184999, (Object)symbol35983, 0);
((AST_Send)send185000)->info = (AST_Info)info3890;
// =
send185001 = (Object)new_AST_Send((Object)send185000, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send185001)->info = (AST_Info)info3890;
// name
send185002 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_name, 0);
((AST_Send)send185002)->info = (AST_Info)info3890;
// should
send185003 = (Object)new_AST_Send((Object)send185002, (Object)symbol35983, 0);
((AST_Send)send185003)->info = (AST_Info)info3890;
string28376 = (Object)new_Type_String(L"abcd");
constant35928 = (Object)new_AST_Constant((Object)string28376);
// =
send185004 = (Object)new_AST_Send((Object)send185003, (Object)SMB__equal, 1, (Object)constant35928);
((AST_Send)send185004)->info = (AST_Info)info3890;
smallint21207 = (Object)new_Type_SmallInt(2);
constant35929 = (Object)new_AST_Constant((Object)smallint21207);
// at:
send185005 = (Object)new_AST_Send((Object)localvariable26782, (Object)SMB_at_, 1, (Object)constant35929);
((AST_Send)send185005)->info = (AST_Info)info3890;
assign22726 = (Object)new_AST_Assign((Object)localvariable26783, (Object)send185005);
// class
send185006 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_class, 0);
((AST_Send)send185006)->info = (AST_Info)info3890;
// should
send185007 = (Object)new_AST_Send((Object)send185006, (Object)symbol35983, 0);
((AST_Send)send185007)->info = (AST_Info)info3890;
// =
send185008 = (Object)new_AST_Send((Object)send185007, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send185008)->info = (AST_Info)info3890;
// name
send185009 = (Object)new_AST_Send((Object)localvariable26783, (Object)SMB_name, 0);
((AST_Send)send185009)->info = (AST_Info)info3890;
// should
send185010 = (Object)new_AST_Send((Object)send185009, (Object)symbol35983, 0);
((AST_Send)send185010)->info = (AST_Info)info3890;
string28377 = (Object)new_Type_String(L"def");
constant35930 = (Object)new_AST_Constant((Object)string28377);
// =
send185011 = (Object)new_AST_Send((Object)send185010, (Object)SMB__equal, 1, (Object)constant35930);
((AST_Send)send185011)->info = (AST_Info)info3890;
method25453 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21462, 24, assign22718, assign22719, assign22720, send184966, send184969, send184972, assign22721, send184976, send184979, assign22722, send184983, send184986, assign22723, assign22724, send184991, send184994, send184997, assign22725, send185001, send185004, assign22726, send185008, send185011, Self);
((AST_Method)method25453)->info = (AST_Info)info3890;
symbol35536 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure25451 = (Object)new_Runtime_MethodClosure(method25453);
store_method((Type_Class)class4034, (Type_Symbol)symbol35536, (Runtime_MethodClosure)methodclosure25451);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable26785 = (Object)new_AST_Variable_named(L"parser");
localvariable26786 = (Object)new_AST_Variable_named(L"string");
array21463 = (Object)new_Type_Array_with(2, (Object)localvariable26785, (Object)localvariable26786);
symbol36027 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send185012 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36027, 0);
string28378 = (Object)new_Type_String(L"testSymbolKeywords");
string28379 = (Object)new_Type_String(L"testSymbolKeywords\n\t| parser string |\n\tparser := scparser symbolKeywords.\n\tstring := PEGStringScanner on: \'abcd:def: \'.\n\t(parser match: string) should = \'abcd:def:\'.\n\tstring position should = 9.\n\tstring := PEGStringScanner on: \'abcd \'.\n\t(parser match: string) should be isNil.\n\tstring position should = 0");
smallint21208 = (Object)new_Type_SmallInt(-1);
smallint21209 = (Object)new_Type_SmallInt(-1);
info3891 = (Object)new_AST_Info((Type_String)string28379,(Type_String)string28378, (Type_SmallInt)smallint21208, (Type_SmallInt)smallint21209);
((AST_Send)send185012)->info = (AST_Info)info3891;
assign22727 = (Object)new_AST_Assign((Object)localvariable26785, (Object)send185012);
string28380 = (Object)new_Type_String(L"abcd:def: ");
constant35931 = (Object)new_AST_Constant((Object)string28380);
// on:
send185013 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35931);
((AST_Send)send185013)->info = (AST_Info)info3891;
assign22728 = (Object)new_AST_Assign((Object)localvariable26786, (Object)send185013);
// match:
send185014 = (Object)new_AST_Send((Object)localvariable26785, (Object)symbol35843, 1, (Object)localvariable26786);
((AST_Send)send185014)->info = (AST_Info)info3891;
// should
send185015 = (Object)new_AST_Send((Object)send185014, (Object)symbol35983, 0);
((AST_Send)send185015)->info = (AST_Info)info3891;
string28381 = (Object)new_Type_String(L"abcd:def:");
constant35932 = (Object)new_AST_Constant((Object)string28381);
// =
send185016 = (Object)new_AST_Send((Object)send185015, (Object)SMB__equal, 1, (Object)constant35932);
((AST_Send)send185016)->info = (AST_Info)info3891;
// position
send185017 = (Object)new_AST_Send((Object)localvariable26786, (Object)symbol35988, 0);
((AST_Send)send185017)->info = (AST_Info)info3891;
// should
send185018 = (Object)new_AST_Send((Object)send185017, (Object)symbol35983, 0);
((AST_Send)send185018)->info = (AST_Info)info3891;
smallint21210 = (Object)new_Type_SmallInt(9);
constant35933 = (Object)new_AST_Constant((Object)smallint21210);
// =
send185019 = (Object)new_AST_Send((Object)send185018, (Object)SMB__equal, 1, (Object)constant35933);
((AST_Send)send185019)->info = (AST_Info)info3891;
string28382 = (Object)new_Type_String(L"abcd ");
constant35934 = (Object)new_AST_Constant((Object)string28382);
// on:
send185020 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35934);
((AST_Send)send185020)->info = (AST_Info)info3891;
assign22729 = (Object)new_AST_Assign((Object)localvariable26786, (Object)send185020);
// match:
send185021 = (Object)new_AST_Send((Object)localvariable26785, (Object)symbol35843, 1, (Object)localvariable26786);
((AST_Send)send185021)->info = (AST_Info)info3891;
// should
send185022 = (Object)new_AST_Send((Object)send185021, (Object)symbol35983, 0);
((AST_Send)send185022)->info = (AST_Info)info3891;
// be
send185023 = (Object)new_AST_Send((Object)send185022, (Object)symbol35989, 0);
((AST_Send)send185023)->info = (AST_Info)info3891;
// isNil
send185024 = (Object)new_AST_Send((Object)send185023, (Object)SMB_isNil, 0);
((AST_Send)send185024)->info = (AST_Info)info3891;
// position
send185025 = (Object)new_AST_Send((Object)localvariable26786, (Object)symbol35988, 0);
((AST_Send)send185025)->info = (AST_Info)info3891;
// should
send185026 = (Object)new_AST_Send((Object)send185025, (Object)symbol35983, 0);
((AST_Send)send185026)->info = (AST_Info)info3891;
smallint21211 = (Object)new_Type_SmallInt(0);
constant35935 = (Object)new_AST_Constant((Object)smallint21211);
// =
send185027 = (Object)new_AST_Send((Object)send185026, (Object)SMB__equal, 1, (Object)constant35935);
((AST_Send)send185027)->info = (AST_Info)info3891;
method25454 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21463, 8, assign22727, assign22728, send185016, send185019, assign22729, send185024, send185027, Self);
((AST_Method)method25454)->info = (AST_Info)info3891;
symbol35564 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure25452 = (Object)new_Runtime_MethodClosure(method25454);
store_method((Type_Class)class4034, (Type_Symbol)symbol35564, (Runtime_MethodClosure)methodclosure25452);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable26787 = (Object)new_AST_Variable_named(L"parser");
localvariable26788 = (Object)new_AST_Variable_named(L"string");
localvariable26789 = (Object)new_AST_Variable_named(L"result");
array21464 = (Object)new_Type_Array_with(3, (Object)localvariable26787, (Object)localvariable26788, (Object)localvariable26789);
// messageExpression
send185028 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35990, 0);
string28383 = (Object)new_Type_String(L"testMessageExpression");
string28384 = (Object)new_Type_String(L"testMessageExpression\n\t| parser string result |\n\n\tparser := scparser messageExpression.\n\n\tstring := PEGStringScanner on: \'super+4\'.\n \tresult := (parser match: string).\n\tresult class should = ASTBinaryExpression.\n\tresult receiver class should = ASTSuper.\n\n\tstring := PEGStringScanner on: \'self a: 4 b: 3\'.\n \tresult := (parser match: string).\n\tresult class should = ASTMessageExpression.\n\tresult receiver class should = ASTSelf.\n\t\n\tstring := PEGStringScanner on: \'2 d\'.\n \tresult := (parser match: string).\n\tresult class should = ASTUnaryExpression.\n\tresult receiver class should = ASTNumber.\n\tresult receiver asInteger should = 2.\n\t");
smallint21212 = (Object)new_Type_SmallInt(-1);
smallint21213 = (Object)new_Type_SmallInt(-1);
info3892 = (Object)new_AST_Info((Type_String)string28384,(Type_String)string28383, (Type_SmallInt)smallint21212, (Type_SmallInt)smallint21213);
((AST_Send)send185028)->info = (AST_Info)info3892;
assign22730 = (Object)new_AST_Assign((Object)localvariable26787, (Object)send185028);
string28385 = (Object)new_Type_String(L"super+4");
constant35936 = (Object)new_AST_Constant((Object)string28385);
// on:
send185029 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35936);
((AST_Send)send185029)->info = (AST_Info)info3892;
assign22731 = (Object)new_AST_Assign((Object)localvariable26788, (Object)send185029);
// match:
send185030 = (Object)new_AST_Send((Object)localvariable26787, (Object)symbol35843, 1, (Object)localvariable26788);
((AST_Send)send185030)->info = (AST_Info)info3892;
assign22732 = (Object)new_AST_Assign((Object)localvariable26789, (Object)send185030);
// class
send185031 = (Object)new_AST_Send((Object)localvariable26789, (Object)SMB_class, 0);
((AST_Send)send185031)->info = (AST_Info)info3892;
// should
send185032 = (Object)new_AST_Send((Object)send185031, (Object)symbol35983, 0);
((AST_Send)send185032)->info = (AST_Info)info3892;
// =
send185033 = (Object)new_AST_Send((Object)send185032, (Object)SMB__equal, 1, (Object)classreference4828);
((AST_Send)send185033)->info = (AST_Info)info3892;
// receiver
send185034 = (Object)new_AST_Send((Object)localvariable26789, (Object)symbol35728, 0);
((AST_Send)send185034)->info = (AST_Info)info3892;
// class
send185035 = (Object)new_AST_Send((Object)send185034, (Object)SMB_class, 0);
((AST_Send)send185035)->info = (AST_Info)info3892;
// should
send185036 = (Object)new_AST_Send((Object)send185035, (Object)symbol35983, 0);
((AST_Send)send185036)->info = (AST_Info)info3892;
// =
send185037 = (Object)new_AST_Send((Object)send185036, (Object)SMB__equal, 1, (Object)classreference4833);
((AST_Send)send185037)->info = (AST_Info)info3892;
string28386 = (Object)new_Type_String(L"self a: 4 b: 3");
constant35937 = (Object)new_AST_Constant((Object)string28386);
// on:
send185038 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35937);
((AST_Send)send185038)->info = (AST_Info)info3892;
assign22733 = (Object)new_AST_Assign((Object)localvariable26788, (Object)send185038);
// match:
send185039 = (Object)new_AST_Send((Object)localvariable26787, (Object)symbol35843, 1, (Object)localvariable26788);
((AST_Send)send185039)->info = (AST_Info)info3892;
assign22734 = (Object)new_AST_Assign((Object)localvariable26789, (Object)send185039);
// class
send185040 = (Object)new_AST_Send((Object)localvariable26789, (Object)SMB_class, 0);
((AST_Send)send185040)->info = (AST_Info)info3892;
// should
send185041 = (Object)new_AST_Send((Object)send185040, (Object)symbol35983, 0);
((AST_Send)send185041)->info = (AST_Info)info3892;
// =
send185042 = (Object)new_AST_Send((Object)send185041, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send185042)->info = (AST_Info)info3892;
// receiver
send185043 = (Object)new_AST_Send((Object)localvariable26789, (Object)symbol35728, 0);
((AST_Send)send185043)->info = (AST_Info)info3892;
// class
send185044 = (Object)new_AST_Send((Object)send185043, (Object)SMB_class, 0);
((AST_Send)send185044)->info = (AST_Info)info3892;
// should
send185045 = (Object)new_AST_Send((Object)send185044, (Object)symbol35983, 0);
((AST_Send)send185045)->info = (AST_Info)info3892;
// =
send185046 = (Object)new_AST_Send((Object)send185045, (Object)SMB__equal, 1, (Object)classreference4826);
((AST_Send)send185046)->info = (AST_Info)info3892;
string28387 = (Object)new_Type_String(L"2 d");
constant35938 = (Object)new_AST_Constant((Object)string28387);
// on:
send185047 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant35938);
((AST_Send)send185047)->info = (AST_Info)info3892;
assign22735 = (Object)new_AST_Assign((Object)localvariable26788, (Object)send185047);
// match:
send185048 = (Object)new_AST_Send((Object)localvariable26787, (Object)symbol35843, 1, (Object)localvariable26788);
((AST_Send)send185048)->info = (AST_Info)info3892;
assign22736 = (Object)new_AST_Assign((Object)localvariable26789, (Object)send185048);
// class
send185049 = (Object)new_AST_Send((Object)localvariable26789, (Object)SMB_class, 0);
((AST_Send)send185049)->info = (AST_Info)info3892;
// should
send185050 = (Object)new_AST_Send((Object)send185049, (Object)symbol35983, 0);
((AST_Send)send185050)->info = (AST_Info)info3892;
// =
send185051 = (Object)new_AST_Send((Object)send185050, (Object)SMB__equal, 1, (Object)classreference4824);
((AST_Send)send185051)->info = (AST_Info)info3892;
// receiver
send185052 = (Object)new_AST_Send((Object)localvariable26789, (Object)symbol35728, 0);
((AST_Send)send185052)->info = (AST_Info)info3892;
// class
send185053 = (Object)new_AST_Send((Object)send185052, (Object)SMB_class, 0);
((AST_Send)send185053)->info = (AST_Info)info3892;
// should
send185054 = (Object)new_AST_Send((Object)send185053, (Object)symbol35983, 0);
((AST_Send)send185054)->info = (AST_Info)info3892;
// =
send185055 = (Object)new_AST_Send((Object)send185054, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send185055)->info = (AST_Info)info3892;
// receiver
send185056 = (Object)new_AST_Send((Object)localvariable26789, (Object)symbol35728, 0);
((AST_Send)send185056)->info = (AST_Info)info3892;
// asInteger
send185057 = (Object)new_AST_Send((Object)send185056, (Object)symbol35703, 0);
((AST_Send)send185057)->info = (AST_Info)info3892;
// should
send185058 = (Object)new_AST_Send((Object)send185057, (Object)symbol35983, 0);
((AST_Send)send185058)->info = (AST_Info)info3892;
smallint21214 = (Object)new_Type_SmallInt(2);
constant35939 = (Object)new_AST_Constant((Object)smallint21214);
// =
send185059 = (Object)new_AST_Send((Object)send185058, (Object)SMB__equal, 1, (Object)constant35939);
((AST_Send)send185059)->info = (AST_Info)info3892;
method25455 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21464, 15, assign22730, assign22731, assign22732, send185033, send185037, assign22733, assign22734, send185042, send185046, assign22735, assign22736, send185051, send185055, send185059, Self);
((AST_Method)method25455)->info = (AST_Info)info3892;
symbol35572 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure25453 = (Object)new_Runtime_MethodClosure(method25455);
store_method((Type_Class)class4034, (Type_Symbol)symbol35572, (Runtime_MethodClosure)methodclosure25453);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new
classreference4842 = (Object)new_Organization_ClassReference((Type_Class)class4035);

// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string28388 = (Object)new_Type_String(L"RETURN");
constant35940 = (Object)new_AST_Constant((Object)string28388);
string28389 = (Object)new_Type_String(L"^");
constant35941 = (Object)new_AST_Constant((Object)string28389);
// asPEG
send185060 = (Object)new_AST_Send((Object)constant35941, (Object)symbol35639, 0);
string28390 = (Object)new_Type_String(L"initializeReturn");
string28391 = (Object)new_Type_String(L"initializeReturn\n\t^ PEGParser\n\t\tnamed: \'RETURN\'\n\t\tparsing: (\'^\' asPEG omit: true) & self finalExpression\n\t\tsemantics: [ :expression |\n\t\t\tASTReturnExpression new expression: expression\n\t\t]");
smallint21215 = (Object)new_Type_SmallInt(-1);
smallint21216 = (Object)new_Type_SmallInt(-1);
info3893 = (Object)new_AST_Info((Type_String)string28391,(Type_String)string28390, (Type_SmallInt)smallint21215, (Type_SmallInt)smallint21216);
((AST_Send)send185060)->info = (AST_Info)info3893;
symbol35845 = (Object)new_Type_Symbol_cached(L"omit:");
// omit:
send185061 = (Object)new_AST_Send((Object)send185060, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185061)->info = (AST_Info)info3893;
// finalExpression
send185062 = (Object)new_AST_Send((Object)Self, (Object)symbol36002, 0);
((AST_Send)send185062)->info = (AST_Info)info3893;
// &
send185063 = (Object)new_AST_Send((Object)send185061, (Object)SMB__and, 1, (Object)send185062);
((AST_Send)send185063)->info = (AST_Info)info3893;
localvariable26790 = (Object)new_AST_Variable_named(L"expression");
array21465 = (Object)new_Type_Array_with(1, (Object)localvariable26790);
// new
send185064 = (Object)new_AST_Send((Object)classreference4827, (Object)symbol35612, 0);
((AST_Send)send185064)->info = (AST_Info)info3893;
// expression:
send185065 = (Object)new_AST_Send((Object)send185064, (Object)symbol35754, 1, (Object)localvariable26790);
((AST_Send)send185065)->info = (AST_Info)info3893;
block12811 = (Object)new_AST_Block_with((Type_Array)array21465, (Type_Array)empty_Type_Array, 1, 1, send185065);
// named:parsing:semantics:
send185066 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35940, (Object)send185063, (Object)block12811);
((AST_Send)send185066)->info = (AST_Info)info3893;
method25456 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185066);
((AST_Method)method25456)->info = (AST_Info)info3893;
symbol35787 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure25454 = (Object)new_Runtime_MethodClosure(method25456);
store_method((Type_Class)class4035, (Type_Symbol)symbol35787, (Runtime_MethodClosure)methodclosure25454);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
symbol36028 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send185067 = (Object)new_AST_Send((Object)Self, (Object)symbol36028, 0);
string28392 = (Object)new_Type_String(L"injectPrimary");
string28393 = (Object)new_Type_String(L"injectPrimary\n\t^ self primary\n\t\t<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)");
smallint21217 = (Object)new_Type_SmallInt(-1);
smallint21218 = (Object)new_Type_SmallInt(-1);
info3894 = (Object)new_AST_Info((Type_String)string28393,(Type_String)string28392, (Type_SmallInt)smallint21217, (Type_SmallInt)smallint21218);
((AST_Send)send185067)->info = (AST_Info)info3894;
symbol36029 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send185068 = (Object)new_AST_Send((Object)Self, (Object)symbol36029, 0);
((AST_Send)send185068)->info = (AST_Info)info3894;
// <=
send185069 = (Object)new_AST_Send((Object)send185067, (Object)symbol35648, 1, (Object)send185068);
((AST_Send)send185069)->info = (AST_Info)info3894;
symbol36030 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send185070 = (Object)new_AST_Send((Object)Self, (Object)symbol36030, 0);
((AST_Send)send185070)->info = (AST_Info)info3894;
// |
send185071 = (Object)new_AST_Send((Object)send185069, (Object)SMB__or, 1, (Object)send185070);
((AST_Send)send185071)->info = (AST_Info)info3894;
symbol36031 = (Object)new_Type_Symbol_cached(L"block");
// block
send185072 = (Object)new_AST_Send((Object)Self, (Object)symbol36031, 0);
((AST_Send)send185072)->info = (AST_Info)info3894;
// <=
send185073 = (Object)new_AST_Send((Object)send185071, (Object)symbol35648, 1, (Object)send185072);
((AST_Send)send185073)->info = (AST_Info)info3894;
symbol36032 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send185074 = (Object)new_AST_Send((Object)Self, (Object)symbol36032, 0);
((AST_Send)send185074)->info = (AST_Info)info3894;
// <=
send185075 = (Object)new_AST_Send((Object)send185073, (Object)symbol35648, 1, (Object)send185074);
((AST_Send)send185075)->info = (AST_Info)info3894;
symbol36033 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send185076 = (Object)new_AST_Send((Object)Self, (Object)symbol36033, 0);
((AST_Send)send185076)->info = (AST_Info)info3894;
// <=
send185077 = (Object)new_AST_Send((Object)send185075, (Object)symbol35648, 1, (Object)send185076);
((AST_Send)send185077)->info = (AST_Info)info3894;
method25457 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185077);
((AST_Method)method25457)->info = (AST_Info)info3894;
symbol35780 = (Object)new_Type_Symbol_cached(L"injectPrimary");
methodclosure25455 = (Object)new_Runtime_MethodClosure(method25457);
store_method((Type_Class)class4035, (Type_Symbol)symbol35780, (Runtime_MethodClosure)methodclosure25455);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string28394 = (Object)new_Type_String(L"VARIABLE-NAME");
constant35942 = (Object)new_AST_Constant((Object)string28394);
// identifier
send185078 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
string28395 = (Object)new_Type_String(L"initializeVariableName");
string28396 = (Object)new_Type_String(L"initializeVariableName\n\t^ PEGParser\n\t\tnamed: \'VARIABLE-NAME\'\n\t\tparsing: self identifier\n\t\tsemantics: [:result | self createVariable: result]");
smallint21219 = (Object)new_Type_SmallInt(-1);
smallint21220 = (Object)new_Type_SmallInt(-1);
info3895 = (Object)new_AST_Info((Type_String)string28396,(Type_String)string28395, (Type_SmallInt)smallint21219, (Type_SmallInt)smallint21220);
((AST_Send)send185078)->info = (AST_Info)info3895;
localvariable26791 = (Object)new_AST_Variable_named(L"result");
array21466 = (Object)new_Type_Array_with(1, (Object)localvariable26791);
symbol35768 = (Object)new_Type_Symbol_cached(L"createVariable:");
// createVariable:
send185079 = (Object)new_AST_Send((Object)Self, (Object)symbol35768, 1, (Object)localvariable26791);
((AST_Send)send185079)->info = (AST_Info)info3895;
block12812 = (Object)new_AST_Block_with((Type_Array)array21466, (Type_Array)empty_Type_Array, 1, 1, send185079);
// named:parsing:semantics:
send185080 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35942, (Object)send185078, (Object)block12812);
((AST_Send)send185080)->info = (AST_Info)info3895;
method25458 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185080);
((AST_Method)method25458)->info = (AST_Info)info3895;
symbol35825 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure25456 = (Object)new_Runtime_MethodClosure(method25458);
store_method((Type_Class)class4035, (Type_Symbol)symbol35825, (Runtime_MethodClosure)methodclosure25456);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send185081 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
string28397 = (Object)new_Type_String(L"initializeFinalExpression");
string28398 = (Object)new_Type_String(L"initializeFinalExpression\n\t^ self expression & (\'.\' asPEG optional omit: true)");
smallint21221 = (Object)new_Type_SmallInt(-1);
smallint21222 = (Object)new_Type_SmallInt(-1);
info3896 = (Object)new_AST_Info((Type_String)string28398,(Type_String)string28397, (Type_SmallInt)smallint21221, (Type_SmallInt)smallint21222);
((AST_Send)send185081)->info = (AST_Info)info3896;
string28399 = (Object)new_Type_String(L".");
constant35943 = (Object)new_AST_Constant((Object)string28399);
// asPEG
send185082 = (Object)new_AST_Send((Object)constant35943, (Object)symbol35639, 0);
((AST_Send)send185082)->info = (AST_Info)info3896;
symbol35841 = (Object)new_Type_Symbol_cached(L"optional");
// optional
send185083 = (Object)new_AST_Send((Object)send185082, (Object)symbol35841, 0);
((AST_Send)send185083)->info = (AST_Info)info3896;
// omit:
send185084 = (Object)new_AST_Send((Object)send185083, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185084)->info = (AST_Info)info3896;
// &
send185085 = (Object)new_AST_Send((Object)send185081, (Object)SMB__and, 1, (Object)send185084);
((AST_Send)send185085)->info = (AST_Info)info3896;
method25459 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185085);
((AST_Method)method25459)->info = (AST_Info)info3896;
symbol35797 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure25457 = (Object)new_Runtime_MethodClosure(method25459);
store_method((Type_Class)class4035, (Type_Symbol)symbol35797, (Runtime_MethodClosure)methodclosure25457);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant35944 = (Object)new_AST_Constant((Object)symbol35992);
string28400 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant35945 = (Object)new_AST_Constant((Object)string28400);
// named:
send185086 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35855, 1, (Object)constant35945);
string28401 = (Object)new_Type_String(L"preStoreBinaryObjectDescription");
string28402 = (Object)new_Type_String(L"preStoreBinaryObjectDescription\n\t^ parsers at: #binaryObjectDescription ifAbsentPut: [\n\t\tPEGParser named: \'BINARY-OBJECT-DESCRIPTION\'\n\t]");
smallint21223 = (Object)new_Type_SmallInt(-1);
smallint21224 = (Object)new_Type_SmallInt(-1);
info3897 = (Object)new_AST_Info((Type_String)string28402,(Type_String)string28401, (Type_SmallInt)smallint21223, (Type_SmallInt)smallint21224);
((AST_Send)send185086)->info = (AST_Info)info3897;
block12813 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185086);
// at:ifAbsentPut:
send185087 = (Object)new_AST_Send((Object)instancevariable5991, (Object)symbol35892, 2, (Object)constant35944, (Object)block12813);
((AST_Send)send185087)->info = (AST_Info)info3897;
method25460 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185087);
((AST_Method)method25460)->info = (AST_Info)info3897;
symbol35762 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
methodclosure25458 = (Object)new_Runtime_MethodClosure(method25460);
store_method((Type_Class)class4035, (Type_Symbol)symbol35762, (Runtime_MethodClosure)methodclosure25458);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string28403 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant35946 = (Object)new_AST_Constant((Object)string28403);
// binarySelector
send185088 = (Object)new_AST_Send((Object)Self, (Object)symbol35996, 0);
string28404 = (Object)new_Type_String(L"initializeBinaryMessageDefinition");
string28405 = (Object)new_Type_String(L"initializeBinaryMessageDefinition\n\t^ PEGParser\n\t\tnamed: \'BINARY-ARGUMENT\'\n\t\tparsing: (self binarySelector & self parameterName)\n\t\tsemantics: [:result |\n\t\t\tASTBinaryMessageDefinition new\n\t\t\t\tselector: (self createSymbol: (result first));\n\t\t\t\tparameter: (self createVariable: (result at: 2))\n\t\t]");
smallint21225 = (Object)new_Type_SmallInt(-1);
smallint21226 = (Object)new_Type_SmallInt(-1);
info3898 = (Object)new_AST_Info((Type_String)string28405,(Type_String)string28404, (Type_SmallInt)smallint21225, (Type_SmallInt)smallint21226);
((AST_Send)send185088)->info = (AST_Info)info3898;
symbol36034 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send185089 = (Object)new_AST_Send((Object)Self, (Object)symbol36034, 0);
((AST_Send)send185089)->info = (AST_Info)info3898;
// &
send185090 = (Object)new_AST_Send((Object)send185088, (Object)SMB__and, 1, (Object)send185089);
((AST_Send)send185090)->info = (AST_Info)info3898;
localvariable26792 = (Object)new_AST_Variable_named(L"result");
array21467 = (Object)new_Type_Array_with(1, (Object)localvariable26792);
localvariable26793 = (Object)new_AST_Variable_named(L"receiver");
array21468 = (Object)new_Type_Array_with(1, (Object)localvariable26793);
symbol35732 = (Object)new_Type_Symbol_cached(L"selector:");
symbol35763 = (Object)new_Type_Symbol_cached(L"createSymbol:");
// first
send185091 = (Object)new_AST_Send((Object)localvariable26792, (Object)symbol35693, 0);
((AST_Send)send185091)->info = (AST_Info)info3898;
// createSymbol:
send185092 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)send185091);
((AST_Send)send185092)->info = (AST_Info)info3898;
// selector:
send185093 = (Object)new_AST_Send((Object)localvariable26793, (Object)symbol35732, 1, (Object)send185092);
((AST_Send)send185093)->info = (AST_Info)info3898;
smallint21227 = (Object)new_Type_SmallInt(2);
constant35947 = (Object)new_AST_Constant((Object)smallint21227);
// at:
send185094 = (Object)new_AST_Send((Object)localvariable26792, (Object)SMB_at_, 1, (Object)constant35947);
((AST_Send)send185094)->info = (AST_Info)info3898;
// createVariable:
send185095 = (Object)new_AST_Send((Object)Self, (Object)symbol35768, 1, (Object)send185094);
((AST_Send)send185095)->info = (AST_Info)info3898;
// parameter:
send185096 = (Object)new_AST_Send((Object)localvariable26793, (Object)symbol35750, 1, (Object)send185095);
((AST_Send)send185096)->info = (AST_Info)info3898;
block12814 = (Object)new_AST_Block_with((Type_Array)array21468, (Type_Array)empty_Type_Array, 2, 2, send185093, send185096);
// new
send185097 = (Object)new_AST_Send((Object)classreference4834, (Object)symbol35612, 0);
((AST_Send)send185097)->info = (AST_Info)info3898;
// value:
send185098 = (Object)new_AST_Send((Object)block12814, (Object)SMB_value_, 1, (Object)send185097);
((AST_Send)send185098)->info = (AST_Info)info3898;
block12815 = (Object)new_AST_Block_with((Type_Array)array21467, (Type_Array)empty_Type_Array, 1, 1, send185098);
// named:parsing:semantics:
send185099 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35946, (Object)send185090, (Object)block12815);
((AST_Send)send185099)->info = (AST_Info)info3898;
method25461 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185099);
((AST_Method)method25461)->info = (AST_Info)info3898;
symbol35790 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure25459 = (Object)new_Runtime_MethodClosure(method25461);
store_method((Type_Class)class4035, (Type_Symbol)symbol35790, (Runtime_MethodClosure)methodclosure25459);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string28406 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant35948 = (Object)new_AST_Constant((Object)string28406);
// keyword
send185100 = (Object)new_AST_Send((Object)Self, (Object)symbol36001, 0);
string28407 = (Object)new_Type_String(L"initializeKeywordMessageExpression");
string28408 = (Object)new_Type_String(L"initializeKeywordMessageExpression\n\t^ PEGParser\n\t\tnamed: \'KEYWORD-MESSAGE-EXPRESSION\'\n\t\tparsing: (self keyword & (self binaryObjectDescription)) plus\n\t\tsemantics: [ :parts |\n\t\t\tASTMessageExpression new\n\t\t\t\tkeywords: (parts collect: #first);\n\t\t\t\tselector: (ASTKeywordSelector new \n\t\t\t\t\t\t\tkeywords: (parts collect: #first);\n\t\t\t\t\t\t\tselector: (self createSymbol: ((parts collect: #first) joinUsing: \':\'), \':\'));\n\t\t\t\targuments: (parts collect: #second)\n\t\t]");
smallint21228 = (Object)new_Type_SmallInt(-1);
smallint21229 = (Object)new_Type_SmallInt(-1);
info3899 = (Object)new_AST_Info((Type_String)string28408,(Type_String)string28407, (Type_SmallInt)smallint21228, (Type_SmallInt)smallint21229);
((AST_Send)send185100)->info = (AST_Info)info3899;
// binaryObjectDescription
send185101 = (Object)new_AST_Send((Object)Self, (Object)symbol35992, 0);
((AST_Send)send185101)->info = (AST_Info)info3899;
// &
send185102 = (Object)new_AST_Send((Object)send185100, (Object)SMB__and, 1, (Object)send185101);
((AST_Send)send185102)->info = (AST_Info)info3899;
symbol35848 = (Object)new_Type_Symbol_cached(L"plus");
// plus
send185103 = (Object)new_AST_Send((Object)send185102, (Object)symbol35848, 0);
((AST_Send)send185103)->info = (AST_Info)info3899;
localvariable26794 = (Object)new_AST_Variable_named(L"parts");
array21469 = (Object)new_Type_Array_with(1, (Object)localvariable26794);
localvariable26795 = (Object)new_AST_Variable_named(L"receiver");
array21470 = (Object)new_Type_Array_with(1, (Object)localvariable26795);
constant35949 = (Object)new_AST_Constant((Object)symbol35693);
// collect:
send185104 = (Object)new_AST_Send((Object)localvariable26794, (Object)symbol35899, 1, (Object)constant35949);
((AST_Send)send185104)->info = (AST_Info)info3899;
// keywords:
send185105 = (Object)new_AST_Send((Object)localvariable26795, (Object)symbol35737, 1, (Object)send185104);
((AST_Send)send185105)->info = (AST_Info)info3899;
localvariable26796 = (Object)new_AST_Variable_named(L"receiver");
array21471 = (Object)new_Type_Array_with(1, (Object)localvariable26796);
constant35950 = (Object)new_AST_Constant((Object)symbol35693);
// collect:
send185106 = (Object)new_AST_Send((Object)localvariable26794, (Object)symbol35899, 1, (Object)constant35950);
((AST_Send)send185106)->info = (AST_Info)info3899;
// keywords:
send185107 = (Object)new_AST_Send((Object)localvariable26796, (Object)symbol35737, 1, (Object)send185106);
((AST_Send)send185107)->info = (AST_Info)info3899;
constant35951 = (Object)new_AST_Constant((Object)symbol35693);
// collect:
send185108 = (Object)new_AST_Send((Object)localvariable26794, (Object)symbol35899, 1, (Object)constant35951);
((AST_Send)send185108)->info = (AST_Info)info3899;
string28409 = (Object)new_Type_String(L":");
constant35952 = (Object)new_AST_Constant((Object)string28409);
// joinUsing:
send185109 = (Object)new_AST_Send((Object)send185108, (Object)symbol36009, 1, (Object)constant35952);
((AST_Send)send185109)->info = (AST_Info)info3899;
string28410 = (Object)new_Type_String(L":");
constant35953 = (Object)new_AST_Constant((Object)string28410);
// ,
send185110 = (Object)new_AST_Send((Object)send185109, (Object)SMB__concat, 1, (Object)constant35953);
((AST_Send)send185110)->info = (AST_Info)info3899;
// createSymbol:
send185111 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)send185110);
((AST_Send)send185111)->info = (AST_Info)info3899;
// selector:
send185112 = (Object)new_AST_Send((Object)localvariable26796, (Object)symbol35732, 1, (Object)send185111);
((AST_Send)send185112)->info = (AST_Info)info3899;
block12816 = (Object)new_AST_Block_with((Type_Array)array21471, (Type_Array)empty_Type_Array, 3, 2, send185107, send185112);
// new
send185113 = (Object)new_AST_Send((Object)classreference4835, (Object)symbol35612, 0);
((AST_Send)send185113)->info = (AST_Info)info3899;
// value:
send185114 = (Object)new_AST_Send((Object)block12816, (Object)SMB_value_, 1, (Object)send185113);
((AST_Send)send185114)->info = (AST_Info)info3899;
// selector:
send185115 = (Object)new_AST_Send((Object)localvariable26795, (Object)symbol35732, 1, (Object)send185114);
((AST_Send)send185115)->info = (AST_Info)info3899;
constant35954 = (Object)new_AST_Constant((Object)symbol36020);
// collect:
send185116 = (Object)new_AST_Send((Object)localvariable26794, (Object)symbol35899, 1, (Object)constant35954);
((AST_Send)send185116)->info = (AST_Info)info3899;
// arguments:
send185117 = (Object)new_AST_Send((Object)localvariable26795, (Object)symbol35739, 1, (Object)send185116);
((AST_Send)send185117)->info = (AST_Info)info3899;
block12817 = (Object)new_AST_Block_with((Type_Array)array21470, (Type_Array)empty_Type_Array, 2, 3, send185105, send185115, send185117);
// new
send185118 = (Object)new_AST_Send((Object)classreference4823, (Object)symbol35612, 0);
((AST_Send)send185118)->info = (AST_Info)info3899;
// value:
send185119 = (Object)new_AST_Send((Object)block12817, (Object)SMB_value_, 1, (Object)send185118);
((AST_Send)send185119)->info = (AST_Info)info3899;
block12818 = (Object)new_AST_Block_with((Type_Array)array21469, (Type_Array)empty_Type_Array, 1, 1, send185119);
// named:parsing:semantics:
send185120 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35948, (Object)send185103, (Object)block12818);
((AST_Send)send185120)->info = (AST_Info)info3899;
method25462 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185120);
((AST_Method)method25462)->info = (AST_Info)info3899;
symbol35807 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure25460 = (Object)new_Runtime_MethodClosure(method25462);
store_method((Type_Class)class4035, (Type_Symbol)symbol35807, (Runtime_MethodClosure)methodclosure25460);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send185121 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
string28411 = (Object)new_Type_String(L"initializeKeyword");
string28412 = (Object)new_Type_String(L"initializeKeyword\n\t^ self identifier && (\':\' asPEG omit: true)");
smallint21230 = (Object)new_Type_SmallInt(-1);
smallint21231 = (Object)new_Type_SmallInt(-1);
info3900 = (Object)new_AST_Info((Type_String)string28412,(Type_String)string28411, (Type_SmallInt)smallint21230, (Type_SmallInt)smallint21231);
((AST_Send)send185121)->info = (AST_Info)info3900;
symbol35838 = (Object)new_Type_Symbol_cached(L"&&");
string28413 = (Object)new_Type_String(L":");
constant35955 = (Object)new_AST_Constant((Object)string28413);
// asPEG
send185122 = (Object)new_AST_Send((Object)constant35955, (Object)symbol35639, 0);
((AST_Send)send185122)->info = (AST_Info)info3900;
// omit:
send185123 = (Object)new_AST_Send((Object)send185122, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185123)->info = (AST_Info)info3900;
// &&
send185124 = (Object)new_AST_Send((Object)send185121, (Object)symbol35838, 1, (Object)send185123);
((AST_Send)send185124)->info = (AST_Info)info3900;
method25463 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185124);
((AST_Method)method25463)->info = (AST_Info)info3900;
symbol35819 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure25461 = (Object)new_Runtime_MethodClosure(method25463);
store_method((Type_Class)class4035, (Type_Symbol)symbol35819, (Runtime_MethodClosure)methodclosure25461);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string28414 = (Object)new_Type_String(L"SYMBOL");
constant35956 = (Object)new_AST_Constant((Object)string28414);
// symbolKeywords
send185125 = (Object)new_AST_Send((Object)Self, (Object)symbol36027, 0);
string28415 = (Object)new_Type_String(L"initializeSymbol");
string28416 = (Object)new_Type_String(L"initializeSymbol\n\t^ PEGParser\n\t\tnamed: \'SYMBOL\'\n\t\tparsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)");
smallint21232 = (Object)new_Type_SmallInt(-1);
smallint21233 = (Object)new_Type_SmallInt(-1);
info3901 = (Object)new_AST_Info((Type_String)string28416,(Type_String)string28415, (Type_SmallInt)smallint21232, (Type_SmallInt)smallint21233);
((AST_Send)send185125)->info = (AST_Info)info3901;
// identifier
send185126 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
((AST_Send)send185126)->info = (AST_Info)info3901;
// |
send185127 = (Object)new_AST_Send((Object)send185125, (Object)SMB__or, 1, (Object)send185126);
((AST_Send)send185127)->info = (AST_Info)info3901;
// binarySelector
send185128 = (Object)new_AST_Send((Object)Self, (Object)symbol35996, 0);
((AST_Send)send185128)->info = (AST_Info)info3901;
// <=
send185129 = (Object)new_AST_Send((Object)send185127, (Object)symbol35648, 1, (Object)send185128);
((AST_Send)send185129)->info = (AST_Info)info3901;
// string
send185130 = (Object)new_AST_Send((Object)Self, (Object)symbol35710, 0);
((AST_Send)send185130)->info = (AST_Info)info3901;
// <=
send185131 = (Object)new_AST_Send((Object)send185129, (Object)symbol35648, 1, (Object)send185130);
((AST_Send)send185131)->info = (AST_Info)info3901;
// named:parsing:
send185132 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35858, 2, (Object)constant35956, (Object)send185131);
((AST_Send)send185132)->info = (AST_Info)info3901;
method25464 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185132);
((AST_Method)method25464)->info = (AST_Info)info3901;
symbol35779 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure25462 = (Object)new_Runtime_MethodClosure(method25464);
store_method((Type_Class)class4035, (Type_Symbol)symbol35779, (Runtime_MethodClosure)methodclosure25462);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send185133 = (Object)new_AST_Send((Object)Self, (Object)symbol35990, 0);
string28417 = (Object)new_Type_String(L"injectMessageExpression");
string28418 = (Object)new_Type_String(L"injectMessageExpression\n\t^ self messageExpression\n\t\t<= (self keywordExpression | self binaryExpression <= self unaryExpression)");
smallint21234 = (Object)new_Type_SmallInt(-1);
smallint21235 = (Object)new_Type_SmallInt(-1);
info3902 = (Object)new_AST_Info((Type_String)string28418,(Type_String)string28417, (Type_SmallInt)smallint21234, (Type_SmallInt)smallint21235);
((AST_Send)send185133)->info = (AST_Info)info3902;
// keywordExpression
send185134 = (Object)new_AST_Send((Object)Self, (Object)symbol36008, 0);
((AST_Send)send185134)->info = (AST_Info)info3902;
// <=
send185135 = (Object)new_AST_Send((Object)send185133, (Object)symbol35648, 1, (Object)send185134);
((AST_Send)send185135)->info = (AST_Info)info3902;
symbol36035 = (Object)new_Type_Symbol_cached(L"binaryExpression");
// binaryExpression
send185136 = (Object)new_AST_Send((Object)Self, (Object)symbol36035, 0);
((AST_Send)send185136)->info = (AST_Info)info3902;
// |
send185137 = (Object)new_AST_Send((Object)send185135, (Object)SMB__or, 1, (Object)send185136);
((AST_Send)send185137)->info = (AST_Info)info3902;
// unaryExpression
send185138 = (Object)new_AST_Send((Object)Self, (Object)symbol35987, 0);
((AST_Send)send185138)->info = (AST_Info)info3902;
// <=
send185139 = (Object)new_AST_Send((Object)send185137, (Object)symbol35648, 1, (Object)send185138);
((AST_Send)send185139)->info = (AST_Info)info3902;
method25465 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185139);
((AST_Method)method25465)->info = (AST_Info)info3902;
symbol35800 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
methodclosure25463 = (Object)new_Runtime_MethodClosure(method25465);
store_method((Type_Class)class4035, (Type_Symbol)symbol35800, (Runtime_MethodClosure)methodclosure25463);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string28419 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant35957 = (Object)new_AST_Constant((Object)string28419);
// symbol
send185140 = (Object)new_AST_Send((Object)Self, (Object)symbol35706, 0);
string28420 = (Object)new_Type_String(L"initializeSymbolInArray");
string28421 = (Object)new_Type_String(L"initializeSymbolInArray\n\t^ PEGParser\n\t\tnamed: \'SYMBOL-IN-ARRAY\'\n\t\tparsing: (self symbol)\n\t\tsemantics: [:symbol |\n\t\t\tASTSymbol new symbol: symbol\n\t\t]");
smallint21236 = (Object)new_Type_SmallInt(-1);
smallint21237 = (Object)new_Type_SmallInt(-1);
info3903 = (Object)new_AST_Info((Type_String)string28421,(Type_String)string28420, (Type_SmallInt)smallint21236, (Type_SmallInt)smallint21237);
((AST_Send)send185140)->info = (AST_Info)info3903;
localvariable26797 = (Object)new_AST_Variable_named(L"symbol");
array21472 = (Object)new_Type_Array_with(1, (Object)localvariable26797);
// new
send185141 = (Object)new_AST_Send((Object)classreference4836, (Object)symbol35612, 0);
((AST_Send)send185141)->info = (AST_Info)info3903;
// symbol:
send185142 = (Object)new_AST_Send((Object)send185141, (Object)symbol35707, 1, (Object)localvariable26797);
((AST_Send)send185142)->info = (AST_Info)info3903;
block12819 = (Object)new_AST_Block_with((Type_Array)array21472, (Type_Array)empty_Type_Array, 1, 1, send185142);
// named:parsing:semantics:
send185143 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35957, (Object)send185140, (Object)block12819);
((AST_Send)send185143)->info = (AST_Info)info3903;
method25466 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185143);
((AST_Method)method25466)->info = (AST_Info)info3903;
symbol35812 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure25464 = (Object)new_Runtime_MethodClosure(method25466);
store_method((Type_Class)class4035, (Type_Symbol)symbol35812, (Runtime_MethodClosure)methodclosure25464);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string28422 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant35958 = (Object)new_AST_Constant((Object)string28422);
// unarySelector
send185144 = (Object)new_AST_Send((Object)Self, (Object)symbol36006, 0);
string28423 = (Object)new_Type_String(L"initializeUnaryMessageDefinition");
string28424 = (Object)new_Type_String(L"initializeUnaryMessageDefinition\n\t^ PEGParser\n\t\tnamed: \'UNARY-MESSAGE-DEFINITION\'\n\t\tparsing: self unarySelector\n\t\tsemantics: [ :selector |\n\t\t\tASTUnaryMessageDefinition new\n\t\t\t\tselector: selector.\n\t\t]");
smallint21238 = (Object)new_Type_SmallInt(-1);
smallint21239 = (Object)new_Type_SmallInt(-1);
info3904 = (Object)new_AST_Info((Type_String)string28424,(Type_String)string28423, (Type_SmallInt)smallint21238, (Type_SmallInt)smallint21239);
((AST_Send)send185144)->info = (AST_Info)info3904;
localvariable26798 = (Object)new_AST_Variable_named(L"selector");
array21473 = (Object)new_Type_Array_with(1, (Object)localvariable26798);
classreference4843 = (Object)new_Organization_ClassReference((Type_Class)class4067);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send185145 = (Object)new_AST_Send((Object)Self, (Object)symbol35626, 0);
string28425 = (Object)new_Type_String(L"selectorSymbol");
string28426 = (Object)new_Type_String(L"selectorSymbol\n\t^ self selector selectorSymbol");
smallint21240 = (Object)new_Type_SmallInt(-1);
smallint21241 = (Object)new_Type_SmallInt(-1);
info3905 = (Object)new_AST_Info((Type_String)string28426,(Type_String)string28425, (Type_SmallInt)smallint21240, (Type_SmallInt)smallint21241);
((AST_Send)send185145)->info = (AST_Info)info3905;
// selectorSymbol
send185146 = (Object)new_AST_Send((Object)send185145, (Object)symbol35740, 0);
((AST_Send)send185146)->info = (AST_Info)info3905;
method25467 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185146);
((AST_Method)method25467)->info = (AST_Info)info3905;
methodclosure25465 = (Object)new_Runtime_MethodClosure(method25467);
store_method((Type_Class)class4067, (Type_Symbol)symbol35740, (Runtime_MethodClosure)methodclosure25465);

// new
send185147 = (Object)new_AST_Send((Object)classreference4843, (Object)symbol35612, 0);
((AST_Send)send185147)->info = (AST_Info)info3904;
// selector:
send185148 = (Object)new_AST_Send((Object)send185147, (Object)symbol35732, 1, (Object)localvariable26798);
((AST_Send)send185148)->info = (AST_Info)info3904;
block12820 = (Object)new_AST_Block_with((Type_Array)array21473, (Type_Array)empty_Type_Array, 1, 1, send185148);
// named:parsing:semantics:
send185149 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35958, (Object)send185144, (Object)block12820);
((AST_Send)send185149)->info = (AST_Info)info3904;
method25468 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185149);
((AST_Method)method25468)->info = (AST_Info)info3904;
symbol35772 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure25466 = (Object)new_Runtime_MethodClosure(method25468);
store_method((Type_Class)class4035, (Type_Symbol)symbol35772, (Runtime_MethodClosure)methodclosure25466);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super1983 = (Object)new_AST_Super((Object)symbol35517, 0);
classreference4844 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);

// Dictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	^ self at: key ifAbsent: [self at: key put: aBlock value]
localvariable26799 = (Object)new_AST_Variable_named(L"key");
localvariable26800 = (Object)new_AST_Variable_named(L"aBlock");
array21474 = (Object)new_Type_Array_with(2, (Object)localvariable26799, (Object)localvariable26800);
// value
send185150 = (Object)new_AST_Send((Object)localvariable26800, (Object)symbol35946, 0);
string28427 = (Object)new_Type_String(L"at:ifAbsentPut:");
string28428 = (Object)new_Type_String(L"at: key ifAbsentPut: aBlock \n\t^ self at: key ifAbsent: [self at: key put: aBlock value]");
smallint21242 = (Object)new_Type_SmallInt(-1);
smallint21243 = (Object)new_Type_SmallInt(-1);
info3906 = (Object)new_AST_Info((Type_String)string28428,(Type_String)string28427, (Type_SmallInt)smallint21242, (Type_SmallInt)smallint21243);
((AST_Send)send185150)->info = (AST_Info)info3906;
// at:put:
send185151 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable26799, (Object)send185150);
((AST_Send)send185151)->info = (AST_Info)info3906;
block12821 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185151);
// at:ifAbsent:
send185152 = (Object)new_AST_Send((Object)Self, (Object)symbol35914, 2, (Object)localvariable26799, (Object)block12821);
((AST_Send)send185152)->info = (AST_Info)info3906;
method25469 = (Object)new_AST_Method_with((Type_Array)array21474, (Type_Array)empty_Type_Array, 1, send185152);
((AST_Method)method25469)->info = (AST_Info)info3906;
methodclosure25467 = (Object)new_Runtime_MethodClosure(method25469);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol35892, (Runtime_MethodClosure)methodclosure25467);


// Dictionary>>includesKey:
//includesKey: key
// 	self at: key ifAbsent: [ ^ false ].
// 	^ true
localvariable26801 = (Object)new_AST_Variable_named(L"key");
array21475 = (Object)new_Type_Array_with(1, (Object)localvariable26801);
variable1591 = (Object)new_AST_Variable_named(L"return");
array21476 = (Object)new_Type_Array_with(1, (Object)variable1591);
// escape:
send185153 = (Object)new_AST_Send((Object)variable1591, (Object)SMB_escape_, 1, (Object)False_Const);
string28429 = (Object)new_Type_String(L"includesKey:");
string28430 = (Object)new_Type_String(L"includesKey: key\n\tself at: key ifAbsent: [ ^ false ].\n\t^ true");
smallint21244 = (Object)new_Type_SmallInt(-1);
smallint21245 = (Object)new_Type_SmallInt(-1);
info3907 = (Object)new_AST_Info((Type_String)string28430,(Type_String)string28429, (Type_SmallInt)smallint21244, (Type_SmallInt)smallint21245);
((AST_Send)send185153)->info = (AST_Info)info3907;
block12822 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185153);
// at:ifAbsent:
send185154 = (Object)new_AST_Send((Object)Self, (Object)symbol35914, 2, (Object)localvariable26801, (Object)block12822);
((AST_Send)send185154)->info = (AST_Info)info3907;
block12823 = (Object)new_AST_Block_with((Type_Array)array21476, (Type_Array)empty_Type_Array, 1, 2, send185154, True_Const);
// on:
send185155 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12823);
method25470 = (Object)new_AST_Method_with((Type_Array)array21475, (Type_Array)empty_Type_Array, 1, send185155);
((AST_Method)method25470)->info = (AST_Info)info3907;
methodclosure25468 = (Object)new_Runtime_MethodClosure(method25470);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol35889, (Runtime_MethodClosure)methodclosure25468);

// new
send185156 = (Object)new_AST_Send((Object)classreference4844, (Object)symbol35612, 0);
string28431 = (Object)new_Type_String(L"initialize");
string28432 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tparsers := Dictionary new.\n\tsymbols := Dictionary new.\n\tid := 0");
smallint21246 = (Object)new_Type_SmallInt(-1);
smallint21247 = (Object)new_Type_SmallInt(-1);
info3908 = (Object)new_AST_Info((Type_String)string28432,(Type_String)string28431, (Type_SmallInt)smallint21246, (Type_SmallInt)smallint21247);
((AST_Send)send185156)->info = (AST_Info)info3908;
assign22737 = (Object)new_AST_Assign((Object)instancevariable5991, (Object)send185156);
// new
send185157 = (Object)new_AST_Send((Object)classreference4844, (Object)symbol35612, 0);
((AST_Send)send185157)->info = (AST_Info)info3908;
assign22738 = (Object)new_AST_Assign((Object)instancevariable5993, (Object)send185157);
smallint21248 = (Object)new_Type_SmallInt(0);
constant35959 = (Object)new_AST_Constant((Object)smallint21248);
assign22739 = (Object)new_AST_Assign((Object)instancevariable5992, (Object)constant35959);
method25471 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1983, assign22737, assign22738, assign22739, Self);
((AST_Method)method25471)->info = (AST_Info)info3908;
methodclosure25469 = (Object)new_Runtime_MethodClosure(method25471);
store_method((Type_Class)class4035, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25469);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
symbol36036 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send185158 = (Object)new_AST_Send((Object)Self, (Object)symbol36036, 0);
string28433 = (Object)new_Type_String(L"initializeAssignmentExpressions");
string28434 = (Object)new_Type_String(L"initializeAssignmentExpressions\n\t^ (self variableName & self assignmentOp) times");
smallint21249 = (Object)new_Type_SmallInt(-1);
smallint21250 = (Object)new_Type_SmallInt(-1);
info3909 = (Object)new_AST_Info((Type_String)string28434,(Type_String)string28433, (Type_SmallInt)smallint21249, (Type_SmallInt)smallint21250);
((AST_Send)send185158)->info = (AST_Info)info3909;
symbol35759 = (Object)new_Type_Symbol_cached(L"assignmentOp");
// assignmentOp
send185159 = (Object)new_AST_Send((Object)Self, (Object)symbol35759, 0);
((AST_Send)send185159)->info = (AST_Info)info3909;
// &
send185160 = (Object)new_AST_Send((Object)send185158, (Object)SMB__and, 1, (Object)send185159);
((AST_Send)send185160)->info = (AST_Info)info3909;
symbol35837 = (Object)new_Type_Symbol_cached(L"times");
// times
send185161 = (Object)new_AST_Send((Object)send185160, (Object)symbol35837, 0);
((AST_Send)send185161)->info = (AST_Info)info3909;
method25472 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185161);
((AST_Method)method25472)->info = (AST_Info)info3909;
symbol35784 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure25470 = (Object)new_Runtime_MethodClosure(method25472);
store_method((Type_Class)class4035, (Type_Symbol)symbol35784, (Runtime_MethodClosure)methodclosure25470);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string28435 = (Object)new_Type_String(L"#");
constant35960 = (Object)new_AST_Constant((Object)string28435);
// asPEG
send185162 = (Object)new_AST_Send((Object)constant35960, (Object)symbol35639, 0);
string28436 = (Object)new_Type_String(L"initializeArrayConstant");
string28437 = (Object)new_Type_String(L"initializeArrayConstant\n\t^ (\'#\' asPEG omit: true) & self array");
smallint21251 = (Object)new_Type_SmallInt(-1);
smallint21252 = (Object)new_Type_SmallInt(-1);
info3910 = (Object)new_AST_Info((Type_String)string28437,(Type_String)string28436, (Type_SmallInt)smallint21251, (Type_SmallInt)smallint21252);
((AST_Send)send185162)->info = (AST_Info)info3910;
// omit:
send185163 = (Object)new_AST_Send((Object)send185162, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185163)->info = (AST_Info)info3910;
// array
send185164 = (Object)new_AST_Send((Object)Self, (Object)symbol36011, 0);
((AST_Send)send185164)->info = (AST_Info)info3910;
// &
send185165 = (Object)new_AST_Send((Object)send185163, (Object)SMB__and, 1, (Object)send185164);
((AST_Send)send185165)->info = (AST_Info)info3910;
method25473 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185165);
((AST_Method)method25473)->info = (AST_Info)info3910;
symbol35829 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure25471 = (Object)new_Runtime_MethodClosure(method25473);
store_method((Type_Class)class4035, (Type_Symbol)symbol35829, (Runtime_MethodClosure)methodclosure25471);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
// unaryExpression
send185166 = (Object)new_AST_Send((Object)Self, (Object)symbol35987, 0);
string28438 = (Object)new_Type_String(L"initializeUnaryObjectDescription");
string28439 = (Object)new_Type_String(L"initializeUnaryObjectDescription\n\t^ self unaryExpression | self primary");
smallint21253 = (Object)new_Type_SmallInt(-1);
smallint21254 = (Object)new_Type_SmallInt(-1);
info3911 = (Object)new_AST_Info((Type_String)string28439,(Type_String)string28438, (Type_SmallInt)smallint21253, (Type_SmallInt)smallint21254);
((AST_Send)send185166)->info = (AST_Info)info3911;
// primary
send185167 = (Object)new_AST_Send((Object)Self, (Object)symbol36028, 0);
((AST_Send)send185167)->info = (AST_Info)info3911;
// |
send185168 = (Object)new_AST_Send((Object)send185166, (Object)SMB__or, 1, (Object)send185167);
((AST_Send)send185168)->info = (AST_Info)info3911;
method25474 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185168);
((AST_Method)method25474)->info = (AST_Info)info3911;
symbol35822 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure25472 = (Object)new_Runtime_MethodClosure(method25474);
store_method((Type_Class)class4035, (Type_Symbol)symbol35822, (Runtime_MethodClosure)methodclosure25472);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
symbol36037 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send185169 = (Object)new_AST_Send((Object)Self, (Object)symbol36037, 0);
string28440 = (Object)new_Type_String(L"initializeLiteral");
string28441 = (Object)new_Type_String(L"initializeLiteral\n\t^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant");
smallint21255 = (Object)new_Type_SmallInt(-1);
smallint21256 = (Object)new_Type_SmallInt(-1);
info3912 = (Object)new_AST_Info((Type_String)string28441,(Type_String)string28440, (Type_SmallInt)smallint21255, (Type_SmallInt)smallint21256);
((AST_Send)send185169)->info = (AST_Info)info3912;
// symbolConstant
send185170 = (Object)new_AST_Send((Object)Self, (Object)symbol36010, 0);
((AST_Send)send185170)->info = (AST_Info)info3912;
// |
send185171 = (Object)new_AST_Send((Object)send185169, (Object)SMB__or, 1, (Object)send185170);
((AST_Send)send185171)->info = (AST_Info)info3912;
// characterConstant
send185172 = (Object)new_AST_Send((Object)Self, (Object)symbol35997, 0);
((AST_Send)send185172)->info = (AST_Info)info3912;
// <=
send185173 = (Object)new_AST_Send((Object)send185171, (Object)symbol35648, 1, (Object)send185172);
((AST_Send)send185173)->info = (AST_Info)info3912;
// stringConstant
send185174 = (Object)new_AST_Send((Object)Self, (Object)symbol36015, 0);
((AST_Send)send185174)->info = (AST_Info)info3912;
// <=
send185175 = (Object)new_AST_Send((Object)send185173, (Object)symbol35648, 1, (Object)send185174);
((AST_Send)send185175)->info = (AST_Info)info3912;
symbol36038 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send185176 = (Object)new_AST_Send((Object)Self, (Object)symbol36038, 0);
((AST_Send)send185176)->info = (AST_Info)info3912;
// <=
send185177 = (Object)new_AST_Send((Object)send185175, (Object)symbol35648, 1, (Object)send185176);
((AST_Send)send185177)->info = (AST_Info)info3912;
method25475 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185177);
((AST_Method)method25475)->info = (AST_Info)info3912;
symbol35766 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure25473 = (Object)new_Runtime_MethodClosure(method25475);
store_method((Type_Class)class4035, (Type_Symbol)symbol35766, (Runtime_MethodClosure)methodclosure25473);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable26802 = (Object)new_AST_Variable_named(L"result");
array21477 = (Object)new_Type_Array_with(1, (Object)localvariable26802);
string28442 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant35961 = (Object)new_AST_Constant((Object)string28442);
// primary
send185178 = (Object)new_AST_Send((Object)Self, (Object)symbol36028, 0);
string28443 = (Object)new_Type_String(L"initializeUnaryExpression");
string28444 = (Object)new_Type_String(L"initializeUnaryExpression\n\t| result |\n\t^ PEGParser\n\t\tnamed: \'UNARY-EXPRESSION\'\n\t\tparsing: (self primary & (self unarySelector plus))\n\t\tsemantics: [ :parts |\n\t\t\tresult := parts first.\n\t\t\t(parts at: 2) do: [ :selector |\n\t\t\t\tresult := ASTUnaryExpression new\n\t\t\t\t\t\t\treceiver: result;\n\t\t\t\t\t\t\tselector: selector.\n\t\t\t].\n\t\t\tresult\n\t\t]");
smallint21257 = (Object)new_Type_SmallInt(-1);
smallint21258 = (Object)new_Type_SmallInt(-1);
info3913 = (Object)new_AST_Info((Type_String)string28444,(Type_String)string28443, (Type_SmallInt)smallint21257, (Type_SmallInt)smallint21258);
((AST_Send)send185178)->info = (AST_Info)info3913;
// unarySelector
send185179 = (Object)new_AST_Send((Object)Self, (Object)symbol36006, 0);
((AST_Send)send185179)->info = (AST_Info)info3913;
// plus
send185180 = (Object)new_AST_Send((Object)send185179, (Object)symbol35848, 0);
((AST_Send)send185180)->info = (AST_Info)info3913;
// &
send185181 = (Object)new_AST_Send((Object)send185178, (Object)SMB__and, 1, (Object)send185180);
((AST_Send)send185181)->info = (AST_Info)info3913;
localvariable26803 = (Object)new_AST_Variable_named(L"parts");
array21478 = (Object)new_Type_Array_with(1, (Object)localvariable26803);
// first
send185182 = (Object)new_AST_Send((Object)localvariable26803, (Object)symbol35693, 0);
((AST_Send)send185182)->info = (AST_Info)info3913;
assign22740 = (Object)new_AST_Assign((Object)localvariable26802, (Object)send185182);
smallint21259 = (Object)new_Type_SmallInt(2);
constant35962 = (Object)new_AST_Constant((Object)smallint21259);
// at:
send185183 = (Object)new_AST_Send((Object)localvariable26803, (Object)SMB_at_, 1, (Object)constant35962);
((AST_Send)send185183)->info = (AST_Info)info3913;
localvariable26804 = (Object)new_AST_Variable_named(L"selector");
array21479 = (Object)new_Type_Array_with(1, (Object)localvariable26804);
localvariable26805 = (Object)new_AST_Variable_named(L"receiver");
array21480 = (Object)new_Type_Array_with(1, (Object)localvariable26805);
// receiver:
send185184 = (Object)new_AST_Send((Object)localvariable26805, (Object)symbol35726, 1, (Object)localvariable26802);
((AST_Send)send185184)->info = (AST_Info)info3913;
// selector:
send185185 = (Object)new_AST_Send((Object)localvariable26805, (Object)symbol35732, 1, (Object)localvariable26804);
((AST_Send)send185185)->info = (AST_Info)info3913;
block12824 = (Object)new_AST_Block_with((Type_Array)array21480, (Type_Array)empty_Type_Array, 3, 2, send185184, send185185);
// new
send185186 = (Object)new_AST_Send((Object)classreference4824, (Object)symbol35612, 0);
((AST_Send)send185186)->info = (AST_Info)info3913;
// value:
send185187 = (Object)new_AST_Send((Object)block12824, (Object)SMB_value_, 1, (Object)send185186);
((AST_Send)send185187)->info = (AST_Info)info3913;
assign22741 = (Object)new_AST_Assign((Object)localvariable26802, (Object)send185187);
block12825 = (Object)new_AST_Block_with((Type_Array)array21479, (Type_Array)empty_Type_Array, 2, 1, assign22741);
// do:
send185188 = (Object)new_AST_Send((Object)send185183, (Object)symbol35642, 1, (Object)block12825);
((AST_Send)send185188)->info = (AST_Info)info3913;
block12826 = (Object)new_AST_Block_with((Type_Array)array21478, (Type_Array)empty_Type_Array, 1, 3, assign22740, send185188, localvariable26802);
// named:parsing:semantics:
send185189 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35961, (Object)send185181, (Object)block12826);
((AST_Send)send185189)->info = (AST_Info)info3913;
method25476 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21477, 1, send185189);
((AST_Method)method25476)->info = (AST_Info)info3913;
symbol35794 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure25474 = (Object)new_Runtime_MethodClosure(method25476);
store_method((Type_Class)class4035, (Type_Symbol)symbol35794, (Runtime_MethodClosure)methodclosure25474);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant35963 = (Object)new_AST_Constant((Object)symbol36028);
string28445 = (Object)new_Type_String(L"PRIMARY");
constant35964 = (Object)new_AST_Constant((Object)string28445);
// named:
send185190 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35855, 1, (Object)constant35964);
string28446 = (Object)new_Type_String(L"preStorePrimary");
string28447 = (Object)new_Type_String(L"preStorePrimary\n\t^ parsers at: #primary ifAbsentPut: [ PEGParser named: \'PRIMARY\' ]");
smallint21260 = (Object)new_Type_SmallInt(-1);
smallint21261 = (Object)new_Type_SmallInt(-1);
info3914 = (Object)new_AST_Info((Type_String)string28447,(Type_String)string28446, (Type_SmallInt)smallint21260, (Type_SmallInt)smallint21261);
((AST_Send)send185190)->info = (AST_Info)info3914;
block12827 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185190);
// at:ifAbsentPut:
send185191 = (Object)new_AST_Send((Object)instancevariable5991, (Object)symbol35892, 2, (Object)constant35963, (Object)block12827);
((AST_Send)send185191)->info = (AST_Info)info3914;
method25477 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185191);
((AST_Method)method25477)->info = (AST_Info)info3914;
symbol35804 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
methodclosure25475 = (Object)new_Runtime_MethodClosure(method25477);
store_method((Type_Class)class4035, (Type_Symbol)symbol35804, (Runtime_MethodClosure)methodclosure25475);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string28448 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant35965 = (Object)new_AST_Constant((Object)string28448);
string28449 = (Object)new_Type_String(L"{");
constant35966 = (Object)new_AST_Constant((Object)string28449);
// asPEG
send185192 = (Object)new_AST_Send((Object)constant35966, (Object)symbol35639, 0);
string28450 = (Object)new_Type_String(L"initializeBraceExpression");
string28451 = (Object)new_Type_String(L"initializeBraceExpression\n\t^ PEGParser\n\t\tnamed: \'BRACE-EXPRESSION\'\n\t\t\n\t\tparsing: (\'{\' asPEG omit: true) & self subExpression times <& self expression <& (\'}\' asPEG omit: true)\n\t\t\n\t\tsemantics: [ :result |\n\t\t\tASTBraceExpression new\n\t\t\t\texpressions: ((result first) add: (result at: 2); yourself)\n\t\t]");
smallint21262 = (Object)new_Type_SmallInt(-1);
smallint21263 = (Object)new_Type_SmallInt(-1);
info3915 = (Object)new_AST_Info((Type_String)string28451,(Type_String)string28450, (Type_SmallInt)smallint21262, (Type_SmallInt)smallint21263);
((AST_Send)send185192)->info = (AST_Info)info3915;
// omit:
send185193 = (Object)new_AST_Send((Object)send185192, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185193)->info = (AST_Info)info3915;
// subExpression
send185194 = (Object)new_AST_Send((Object)Self, (Object)symbol36025, 0);
((AST_Send)send185194)->info = (AST_Info)info3915;
// times
send185195 = (Object)new_AST_Send((Object)send185194, (Object)symbol35837, 0);
((AST_Send)send185195)->info = (AST_Info)info3915;
// &
send185196 = (Object)new_AST_Send((Object)send185193, (Object)SMB__and, 1, (Object)send185195);
((AST_Send)send185196)->info = (AST_Info)info3915;
symbol35939 = (Object)new_Type_Symbol_cached(L"<&");
// expression
send185197 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
((AST_Send)send185197)->info = (AST_Info)info3915;
// <&
send185198 = (Object)new_AST_Send((Object)send185196, (Object)symbol35939, 1, (Object)send185197);
((AST_Send)send185198)->info = (AST_Info)info3915;
string28452 = (Object)new_Type_String(L"}");
constant35967 = (Object)new_AST_Constant((Object)string28452);
// asPEG
send185199 = (Object)new_AST_Send((Object)constant35967, (Object)symbol35639, 0);
((AST_Send)send185199)->info = (AST_Info)info3915;
// omit:
send185200 = (Object)new_AST_Send((Object)send185199, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185200)->info = (AST_Info)info3915;
// <&
send185201 = (Object)new_AST_Send((Object)send185198, (Object)symbol35939, 1, (Object)send185200);
((AST_Send)send185201)->info = (AST_Info)info3915;
localvariable26806 = (Object)new_AST_Variable_named(L"result");
array21481 = (Object)new_Type_Array_with(1, (Object)localvariable26806);
classreference4845 = (Object)new_Organization_ClassReference((Type_Class)class4080);

// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable26807 = (Object)new_AST_Variable_named(L"newExpressions");
array21482 = (Object)new_Type_Array_with(1, (Object)localvariable26807);
assign22742 = (Object)new_AST_Assign((Object)instancevariable6049, (Object)localvariable26807);
method25478 = (Object)new_AST_Method_with((Type_Array)array21482, (Type_Array)empty_Type_Array, 2, assign22742, Self);
string28453 = (Object)new_Type_String(L"expressions:");
string28454 = (Object)new_Type_String(L"expressions: newExpressions\n\texpressions := newExpressions");
smallint21264 = (Object)new_Type_SmallInt(-1);
smallint21265 = (Object)new_Type_SmallInt(-1);
info3916 = (Object)new_AST_Info((Type_String)string28454,(Type_String)string28453, (Type_SmallInt)smallint21264, (Type_SmallInt)smallint21265);
((AST_Method)method25478)->info = (AST_Info)info3916;
symbol35934 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure25476 = (Object)new_Runtime_MethodClosure(method25478);
store_method((Type_Class)class4080, (Type_Symbol)symbol35934, (Runtime_MethodClosure)methodclosure25476);


// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable1592 = (Object)new_AST_Variable_named(L"return");
array21483 = (Object)new_Type_Array_with(1, (Object)variable1592);
symbol36039 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send185202 = (Object)new_AST_Send((Object)Self, (Object)symbol36039, 0);
string28455 = (Object)new_Type_String(L"hasReturnExpression");
string28456 = (Object)new_Type_String(L"hasReturnExpression\n\tself expressions do: [ :el | \n\t\tel isReturnExpression \n\t\t\tor: [ el hasReturnExpression ]\n\t\t\tifTrue: [ ^ true ] ].\n\t^ false");
smallint21266 = (Object)new_Type_SmallInt(-1);
smallint21267 = (Object)new_Type_SmallInt(-1);
info3917 = (Object)new_AST_Info((Type_String)string28456,(Type_String)string28455, (Type_SmallInt)smallint21266, (Type_SmallInt)smallint21267);
((AST_Send)send185202)->info = (AST_Info)info3917;
localvariable26808 = (Object)new_AST_Variable_named(L"el");
array21484 = (Object)new_Type_Array_with(1, (Object)localvariable26808);
// isReturnExpression
send185203 = (Object)new_AST_Send((Object)localvariable26808, (Object)symbol35516, 0);
((AST_Send)send185203)->info = (AST_Info)info3917;
symbol36040 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
// hasReturnExpression
send185204 = (Object)new_AST_Send((Object)localvariable26808, (Object)symbol35678, 0);
((AST_Send)send185204)->info = (AST_Info)info3917;
block12828 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185204);
// escape:
send185205 = (Object)new_AST_Send((Object)variable1592, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send185205)->info = (AST_Info)info3917;
block12829 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185205);
// or:ifTrue:
send185206 = (Object)new_AST_Send((Object)send185203, (Object)symbol36040, 2, (Object)block12828, (Object)block12829);
((AST_Send)send185206)->info = (AST_Info)info3917;
block12830 = (Object)new_AST_Block_with((Type_Array)array21484, (Type_Array)empty_Type_Array, 2, 1, send185206);
// do:
send185207 = (Object)new_AST_Send((Object)send185202, (Object)symbol35642, 1, (Object)block12830);
((AST_Send)send185207)->info = (AST_Info)info3917;
block12831 = (Object)new_AST_Block_with((Type_Array)array21483, (Type_Array)empty_Type_Array, 1, 2, send185207, False_Const);
// on:
send185208 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12831);
method25479 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185208);
((AST_Method)method25479)->info = (AST_Info)info3917;
methodclosure25477 = (Object)new_Runtime_MethodClosure(method25479);
store_method((Type_Class)class4080, (Type_Symbol)symbol35678, (Runtime_MethodClosure)methodclosure25477);

// new
send185209 = (Object)new_AST_Send((Object)classreference4845, (Object)symbol35612, 0);
((AST_Send)send185209)->info = (AST_Info)info3915;
localvariable26809 = (Object)new_AST_Variable_named(L"receiver");
array21485 = (Object)new_Type_Array_with(1, (Object)localvariable26809);
smallint21268 = (Object)new_Type_SmallInt(2);
constant35968 = (Object)new_AST_Constant((Object)smallint21268);
// at:
send185210 = (Object)new_AST_Send((Object)localvariable26806, (Object)SMB_at_, 1, (Object)constant35968);
((AST_Send)send185210)->info = (AST_Info)info3915;
// add:
send185211 = (Object)new_AST_Send((Object)localvariable26809, (Object)symbol35696, 1, (Object)send185210);
((AST_Send)send185211)->info = (AST_Info)info3915;
// yourself
send185212 = (Object)new_AST_Send((Object)localvariable26809, (Object)symbol35515, 0);
((AST_Send)send185212)->info = (AST_Info)info3915;
block12832 = (Object)new_AST_Block_with((Type_Array)array21485, (Type_Array)empty_Type_Array, 2, 2, send185211, send185212);
// first
send185213 = (Object)new_AST_Send((Object)localvariable26806, (Object)symbol35693, 0);
((AST_Send)send185213)->info = (AST_Info)info3915;
// value:
send185214 = (Object)new_AST_Send((Object)block12832, (Object)SMB_value_, 1, (Object)send185213);
((AST_Send)send185214)->info = (AST_Info)info3915;
// expressions:
send185215 = (Object)new_AST_Send((Object)send185209, (Object)symbol35934, 1, (Object)send185214);
((AST_Send)send185215)->info = (AST_Info)info3915;
block12833 = (Object)new_AST_Block_with((Type_Array)array21481, (Type_Array)empty_Type_Array, 1, 1, send185215);
// named:parsing:semantics:
send185216 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35965, (Object)send185201, (Object)block12833);
((AST_Send)send185216)->info = (AST_Info)info3915;
method25480 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185216);
((AST_Method)method25480)->info = (AST_Info)info3915;
symbol35816 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure25478 = (Object)new_Runtime_MethodClosure(method25480);
store_method((Type_Class)class4035, (Type_Symbol)symbol35816, (Runtime_MethodClosure)methodclosure25478);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string28457 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant35969 = (Object)new_AST_Constant((Object)string28457);
symbol36041 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send185217 = (Object)new_AST_Send((Object)Self, (Object)symbol36041, 0);
string28458 = (Object)new_Type_String(L"initializeBinarySelector");
string28459 = (Object)new_Type_String(L"initializeBinarySelector\n\t^ PEGParser\n\t\tnamed: \'BINARY-SELECTOR\'\n\n\t\tparsing: ((\t(self specialCharacter | \'-\') && (self specialCharacter) strongTimes)\n\t\t\t\t\t| \'|\' )\n\t\t\t\t\t\t\t\n\t\tsemantics: [ :result |\n\t\t\tresult isString\n\t\t\t\tifTrue: [ self createSymbol: result ]\n\t\t\t\tifFalse: [\n\t\t\t\t\tself createSymbol: \n\t\t\t\t\t\t(result second \n\t\t\t\t\t\t\tinject: result first \n\t\t\t\t\t\t\tinto: [ :c :e | c, e ]) ]\n\t\t]");
smallint21269 = (Object)new_Type_SmallInt(-1);
smallint21270 = (Object)new_Type_SmallInt(-1);
info3918 = (Object)new_AST_Info((Type_String)string28459,(Type_String)string28458, (Type_SmallInt)smallint21269, (Type_SmallInt)smallint21270);
((AST_Send)send185217)->info = (AST_Info)info3918;
string28460 = (Object)new_Type_String(L"-");
constant35970 = (Object)new_AST_Constant((Object)string28460);
// |
send185218 = (Object)new_AST_Send((Object)send185217, (Object)SMB__or, 1, (Object)constant35970);
((AST_Send)send185218)->info = (AST_Info)info3918;
// specialCharacter
send185219 = (Object)new_AST_Send((Object)Self, (Object)symbol36041, 0);
((AST_Send)send185219)->info = (AST_Info)info3918;
// strongTimes
send185220 = (Object)new_AST_Send((Object)send185219, (Object)symbol35839, 0);
((AST_Send)send185220)->info = (AST_Info)info3918;
// &&
send185221 = (Object)new_AST_Send((Object)send185218, (Object)symbol35838, 1, (Object)send185220);
((AST_Send)send185221)->info = (AST_Info)info3918;
string28461 = (Object)new_Type_String(L"|");
constant35971 = (Object)new_AST_Constant((Object)string28461);
// |
send185222 = (Object)new_AST_Send((Object)send185221, (Object)SMB__or, 1, (Object)constant35971);
((AST_Send)send185222)->info = (AST_Info)info3918;
localvariable26810 = (Object)new_AST_Variable_named(L"result");
array21486 = (Object)new_Type_Array_with(1, (Object)localvariable26810);
// isString
send185223 = (Object)new_AST_Send((Object)localvariable26810, (Object)symbol35959, 0);
((AST_Send)send185223)->info = (AST_Info)info3918;
// createSymbol:
send185224 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)localvariable26810);
((AST_Send)send185224)->info = (AST_Info)info3918;
block12834 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185224);
// second
send185225 = (Object)new_AST_Send((Object)localvariable26810, (Object)symbol36020, 0);
((AST_Send)send185225)->info = (AST_Info)info3918;
// first
send185226 = (Object)new_AST_Send((Object)localvariable26810, (Object)symbol35693, 0);
((AST_Send)send185226)->info = (AST_Info)info3918;
localvariable26811 = (Object)new_AST_Variable_named(L"c");
localvariable26812 = (Object)new_AST_Variable_named(L"e");
array21487 = (Object)new_Type_Array_with(2, (Object)localvariable26811, (Object)localvariable26812);
// ,
send185227 = (Object)new_AST_Send((Object)localvariable26811, (Object)SMB__concat, 1, (Object)localvariable26812);
((AST_Send)send185227)->info = (AST_Info)info3918;
block12835 = (Object)new_AST_Block_with((Type_Array)array21487, (Type_Array)empty_Type_Array, 3, 1, send185227);
// inject:into:
send185228 = (Object)new_AST_Send((Object)send185225, (Object)symbol35697, 2, (Object)send185226, (Object)block12835);
((AST_Send)send185228)->info = (AST_Info)info3918;
// createSymbol:
send185229 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)send185228);
((AST_Send)send185229)->info = (AST_Info)info3918;
block12836 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185229);
// ifTrue:ifFalse:
send185230 = (Object)new_AST_Send((Object)send185223, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12834, (Object)block12836);
((AST_Send)send185230)->info = (AST_Info)info3918;
block12837 = (Object)new_AST_Block_with((Type_Array)array21486, (Type_Array)empty_Type_Array, 1, 1, send185230);
// named:parsing:semantics:
send185231 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35969, (Object)send185222, (Object)block12837);
((AST_Send)send185231)->info = (AST_Info)info3918;
method25481 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185231);
((AST_Method)method25481)->info = (AST_Info)info3918;
symbol35776 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure25479 = (Object)new_Runtime_MethodClosure(method25481);
store_method((Type_Class)class4035, (Type_Symbol)symbol35776, (Runtime_MethodClosure)methodclosure25479);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable26813 = (Object)new_AST_Variable_named(L"aDictionary");
array21488 = (Object)new_Type_Array_with(1, (Object)localvariable26813);
assign22743 = (Object)new_AST_Assign((Object)instancevariable5991, (Object)localvariable26813);
method25482 = (Object)new_AST_Method_with((Type_Array)array21488, (Type_Array)empty_Type_Array, 2, assign22743, Self);
string28462 = (Object)new_Type_String(L"parsers:");
string28463 = (Object)new_Type_String(L"parsers: aDictionary\n\tparsers := aDictionary ");
smallint21271 = (Object)new_Type_SmallInt(-1);
smallint21272 = (Object)new_Type_SmallInt(-1);
info3919 = (Object)new_AST_Info((Type_String)string28463,(Type_String)string28462, (Type_SmallInt)smallint21271, (Type_SmallInt)smallint21272);
((AST_Method)method25482)->info = (AST_Info)info3919;
symbol35788 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure25480 = (Object)new_Runtime_MethodClosure(method25482);
store_method((Type_Class)class4035, (Type_Symbol)symbol35788, (Runtime_MethodClosure)methodclosure25480);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send185232 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
string28464 = (Object)new_Type_String(L"initializeCascadedMessageExpression");
string28465 = (Object)new_Type_String(L"initializeCascadedMessageExpression\n\tself expression.\n\t\" expression will build this parser. \"\n\t^ self cascadedMessageExpression.");
smallint21273 = (Object)new_Type_SmallInt(-1);
smallint21274 = (Object)new_Type_SmallInt(-1);
info3920 = (Object)new_AST_Info((Type_String)string28465,(Type_String)string28464, (Type_SmallInt)smallint21273, (Type_SmallInt)smallint21274);
((AST_Send)send185232)->info = (AST_Info)info3920;
// cascadedMessageExpression
send185233 = (Object)new_AST_Send((Object)Self, (Object)symbol35993, 0);
((AST_Send)send185233)->info = (AST_Info)info3920;
method25483 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send185232, send185233);
((AST_Method)method25483)->info = (AST_Info)info3920;
symbol35758 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure25481 = (Object)new_Runtime_MethodClosure(method25483);
store_method((Type_Class)class4035, (Type_Symbol)symbol35758, (Runtime_MethodClosure)methodclosure25481);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send185234 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
string28466 = (Object)new_Type_String(L"initializeMessageExpression");
string28467 = (Object)new_Type_String(L"initializeMessageExpression\n\tself expression.\n\t\" expression will build this parser. \"\n\t^ self messageExpression separator: (self separator).");
smallint21275 = (Object)new_Type_SmallInt(-1);
smallint21276 = (Object)new_Type_SmallInt(-1);
info3921 = (Object)new_AST_Info((Type_String)string28467,(Type_String)string28466, (Type_SmallInt)smallint21275, (Type_SmallInt)smallint21276);
((AST_Send)send185234)->info = (AST_Info)info3921;
// messageExpression
send185235 = (Object)new_AST_Send((Object)Self, (Object)symbol35990, 0);
((AST_Send)send185235)->info = (AST_Info)info3921;
// separator
send185236 = (Object)new_AST_Send((Object)Self, (Object)symbol35854, 0);
((AST_Send)send185236)->info = (AST_Info)info3921;
// separator:
send185237 = (Object)new_AST_Send((Object)send185235, (Object)symbol35860, 1, (Object)send185236);
((AST_Send)send185237)->info = (AST_Info)info3921;
method25484 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send185234, send185237);
((AST_Method)method25484)->info = (AST_Info)info3921;
symbol35781 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure25482 = (Object)new_Runtime_MethodClosure(method25484);
store_method((Type_Class)class4035, (Type_Symbol)symbol35781, (Runtime_MethodClosure)methodclosure25482);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
string28468 = (Object)new_Type_String(L"COMMENT");
constant35972 = (Object)new_AST_Constant((Object)string28468);
// separators
send185238 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35853, 0);
string28469 = (Object)new_Type_String(L"initializeSeparator");
string28470 = (Object)new_Type_String(L"initializeSeparator\n\t\" has to be strongPlus since plus would match separator in between -> infinite recursion. \"\n\t^ PEGParser\n\t\tnamed: \'COMMENT\'\n\t\tparsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)");
smallint21277 = (Object)new_Type_SmallInt(-1);
smallint21278 = (Object)new_Type_SmallInt(-1);
info3922 = (Object)new_AST_Info((Type_String)string28470,(Type_String)string28469, (Type_SmallInt)smallint21277, (Type_SmallInt)smallint21278);
((AST_Send)send185238)->info = (AST_Info)info3922;
// commentFormat
send185239 = (Object)new_AST_Send((Object)Self, (Object)symbol36000, 0);
((AST_Send)send185239)->info = (AST_Info)info3922;
// |
send185240 = (Object)new_AST_Send((Object)send185238, (Object)SMB__or, 1, (Object)send185239);
((AST_Send)send185240)->info = (AST_Info)info3922;
// strongTimes
send185241 = (Object)new_AST_Send((Object)send185240, (Object)symbol35839, 0);
((AST_Send)send185241)->info = (AST_Info)info3922;
// omit:
send185242 = (Object)new_AST_Send((Object)send185241, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185242)->info = (AST_Info)info3922;
// named:parsing:
send185243 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35858, 2, (Object)constant35972, (Object)send185242);
((AST_Send)send185243)->info = (AST_Info)info3922;
method25485 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185243);
((AST_Method)method25485)->info = (AST_Info)info3922;
symbol35826 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure25483 = (Object)new_Runtime_MethodClosure(method25485);
store_method((Type_Class)class4035, (Type_Symbol)symbol35826, (Runtime_MethodClosure)methodclosure25483);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
string28471 = (Object)new_Type_String(L"ANNOTATION");
constant35973 = (Object)new_AST_Constant((Object)string28471);
string28472 = (Object)new_Type_String(L"<");
constant35974 = (Object)new_AST_Constant((Object)string28472);
// asPEG
send185244 = (Object)new_AST_Send((Object)constant35974, (Object)symbol35639, 0);
string28473 = (Object)new_Type_String(L"initializeAnnotation");
string28474 = (Object)new_Type_String(L"initializeAnnotation\n\t^ PEGParser\n\t\tnamed: \'ANNOTATION\'\n\t\tparsing: (\'<\' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& (\'>\' asPEG omit: true)");
smallint21279 = (Object)new_Type_SmallInt(-1);
smallint21280 = (Object)new_Type_SmallInt(-1);
info3923 = (Object)new_AST_Info((Type_String)string28474,(Type_String)string28473, (Type_SmallInt)smallint21279, (Type_SmallInt)smallint21280);
((AST_Send)send185244)->info = (AST_Info)info3923;
// omit:
send185245 = (Object)new_AST_Send((Object)send185244, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185245)->info = (AST_Info)info3923;
symbol36042 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send185246 = (Object)new_AST_Send((Object)Self, (Object)symbol36042, 0);
((AST_Send)send185246)->info = (AST_Info)info3923;
// &
send185247 = (Object)new_AST_Send((Object)send185245, (Object)SMB__and, 1, (Object)send185246);
((AST_Send)send185247)->info = (AST_Info)info3923;
symbol36043 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send185248 = (Object)new_AST_Send((Object)Self, (Object)symbol36043, 0);
((AST_Send)send185248)->info = (AST_Info)info3923;
// |
send185249 = (Object)new_AST_Send((Object)send185247, (Object)SMB__or, 1, (Object)send185248);
((AST_Send)send185249)->info = (AST_Info)info3923;
string28475 = (Object)new_Type_String(L">");
constant35975 = (Object)new_AST_Constant((Object)string28475);
// asPEG
send185250 = (Object)new_AST_Send((Object)constant35975, (Object)symbol35639, 0);
((AST_Send)send185250)->info = (AST_Info)info3923;
// omit:
send185251 = (Object)new_AST_Send((Object)send185250, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185251)->info = (AST_Info)info3923;
// <&
send185252 = (Object)new_AST_Send((Object)send185249, (Object)symbol35939, 1, (Object)send185251);
((AST_Send)send185252)->info = (AST_Info)info3923;
// named:parsing:
send185253 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35858, 2, (Object)constant35973, (Object)send185252);
((AST_Send)send185253)->info = (AST_Info)info3923;
method25486 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185253);
((AST_Method)method25486)->info = (AST_Info)info3923;
symbol35798 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure25484 = (Object)new_Runtime_MethodClosure(method25486);
store_method((Type_Class)class4035, (Type_Symbol)symbol35798, (Runtime_MethodClosure)methodclosure25484);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable26814 = (Object)new_AST_Variable_named(L"anObject");
array21489 = (Object)new_Type_Array_with(1, (Object)localvariable26814);
variable1593 = (Object)new_AST_Variable_named(L"return");
array21490 = (Object)new_Type_Array_with(1, (Object)variable1593);
// isString
send185254 = (Object)new_AST_Send((Object)localvariable26814, (Object)symbol35959, 0);
string28476 = (Object)new_Type_String(L"createSymbol:");
string28477 = (Object)new_Type_String(L"createSymbol: anObject\n\tanObject isString \n\t\tifFalse: [ ^ anObject ].\n\t^ ASTSymbol named: anObject");
smallint21281 = (Object)new_Type_SmallInt(-1);
smallint21282 = (Object)new_Type_SmallInt(-1);
info3924 = (Object)new_AST_Info((Type_String)string28477,(Type_String)string28476, (Type_SmallInt)smallint21281, (Type_SmallInt)smallint21282);
((AST_Send)send185254)->info = (AST_Info)info3924;
// escape:
send185255 = (Object)new_AST_Send((Object)variable1593, (Object)SMB_escape_, 1, (Object)localvariable26814);
((AST_Send)send185255)->info = (AST_Info)info3924;
block12838 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185255);
// ifFalse:
send185256 = (Object)new_AST_Send((Object)send185254, (Object)SMB_ifFalse_, 1, (Object)block12838);
((AST_Send)send185256)->info = (AST_Info)info3924;
// named:
send185257 = (Object)new_AST_Send((Object)classreference4836, (Object)symbol35855, 1, (Object)localvariable26814);
((AST_Send)send185257)->info = (AST_Info)info3924;
block12839 = (Object)new_AST_Block_with((Type_Array)array21490, (Type_Array)empty_Type_Array, 1, 2, send185256, send185257);
// on:
send185258 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12839);
method25487 = (Object)new_AST_Method_with((Type_Array)array21489, (Type_Array)empty_Type_Array, 1, send185258);
((AST_Method)method25487)->info = (AST_Info)info3924;
methodclosure25485 = (Object)new_Runtime_MethodClosure(method25487);
store_method((Type_Class)class4035, (Type_Symbol)symbol35763, (Runtime_MethodClosure)methodclosure25485);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable26815 = (Object)new_AST_Variable_named(L"variables");
localvariable26816 = (Object)new_AST_Variable_named(L"expression");
array21491 = (Object)new_Type_Array_with(2, (Object)localvariable26815, (Object)localvariable26816);
// preStorePrimary
send185259 = (Object)new_AST_Send((Object)Self, (Object)symbol35804, 0);
string28478 = (Object)new_Type_String(L"initializeExpression");
string28479 = (Object)new_Type_String(L"initializeExpression\n\t| variables expression |\n\t\" Prestoring required parsers to handle circular references. \"\n\tself preStorePrimary.\n\tself preStoreMessageExpression.\n\tself preStoreCascadedMessageExpression.\n\t\n\tparsers at: #expression put: (\n\t\t\n\tPEGParser\n\t\tnamed: \'EXPRESSION\'\n\t\t\n\t\tparsing: self assignmentExpressions\n\t\t\t\t\t& (self cascadedMessageExpression\n\t\t\t\t\t\t| self messageExpression\n\t\t\t\t\t\t<= self primary)\n\t\t\n\t\tsemantics: [ :result |\n\t\t\tvariables := result first.\n\t\t\texpression := result at: 2.\n\t\t\tvariables reverse do: [ :variable |\n\t\t\t\texpression := ASTAssignmentExpression new\n\t\t\t\t\t\t\t\texpression: expression;\n\t\t\t\t\t\t\t\tvariable: variable\n\t\t\t].\n\t\t\texpression\n\t\t]\n\t).\n\t\" After having built the expression parser, we inject the parsers into their stubs. \"\n\tself injectPrimary.\n\tself injectMessageExpression.\n\tself injectCascadedMessageExpression.\n\t\n\t^ parsers at: #expression");
smallint21283 = (Object)new_Type_SmallInt(-1);
smallint21284 = (Object)new_Type_SmallInt(-1);
info3925 = (Object)new_AST_Info((Type_String)string28479,(Type_String)string28478, (Type_SmallInt)smallint21283, (Type_SmallInt)smallint21284);
((AST_Send)send185259)->info = (AST_Info)info3925;
symbol35821 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
// preStoreMessageExpression
send185260 = (Object)new_AST_Send((Object)Self, (Object)symbol35821, 0);
((AST_Send)send185260)->info = (AST_Info)info3925;
symbol35820 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
// preStoreCascadedMessageExpression
send185261 = (Object)new_AST_Send((Object)Self, (Object)symbol35820, 0);
((AST_Send)send185261)->info = (AST_Info)info3925;
constant35976 = (Object)new_AST_Constant((Object)symbol35755);
string28480 = (Object)new_Type_String(L"EXPRESSION");
constant35977 = (Object)new_AST_Constant((Object)string28480);
// assignmentExpressions
send185262 = (Object)new_AST_Send((Object)Self, (Object)symbol36003, 0);
((AST_Send)send185262)->info = (AST_Info)info3925;
// cascadedMessageExpression
send185263 = (Object)new_AST_Send((Object)Self, (Object)symbol35993, 0);
((AST_Send)send185263)->info = (AST_Info)info3925;
// &
send185264 = (Object)new_AST_Send((Object)send185262, (Object)SMB__and, 1, (Object)send185263);
((AST_Send)send185264)->info = (AST_Info)info3925;
// messageExpression
send185265 = (Object)new_AST_Send((Object)Self, (Object)symbol35990, 0);
((AST_Send)send185265)->info = (AST_Info)info3925;
// |
send185266 = (Object)new_AST_Send((Object)send185264, (Object)SMB__or, 1, (Object)send185265);
((AST_Send)send185266)->info = (AST_Info)info3925;
// primary
send185267 = (Object)new_AST_Send((Object)Self, (Object)symbol36028, 0);
((AST_Send)send185267)->info = (AST_Info)info3925;
// <=
send185268 = (Object)new_AST_Send((Object)send185266, (Object)symbol35648, 1, (Object)send185267);
((AST_Send)send185268)->info = (AST_Info)info3925;
localvariable26817 = (Object)new_AST_Variable_named(L"result");
array21492 = (Object)new_Type_Array_with(1, (Object)localvariable26817);
// first
send185269 = (Object)new_AST_Send((Object)localvariable26817, (Object)symbol35693, 0);
((AST_Send)send185269)->info = (AST_Info)info3925;
assign22744 = (Object)new_AST_Assign((Object)localvariable26815, (Object)send185269);
smallint21285 = (Object)new_Type_SmallInt(2);
constant35978 = (Object)new_AST_Constant((Object)smallint21285);
// at:
send185270 = (Object)new_AST_Send((Object)localvariable26817, (Object)SMB_at_, 1, (Object)constant35978);
((AST_Send)send185270)->info = (AST_Info)info3925;
assign22745 = (Object)new_AST_Assign((Object)localvariable26816, (Object)send185270);
symbol36044 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send185271 = (Object)new_AST_Send((Object)localvariable26815, (Object)symbol36044, 0);
((AST_Send)send185271)->info = (AST_Info)info3925;
localvariable26818 = (Object)new_AST_Variable_named(L"variable");
array21493 = (Object)new_Type_Array_with(1, (Object)localvariable26818);
localvariable26819 = (Object)new_AST_Variable_named(L"receiver");
array21494 = (Object)new_Type_Array_with(1, (Object)localvariable26819);
// expression:
send185272 = (Object)new_AST_Send((Object)localvariable26819, (Object)symbol35754, 1, (Object)localvariable26816);
((AST_Send)send185272)->info = (AST_Info)info3925;
// variable:
send185273 = (Object)new_AST_Send((Object)localvariable26819, (Object)symbol35756, 1, (Object)localvariable26818);
((AST_Send)send185273)->info = (AST_Info)info3925;
block12840 = (Object)new_AST_Block_with((Type_Array)array21494, (Type_Array)empty_Type_Array, 3, 2, send185272, send185273);
// new
send185274 = (Object)new_AST_Send((Object)classreference4821, (Object)symbol35612, 0);
((AST_Send)send185274)->info = (AST_Info)info3925;
// value:
send185275 = (Object)new_AST_Send((Object)block12840, (Object)SMB_value_, 1, (Object)send185274);
((AST_Send)send185275)->info = (AST_Info)info3925;
assign22746 = (Object)new_AST_Assign((Object)localvariable26816, (Object)send185275);
block12841 = (Object)new_AST_Block_with((Type_Array)array21493, (Type_Array)empty_Type_Array, 2, 1, assign22746);
// do:
send185276 = (Object)new_AST_Send((Object)send185271, (Object)symbol35642, 1, (Object)block12841);
((AST_Send)send185276)->info = (AST_Info)info3925;
block12842 = (Object)new_AST_Block_with((Type_Array)array21492, (Type_Array)empty_Type_Array, 1, 4, assign22744, assign22745, send185276, localvariable26816);
// named:parsing:semantics:
send185277 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35977, (Object)send185268, (Object)block12842);
((AST_Send)send185277)->info = (AST_Info)info3925;
// at:put:
send185278 = (Object)new_AST_Send((Object)instancevariable5991, (Object)SMB_at_put_, 2, (Object)constant35976, (Object)send185277);
((AST_Send)send185278)->info = (AST_Info)info3925;
// injectPrimary
send185279 = (Object)new_AST_Send((Object)Self, (Object)symbol35780, 0);
((AST_Send)send185279)->info = (AST_Info)info3925;
// injectMessageExpression
send185280 = (Object)new_AST_Send((Object)Self, (Object)symbol35800, 0);
((AST_Send)send185280)->info = (AST_Info)info3925;
symbol35808 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
// injectCascadedMessageExpression
send185281 = (Object)new_AST_Send((Object)Self, (Object)symbol35808, 0);
((AST_Send)send185281)->info = (AST_Info)info3925;
constant35979 = (Object)new_AST_Constant((Object)symbol35755);
// at:
send185282 = (Object)new_AST_Send((Object)instancevariable5991, (Object)SMB_at_, 1, (Object)constant35979);
((AST_Send)send185282)->info = (AST_Info)info3925;
method25488 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21491, 8, send185259, send185260, send185261, send185278, send185279, send185280, send185281, send185282);
((AST_Method)method25488)->info = (AST_Info)info3925;
symbol35791 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure25486 = (Object)new_Runtime_MethodClosure(method25488);
store_method((Type_Class)class4035, (Type_Symbol)symbol35791, (Runtime_MethodClosure)methodclosure25486);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable26820 = (Object)new_AST_Variable_named(L"receiver");
array21495 = (Object)new_Type_Array_with(1, (Object)localvariable26820);
string28481 = (Object)new_Type_String(L";");
constant35980 = (Object)new_AST_Constant((Object)string28481);
// asPEG
send185283 = (Object)new_AST_Send((Object)constant35980, (Object)symbol35639, 0);
string28482 = (Object)new_Type_String(L"injectCascadedMessageExpression");
string28483 = (Object)new_Type_String(L"injectCascadedMessageExpression\n\t^ self cascadedMessageExpression\n\t\t<= (self messageExpression &\n\t\t\t((\';\' asPEG omit: true) & \n\t\t\t\t((self keywordMessageExpression\n\t\t\t\t\t| self binaryMessageExpression)\n\t\t\t\t\t<= self unaryMessageExpression)) plus);\n\t\t\t\t\t\n\t\tsemantics: [:parts |\n\t\t\t(parts at: 2) addFirst: parts first.\n\t\t\tASTMessageCascadeExpression new\n\t\t\t\treceiver: (parts first) receiver;\n\t\t\t\tcascades: (parts at: 2)\n\t\t]");
smallint21286 = (Object)new_Type_SmallInt(-1);
smallint21287 = (Object)new_Type_SmallInt(-1);
info3926 = (Object)new_AST_Info((Type_String)string28483,(Type_String)string28482, (Type_SmallInt)smallint21286, (Type_SmallInt)smallint21287);
((AST_Send)send185283)->info = (AST_Info)info3926;
// omit:
send185284 = (Object)new_AST_Send((Object)send185283, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185284)->info = (AST_Info)info3926;
// keywordMessageExpression
send185285 = (Object)new_AST_Send((Object)Self, (Object)symbol36004, 0);
((AST_Send)send185285)->info = (AST_Info)info3926;
// &
send185286 = (Object)new_AST_Send((Object)send185284, (Object)SMB__and, 1, (Object)send185285);
((AST_Send)send185286)->info = (AST_Info)info3926;
symbol36045 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send185287 = (Object)new_AST_Send((Object)Self, (Object)symbol36045, 0);
((AST_Send)send185287)->info = (AST_Info)info3926;
// |
send185288 = (Object)new_AST_Send((Object)send185286, (Object)SMB__or, 1, (Object)send185287);
((AST_Send)send185288)->info = (AST_Info)info3926;
symbol36046 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send185289 = (Object)new_AST_Send((Object)Self, (Object)symbol36046, 0);
((AST_Send)send185289)->info = (AST_Info)info3926;
// <=
send185290 = (Object)new_AST_Send((Object)send185288, (Object)symbol35648, 1, (Object)send185289);
((AST_Send)send185290)->info = (AST_Info)info3926;
// plus
send185291 = (Object)new_AST_Send((Object)send185290, (Object)symbol35848, 0);
((AST_Send)send185291)->info = (AST_Info)info3926;
// &
send185292 = (Object)new_AST_Send((Object)localvariable26820, (Object)SMB__and, 1, (Object)send185291);
((AST_Send)send185292)->info = (AST_Info)info3926;
localvariable26821 = (Object)new_AST_Variable_named(L"parts");
array21496 = (Object)new_Type_Array_with(1, (Object)localvariable26821);
smallint21288 = (Object)new_Type_SmallInt(2);
constant35981 = (Object)new_AST_Constant((Object)smallint21288);
// at:
send185293 = (Object)new_AST_Send((Object)localvariable26821, (Object)SMB_at_, 1, (Object)constant35981);
((AST_Send)send185293)->info = (AST_Info)info3926;
symbol36047 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send185294 = (Object)new_AST_Send((Object)localvariable26821, (Object)symbol35693, 0);
((AST_Send)send185294)->info = (AST_Info)info3926;
// addFirst:
send185295 = (Object)new_AST_Send((Object)send185293, (Object)symbol36047, 1, (Object)send185294);
((AST_Send)send185295)->info = (AST_Info)info3926;
localvariable26822 = (Object)new_AST_Variable_named(L"receiver");
array21497 = (Object)new_Type_Array_with(1, (Object)localvariable26822);
// first
send185296 = (Object)new_AST_Send((Object)localvariable26821, (Object)symbol35693, 0);
((AST_Send)send185296)->info = (AST_Info)info3926;
// receiver
send185297 = (Object)new_AST_Send((Object)send185296, (Object)symbol35728, 0);
((AST_Send)send185297)->info = (AST_Info)info3926;
// receiver:
send185298 = (Object)new_AST_Send((Object)localvariable26822, (Object)symbol35726, 1, (Object)send185297);
((AST_Send)send185298)->info = (AST_Info)info3926;
smallint21289 = (Object)new_Type_SmallInt(2);
constant35982 = (Object)new_AST_Constant((Object)smallint21289);
// at:
send185299 = (Object)new_AST_Send((Object)localvariable26821, (Object)SMB_at_, 1, (Object)constant35982);
((AST_Send)send185299)->info = (AST_Info)info3926;
// cascades:
send185300 = (Object)new_AST_Send((Object)localvariable26822, (Object)symbol35727, 1, (Object)send185299);
((AST_Send)send185300)->info = (AST_Info)info3926;
block12843 = (Object)new_AST_Block_with((Type_Array)array21497, (Type_Array)empty_Type_Array, 3, 2, send185298, send185300);
// new
send185301 = (Object)new_AST_Send((Object)classreference4829, (Object)symbol35612, 0);
((AST_Send)send185301)->info = (AST_Info)info3926;
// value:
send185302 = (Object)new_AST_Send((Object)block12843, (Object)SMB_value_, 1, (Object)send185301);
((AST_Send)send185302)->info = (AST_Info)info3926;
block12844 = (Object)new_AST_Block_with((Type_Array)array21496, (Type_Array)empty_Type_Array, 2, 2, send185295, send185302);
// semantics:
send185303 = (Object)new_AST_Send((Object)localvariable26820, (Object)symbol35861, 1, (Object)block12844);
((AST_Send)send185303)->info = (AST_Info)info3926;
block12845 = (Object)new_AST_Block_with((Type_Array)array21495, (Type_Array)empty_Type_Array, 1, 2, send185292, send185303);
// cascadedMessageExpression
send185304 = (Object)new_AST_Send((Object)Self, (Object)symbol35993, 0);
((AST_Send)send185304)->info = (AST_Info)info3926;
// messageExpression
send185305 = (Object)new_AST_Send((Object)Self, (Object)symbol35990, 0);
((AST_Send)send185305)->info = (AST_Info)info3926;
// <=
send185306 = (Object)new_AST_Send((Object)send185304, (Object)symbol35648, 1, (Object)send185305);
((AST_Send)send185306)->info = (AST_Info)info3926;
// value:
send185307 = (Object)new_AST_Send((Object)block12845, (Object)SMB_value_, 1, (Object)send185306);
((AST_Send)send185307)->info = (AST_Info)info3926;
method25489 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185307);
((AST_Method)method25489)->info = (AST_Info)info3926;
methodclosure25487 = (Object)new_Runtime_MethodClosure(method25489);
store_method((Type_Class)class4035, (Type_Symbol)symbol35808, (Runtime_MethodClosure)methodclosure25487);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
string28484 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant35983 = (Object)new_AST_Constant((Object)string28484);
// identifier
send185308 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
string28485 = (Object)new_Type_String(L"initializePrimaryVariable");
string28486 = (Object)new_Type_String(L"initializePrimaryVariable\n\t^ PEGParser\n\t\tnamed: \'PRIMARY-VARIABLE\'\n\t\tparsing: self identifier\n\t\tsemantics: [:result | self createVariable: result ]");
smallint21290 = (Object)new_Type_SmallInt(-1);
smallint21291 = (Object)new_Type_SmallInt(-1);
info3927 = (Object)new_AST_Info((Type_String)string28486,(Type_String)string28485, (Type_SmallInt)smallint21290, (Type_SmallInt)smallint21291);
((AST_Send)send185308)->info = (AST_Info)info3927;
localvariable26823 = (Object)new_AST_Variable_named(L"result");
array21498 = (Object)new_Type_Array_with(1, (Object)localvariable26823);
// createVariable:
send185309 = (Object)new_AST_Send((Object)Self, (Object)symbol35768, 1, (Object)localvariable26823);
((AST_Send)send185309)->info = (AST_Info)info3927;
block12846 = (Object)new_AST_Block_with((Type_Array)array21498, (Type_Array)empty_Type_Array, 1, 1, send185309);
// named:parsing:semantics:
send185310 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35983, (Object)send185308, (Object)block12846);
((AST_Send)send185310)->info = (AST_Info)info3927;
method25490 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185310);
((AST_Method)method25490)->info = (AST_Info)info3927;
symbol35801 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure25488 = (Object)new_Runtime_MethodClosure(method25490);
store_method((Type_Class)class4035, (Type_Symbol)symbol35801, (Runtime_MethodClosure)methodclosure25488);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable26824 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable26825 = (Object)new_AST_Variable_named(L"first");
array21499 = (Object)new_Type_Array_with(2, (Object)localvariable26824, (Object)localvariable26825);
string28487 = (Object)new_Type_String(L"\'");
constant35984 = (Object)new_AST_Constant((Object)string28487);
// asPEG
send185311 = (Object)new_AST_Send((Object)constant35984, (Object)symbol35639, 0);
string28488 = (Object)new_Type_String(L"initializeString");
string28489 = (Object)new_Type_String(L"initializeString\n\t\" XXX Have to optimize and clean...\"\n\t| stringBorder first |\n\tstringBorder := \'\'\'\' asPEG omit: true.\n\n\t^ PEGParser\n\t\tnamed: \'STRING\'\n\t\tparsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus\n\t\tsemantics: [:result |\n\t\t\tfirst := result removeFirst.\n\t\t\tfirst := first inject: \'\' into: [:c :e | c, e ].\n\t\t\tresult inject: first into: [:c :e | c, \'\'\'\', (e inject: \'\' into: [:ic :ie | ic, ie ]) ]\n\t\t]");
smallint21292 = (Object)new_Type_SmallInt(-1);
smallint21293 = (Object)new_Type_SmallInt(-1);
info3928 = (Object)new_AST_Info((Type_String)string28489,(Type_String)string28488, (Type_SmallInt)smallint21292, (Type_SmallInt)smallint21293);
((AST_Send)send185311)->info = (AST_Info)info3928;
// omit:
send185312 = (Object)new_AST_Send((Object)send185311, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185312)->info = (AST_Info)info3928;
assign22747 = (Object)new_AST_Assign((Object)localvariable26824, (Object)send185312);
string28490 = (Object)new_Type_String(L"STRING");
constant35985 = (Object)new_AST_Constant((Object)string28490);
// not
send185313 = (Object)new_AST_Send((Object)localvariable26824, (Object)SMB_not, 0);
((AST_Send)send185313)->info = (AST_Info)info3928;
// strongTimes
send185314 = (Object)new_AST_Send((Object)send185313, (Object)symbol35839, 0);
((AST_Send)send185314)->info = (AST_Info)info3928;
// &&
send185315 = (Object)new_AST_Send((Object)localvariable26824, (Object)symbol35838, 1, (Object)send185314);
((AST_Send)send185315)->info = (AST_Info)info3928;
// <&
send185316 = (Object)new_AST_Send((Object)send185315, (Object)symbol35939, 1, (Object)localvariable26824);
((AST_Send)send185316)->info = (AST_Info)info3928;
symbol35844 = (Object)new_Type_Symbol_cached(L"strongPlus");
// strongPlus
send185317 = (Object)new_AST_Send((Object)send185316, (Object)symbol35844, 0);
((AST_Send)send185317)->info = (AST_Info)info3928;
localvariable26826 = (Object)new_AST_Variable_named(L"result");
array21500 = (Object)new_Type_Array_with(1, (Object)localvariable26826);
symbol36048 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send185318 = (Object)new_AST_Send((Object)localvariable26826, (Object)symbol36048, 0);
((AST_Send)send185318)->info = (AST_Info)info3928;
assign22748 = (Object)new_AST_Assign((Object)localvariable26825, (Object)send185318);
string28491 = (Object)new_Type_String(L"");
constant35986 = (Object)new_AST_Constant((Object)string28491);
localvariable26827 = (Object)new_AST_Variable_named(L"c");
localvariable26828 = (Object)new_AST_Variable_named(L"e");
array21501 = (Object)new_Type_Array_with(2, (Object)localvariable26827, (Object)localvariable26828);
// ,
send185319 = (Object)new_AST_Send((Object)localvariable26827, (Object)SMB__concat, 1, (Object)localvariable26828);
((AST_Send)send185319)->info = (AST_Info)info3928;
block12847 = (Object)new_AST_Block_with((Type_Array)array21501, (Type_Array)empty_Type_Array, 2, 1, send185319);
// inject:into:
send185320 = (Object)new_AST_Send((Object)localvariable26825, (Object)symbol35697, 2, (Object)constant35986, (Object)block12847);
((AST_Send)send185320)->info = (AST_Info)info3928;
assign22749 = (Object)new_AST_Assign((Object)localvariable26825, (Object)send185320);
localvariable26829 = (Object)new_AST_Variable_named(L"c");
localvariable26830 = (Object)new_AST_Variable_named(L"e");
array21502 = (Object)new_Type_Array_with(2, (Object)localvariable26829, (Object)localvariable26830);
string28492 = (Object)new_Type_String(L"\'");
constant35987 = (Object)new_AST_Constant((Object)string28492);
// ,
send185321 = (Object)new_AST_Send((Object)localvariable26829, (Object)SMB__concat, 1, (Object)constant35987);
((AST_Send)send185321)->info = (AST_Info)info3928;
string28493 = (Object)new_Type_String(L"");
constant35988 = (Object)new_AST_Constant((Object)string28493);
localvariable26831 = (Object)new_AST_Variable_named(L"ic");
localvariable26832 = (Object)new_AST_Variable_named(L"ie");
array21503 = (Object)new_Type_Array_with(2, (Object)localvariable26831, (Object)localvariable26832);
// ,
send185322 = (Object)new_AST_Send((Object)localvariable26831, (Object)SMB__concat, 1, (Object)localvariable26832);
((AST_Send)send185322)->info = (AST_Info)info3928;
block12848 = (Object)new_AST_Block_with((Type_Array)array21503, (Type_Array)empty_Type_Array, 3, 1, send185322);
// inject:into:
send185323 = (Object)new_AST_Send((Object)localvariable26830, (Object)symbol35697, 2, (Object)constant35988, (Object)block12848);
((AST_Send)send185323)->info = (AST_Info)info3928;
// ,
send185324 = (Object)new_AST_Send((Object)send185321, (Object)SMB__concat, 1, (Object)send185323);
((AST_Send)send185324)->info = (AST_Info)info3928;
block12849 = (Object)new_AST_Block_with((Type_Array)array21502, (Type_Array)empty_Type_Array, 2, 1, send185324);
// inject:into:
send185325 = (Object)new_AST_Send((Object)localvariable26826, (Object)symbol35697, 2, (Object)localvariable26825, (Object)block12849);
((AST_Send)send185325)->info = (AST_Info)info3928;
block12850 = (Object)new_AST_Block_with((Type_Array)array21500, (Type_Array)empty_Type_Array, 1, 3, assign22748, assign22749, send185325);
// named:parsing:semantics:
send185326 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35985, (Object)send185317, (Object)block12850);
((AST_Send)send185326)->info = (AST_Info)info3928;
method25491 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21499, 2, assign22747, send185326);
((AST_Method)method25491)->info = (AST_Info)info3928;
symbol35813 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure25489 = (Object)new_Runtime_MethodClosure(method25491);
store_method((Type_Class)class4035, (Type_Symbol)symbol35813, (Runtime_MethodClosure)methodclosure25489);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable26833 = (Object)new_AST_Variable_named(L"array");
array21504 = (Object)new_Type_Array_with(1, (Object)localvariable26833);
string28494 = (Object)new_Type_String(L"ARRAY");
constant35989 = (Object)new_AST_Constant((Object)string28494);
// named:
send185327 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35855, 1, (Object)constant35989);
string28495 = (Object)new_Type_String(L"initializeArray");
string28496 = (Object)new_Type_String(L"initializeArray\n\t| array |\n\tarray := PEGParser named: \'ARRAY\'.\n\t\n\tarray <= ((\'(\' asPEG omit: true)\n\t\t\t\t\n\t\t\t\t& ((self numberConstant\n\t\t\t\t\t| self stringConstant\n\t\t\t\t\t<= self symbolInArray\n\t\t\t\t\t<= self symbolConstant\n\t\t\t\t\t<= self characterConstant\n\t\t\t\t\t<= array) times)\n\t\t\t\t\t\n\t\t\t\t<& (\')\' asPEG omit: true)).\n\t\n\tarray semantics: [ :result |\n\t\tASTArray new literals: result\n\t].\n\t\n\t ^ array");
smallint21294 = (Object)new_Type_SmallInt(-1);
smallint21295 = (Object)new_Type_SmallInt(-1);
info3929 = (Object)new_AST_Info((Type_String)string28496,(Type_String)string28495, (Type_SmallInt)smallint21294, (Type_SmallInt)smallint21295);
((AST_Send)send185327)->info = (AST_Info)info3929;
assign22750 = (Object)new_AST_Assign((Object)localvariable26833, (Object)send185327);
string28497 = (Object)new_Type_String(L"(");
constant35990 = (Object)new_AST_Constant((Object)string28497);
// asPEG
send185328 = (Object)new_AST_Send((Object)constant35990, (Object)symbol35639, 0);
((AST_Send)send185328)->info = (AST_Info)info3929;
// omit:
send185329 = (Object)new_AST_Send((Object)send185328, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185329)->info = (AST_Info)info3929;
// <=
send185330 = (Object)new_AST_Send((Object)localvariable26833, (Object)symbol35648, 1, (Object)send185329);
((AST_Send)send185330)->info = (AST_Info)info3929;
// numberConstant
send185331 = (Object)new_AST_Send((Object)Self, (Object)symbol36037, 0);
((AST_Send)send185331)->info = (AST_Info)info3929;
// stringConstant
send185332 = (Object)new_AST_Send((Object)Self, (Object)symbol36015, 0);
((AST_Send)send185332)->info = (AST_Info)info3929;
// |
send185333 = (Object)new_AST_Send((Object)send185331, (Object)SMB__or, 1, (Object)send185332);
((AST_Send)send185333)->info = (AST_Info)info3929;
symbol36049 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send185334 = (Object)new_AST_Send((Object)Self, (Object)symbol36049, 0);
((AST_Send)send185334)->info = (AST_Info)info3929;
// <=
send185335 = (Object)new_AST_Send((Object)send185333, (Object)symbol35648, 1, (Object)send185334);
((AST_Send)send185335)->info = (AST_Info)info3929;
// symbolConstant
send185336 = (Object)new_AST_Send((Object)Self, (Object)symbol36010, 0);
((AST_Send)send185336)->info = (AST_Info)info3929;
// <=
send185337 = (Object)new_AST_Send((Object)send185335, (Object)symbol35648, 1, (Object)send185336);
((AST_Send)send185337)->info = (AST_Info)info3929;
// characterConstant
send185338 = (Object)new_AST_Send((Object)Self, (Object)symbol35997, 0);
((AST_Send)send185338)->info = (AST_Info)info3929;
// <=
send185339 = (Object)new_AST_Send((Object)send185337, (Object)symbol35648, 1, (Object)send185338);
((AST_Send)send185339)->info = (AST_Info)info3929;
// <=
send185340 = (Object)new_AST_Send((Object)send185339, (Object)symbol35648, 1, (Object)localvariable26833);
((AST_Send)send185340)->info = (AST_Info)info3929;
// times
send185341 = (Object)new_AST_Send((Object)send185340, (Object)symbol35837, 0);
((AST_Send)send185341)->info = (AST_Info)info3929;
// &
send185342 = (Object)new_AST_Send((Object)send185330, (Object)SMB__and, 1, (Object)send185341);
((AST_Send)send185342)->info = (AST_Info)info3929;
string28498 = (Object)new_Type_String(L")");
constant35991 = (Object)new_AST_Constant((Object)string28498);
// asPEG
send185343 = (Object)new_AST_Send((Object)constant35991, (Object)symbol35639, 0);
((AST_Send)send185343)->info = (AST_Info)info3929;
// omit:
send185344 = (Object)new_AST_Send((Object)send185343, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185344)->info = (AST_Info)info3929;
// <&
send185345 = (Object)new_AST_Send((Object)send185342, (Object)symbol35939, 1, (Object)send185344);
((AST_Send)send185345)->info = (AST_Info)info3929;
localvariable26834 = (Object)new_AST_Variable_named(L"result");
array21505 = (Object)new_Type_Array_with(1, (Object)localvariable26834);
// new
send185346 = (Object)new_AST_Send((Object)classreference4837, (Object)symbol35612, 0);
((AST_Send)send185346)->info = (AST_Info)info3929;
// literals:
send185347 = (Object)new_AST_Send((Object)send185346, (Object)symbol35684, 1, (Object)localvariable26834);
((AST_Send)send185347)->info = (AST_Info)info3929;
block12851 = (Object)new_AST_Block_with((Type_Array)array21505, (Type_Array)empty_Type_Array, 1, 1, send185347);
// semantics:
send185348 = (Object)new_AST_Send((Object)localvariable26833, (Object)symbol35861, 1, (Object)block12851);
((AST_Send)send185348)->info = (AST_Info)info3929;
method25492 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21504, 4, assign22750, send185345, send185348, localvariable26833);
((AST_Method)method25492)->info = (AST_Info)info3929;
symbol35773 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure25490 = (Object)new_Runtime_MethodClosure(method25492);
store_method((Type_Class)class4035, (Type_Symbol)symbol35773, (Runtime_MethodClosure)methodclosure25490);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
// identifier
send185349 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
string28499 = (Object)new_Type_String(L"initializeParameterName");
string28500 = (Object)new_Type_String(L"initializeParameterName\n\t^ self identifier");
smallint21296 = (Object)new_Type_SmallInt(-1);
smallint21297 = (Object)new_Type_SmallInt(-1);
info3930 = (Object)new_AST_Info((Type_String)string28500,(Type_String)string28499, (Type_SmallInt)smallint21296, (Type_SmallInt)smallint21297);
((AST_Send)send185349)->info = (AST_Info)info3930;
method25493 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185349);
((AST_Method)method25493)->info = (AST_Info)info3930;
symbol35785 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure25491 = (Object)new_Runtime_MethodClosure(method25493);
store_method((Type_Class)class4035, (Type_Symbol)symbol35785, (Runtime_MethodClosure)methodclosure25491);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
// 			ifTrue: [ self perform: selector ]
//             ifFalse: [ super doesNotUnderstand: message ]
// 	]
localvariable26835 = (Object)new_AST_Variable_named(L"message");
array21506 = (Object)new_Type_Array_with(1, (Object)localvariable26835);
localvariable26836 = (Object)new_AST_Variable_named(L"selector");
array21507 = (Object)new_Type_Array_with(1, (Object)localvariable26836);
// selector
send185350 = (Object)new_AST_Send((Object)localvariable26835, (Object)symbol35626, 0);
string28501 = (Object)new_Type_String(L"doesNotUnderstand:");
string28502 = (Object)new_Type_String(L"doesNotUnderstand: message\n    | selector |\n    ^ parsers at: message selector ifAbsentPut: [\n        selector := (\'initialize\', message selector capitalized) asSymbol.\n        (self respondsTo: selector)\n\t\t\tifTrue: [ self perform: selector ]\n            ifFalse: [ super doesNotUnderstand: message ]\n\t]");
smallint21298 = (Object)new_Type_SmallInt(-1);
smallint21299 = (Object)new_Type_SmallInt(-1);
info3931 = (Object)new_AST_Info((Type_String)string28502,(Type_String)string28501, (Type_SmallInt)smallint21298, (Type_SmallInt)smallint21299);
((AST_Send)send185350)->info = (AST_Info)info3931;
string28503 = (Object)new_Type_String(L"initialize");
constant35992 = (Object)new_AST_Constant((Object)string28503);
// selector
send185351 = (Object)new_AST_Send((Object)localvariable26835, (Object)symbol35626, 0);
((AST_Send)send185351)->info = (AST_Info)info3931;
// capitalized
send185352 = (Object)new_AST_Send((Object)send185351, (Object)symbol35643, 0);
((AST_Send)send185352)->info = (AST_Info)info3931;
// ,
send185353 = (Object)new_AST_Send((Object)constant35992, (Object)SMB__concat, 1, (Object)send185352);
((AST_Send)send185353)->info = (AST_Info)info3931;
// asSymbol
send185354 = (Object)new_AST_Send((Object)send185353, (Object)SMB_asSymbol, 0);
((AST_Send)send185354)->info = (AST_Info)info3931;
assign22751 = (Object)new_AST_Assign((Object)localvariable26836, (Object)send185354);
symbol35520 = (Object)new_Type_Symbol_cached(L"respondsTo:");
// respondsTo:
send185355 = (Object)new_AST_Send((Object)Self, (Object)symbol35520, 1, (Object)localvariable26836);
((AST_Send)send185355)->info = (AST_Info)info3931;
symbol36050 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send185356 = (Object)new_AST_Send((Object)Self, (Object)symbol36050, 1, (Object)localvariable26836);
((AST_Send)send185356)->info = (AST_Info)info3931;
block12852 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185356);
super1984 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable26835);
block12853 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super1984);
// ifTrue:ifFalse:
send185357 = (Object)new_AST_Send((Object)send185355, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12852, (Object)block12853);
((AST_Send)send185357)->info = (AST_Info)info3931;
block12854 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, assign22751, send185357);
// at:ifAbsentPut:
send185358 = (Object)new_AST_Send((Object)instancevariable5991, (Object)symbol35892, 2, (Object)send185350, (Object)block12854);
((AST_Send)send185358)->info = (AST_Info)info3931;
method25494 = (Object)new_AST_Method_with((Type_Array)array21506, (Type_Array)array21507, 1, send185358);
((AST_Method)method25494)->info = (AST_Info)info3931;
methodclosure25492 = (Object)new_Runtime_MethodClosure(method25494);
store_method((Type_Class)class4035, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure25492);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send185359 = (Object)new_AST_Send((Object)Self, (Object)symbol36035, 0);
string28504 = (Object)new_Type_String(L"initializeBinaryObjectDescription");
string28505 = (Object)new_Type_String(L"initializeBinaryObjectDescription\n\tself binaryExpression.\n\t\" binaryExpression will build this parser. \"\n\t^ self binaryObjectDescription");
smallint21300 = (Object)new_Type_SmallInt(-1);
smallint21301 = (Object)new_Type_SmallInt(-1);
info3932 = (Object)new_AST_Info((Type_String)string28505,(Type_String)string28504, (Type_SmallInt)smallint21300, (Type_SmallInt)smallint21301);
((AST_Send)send185359)->info = (AST_Info)info3932;
// binaryObjectDescription
send185360 = (Object)new_AST_Send((Object)Self, (Object)symbol35992, 0);
((AST_Send)send185360)->info = (AST_Info)info3932;
method25495 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send185359, send185360);
((AST_Method)method25495)->info = (AST_Info)info3932;
symbol35823 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure25493 = (Object)new_Runtime_MethodClosure(method25495);
store_method((Type_Class)class4035, (Type_Symbol)symbol35823, (Runtime_MethodClosure)methodclosure25493);


// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
string28506 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant35993 = (Object)new_AST_Constant((Object)string28506);
string28507 = (Object)new_Type_String(L"#");
constant35994 = (Object)new_AST_Constant((Object)string28507);
// asPEG
send185361 = (Object)new_AST_Send((Object)constant35994, (Object)symbol35639, 0);
string28508 = (Object)new_Type_String(L"initializeSymbolConstant");
string28509 = (Object)new_Type_String(L"initializeSymbolConstant\n\t^ PEGParser\n\t\tnamed: \'SYMBOL-CONSTANT\'\n\t\tparsing: ((\'#\' asPEG omit: true) && self symbol)\n\t\tsemantics: [ :result |\n\t\t\tASTSymbol new symbol: result\n\t\t]");
smallint21302 = (Object)new_Type_SmallInt(-1);
smallint21303 = (Object)new_Type_SmallInt(-1);
info3933 = (Object)new_AST_Info((Type_String)string28509,(Type_String)string28508, (Type_SmallInt)smallint21302, (Type_SmallInt)smallint21303);
((AST_Send)send185361)->info = (AST_Info)info3933;
// omit:
send185362 = (Object)new_AST_Send((Object)send185361, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185362)->info = (AST_Info)info3933;
// symbol
send185363 = (Object)new_AST_Send((Object)Self, (Object)symbol35706, 0);
((AST_Send)send185363)->info = (AST_Info)info3933;
// &&
send185364 = (Object)new_AST_Send((Object)send185362, (Object)symbol35838, 1, (Object)send185363);
((AST_Send)send185364)->info = (AST_Info)info3933;
localvariable26837 = (Object)new_AST_Variable_named(L"result");
array21508 = (Object)new_Type_Array_with(1, (Object)localvariable26837);
// new
send185365 = (Object)new_AST_Send((Object)classreference4836, (Object)symbol35612, 0);
((AST_Send)send185365)->info = (AST_Info)info3933;
// symbol:
send185366 = (Object)new_AST_Send((Object)send185365, (Object)symbol35707, 1, (Object)localvariable26837);
((AST_Send)send185366)->info = (AST_Info)info3933;
block12855 = (Object)new_AST_Block_with((Type_Array)array21508, (Type_Array)empty_Type_Array, 1, 1, send185366);
// named:parsing:semantics:
send185367 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35993, (Object)send185364, (Object)block12855);
((AST_Send)send185367)->info = (AST_Info)info3933;
method25496 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185367);
((AST_Method)method25496)->info = (AST_Info)info3933;
symbol35767 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure25494 = (Object)new_Runtime_MethodClosure(method25496);
store_method((Type_Class)class4035, (Type_Symbol)symbol35767, (Runtime_MethodClosure)methodclosure25494);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string28510 = (Object)new_Type_String(L"|");
constant35995 = (Object)new_AST_Constant((Object)string28510);
// asPEG
send185368 = (Object)new_AST_Send((Object)constant35995, (Object)symbol35639, 0);
string28511 = (Object)new_Type_String(L"initializeBar");
string28512 = (Object)new_Type_String(L"initializeBar\n\t^ \'|\' asPEG omit: true");
smallint21304 = (Object)new_Type_SmallInt(-1);
smallint21305 = (Object)new_Type_SmallInt(-1);
info3934 = (Object)new_AST_Info((Type_String)string28512,(Type_String)string28511, (Type_SmallInt)smallint21304, (Type_SmallInt)smallint21305);
((AST_Send)send185368)->info = (AST_Info)info3934;
// omit:
send185369 = (Object)new_AST_Send((Object)send185368, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185369)->info = (AST_Info)info3934;
method25497 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185369);
((AST_Method)method25497)->info = (AST_Info)info3934;
symbol35795 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure25495 = (Object)new_Runtime_MethodClosure(method25497);
store_method((Type_Class)class4035, (Type_Symbol)symbol35795, (Runtime_MethodClosure)methodclosure25495);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
// preStoreBinaryObjectDescription
send185370 = (Object)new_AST_Send((Object)Self, (Object)symbol35762, 0);
string28513 = (Object)new_Type_String(L"initializeBinaryExpression");
string28514 = (Object)new_Type_String(L"initializeBinaryExpression\n\t\n\tself preStoreBinaryObjectDescription.\n\t\n\tparsers at: #binaryExpression ifAbsentPut: (\n\tPEGParser\n\t\tnamed: \'BINARY-EXPRESSION\'\n\t\tparsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)\n\t\tsemantics: [:parts |\n\t\t\t(parts at: 3)\n\t\t\t\targumentOfBinary: (ASTBinaryExpression new\n\t\t\t\t\treceiver: (parts first);\n\t\t\t\t\tselector: (ASTBinarySelector new selector: (self createSymbol: (parts at: 2))))\n\t\t]\n\t).\n\t\n\tself injectBinaryObjectDescription.\n\t\n\t^ self binaryExpression");
smallint21306 = (Object)new_Type_SmallInt(-1);
smallint21307 = (Object)new_Type_SmallInt(-1);
info3935 = (Object)new_AST_Info((Type_String)string28514,(Type_String)string28513, (Type_SmallInt)smallint21306, (Type_SmallInt)smallint21307);
((AST_Send)send185370)->info = (AST_Info)info3935;
constant35996 = (Object)new_AST_Constant((Object)symbol36035);
string28515 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant35997 = (Object)new_AST_Constant((Object)string28515);
// unaryObjectDescription
send185371 = (Object)new_AST_Send((Object)Self, (Object)symbol36007, 0);
((AST_Send)send185371)->info = (AST_Info)info3935;
// binarySelector
send185372 = (Object)new_AST_Send((Object)Self, (Object)symbol35996, 0);
((AST_Send)send185372)->info = (AST_Info)info3935;
// &
send185373 = (Object)new_AST_Send((Object)send185371, (Object)SMB__and, 1, (Object)send185372);
((AST_Send)send185373)->info = (AST_Info)info3935;
// binaryObjectDescription
send185374 = (Object)new_AST_Send((Object)Self, (Object)symbol35992, 0);
((AST_Send)send185374)->info = (AST_Info)info3935;
// <&
send185375 = (Object)new_AST_Send((Object)send185373, (Object)symbol35939, 1, (Object)send185374);
((AST_Send)send185375)->info = (AST_Info)info3935;
localvariable26838 = (Object)new_AST_Variable_named(L"parts");
array21509 = (Object)new_Type_Array_with(1, (Object)localvariable26838);
smallint21308 = (Object)new_Type_SmallInt(3);
constant35998 = (Object)new_AST_Constant((Object)smallint21308);
// at:
send185376 = (Object)new_AST_Send((Object)localvariable26838, (Object)SMB_at_, 1, (Object)constant35998);
((AST_Send)send185376)->info = (AST_Info)info3935;
localvariable26839 = (Object)new_AST_Variable_named(L"receiver");
array21510 = (Object)new_Type_Array_with(1, (Object)localvariable26839);
// first
send185377 = (Object)new_AST_Send((Object)localvariable26838, (Object)symbol35693, 0);
((AST_Send)send185377)->info = (AST_Info)info3935;
// receiver:
send185378 = (Object)new_AST_Send((Object)localvariable26839, (Object)symbol35726, 1, (Object)send185377);
((AST_Send)send185378)->info = (AST_Info)info3935;
classreference4846 = (Object)new_Organization_ClassReference((Type_Class)class4058);
// new
send185379 = (Object)new_AST_Send((Object)classreference4846, (Object)symbol35612, 0);
((AST_Send)send185379)->info = (AST_Info)info3935;
smallint21309 = (Object)new_Type_SmallInt(2);
constant35999 = (Object)new_AST_Constant((Object)smallint21309);
// at:
send185380 = (Object)new_AST_Send((Object)localvariable26838, (Object)SMB_at_, 1, (Object)constant35999);
((AST_Send)send185380)->info = (AST_Info)info3935;
// createSymbol:
send185381 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)send185380);
((AST_Send)send185381)->info = (AST_Info)info3935;
// selector:
send185382 = (Object)new_AST_Send((Object)send185379, (Object)symbol35732, 1, (Object)send185381);
((AST_Send)send185382)->info = (AST_Info)info3935;
// selector:
send185383 = (Object)new_AST_Send((Object)localvariable26839, (Object)symbol35732, 1, (Object)send185382);
((AST_Send)send185383)->info = (AST_Info)info3935;
block12856 = (Object)new_AST_Block_with((Type_Array)array21510, (Type_Array)empty_Type_Array, 2, 2, send185378, send185383);
// new
send185384 = (Object)new_AST_Send((Object)classreference4828, (Object)symbol35612, 0);
((AST_Send)send185384)->info = (AST_Info)info3935;
// value:
send185385 = (Object)new_AST_Send((Object)block12856, (Object)SMB_value_, 1, (Object)send185384);
((AST_Send)send185385)->info = (AST_Info)info3935;
// argumentOfBinary:
send185386 = (Object)new_AST_Send((Object)send185376, (Object)symbol35681, 1, (Object)send185385);
((AST_Send)send185386)->info = (AST_Info)info3935;
block12857 = (Object)new_AST_Block_with((Type_Array)array21509, (Type_Array)empty_Type_Array, 1, 1, send185386);
// named:parsing:semantics:
send185387 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant35997, (Object)send185375, (Object)block12857);
((AST_Send)send185387)->info = (AST_Info)info3935;
// at:ifAbsentPut:
send185388 = (Object)new_AST_Send((Object)instancevariable5991, (Object)symbol35892, 2, (Object)constant35996, (Object)send185387);
((AST_Send)send185388)->info = (AST_Info)info3935;
symbol35761 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
// injectBinaryObjectDescription
send185389 = (Object)new_AST_Send((Object)Self, (Object)symbol35761, 0);
((AST_Send)send185389)->info = (AST_Info)info3935;
// binaryExpression
send185390 = (Object)new_AST_Send((Object)Self, (Object)symbol36035, 0);
((AST_Send)send185390)->info = (AST_Info)info3935;
method25498 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send185370, send185388, send185389, send185390);
((AST_Method)method25498)->info = (AST_Info)info3935;
symbol35760 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure25496 = (Object)new_Runtime_MethodClosure(method25498);
store_method((Type_Class)class4035, (Type_Symbol)symbol35760, (Runtime_MethodClosure)methodclosure25496);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send185391 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
string28516 = (Object)new_Type_String(L"initializeSubExpression");
string28517 = (Object)new_Type_String(L"initializeSubExpression\n\t^ self expression & (\'.\' asPEG omit: true)");
smallint21310 = (Object)new_Type_SmallInt(-1);
smallint21311 = (Object)new_Type_SmallInt(-1);
info3936 = (Object)new_AST_Info((Type_String)string28517,(Type_String)string28516, (Type_SmallInt)smallint21310, (Type_SmallInt)smallint21311);
((AST_Send)send185391)->info = (AST_Info)info3936;
string28518 = (Object)new_Type_String(L".");
constant36000 = (Object)new_AST_Constant((Object)string28518);
// asPEG
send185392 = (Object)new_AST_Send((Object)constant36000, (Object)symbol35639, 0);
((AST_Send)send185392)->info = (AST_Info)info3936;
// omit:
send185393 = (Object)new_AST_Send((Object)send185392, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185393)->info = (AST_Info)info3936;
// &
send185394 = (Object)new_AST_Send((Object)send185391, (Object)SMB__and, 1, (Object)send185393);
((AST_Send)send185394)->info = (AST_Info)info3936;
method25499 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185394);
((AST_Method)method25499)->info = (AST_Info)info3936;
symbol35805 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure25497 = (Object)new_Runtime_MethodClosure(method25499);
store_method((Type_Class)class4035, (Type_Symbol)symbol35805, (Runtime_MethodClosure)methodclosure25497);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string28519 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant36001 = (Object)new_AST_Constant((Object)string28519);
// binaryObjectDescription
send185395 = (Object)new_AST_Send((Object)Self, (Object)symbol35992, 0);
string28520 = (Object)new_Type_String(L"initializeKeywordExpression");
string28521 = (Object)new_Type_String(L"initializeKeywordExpression\n\t^ PEGParser\n\t\tnamed: \'KEYWORD-EXPRESSION\'\n\t\tparsing: (self binaryObjectDescription & self keywordMessageExpression)\n\t\tsemantics: [ :parts |\n\t\t\t(parts at: 2) receiver: (parts first)\n\t\t]");
smallint21312 = (Object)new_Type_SmallInt(-1);
smallint21313 = (Object)new_Type_SmallInt(-1);
info3937 = (Object)new_AST_Info((Type_String)string28521,(Type_String)string28520, (Type_SmallInt)smallint21312, (Type_SmallInt)smallint21313);
((AST_Send)send185395)->info = (AST_Info)info3937;
// keywordMessageExpression
send185396 = (Object)new_AST_Send((Object)Self, (Object)symbol36004, 0);
((AST_Send)send185396)->info = (AST_Info)info3937;
// &
send185397 = (Object)new_AST_Send((Object)send185395, (Object)SMB__and, 1, (Object)send185396);
((AST_Send)send185397)->info = (AST_Info)info3937;
localvariable26840 = (Object)new_AST_Variable_named(L"parts");
array21511 = (Object)new_Type_Array_with(1, (Object)localvariable26840);
smallint21314 = (Object)new_Type_SmallInt(2);
constant36002 = (Object)new_AST_Constant((Object)smallint21314);
// at:
send185398 = (Object)new_AST_Send((Object)localvariable26840, (Object)SMB_at_, 1, (Object)constant36002);
((AST_Send)send185398)->info = (AST_Info)info3937;
// first
send185399 = (Object)new_AST_Send((Object)localvariable26840, (Object)symbol35693, 0);
((AST_Send)send185399)->info = (AST_Info)info3937;
// receiver:
send185400 = (Object)new_AST_Send((Object)send185398, (Object)symbol35726, 1, (Object)send185399);
((AST_Send)send185400)->info = (AST_Info)info3937;
block12858 = (Object)new_AST_Block_with((Type_Array)array21511, (Type_Array)empty_Type_Array, 1, 1, send185400);
// named:parsing:semantics:
send185401 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36001, (Object)send185397, (Object)block12858);
((AST_Send)send185401)->info = (AST_Info)info3937;
method25500 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185401);
((AST_Method)method25500)->info = (AST_Info)info3937;
symbol35817 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure25498 = (Object)new_Runtime_MethodClosure(method25500);
store_method((Type_Class)class4035, (Type_Symbol)symbol35817, (Runtime_MethodClosure)methodclosure25498);


// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string28522 = (Object)new_Type_String(L"A-Z");
constant36003 = (Object)new_AST_Constant((Object)string28522);
// asPEGRange
send185402 = (Object)new_AST_Send((Object)constant36003, (Object)symbol35636, 0);
string28523 = (Object)new_Type_String(L"initializeUppercase");
string28524 = (Object)new_Type_String(L"initializeUppercase\n\t^ (\'A-Z\' asPEGRange)");
smallint21315 = (Object)new_Type_SmallInt(-1);
smallint21316 = (Object)new_Type_SmallInt(-1);
info3938 = (Object)new_AST_Info((Type_String)string28524,(Type_String)string28523, (Type_SmallInt)smallint21315, (Type_SmallInt)smallint21316);
((AST_Send)send185402)->info = (AST_Info)info3938;
method25501 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185402);
((AST_Method)method25501)->info = (AST_Info)info3938;
symbol35777 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure25499 = (Object)new_Runtime_MethodClosure(method25501);
store_method((Type_Class)class4035, (Type_Symbol)symbol35777, (Runtime_MethodClosure)methodclosure25499);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
string28525 = (Object)new_Type_String(L"BLOCK");
constant36004 = (Object)new_AST_Constant((Object)string28525);
string28526 = (Object)new_Type_String(L"[");
constant36005 = (Object)new_AST_Constant((Object)string28526);
// asPEG
send185403 = (Object)new_AST_Send((Object)constant36005, (Object)symbol35639, 0);
string28527 = (Object)new_Type_String(L"initializeBlock");
string28528 = (Object)new_Type_String(L"initializeBlock\n\t^ PEGParser\n\t\tnamed: \'BLOCK\'\n\t\t\n\t\tparsing: ((\'[\' asPEG omit: true)\n\t\t\t\t\t& (self blockArguments & self bar) optional\n\t\t\t\t\t<& self temporaries optional\n\t\t\t\t\t<& self statements\n\t\t\t\t\t<& (\']\' asPEG omit: true))\n\n\t\tsemantics: [ :result |\n\t\t\tASTBlock new\n\t\t\t\tparameters: ((result first) resultIfFailed: [ OrderedCollection new ]);\n\t\t\t\ttemporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);\n\t\t\t\tstatements: \t(result at: 3)\n\t\t]");
smallint21317 = (Object)new_Type_SmallInt(-1);
smallint21318 = (Object)new_Type_SmallInt(-1);
info3939 = (Object)new_AST_Info((Type_String)string28528,(Type_String)string28527, (Type_SmallInt)smallint21317, (Type_SmallInt)smallint21318);
((AST_Send)send185403)->info = (AST_Info)info3939;
// omit:
send185404 = (Object)new_AST_Send((Object)send185403, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185404)->info = (AST_Info)info3939;
// blockArguments
send185405 = (Object)new_AST_Send((Object)Self, (Object)symbol36026, 0);
((AST_Send)send185405)->info = (AST_Info)info3939;
symbol36051 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send185406 = (Object)new_AST_Send((Object)Self, (Object)symbol36051, 0);
((AST_Send)send185406)->info = (AST_Info)info3939;
// &
send185407 = (Object)new_AST_Send((Object)send185405, (Object)SMB__and, 1, (Object)send185406);
((AST_Send)send185407)->info = (AST_Info)info3939;
// optional
send185408 = (Object)new_AST_Send((Object)send185407, (Object)symbol35841, 0);
((AST_Send)send185408)->info = (AST_Info)info3939;
// &
send185409 = (Object)new_AST_Send((Object)send185404, (Object)SMB__and, 1, (Object)send185408);
((AST_Send)send185409)->info = (AST_Info)info3939;
// temporaries
send185410 = (Object)new_AST_Send((Object)Self, (Object)symbol35747, 0);
((AST_Send)send185410)->info = (AST_Info)info3939;
// optional
send185411 = (Object)new_AST_Send((Object)send185410, (Object)symbol35841, 0);
((AST_Send)send185411)->info = (AST_Info)info3939;
// <&
send185412 = (Object)new_AST_Send((Object)send185409, (Object)symbol35939, 1, (Object)send185411);
((AST_Send)send185412)->info = (AST_Info)info3939;
// statements
send185413 = (Object)new_AST_Send((Object)Self, (Object)symbol35743, 0);
((AST_Send)send185413)->info = (AST_Info)info3939;
// <&
send185414 = (Object)new_AST_Send((Object)send185412, (Object)symbol35939, 1, (Object)send185413);
((AST_Send)send185414)->info = (AST_Info)info3939;
string28529 = (Object)new_Type_String(L"]");
constant36006 = (Object)new_AST_Constant((Object)string28529);
// asPEG
send185415 = (Object)new_AST_Send((Object)constant36006, (Object)symbol35639, 0);
((AST_Send)send185415)->info = (AST_Info)info3939;
// omit:
send185416 = (Object)new_AST_Send((Object)send185415, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185416)->info = (AST_Info)info3939;
// <&
send185417 = (Object)new_AST_Send((Object)send185414, (Object)symbol35939, 1, (Object)send185416);
((AST_Send)send185417)->info = (AST_Info)info3939;
localvariable26841 = (Object)new_AST_Variable_named(L"result");
array21512 = (Object)new_Type_Array_with(1, (Object)localvariable26841);
localvariable26842 = (Object)new_AST_Variable_named(L"receiver");
array21513 = (Object)new_Type_Array_with(1, (Object)localvariable26842);
// first
send185418 = (Object)new_AST_Send((Object)localvariable26841, (Object)symbol35693, 0);
((AST_Send)send185418)->info = (AST_Info)info3939;
symbol35943 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
// new
send185419 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
((AST_Send)send185419)->info = (AST_Info)info3939;
block12859 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185419);
// resultIfFailed:
send185420 = (Object)new_AST_Send((Object)send185418, (Object)symbol35943, 1, (Object)block12859);
((AST_Send)send185420)->info = (AST_Info)info3939;
// parameters:
send185421 = (Object)new_AST_Send((Object)localvariable26842, (Object)symbol35752, 1, (Object)send185420);
((AST_Send)send185421)->info = (AST_Info)info3939;
smallint21319 = (Object)new_Type_SmallInt(2);
constant36007 = (Object)new_AST_Constant((Object)smallint21319);
// at:
send185422 = (Object)new_AST_Send((Object)localvariable26841, (Object)SMB_at_, 1, (Object)constant36007);
((AST_Send)send185422)->info = (AST_Info)info3939;
// new
send185423 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
((AST_Send)send185423)->info = (AST_Info)info3939;
block12860 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185423);
// resultIfFailed:
send185424 = (Object)new_AST_Send((Object)send185422, (Object)symbol35943, 1, (Object)block12860);
((AST_Send)send185424)->info = (AST_Info)info3939;
// temporaries:
send185425 = (Object)new_AST_Send((Object)localvariable26842, (Object)symbol35748, 1, (Object)send185424);
((AST_Send)send185425)->info = (AST_Info)info3939;
smallint21320 = (Object)new_Type_SmallInt(3);
constant36008 = (Object)new_AST_Constant((Object)smallint21320);
// at:
send185426 = (Object)new_AST_Send((Object)localvariable26841, (Object)SMB_at_, 1, (Object)constant36008);
((AST_Send)send185426)->info = (AST_Info)info3939;
// statements:
send185427 = (Object)new_AST_Send((Object)localvariable26842, (Object)symbol35745, 1, (Object)send185426);
((AST_Send)send185427)->info = (AST_Info)info3939;
block12861 = (Object)new_AST_Block_with((Type_Array)array21513, (Type_Array)empty_Type_Array, 2, 3, send185421, send185425, send185427);
classreference4847 = (Object)new_Organization_ClassReference((Type_Class)class4073);

// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method25502 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6039);
string28530 = (Object)new_Type_String(L"temporaries");
string28531 = (Object)new_Type_String(L"temporaries\n\t^ temporaries");
smallint21321 = (Object)new_Type_SmallInt(-1);
smallint21322 = (Object)new_Type_SmallInt(-1);
info3940 = (Object)new_AST_Info((Type_String)string28531,(Type_String)string28530, (Type_SmallInt)smallint21321, (Type_SmallInt)smallint21322);
((AST_Method)method25502)->info = (AST_Info)info3940;
methodclosure25500 = (Object)new_Runtime_MethodClosure(method25502);
store_method((Type_Class)class4073, (Type_Symbol)symbol35747, (Runtime_MethodClosure)methodclosure25500);


// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable26843 = (Object)new_AST_Variable_named(L"aCollection");
array21514 = (Object)new_Type_Array_with(1, (Object)localvariable26843);
assign22752 = (Object)new_AST_Assign((Object)instancevariable6038, (Object)localvariable26843);
method25503 = (Object)new_AST_Method_with((Type_Array)array21514, (Type_Array)empty_Type_Array, 2, assign22752, Self);
string28532 = (Object)new_Type_String(L"parameters:");
string28533 = (Object)new_Type_String(L"parameters: aCollection\n\tparameters := aCollection");
smallint21323 = (Object)new_Type_SmallInt(-1);
smallint21324 = (Object)new_Type_SmallInt(-1);
info3941 = (Object)new_AST_Info((Type_String)string28533,(Type_String)string28532, (Type_SmallInt)smallint21323, (Type_SmallInt)smallint21324);
((AST_Method)method25503)->info = (AST_Info)info3941;
methodclosure25501 = (Object)new_Runtime_MethodClosure(method25503);
store_method((Type_Class)class4073, (Type_Symbol)symbol35752, (Runtime_MethodClosure)methodclosure25501);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// statements
send185428 = (Object)new_AST_Send((Object)Self, (Object)symbol35743, 0);
string28534 = (Object)new_Type_String(L"hasReturnExpression");
string28535 = (Object)new_Type_String(L"hasReturnExpression\n\t^ self statements anySatisfy: [ :el | \n\t\tel isReturnExpression \n\t\t\tor: [ el hasReturnExpression ]].");
smallint21325 = (Object)new_Type_SmallInt(-1);
smallint21326 = (Object)new_Type_SmallInt(-1);
info3942 = (Object)new_AST_Info((Type_String)string28535,(Type_String)string28534, (Type_SmallInt)smallint21325, (Type_SmallInt)smallint21326);
((AST_Send)send185428)->info = (AST_Info)info3942;
localvariable26844 = (Object)new_AST_Variable_named(L"el");
array21515 = (Object)new_Type_Array_with(1, (Object)localvariable26844);
// isReturnExpression
send185429 = (Object)new_AST_Send((Object)localvariable26844, (Object)symbol35516, 0);
((AST_Send)send185429)->info = (AST_Info)info3942;
// hasReturnExpression
send185430 = (Object)new_AST_Send((Object)localvariable26844, (Object)symbol35678, 0);
((AST_Send)send185430)->info = (AST_Info)info3942;
block12862 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185430);
// or:
send185431 = (Object)new_AST_Send((Object)send185429, (Object)symbol35630, 1, (Object)block12862);
((AST_Send)send185431)->info = (AST_Info)info3942;
block12863 = (Object)new_AST_Block_with((Type_Array)array21515, (Type_Array)empty_Type_Array, 1, 1, send185431);
// anySatisfy:
send185432 = (Object)new_AST_Send((Object)send185428, (Object)symbol35986, 1, (Object)block12863);
((AST_Send)send185432)->info = (AST_Info)info3942;
method25504 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185432);
((AST_Method)method25504)->info = (AST_Info)info3942;
methodclosure25502 = (Object)new_Runtime_MethodClosure(method25504);
store_method((Type_Class)class4073, (Type_Symbol)symbol35678, (Runtime_MethodClosure)methodclosure25502);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable26845 = (Object)new_AST_Variable_named(L"anObject");
array21516 = (Object)new_Type_Array_with(1, (Object)localvariable26845);
assign22753 = (Object)new_AST_Assign((Object)instancevariable6039, (Object)localvariable26845);
method25505 = (Object)new_AST_Method_with((Type_Array)array21516, (Type_Array)empty_Type_Array, 2, assign22753, Self);
string28536 = (Object)new_Type_String(L"temporaries:");
string28537 = (Object)new_Type_String(L"temporaries: anObject\n\ttemporaries := anObject");
smallint21327 = (Object)new_Type_SmallInt(-1);
smallint21328 = (Object)new_Type_SmallInt(-1);
info3943 = (Object)new_AST_Info((Type_String)string28537,(Type_String)string28536, (Type_SmallInt)smallint21327, (Type_SmallInt)smallint21328);
((AST_Method)method25505)->info = (AST_Info)info3943;
methodclosure25503 = (Object)new_Runtime_MethodClosure(method25505);
store_method((Type_Class)class4073, (Type_Symbol)symbol35748, (Runtime_MethodClosure)methodclosure25503);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super1985 = (Object)new_AST_Super((Object)symbol35517, 0);
// new
send185433 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35612, 0);
string28538 = (Object)new_Type_String(L"initialize");
string28539 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tself parameters: Array new.\n\tself statements: Array new.\n\tself temporaries: Array new.");
smallint21329 = (Object)new_Type_SmallInt(-1);
smallint21330 = (Object)new_Type_SmallInt(-1);
info3944 = (Object)new_AST_Info((Type_String)string28539,(Type_String)string28538, (Type_SmallInt)smallint21329, (Type_SmallInt)smallint21330);
((AST_Send)send185433)->info = (AST_Info)info3944;
// parameters:
send185434 = (Object)new_AST_Send((Object)Self, (Object)symbol35752, 1, (Object)send185433);
((AST_Send)send185434)->info = (AST_Info)info3944;
// new
send185435 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35612, 0);
((AST_Send)send185435)->info = (AST_Info)info3944;
// statements:
send185436 = (Object)new_AST_Send((Object)Self, (Object)symbol35745, 1, (Object)send185435);
((AST_Send)send185436)->info = (AST_Info)info3944;
// new
send185437 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35612, 0);
((AST_Send)send185437)->info = (AST_Info)info3944;
// temporaries:
send185438 = (Object)new_AST_Send((Object)Self, (Object)symbol35748, 1, (Object)send185437);
((AST_Send)send185438)->info = (AST_Info)info3944;
method25506 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1985, send185434, send185436, send185438, Self);
((AST_Method)method25506)->info = (AST_Info)info3944;
methodclosure25504 = (Object)new_Runtime_MethodClosure(method25506);
store_method((Type_Class)class4073, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25504);


// ASTBlock>>statements
//statements
// 	^ statements
method25507 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6040);
string28540 = (Object)new_Type_String(L"statements");
string28541 = (Object)new_Type_String(L"statements\n\t^ statements");
smallint21331 = (Object)new_Type_SmallInt(-1);
smallint21332 = (Object)new_Type_SmallInt(-1);
info3945 = (Object)new_AST_Info((Type_String)string28541,(Type_String)string28540, (Type_SmallInt)smallint21331, (Type_SmallInt)smallint21332);
((AST_Method)method25507)->info = (AST_Info)info3945;
methodclosure25505 = (Object)new_Runtime_MethodClosure(method25507);
store_method((Type_Class)class4073, (Type_Symbol)symbol35743, (Runtime_MethodClosure)methodclosure25505);


// ASTBlock>>parameters
//parameters
// 	^ parameters
method25508 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6038);
string28542 = (Object)new_Type_String(L"parameters");
string28543 = (Object)new_Type_String(L"parameters\n\t^ parameters");
smallint21333 = (Object)new_Type_SmallInt(-1);
smallint21334 = (Object)new_Type_SmallInt(-1);
info3946 = (Object)new_AST_Info((Type_String)string28543,(Type_String)string28542, (Type_SmallInt)smallint21333, (Type_SmallInt)smallint21334);
((AST_Method)method25508)->info = (AST_Info)info3946;
methodclosure25506 = (Object)new_Runtime_MethodClosure(method25508);
store_method((Type_Class)class4073, (Type_Symbol)symbol35733, (Runtime_MethodClosure)methodclosure25506);


// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable26846 = (Object)new_AST_Variable_named(L"anObject");
array21517 = (Object)new_Type_Array_with(1, (Object)localvariable26846);
assign22754 = (Object)new_AST_Assign((Object)instancevariable6040, (Object)localvariable26846);
method25509 = (Object)new_AST_Method_with((Type_Array)array21517, (Type_Array)empty_Type_Array, 2, assign22754, Self);
string28544 = (Object)new_Type_String(L"statements:");
string28545 = (Object)new_Type_String(L"statements: anObject\n\tstatements := anObject");
smallint21335 = (Object)new_Type_SmallInt(-1);
smallint21336 = (Object)new_Type_SmallInt(-1);
info3947 = (Object)new_AST_Info((Type_String)string28545,(Type_String)string28544, (Type_SmallInt)smallint21335, (Type_SmallInt)smallint21336);
((AST_Method)method25509)->info = (AST_Info)info3947;
methodclosure25507 = (Object)new_Runtime_MethodClosure(method25509);
store_method((Type_Class)class4073, (Type_Symbol)symbol35745, (Runtime_MethodClosure)methodclosure25507);

// new
send185439 = (Object)new_AST_Send((Object)classreference4847, (Object)symbol35612, 0);
((AST_Send)send185439)->info = (AST_Info)info3939;
// value:
send185440 = (Object)new_AST_Send((Object)block12861, (Object)SMB_value_, 1, (Object)send185439);
((AST_Send)send185440)->info = (AST_Info)info3939;
block12864 = (Object)new_AST_Block_with((Type_Array)array21512, (Type_Array)empty_Type_Array, 1, 1, send185440);
// named:parsing:semantics:
send185441 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36004, (Object)send185417, (Object)block12864);
((AST_Send)send185441)->info = (AST_Info)info3939;
method25510 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185441);
((AST_Method)method25510)->info = (AST_Info)info3939;
symbol35789 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure25508 = (Object)new_Runtime_MethodClosure(method25510);
store_method((Type_Class)class4035, (Type_Symbol)symbol35789, (Runtime_MethodClosure)methodclosure25508);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string28546 = (Object)new_Type_String(L"0-9");
constant36009 = (Object)new_AST_Constant((Object)string28546);
// asPEGRange
send185442 = (Object)new_AST_Send((Object)constant36009, (Object)symbol35636, 0);
string28547 = (Object)new_Type_String(L"initializeDecimalDigit");
string28548 = (Object)new_Type_String(L"initializeDecimalDigit\n\t^ \'0-9\' asPEGRange");
smallint21337 = (Object)new_Type_SmallInt(-1);
smallint21338 = (Object)new_Type_SmallInt(-1);
info3948 = (Object)new_AST_Info((Type_String)string28548,(Type_String)string28547, (Type_SmallInt)smallint21337, (Type_SmallInt)smallint21338);
((AST_Send)send185442)->info = (AST_Info)info3948;
method25511 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185442);
((AST_Method)method25511)->info = (AST_Info)info3948;
symbol35810 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure25509 = (Object)new_Runtime_MethodClosure(method25511);
store_method((Type_Class)class4035, (Type_Symbol)symbol35810, (Runtime_MethodClosure)methodclosure25509);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string28549 = (Object)new_Type_String(L"STRING-CONSTANT");
constant36010 = (Object)new_AST_Constant((Object)string28549);
// string
send185443 = (Object)new_AST_Send((Object)Self, (Object)symbol35710, 0);
string28550 = (Object)new_Type_String(L"initializeStringConstant");
string28551 = (Object)new_Type_String(L"initializeStringConstant\n\t^ PEGParser\n\t\tnamed: \'STRING-CONSTANT\'\n\t\tparsing: self string\n\t\tsemantics: [:result |\n\t\t\tASTString new string: result\n\t\t]");
smallint21339 = (Object)new_Type_SmallInt(-1);
smallint21340 = (Object)new_Type_SmallInt(-1);
info3949 = (Object)new_AST_Info((Type_String)string28551,(Type_String)string28550, (Type_SmallInt)smallint21339, (Type_SmallInt)smallint21340);
((AST_Send)send185443)->info = (AST_Info)info3949;
localvariable26847 = (Object)new_AST_Variable_named(L"result");
array21518 = (Object)new_Type_Array_with(1, (Object)localvariable26847);
// new
send185444 = (Object)new_AST_Send((Object)classreference4838, (Object)symbol35612, 0);
((AST_Send)send185444)->info = (AST_Info)info3949;
// string:
send185445 = (Object)new_AST_Send((Object)send185444, (Object)symbol35709, 1, (Object)localvariable26847);
((AST_Send)send185445)->info = (AST_Info)info3949;
block12865 = (Object)new_AST_Block_with((Type_Array)array21518, (Type_Array)empty_Type_Array, 1, 1, send185445);
// named:parsing:semantics:
send185446 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36010, (Object)send185443, (Object)block12865);
((AST_Send)send185446)->info = (AST_Info)info3949;
method25512 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185446);
((AST_Method)method25512)->info = (AST_Info)info3949;
symbol35770 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure25510 = (Object)new_Runtime_MethodClosure(method25512);
store_method((Type_Class)class4035, (Type_Symbol)symbol35770, (Runtime_MethodClosure)methodclosure25510);


// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string28552 = (Object)new_Type_String(L":=");
constant36011 = (Object)new_AST_Constant((Object)string28552);
// asPEG
send185447 = (Object)new_AST_Send((Object)constant36011, (Object)symbol35639, 0);
string28553 = (Object)new_Type_String(L"assignmentOp");
string28554 = (Object)new_Type_String(L"assignmentOp\n\t^ (\':=\' asPEG | \'_\') omit: true");
smallint21341 = (Object)new_Type_SmallInt(-1);
smallint21342 = (Object)new_Type_SmallInt(-1);
info3950 = (Object)new_AST_Info((Type_String)string28554,(Type_String)string28553, (Type_SmallInt)smallint21341, (Type_SmallInt)smallint21342);
((AST_Send)send185447)->info = (AST_Info)info3950;
string28555 = (Object)new_Type_String(L"_");
constant36012 = (Object)new_AST_Constant((Object)string28555);
// |
send185448 = (Object)new_AST_Send((Object)send185447, (Object)SMB__or, 1, (Object)constant36012);
((AST_Send)send185448)->info = (AST_Info)info3950;
// omit:
send185449 = (Object)new_AST_Send((Object)send185448, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185449)->info = (AST_Info)info3950;
method25513 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185449);
((AST_Method)method25513)->info = (AST_Info)info3950;
methodclosure25511 = (Object)new_Runtime_MethodClosure(method25513);
store_method((Type_Class)class4035, (Type_Symbol)symbol35759, (Runtime_MethodClosure)methodclosure25511);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string28556 = (Object)new_Type_String(L"(");
constant36013 = (Object)new_AST_Constant((Object)string28556);
// asPEG
send185450 = (Object)new_AST_Send((Object)constant36013, (Object)symbol35639, 0);
string28557 = (Object)new_Type_String(L"initializeScopedExpression");
string28558 = (Object)new_Type_String(L"initializeScopedExpression\n\t^  ((\'(\' asPEG omit: true) & self expression <& (\')\' asPEG omit: true))");
smallint21343 = (Object)new_Type_SmallInt(-1);
smallint21344 = (Object)new_Type_SmallInt(-1);
info3951 = (Object)new_AST_Info((Type_String)string28558,(Type_String)string28557, (Type_SmallInt)smallint21343, (Type_SmallInt)smallint21344);
((AST_Send)send185450)->info = (AST_Info)info3951;
// omit:
send185451 = (Object)new_AST_Send((Object)send185450, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185451)->info = (AST_Info)info3951;
// expression
send185452 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
((AST_Send)send185452)->info = (AST_Info)info3951;
// &
send185453 = (Object)new_AST_Send((Object)send185451, (Object)SMB__and, 1, (Object)send185452);
((AST_Send)send185453)->info = (AST_Info)info3951;
string28559 = (Object)new_Type_String(L")");
constant36014 = (Object)new_AST_Constant((Object)string28559);
// asPEG
send185454 = (Object)new_AST_Send((Object)constant36014, (Object)symbol35639, 0);
((AST_Send)send185454)->info = (AST_Info)info3951;
// omit:
send185455 = (Object)new_AST_Send((Object)send185454, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185455)->info = (AST_Info)info3951;
// <&
send185456 = (Object)new_AST_Send((Object)send185453, (Object)symbol35939, 1, (Object)send185455);
((AST_Send)send185456)->info = (AST_Info)info3951;
method25514 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185456);
((AST_Method)method25514)->info = (AST_Info)info3951;
symbol35782 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure25512 = (Object)new_Runtime_MethodClosure(method25514);
store_method((Type_Class)class4035, (Type_Symbol)symbol35782, (Runtime_MethodClosure)methodclosure25512);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string28560 = (Object)new_Type_String(L"METHOD");
constant36015 = (Object)new_AST_Constant((Object)string28560);
symbol36052 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send185457 = (Object)new_AST_Send((Object)Self, (Object)symbol36052, 0);
string28561 = (Object)new_Type_String(L"initializeMethod");
string28562 = (Object)new_Type_String(L"initializeMethod\n\t^ (PEGParser\n\t\tnamed: \'METHOD\'\n\t\tparsing: self messagePattern\n\t\t\t\t\t& self temporaries optional\n\t\t\t\t\t<& self annotation times\n\t\t\t\t\t<& self statements\n\t\t\t\t\t<& self separator \" Allow comment/whitespace at the end of a method. \"\n\t\tsemantics: [ :parts |\n\t\t\tASTMethod new\n\t\t\t\tmessage:\t(parts first);\n\t\t\t\ttemporaries:\t((parts at: 2) resultIfFailed: [ OrderedCollection new ]);\n\t\t\t\tannotations:\t(parts at: 3);\n\t\t\t\tstatements:\t(parts at: 4);\n\t\t\t\tyourself\n\n\t\t]) separator: (self separator)");
smallint21345 = (Object)new_Type_SmallInt(-1);
smallint21346 = (Object)new_Type_SmallInt(-1);
info3952 = (Object)new_AST_Info((Type_String)string28562,(Type_String)string28561, (Type_SmallInt)smallint21345, (Type_SmallInt)smallint21346);
((AST_Send)send185457)->info = (AST_Info)info3952;
// temporaries
send185458 = (Object)new_AST_Send((Object)Self, (Object)symbol35747, 0);
((AST_Send)send185458)->info = (AST_Info)info3952;
// optional
send185459 = (Object)new_AST_Send((Object)send185458, (Object)symbol35841, 0);
((AST_Send)send185459)->info = (AST_Info)info3952;
// &
send185460 = (Object)new_AST_Send((Object)send185457, (Object)SMB__and, 1, (Object)send185459);
((AST_Send)send185460)->info = (AST_Info)info3952;
// annotation
send185461 = (Object)new_AST_Send((Object)Self, (Object)symbol36021, 0);
((AST_Send)send185461)->info = (AST_Info)info3952;
// times
send185462 = (Object)new_AST_Send((Object)send185461, (Object)symbol35837, 0);
((AST_Send)send185462)->info = (AST_Info)info3952;
// <&
send185463 = (Object)new_AST_Send((Object)send185460, (Object)symbol35939, 1, (Object)send185462);
((AST_Send)send185463)->info = (AST_Info)info3952;
// statements
send185464 = (Object)new_AST_Send((Object)Self, (Object)symbol35743, 0);
((AST_Send)send185464)->info = (AST_Info)info3952;
// <&
send185465 = (Object)new_AST_Send((Object)send185463, (Object)symbol35939, 1, (Object)send185464);
((AST_Send)send185465)->info = (AST_Info)info3952;
// separator
send185466 = (Object)new_AST_Send((Object)Self, (Object)symbol35854, 0);
((AST_Send)send185466)->info = (AST_Info)info3952;
// <&
send185467 = (Object)new_AST_Send((Object)send185465, (Object)symbol35939, 1, (Object)send185466);
((AST_Send)send185467)->info = (AST_Info)info3952;
localvariable26848 = (Object)new_AST_Variable_named(L"parts");
array21519 = (Object)new_Type_Array_with(1, (Object)localvariable26848);
localvariable26849 = (Object)new_AST_Variable_named(L"receiver");
array21520 = (Object)new_Type_Array_with(1, (Object)localvariable26849);
// first
send185468 = (Object)new_AST_Send((Object)localvariable26848, (Object)symbol35693, 0);
((AST_Send)send185468)->info = (AST_Info)info3952;
// message:
send185469 = (Object)new_AST_Send((Object)localvariable26849, (Object)symbol35741, 1, (Object)send185468);
((AST_Send)send185469)->info = (AST_Info)info3952;
smallint21347 = (Object)new_Type_SmallInt(2);
constant36016 = (Object)new_AST_Constant((Object)smallint21347);
// at:
send185470 = (Object)new_AST_Send((Object)localvariable26848, (Object)SMB_at_, 1, (Object)constant36016);
((AST_Send)send185470)->info = (AST_Info)info3952;
// new
send185471 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
((AST_Send)send185471)->info = (AST_Info)info3952;
block12866 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185471);
// resultIfFailed:
send185472 = (Object)new_AST_Send((Object)send185470, (Object)symbol35943, 1, (Object)block12866);
((AST_Send)send185472)->info = (AST_Info)info3952;
// temporaries:
send185473 = (Object)new_AST_Send((Object)localvariable26849, (Object)symbol35748, 1, (Object)send185472);
((AST_Send)send185473)->info = (AST_Info)info3952;
smallint21348 = (Object)new_Type_SmallInt(3);
constant36017 = (Object)new_AST_Constant((Object)smallint21348);
// at:
send185474 = (Object)new_AST_Send((Object)localvariable26848, (Object)SMB_at_, 1, (Object)constant36017);
((AST_Send)send185474)->info = (AST_Info)info3952;
// annotations:
send185475 = (Object)new_AST_Send((Object)localvariable26849, (Object)symbol35749, 1, (Object)send185474);
((AST_Send)send185475)->info = (AST_Info)info3952;
smallint21349 = (Object)new_Type_SmallInt(4);
constant36018 = (Object)new_AST_Constant((Object)smallint21349);
// at:
send185476 = (Object)new_AST_Send((Object)localvariable26848, (Object)SMB_at_, 1, (Object)constant36018);
((AST_Send)send185476)->info = (AST_Info)info3952;
// statements:
send185477 = (Object)new_AST_Send((Object)localvariable26849, (Object)symbol35745, 1, (Object)send185476);
((AST_Send)send185477)->info = (AST_Info)info3952;
// yourself
send185478 = (Object)new_AST_Send((Object)localvariable26849, (Object)symbol35515, 0);
((AST_Send)send185478)->info = (AST_Info)info3952;
block12867 = (Object)new_AST_Block_with((Type_Array)array21520, (Type_Array)empty_Type_Array, 2, 5, send185469, send185473, send185475, send185477, send185478);
// new
send185479 = (Object)new_AST_Send((Object)classreference4832, (Object)symbol35612, 0);
((AST_Send)send185479)->info = (AST_Info)info3952;
// value:
send185480 = (Object)new_AST_Send((Object)block12867, (Object)SMB_value_, 1, (Object)send185479);
((AST_Send)send185480)->info = (AST_Info)info3952;
block12868 = (Object)new_AST_Block_with((Type_Array)array21519, (Type_Array)empty_Type_Array, 1, 1, send185480);
// named:parsing:semantics:
send185481 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36015, (Object)send185467, (Object)block12868);
((AST_Send)send185481)->info = (AST_Info)info3952;
// separator
send185482 = (Object)new_AST_Send((Object)Self, (Object)symbol35854, 0);
((AST_Send)send185482)->info = (AST_Info)info3952;
// separator:
send185483 = (Object)new_AST_Send((Object)send185481, (Object)symbol35860, 1, (Object)send185482);
((AST_Send)send185483)->info = (AST_Info)info3952;
method25515 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185483);
((AST_Method)method25515)->info = (AST_Info)info3952;
symbol35827 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure25513 = (Object)new_Runtime_MethodClosure(method25515);
store_method((Type_Class)class4035, (Type_Symbol)symbol35827, (Runtime_MethodClosure)methodclosure25513);


// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
string28563 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant36019 = (Object)new_AST_Constant((Object)string28563);
// unarySelector
send185484 = (Object)new_AST_Send((Object)Self, (Object)symbol36006, 0);
string28564 = (Object)new_Type_String(L"initializeUnaryAnnotation");
string28565 = (Object)new_Type_String(L"initializeUnaryAnnotation\n\t^ PEGParser\n\t\tnamed: \'UNARY-ANNOTATION\'\n\t\tparsing: self unarySelector\n\t\tsemantics: [ :selector |\n\t\t\tASTUnaryAnnotation new\n\t\t\t\tselector: selector.\n\t\t]");
smallint21350 = (Object)new_Type_SmallInt(-1);
smallint21351 = (Object)new_Type_SmallInt(-1);
info3953 = (Object)new_AST_Info((Type_String)string28565,(Type_String)string28564, (Type_SmallInt)smallint21350, (Type_SmallInt)smallint21351);
((AST_Send)send185484)->info = (AST_Info)info3953;
localvariable26850 = (Object)new_AST_Variable_named(L"selector");
array21521 = (Object)new_Type_Array_with(1, (Object)localvariable26850);
// new
send185485 = (Object)new_AST_Send((Object)classreference4841, (Object)symbol35612, 0);
((AST_Send)send185485)->info = (AST_Info)info3953;
// selector:
send185486 = (Object)new_AST_Send((Object)send185485, (Object)symbol35732, 1, (Object)localvariable26850);
((AST_Send)send185486)->info = (AST_Info)info3953;
block12869 = (Object)new_AST_Block_with((Type_Array)array21521, (Type_Array)empty_Type_Array, 1, 1, send185486);
// named:parsing:semantics:
send185487 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36019, (Object)send185484, (Object)block12869);
((AST_Send)send185487)->info = (AST_Info)info3953;
method25516 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185487);
((AST_Method)method25516)->info = (AST_Info)info3953;
symbol35799 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure25514 = (Object)new_Runtime_MethodClosure(method25516);
store_method((Type_Class)class4035, (Type_Symbol)symbol35799, (Runtime_MethodClosure)methodclosure25514);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
constant36020 = (Object)new_AST_Constant((Object)symbol35993);
string28566 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant36021 = (Object)new_AST_Constant((Object)string28566);
// named:
send185488 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35855, 1, (Object)constant36021);
string28567 = (Object)new_Type_String(L"preStoreCascadedMessageExpression");
string28568 = (Object)new_Type_String(L"preStoreCascadedMessageExpression\n\t^ parsers at: #cascadedMessageExpression ifAbsentPut: [\n\t\tPEGParser named: \'CASCADED-MESSAGE-EXPRESSION\'\n\t]");
smallint21352 = (Object)new_Type_SmallInt(-1);
smallint21353 = (Object)new_Type_SmallInt(-1);
info3954 = (Object)new_AST_Info((Type_String)string28568,(Type_String)string28567, (Type_SmallInt)smallint21352, (Type_SmallInt)smallint21353);
((AST_Send)send185488)->info = (AST_Info)info3954;
block12870 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185488);
// at:ifAbsentPut:
send185489 = (Object)new_AST_Send((Object)instancevariable5991, (Object)symbol35892, 2, (Object)constant36020, (Object)block12870);
((AST_Send)send185489)->info = (AST_Info)info3954;
method25517 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185489);
((AST_Method)method25517)->info = (AST_Info)info3954;
methodclosure25515 = (Object)new_Runtime_MethodClosure(method25517);
store_method((Type_Class)class4035, (Type_Symbol)symbol35820, (Runtime_MethodClosure)methodclosure25515);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string28569 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant36022 = (Object)new_AST_Constant((Object)string28569);
// asPEGChoice
send185490 = (Object)new_AST_Send((Object)constant36022, (Object)symbol35641, 0);
string28570 = (Object)new_Type_String(L"initializeSpecialCharacter");
string28571 = (Object)new_Type_String(L"initializeSpecialCharacter\n\t^ (\'+*/\\~<>=@%?!&`,\' asPEGChoice)");
smallint21354 = (Object)new_Type_SmallInt(-1);
smallint21355 = (Object)new_Type_SmallInt(-1);
info3955 = (Object)new_AST_Info((Type_String)string28571,(Type_String)string28570, (Type_SmallInt)smallint21354, (Type_SmallInt)smallint21355);
((AST_Send)send185490)->info = (AST_Info)info3955;
method25518 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185490);
((AST_Method)method25518)->info = (AST_Info)info3955;
symbol35764 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure25516 = (Object)new_Runtime_MethodClosure(method25518);
store_method((Type_Class)class4035, (Type_Symbol)symbol35764, (Runtime_MethodClosure)methodclosure25516);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string28572 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant36023 = (Object)new_AST_Constant((Object)string28572);
// identifier
send185491 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
string28573 = (Object)new_Type_String(L"initializeUnarySelector");
string28574 = (Object)new_Type_String(L"initializeUnarySelector\n\t^ PEGParser\n\t\tnamed: \'UNARY-SELECTOR\'\n\t\tparsing: (self identifier && (\':\' asPEG not consume: false))\n\t\tsemantics: [ :selector |\n\t\t\tASTUnarySelector new \n\t\t\t\tselector: (self createSymbol: selector).\n\t\t]");
smallint21356 = (Object)new_Type_SmallInt(-1);
smallint21357 = (Object)new_Type_SmallInt(-1);
info3956 = (Object)new_AST_Info((Type_String)string28574,(Type_String)string28573, (Type_SmallInt)smallint21356, (Type_SmallInt)smallint21357);
((AST_Send)send185491)->info = (AST_Info)info3956;
string28575 = (Object)new_Type_String(L":");
constant36024 = (Object)new_AST_Constant((Object)string28575);
// asPEG
send185492 = (Object)new_AST_Send((Object)constant36024, (Object)symbol35639, 0);
((AST_Send)send185492)->info = (AST_Info)info3956;
// not
send185493 = (Object)new_AST_Send((Object)send185492, (Object)SMB_not, 0);
((AST_Send)send185493)->info = (AST_Info)info3956;
// consume:
send185494 = (Object)new_AST_Send((Object)send185493, (Object)symbol35941, 1, (Object)False_Const);
((AST_Send)send185494)->info = (AST_Info)info3956;
// &&
send185495 = (Object)new_AST_Send((Object)send185491, (Object)symbol35838, 1, (Object)send185494);
((AST_Send)send185495)->info = (AST_Info)info3956;
localvariable26851 = (Object)new_AST_Variable_named(L"selector");
array21522 = (Object)new_Type_Array_with(1, (Object)localvariable26851);
// new
send185496 = (Object)new_AST_Send((Object)classreference4825, (Object)symbol35612, 0);
((AST_Send)send185496)->info = (AST_Info)info3956;
// createSymbol:
send185497 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)localvariable26851);
((AST_Send)send185497)->info = (AST_Info)info3956;
// selector:
send185498 = (Object)new_AST_Send((Object)send185496, (Object)symbol35732, 1, (Object)send185497);
((AST_Send)send185498)->info = (AST_Info)info3956;
block12871 = (Object)new_AST_Block_with((Type_Array)array21522, (Type_Array)empty_Type_Array, 1, 1, send185498);
// named:parsing:semantics:
send185499 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36023, (Object)send185495, (Object)block12871);
((AST_Send)send185499)->info = (AST_Info)info3956;
method25519 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185499);
((AST_Method)method25519)->info = (AST_Info)info3956;
symbol35792 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure25517 = (Object)new_Runtime_MethodClosure(method25519);
store_method((Type_Class)class4035, (Type_Symbol)symbol35792, (Runtime_MethodClosure)methodclosure25517);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string28576 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant36025 = (Object)new_AST_Constant((Object)string28576);
symbol36053 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send185500 = (Object)new_AST_Send((Object)Self, (Object)symbol36053, 0);
string28577 = (Object)new_Type_String(L"initializeCapitalIdentifier");
string28578 = (Object)new_Type_String(L"initializeCapitalIdentifier\n\t^ PEGParser\n\t\tnamed: \'CAPITAL-IDENTIFIER\'\n\t\t\n\t\tparsing: (self uppercase && (self letter | self decimalDigit) strongTimes)\n\t\t\t\t\t\t\n\t\tsemantics: [ :result |\n\t\t\tresult second inject: result first into: [ :c :e | c, e ]\n\t\t]");
smallint21358 = (Object)new_Type_SmallInt(-1);
smallint21359 = (Object)new_Type_SmallInt(-1);
info3957 = (Object)new_AST_Info((Type_String)string28578,(Type_String)string28577, (Type_SmallInt)smallint21358, (Type_SmallInt)smallint21359);
((AST_Send)send185500)->info = (AST_Info)info3957;
symbol36054 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send185501 = (Object)new_AST_Send((Object)Self, (Object)symbol36054, 0);
((AST_Send)send185501)->info = (AST_Info)info3957;
symbol36055 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send185502 = (Object)new_AST_Send((Object)Self, (Object)symbol36055, 0);
((AST_Send)send185502)->info = (AST_Info)info3957;
// |
send185503 = (Object)new_AST_Send((Object)send185501, (Object)SMB__or, 1, (Object)send185502);
((AST_Send)send185503)->info = (AST_Info)info3957;
// strongTimes
send185504 = (Object)new_AST_Send((Object)send185503, (Object)symbol35839, 0);
((AST_Send)send185504)->info = (AST_Info)info3957;
// &&
send185505 = (Object)new_AST_Send((Object)send185500, (Object)symbol35838, 1, (Object)send185504);
((AST_Send)send185505)->info = (AST_Info)info3957;
localvariable26852 = (Object)new_AST_Variable_named(L"result");
array21523 = (Object)new_Type_Array_with(1, (Object)localvariable26852);
// second
send185506 = (Object)new_AST_Send((Object)localvariable26852, (Object)symbol36020, 0);
((AST_Send)send185506)->info = (AST_Info)info3957;
// first
send185507 = (Object)new_AST_Send((Object)localvariable26852, (Object)symbol35693, 0);
((AST_Send)send185507)->info = (AST_Info)info3957;
localvariable26853 = (Object)new_AST_Variable_named(L"c");
localvariable26854 = (Object)new_AST_Variable_named(L"e");
array21524 = (Object)new_Type_Array_with(2, (Object)localvariable26853, (Object)localvariable26854);
// ,
send185508 = (Object)new_AST_Send((Object)localvariable26853, (Object)SMB__concat, 1, (Object)localvariable26854);
((AST_Send)send185508)->info = (AST_Info)info3957;
block12872 = (Object)new_AST_Block_with((Type_Array)array21524, (Type_Array)empty_Type_Array, 2, 1, send185508);
// inject:into:
send185509 = (Object)new_AST_Send((Object)send185506, (Object)symbol35697, 2, (Object)send185507, (Object)block12872);
((AST_Send)send185509)->info = (AST_Info)info3957;
block12873 = (Object)new_AST_Block_with((Type_Array)array21523, (Type_Array)empty_Type_Array, 1, 1, send185509);
// named:parsing:semantics:
send185510 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36025, (Object)send185505, (Object)block12873);
((AST_Send)send185510)->info = (AST_Info)info3957;
method25520 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185510);
((AST_Method)method25520)->info = (AST_Info)info3957;
symbol35809 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure25518 = (Object)new_Runtime_MethodClosure(method25520);
store_method((Type_Class)class4035, (Type_Symbol)symbol35809, (Runtime_MethodClosure)methodclosure25518);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send185511 = (Object)new_AST_Send((Object)Self, (Object)symbol35755, 0);
string28579 = (Object)new_Type_String(L"initializePrimary");
string28580 = (Object)new_Type_String(L"initializePrimary\n\tself expression.\n\t\" self expression will initialize primary. \"\n\t^ self primary");
smallint21360 = (Object)new_Type_SmallInt(-1);
smallint21361 = (Object)new_Type_SmallInt(-1);
info3958 = (Object)new_AST_Info((Type_String)string28580,(Type_String)string28579, (Type_SmallInt)smallint21360, (Type_SmallInt)smallint21361);
((AST_Send)send185511)->info = (AST_Info)info3958;
// primary
send185512 = (Object)new_AST_Send((Object)Self, (Object)symbol36028, 0);
((AST_Send)send185512)->info = (AST_Info)info3958;
method25521 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send185511, send185512);
((AST_Method)method25521)->info = (AST_Info)info3958;
symbol35802 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure25519 = (Object)new_Runtime_MethodClosure(method25521);
store_method((Type_Class)class4035, (Type_Symbol)symbol35802, (Runtime_MethodClosure)methodclosure25519);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string28581 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant36026 = (Object)new_AST_Constant((Object)string28581);
// keywordsArguments
send185513 = (Object)new_AST_Send((Object)Self, (Object)symbol36018, 0);
string28582 = (Object)new_Type_String(L"initializeMessagePattern");
string28583 = (Object)new_Type_String(L"initializeMessagePattern\n\t^ PEGParser\n\t\tnamed: \'MESSAGE-PATTERN\'\n\t\tparsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)");
smallint21362 = (Object)new_Type_SmallInt(-1);
smallint21363 = (Object)new_Type_SmallInt(-1);
info3959 = (Object)new_AST_Info((Type_String)string28583,(Type_String)string28582, (Type_SmallInt)smallint21362, (Type_SmallInt)smallint21363);
((AST_Send)send185513)->info = (AST_Info)info3959;
// binaryMessageDefinition
send185514 = (Object)new_AST_Send((Object)Self, (Object)symbol36005, 0);
((AST_Send)send185514)->info = (AST_Info)info3959;
// |
send185515 = (Object)new_AST_Send((Object)send185513, (Object)SMB__or, 1, (Object)send185514);
((AST_Send)send185515)->info = (AST_Info)info3959;
symbol36056 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send185516 = (Object)new_AST_Send((Object)Self, (Object)symbol36056, 0);
((AST_Send)send185516)->info = (AST_Info)info3959;
// <=
send185517 = (Object)new_AST_Send((Object)send185515, (Object)symbol35648, 1, (Object)send185516);
((AST_Send)send185517)->info = (AST_Info)info3959;
// named:parsing:
send185518 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35858, 2, (Object)constant36026, (Object)send185517);
((AST_Send)send185518)->info = (AST_Info)info3959;
method25522 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185518);
((AST_Method)method25522)->info = (AST_Info)info3959;
symbol35830 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure25520 = (Object)new_Runtime_MethodClosure(method25522);
store_method((Type_Class)class4035, (Type_Symbol)symbol35830, (Runtime_MethodClosure)methodclosure25520);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol36057 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send185519 = (Object)new_AST_Send((Object)Self, (Object)symbol36057, 0);
string28584 = (Object)new_Type_String(L"initializeLetter");
string28585 = (Object)new_Type_String(L"initializeLetter\n\t^ (self lowercase | self uppercase)");
smallint21364 = (Object)new_Type_SmallInt(-1);
smallint21365 = (Object)new_Type_SmallInt(-1);
info3960 = (Object)new_AST_Info((Type_String)string28585,(Type_String)string28584, (Type_SmallInt)smallint21364, (Type_SmallInt)smallint21365);
((AST_Send)send185519)->info = (AST_Info)info3960;
// uppercase
send185520 = (Object)new_AST_Send((Object)Self, (Object)symbol36053, 0);
((AST_Send)send185520)->info = (AST_Info)info3960;
// |
send185521 = (Object)new_AST_Send((Object)send185519, (Object)SMB__or, 1, (Object)send185520);
((AST_Send)send185521)->info = (AST_Info)info3960;
method25523 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185521);
((AST_Method)method25523)->info = (AST_Info)info3960;
symbol35814 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure25521 = (Object)new_Runtime_MethodClosure(method25523);
store_method((Type_Class)class4035, (Type_Symbol)symbol35814, (Runtime_MethodClosure)methodclosure25521);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string28586 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant36027 = (Object)new_AST_Constant((Object)string28586);
// unarySelector
send185522 = (Object)new_AST_Send((Object)Self, (Object)symbol36006, 0);
string28587 = (Object)new_Type_String(L"initializeUnaryMessageExpression");
string28588 = (Object)new_Type_String(L"initializeUnaryMessageExpression\n\t^ PEGParser\n\t\tnamed: \'UNARY-MESSAGE-EXPRESSION\'\n\t\tparsing: self unarySelector\n\t\tsemantics: [ :selector |\n\t\t\tASTUnaryExpression new\n\t\t\t\tselector: selector.\n\t\t]");
smallint21366 = (Object)new_Type_SmallInt(-1);
smallint21367 = (Object)new_Type_SmallInt(-1);
info3961 = (Object)new_AST_Info((Type_String)string28588,(Type_String)string28587, (Type_SmallInt)smallint21366, (Type_SmallInt)smallint21367);
((AST_Send)send185522)->info = (AST_Info)info3961;
localvariable26855 = (Object)new_AST_Variable_named(L"selector");
array21525 = (Object)new_Type_Array_with(1, (Object)localvariable26855);
// new
send185523 = (Object)new_AST_Send((Object)classreference4824, (Object)symbol35612, 0);
((AST_Send)send185523)->info = (AST_Info)info3961;
// selector:
send185524 = (Object)new_AST_Send((Object)send185523, (Object)symbol35732, 1, (Object)localvariable26855);
((AST_Send)send185524)->info = (AST_Info)info3961;
block12874 = (Object)new_AST_Block_with((Type_Array)array21525, (Type_Array)empty_Type_Array, 1, 1, send185524);
// named:parsing:semantics:
send185525 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36027, (Object)send185522, (Object)block12874);
((AST_Send)send185525)->info = (AST_Info)info3961;
method25524 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185525);
((AST_Method)method25524)->info = (AST_Info)info3961;
symbol35774 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure25522 = (Object)new_Runtime_MethodClosure(method25524);
store_method((Type_Class)class4035, (Type_Symbol)symbol35774, (Runtime_MethodClosure)methodclosure25522);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable26856 = (Object)new_AST_Variable_named(L"result");
array21526 = (Object)new_Type_Array_with(1, (Object)localvariable26856);
string28589 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant36028 = (Object)new_AST_Constant((Object)string28589);
// keyword
send185526 = (Object)new_AST_Send((Object)Self, (Object)symbol36001, 0);
string28590 = (Object)new_Type_String(L"initializeKeywordsArguments");
string28591 = (Object)new_Type_String(L"initializeKeywordsArguments\n\t| result |\n\t^ PEGParser \n\t\tnamed: \'KEYWORDS-ARGUMENTS\'\n\t\tparsing: (self keyword & self parameterName) plus\n\t\tsemantics: [ :pairs | \n\t\t\tresult := ASTKeywordMessageDefinition new.\n\t\t\tpairs do: [ :pair | \n\t\t\t\tresult keywords add: pair first.\n\t\t\t\tresult parameters add: (self createVariable: (pair at: 2))\n\t\t\t].\n\t\t\tresult selector:  (ASTSymbol named: result selectorName).\n\t\t\tresult \n\t\t]");
smallint21368 = (Object)new_Type_SmallInt(-1);
smallint21369 = (Object)new_Type_SmallInt(-1);
info3962 = (Object)new_AST_Info((Type_String)string28591,(Type_String)string28590, (Type_SmallInt)smallint21368, (Type_SmallInt)smallint21369);
((AST_Send)send185526)->info = (AST_Info)info3962;
// parameterName
send185527 = (Object)new_AST_Send((Object)Self, (Object)symbol36034, 0);
((AST_Send)send185527)->info = (AST_Info)info3962;
// &
send185528 = (Object)new_AST_Send((Object)send185526, (Object)SMB__and, 1, (Object)send185527);
((AST_Send)send185528)->info = (AST_Info)info3962;
// plus
send185529 = (Object)new_AST_Send((Object)send185528, (Object)symbol35848, 0);
((AST_Send)send185529)->info = (AST_Info)info3962;
localvariable26857 = (Object)new_AST_Variable_named(L"pairs");
array21527 = (Object)new_Type_Array_with(1, (Object)localvariable26857);
// new
send185530 = (Object)new_AST_Send((Object)classreference4839, (Object)symbol35612, 0);
((AST_Send)send185530)->info = (AST_Info)info3962;
assign22755 = (Object)new_AST_Assign((Object)localvariable26856, (Object)send185530);
localvariable26858 = (Object)new_AST_Variable_named(L"pair");
array21528 = (Object)new_Type_Array_with(1, (Object)localvariable26858);
// keywords
send185531 = (Object)new_AST_Send((Object)localvariable26856, (Object)symbol35738, 0);
((AST_Send)send185531)->info = (AST_Info)info3962;
// first
send185532 = (Object)new_AST_Send((Object)localvariable26858, (Object)symbol35693, 0);
((AST_Send)send185532)->info = (AST_Info)info3962;
// add:
send185533 = (Object)new_AST_Send((Object)send185531, (Object)symbol35696, 1, (Object)send185532);
((AST_Send)send185533)->info = (AST_Info)info3962;
// parameters
send185534 = (Object)new_AST_Send((Object)localvariable26856, (Object)symbol35733, 0);
((AST_Send)send185534)->info = (AST_Info)info3962;
smallint21370 = (Object)new_Type_SmallInt(2);
constant36029 = (Object)new_AST_Constant((Object)smallint21370);
// at:
send185535 = (Object)new_AST_Send((Object)localvariable26858, (Object)SMB_at_, 1, (Object)constant36029);
((AST_Send)send185535)->info = (AST_Info)info3962;
// createVariable:
send185536 = (Object)new_AST_Send((Object)Self, (Object)symbol35768, 1, (Object)send185535);
((AST_Send)send185536)->info = (AST_Info)info3962;
// add:
send185537 = (Object)new_AST_Send((Object)send185534, (Object)symbol35696, 1, (Object)send185536);
((AST_Send)send185537)->info = (AST_Info)info3962;
block12875 = (Object)new_AST_Block_with((Type_Array)array21528, (Type_Array)empty_Type_Array, 2, 2, send185533, send185537);
// do:
send185538 = (Object)new_AST_Send((Object)localvariable26857, (Object)symbol35642, 1, (Object)block12875);
((AST_Send)send185538)->info = (AST_Info)info3962;
// selectorName
send185539 = (Object)new_AST_Send((Object)localvariable26856, (Object)symbol35731, 0);
((AST_Send)send185539)->info = (AST_Info)info3962;
// named:
send185540 = (Object)new_AST_Send((Object)classreference4836, (Object)symbol35855, 1, (Object)send185539);
((AST_Send)send185540)->info = (AST_Info)info3962;
// selector:
send185541 = (Object)new_AST_Send((Object)localvariable26856, (Object)symbol35732, 1, (Object)send185540);
((AST_Send)send185541)->info = (AST_Info)info3962;
block12876 = (Object)new_AST_Block_with((Type_Array)array21527, (Type_Array)empty_Type_Array, 1, 4, assign22755, send185538, send185541, localvariable26856);
// named:parsing:semantics:
send185542 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36028, (Object)send185529, (Object)block12876);
((AST_Send)send185542)->info = (AST_Info)info3962;
method25525 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21526, 1, send185542);
((AST_Method)method25525)->info = (AST_Info)info3962;
symbol35786 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure25523 = (Object)new_Runtime_MethodClosure(method25525);
store_method((Type_Class)class4035, (Type_Symbol)symbol35786, (Runtime_MethodClosure)methodclosure25523);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string28592 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant36030 = (Object)new_AST_Constant((Object)string28592);
// keyword
send185543 = (Object)new_AST_Send((Object)Self, (Object)symbol36001, 0);
string28593 = (Object)new_Type_String(L"initializeSymbolKeywords");
string28594 = (Object)new_Type_String(L"initializeSymbolKeywords\n\t^ PEGParser\n\t\tnamed: \'SYMBOL-KEYWORDS\'\n\t\tparsing: self keyword strongPlus\n\t\tsemantics: [ :result |\n\t\t\tresult inject: \'\' into: [ :c :e | c, e, \':\' ]\n\t\t]");
smallint21371 = (Object)new_Type_SmallInt(-1);
smallint21372 = (Object)new_Type_SmallInt(-1);
info3963 = (Object)new_AST_Info((Type_String)string28594,(Type_String)string28593, (Type_SmallInt)smallint21371, (Type_SmallInt)smallint21372);
((AST_Send)send185543)->info = (AST_Info)info3963;
// strongPlus
send185544 = (Object)new_AST_Send((Object)send185543, (Object)symbol35844, 0);
((AST_Send)send185544)->info = (AST_Info)info3963;
localvariable26859 = (Object)new_AST_Variable_named(L"result");
array21529 = (Object)new_Type_Array_with(1, (Object)localvariable26859);
string28595 = (Object)new_Type_String(L"");
constant36031 = (Object)new_AST_Constant((Object)string28595);
localvariable26860 = (Object)new_AST_Variable_named(L"c");
localvariable26861 = (Object)new_AST_Variable_named(L"e");
array21530 = (Object)new_Type_Array_with(2, (Object)localvariable26860, (Object)localvariable26861);
// ,
send185545 = (Object)new_AST_Send((Object)localvariable26860, (Object)SMB__concat, 1, (Object)localvariable26861);
((AST_Send)send185545)->info = (AST_Info)info3963;
string28596 = (Object)new_Type_String(L":");
constant36032 = (Object)new_AST_Constant((Object)string28596);
// ,
send185546 = (Object)new_AST_Send((Object)send185545, (Object)SMB__concat, 1, (Object)constant36032);
((AST_Send)send185546)->info = (AST_Info)info3963;
block12877 = (Object)new_AST_Block_with((Type_Array)array21530, (Type_Array)empty_Type_Array, 2, 1, send185546);
// inject:into:
send185547 = (Object)new_AST_Send((Object)localvariable26859, (Object)symbol35697, 2, (Object)constant36031, (Object)block12877);
((AST_Send)send185547)->info = (AST_Info)info3963;
block12878 = (Object)new_AST_Block_with((Type_Array)array21529, (Type_Array)empty_Type_Array, 1, 1, send185547);
// named:parsing:semantics:
send185548 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36030, (Object)send185544, (Object)block12878);
((AST_Send)send185548)->info = (AST_Info)info3963;
method25526 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185548);
((AST_Method)method25526)->info = (AST_Info)info3963;
symbol35824 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure25524 = (Object)new_Runtime_MethodClosure(method25526);
store_method((Type_Class)class4035, (Type_Symbol)symbol35824, (Runtime_MethodClosure)methodclosure25524);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable26862 = (Object)new_AST_Variable_named(L"name");
array21531 = (Object)new_Type_Array_with(1, (Object)localvariable26862);
variable1594 = (Object)new_AST_Variable_named(L"return");
array21532 = (Object)new_Type_Array_with(1, (Object)variable1594);
string28597 = (Object)new_Type_String(L"self");
constant36033 = (Object)new_AST_Constant((Object)string28597);
// =
send185549 = (Object)new_AST_Send((Object)localvariable26862, (Object)SMB__equal, 1, (Object)constant36033);
string28598 = (Object)new_Type_String(L"createVariable:");
string28599 = (Object)new_Type_String(L"createVariable: name\n\tname = \'self\' ifTrue: [ ^ASTSelf new].\n\tname = \'super\' ifTrue: [ ^ASTSuper new].\n\t^ ASTVariable new name: name.");
smallint21373 = (Object)new_Type_SmallInt(-1);
smallint21374 = (Object)new_Type_SmallInt(-1);
info3964 = (Object)new_AST_Info((Type_String)string28599,(Type_String)string28598, (Type_SmallInt)smallint21373, (Type_SmallInt)smallint21374);
((AST_Send)send185549)->info = (AST_Info)info3964;
// new
send185550 = (Object)new_AST_Send((Object)classreference4826, (Object)symbol35612, 0);
((AST_Send)send185550)->info = (AST_Info)info3964;
// escape:
send185551 = (Object)new_AST_Send((Object)variable1594, (Object)SMB_escape_, 1, (Object)send185550);
((AST_Send)send185551)->info = (AST_Info)info3964;
block12879 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185551);
// ifTrue:
send185552 = (Object)new_AST_Send((Object)send185549, (Object)SMB_ifTrue_, 1, (Object)block12879);
((AST_Send)send185552)->info = (AST_Info)info3964;
string28600 = (Object)new_Type_String(L"super");
constant36034 = (Object)new_AST_Constant((Object)string28600);
// =
send185553 = (Object)new_AST_Send((Object)localvariable26862, (Object)SMB__equal, 1, (Object)constant36034);
((AST_Send)send185553)->info = (AST_Info)info3964;
// new
send185554 = (Object)new_AST_Send((Object)classreference4833, (Object)symbol35612, 0);
((AST_Send)send185554)->info = (AST_Info)info3964;
// escape:
send185555 = (Object)new_AST_Send((Object)variable1594, (Object)SMB_escape_, 1, (Object)send185554);
((AST_Send)send185555)->info = (AST_Info)info3964;
block12880 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185555);
// ifTrue:
send185556 = (Object)new_AST_Send((Object)send185553, (Object)SMB_ifTrue_, 1, (Object)block12880);
((AST_Send)send185556)->info = (AST_Info)info3964;
// new
send185557 = (Object)new_AST_Send((Object)classreference4822, (Object)symbol35612, 0);
((AST_Send)send185557)->info = (AST_Info)info3964;
// name:
send185558 = (Object)new_AST_Send((Object)send185557, (Object)symbol35721, 1, (Object)localvariable26862);
((AST_Send)send185558)->info = (AST_Info)info3964;
block12881 = (Object)new_AST_Block_with((Type_Array)array21532, (Type_Array)empty_Type_Array, 1, 3, send185552, send185556, send185558);
// on:
send185559 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12881);
method25527 = (Object)new_AST_Method_with((Type_Array)array21531, (Type_Array)empty_Type_Array, 1, send185559);
((AST_Method)method25527)->info = (AST_Info)info3964;
methodclosure25525 = (Object)new_Runtime_MethodClosure(method25527);
store_method((Type_Class)class4035, (Type_Symbol)symbol35768, (Runtime_MethodClosure)methodclosure25525);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string28601 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant36035 = (Object)new_AST_Constant((Object)string28601);
string28602 = (Object)new_Type_String(L"$");
constant36036 = (Object)new_AST_Constant((Object)string28602);
// asPEG
send185560 = (Object)new_AST_Send((Object)constant36036, (Object)symbol35639, 0);
string28603 = (Object)new_Type_String(L"initializeCharacterConstant");
string28604 = (Object)new_Type_String(L"initializeCharacterConstant\n\t^ PEGParser\n\t\tnamed: \'CHARACTER-CONSTANT\'\n\t\tparsing: ((\'$\' asPEG omit: true) && (self character))\n\t\tsemantics: [ :char |\n\t\t\tASTCharacter new char: char first \" get char from string containing only the char \"\n\t\t]");
smallint21375 = (Object)new_Type_SmallInt(-1);
smallint21376 = (Object)new_Type_SmallInt(-1);
info3965 = (Object)new_AST_Info((Type_String)string28604,(Type_String)string28603, (Type_SmallInt)smallint21375, (Type_SmallInt)smallint21376);
((AST_Send)send185560)->info = (AST_Info)info3965;
// omit:
send185561 = (Object)new_AST_Send((Object)send185560, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185561)->info = (AST_Info)info3965;
// character
send185562 = (Object)new_AST_Send((Object)Self, (Object)symbol36013, 0);
((AST_Send)send185562)->info = (AST_Info)info3965;
// &&
send185563 = (Object)new_AST_Send((Object)send185561, (Object)symbol35838, 1, (Object)send185562);
((AST_Send)send185563)->info = (AST_Info)info3965;
localvariable26863 = (Object)new_AST_Variable_named(L"char");
array21533 = (Object)new_Type_Array_with(1, (Object)localvariable26863);
// new
send185564 = (Object)new_AST_Send((Object)classreference4831, (Object)symbol35612, 0);
((AST_Send)send185564)->info = (AST_Info)info3965;
// first
send185565 = (Object)new_AST_Send((Object)localvariable26863, (Object)symbol35693, 0);
((AST_Send)send185565)->info = (AST_Info)info3965;
// char:
send185566 = (Object)new_AST_Send((Object)send185564, (Object)symbol35864, 1, (Object)send185565);
((AST_Send)send185566)->info = (AST_Info)info3965;
block12882 = (Object)new_AST_Block_with((Type_Array)array21533, (Type_Array)empty_Type_Array, 1, 1, send185566);
// named:parsing:semantics:
send185567 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36035, (Object)send185563, (Object)block12882);
((AST_Send)send185567)->info = (AST_Info)info3965;
method25528 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185567);
((AST_Method)method25528)->info = (AST_Info)info3965;
symbol35796 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure25526 = (Object)new_Runtime_MethodClosure(method25528);
store_method((Type_Class)class4035, (Type_Symbol)symbol35796, (Runtime_MethodClosure)methodclosure25526);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send185568 = (Object)new_AST_Send((Object)Self, (Object)symbol35992, 0);
string28605 = (Object)new_Type_String(L"injectBinaryObjectDescription");
string28606 = (Object)new_Type_String(L"injectBinaryObjectDescription\n\t^ self binaryObjectDescription\n\t\t<= (self binaryExpression | self unaryObjectDescription)");
smallint21377 = (Object)new_Type_SmallInt(-1);
smallint21378 = (Object)new_Type_SmallInt(-1);
info3966 = (Object)new_AST_Info((Type_String)string28606,(Type_String)string28605, (Type_SmallInt)smallint21377, (Type_SmallInt)smallint21378);
((AST_Send)send185568)->info = (AST_Info)info3966;
// binaryExpression
send185569 = (Object)new_AST_Send((Object)Self, (Object)symbol36035, 0);
((AST_Send)send185569)->info = (AST_Info)info3966;
// <=
send185570 = (Object)new_AST_Send((Object)send185568, (Object)symbol35648, 1, (Object)send185569);
((AST_Send)send185570)->info = (AST_Info)info3966;
// unaryObjectDescription
send185571 = (Object)new_AST_Send((Object)Self, (Object)symbol36007, 0);
((AST_Send)send185571)->info = (AST_Info)info3966;
// |
send185572 = (Object)new_AST_Send((Object)send185570, (Object)SMB__or, 1, (Object)send185571);
((AST_Send)send185572)->info = (AST_Info)info3966;
method25529 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185572);
((AST_Method)method25529)->info = (AST_Info)info3966;
methodclosure25527 = (Object)new_Runtime_MethodClosure(method25529);
store_method((Type_Class)class4035, (Type_Symbol)symbol35761, (Runtime_MethodClosure)methodclosure25527);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string28607 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant36037 = (Object)new_AST_Constant((Object)string28607);
string28608 = (Object)new_Type_String(L":");
constant36038 = (Object)new_AST_Constant((Object)string28608);
// asPEG
send185573 = (Object)new_AST_Send((Object)constant36038, (Object)symbol35639, 0);
string28609 = (Object)new_Type_String(L"initializeBlockArguments");
string28610 = (Object)new_Type_String(L"initializeBlockArguments\n\t^ PEGParser\n\t\tnamed: \'BLOCK-ARGUMENTS\'\n\t\tparsing: ((\':\' asPEG omit: true) & self identifier) plus\n\t\tsemantics: [ :result |\n\t\t\tresult collect: [ :variable | self createVariable: variable ]\n\t\t]");
smallint21379 = (Object)new_Type_SmallInt(-1);
smallint21380 = (Object)new_Type_SmallInt(-1);
info3967 = (Object)new_AST_Info((Type_String)string28610,(Type_String)string28609, (Type_SmallInt)smallint21379, (Type_SmallInt)smallint21380);
((AST_Send)send185573)->info = (AST_Info)info3967;
// omit:
send185574 = (Object)new_AST_Send((Object)send185573, (Object)symbol35845, 1, (Object)True_Const);
((AST_Send)send185574)->info = (AST_Info)info3967;
// identifier
send185575 = (Object)new_AST_Send((Object)Self, (Object)symbol36014, 0);
((AST_Send)send185575)->info = (AST_Info)info3967;
// &
send185576 = (Object)new_AST_Send((Object)send185574, (Object)SMB__and, 1, (Object)send185575);
((AST_Send)send185576)->info = (AST_Info)info3967;
// plus
send185577 = (Object)new_AST_Send((Object)send185576, (Object)symbol35848, 0);
((AST_Send)send185577)->info = (AST_Info)info3967;
localvariable26864 = (Object)new_AST_Variable_named(L"result");
array21534 = (Object)new_Type_Array_with(1, (Object)localvariable26864);
localvariable26865 = (Object)new_AST_Variable_named(L"variable");
array21535 = (Object)new_Type_Array_with(1, (Object)localvariable26865);
// createVariable:
send185578 = (Object)new_AST_Send((Object)Self, (Object)symbol35768, 1, (Object)localvariable26865);
((AST_Send)send185578)->info = (AST_Info)info3967;
block12883 = (Object)new_AST_Block_with((Type_Array)array21535, (Type_Array)empty_Type_Array, 2, 1, send185578);
// collect:
send185579 = (Object)new_AST_Send((Object)localvariable26864, (Object)symbol35899, 1, (Object)block12883);
((AST_Send)send185579)->info = (AST_Info)info3967;
block12884 = (Object)new_AST_Block_with((Type_Array)array21534, (Type_Array)empty_Type_Array, 1, 1, send185579);
// named:parsing:semantics:
send185580 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36037, (Object)send185577, (Object)block12884);
((AST_Send)send185580)->info = (AST_Info)info3967;
method25530 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185580);
((AST_Method)method25530)->info = (AST_Info)info3967;
symbol35806 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure25528 = (Object)new_Runtime_MethodClosure(method25530);
store_method((Type_Class)class4035, (Type_Symbol)symbol35806, (Runtime_MethodClosure)methodclosure25528);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable26866 = (Object)new_AST_Variable_named(L"commentBorder");
array21536 = (Object)new_Type_Array_with(1, (Object)localvariable26866);
string28611 = (Object)new_Type_String(L"\"");
constant36039 = (Object)new_AST_Constant((Object)string28611);
// asPEG
send185581 = (Object)new_AST_Send((Object)constant36039, (Object)symbol35639, 0);
string28612 = (Object)new_Type_String(L"initializeCommentFormat");
string28613 = (Object)new_Type_String(L"initializeCommentFormat\n\t| commentBorder |\n\tcommentBorder := \'\"\' asPEG.\n\t^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder");
smallint21381 = (Object)new_Type_SmallInt(-1);
smallint21382 = (Object)new_Type_SmallInt(-1);
info3968 = (Object)new_AST_Info((Type_String)string28613,(Type_String)string28612, (Type_SmallInt)smallint21381, (Type_SmallInt)smallint21382);
((AST_Send)send185581)->info = (AST_Info)info3968;
assign22756 = (Object)new_AST_Assign((Object)localvariable26866, (Object)send185581);
// not
send185582 = (Object)new_AST_Send((Object)localvariable26866, (Object)SMB_not, 0);
((AST_Send)send185582)->info = (AST_Info)info3968;
// strongTimes
send185583 = (Object)new_AST_Send((Object)send185582, (Object)symbol35839, 0);
((AST_Send)send185583)->info = (AST_Info)info3968;
// &&
send185584 = (Object)new_AST_Send((Object)localvariable26866, (Object)symbol35838, 1, (Object)send185583);
((AST_Send)send185584)->info = (AST_Info)info3968;
// <&
send185585 = (Object)new_AST_Send((Object)send185584, (Object)symbol35939, 1, (Object)localvariable26866);
((AST_Send)send185585)->info = (AST_Info)info3968;
method25531 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21536, 2, assign22756, send185585);
((AST_Method)method25531)->info = (AST_Info)info3968;
symbol35818 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure25529 = (Object)new_Runtime_MethodClosure(method25531);
store_method((Type_Class)class4035, (Type_Symbol)symbol35818, (Runtime_MethodClosure)methodclosure25529);


// SCParser>>symbols
//symbols
// 	^ symbols
method25532 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5993);
string28614 = (Object)new_Type_String(L"symbols");
string28615 = (Object)new_Type_String(L"symbols\n\t^ symbols");
smallint21383 = (Object)new_Type_SmallInt(-1);
smallint21384 = (Object)new_Type_SmallInt(-1);
info3969 = (Object)new_AST_Info((Type_String)string28615,(Type_String)string28614, (Type_SmallInt)smallint21383, (Type_SmallInt)smallint21384);
((AST_Method)method25532)->info = (AST_Info)info3969;
symbol35778 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure25530 = (Object)new_Runtime_MethodClosure(method25532);
store_method((Type_Class)class4035, (Type_Symbol)symbol35778, (Runtime_MethodClosure)methodclosure25530);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string28616 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant36040 = (Object)new_AST_Constant((Object)string28616);
// asPEGChoice
send185586 = (Object)new_AST_Send((Object)constant36040, (Object)symbol35641, 0);
string28617 = (Object)new_Type_String(L"initializeCharacter");
string28618 = (Object)new_Type_String(L"initializeCharacter\n\t^ ((\'[]{}()_^;$#:-|.\' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)");
smallint21385 = (Object)new_Type_SmallInt(-1);
smallint21386 = (Object)new_Type_SmallInt(-1);
info3970 = (Object)new_AST_Info((Type_String)string28618,(Type_String)string28617, (Type_SmallInt)smallint21385, (Type_SmallInt)smallint21386);
((AST_Send)send185586)->info = (AST_Info)info3970;
// separators
send185587 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35853, 0);
((AST_Send)send185587)->info = (AST_Info)info3970;
// |
send185588 = (Object)new_AST_Send((Object)send185586, (Object)SMB__or, 1, (Object)send185587);
((AST_Send)send185588)->info = (AST_Info)info3970;
// decimalDigit
send185589 = (Object)new_AST_Send((Object)Self, (Object)symbol36055, 0);
((AST_Send)send185589)->info = (AST_Info)info3970;
// <=
send185590 = (Object)new_AST_Send((Object)send185588, (Object)symbol35648, 1, (Object)send185589);
((AST_Send)send185590)->info = (AST_Info)info3970;
// letter
send185591 = (Object)new_AST_Send((Object)Self, (Object)symbol36054, 0);
((AST_Send)send185591)->info = (AST_Info)info3970;
// <=
send185592 = (Object)new_AST_Send((Object)send185590, (Object)symbol35648, 1, (Object)send185591);
((AST_Send)send185592)->info = (AST_Info)info3970;
// specialCharacter
send185593 = (Object)new_AST_Send((Object)Self, (Object)symbol36041, 0);
((AST_Send)send185593)->info = (AST_Info)info3970;
// <=
send185594 = (Object)new_AST_Send((Object)send185592, (Object)symbol35648, 1, (Object)send185593);
((AST_Send)send185594)->info = (AST_Info)info3970;
method25533 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185594);
((AST_Method)method25533)->info = (AST_Info)info3970;
symbol35811 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure25531 = (Object)new_Runtime_MethodClosure(method25533);
store_method((Type_Class)class4035, (Type_Symbol)symbol35811, (Runtime_MethodClosure)methodclosure25531);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
string28619 = (Object)new_Type_String(L"STATEMENTS");
constant36041 = (Object)new_AST_Constant((Object)string28619);
// subExpression
send185595 = (Object)new_AST_Send((Object)Self, (Object)symbol36025, 0);
string28620 = (Object)new_Type_String(L"initializeStatements");
string28621 = (Object)new_Type_String(L"initializeStatements\n\t^ PEGParser\n\t\tnamed: \'STATEMENTS\'\n\t\t\n\t\tparsing: self subExpression times & (self return | self finalExpression) optional\n\t\t\n\t\tsemantics: [ :result |\n\t\t\t(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].\n\t\t\tresult first\n\t\t]");
smallint21387 = (Object)new_Type_SmallInt(-1);
smallint21388 = (Object)new_Type_SmallInt(-1);
info3971 = (Object)new_AST_Info((Type_String)string28621,(Type_String)string28620, (Type_SmallInt)smallint21387, (Type_SmallInt)smallint21388);
((AST_Send)send185595)->info = (AST_Info)info3971;
// times
send185596 = (Object)new_AST_Send((Object)send185595, (Object)symbol35837, 0);
((AST_Send)send185596)->info = (AST_Info)info3971;
// return
send185597 = (Object)new_AST_Send((Object)Self, (Object)symbol35991, 0);
((AST_Send)send185597)->info = (AST_Info)info3971;
// finalExpression
send185598 = (Object)new_AST_Send((Object)Self, (Object)symbol36002, 0);
((AST_Send)send185598)->info = (AST_Info)info3971;
// |
send185599 = (Object)new_AST_Send((Object)send185597, (Object)SMB__or, 1, (Object)send185598);
((AST_Send)send185599)->info = (AST_Info)info3971;
// optional
send185600 = (Object)new_AST_Send((Object)send185599, (Object)symbol35841, 0);
((AST_Send)send185600)->info = (AST_Info)info3971;
// &
send185601 = (Object)new_AST_Send((Object)send185596, (Object)SMB__and, 1, (Object)send185600);
((AST_Send)send185601)->info = (AST_Info)info3971;
localvariable26867 = (Object)new_AST_Variable_named(L"result");
array21537 = (Object)new_Type_Array_with(1, (Object)localvariable26867);
smallint21389 = (Object)new_Type_SmallInt(2);
constant36042 = (Object)new_AST_Constant((Object)smallint21389);
// at:
send185602 = (Object)new_AST_Send((Object)localvariable26867, (Object)SMB_at_, 1, (Object)constant36042);
((AST_Send)send185602)->info = (AST_Info)info3971;
symbol35944 = (Object)new_Type_Symbol_cached(L"ifMatched:");
localvariable26868 = (Object)new_AST_Variable_named(L"exp");
array21538 = (Object)new_Type_Array_with(1, (Object)localvariable26868);
// first
send185603 = (Object)new_AST_Send((Object)localvariable26867, (Object)symbol35693, 0);
((AST_Send)send185603)->info = (AST_Info)info3971;
// add:
send185604 = (Object)new_AST_Send((Object)send185603, (Object)symbol35696, 1, (Object)localvariable26868);
((AST_Send)send185604)->info = (AST_Info)info3971;
block12885 = (Object)new_AST_Block_with((Type_Array)array21538, (Type_Array)empty_Type_Array, 2, 1, send185604);
// ifMatched:
send185605 = (Object)new_AST_Send((Object)send185602, (Object)symbol35944, 1, (Object)block12885);
((AST_Send)send185605)->info = (AST_Info)info3971;
// first
send185606 = (Object)new_AST_Send((Object)localvariable26867, (Object)symbol35693, 0);
((AST_Send)send185606)->info = (AST_Info)info3971;
block12886 = (Object)new_AST_Block_with((Type_Array)array21537, (Type_Array)empty_Type_Array, 1, 2, send185605, send185606);
// named:parsing:semantics:
send185607 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36041, (Object)send185601, (Object)block12886);
((AST_Send)send185607)->info = (AST_Info)info3971;
method25534 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185607);
((AST_Method)method25534)->info = (AST_Info)info3971;
symbol35783 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure25532 = (Object)new_Runtime_MethodClosure(method25534);
store_method((Type_Class)class4035, (Type_Symbol)symbol35783, (Runtime_MethodClosure)methodclosure25532);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string28622 = (Object)new_Type_String(L"IDENTIFIER");
constant36043 = (Object)new_AST_Constant((Object)string28622);
// letter
send185608 = (Object)new_AST_Send((Object)Self, (Object)symbol36054, 0);
string28623 = (Object)new_Type_String(L"initializeIdentifier");
string28624 = (Object)new_Type_String(L"initializeIdentifier\n\t^ PEGParser\n\t\tnamed: \'IDENTIFIER\'\n\t\tparsing: (self letter && (self letter | self decimalDigit) strongTimes)\n\t\tsemantics: [ :result |\n\t\t\tresult second inject: result first into: [ :c :e | c, e ]\n\t\t]");
smallint21390 = (Object)new_Type_SmallInt(-1);
smallint21391 = (Object)new_Type_SmallInt(-1);
info3972 = (Object)new_AST_Info((Type_String)string28624,(Type_String)string28623, (Type_SmallInt)smallint21390, (Type_SmallInt)smallint21391);
((AST_Send)send185608)->info = (AST_Info)info3972;
// letter
send185609 = (Object)new_AST_Send((Object)Self, (Object)symbol36054, 0);
((AST_Send)send185609)->info = (AST_Info)info3972;
// decimalDigit
send185610 = (Object)new_AST_Send((Object)Self, (Object)symbol36055, 0);
((AST_Send)send185610)->info = (AST_Info)info3972;
// |
send185611 = (Object)new_AST_Send((Object)send185609, (Object)SMB__or, 1, (Object)send185610);
((AST_Send)send185611)->info = (AST_Info)info3972;
// strongTimes
send185612 = (Object)new_AST_Send((Object)send185611, (Object)symbol35839, 0);
((AST_Send)send185612)->info = (AST_Info)info3972;
// &&
send185613 = (Object)new_AST_Send((Object)send185608, (Object)symbol35838, 1, (Object)send185612);
((AST_Send)send185613)->info = (AST_Info)info3972;
localvariable26869 = (Object)new_AST_Variable_named(L"result");
array21539 = (Object)new_Type_Array_with(1, (Object)localvariable26869);
// second
send185614 = (Object)new_AST_Send((Object)localvariable26869, (Object)symbol36020, 0);
((AST_Send)send185614)->info = (AST_Info)info3972;
// first
send185615 = (Object)new_AST_Send((Object)localvariable26869, (Object)symbol35693, 0);
((AST_Send)send185615)->info = (AST_Info)info3972;
localvariable26870 = (Object)new_AST_Variable_named(L"c");
localvariable26871 = (Object)new_AST_Variable_named(L"e");
array21540 = (Object)new_Type_Array_with(2, (Object)localvariable26870, (Object)localvariable26871);
// ,
send185616 = (Object)new_AST_Send((Object)localvariable26870, (Object)SMB__concat, 1, (Object)localvariable26871);
((AST_Send)send185616)->info = (AST_Info)info3972;
block12887 = (Object)new_AST_Block_with((Type_Array)array21540, (Type_Array)empty_Type_Array, 2, 1, send185616);
// inject:into:
send185617 = (Object)new_AST_Send((Object)send185614, (Object)symbol35697, 2, (Object)send185615, (Object)block12887);
((AST_Send)send185617)->info = (AST_Info)info3972;
block12888 = (Object)new_AST_Block_with((Type_Array)array21539, (Type_Array)empty_Type_Array, 1, 1, send185617);
// named:parsing:semantics:
send185618 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36043, (Object)send185613, (Object)block12888);
((AST_Send)send185618)->info = (AST_Info)info3972;
method25535 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185618);
((AST_Method)method25535)->info = (AST_Info)info3972;
symbol35828 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure25533 = (Object)new_Runtime_MethodClosure(method25535);
store_method((Type_Class)class4035, (Type_Symbol)symbol35828, (Runtime_MethodClosure)methodclosure25533);


// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
constant36044 = (Object)new_AST_Constant((Object)symbol35990);
string28625 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant36045 = (Object)new_AST_Constant((Object)string28625);
// named:
send185619 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35855, 1, (Object)constant36045);
string28626 = (Object)new_Type_String(L"preStoreMessageExpression");
string28627 = (Object)new_Type_String(L"preStoreMessageExpression\n\t^ parsers at: #messageExpression ifAbsentPut: [\n\t\tPEGParser named: \'MESSAGE-EXPRESSION\'\n\t]");
smallint21392 = (Object)new_Type_SmallInt(-1);
smallint21393 = (Object)new_Type_SmallInt(-1);
info3973 = (Object)new_AST_Info((Type_String)string28627,(Type_String)string28626, (Type_SmallInt)smallint21392, (Type_SmallInt)smallint21393);
((AST_Send)send185619)->info = (AST_Info)info3973;
block12889 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185619);
// at:ifAbsentPut:
send185620 = (Object)new_AST_Send((Object)instancevariable5991, (Object)symbol35892, 2, (Object)constant36044, (Object)block12889);
((AST_Send)send185620)->info = (AST_Info)info3973;
method25536 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185620);
((AST_Method)method25536)->info = (AST_Info)info3973;
methodclosure25534 = (Object)new_Runtime_MethodClosure(method25536);
store_method((Type_Class)class4035, (Type_Symbol)symbol35821, (Runtime_MethodClosure)methodclosure25534);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string28628 = (Object)new_Type_String(L"a-z");
constant36046 = (Object)new_AST_Constant((Object)string28628);
// asPEGRange
send185621 = (Object)new_AST_Send((Object)constant36046, (Object)symbol35636, 0);
string28629 = (Object)new_Type_String(L"initializeLowercase");
string28630 = (Object)new_Type_String(L"initializeLowercase\n\t^ (\'a-z\' asPEGRange)");
smallint21394 = (Object)new_Type_SmallInt(-1);
smallint21395 = (Object)new_Type_SmallInt(-1);
info3974 = (Object)new_AST_Info((Type_String)string28630,(Type_String)string28629, (Type_SmallInt)smallint21394, (Type_SmallInt)smallint21395);
((AST_Send)send185621)->info = (AST_Info)info3974;
method25537 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185621);
((AST_Method)method25537)->info = (AST_Info)info3974;
symbol35765 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure25535 = (Object)new_Runtime_MethodClosure(method25537);
store_method((Type_Class)class4035, (Type_Symbol)symbol35765, (Runtime_MethodClosure)methodclosure25535);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
string28631 = (Object)new_Type_String(L"TEMPORARIES");
constant36047 = (Object)new_AST_Constant((Object)string28631);
// bar
send185622 = (Object)new_AST_Send((Object)Self, (Object)symbol36051, 0);
string28632 = (Object)new_Type_String(L"initializeTemporaries");
string28633 = (Object)new_Type_String(L"initializeTemporaries\n\t^ PEGParser\n\t\tnamed: \'TEMPORARIES\'\n\t\tparsing: (self bar & self variableName times <& self bar)");
smallint21396 = (Object)new_Type_SmallInt(-1);
smallint21397 = (Object)new_Type_SmallInt(-1);
info3975 = (Object)new_AST_Info((Type_String)string28633,(Type_String)string28632, (Type_SmallInt)smallint21396, (Type_SmallInt)smallint21397);
((AST_Send)send185622)->info = (AST_Info)info3975;
// variableName
send185623 = (Object)new_AST_Send((Object)Self, (Object)symbol36036, 0);
((AST_Send)send185623)->info = (AST_Info)info3975;
// times
send185624 = (Object)new_AST_Send((Object)send185623, (Object)symbol35837, 0);
((AST_Send)send185624)->info = (AST_Info)info3975;
// &
send185625 = (Object)new_AST_Send((Object)send185622, (Object)SMB__and, 1, (Object)send185624);
((AST_Send)send185625)->info = (AST_Info)info3975;
// bar
send185626 = (Object)new_AST_Send((Object)Self, (Object)symbol36051, 0);
((AST_Send)send185626)->info = (AST_Info)info3975;
// <&
send185627 = (Object)new_AST_Send((Object)send185625, (Object)symbol35939, 1, (Object)send185626);
((AST_Send)send185627)->info = (AST_Info)info3975;
// named:parsing:
send185628 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35858, 2, (Object)constant36047, (Object)send185627);
((AST_Send)send185628)->info = (AST_Info)info3975;
method25538 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185628);
((AST_Method)method25538)->info = (AST_Info)info3975;
symbol35793 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure25536 = (Object)new_Runtime_MethodClosure(method25538);
store_method((Type_Class)class4035, (Type_Symbol)symbol35793, (Runtime_MethodClosure)methodclosure25536);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string28634 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant36048 = (Object)new_AST_Constant((Object)string28634);
// keyword
send185629 = (Object)new_AST_Send((Object)Self, (Object)symbol36001, 0);
string28635 = (Object)new_Type_String(L"initializeKeywordAnnotation");
string28636 = (Object)new_Type_String(L"initializeKeywordAnnotation\n\t^ PEGParser\n\t\tnamed: \'KEYWORD-ANNOTATION\'\n\t\tparsing: (self keyword & self primary) plus\n\t\tsemantics: [ :result |\n\t\t\tASTKeywordAnnotation new\n\t\t\t\tkeywords: (result collect: [ :each| ASTSymbol named: each first ]);\n\t\t\t\tselector: (ASTKeywordSelector new keywords: (result collect: #first));\n\t\t\t\targuments: (result collect: #second)\n\t\t]");
smallint21398 = (Object)new_Type_SmallInt(-1);
smallint21399 = (Object)new_Type_SmallInt(-1);
info3976 = (Object)new_AST_Info((Type_String)string28636,(Type_String)string28635, (Type_SmallInt)smallint21398, (Type_SmallInt)smallint21399);
((AST_Send)send185629)->info = (AST_Info)info3976;
// primary
send185630 = (Object)new_AST_Send((Object)Self, (Object)symbol36028, 0);
((AST_Send)send185630)->info = (AST_Info)info3976;
// &
send185631 = (Object)new_AST_Send((Object)send185629, (Object)SMB__and, 1, (Object)send185630);
((AST_Send)send185631)->info = (AST_Info)info3976;
// plus
send185632 = (Object)new_AST_Send((Object)send185631, (Object)symbol35848, 0);
((AST_Send)send185632)->info = (AST_Info)info3976;
localvariable26872 = (Object)new_AST_Variable_named(L"result");
array21541 = (Object)new_Type_Array_with(1, (Object)localvariable26872);
localvariable26873 = (Object)new_AST_Variable_named(L"receiver");
array21542 = (Object)new_Type_Array_with(1, (Object)localvariable26873);
localvariable26874 = (Object)new_AST_Variable_named(L"each");
array21543 = (Object)new_Type_Array_with(1, (Object)localvariable26874);
// first
send185633 = (Object)new_AST_Send((Object)localvariable26874, (Object)symbol35693, 0);
((AST_Send)send185633)->info = (AST_Info)info3976;
// named:
send185634 = (Object)new_AST_Send((Object)classreference4836, (Object)symbol35855, 1, (Object)send185633);
((AST_Send)send185634)->info = (AST_Info)info3976;
block12890 = (Object)new_AST_Block_with((Type_Array)array21543, (Type_Array)empty_Type_Array, 3, 1, send185634);
// collect:
send185635 = (Object)new_AST_Send((Object)localvariable26872, (Object)symbol35899, 1, (Object)block12890);
((AST_Send)send185635)->info = (AST_Info)info3976;
// keywords:
send185636 = (Object)new_AST_Send((Object)localvariable26873, (Object)symbol35737, 1, (Object)send185635);
((AST_Send)send185636)->info = (AST_Info)info3976;
// new
send185637 = (Object)new_AST_Send((Object)classreference4835, (Object)symbol35612, 0);
((AST_Send)send185637)->info = (AST_Info)info3976;
constant36049 = (Object)new_AST_Constant((Object)symbol35693);
// collect:
send185638 = (Object)new_AST_Send((Object)localvariable26872, (Object)symbol35899, 1, (Object)constant36049);
((AST_Send)send185638)->info = (AST_Info)info3976;
// keywords:
send185639 = (Object)new_AST_Send((Object)send185637, (Object)symbol35737, 1, (Object)send185638);
((AST_Send)send185639)->info = (AST_Info)info3976;
// selector:
send185640 = (Object)new_AST_Send((Object)localvariable26873, (Object)symbol35732, 1, (Object)send185639);
((AST_Send)send185640)->info = (AST_Info)info3976;
constant36050 = (Object)new_AST_Constant((Object)symbol36020);
// collect:
send185641 = (Object)new_AST_Send((Object)localvariable26872, (Object)symbol35899, 1, (Object)constant36050);
((AST_Send)send185641)->info = (AST_Info)info3976;
// arguments:
send185642 = (Object)new_AST_Send((Object)localvariable26873, (Object)symbol35739, 1, (Object)send185641);
((AST_Send)send185642)->info = (AST_Info)info3976;
block12891 = (Object)new_AST_Block_with((Type_Array)array21542, (Type_Array)empty_Type_Array, 2, 3, send185636, send185640, send185642);
// new
send185643 = (Object)new_AST_Send((Object)classreference4840, (Object)symbol35612, 0);
((AST_Send)send185643)->info = (AST_Info)info3976;
// value:
send185644 = (Object)new_AST_Send((Object)block12891, (Object)SMB_value_, 1, (Object)send185643);
((AST_Send)send185644)->info = (AST_Info)info3976;
block12892 = (Object)new_AST_Block_with((Type_Array)array21541, (Type_Array)empty_Type_Array, 1, 1, send185644);
// named:parsing:semantics:
send185645 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36048, (Object)send185632, (Object)block12892);
((AST_Send)send185645)->info = (AST_Info)info3976;
method25539 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185645);
((AST_Method)method25539)->info = (AST_Info)info3976;
symbol35803 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure25537 = (Object)new_Runtime_MethodClosure(method25539);
store_method((Type_Class)class4035, (Type_Symbol)symbol35803, (Runtime_MethodClosure)methodclosure25537);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string28637 = (Object)new_Type_String(L"NUMBER");
constant36051 = (Object)new_AST_Constant((Object)string28637);
// decimalDigit
send185646 = (Object)new_AST_Send((Object)Self, (Object)symbol36055, 0);
string28638 = (Object)new_Type_String(L"initializeNumberConstant");
string28639 = (Object)new_Type_String(L"initializeNumberConstant\n\t\" XXX For now. \"\n\t^ PEGParser\n\t\tnamed: \'NUMBER\'\n\t\tparsing: self decimalDigit plus\n\t\tsemantics: [ :result |\n\t\t\tASTNumber new number: (result inject: \'\' into: [:c :e | c, e] ); base: \'10\'\n\t\t]");
smallint21400 = (Object)new_Type_SmallInt(-1);
smallint21401 = (Object)new_Type_SmallInt(-1);
info3977 = (Object)new_AST_Info((Type_String)string28639,(Type_String)string28638, (Type_SmallInt)smallint21400, (Type_SmallInt)smallint21401);
((AST_Send)send185646)->info = (AST_Info)info3977;
// plus
send185647 = (Object)new_AST_Send((Object)send185646, (Object)symbol35848, 0);
((AST_Send)send185647)->info = (AST_Info)info3977;
localvariable26875 = (Object)new_AST_Variable_named(L"result");
array21544 = (Object)new_Type_Array_with(1, (Object)localvariable26875);
localvariable26876 = (Object)new_AST_Variable_named(L"receiver");
array21545 = (Object)new_Type_Array_with(1, (Object)localvariable26876);
string28640 = (Object)new_Type_String(L"");
constant36052 = (Object)new_AST_Constant((Object)string28640);
localvariable26877 = (Object)new_AST_Variable_named(L"c");
localvariable26878 = (Object)new_AST_Variable_named(L"e");
array21546 = (Object)new_Type_Array_with(2, (Object)localvariable26877, (Object)localvariable26878);
// ,
send185648 = (Object)new_AST_Send((Object)localvariable26877, (Object)SMB__concat, 1, (Object)localvariable26878);
((AST_Send)send185648)->info = (AST_Info)info3977;
block12893 = (Object)new_AST_Block_with((Type_Array)array21546, (Type_Array)empty_Type_Array, 3, 1, send185648);
// inject:into:
send185649 = (Object)new_AST_Send((Object)localvariable26875, (Object)symbol35697, 2, (Object)constant36052, (Object)block12893);
((AST_Send)send185649)->info = (AST_Info)info3977;
// number:
send185650 = (Object)new_AST_Send((Object)localvariable26876, (Object)symbol35700, 1, (Object)send185649);
((AST_Send)send185650)->info = (AST_Info)info3977;
string28641 = (Object)new_Type_String(L"10");
constant36053 = (Object)new_AST_Constant((Object)string28641);
// base:
send185651 = (Object)new_AST_Send((Object)localvariable26876, (Object)symbol35705, 1, (Object)constant36053);
((AST_Send)send185651)->info = (AST_Info)info3977;
block12894 = (Object)new_AST_Block_with((Type_Array)array21545, (Type_Array)empty_Type_Array, 2, 2, send185650, send185651);
// new
send185652 = (Object)new_AST_Send((Object)classreference4830, (Object)symbol35612, 0);
((AST_Send)send185652)->info = (AST_Info)info3977;
// value:
send185653 = (Object)new_AST_Send((Object)block12894, (Object)SMB_value_, 1, (Object)send185652);
((AST_Send)send185653)->info = (AST_Info)info3977;
block12895 = (Object)new_AST_Block_with((Type_Array)array21544, (Type_Array)empty_Type_Array, 1, 1, send185653);
// named:parsing:semantics:
send185654 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36051, (Object)send185647, (Object)block12895);
((AST_Send)send185654)->info = (AST_Info)info3977;
method25540 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185654);
((AST_Method)method25540)->info = (AST_Info)info3977;
symbol35831 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure25538 = (Object)new_Runtime_MethodClosure(method25540);
store_method((Type_Class)class4035, (Type_Symbol)symbol35831, (Runtime_MethodClosure)methodclosure25538);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string28642 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant36054 = (Object)new_AST_Constant((Object)string28642);
// binarySelector
send185655 = (Object)new_AST_Send((Object)Self, (Object)symbol35996, 0);
string28643 = (Object)new_Type_String(L"initializeBinaryMessageExpression");
string28644 = (Object)new_Type_String(L"initializeBinaryMessageExpression\n\t^ PEGParser\n\t\tnamed: \'BINARY-MESSAGE-EXPRESSION\'\n\t\tparsing: (self binarySelector & (self unaryObjectDescription))\n\t\tsemantics: [ :parts |\n\t\t\tASTBinaryExpression new\n\t\t\t\tselector: (self createSymbol: (parts first));\n\t\t\t\targument: (parts at: 2)\n\t\t]");
smallint21402 = (Object)new_Type_SmallInt(-1);
smallint21403 = (Object)new_Type_SmallInt(-1);
info3978 = (Object)new_AST_Info((Type_String)string28644,(Type_String)string28643, (Type_SmallInt)smallint21402, (Type_SmallInt)smallint21403);
((AST_Send)send185655)->info = (AST_Info)info3978;
// unaryObjectDescription
send185656 = (Object)new_AST_Send((Object)Self, (Object)symbol36007, 0);
((AST_Send)send185656)->info = (AST_Info)info3978;
// &
send185657 = (Object)new_AST_Send((Object)send185655, (Object)SMB__and, 1, (Object)send185656);
((AST_Send)send185657)->info = (AST_Info)info3978;
localvariable26879 = (Object)new_AST_Variable_named(L"parts");
array21547 = (Object)new_Type_Array_with(1, (Object)localvariable26879);
localvariable26880 = (Object)new_AST_Variable_named(L"receiver");
array21548 = (Object)new_Type_Array_with(1, (Object)localvariable26880);
// first
send185658 = (Object)new_AST_Send((Object)localvariable26879, (Object)symbol35693, 0);
((AST_Send)send185658)->info = (AST_Info)info3978;
// createSymbol:
send185659 = (Object)new_AST_Send((Object)Self, (Object)symbol35763, 1, (Object)send185658);
((AST_Send)send185659)->info = (AST_Info)info3978;
// selector:
send185660 = (Object)new_AST_Send((Object)localvariable26880, (Object)symbol35732, 1, (Object)send185659);
((AST_Send)send185660)->info = (AST_Info)info3978;
smallint21404 = (Object)new_Type_SmallInt(2);
constant36055 = (Object)new_AST_Constant((Object)smallint21404);
// at:
send185661 = (Object)new_AST_Send((Object)localvariable26879, (Object)SMB_at_, 1, (Object)constant36055);
((AST_Send)send185661)->info = (AST_Info)info3978;
// argument:
send185662 = (Object)new_AST_Send((Object)localvariable26880, (Object)symbol35735, 1, (Object)send185661);
((AST_Send)send185662)->info = (AST_Info)info3978;
block12896 = (Object)new_AST_Block_with((Type_Array)array21548, (Type_Array)empty_Type_Array, 2, 2, send185660, send185662);
// new
send185663 = (Object)new_AST_Send((Object)classreference4828, (Object)symbol35612, 0);
((AST_Send)send185663)->info = (AST_Info)info3978;
// value:
send185664 = (Object)new_AST_Send((Object)block12896, (Object)SMB_value_, 1, (Object)send185663);
((AST_Send)send185664)->info = (AST_Info)info3978;
block12897 = (Object)new_AST_Block_with((Type_Array)array21547, (Type_Array)empty_Type_Array, 1, 1, send185664);
// named:parsing:semantics:
send185665 = (Object)new_AST_Send((Object)classreference4820, (Object)symbol35856, 3, (Object)constant36054, (Object)send185657, (Object)block12897);
((AST_Send)send185665)->info = (AST_Info)info3978;
method25541 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185665);
((AST_Method)method25541)->info = (AST_Info)info3978;
symbol35775 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure25539 = (Object)new_Runtime_MethodClosure(method25541);
store_method((Type_Class)class4035, (Type_Symbol)symbol35775, (Runtime_MethodClosure)methodclosure25539);

// new
send185666 = (Object)new_AST_Send((Object)classreference4842, (Object)symbol35612, 0);
string28645 = (Object)new_Type_String(L"setUp");
string28646 = (Object)new_Type_String(L"setUp\n\tscparser := SCParser new");
smallint21405 = (Object)new_Type_SmallInt(-1);
smallint21406 = (Object)new_Type_SmallInt(-1);
info3979 = (Object)new_AST_Info((Type_String)string28646,(Type_String)string28645, (Type_SmallInt)smallint21405, (Type_SmallInt)smallint21406);
((AST_Send)send185666)->info = (AST_Info)info3979;
assign22757 = (Object)new_AST_Assign((Object)instancevariable5990, (Object)send185666);
method25542 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign22757, Self);
((AST_Method)method25542)->info = (AST_Info)info3979;
symbol35584 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure25540 = (Object)new_Runtime_MethodClosure(method25542);
store_method((Type_Class)class4034, (Type_Symbol)symbol35584, (Runtime_MethodClosure)methodclosure25540);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable26881 = (Object)new_AST_Variable_named(L"parser");
localvariable26882 = (Object)new_AST_Variable_named(L"string");
localvariable26883 = (Object)new_AST_Variable_named(L"result");
array21549 = (Object)new_Type_Array_with(3, (Object)localvariable26881, (Object)localvariable26882, (Object)localvariable26883);
// method
send185667 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35998, 0);
string28647 = (Object)new_Type_String(L"testMethod");
string28648 = (Object)new_Type_String(L"testMethod\n\t\" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) \"\n\n\t| parser string result |\n\tparser := scparser method.\n\tstring := \'a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 \'.\n\tresult := parser parse: string.\n\tresult hasReturnExpression should be true.\n\tresult class should = ASTMethod.\n\tresult message class should = ASTKeywordMessageDefinition.\n\tresult temporaries size should = 3.\n\tresult annotations size should = 3.\n\tresult statements size should = 2");
smallint21407 = (Object)new_Type_SmallInt(-1);
smallint21408 = (Object)new_Type_SmallInt(-1);
info3980 = (Object)new_AST_Info((Type_String)string28648,(Type_String)string28647, (Type_SmallInt)smallint21407, (Type_SmallInt)smallint21408);
((AST_Send)send185667)->info = (AST_Info)info3980;
assign22758 = (Object)new_AST_Assign((Object)localvariable26881, (Object)send185667);
string28649 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant36056 = (Object)new_AST_Constant((Object)string28649);
assign22759 = (Object)new_AST_Assign((Object)localvariable26882, (Object)constant36056);
// parse:
send185668 = (Object)new_AST_Send((Object)localvariable26881, (Object)symbol35862, 1, (Object)localvariable26882);
((AST_Send)send185668)->info = (AST_Info)info3980;
assign22760 = (Object)new_AST_Assign((Object)localvariable26883, (Object)send185668);
// hasReturnExpression
send185669 = (Object)new_AST_Send((Object)localvariable26883, (Object)symbol35678, 0);
((AST_Send)send185669)->info = (AST_Info)info3980;
// should
send185670 = (Object)new_AST_Send((Object)send185669, (Object)symbol35983, 0);
((AST_Send)send185670)->info = (AST_Info)info3980;
// be
send185671 = (Object)new_AST_Send((Object)send185670, (Object)symbol35989, 0);
((AST_Send)send185671)->info = (AST_Info)info3980;
// true
send185672 = (Object)new_AST_Send((Object)send185671, (Object)symbol35999, 0);
((AST_Send)send185672)->info = (AST_Info)info3980;
// class
send185673 = (Object)new_AST_Send((Object)localvariable26883, (Object)SMB_class, 0);
((AST_Send)send185673)->info = (AST_Info)info3980;
// should
send185674 = (Object)new_AST_Send((Object)send185673, (Object)symbol35983, 0);
((AST_Send)send185674)->info = (AST_Info)info3980;
// =
send185675 = (Object)new_AST_Send((Object)send185674, (Object)SMB__equal, 1, (Object)classreference4832);
((AST_Send)send185675)->info = (AST_Info)info3980;
// message
send185676 = (Object)new_AST_Send((Object)localvariable26883, (Object)symbol35746, 0);
((AST_Send)send185676)->info = (AST_Info)info3980;
// class
send185677 = (Object)new_AST_Send((Object)send185676, (Object)SMB_class, 0);
((AST_Send)send185677)->info = (AST_Info)info3980;
// should
send185678 = (Object)new_AST_Send((Object)send185677, (Object)symbol35983, 0);
((AST_Send)send185678)->info = (AST_Info)info3980;
// =
send185679 = (Object)new_AST_Send((Object)send185678, (Object)SMB__equal, 1, (Object)classreference4839);
((AST_Send)send185679)->info = (AST_Info)info3980;
// temporaries
send185680 = (Object)new_AST_Send((Object)localvariable26883, (Object)symbol35747, 0);
((AST_Send)send185680)->info = (AST_Info)info3980;
// size
send185681 = (Object)new_AST_Send((Object)send185680, (Object)SMB_size, 0);
((AST_Send)send185681)->info = (AST_Info)info3980;
// should
send185682 = (Object)new_AST_Send((Object)send185681, (Object)symbol35983, 0);
((AST_Send)send185682)->info = (AST_Info)info3980;
smallint21409 = (Object)new_Type_SmallInt(3);
constant36057 = (Object)new_AST_Constant((Object)smallint21409);
// =
send185683 = (Object)new_AST_Send((Object)send185682, (Object)SMB__equal, 1, (Object)constant36057);
((AST_Send)send185683)->info = (AST_Info)info3980;
// annotations
send185684 = (Object)new_AST_Send((Object)localvariable26883, (Object)symbol35744, 0);
((AST_Send)send185684)->info = (AST_Info)info3980;
// size
send185685 = (Object)new_AST_Send((Object)send185684, (Object)SMB_size, 0);
((AST_Send)send185685)->info = (AST_Info)info3980;
// should
send185686 = (Object)new_AST_Send((Object)send185685, (Object)symbol35983, 0);
((AST_Send)send185686)->info = (AST_Info)info3980;
smallint21410 = (Object)new_Type_SmallInt(3);
constant36058 = (Object)new_AST_Constant((Object)smallint21410);
// =
send185687 = (Object)new_AST_Send((Object)send185686, (Object)SMB__equal, 1, (Object)constant36058);
((AST_Send)send185687)->info = (AST_Info)info3980;
// statements
send185688 = (Object)new_AST_Send((Object)localvariable26883, (Object)symbol35743, 0);
((AST_Send)send185688)->info = (AST_Info)info3980;
// size
send185689 = (Object)new_AST_Send((Object)send185688, (Object)SMB_size, 0);
((AST_Send)send185689)->info = (AST_Info)info3980;
// should
send185690 = (Object)new_AST_Send((Object)send185689, (Object)symbol35983, 0);
((AST_Send)send185690)->info = (AST_Info)info3980;
smallint21411 = (Object)new_Type_SmallInt(2);
constant36059 = (Object)new_AST_Constant((Object)smallint21411);
// =
send185691 = (Object)new_AST_Send((Object)send185690, (Object)SMB__equal, 1, (Object)constant36059);
((AST_Send)send185691)->info = (AST_Info)info3980;
method25543 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21549, 10, assign22758, assign22759, assign22760, send185672, send185675, send185679, send185683, send185687, send185691, Self);
((AST_Method)method25543)->info = (AST_Info)info3980;
symbol35592 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure25541 = (Object)new_Runtime_MethodClosure(method25543);
store_method((Type_Class)class4034, (Type_Symbol)symbol35592, (Runtime_MethodClosure)methodclosure25541);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable26884 = (Object)new_AST_Variable_named(L"parser");
localvariable26885 = (Object)new_AST_Variable_named(L"string");
localvariable26886 = (Object)new_AST_Variable_named(L"result");
array21550 = (Object)new_Type_Array_with(3, (Object)localvariable26884, (Object)localvariable26885, (Object)localvariable26886);
// block
send185692 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36031, 0);
string28650 = (Object)new_Type_String(L"testBlock");
string28651 = (Object)new_Type_String(L"testBlock\n\t| parser string result |\n\tparser := scparser block.\n\tstring := PEGStringScanner on: \'[]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[||]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[:a :bcd :  e  :f | ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 4.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[ | a   f d| ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 3.\n\tresult parameters size should = 0.\n\tresult statements size should = 0.\n\tstring := PEGStringScanner on: \'[ || b. d ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 2.\n\tstring := PEGStringScanner on: \'[ || b. ^ d ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 2.\n\tstring := PEGStringScanner on: \'[ || b. d. ]\'.\n\tresult := parser match: string.\n\tresult class should = ASTBlock.\n\tresult temporaries size should = 0.\n\tresult parameters size should = 0.\n\tresult statements size should = 2");
smallint21412 = (Object)new_Type_SmallInt(-1);
smallint21413 = (Object)new_Type_SmallInt(-1);
info3981 = (Object)new_AST_Info((Type_String)string28651,(Type_String)string28650, (Type_SmallInt)smallint21412, (Type_SmallInt)smallint21413);
((AST_Send)send185692)->info = (AST_Info)info3981;
assign22761 = (Object)new_AST_Assign((Object)localvariable26884, (Object)send185692);
string28652 = (Object)new_Type_String(L"[]");
constant36060 = (Object)new_AST_Constant((Object)string28652);
// on:
send185693 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36060);
((AST_Send)send185693)->info = (AST_Info)info3981;
assign22762 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185693);
// match:
send185694 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185694)->info = (AST_Info)info3981;
assign22763 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185694);
// class
send185695 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185695)->info = (AST_Info)info3981;
// should
send185696 = (Object)new_AST_Send((Object)send185695, (Object)symbol35983, 0);
((AST_Send)send185696)->info = (AST_Info)info3981;
// =
send185697 = (Object)new_AST_Send((Object)send185696, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185697)->info = (AST_Info)info3981;
// temporaries
send185698 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185698)->info = (AST_Info)info3981;
// size
send185699 = (Object)new_AST_Send((Object)send185698, (Object)SMB_size, 0);
((AST_Send)send185699)->info = (AST_Info)info3981;
// should
send185700 = (Object)new_AST_Send((Object)send185699, (Object)symbol35983, 0);
((AST_Send)send185700)->info = (AST_Info)info3981;
smallint21414 = (Object)new_Type_SmallInt(0);
constant36061 = (Object)new_AST_Constant((Object)smallint21414);
// =
send185701 = (Object)new_AST_Send((Object)send185700, (Object)SMB__equal, 1, (Object)constant36061);
((AST_Send)send185701)->info = (AST_Info)info3981;
// parameters
send185702 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185702)->info = (AST_Info)info3981;
// size
send185703 = (Object)new_AST_Send((Object)send185702, (Object)SMB_size, 0);
((AST_Send)send185703)->info = (AST_Info)info3981;
// should
send185704 = (Object)new_AST_Send((Object)send185703, (Object)symbol35983, 0);
((AST_Send)send185704)->info = (AST_Info)info3981;
smallint21415 = (Object)new_Type_SmallInt(0);
constant36062 = (Object)new_AST_Constant((Object)smallint21415);
// =
send185705 = (Object)new_AST_Send((Object)send185704, (Object)SMB__equal, 1, (Object)constant36062);
((AST_Send)send185705)->info = (AST_Info)info3981;
// statements
send185706 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185706)->info = (AST_Info)info3981;
// size
send185707 = (Object)new_AST_Send((Object)send185706, (Object)SMB_size, 0);
((AST_Send)send185707)->info = (AST_Info)info3981;
// should
send185708 = (Object)new_AST_Send((Object)send185707, (Object)symbol35983, 0);
((AST_Send)send185708)->info = (AST_Info)info3981;
smallint21416 = (Object)new_Type_SmallInt(0);
constant36063 = (Object)new_AST_Constant((Object)smallint21416);
// =
send185709 = (Object)new_AST_Send((Object)send185708, (Object)SMB__equal, 1, (Object)constant36063);
((AST_Send)send185709)->info = (AST_Info)info3981;
string28653 = (Object)new_Type_String(L"[||]");
constant36064 = (Object)new_AST_Constant((Object)string28653);
// on:
send185710 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36064);
((AST_Send)send185710)->info = (AST_Info)info3981;
assign22764 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185710);
// match:
send185711 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185711)->info = (AST_Info)info3981;
assign22765 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185711);
// class
send185712 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185712)->info = (AST_Info)info3981;
// should
send185713 = (Object)new_AST_Send((Object)send185712, (Object)symbol35983, 0);
((AST_Send)send185713)->info = (AST_Info)info3981;
// =
send185714 = (Object)new_AST_Send((Object)send185713, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185714)->info = (AST_Info)info3981;
// temporaries
send185715 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185715)->info = (AST_Info)info3981;
// size
send185716 = (Object)new_AST_Send((Object)send185715, (Object)SMB_size, 0);
((AST_Send)send185716)->info = (AST_Info)info3981;
// should
send185717 = (Object)new_AST_Send((Object)send185716, (Object)symbol35983, 0);
((AST_Send)send185717)->info = (AST_Info)info3981;
smallint21417 = (Object)new_Type_SmallInt(0);
constant36065 = (Object)new_AST_Constant((Object)smallint21417);
// =
send185718 = (Object)new_AST_Send((Object)send185717, (Object)SMB__equal, 1, (Object)constant36065);
((AST_Send)send185718)->info = (AST_Info)info3981;
// parameters
send185719 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185719)->info = (AST_Info)info3981;
// size
send185720 = (Object)new_AST_Send((Object)send185719, (Object)SMB_size, 0);
((AST_Send)send185720)->info = (AST_Info)info3981;
// should
send185721 = (Object)new_AST_Send((Object)send185720, (Object)symbol35983, 0);
((AST_Send)send185721)->info = (AST_Info)info3981;
smallint21418 = (Object)new_Type_SmallInt(0);
constant36066 = (Object)new_AST_Constant((Object)smallint21418);
// =
send185722 = (Object)new_AST_Send((Object)send185721, (Object)SMB__equal, 1, (Object)constant36066);
((AST_Send)send185722)->info = (AST_Info)info3981;
// statements
send185723 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185723)->info = (AST_Info)info3981;
// size
send185724 = (Object)new_AST_Send((Object)send185723, (Object)SMB_size, 0);
((AST_Send)send185724)->info = (AST_Info)info3981;
// should
send185725 = (Object)new_AST_Send((Object)send185724, (Object)symbol35983, 0);
((AST_Send)send185725)->info = (AST_Info)info3981;
smallint21419 = (Object)new_Type_SmallInt(0);
constant36067 = (Object)new_AST_Constant((Object)smallint21419);
// =
send185726 = (Object)new_AST_Send((Object)send185725, (Object)SMB__equal, 1, (Object)constant36067);
((AST_Send)send185726)->info = (AST_Info)info3981;
string28654 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant36068 = (Object)new_AST_Constant((Object)string28654);
// on:
send185727 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36068);
((AST_Send)send185727)->info = (AST_Info)info3981;
assign22766 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185727);
// match:
send185728 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185728)->info = (AST_Info)info3981;
assign22767 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185728);
// class
send185729 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185729)->info = (AST_Info)info3981;
// should
send185730 = (Object)new_AST_Send((Object)send185729, (Object)symbol35983, 0);
((AST_Send)send185730)->info = (AST_Info)info3981;
// =
send185731 = (Object)new_AST_Send((Object)send185730, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185731)->info = (AST_Info)info3981;
// temporaries
send185732 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185732)->info = (AST_Info)info3981;
// size
send185733 = (Object)new_AST_Send((Object)send185732, (Object)SMB_size, 0);
((AST_Send)send185733)->info = (AST_Info)info3981;
// should
send185734 = (Object)new_AST_Send((Object)send185733, (Object)symbol35983, 0);
((AST_Send)send185734)->info = (AST_Info)info3981;
smallint21420 = (Object)new_Type_SmallInt(0);
constant36069 = (Object)new_AST_Constant((Object)smallint21420);
// =
send185735 = (Object)new_AST_Send((Object)send185734, (Object)SMB__equal, 1, (Object)constant36069);
((AST_Send)send185735)->info = (AST_Info)info3981;
// parameters
send185736 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185736)->info = (AST_Info)info3981;
// size
send185737 = (Object)new_AST_Send((Object)send185736, (Object)SMB_size, 0);
((AST_Send)send185737)->info = (AST_Info)info3981;
// should
send185738 = (Object)new_AST_Send((Object)send185737, (Object)symbol35983, 0);
((AST_Send)send185738)->info = (AST_Info)info3981;
smallint21421 = (Object)new_Type_SmallInt(4);
constant36070 = (Object)new_AST_Constant((Object)smallint21421);
// =
send185739 = (Object)new_AST_Send((Object)send185738, (Object)SMB__equal, 1, (Object)constant36070);
((AST_Send)send185739)->info = (AST_Info)info3981;
// statements
send185740 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185740)->info = (AST_Info)info3981;
// size
send185741 = (Object)new_AST_Send((Object)send185740, (Object)SMB_size, 0);
((AST_Send)send185741)->info = (AST_Info)info3981;
// should
send185742 = (Object)new_AST_Send((Object)send185741, (Object)symbol35983, 0);
((AST_Send)send185742)->info = (AST_Info)info3981;
smallint21422 = (Object)new_Type_SmallInt(0);
constant36071 = (Object)new_AST_Constant((Object)smallint21422);
// =
send185743 = (Object)new_AST_Send((Object)send185742, (Object)SMB__equal, 1, (Object)constant36071);
((AST_Send)send185743)->info = (AST_Info)info3981;
string28655 = (Object)new_Type_String(L"[ | a   f d| ]");
constant36072 = (Object)new_AST_Constant((Object)string28655);
// on:
send185744 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36072);
((AST_Send)send185744)->info = (AST_Info)info3981;
assign22768 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185744);
// match:
send185745 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185745)->info = (AST_Info)info3981;
assign22769 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185745);
// class
send185746 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185746)->info = (AST_Info)info3981;
// should
send185747 = (Object)new_AST_Send((Object)send185746, (Object)symbol35983, 0);
((AST_Send)send185747)->info = (AST_Info)info3981;
// =
send185748 = (Object)new_AST_Send((Object)send185747, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185748)->info = (AST_Info)info3981;
// temporaries
send185749 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185749)->info = (AST_Info)info3981;
// size
send185750 = (Object)new_AST_Send((Object)send185749, (Object)SMB_size, 0);
((AST_Send)send185750)->info = (AST_Info)info3981;
// should
send185751 = (Object)new_AST_Send((Object)send185750, (Object)symbol35983, 0);
((AST_Send)send185751)->info = (AST_Info)info3981;
smallint21423 = (Object)new_Type_SmallInt(3);
constant36073 = (Object)new_AST_Constant((Object)smallint21423);
// =
send185752 = (Object)new_AST_Send((Object)send185751, (Object)SMB__equal, 1, (Object)constant36073);
((AST_Send)send185752)->info = (AST_Info)info3981;
// parameters
send185753 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185753)->info = (AST_Info)info3981;
// size
send185754 = (Object)new_AST_Send((Object)send185753, (Object)SMB_size, 0);
((AST_Send)send185754)->info = (AST_Info)info3981;
// should
send185755 = (Object)new_AST_Send((Object)send185754, (Object)symbol35983, 0);
((AST_Send)send185755)->info = (AST_Info)info3981;
smallint21424 = (Object)new_Type_SmallInt(0);
constant36074 = (Object)new_AST_Constant((Object)smallint21424);
// =
send185756 = (Object)new_AST_Send((Object)send185755, (Object)SMB__equal, 1, (Object)constant36074);
((AST_Send)send185756)->info = (AST_Info)info3981;
// statements
send185757 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185757)->info = (AST_Info)info3981;
// size
send185758 = (Object)new_AST_Send((Object)send185757, (Object)SMB_size, 0);
((AST_Send)send185758)->info = (AST_Info)info3981;
// should
send185759 = (Object)new_AST_Send((Object)send185758, (Object)symbol35983, 0);
((AST_Send)send185759)->info = (AST_Info)info3981;
smallint21425 = (Object)new_Type_SmallInt(0);
constant36075 = (Object)new_AST_Constant((Object)smallint21425);
// =
send185760 = (Object)new_AST_Send((Object)send185759, (Object)SMB__equal, 1, (Object)constant36075);
((AST_Send)send185760)->info = (AST_Info)info3981;
string28656 = (Object)new_Type_String(L"[ || b. d ]");
constant36076 = (Object)new_AST_Constant((Object)string28656);
// on:
send185761 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36076);
((AST_Send)send185761)->info = (AST_Info)info3981;
assign22770 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185761);
// match:
send185762 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185762)->info = (AST_Info)info3981;
assign22771 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185762);
// class
send185763 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185763)->info = (AST_Info)info3981;
// should
send185764 = (Object)new_AST_Send((Object)send185763, (Object)symbol35983, 0);
((AST_Send)send185764)->info = (AST_Info)info3981;
// =
send185765 = (Object)new_AST_Send((Object)send185764, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185765)->info = (AST_Info)info3981;
// temporaries
send185766 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185766)->info = (AST_Info)info3981;
// size
send185767 = (Object)new_AST_Send((Object)send185766, (Object)SMB_size, 0);
((AST_Send)send185767)->info = (AST_Info)info3981;
// should
send185768 = (Object)new_AST_Send((Object)send185767, (Object)symbol35983, 0);
((AST_Send)send185768)->info = (AST_Info)info3981;
smallint21426 = (Object)new_Type_SmallInt(0);
constant36077 = (Object)new_AST_Constant((Object)smallint21426);
// =
send185769 = (Object)new_AST_Send((Object)send185768, (Object)SMB__equal, 1, (Object)constant36077);
((AST_Send)send185769)->info = (AST_Info)info3981;
// parameters
send185770 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185770)->info = (AST_Info)info3981;
// size
send185771 = (Object)new_AST_Send((Object)send185770, (Object)SMB_size, 0);
((AST_Send)send185771)->info = (AST_Info)info3981;
// should
send185772 = (Object)new_AST_Send((Object)send185771, (Object)symbol35983, 0);
((AST_Send)send185772)->info = (AST_Info)info3981;
smallint21427 = (Object)new_Type_SmallInt(0);
constant36078 = (Object)new_AST_Constant((Object)smallint21427);
// =
send185773 = (Object)new_AST_Send((Object)send185772, (Object)SMB__equal, 1, (Object)constant36078);
((AST_Send)send185773)->info = (AST_Info)info3981;
// statements
send185774 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185774)->info = (AST_Info)info3981;
// size
send185775 = (Object)new_AST_Send((Object)send185774, (Object)SMB_size, 0);
((AST_Send)send185775)->info = (AST_Info)info3981;
// should
send185776 = (Object)new_AST_Send((Object)send185775, (Object)symbol35983, 0);
((AST_Send)send185776)->info = (AST_Info)info3981;
smallint21428 = (Object)new_Type_SmallInt(2);
constant36079 = (Object)new_AST_Constant((Object)smallint21428);
// =
send185777 = (Object)new_AST_Send((Object)send185776, (Object)SMB__equal, 1, (Object)constant36079);
((AST_Send)send185777)->info = (AST_Info)info3981;
string28657 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant36080 = (Object)new_AST_Constant((Object)string28657);
// on:
send185778 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36080);
((AST_Send)send185778)->info = (AST_Info)info3981;
assign22772 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185778);
// match:
send185779 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185779)->info = (AST_Info)info3981;
assign22773 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185779);
// class
send185780 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185780)->info = (AST_Info)info3981;
// should
send185781 = (Object)new_AST_Send((Object)send185780, (Object)symbol35983, 0);
((AST_Send)send185781)->info = (AST_Info)info3981;
// =
send185782 = (Object)new_AST_Send((Object)send185781, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185782)->info = (AST_Info)info3981;
// temporaries
send185783 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185783)->info = (AST_Info)info3981;
// size
send185784 = (Object)new_AST_Send((Object)send185783, (Object)SMB_size, 0);
((AST_Send)send185784)->info = (AST_Info)info3981;
// should
send185785 = (Object)new_AST_Send((Object)send185784, (Object)symbol35983, 0);
((AST_Send)send185785)->info = (AST_Info)info3981;
smallint21429 = (Object)new_Type_SmallInt(0);
constant36081 = (Object)new_AST_Constant((Object)smallint21429);
// =
send185786 = (Object)new_AST_Send((Object)send185785, (Object)SMB__equal, 1, (Object)constant36081);
((AST_Send)send185786)->info = (AST_Info)info3981;
// parameters
send185787 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185787)->info = (AST_Info)info3981;
// size
send185788 = (Object)new_AST_Send((Object)send185787, (Object)SMB_size, 0);
((AST_Send)send185788)->info = (AST_Info)info3981;
// should
send185789 = (Object)new_AST_Send((Object)send185788, (Object)symbol35983, 0);
((AST_Send)send185789)->info = (AST_Info)info3981;
smallint21430 = (Object)new_Type_SmallInt(0);
constant36082 = (Object)new_AST_Constant((Object)smallint21430);
// =
send185790 = (Object)new_AST_Send((Object)send185789, (Object)SMB__equal, 1, (Object)constant36082);
((AST_Send)send185790)->info = (AST_Info)info3981;
// statements
send185791 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185791)->info = (AST_Info)info3981;
// size
send185792 = (Object)new_AST_Send((Object)send185791, (Object)SMB_size, 0);
((AST_Send)send185792)->info = (AST_Info)info3981;
// should
send185793 = (Object)new_AST_Send((Object)send185792, (Object)symbol35983, 0);
((AST_Send)send185793)->info = (AST_Info)info3981;
smallint21431 = (Object)new_Type_SmallInt(2);
constant36083 = (Object)new_AST_Constant((Object)smallint21431);
// =
send185794 = (Object)new_AST_Send((Object)send185793, (Object)SMB__equal, 1, (Object)constant36083);
((AST_Send)send185794)->info = (AST_Info)info3981;
string28658 = (Object)new_Type_String(L"[ || b. d. ]");
constant36084 = (Object)new_AST_Constant((Object)string28658);
// on:
send185795 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36084);
((AST_Send)send185795)->info = (AST_Info)info3981;
assign22774 = (Object)new_AST_Assign((Object)localvariable26885, (Object)send185795);
// match:
send185796 = (Object)new_AST_Send((Object)localvariable26884, (Object)symbol35843, 1, (Object)localvariable26885);
((AST_Send)send185796)->info = (AST_Info)info3981;
assign22775 = (Object)new_AST_Assign((Object)localvariable26886, (Object)send185796);
// class
send185797 = (Object)new_AST_Send((Object)localvariable26886, (Object)SMB_class, 0);
((AST_Send)send185797)->info = (AST_Info)info3981;
// should
send185798 = (Object)new_AST_Send((Object)send185797, (Object)symbol35983, 0);
((AST_Send)send185798)->info = (AST_Info)info3981;
// =
send185799 = (Object)new_AST_Send((Object)send185798, (Object)SMB__equal, 1, (Object)classreference4847);
((AST_Send)send185799)->info = (AST_Info)info3981;
// temporaries
send185800 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35747, 0);
((AST_Send)send185800)->info = (AST_Info)info3981;
// size
send185801 = (Object)new_AST_Send((Object)send185800, (Object)SMB_size, 0);
((AST_Send)send185801)->info = (AST_Info)info3981;
// should
send185802 = (Object)new_AST_Send((Object)send185801, (Object)symbol35983, 0);
((AST_Send)send185802)->info = (AST_Info)info3981;
smallint21432 = (Object)new_Type_SmallInt(0);
constant36085 = (Object)new_AST_Constant((Object)smallint21432);
// =
send185803 = (Object)new_AST_Send((Object)send185802, (Object)SMB__equal, 1, (Object)constant36085);
((AST_Send)send185803)->info = (AST_Info)info3981;
// parameters
send185804 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35733, 0);
((AST_Send)send185804)->info = (AST_Info)info3981;
// size
send185805 = (Object)new_AST_Send((Object)send185804, (Object)SMB_size, 0);
((AST_Send)send185805)->info = (AST_Info)info3981;
// should
send185806 = (Object)new_AST_Send((Object)send185805, (Object)symbol35983, 0);
((AST_Send)send185806)->info = (AST_Info)info3981;
smallint21433 = (Object)new_Type_SmallInt(0);
constant36086 = (Object)new_AST_Constant((Object)smallint21433);
// =
send185807 = (Object)new_AST_Send((Object)send185806, (Object)SMB__equal, 1, (Object)constant36086);
((AST_Send)send185807)->info = (AST_Info)info3981;
// statements
send185808 = (Object)new_AST_Send((Object)localvariable26886, (Object)symbol35743, 0);
((AST_Send)send185808)->info = (AST_Info)info3981;
// size
send185809 = (Object)new_AST_Send((Object)send185808, (Object)SMB_size, 0);
((AST_Send)send185809)->info = (AST_Info)info3981;
// should
send185810 = (Object)new_AST_Send((Object)send185809, (Object)symbol35983, 0);
((AST_Send)send185810)->info = (AST_Info)info3981;
smallint21434 = (Object)new_Type_SmallInt(2);
constant36087 = (Object)new_AST_Constant((Object)smallint21434);
// =
send185811 = (Object)new_AST_Send((Object)send185810, (Object)SMB__equal, 1, (Object)constant36087);
((AST_Send)send185811)->info = (AST_Info)info3981;
method25544 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21550, 44, assign22761, assign22762, assign22763, send185697, send185701, send185705, send185709, assign22764, assign22765, send185714, send185718, send185722, send185726, assign22766, assign22767, send185731, send185735, send185739, send185743, assign22768, assign22769, send185748, send185752, send185756, send185760, assign22770, assign22771, send185765, send185769, send185773, send185777, assign22772, assign22773, send185782, send185786, send185790, send185794, assign22774, assign22775, send185799, send185803, send185807, send185811, Self);
((AST_Method)method25544)->info = (AST_Info)info3981;
symbol35574 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure25542 = (Object)new_Runtime_MethodClosure(method25544);
store_method((Type_Class)class4034, (Type_Symbol)symbol35574, (Runtime_MethodClosure)methodclosure25542);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable26887 = (Object)new_AST_Variable_named(L"parser");
localvariable26888 = (Object)new_AST_Variable_named(L"string");
localvariable26889 = (Object)new_AST_Variable_named(L"result");
array21551 = (Object)new_Type_Array_with(3, (Object)localvariable26887, (Object)localvariable26888, (Object)localvariable26889);
// expression
send185812 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol35755, 0);
string28659 = (Object)new_Type_String(L"testExpression");
string28660 = (Object)new_Type_String(L"testExpression\n\t| parser string result |\n\tparser := scparser expression.\n\tstring := PEGStringScanner on: \'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b \'.\n\tresult := parser match: string.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'a\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'b\'.\n\tresult := result expression.\n\tresult class should = ASTAssignmentExpression.\n\tresult variable class should = ASTVariable.\n\tresult variable name should = \'c\'.\n\tresult expression class should = ASTMessageExpression");
smallint21435 = (Object)new_Type_SmallInt(-1);
smallint21436 = (Object)new_Type_SmallInt(-1);
info3982 = (Object)new_AST_Info((Type_String)string28660,(Type_String)string28659, (Type_SmallInt)smallint21435, (Type_SmallInt)smallint21436);
((AST_Send)send185812)->info = (AST_Info)info3982;
assign22776 = (Object)new_AST_Assign((Object)localvariable26887, (Object)send185812);
string28661 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant36088 = (Object)new_AST_Constant((Object)string28661);
// on:
send185813 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36088);
((AST_Send)send185813)->info = (AST_Info)info3982;
assign22777 = (Object)new_AST_Assign((Object)localvariable26888, (Object)send185813);
// match:
send185814 = (Object)new_AST_Send((Object)localvariable26887, (Object)symbol35843, 1, (Object)localvariable26888);
((AST_Send)send185814)->info = (AST_Info)info3982;
assign22778 = (Object)new_AST_Assign((Object)localvariable26889, (Object)send185814);
// class
send185815 = (Object)new_AST_Send((Object)localvariable26889, (Object)SMB_class, 0);
((AST_Send)send185815)->info = (AST_Info)info3982;
// should
send185816 = (Object)new_AST_Send((Object)send185815, (Object)symbol35983, 0);
((AST_Send)send185816)->info = (AST_Info)info3982;
// =
send185817 = (Object)new_AST_Send((Object)send185816, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send185817)->info = (AST_Info)info3982;
// variable
send185818 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35757, 0);
((AST_Send)send185818)->info = (AST_Info)info3982;
// class
send185819 = (Object)new_AST_Send((Object)send185818, (Object)SMB_class, 0);
((AST_Send)send185819)->info = (AST_Info)info3982;
// should
send185820 = (Object)new_AST_Send((Object)send185819, (Object)symbol35983, 0);
((AST_Send)send185820)->info = (AST_Info)info3982;
// =
send185821 = (Object)new_AST_Send((Object)send185820, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send185821)->info = (AST_Info)info3982;
// variable
send185822 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35757, 0);
((AST_Send)send185822)->info = (AST_Info)info3982;
// name
send185823 = (Object)new_AST_Send((Object)send185822, (Object)SMB_name, 0);
((AST_Send)send185823)->info = (AST_Info)info3982;
// should
send185824 = (Object)new_AST_Send((Object)send185823, (Object)symbol35983, 0);
((AST_Send)send185824)->info = (AST_Info)info3982;
string28662 = (Object)new_Type_String(L"a");
constant36089 = (Object)new_AST_Constant((Object)string28662);
// =
send185825 = (Object)new_AST_Send((Object)send185824, (Object)SMB__equal, 1, (Object)constant36089);
((AST_Send)send185825)->info = (AST_Info)info3982;
// expression
send185826 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35755, 0);
((AST_Send)send185826)->info = (AST_Info)info3982;
assign22779 = (Object)new_AST_Assign((Object)localvariable26889, (Object)send185826);
// class
send185827 = (Object)new_AST_Send((Object)localvariable26889, (Object)SMB_class, 0);
((AST_Send)send185827)->info = (AST_Info)info3982;
// should
send185828 = (Object)new_AST_Send((Object)send185827, (Object)symbol35983, 0);
((AST_Send)send185828)->info = (AST_Info)info3982;
// =
send185829 = (Object)new_AST_Send((Object)send185828, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send185829)->info = (AST_Info)info3982;
// variable
send185830 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35757, 0);
((AST_Send)send185830)->info = (AST_Info)info3982;
// class
send185831 = (Object)new_AST_Send((Object)send185830, (Object)SMB_class, 0);
((AST_Send)send185831)->info = (AST_Info)info3982;
// should
send185832 = (Object)new_AST_Send((Object)send185831, (Object)symbol35983, 0);
((AST_Send)send185832)->info = (AST_Info)info3982;
// =
send185833 = (Object)new_AST_Send((Object)send185832, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send185833)->info = (AST_Info)info3982;
// variable
send185834 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35757, 0);
((AST_Send)send185834)->info = (AST_Info)info3982;
// name
send185835 = (Object)new_AST_Send((Object)send185834, (Object)SMB_name, 0);
((AST_Send)send185835)->info = (AST_Info)info3982;
// should
send185836 = (Object)new_AST_Send((Object)send185835, (Object)symbol35983, 0);
((AST_Send)send185836)->info = (AST_Info)info3982;
string28663 = (Object)new_Type_String(L"b");
constant36090 = (Object)new_AST_Constant((Object)string28663);
// =
send185837 = (Object)new_AST_Send((Object)send185836, (Object)SMB__equal, 1, (Object)constant36090);
((AST_Send)send185837)->info = (AST_Info)info3982;
// expression
send185838 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35755, 0);
((AST_Send)send185838)->info = (AST_Info)info3982;
assign22780 = (Object)new_AST_Assign((Object)localvariable26889, (Object)send185838);
// class
send185839 = (Object)new_AST_Send((Object)localvariable26889, (Object)SMB_class, 0);
((AST_Send)send185839)->info = (AST_Info)info3982;
// should
send185840 = (Object)new_AST_Send((Object)send185839, (Object)symbol35983, 0);
((AST_Send)send185840)->info = (AST_Info)info3982;
// =
send185841 = (Object)new_AST_Send((Object)send185840, (Object)SMB__equal, 1, (Object)classreference4821);
((AST_Send)send185841)->info = (AST_Info)info3982;
// variable
send185842 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35757, 0);
((AST_Send)send185842)->info = (AST_Info)info3982;
// class
send185843 = (Object)new_AST_Send((Object)send185842, (Object)SMB_class, 0);
((AST_Send)send185843)->info = (AST_Info)info3982;
// should
send185844 = (Object)new_AST_Send((Object)send185843, (Object)symbol35983, 0);
((AST_Send)send185844)->info = (AST_Info)info3982;
// =
send185845 = (Object)new_AST_Send((Object)send185844, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send185845)->info = (AST_Info)info3982;
// variable
send185846 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35757, 0);
((AST_Send)send185846)->info = (AST_Info)info3982;
// name
send185847 = (Object)new_AST_Send((Object)send185846, (Object)SMB_name, 0);
((AST_Send)send185847)->info = (AST_Info)info3982;
// should
send185848 = (Object)new_AST_Send((Object)send185847, (Object)symbol35983, 0);
((AST_Send)send185848)->info = (AST_Info)info3982;
string28664 = (Object)new_Type_String(L"c");
constant36091 = (Object)new_AST_Constant((Object)string28664);
// =
send185849 = (Object)new_AST_Send((Object)send185848, (Object)SMB__equal, 1, (Object)constant36091);
((AST_Send)send185849)->info = (AST_Info)info3982;
// expression
send185850 = (Object)new_AST_Send((Object)localvariable26889, (Object)symbol35755, 0);
((AST_Send)send185850)->info = (AST_Info)info3982;
// class
send185851 = (Object)new_AST_Send((Object)send185850, (Object)SMB_class, 0);
((AST_Send)send185851)->info = (AST_Info)info3982;
// should
send185852 = (Object)new_AST_Send((Object)send185851, (Object)symbol35983, 0);
((AST_Send)send185852)->info = (AST_Info)info3982;
// =
send185853 = (Object)new_AST_Send((Object)send185852, (Object)SMB__equal, 1, (Object)classreference4823);
((AST_Send)send185853)->info = (AST_Info)info3982;
method25545 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21551, 16, assign22776, assign22777, assign22778, send185817, send185821, send185825, assign22779, send185829, send185833, send185837, assign22780, send185841, send185845, send185849, send185853, Self);
((AST_Method)method25545)->info = (AST_Info)info3982;
symbol35594 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure25543 = (Object)new_Runtime_MethodClosure(method25545);
store_method((Type_Class)class4034, (Type_Symbol)symbol35594, (Runtime_MethodClosure)methodclosure25543);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable26890 = (Object)new_AST_Variable_named(L"parser");
localvariable26891 = (Object)new_AST_Variable_named(L"string");
localvariable26892 = (Object)new_AST_Variable_named(L"result");
array21552 = (Object)new_Type_Array_with(3, (Object)localvariable26890, (Object)localvariable26891, (Object)localvariable26892);
// primary
send185854 = (Object)new_AST_Send((Object)instancevariable5990, (Object)symbol36028, 0);
string28665 = (Object)new_Type_String(L"testPrimary");
string28666 = (Object)new_Type_String(L"testPrimary\n\t| parser string result |\n\tparser := scparser primary.\t\" primary variable\"\n\tstring := PEGStringScanner on: \'abc \'.\n\tresult := parser match: string.\n\tresult class should = ASTVariable.\n\tresult name should = \'abc\'.\n\tstring position should = 3.\t\" literal \"\n\tstring := PEGStringScanner on: \'3\'.\n\tresult := parser match: string.\n\tresult class should = ASTNumber.\n\tresult number should = \'3\'.\n\tresult base should = \'10\'.\n\tstring position should = 1");
smallint21437 = (Object)new_Type_SmallInt(-1);
smallint21438 = (Object)new_Type_SmallInt(-1);
info3983 = (Object)new_AST_Info((Type_String)string28666,(Type_String)string28665, (Type_SmallInt)smallint21437, (Type_SmallInt)smallint21438);
((AST_Send)send185854)->info = (AST_Info)info3983;
assign22781 = (Object)new_AST_Assign((Object)localvariable26890, (Object)send185854);
string28667 = (Object)new_Type_String(L"abc ");
constant36092 = (Object)new_AST_Constant((Object)string28667);
// on:
send185855 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36092);
((AST_Send)send185855)->info = (AST_Info)info3983;
assign22782 = (Object)new_AST_Assign((Object)localvariable26891, (Object)send185855);
// match:
send185856 = (Object)new_AST_Send((Object)localvariable26890, (Object)symbol35843, 1, (Object)localvariable26891);
((AST_Send)send185856)->info = (AST_Info)info3983;
assign22783 = (Object)new_AST_Assign((Object)localvariable26892, (Object)send185856);
// class
send185857 = (Object)new_AST_Send((Object)localvariable26892, (Object)SMB_class, 0);
((AST_Send)send185857)->info = (AST_Info)info3983;
// should
send185858 = (Object)new_AST_Send((Object)send185857, (Object)symbol35983, 0);
((AST_Send)send185858)->info = (AST_Info)info3983;
// =
send185859 = (Object)new_AST_Send((Object)send185858, (Object)SMB__equal, 1, (Object)classreference4822);
((AST_Send)send185859)->info = (AST_Info)info3983;
// name
send185860 = (Object)new_AST_Send((Object)localvariable26892, (Object)SMB_name, 0);
((AST_Send)send185860)->info = (AST_Info)info3983;
// should
send185861 = (Object)new_AST_Send((Object)send185860, (Object)symbol35983, 0);
((AST_Send)send185861)->info = (AST_Info)info3983;
string28668 = (Object)new_Type_String(L"abc");
constant36093 = (Object)new_AST_Constant((Object)string28668);
// =
send185862 = (Object)new_AST_Send((Object)send185861, (Object)SMB__equal, 1, (Object)constant36093);
((AST_Send)send185862)->info = (AST_Info)info3983;
// position
send185863 = (Object)new_AST_Send((Object)localvariable26891, (Object)symbol35988, 0);
((AST_Send)send185863)->info = (AST_Info)info3983;
// should
send185864 = (Object)new_AST_Send((Object)send185863, (Object)symbol35983, 0);
((AST_Send)send185864)->info = (AST_Info)info3983;
smallint21439 = (Object)new_Type_SmallInt(3);
constant36094 = (Object)new_AST_Constant((Object)smallint21439);
// =
send185865 = (Object)new_AST_Send((Object)send185864, (Object)SMB__equal, 1, (Object)constant36094);
((AST_Send)send185865)->info = (AST_Info)info3983;
string28669 = (Object)new_Type_String(L"3");
constant36095 = (Object)new_AST_Constant((Object)string28669);
// on:
send185866 = (Object)new_AST_Send((Object)classreference4816, (Object)SMB_on_, 1, (Object)constant36095);
((AST_Send)send185866)->info = (AST_Info)info3983;
assign22784 = (Object)new_AST_Assign((Object)localvariable26891, (Object)send185866);
// match:
send185867 = (Object)new_AST_Send((Object)localvariable26890, (Object)symbol35843, 1, (Object)localvariable26891);
((AST_Send)send185867)->info = (AST_Info)info3983;
assign22785 = (Object)new_AST_Assign((Object)localvariable26892, (Object)send185867);
// class
send185868 = (Object)new_AST_Send((Object)localvariable26892, (Object)SMB_class, 0);
((AST_Send)send185868)->info = (AST_Info)info3983;
// should
send185869 = (Object)new_AST_Send((Object)send185868, (Object)symbol35983, 0);
((AST_Send)send185869)->info = (AST_Info)info3983;
// =
send185870 = (Object)new_AST_Send((Object)send185869, (Object)SMB__equal, 1, (Object)classreference4830);
((AST_Send)send185870)->info = (AST_Info)info3983;
// number
send185871 = (Object)new_AST_Send((Object)localvariable26892, (Object)symbol35701, 0);
((AST_Send)send185871)->info = (AST_Info)info3983;
// should
send185872 = (Object)new_AST_Send((Object)send185871, (Object)symbol35983, 0);
((AST_Send)send185872)->info = (AST_Info)info3983;
string28670 = (Object)new_Type_String(L"3");
constant36096 = (Object)new_AST_Constant((Object)string28670);
// =
send185873 = (Object)new_AST_Send((Object)send185872, (Object)SMB__equal, 1, (Object)constant36096);
((AST_Send)send185873)->info = (AST_Info)info3983;
// base
send185874 = (Object)new_AST_Send((Object)localvariable26892, (Object)symbol35704, 0);
((AST_Send)send185874)->info = (AST_Info)info3983;
// should
send185875 = (Object)new_AST_Send((Object)send185874, (Object)symbol35983, 0);
((AST_Send)send185875)->info = (AST_Info)info3983;
string28671 = (Object)new_Type_String(L"10");
constant36097 = (Object)new_AST_Constant((Object)string28671);
// =
send185876 = (Object)new_AST_Send((Object)send185875, (Object)SMB__equal, 1, (Object)constant36097);
((AST_Send)send185876)->info = (AST_Info)info3983;
// position
send185877 = (Object)new_AST_Send((Object)localvariable26891, (Object)symbol35988, 0);
((AST_Send)send185877)->info = (AST_Info)info3983;
// should
send185878 = (Object)new_AST_Send((Object)send185877, (Object)symbol35983, 0);
((AST_Send)send185878)->info = (AST_Info)info3983;
smallint21440 = (Object)new_Type_SmallInt(1);
constant36098 = (Object)new_AST_Constant((Object)smallint21440);
// =
send185879 = (Object)new_AST_Send((Object)send185878, (Object)SMB__equal, 1, (Object)constant36098);
((AST_Send)send185879)->info = (AST_Info)info3983;
method25546 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21552, 13, assign22781, assign22782, assign22783, send185859, send185862, send185865, assign22784, assign22785, send185870, send185873, send185876, send185879, Self);
((AST_Method)method25546)->info = (AST_Info)info3983;
symbol35551 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure25544 = (Object)new_Runtime_MethodClosure(method25546);
store_method((Type_Class)class4034, (Type_Symbol)symbol35551, (Runtime_MethodClosure)methodclosure25544);

classreference4848 = (Object)new_Organization_ClassReference((Type_Class)class4036);

// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable26893 = (Object)new_AST_Variable_named(L"input");
array21553 = (Object)new_Type_Array_with(1, (Object)localvariable26893);
symbol35833 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send185880 = (Object)new_AST_Send((Object)Self, (Object)symbol35833, 0);
string28672 = (Object)new_Type_String(L"debug:");
string28673 = (Object)new_Type_String(L"debug: input \n\tself debug ifTrue: \n\t\t[ PEGExpression\n\t\t\tindent;\n\t\t\tincreaseIndent.\n\t\t\"Transcript show: \'Trying to match: \' , self asString , \' at: \'.\n\t\tTranscript show: input sample.\n\t\tTranscript cr\" ]");
smallint21441 = (Object)new_Type_SmallInt(-1);
smallint21442 = (Object)new_Type_SmallInt(-1);
info3984 = (Object)new_AST_Info((Type_String)string28673,(Type_String)string28672, (Type_SmallInt)smallint21441, (Type_SmallInt)smallint21442);
((AST_Send)send185880)->info = (AST_Info)info3984;
localvariable26894 = (Object)new_AST_Variable_named(L"receiver");
array21554 = (Object)new_Type_Array_with(1, (Object)localvariable26894);
symbol36058 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send185881 = (Object)new_AST_Send((Object)localvariable26894, (Object)symbol36058, 0);
((AST_Send)send185881)->info = (AST_Info)info3984;
symbol36059 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send185882 = (Object)new_AST_Send((Object)localvariable26894, (Object)symbol36059, 0);
((AST_Send)send185882)->info = (AST_Info)info3984;
block12898 = (Object)new_AST_Block_with((Type_Array)array21554, (Type_Array)empty_Type_Array, 2, 2, send185881, send185882);
// value:
send185883 = (Object)new_AST_Send((Object)block12898, (Object)SMB_value_, 1, (Object)classreference4848);
((AST_Send)send185883)->info = (AST_Info)info3984;
block12899 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185883);
// ifTrue:
send185884 = (Object)new_AST_Send((Object)send185880, (Object)SMB_ifTrue_, 1, (Object)block12899);
((AST_Send)send185884)->info = (AST_Info)info3984;
method25547 = (Object)new_AST_Method_with((Type_Array)array21553, (Type_Array)empty_Type_Array, 2, send185884, Self);
((AST_Method)method25547)->info = (AST_Info)info3984;
symbol35852 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure25545 = (Object)new_Runtime_MethodClosure(method25547);
store_method((Type_Class)class4036, (Type_Symbol)symbol35852, (Runtime_MethodClosure)methodclosure25545);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
// plus
send185885 = (Object)new_AST_Send((Object)Self, (Object)symbol35848, 0);
string28674 = (Object)new_Type_String(L"strongPlus");
string28675 = (Object)new_Type_String(L"strongPlus\n\t^ self plus skipWhitespace: false");
smallint21443 = (Object)new_Type_SmallInt(-1);
smallint21444 = (Object)new_Type_SmallInt(-1);
info3985 = (Object)new_AST_Info((Type_String)string28675,(Type_String)string28674, (Type_SmallInt)smallint21443, (Type_SmallInt)smallint21444);
((AST_Send)send185885)->info = (AST_Info)info3985;
symbol35936 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
// skipWhitespace:
send185886 = (Object)new_AST_Send((Object)send185885, (Object)symbol35936, 1, (Object)False_Const);
((AST_Send)send185886)->info = (AST_Info)info3985;
method25548 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185886);
((AST_Method)method25548)->info = (AST_Info)info3985;
methodclosure25546 = (Object)new_Runtime_MethodClosure(method25548);
store_method((Type_Class)class4036, (Type_Symbol)symbol35844, (Runtime_MethodClosure)methodclosure25546);


// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable26895 = (Object)new_AST_Variable_named(L"aName");
array21555 = (Object)new_Type_Array_with(1, (Object)localvariable26895);
assign22786 = (Object)new_AST_Assign((Object)instancevariable5994, (Object)localvariable26895);
method25549 = (Object)new_AST_Method_with((Type_Array)array21555, (Type_Array)empty_Type_Array, 2, assign22786, Self);
string28676 = (Object)new_Type_String(L"name:");
string28677 = (Object)new_Type_String(L"name: aName\n\tname := aName");
smallint21445 = (Object)new_Type_SmallInt(-1);
smallint21446 = (Object)new_Type_SmallInt(-1);
info3986 = (Object)new_AST_Info((Type_String)string28677,(Type_String)string28676, (Type_SmallInt)smallint21445, (Type_SmallInt)smallint21446);
((AST_Method)method25549)->info = (AST_Info)info3986;
methodclosure25547 = (Object)new_Runtime_MethodClosure(method25549);
store_method((Type_Class)class4036, (Type_Symbol)symbol35721, (Runtime_MethodClosure)methodclosure25547);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable26896 = (Object)new_AST_Variable_named(L"bool");
array21556 = (Object)new_Type_Array_with(1, (Object)localvariable26896);
assign22787 = (Object)new_AST_Assign((Object)instancevariable5995, (Object)localvariable26896);
method25550 = (Object)new_AST_Method_with((Type_Array)array21556, (Type_Array)empty_Type_Array, 2, assign22787, Self);
string28678 = (Object)new_Type_String(L"omit:");
string28679 = (Object)new_Type_String(L"omit: bool\n\tomit := bool");
smallint21447 = (Object)new_Type_SmallInt(-1);
smallint21448 = (Object)new_Type_SmallInt(-1);
info3987 = (Object)new_AST_Info((Type_String)string28679,(Type_String)string28678, (Type_SmallInt)smallint21447, (Type_SmallInt)smallint21448);
((AST_Method)method25550)->info = (AST_Info)info3987;
methodclosure25548 = (Object)new_Runtime_MethodClosure(method25550);
store_method((Type_Class)class4036, (Type_Symbol)symbol35845, (Runtime_MethodClosure)methodclosure25548);


// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self
classreference4849 = (Object)new_Organization_ClassReference((Type_Class)class4039);

// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable26897 = (Object)new_AST_Variable_named(L"anObject");
array21557 = (Object)new_Type_Array_with(1, (Object)localvariable26897);
assign22788 = (Object)new_AST_Assign((Object)instancevariable6000, (Object)localvariable26897);
method25551 = (Object)new_AST_Method_with((Type_Array)array21557, (Type_Array)empty_Type_Array, 2, assign22788, Self);
string28680 = (Object)new_Type_String(L"skipWhitespace:");
string28681 = (Object)new_Type_String(L"skipWhitespace: anObject\n\tskipWhitespace := anObject");
smallint21449 = (Object)new_Type_SmallInt(-1);
smallint21450 = (Object)new_Type_SmallInt(-1);
info3988 = (Object)new_AST_Info((Type_String)string28681,(Type_String)string28680, (Type_SmallInt)smallint21449, (Type_SmallInt)smallint21450);
((AST_Method)method25551)->info = (AST_Info)info3988;
methodclosure25549 = (Object)new_Runtime_MethodClosure(method25551);
store_method((Type_Class)class4039, (Type_Symbol)symbol35936, (Runtime_MethodClosure)methodclosure25549);


// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable26898 = (Object)new_AST_Variable_named(L"input");
array21558 = (Object)new_Type_Array_with(1, (Object)localvariable26898);
symbol35935 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
// new
send185887 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28682 = (Object)new_Type_String(L"privateMatch:");
string28683 = (Object)new_Type_String(L"privateMatch: input\n\t^ self privateMatch: input on: OrderedCollection new");
smallint21451 = (Object)new_Type_SmallInt(-1);
smallint21452 = (Object)new_Type_SmallInt(-1);
info3989 = (Object)new_AST_Info((Type_String)string28683,(Type_String)string28682, (Type_SmallInt)smallint21451, (Type_SmallInt)smallint21452);
((AST_Send)send185887)->info = (AST_Info)info3989;
// privateMatch:on:
send185888 = (Object)new_AST_Send((Object)Self, (Object)symbol35935, 2, (Object)localvariable26898, (Object)send185887);
((AST_Send)send185888)->info = (AST_Info)info3989;
method25552 = (Object)new_AST_Method_with((Type_Array)array21558, (Type_Array)empty_Type_Array, 1, send185888);
((AST_Method)method25552)->info = (AST_Info)info3989;
methodclosure25550 = (Object)new_Runtime_MethodClosure(method25552);
store_method((Type_Class)class4039, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25550);


// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method25553 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6000);
string28684 = (Object)new_Type_String(L"skipWhitespace");
string28685 = (Object)new_Type_String(L"skipWhitespace\n\t^ skipWhitespace");
smallint21453 = (Object)new_Type_SmallInt(-1);
smallint21454 = (Object)new_Type_SmallInt(-1);
info3990 = (Object)new_AST_Info((Type_String)string28685,(Type_String)string28684, (Type_SmallInt)smallint21453, (Type_SmallInt)smallint21454);
((AST_Method)method25553)->info = (AST_Info)info3990;
methodclosure25551 = (Object)new_Runtime_MethodClosure(method25553);
store_method((Type_Class)class4039, (Type_Symbol)symbol35668, (Runtime_MethodClosure)methodclosure25551);


// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable26899 = (Object)new_AST_Variable_named(L"expression");
array21559 = (Object)new_Type_Array_with(1, (Object)localvariable26899);
super1986 = (Object)new_AST_Super((Object)symbol35517, 0);
assign22789 = (Object)new_AST_Assign((Object)instancevariable5999, (Object)localvariable26899);
assign22790 = (Object)new_AST_Assign((Object)instancevariable6000, (Object)True_Const);
method25554 = (Object)new_AST_Method_with((Type_Array)array21559, (Type_Array)empty_Type_Array, 4, super1986, assign22789, assign22790, Self);
string28686 = (Object)new_Type_String(L"initialize:");
string28687 = (Object)new_Type_String(L"initialize: expression\n\tsuper initialize.\n\tchild := expression.\n\tskipWhitespace := true.");
smallint21455 = (Object)new_Type_SmallInt(-1);
smallint21456 = (Object)new_Type_SmallInt(-1);
info3991 = (Object)new_AST_Info((Type_String)string28687,(Type_String)string28686, (Type_SmallInt)smallint21455, (Type_SmallInt)smallint21456);
((AST_Method)method25554)->info = (AST_Info)info3991;
methodclosure25552 = (Object)new_Runtime_MethodClosure(method25554);
store_method((Type_Class)class4039, (Type_Symbol)symbol35876, (Runtime_MethodClosure)methodclosure25552);


// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable26900 = (Object)new_AST_Variable_named(L"input");
localvariable26901 = (Object)new_AST_Variable_named(L"result");
array21560 = (Object)new_Type_Array_with(2, (Object)localvariable26900, (Object)localvariable26901);
localvariable26902 = (Object)new_AST_Variable_named(L"match");
array21561 = (Object)new_Type_Array_with(1, (Object)localvariable26902);
// skipWhitespace
send185889 = (Object)new_AST_Send((Object)localvariable26900, (Object)symbol35668, 0);
string28688 = (Object)new_Type_String(L"privateMatch:on:");
string28689 = (Object)new_Type_String(L"privateMatch: input on: result \n\t| match |\n\t[skipWhitespace\n\t\tifTrue: [input skipWhitespace].\n\t\tmatch := child match: input.\n\t\tmatch isNil]\n\t\t\twhileFalse: [result add: match].\n\t^ result");
smallint21457 = (Object)new_Type_SmallInt(-1);
smallint21458 = (Object)new_Type_SmallInt(-1);
info3992 = (Object)new_AST_Info((Type_String)string28689,(Type_String)string28688, (Type_SmallInt)smallint21457, (Type_SmallInt)smallint21458);
((AST_Send)send185889)->info = (AST_Info)info3992;
block12900 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185889);
// ifTrue:
send185890 = (Object)new_AST_Send((Object)instancevariable6000, (Object)SMB_ifTrue_, 1, (Object)block12900);
((AST_Send)send185890)->info = (AST_Info)info3992;
// match:
send185891 = (Object)new_AST_Send((Object)instancevariable5999, (Object)symbol35843, 1, (Object)localvariable26900);
((AST_Send)send185891)->info = (AST_Info)info3992;
assign22791 = (Object)new_AST_Assign((Object)localvariable26902, (Object)send185891);
// isNil
send185892 = (Object)new_AST_Send((Object)localvariable26902, (Object)SMB_isNil, 0);
((AST_Send)send185892)->info = (AST_Info)info3992;
block12901 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send185890, assign22791, send185892);
// add:
send185893 = (Object)new_AST_Send((Object)localvariable26901, (Object)symbol35696, 1, (Object)localvariable26902);
((AST_Send)send185893)->info = (AST_Info)info3992;
block12902 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185893);
// whileFalse:
send185894 = (Object)new_AST_Send((Object)block12901, (Object)SMB_whileFalse_, 1, (Object)block12902);
((AST_Send)send185894)->info = (AST_Info)info3992;
method25555 = (Object)new_AST_Method_with((Type_Array)array21560, (Type_Array)array21561, 2, send185894, localvariable26901);
((AST_Method)method25555)->info = (AST_Info)info3992;
methodclosure25553 = (Object)new_Runtime_MethodClosure(method25555);
store_method((Type_Class)class4039, (Type_Symbol)symbol35935, (Runtime_MethodClosure)methodclosure25553);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method25556 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string28690 = (Object)new_Type_String(L"optional");
string28691 = (Object)new_Type_String(L"optional\n\t\" ^ self since we are zero or more, thus already optional.\"");
smallint21459 = (Object)new_Type_SmallInt(-1);
smallint21460 = (Object)new_Type_SmallInt(-1);
info3993 = (Object)new_AST_Info((Type_String)string28691,(Type_String)string28690, (Type_SmallInt)smallint21459, (Type_SmallInt)smallint21460);
((AST_Method)method25556)->info = (AST_Info)info3993;
methodclosure25554 = (Object)new_Runtime_MethodClosure(method25556);
store_method((Type_Class)class4039, (Type_Symbol)symbol35841, (Runtime_MethodClosure)methodclosure25554);

// new:
send185895 = (Object)new_AST_Send((Object)classreference4849, (Object)symbol35602, 1, (Object)Self);
string28692 = (Object)new_Type_String(L"times");
string28693 = (Object)new_Type_String(L"times\n\t^ PEGZeroOrMoreExpression new: self");
smallint21461 = (Object)new_Type_SmallInt(-1);
smallint21462 = (Object)new_Type_SmallInt(-1);
info3994 = (Object)new_AST_Info((Type_String)string28693,(Type_String)string28692, (Type_SmallInt)smallint21461, (Type_SmallInt)smallint21462);
((AST_Send)send185895)->info = (AST_Info)info3994;
method25557 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185895);
((AST_Method)method25557)->info = (AST_Info)info3994;
methodclosure25555 = (Object)new_Runtime_MethodClosure(method25557);
store_method((Type_Class)class4036, (Type_Symbol)symbol35837, (Runtime_MethodClosure)methodclosure25555);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method25558 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string28694 = (Object)new_Type_String(L"memoIfNil");
string28695 = (Object)new_Type_String(L"memoIfNil\n\t\" We never memo non-main-parsers (rules with actions) \"");
smallint21463 = (Object)new_Type_SmallInt(-1);
smallint21464 = (Object)new_Type_SmallInt(-1);
info3995 = (Object)new_AST_Info((Type_String)string28695,(Type_String)string28694, (Type_SmallInt)smallint21463, (Type_SmallInt)smallint21464);
((AST_Method)method25558)->info = (AST_Info)info3995;
symbol35834 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure25556 = (Object)new_Runtime_MethodClosure(method25558);
store_method((Type_Class)class4036, (Type_Symbol)symbol35834, (Runtime_MethodClosure)methodclosure25556);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable1595 = (Object)new_AST_Variable_named(L"return");
array21562 = (Object)new_Type_Array_with(1, (Object)variable1595);
super1987 = (Object)new_AST_Super((Object)symbol35846, 0);
// escape:
send185896 = (Object)new_AST_Send((Object)variable1595, (Object)SMB_escape_, 1, (Object)super1987);
string28696 = (Object)new_Type_String(L"printString");
string28697 = (Object)new_Type_String(L"printString\n\tname ifNil: [ ^ super printString ].\n\t^ \'parser (\', name, \')\'");
smallint21465 = (Object)new_Type_SmallInt(-1);
smallint21466 = (Object)new_Type_SmallInt(-1);
info3996 = (Object)new_AST_Info((Type_String)string28697,(Type_String)string28696, (Type_SmallInt)smallint21465, (Type_SmallInt)smallint21466);
((AST_Send)send185896)->info = (AST_Info)info3996;
block12903 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185896);
// ifNil:
send185897 = (Object)new_AST_Send((Object)instancevariable5994, (Object)symbol35518, 1, (Object)block12903);
((AST_Send)send185897)->info = (AST_Info)info3996;
string28698 = (Object)new_Type_String(L"parser (");
constant36099 = (Object)new_AST_Constant((Object)string28698);
// ,
send185898 = (Object)new_AST_Send((Object)constant36099, (Object)SMB__concat, 1, (Object)instancevariable5994);
((AST_Send)send185898)->info = (AST_Info)info3996;
string28699 = (Object)new_Type_String(L")");
constant36100 = (Object)new_AST_Constant((Object)string28699);
// ,
send185899 = (Object)new_AST_Send((Object)send185898, (Object)SMB__concat, 1, (Object)constant36100);
((AST_Send)send185899)->info = (AST_Info)info3996;
block12904 = (Object)new_AST_Block_with((Type_Array)array21562, (Type_Array)empty_Type_Array, 1, 2, send185897, send185899);
// on:
send185900 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12904);
method25559 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185900);
((AST_Method)method25559)->info = (AST_Info)info3996;
methodclosure25557 = (Object)new_Runtime_MethodClosure(method25559);
store_method((Type_Class)class4036, (Type_Symbol)symbol35846, (Runtime_MethodClosure)methodclosure25557);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable26903 = (Object)new_AST_Variable_named(L"other");
array21563 = (Object)new_Type_Array_with(1, (Object)localvariable26903);
// &
send185901 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable26903);
string28700 = (Object)new_Type_String(L"&&");
string28701 = (Object)new_Type_String(L"&& other\n\t^ (self & other) skipWhitespace: false");
smallint21467 = (Object)new_Type_SmallInt(-1);
smallint21468 = (Object)new_Type_SmallInt(-1);
info3997 = (Object)new_AST_Info((Type_String)string28701,(Type_String)string28700, (Type_SmallInt)smallint21467, (Type_SmallInt)smallint21468);
((AST_Send)send185901)->info = (AST_Info)info3997;
// skipWhitespace:
send185902 = (Object)new_AST_Send((Object)send185901, (Object)symbol35936, 1, (Object)False_Const);
((AST_Send)send185902)->info = (AST_Info)info3997;
method25560 = (Object)new_AST_Method_with((Type_Array)array21563, (Type_Array)empty_Type_Array, 1, send185902);
((AST_Method)method25560)->info = (AST_Info)info3997;
methodclosure25558 = (Object)new_Runtime_MethodClosure(method25560);
store_method((Type_Class)class4036, (Type_Symbol)symbol35838, (Runtime_MethodClosure)methodclosure25558);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable26904 = (Object)new_AST_Variable_named(L"input");
array21564 = (Object)new_Type_Array_with(1, (Object)localvariable26904);
// debug
send185903 = (Object)new_AST_Send((Object)Self, (Object)symbol35833, 0);
string28702 = (Object)new_Type_String(L"debugEnd:");
string28703 = (Object)new_Type_String(L"debugEnd: input \n\tself debug ifTrue: [ PEGExpression descreaseIndent ]");
smallint21469 = (Object)new_Type_SmallInt(-1);
smallint21470 = (Object)new_Type_SmallInt(-1);
info3998 = (Object)new_AST_Info((Type_String)string28703,(Type_String)string28702, (Type_SmallInt)smallint21469, (Type_SmallInt)smallint21470);
((AST_Send)send185903)->info = (AST_Info)info3998;
symbol36060 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send185904 = (Object)new_AST_Send((Object)classreference4848, (Object)symbol36060, 0);
((AST_Send)send185904)->info = (AST_Info)info3998;
block12905 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185904);
// ifTrue:
send185905 = (Object)new_AST_Send((Object)send185903, (Object)SMB_ifTrue_, 1, (Object)block12905);
((AST_Send)send185905)->info = (AST_Info)info3998;
method25561 = (Object)new_AST_Method_with((Type_Array)array21564, (Type_Array)empty_Type_Array, 2, send185905, Self);
((AST_Method)method25561)->info = (AST_Info)info3998;
symbol35835 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure25559 = (Object)new_Runtime_MethodClosure(method25561);
store_method((Type_Class)class4036, (Type_Symbol)symbol35835, (Runtime_MethodClosure)methodclosure25559);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable26905 = (Object)new_AST_Variable_named(L"expression");
array21565 = (Object)new_Type_Array_with(1, (Object)localvariable26905);
classreference4850 = (Object)new_Organization_ClassReference((Type_Class)class4042);

// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable26906 = (Object)new_AST_Variable_named(L"anObject");
array21566 = (Object)new_Type_Array_with(1, (Object)localvariable26906);
assign22792 = (Object)new_AST_Assign((Object)instancevariable6003, (Object)localvariable26906);
method25562 = (Object)new_AST_Method_with((Type_Array)array21566, (Type_Array)empty_Type_Array, 2, assign22792, Self);
string28704 = (Object)new_Type_String(L"skipWhitespace:");
string28705 = (Object)new_Type_String(L"skipWhitespace: anObject\n\tskipWhitespace := anObject");
smallint21471 = (Object)new_Type_SmallInt(-1);
smallint21472 = (Object)new_Type_SmallInt(-1);
info3999 = (Object)new_AST_Info((Type_String)string28705,(Type_String)string28704, (Type_SmallInt)smallint21471, (Type_SmallInt)smallint21472);
((AST_Method)method25562)->info = (AST_Info)info3999;
methodclosure25560 = (Object)new_Runtime_MethodClosure(method25562);
store_method((Type_Class)class4042, (Type_Symbol)symbol35936, (Runtime_MethodClosure)methodclosure25560);


// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable26907 = (Object)new_AST_Variable_named(L"input");
array21567 = (Object)new_Type_Array_with(1, (Object)localvariable26907);
localvariable26908 = (Object)new_AST_Variable_named(L"result");
localvariable26909 = (Object)new_AST_Variable_named(L"match");
array21568 = (Object)new_Type_Array_with(2, (Object)localvariable26908, (Object)localvariable26909);
variable1596 = (Object)new_AST_Variable_named(L"return");
array21569 = (Object)new_Type_Array_with(1, (Object)variable1596);
// new
send185906 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28706 = (Object)new_Type_String(L"privateMatch:");
string28707 = (Object)new_Type_String(L"privateMatch: input\n\t| result match |\n\tresult := OrderedCollection new.\n\tchildren do: [:child | \n\t\tskipWhitespace ifTrue: [input skipWhitespace].\n\t\tmatch := child match: input.\n\t\tmatch ifNil: [^ match].\n\t\tchild omit \n\t\t\tifFalse: [result add: match]].\n\tresult size = 1 \n\t\tifTrue: [^ result first].\n\t^ result");
smallint21473 = (Object)new_Type_SmallInt(-1);
smallint21474 = (Object)new_Type_SmallInt(-1);
info4000 = (Object)new_AST_Info((Type_String)string28707,(Type_String)string28706, (Type_SmallInt)smallint21473, (Type_SmallInt)smallint21474);
((AST_Send)send185906)->info = (AST_Info)info4000;
assign22793 = (Object)new_AST_Assign((Object)localvariable26908, (Object)send185906);
localvariable26910 = (Object)new_AST_Variable_named(L"child");
array21570 = (Object)new_Type_Array_with(1, (Object)localvariable26910);
// skipWhitespace
send185907 = (Object)new_AST_Send((Object)localvariable26907, (Object)symbol35668, 0);
((AST_Send)send185907)->info = (AST_Info)info4000;
block12906 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185907);
// ifTrue:
send185908 = (Object)new_AST_Send((Object)instancevariable6003, (Object)SMB_ifTrue_, 1, (Object)block12906);
((AST_Send)send185908)->info = (AST_Info)info4000;
// match:
send185909 = (Object)new_AST_Send((Object)localvariable26910, (Object)symbol35843, 1, (Object)localvariable26907);
((AST_Send)send185909)->info = (AST_Info)info4000;
assign22794 = (Object)new_AST_Assign((Object)localvariable26909, (Object)send185909);
// escape:
send185910 = (Object)new_AST_Send((Object)variable1596, (Object)SMB_escape_, 1, (Object)localvariable26909);
((AST_Send)send185910)->info = (AST_Info)info4000;
block12907 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185910);
// ifNil:
send185911 = (Object)new_AST_Send((Object)localvariable26909, (Object)symbol35518, 1, (Object)block12907);
((AST_Send)send185911)->info = (AST_Info)info4000;
symbol35842 = (Object)new_Type_Symbol_cached(L"omit");
// omit
send185912 = (Object)new_AST_Send((Object)localvariable26910, (Object)symbol35842, 0);
((AST_Send)send185912)->info = (AST_Info)info4000;
// add:
send185913 = (Object)new_AST_Send((Object)localvariable26908, (Object)symbol35696, 1, (Object)localvariable26909);
((AST_Send)send185913)->info = (AST_Info)info4000;
block12908 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send185913);
// ifFalse:
send185914 = (Object)new_AST_Send((Object)send185912, (Object)SMB_ifFalse_, 1, (Object)block12908);
((AST_Send)send185914)->info = (AST_Info)info4000;
block12909 = (Object)new_AST_Block_with((Type_Array)array21570, (Type_Array)empty_Type_Array, 2, 4, send185908, assign22794, send185911, send185914);
// do:
send185915 = (Object)new_AST_Send((Object)instancevariable6002, (Object)symbol35642, 1, (Object)block12909);
((AST_Send)send185915)->info = (AST_Info)info4000;
// size
send185916 = (Object)new_AST_Send((Object)localvariable26908, (Object)SMB_size, 0);
((AST_Send)send185916)->info = (AST_Info)info4000;
smallint21475 = (Object)new_Type_SmallInt(1);
constant36101 = (Object)new_AST_Constant((Object)smallint21475);
// =
send185917 = (Object)new_AST_Send((Object)send185916, (Object)SMB__equal, 1, (Object)constant36101);
((AST_Send)send185917)->info = (AST_Info)info4000;
// first
send185918 = (Object)new_AST_Send((Object)localvariable26908, (Object)symbol35693, 0);
((AST_Send)send185918)->info = (AST_Info)info4000;
// escape:
send185919 = (Object)new_AST_Send((Object)variable1596, (Object)SMB_escape_, 1, (Object)send185918);
((AST_Send)send185919)->info = (AST_Info)info4000;
block12910 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185919);
// ifTrue:
send185920 = (Object)new_AST_Send((Object)send185917, (Object)SMB_ifTrue_, 1, (Object)block12910);
((AST_Send)send185920)->info = (AST_Info)info4000;
block12911 = (Object)new_AST_Block_with((Type_Array)array21569, (Type_Array)empty_Type_Array, 1, 4, assign22793, send185915, send185920, localvariable26908);
// on:
send185921 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12911);
method25563 = (Object)new_AST_Method_with((Type_Array)array21567, (Type_Array)array21568, 1, send185921);
((AST_Method)method25563)->info = (AST_Info)info4000;
methodclosure25561 = (Object)new_Runtime_MethodClosure(method25563);
store_method((Type_Class)class4042, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25561);


// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method25564 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6003);
string28708 = (Object)new_Type_String(L"skipWhitespace");
string28709 = (Object)new_Type_String(L"skipWhitespace\n\t^ skipWhitespace");
smallint21476 = (Object)new_Type_SmallInt(-1);
smallint21477 = (Object)new_Type_SmallInt(-1);
info4001 = (Object)new_AST_Info((Type_String)string28709,(Type_String)string28708, (Type_SmallInt)smallint21476, (Type_SmallInt)smallint21477);
((AST_Method)method25564)->info = (AST_Info)info4001;
methodclosure25562 = (Object)new_Runtime_MethodClosure(method25564);
store_method((Type_Class)class4042, (Type_Symbol)symbol35668, (Runtime_MethodClosure)methodclosure25562);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super1988 = (Object)new_AST_Super((Object)symbol35517, 0);
// new
send185922 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28710 = (Object)new_Type_String(L"initialize");
string28711 = (Object)new_Type_String(L"initialize\n\tsuper initialize.\n\tself initialize: OrderedCollection new");
smallint21478 = (Object)new_Type_SmallInt(-1);
smallint21479 = (Object)new_Type_SmallInt(-1);
info4002 = (Object)new_AST_Info((Type_String)string28711,(Type_String)string28710, (Type_SmallInt)smallint21478, (Type_SmallInt)smallint21479);
((AST_Send)send185922)->info = (AST_Info)info4002;
// initialize:
send185923 = (Object)new_AST_Send((Object)Self, (Object)symbol35876, 1, (Object)send185922);
((AST_Send)send185923)->info = (AST_Info)info4002;
method25565 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1988, send185923, Self);
((AST_Method)method25565)->info = (AST_Info)info4002;
methodclosure25563 = (Object)new_Runtime_MethodClosure(method25565);
store_method((Type_Class)class4042, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25563);


// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable26911 = (Object)new_AST_Variable_named(L"theChildren");
array21571 = (Object)new_Type_Array_with(1, (Object)localvariable26911);
super1989 = (Object)new_AST_Super((Object)symbol35517, 0);
assign22795 = (Object)new_AST_Assign((Object)instancevariable6002, (Object)localvariable26911);
assign22796 = (Object)new_AST_Assign((Object)instancevariable6003, (Object)True_Const);
method25566 = (Object)new_AST_Method_with((Type_Array)array21571, (Type_Array)empty_Type_Array, 4, super1989, assign22795, assign22796, Self);
string28712 = (Object)new_Type_String(L"initialize:");
string28713 = (Object)new_Type_String(L"initialize: theChildren\n\tsuper initialize.\n\tchildren := theChildren.\n\tskipWhitespace := true.");
smallint21480 = (Object)new_Type_SmallInt(-1);
smallint21481 = (Object)new_Type_SmallInt(-1);
info4003 = (Object)new_AST_Info((Type_String)string28713,(Type_String)string28712, (Type_SmallInt)smallint21480, (Type_SmallInt)smallint21481);
((AST_Method)method25566)->info = (AST_Info)info4003;
methodclosure25564 = (Object)new_Runtime_MethodClosure(method25566);
store_method((Type_Class)class4042, (Type_Symbol)symbol35876, (Runtime_MethodClosure)methodclosure25564);


// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable26912 = (Object)new_AST_Variable_named(L"child");
array21572 = (Object)new_Type_Array_with(1, (Object)localvariable26912);
// asPEG
send185924 = (Object)new_AST_Send((Object)localvariable26912, (Object)symbol35639, 0);
string28714 = (Object)new_Type_String(L"<&");
string28715 = (Object)new_Type_String(L"<& child\n\tchildren add: child asPEG");
smallint21482 = (Object)new_Type_SmallInt(-1);
smallint21483 = (Object)new_Type_SmallInt(-1);
info4004 = (Object)new_AST_Info((Type_String)string28715,(Type_String)string28714, (Type_SmallInt)smallint21482, (Type_SmallInt)smallint21483);
((AST_Send)send185924)->info = (AST_Info)info4004;
// add:
send185925 = (Object)new_AST_Send((Object)instancevariable6002, (Object)symbol35696, 1, (Object)send185924);
((AST_Send)send185925)->info = (AST_Info)info4004;
method25567 = (Object)new_AST_Method_with((Type_Array)array21572, (Type_Array)empty_Type_Array, 2, send185925, Self);
((AST_Method)method25567)->info = (AST_Info)info4004;
methodclosure25565 = (Object)new_Runtime_MethodClosure(method25567);
store_method((Type_Class)class4042, (Type_Symbol)symbol35939, (Runtime_MethodClosure)methodclosure25565);

// new
send185926 = (Object)new_AST_Send((Object)classreference4850, (Object)symbol35612, 0);
string28716 = (Object)new_Type_String(L"&");
string28717 = (Object)new_Type_String(L"& expression\n\t^ PEGSequenceExpression new <& self <& expression");
smallint21484 = (Object)new_Type_SmallInt(-1);
smallint21485 = (Object)new_Type_SmallInt(-1);
info4005 = (Object)new_AST_Info((Type_String)string28717,(Type_String)string28716, (Type_SmallInt)smallint21484, (Type_SmallInt)smallint21485);
((AST_Send)send185926)->info = (AST_Info)info4005;
// <&
send185927 = (Object)new_AST_Send((Object)send185926, (Object)symbol35939, 1, (Object)Self);
((AST_Send)send185927)->info = (AST_Info)info4005;
// <&
send185928 = (Object)new_AST_Send((Object)send185927, (Object)symbol35939, 1, (Object)localvariable26905);
((AST_Send)send185928)->info = (AST_Info)info4005;
method25568 = (Object)new_AST_Method_with((Type_Array)array21565, (Type_Array)empty_Type_Array, 1, send185928);
((AST_Method)method25568)->info = (AST_Info)info4005;
methodclosure25566 = (Object)new_Runtime_MethodClosure(method25568);
store_method((Type_Class)class4036, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure25566);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method25569 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string28718 = (Object)new_Type_String(L"asPEG");
string28719 = (Object)new_Type_String(L"asPEG\n\t\" ^ self \"");
smallint21486 = (Object)new_Type_SmallInt(-1);
smallint21487 = (Object)new_Type_SmallInt(-1);
info4006 = (Object)new_AST_Info((Type_String)string28719,(Type_String)string28718, (Type_SmallInt)smallint21486, (Type_SmallInt)smallint21487);
((AST_Method)method25569)->info = (AST_Info)info4006;
methodclosure25567 = (Object)new_Runtime_MethodClosure(method25569);
store_method((Type_Class)class4036, (Type_Symbol)symbol35639, (Runtime_MethodClosure)methodclosure25567);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send185929 = (Object)new_AST_Send((Object)instancevariable5994, (Object)SMB_hash, 0);
string28720 = (Object)new_Type_String(L"hash");
string28721 = (Object)new_Type_String(L"hash\n\t^ name hash");
smallint21488 = (Object)new_Type_SmallInt(-1);
smallint21489 = (Object)new_Type_SmallInt(-1);
info4007 = (Object)new_AST_Info((Type_String)string28721,(Type_String)string28720, (Type_SmallInt)smallint21488, (Type_SmallInt)smallint21489);
((AST_Send)send185929)->info = (AST_Info)info4007;
method25570 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185929);
((AST_Method)method25570)->info = (AST_Info)info4007;
methodclosure25568 = (Object)new_Runtime_MethodClosure(method25570);
store_method((Type_Class)class4036, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure25568);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
// times
send185930 = (Object)new_AST_Send((Object)Self, (Object)symbol35837, 0);
string28722 = (Object)new_Type_String(L"strongTimes");
string28723 = (Object)new_Type_String(L"strongTimes\n\t^ self times skipWhitespace: false");
smallint21490 = (Object)new_Type_SmallInt(-1);
smallint21491 = (Object)new_Type_SmallInt(-1);
info4008 = (Object)new_AST_Info((Type_String)string28723,(Type_String)string28722, (Type_SmallInt)smallint21490, (Type_SmallInt)smallint21491);
((AST_Send)send185930)->info = (AST_Info)info4008;
// skipWhitespace:
send185931 = (Object)new_AST_Send((Object)send185930, (Object)symbol35936, 1, (Object)False_Const);
((AST_Send)send185931)->info = (AST_Info)info4008;
method25571 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185931);
((AST_Method)method25571)->info = (AST_Info)info4008;
methodclosure25569 = (Object)new_Runtime_MethodClosure(method25571);
store_method((Type_Class)class4036, (Type_Symbol)symbol35839, (Runtime_MethodClosure)methodclosure25569);


// PEGExpression>>name
//name
// 	^ name
method25572 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5994);
string28724 = (Object)new_Type_String(L"name");
string28725 = (Object)new_Type_String(L"name\n\t^ name");
smallint21492 = (Object)new_Type_SmallInt(-1);
smallint21493 = (Object)new_Type_SmallInt(-1);
info4009 = (Object)new_AST_Info((Type_String)string28725,(Type_String)string28724, (Type_SmallInt)smallint21492, (Type_SmallInt)smallint21493);
((AST_Method)method25572)->info = (AST_Info)info4009;
methodclosure25570 = (Object)new_Runtime_MethodClosure(method25572);
store_method((Type_Class)class4036, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure25570);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self
classreference4851 = (Object)new_Organization_ClassReference((Type_Class)class4051);

// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable26913 = (Object)new_AST_Variable_named(L"input");
array21573 = (Object)new_Type_Array_with(1, (Object)localvariable26913);
localvariable26914 = (Object)new_AST_Variable_named(L"result");
localvariable26915 = (Object)new_AST_Variable_named(L"match");
array21574 = (Object)new_Type_Array_with(2, (Object)localvariable26914, (Object)localvariable26915);
variable1597 = (Object)new_AST_Variable_named(L"return");
array21575 = (Object)new_Type_Array_with(1, (Object)variable1597);
// new
send185932 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28726 = (Object)new_Type_String(L"privateMatch:");
string28727 = (Object)new_Type_String(L"privateMatch: input\n\t| result match |\n\tresult := OrderedCollection new.\n\tmatch := child match: input.\n\tmatch ifNil: [ ^ match ].\n\tresult add: match.\n\t^ self privateMatch: input on: result");
smallint21494 = (Object)new_Type_SmallInt(-1);
smallint21495 = (Object)new_Type_SmallInt(-1);
info4010 = (Object)new_AST_Info((Type_String)string28727,(Type_String)string28726, (Type_SmallInt)smallint21494, (Type_SmallInt)smallint21495);
((AST_Send)send185932)->info = (AST_Info)info4010;
assign22797 = (Object)new_AST_Assign((Object)localvariable26914, (Object)send185932);
// match:
send185933 = (Object)new_AST_Send((Object)instancevariable5999, (Object)symbol35843, 1, (Object)localvariable26913);
((AST_Send)send185933)->info = (AST_Info)info4010;
assign22798 = (Object)new_AST_Assign((Object)localvariable26915, (Object)send185933);
// escape:
send185934 = (Object)new_AST_Send((Object)variable1597, (Object)SMB_escape_, 1, (Object)localvariable26915);
((AST_Send)send185934)->info = (AST_Info)info4010;
block12912 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185934);
// ifNil:
send185935 = (Object)new_AST_Send((Object)localvariable26915, (Object)symbol35518, 1, (Object)block12912);
((AST_Send)send185935)->info = (AST_Info)info4010;
// add:
send185936 = (Object)new_AST_Send((Object)localvariable26914, (Object)symbol35696, 1, (Object)localvariable26915);
((AST_Send)send185936)->info = (AST_Info)info4010;
// privateMatch:on:
send185937 = (Object)new_AST_Send((Object)Self, (Object)symbol35935, 2, (Object)localvariable26913, (Object)localvariable26914);
((AST_Send)send185937)->info = (AST_Info)info4010;
block12913 = (Object)new_AST_Block_with((Type_Array)array21575, (Type_Array)empty_Type_Array, 1, 5, assign22797, assign22798, send185935, send185936, send185937);
// on:
send185938 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12913);
method25573 = (Object)new_AST_Method_with((Type_Array)array21573, (Type_Array)array21574, 1, send185938);
((AST_Method)method25573)->info = (AST_Info)info4010;
methodclosure25571 = (Object)new_Runtime_MethodClosure(method25573);
store_method((Type_Class)class4051, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25571);


// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
classreference4852 = (Object)new_Organization_ClassReference((Type_Class)class4038);

// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable26916 = (Object)new_AST_Variable_named(L"input");
array21576 = (Object)new_Type_Array_with(1, (Object)localvariable26916);
variable1598 = (Object)new_AST_Variable_named(L"return");
array21577 = (Object)new_Type_Array_with(1, (Object)variable1598);
classreference4853 = (Object)new_Organization_ClassReference((Type_Class)class4041);

// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable26917 = (Object)new_AST_Variable_named(L"block");
array21578 = (Object)new_Type_Array_with(1, (Object)localvariable26917);
// value:
send185939 = (Object)new_AST_Send((Object)localvariable26917, (Object)SMB_value_, 1, (Object)instancevariable6001);
string28728 = (Object)new_Type_String(L"ifMatched:");
string28729 = (Object)new_Type_String(L"ifMatched: block\n\tblock value: result");
smallint21496 = (Object)new_Type_SmallInt(-1);
smallint21497 = (Object)new_Type_SmallInt(-1);
info4011 = (Object)new_AST_Info((Type_String)string28729,(Type_String)string28728, (Type_SmallInt)smallint21496, (Type_SmallInt)smallint21497);
((AST_Send)send185939)->info = (AST_Info)info4011;
method25574 = (Object)new_AST_Method_with((Type_Array)array21578, (Type_Array)empty_Type_Array, 2, send185939, Self);
((AST_Method)method25574)->info = (AST_Info)info4011;
methodclosure25572 = (Object)new_Runtime_MethodClosure(method25574);
store_method((Type_Class)class4041, (Type_Symbol)symbol35944, (Runtime_MethodClosure)methodclosure25572);


// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable26918 = (Object)new_AST_Variable_named(L"newResult");
array21579 = (Object)new_Type_Array_with(1, (Object)localvariable26918);
assign22799 = (Object)new_AST_Assign((Object)instancevariable6001, (Object)localvariable26918);
method25575 = (Object)new_AST_Method_with((Type_Array)array21579, (Type_Array)empty_Type_Array, 2, assign22799, Self);
string28730 = (Object)new_Type_String(L"result:");
string28731 = (Object)new_Type_String(L"result: newResult\n\tresult := newResult");
smallint21498 = (Object)new_Type_SmallInt(-1);
smallint21499 = (Object)new_Type_SmallInt(-1);
info4012 = (Object)new_AST_Info((Type_String)string28731,(Type_String)string28730, (Type_SmallInt)smallint21498, (Type_SmallInt)smallint21499);
((AST_Method)method25575)->info = (AST_Info)info4012;
symbol35945 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure25573 = (Object)new_Runtime_MethodClosure(method25575);
store_method((Type_Class)class4041, (Type_Symbol)symbol35945, (Runtime_MethodClosure)methodclosure25573);


// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable26919 = (Object)new_AST_Variable_named(L"alternative");
array21580 = (Object)new_Type_Array_with(1, (Object)localvariable26919);
method25576 = (Object)new_AST_Method_with((Type_Array)array21580, (Type_Array)empty_Type_Array, 1, instancevariable6001);
string28732 = (Object)new_Type_String(L"resultIfFailed:");
string28733 = (Object)new_Type_String(L"resultIfFailed: alternative\n\t^ result");
smallint21500 = (Object)new_Type_SmallInt(-1);
smallint21501 = (Object)new_Type_SmallInt(-1);
info4013 = (Object)new_AST_Info((Type_String)string28733,(Type_String)string28732, (Type_SmallInt)smallint21500, (Type_SmallInt)smallint21501);
((AST_Method)method25576)->info = (AST_Info)info4013;
methodclosure25574 = (Object)new_Runtime_MethodClosure(method25576);
store_method((Type_Class)class4041, (Type_Symbol)symbol35943, (Runtime_MethodClosure)methodclosure25574);

// match:
send185940 = (Object)new_AST_Send((Object)instancevariable5997, (Object)symbol35843, 1, (Object)localvariable26916);
string28734 = (Object)new_Type_String(L"privateMatch:");
string28735 = (Object)new_Type_String(L"privateMatch: input \n\t^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])");
smallint21502 = (Object)new_Type_SmallInt(-1);
smallint21503 = (Object)new_Type_SmallInt(-1);
info4014 = (Object)new_AST_Info((Type_String)string28735,(Type_String)string28734, (Type_SmallInt)smallint21502, (Type_SmallInt)smallint21503);
((AST_Send)send185940)->info = (AST_Info)info4014;
classreference4854 = (Object)new_Organization_ClassReference((Type_Class)class4043);
// escape:
send185941 = (Object)new_AST_Send((Object)variable1598, (Object)SMB_escape_, 1, (Object)classreference4854);
((AST_Send)send185941)->info = (AST_Info)info4014;
block12914 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185941);
// ifNil:
send185942 = (Object)new_AST_Send((Object)send185940, (Object)symbol35518, 1, (Object)block12914);
((AST_Send)send185942)->info = (AST_Info)info4014;
// new:
send185943 = (Object)new_AST_Send((Object)classreference4853, (Object)symbol35602, 1, (Object)send185942);
((AST_Send)send185943)->info = (AST_Info)info4014;
block12915 = (Object)new_AST_Block_with((Type_Array)array21577, (Type_Array)empty_Type_Array, 1, 1, send185943);
// on:
send185944 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12915);
method25577 = (Object)new_AST_Method_with((Type_Array)array21576, (Type_Array)empty_Type_Array, 1, send185944);
((AST_Method)method25577)->info = (AST_Info)info4014;
methodclosure25575 = (Object)new_Runtime_MethodClosure(method25577);
store_method((Type_Class)class4038, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25575);


// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method25578 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string28736 = (Object)new_Type_String(L"optional");
string28737 = (Object)new_Type_String(L"optional\n\t\"^ self\"");
smallint21504 = (Object)new_Type_SmallInt(-1);
smallint21505 = (Object)new_Type_SmallInt(-1);
info4015 = (Object)new_AST_Info((Type_String)string28737,(Type_String)string28736, (Type_SmallInt)smallint21504, (Type_SmallInt)smallint21505);
((AST_Method)method25578)->info = (AST_Info)info4015;
methodclosure25576 = (Object)new_Runtime_MethodClosure(method25578);
store_method((Type_Class)class4038, (Type_Symbol)symbol35841, (Runtime_MethodClosure)methodclosure25576);


// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable26920 = (Object)new_AST_Variable_named(L"expression");
array21581 = (Object)new_Type_Array_with(1, (Object)localvariable26920);
super1990 = (Object)new_AST_Super((Object)symbol35517, 0);
assign22800 = (Object)new_AST_Assign((Object)instancevariable5997, (Object)localvariable26920);
assign22801 = (Object)new_AST_Assign((Object)instancevariable5998, (Object)True_Const);
method25579 = (Object)new_AST_Method_with((Type_Array)array21581, (Type_Array)empty_Type_Array, 4, super1990, assign22800, assign22801, Self);
string28738 = (Object)new_Type_String(L"initialize:");
string28739 = (Object)new_Type_String(L"initialize: expression\n\tsuper initialize.\n\tchild := expression.\n\tskipWhitespace := true.");
smallint21506 = (Object)new_Type_SmallInt(-1);
smallint21507 = (Object)new_Type_SmallInt(-1);
info4016 = (Object)new_AST_Info((Type_String)string28739,(Type_String)string28738, (Type_SmallInt)smallint21506, (Type_SmallInt)smallint21507);
((AST_Method)method25579)->info = (AST_Info)info4016;
methodclosure25577 = (Object)new_Runtime_MethodClosure(method25579);
store_method((Type_Class)class4038, (Type_Symbol)symbol35876, (Runtime_MethodClosure)methodclosure25577);

// new:
send185945 = (Object)new_AST_Send((Object)classreference4852, (Object)symbol35602, 1, (Object)Self);
string28740 = (Object)new_Type_String(L"optional");
string28741 = (Object)new_Type_String(L"optional\n\t^ PEGOptionalExpression new: self");
smallint21508 = (Object)new_Type_SmallInt(-1);
smallint21509 = (Object)new_Type_SmallInt(-1);
info4017 = (Object)new_AST_Info((Type_String)string28741,(Type_String)string28740, (Type_SmallInt)smallint21508, (Type_SmallInt)smallint21509);
((AST_Send)send185945)->info = (AST_Info)info4017;
method25580 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185945);
((AST_Method)method25580)->info = (AST_Info)info4017;
methodclosure25578 = (Object)new_Runtime_MethodClosure(method25580);
store_method((Type_Class)class4051, (Type_Symbol)symbol35841, (Runtime_MethodClosure)methodclosure25578);

// new:
send185946 = (Object)new_AST_Send((Object)classreference4851, (Object)symbol35602, 1, (Object)Self);
string28742 = (Object)new_Type_String(L"plus");
string28743 = (Object)new_Type_String(L"plus\n\t^ PEGOneOrMoreExpression new: self");
smallint21510 = (Object)new_Type_SmallInt(-1);
smallint21511 = (Object)new_Type_SmallInt(-1);
info4018 = (Object)new_AST_Info((Type_String)string28743,(Type_String)string28742, (Type_SmallInt)smallint21510, (Type_SmallInt)smallint21511);
((AST_Send)send185946)->info = (AST_Info)info4018;
method25581 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185946);
((AST_Method)method25581)->info = (AST_Info)info4018;
methodclosure25579 = (Object)new_Runtime_MethodClosure(method25581);
store_method((Type_Class)class4036, (Type_Symbol)symbol35848, (Runtime_MethodClosure)methodclosure25579);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign22802 = (Object)new_AST_Assign((Object)instancevariable5995, (Object)False_Const);
method25582 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign22802, Self);
string28744 = (Object)new_Type_String(L"initialize");
string28745 = (Object)new_Type_String(L"initialize\n\tomit := false");
smallint21512 = (Object)new_Type_SmallInt(-1);
smallint21513 = (Object)new_Type_SmallInt(-1);
info4019 = (Object)new_AST_Info((Type_String)string28745,(Type_String)string28744, (Type_SmallInt)smallint21512, (Type_SmallInt)smallint21513);
((AST_Method)method25582)->info = (AST_Info)info4019;
methodclosure25580 = (Object)new_Runtime_MethodClosure(method25582);
store_method((Type_Class)class4036, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25580);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send185947 = (Object)new_AST_Send((Object)classreference4852, (Object)symbol35602, 1, (Object)Self);
string28746 = (Object)new_Type_String(L"optional");
string28747 = (Object)new_Type_String(L"optional\n\t^ PEGOptionalExpression new: self");
smallint21514 = (Object)new_Type_SmallInt(-1);
smallint21515 = (Object)new_Type_SmallInt(-1);
info4020 = (Object)new_AST_Info((Type_String)string28747,(Type_String)string28746, (Type_SmallInt)smallint21514, (Type_SmallInt)smallint21515);
((AST_Send)send185947)->info = (AST_Info)info4020;
method25583 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185947);
((AST_Method)method25583)->info = (AST_Info)info4020;
methodclosure25581 = (Object)new_Runtime_MethodClosure(method25583);
store_method((Type_Class)class4036, (Type_Symbol)symbol35841, (Runtime_MethodClosure)methodclosure25581);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable26921 = (Object)new_AST_Variable_named(L"expression");
array21582 = (Object)new_Type_Array_with(1, (Object)localvariable26921);
// new
send185948 = (Object)new_AST_Send((Object)classreference4803, (Object)symbol35612, 0);
string28748 = (Object)new_Type_String(L"|");
string28749 = (Object)new_Type_String(L"| expression\n\t^ PEGOrderedChoiceExpression new <= self <= expression");
smallint21516 = (Object)new_Type_SmallInt(-1);
smallint21517 = (Object)new_Type_SmallInt(-1);
info4021 = (Object)new_AST_Info((Type_String)string28749,(Type_String)string28748, (Type_SmallInt)smallint21516, (Type_SmallInt)smallint21517);
((AST_Send)send185948)->info = (AST_Info)info4021;
// <=
send185949 = (Object)new_AST_Send((Object)send185948, (Object)symbol35648, 1, (Object)Self);
((AST_Send)send185949)->info = (AST_Info)info4021;
// <=
send185950 = (Object)new_AST_Send((Object)send185949, (Object)symbol35648, 1, (Object)localvariable26921);
((AST_Send)send185950)->info = (AST_Info)info4021;
method25584 = (Object)new_AST_Method_with((Type_Array)array21582, (Type_Array)empty_Type_Array, 1, send185950);
((AST_Method)method25584)->info = (AST_Info)info4021;
methodclosure25582 = (Object)new_Runtime_MethodClosure(method25584);
store_method((Type_Class)class4036, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure25582);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable26922 = (Object)new_AST_Variable_named(L"input");
array21583 = (Object)new_Type_Array_with(1, (Object)localvariable26922);
symbol36061 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send185951 = (Object)new_AST_Send((Object)Self, (Object)symbol36061, 0);
string28750 = (Object)new_Type_String(L"privateMatch:");
string28751 = (Object)new_Type_String(L"privateMatch: input\n\tself subclassResponsibility");
smallint21518 = (Object)new_Type_SmallInt(-1);
smallint21519 = (Object)new_Type_SmallInt(-1);
info4022 = (Object)new_AST_Info((Type_String)string28751,(Type_String)string28750, (Type_SmallInt)smallint21518, (Type_SmallInt)smallint21519);
((AST_Send)send185951)->info = (AST_Info)info4022;
method25585 = (Object)new_AST_Method_with((Type_Array)array21583, (Type_Array)empty_Type_Array, 2, send185951, Self);
((AST_Method)method25585)->info = (AST_Info)info4022;
methodclosure25583 = (Object)new_Runtime_MethodClosure(method25585);
store_method((Type_Class)class4036, (Type_Symbol)symbol35850, (Runtime_MethodClosure)methodclosure25583);


// PEGExpression>>omit
//omit
// 	^ omit
method25586 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5995);
string28752 = (Object)new_Type_String(L"omit");
string28753 = (Object)new_Type_String(L"omit\n\t^ omit");
smallint21520 = (Object)new_Type_SmallInt(-1);
smallint21521 = (Object)new_Type_SmallInt(-1);
info4023 = (Object)new_AST_Info((Type_String)string28753,(Type_String)string28752, (Type_SmallInt)smallint21520, (Type_SmallInt)smallint21521);
((AST_Method)method25586)->info = (AST_Info)info4023;
methodclosure25584 = (Object)new_Runtime_MethodClosure(method25586);
store_method((Type_Class)class4036, (Type_Symbol)symbol35842, (Runtime_MethodClosure)methodclosure25584);


// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
// optional
send185952 = (Object)new_AST_Send((Object)Self, (Object)symbol35841, 0);
string28754 = (Object)new_Type_String(L"strongOptional");
string28755 = (Object)new_Type_String(L"strongOptional\n\t^ self optional skipWhitespace: false");
smallint21522 = (Object)new_Type_SmallInt(-1);
smallint21523 = (Object)new_Type_SmallInt(-1);
info4024 = (Object)new_AST_Info((Type_String)string28755,(Type_String)string28754, (Type_SmallInt)smallint21522, (Type_SmallInt)smallint21523);
((AST_Send)send185952)->info = (AST_Info)info4024;
// skipWhitespace:
send185953 = (Object)new_AST_Send((Object)send185952, (Object)symbol35936, 1, (Object)False_Const);
((AST_Send)send185953)->info = (AST_Info)info4024;
method25587 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185953);
((AST_Method)method25587)->info = (AST_Info)info4024;
symbol35851 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure25585 = (Object)new_Runtime_MethodClosure(method25587);
store_method((Type_Class)class4036, (Type_Symbol)symbol35851, (Runtime_MethodClosure)methodclosure25585);


// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable26923 = (Object)new_AST_Variable_named(L"input");
array21584 = (Object)new_Type_Array_with(1, (Object)localvariable26923);
localvariable26924 = (Object)new_AST_Variable_named(L"position");
localvariable26925 = (Object)new_AST_Variable_named(L"match");
array21585 = (Object)new_Type_Array_with(2, (Object)localvariable26924, (Object)localvariable26925);
// position
send185954 = (Object)new_AST_Send((Object)localvariable26923, (Object)symbol35988, 0);
string28756 = (Object)new_Type_String(L"match:");
string28757 = (Object)new_Type_String(L"match: input\n\t| position match |\n\t\"self debug: input.\"\n\tposition := input position.\n\tmatch := self privateMatch: input.\n\tmatch ifNil: [input position: position].\n\t\"self debugEnd: input.\"\n\t^ match");
smallint21524 = (Object)new_Type_SmallInt(-1);
smallint21525 = (Object)new_Type_SmallInt(-1);
info4025 = (Object)new_AST_Info((Type_String)string28757,(Type_String)string28756, (Type_SmallInt)smallint21524, (Type_SmallInt)smallint21525);
((AST_Send)send185954)->info = (AST_Info)info4025;
assign22803 = (Object)new_AST_Assign((Object)localvariable26924, (Object)send185954);
// privateMatch:
send185955 = (Object)new_AST_Send((Object)Self, (Object)symbol35850, 1, (Object)localvariable26923);
((AST_Send)send185955)->info = (AST_Info)info4025;
assign22804 = (Object)new_AST_Assign((Object)localvariable26925, (Object)send185955);
symbol36062 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send185956 = (Object)new_AST_Send((Object)localvariable26923, (Object)symbol36062, 1, (Object)localvariable26924);
((AST_Send)send185956)->info = (AST_Info)info4025;
block12916 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185956);
// ifNil:
send185957 = (Object)new_AST_Send((Object)localvariable26925, (Object)symbol35518, 1, (Object)block12916);
((AST_Send)send185957)->info = (AST_Info)info4025;
method25588 = (Object)new_AST_Method_with((Type_Array)array21584, (Type_Array)array21585, 4, assign22803, assign22804, send185957, localvariable26925);
((AST_Method)method25588)->info = (AST_Info)info4025;
methodclosure25586 = (Object)new_Runtime_MethodClosure(method25588);
store_method((Type_Class)class4036, (Type_Symbol)symbol35843, (Runtime_MethodClosure)methodclosure25586);


// a PMetaclass P#PEGExpression>>debug
//debug
// 	^ false
method25589 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
string28758 = (Object)new_Type_String(L"debug");
string28759 = (Object)new_Type_String(L"debug\n\t^ false");
smallint21526 = (Object)new_Type_SmallInt(-1);
smallint21527 = (Object)new_Type_SmallInt(-1);
info4026 = (Object)new_AST_Info((Type_String)string28759,(Type_String)string28758, (Type_SmallInt)smallint21526, (Type_SmallInt)smallint21527);
((AST_Method)method25589)->info = (AST_Info)info4026;
methodclosure25587 = (Object)new_Runtime_MethodClosure(method25589);
store_method((Type_Class)metaclass4036, (Type_Symbol)symbol35833, (Runtime_MethodClosure)methodclosure25587);


// a PMetaclass P#PEGExpression>>new:
//new: argument
// 	^ self basicNew initialize: argument
localvariable26926 = (Object)new_AST_Variable_named(L"argument");
array21586 = (Object)new_Type_Array_with(1, (Object)localvariable26926);
// basicNew
send185958 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string28760 = (Object)new_Type_String(L"new:");
string28761 = (Object)new_Type_String(L"new: argument\n\t^ self basicNew initialize: argument");
smallint21528 = (Object)new_Type_SmallInt(-1);
smallint21529 = (Object)new_Type_SmallInt(-1);
info4027 = (Object)new_AST_Info((Type_String)string28761,(Type_String)string28760, (Type_SmallInt)smallint21528, (Type_SmallInt)smallint21529);
((AST_Send)send185958)->info = (AST_Info)info4027;
// initialize:
send185959 = (Object)new_AST_Send((Object)send185958, (Object)symbol35876, 1, (Object)localvariable26926);
((AST_Send)send185959)->info = (AST_Info)info4027;
method25590 = (Object)new_AST_Method_with((Type_Array)array21586, (Type_Array)empty_Type_Array, 1, send185959);
((AST_Method)method25590)->info = (AST_Info)info4027;
methodclosure25588 = (Object)new_Runtime_MethodClosure(method25590);
store_method((Type_Class)metaclass4036, (Type_Symbol)symbol35602, (Runtime_MethodClosure)methodclosure25588);


// a PMetaclass P#PEGExpression>>pMethods
//pMethods 
// 	^ #all.
constant36102 = (Object)new_AST_Constant((Object)symbol35977);
method25591 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant36102);
string28762 = (Object)new_Type_String(L"pMethods");
string28763 = (Object)new_Type_String(L"pMethods \n\t^ #all.");
smallint21530 = (Object)new_Type_SmallInt(-1);
smallint21531 = (Object)new_Type_SmallInt(-1);
info4028 = (Object)new_AST_Info((Type_String)string28763,(Type_String)string28762, (Type_SmallInt)smallint21530, (Type_SmallInt)smallint21531);
((AST_Method)method25591)->info = (AST_Info)info4028;
methodclosure25589 = (Object)new_Runtime_MethodClosure(method25591);
store_method((Type_Class)metaclass4036, (Type_Symbol)symbol35621, (Runtime_MethodClosure)methodclosure25589);

classreference4855 = (Object)new_Organization_ClassReference((Type_Class)class4040);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable26927 = (Object)new_AST_Variable_named(L"alternative");
array21587 = (Object)new_Type_Array_with(1, (Object)localvariable26927);
// subclassResponsibility
send185960 = (Object)new_AST_Send((Object)Self, (Object)symbol36061, 0);
string28764 = (Object)new_Type_String(L"resultIfFailed:");
string28765 = (Object)new_Type_String(L"resultIfFailed: alternative\n\tself subclassResponsibility");
smallint21532 = (Object)new_Type_SmallInt(-1);
smallint21533 = (Object)new_Type_SmallInt(-1);
info4029 = (Object)new_AST_Info((Type_String)string28765,(Type_String)string28764, (Type_SmallInt)smallint21532, (Type_SmallInt)smallint21533);
((AST_Send)send185960)->info = (AST_Info)info4029;
method25592 = (Object)new_AST_Method_with((Type_Array)array21587, (Type_Array)empty_Type_Array, 2, send185960, Self);
((AST_Method)method25592)->info = (AST_Info)info4029;
methodclosure25590 = (Object)new_Runtime_MethodClosure(method25592);
store_method((Type_Class)class4040, (Type_Symbol)symbol35943, (Runtime_MethodClosure)methodclosure25590);

classreference4856 = (Object)new_Organization_ClassReference((Type_Class)class4056);
classreference4857 = (Object)new_Organization_ClassReference((Type_Class)class4069);
classreference4858 = (Object)new_Organization_ClassReference((Type_Class)class4029);

// ASTNode>>astName
//astName
// 	^ (self class name 
// 			copyFrom: 4
// 			to: self class name size) capitalized
// class
send185961 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
string28766 = (Object)new_Type_String(L"astName");
string28767 = (Object)new_Type_String(L"astName\n\t^ (self class name \n\t\t\tcopyFrom: 4\n\t\t\tto: self class name size) capitalized");
smallint21534 = (Object)new_Type_SmallInt(-1);
smallint21535 = (Object)new_Type_SmallInt(-1);
info4030 = (Object)new_AST_Info((Type_String)string28767,(Type_String)string28766, (Type_SmallInt)smallint21534, (Type_SmallInt)smallint21535);
((AST_Send)send185961)->info = (AST_Info)info4030;
// name
send185962 = (Object)new_AST_Send((Object)send185961, (Object)SMB_name, 0);
((AST_Send)send185962)->info = (AST_Info)info4030;
symbol36063 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");
smallint21536 = (Object)new_Type_SmallInt(4);
constant36103 = (Object)new_AST_Constant((Object)smallint21536);
// class
send185963 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
((AST_Send)send185963)->info = (AST_Info)info4030;
// name
send185964 = (Object)new_AST_Send((Object)send185963, (Object)SMB_name, 0);
((AST_Send)send185964)->info = (AST_Info)info4030;
// size
send185965 = (Object)new_AST_Send((Object)send185964, (Object)SMB_size, 0);
((AST_Send)send185965)->info = (AST_Info)info4030;
// copyFrom:to:
send185966 = (Object)new_AST_Send((Object)send185962, (Object)symbol36063, 2, (Object)constant36103, (Object)send185965);
((AST_Send)send185966)->info = (AST_Info)info4030;
// capitalized
send185967 = (Object)new_AST_Send((Object)send185966, (Object)symbol35643, 0);
((AST_Send)send185967)->info = (AST_Info)info4030;
method25593 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send185967);
((AST_Method)method25593)->info = (AST_Info)info4030;
symbol35683 = (Object)new_Type_Symbol_cached(L"astName");
methodclosure25591 = (Object)new_Runtime_MethodClosure(method25593);
store_method((Type_Class)class4029, (Type_Symbol)symbol35683, (Runtime_MethodClosure)methodclosure25591);


// ASTNode>>sourceObject
//sourceObject
// 	^ sourceObject
method25594 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable5982);
string28768 = (Object)new_Type_String(L"sourceObject");
string28769 = (Object)new_Type_String(L"sourceObject\n\t^ sourceObject");
smallint21537 = (Object)new_Type_SmallInt(-1);
smallint21538 = (Object)new_Type_SmallInt(-1);
info4031 = (Object)new_AST_Info((Type_String)string28769,(Type_String)string28768, (Type_SmallInt)smallint21537, (Type_SmallInt)smallint21538);
((AST_Method)method25594)->info = (AST_Info)info4031;
symbol35680 = (Object)new_Type_Symbol_cached(L"sourceObject");
methodclosure25592 = (Object)new_Runtime_MethodClosure(method25594);
store_method((Type_Class)class4029, (Type_Symbol)symbol35680, (Runtime_MethodClosure)methodclosure25592);


// ASTNode>>sourceObject:
//sourceObject: anObject
// 	sourceObject := anObject
localvariable26928 = (Object)new_AST_Variable_named(L"anObject");
array21588 = (Object)new_Type_Array_with(1, (Object)localvariable26928);
assign22805 = (Object)new_AST_Assign((Object)instancevariable5982, (Object)localvariable26928);
method25595 = (Object)new_AST_Method_with((Type_Array)array21588, (Type_Array)empty_Type_Array, 2, assign22805, Self);
string28770 = (Object)new_Type_String(L"sourceObject:");
string28771 = (Object)new_Type_String(L"sourceObject: anObject\n\tsourceObject := anObject");
smallint21539 = (Object)new_Type_SmallInt(-1);
smallint21540 = (Object)new_Type_SmallInt(-1);
info4032 = (Object)new_AST_Info((Type_String)string28771,(Type_String)string28770, (Type_SmallInt)smallint21539, (Type_SmallInt)smallint21540);
((AST_Method)method25595)->info = (AST_Info)info4032;
symbol35677 = (Object)new_Type_Symbol_cached(L"sourceObject:");
methodclosure25593 = (Object)new_Runtime_MethodClosure(method25595);
store_method((Type_Class)class4029, (Type_Symbol)symbol35677, (Runtime_MethodClosure)methodclosure25593);


// ASTNode>>argumentOfBinary:
//argumentOfBinary: binary
// 	^ binary argument: self
localvariable26929 = (Object)new_AST_Variable_named(L"binary");
array21589 = (Object)new_Type_Array_with(1, (Object)localvariable26929);
// argument:
send185968 = (Object)new_AST_Send((Object)localvariable26929, (Object)symbol35735, 1, (Object)Self);
string28772 = (Object)new_Type_String(L"argumentOfBinary:");
string28773 = (Object)new_Type_String(L"argumentOfBinary: binary\n\t^ binary argument: self");
smallint21541 = (Object)new_Type_SmallInt(-1);
smallint21542 = (Object)new_Type_SmallInt(-1);
info4033 = (Object)new_AST_Info((Type_String)string28773,(Type_String)string28772, (Type_SmallInt)smallint21541, (Type_SmallInt)smallint21542);
((AST_Send)send185968)->info = (AST_Info)info4033;
method25596 = (Object)new_AST_Method_with((Type_Array)array21589, (Type_Array)empty_Type_Array, 1, send185968);
((AST_Method)method25596)->info = (AST_Info)info4033;
methodclosure25594 = (Object)new_Runtime_MethodClosure(method25596);
store_method((Type_Class)class4029, (Type_Symbol)symbol35681, (Runtime_MethodClosure)methodclosure25594);


// ASTNode>>hasReturnExpression
//hasReturnExpression
// 	^ false
method25597 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
string28774 = (Object)new_Type_String(L"hasReturnExpression");
string28775 = (Object)new_Type_String(L"hasReturnExpression\n\t^ false");
smallint21543 = (Object)new_Type_SmallInt(-1);
smallint21544 = (Object)new_Type_SmallInt(-1);
info4034 = (Object)new_AST_Info((Type_String)string28775,(Type_String)string28774, (Type_SmallInt)smallint21543, (Type_SmallInt)smallint21544);
((AST_Method)method25597)->info = (AST_Info)info4034;
methodclosure25595 = (Object)new_Runtime_MethodClosure(method25597);
store_method((Type_Class)class4029, (Type_Symbol)symbol35678, (Runtime_MethodClosure)methodclosure25595);


// ASTNode>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable26930 = (Object)new_AST_Variable_named(L"aMessage");
array21590 = (Object)new_Type_Array_with(1, (Object)localvariable26930);
localvariable26931 = (Object)new_AST_Variable_named(L"selector");
array21591 = (Object)new_Type_Array_with(1, (Object)localvariable26931);
variable1599 = (Object)new_AST_Variable_named(L"return");
array21592 = (Object)new_Type_Array_with(1, (Object)variable1599);
// selector
send185969 = (Object)new_AST_Send((Object)localvariable26930, (Object)symbol35626, 0);
string28776 = (Object)new_Type_String(L"doesNotUnderstand:");
string28777 = (Object)new_Type_String(L"doesNotUnderstand: aMessage\n\t| selector |\n\t(aMessage selector = #accept:) \n\t\tifFalse: [ ^ super doesNotUnderstand: aMessage ].\n\tselector := (\'visit\', (self class name copyFrom: 4 to: (self class name size)), \':\') asSymbol.\n\t^ (aMessage argument) perform: selector with: self. ");
smallint21545 = (Object)new_Type_SmallInt(-1);
smallint21546 = (Object)new_Type_SmallInt(-1);
info4035 = (Object)new_AST_Info((Type_String)string28777,(Type_String)string28776, (Type_SmallInt)smallint21545, (Type_SmallInt)smallint21546);
((AST_Send)send185969)->info = (AST_Info)info4035;
constant36104 = (Object)new_AST_Constant((Object)symbol35947);
// =
send185970 = (Object)new_AST_Send((Object)send185969, (Object)SMB__equal, 1, (Object)constant36104);
((AST_Send)send185970)->info = (AST_Info)info4035;
super1991 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable26930);
// escape:
send185971 = (Object)new_AST_Send((Object)variable1599, (Object)SMB_escape_, 1, (Object)super1991);
((AST_Send)send185971)->info = (AST_Info)info4035;
block12917 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send185971);
// ifFalse:
send185972 = (Object)new_AST_Send((Object)send185970, (Object)SMB_ifFalse_, 1, (Object)block12917);
((AST_Send)send185972)->info = (AST_Info)info4035;
string28778 = (Object)new_Type_String(L"visit");
constant36105 = (Object)new_AST_Constant((Object)string28778);
// class
send185973 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
((AST_Send)send185973)->info = (AST_Info)info4035;
// name
send185974 = (Object)new_AST_Send((Object)send185973, (Object)SMB_name, 0);
((AST_Send)send185974)->info = (AST_Info)info4035;
smallint21547 = (Object)new_Type_SmallInt(4);
constant36106 = (Object)new_AST_Constant((Object)smallint21547);
// class
send185975 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
((AST_Send)send185975)->info = (AST_Info)info4035;
// name
send185976 = (Object)new_AST_Send((Object)send185975, (Object)SMB_name, 0);
((AST_Send)send185976)->info = (AST_Info)info4035;
// size
send185977 = (Object)new_AST_Send((Object)send185976, (Object)SMB_size, 0);
((AST_Send)send185977)->info = (AST_Info)info4035;
// copyFrom:to:
send185978 = (Object)new_AST_Send((Object)send185974, (Object)symbol36063, 2, (Object)constant36106, (Object)send185977);
((AST_Send)send185978)->info = (AST_Info)info4035;
// ,
send185979 = (Object)new_AST_Send((Object)constant36105, (Object)SMB__concat, 1, (Object)send185978);
((AST_Send)send185979)->info = (AST_Info)info4035;
string28779 = (Object)new_Type_String(L":");
constant36107 = (Object)new_AST_Constant((Object)string28779);
// ,
send185980 = (Object)new_AST_Send((Object)send185979, (Object)SMB__concat, 1, (Object)constant36107);
((AST_Send)send185980)->info = (AST_Info)info4035;
// asSymbol
send185981 = (Object)new_AST_Send((Object)send185980, (Object)SMB_asSymbol, 0);
((AST_Send)send185981)->info = (AST_Info)info4035;
assign22806 = (Object)new_AST_Assign((Object)localvariable26931, (Object)send185981);
// argument
send185982 = (Object)new_AST_Send((Object)localvariable26930, (Object)symbol35736, 0);
((AST_Send)send185982)->info = (AST_Info)info4035;
// perform:with:
send185983 = (Object)new_AST_Send((Object)send185982, (Object)symbol35948, 2, (Object)localvariable26931, (Object)Self);
((AST_Send)send185983)->info = (AST_Info)info4035;
block12918 = (Object)new_AST_Block_with((Type_Array)array21592, (Type_Array)empty_Type_Array, 1, 3, send185972, assign22806, send185983);
// on:
send185984 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12918);
method25598 = (Object)new_AST_Method_with((Type_Array)array21590, (Type_Array)array21591, 1, send185984);
((AST_Method)method25598)->info = (AST_Info)info4035;
methodclosure25596 = (Object)new_Runtime_MethodClosure(method25598);
store_method((Type_Class)class4029, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure25596);


// ASTNode>>astType
//astType
// 	^ 'Type'
string28780 = (Object)new_Type_String(L"Type");
constant36108 = (Object)new_AST_Constant((Object)string28780);
method25599 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant36108);
string28781 = (Object)new_Type_String(L"astType");
string28782 = (Object)new_Type_String(L"astType\n\t^ \'Type\'");
smallint21548 = (Object)new_Type_SmallInt(-1);
smallint21549 = (Object)new_Type_SmallInt(-1);
info4036 = (Object)new_AST_Info((Type_String)string28782,(Type_String)string28781, (Type_SmallInt)smallint21548, (Type_SmallInt)smallint21549);
((AST_Method)method25599)->info = (AST_Info)info4036;
symbol35682 = (Object)new_Type_Symbol_cached(L"astType");
methodclosure25597 = (Object)new_Runtime_MethodClosure(method25599);
store_method((Type_Class)class4029, (Type_Symbol)symbol35682, (Runtime_MethodClosure)methodclosure25597);


// ASTNode>>uid
//uid
// 	uid isNil ifTrue: [ uid := self class uidFor: self].
// 	^ uid
// isNil
send185985 = (Object)new_AST_Send((Object)instancevariable5983, (Object)SMB_isNil, 0);
string28783 = (Object)new_Type_String(L"uid");
string28784 = (Object)new_Type_String(L"uid\n\tuid isNil ifTrue: [ uid := self class uidFor: self].\n\t^ uid");
smallint21550 = (Object)new_Type_SmallInt(-1);
smallint21551 = (Object)new_Type_SmallInt(-1);
info4037 = (Object)new_AST_Info((Type_String)string28784,(Type_String)string28783, (Type_SmallInt)smallint21550, (Type_SmallInt)smallint21551);
((AST_Send)send185985)->info = (AST_Info)info4037;
// class
send185986 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
((AST_Send)send185986)->info = (AST_Info)info4037;
symbol36064 = (Object)new_Type_Symbol_cached(L"uidFor:");
// uidFor:
send185987 = (Object)new_AST_Send((Object)send185986, (Object)symbol36064, 1, (Object)Self);
((AST_Send)send185987)->info = (AST_Info)info4037;
assign22807 = (Object)new_AST_Assign((Object)instancevariable5983, (Object)send185987);
block12919 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign22807);
// ifTrue:
send185988 = (Object)new_AST_Send((Object)send185985, (Object)SMB_ifTrue_, 1, (Object)block12919);
((AST_Send)send185988)->info = (AST_Info)info4037;
method25600 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send185988, instancevariable5983);
((AST_Method)method25600)->info = (AST_Info)info4037;
symbol35679 = (Object)new_Type_Symbol_cached(L"uid");
methodclosure25598 = (Object)new_Runtime_MethodClosure(method25600);
store_method((Type_Class)class4029, (Type_Symbol)symbol35679, (Runtime_MethodClosure)methodclosure25598);


// ASTNode>>isReturnExpression
//isReturnExpression
// 	^ false
method25601 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
string28785 = (Object)new_Type_String(L"isReturnExpression");
string28786 = (Object)new_Type_String(L"isReturnExpression\n\t^ false");
smallint21552 = (Object)new_Type_SmallInt(-1);
smallint21553 = (Object)new_Type_SmallInt(-1);
info4038 = (Object)new_AST_Info((Type_String)string28786,(Type_String)string28785, (Type_SmallInt)smallint21552, (Type_SmallInt)smallint21553);
((AST_Method)method25601)->info = (AST_Info)info4038;
methodclosure25599 = (Object)new_Runtime_MethodClosure(method25601);
store_method((Type_Class)class4029, (Type_Symbol)symbol35516, (Runtime_MethodClosure)methodclosure25599);

classreference4859 = (Object)new_Organization_ClassReference((Type_Class)class4053);

// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send185989 = (Object)new_AST_Send((Object)Self, (Object)symbol35626, 0);
string28787 = (Object)new_Type_String(L"selectorName");
string28788 = (Object)new_Type_String(L"selectorName\n\tself selector printString");
smallint21554 = (Object)new_Type_SmallInt(-1);
smallint21555 = (Object)new_Type_SmallInt(-1);
info4039 = (Object)new_AST_Info((Type_String)string28788,(Type_String)string28787, (Type_SmallInt)smallint21554, (Type_SmallInt)smallint21555);
((AST_Send)send185989)->info = (AST_Info)info4039;
// printString
send185990 = (Object)new_AST_Send((Object)send185989, (Object)symbol35846, 0);
((AST_Send)send185990)->info = (AST_Info)info4039;
method25602 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send185990, Self);
((AST_Method)method25602)->info = (AST_Info)info4039;
methodclosure25600 = (Object)new_Runtime_MethodClosure(method25602);
store_method((Type_Class)class4053, (Type_Symbol)symbol35731, (Runtime_MethodClosure)methodclosure25600);


// ASTSelector>>selector
//selector
// 	^ selector
method25603 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6019);
string28789 = (Object)new_Type_String(L"selector");
string28790 = (Object)new_Type_String(L"selector\n\t^ selector");
smallint21556 = (Object)new_Type_SmallInt(-1);
smallint21557 = (Object)new_Type_SmallInt(-1);
info4040 = (Object)new_AST_Info((Type_String)string28790,(Type_String)string28789, (Type_SmallInt)smallint21556, (Type_SmallInt)smallint21557);
((AST_Method)method25603)->info = (AST_Info)info4040;
methodclosure25601 = (Object)new_Runtime_MethodClosure(method25603);
store_method((Type_Class)class4053, (Type_Symbol)symbol35626, (Runtime_MethodClosure)methodclosure25601);


// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable26932 = (Object)new_AST_Variable_named(L"anObject");
array21593 = (Object)new_Type_Array_with(1, (Object)localvariable26932);
localvariable26933 = (Object)new_AST_Variable_named(L"string");
array21594 = (Object)new_Type_Array_with(1, (Object)localvariable26933);
assign22808 = (Object)new_AST_Assign((Object)instancevariable6019, (Object)localvariable26932);
// asString
send185991 = (Object)new_AST_Send((Object)instancevariable6019, (Object)SMB_asString, 0);
string28791 = (Object)new_Type_String(L"selector:");
string28792 = (Object)new_Type_String(L"selector: anObject\n\t| string |\n\tselector := anObject.\n\tstring := selector asString.\n\tstring size > 1 ifTrue: [ (string at: string size - 1) should not = \':\' ]");
smallint21558 = (Object)new_Type_SmallInt(-1);
smallint21559 = (Object)new_Type_SmallInt(-1);
info4041 = (Object)new_AST_Info((Type_String)string28792,(Type_String)string28791, (Type_SmallInt)smallint21558, (Type_SmallInt)smallint21559);
((AST_Send)send185991)->info = (AST_Info)info4041;
assign22809 = (Object)new_AST_Assign((Object)localvariable26933, (Object)send185991);
// size
send185992 = (Object)new_AST_Send((Object)localvariable26933, (Object)SMB_size, 0);
((AST_Send)send185992)->info = (AST_Info)info4041;
smallint21560 = (Object)new_Type_SmallInt(1);
constant36109 = (Object)new_AST_Constant((Object)smallint21560);
// >
send185993 = (Object)new_AST_Send((Object)send185992, (Object)SMB__gt, 1, (Object)constant36109);
((AST_Send)send185993)->info = (AST_Info)info4041;
// size
send185994 = (Object)new_AST_Send((Object)localvariable26933, (Object)SMB_size, 0);
((AST_Send)send185994)->info = (AST_Info)info4041;
smallint21561 = (Object)new_Type_SmallInt(1);
constant36110 = (Object)new_AST_Constant((Object)smallint21561);
// -
send185995 = (Object)new_AST_Send((Object)send185994, (Object)SMB__minus, 1, (Object)constant36110);
((AST_Send)send185995)->info = (AST_Info)info4041;
// at:
send185996 = (Object)new_AST_Send((Object)localvariable26933, (Object)SMB_at_, 1, (Object)send185995);
((AST_Send)send185996)->info = (AST_Info)info4041;
// should
send185997 = (Object)new_AST_Send((Object)send185996, (Object)symbol35983, 0);
((AST_Send)send185997)->info = (AST_Info)info4041;
// not
send185998 = (Object)new_AST_Send((Object)send185997, (Object)SMB_not, 0);
((AST_Send)send185998)->info = (AST_Info)info4041;
string28793 = (Object)new_Type_String(L":");
constant36111 = (Object)new_AST_Constant((Object)string28793);
// =
send185999 = (Object)new_AST_Send((Object)send185998, (Object)SMB__equal, 1, (Object)constant36111);
((AST_Send)send185999)->info = (AST_Info)info4041;
block12920 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send185999);
// ifTrue:
send186000 = (Object)new_AST_Send((Object)send185993, (Object)SMB_ifTrue_, 1, (Object)block12920);
((AST_Send)send186000)->info = (AST_Info)info4041;
method25604 = (Object)new_AST_Method_with((Type_Array)array21593, (Type_Array)array21594, 4, assign22808, assign22809, send186000, Self);
((AST_Method)method25604)->info = (AST_Info)info4041;
methodclosure25602 = (Object)new_Runtime_MethodClosure(method25604);
store_method((Type_Class)class4053, (Type_Symbol)symbol35732, (Runtime_MethodClosure)methodclosure25602);


// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable26934 = (Object)new_AST_Variable_named(L"aSelector");
array21595 = (Object)new_Type_Array_with(1, (Object)localvariable26934);
// selectorName
send186001 = (Object)new_AST_Send((Object)Self, (Object)symbol35731, 0);
string28794 = (Object)new_Type_String(L"compatibleWith:");
string28795 = (Object)new_Type_String(L"compatibleWith: aSelector\n\t^ (self selectorName = aSelector selectorName)\n\t");
smallint21562 = (Object)new_Type_SmallInt(-1);
smallint21563 = (Object)new_Type_SmallInt(-1);
info4042 = (Object)new_AST_Info((Type_String)string28795,(Type_String)string28794, (Type_SmallInt)smallint21562, (Type_SmallInt)smallint21563);
((AST_Send)send186001)->info = (AST_Info)info4042;
// selectorName
send186002 = (Object)new_AST_Send((Object)localvariable26934, (Object)symbol35731, 0);
((AST_Send)send186002)->info = (AST_Info)info4042;
// =
send186003 = (Object)new_AST_Send((Object)send186001, (Object)SMB__equal, 1, (Object)send186002);
((AST_Send)send186003)->info = (AST_Info)info4042;
method25605 = (Object)new_AST_Method_with((Type_Array)array21595, (Type_Array)empty_Type_Array, 1, send186003);
((AST_Method)method25605)->info = (AST_Info)info4042;
methodclosure25603 = (Object)new_Runtime_MethodClosure(method25605);
store_method((Type_Class)class4053, (Type_Symbol)symbol35734, (Runtime_MethodClosure)methodclosure25603);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send186004 = (Object)new_AST_Send((Object)Self, (Object)symbol35626, 0);
string28796 = (Object)new_Type_String(L"asString");
string28797 = (Object)new_Type_String(L"asString\n\t^ self selector asString.");
smallint21564 = (Object)new_Type_SmallInt(-1);
smallint21565 = (Object)new_Type_SmallInt(-1);
info4043 = (Object)new_AST_Info((Type_String)string28797,(Type_String)string28796, (Type_SmallInt)smallint21564, (Type_SmallInt)smallint21565);
((AST_Send)send186004)->info = (AST_Info)info4043;
// asString
send186005 = (Object)new_AST_Send((Object)send186004, (Object)SMB_asString, 0);
((AST_Send)send186005)->info = (AST_Info)info4043;
method25606 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186005);
((AST_Method)method25606)->info = (AST_Info)info4043;
methodclosure25604 = (Object)new_Runtime_MethodClosure(method25606);
store_method((Type_Class)class4053, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure25604);


// ASTSelector>>parameters
//parameters
// 	^ Array new.
// new
send186006 = (Object)new_AST_Send((Object)classreference4805, (Object)symbol35612, 0);
string28798 = (Object)new_Type_String(L"parameters");
string28799 = (Object)new_Type_String(L"parameters\n\t^ Array new.");
smallint21566 = (Object)new_Type_SmallInt(-1);
smallint21567 = (Object)new_Type_SmallInt(-1);
info4044 = (Object)new_AST_Info((Type_String)string28799,(Type_String)string28798, (Type_SmallInt)smallint21566, (Type_SmallInt)smallint21567);
((AST_Send)send186006)->info = (AST_Info)info4044;
method25607 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186006);
((AST_Method)method25607)->info = (AST_Info)info4044;
methodclosure25605 = (Object)new_Runtime_MethodClosure(method25607);
store_method((Type_Class)class4053, (Type_Symbol)symbol35733, (Runtime_MethodClosure)methodclosure25605);


// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable26935 = (Object)new_AST_Variable_named(L"aStream");
array21596 = (Object)new_Type_Array_with(1, (Object)localvariable26935);
// selector
send186007 = (Object)new_AST_Send((Object)Self, (Object)symbol35626, 0);
string28800 = (Object)new_Type_String(L"printOn:");
string28801 = (Object)new_Type_String(L"printOn: aStream\n\tself selector printOn: aStream.");
smallint21568 = (Object)new_Type_SmallInt(-1);
smallint21569 = (Object)new_Type_SmallInt(-1);
info4045 = (Object)new_AST_Info((Type_String)string28801,(Type_String)string28800, (Type_SmallInt)smallint21568, (Type_SmallInt)smallint21569);
((AST_Send)send186007)->info = (AST_Info)info4045;
// printOn:
send186008 = (Object)new_AST_Send((Object)send186007, (Object)symbol35622, 1, (Object)localvariable26935);
((AST_Send)send186008)->info = (AST_Info)info4045;
method25608 = (Object)new_AST_Method_with((Type_Array)array21596, (Type_Array)empty_Type_Array, 2, send186008, Self);
((AST_Method)method25608)->info = (AST_Info)info4045;
methodclosure25606 = (Object)new_Runtime_MethodClosure(method25608);
store_method((Type_Class)class4053, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25606);

classreference4860 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method25609 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
string28802 = (Object)new_Type_String(L"isReturnExpression");
string28803 = (Object)new_Type_String(L"isReturnExpression\n\t^ false");
smallint21570 = (Object)new_Type_SmallInt(-1);
smallint21571 = (Object)new_Type_SmallInt(-1);
info4046 = (Object)new_AST_Info((Type_String)string28803,(Type_String)string28802, (Type_SmallInt)smallint21570, (Type_SmallInt)smallint21571);
((AST_Method)method25609)->info = (AST_Info)info4046;
methodclosure25607 = (Object)new_Runtime_MethodClosure(method25609);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35516, (Runtime_MethodClosure)methodclosure25607);


// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable26936 = (Object)new_AST_Variable_named(L"anObject");
array21597 = (Object)new_Type_Array_with(1, (Object)localvariable26936);
// =
send186009 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable26936);
string28804 = (Object)new_Type_String(L"~=");
string28805 = (Object)new_Type_String(L"~= anObject\n\t^ (self = anObject) not.");
smallint21572 = (Object)new_Type_SmallInt(-1);
smallint21573 = (Object)new_Type_SmallInt(-1);
info4047 = (Object)new_AST_Info((Type_String)string28805,(Type_String)string28804, (Type_SmallInt)smallint21572, (Type_SmallInt)smallint21573);
((AST_Send)send186009)->info = (AST_Info)info4047;
// not
send186010 = (Object)new_AST_Send((Object)send186009, (Object)SMB_not, 0);
((AST_Send)send186010)->info = (AST_Info)info4047;
method25610 = (Object)new_AST_Method_with((Type_Array)array21597, (Type_Array)empty_Type_Array, 1, send186010);
((AST_Method)method25610)->info = (AST_Info)info4047;
methodclosure25608 = (Object)new_Runtime_MethodClosure(method25610);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35521, (Runtime_MethodClosure)methodclosure25608);


// Object>>initialize
//initialize
method25611 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string28806 = (Object)new_Type_String(L"initialize");
string28807 = (Object)new_Type_String(L"initialize");
smallint21574 = (Object)new_Type_SmallInt(-1);
smallint21575 = (Object)new_Type_SmallInt(-1);
info4048 = (Object)new_AST_Info((Type_String)string28807,(Type_String)string28806, (Type_SmallInt)smallint21574, (Type_SmallInt)smallint21575);
((AST_Method)method25611)->info = (AST_Info)info4048;
methodclosure25609 = (Object)new_Runtime_MethodClosure(method25611);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35517, (Runtime_MethodClosure)methodclosure25609);


// Object>>isNil
//isNil
// 	^ false
method25612 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
string28808 = (Object)new_Type_String(L"isNil");
string28809 = (Object)new_Type_String(L"isNil\n\t^ false");
smallint21576 = (Object)new_Type_SmallInt(-1);
smallint21577 = (Object)new_Type_SmallInt(-1);
info4049 = (Object)new_AST_Info((Type_String)string28809,(Type_String)string28808, (Type_SmallInt)smallint21576, (Type_SmallInt)smallint21577);
((AST_Method)method25612)->info = (AST_Info)info4049;
methodclosure25610 = (Object)new_Runtime_MethodClosure(method25612);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure25610);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send186011 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
string28810 = (Object)new_Type_String(L"objectName");
string28811 = (Object)new_Type_String(L"objectName\n\t^ self class pinocchioName");
smallint21578 = (Object)new_Type_SmallInt(-1);
smallint21579 = (Object)new_Type_SmallInt(-1);
info4050 = (Object)new_AST_Info((Type_String)string28811,(Type_String)string28810, (Type_SmallInt)smallint21578, (Type_SmallInt)smallint21579);
((AST_Send)send186011)->info = (AST_Info)info4050;
symbol35506 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send186012 = (Object)new_AST_Send((Object)send186011, (Object)symbol35506, 0);
((AST_Send)send186012)->info = (AST_Info)info4050;
method25613 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186012);
((AST_Method)method25613)->info = (AST_Info)info4050;
methodclosure25611 = (Object)new_Runtime_MethodClosure(method25613);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35514, (Runtime_MethodClosure)methodclosure25611);


// Object>>ifNil:
//ifNil: aBlock
localvariable26937 = (Object)new_AST_Variable_named(L"aBlock");
array21598 = (Object)new_Type_Array_with(1, (Object)localvariable26937);
method25614 = (Object)new_AST_Method_with((Type_Array)array21598, (Type_Array)empty_Type_Array, 1, Self);
string28812 = (Object)new_Type_String(L"ifNil:");
string28813 = (Object)new_Type_String(L"ifNil: aBlock");
smallint21580 = (Object)new_Type_SmallInt(-1);
smallint21581 = (Object)new_Type_SmallInt(-1);
info4051 = (Object)new_AST_Info((Type_String)string28813,(Type_String)string28812, (Type_SmallInt)smallint21580, (Type_SmallInt)smallint21581);
((AST_Method)method25614)->info = (AST_Info)info4051;
methodclosure25612 = (Object)new_Runtime_MethodClosure(method25614);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35518, (Runtime_MethodClosure)methodclosure25612);


// Object>>yourself
//yourself
// 	^ self
method25615 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
string28814 = (Object)new_Type_String(L"yourself");
string28815 = (Object)new_Type_String(L"yourself\n\t^ self");
smallint21582 = (Object)new_Type_SmallInt(-1);
smallint21583 = (Object)new_Type_SmallInt(-1);
info4052 = (Object)new_AST_Info((Type_String)string28815,(Type_String)string28814, (Type_SmallInt)smallint21582, (Type_SmallInt)smallint21583);
((AST_Method)method25615)->info = (AST_Info)info4052;
methodclosure25613 = (Object)new_Runtime_MethodClosure(method25615);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35515, (Runtime_MethodClosure)methodclosure25613);


// Object>>ifNotNil:
//ifNotNil: aBlock
// 	^ aBlock value
localvariable26938 = (Object)new_AST_Variable_named(L"aBlock");
array21599 = (Object)new_Type_Array_with(1, (Object)localvariable26938);
// value
send186013 = (Object)new_AST_Send((Object)localvariable26938, (Object)symbol35946, 0);
string28816 = (Object)new_Type_String(L"ifNotNil:");
string28817 = (Object)new_Type_String(L"ifNotNil: aBlock\n\t^ aBlock value");
smallint21584 = (Object)new_Type_SmallInt(-1);
smallint21585 = (Object)new_Type_SmallInt(-1);
info4053 = (Object)new_AST_Info((Type_String)string28817,(Type_String)string28816, (Type_SmallInt)smallint21584, (Type_SmallInt)smallint21585);
((AST_Send)send186013)->info = (AST_Info)info4053;
method25616 = (Object)new_AST_Method_with((Type_Array)array21599, (Type_Array)empty_Type_Array, 1, send186013);
((AST_Method)method25616)->info = (AST_Info)info4053;
methodclosure25614 = (Object)new_Runtime_MethodClosure(method25616);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35519, (Runtime_MethodClosure)methodclosure25614);


// Object>>respondsTo:
//respondsTo: selector
// 	^ self class canUnderstand: selector
localvariable26939 = (Object)new_AST_Variable_named(L"selector");
array21600 = (Object)new_Type_Array_with(1, (Object)localvariable26939);
// class
send186014 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
string28818 = (Object)new_Type_String(L"respondsTo:");
string28819 = (Object)new_Type_String(L"respondsTo: selector\n\t^ self class canUnderstand: selector");
smallint21586 = (Object)new_Type_SmallInt(-1);
smallint21587 = (Object)new_Type_SmallInt(-1);
info4054 = (Object)new_AST_Info((Type_String)string28819,(Type_String)string28818, (Type_SmallInt)smallint21586, (Type_SmallInt)smallint21587);
((AST_Send)send186014)->info = (AST_Info)info4054;
symbol35606 = (Object)new_Type_Symbol_cached(L"canUnderstand:");
// canUnderstand:
send186015 = (Object)new_AST_Send((Object)send186014, (Object)symbol35606, 1, (Object)localvariable26939);
((AST_Send)send186015)->info = (AST_Info)info4054;
method25617 = (Object)new_AST_Method_with((Type_Array)array21600, (Type_Array)empty_Type_Array, 1, send186015);
((AST_Method)method25617)->info = (AST_Info)info4054;
methodclosure25615 = (Object)new_Runtime_MethodClosure(method25617);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol35520, (Runtime_MethodClosure)methodclosure25615);


// Object>>hash
//hash
// 	^ self uid hash
// uid
send186016 = (Object)new_AST_Send((Object)Self, (Object)symbol35679, 0);
string28820 = (Object)new_Type_String(L"hash");
string28821 = (Object)new_Type_String(L"hash\n\t^ self uid hash");
smallint21588 = (Object)new_Type_SmallInt(-1);
smallint21589 = (Object)new_Type_SmallInt(-1);
info4055 = (Object)new_AST_Info((Type_String)string28821,(Type_String)string28820, (Type_SmallInt)smallint21588, (Type_SmallInt)smallint21589);
((AST_Send)send186016)->info = (AST_Info)info4055;
// hash
send186017 = (Object)new_AST_Send((Object)send186016, (Object)SMB_hash, 0);
((AST_Send)send186017)->info = (AST_Info)info4055;
method25618 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186017);
((AST_Method)method25618)->info = (AST_Info)info4055;
methodclosure25616 = (Object)new_Runtime_MethodClosure(method25618);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure25616);


// a PInternalMetaclass P#Object>>pClassName
//pClassName
// 	^ self pTypeName, '_Class'.
// pTypeName
send186018 = (Object)new_AST_Send((Object)Self, (Object)symbol35510, 0);
string28822 = (Object)new_Type_String(L"pClassName");
string28823 = (Object)new_Type_String(L"pClassName\n\t^ self pTypeName, \'_Class\'.");
smallint21590 = (Object)new_Type_SmallInt(-1);
smallint21591 = (Object)new_Type_SmallInt(-1);
info4056 = (Object)new_AST_Info((Type_String)string28823,(Type_String)string28822, (Type_SmallInt)smallint21590, (Type_SmallInt)smallint21591);
((AST_Send)send186018)->info = (AST_Info)info4056;
string28824 = (Object)new_Type_String(L"_Class");
constant36112 = (Object)new_AST_Constant((Object)string28824);
// ,
send186019 = (Object)new_AST_Send((Object)send186018, (Object)SMB__concat, 1, (Object)constant36112);
((AST_Send)send186019)->info = (AST_Info)info4056;
method25619 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186019);
((AST_Method)method25619)->info = (AST_Info)info4056;
symbol35507 = (Object)new_Type_Symbol_cached(L"pClassName");
methodclosure25617 = (Object)new_Runtime_MethodClosure(method25619);
store_method((Type_Class)HEADER(Type_Object_Class), (Type_Symbol)symbol35507, (Runtime_MethodClosure)methodclosure25617);


// a PInternalMetaclass P#Object>>basicPTypeName:
//basicPTypeName: aString
// 	^ aString, 
// 		'_', 
// 		(self name 
// 			copyFrom: ('p' size + 1)
// 			to: self name size) capitalized
localvariable26940 = (Object)new_AST_Variable_named(L"aString");
array21601 = (Object)new_Type_Array_with(1, (Object)localvariable26940);
string28825 = (Object)new_Type_String(L"_");
constant36113 = (Object)new_AST_Constant((Object)string28825);
// ,
send186020 = (Object)new_AST_Send((Object)localvariable26940, (Object)SMB__concat, 1, (Object)constant36113);
string28826 = (Object)new_Type_String(L"basicPTypeName:");
string28827 = (Object)new_Type_String(L"basicPTypeName: aString\n\t^ aString, \n\t\t\'_\', \n\t\t(self name \n\t\t\tcopyFrom: (\'p\' size + 1)\n\t\t\tto: self name size) capitalized");
smallint21592 = (Object)new_Type_SmallInt(-1);
smallint21593 = (Object)new_Type_SmallInt(-1);
info4057 = (Object)new_AST_Info((Type_String)string28827,(Type_String)string28826, (Type_SmallInt)smallint21592, (Type_SmallInt)smallint21593);
((AST_Send)send186020)->info = (AST_Info)info4057;
// name
send186021 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send186021)->info = (AST_Info)info4057;
string28828 = (Object)new_Type_String(L"p");
constant36114 = (Object)new_AST_Constant((Object)string28828);
// size
send186022 = (Object)new_AST_Send((Object)constant36114, (Object)SMB_size, 0);
((AST_Send)send186022)->info = (AST_Info)info4057;
smallint21594 = (Object)new_Type_SmallInt(1);
constant36115 = (Object)new_AST_Constant((Object)smallint21594);
// +
send186023 = (Object)new_AST_Send((Object)send186022, (Object)SMB__plus, 1, (Object)constant36115);
((AST_Send)send186023)->info = (AST_Info)info4057;
// name
send186024 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send186024)->info = (AST_Info)info4057;
// size
send186025 = (Object)new_AST_Send((Object)send186024, (Object)SMB_size, 0);
((AST_Send)send186025)->info = (AST_Info)info4057;
// copyFrom:to:
send186026 = (Object)new_AST_Send((Object)send186021, (Object)symbol36063, 2, (Object)send186023, (Object)send186025);
((AST_Send)send186026)->info = (AST_Info)info4057;
// capitalized
send186027 = (Object)new_AST_Send((Object)send186026, (Object)symbol35643, 0);
((AST_Send)send186027)->info = (AST_Info)info4057;
// ,
send186028 = (Object)new_AST_Send((Object)send186020, (Object)SMB__concat, 1, (Object)send186027);
((AST_Send)send186028)->info = (AST_Info)info4057;
method25620 = (Object)new_AST_Method_with((Type_Array)array21601, (Type_Array)empty_Type_Array, 1, send186028);
((AST_Method)method25620)->info = (AST_Info)info4057;
methodclosure25618 = (Object)new_Runtime_MethodClosure(method25620);
store_method((Type_Class)HEADER(Type_Object_Class), (Type_Symbol)symbol35509, (Runtime_MethodClosure)methodclosure25618);


// a PInternalMetaclass P#Object>>pClassInstVarNames
//pClassInstVarNames
// 	^ PClass pClassInstVarNames
classreference4861 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable26941 = (Object)new_AST_Variable_named(L"aStream");
array21602 = (Object)new_Type_Array_with(1, (Object)localvariable26941);
super1992 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26941);
string28829 = (Object)new_Type_String(L" ");
constant36116 = (Object)new_AST_Constant((Object)string28829);
// nextPutAll:
send186029 = (Object)new_AST_Send((Object)localvariable26941, (Object)symbol35953, 1, (Object)constant36116);
string28830 = (Object)new_Type_String(L"printOn:");
string28831 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\taStream nextPutAll: \' \'.\n\tself name printOn: aStream.");
smallint21595 = (Object)new_Type_SmallInt(-1);
smallint21596 = (Object)new_Type_SmallInt(-1);
info4058 = (Object)new_AST_Info((Type_String)string28831,(Type_String)string28830, (Type_SmallInt)smallint21595, (Type_SmallInt)smallint21596);
((AST_Send)send186029)->info = (AST_Info)info4058;
// name
send186030 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send186030)->info = (AST_Info)info4058;
// printOn:
send186031 = (Object)new_AST_Send((Object)send186030, (Object)symbol35622, 1, (Object)localvariable26941);
((AST_Send)send186031)->info = (AST_Info)info4058;
method25621 = (Object)new_AST_Method_with((Type_Array)array21602, (Type_Array)empty_Type_Array, 4, super1992, send186029, send186031, Self);
((AST_Method)method25621)->info = (AST_Info)info4058;
methodclosure25619 = (Object)new_Runtime_MethodClosure(method25621);
store_method((Type_Class)Class, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25619);


// Class>>name
//name 
// 	^ name
instancevariable6060 = (Object)new_AST_InstVariable(3, L"name");
method25622 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6060);
string28832 = (Object)new_Type_String(L"name");
string28833 = (Object)new_Type_String(L"name \n\t^ name");
smallint21597 = (Object)new_Type_SmallInt(-1);
smallint21598 = (Object)new_Type_SmallInt(-1);
info4059 = (Object)new_AST_Info((Type_String)string28833,(Type_String)string28832, (Type_SmallInt)smallint21597, (Type_SmallInt)smallint21598);
((AST_Method)method25622)->info = (AST_Info)info4059;
methodclosure25620 = (Object)new_Runtime_MethodClosure(method25622);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure25620);


// Class>>package
//package
// 	^ package
instancevariable6061 = (Object)new_AST_InstVariable(4, L"package");
method25623 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6061);
string28834 = (Object)new_Type_String(L"package");
string28835 = (Object)new_Type_String(L"package\n\t^ package");
smallint21599 = (Object)new_Type_SmallInt(-1);
smallint21600 = (Object)new_Type_SmallInt(-1);
info4060 = (Object)new_AST_Info((Type_String)string28835,(Type_String)string28834, (Type_SmallInt)smallint21599, (Type_SmallInt)smallint21600);
((AST_Method)method25623)->info = (AST_Info)info4060;
symbol35623 = (Object)new_Type_Symbol_cached(L"package");
methodclosure25621 = (Object)new_Runtime_MethodClosure(method25623);
store_method((Type_Class)Class, (Type_Symbol)symbol35623, (Runtime_MethodClosure)methodclosure25621);

symbol35513 = (Object)new_Type_Symbol_cached(L"pClassInstVarNames");
// pClassInstVarNames
send186032 = (Object)new_AST_Send((Object)classreference4861, (Object)symbol35513, 0);
string28836 = (Object)new_Type_String(L"pClassInstVarNames");
string28837 = (Object)new_Type_String(L"pClassInstVarNames\n\t^ PClass pClassInstVarNames");
smallint21601 = (Object)new_Type_SmallInt(-1);
smallint21602 = (Object)new_Type_SmallInt(-1);
info4061 = (Object)new_AST_Info((Type_String)string28837,(Type_String)string28836, (Type_SmallInt)smallint21601, (Type_SmallInt)smallint21602);
((AST_Send)send186032)->info = (AST_Info)info4061;
method25624 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186032);
((AST_Method)method25624)->info = (AST_Info)info4061;
methodclosure25622 = (Object)new_Runtime_MethodClosure(method25624);
store_method((Type_Class)HEADER(Type_Object_Class), (Type_Symbol)symbol35513, (Runtime_MethodClosure)methodclosure25622);


// a PInternalMetaclass P#Object>>pinocchioName
//pinocchioName
// 	^ (self name 
// 			copyFrom: ('p' size + 1)
// 			to: self name size) capitalized asSymbol
// name
send186033 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
string28838 = (Object)new_Type_String(L"pinocchioName");
string28839 = (Object)new_Type_String(L"pinocchioName\n\t^ (self name \n\t\t\tcopyFrom: (\'p\' size + 1)\n\t\t\tto: self name size) capitalized asSymbol");
smallint21603 = (Object)new_Type_SmallInt(-1);
smallint21604 = (Object)new_Type_SmallInt(-1);
info4062 = (Object)new_AST_Info((Type_String)string28839,(Type_String)string28838, (Type_SmallInt)smallint21603, (Type_SmallInt)smallint21604);
((AST_Send)send186033)->info = (AST_Info)info4062;
string28840 = (Object)new_Type_String(L"p");
constant36117 = (Object)new_AST_Constant((Object)string28840);
// size
send186034 = (Object)new_AST_Send((Object)constant36117, (Object)SMB_size, 0);
((AST_Send)send186034)->info = (AST_Info)info4062;
smallint21605 = (Object)new_Type_SmallInt(1);
constant36118 = (Object)new_AST_Constant((Object)smallint21605);
// +
send186035 = (Object)new_AST_Send((Object)send186034, (Object)SMB__plus, 1, (Object)constant36118);
((AST_Send)send186035)->info = (AST_Info)info4062;
// name
send186036 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
((AST_Send)send186036)->info = (AST_Info)info4062;
// size
send186037 = (Object)new_AST_Send((Object)send186036, (Object)SMB_size, 0);
((AST_Send)send186037)->info = (AST_Info)info4062;
// copyFrom:to:
send186038 = (Object)new_AST_Send((Object)send186033, (Object)symbol36063, 2, (Object)send186035, (Object)send186037);
((AST_Send)send186038)->info = (AST_Info)info4062;
// capitalized
send186039 = (Object)new_AST_Send((Object)send186038, (Object)symbol35643, 0);
((AST_Send)send186039)->info = (AST_Info)info4062;
// asSymbol
send186040 = (Object)new_AST_Send((Object)send186039, (Object)SMB_asSymbol, 0);
((AST_Send)send186040)->info = (AST_Info)info4062;
method25625 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186040);
((AST_Method)method25625)->info = (AST_Info)info4062;
methodclosure25623 = (Object)new_Runtime_MethodClosure(method25625);
store_method((Type_Class)HEADER(Type_Object_Class), (Type_Symbol)symbol35506, (Runtime_MethodClosure)methodclosure25623);


// a PInternalMetaclass P#Object>>isPinocchioInternalClass
//isPinocchioInternalClass
// 	^ true
method25626 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
string28841 = (Object)new_Type_String(L"isPinocchioInternalClass");
string28842 = (Object)new_Type_String(L"isPinocchioInternalClass\n\t^ true");
smallint21606 = (Object)new_Type_SmallInt(-1);
smallint21607 = (Object)new_Type_SmallInt(-1);
info4063 = (Object)new_AST_Info((Type_String)string28842,(Type_String)string28841, (Type_SmallInt)smallint21606, (Type_SmallInt)smallint21607);
((AST_Method)method25626)->info = (AST_Info)info4063;
symbol35508 = (Object)new_Type_Symbol_cached(L"isPinocchioInternalClass");
methodclosure25624 = (Object)new_Runtime_MethodClosure(method25626);
store_method((Type_Class)HEADER(Type_Object_Class), (Type_Symbol)symbol35508, (Runtime_MethodClosure)methodclosure25624);


// a PInternalMetaclass P#Object>>pTypeName
//pTypeName
// 	^ self basicPTypeName: 'Type'.
string28843 = (Object)new_Type_String(L"Type");
constant36119 = (Object)new_AST_Constant((Object)string28843);
// basicPTypeName:
send186041 = (Object)new_AST_Send((Object)Self, (Object)symbol35509, 1, (Object)constant36119);
string28844 = (Object)new_Type_String(L"pTypeName");
string28845 = (Object)new_Type_String(L"pTypeName\n\t^ self basicPTypeName: \'Type\'.");
smallint21608 = (Object)new_Type_SmallInt(-1);
smallint21609 = (Object)new_Type_SmallInt(-1);
info4064 = (Object)new_AST_Info((Type_String)string28845,(Type_String)string28844, (Type_SmallInt)smallint21608, (Type_SmallInt)smallint21609);
((AST_Send)send186041)->info = (AST_Info)info4064;
method25627 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186041);
((AST_Method)method25627)->info = (AST_Info)info4064;
methodclosure25625 = (Object)new_Runtime_MethodClosure(method25627);
store_method((Type_Class)HEADER(Type_Object_Class), (Type_Symbol)symbol35510, (Runtime_MethodClosure)methodclosure25625);

classreference4862 = (Object)new_Organization_ClassReference((Type_Class)Type_Boolean_Class);
classreference4863 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable26942 = (Object)new_AST_Variable_named(L"aStream");
array21603 = (Object)new_Type_Array_with(1, (Object)localvariable26942);
super1993 = (Object)new_AST_Super((Object)symbol35622, 1, (Object)localvariable26942);
symbol36065 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send186042 = (Object)new_AST_Send((Object)Self, (Object)symbol36065, 0);
string28846 = (Object)new_Type_String(L"printOn:");
string28847 = (Object)new_Type_String(L"printOn: aStream\n\tsuper printOn: aStream.\n\tself pclass name printOn: aStream.");
smallint21610 = (Object)new_Type_SmallInt(-1);
smallint21611 = (Object)new_Type_SmallInt(-1);
info4065 = (Object)new_AST_Info((Type_String)string28847,(Type_String)string28846, (Type_SmallInt)smallint21610, (Type_SmallInt)smallint21611);
((AST_Send)send186042)->info = (AST_Info)info4065;
// name
send186043 = (Object)new_AST_Send((Object)send186042, (Object)SMB_name, 0);
((AST_Send)send186043)->info = (AST_Info)info4065;
// printOn:
send186044 = (Object)new_AST_Send((Object)send186043, (Object)symbol35622, 1, (Object)localvariable26942);
((AST_Send)send186044)->info = (AST_Info)info4065;
method25628 = (Object)new_AST_Method_with((Type_Array)array21603, (Type_Array)empty_Type_Array, 3, super1993, send186044, Self);
((AST_Method)method25628)->info = (AST_Info)info4065;
methodclosure25626 = (Object)new_Runtime_MethodClosure(method25628);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol35622, (Runtime_MethodClosure)methodclosure25626);


// a PInternalMetaclass P#Metaclass>>pMethods
//pMethods
// 	^ #all.
constant36120 = (Object)new_AST_Constant((Object)symbol35977);
method25629 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant36120);
string28848 = (Object)new_Type_String(L"pMethods");
string28849 = (Object)new_Type_String(L"pMethods\n\t^ #all.");
smallint21612 = (Object)new_Type_SmallInt(-1);
smallint21613 = (Object)new_Type_SmallInt(-1);
info4066 = (Object)new_AST_Info((Type_String)string28849,(Type_String)string28848, (Type_SmallInt)smallint21612, (Type_SmallInt)smallint21613);
((AST_Method)method25629)->info = (AST_Info)info4066;
methodclosure25627 = (Object)new_Runtime_MethodClosure(method25629);
store_method((Type_Class)HEADER(Metaclass), (Type_Symbol)symbol35621, (Runtime_MethodClosure)methodclosure25627);


// a PInternalMetaclass P#Metaclass>>isPinocchioInternalClass
//isPinocchioInternalClass
// 	^ true
method25630 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
string28850 = (Object)new_Type_String(L"isPinocchioInternalClass");
string28851 = (Object)new_Type_String(L"isPinocchioInternalClass\n\t^ true");
smallint21614 = (Object)new_Type_SmallInt(-1);
smallint21615 = (Object)new_Type_SmallInt(-1);
info4067 = (Object)new_AST_Info((Type_String)string28851,(Type_String)string28850, (Type_SmallInt)smallint21614, (Type_SmallInt)smallint21615);
((AST_Method)method25630)->info = (AST_Info)info4067;
methodclosure25628 = (Object)new_Runtime_MethodClosure(method25630);
store_method((Type_Class)HEADER(Metaclass), (Type_Symbol)symbol35508, (Runtime_MethodClosure)methodclosure25628);


// a PInternalMetaclass P#Metaclass>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send186045 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28852 = (Object)new_Type_String(L"pInstVarNames");
string28853 = (Object)new_Type_String(L"pInstVarNames \n\t^ OrderedCollection new.");
smallint21616 = (Object)new_Type_SmallInt(-1);
smallint21617 = (Object)new_Type_SmallInt(-1);
info4068 = (Object)new_AST_Info((Type_String)string28853,(Type_String)string28852, (Type_SmallInt)smallint21616, (Type_SmallInt)smallint21617);
((AST_Send)send186045)->info = (AST_Info)info4068;
method25631 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186045);
((AST_Method)method25631)->info = (AST_Info)info4068;
symbol35617 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
methodclosure25629 = (Object)new_Runtime_MethodClosure(method25631);
store_method((Type_Class)HEADER(Metaclass), (Type_Symbol)symbol35617, (Runtime_MethodClosure)methodclosure25629);


// a PInternalMetaclass P#Metaclass>>newWithPClass:
//newWithPClass: aPInternalClass
// 	^ self new  
// 		pclass: aPInternalClass.
localvariable26943 = (Object)new_AST_Variable_named(L"aPInternalClass");
array21604 = (Object)new_Type_Array_with(1, (Object)localvariable26943);
// new
send186046 = (Object)new_AST_Send((Object)Self, (Object)symbol35612, 0);
string28854 = (Object)new_Type_String(L"newWithPClass:");
string28855 = (Object)new_Type_String(L"newWithPClass: aPInternalClass\n\t^ self new  \n\t\tpclass: aPInternalClass.");
smallint21618 = (Object)new_Type_SmallInt(-1);
smallint21619 = (Object)new_Type_SmallInt(-1);
info4069 = (Object)new_AST_Info((Type_String)string28855,(Type_String)string28854, (Type_SmallInt)smallint21618, (Type_SmallInt)smallint21619);
((AST_Send)send186046)->info = (AST_Info)info4069;
symbol36066 = (Object)new_Type_Symbol_cached(L"pclass:");
// pclass:
send186047 = (Object)new_AST_Send((Object)send186046, (Object)symbol36066, 1, (Object)localvariable26943);
((AST_Send)send186047)->info = (AST_Info)info4069;
method25632 = (Object)new_AST_Method_with((Type_Array)array21604, (Type_Array)empty_Type_Array, 1, send186047);
((AST_Method)method25632)->info = (AST_Info)info4069;
symbol35620 = (Object)new_Type_Symbol_cached(L"newWithPClass:");
methodclosure25630 = (Object)new_Runtime_MethodClosure(method25632);
store_method((Type_Class)HEADER(Metaclass), (Type_Symbol)symbol35620, (Runtime_MethodClosure)methodclosure25630);

classreference4864 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send186048 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
string28856 = (Object)new_Type_String(L"new");
string28857 = (Object)new_Type_String(L"new\n\t\"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable.\"\n\n\t^ self basicNew initialize\n");
smallint21620 = (Object)new_Type_SmallInt(-1);
smallint21621 = (Object)new_Type_SmallInt(-1);
info4070 = (Object)new_AST_Info((Type_String)string28857,(Type_String)string28856, (Type_SmallInt)smallint21620, (Type_SmallInt)smallint21621);
((AST_Send)send186048)->info = (AST_Info)info4070;
// initialize
send186049 = (Object)new_AST_Send((Object)send186048, (Object)symbol35517, 0);
((AST_Send)send186049)->info = (AST_Info)info4070;
method25633 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186049);
((AST_Method)method25633)->info = (AST_Info)info4070;
methodclosure25631 = (Object)new_Runtime_MethodClosure(method25633);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35612, (Runtime_MethodClosure)methodclosure25631);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable26944 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable26945 = (Object)new_AST_Variable_named(L"instVars");
localvariable26946 = (Object)new_AST_Variable_named(L"instVar");
array21605 = (Object)new_Type_Array_with(3, (Object)localvariable26944, (Object)localvariable26945, (Object)localvariable26946);
symbol35604 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
// parentInstVariables
send186050 = (Object)new_AST_Send((Object)Self, (Object)symbol35604, 0);
string28858 = (Object)new_Type_String(L"instVariables");
string28859 = (Object)new_Type_String(L"instVariables\n\t| instVarNames instVars instVar |\n\tinstVars := self parentInstVariables.\n\n\tself pInstVarNames do: [ :each |\n\t\tinstVars do: [ :var|\n\t\t\tvar name = each ifTrue: [\n\t\t\t\tself error: \'Double Declaration of \"\', each, \'\"\'\n\t\t\t].\n\t\t].\n\t\tinstVar := PInstanceVariable named: each.\n\t\tinstVar localId: instVars size.\n\t\tinstVars add: instVar.\n\t].\n\t^ instVars.");
smallint21622 = (Object)new_Type_SmallInt(-1);
smallint21623 = (Object)new_Type_SmallInt(-1);
info4071 = (Object)new_AST_Info((Type_String)string28859,(Type_String)string28858, (Type_SmallInt)smallint21622, (Type_SmallInt)smallint21623);
((AST_Send)send186050)->info = (AST_Info)info4071;
assign22810 = (Object)new_AST_Assign((Object)localvariable26945, (Object)send186050);
// pInstVarNames
send186051 = (Object)new_AST_Send((Object)Self, (Object)symbol35617, 0);
((AST_Send)send186051)->info = (AST_Info)info4071;
localvariable26947 = (Object)new_AST_Variable_named(L"each");
array21606 = (Object)new_Type_Array_with(1, (Object)localvariable26947);
localvariable26948 = (Object)new_AST_Variable_named(L"var");
array21607 = (Object)new_Type_Array_with(1, (Object)localvariable26948);
// name
send186052 = (Object)new_AST_Send((Object)localvariable26948, (Object)SMB_name, 0);
((AST_Send)send186052)->info = (AST_Info)info4071;
// =
send186053 = (Object)new_AST_Send((Object)send186052, (Object)SMB__equal, 1, (Object)localvariable26947);
((AST_Send)send186053)->info = (AST_Info)info4071;
string28860 = (Object)new_Type_String(L"Double Declaration of \"");
constant36121 = (Object)new_AST_Constant((Object)string28860);
// ,
send186054 = (Object)new_AST_Send((Object)constant36121, (Object)SMB__concat, 1, (Object)localvariable26947);
((AST_Send)send186054)->info = (AST_Info)info4071;
string28861 = (Object)new_Type_String(L"\"");
constant36122 = (Object)new_AST_Constant((Object)string28861);
// ,
send186055 = (Object)new_AST_Send((Object)send186054, (Object)SMB__concat, 1, (Object)constant36122);
((AST_Send)send186055)->info = (AST_Info)info4071;
// error:
send186056 = (Object)new_AST_Send((Object)Self, (Object)symbol35949, 1, (Object)send186055);
((AST_Send)send186056)->info = (AST_Info)info4071;
block12921 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send186056);
// ifTrue:
send186057 = (Object)new_AST_Send((Object)send186053, (Object)SMB_ifTrue_, 1, (Object)block12921);
((AST_Send)send186057)->info = (AST_Info)info4071;
block12922 = (Object)new_AST_Block_with((Type_Array)array21607, (Type_Array)empty_Type_Array, 2, 1, send186057);
// do:
send186058 = (Object)new_AST_Send((Object)localvariable26945, (Object)symbol35642, 1, (Object)block12922);
((AST_Send)send186058)->info = (AST_Info)info4071;
// named:
send186059 = (Object)new_AST_Send((Object)classreference4809, (Object)symbol35855, 1, (Object)localvariable26947);
((AST_Send)send186059)->info = (AST_Info)info4071;
assign22811 = (Object)new_AST_Assign((Object)localvariable26946, (Object)send186059);
// size
send186060 = (Object)new_AST_Send((Object)localvariable26945, (Object)SMB_size, 0);
((AST_Send)send186060)->info = (AST_Info)info4071;
// localId:
send186061 = (Object)new_AST_Send((Object)localvariable26946, (Object)symbol35871, 1, (Object)send186060);
((AST_Send)send186061)->info = (AST_Info)info4071;
// add:
send186062 = (Object)new_AST_Send((Object)localvariable26945, (Object)symbol35696, 1, (Object)localvariable26946);
((AST_Send)send186062)->info = (AST_Info)info4071;
block12923 = (Object)new_AST_Block_with((Type_Array)array21606, (Type_Array)empty_Type_Array, 1, 4, send186058, assign22811, send186061, send186062);
// do:
send186063 = (Object)new_AST_Send((Object)send186051, (Object)symbol35642, 1, (Object)block12923);
((AST_Send)send186063)->info = (AST_Info)info4071;
method25634 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21605, 3, assign22810, send186063, localvariable26945);
((AST_Method)method25634)->info = (AST_Info)info4071;
symbol35616 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure25632 = (Object)new_Runtime_MethodClosure(method25634);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35616, (Runtime_MethodClosure)methodclosure25632);


// Behavior>>methods
//methods
// 	^ methods
instancevariable6062 = (Object)new_AST_InstVariable(2, L"methods");
method25635 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6062);
string28862 = (Object)new_Type_String(L"methods");
string28863 = (Object)new_Type_String(L"methods\n\t^ methods");
smallint21624 = (Object)new_Type_SmallInt(-1);
smallint21625 = (Object)new_Type_SmallInt(-1);
info4072 = (Object)new_AST_Info((Type_String)string28863,(Type_String)string28862, (Type_SmallInt)smallint21624, (Type_SmallInt)smallint21625);
((AST_Method)method25635)->info = (AST_Info)info4072;
symbol35605 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure25633 = (Object)new_Runtime_MethodClosure(method25635);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35605, (Runtime_MethodClosure)methodclosure25633);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable6063 = (Object)new_AST_InstVariable(1, L"superclass");
method25636 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6063);
string28864 = (Object)new_Type_String(L"superclass");
string28865 = (Object)new_Type_String(L"superclass\n\t^ superclass");
smallint21626 = (Object)new_Type_SmallInt(-1);
smallint21627 = (Object)new_Type_SmallInt(-1);
info4073 = (Object)new_AST_Info((Type_String)string28865,(Type_String)string28864, (Type_SmallInt)smallint21626, (Type_SmallInt)smallint21627);
((AST_Method)method25636)->info = (AST_Info)info4073;
symbol35613 = (Object)new_Type_Symbol_cached(L"superclass");
methodclosure25634 = (Object)new_Runtime_MethodClosure(method25636);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35613, (Runtime_MethodClosure)methodclosure25634);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send186064 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28866 = (Object)new_Type_String(L"pInstVarNames");
string28867 = (Object)new_Type_String(L"pInstVarNames \n\t^ OrderedCollection new.");
smallint21628 = (Object)new_Type_SmallInt(-1);
smallint21629 = (Object)new_Type_SmallInt(-1);
info4074 = (Object)new_AST_Info((Type_String)string28867,(Type_String)string28866, (Type_SmallInt)smallint21628, (Type_SmallInt)smallint21629);
((AST_Send)send186064)->info = (AST_Info)info4074;
method25637 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186064);
((AST_Method)method25637)->info = (AST_Info)info4074;
methodclosure25635 = (Object)new_Runtime_MethodClosure(method25637);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35617, (Runtime_MethodClosure)methodclosure25635);


// Behavior>>canUnderstand:
//canUnderstand: selector
// 	(self includesSelector: selector) ifTrue: [^true].
// 	superclass == nil ifTrue: [^false].
// 	^superclass canUnderstand: selector
localvariable26949 = (Object)new_AST_Variable_named(L"selector");
array21608 = (Object)new_Type_Array_with(1, (Object)localvariable26949);
variable1600 = (Object)new_AST_Variable_named(L"return");
array21609 = (Object)new_Type_Array_with(1, (Object)variable1600);
symbol35614 = (Object)new_Type_Symbol_cached(L"includesSelector:");
// includesSelector:
send186065 = (Object)new_AST_Send((Object)Self, (Object)symbol35614, 1, (Object)localvariable26949);
string28868 = (Object)new_Type_String(L"canUnderstand:");
string28869 = (Object)new_Type_String(L"canUnderstand: selector\n\t(self includesSelector: selector) ifTrue: [^true].\n\tsuperclass == nil ifTrue: [^false].\n\t^superclass canUnderstand: selector");
smallint21630 = (Object)new_Type_SmallInt(-1);
smallint21631 = (Object)new_Type_SmallInt(-1);
info4075 = (Object)new_AST_Info((Type_String)string28869,(Type_String)string28868, (Type_SmallInt)smallint21630, (Type_SmallInt)smallint21631);
((AST_Send)send186065)->info = (AST_Info)info4075;
// escape:
send186066 = (Object)new_AST_Send((Object)variable1600, (Object)SMB_escape_, 1, (Object)True_Const);
((AST_Send)send186066)->info = (AST_Info)info4075;
block12924 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send186066);
// ifTrue:
send186067 = (Object)new_AST_Send((Object)send186065, (Object)SMB_ifTrue_, 1, (Object)block12924);
((AST_Send)send186067)->info = (AST_Info)info4075;
// ==
send186068 = (Object)new_AST_Send((Object)instancevariable6063, (Object)SMB__pequal, 1, (Object)Nil_Const);
((AST_Send)send186068)->info = (AST_Info)info4075;
// escape:
send186069 = (Object)new_AST_Send((Object)variable1600, (Object)SMB_escape_, 1, (Object)False_Const);
((AST_Send)send186069)->info = (AST_Info)info4075;
block12925 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send186069);
// ifTrue:
send186070 = (Object)new_AST_Send((Object)send186068, (Object)SMB_ifTrue_, 1, (Object)block12925);
((AST_Send)send186070)->info = (AST_Info)info4075;
// canUnderstand:
send186071 = (Object)new_AST_Send((Object)instancevariable6063, (Object)symbol35606, 1, (Object)localvariable26949);
((AST_Send)send186071)->info = (AST_Info)info4075;
block12926 = (Object)new_AST_Block_with((Type_Array)array21609, (Type_Array)empty_Type_Array, 1, 3, send186067, send186070, send186071);
// on:
send186072 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block12926);
method25638 = (Object)new_AST_Method_with((Type_Array)array21608, (Type_Array)empty_Type_Array, 1, send186072);
((AST_Method)method25638)->info = (AST_Info)info4075;
methodclosure25636 = (Object)new_Runtime_MethodClosure(method25638);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35606, (Runtime_MethodClosure)methodclosure25636);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable26950 = (Object)new_AST_Variable_named(L"sizeRequested");
array21610 = (Object)new_Type_Array_with(1, (Object)localvariable26950);
// basicNew:
send186073 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable26950);
string28870 = (Object)new_Type_String(L"new:");
string28871 = (Object)new_Type_String(L"new: sizeRequested \n\t\"Answer an initialized instance of this class with the number of indexable\n\tvariables specified by the argument, sizeRequested.\"\n\n\t^ (self basicNew: sizeRequested) initialize  ");
smallint21632 = (Object)new_Type_SmallInt(-1);
smallint21633 = (Object)new_Type_SmallInt(-1);
info4076 = (Object)new_AST_Info((Type_String)string28871,(Type_String)string28870, (Type_SmallInt)smallint21632, (Type_SmallInt)smallint21633);
((AST_Send)send186073)->info = (AST_Info)info4076;
// initialize
send186074 = (Object)new_AST_Send((Object)send186073, (Object)symbol35517, 0);
((AST_Send)send186074)->info = (AST_Info)info4076;
method25639 = (Object)new_AST_Method_with((Type_Array)array21610, (Type_Array)empty_Type_Array, 1, send186074);
((AST_Method)method25639)->info = (AST_Info)info4076;
methodclosure25637 = (Object)new_Runtime_MethodClosure(method25639);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35602, (Runtime_MethodClosure)methodclosure25637);


// Behavior>>includesSelector:
//includesSelector: selector
// 	^ self methodDict includesKey: selector
localvariable26951 = (Object)new_AST_Variable_named(L"selector");
array21611 = (Object)new_Type_Array_with(1, (Object)localvariable26951);
symbol35618 = (Object)new_Type_Symbol_cached(L"methodDict");
// methodDict
send186075 = (Object)new_AST_Send((Object)Self, (Object)symbol35618, 0);
string28872 = (Object)new_Type_String(L"includesSelector:");
string28873 = (Object)new_Type_String(L"includesSelector: selector\n\t^ self methodDict includesKey: selector");
smallint21634 = (Object)new_Type_SmallInt(-1);
smallint21635 = (Object)new_Type_SmallInt(-1);
info4077 = (Object)new_AST_Info((Type_String)string28873,(Type_String)string28872, (Type_SmallInt)smallint21634, (Type_SmallInt)smallint21635);
((AST_Send)send186075)->info = (AST_Info)info4077;
// includesKey:
send186076 = (Object)new_AST_Send((Object)send186075, (Object)symbol35889, 1, (Object)localvariable26951);
((AST_Send)send186076)->info = (AST_Info)info4077;
method25640 = (Object)new_AST_Method_with((Type_Array)array21611, (Type_Array)empty_Type_Array, 1, send186076);
((AST_Method)method25640)->info = (AST_Info)info4077;
methodclosure25638 = (Object)new_Runtime_MethodClosure(method25640);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35614, (Runtime_MethodClosure)methodclosure25638);


// Behavior>>methodDict
//methodDict
// 	^ methods
method25641 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6062);
string28874 = (Object)new_Type_String(L"methodDict");
string28875 = (Object)new_Type_String(L"methodDict\n\t^ methods");
smallint21636 = (Object)new_Type_SmallInt(-1);
smallint21637 = (Object)new_Type_SmallInt(-1);
info4078 = (Object)new_AST_Info((Type_String)string28875,(Type_String)string28874, (Type_SmallInt)smallint21636, (Type_SmallInt)smallint21637);
((AST_Method)method25641)->info = (AST_Info)info4078;
methodclosure25639 = (Object)new_Runtime_MethodClosure(method25641);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35618, (Runtime_MethodClosure)methodclosure25639);


// Behavior>>methods:
//methods: anObject
// 	methods := anObject
localvariable26952 = (Object)new_AST_Variable_named(L"anObject");
array21612 = (Object)new_Type_Array_with(1, (Object)localvariable26952);
assign22812 = (Object)new_AST_Assign((Object)instancevariable6062, (Object)localvariable26952);
method25642 = (Object)new_AST_Method_with((Type_Array)array21612, (Type_Array)empty_Type_Array, 2, assign22812, Self);
string28876 = (Object)new_Type_String(L"methods:");
string28877 = (Object)new_Type_String(L"methods: anObject\n\tmethods := anObject");
smallint21638 = (Object)new_Type_SmallInt(-1);
smallint21639 = (Object)new_Type_SmallInt(-1);
info4079 = (Object)new_AST_Info((Type_String)string28877,(Type_String)string28876, (Type_SmallInt)smallint21638, (Type_SmallInt)smallint21639);
((AST_Method)method25642)->info = (AST_Info)info4079;
symbol35603 = (Object)new_Type_Symbol_cached(L"methods:");
methodclosure25640 = (Object)new_Runtime_MethodClosure(method25642);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35603, (Runtime_MethodClosure)methodclosure25640);


// Behavior>>layout
//layout
// 	^ layout
instancevariable6064 = (Object)new_AST_InstVariable(0, L"layout");
method25643 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable6064);
string28878 = (Object)new_Type_String(L"layout");
string28879 = (Object)new_Type_String(L"layout\n\t^ layout");
smallint21640 = (Object)new_Type_SmallInt(-1);
smallint21641 = (Object)new_Type_SmallInt(-1);
info4080 = (Object)new_AST_Info((Type_String)string28879,(Type_String)string28878, (Type_SmallInt)smallint21640, (Type_SmallInt)smallint21641);
((AST_Method)method25643)->info = (AST_Info)info4080;
methodclosure25641 = (Object)new_Runtime_MethodClosure(method25643);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35607, (Runtime_MethodClosure)methodclosure25641);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
// superclass
send186077 = (Object)new_AST_Send((Object)Self, (Object)symbol35613, 0);
string28880 = (Object)new_Type_String(L"hasSuperclass");
string28881 = (Object)new_Type_String(L"hasSuperclass\n\t^ self superclass ~= PNil nil");
smallint21642 = (Object)new_Type_SmallInt(-1);
smallint21643 = (Object)new_Type_SmallInt(-1);
info4081 = (Object)new_AST_Info((Type_String)string28881,(Type_String)string28880, (Type_SmallInt)smallint21642, (Type_SmallInt)smallint21643);
((AST_Send)send186077)->info = (AST_Info)info4081;
symbol36067 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send186078 = (Object)new_AST_Send((Object)classreference4795, (Object)symbol36067, 0);
((AST_Send)send186078)->info = (AST_Info)info4081;
// ~=
send186079 = (Object)new_AST_Send((Object)send186077, (Object)symbol35521, 1, (Object)send186078);
((AST_Send)send186079)->info = (AST_Info)info4081;
method25644 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send186079);
((AST_Method)method25644)->info = (AST_Info)info4081;
symbol35611 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
methodclosure25642 = (Object)new_Runtime_MethodClosure(method25644);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35611, (Runtime_MethodClosure)methodclosure25642);


// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable26953 = (Object)new_AST_Variable_named(L"instVars");
array21613 = (Object)new_Type_Array_with(1, (Object)localvariable26953);
// new
send186080 = (Object)new_AST_Send((Object)classreference4804, (Object)symbol35612, 0);
string28882 = (Object)new_Type_String(L"parentInstVariables");
string28883 = (Object)new_Type_String(L"parentInstVariables\n\t|instVars |\n\tinstVars := OrderedCollection new.\n\tself hasSuperclass ifTrue: [\n\t\tinstVars addAll: self superclass layout.\n\t] ifFalse: [ \n\t\t\"Transcript show: self sclass name, \' superclass was nil\'; cr \"\n\t].\n\t^ instVars");
smallint21644 = (Object)new_Type_SmallInt(-1);
smallint21645 = (Object)new_Type_SmallInt(-1);
info4082 = (Object)new_AST_Info((Type_String)string28883,(Type_String)string28882, (Type_SmallInt)smallint21644, (Type_SmallInt)smallint21645);
((AST_Send)send186080)->info = (AST_Info)info4082;
assign22813 = (Object)new_AST_Assign((Object)localvariable26953, (Object)send186080);
// hasSuperclass
send186081 = (Object)new_AST_Send((Object)Self, (Object)symbol35611, 0);
((AST_Send)send186081)->info = (AST_Info)info4082;
// superclass
send186082 = (Object)new_AST_Send((Object)Self, (Object)symbol35613, 0);
((AST_Send)send186082)->info = (AST_Info)info4082;
// layout
send186083 = (Object)new_AST_Send((Object)send186082, (Object)symbol35607, 0);
((AST_Send)send186083)->info = (AST_Info)info4082;
// addAll:
send186084 = (Object)new_AST_Send((Object)localvariable26953, (Object)symbol35878, 1, (Object)send186083);
((AST_Send)send186084)->info = (AST_Info)info4082;
block12927 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send186084);
block12928 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send186085 = (Object)new_AST_Send((Object)send186081, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block12927, (Object)block12928);
((AST_Send)send186085)->info = (AST_Info)info4082;
method25645 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array21613, 3, assign22813, send186085, localvariable26953);
((AST_Method)method25645)->info = (AST_Info)info4082;
methodclosure25643 = (Object)new_Runtime_MethodClosure(method25645);
store_method((Type_Class)Behavior, (Type_Symbol)symbol35604, (Runtime_MethodClosure)methodclosure25643);


// a PInternalMetaclass P#Behavior>>pinocchioPackage
//pinocchioPackage
// 	self halt.
// halt
send186086 = (Object)new_AST_Send((Object)Self, (Object)symbol36016, 0);
string28884 = (Object)new_Type_String(L"pinocchioPackage");
string28885 = (Object)new_Type_String(L"pinocchioPackage\n\tself halt.");
smallint21646 = (Object)new_Type_SmallInt(-1);
smallint21647 = (Object)new_Type_SmallInt(-1);
info4083 = (Object)new_AST_Info((Type_String)string28885,(Type_String)string28884, (Type_SmallInt)smallint21646, (Type_SmallInt)smallint21647);
((AST_Send)send186086)->info = (AST_Info)info4083;
method25646 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send186086, Self);
((AST_Method)method25646)->info = (AST_Info)info4083;
symbol35601 = (Object)new_Type_Symbol_cached(L"pinocchioPackage");
methodclosure25644 = (Object)new_Runtime_MethodClosure(method25646);
store_method((Type_Class)HEADER(Behavior), (Type_Symbol)symbol35601, (Runtime_MethodClosure)methodclosure25644);

classreference4865 = (Object)new_Organization_ClassReference((Type_Class)class4045);
classreference4866 = (Object)new_Organization_ClassReference((Type_Class)class4047);
classreference4867 = (Object)new_Organization_ClassReference((Type_Class)class4046);

// PositionableStream>>on:
//on: aCollection
// 
// 	collection := aCollection.
// 	readLimit := aCollection size.
// 	position := 0.
// 	self reset
localvariable26954 = (Object)new_AST_Variable_named(L"aCollection");
array21614 = (Object)new_Type_Array_with(1, (Object)localvariable26954);
assign22814 = (Object)new_AST_Assign((Object)instancevariable6005, (Object)localvariable26954);
// size
send186087 = (Object)new_AST_Send((Object)localvariable26954, (Object)SMB_size, 0);
string28886 = (Object)new_Type_String(L"on:");
string28887 = (Object)new_Type_String(L"on: aCollection\n\n\tcollection := aCollection.\n\treadLimit := aCollection size.\n\tposition := 0.\n\tself reset");
smallint21648 = (Object)new_Type_SmallInt(-1);
smallint21649 = (Object)new_Type_SmallInt(-1);
info4084 = (Object)new_AST_Info((Type_String)string28887,(Type_String)string28886, (Type_SmallInt)smallint21648, (Type_SmallInt)smallint21649);
((AST_Send)send186087)->info = (AST_Info)info4084;
assign22815 = (Object)new_AST_Assign((Object)instancevariable6007, (Object)send186087);
smallint21650 = (Object)new_Type_SmallInt(0);
constant36123 = (Object)new_AST_Constant((Object)smallint21650);
assign22816 = (Object)new_AST_Assign((Object)instancevariable6006, (Object)constant36123);
// reset
send186088 = (Object)new_AST_Send((Object)Self, (Object)symbol35664, 0);
((AST_Send)send186088)->info = (AST_Info)info4084;
method25647 = (Object)new_AST_Method_with((Type_Array)array21614, (Type_Array)empty_Type_Array, 5, assign22814, assign22815, assign22816, send186088, Self);
((AST_Method)method25647)->info = (AST_Info)info4084;
methodclosure25645 = (Object)new_Runtime_MethodClosure(method25647);
store_method((Type_Class)class4046, (Type_Symbol)SMB_on_, (Runtime_MethodClosure)methodclosure25645);


// PositionableStream>>reset
//reset
// 	"Set the receiver's position to the beginning of the sequence of objects."
// 
// 	position := 0
smallint21651 = (Object)new_Type_SmallInt(0);
constant36124 = (Object)new_AST_Constant((Object)smallint21651);
assign22817 = (Object)new_AST_Assign((Object)instancevariable6006, (Object)constant36124);
method25648 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign22817, Self);
string28888 = (Object)new_Type_String(L"reset");
string28889 = (Object)new_Type_String(L"reset\n\t\"Set the receiver\'s position to the beginning of the sequence of objects.\"\n\n\tposition := 0");
smallint21652 = (Object)new_Type_SmallInt(-1);
smallint21653 = (Object)new_Type_SmallInt(-1);
info4085 = (Object)new_AST_Info((Type_String)string28889,(Type_String)string28888, (Type_SmallInt)smallint21652, (Type_SmallInt)smallint21653);
((AST_Method)method25648)->info = (AST_Info)info4085;
methodclosure25646 = (Object)new_Runtime_MethodClosure(method25648);
store_method((Type_Class)class4046, (Type_Symbol)symbol35664, (Runtime_MethodClosure)methodclosure25646);

classreference4868 = (Object)new_Organization_ClassReference((Type_Class)class4085);
classreference4869 = (Object)new_Organization_ClassReference((Type_Class)class4084);
classreference4870 = (Object)new_Organization_ClassReference((Type_Class)class4081);
}


/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send186089 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35584, 0);
Object result = (Object)Eval((Object)send186089);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send186090 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35579, 0);
Object result = (Object)Eval((Object)send186090);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send186091 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35532, 0);
Object result = (Object)Eval((Object)send186091);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send186092 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35585, 0);
Object result = (Object)Eval((Object)send186092);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send186093 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35589, 0);
Object result = (Object)Eval((Object)send186093);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes ((abc + ghi) * c) "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send186094 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35552, 0);
Object result = (Object)Eval((Object)send186094);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression2)
/*
testBinaryExpression2
// 	" becomes ((abc | ghi) <= c) "
// 	| string result parser |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'a <<<<<<<< ghi <= c <= d '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '<='.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'd'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '<='.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '<<<<<<<<'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'a'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 24
*/
// testBinaryExpression2
Object send186095 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35588, 0);
Object result = (Object)Eval((Object)send186095);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send186096 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35547, 0);
Object result = (Object)Eval((Object)send186096);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send186097 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35561, 0);
Object result = (Object)Eval((Object)send186097);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send186098 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35581, 0);
Object result = (Object)Eval((Object)send186098);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send186099 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35574, 0);
Object result = (Object)Eval((Object)send186099);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send186100 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35536, 0);
Object result = (Object)Eval((Object)send186100);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send186101 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35560, 0);
Object result = (Object)Eval((Object)send186101);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send186102 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35541, 0);
Object result = (Object)Eval((Object)send186102);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send186103 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35580, 0);
Object result = (Object)Eval((Object)send186103);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send186104 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35598, 0);
Object result = (Object)Eval((Object)send186104);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send186105 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35591, 0);
Object result = (Object)Eval((Object)send186105);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send186106 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35594, 0);
Object result = (Object)Eval((Object)send186106);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send186107 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35557, 0);
Object result = (Object)Eval((Object)send186107);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send186108 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35549, 0);
Object result = (Object)Eval((Object)send186108);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send186109 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35565, 0);
Object result = (Object)Eval((Object)send186109);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send186110 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35587, 0);
Object result = (Object)Eval((Object)send186110);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send186111 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35550, 0);
Object result = (Object)Eval((Object)send186111);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send186112 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35554, 0);
Object result = (Object)Eval((Object)send186112);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send186113 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35572, 0);
Object result = (Object)Eval((Object)send186113);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send186114 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35592, 0);
Object result = (Object)Eval((Object)send186114);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send186115 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35562, 0);
Object result = (Object)Eval((Object)send186115);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send186116 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35563, 0);
Object result = (Object)Eval((Object)send186116);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send186117 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35545, 0);
Object result = (Object)Eval((Object)send186117);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send186118 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35551, 0);
Object result = (Object)Eval((Object)send186118);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send186119 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35567, 0);
Object result = (Object)Eval((Object)send186119);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send186120 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35576, 0);
Object result = (Object)Eval((Object)send186120);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send186121 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35596, 0);
Object result = (Object)Eval((Object)send186121);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send186122 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35555, 0);
Object result = (Object)Eval((Object)send186122);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send186123 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35569, 0);
Object result = (Object)Eval((Object)send186123);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send186124 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35542, 0);
Object result = (Object)Eval((Object)send186124);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send186125 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35599, 0);
Object result = (Object)Eval((Object)send186125);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send186126 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35593, 0);
Object result = (Object)Eval((Object)send186126);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send186127 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35595, 0);
Object result = (Object)Eval((Object)send186127);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send186128 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35564, 0);
Object result = (Object)Eval((Object)send186128);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send186129 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35543, 0);
Object result = (Object)Eval((Object)send186129);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send186130 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35582, 0);
Object result = (Object)Eval((Object)send186130);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send186131 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35568, 0);
Object result = (Object)Eval((Object)send186131);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send186132 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35559, 0);
Object result = (Object)Eval((Object)send186132);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send186133 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35575, 0);
Object result = (Object)Eval((Object)send186133);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send186134 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35548, 0);
Object result = (Object)Eval((Object)send186134);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send186135 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol35584, 0);
Eval((Object)send186135);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class4034;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})
