// Auto generated Tests from SCParserTest

// Test Object to put test methods in
Type_Class SCParserTest_TestCase_Class;
Object SCParserTest_test_Class_Instance;
// Test Method symbol
Type_Symbol SCParserTest_SMB_runTestCase;
Object objectlayout5047;
Object instancevariable3974;
Object instancevariable3975;
Object instancevariable3976;
Object instancevariable3977;
Object instancevariable3978;
Object instancevariable3979;
Object symbol21790;
Object objectlayout5048;
Object instancevariable3980;
Object class2710;
Object metaclass2710;
Object objectlayout5049;
Object symbol21966;
Object class2711;
Object metaclass2711;
Object objectlayout5050;
Object symbol21948;
Object objectlayout5051;
Object instancevariable3981;
Object instancevariable3982;
Object instancevariable3983;
Object class2712;
Object metaclass2712;
Object objectlayout5052;
Object symbol22157;
Object objectlayout5053;
Object instancevariable3984;
Object instancevariable3985;
Object class2713;
Object metaclass2713;
Object objectlayout5054;
Object symbol21965;
Object class2714;
Object metaclass2714;
Object objectlayout5055;
Object symbol21964;
Object class2715;
Object metaclass2715;
Object objectlayout5056;
Object symbol21817;
Object objectlayout5057;
Object instancevariable3986;
Object instancevariable3987;
Object instancevariable3988;
Object class2716;
Object metaclass2716;
Object objectlayout5058;
Object symbol21942;
Object class2717;
Object metaclass2717;
Object objectlayout5059;
Object symbol21941;
Object objectlayout5060;
Object instancevariable3989;
Object instancevariable3990;
Object instancevariable3991;
Object class2718;
Object metaclass2718;
Object objectlayout5061;
Object symbol21940;
Object objectlayout5062;
Object class2719;
Object metaclass2719;
Object objectlayout5063;
Object instancevariable3992;
Object symbol21953;
Object objectlayout5064;
Object instancevariable3993;
Object instancevariable3994;
Object instancevariable3995;
Object class2720;
Object metaclass2720;
Object objectlayout5065;
Object symbol22145;
Object objectlayout5066;
Object instancevariable3996;
Object instancevariable3997;
Object instancevariable3998;
Object class2721;
Object metaclass2721;
Object objectlayout5067;
Object symbol21997;
Object objectlayout5068;
Object instancevariable3999;
Object class2722;
Object metaclass2722;
Object objectlayout5069;
Object symbol21897;
Object objectlayout5070;
Object class2723;
Object metaclass2723;
Object objectlayout5071;
Object symbol21932;
Object objectlayout5072;
Object instancevariable4000;
Object class2724;
Object metaclass2724;
Object objectlayout5073;
Object symbol21891;
Object class2725;
Object metaclass2725;
Object objectlayout5074;
Object instancevariable4001;
Object symbol21892;
Object class2726;
Object metaclass2726;
Object objectlayout5075;
Object symbol22168;
Object class2727;
Object metaclass2727;
Object objectlayout5076;
Object symbol22163;
Object objectlayout5077;
Object instancevariable4002;
Object class2728;
Object metaclass2728;
Object objectlayout5078;
Object symbol22110;
Object objectlayout5079;
Object instancevariable4003;
Object instancevariable4004;
Object class2729;
Object metaclass2729;
Object objectlayout5080;
Object symbol21920;
Object objectlayout5081;
Object instancevariable4005;
Object class2730;
Object metaclass2730;
Object objectlayout5082;
Object symbol22164;
Object class2731;
Object metaclass2731;
Object objectlayout5083;
Object instancevariable4006;
Object instancevariable4007;
Object symbol21872;
Object objectlayout5084;
Object instancevariable4008;
Object instancevariable4009;
Object instancevariable4010;
Object instancevariable4011;
Object class2732;
Object metaclass2732;
Object objectlayout5085;
Object symbol22114;
Object objectlayout5086;
Object instancevariable4012;
Object instancevariable4013;
Object class2733;
Object metaclass2733;
Object objectlayout5087;
Object symbol22125;
Object objectlayout5088;
Object class2734;
Object metaclass2734;
Object objectlayout5089;
Object symbol22118;
Object objectlayout5090;
Object instancevariable4014;
Object instancevariable4015;
Object class2735;
Object metaclass2735;
Object objectlayout5091;
Object symbol21917;
Object objectlayout5092;
Object instancevariable4016;
Object instancevariable4017;
Object class2736;
Object metaclass2736;
Object objectlayout5093;
Object symbol21806;
Object objectlayout5094;
Object instancevariable4018;
Object instancevariable4019;
Object class2737;
Object metaclass2737;
Object objectlayout5095;
Object symbol22153;
Object objectlayout5096;
Object instancevariable4020;
Object class2738;
Object metaclass2738;
Object objectlayout5097;
Object symbol21922;
Object objectlayout5098;
Object instancevariable4021;
Object class2739;
Object metaclass2739;
Object objectlayout5099;
Object symbol22127;
Object objectlayout5100;
Object instancevariable4022;
Object instancevariable4023;
Object class2740;
Object metaclass2740;
Object objectlayout5101;
Object symbol21952;
Object objectlayout5102;
Object class2741;
Object metaclass2741;
Object objectlayout5103;
Object symbol21808;
Object objectlayout5104;
Object instancevariable4024;
Object class2742;
Object metaclass2742;
Object objectlayout5105;
Object symbol22008;
Object objectlayout5106;
Object instancevariable4025;
Object class2743;
Object metaclass2743;
Object objectlayout5107;
Object symbol21869;
Object objectlayout5108;
Object instancevariable4026;
Object class2744;
Object metaclass2744;
Object objectlayout5109;
Object symbol21836;
Object objectlayout5110;
Object instancevariable4027;
Object class2745;
Object metaclass2745;
Object objectlayout5111;
Object symbol22002;
Object objectlayout5112;
Object class2746;
Object metaclass2746;
Object objectlayout5113;
Object symbol21820;
Object objectlayout5114;
Object instancevariable4028;
Object instancevariable4029;
Object class2747;
Object metaclass2747;
Object objectlayout5115;
Object symbol21812;
Object objectlayout5116;
Object instancevariable4030;
Object instancevariable4031;
Object class2748;
Object metaclass2748;
Object objectlayout5117;
Object symbol21856;
Object objectlayout5118;
Object instancevariable4032;
Object instancevariable4033;
Object instancevariable4034;
Object class2749;
Object metaclass2749;
Object objectlayout5119;
Object symbol21860;
Object objectlayout5120;
Object instancevariable4035;
Object class2750;
Object metaclass2750;
Object objectlayout5121;
Object symbol22007;
Object objectlayout5122;
Object class2751;
Object metaclass2751;
Object objectlayout5123;
Object symbol21821;
Object objectlayout5124;
Object instancevariable4036;
Object instancevariable4037;
Object class2752;
Object metaclass2752;
Object objectlayout5125;
Object symbol21813;
Object objectlayout5126;
Object instancevariable4038;
Object class2753;
Object metaclass2753;
Object objectlayout5127;
Object symbol21829;
Object objectlayout5128;
Object instancevariable4039;
Object class2754;
Object metaclass2754;
Object objectlayout5129;
Object symbol21841;
Object objectlayout5130;
Object class2755;
Object metaclass2755;
Object objectlayout5131;
Object symbol21849;
Object objectlayout5132;
Object instancevariable4040;
Object class2756;
Object metaclass2756;
Object objectlayout5133;
Object symbol21822;
Object objectlayout5134;
Object instancevariable4041;
Object instancevariable4042;
Object class2757;
Object metaclass2757;
Object objectlayout5135;
Object symbol21814;
Object objectlayout5136;
Object instancevariable4043;
Object class2758;
Object metaclass2758;
Object objectlayout5137;
Object symbol21861;
Object objectlayout5138;
Object class2759;
Object metaclass2759;
Object objectlayout5139;
Object symbol21839;
Object objectlayout5140;
Object instancevariable4044;
Object instancevariable4045;
Object class2760;
Object metaclass2760;
Object objectlayout5141;
Object symbol21823;
Object objectlayout5142;
Object instancevariable4046;
Object class2761;
Object metaclass2761;
Object objectlayout5143;
Object symbol21879;
Object objectlayout5144;
Object instancevariable4047;
Object class2762;
Object metaclass2762;
Object objectlayout5145;
Object symbol22093;
Object objectlayout5146;
Object instancevariable4048;
Object class2763;
Object metaclass2763;
Object objectlayout5147;
Object symbol22049;
Object objectlayout5148;
Object class2764;
Object metaclass2764;
Object objectlayout5149;
Object symbol21853;
Object objectlayout5150;
Object class2765;
Object metaclass2765;
Object objectlayout5151;
Object symbol21818;
Object objectlayout5152;
Object instancevariable4049;
Object instancevariable4050;
Object class2766;
Object metaclass2766;
Object objectlayout5153;
Object symbol21854;
Object objectlayout5154;
Object class2767;
Object metaclass2767;
Object objectlayout5155;
Object symbol21827;
Object objectlayout5156;
Object instancevariable4051;
Object instancevariable4052;
Object instancevariable4053;
Object instancevariable4054;
Object class2768;
Object metaclass2768;
Object objectlayout5157;
Object symbol21866;
Object objectlayout5158;
Object instancevariable4055;
Object instancevariable4056;
Object instancevariable4057;
Object class2769;
Object metaclass2769;
Object objectlayout5159;
Object symbol21787;
Object objectlayout5160;
Object instancevariable4058;
Object class2770;
Object metaclass2770;
Object classreference3102;
Object classreference3103;
Object classreference3104;
Object method15722;
Object symbol21800;
Object methodclosure15720;
Object method15723;
Object symbol21799;
Object methodclosure15721;
Object localvariable16559;
Object array13115;
Object send117810;
Object send117811;
Object method15724;
Object symbol21804;
Object methodclosure15722;
Object method15725;
Object methodclosure15723;
Object method15726;
Object symbol21801;
Object methodclosure15724;
Object localvariable16560;
Object array13116;
Object method15727;
Object symbol21802;
Object methodclosure15725;
Object localvariable16561;
Object array13117;
Object send117812;
Object symbol21888;
Object send117813;
Object method15728;
Object symbol21803;
Object methodclosure15726;
Object symbol21956;
Object send117814;
Object send117815;
Object method15729;
Object methodclosure15727;
Object send117816;
Object symbol21793;
Object send117817;
Object method15730;
Object symbol21798;
Object methodclosure15728;
Object classreference3105;
Object localvariable16562;
Object array13118;
Object classreference3106;
Object localvariable16563;
Object localvariable16564;
Object array13119;
Object variable912;
Object array13120;
Object send117818;
Object assign14433;
Object send117819;
Object send117820;
Object send117821;
Object smallint8239;
Object constant22805;
Object send117822;
Object symbol21993;
Object send117823;
Object block7738;
Object send117824;
Object smallint8240;
Object constant22806;
Object send117825;
Object assign14434;
Object smallint8241;
Object constant22807;
Object send117826;
Object send117827;
Object block7739;
Object send117828;
Object smallint8242;
Object constant22808;
Object symbol21929;
Object localvariable16565;
Object array13121;
Object send117829;
Object send117830;
Object send117831;
Object send117832;
Object send117833;
Object block7740;
Object send117834;
Object smallint8243;
Object constant22809;
Object assign14435;
Object assign14436;
Object block7741;
Object send117835;
Object method15731;
Object symbol21992;
Object methodclosure15729;
Object send117836;
Object symbol21928;
Object smallint8244;
Object constant22810;
Object send117837;
Object method15732;
Object symbol21994;
Object methodclosure15730;
Object send117838;
Object symbol22172;
Object smallint8245;
Object constant22811;
Object send117839;
Object smallint8246;
Object constant22812;
Object send117840;
Object assign14437;
Object smallint8247;
Object constant22813;
Object send117841;
Object assign14438;
Object method15733;
Object symbol21996;
Object methodclosure15731;
Object localvariable16566;
Object array13122;
Object symbol21991;
Object send117842;
Object method15734;
Object symbol21973;
Object methodclosure15732;
Object localvariable16567;
Object array13123;
Object send117843;
Object send117844;
Object send117845;
Object block7742;
Object send117846;
Object smallint8248;
Object constant22814;
Object send117847;
Object assign14439;
Object send117848;
Object method15735;
Object methodclosure15733;
Object localvariable16568;
Object array13124;
Object classreference3107;
Object localvariable16569;
Object array13125;
Object smallint8249;
Object constant22815;
Object send117849;
Object localvariable16570;
Object array13126;
Object symbol22173;
Object send117850;
Object send117851;
Object block7743;
Object send117852;
Object method15736;
Object symbol21971;
Object methodclosure15734;
Object localvariable16571;
Object array13127;
Object symbol21904;
Object super1266;
Object symbol22174;
Object string13371;
Object constant22816;
Object send117853;
Object symbol21924;
Object localvariable16572;
Object array13128;
Object send117854;
Object string13372;
Object constant22817;
Object send117855;
Object block7744;
Object send117856;
Object string13373;
Object constant22818;
Object send117857;
Object method15737;
Object methodclosure15735;
Object localvariable16573;
Object array13129;
Object smallint8250;
Object constant22819;
Object send117858;
Object localvariable16574;
Object array13130;
Object send117859;
Object send117860;
Object block7745;
Object send117861;
Object method15738;
Object methodclosure15736;
Object send117862;
Object smallint8251;
Object constant22820;
Object send117863;
Object method15739;
Object symbol21916;
Object methodclosure15737;
Object super1267;
Object method15740;
Object methodclosure15738;
Object localvariable16575;
Object array13131;
Object smallint8252;
Object constant22821;
Object send117864;
Object method15741;
Object symbol21972;
Object methodclosure15739;
Object localvariable16576;
Object array13132;
Object variable913;
Object array13133;
Object send117865;
Object send117866;
Object block7746;
Object send117867;
Object send117868;
Object send117869;
Object send117870;
Object send117871;
Object block7747;
Object send117872;
Object send117873;
Object send117874;
Object send117875;
Object send117876;
Object block7748;
Object send117877;
Object smallint8253;
Object constant22822;
Object send117878;
Object localvariable16577;
Object array13134;
Object send117879;
Object send117880;
Object send117881;
Object send117882;
Object block7749;
Object send117883;
Object block7750;
Object send117884;
Object block7751;
Object send117885;
Object method15742;
Object methodclosure15740;
Object localvariable16578;
Object localvariable16579;
Object localvariable16580;
Object localvariable16581;
Object array13135;
Object localvariable16582;
Object localvariable16583;
Object array13136;
Object send117886;
Object assign14440;
Object smallint8254;
Object constant22823;
Object send117887;
Object assign14441;
Object smallint8255;
Object constant22824;
Object send117888;
Object assign14442;
Object symbol21930;
Object send117889;
Object block7752;
Object send117890;
Object send117891;
Object send117892;
Object block7753;
Object send117893;
Object method15743;
Object symbol21975;
Object methodclosure15741;
Object localvariable16584;
Object array13137;
Object send117894;
Object send117895;
Object method15744;
Object symbol21976;
Object methodclosure15742;
Object localvariable16585;
Object array13138;
Object localvariable16586;
Object array13139;
Object send117896;
Object symbol21884;
Object send117897;
Object smallint8256;
Object constant22825;
Object send117898;
Object send117899;
Object assign14443;
Object localvariable16587;
Object localvariable16588;
Object array13140;
Object send117900;
Object block7754;
Object send117901;
Object send117902;
Object method15745;
Object methodclosure15743;
Object send117903;
Object send117904;
Object method15746;
Object symbol21969;
Object methodclosure15744;
Object smallint8257;
Object constant22826;
Object send117905;
Object method15747;
Object symbol21970;
Object methodclosure15745;
Object localvariable16589;
Object localvariable16590;
Object array13141;
Object localvariable16591;
Object array13142;
Object assign14444;
Object localvariable16592;
Object array13143;
Object send117906;
Object assign14445;
Object block7755;
Object send117907;
Object method15748;
Object symbol21974;
Object methodclosure15746;
Object send117908;
Object send117909;
Object send117910;
Object send117911;
Object assign14446;
Object smallint8258;
Object constant22827;
Object send117912;
Object smallint8259;
Object constant22828;
Object send117913;
Object assign14447;
Object method15749;
Object methodclosure15747;
Object localvariable16593;
Object array13144;
Object assign14448;
Object send117914;
Object method15750;
Object symbol21995;
Object methodclosure15748;
Object send117915;
Object smallint8260;
Object constant22829;
Object send117916;
Object method15751;
Object methodclosure15749;
Object localvariable16594;
Object array13145;
Object send117917;
Object send117918;
Object send117919;
Object method15752;
Object methodclosure15750;
Object localvariable16595;
Object localvariable16596;
Object array13146;
Object send117920;
Object symbol22175;
Object symbol21990;
Object send117921;
Object send117922;
Object method15753;
Object methodclosure15751;
Object smallint8261;
Object constant22830;
Object send117923;
Object method15754;
Object symbol21894;
Object methodclosure15752;
Object localvariable16597;
Object array13147;
Object localvariable16598;
Object array13148;
Object send117924;
Object assign14449;
Object symbol22176;
Object send117925;
Object send117926;
Object method15755;
Object symbol21989;
Object methodclosure15753;
Object localvariable16599;
Object array13149;
Object localvariable16600;
Object array13150;
Object send117927;
Object send117928;
Object assign14450;
Object symbol22177;
Object send117929;
Object method15756;
Object symbol21968;
Object methodclosure15754;
Object send117930;
Object assign14451;
Object symbol21893;
Object send117931;
Object symbol21895;
Object send117932;
Object symbol21889;
Object send117933;
Object send117934;
Object block7756;
Object block7757;
Object send117935;
Object method15757;
Object symbol21886;
Object methodclosure15755;
Object localvariable16601;
Object localvariable16602;
Object localvariable16603;
Object array13151;
Object send117936;
Object assign14452;
Object symbol21899;
Object send117937;
Object localvariable16604;
Object array13152;
Object localvariable16605;
Object array13153;
Object send117938;
Object send117939;
Object symbol22178;
Object string13374;
Object constant22831;
Object send117940;
Object string13375;
Object constant22832;
Object send117941;
Object send117942;
Object block7758;
Object send117943;
Object block7759;
Object send117944;
Object classreference3108;
Object symbol22133;
Object send117945;
Object assign14453;
Object symbol22149;
Object send117946;
Object send117947;
Object send117948;
Object block7760;
Object send117949;
Object method15758;
Object symbol21898;
Object methodclosure15756;
Object instancevariable4059;
Object method15759;
Object symbol21900;
Object methodclosure15757;
Object instancevariable4060;
Object method15760;
Object methodclosure15758;
Object method15761;
Object symbol21887;
Object methodclosure15759;
Object send117950;
Object method15762;
Object methodclosure15760;
Object localvariable16606;
Object array13154;
Object send117951;
Object symbol22159;
Object send117952;
Object method15763;
Object symbol21896;
Object methodclosure15761;
Object localvariable16607;
Object array13155;
Object send117953;
Object send117954;
Object method15764;
Object methodclosure15762;
Object localvariable16608;
Object array13156;
Object variable914;
Object array13157;
Object send117955;
Object send117956;
Object block7761;
Object send117957;
Object send117958;
Object send117959;
Object block7762;
Object send117960;
Object send117961;
Object block7763;
Object send117962;
Object method15765;
Object methodclosure15763;
Object send117963;
Object classreference3109;
Object method15766;
Object methodclosure15764;
Object localvariable16609;
Object array13158;
Object symbol22179;
Object send117964;
Object method15767;
Object methodclosure15765;
Object symbol22180;
Object send117965;
Object send117966;
Object method15768;
Object methodclosure15766;
Object localvariable16610;
Object array13159;
Object assign14454;
Object method15769;
Object symbol21885;
Object methodclosure15767;
Object instancevariable4061;
Object method15770;
Object methodclosure15768;
Object send117967;
Object send117968;
Object method15771;
Object methodclosure15769;
Object classreference3110;
Object instancevariable4062;
Object method15772;
Object methodclosure15770;
Object instancevariable4063;
Object method15773;
Object symbol21905;
Object methodclosure15771;
Object localvariable16611;
Object array13160;
Object super1268;
Object string13376;
Object constant22833;
Object send117969;
Object send117970;
Object send117971;
Object method15774;
Object methodclosure15772;
Object classreference3111;
Object localvariable16612;
Object array13161;
Object super1269;
Object symbol22181;
Object send117972;
Object send117973;
Object send117974;
Object method15775;
Object methodclosure15773;
Object classreference3112;
Object classreference3113;
Object localvariable16613;
Object localvariable16614;
Object array13162;
Object symbol22182;
Object send117975;
Object send117976;
Object block7764;
Object send117977;
Object method15776;
Object symbol22158;
Object methodclosure15774;
Object localvariable16615;
Object array13163;
Object variable915;
Object array13164;
Object send117978;
Object block7765;
Object send117979;
Object block7766;
Object send117980;
Object method15777;
Object methodclosure15775;
Object classreference3114;
Object classreference3115;
Object classreference3116;
Object classreference3117;
Object classreference3118;
Object classreference3119;
Object classreference3120;
Object classreference3121;
Object localvariable16616;
Object array13165;
Object assign14455;
Object method15778;
Object symbol22155;
Object methodclosure15776;
Object method15779;
Object symbol22156;
Object methodclosure15777;
Object classreference3122;
Object method15780;
Object symbol21998;
Object methodclosure15778;
Object method15781;
Object methodclosure15779;
Object localvariable16617;
Object array13166;
Object assign14456;
Object method15782;
Object methodclosure15780;
Object localvariable16618;
Object array13167;
Object super1270;
Object string13377;
Object constant22834;
Object send117981;
Object send117982;
Object send117983;
Object string13378;
Object constant22835;
Object send117984;
Object symbol22148;
Object send117985;
Object send117986;
Object string13379;
Object constant22836;
Object send117987;
Object symbol22146;
Object send117988;
Object send117989;
Object method15783;
Object methodclosure15781;
Object method15784;
Object methodclosure15782;
Object localvariable16619;
Object array13168;
Object assign14457;
Object method15785;
Object symbol21999;
Object methodclosure15783;
Object method15786;
Object methodclosure15784;
Object localvariable16620;
Object array13169;
Object assign14458;
Object method15787;
Object symbol22147;
Object methodclosure15785;
Object localvariable16621;
Object array13170;
Object send117990;
Object send117991;
Object send117992;
Object method15788;
Object methodclosure15786;
Object classreference3123;
Object localvariable16622;
Object array13171;
Object assign14459;
Object method15789;
Object symbol21934;
Object methodclosure15787;
Object method15790;
Object symbol21933;
Object methodclosure15788;
Object classreference3124;
Object instancevariable4064;
Object method15791;
Object symbol21908;
Object methodclosure15789;
Object method15792;
Object symbol21909;
Object methodclosure15790;
Object classreference3125;
Object localvariable16623;
Object array13172;
Object send117993;
Object send117994;
Object send117995;
Object block7767;
Object send117996;
Object method15793;
Object methodclosure15791;
Object classreference3126;
Object localvariable16624;
Object array13173;
Object variable916;
Object array13174;
Object send117997;
Object send117998;
Object block7768;
Object send117999;
Object block7769;
Object send118000;
Object block7770;
Object send118001;
Object method15794;
Object methodclosure15792;
Object localvariable16625;
Object localvariable16626;
Object array13175;
Object localvariable16627;
Object array13176;
Object assign14460;
Object send118002;
Object block7771;
Object send118003;
Object smallint8262;
Object constant22837;
Object send118004;
Object assign14461;
Object block7772;
Object send118005;
Object method15795;
Object methodclosure15793;
Object localvariable16628;
Object array13177;
Object send118006;
Object send118007;
Object method15796;
Object methodclosure15794;
Object classreference3127;
Object classreference3128;
Object send118008;
Object smallint8263;
Object constant22838;
Object send118009;
Object string13380;
Object constant22839;
Object send118010;
Object block7773;
Object send118011;
Object classreference3129;
Object send118012;
Object method15797;
Object symbol22166;
Object methodclosure15795;
Object localvariable16629;
Object array13178;
Object send118013;
Object assign14462;
Object method15798;
Object symbol22167;
Object methodclosure15796;
Object localvariable16630;
Object array13179;
Object super1271;
Object assign14463;
Object method15799;
Object symbol22154;
Object methodclosure15797;
Object localvariable16631;
Object array13180;
Object localvariable16632;
Object array13181;
Object variable917;
Object array13182;
Object symbol22121;
Object send118014;
Object assign14464;
Object send118015;
Object send118016;
Object block7774;
Object send118017;
Object symbol22183;
Object send118018;
Object symbol22184;
Object localvariable16633;
Object array13183;
Object send118019;
Object block7775;
Object send118020;
Object send118021;
Object block7776;
Object send118022;
Object block7777;
Object send118023;
Object method15800;
Object symbol22128;
Object methodclosure15798;
Object send118024;
Object method15801;
Object methodclosure15799;
Object localvariable16634;
Object array13184;
Object symbol21945;
Object send118025;
Object method15802;
Object methodclosure15800;
Object localvariable16635;
Object array13185;
Object super1272;
Object assign14465;
Object string13381;
Object constant22840;
Object send118026;
Object string13382;
Object constant22841;
Object send118027;
Object send118028;
Object method15803;
Object methodclosure15801;
Object send118029;
Object method15804;
Object symbol21921;
Object methodclosure15802;
Object send118030;
Object send118031;
Object method15805;
Object symbol21919;
Object methodclosure15803;
Object localvariable16636;
Object array13186;
Object classreference3130;
Object localvariable16637;
Object array13187;
Object send118032;
Object send118033;
Object method15806;
Object methodclosure15804;
Object super1273;
Object send118034;
Object send118035;
Object method15807;
Object methodclosure15805;
Object localvariable16638;
Object array13188;
Object super1274;
Object assign14466;
Object method15808;
Object methodclosure15806;
Object localvariable16639;
Object array13189;
Object localvariable16640;
Object array13190;
Object variable918;
Object array13191;
Object localvariable16641;
Object array13192;
Object send118036;
Object assign14467;
Object send118037;
Object block7778;
Object send118038;
Object block7779;
Object send118039;
Object block7780;
Object send118040;
Object method15809;
Object methodclosure15807;
Object send118041;
Object assign14468;
Object localvariable16642;
Object array13193;
Object send118042;
Object send118043;
Object block7781;
Object send118044;
Object method15810;
Object symbol21923;
Object methodclosure15808;
Object localvariable16643;
Object array13194;
Object variable919;
Object array13195;
Object send118045;
Object send118046;
Object send118047;
Object block7782;
Object send118048;
Object send118049;
Object assign14469;
Object smallint8264;
Object constant22842;
Object smallint8265;
Object constant22843;
Object send118050;
Object symbol21936;
Object send118051;
Object send118052;
Object block7783;
Object send118053;
Object method15811;
Object symbol21925;
Object methodclosure15809;
Object localvariable16644;
Object array13196;
Object smallint8266;
Object constant22844;
Object send118054;
Object localvariable16645;
Object array13197;
Object send118055;
Object send118056;
Object block7784;
Object send118057;
Object method15812;
Object methodclosure15810;
Object send118058;
Object smallint8267;
Object constant22845;
Object send118059;
Object method15813;
Object methodclosure15811;
Object send118060;
Object smallint8268;
Object constant22846;
Object send118061;
Object symbol21913;
Object smallint8269;
Object constant22847;
Object send118062;
Object character59;
Object constant22848;
Object send118063;
Object block7785;
Object send118064;
Object string13383;
Object constant22849;
Object send118065;
Object string13384;
Object constant22850;
Object send118066;
Object send118067;
Object block7786;
Object send118068;
Object classreference3131;
Object localvariable16646;
Object array13198;
Object localvariable16647;
Object array13199;
Object variable920;
Object array13200;
Object send118069;
Object assign14470;
Object send118070;
Object block7787;
Object send118071;
Object symbol22185;
Object send118072;
Object send118073;
Object block7788;
Object send118074;
Object send118075;
Object send118076;
Object block7789;
Object send118077;
Object block7790;
Object send118078;
Object method15814;
Object methodclosure15812;
Object localvariable16648;
Object array13201;
Object assign14471;
Object method15815;
Object symbol22151;
Object methodclosure15813;
Object localvariable16649;
Object array13202;
Object assign14472;
Object method15816;
Object symbol22152;
Object methodclosure15814;
Object localvariable16650;
Object localvariable16651;
Object array13203;
Object localvariable16652;
Object array13204;
Object symbol21937;
Object send118079;
Object send118080;
Object send118081;
Object send118082;
Object block7791;
Object send118083;
Object send118084;
Object method15817;
Object symbol22150;
Object methodclosure15815;
Object smallint8270;
Object constant22851;
Object send118085;
Object smallint8271;
Object constant22852;
Object send118086;
Object send118087;
Object method15818;
Object symbol21918;
Object methodclosure15816;
Object classreference3132;
Object localvariable16653;
Object array13205;
Object send118088;
Object method15819;
Object methodclosure15817;
Object localvariable16654;
Object array13206;
Object method15820;
Object symbol21912;
Object methodclosure15818;
Object classreference3133;
Object localvariable16655;
Object array13207;
Object send118089;
Object send118090;
Object method15821;
Object methodclosure15819;
Object send118091;
Object send118092;
Object method15822;
Object methodclosure15820;
Object localvariable16656;
Object array13208;
Object variable921;
Object array13209;
Object symbol21938;
Object send118093;
Object assign14473;
Object smallint8272;
Object constant22853;
Object send118094;
Object smallint8273;
Object constant22854;
Object send118095;
Object block7792;
Object send118096;
Object smallint8274;
Object constant22855;
Object send118097;
Object smallint8275;
Object constant22856;
Object send118098;
Object block7793;
Object send118099;
Object block7794;
Object send118100;
Object smallint8276;
Object constant22857;
Object send118101;
Object smallint8277;
Object constant22858;
Object send118102;
Object block7795;
Object send118103;
Object block7796;
Object send118104;
Object smallint8278;
Object constant22859;
Object smallint8279;
Object constant22860;
Object send118105;
Object send118106;
Object send118107;
Object send118108;
Object send118109;
Object block7797;
Object send118110;
Object block7798;
Object send118111;
Object block7799;
Object send118112;
Object method15823;
Object methodclosure15821;
Object localvariable16657;
Object array13210;
Object variable922;
Object array13211;
Object send118113;
Object send118114;
Object block7800;
Object send118115;
Object block7801;
Object send118116;
Object block7802;
Object send118117;
Object method15824;
Object methodclosure15822;
Object localvariable16658;
Object array13212;
Object send118118;
Object send118119;
Object method15825;
Object methodclosure15823;
Object send118120;
Object method15826;
Object methodclosure15824;
Object localvariable16659;
Object array13213;
Object variable923;
Object array13214;
Object send118121;
Object send118122;
Object block7803;
Object send118123;
Object block7804;
Object send118124;
Object block7805;
Object send118125;
Object method15827;
Object methodclosure15825;
Object classreference3134;
Object localvariable16660;
Object array13215;
Object localvariable16661;
Object array13216;
Object variable924;
Object array13217;
Object send118126;
Object symbol22186;
Object constant22861;
Object send118127;
Object super1275;
Object send118128;
Object block7806;
Object send118129;
Object string13385;
Object constant22862;
Object send118130;
Object send118131;
Object string13386;
Object constant22863;
Object send118132;
Object send118133;
Object assign14474;
Object symbol22014;
Object send118134;
Object symbol22187;
Object send118135;
Object block7807;
Object send118136;
Object method15828;
Object methodclosure15826;
Object classreference3135;
Object send118137;
Object send118138;
Object send118139;
Object method15829;
Object methodclosure15827;
Object localvariable16662;
Object array13218;
Object smallint8280;
Object constant22864;
Object send118140;
Object localvariable16663;
Object array13219;
Object send118141;
Object send118142;
Object block7808;
Object send118143;
Object method15830;
Object methodclosure15828;
Object classreference3136;
Object localvariable16664;
Object array13220;
Object method15831;
Object methodclosure15829;
Object localvariable16665;
Object array13221;
Object send118144;
Object method15832;
Object methodclosure15830;
Object classreference3137;
Object localvariable16666;
Object array13222;
Object send118145;
Object method15833;
Object symbol22170;
Object methodclosure15831;
Object localvariable16667;
Object array13223;
Object method15834;
Object symbol22169;
Object methodclosure15832;
Object localvariable16668;
Object array13224;
Object assign14475;
Object method15835;
Object symbol22171;
Object methodclosure15833;
Object classreference3138;
Object classreference3139;
Object localvariable16669;
Object array13225;
Object assign14476;
Object method15836;
Object symbol22138;
Object methodclosure15834;
Object localvariable16670;
Object array13226;
Object localvariable16671;
Object localvariable16672;
Object array13227;
Object classreference3140;
Object localvariable16673;
Object array13228;
Object localvariable16674;
Object array13229;
Object symbol22141;
Object send118146;
Object assign14477;
Object symbol22188;
Object send118147;
Object method15837;
Object symbol21951;
Object methodclosure15835;
Object localvariable16675;
Object array13230;
Object variable925;
Object array13231;
Object smallint8281;
Object constant22865;
Object send118148;
Object send118149;
Object assign14478;
Object send118150;
Object block7809;
Object send118151;
Object smallint8282;
Object constant22866;
Object send118152;
Object send118153;
Object send118154;
Object block7810;
Object send118155;
Object method15838;
Object symbol21949;
Object methodclosure15836;
Object localvariable16676;
Object array13232;
Object localvariable16677;
Object localvariable16678;
Object array13233;
Object variable926;
Object array13234;
Object symbol22189;
Object send118156;
Object assign14479;
Object assign14480;
Object send118157;
Object block7811;
Object send118158;
Object send118159;
Object block7812;
Object send118160;
Object send118161;
Object send118162;
Object send118163;
Object send118164;
Object block7813;
Object send118165;
Object block7814;
Object send118166;
Object block7815;
Object send118167;
Object method15839;
Object symbol21943;
Object methodclosure15837;
Object localvariable16679;
Object array13235;
Object send118168;
Object block7816;
Object block7817;
Object send118169;
Object method15840;
Object methodclosure15838;
Object localvariable16680;
Object array13236;
Object localvariable16681;
Object localvariable16682;
Object array13237;
Object variable927;
Object array13238;
Object assign14481;
Object send118170;
Object send118171;
Object block7818;
Object send118172;
Object assign14482;
Object symbol22190;
Object send118173;
Object assign14483;
Object symbol22191;
Object send118174;
Object send118175;
Object block7819;
Object send118176;
Object send118177;
Object send118178;
Object block7820;
Object send118179;
Object block7821;
Object send118180;
Object method15841;
Object symbol21950;
Object methodclosure15839;
Object localvariable16683;
Object localvariable16684;
Object array13239;
Object super1276;
Object assign14484;
Object send118181;
Object smallint8283;
Object constant22867;
Object send118182;
Object send118183;
Object assign14485;
Object method15842;
Object symbol21946;
Object methodclosure15840;
Object send118184;
Object method15843;
Object symbol21944;
Object methodclosure15841;
Object send118185;
Object assign14486;
Object send118186;
Object assign14487;
Object method15844;
Object symbol22140;
Object methodclosure15842;
Object localvariable16685;
Object array13240;
Object send118187;
Object assign14488;
Object method15845;
Object methodclosure15843;
Object localvariable16686;
Object array13241;
Object assign14489;
Object method15846;
Object symbol22139;
Object methodclosure15844;
Object localvariable16687;
Object array13242;
Object localvariable16688;
Object array13243;
Object send118188;
Object assign14490;
Object method15847;
Object methodclosure15845;
Object super1277;
Object send118189;
Object symbol22132;
Object send118190;
Object assign14491;
Object method15848;
Object methodclosure15846;
Object localvariable16689;
Object array13244;
Object localvariable16690;
Object array13245;
Object variable928;
Object array13246;
Object send118191;
Object assign14492;
Object symbol22192;
Object block7822;
Object send118192;
Object block7823;
Object send118193;
Object send118194;
Object block7824;
Object send118195;
Object block7825;
Object send118196;
Object method15849;
Object methodclosure15847;
Object symbol22137;
Object send118197;
Object method15850;
Object methodclosure15848;
Object localvariable16691;
Object localvariable16692;
Object localvariable16693;
Object array13247;
Object symbol22136;
Object send118198;
Object send118199;
Object method15851;
Object symbol22134;
Object methodclosure15849;
Object localvariable16694;
Object localvariable16695;
Object array13248;
Object send118200;
Object send118201;
Object method15852;
Object methodclosure15850;
Object symbol22193;
Object send118202;
Object send118203;
Object symbol22194;
Object send118204;
Object send118205;
Object symbol22195;
Object send118206;
Object send118207;
Object assign14493;
Object block7826;
Object send118208;
Object method15853;
Object symbol22135;
Object methodclosure15851;
Object send118209;
Object method15854;
Object symbol22131;
Object methodclosure15852;
Object localvariable16696;
Object array13249;
Object send118210;
Object send118211;
Object method15855;
Object methodclosure15853;
Object send118212;
Object symbol22117;
Object send118213;
Object assign14494;
Object block7827;
Object send118214;
Object method15856;
Object methodclosure15854;
Object classreference3141;
Object localvariable16697;
Object array13250;
Object localvariable16698;
Object localvariable16699;
Object array13251;
Object variable929;
Object array13252;
Object send118215;
Object assign14495;
Object send118216;
Object assign14496;
Object send118217;
Object block7828;
Object send118218;
Object send118219;
Object symbol22161;
Object send118220;
Object block7829;
Object send118221;
Object method15857;
Object methodclosure15855;
Object classreference3142;
Object localvariable16700;
Object array13253;
Object variable930;
Object array13254;
Object send118222;
Object send118223;
Object block7830;
Object send118224;
Object send118225;
Object block7831;
Object send118226;
Object method15858;
Object methodclosure15856;
Object localvariable16701;
Object array13255;
Object super1278;
Object assign14497;
Object assign14498;
Object method15859;
Object methodclosure15857;
Object method15860;
Object symbol22119;
Object methodclosure15858;
Object send118227;
Object method15861;
Object methodclosure15859;
Object classreference3143;
Object localvariable16702;
Object localvariable16703;
Object array13256;
Object localvariable16704;
Object array13257;
Object send118228;
Object block7832;
Object send118229;
Object send118230;
Object assign14499;
Object send118231;
Object block7833;
Object send118232;
Object block7834;
Object send118233;
Object method15862;
Object methodclosure15860;
Object localvariable16705;
Object array13258;
Object send118234;
Object send118235;
Object method15863;
Object methodclosure15861;
Object localvariable16706;
Object array13259;
Object super1279;
Object assign14500;
Object assign14501;
Object method15864;
Object methodclosure15862;
Object method15865;
Object methodclosure15863;
Object localvariable16707;
Object array13260;
Object assign14502;
Object method15866;
Object symbol22162;
Object methodclosure15864;
Object method15867;
Object methodclosure15865;
Object classreference3144;
Object method15868;
Object symbol22120;
Object methodclosure15866;
Object localvariable16708;
Object array13261;
Object symbol22196;
Object send118236;
Object method15869;
Object methodclosure15867;
Object symbol22115;
Object send118237;
Object send118238;
Object method15870;
Object methodclosure15868;
Object localvariable16709;
Object array13262;
Object assign14503;
Object method15871;
Object methodclosure15869;
Object localvariable16710;
Object array13263;
Object localvariable16711;
Object localvariable16712;
Object array13264;
Object symbol22197;
Object send118239;
Object assign14504;
Object send118240;
Object assign14505;
Object symbol22198;
Object send118241;
Object block7835;
Object send118242;
Object method15872;
Object methodclosure15870;
Object assign14506;
Object method15873;
Object methodclosure15871;
Object send118243;
Object send118244;
Object method15874;
Object symbol22129;
Object methodclosure15872;
Object localvariable16713;
Object array13265;
Object symbol22111;
Object send118245;
Object localvariable16714;
Object array13266;
Object symbol22199;
Object send118246;
Object symbol22200;
Object send118247;
Object block7836;
Object send118248;
Object block7837;
Object send118249;
Object method15875;
Object symbol22130;
Object methodclosure15873;
Object symbol22126;
Object send118250;
Object send118251;
Object method15876;
Object symbol22122;
Object methodclosure15874;
Object send118252;
Object method15877;
Object methodclosure15875;
Object localvariable16715;
Object array13267;
Object classreference3145;
Object localvariable16716;
Object array13268;
Object send118253;
Object send118254;
Object method15878;
Object symbol22165;
Object methodclosure15876;
Object localvariable16717;
Object array13269;
Object localvariable16718;
Object localvariable16719;
Object array13270;
Object variable931;
Object array13271;
Object send118255;
Object assign14507;
Object localvariable16720;
Object array13272;
Object send118256;
Object block7838;
Object send118257;
Object send118258;
Object assign14508;
Object send118259;
Object block7839;
Object send118260;
Object send118261;
Object send118262;
Object block7840;
Object send118263;
Object block7841;
Object send118264;
Object send118265;
Object smallint8284;
Object constant22868;
Object send118266;
Object send118267;
Object send118268;
Object block7842;
Object send118269;
Object block7843;
Object send118270;
Object method15879;
Object methodclosure15877;
Object localvariable16721;
Object array13273;
Object super1280;
Object assign14509;
Object assign14510;
Object method15880;
Object methodclosure15878;
Object localvariable16722;
Object array13274;
Object assign14511;
Object method15881;
Object methodclosure15879;
Object method15882;
Object methodclosure15880;
Object super1281;
Object send118271;
Object send118272;
Object method15883;
Object methodclosure15881;
Object send118273;
Object send118274;
Object send118275;
Object method15884;
Object methodclosure15882;
Object localvariable16723;
Object array13275;
Object assign14512;
Object method15885;
Object symbol22123;
Object methodclosure15883;
Object send118276;
Object method15886;
Object methodclosure15884;
Object method15887;
Object symbol22112;
Object methodclosure15885;
Object method15888;
Object methodclosure15886;
Object variable932;
Object array13276;
Object symbol22124;
Object super1282;
Object send118277;
Object block7844;
Object send118278;
Object string13387;
Object constant22869;
Object send118279;
Object string13388;
Object constant22870;
Object send118280;
Object block7845;
Object send118281;
Object method15889;
Object methodclosure15887;
Object localvariable16724;
Object array13277;
Object send118282;
Object symbol22201;
Object send118283;
Object block7846;
Object send118284;
Object method15890;
Object symbol22113;
Object methodclosure15888;
Object localvariable16725;
Object array13278;
Object send118285;
Object send118286;
Object send118287;
Object method15891;
Object methodclosure15889;
Object method15892;
Object methodclosure15890;
Object send118288;
Object method15893;
Object methodclosure15891;
Object send118289;
Object method15894;
Object methodclosure15892;
Object localvariable16726;
Object array13279;
Object send118290;
Object send118291;
Object method15895;
Object symbol22116;
Object methodclosure15893;
Object localvariable16727;
Object array13280;
Object send118292;
Object send118293;
Object method15896;
Object methodclosure15894;
Object symbol22202;
Object constant22871;
Object method15897;
Object symbol21903;
Object methodclosure15895;
Object method15898;
Object methodclosure15896;
Object classreference3146;
Object localvariable16728;
Object array13281;
Object send118294;
Object method15899;
Object methodclosure15897;
Object classreference3147;
Object method15900;
Object symbol21962;
Object methodclosure15898;
Object send118295;
Object send118296;
Object method15901;
Object methodclosure15899;
Object localvariable16729;
Object array13282;
Object assign14513;
Object method15902;
Object symbol21961;
Object methodclosure15900;
Object classreference3148;
Object localvariable16730;
Object array13283;
Object symbol22203;
Object send118297;
Object assign14514;
Object method15903;
Object symbol22030;
Object methodclosure15901;
Object method15904;
Object symbol22011;
Object methodclosure15902;
Object localvariable16731;
Object array13284;
Object variable933;
Object array13285;
Object send118298;
Object symbol22204;
Object localvariable16732;
Object array13286;
Object send118299;
Object send118300;
Object send118301;
Object send118302;
Object send118303;
Object send118304;
Object send118305;
Object block7847;
Object send118306;
Object block7848;
Object send118307;
Object block7849;
Object send118308;
Object method15905;
Object symbol22031;
Object methodclosure15903;
Object super1283;
Object send118309;
Object assign14515;
Object method15906;
Object methodclosure15904;
Object localvariable16733;
Object array13287;
Object variable934;
Object array13288;
Object symbol22012;
Object super1284;
Object send118310;
Object block7850;
Object send118311;
Object send118312;
Object block7851;
Object send118313;
Object method15907;
Object methodclosure15905;
Object classreference3149;
Object localvariable16734;
Object array13289;
Object assign14516;
Object method15908;
Object symbol22004;
Object methodclosure15906;
Object localvariable16735;
Object array13290;
Object assign14517;
Object method15909;
Object symbol22005;
Object methodclosure15907;
Object method15910;
Object symbol22006;
Object methodclosure15908;
Object method15911;
Object symbol22003;
Object methodclosure15909;
Object classreference3150;
Object symbol21981;
Object send118314;
Object string13389;
Object constant22872;
Object send118315;
Object symbol21978;
Object send118316;
Object send118317;
Object symbol22205;
Object send118318;
Object symbol21980;
Object send118319;
Object method15912;
Object methodclosure15910;
Object localvariable16736;
Object array13291;
Object assign14518;
Object method15913;
Object symbol21982;
Object methodclosure15911;
Object send118320;
Object symbol22206;
Object send118321;
Object send118322;
Object method15914;
Object symbol21979;
Object methodclosure15912;
Object localvariable16737;
Object array13292;
Object assign14519;
Object method15915;
Object symbol21977;
Object methodclosure15913;
Object localvariable16738;
Object array13293;
Object send118323;
Object send118324;
Object method15916;
Object methodclosure15914;
Object method15917;
Object methodclosure15915;
Object method15918;
Object methodclosure15916;
Object classreference3151;
Object localvariable16739;
Object array13294;
Object assign14520;
Object method15919;
Object methodclosure15917;
Object symbol22021;
Object send118325;
Object symbol22207;
Object localvariable16740;
Object array13295;
Object send118326;
Object symbol21955;
Object send118327;
Object block7852;
Object send118328;
Object block7853;
Object send118329;
Object method15920;
Object methodclosure15918;
Object localvariable16741;
Object array13296;
Object assign14521;
Object method15921;
Object symbol22026;
Object methodclosure15919;
Object method15922;
Object methodclosure15920;
Object method15923;
Object methodclosure15921;
Object super1285;
Object send118330;
Object send118331;
Object symbol22023;
Object send118332;
Object send118333;
Object send118334;
Object send118335;
Object method15924;
Object methodclosure15922;
Object localvariable16742;
Object array13297;
Object assign14522;
Object method15925;
Object methodclosure15923;
Object method15926;
Object symbol22025;
Object methodclosure15924;
Object classreference3152;
Object classreference3153;
Object localvariable16743;
Object array13298;
Object assign14523;
Object method15927;
Object symbol22017;
Object methodclosure15925;
Object method15928;
Object methodclosure15926;
Object classreference3154;
Object localvariable16744;
Object array13299;
Object assign14524;
Object method15929;
Object methodclosure15927;
Object method15930;
Object methodclosure15928;
Object localvariable16745;
Object array13300;
Object send118336;
Object send118337;
Object send118338;
Object send118339;
Object super1286;
Object send118340;
Object send118341;
Object send118342;
Object send118343;
Object method15931;
Object methodclosure15929;
Object localvariable16746;
Object array13301;
Object assign14525;
Object method15932;
Object symbol22013;
Object methodclosure15930;
Object localvariable16747;
Object array13302;
Object send118344;
Object assign14526;
Object method15933;
Object symbol21958;
Object methodclosure15931;
Object super1287;
Object method15934;
Object methodclosure15932;
Object method15935;
Object methodclosure15933;
Object classreference3155;
Object localvariable16748;
Object array13303;
Object assign14527;
Object method15936;
Object symbol21984;
Object methodclosure15934;
Object localvariable16749;
Object array13304;
Object send118345;
Object method15937;
Object methodclosure15935;
Object symbol21983;
Object send118346;
Object send118347;
Object method15938;
Object methodclosure15936;
Object method15939;
Object methodclosure15937;
Object send118348;
Object send118349;
Object method15940;
Object symbol21985;
Object methodclosure15938;
Object send118350;
Object send118351;
Object method15941;
Object methodclosure15939;
Object classreference3156;
Object localvariable16750;
Object array13305;
Object assign14528;
Object method15942;
Object symbol22028;
Object methodclosure15940;
Object method15943;
Object symbol22029;
Object methodclosure15941;
Object send118352;
Object send118353;
Object method15944;
Object symbol22018;
Object methodclosure15942;
Object symbol21967;
Object send118354;
Object send118355;
Object method15945;
Object methodclosure15943;
Object classreference3157;
Object send118356;
Object send118357;
Object method15946;
Object methodclosure15944;
Object classreference3158;
Object localvariable16751;
Object array13306;
Object assign14529;
Object method15947;
Object symbol22032;
Object methodclosure15945;
Object method15948;
Object symbol22033;
Object methodclosure15946;
Object method15949;
Object methodclosure15947;
Object classreference3159;
Object localvariable16752;
Object array13307;
Object assign14530;
Object method15950;
Object methodclosure15948;
Object send118358;
Object localvariable16753;
Object array13308;
Object send118359;
Object send118360;
Object block7854;
Object send118361;
Object block7855;
Object send118362;
Object method15951;
Object methodclosure15949;
Object method15952;
Object methodclosure15950;
Object localvariable16754;
Object array13309;
Object assign14531;
Object method15953;
Object methodclosure15951;
Object super1288;
Object send118363;
Object assign14532;
Object method15954;
Object methodclosure15952;
Object method15955;
Object methodclosure15953;
Object classreference3160;
Object localvariable16755;
Object array13310;
Object assign14533;
Object method15956;
Object symbol21986;
Object methodclosure15954;
Object method15957;
Object symbol21987;
Object methodclosure15955;
Object send118364;
Object send118365;
Object send118366;
Object method15958;
Object symbol21988;
Object methodclosure15956;
Object classreference3161;
Object classreference3162;
Object method15959;
Object symbol22016;
Object methodclosure15957;
Object localvariable16756;
Object array13311;
Object assign14534;
Object method15960;
Object symbol22015;
Object methodclosure15958;
Object super1289;
Object send118367;
Object assign14535;
Object method15961;
Object methodclosure15959;
Object symbol22208;
Object string13390;
Object constant22873;
Object send118368;
Object string13391;
Object constant22874;
Object send118369;
Object method15962;
Object symbol22009;
Object methodclosure15960;
Object classreference3163;
Object localvariable16757;
Object array13312;
Object assign14536;
Object method15963;
Object methodclosure15961;
Object method15964;
Object methodclosure15962;
Object localvariable16758;
Object array13313;
Object assign14537;
Object method15965;
Object symbol22034;
Object methodclosure15963;
Object method15966;
Object symbol22035;
Object methodclosure15964;
Object classreference3164;
Object method15967;
Object methodclosure15965;
Object localvariable16759;
Object array13314;
Object send118370;
Object send118371;
Object send118372;
Object send118373;
Object super1290;
Object method15968;
Object methodclosure15966;
Object localvariable16760;
Object array13315;
Object assign14538;
Object method15969;
Object methodclosure15967;
Object classreference3165;
Object method15970;
Object methodclosure15968;
Object method15971;
Object methodclosure15969;
Object string13392;
Object constant22875;
Object method15972;
Object symbol21959;
Object methodclosure15970;
Object send118374;
Object send118375;
Object symbol22209;
Object send118376;
Object assign14539;
Object block7856;
Object send118377;
Object method15973;
Object methodclosure15971;
Object send118378;
Object send118379;
Object symbol22210;
Object smallint8285;
Object constant22876;
Object send118380;
Object send118381;
Object send118382;
Object send118383;
Object send118384;
Object method15974;
Object symbol21960;
Object methodclosure15972;
Object method15975;
Object symbol21957;
Object methodclosure15973;
Object localvariable16761;
Object array13316;
Object localvariable16762;
Object array13317;
Object variable935;
Object array13318;
Object send118385;
Object constant22877;
Object send118386;
Object super1291;
Object send118387;
Object block7857;
Object send118388;
Object string13393;
Object constant22878;
Object send118389;
Object send118390;
Object smallint8286;
Object constant22879;
Object send118391;
Object send118392;
Object send118393;
Object send118394;
Object send118395;
Object string13394;
Object constant22880;
Object send118396;
Object send118397;
Object assign14540;
Object send118398;
Object send118399;
Object block7858;
Object send118400;
Object method15976;
Object methodclosure15974;
Object localvariable16763;
Object array13319;
Object assign14541;
Object method15977;
Object symbol21954;
Object methodclosure15975;
Object localvariable16764;
Object array13320;
Object send118401;
Object method15978;
Object methodclosure15976;
Object classreference3166;
Object classreference3167;
Object method15979;
Object symbol22143;
Object methodclosure15977;
Object send118402;
Object symbol22142;
Object send118403;
Object send118404;
Object method15980;
Object symbol22144;
Object methodclosure15978;
Object localvariable16765;
Object array13321;
Object assign14542;
Object method15981;
Object methodclosure15979;
Object classreference3168;
Object send118405;
Object method15982;
Object methodclosure15980;
Object localvariable16766;
Object array13322;
Object send118406;
Object send118407;
Object method15983;
Object methodclosure15981;
Object method15984;
Object methodclosure15982;
Object send118408;
Object send118409;
Object method15985;
Object methodclosure15983;
Object send118410;
Object send118411;
Object method15986;
Object methodclosure15984;
Object localvariable16767;
Object array13323;
Object localvariable16768;
Object array13324;
Object assign14543;
Object send118412;
Object assign14544;
Object send118413;
Object smallint8287;
Object constant22881;
Object send118414;
Object send118415;
Object smallint8288;
Object constant22882;
Object send118416;
Object send118417;
Object symbol22211;
Object send118418;
Object send118419;
Object string13395;
Object constant22883;
Object send118420;
Object block7859;
Object send118421;
Object method15987;
Object symbol22010;
Object methodclosure15985;
Object localvariable16769;
Object array13325;
Object send118422;
Object send118423;
Object send118424;
Object method15988;
Object methodclosure15986;
Object classreference3169;
Object localvariable16770;
Object array13326;
Object assign14545;
Object method15989;
Object symbol22160;
Object methodclosure15987;
Object variable936;
Object array13327;
Object symbol22212;
Object send118425;
Object localvariable16771;
Object array13328;
Object send118426;
Object symbol22213;
Object send118427;
Object block7860;
Object send118428;
Object block7861;
Object send118429;
Object block7862;
Object send118430;
Object block7863;
Object send118431;
Object method15990;
Object methodclosure15988;
Object classreference3170;
Object send118432;
Object send118433;
Object method15991;
Object methodclosure15989;
Object classreference3171;
Object classreference3172;
Object classreference3173;
Object send118434;
Object send118435;
Object send118436;
Object method15992;
Object methodclosure15990;
Object method15993;
Object methodclosure15991;
Object localvariable16772;
Object array13329;
Object super1292;
Object localvariable16773;
Object array13330;
Object string13396;
Object constant22884;
Object send118437;
Object send118438;
Object send118439;
Object string13397;
Object constant22885;
Object send118440;
Object block7864;
Object send118441;
Object method15994;
Object methodclosure15992;
Object localvariable16774;
Object array13331;
Object send118442;
Object symbol22214;
Object send118443;
Object send118444;
Object method15995;
Object symbol22001;
Object methodclosure15993;
Object localvariable16775;
Object array13332;
Object assign14546;
Object method15996;
Object methodclosure15994;
Object super1293;
Object method15997;
Object methodclosure15995;
Object localvariable16776;
Object array13333;
Object send118445;
Object send118446;
Object send118447;
Object method15998;
Object methodclosure15996;
Object send118448;
Object send118449;
Object method15999;
Object methodclosure15997;
Object localvariable16777;
Object array13334;
Object send118450;
Object symbol22215;
Object send118451;
Object send118452;
Object method16000;
Object symbol22000;
Object methodclosure15998;
Object classreference3174;
Object localvariable16778;
Object array13335;
Object string13398;
Object constant22886;
Object send118453;
Object method16001;
Object methodclosure15999;
Object classreference3175;
Object send118454;
Object send118455;
Object method16002;
Object methodclosure16000;
Object localvariable16779;
Object array13336;
Object smallint8289;
Object constant22887;
Object symbol22022;
Object constant22888;
Object send118456;
Object smallint8290;
Object constant22889;
Object symbol22024;
Object constant22890;
Object send118457;
Object smallint8291;
Object constant22891;
Object constant22892;
Object send118458;
Object smallint8292;
Object constant22893;
Object constant22894;
Object send118459;
Object send118460;
Object block7865;
Object smallint8293;
Object constant22895;
Object send118461;
Object send118462;
Object method16003;
Object symbol22020;
Object methodclosure16001;
Object localvariable16780;
Object array13337;
Object super1294;
Object string13399;
Object constant22896;
Object send118463;
Object send118464;
Object send118465;
Object string13400;
Object constant22897;
Object send118466;
Object method16004;
Object methodclosure16002;
Object method16005;
Object methodclosure16003;
Object method16006;
Object methodclosure16004;
Object method16007;
Object methodclosure16005;
Object method16008;
Object methodclosure16006;
Object localvariable16781;
Object array13338;
Object assign14547;
Object method16009;
Object methodclosure16007;
Object localvariable16782;
Object array13339;
Object assign14548;
Object method16010;
Object methodclosure16008;
Object localvariable16783;
Object array13340;
Object assign14549;
Object method16011;
Object symbol22019;
Object methodclosure16009;
Object localvariable16784;
Object array13341;
Object assign14550;
Object method16012;
Object symbol22027;
Object methodclosure16010;
Object classreference3176;
Object symbol22216;
Object constant22898;
Object string13401;
Object constant22899;
Object send118467;
Object block7866;
Object send118468;
Object method16013;
Object symbol22099;
Object methodclosure16011;
Object string13402;
Object constant22900;
Object symbol22217;
Object send118469;
Object localvariable16785;
Object array13342;
Object send118470;
Object send118471;
Object block7867;
Object send118472;
Object method16014;
Object symbol22052;
Object methodclosure16012;
Object localvariable16786;
Object array13343;
Object string13403;
Object constant22901;
Object symbol22218;
Object send118473;
Object symbol22219;
Object send118474;
Object send118475;
Object send118476;
Object localvariable16787;
Object array13344;
Object send118477;
Object assign14551;
Object localvariable16788;
Object array13345;
Object send118478;
Object send118479;
Object send118480;
Object send118481;
Object symbol22046;
Object smallint8294;
Object constant22902;
Object send118482;
Object send118483;
Object send118484;
Object block7868;
Object send118485;
Object send118486;
Object send118487;
Object send118488;
Object block7869;
Object send118489;
Object method16015;
Object symbol22064;
Object methodclosure16013;
Object symbol22220;
Object send118490;
Object symbol22221;
Object send118491;
Object send118492;
Object method16016;
Object symbol22092;
Object methodclosure16014;
Object string13404;
Object constant22903;
Object symbol22222;
Object send118493;
Object send118494;
Object localvariable16789;
Object array13346;
Object localvariable16790;
Object array13347;
Object string13405;
Object constant22904;
Object localvariable16791;
Object localvariable16792;
Object array13348;
Object send118495;
Object block7870;
Object send118496;
Object send118497;
Object string13406;
Object constant22905;
Object send118498;
Object block7871;
Object send118499;
Object send118500;
Object block7872;
Object send118501;
Object method16017;
Object symbol22109;
Object methodclosure16015;
Object string13407;
Object constant22906;
Object send118502;
Object send118503;
Object localvariable16793;
Object array13349;
Object string13408;
Object constant22907;
Object localvariable16794;
Object localvariable16795;
Object array13350;
Object send118504;
Object string13409;
Object constant22908;
Object send118505;
Object block7873;
Object send118506;
Object block7874;
Object send118507;
Object method16018;
Object symbol22102;
Object methodclosure16016;
Object localvariable16796;
Object array13351;
Object variable937;
Object array13352;
Object string13410;
Object constant22909;
Object send118508;
Object send118509;
Object send118510;
Object block7875;
Object send118511;
Object string13411;
Object constant22910;
Object send118512;
Object send118513;
Object send118514;
Object block7876;
Object send118515;
Object send118516;
Object send118517;
Object block7877;
Object send118518;
Object method16019;
Object methodclosure16017;
Object string13412;
Object constant22911;
Object string13413;
Object constant22912;
Object send118519;
Object send118520;
Object symbol22223;
Object send118521;
Object send118522;
Object localvariable16797;
Object array13353;
Object send118523;
Object send118524;
Object send118525;
Object block7878;
Object send118526;
Object method16020;
Object symbol22074;
Object methodclosure16018;
Object localvariable16798;
Object array13354;
Object string13414;
Object constant22913;
Object send118527;
Object send118528;
Object symbol22224;
Object send118529;
Object symbol22225;
Object send118530;
Object send118531;
Object send118532;
Object symbol22226;
Object send118533;
Object send118534;
Object send118535;
Object send118536;
Object localvariable16799;
Object array13355;
Object smallint8295;
Object constant22914;
Object send118537;
Object symbol22227;
Object send118538;
Object send118539;
Object localvariable16800;
Object array13356;
Object send118540;
Object send118541;
Object send118542;
Object smallint8296;
Object constant22915;
Object send118543;
Object send118544;
Object block7879;
Object send118545;
Object send118546;
Object block7880;
Object send118547;
Object block7881;
Object symbol22228;
Object send118548;
Object send118549;
Object send118550;
Object send118551;
Object method16021;
Object symbol22086;
Object methodclosure16019;
Object method16022;
Object symbol22056;
Object methodclosure16020;
Object string13415;
Object constant22916;
Object symbol22229;
Object send118552;
Object send118553;
Object send118554;
Object localvariable16801;
Object array13357;
Object localvariable16802;
Object array13358;
Object symbol22041;
Object send118555;
Object send118556;
Object send118557;
Object smallint8297;
Object constant22917;
Object send118558;
Object send118559;
Object send118560;
Object block7882;
Object send118561;
Object send118562;
Object block7883;
Object send118563;
Object method16023;
Object symbol22068;
Object methodclosure16021;
Object localvariable16803;
Object array13359;
Object string13416;
Object constant22918;
Object send118564;
Object assign14552;
Object send118565;
Object send118566;
Object send118567;
Object send118568;
Object method16024;
Object symbol22096;
Object methodclosure16022;
Object symbol22040;
Object send118569;
Object symbol22230;
Object constant22919;
Object string13417;
Object constant22920;
Object symbol22231;
Object send118570;
Object send118571;
Object send118572;
Object symbol22232;
Object send118573;
Object send118574;
Object localvariable16804;
Object array13360;
Object smallint8298;
Object constant22921;
Object send118575;
Object localvariable16805;
Object array13361;
Object send118576;
Object send118577;
Object send118578;
Object smallint8299;
Object constant22922;
Object send118579;
Object send118580;
Object send118581;
Object send118582;
Object block7884;
Object send118583;
Object send118584;
Object send118585;
Object block7885;
Object send118586;
Object send118587;
Object symbol22039;
Object send118588;
Object send118589;
Object method16025;
Object symbol22038;
Object methodclosure16023;
Object string13418;
Object constant22923;
Object symbol22233;
Object send118590;
Object send118591;
Object symbol22234;
Object send118592;
Object symbol22235;
Object send118593;
Object send118594;
Object send118595;
Object send118596;
Object localvariable16806;
Object array13362;
Object smallint8300;
Object constant22924;
Object send118597;
Object localvariable16807;
Object array13363;
Object send118598;
Object send118599;
Object block7886;
Object send118600;
Object send118601;
Object block7887;
Object send118602;
Object method16026;
Object symbol22061;
Object methodclosure16024;
Object string13419;
Object constant22925;
Object symbol22236;
Object send118603;
Object send118604;
Object send118605;
Object send118606;
Object send118607;
Object send118608;
Object localvariable16808;
Object array13364;
Object symbol22237;
Object send118609;
Object send118610;
Object localvariable16809;
Object localvariable16810;
Object array13365;
Object send118611;
Object block7888;
Object send118612;
Object block7889;
Object send118613;
Object method16027;
Object symbol22106;
Object methodclosure16025;
Object send118614;
Object symbol22238;
Object send118615;
Object send118616;
Object send118617;
Object send118618;
Object symbol22239;
Object send118619;
Object send118620;
Object method16028;
Object symbol22078;
Object methodclosure16026;
Object string13420;
Object constant22926;
Object send118621;
Object method16029;
Object symbol22043;
Object methodclosure16027;
Object string13421;
Object constant22927;
Object symbol22240;
Object send118622;
Object symbol22241;
Object send118623;
Object send118624;
Object send118625;
Object send118626;
Object send118627;
Object send118628;
Object method16030;
Object symbol22071;
Object methodclosure16028;
Object send118629;
Object string13422;
Object constant22928;
Object send118630;
Object send118631;
Object send118632;
Object method16031;
Object symbol22083;
Object methodclosure16029;
Object string13423;
Object constant22929;
Object send118633;
Object send118634;
Object send118635;
Object localvariable16811;
Object array13366;
Object localvariable16812;
Object array13367;
Object send118636;
Object send118637;
Object send118638;
Object smallint8301;
Object constant22930;
Object send118639;
Object send118640;
Object block7890;
Object send118641;
Object send118642;
Object block7891;
Object send118643;
Object method16032;
Object symbol22053;
Object methodclosure16030;
Object string13424;
Object constant22931;
Object string13425;
Object constant22932;
Object send118644;
Object send118645;
Object send118646;
Object send118647;
Object localvariable16813;
Object array13368;
Object send118648;
Object send118649;
Object block7892;
Object send118650;
Object method16033;
Object symbol22065;
Object methodclosure16031;
Object string13426;
Object constant22933;
Object symbol22242;
Object send118651;
Object localvariable16814;
Object array13369;
Object send118652;
Object block7893;
Object send118653;
Object method16034;
Object symbol22103;
Object methodclosure16032;
Object send118654;
Object string13427;
Object constant22934;
Object send118655;
Object send118656;
Object send118657;
Object send118658;
Object method16035;
Object symbol22075;
Object methodclosure16033;
Object string13428;
Object constant22935;
Object send118659;
Object send118660;
Object send118661;
Object send118662;
Object send118663;
Object send118664;
Object localvariable16815;
Object array13370;
Object send118665;
Object send118666;
Object localvariable16816;
Object localvariable16817;
Object array13371;
Object send118667;
Object block7894;
Object send118668;
Object block7895;
Object send118669;
Object method16036;
Object symbol22087;
Object methodclosure16034;
Object constant22936;
Object string13429;
Object constant22937;
Object send118670;
Object block7896;
Object send118671;
Object method16037;
Object methodclosure16035;
Object string13430;
Object constant22938;
Object symbol22243;
Object send118672;
Object send118673;
Object send118674;
Object send118675;
Object send118676;
Object send118677;
Object send118678;
Object send118679;
Object method16038;
Object symbol22057;
Object methodclosure16036;
Object send118680;
Object symbol22244;
Object send118681;
Object method16039;
Object symbol22080;
Object methodclosure16037;
Object localvariable16818;
Object localvariable16819;
Object array13372;
Object symbol22082;
Object send118682;
Object send118683;
Object symbol22098;
Object send118684;
Object constant22939;
Object string13431;
Object constant22940;
Object symbol22245;
Object send118685;
Object send118686;
Object send118687;
Object send118688;
Object send118689;
Object send118690;
Object send118691;
Object localvariable16820;
Object array13373;
Object send118692;
Object assign14553;
Object smallint8302;
Object constant22941;
Object send118693;
Object assign14554;
Object symbol22246;
Object send118694;
Object localvariable16821;
Object array13374;
Object localvariable16822;
Object array13375;
Object send118695;
Object send118696;
Object block7897;
Object send118697;
Object send118698;
Object assign14555;
Object block7898;
Object send118699;
Object block7899;
Object send118700;
Object send118701;
Object symbol22058;
Object send118702;
Object send118703;
Object send118704;
Object constant22942;
Object send118705;
Object method16040;
Object symbol22069;
Object methodclosure16038;
Object send118706;
Object string13432;
Object constant22943;
Object send118707;
Object send118708;
Object send118709;
Object method16041;
Object symbol22097;
Object methodclosure16039;
Object string13433;
Object constant22944;
Object send118710;
Object localvariable16823;
Object array13376;
Object send118711;
Object send118712;
Object block7900;
Object send118713;
Object method16042;
Object symbol22050;
Object methodclosure16040;
Object localvariable16824;
Object array13377;
Object localvariable16825;
Object array13378;
Object send118714;
Object string13434;
Object constant22945;
Object send118715;
Object send118716;
Object send118717;
Object send118718;
Object assign14556;
Object send118719;
Object symbol22247;
Object send118720;
Object block7901;
Object super1295;
Object block7902;
Object send118721;
Object block7903;
Object send118722;
Object method16043;
Object methodclosure16041;
Object send118723;
Object send118724;
Object send118725;
Object send118726;
Object send118727;
Object method16044;
Object methodclosure16042;
Object string13435;
Object constant22946;
Object send118728;
Object localvariable16826;
Object array13379;
Object send118729;
Object send118730;
Object block7904;
Object send118731;
Object method16045;
Object symbol22090;
Object methodclosure16043;
Object send118732;
Object symbol22037;
Object send118733;
Object send118734;
Object send118735;
Object method16046;
Object symbol22062;
Object methodclosure16044;
Object string13436;
Object constant22947;
Object send118736;
Object send118737;
Object symbol22248;
Object send118738;
Object send118739;
Object method16047;
Object symbol22107;
Object methodclosure16045;
Object string13437;
Object constant22948;
Object send118740;
Object localvariable16827;
Object array13380;
Object send118741;
Object block7905;
Object send118742;
Object method16048;
Object symbol22079;
Object methodclosure16046;
Object send118743;
Object send118744;
Object send118745;
Object method16049;
Object symbol22100;
Object methodclosure16047;
Object symbol22249;
Object send118746;
Object symbol22250;
Object send118747;
Object symbol22251;
Object send118748;
Object symbol22252;
Object send118749;
Object send118750;
Object send118751;
Object send118752;
Object symbol22253;
Object send118753;
Object send118754;
Object method16050;
Object symbol22044;
Object methodclosure16048;
Object localvariable16828;
Object array13381;
Object string13438;
Object constant22949;
Object send118755;
Object send118756;
Object send118757;
Object send118758;
Object localvariable16829;
Object array13382;
Object send118759;
Object assign14557;
Object smallint8303;
Object constant22950;
Object send118760;
Object localvariable16830;
Object array13383;
Object localvariable16831;
Object array13384;
Object send118761;
Object send118762;
Object block7906;
Object send118763;
Object send118764;
Object assign14558;
Object block7907;
Object send118765;
Object block7908;
Object send118766;
Object method16051;
Object symbol22072;
Object methodclosure16049;
Object string13439;
Object constant22951;
Object string13440;
Object constant22952;
Object send118767;
Object send118768;
Object send118769;
Object send118770;
Object send118771;
Object localvariable16832;
Object array13385;
Object symbol22254;
Object localvariable16833;
Object array13386;
Object send118772;
Object block7909;
Object send118773;
Object block7910;
Object send118774;
Object method16052;
Object symbol22084;
Object methodclosure16050;
Object string13441;
Object constant22953;
Object symbol22255;
Object send118775;
Object string13442;
Object constant22954;
Object send118776;
Object send118777;
Object send118778;
Object send118779;
Object string13443;
Object constant22955;
Object send118780;
Object localvariable16834;
Object array13387;
Object symbol22256;
Object send118781;
Object send118782;
Object block7911;
Object send118783;
Object send118784;
Object localvariable16835;
Object localvariable16836;
Object array13388;
Object send118785;
Object block7912;
Object send118786;
Object send118787;
Object block7913;
Object send118788;
Object block7914;
Object send118789;
Object method16053;
Object symbol22054;
Object methodclosure16051;
Object localvariable16837;
Object array13389;
Object assign14559;
Object method16054;
Object symbol22066;
Object methodclosure16052;
Object string13444;
Object constant22956;
Object string13445;
Object constant22957;
Object send118790;
Object send118791;
Object send118792;
Object send118793;
Object send118794;
Object send118795;
Object send118796;
Object string13446;
Object constant22958;
Object send118797;
Object send118798;
Object send118799;
Object localvariable16838;
Object array13390;
Object send118800;
Object localvariable16839;
Object array13391;
Object smallint8304;
Object constant22959;
Object send118801;
Object send118802;
Object send118803;
Object block7915;
Object send118804;
Object send118805;
Object send118806;
Object block7916;
Object send118807;
Object method16055;
Object symbol22094;
Object methodclosure16053;
Object send118808;
Object send118809;
Object method16056;
Object symbol22036;
Object methodclosure16054;
Object string13447;
Object constant22960;
Object send118810;
Object symbol22257;
Object send118811;
Object send118812;
Object send118813;
Object send118814;
Object send118815;
Object method16057;
Object symbol22104;
Object methodclosure16055;
Object string13448;
Object constant22961;
Object send118816;
Object localvariable16840;
Object array13392;
Object send118817;
Object send118818;
Object block7917;
Object send118819;
Object method16058;
Object symbol22048;
Object methodclosure16056;
Object string13449;
Object constant22962;
Object string13450;
Object constant22963;
Object send118820;
Object send118821;
Object symbol22258;
Object send118822;
Object symbol22259;
Object send118823;
Object send118824;
Object send118825;
Object string13451;
Object constant22964;
Object send118826;
Object send118827;
Object send118828;
Object send118829;
Object method16059;
Object symbol22076;
Object methodclosure16057;
Object string13452;
Object constant22965;
Object send118830;
Object method16060;
Object symbol22088;
Object methodclosure16058;
Object localvariable16841;
Object array13393;
Object variable938;
Object array13394;
Object send118831;
Object send118832;
Object block7918;
Object send118833;
Object send118834;
Object block7919;
Object send118835;
Object method16061;
Object methodclosure16059;
Object send118836;
Object symbol22260;
Object send118837;
Object symbol22261;
Object send118838;
Object symbol22262;
Object send118839;
Object symbol22263;
Object send118840;
Object send118841;
Object send118842;
Object send118843;
Object send118844;
Object symbol22264;
Object send118845;
Object send118846;
Object method16062;
Object methodclosure16060;
Object string13453;
Object constant22966;
Object send118847;
Object send118848;
Object send118849;
Object send118850;
Object localvariable16842;
Object array13395;
Object localvariable16843;
Object array13396;
Object localvariable16844;
Object array13397;
Object send118851;
Object send118852;
Object block7920;
Object send118853;
Object send118854;
Object send118855;
Object constant22967;
Object send118856;
Object send118857;
Object send118858;
Object constant22968;
Object send118859;
Object send118860;
Object block7921;
Object send118861;
Object send118862;
Object block7922;
Object send118863;
Object method16063;
Object symbol22081;
Object methodclosure16061;
Object constant22969;
Object string13454;
Object constant22970;
Object send118864;
Object block7923;
Object send118865;
Object method16064;
Object methodclosure16062;
Object localvariable16845;
Object array13398;
Object string13455;
Object constant22971;
Object send118866;
Object assign14560;
Object string13456;
Object constant22972;
Object send118867;
Object send118868;
Object send118869;
Object send118870;
Object symbol22265;
Object send118871;
Object send118872;
Object send118873;
Object send118874;
Object send118875;
Object send118876;
Object send118877;
Object send118878;
Object send118879;
Object send118880;
Object send118881;
Object string13457;
Object constant22973;
Object send118882;
Object send118883;
Object send118884;
Object localvariable16846;
Object array13399;
Object send118885;
Object send118886;
Object block7924;
Object send118887;
Object method16065;
Object symbol22051;
Object methodclosure16063;
Object send118888;
Object method16066;
Object symbol22063;
Object methodclosure16064;
Object localvariable16847;
Object localvariable16848;
Object array13400;
Object string13458;
Object constant22974;
Object send118889;
Object send118890;
Object assign14561;
Object string13459;
Object constant22975;
Object send118891;
Object send118892;
Object send118893;
Object send118894;
Object send118895;
Object localvariable16849;
Object array13401;
Object symbol22266;
Object send118896;
Object assign14562;
Object string13460;
Object constant22976;
Object localvariable16850;
Object localvariable16851;
Object array13402;
Object send118897;
Object block7925;
Object send118898;
Object assign14563;
Object localvariable16852;
Object localvariable16853;
Object array13403;
Object string13461;
Object constant22977;
Object send118899;
Object string13462;
Object constant22978;
Object localvariable16854;
Object localvariable16855;
Object array13404;
Object send118900;
Object block7926;
Object send118901;
Object send118902;
Object block7927;
Object send118903;
Object block7928;
Object send118904;
Object method16067;
Object symbol22091;
Object methodclosure16065;
Object string13463;
Object constant22979;
Object symbol22267;
Object send118905;
Object symbol22268;
Object send118906;
Object send118907;
Object symbol22269;
Object send118908;
Object send118909;
Object send118910;
Object method16068;
Object symbol22108;
Object methodclosure16066;
Object send118911;
Object send118912;
Object method16069;
Object symbol22101;
Object methodclosure16067;
Object super1296;
Object send118913;
Object assign14564;
Object send118914;
Object assign14565;
Object smallint8305;
Object constant22980;
Object assign14566;
Object method16070;
Object methodclosure16068;
Object string13464;
Object constant22981;
Object string13465;
Object constant22982;
Object send118915;
Object send118916;
Object send118917;
Object send118918;
Object localvariable16856;
Object array13405;
Object send118919;
Object send118920;
Object block7929;
Object send118921;
Object method16071;
Object symbol22045;
Object methodclosure16069;
Object string13466;
Object constant22983;
Object send118922;
Object send118923;
Object method16072;
Object symbol22073;
Object methodclosure16070;
Object string13467;
Object constant22984;
Object send118924;
Object send118925;
Object send118926;
Object send118927;
Object localvariable16857;
Object array13406;
Object localvariable16858;
Object array13407;
Object constant22985;
Object send118928;
Object send118929;
Object localvariable16859;
Object array13408;
Object constant22986;
Object send118930;
Object send118931;
Object constant22987;
Object send118932;
Object string13468;
Object constant22988;
Object send118933;
Object string13469;
Object constant22989;
Object send118934;
Object send118935;
Object send118936;
Object block7930;
Object send118937;
Object send118938;
Object send118939;
Object constant22990;
Object send118940;
Object send118941;
Object block7931;
Object send118942;
Object send118943;
Object block7932;
Object send118944;
Object method16073;
Object symbol22085;
Object methodclosure16071;
Object string13470;
Object constant22991;
Object send118945;
Object method16074;
Object symbol22055;
Object methodclosure16072;
Object string13471;
Object constant22992;
Object string13472;
Object constant22993;
Object send118946;
Object send118947;
Object symbol22270;
Object send118948;
Object send118949;
Object send118950;
Object send118951;
Object send118952;
Object send118953;
Object send118954;
Object send118955;
Object send118956;
Object send118957;
Object string13473;
Object constant22994;
Object send118958;
Object send118959;
Object send118960;
Object localvariable16860;
Object array13409;
Object localvariable16861;
Object array13410;
Object send118961;
Object send118962;
Object block7933;
Object send118963;
Object send118964;
Object smallint8306;
Object constant22995;
Object send118965;
Object send118966;
Object block7934;
Object send118967;
Object send118968;
Object smallint8307;
Object constant22996;
Object send118969;
Object send118970;
Object block7935;
Object send118971;
Object send118972;
Object block7936;
Object send118973;
Object method16075;
Object symbol22067;
Object methodclosure16073;
Object string13474;
Object constant22997;
Object send118974;
Object send118975;
Object send118976;
Object localvariable16862;
Object array13411;
Object smallint8308;
Object constant22998;
Object send118977;
Object send118978;
Object send118979;
Object block7937;
Object send118980;
Object method16076;
Object symbol22095;
Object methodclosure16074;
Object string13475;
Object constant22999;
Object send118981;
Object string13476;
Object constant23000;
Object send118982;
Object send118983;
Object method16077;
Object methodclosure16075;
Object string13477;
Object constant23001;
Object send118984;
Object send118985;
Object send118986;
Object send118987;
Object string13478;
Object constant23002;
Object send118988;
Object send118989;
Object send118990;
Object method16078;
Object symbol22060;
Object methodclosure16076;
Object string13479;
Object constant23003;
Object symbol22271;
Object send118991;
Object send118992;
Object send118993;
Object symbol22272;
Object send118994;
Object send118995;
Object send118996;
Object send118997;
Object send118998;
Object send118999;
Object send119000;
Object send119001;
Object localvariable16863;
Object array13412;
Object localvariable16864;
Object array13413;
Object send119002;
Object send119003;
Object smallint8309;
Object constant23004;
Object send119004;
Object send119005;
Object block7938;
Object send119006;
Object send119007;
Object smallint8310;
Object constant23005;
Object send119008;
Object send119009;
Object smallint8311;
Object constant23006;
Object send119010;
Object send119011;
Object send119012;
Object block7939;
Object send119013;
Object send119014;
Object block7940;
Object send119015;
Object send119016;
Object send119017;
Object method16079;
Object symbol22105;
Object methodclosure16077;
Object string13480;
Object constant23007;
Object send119018;
Object localvariable16865;
Object array13414;
Object send119019;
Object send119020;
Object block7941;
Object send119021;
Object method16080;
Object symbol22077;
Object methodclosure16078;
Object string13481;
Object constant23008;
Object send119022;
Object send119023;
Object send119024;
Object send119025;
Object send119026;
Object send119027;
Object send119028;
Object send119029;
Object send119030;
Object method16081;
Object symbol22089;
Object methodclosure16079;
Object string13482;
Object constant23009;
Object send119031;
Object method16082;
Object symbol22042;
Object methodclosure16080;
Object string13483;
Object constant23010;
Object send119032;
Object string13484;
Object constant23011;
Object send119033;
Object send119034;
Object send119035;
Object send119036;
Object localvariable16866;
Object array13415;
Object send119037;
Object send119038;
Object send119039;
Object block7942;
Object send119040;
Object method16083;
Object symbol22070;
Object methodclosure16081;
Object send119041;
Object send119042;
Object send119043;
Object send119044;
Object method16084;
Object symbol22059;
Object methodclosure16082;
Object constant23012;
Object string13485;
Object constant23013;
Object send119045;
Object block7943;
Object send119046;
Object method16085;
Object methodclosure16083;
Object classreference3177;
Object localvariable16867;
Object localvariable16868;
Object localvariable16869;
Object localvariable16870;
Object array13416;
Object send119047;
Object assign14567;
Object string13486;
Object constant23014;
Object send119048;
Object assign14568;
Object send119049;
Object assign14569;
Object send119050;
Object send119051;
Object smallint8312;
Object constant23015;
Object send119052;
Object send119053;
Object send119054;
Object send119055;
Object send119056;
Object send119057;
Object smallint8313;
Object constant23016;
Object send119058;
Object smallint8314;
Object constant23017;
Object send119059;
Object assign14570;
Object send119060;
Object send119061;
Object send119062;
Object send119063;
Object send119064;
Object string13487;
Object constant23018;
Object send119065;
Object smallint8315;
Object constant23019;
Object send119066;
Object assign14571;
Object send119067;
Object send119068;
Object send119069;
Object send119070;
Object send119071;
Object string13488;
Object constant23020;
Object send119072;
Object string13489;
Object constant23021;
Object send119073;
Object assign14572;
Object send119074;
Object assign14573;
Object send119075;
Object send119076;
Object smallint8316;
Object constant23022;
Object send119077;
Object send119078;
Object send119079;
Object send119080;
Object send119081;
Object send119082;
Object smallint8317;
Object constant23023;
Object send119083;
Object send119084;
Object assign14574;
Object send119085;
Object send119086;
Object send119087;
Object send119088;
Object send119089;
Object string13490;
Object constant23024;
Object send119090;
Object smallint8318;
Object constant23025;
Object send119091;
Object assign14575;
Object send119092;
Object send119093;
Object send119094;
Object send119095;
Object send119096;
Object string13491;
Object constant23026;
Object send119097;
Object method16086;
Object symbol21819;
Object methodclosure16084;
Object localvariable16871;
Object localvariable16872;
Object array13417;
Object send119098;
Object assign14576;
Object string13492;
Object constant23027;
Object send119099;
Object assign14577;
Object send119100;
Object send119101;
Object string13493;
Object constant23028;
Object send119102;
Object send119103;
Object send119104;
Object smallint8319;
Object constant23029;
Object send119105;
Object string13494;
Object constant23030;
Object send119106;
Object assign14578;
Object send119107;
Object send119108;
Object symbol22273;
Object send119109;
Object send119110;
Object send119111;
Object send119112;
Object smallint8320;
Object constant23031;
Object send119113;
Object method16087;
Object symbol21847;
Object methodclosure16085;
Object localvariable16873;
Object localvariable16874;
Object localvariable16875;
Object array13418;
Object send119114;
Object assign14579;
Object string13495;
Object constant23032;
Object send119115;
Object assign14580;
Object send119116;
Object assign14581;
Object send119117;
Object send119118;
Object send119119;
Object send119120;
Object send119121;
Object send119122;
Object send119123;
Object string13496;
Object constant23033;
Object send119124;
Object assign14582;
Object send119125;
Object assign14583;
Object send119126;
Object send119127;
Object send119128;
Object send119129;
Object send119130;
Object send119131;
Object send119132;
Object string13497;
Object constant23034;
Object send119133;
Object assign14584;
Object send119134;
Object assign14585;
Object send119135;
Object send119136;
Object send119137;
Object send119138;
Object send119139;
Object send119140;
Object send119141;
Object send119142;
Object send119143;
Object send119144;
Object smallint8321;
Object constant23035;
Object send119145;
Object method16088;
Object symbol21855;
Object methodclosure16086;
Object send119146;
Object assign14586;
Object method16089;
Object symbol21867;
Object methodclosure16087;
Object localvariable16876;
Object localvariable16877;
Object localvariable16878;
Object localvariable16879;
Object array13419;
Object send119147;
Object assign14587;
Object string13498;
Object constant23036;
Object send119148;
Object assign14588;
Object send119149;
Object assign14589;
Object send119150;
Object send119151;
Object send119152;
Object send119153;
Object send119154;
Object assign14590;
Object string13499;
Object constant23037;
Object send119155;
Object assign14591;
Object send119156;
Object assign14592;
Object send119157;
Object send119158;
Object send119159;
Object send119160;
Object send119161;
Object send119162;
Object send119163;
Object send119164;
Object method16090;
Object symbol21875;
Object methodclosure16088;
Object localvariable16880;
Object localvariable16881;
Object localvariable16882;
Object array13420;
Object send119165;
Object assign14593;
Object string13500;
Object constant23038;
Object send119166;
Object assign14594;
Object send119167;
Object assign14595;
Object send119168;
Object send119169;
Object send119170;
Object send119171;
Object send119172;
Object send119173;
Object send119174;
Object send119175;
Object send119176;
Object send119177;
Object string13501;
Object constant23039;
Object send119178;
Object send119179;
Object assign14596;
Object send119180;
Object send119181;
Object send119182;
Object send119183;
Object send119184;
Object send119185;
Object send119186;
Object send119187;
Object send119188;
Object send119189;
Object string13502;
Object constant23040;
Object send119190;
Object send119191;
Object assign14597;
Object send119192;
Object send119193;
Object send119194;
Object send119195;
Object send119196;
Object send119197;
Object send119198;
Object send119199;
Object send119200;
Object send119201;
Object string13503;
Object constant23041;
Object send119202;
Object send119203;
Object send119204;
Object send119205;
Object send119206;
Object string13504;
Object constant23042;
Object send119207;
Object assign14598;
Object send119208;
Object assign14599;
Object send119209;
Object send119210;
Object send119211;
Object send119212;
Object send119213;
Object send119214;
Object send119215;
Object send119216;
Object send119217;
Object send119218;
Object string13505;
Object constant23043;
Object send119219;
Object send119220;
Object assign14600;
Object send119221;
Object send119222;
Object send119223;
Object send119224;
Object send119225;
Object send119226;
Object send119227;
Object send119228;
Object send119229;
Object send119230;
Object string13506;
Object constant23044;
Object send119231;
Object send119232;
Object assign14601;
Object send119233;
Object send119234;
Object send119235;
Object send119236;
Object send119237;
Object send119238;
Object send119239;
Object send119240;
Object send119241;
Object send119242;
Object string13507;
Object constant23045;
Object send119243;
Object send119244;
Object send119245;
Object send119246;
Object send119247;
Object method16091;
Object symbol21840;
Object methodclosure16089;
Object localvariable16883;
Object localvariable16884;
Object localvariable16885;
Object array13421;
Object send119248;
Object assign14602;
Object string13508;
Object constant23046;
Object send119249;
Object assign14603;
Object send119250;
Object assign14604;
Object send119251;
Object send119252;
Object send119253;
Object send119254;
Object send119255;
Object string13509;
Object constant23047;
Object send119256;
Object send119257;
Object send119258;
Object send119259;
Object send119260;
Object smallint8322;
Object constant23048;
Object send119261;
Object send119262;
Object send119263;
Object send119264;
Object send119265;
Object string13510;
Object constant23049;
Object send119266;
Object send119267;
Object send119268;
Object send119269;
Object smallint8323;
Object constant23050;
Object send119270;
Object string13511;
Object constant23051;
Object send119271;
Object assign14605;
Object send119272;
Object send119273;
Object send119274;
Object send119275;
Object send119276;
Object send119277;
Object smallint8324;
Object constant23052;
Object send119278;
Object string13512;
Object constant23053;
Object send119279;
Object assign14606;
Object send119280;
Object assign14607;
Object send119281;
Object send119282;
Object send119283;
Object send119284;
Object send119285;
Object symbol22274;
Object string13513;
Object constant23054;
Object string13514;
Object constant23055;
Object send119286;
Object send119287;
Object send119288;
Object send119289;
Object send119290;
Object smallint8325;
Object constant23056;
Object send119291;
Object send119292;
Object send119293;
Object send119294;
Object send119295;
Object string13515;
Object constant23057;
Object send119296;
Object send119297;
Object send119298;
Object send119299;
Object send119300;
Object send119301;
Object string13516;
Object constant23058;
Object send119302;
Object send119303;
Object send119304;
Object send119305;
Object smallint8326;
Object constant23059;
Object send119306;
Object method16092;
Object symbol21837;
Object methodclosure16090;
Object localvariable16886;
Object localvariable16887;
Object localvariable16888;
Object array13422;
Object send119307;
Object assign14608;
Object string13517;
Object constant23060;
Object send119308;
Object assign14609;
Object send119309;
Object assign14610;
Object send119310;
Object send119311;
Object send119312;
Object send119313;
Object send119314;
Object send119315;
Object smallint8327;
Object constant23061;
Object send119316;
Object send119317;
Object send119318;
Object send119319;
Object smallint8328;
Object constant23062;
Object send119320;
Object send119321;
Object send119322;
Object send119323;
Object smallint8329;
Object constant23063;
Object send119324;
Object string13518;
Object constant23064;
Object send119325;
Object assign14611;
Object send119326;
Object assign14612;
Object send119327;
Object send119328;
Object send119329;
Object send119330;
Object send119331;
Object send119332;
Object smallint8330;
Object constant23065;
Object send119333;
Object send119334;
Object send119335;
Object send119336;
Object smallint8331;
Object constant23066;
Object send119337;
Object send119338;
Object send119339;
Object send119340;
Object smallint8332;
Object constant23067;
Object send119341;
Object string13519;
Object constant23068;
Object send119342;
Object assign14613;
Object send119343;
Object assign14614;
Object send119344;
Object send119345;
Object send119346;
Object send119347;
Object send119348;
Object send119349;
Object smallint8333;
Object constant23069;
Object send119350;
Object send119351;
Object send119352;
Object send119353;
Object smallint8334;
Object constant23070;
Object send119354;
Object send119355;
Object send119356;
Object send119357;
Object smallint8335;
Object constant23071;
Object send119358;
Object string13520;
Object constant23072;
Object send119359;
Object assign14615;
Object send119360;
Object assign14616;
Object send119361;
Object send119362;
Object send119363;
Object send119364;
Object send119365;
Object send119366;
Object smallint8336;
Object constant23073;
Object send119367;
Object send119368;
Object send119369;
Object send119370;
Object smallint8337;
Object constant23074;
Object send119371;
Object send119372;
Object send119373;
Object send119374;
Object smallint8338;
Object constant23075;
Object send119375;
Object string13521;
Object constant23076;
Object send119376;
Object assign14617;
Object send119377;
Object assign14618;
Object send119378;
Object send119379;
Object send119380;
Object send119381;
Object send119382;
Object send119383;
Object smallint8339;
Object constant23077;
Object send119384;
Object send119385;
Object send119386;
Object send119387;
Object smallint8340;
Object constant23078;
Object send119388;
Object send119389;
Object send119390;
Object send119391;
Object smallint8341;
Object constant23079;
Object send119392;
Object string13522;
Object constant23080;
Object send119393;
Object assign14619;
Object send119394;
Object assign14620;
Object send119395;
Object send119396;
Object send119397;
Object send119398;
Object send119399;
Object send119400;
Object smallint8342;
Object constant23081;
Object send119401;
Object send119402;
Object send119403;
Object send119404;
Object smallint8343;
Object constant23082;
Object send119405;
Object send119406;
Object send119407;
Object send119408;
Object smallint8344;
Object constant23083;
Object send119409;
Object string13523;
Object constant23084;
Object send119410;
Object assign14621;
Object send119411;
Object assign14622;
Object send119412;
Object send119413;
Object send119414;
Object send119415;
Object send119416;
Object send119417;
Object smallint8345;
Object constant23085;
Object send119418;
Object send119419;
Object send119420;
Object send119421;
Object smallint8346;
Object constant23086;
Object send119422;
Object send119423;
Object send119424;
Object send119425;
Object smallint8347;
Object constant23087;
Object send119426;
Object method16093;
Object symbol21857;
Object methodclosure16091;
Object localvariable16889;
Object localvariable16890;
Object localvariable16891;
Object array13423;
Object send119427;
Object assign14623;
Object string13524;
Object constant23088;
Object send119428;
Object assign14624;
Object send119429;
Object send119430;
Object send119431;
Object send119432;
Object send119433;
Object send119434;
Object smallint8348;
Object constant23089;
Object send119435;
Object string13525;
Object constant23090;
Object send119436;
Object assign14625;
Object send119437;
Object assign14626;
Object send119438;
Object send119439;
Object send119440;
Object send119441;
Object send119442;
Object character60;
Object constant23091;
Object send119443;
Object send119444;
Object send119445;
Object smallint8349;
Object constant23092;
Object send119446;
Object method16094;
Object symbol21880;
Object methodclosure16092;
Object localvariable16892;
Object localvariable16893;
Object localvariable16894;
Object array13424;
Object send119447;
Object assign14627;
Object string13526;
Object constant23093;
Object send119448;
Object assign14628;
Object send119449;
Object assign14629;
Object send119450;
Object send119451;
Object send119452;
Object send119453;
Object send119454;
Object string13527;
Object constant23094;
Object send119455;
Object send119456;
Object send119457;
Object smallint8350;
Object constant23095;
Object send119458;
Object method16095;
Object symbol21877;
Object methodclosure16093;
Object localvariable16895;
Object localvariable16896;
Object localvariable16897;
Object array13425;
Object send119459;
Object assign14630;
Object string13528;
Object constant23096;
Object send119460;
Object assign14631;
Object send119461;
Object assign14632;
Object send119462;
Object send119463;
Object send119464;
Object send119465;
Object send119466;
Object send119467;
Object string13529;
Object constant23097;
Object send119468;
Object send119469;
Object send119470;
Object send119471;
Object send119472;
Object send119473;
Object send119474;
Object send119475;
Object send119476;
Object string13530;
Object constant23098;
Object send119477;
Object send119478;
Object send119479;
Object smallint8351;
Object constant23099;
Object send119480;
Object string13531;
Object constant23100;
Object send119481;
Object assign14633;
Object send119482;
Object send119483;
Object send119484;
Object send119485;
Object send119486;
Object send119487;
Object smallint8352;
Object constant23101;
Object send119488;
Object string13532;
Object constant23102;
Object send119489;
Object assign14634;
Object send119490;
Object assign14635;
Object send119491;
Object send119492;
Object send119493;
Object send119494;
Object send119495;
Object send119496;
Object string13533;
Object constant23103;
Object send119497;
Object send119498;
Object send119499;
Object send119500;
Object send119501;
Object string13534;
Object constant23104;
Object send119502;
Object send119503;
Object send119504;
Object send119505;
Object send119506;
Object send119507;
Object send119508;
Object smallint8353;
Object constant23105;
Object send119509;
Object method16096;
Object symbol21830;
Object methodclosure16094;
Object localvariable16898;
Object localvariable16899;
Object localvariable16900;
Object array13426;
Object send119510;
Object assign14636;
Object string13535;
Object constant23106;
Object send119511;
Object assign14637;
Object send119512;
Object assign14638;
Object send119513;
Object send119514;
Object send119515;
Object send119516;
Object assign14639;
Object send119517;
Object send119518;
Object send119519;
Object send119520;
Object send119521;
Object send119522;
Object send119523;
Object send119524;
Object send119525;
Object send119526;
Object string13536;
Object constant23107;
Object send119527;
Object send119528;
Object assign14640;
Object send119529;
Object send119530;
Object send119531;
Object send119532;
Object send119533;
Object send119534;
Object send119535;
Object send119536;
Object send119537;
Object send119538;
Object string13537;
Object constant23108;
Object send119539;
Object send119540;
Object assign14641;
Object send119541;
Object send119542;
Object send119543;
Object send119544;
Object send119545;
Object send119546;
Object send119547;
Object send119548;
Object send119549;
Object send119550;
Object string13538;
Object constant23109;
Object send119551;
Object send119552;
Object send119553;
Object send119554;
Object send119555;
Object string13539;
Object constant23110;
Object send119556;
Object assign14642;
Object send119557;
Object assign14643;
Object send119558;
Object send119559;
Object send119560;
Object send119561;
Object assign14644;
Object send119562;
Object send119563;
Object send119564;
Object send119565;
Object send119566;
Object send119567;
Object send119568;
Object send119569;
Object send119570;
Object send119571;
Object string13540;
Object constant23111;
Object send119572;
Object send119573;
Object assign14645;
Object send119574;
Object send119575;
Object send119576;
Object send119577;
Object send119578;
Object send119579;
Object send119580;
Object send119581;
Object send119582;
Object send119583;
Object string13541;
Object constant23112;
Object send119584;
Object send119585;
Object assign14646;
Object send119586;
Object send119587;
Object send119588;
Object send119589;
Object send119590;
Object send119591;
Object send119592;
Object send119593;
Object send119594;
Object send119595;
Object string13542;
Object constant23113;
Object send119596;
Object send119597;
Object send119598;
Object send119599;
Object send119600;
Object method16097;
Object symbol21850;
Object methodclosure16095;
Object localvariable16901;
Object localvariable16902;
Object localvariable16903;
Object array13427;
Object send119601;
Object assign14647;
Object string13543;
Object constant23114;
Object send119602;
Object assign14648;
Object send119603;
Object assign14649;
Object send119604;
Object send119605;
Object send119606;
Object send119607;
Object send119608;
Object send119609;
Object send119610;
Object send119611;
Object send119612;
Object send119613;
Object send119614;
Object string13544;
Object constant23115;
Object send119615;
Object send119616;
Object assign14650;
Object send119617;
Object send119618;
Object send119619;
Object send119620;
Object send119621;
Object send119622;
Object send119623;
Object send119624;
Object send119625;
Object send119626;
Object send119627;
Object string13545;
Object constant23116;
Object send119628;
Object send119629;
Object send119630;
Object send119631;
Object send119632;
Object send119633;
Object send119634;
Object send119635;
Object string13546;
Object constant23117;
Object send119636;
Object send119637;
Object send119638;
Object smallint8354;
Object constant23118;
Object send119639;
Object string13547;
Object constant23119;
Object send119640;
Object assign14651;
Object send119641;
Object assign14652;
Object send119642;
Object send119643;
Object send119644;
Object send119645;
Object send119646;
Object string13548;
Object constant23120;
Object send119647;
Object send119648;
Object send119649;
Object smallint8355;
Object constant23121;
Object send119650;
Object method16098;
Object symbol21842;
Object methodclosure16096;
Object localvariable16904;
Object localvariable16905;
Object localvariable16906;
Object localvariable16907;
Object array13428;
Object send119651;
Object assign14653;
Object string13549;
Object constant23122;
Object send119652;
Object assign14654;
Object send119653;
Object assign14655;
Object send119654;
Object send119655;
Object send119656;
Object send119657;
Object send119658;
Object send119659;
Object localvariable16908;
Object array13429;
Object smallint8356;
Object constant23123;
Object string13550;
Object constant23124;
Object send119660;
Object smallint8357;
Object constant23125;
Object string13551;
Object constant23126;
Object send119661;
Object smallint8358;
Object constant23127;
Object string13552;
Object constant23128;
Object send119662;
Object send119663;
Object block7944;
Object smallint8359;
Object constant23129;
Object send119664;
Object send119665;
Object send119666;
Object send119667;
Object send119668;
Object send119669;
Object send119670;
Object send119671;
Object send119672;
Object send119673;
Object string13553;
Object constant23130;
Object send119674;
Object send119675;
Object send119676;
Object assign14656;
Object send119677;
Object send119678;
Object send119679;
Object send119680;
Object smallint8360;
Object constant23131;
Object send119681;
Object assign14657;
Object send119682;
Object send119683;
Object send119684;
Object send119685;
Object smallint8361;
Object constant23132;
Object send119686;
Object assign14658;
Object send119687;
Object send119688;
Object send119689;
Object send119690;
Object send119691;
Object send119692;
Object send119693;
Object send119694;
Object send119695;
Object smallint8362;
Object constant23133;
Object send119696;
Object method16099;
Object symbol21870;
Object methodclosure16097;
Object localvariable16909;
Object localvariable16910;
Object localvariable16911;
Object localvariable16912;
Object array13430;
Object send119697;
Object assign14659;
Object string13554;
Object constant23134;
Object send119698;
Object assign14660;
Object send119699;
Object assign14661;
Object send119700;
Object send119701;
Object send119702;
Object send119703;
Object send119704;
Object constant23135;
Object send119705;
Object send119706;
Object localvariable16913;
Object array13431;
Object smallint8363;
Object constant23136;
Object symbol22275;
Object constant23137;
Object send119707;
Object smallint8364;
Object constant23138;
Object symbol22276;
Object constant23139;
Object send119708;
Object smallint8365;
Object constant23140;
Object symbol22277;
Object constant23141;
Object send119709;
Object send119710;
Object block7945;
Object smallint8366;
Object constant23142;
Object send119711;
Object send119712;
Object send119713;
Object send119714;
Object send119715;
Object assign14662;
Object send119716;
Object send119717;
Object send119718;
Object send119719;
Object smallint8367;
Object constant23143;
Object send119720;
Object assign14663;
Object send119721;
Object send119722;
Object send119723;
Object send119724;
Object smallint8368;
Object constant23144;
Object send119725;
Object assign14664;
Object send119726;
Object send119727;
Object send119728;
Object send119729;
Object send119730;
Object send119731;
Object symbol22278;
Object send119732;
Object string13555;
Object constant23145;
Object send119733;
Object assign14665;
Object send119734;
Object assign14666;
Object send119735;
Object send119736;
Object send119737;
Object send119738;
Object send119739;
Object send119740;
Object string13556;
Object constant23146;
Object send119741;
Object send119742;
Object send119743;
Object smallint8369;
Object constant23147;
Object send119744;
Object string13557;
Object constant23148;
Object send119745;
Object assign14667;
Object send119746;
Object assign14668;
Object send119747;
Object send119748;
Object send119749;
Object send119750;
Object send119751;
Object constant23149;
Object send119752;
Object send119753;
Object localvariable16914;
Object array13432;
Object smallint8370;
Object constant23150;
Object string13558;
Object constant23151;
Object send119754;
Object smallint8371;
Object constant23152;
Object string13559;
Object constant23153;
Object send119755;
Object smallint8372;
Object constant23154;
Object string13560;
Object constant23155;
Object send119756;
Object send119757;
Object block7946;
Object smallint8373;
Object constant23156;
Object send119758;
Object send119759;
Object send119760;
Object send119761;
Object send119762;
Object send119763;
Object send119764;
Object method16100;
Object symbol21862;
Object methodclosure16098;
Object localvariable16915;
Object localvariable16916;
Object localvariable16917;
Object array13433;
Object send119765;
Object assign14669;
Object string13561;
Object constant23157;
Object send119766;
Object assign14670;
Object send119767;
Object assign14671;
Object send119768;
Object send119769;
Object send119770;
Object send119771;
Object send119772;
Object send119773;
Object send119774;
Object send119775;
Object send119776;
Object send119777;
Object string13562;
Object constant23158;
Object send119778;
Object send119779;
Object assign14672;
Object send119780;
Object send119781;
Object send119782;
Object send119783;
Object send119784;
Object send119785;
Object send119786;
Object send119787;
Object send119788;
Object send119789;
Object string13563;
Object constant23159;
Object send119790;
Object send119791;
Object assign14673;
Object send119792;
Object send119793;
Object send119794;
Object send119795;
Object send119796;
Object send119797;
Object send119798;
Object send119799;
Object send119800;
Object send119801;
Object string13564;
Object constant23160;
Object send119802;
Object send119803;
Object send119804;
Object send119805;
Object send119806;
Object method16101;
Object symbol21859;
Object methodclosure16099;
Object localvariable16918;
Object localvariable16919;
Object array13434;
Object send119807;
Object assign14674;
Object string13565;
Object constant23161;
Object send119808;
Object assign14675;
Object send119809;
Object send119810;
Object string13566;
Object constant23162;
Object send119811;
Object send119812;
Object send119813;
Object smallint8374;
Object constant23163;
Object send119814;
Object string13567;
Object constant23164;
Object send119815;
Object assign14676;
Object send119816;
Object send119817;
Object string13568;
Object constant23165;
Object send119818;
Object send119819;
Object send119820;
Object smallint8375;
Object constant23166;
Object send119821;
Object string13569;
Object constant23167;
Object send119822;
Object assign14677;
Object send119823;
Object send119824;
Object send119825;
Object send119826;
Object send119827;
Object send119828;
Object smallint8376;
Object constant23168;
Object send119829;
Object method16102;
Object symbol21832;
Object methodclosure16100;
Object localvariable16920;
Object localvariable16921;
Object localvariable16922;
Object localvariable16923;
Object array13435;
Object send119830;
Object assign14678;
Object string13570;
Object constant23169;
Object send119831;
Object assign14679;
Object send119832;
Object assign14680;
Object send119833;
Object send119834;
Object send119835;
Object send119836;
Object send119837;
Object send119838;
Object send119839;
Object send119840;
Object send119841;
Object send119842;
Object smallint8377;
Object constant23170;
Object send119843;
Object send119844;
Object smallint8378;
Object constant23171;
Object send119845;
Object assign14681;
Object send119846;
Object send119847;
Object send119848;
Object send119849;
Object smallint8379;
Object constant23172;
Object send119850;
Object assign14682;
Object send119851;
Object send119852;
Object send119853;
Object send119854;
Object smallint8380;
Object constant23173;
Object send119855;
Object assign14683;
Object send119856;
Object send119857;
Object send119858;
Object send119859;
Object smallint8381;
Object constant23174;
Object send119860;
Object assign14684;
Object send119861;
Object send119862;
Object send119863;
Object method16103;
Object symbol21824;
Object methodclosure16101;
Object localvariable16924;
Object localvariable16925;
Object array13436;
Object send119864;
Object assign14685;
Object string13571;
Object constant23175;
Object send119865;
Object assign14686;
Object send119866;
Object send119867;
Object send119868;
Object send119869;
Object send119870;
Object send119871;
Object smallint8382;
Object constant23176;
Object send119872;
Object string13572;
Object constant23177;
Object send119873;
Object assign14687;
Object send119874;
Object send119875;
Object string13573;
Object constant23178;
Object send119876;
Object send119877;
Object send119878;
Object smallint8383;
Object constant23179;
Object send119879;
Object string13574;
Object constant23180;
Object send119880;
Object assign14688;
Object send119881;
Object send119882;
Object string13575;
Object constant23181;
Object send119883;
Object send119884;
Object send119885;
Object smallint8384;
Object constant23182;
Object send119886;
Object string13576;
Object constant23183;
Object send119887;
Object assign14689;
Object send119888;
Object send119889;
Object string13577;
Object constant23184;
Object send119890;
Object send119891;
Object send119892;
Object smallint8385;
Object constant23185;
Object send119893;
Object method16104;
Object symbol21852;
Object methodclosure16102;
Object localvariable16926;
Object localvariable16927;
Object localvariable16928;
Object array13437;
Object send119894;
Object assign14690;
Object string13578;
Object constant23186;
Object send119895;
Object assign14691;
Object send119896;
Object assign14692;
Object send119897;
Object send119898;
Object send119899;
Object send119900;
Object send119901;
Object send119902;
Object send119903;
Object send119904;
Object send119905;
Object send119906;
Object send119907;
Object string13579;
Object constant23187;
Object send119908;
Object send119909;
Object assign14693;
Object send119910;
Object send119911;
Object send119912;
Object send119913;
Object send119914;
Object send119915;
Object send119916;
Object send119917;
Object send119918;
Object send119919;
Object send119920;
Object string13580;
Object constant23188;
Object send119921;
Object send119922;
Object send119923;
Object send119924;
Object send119925;
Object send119926;
Object send119927;
Object send119928;
Object string13581;
Object constant23189;
Object send119929;
Object send119930;
Object send119931;
Object smallint8386;
Object constant23190;
Object send119932;
Object string13582;
Object constant23191;
Object send119933;
Object assign14694;
Object send119934;
Object assign14695;
Object send119935;
Object send119936;
Object send119937;
Object send119938;
Object send119939;
Object string13583;
Object constant23192;
Object send119940;
Object send119941;
Object send119942;
Object smallint8387;
Object constant23193;
Object send119943;
Object string13584;
Object constant23194;
Object send119944;
Object assign14696;
Object send119945;
Object assign14697;
Object send119946;
Object send119947;
Object send119948;
Object send119949;
Object send119950;
Object send119951;
Object string13585;
Object constant23195;
Object send119952;
Object send119953;
Object send119954;
Object send119955;
Object send119956;
Object send119957;
Object send119958;
Object send119959;
Object string13586;
Object constant23196;
Object send119960;
Object send119961;
Object assign14698;
Object send119962;
Object send119963;
Object send119964;
Object send119965;
Object send119966;
Object send119967;
Object string13587;
Object constant23197;
Object send119968;
Object send119969;
Object send119970;
Object send119971;
Object send119972;
Object send119973;
Object send119974;
Object send119975;
Object string13588;
Object constant23198;
Object send119976;
Object send119977;
Object send119978;
Object send119979;
Object send119980;
Object send119981;
Object send119982;
Object send119983;
Object string13589;
Object constant23199;
Object send119984;
Object send119985;
Object send119986;
Object smallint8388;
Object constant23200;
Object send119987;
Object method16105;
Object symbol21844;
Object methodclosure16103;
Object localvariable16929;
Object localvariable16930;
Object array13438;
Object send119988;
Object assign14699;
Object string13590;
Object constant23201;
Object send119989;
Object assign14700;
Object send119990;
Object send119991;
Object send119992;
Object string13591;
Object constant23202;
Object send119993;
Object send119994;
Object send119995;
Object smallint8389;
Object constant23203;
Object send119996;
Object string13592;
Object constant23204;
Object send119997;
Object assign14701;
Object send119998;
Object send119999;
Object send120000;
Object string13593;
Object constant23205;
Object send120001;
Object send120002;
Object send120003;
Object smallint8390;
Object constant23206;
Object send120004;
Object string13594;
Object constant23207;
Object send120005;
Object assign14702;
Object send120006;
Object send120007;
Object send120008;
Object string13595;
Object constant23208;
Object send120009;
Object send120010;
Object send120011;
Object smallint8391;
Object constant23209;
Object send120012;
Object string13596;
Object constant23210;
Object send120013;
Object assign14703;
Object send120014;
Object send120015;
Object send120016;
Object string13597;
Object constant23211;
Object send120017;
Object send120018;
Object send120019;
Object smallint8392;
Object constant23212;
Object send120020;
Object method16106;
Object symbol21864;
Object methodclosure16104;
Object localvariable16931;
Object localvariable16932;
Object localvariable16933;
Object array13439;
Object send120021;
Object assign14704;
Object string13598;
Object constant23213;
Object send120022;
Object assign14705;
Object send120023;
Object assign14706;
Object send120024;
Object send120025;
Object send120026;
Object send120027;
Object send120028;
Object string13599;
Object constant23214;
Object send120029;
Object send120030;
Object send120031;
Object smallint8393;
Object constant23215;
Object send120032;
Object string13600;
Object constant23216;
Object send120033;
Object assign14707;
Object send120034;
Object assign14708;
Object send120035;
Object send120036;
Object send120037;
Object send120038;
Object send120039;
Object string13601;
Object constant23217;
Object send120040;
Object send120041;
Object send120042;
Object string13602;
Object constant23218;
Object send120043;
Object send120044;
Object send120045;
Object smallint8394;
Object constant23219;
Object send120046;
Object method16107;
Object symbol21834;
Object methodclosure16105;
Object localvariable16934;
Object localvariable16935;
Object array13440;
Object send120047;
Object assign14709;
Object string13603;
Object constant23220;
Object send120048;
Object assign14710;
Object send120049;
Object constant23221;
Object send120050;
Object send120051;
Object send120052;
Object localvariable16936;
Object array13441;
Object smallint8395;
Object constant23222;
Object string13604;
Object constant23223;
Object send120053;
Object smallint8396;
Object constant23224;
Object string13605;
Object constant23225;
Object send120054;
Object smallint8397;
Object constant23226;
Object string13606;
Object constant23227;
Object send120055;
Object send120056;
Object block7947;
Object smallint8398;
Object constant23228;
Object send120057;
Object send120058;
Object send120059;
Object send120060;
Object send120061;
Object smallint8399;
Object constant23229;
Object send120062;
Object string13607;
Object constant23230;
Object send120063;
Object assign14711;
Object send120064;
Object constant23231;
Object send120065;
Object send120066;
Object send120067;
Object localvariable16937;
Object array13442;
Object smallint8400;
Object constant23232;
Object string13608;
Object constant23233;
Object send120068;
Object smallint8401;
Object constant23234;
Object string13609;
Object constant23235;
Object send120069;
Object smallint8402;
Object constant23236;
Object string13610;
Object constant23237;
Object send120070;
Object send120071;
Object block7948;
Object smallint8403;
Object constant23238;
Object send120072;
Object send120073;
Object send120074;
Object send120075;
Object send120076;
Object smallint8404;
Object constant23239;
Object send120077;
Object method16108;
Object symbol21826;
Object methodclosure16106;
Object localvariable16938;
Object localvariable16939;
Object localvariable16940;
Object array13443;
Object symbol22279;
Object send120078;
Object assign14712;
Object string13611;
Object constant23240;
Object assign14713;
Object send120079;
Object assign14714;
Object send120080;
Object send120081;
Object send120082;
Object send120083;
Object send120084;
Object send120085;
Object send120086;
Object send120087;
Object send120088;
Object send120089;
Object string13612;
Object constant23241;
Object send120090;
Object method16109;
Object symbol21846;
Object methodclosure16107;
Object localvariable16941;
Object localvariable16942;
Object localvariable16943;
Object array13444;
Object send120091;
Object assign14715;
Object string13613;
Object constant23242;
Object assign14716;
Object send120092;
Object assign14717;
Object send120093;
Object send120094;
Object send120095;
Object send120096;
Object send120097;
Object send120098;
Object send120099;
Object send120100;
Object send120101;
Object send120102;
Object send120103;
Object send120104;
Object send120105;
Object send120106;
Object smallint8405;
Object constant23243;
Object send120107;
Object send120108;
Object send120109;
Object send120110;
Object smallint8406;
Object constant23244;
Object send120111;
Object send120112;
Object send120113;
Object send120114;
Object smallint8407;
Object constant23245;
Object send120115;
Object method16110;
Object symbol21874;
Object methodclosure16108;
Object localvariable16944;
Object localvariable16945;
Object localvariable16946;
Object array13445;
Object send120116;
Object assign14718;
Object string13614;
Object constant23246;
Object assign14719;
Object send120117;
Object assign14720;
Object send120118;
Object send120119;
Object send120120;
Object send120121;
Object send120122;
Object send120123;
Object send120124;
Object send120125;
Object send120126;
Object send120127;
Object string13615;
Object constant23247;
Object send120128;
Object send120129;
Object send120130;
Object send120131;
Object send120132;
Object send120133;
Object send120134;
Object method16111;
Object symbol21828;
Object methodclosure16109;
Object localvariable16947;
Object localvariable16948;
Object array13446;
Object send120135;
Object assign14721;
Object string13616;
Object constant23248;
Object send120136;
Object assign14722;
Object send120137;
Object send120138;
Object string13617;
Object constant23249;
Object send120139;
Object send120140;
Object send120141;
Object smallint8408;
Object constant23250;
Object send120142;
Object string13618;
Object constant23251;
Object send120143;
Object assign14723;
Object send120144;
Object send120145;
Object send120146;
Object send120147;
Object send120148;
Object send120149;
Object smallint8409;
Object constant23252;
Object send120150;
Object method16112;
Object symbol21848;
Object methodclosure16110;
Object localvariable16949;
Object localvariable16950;
Object localvariable16951;
Object array13447;
Object send120151;
Object assign14724;
Object string13619;
Object constant23253;
Object send120152;
Object assign14725;
Object send120153;
Object assign14726;
Object send120154;
Object send120155;
Object send120156;
Object send120157;
Object send120158;
Object send120159;
Object send120160;
Object send120161;
Object send120162;
Object send120163;
Object string13620;
Object constant23254;
Object send120164;
Object send120165;
Object assign14727;
Object send120166;
Object send120167;
Object send120168;
Object send120169;
Object send120170;
Object send120171;
Object send120172;
Object send120173;
Object send120174;
Object send120175;
Object string13621;
Object constant23255;
Object send120176;
Object send120177;
Object assign14728;
Object send120178;
Object send120179;
Object send120180;
Object send120181;
Object send120182;
Object send120183;
Object send120184;
Object send120185;
Object send120186;
Object send120187;
Object string13622;
Object constant23256;
Object send120188;
Object send120189;
Object send120190;
Object send120191;
Object send120192;
Object method16113;
Object symbol21876;
Object methodclosure16111;
Object localvariable16952;
Object localvariable16953;
Object array13448;
Object send120193;
Object assign14729;
Object string13623;
Object constant23257;
Object send120194;
Object assign14730;
Object send120195;
Object constant23258;
Object send120196;
Object send120197;
Object send120198;
Object localvariable16954;
Object array13449;
Object smallint8410;
Object constant23259;
Object string13624;
Object constant23260;
Object send120199;
Object smallint8411;
Object constant23261;
Object string13625;
Object constant23262;
Object send120200;
Object smallint8412;
Object constant23263;
Object string13626;
Object constant23264;
Object send120201;
Object send120202;
Object block7949;
Object smallint8413;
Object constant23265;
Object send120203;
Object send120204;
Object send120205;
Object send120206;
Object send120207;
Object smallint8414;
Object constant23266;
Object send120208;
Object string13627;
Object constant23267;
Object send120209;
Object assign14731;
Object send120210;
Object send120211;
Object send120212;
Object send120213;
Object send120214;
Object method16114;
Object symbol21868;
Object methodclosure16112;
Object localvariable16955;
Object localvariable16956;
Object array13450;
Object send120215;
Object assign14732;
Object string13628;
Object constant23268;
Object send120216;
Object assign14733;
Object send120217;
Object send120218;
Object send120219;
Object send120220;
Object send120221;
Object send120222;
Object send120223;
Object smallint8415;
Object constant23269;
Object send120224;
Object string13629;
Object constant23270;
Object send120225;
Object assign14734;
Object send120226;
Object send120227;
Object send120228;
Object send120229;
Object send120230;
Object send120231;
Object send120232;
Object smallint8416;
Object constant23271;
Object send120233;
Object string13630;
Object constant23272;
Object send120234;
Object assign14735;
Object send120235;
Object send120236;
Object send120237;
Object send120238;
Object send120239;
Object send120240;
Object send120241;
Object smallint8417;
Object constant23273;
Object send120242;
Object method16115;
Object symbol21838;
Object methodclosure16113;
Object localvariable16957;
Object localvariable16958;
Object localvariable16959;
Object array13451;
Object send120243;
Object assign14736;
Object string13631;
Object constant23274;
Object send120244;
Object assign14737;
Object send120245;
Object assign14738;
Object send120246;
Object send120247;
Object send120248;
Object send120249;
Object send120250;
Object send120251;
Object string13632;
Object constant23275;
Object send120252;
Object send120253;
Object send120254;
Object smallint8418;
Object constant23276;
Object send120255;
Object string13633;
Object constant23277;
Object send120256;
Object assign14739;
Object send120257;
Object send120258;
Object send120259;
Object send120260;
Object send120261;
Object send120262;
Object smallint8419;
Object constant23278;
Object send120263;
Object method16116;
Object symbol21858;
Object methodclosure16114;
Object localvariable16960;
Object localvariable16961;
Object localvariable16962;
Object array13452;
Object send120264;
Object assign14740;
Object string13634;
Object constant23279;
Object send120265;
Object assign14741;
Object send120266;
Object send120267;
Object send120268;
Object send120269;
Object string13635;
Object constant23280;
Object send120270;
Object assign14742;
Object send120271;
Object assign14743;
Object send120272;
Object send120273;
Object send120274;
Object send120275;
Object send120276;
Object send120277;
Object send120278;
Object send120279;
Object send120280;
Object send120281;
Object string13636;
Object constant23281;
Object send120282;
Object send120283;
Object assign14744;
Object send120284;
Object send120285;
Object send120286;
Object send120287;
Object send120288;
Object send120289;
Object send120290;
Object send120291;
Object send120292;
Object send120293;
Object string13637;
Object constant23282;
Object send120294;
Object send120295;
Object assign14745;
Object send120296;
Object send120297;
Object send120298;
Object send120299;
Object send120300;
Object send120301;
Object send120302;
Object send120303;
Object send120304;
Object send120305;
Object string13638;
Object constant23283;
Object send120306;
Object send120307;
Object send120308;
Object send120309;
Object send120310;
Object method16117;
Object symbol21881;
Object methodclosure16115;
Object localvariable16963;
Object localvariable16964;
Object localvariable16965;
Object localvariable16966;
Object array13453;
Object send120311;
Object assign14746;
Object string13639;
Object constant23284;
Object send120312;
Object assign14747;
Object send120313;
Object assign14748;
Object send120314;
Object send120315;
Object send120316;
Object send120317;
Object send120318;
Object assign14749;
Object string13640;
Object constant23285;
Object send120319;
Object assign14750;
Object send120320;
Object assign14751;
Object send120321;
Object send120322;
Object send120323;
Object send120324;
Object send120325;
Object send120326;
Object send120327;
Object send120328;
Object method16118;
Object symbol21878;
Object methodclosure16116;
Object method16119;
Object symbol21831;
Object methodclosure16117;
Object localvariable16967;
Object localvariable16968;
Object localvariable16969;
Object array13454;
Object send120329;
Object assign14752;
Object string13641;
Object constant23286;
Object send120330;
Object assign14753;
Object send120331;
Object assign14754;
Object send120332;
Object send120333;
Object send120334;
Object send120335;
Object send120336;
Object send120337;
Object send120338;
Object send120339;
Object string13642;
Object constant23287;
Object send120340;
Object assign14755;
Object send120341;
Object assign14756;
Object send120342;
Object send120343;
Object send120344;
Object send120345;
Object send120346;
Object send120347;
Object smallint8420;
Object constant23288;
Object send120348;
Object send120349;
Object send120350;
Object send120351;
Object send120352;
Object send120353;
Object send120354;
Object send120355;
Object send120356;
Object send120357;
Object string13643;
Object constant23289;
Object send120358;
Object send120359;
Object smallint8421;
Object constant23290;
Object send120360;
Object send120361;
Object send120362;
Object send120363;
Object send120364;
Object smallint8422;
Object constant23291;
Object send120365;
Object send120366;
Object send120367;
Object string13644;
Object constant23292;
Object send120368;
Object send120369;
Object smallint8423;
Object constant23293;
Object send120370;
Object send120371;
Object send120372;
Object send120373;
Object send120374;
Object smallint8424;
Object constant23294;
Object send120375;
Object send120376;
Object send120377;
Object string13645;
Object constant23295;
Object send120378;
Object send120379;
Object smallint8425;
Object constant23296;
Object send120380;
Object send120381;
Object send120382;
Object send120383;
Object send120384;
Object smallint8426;
Object constant23297;
Object send120385;
Object send120386;
Object send120387;
Object string13646;
Object constant23298;
Object send120388;
Object send120389;
Object smallint8427;
Object constant23299;
Object send120390;
Object send120391;
Object send120392;
Object send120393;
Object method16120;
Object symbol21815;
Object methodclosure16118;
Object localvariable16970;
Object localvariable16971;
Object array13455;
Object symbol22280;
Object send120394;
Object assign14757;
Object string13647;
Object constant23300;
Object send120395;
Object assign14758;
Object send120396;
Object send120397;
Object string13648;
Object constant23301;
Object send120398;
Object send120399;
Object send120400;
Object smallint8428;
Object constant23302;
Object send120401;
Object string13649;
Object constant23303;
Object send120402;
Object assign14759;
Object send120403;
Object send120404;
Object string13650;
Object constant23304;
Object send120405;
Object send120406;
Object send120407;
Object smallint8429;
Object constant23305;
Object send120408;
Object string13651;
Object constant23306;
Object send120409;
Object assign14760;
Object send120410;
Object send120411;
Object send120412;
Object send120413;
Object send120414;
Object send120415;
Object smallint8430;
Object constant23307;
Object send120416;
Object method16121;
Object symbol21843;
Object methodclosure16119;
Object localvariable16972;
Object localvariable16973;
Object localvariable16974;
Object array13456;
Object send120417;
Object assign14761;
Object string13652;
Object constant23308;
Object send120418;
Object assign14762;
Object send120419;
Object assign14763;
Object send120420;
Object send120421;
Object send120422;
Object send120423;
Object send120424;
Object send120425;
Object send120426;
Object send120427;
Object send120428;
Object send120429;
Object send120430;
Object string13653;
Object constant23309;
Object send120431;
Object send120432;
Object assign14764;
Object send120433;
Object send120434;
Object send120435;
Object send120436;
Object send120437;
Object send120438;
Object send120439;
Object send120440;
Object send120441;
Object send120442;
Object send120443;
Object string13654;
Object constant23310;
Object send120444;
Object send120445;
Object send120446;
Object send120447;
Object send120448;
Object send120449;
Object send120450;
Object send120451;
Object string13655;
Object constant23311;
Object send120452;
Object send120453;
Object send120454;
Object smallint8431;
Object constant23312;
Object send120455;
Object string13656;
Object constant23313;
Object send120456;
Object assign14765;
Object send120457;
Object send120458;
Object send120459;
Object send120460;
Object method16122;
Object symbol21851;
Object methodclosure16120;
Object localvariable16975;
Object localvariable16976;
Object array13457;
Object send120461;
Object assign14766;
Object string13657;
Object constant23314;
Object send120462;
Object assign14767;
Object send120463;
Object send120464;
Object string13658;
Object constant23315;
Object send120465;
Object send120466;
Object send120467;
Object smallint8432;
Object constant23316;
Object send120468;
Object string13659;
Object constant23317;
Object send120469;
Object assign14768;
Object send120470;
Object send120471;
Object string13660;
Object constant23318;
Object send120472;
Object send120473;
Object send120474;
Object smallint8433;
Object constant23319;
Object send120475;
Object string13661;
Object constant23320;
Object send120476;
Object assign14769;
Object send120477;
Object send120478;
Object string13662;
Object constant23321;
Object send120479;
Object send120480;
Object send120481;
Object smallint8434;
Object constant23322;
Object send120482;
Object string13663;
Object constant23323;
Object send120483;
Object assign14770;
Object send120484;
Object send120485;
Object string13664;
Object constant23324;
Object send120486;
Object send120487;
Object send120488;
Object smallint8435;
Object constant23325;
Object send120489;
Object string13665;
Object constant23326;
Object send120490;
Object assign14771;
Object send120491;
Object send120492;
Object string13666;
Object constant23327;
Object send120493;
Object send120494;
Object send120495;
Object smallint8436;
Object constant23328;
Object send120496;
Object string13667;
Object constant23329;
Object send120497;
Object assign14772;
Object send120498;
Object send120499;
Object send120500;
Object send120501;
Object send120502;
Object send120503;
Object smallint8437;
Object constant23330;
Object send120504;
Object method16123;
Object symbol21863;
Object methodclosure16121;
Object localvariable16977;
Object localvariable16978;
Object localvariable16979;
Object array13458;
Object send120505;
Object assign14773;
Object string13668;
Object constant23331;
Object send120506;
Object assign14774;
Object send120507;
Object assign14775;
Object send120508;
Object send120509;
Object send120510;
Object send120511;
Object send120512;
Object send120513;
Object string13669;
Object constant23332;
Object send120514;
Object send120515;
Object send120516;
Object send120517;
Object send120518;
Object send120519;
Object send120520;
Object send120521;
Object send120522;
Object string13670;
Object constant23333;
Object send120523;
Object send120524;
Object send120525;
Object smallint8438;
Object constant23334;
Object send120526;
Object string13671;
Object constant23335;
Object send120527;
Object assign14776;
Object send120528;
Object send120529;
Object send120530;
Object send120531;
Object send120532;
Object send120533;
Object smallint8439;
Object constant23336;
Object send120534;
Object string13672;
Object constant23337;
Object send120535;
Object assign14777;
Object send120536;
Object assign14778;
Object send120537;
Object send120538;
Object send120539;
Object send120540;
Object send120541;
Object send120542;
Object string13673;
Object constant23338;
Object send120543;
Object send120544;
Object send120545;
Object send120546;
Object send120547;
Object send120548;
Object send120549;
Object send120550;
Object send120551;
Object string13674;
Object constant23339;
Object send120552;
Object send120553;
Object send120554;
Object smallint8440;
Object constant23340;
Object send120555;
Object method16124;
Object symbol21871;
Object methodclosure16122;
Object localvariable16980;
Object localvariable16981;
Object localvariable16982;
Object localvariable16983;
Object array13459;
Object send120556;
Object assign14779;
Object string13675;
Object constant23341;
Object send120557;
Object assign14780;
Object send120558;
Object assign14781;
Object send120559;
Object send120560;
Object send120561;
Object send120562;
Object send120563;
Object send120564;
Object localvariable16984;
Object array13460;
Object smallint8441;
Object constant23342;
Object string13676;
Object constant23343;
Object send120565;
Object smallint8442;
Object constant23344;
Object string13677;
Object constant23345;
Object send120566;
Object smallint8443;
Object constant23346;
Object string13678;
Object constant23347;
Object send120567;
Object send120568;
Object block7950;
Object smallint8444;
Object constant23348;
Object send120569;
Object send120570;
Object send120571;
Object send120572;
Object send120573;
Object assign14782;
Object send120574;
Object send120575;
Object send120576;
Object send120577;
Object smallint8445;
Object constant23349;
Object send120578;
Object assign14783;
Object send120579;
Object send120580;
Object send120581;
Object send120582;
Object smallint8446;
Object constant23350;
Object send120583;
Object assign14784;
Object send120584;
Object send120585;
Object send120586;
Object send120587;
Object send120588;
Object smallint8447;
Object constant23351;
Object send120589;
Object method16125;
Object symbol21833;
Object methodclosure16123;
Object localvariable16985;
Object localvariable16986;
Object localvariable16987;
Object array13461;
Object send120590;
Object assign14785;
Object string13679;
Object constant23352;
Object send120591;
Object assign14786;
Object send120592;
Object assign14787;
Object send120593;
Object send120594;
Object send120595;
Object send120596;
Object send120597;
Object string13680;
Object constant23353;
Object send120598;
Object send120599;
Object send120600;
Object smallint8448;
Object constant23354;
Object send120601;
Object string13681;
Object constant23355;
Object send120602;
Object assign14788;
Object send120603;
Object assign14789;
Object send120604;
Object send120605;
Object send120606;
Object send120607;
Object send120608;
Object string13682;
Object constant23356;
Object send120609;
Object send120610;
Object send120611;
Object smallint8449;
Object constant23357;
Object send120612;
Object string13683;
Object constant23358;
Object send120613;
Object assign14790;
Object send120614;
Object assign14791;
Object send120615;
Object send120616;
Object send120617;
Object send120618;
Object send120619;
Object string13684;
Object constant23359;
Object send120620;
Object send120621;
Object send120622;
Object smallint8450;
Object constant23360;
Object send120623;
Object method16126;
Object symbol21825;
Object methodclosure16124;
Object localvariable16988;
Object localvariable16989;
Object localvariable16990;
Object array13462;
Object send120624;
Object assign14792;
Object string13685;
Object constant23361;
Object assign14793;
Object send120625;
Object assign14794;
Object send120626;
Object send120627;
Object send120628;
Object send120629;
Object send120630;
Object send120631;
Object send120632;
Object send120633;
Object send120634;
Object send120635;
Object send120636;
Object send120637;
Object send120638;
Object send120639;
Object smallint8451;
Object constant23362;
Object send120640;
Object send120641;
Object send120642;
Object send120643;
Object smallint8452;
Object constant23363;
Object send120644;
Object send120645;
Object send120646;
Object send120647;
Object smallint8453;
Object constant23364;
Object send120648;
Object method16127;
Object symbol21845;
Object methodclosure16125;
Object localvariable16991;
Object array13463;
Object string13686;
Object constant23365;
Object send120649;
Object send120650;
Object assign14795;
Object string13687;
Object constant23366;
Object send120651;
Object send120652;
Object send120653;
Object send120654;
Object send120655;
Object string13688;
Object constant23367;
Object send120656;
Object send120657;
Object send120658;
Object send120659;
Object method16128;
Object symbol21873;
Object methodclosure16126;
Object localvariable16992;
Object localvariable16993;
Object array13464;
Object send120660;
Object assign14796;
Object string13689;
Object constant23368;
Object send120661;
Object send120662;
Object send120663;
Object assign14797;
Object send120664;
Object send120665;
Object send120666;
Object send120667;
Object send120668;
Object send120669;
Object send120670;
Object send120671;
Object send120672;
Object send120673;
Object send120674;
Object send120675;
Object send120676;
Object send120677;
Object send120678;
Object send120679;
Object string13690;
Object constant23369;
Object send120680;
Object send120681;
Object send120682;
Object send120683;
Object send120684;
Object string13691;
Object constant23370;
Object send120685;
Object send120686;
Object send120687;
Object send120688;
Object string13692;
Object constant23371;
Object send120689;
Object send120690;
Object send120691;
Object send120692;
Object send120693;
Object send120694;
Object send120695;
Object send120696;
Object string13693;
Object constant23372;
Object send120697;
Object method16129;
Object symbol21865;
Object methodclosure16127;
Object localvariable16994;
Object localvariable16995;
Object localvariable16996;
Object array13465;
Object send120698;
Object assign14798;
Object string13694;
Object constant23373;
Object send120699;
Object assign14799;
Object send120700;
Object assign14800;
Object send120701;
Object send120702;
Object send120703;
Object send120704;
Object send120705;
Object send120706;
Object string13695;
Object constant23374;
Object send120707;
Object send120708;
Object send120709;
Object send120710;
Object send120711;
Object send120712;
Object send120713;
Object send120714;
Object string13696;
Object constant23375;
Object send120715;
Object send120716;
Object send120717;
Object send120718;
Object send120719;
Object send120720;
Object send120721;
Object send120722;
Object string13697;
Object constant23376;
Object send120723;
Object send120724;
Object send120725;
Object smallint8454;
Object constant23377;
Object send120726;
Object string13698;
Object constant23378;
Object send120727;
Object assign14801;
Object send120728;
Object assign14802;
Object send120729;
Object send120730;
Object send120731;
Object send120732;
Object send120733;
Object send120734;
Object string13699;
Object constant23379;
Object send120735;
Object send120736;
Object send120737;
Object send120738;
Object send120739;
Object send120740;
Object send120741;
Object send120742;
Object string13700;
Object constant23380;
Object send120743;
Object send120744;
Object assign14803;
Object send120745;
Object send120746;
Object send120747;
Object send120748;
Object send120749;
Object send120750;
Object string13701;
Object constant23381;
Object send120751;
Object send120752;
Object send120753;
Object send120754;
Object send120755;
Object send120756;
Object send120757;
Object send120758;
Object string13702;
Object constant23382;
Object send120759;
Object send120760;
Object send120761;
Object send120762;
Object send120763;
Object send120764;
Object send120765;
Object send120766;
Object string13703;
Object constant23383;
Object send120767;
Object send120768;
Object send120769;
Object smallint8455;
Object constant23384;
Object send120770;
Object method16130;
Object symbol21835;
Object methodclosure16128;

void SCParserTest_create_ast() {
objectlayout5047 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
instancevariable3974 = (Object)new_AST_InstVariable(0, L"layout");
((Type_Array)objectlayout5047)->values[0] = instancevariable3974;
instancevariable3975 = (Object)new_AST_InstVariable(1, L"superclass");
((Type_Array)objectlayout5047)->values[1] = instancevariable3975;
instancevariable3976 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout5047)->values[2] = instancevariable3976;
instancevariable3977 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout5047)->values[3] = instancevariable3977;
instancevariable3978 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout5047)->values[4] = instancevariable3978;
instancevariable3979 = (Object)new_AST_InstVariable(5, L"history");
((Type_Array)objectlayout5047)->values[5] = instancevariable3979;
symbol21790 = (Object)new_Type_Symbol_cached(L"TestCase");
objectlayout5048 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable3980 = (Object)new_AST_InstVariable(0, L"testSelector");
((Type_Array)objectlayout5048)->values[0] = instancevariable3980;
class2710 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout5048, objectlayout5047);
((Type_Class)class2710)->name = (Type_Symbol)symbol21790;
metaclass2710 = (Object)HEADER(class2710);
objectlayout5049 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5049)->values[0] = instancevariable3974;
((Type_Array)objectlayout5049)->values[1] = instancevariable3975;
((Type_Array)objectlayout5049)->values[2] = instancevariable3976;
((Type_Array)objectlayout5049)->values[3] = instancevariable3977;
((Type_Array)objectlayout5049)->values[4] = instancevariable3978;
symbol21966 = (Object)new_Type_Symbol_cached(L"Collection");
class2711 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout5049);
((Type_Class)class2711)->name = (Type_Symbol)symbol21966;
metaclass2711 = (Object)HEADER(class2711);
objectlayout5050 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5050)->values[0] = instancevariable3974;
((Type_Array)objectlayout5050)->values[1] = instancevariable3975;
((Type_Array)objectlayout5050)->values[2] = instancevariable3976;
((Type_Array)objectlayout5050)->values[3] = instancevariable3977;
((Type_Array)objectlayout5050)->values[4] = instancevariable3978;
symbol21948 = (Object)new_Type_Symbol_cached(L"SmallDictionary");
objectlayout5051 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable3981 = (Object)new_AST_InstVariable(0, L"keys");
((Type_Array)objectlayout5051)->values[0] = instancevariable3981;
instancevariable3982 = (Object)new_AST_InstVariable(1, L"values");
((Type_Array)objectlayout5051)->values[1] = instancevariable3982;
instancevariable3983 = (Object)new_AST_InstVariable(2, L"size");
((Type_Array)objectlayout5051)->values[2] = instancevariable3983;
class2712 = (Object)new_Class_withMeta((Object)class2711, objectlayout5051, objectlayout5050);
((Type_Class)class2712)->name = (Type_Symbol)symbol21948;
metaclass2712 = (Object)HEADER(class2712);
objectlayout5052 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5052)->values[0] = instancevariable3974;
((Type_Array)objectlayout5052)->values[1] = instancevariable3975;
((Type_Array)objectlayout5052)->values[2] = instancevariable3976;
((Type_Array)objectlayout5052)->values[3] = instancevariable3977;
((Type_Array)objectlayout5052)->values[4] = instancevariable3978;
symbol22157 = (Object)new_Type_Symbol_cached(L"Set");
objectlayout5053 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable3984 = (Object)new_AST_InstVariable(0, L"tally");
((Type_Array)objectlayout5053)->values[0] = instancevariable3984;
instancevariable3985 = (Object)new_AST_InstVariable(1, L"array");
((Type_Array)objectlayout5053)->values[1] = instancevariable3985;
class2713 = (Object)new_Class_withMeta((Object)class2711, objectlayout5053, objectlayout5052);
((Type_Class)class2713)->name = (Type_Symbol)symbol22157;
metaclass2713 = (Object)HEADER(class2713);
objectlayout5054 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5054)->values[0] = instancevariable3974;
((Type_Array)objectlayout5054)->values[1] = instancevariable3975;
((Type_Array)objectlayout5054)->values[2] = instancevariable3976;
((Type_Array)objectlayout5054)->values[3] = instancevariable3977;
((Type_Array)objectlayout5054)->values[4] = instancevariable3978;
symbol21965 = (Object)new_Type_Symbol_cached(L"SequenceableCollection");
class2714 = (Object)new_Class_withMeta((Object)class2711, empty_object_layout, objectlayout5054);
((Type_Class)class2714)->name = (Type_Symbol)symbol21965;
metaclass2714 = (Object)HEADER(class2714);
objectlayout5055 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5055)->values[0] = instancevariable3974;
((Type_Array)objectlayout5055)->values[1] = instancevariable3975;
((Type_Array)objectlayout5055)->values[2] = instancevariable3976;
((Type_Array)objectlayout5055)->values[3] = instancevariable3977;
((Type_Array)objectlayout5055)->values[4] = instancevariable3978;
symbol21964 = (Object)new_Type_Symbol_cached(L"ArrayedCollection");
class2715 = (Object)new_Class_withMeta((Object)class2714, empty_object_layout, objectlayout5055);
((Type_Class)class2715)->name = (Type_Symbol)symbol21964;
metaclass2715 = (Object)HEADER(class2715);
objectlayout5056 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5056)->values[0] = instancevariable3974;
((Type_Array)objectlayout5056)->values[1] = instancevariable3975;
((Type_Array)objectlayout5056)->values[2] = instancevariable3976;
((Type_Array)objectlayout5056)->values[3] = instancevariable3977;
((Type_Array)objectlayout5056)->values[4] = instancevariable3978;
symbol21817 = (Object)new_Type_Symbol_cached(L"OrderedCollection");
objectlayout5057 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable3986 = (Object)new_AST_InstVariable(0, L"array");
((Type_Array)objectlayout5057)->values[0] = instancevariable3986;
instancevariable3987 = (Object)new_AST_InstVariable(1, L"firstIndex");
((Type_Array)objectlayout5057)->values[1] = instancevariable3987;
instancevariable3988 = (Object)new_AST_InstVariable(2, L"lastIndex");
((Type_Array)objectlayout5057)->values[2] = instancevariable3988;
class2716 = (Object)new_Class_withMeta((Object)class2714, objectlayout5057, objectlayout5056);
((Type_Class)class2716)->name = (Type_Symbol)symbol21817;
metaclass2716 = (Object)HEADER(class2716);
objectlayout5058 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5058)->values[0] = instancevariable3974;
((Type_Array)objectlayout5058)->values[1] = instancevariable3975;
((Type_Array)objectlayout5058)->values[2] = instancevariable3976;
((Type_Array)objectlayout5058)->values[3] = instancevariable3977;
((Type_Array)objectlayout5058)->values[4] = instancevariable3978;
symbol21942 = (Object)new_Type_Symbol_cached(L"Stream");
class2717 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout5058);
((Type_Class)class2717)->name = (Type_Symbol)symbol21942;
metaclass2717 = (Object)HEADER(class2717);
objectlayout5059 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5059)->values[0] = instancevariable3974;
((Type_Array)objectlayout5059)->values[1] = instancevariable3975;
((Type_Array)objectlayout5059)->values[2] = instancevariable3976;
((Type_Array)objectlayout5059)->values[3] = instancevariable3977;
((Type_Array)objectlayout5059)->values[4] = instancevariable3978;
symbol21941 = (Object)new_Type_Symbol_cached(L"PositionableStream");
objectlayout5060 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable3989 = (Object)new_AST_InstVariable(0, L"collection");
((Type_Array)objectlayout5060)->values[0] = instancevariable3989;
instancevariable3990 = (Object)new_AST_InstVariable(1, L"position");
((Type_Array)objectlayout5060)->values[1] = instancevariable3990;
instancevariable3991 = (Object)new_AST_InstVariable(2, L"readLimit");
((Type_Array)objectlayout5060)->values[2] = instancevariable3991;
class2718 = (Object)new_Class_withMeta((Object)class2717, objectlayout5060, objectlayout5059);
((Type_Class)class2718)->name = (Type_Symbol)symbol21941;
metaclass2718 = (Object)HEADER(class2718);
objectlayout5061 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5061)->values[0] = instancevariable3974;
((Type_Array)objectlayout5061)->values[1] = instancevariable3975;
((Type_Array)objectlayout5061)->values[2] = instancevariable3976;
((Type_Array)objectlayout5061)->values[3] = instancevariable3977;
((Type_Array)objectlayout5061)->values[4] = instancevariable3978;
symbol21940 = (Object)new_Type_Symbol_cached(L"ReadStream");
objectlayout5062 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5062)->values[0] = instancevariable3989;
((Type_Array)objectlayout5062)->values[1] = instancevariable3990;
((Type_Array)objectlayout5062)->values[2] = instancevariable3991;
class2719 = (Object)new_Class_withMeta((Object)class2718, objectlayout5062, objectlayout5061);
((Type_Class)class2719)->name = (Type_Symbol)symbol21940;
metaclass2719 = (Object)HEADER(class2719);
objectlayout5063 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5063)->values[0] = instancevariable3974;
((Type_Array)objectlayout5063)->values[1] = instancevariable3975;
((Type_Array)objectlayout5063)->values[2] = instancevariable3976;
((Type_Array)objectlayout5063)->values[3] = instancevariable3977;
((Type_Array)objectlayout5063)->values[4] = instancevariable3978;
instancevariable3992 = (Object)new_AST_InstVariable(5, L"uidCounter");
((Type_Array)objectlayout5063)->values[5] = instancevariable3992;
symbol21953 = (Object)new_Type_Symbol_cached(L"ASTNode");
objectlayout5064 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable3993 = (Object)new_AST_InstVariable(0, L"sourceObject");
((Type_Array)objectlayout5064)->values[0] = instancevariable3993;
instancevariable3994 = (Object)new_AST_InstVariable(1, L"uid");
((Type_Array)objectlayout5064)->values[1] = instancevariable3994;
instancevariable3995 = (Object)new_AST_InstVariable(2, L"id");
((Type_Array)objectlayout5064)->values[2] = instancevariable3995;
class2720 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout5064, objectlayout5063);
((Type_Class)class2720)->name = (Type_Symbol)symbol21953;
metaclass2720 = (Object)HEADER(class2720);
objectlayout5065 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5065)->values[0] = instancevariable3974;
((Type_Array)objectlayout5065)->values[1] = instancevariable3975;
((Type_Array)objectlayout5065)->values[2] = instancevariable3976;
((Type_Array)objectlayout5065)->values[3] = instancevariable3977;
((Type_Array)objectlayout5065)->values[4] = instancevariable3978;
((Type_Array)objectlayout5065)->values[5] = instancevariable3992;
symbol22145 = (Object)new_Type_Symbol_cached(L"Variable");
objectlayout5066 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5066)->values[0] = instancevariable3993;
((Type_Array)objectlayout5066)->values[1] = instancevariable3994;
((Type_Array)objectlayout5066)->values[2] = instancevariable3995;
instancevariable3996 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout5066)->values[3] = instancevariable3996;
instancevariable3997 = (Object)new_AST_InstVariable(4, L"scopeId");
((Type_Array)objectlayout5066)->values[4] = instancevariable3997;
instancevariable3998 = (Object)new_AST_InstVariable(5, L"localId");
((Type_Array)objectlayout5066)->values[5] = instancevariable3998;
class2721 = (Object)new_Class_withMeta((Object)class2720, objectlayout5066, objectlayout5065);
((Type_Class)class2721)->name = (Type_Symbol)symbol22145;
metaclass2721 = (Object)HEADER(class2721);
objectlayout5067 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5067)->values[0] = instancevariable3974;
((Type_Array)objectlayout5067)->values[1] = instancevariable3975;
((Type_Array)objectlayout5067)->values[2] = instancevariable3976;
((Type_Array)objectlayout5067)->values[3] = instancevariable3977;
((Type_Array)objectlayout5067)->values[4] = instancevariable3978;
((Type_Array)objectlayout5067)->values[5] = instancevariable3992;
symbol21997 = (Object)new_Type_Symbol_cached(L"LocalVariable");
objectlayout5068 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout5068)->values[0] = instancevariable3993;
((Type_Array)objectlayout5068)->values[1] = instancevariable3994;
((Type_Array)objectlayout5068)->values[2] = instancevariable3995;
((Type_Array)objectlayout5068)->values[3] = instancevariable3996;
((Type_Array)objectlayout5068)->values[4] = instancevariable3997;
((Type_Array)objectlayout5068)->values[5] = instancevariable3998;
instancevariable3999 = (Object)new_AST_InstVariable(6, L"key");
((Type_Array)objectlayout5068)->values[6] = instancevariable3999;
class2722 = (Object)new_Class_withMeta((Object)class2721, objectlayout5068, objectlayout5067);
((Type_Class)class2722)->name = (Type_Symbol)symbol21997;
metaclass2722 = (Object)HEADER(class2722);
objectlayout5069 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5069)->values[0] = instancevariable3974;
((Type_Array)objectlayout5069)->values[1] = instancevariable3975;
((Type_Array)objectlayout5069)->values[2] = instancevariable3976;
((Type_Array)objectlayout5069)->values[3] = instancevariable3977;
((Type_Array)objectlayout5069)->values[4] = instancevariable3978;
((Type_Array)objectlayout5069)->values[5] = instancevariable3992;
symbol21897 = (Object)new_Type_Symbol_cached(L"InstanceVariable");
objectlayout5070 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5070)->values[0] = instancevariable3993;
((Type_Array)objectlayout5070)->values[1] = instancevariable3994;
((Type_Array)objectlayout5070)->values[2] = instancevariable3995;
((Type_Array)objectlayout5070)->values[3] = instancevariable3996;
((Type_Array)objectlayout5070)->values[4] = instancevariable3997;
((Type_Array)objectlayout5070)->values[5] = instancevariable3998;
class2723 = (Object)new_Class_withMeta((Object)class2721, objectlayout5070, objectlayout5069);
((Type_Class)class2723)->name = (Type_Symbol)symbol21897;
metaclass2723 = (Object)HEADER(class2723);
objectlayout5071 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5071)->values[0] = instancevariable3974;
((Type_Array)objectlayout5071)->values[1] = instancevariable3975;
((Type_Array)objectlayout5071)->values[2] = instancevariable3976;
((Type_Array)objectlayout5071)->values[3] = instancevariable3977;
((Type_Array)objectlayout5071)->values[4] = instancevariable3978;
symbol21932 = (Object)new_Type_Symbol_cached(L"RuntimeObject");
objectlayout5072 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable4000 = (Object)new_AST_InstVariable(0, L"code");
((Type_Array)objectlayout5072)->values[0] = instancevariable4000;
class2724 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout5072, objectlayout5071);
((Type_Class)class2724)->name = (Type_Symbol)symbol21932;
metaclass2724 = (Object)HEADER(class2724);
objectlayout5073 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5073)->values[0] = instancevariable3974;
((Type_Array)objectlayout5073)->values[1] = instancevariable3975;
((Type_Array)objectlayout5073)->values[2] = instancevariable3976;
((Type_Array)objectlayout5073)->values[3] = instancevariable3977;
((Type_Array)objectlayout5073)->values[4] = instancevariable3978;
symbol21891 = (Object)new_Type_Symbol_cached(L"Type");
class2725 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout5073);
((Type_Class)class2725)->name = (Type_Symbol)symbol21891;
metaclass2725 = (Object)HEADER(class2725);
objectlayout5074 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5074)->values[0] = instancevariable3974;
((Type_Array)objectlayout5074)->values[1] = instancevariable3975;
((Type_Array)objectlayout5074)->values[2] = instancevariable3976;
((Type_Array)objectlayout5074)->values[3] = instancevariable3977;
((Type_Array)objectlayout5074)->values[4] = instancevariable3978;
instancevariable4001 = (Object)new_AST_InstVariable(5, L"nilInstance");
((Type_Array)objectlayout5074)->values[5] = instancevariable4001;
symbol21892 = (Object)new_Type_Symbol_cached(L"Nil");
class2726 = (Object)new_Class_withMeta((Object)class2725, empty_object_layout, objectlayout5074);
((Type_Class)class2726)->name = (Type_Symbol)symbol21892;
metaclass2726 = (Object)HEADER(class2726);
objectlayout5075 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5075)->values[0] = instancevariable3974;
((Type_Array)objectlayout5075)->values[1] = instancevariable3975;
((Type_Array)objectlayout5075)->values[2] = instancevariable3976;
((Type_Array)objectlayout5075)->values[3] = instancevariable3977;
((Type_Array)objectlayout5075)->values[4] = instancevariable3978;
symbol22168 = (Object)new_Type_Symbol_cached(L"PEGOptionalResult");
class2727 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, objectlayout5075);
((Type_Class)class2727)->name = (Type_Symbol)symbol22168;
metaclass2727 = (Object)HEADER(class2727);
objectlayout5076 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5076)->values[0] = instancevariable3974;
((Type_Array)objectlayout5076)->values[1] = instancevariable3975;
((Type_Array)objectlayout5076)->values[2] = instancevariable3976;
((Type_Array)objectlayout5076)->values[3] = instancevariable3977;
((Type_Array)objectlayout5076)->values[4] = instancevariable3978;
symbol22163 = (Object)new_Type_Symbol_cached(L"PEGSucceededOptionalResult");
objectlayout5077 = (Object)create_layout_with_vars(Type_ObjectLayout, 1);
instancevariable4002 = (Object)new_AST_InstVariable(0, L"result");
((Type_Array)objectlayout5077)->values[0] = instancevariable4002;
class2728 = (Object)new_Class_withMeta((Object)class2727, objectlayout5077, objectlayout5076);
((Type_Class)class2728)->name = (Type_Symbol)symbol22163;
metaclass2728 = (Object)HEADER(class2728);
objectlayout5078 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5078)->values[0] = instancevariable3974;
((Type_Array)objectlayout5078)->values[1] = instancevariable3975;
((Type_Array)objectlayout5078)->values[2] = instancevariable3976;
((Type_Array)objectlayout5078)->values[3] = instancevariable3977;
((Type_Array)objectlayout5078)->values[4] = instancevariable3978;
symbol22110 = (Object)new_Type_Symbol_cached(L"PEGExpression");
objectlayout5079 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
instancevariable4003 = (Object)new_AST_InstVariable(0, L"name");
((Type_Array)objectlayout5079)->values[0] = instancevariable4003;
instancevariable4004 = (Object)new_AST_InstVariable(1, L"omit");
((Type_Array)objectlayout5079)->values[1] = instancevariable4004;
class2729 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout5079, objectlayout5078);
((Type_Class)class2729)->name = (Type_Symbol)symbol22110;
metaclass2729 = (Object)HEADER(class2729);
objectlayout5080 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5080)->values[0] = instancevariable3974;
((Type_Array)objectlayout5080)->values[1] = instancevariable3975;
((Type_Array)objectlayout5080)->values[2] = instancevariable3976;
((Type_Array)objectlayout5080)->values[3] = instancevariable3977;
((Type_Array)objectlayout5080)->values[4] = instancevariable3978;
symbol21920 = (Object)new_Type_Symbol_cached(L"PEGTerminal");
objectlayout5081 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5081)->values[0] = instancevariable4003;
((Type_Array)objectlayout5081)->values[1] = instancevariable4004;
instancevariable4005 = (Object)new_AST_InstVariable(2, L"string");
((Type_Array)objectlayout5081)->values[2] = instancevariable4005;
class2730 = (Object)new_Class_withMeta((Object)class2729, objectlayout5081, objectlayout5080);
((Type_Class)class2730)->name = (Type_Symbol)symbol21920;
metaclass2730 = (Object)HEADER(class2730);
objectlayout5082 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5082)->values[0] = instancevariable3974;
((Type_Array)objectlayout5082)->values[1] = instancevariable3975;
((Type_Array)objectlayout5082)->values[2] = instancevariable3976;
((Type_Array)objectlayout5082)->values[3] = instancevariable3977;
((Type_Array)objectlayout5082)->values[4] = instancevariable3978;
symbol22164 = (Object)new_Type_Symbol_cached(L"PEGFailedOptionalResult");
class2731 = (Object)new_Class_withMeta((Object)class2727, empty_object_layout, objectlayout5082);
((Type_Class)class2731)->name = (Type_Symbol)symbol22164;
metaclass2731 = (Object)HEADER(class2731);
objectlayout5083 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout5083)->values[0] = instancevariable3974;
((Type_Array)objectlayout5083)->values[1] = instancevariable3975;
((Type_Array)objectlayout5083)->values[2] = instancevariable3976;
((Type_Array)objectlayout5083)->values[3] = instancevariable3977;
((Type_Array)objectlayout5083)->values[4] = instancevariable3978;
instancevariable4006 = (Object)new_AST_InstVariable(5, L"separators");
((Type_Array)objectlayout5083)->values[5] = instancevariable4006;
instancevariable4007 = (Object)new_AST_InstVariable(6, L"separator");
((Type_Array)objectlayout5083)->values[6] = instancevariable4007;
symbol21872 = (Object)new_Type_Symbol_cached(L"PEGParser");
objectlayout5084 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5084)->values[0] = instancevariable4003;
((Type_Array)objectlayout5084)->values[1] = instancevariable4004;
instancevariable4008 = (Object)new_AST_InstVariable(2, L"expression");
((Type_Array)objectlayout5084)->values[2] = instancevariable4008;
instancevariable4009 = (Object)new_AST_InstVariable(3, L"semantics");
((Type_Array)objectlayout5084)->values[3] = instancevariable4009;
instancevariable4010 = (Object)new_AST_InstVariable(4, L"scopeClass");
((Type_Array)objectlayout5084)->values[4] = instancevariable4010;
instancevariable4011 = (Object)new_AST_InstVariable(5, L"separator");
((Type_Array)objectlayout5084)->values[5] = instancevariable4011;
class2732 = (Object)new_Class_withMeta((Object)class2729, objectlayout5084, objectlayout5083);
((Type_Class)class2732)->name = (Type_Symbol)symbol21872;
metaclass2732 = (Object)HEADER(class2732);
objectlayout5085 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5085)->values[0] = instancevariable3974;
((Type_Array)objectlayout5085)->values[1] = instancevariable3975;
((Type_Array)objectlayout5085)->values[2] = instancevariable3976;
((Type_Array)objectlayout5085)->values[3] = instancevariable3977;
((Type_Array)objectlayout5085)->values[4] = instancevariable3978;
symbol22114 = (Object)new_Type_Symbol_cached(L"PEGZeroOrMoreExpression");
objectlayout5086 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5086)->values[0] = instancevariable4003;
((Type_Array)objectlayout5086)->values[1] = instancevariable4004;
instancevariable4012 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout5086)->values[2] = instancevariable4012;
instancevariable4013 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout5086)->values[3] = instancevariable4013;
class2733 = (Object)new_Class_withMeta((Object)class2729, objectlayout5086, objectlayout5085);
((Type_Class)class2733)->name = (Type_Symbol)symbol22114;
metaclass2733 = (Object)HEADER(class2733);
objectlayout5087 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5087)->values[0] = instancevariable3974;
((Type_Array)objectlayout5087)->values[1] = instancevariable3975;
((Type_Array)objectlayout5087)->values[2] = instancevariable3976;
((Type_Array)objectlayout5087)->values[3] = instancevariable3977;
((Type_Array)objectlayout5087)->values[4] = instancevariable3978;
symbol22125 = (Object)new_Type_Symbol_cached(L"PEGOneOrMoreExpression");
objectlayout5088 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5088)->values[0] = instancevariable4003;
((Type_Array)objectlayout5088)->values[1] = instancevariable4004;
((Type_Array)objectlayout5088)->values[2] = instancevariable4012;
((Type_Array)objectlayout5088)->values[3] = instancevariable4013;
class2734 = (Object)new_Class_withMeta((Object)class2733, objectlayout5088, objectlayout5087);
((Type_Class)class2734)->name = (Type_Symbol)symbol22125;
metaclass2734 = (Object)HEADER(class2734);
objectlayout5089 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5089)->values[0] = instancevariable3974;
((Type_Array)objectlayout5089)->values[1] = instancevariable3975;
((Type_Array)objectlayout5089)->values[2] = instancevariable3976;
((Type_Array)objectlayout5089)->values[3] = instancevariable3977;
((Type_Array)objectlayout5089)->values[4] = instancevariable3978;
symbol22118 = (Object)new_Type_Symbol_cached(L"PEGOptionalExpression");
objectlayout5090 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5090)->values[0] = instancevariable4003;
((Type_Array)objectlayout5090)->values[1] = instancevariable4004;
instancevariable4014 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout5090)->values[2] = instancevariable4014;
instancevariable4015 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout5090)->values[3] = instancevariable4015;
class2735 = (Object)new_Class_withMeta((Object)class2729, objectlayout5090, objectlayout5089);
((Type_Class)class2735)->name = (Type_Symbol)symbol22118;
metaclass2735 = (Object)HEADER(class2735);
objectlayout5091 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5091)->values[0] = instancevariable3974;
((Type_Array)objectlayout5091)->values[1] = instancevariable3975;
((Type_Array)objectlayout5091)->values[2] = instancevariable3976;
((Type_Array)objectlayout5091)->values[3] = instancevariable3977;
((Type_Array)objectlayout5091)->values[4] = instancevariable3978;
symbol21917 = (Object)new_Type_Symbol_cached(L"PEGRange");
objectlayout5092 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5092)->values[0] = instancevariable4003;
((Type_Array)objectlayout5092)->values[1] = instancevariable4004;
instancevariable4016 = (Object)new_AST_InstVariable(2, L"start");
((Type_Array)objectlayout5092)->values[2] = instancevariable4016;
instancevariable4017 = (Object)new_AST_InstVariable(3, L"stop");
((Type_Array)objectlayout5092)->values[3] = instancevariable4017;
class2736 = (Object)new_Class_withMeta((Object)class2729, objectlayout5092, objectlayout5091);
((Type_Class)class2736)->name = (Type_Symbol)symbol21917;
metaclass2736 = (Object)HEADER(class2736);
objectlayout5093 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5093)->values[0] = instancevariable3974;
((Type_Array)objectlayout5093)->values[1] = instancevariable3975;
((Type_Array)objectlayout5093)->values[2] = instancevariable3976;
((Type_Array)objectlayout5093)->values[3] = instancevariable3977;
((Type_Array)objectlayout5093)->values[4] = instancevariable3978;
symbol21806 = (Object)new_Type_Symbol_cached(L"PEGStringScanner");
objectlayout5094 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5094)->values[0] = instancevariable3989;
((Type_Array)objectlayout5094)->values[1] = instancevariable3990;
((Type_Array)objectlayout5094)->values[2] = instancevariable3991;
instancevariable4018 = (Object)new_AST_InstVariable(3, L"separator");
((Type_Array)objectlayout5094)->values[3] = instancevariable4018;
instancevariable4019 = (Object)new_AST_InstVariable(4, L"cache");
((Type_Array)objectlayout5094)->values[4] = instancevariable4019;
class2737 = (Object)new_Class_withMeta((Object)class2719, objectlayout5094, objectlayout5093);
((Type_Class)class2737)->name = (Type_Symbol)symbol21806;
metaclass2737 = (Object)HEADER(class2737);
objectlayout5095 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5095)->values[0] = instancevariable3974;
((Type_Array)objectlayout5095)->values[1] = instancevariable3975;
((Type_Array)objectlayout5095)->values[2] = instancevariable3976;
((Type_Array)objectlayout5095)->values[3] = instancevariable3977;
((Type_Array)objectlayout5095)->values[4] = instancevariable3978;
symbol22153 = (Object)new_Type_Symbol_cached(L"PEGNotExpression");
objectlayout5096 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5096)->values[0] = instancevariable4003;
((Type_Array)objectlayout5096)->values[1] = instancevariable4004;
instancevariable4020 = (Object)new_AST_InstVariable(2, L"child");
((Type_Array)objectlayout5096)->values[2] = instancevariable4020;
class2738 = (Object)new_Class_withMeta((Object)class2729, objectlayout5096, objectlayout5095);
((Type_Class)class2738)->name = (Type_Symbol)symbol22153;
metaclass2738 = (Object)HEADER(class2738);
objectlayout5097 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5097)->values[0] = instancevariable3974;
((Type_Array)objectlayout5097)->values[1] = instancevariable3975;
((Type_Array)objectlayout5097)->values[2] = instancevariable3976;
((Type_Array)objectlayout5097)->values[3] = instancevariable3977;
((Type_Array)objectlayout5097)->values[4] = instancevariable3978;
symbol21922 = (Object)new_Type_Symbol_cached(L"PEGOrderedChoiceExpression");
objectlayout5098 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5098)->values[0] = instancevariable4003;
((Type_Array)objectlayout5098)->values[1] = instancevariable4004;
instancevariable4021 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout5098)->values[2] = instancevariable4021;
class2739 = (Object)new_Class_withMeta((Object)class2729, objectlayout5098, objectlayout5097);
((Type_Class)class2739)->name = (Type_Symbol)symbol21922;
metaclass2739 = (Object)HEADER(class2739);
objectlayout5099 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5099)->values[0] = instancevariable3974;
((Type_Array)objectlayout5099)->values[1] = instancevariable3975;
((Type_Array)objectlayout5099)->values[2] = instancevariable3976;
((Type_Array)objectlayout5099)->values[3] = instancevariable3977;
((Type_Array)objectlayout5099)->values[4] = instancevariable3978;
symbol22127 = (Object)new_Type_Symbol_cached(L"PEGSequenceExpression");
objectlayout5100 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5100)->values[0] = instancevariable4003;
((Type_Array)objectlayout5100)->values[1] = instancevariable4004;
instancevariable4022 = (Object)new_AST_InstVariable(2, L"children");
((Type_Array)objectlayout5100)->values[2] = instancevariable4022;
instancevariable4023 = (Object)new_AST_InstVariable(3, L"skipWhitespace");
((Type_Array)objectlayout5100)->values[3] = instancevariable4023;
class2740 = (Object)new_Class_withMeta((Object)class2729, objectlayout5100, objectlayout5099);
((Type_Class)class2740)->name = (Type_Symbol)symbol22127;
metaclass2740 = (Object)HEADER(class2740);
objectlayout5101 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5101)->values[0] = instancevariable3974;
((Type_Array)objectlayout5101)->values[1] = instancevariable3975;
((Type_Array)objectlayout5101)->values[2] = instancevariable3976;
((Type_Array)objectlayout5101)->values[3] = instancevariable3977;
((Type_Array)objectlayout5101)->values[4] = instancevariable3978;
((Type_Array)objectlayout5101)->values[5] = instancevariable3992;
symbol21952 = (Object)new_Type_Symbol_cached(L"ASTLiteral");
objectlayout5102 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5102)->values[0] = instancevariable3993;
((Type_Array)objectlayout5102)->values[1] = instancevariable3994;
((Type_Array)objectlayout5102)->values[2] = instancevariable3995;
class2741 = (Object)new_Class_withMeta((Object)class2720, objectlayout5102, objectlayout5101);
((Type_Class)class2741)->name = (Type_Symbol)symbol21952;
metaclass2741 = (Object)HEADER(class2741);
objectlayout5103 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5103)->values[0] = instancevariable3974;
((Type_Array)objectlayout5103)->values[1] = instancevariable3975;
((Type_Array)objectlayout5103)->values[2] = instancevariable3976;
((Type_Array)objectlayout5103)->values[3] = instancevariable3977;
((Type_Array)objectlayout5103)->values[4] = instancevariable3978;
((Type_Array)objectlayout5103)->values[5] = instancevariable3992;
symbol21808 = (Object)new_Type_Symbol_cached(L"ASTArray");
objectlayout5104 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5104)->values[0] = instancevariable3993;
((Type_Array)objectlayout5104)->values[1] = instancevariable3994;
((Type_Array)objectlayout5104)->values[2] = instancevariable3995;
instancevariable4024 = (Object)new_AST_InstVariable(3, L"literals");
((Type_Array)objectlayout5104)->values[3] = instancevariable4024;
class2742 = (Object)new_Class_withMeta((Object)class2741, objectlayout5104, objectlayout5103);
((Type_Class)class2742)->name = (Type_Symbol)symbol21808;
metaclass2742 = (Object)HEADER(class2742);
objectlayout5105 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5105)->values[0] = instancevariable3974;
((Type_Array)objectlayout5105)->values[1] = instancevariable3975;
((Type_Array)objectlayout5105)->values[2] = instancevariable3976;
((Type_Array)objectlayout5105)->values[3] = instancevariable3977;
((Type_Array)objectlayout5105)->values[4] = instancevariable3978;
((Type_Array)objectlayout5105)->values[5] = instancevariable3992;
symbol22008 = (Object)new_Type_Symbol_cached(L"ASTSelector");
objectlayout5106 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5106)->values[0] = instancevariable3993;
((Type_Array)objectlayout5106)->values[1] = instancevariable3994;
((Type_Array)objectlayout5106)->values[2] = instancevariable3995;
instancevariable4025 = (Object)new_AST_InstVariable(3, L"selector");
((Type_Array)objectlayout5106)->values[3] = instancevariable4025;
class2743 = (Object)new_Class_withMeta((Object)class2720, objectlayout5106, objectlayout5105);
((Type_Class)class2743)->name = (Type_Symbol)symbol22008;
metaclass2743 = (Object)HEADER(class2743);
objectlayout5107 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5107)->values[0] = instancevariable3974;
((Type_Array)objectlayout5107)->values[1] = instancevariable3975;
((Type_Array)objectlayout5107)->values[2] = instancevariable3976;
((Type_Array)objectlayout5107)->values[3] = instancevariable3977;
((Type_Array)objectlayout5107)->values[4] = instancevariable3978;
((Type_Array)objectlayout5107)->values[5] = instancevariable3992;
symbol21869 = (Object)new_Type_Symbol_cached(L"ASTKeywordSelector");
objectlayout5108 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5108)->values[0] = instancevariable3993;
((Type_Array)objectlayout5108)->values[1] = instancevariable3994;
((Type_Array)objectlayout5108)->values[2] = instancevariable3995;
((Type_Array)objectlayout5108)->values[3] = instancevariable4025;
instancevariable4026 = (Object)new_AST_InstVariable(4, L"keywords");
((Type_Array)objectlayout5108)->values[4] = instancevariable4026;
class2744 = (Object)new_Class_withMeta((Object)class2743, objectlayout5108, objectlayout5107);
((Type_Class)class2744)->name = (Type_Symbol)symbol21869;
metaclass2744 = (Object)HEADER(class2744);
objectlayout5109 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5109)->values[0] = instancevariable3974;
((Type_Array)objectlayout5109)->values[1] = instancevariable3975;
((Type_Array)objectlayout5109)->values[2] = instancevariable3976;
((Type_Array)objectlayout5109)->values[3] = instancevariable3977;
((Type_Array)objectlayout5109)->values[4] = instancevariable3978;
((Type_Array)objectlayout5109)->values[5] = instancevariable3992;
symbol21836 = (Object)new_Type_Symbol_cached(L"ASTKeywordMessageDefinition");
objectlayout5110 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5110)->values[0] = instancevariable3993;
((Type_Array)objectlayout5110)->values[1] = instancevariable3994;
((Type_Array)objectlayout5110)->values[2] = instancevariable3995;
((Type_Array)objectlayout5110)->values[3] = instancevariable4025;
((Type_Array)objectlayout5110)->values[4] = instancevariable4026;
instancevariable4027 = (Object)new_AST_InstVariable(5, L"parameters");
((Type_Array)objectlayout5110)->values[5] = instancevariable4027;
class2745 = (Object)new_Class_withMeta((Object)class2744, objectlayout5110, objectlayout5109);
((Type_Class)class2745)->name = (Type_Symbol)symbol21836;
metaclass2745 = (Object)HEADER(class2745);
objectlayout5111 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5111)->values[0] = instancevariable3974;
((Type_Array)objectlayout5111)->values[1] = instancevariable3975;
((Type_Array)objectlayout5111)->values[2] = instancevariable3976;
((Type_Array)objectlayout5111)->values[3] = instancevariable3977;
((Type_Array)objectlayout5111)->values[4] = instancevariable3978;
((Type_Array)objectlayout5111)->values[5] = instancevariable3992;
symbol22002 = (Object)new_Type_Symbol_cached(L"ASTExpression");
objectlayout5112 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5112)->values[0] = instancevariable3993;
((Type_Array)objectlayout5112)->values[1] = instancevariable3994;
((Type_Array)objectlayout5112)->values[2] = instancevariable3995;
class2746 = (Object)new_Class_withMeta((Object)class2720, objectlayout5112, objectlayout5111);
((Type_Class)class2746)->name = (Type_Symbol)symbol22002;
metaclass2746 = (Object)HEADER(class2746);
objectlayout5113 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5113)->values[0] = instancevariable3974;
((Type_Array)objectlayout5113)->values[1] = instancevariable3975;
((Type_Array)objectlayout5113)->values[2] = instancevariable3976;
((Type_Array)objectlayout5113)->values[3] = instancevariable3977;
((Type_Array)objectlayout5113)->values[4] = instancevariable3978;
((Type_Array)objectlayout5113)->values[5] = instancevariable3992;
symbol21820 = (Object)new_Type_Symbol_cached(L"ASTMessageCascadeExpression");
objectlayout5114 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5114)->values[0] = instancevariable3993;
((Type_Array)objectlayout5114)->values[1] = instancevariable3994;
((Type_Array)objectlayout5114)->values[2] = instancevariable3995;
instancevariable4028 = (Object)new_AST_InstVariable(3, L"receiver");
((Type_Array)objectlayout5114)->values[3] = instancevariable4028;
instancevariable4029 = (Object)new_AST_InstVariable(4, L"cascades");
((Type_Array)objectlayout5114)->values[4] = instancevariable4029;
class2747 = (Object)new_Class_withMeta((Object)class2746, objectlayout5114, objectlayout5113);
((Type_Class)class2747)->name = (Type_Symbol)symbol21820;
metaclass2747 = (Object)HEADER(class2747);
objectlayout5115 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5115)->values[0] = instancevariable3974;
((Type_Array)objectlayout5115)->values[1] = instancevariable3975;
((Type_Array)objectlayout5115)->values[2] = instancevariable3976;
((Type_Array)objectlayout5115)->values[3] = instancevariable3977;
((Type_Array)objectlayout5115)->values[4] = instancevariable3978;
((Type_Array)objectlayout5115)->values[5] = instancevariable3992;
symbol21812 = (Object)new_Type_Symbol_cached(L"ASTNumber");
objectlayout5116 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5116)->values[0] = instancevariable3993;
((Type_Array)objectlayout5116)->values[1] = instancevariable3994;
((Type_Array)objectlayout5116)->values[2] = instancevariable3995;
instancevariable4030 = (Object)new_AST_InstVariable(3, L"number");
((Type_Array)objectlayout5116)->values[3] = instancevariable4030;
instancevariable4031 = (Object)new_AST_InstVariable(4, L"base");
((Type_Array)objectlayout5116)->values[4] = instancevariable4031;
class2748 = (Object)new_Class_withMeta((Object)class2741, objectlayout5116, objectlayout5115);
((Type_Class)class2748)->name = (Type_Symbol)symbol21812;
metaclass2748 = (Object)HEADER(class2748);
objectlayout5117 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5117)->values[0] = instancevariable3974;
((Type_Array)objectlayout5117)->values[1] = instancevariable3975;
((Type_Array)objectlayout5117)->values[2] = instancevariable3976;
((Type_Array)objectlayout5117)->values[3] = instancevariable3977;
((Type_Array)objectlayout5117)->values[4] = instancevariable3978;
((Type_Array)objectlayout5117)->values[5] = instancevariable3992;
symbol21856 = (Object)new_Type_Symbol_cached(L"ASTBlock");
objectlayout5118 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5118)->values[0] = instancevariable3993;
((Type_Array)objectlayout5118)->values[1] = instancevariable3994;
((Type_Array)objectlayout5118)->values[2] = instancevariable3995;
instancevariable4032 = (Object)new_AST_InstVariable(3, L"parameters");
((Type_Array)objectlayout5118)->values[3] = instancevariable4032;
instancevariable4033 = (Object)new_AST_InstVariable(4, L"temporaries");
((Type_Array)objectlayout5118)->values[4] = instancevariable4033;
instancevariable4034 = (Object)new_AST_InstVariable(5, L"statements");
((Type_Array)objectlayout5118)->values[5] = instancevariable4034;
class2749 = (Object)new_Class_withMeta((Object)class2720, objectlayout5118, objectlayout5117);
((Type_Class)class2749)->name = (Type_Symbol)symbol21856;
metaclass2749 = (Object)HEADER(class2749);
objectlayout5119 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5119)->values[0] = instancevariable3974;
((Type_Array)objectlayout5119)->values[1] = instancevariable3975;
((Type_Array)objectlayout5119)->values[2] = instancevariable3976;
((Type_Array)objectlayout5119)->values[3] = instancevariable3977;
((Type_Array)objectlayout5119)->values[4] = instancevariable3978;
((Type_Array)objectlayout5119)->values[5] = instancevariable3992;
symbol21860 = (Object)new_Type_Symbol_cached(L"ASTKeywordAnnotation");
objectlayout5120 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5120)->values[0] = instancevariable3993;
((Type_Array)objectlayout5120)->values[1] = instancevariable3994;
((Type_Array)objectlayout5120)->values[2] = instancevariable3995;
((Type_Array)objectlayout5120)->values[3] = instancevariable4025;
((Type_Array)objectlayout5120)->values[4] = instancevariable4026;
instancevariable4035 = (Object)new_AST_InstVariable(5, L"arguments");
((Type_Array)objectlayout5120)->values[5] = instancevariable4035;
class2750 = (Object)new_Class_withMeta((Object)class2744, objectlayout5120, objectlayout5119);
((Type_Class)class2750)->name = (Type_Symbol)symbol21860;
metaclass2750 = (Object)HEADER(class2750);
objectlayout5121 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5121)->values[0] = instancevariable3974;
((Type_Array)objectlayout5121)->values[1] = instancevariable3975;
((Type_Array)objectlayout5121)->values[2] = instancevariable3976;
((Type_Array)objectlayout5121)->values[3] = instancevariable3977;
((Type_Array)objectlayout5121)->values[4] = instancevariable3978;
((Type_Array)objectlayout5121)->values[5] = instancevariable3992;
symbol22007 = (Object)new_Type_Symbol_cached(L"ASTBinarySelector");
objectlayout5122 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5122)->values[0] = instancevariable3993;
((Type_Array)objectlayout5122)->values[1] = instancevariable3994;
((Type_Array)objectlayout5122)->values[2] = instancevariable3995;
((Type_Array)objectlayout5122)->values[3] = instancevariable4025;
class2751 = (Object)new_Class_withMeta((Object)class2743, objectlayout5122, objectlayout5121);
((Type_Class)class2751)->name = (Type_Symbol)symbol22007;
metaclass2751 = (Object)HEADER(class2751);
objectlayout5123 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5123)->values[0] = instancevariable3974;
((Type_Array)objectlayout5123)->values[1] = instancevariable3975;
((Type_Array)objectlayout5123)->values[2] = instancevariable3976;
((Type_Array)objectlayout5123)->values[3] = instancevariable3977;
((Type_Array)objectlayout5123)->values[4] = instancevariable3978;
((Type_Array)objectlayout5123)->values[5] = instancevariable3992;
symbol21821 = (Object)new_Type_Symbol_cached(L"ASTBinaryExpression");
objectlayout5124 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5124)->values[0] = instancevariable3993;
((Type_Array)objectlayout5124)->values[1] = instancevariable3994;
((Type_Array)objectlayout5124)->values[2] = instancevariable3995;
((Type_Array)objectlayout5124)->values[3] = instancevariable4025;
instancevariable4036 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout5124)->values[4] = instancevariable4036;
instancevariable4037 = (Object)new_AST_InstVariable(5, L"argument");
((Type_Array)objectlayout5124)->values[5] = instancevariable4037;
class2752 = (Object)new_Class_withMeta((Object)class2751, objectlayout5124, objectlayout5123);
((Type_Class)class2752)->name = (Type_Symbol)symbol21821;
metaclass2752 = (Object)HEADER(class2752);
objectlayout5125 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5125)->values[0] = instancevariable3974;
((Type_Array)objectlayout5125)->values[1] = instancevariable3975;
((Type_Array)objectlayout5125)->values[2] = instancevariable3976;
((Type_Array)objectlayout5125)->values[3] = instancevariable3977;
((Type_Array)objectlayout5125)->values[4] = instancevariable3978;
((Type_Array)objectlayout5125)->values[5] = instancevariable3992;
symbol21813 = (Object)new_Type_Symbol_cached(L"ASTSymbol");
objectlayout5126 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5126)->values[0] = instancevariable3993;
((Type_Array)objectlayout5126)->values[1] = instancevariable3994;
((Type_Array)objectlayout5126)->values[2] = instancevariable3995;
instancevariable4038 = (Object)new_AST_InstVariable(3, L"symbol");
((Type_Array)objectlayout5126)->values[3] = instancevariable4038;
class2753 = (Object)new_Class_withMeta((Object)class2741, objectlayout5126, objectlayout5125);
((Type_Class)class2753)->name = (Type_Symbol)symbol21813;
metaclass2753 = (Object)HEADER(class2753);
objectlayout5127 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5127)->values[0] = instancevariable3974;
((Type_Array)objectlayout5127)->values[1] = instancevariable3975;
((Type_Array)objectlayout5127)->values[2] = instancevariable3976;
((Type_Array)objectlayout5127)->values[3] = instancevariable3977;
((Type_Array)objectlayout5127)->values[4] = instancevariable3978;
((Type_Array)objectlayout5127)->values[5] = instancevariable3992;
symbol21829 = (Object)new_Type_Symbol_cached(L"ASTBinaryMessageDefinition");
objectlayout5128 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5128)->values[0] = instancevariable3993;
((Type_Array)objectlayout5128)->values[1] = instancevariable3994;
((Type_Array)objectlayout5128)->values[2] = instancevariable3995;
((Type_Array)objectlayout5128)->values[3] = instancevariable4025;
instancevariable4039 = (Object)new_AST_InstVariable(4, L"parameter");
((Type_Array)objectlayout5128)->values[4] = instancevariable4039;
class2754 = (Object)new_Class_withMeta((Object)class2751, objectlayout5128, objectlayout5127);
((Type_Class)class2754)->name = (Type_Symbol)symbol21829;
metaclass2754 = (Object)HEADER(class2754);
objectlayout5129 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5129)->values[0] = instancevariable3974;
((Type_Array)objectlayout5129)->values[1] = instancevariable3975;
((Type_Array)objectlayout5129)->values[2] = instancevariable3976;
((Type_Array)objectlayout5129)->values[3] = instancevariable3977;
((Type_Array)objectlayout5129)->values[4] = instancevariable3978;
((Type_Array)objectlayout5129)->values[5] = instancevariable3992;
symbol21841 = (Object)new_Type_Symbol_cached(L"ASTUnarySelector");
objectlayout5130 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5130)->values[0] = instancevariable3993;
((Type_Array)objectlayout5130)->values[1] = instancevariable3994;
((Type_Array)objectlayout5130)->values[2] = instancevariable3995;
((Type_Array)objectlayout5130)->values[3] = instancevariable4025;
class2755 = (Object)new_Class_withMeta((Object)class2743, objectlayout5130, objectlayout5129);
((Type_Class)class2755)->name = (Type_Symbol)symbol21841;
metaclass2755 = (Object)HEADER(class2755);
objectlayout5131 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5131)->values[0] = instancevariable3974;
((Type_Array)objectlayout5131)->values[1] = instancevariable3975;
((Type_Array)objectlayout5131)->values[2] = instancevariable3976;
((Type_Array)objectlayout5131)->values[3] = instancevariable3977;
((Type_Array)objectlayout5131)->values[4] = instancevariable3978;
((Type_Array)objectlayout5131)->values[5] = instancevariable3992;
symbol21849 = (Object)new_Type_Symbol_cached(L"ASTReturnExpression");
objectlayout5132 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5132)->values[0] = instancevariable3993;
((Type_Array)objectlayout5132)->values[1] = instancevariable3994;
((Type_Array)objectlayout5132)->values[2] = instancevariable3995;
instancevariable4040 = (Object)new_AST_InstVariable(3, L"expression");
((Type_Array)objectlayout5132)->values[3] = instancevariable4040;
class2756 = (Object)new_Class_withMeta((Object)class2746, objectlayout5132, objectlayout5131);
((Type_Class)class2756)->name = (Type_Symbol)symbol21849;
metaclass2756 = (Object)HEADER(class2756);
objectlayout5133 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5133)->values[0] = instancevariable3974;
((Type_Array)objectlayout5133)->values[1] = instancevariable3975;
((Type_Array)objectlayout5133)->values[2] = instancevariable3976;
((Type_Array)objectlayout5133)->values[3] = instancevariable3977;
((Type_Array)objectlayout5133)->values[4] = instancevariable3978;
((Type_Array)objectlayout5133)->values[5] = instancevariable3992;
symbol21822 = (Object)new_Type_Symbol_cached(L"ASTMessageExpression");
objectlayout5134 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout5134)->values[0] = instancevariable3993;
((Type_Array)objectlayout5134)->values[1] = instancevariable3994;
((Type_Array)objectlayout5134)->values[2] = instancevariable3995;
((Type_Array)objectlayout5134)->values[3] = instancevariable4025;
((Type_Array)objectlayout5134)->values[4] = instancevariable4026;
instancevariable4041 = (Object)new_AST_InstVariable(5, L"receiver");
((Type_Array)objectlayout5134)->values[5] = instancevariable4041;
instancevariable4042 = (Object)new_AST_InstVariable(6, L"arguments");
((Type_Array)objectlayout5134)->values[6] = instancevariable4042;
class2757 = (Object)new_Class_withMeta((Object)class2744, objectlayout5134, objectlayout5133);
((Type_Class)class2757)->name = (Type_Symbol)symbol21822;
metaclass2757 = (Object)HEADER(class2757);
objectlayout5135 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5135)->values[0] = instancevariable3974;
((Type_Array)objectlayout5135)->values[1] = instancevariable3975;
((Type_Array)objectlayout5135)->values[2] = instancevariable3976;
((Type_Array)objectlayout5135)->values[3] = instancevariable3977;
((Type_Array)objectlayout5135)->values[4] = instancevariable3978;
((Type_Array)objectlayout5135)->values[5] = instancevariable3992;
symbol21814 = (Object)new_Type_Symbol_cached(L"ASTString");
objectlayout5136 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5136)->values[0] = instancevariable3993;
((Type_Array)objectlayout5136)->values[1] = instancevariable3994;
((Type_Array)objectlayout5136)->values[2] = instancevariable3995;
instancevariable4043 = (Object)new_AST_InstVariable(3, L"string");
((Type_Array)objectlayout5136)->values[3] = instancevariable4043;
class2758 = (Object)new_Class_withMeta((Object)class2741, objectlayout5136, objectlayout5135);
((Type_Class)class2758)->name = (Type_Symbol)symbol21814;
metaclass2758 = (Object)HEADER(class2758);
objectlayout5137 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5137)->values[0] = instancevariable3974;
((Type_Array)objectlayout5137)->values[1] = instancevariable3975;
((Type_Array)objectlayout5137)->values[2] = instancevariable3976;
((Type_Array)objectlayout5137)->values[3] = instancevariable3977;
((Type_Array)objectlayout5137)->values[4] = instancevariable3978;
((Type_Array)objectlayout5137)->values[5] = instancevariable3992;
symbol21861 = (Object)new_Type_Symbol_cached(L"ASTUnaryAnnotation");
objectlayout5138 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5138)->values[0] = instancevariable3993;
((Type_Array)objectlayout5138)->values[1] = instancevariable3994;
((Type_Array)objectlayout5138)->values[2] = instancevariable3995;
((Type_Array)objectlayout5138)->values[3] = instancevariable4025;
class2759 = (Object)new_Class_withMeta((Object)class2755, objectlayout5138, objectlayout5137);
((Type_Class)class2759)->name = (Type_Symbol)symbol21861;
metaclass2759 = (Object)HEADER(class2759);
objectlayout5139 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5139)->values[0] = instancevariable3974;
((Type_Array)objectlayout5139)->values[1] = instancevariable3975;
((Type_Array)objectlayout5139)->values[2] = instancevariable3976;
((Type_Array)objectlayout5139)->values[3] = instancevariable3977;
((Type_Array)objectlayout5139)->values[4] = instancevariable3978;
((Type_Array)objectlayout5139)->values[5] = instancevariable3992;
symbol21839 = (Object)new_Type_Symbol_cached(L"ASTAssignmentExpression");
objectlayout5140 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5140)->values[0] = instancevariable3993;
((Type_Array)objectlayout5140)->values[1] = instancevariable3994;
((Type_Array)objectlayout5140)->values[2] = instancevariable3995;
instancevariable4044 = (Object)new_AST_InstVariable(3, L"variable");
((Type_Array)objectlayout5140)->values[3] = instancevariable4044;
instancevariable4045 = (Object)new_AST_InstVariable(4, L"expression");
((Type_Array)objectlayout5140)->values[4] = instancevariable4045;
class2760 = (Object)new_Class_withMeta((Object)class2746, objectlayout5140, objectlayout5139);
((Type_Class)class2760)->name = (Type_Symbol)symbol21839;
metaclass2760 = (Object)HEADER(class2760);
objectlayout5141 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5141)->values[0] = instancevariable3974;
((Type_Array)objectlayout5141)->values[1] = instancevariable3975;
((Type_Array)objectlayout5141)->values[2] = instancevariable3976;
((Type_Array)objectlayout5141)->values[3] = instancevariable3977;
((Type_Array)objectlayout5141)->values[4] = instancevariable3978;
((Type_Array)objectlayout5141)->values[5] = instancevariable3992;
symbol21823 = (Object)new_Type_Symbol_cached(L"ASTUnaryExpression");
objectlayout5142 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5142)->values[0] = instancevariable3993;
((Type_Array)objectlayout5142)->values[1] = instancevariable3994;
((Type_Array)objectlayout5142)->values[2] = instancevariable3995;
((Type_Array)objectlayout5142)->values[3] = instancevariable4025;
instancevariable4046 = (Object)new_AST_InstVariable(4, L"receiver");
((Type_Array)objectlayout5142)->values[4] = instancevariable4046;
class2761 = (Object)new_Class_withMeta((Object)class2755, objectlayout5142, objectlayout5141);
((Type_Class)class2761)->name = (Type_Symbol)symbol21823;
metaclass2761 = (Object)HEADER(class2761);
objectlayout5143 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5143)->values[0] = instancevariable3974;
((Type_Array)objectlayout5143)->values[1] = instancevariable3975;
((Type_Array)objectlayout5143)->values[2] = instancevariable3976;
((Type_Array)objectlayout5143)->values[3] = instancevariable3977;
((Type_Array)objectlayout5143)->values[4] = instancevariable3978;
((Type_Array)objectlayout5143)->values[5] = instancevariable3992;
symbol21879 = (Object)new_Type_Symbol_cached(L"ASTCharacter");
objectlayout5144 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5144)->values[0] = instancevariable3993;
((Type_Array)objectlayout5144)->values[1] = instancevariable3994;
((Type_Array)objectlayout5144)->values[2] = instancevariable3995;
instancevariable4047 = (Object)new_AST_InstVariable(3, L"char");
((Type_Array)objectlayout5144)->values[3] = instancevariable4047;
class2762 = (Object)new_Class_withMeta((Object)class2741, objectlayout5144, objectlayout5143);
((Type_Class)class2762)->name = (Type_Symbol)symbol21879;
metaclass2762 = (Object)HEADER(class2762);
objectlayout5145 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5145)->values[0] = instancevariable3974;
((Type_Array)objectlayout5145)->values[1] = instancevariable3975;
((Type_Array)objectlayout5145)->values[2] = instancevariable3976;
((Type_Array)objectlayout5145)->values[3] = instancevariable3977;
((Type_Array)objectlayout5145)->values[4] = instancevariable3978;
((Type_Array)objectlayout5145)->values[5] = instancevariable3992;
symbol22093 = (Object)new_Type_Symbol_cached(L"ASTBraceExpression");
objectlayout5146 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5146)->values[0] = instancevariable3993;
((Type_Array)objectlayout5146)->values[1] = instancevariable3994;
((Type_Array)objectlayout5146)->values[2] = instancevariable3995;
instancevariable4048 = (Object)new_AST_InstVariable(3, L"expressions");
((Type_Array)objectlayout5146)->values[3] = instancevariable4048;
class2763 = (Object)new_Class_withMeta((Object)class2746, objectlayout5146, objectlayout5145);
((Type_Class)class2763)->name = (Type_Symbol)symbol22093;
metaclass2763 = (Object)HEADER(class2763);
objectlayout5147 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5147)->values[0] = instancevariable3974;
((Type_Array)objectlayout5147)->values[1] = instancevariable3975;
((Type_Array)objectlayout5147)->values[2] = instancevariable3976;
((Type_Array)objectlayout5147)->values[3] = instancevariable3977;
((Type_Array)objectlayout5147)->values[4] = instancevariable3978;
((Type_Array)objectlayout5147)->values[5] = instancevariable3992;
symbol22049 = (Object)new_Type_Symbol_cached(L"ASTUnaryMessageDefinition");
objectlayout5148 = (Object)create_layout_with_vars(Type_ObjectLayout, 4);
((Type_Array)objectlayout5148)->values[0] = instancevariable3993;
((Type_Array)objectlayout5148)->values[1] = instancevariable3994;
((Type_Array)objectlayout5148)->values[2] = instancevariable3995;
((Type_Array)objectlayout5148)->values[3] = instancevariable4025;
class2764 = (Object)new_Class_withMeta((Object)class2755, objectlayout5148, objectlayout5147);
((Type_Class)class2764)->name = (Type_Symbol)symbol22049;
metaclass2764 = (Object)HEADER(class2764);
objectlayout5149 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5149)->values[0] = instancevariable3974;
((Type_Array)objectlayout5149)->values[1] = instancevariable3975;
((Type_Array)objectlayout5149)->values[2] = instancevariable3976;
((Type_Array)objectlayout5149)->values[3] = instancevariable3977;
((Type_Array)objectlayout5149)->values[4] = instancevariable3978;
((Type_Array)objectlayout5149)->values[5] = instancevariable3992;
symbol21853 = (Object)new_Type_Symbol_cached(L"ASTSuper");
objectlayout5150 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5150)->values[0] = instancevariable3993;
((Type_Array)objectlayout5150)->values[1] = instancevariable3994;
((Type_Array)objectlayout5150)->values[2] = instancevariable3995;
class2765 = (Object)new_Class_withMeta((Object)class2720, objectlayout5150, objectlayout5149);
((Type_Class)class2765)->name = (Type_Symbol)symbol21853;
metaclass2765 = (Object)HEADER(class2765);
objectlayout5151 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5151)->values[0] = instancevariable3974;
((Type_Array)objectlayout5151)->values[1] = instancevariable3975;
((Type_Array)objectlayout5151)->values[2] = instancevariable3976;
((Type_Array)objectlayout5151)->values[3] = instancevariable3977;
((Type_Array)objectlayout5151)->values[4] = instancevariable3978;
((Type_Array)objectlayout5151)->values[5] = instancevariable3992;
symbol21818 = (Object)new_Type_Symbol_cached(L"ASTVariable");
objectlayout5152 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5152)->values[0] = instancevariable3993;
((Type_Array)objectlayout5152)->values[1] = instancevariable3994;
((Type_Array)objectlayout5152)->values[2] = instancevariable3995;
instancevariable4049 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout5152)->values[3] = instancevariable4049;
instancevariable4050 = (Object)new_AST_InstVariable(4, L"type");
((Type_Array)objectlayout5152)->values[4] = instancevariable4050;
class2766 = (Object)new_Class_withMeta((Object)class2720, objectlayout5152, objectlayout5151);
((Type_Class)class2766)->name = (Type_Symbol)symbol21818;
metaclass2766 = (Object)HEADER(class2766);
objectlayout5153 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5153)->values[0] = instancevariable3974;
((Type_Array)objectlayout5153)->values[1] = instancevariable3975;
((Type_Array)objectlayout5153)->values[2] = instancevariable3976;
((Type_Array)objectlayout5153)->values[3] = instancevariable3977;
((Type_Array)objectlayout5153)->values[4] = instancevariable3978;
((Type_Array)objectlayout5153)->values[5] = instancevariable3992;
symbol21854 = (Object)new_Type_Symbol_cached(L"ASTSelf");
objectlayout5154 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout5154)->values[0] = instancevariable3993;
((Type_Array)objectlayout5154)->values[1] = instancevariable3994;
((Type_Array)objectlayout5154)->values[2] = instancevariable3995;
class2767 = (Object)new_Class_withMeta((Object)class2720, objectlayout5154, objectlayout5153);
((Type_Class)class2767)->name = (Type_Symbol)symbol21854;
metaclass2767 = (Object)HEADER(class2767);
objectlayout5155 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5155)->values[0] = instancevariable3974;
((Type_Array)objectlayout5155)->values[1] = instancevariable3975;
((Type_Array)objectlayout5155)->values[2] = instancevariable3976;
((Type_Array)objectlayout5155)->values[3] = instancevariable3977;
((Type_Array)objectlayout5155)->values[4] = instancevariable3978;
((Type_Array)objectlayout5155)->values[5] = instancevariable3992;
symbol21827 = (Object)new_Type_Symbol_cached(L"ASTMethod");
objectlayout5156 = (Object)create_layout_with_vars(Type_ObjectLayout, 7);
((Type_Array)objectlayout5156)->values[0] = instancevariable3993;
((Type_Array)objectlayout5156)->values[1] = instancevariable3994;
((Type_Array)objectlayout5156)->values[2] = instancevariable3995;
instancevariable4051 = (Object)new_AST_InstVariable(3, L"message");
((Type_Array)objectlayout5156)->values[3] = instancevariable4051;
instancevariable4052 = (Object)new_AST_InstVariable(4, L"annotations");
((Type_Array)objectlayout5156)->values[4] = instancevariable4052;
instancevariable4053 = (Object)new_AST_InstVariable(5, L"temporaries");
((Type_Array)objectlayout5156)->values[5] = instancevariable4053;
instancevariable4054 = (Object)new_AST_InstVariable(6, L"statements");
((Type_Array)objectlayout5156)->values[6] = instancevariable4054;
class2768 = (Object)new_Class_withMeta((Object)class2720, objectlayout5156, objectlayout5155);
((Type_Class)class2768)->name = (Type_Symbol)symbol21827;
metaclass2768 = (Object)HEADER(class2768);
objectlayout5157 = (Object)create_layout_with_vars(Type_ObjectLayout, 5);
((Type_Array)objectlayout5157)->values[0] = instancevariable3974;
((Type_Array)objectlayout5157)->values[1] = instancevariable3975;
((Type_Array)objectlayout5157)->values[2] = instancevariable3976;
((Type_Array)objectlayout5157)->values[3] = instancevariable3977;
((Type_Array)objectlayout5157)->values[4] = instancevariable3978;
symbol21866 = (Object)new_Type_Symbol_cached(L"SCParser");
objectlayout5158 = (Object)create_layout_with_vars(Type_ObjectLayout, 3);
instancevariable4055 = (Object)new_AST_InstVariable(0, L"parsers");
((Type_Array)objectlayout5158)->values[0] = instancevariable4055;
instancevariable4056 = (Object)new_AST_InstVariable(1, L"id");
((Type_Array)objectlayout5158)->values[1] = instancevariable4056;
instancevariable4057 = (Object)new_AST_InstVariable(2, L"symbols");
((Type_Array)objectlayout5158)->values[2] = instancevariable4057;
class2769 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout5158, objectlayout5157);
((Type_Class)class2769)->name = (Type_Symbol)symbol21866;
metaclass2769 = (Object)HEADER(class2769);
objectlayout5159 = (Object)create_layout_with_vars(Type_ObjectLayout, 6);
((Type_Array)objectlayout5159)->values[0] = instancevariable3974;
((Type_Array)objectlayout5159)->values[1] = instancevariable3975;
((Type_Array)objectlayout5159)->values[2] = instancevariable3976;
((Type_Array)objectlayout5159)->values[3] = instancevariable3977;
((Type_Array)objectlayout5159)->values[4] = instancevariable3978;
((Type_Array)objectlayout5159)->values[5] = instancevariable3979;
symbol21787 = (Object)new_Type_Symbol_cached(L"SCParserTest");
objectlayout5160 = (Object)create_layout_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout5160)->values[0] = instancevariable3980;
instancevariable4058 = (Object)new_AST_InstVariable(1, L"scparser");
((Type_Array)objectlayout5160)->values[1] = instancevariable4058;
class2770 = (Object)new_Class_withMeta((Object)class2710, objectlayout5160, objectlayout5159);
((Type_Class)class2770)->name = (Type_Symbol)symbol21787;
metaclass2770 = (Object)HEADER(class2770);
classreference3102 = (Object)new_Organization_ClassReference((Type_Class)class2710);
classreference3103 = (Object)new_Organization_ClassReference((Type_Class)Type_Boolean_Class);
classreference3104 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);

// Object>>isReturnExpression
//isReturnExpression
// 	^ false
method15722 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol21800 = (Object)new_Type_Symbol_cached(L"isReturnExpression");
methodclosure15720 = (Object)new_Runtime_MethodClosure(method15722);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21800, (Runtime_MethodClosure)methodclosure15720);


// Object>>yourself
//yourself
// 	^ self
method15723 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol21799 = (Object)new_Type_Symbol_cached(L"yourself");
methodclosure15721 = (Object)new_Runtime_MethodClosure(method15723);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21799, (Runtime_MethodClosure)methodclosure15721);


// Object>>~=
//~= anObject
// 	^ (self = anObject) not.
localvariable16559 = (Object)new_AST_Variable_named(L"anObject");
array13115 = (Object)new_Type_Array_with(1, (Object)localvariable16559);
// =
send117810 = (Object)new_AST_Send((Object)Self, (Object)SMB__equal, 1, (Object)localvariable16559);
// not
send117811 = (Object)new_AST_Send((Object)send117810, (Object)SMB_not, 0);
method15724 = (Object)new_AST_Method_with((Type_Array)array13115, (Type_Array)empty_Type_Array, 1, send117811);
symbol21804 = (Object)new_Type_Symbol_cached(L"~=");
methodclosure15722 = (Object)new_Runtime_MethodClosure(method15724);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21804, (Runtime_MethodClosure)methodclosure15722);


// Object>>isNil
//isNil
// 	^ false
method15725 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure15723 = (Object)new_Runtime_MethodClosure(method15725);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure15723);


// Object>>initialize
//initialize
method15726 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol21801 = (Object)new_Type_Symbol_cached(L"initialize");
methodclosure15724 = (Object)new_Runtime_MethodClosure(method15726);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15724);


// Object>>ifNil:
//ifNil: aBlock
localvariable16560 = (Object)new_AST_Variable_named(L"aBlock");
array13116 = (Object)new_Type_Array_with(1, (Object)localvariable16560);
method15727 = (Object)new_AST_Method_with((Type_Array)array13116, (Type_Array)empty_Type_Array, 1, Self);
symbol21802 = (Object)new_Type_Symbol_cached(L"ifNil:");
methodclosure15725 = (Object)new_Runtime_MethodClosure(method15727);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21802, (Runtime_MethodClosure)methodclosure15725);


// Object>>respondsTo:
//respondsTo: selector
// 	^ self class canUnderstand: selector
localvariable16561 = (Object)new_AST_Variable_named(L"selector");
array13117 = (Object)new_Type_Array_with(1, (Object)localvariable16561);
// class
send117812 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol21888 = (Object)new_Type_Symbol_cached(L"canUnderstand:");
// canUnderstand:
send117813 = (Object)new_AST_Send((Object)send117812, (Object)symbol21888, 1, (Object)localvariable16561);
method15728 = (Object)new_AST_Method_with((Type_Array)array13117, (Type_Array)empty_Type_Array, 1, send117813);
symbol21803 = (Object)new_Type_Symbol_cached(L"respondsTo:");
methodclosure15726 = (Object)new_Runtime_MethodClosure(method15728);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21803, (Runtime_MethodClosure)methodclosure15726);


// Object>>hash
//hash
// 	^ self uid hash
symbol21956 = (Object)new_Type_Symbol_cached(L"uid");
// uid
send117814 = (Object)new_AST_Send((Object)Self, (Object)symbol21956, 0);
// hash
send117815 = (Object)new_AST_Send((Object)send117814, (Object)SMB_hash, 0);
method15729 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117815);
methodclosure15727 = (Object)new_Runtime_MethodClosure(method15729);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure15727);


// Object>>objectName
//objectName
// 	^ self class pinocchioName
// class
send117816 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol21793 = (Object)new_Type_Symbol_cached(L"pinocchioName");
// pinocchioName
send117817 = (Object)new_AST_Send((Object)send117816, (Object)symbol21793, 0);
method15730 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117817);
symbol21798 = (Object)new_Type_Symbol_cached(L"objectName");
methodclosure15728 = (Object)new_Runtime_MethodClosure(method15730);
store_method((Type_Class)Type_Object_Class, (Type_Symbol)symbol21798, (Runtime_MethodClosure)methodclosure15728);

classreference3105 = (Object)new_Organization_ClassReference((Type_Class)Behavior);

// Behavior>>parentInstVariables
//parentInstVariables
// 	|instVars |
// 	instVars := OrderedCollection new.
// 	self hasSuperclass ifTrue: [
// 		instVars addAll: self superclass layout.
// 	] ifFalse: [ 
// 		"Transcript show: self sclass name, ' superclass was nil'; cr "
// 	].
// 	^ instVars
localvariable16562 = (Object)new_AST_Variable_named(L"instVars");
array13118 = (Object)new_Type_Array_with(1, (Object)localvariable16562);
classreference3106 = (Object)new_Organization_ClassReference((Type_Class)class2716);

// OrderedCollection>>makeRoomAtLast
//makeRoomAtLast
// 	| newLast delta |
// 	newLast := self size.
// 	array size - self size = 0 ifTrue: [self grow].
// 	(delta := firstIndex - 1) = 0 ifTrue: [^ self].
// 	"we might be here under false premises or grow did the job for us"
// 	1 to: newLast do:
// 		[:index |
// 		array at: index put: (array at: index + delta).
// 		array at: index + delta put: nil].
// 	firstIndex := 1.
// 	lastIndex := newLast
localvariable16563 = (Object)new_AST_Variable_named(L"newLast");
localvariable16564 = (Object)new_AST_Variable_named(L"delta");
array13119 = (Object)new_Type_Array_with(2, (Object)localvariable16563, (Object)localvariable16564);
variable912 = (Object)new_AST_Variable_named(L"return");
array13120 = (Object)new_Type_Array_with(1, (Object)variable912);
// size
send117818 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
assign14433 = (Object)new_AST_Assign((Object)localvariable16563, (Object)send117818);
// size
send117819 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_size, 0);
// size
send117820 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// -
send117821 = (Object)new_AST_Send((Object)send117819, (Object)SMB__minus, 1, (Object)send117820);
smallint8239 = (Object)new_Type_SmallInt(0);
constant22805 = (Object)new_AST_Constant((Object)smallint8239);
// =
send117822 = (Object)new_AST_Send((Object)send117821, (Object)SMB__equal, 1, (Object)constant22805);
symbol21993 = (Object)new_Type_Symbol_cached(L"grow");
// grow
send117823 = (Object)new_AST_Send((Object)Self, (Object)symbol21993, 0);
block7738 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117823);
// ifTrue:
send117824 = (Object)new_AST_Send((Object)send117822, (Object)SMB_ifTrue_, 1, (Object)block7738);
smallint8240 = (Object)new_Type_SmallInt(1);
constant22806 = (Object)new_AST_Constant((Object)smallint8240);
// -
send117825 = (Object)new_AST_Send((Object)instancevariable3987, (Object)SMB__minus, 1, (Object)constant22806);
assign14434 = (Object)new_AST_Assign((Object)localvariable16564, (Object)send117825);
smallint8241 = (Object)new_Type_SmallInt(0);
constant22807 = (Object)new_AST_Constant((Object)smallint8241);
// =
send117826 = (Object)new_AST_Send((Object)assign14434, (Object)SMB__equal, 1, (Object)constant22807);
// escape:
send117827 = (Object)new_AST_Send((Object)variable912, (Object)SMB_escape_, 1, (Object)Self);
block7739 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117827);
// ifTrue:
send117828 = (Object)new_AST_Send((Object)send117826, (Object)SMB_ifTrue_, 1, (Object)block7739);
smallint8242 = (Object)new_Type_SmallInt(1);
constant22808 = (Object)new_AST_Constant((Object)smallint8242);
symbol21929 = (Object)new_Type_Symbol_cached(L"to:do:");
localvariable16565 = (Object)new_AST_Variable_named(L"index");
array13121 = (Object)new_Type_Array_with(1, (Object)localvariable16565);
// +
send117829 = (Object)new_AST_Send((Object)localvariable16565, (Object)SMB__plus, 1, (Object)localvariable16564);
// at:
send117830 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_at_, 1, (Object)send117829);
// at:put:
send117831 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_at_put_, 2, (Object)localvariable16565, (Object)send117830);
// +
send117832 = (Object)new_AST_Send((Object)localvariable16565, (Object)SMB__plus, 1, (Object)localvariable16564);
// at:put:
send117833 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_at_put_, 2, (Object)send117832, (Object)Nil_Const);
block7740 = (Object)new_AST_Block_with((Type_Array)array13121, (Type_Array)empty_Type_Array, 2, 2, send117831, send117833);
// to:do:
send117834 = (Object)new_AST_Send((Object)constant22808, (Object)symbol21929, 2, (Object)localvariable16563, (Object)block7740);
smallint8243 = (Object)new_Type_SmallInt(1);
constant22809 = (Object)new_AST_Constant((Object)smallint8243);
assign14435 = (Object)new_AST_Assign((Object)instancevariable3987, (Object)constant22809);
assign14436 = (Object)new_AST_Assign((Object)instancevariable3988, (Object)localvariable16563);
block7741 = (Object)new_AST_Block_with((Type_Array)array13120, (Type_Array)empty_Type_Array, 1, 7, assign14433, send117824, send117828, send117834, assign14435, assign14436, Self);
// on:
send117835 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7741);
method15731 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13119, 1, send117835);
symbol21992 = (Object)new_Type_Symbol_cached(L"makeRoomAtLast");
methodclosure15729 = (Object)new_Runtime_MethodClosure(method15731);
store_method((Type_Class)class2716, (Type_Symbol)symbol21992, (Runtime_MethodClosure)methodclosure15729);


// OrderedCollection>>growSize
//growSize
// 	^ array size max: 2
// size
send117836 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_size, 0);
symbol21928 = (Object)new_Type_Symbol_cached(L"max:");
smallint8244 = (Object)new_Type_SmallInt(2);
constant22810 = (Object)new_AST_Constant((Object)smallint8244);
// max:
send117837 = (Object)new_AST_Send((Object)send117836, (Object)symbol21928, 1, (Object)constant22810);
method15732 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117837);
symbol21994 = (Object)new_Type_Symbol_cached(L"growSize");
methodclosure15730 = (Object)new_Runtime_MethodClosure(method15732);
store_method((Type_Class)class2716, (Type_Symbol)symbol21994, (Runtime_MethodClosure)methodclosure15730);


// OrderedCollection>>reset
//reset
// 	firstIndex := array size // 3 max: 1.
// 	lastIndex := firstIndex - 1
// size
send117838 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_size, 0);
symbol22172 = (Object)new_Type_Symbol_cached(L"//");
smallint8245 = (Object)new_Type_SmallInt(3);
constant22811 = (Object)new_AST_Constant((Object)smallint8245);
// //
send117839 = (Object)new_AST_Send((Object)send117838, (Object)symbol22172, 1, (Object)constant22811);
smallint8246 = (Object)new_Type_SmallInt(1);
constant22812 = (Object)new_AST_Constant((Object)smallint8246);
// max:
send117840 = (Object)new_AST_Send((Object)send117839, (Object)symbol21928, 1, (Object)constant22812);
assign14437 = (Object)new_AST_Assign((Object)instancevariable3987, (Object)send117840);
smallint8247 = (Object)new_Type_SmallInt(1);
constant22813 = (Object)new_AST_Constant((Object)smallint8247);
// -
send117841 = (Object)new_AST_Send((Object)instancevariable3987, (Object)SMB__minus, 1, (Object)constant22813);
assign14438 = (Object)new_AST_Assign((Object)instancevariable3988, (Object)send117841);
method15733 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, assign14437, assign14438, Self);
symbol21996 = (Object)new_Type_Symbol_cached(L"reset");
methodclosure15731 = (Object)new_Runtime_MethodClosure(method15733);
store_method((Type_Class)class2716, (Type_Symbol)symbol21996, (Runtime_MethodClosure)methodclosure15731);


// OrderedCollection>>add:
//add: newObject
// 
// 	^self addLast: newObject
localvariable16566 = (Object)new_AST_Variable_named(L"newObject");
array13122 = (Object)new_Type_Array_with(1, (Object)localvariable16566);
symbol21991 = (Object)new_Type_Symbol_cached(L"addLast:");
// addLast:
send117842 = (Object)new_AST_Send((Object)Self, (Object)symbol21991, 1, (Object)localvariable16566);
method15734 = (Object)new_AST_Method_with((Type_Array)array13122, (Type_Array)empty_Type_Array, 1, send117842);
symbol21973 = (Object)new_Type_Symbol_cached(L"add:");
methodclosure15732 = (Object)new_Runtime_MethodClosure(method15734);
store_method((Type_Class)class2716, (Type_Symbol)symbol21973, (Runtime_MethodClosure)methodclosure15732);


// OrderedCollection>>addLast:
//addLast: newObject 
// 	"Add newObject to the end of the receiver. Answer newObject."
// 
// 	lastIndex = array size ifTrue: [self makeRoomAtLast].
// 	lastIndex := lastIndex + 1.
// 	array at: lastIndex put: newObject.
// 	^ newObject
localvariable16567 = (Object)new_AST_Variable_named(L"newObject");
array13123 = (Object)new_Type_Array_with(1, (Object)localvariable16567);
// size
send117843 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_size, 0);
// =
send117844 = (Object)new_AST_Send((Object)instancevariable3988, (Object)SMB__equal, 1, (Object)send117843);
// makeRoomAtLast
send117845 = (Object)new_AST_Send((Object)Self, (Object)symbol21992, 0);
block7742 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send117845);
// ifTrue:
send117846 = (Object)new_AST_Send((Object)send117844, (Object)SMB_ifTrue_, 1, (Object)block7742);
smallint8248 = (Object)new_Type_SmallInt(1);
constant22814 = (Object)new_AST_Constant((Object)smallint8248);
// +
send117847 = (Object)new_AST_Send((Object)instancevariable3988, (Object)SMB__plus, 1, (Object)constant22814);
assign14439 = (Object)new_AST_Assign((Object)instancevariable3988, (Object)send117847);
// at:put:
send117848 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_at_put_, 2, (Object)instancevariable3988, (Object)localvariable16567);
method15735 = (Object)new_AST_Method_with((Type_Array)array13123, (Type_Array)empty_Type_Array, 4, send117846, assign14439, send117848, localvariable16567);
methodclosure15733 = (Object)new_Runtime_MethodClosure(method15735);
store_method((Type_Class)class2716, (Type_Symbol)symbol21991, (Runtime_MethodClosure)methodclosure15733);


// OrderedCollection>>grow
//grow
// 	"Become larger. Typically, a subclass has to override this if the subclass
// 	adds instance variables."
// 	| newArray |
// 	newArray := Array new: self size + self growSize.
// 	newArray replaceFrom: 1 to: array size with: array startingAt: 1.
// 	array := newArray
localvariable16568 = (Object)new_AST_Variable_named(L"newArray");
array13124 = (Object)new_Type_Array_with(1, (Object)localvariable16568);
classreference3107 = (Object)new_Organization_ClassReference((Type_Class)Type_Array_Class);

// Array>>doWithIndex:
//doWithIndex: aBlockClosure 
// 	1 to: self size do:
// 		[:index | aBlockClosure value: (self at: index) value: index]
localvariable16569 = (Object)new_AST_Variable_named(L"aBlockClosure");
array13125 = (Object)new_Type_Array_with(1, (Object)localvariable16569);
smallint8249 = (Object)new_Type_SmallInt(1);
constant22815 = (Object)new_AST_Constant((Object)smallint8249);
// size
send117849 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable16570 = (Object)new_AST_Variable_named(L"index");
array13126 = (Object)new_Type_Array_with(1, (Object)localvariable16570);
symbol22173 = (Object)new_Type_Symbol_cached(L"value:value:");
// at:
send117850 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable16570);
// value:value:
send117851 = (Object)new_AST_Send((Object)localvariable16569, (Object)symbol22173, 2, (Object)send117850, (Object)localvariable16570);
block7743 = (Object)new_AST_Block_with((Type_Array)array13126, (Type_Array)empty_Type_Array, 1, 1, send117851);
// to:do:
send117852 = (Object)new_AST_Send((Object)constant22815, (Object)symbol21929, 2, (Object)send117849, (Object)block7743);
method15736 = (Object)new_AST_Method_with((Type_Array)array13125, (Type_Array)empty_Type_Array, 2, send117852, Self);
symbol21971 = (Object)new_Type_Symbol_cached(L"doWithIndex:");
methodclosure15734 = (Object)new_Runtime_MethodClosure(method15736);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21971, (Runtime_MethodClosure)methodclosure15734);


// Array>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' #( '.
// 	self do: [:each|
// 		each printOn: aStream.
// 		aStream nextPutAll: ' '
// 	].
// 	aStream nextPutAll: ')'.
localvariable16571 = (Object)new_AST_Variable_named(L"aStream");
array13127 = (Object)new_Type_Array_with(1, (Object)localvariable16571);
symbol21904 = (Object)new_Type_Symbol_cached(L"printOn:");
super1266 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16571);
symbol22174 = (Object)new_Type_Symbol_cached(L"nextPutAll:");
string13371 = (Object)new_Type_String(L" #( ");
constant22816 = (Object)new_AST_Constant((Object)string13371);
// nextPutAll:
send117853 = (Object)new_AST_Send((Object)localvariable16571, (Object)symbol22174, 1, (Object)constant22816);
symbol21924 = (Object)new_Type_Symbol_cached(L"do:");
localvariable16572 = (Object)new_AST_Variable_named(L"each");
array13128 = (Object)new_Type_Array_with(1, (Object)localvariable16572);
// printOn:
send117854 = (Object)new_AST_Send((Object)localvariable16572, (Object)symbol21904, 1, (Object)localvariable16571);
string13372 = (Object)new_Type_String(L" ");
constant22817 = (Object)new_AST_Constant((Object)string13372);
// nextPutAll:
send117855 = (Object)new_AST_Send((Object)localvariable16571, (Object)symbol22174, 1, (Object)constant22817);
block7744 = (Object)new_AST_Block_with((Type_Array)array13128, (Type_Array)empty_Type_Array, 1, 2, send117854, send117855);
// do:
send117856 = (Object)new_AST_Send((Object)Self, (Object)symbol21924, 1, (Object)block7744);
string13373 = (Object)new_Type_String(L")");
constant22818 = (Object)new_AST_Constant((Object)string13373);
// nextPutAll:
send117857 = (Object)new_AST_Send((Object)localvariable16571, (Object)symbol22174, 1, (Object)constant22818);
method15737 = (Object)new_AST_Method_with((Type_Array)array13127, (Type_Array)empty_Type_Array, 5, super1266, send117853, send117856, send117857, Self);
methodclosure15735 = (Object)new_Runtime_MethodClosure(method15737);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15735);


// Array>>do:
//do: aBlockClosure 
// 	1 to: self size do: 
// 		[:index | aBlockClosure value: (self at: index)]
localvariable16573 = (Object)new_AST_Variable_named(L"aBlockClosure");
array13129 = (Object)new_Type_Array_with(1, (Object)localvariable16573);
smallint8250 = (Object)new_Type_SmallInt(1);
constant22819 = (Object)new_AST_Constant((Object)smallint8250);
// size
send117858 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable16574 = (Object)new_AST_Variable_named(L"index");
array13130 = (Object)new_Type_Array_with(1, (Object)localvariable16574);
// at:
send117859 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable16574);
// value:
send117860 = (Object)new_AST_Send((Object)localvariable16573, (Object)SMB_value_, 1, (Object)send117859);
block7745 = (Object)new_AST_Block_with((Type_Array)array13130, (Type_Array)empty_Type_Array, 1, 1, send117860);
// to:do:
send117861 = (Object)new_AST_Send((Object)constant22819, (Object)symbol21929, 2, (Object)send117858, (Object)block7745);
method15738 = (Object)new_AST_Method_with((Type_Array)array13129, (Type_Array)empty_Type_Array, 2, send117861, Self);
methodclosure15736 = (Object)new_Runtime_MethodClosure(method15738);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21924, (Runtime_MethodClosure)methodclosure15736);


// Array>>isEmpty
//isEmpty
// 	^ self size = 0
// size
send117862 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint8251 = (Object)new_Type_SmallInt(0);
constant22820 = (Object)new_AST_Constant((Object)smallint8251);
// =
send117863 = (Object)new_AST_Send((Object)send117862, (Object)SMB__equal, 1, (Object)constant22820);
method15739 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117863);
symbol21916 = (Object)new_Type_Symbol_cached(L"isEmpty");
methodclosure15737 = (Object)new_Runtime_MethodClosure(method15739);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21916, (Runtime_MethodClosure)methodclosure15737);


// Array>>initialize
//initialize 
// 	super initialize.
super1267 = (Object)new_AST_Super((Object)symbol21801, 0);
method15740 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1267, Self);
methodclosure15738 = (Object)new_Runtime_MethodClosure(method15740);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15738);


// Array>>first:
//first: aValue
// 	^ self at: 1 put: aValue.
localvariable16575 = (Object)new_AST_Variable_named(L"aValue");
array13131 = (Object)new_Type_Array_with(1, (Object)localvariable16575);
smallint8252 = (Object)new_Type_SmallInt(1);
constant22821 = (Object)new_AST_Constant((Object)smallint8252);
// at:put:
send117864 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)constant22821, (Object)localvariable16575);
method15741 = (Object)new_AST_Method_with((Type_Array)array13131, (Type_Array)empty_Type_Array, 1, send117864);
symbol21972 = (Object)new_Type_Symbol_cached(L"first:");
methodclosure15739 = (Object)new_Runtime_MethodClosure(method15741);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21972, (Runtime_MethodClosure)methodclosure15739);


// Array>>=
//= other
// 	self == other ifTrue: [^ true].
// 	self class = other class ifFalse: [ ^ false].
// 	self size = other size ifFalse: [ ^ false ].
// 	1 to: self size do: [ :index|
// 	 	(self at: index) = (other at: index) ifFalse: [ ^ false].
// 	].
// 	^ true.
localvariable16576 = (Object)new_AST_Variable_named(L"other");
array13132 = (Object)new_Type_Array_with(1, (Object)localvariable16576);
variable913 = (Object)new_AST_Variable_named(L"return");
array13133 = (Object)new_Type_Array_with(1, (Object)variable913);
// ==
send117865 = (Object)new_AST_Send((Object)Self, (Object)SMB__pequal, 1, (Object)localvariable16576);
// escape:
send117866 = (Object)new_AST_Send((Object)variable913, (Object)SMB_escape_, 1, (Object)True_Const);
block7746 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117866);
// ifTrue:
send117867 = (Object)new_AST_Send((Object)send117865, (Object)SMB_ifTrue_, 1, (Object)block7746);
// class
send117868 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// class
send117869 = (Object)new_AST_Send((Object)localvariable16576, (Object)SMB_class, 0);
// =
send117870 = (Object)new_AST_Send((Object)send117868, (Object)SMB__equal, 1, (Object)send117869);
// escape:
send117871 = (Object)new_AST_Send((Object)variable913, (Object)SMB_escape_, 1, (Object)False_Const);
block7747 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117871);
// ifFalse:
send117872 = (Object)new_AST_Send((Object)send117870, (Object)SMB_ifFalse_, 1, (Object)block7747);
// size
send117873 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// size
send117874 = (Object)new_AST_Send((Object)localvariable16576, (Object)SMB_size, 0);
// =
send117875 = (Object)new_AST_Send((Object)send117873, (Object)SMB__equal, 1, (Object)send117874);
// escape:
send117876 = (Object)new_AST_Send((Object)variable913, (Object)SMB_escape_, 1, (Object)False_Const);
block7748 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117876);
// ifFalse:
send117877 = (Object)new_AST_Send((Object)send117875, (Object)SMB_ifFalse_, 1, (Object)block7748);
smallint8253 = (Object)new_Type_SmallInt(1);
constant22822 = (Object)new_AST_Constant((Object)smallint8253);
// size
send117878 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable16577 = (Object)new_AST_Variable_named(L"index");
array13134 = (Object)new_Type_Array_with(1, (Object)localvariable16577);
// at:
send117879 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable16577);
// at:
send117880 = (Object)new_AST_Send((Object)localvariable16576, (Object)SMB_at_, 1, (Object)localvariable16577);
// =
send117881 = (Object)new_AST_Send((Object)send117879, (Object)SMB__equal, 1, (Object)send117880);
// escape:
send117882 = (Object)new_AST_Send((Object)variable913, (Object)SMB_escape_, 1, (Object)False_Const);
block7749 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send117882);
// ifFalse:
send117883 = (Object)new_AST_Send((Object)send117881, (Object)SMB_ifFalse_, 1, (Object)block7749);
block7750 = (Object)new_AST_Block_with((Type_Array)array13134, (Type_Array)empty_Type_Array, 2, 1, send117883);
// to:do:
send117884 = (Object)new_AST_Send((Object)constant22822, (Object)symbol21929, 2, (Object)send117878, (Object)block7750);
block7751 = (Object)new_AST_Block_with((Type_Array)array13133, (Type_Array)empty_Type_Array, 1, 5, send117867, send117872, send117877, send117884, True_Const);
// on:
send117885 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7751);
method15742 = (Object)new_AST_Method_with((Type_Array)array13132, (Type_Array)empty_Type_Array, 1, send117885);
methodclosure15740 = (Object)new_Runtime_MethodClosure(method15742);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure15740);


// Array>>replaceFrom:to:with:startingAt:
//replaceFrom: start to: stop with: replacement startingAt: repStart 
// 	"This destructively replaces elements from start to stop in the receiver 
// 	starting at index, repStart, in the sequenceable collection, 
// 	replacementCollection. Answer the receiver. No range checks are 
// 	performed."
// 
// 	| index repOff |
// 	repOff := repStart - start.
// 	index := start - 1.
// 	[(index := index + 1) <= stop]
// 		whileTrue: [self at: index put: (replacement at: repOff + index)]
localvariable16578 = (Object)new_AST_Variable_named(L"start");
localvariable16579 = (Object)new_AST_Variable_named(L"stop");
localvariable16580 = (Object)new_AST_Variable_named(L"replacement");
localvariable16581 = (Object)new_AST_Variable_named(L"repStart");
array13135 = (Object)new_Type_Array_with(4, (Object)localvariable16578, (Object)localvariable16579, (Object)localvariable16580, (Object)localvariable16581);
localvariable16582 = (Object)new_AST_Variable_named(L"index");
localvariable16583 = (Object)new_AST_Variable_named(L"repOff");
array13136 = (Object)new_Type_Array_with(2, (Object)localvariable16582, (Object)localvariable16583);
// -
send117886 = (Object)new_AST_Send((Object)localvariable16581, (Object)SMB__minus, 1, (Object)localvariable16578);
assign14440 = (Object)new_AST_Assign((Object)localvariable16583, (Object)send117886);
smallint8254 = (Object)new_Type_SmallInt(1);
constant22823 = (Object)new_AST_Constant((Object)smallint8254);
// -
send117887 = (Object)new_AST_Send((Object)localvariable16578, (Object)SMB__minus, 1, (Object)constant22823);
assign14441 = (Object)new_AST_Assign((Object)localvariable16582, (Object)send117887);
smallint8255 = (Object)new_Type_SmallInt(1);
constant22824 = (Object)new_AST_Constant((Object)smallint8255);
// +
send117888 = (Object)new_AST_Send((Object)localvariable16582, (Object)SMB__plus, 1, (Object)constant22824);
assign14442 = (Object)new_AST_Assign((Object)localvariable16582, (Object)send117888);
symbol21930 = (Object)new_Type_Symbol_cached(L"<=");
// <=
send117889 = (Object)new_AST_Send((Object)assign14442, (Object)symbol21930, 1, (Object)localvariable16579);
block7752 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send117889);
// +
send117890 = (Object)new_AST_Send((Object)localvariable16583, (Object)SMB__plus, 1, (Object)localvariable16582);
// at:
send117891 = (Object)new_AST_Send((Object)localvariable16580, (Object)SMB_at_, 1, (Object)send117890);
// at:put:
send117892 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable16582, (Object)send117891);
block7753 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send117892);
// whileTrue:
send117893 = (Object)new_AST_Send((Object)block7752, (Object)SMB_whileTrue_, 1, (Object)block7753);
method15743 = (Object)new_AST_Method_with((Type_Array)array13135, (Type_Array)array13136, 4, assign14440, assign14441, send117893, Self);
symbol21975 = (Object)new_Type_Symbol_cached(L"replaceFrom:to:with:startingAt:");
methodclosure15741 = (Object)new_Runtime_MethodClosure(method15743);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21975, (Runtime_MethodClosure)methodclosure15741);


// Array>>last:
//last: aNode
// 	^ self at: self size put: aNode.
localvariable16584 = (Object)new_AST_Variable_named(L"aNode");
array13137 = (Object)new_Type_Array_with(1, (Object)localvariable16584);
// size
send117894 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:put:
send117895 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)send117894, (Object)localvariable16584);
method15744 = (Object)new_AST_Method_with((Type_Array)array13137, (Type_Array)empty_Type_Array, 1, send117895);
symbol21976 = (Object)new_Type_Symbol_cached(L"last:");
methodclosure15742 = (Object)new_Runtime_MethodClosure(method15744);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21976, (Runtime_MethodClosure)methodclosure15742);


// Array>>add:
//add: anElement
// 	| result |
// 	result := self class new: self size +1.
// 	self doWithIndex: [:el :i | result at: i put: el ].
// 	result last: anElement.
// 	^ result.
localvariable16585 = (Object)new_AST_Variable_named(L"anElement");
array13138 = (Object)new_Type_Array_with(1, (Object)localvariable16585);
localvariable16586 = (Object)new_AST_Variable_named(L"result");
array13139 = (Object)new_Type_Array_with(1, (Object)localvariable16586);
// class
send117896 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol21884 = (Object)new_Type_Symbol_cached(L"new:");
// size
send117897 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint8256 = (Object)new_Type_SmallInt(1);
constant22825 = (Object)new_AST_Constant((Object)smallint8256);
// +
send117898 = (Object)new_AST_Send((Object)send117897, (Object)SMB__plus, 1, (Object)constant22825);
// new:
send117899 = (Object)new_AST_Send((Object)send117896, (Object)symbol21884, 1, (Object)send117898);
assign14443 = (Object)new_AST_Assign((Object)localvariable16586, (Object)send117899);
localvariable16587 = (Object)new_AST_Variable_named(L"el");
localvariable16588 = (Object)new_AST_Variable_named(L"i");
array13140 = (Object)new_Type_Array_with(2, (Object)localvariable16587, (Object)localvariable16588);
// at:put:
send117900 = (Object)new_AST_Send((Object)localvariable16586, (Object)SMB_at_put_, 2, (Object)localvariable16588, (Object)localvariable16587);
block7754 = (Object)new_AST_Block_with((Type_Array)array13140, (Type_Array)empty_Type_Array, 1, 1, send117900);
// doWithIndex:
send117901 = (Object)new_AST_Send((Object)Self, (Object)symbol21971, 1, (Object)block7754);
// last:
send117902 = (Object)new_AST_Send((Object)localvariable16586, (Object)symbol21976, 1, (Object)localvariable16585);
method15745 = (Object)new_AST_Method_with((Type_Array)array13138, (Type_Array)array13139, 4, assign14443, send117901, send117902, localvariable16586);
methodclosure15743 = (Object)new_Runtime_MethodClosure(method15745);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21973, (Runtime_MethodClosure)methodclosure15743);


// Array>>last
//last
// 	^ self at: self size.
// size
send117903 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// at:
send117904 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)send117903);
method15746 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117904);
symbol21969 = (Object)new_Type_Symbol_cached(L"last");
methodclosure15744 = (Object)new_Runtime_MethodClosure(method15746);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21969, (Runtime_MethodClosure)methodclosure15744);


// Array>>first
//first
// 	^ self at: 1.
smallint8257 = (Object)new_Type_SmallInt(1);
constant22826 = (Object)new_AST_Constant((Object)smallint8257);
// at:
send117905 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant22826);
method15747 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117905);
symbol21970 = (Object)new_Type_Symbol_cached(L"first");
methodclosure15745 = (Object)new_Runtime_MethodClosure(method15747);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21970, (Runtime_MethodClosure)methodclosure15745);


// Array>>inject:into:
//inject: thisValue into: binaryBlock 
// 	"Accumulate a running value associated with evaluating the argument, 
// 	binaryBlock, with the current value of the argument, thisValue, and the 
// 	receiver as block arguments. For instance, to sum the numeric elements 
// 	of a collection, aCollection inject: 0 into: [:subTotal :next | subTotal + 
// 	next]."
// 
// 	| nextValue |
// 	nextValue := thisValue.
// 	self do: [:each | nextValue := binaryBlock value: nextValue value: each].
// 	^nextValue
localvariable16589 = (Object)new_AST_Variable_named(L"thisValue");
localvariable16590 = (Object)new_AST_Variable_named(L"binaryBlock");
array13141 = (Object)new_Type_Array_with(2, (Object)localvariable16589, (Object)localvariable16590);
localvariable16591 = (Object)new_AST_Variable_named(L"nextValue");
array13142 = (Object)new_Type_Array_with(1, (Object)localvariable16591);
assign14444 = (Object)new_AST_Assign((Object)localvariable16591, (Object)localvariable16589);
localvariable16592 = (Object)new_AST_Variable_named(L"each");
array13143 = (Object)new_Type_Array_with(1, (Object)localvariable16592);
// value:value:
send117906 = (Object)new_AST_Send((Object)localvariable16590, (Object)symbol22173, 2, (Object)localvariable16591, (Object)localvariable16592);
assign14445 = (Object)new_AST_Assign((Object)localvariable16591, (Object)send117906);
block7755 = (Object)new_AST_Block_with((Type_Array)array13143, (Type_Array)empty_Type_Array, 1, 1, assign14445);
// do:
send117907 = (Object)new_AST_Send((Object)Self, (Object)symbol21924, 1, (Object)block7755);
method15748 = (Object)new_AST_Method_with((Type_Array)array13141, (Type_Array)array13142, 3, assign14444, send117907, localvariable16591);
symbol21974 = (Object)new_Type_Symbol_cached(L"inject:into:");
methodclosure15746 = (Object)new_Runtime_MethodClosure(method15748);
store_method((Type_Class)Type_Array_Class, (Type_Symbol)symbol21974, (Runtime_MethodClosure)methodclosure15746);

// size
send117908 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
// growSize
send117909 = (Object)new_AST_Send((Object)Self, (Object)symbol21994, 0);
// +
send117910 = (Object)new_AST_Send((Object)send117908, (Object)SMB__plus, 1, (Object)send117909);
// new:
send117911 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)send117910);
assign14446 = (Object)new_AST_Assign((Object)localvariable16568, (Object)send117911);
smallint8258 = (Object)new_Type_SmallInt(1);
constant22827 = (Object)new_AST_Constant((Object)smallint8258);
// size
send117912 = (Object)new_AST_Send((Object)instancevariable3986, (Object)SMB_size, 0);
smallint8259 = (Object)new_Type_SmallInt(1);
constant22828 = (Object)new_AST_Constant((Object)smallint8259);
// replaceFrom:to:with:startingAt:
send117913 = (Object)new_AST_Send((Object)localvariable16568, (Object)symbol21975, 4, (Object)constant22827, (Object)send117912, (Object)instancevariable3986, (Object)constant22828);
assign14447 = (Object)new_AST_Assign((Object)instancevariable3986, (Object)localvariable16568);
method15749 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13124, 4, assign14446, send117913, assign14447, Self);
methodclosure15747 = (Object)new_Runtime_MethodClosure(method15749);
store_method((Type_Class)class2716, (Type_Symbol)symbol21993, (Runtime_MethodClosure)methodclosure15747);


// OrderedCollection>>setCollection:
//setCollection: anArray
// 	array := anArray.
// 	self reset
localvariable16593 = (Object)new_AST_Variable_named(L"anArray");
array13144 = (Object)new_Type_Array_with(1, (Object)localvariable16593);
assign14448 = (Object)new_AST_Assign((Object)instancevariable3986, (Object)localvariable16593);
// reset
send117914 = (Object)new_AST_Send((Object)Self, (Object)symbol21996, 0);
method15750 = (Object)new_AST_Method_with((Type_Array)array13144, (Type_Array)empty_Type_Array, 3, assign14448, send117914, Self);
symbol21995 = (Object)new_Type_Symbol_cached(L"setCollection:");
methodclosure15748 = (Object)new_Runtime_MethodClosure(method15750);
store_method((Type_Class)class2716, (Type_Symbol)symbol21995, (Runtime_MethodClosure)methodclosure15748);


// OrderedCollection>>size
//size
// 	"Answer how many elements the receiver contains."
// 
// 	^ lastIndex - firstIndex + 1
// -
send117915 = (Object)new_AST_Send((Object)instancevariable3988, (Object)SMB__minus, 1, (Object)instancevariable3987);
smallint8260 = (Object)new_Type_SmallInt(1);
constant22829 = (Object)new_AST_Constant((Object)smallint8260);
// +
send117916 = (Object)new_AST_Send((Object)send117915, (Object)SMB__plus, 1, (Object)constant22829);
method15751 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117916);
methodclosure15749 = (Object)new_Runtime_MethodClosure(method15751);
store_method((Type_Class)class2716, (Type_Symbol)SMB_size, (Runtime_MethodClosure)methodclosure15749);


// a PMetaclass P#OrderedCollection>>new:
//new: anInteger 
// 	"Create a collection with enough room allocated to contain up to anInteger elements.
// 	The new instance will be of size 0 (allocated room is not necessarily used)."
// 	
// 	^self basicNew setCollection: (Array new: anInteger)
localvariable16594 = (Object)new_AST_Variable_named(L"anInteger");
array13145 = (Object)new_Type_Array_with(1, (Object)localvariable16594);
// basicNew
send117917 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// new:
send117918 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)localvariable16594);
// setCollection:
send117919 = (Object)new_AST_Send((Object)send117917, (Object)symbol21995, 1, (Object)send117918);
method15752 = (Object)new_AST_Method_with((Type_Array)array13145, (Type_Array)empty_Type_Array, 1, send117919);
methodclosure15750 = (Object)new_Runtime_MethodClosure(method15752);
store_method((Type_Class)metaclass2716, (Type_Symbol)symbol21884, (Runtime_MethodClosure)methodclosure15750);


// a PMetaclass P#OrderedCollection>>new:withAll:
//new: anInteger withAll: anObject
// 	^ self basicNew setContents: (Array new: anInteger withAll: anObject)
localvariable16595 = (Object)new_AST_Variable_named(L"anInteger");
localvariable16596 = (Object)new_AST_Variable_named(L"anObject");
array13146 = (Object)new_Type_Array_with(2, (Object)localvariable16595, (Object)localvariable16596);
// basicNew
send117920 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
symbol22175 = (Object)new_Type_Symbol_cached(L"setContents:");
symbol21990 = (Object)new_Type_Symbol_cached(L"new:withAll:");
// new:withAll:
send117921 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21990, 2, (Object)localvariable16595, (Object)localvariable16596);
// setContents:
send117922 = (Object)new_AST_Send((Object)send117920, (Object)symbol22175, 1, (Object)send117921);
method15753 = (Object)new_AST_Method_with((Type_Array)array13146, (Type_Array)empty_Type_Array, 1, send117922);
methodclosure15751 = (Object)new_Runtime_MethodClosure(method15753);
store_method((Type_Class)metaclass2716, (Type_Symbol)symbol21990, (Runtime_MethodClosure)methodclosure15751);


// a PMetaclass P#OrderedCollection>>new
//new
// 	^ self new: 10
smallint8261 = (Object)new_Type_SmallInt(10);
constant22830 = (Object)new_AST_Constant((Object)smallint8261);
// new:
send117923 = (Object)new_AST_Send((Object)Self, (Object)symbol21884, 1, (Object)constant22830);
method15754 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117923);
symbol21894 = (Object)new_Type_Symbol_cached(L"new");
methodclosure15752 = (Object)new_Runtime_MethodClosure(method15754);
store_method((Type_Class)metaclass2716, (Type_Symbol)symbol21894, (Runtime_MethodClosure)methodclosure15752);


// a PMetaclass P#OrderedCollection>>ofSize:
//ofSize: n
// 	"Create a new collection of size n with nil as its elements.
// 	This method exists because OrderedCollection new: n creates an
// 	empty collection,  not one of size n."
// 	| collection |
// 	collection := self new: n.
// 	collection setContents: (collection collector).
// 	^ collection
// 
localvariable16597 = (Object)new_AST_Variable_named(L"n");
array13147 = (Object)new_Type_Array_with(1, (Object)localvariable16597);
localvariable16598 = (Object)new_AST_Variable_named(L"collection");
array13148 = (Object)new_Type_Array_with(1, (Object)localvariable16598);
// new:
send117924 = (Object)new_AST_Send((Object)Self, (Object)symbol21884, 1, (Object)localvariable16597);
assign14449 = (Object)new_AST_Assign((Object)localvariable16598, (Object)send117924);
symbol22176 = (Object)new_Type_Symbol_cached(L"collector");
// collector
send117925 = (Object)new_AST_Send((Object)localvariable16598, (Object)symbol22176, 0);
// setContents:
send117926 = (Object)new_AST_Send((Object)localvariable16598, (Object)symbol22175, 1, (Object)send117925);
method15755 = (Object)new_AST_Method_with((Type_Array)array13147, (Type_Array)array13148, 3, assign14449, send117926, localvariable16598);
symbol21989 = (Object)new_Type_Symbol_cached(L"ofSize:");
methodclosure15753 = (Object)new_Runtime_MethodClosure(method15755);
store_method((Type_Class)metaclass2716, (Type_Symbol)symbol21989, (Runtime_MethodClosure)methodclosure15753);


// a PMetaclass P#OrderedCollection>>newFrom:
//newFrom: aCollection 
// 	"Answer an instance of me containing the same elements as aCollection."
// 
// 	| newCollection |
// 	newCollection := self new: aCollection size.
// 	newCollection addAll: aCollection.
// 	^newCollection
// 
// "	OrderedCollection newFrom: {1. 2. 3}
// 	{1. 2. 3} as: OrderedCollection
// 	{4. 2. 7} as: SortedCollection
// "
localvariable16599 = (Object)new_AST_Variable_named(L"aCollection");
array13149 = (Object)new_Type_Array_with(1, (Object)localvariable16599);
localvariable16600 = (Object)new_AST_Variable_named(L"newCollection");
array13150 = (Object)new_Type_Array_with(1, (Object)localvariable16600);
// size
send117927 = (Object)new_AST_Send((Object)localvariable16599, (Object)SMB_size, 0);
// new:
send117928 = (Object)new_AST_Send((Object)Self, (Object)symbol21884, 1, (Object)send117927);
assign14450 = (Object)new_AST_Assign((Object)localvariable16600, (Object)send117928);
symbol22177 = (Object)new_Type_Symbol_cached(L"addAll:");
// addAll:
send117929 = (Object)new_AST_Send((Object)localvariable16600, (Object)symbol22177, 1, (Object)localvariable16599);
method15756 = (Object)new_AST_Method_with((Type_Array)array13149, (Type_Array)array13150, 3, assign14450, send117929, localvariable16600);
symbol21968 = (Object)new_Type_Symbol_cached(L"newFrom:");
methodclosure15754 = (Object)new_Runtime_MethodClosure(method15756);
store_method((Type_Class)metaclass2716, (Type_Symbol)symbol21968, (Runtime_MethodClosure)methodclosure15754);

// new
send117930 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
assign14451 = (Object)new_AST_Assign((Object)localvariable16562, (Object)send117930);
symbol21893 = (Object)new_Type_Symbol_cached(L"hasSuperclass");
// hasSuperclass
send117931 = (Object)new_AST_Send((Object)Self, (Object)symbol21893, 0);
symbol21895 = (Object)new_Type_Symbol_cached(L"superclass");
// superclass
send117932 = (Object)new_AST_Send((Object)Self, (Object)symbol21895, 0);
symbol21889 = (Object)new_Type_Symbol_cached(L"layout");
// layout
send117933 = (Object)new_AST_Send((Object)send117932, (Object)symbol21889, 0);
// addAll:
send117934 = (Object)new_AST_Send((Object)localvariable16562, (Object)symbol22177, 1, (Object)send117933);
block7756 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send117934);
block7757 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 0);
// ifTrue:ifFalse:
send117935 = (Object)new_AST_Send((Object)send117931, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7756, (Object)block7757);
method15757 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13118, 3, assign14451, send117935, localvariable16562);
symbol21886 = (Object)new_Type_Symbol_cached(L"parentInstVariables");
methodclosure15755 = (Object)new_Runtime_MethodClosure(method15757);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21886, (Runtime_MethodClosure)methodclosure15755);


// Behavior>>instVariables
//instVariables
// 	| instVarNames instVars instVar |
// 	instVars := self parentInstVariables.
// 
// 	self pInstVarNames do: [ :each |
// 		instVars do: [ :var|
// 			var name = each ifTrue: [
// 				self error: 'Double Declaration of "', each, '"'
// 			].
// 		].
// 		instVar := PInstanceVariable named: each.
// 		instVar localId: instVars size.
// 		instVars add: instVar.
// 	].
// 	^ instVars.
localvariable16601 = (Object)new_AST_Variable_named(L"instVarNames");
localvariable16602 = (Object)new_AST_Variable_named(L"instVars");
localvariable16603 = (Object)new_AST_Variable_named(L"instVar");
array13151 = (Object)new_Type_Array_with(3, (Object)localvariable16601, (Object)localvariable16602, (Object)localvariable16603);
// parentInstVariables
send117936 = (Object)new_AST_Send((Object)Self, (Object)symbol21886, 0);
assign14452 = (Object)new_AST_Assign((Object)localvariable16602, (Object)send117936);
symbol21899 = (Object)new_Type_Symbol_cached(L"pInstVarNames");
// pInstVarNames
send117937 = (Object)new_AST_Send((Object)Self, (Object)symbol21899, 0);
localvariable16604 = (Object)new_AST_Variable_named(L"each");
array13152 = (Object)new_Type_Array_with(1, (Object)localvariable16604);
localvariable16605 = (Object)new_AST_Variable_named(L"var");
array13153 = (Object)new_Type_Array_with(1, (Object)localvariable16605);
// name
send117938 = (Object)new_AST_Send((Object)localvariable16605, (Object)SMB_name, 0);
// =
send117939 = (Object)new_AST_Send((Object)send117938, (Object)SMB__equal, 1, (Object)localvariable16604);
symbol22178 = (Object)new_Type_Symbol_cached(L"error:");
string13374 = (Object)new_Type_String(L"Double Declaration of \"");
constant22831 = (Object)new_AST_Constant((Object)string13374);
// ,
send117940 = (Object)new_AST_Send((Object)constant22831, (Object)SMB__concat, 1, (Object)localvariable16604);
string13375 = (Object)new_Type_String(L"\"");
constant22832 = (Object)new_AST_Constant((Object)string13375);
// ,
send117941 = (Object)new_AST_Send((Object)send117940, (Object)SMB__concat, 1, (Object)constant22832);
// error:
send117942 = (Object)new_AST_Send((Object)Self, (Object)symbol22178, 1, (Object)send117941);
block7758 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send117942);
// ifTrue:
send117943 = (Object)new_AST_Send((Object)send117939, (Object)SMB_ifTrue_, 1, (Object)block7758);
block7759 = (Object)new_AST_Block_with((Type_Array)array13153, (Type_Array)empty_Type_Array, 2, 1, send117943);
// do:
send117944 = (Object)new_AST_Send((Object)localvariable16602, (Object)symbol21924, 1, (Object)block7759);
classreference3108 = (Object)new_Organization_ClassReference((Type_Class)class2723);
symbol22133 = (Object)new_Type_Symbol_cached(L"named:");
// named:
send117945 = (Object)new_AST_Send((Object)classreference3108, (Object)symbol22133, 1, (Object)localvariable16604);
assign14453 = (Object)new_AST_Assign((Object)localvariable16603, (Object)send117945);
symbol22149 = (Object)new_Type_Symbol_cached(L"localId:");
// size
send117946 = (Object)new_AST_Send((Object)localvariable16602, (Object)SMB_size, 0);
// localId:
send117947 = (Object)new_AST_Send((Object)localvariable16603, (Object)symbol22149, 1, (Object)send117946);
// add:
send117948 = (Object)new_AST_Send((Object)localvariable16602, (Object)symbol21973, 1, (Object)localvariable16603);
block7760 = (Object)new_AST_Block_with((Type_Array)array13152, (Type_Array)empty_Type_Array, 1, 4, send117944, assign14453, send117947, send117948);
// do:
send117949 = (Object)new_AST_Send((Object)send117937, (Object)symbol21924, 1, (Object)block7760);
method15758 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13151, 3, assign14452, send117949, localvariable16602);
symbol21898 = (Object)new_Type_Symbol_cached(L"instVariables");
methodclosure15756 = (Object)new_Runtime_MethodClosure(method15758);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21898, (Runtime_MethodClosure)methodclosure15756);


// Behavior>>methodDict
//methodDict
// 	^ methods
instancevariable4059 = (Object)new_AST_InstVariable(2, L"methods");
method15759 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4059);
symbol21900 = (Object)new_Type_Symbol_cached(L"methodDict");
methodclosure15757 = (Object)new_Runtime_MethodClosure(method15759);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21900, (Runtime_MethodClosure)methodclosure15757);


// Behavior>>superclass
//superclass
// 	^ superclass
instancevariable4060 = (Object)new_AST_InstVariable(1, L"superclass");
method15760 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4060);
methodclosure15758 = (Object)new_Runtime_MethodClosure(method15760);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21895, (Runtime_MethodClosure)methodclosure15758);


// Behavior>>methods
//methods
// 	^ methods
method15761 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4059);
symbol21887 = (Object)new_Type_Symbol_cached(L"methods");
methodclosure15759 = (Object)new_Runtime_MethodClosure(method15761);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21887, (Runtime_MethodClosure)methodclosure15759);


// Behavior>>pInstVarNames
//pInstVarNames 
// 	^ OrderedCollection new.
// new
send117950 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
method15762 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117950);
methodclosure15760 = (Object)new_Runtime_MethodClosure(method15762);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21899, (Runtime_MethodClosure)methodclosure15760);


// Behavior>>includesSelector:
//includesSelector: selector
// 	^ self methodDict includesKey: selector
localvariable16606 = (Object)new_AST_Variable_named(L"selector");
array13154 = (Object)new_Type_Array_with(1, (Object)localvariable16606);
// methodDict
send117951 = (Object)new_AST_Send((Object)Self, (Object)symbol21900, 0);
symbol22159 = (Object)new_Type_Symbol_cached(L"includesKey:");
// includesKey:
send117952 = (Object)new_AST_Send((Object)send117951, (Object)symbol22159, 1, (Object)localvariable16606);
method15763 = (Object)new_AST_Method_with((Type_Array)array13154, (Type_Array)empty_Type_Array, 1, send117952);
symbol21896 = (Object)new_Type_Symbol_cached(L"includesSelector:");
methodclosure15761 = (Object)new_Runtime_MethodClosure(method15763);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21896, (Runtime_MethodClosure)methodclosure15761);


// Behavior>>new:
//new: sizeRequested 
// 	"Answer an initialized instance of this class with the number of indexable
// 	variables specified by the argument, sizeRequested."
// 
// 	^ (self basicNew: sizeRequested) initialize  
localvariable16607 = (Object)new_AST_Variable_named(L"sizeRequested");
array13155 = (Object)new_Type_Array_with(1, (Object)localvariable16607);
// basicNew:
send117953 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable16607);
// initialize
send117954 = (Object)new_AST_Send((Object)send117953, (Object)symbol21801, 0);
method15764 = (Object)new_AST_Method_with((Type_Array)array13155, (Type_Array)empty_Type_Array, 1, send117954);
methodclosure15762 = (Object)new_Runtime_MethodClosure(method15764);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21884, (Runtime_MethodClosure)methodclosure15762);


// Behavior>>canUnderstand:
//canUnderstand: selector
// 	(self includesSelector: selector) ifTrue: [^true].
// 	superclass == nil ifTrue: [^false].
// 	^superclass canUnderstand: selector
localvariable16608 = (Object)new_AST_Variable_named(L"selector");
array13156 = (Object)new_Type_Array_with(1, (Object)localvariable16608);
variable914 = (Object)new_AST_Variable_named(L"return");
array13157 = (Object)new_Type_Array_with(1, (Object)variable914);
// includesSelector:
send117955 = (Object)new_AST_Send((Object)Self, (Object)symbol21896, 1, (Object)localvariable16608);
// escape:
send117956 = (Object)new_AST_Send((Object)variable914, (Object)SMB_escape_, 1, (Object)True_Const);
block7761 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117956);
// ifTrue:
send117957 = (Object)new_AST_Send((Object)send117955, (Object)SMB_ifTrue_, 1, (Object)block7761);
// ==
send117958 = (Object)new_AST_Send((Object)instancevariable4060, (Object)SMB__pequal, 1, (Object)Nil_Const);
// escape:
send117959 = (Object)new_AST_Send((Object)variable914, (Object)SMB_escape_, 1, (Object)False_Const);
block7762 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117959);
// ifTrue:
send117960 = (Object)new_AST_Send((Object)send117958, (Object)SMB_ifTrue_, 1, (Object)block7762);
// canUnderstand:
send117961 = (Object)new_AST_Send((Object)instancevariable4060, (Object)symbol21888, 1, (Object)localvariable16608);
block7763 = (Object)new_AST_Block_with((Type_Array)array13157, (Type_Array)empty_Type_Array, 1, 3, send117957, send117960, send117961);
// on:
send117962 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7763);
method15765 = (Object)new_AST_Method_with((Type_Array)array13156, (Type_Array)empty_Type_Array, 1, send117962);
methodclosure15763 = (Object)new_Runtime_MethodClosure(method15765);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21888, (Runtime_MethodClosure)methodclosure15763);


// Behavior>>hasSuperclass
//hasSuperclass
// 	^ self superclass ~= PNil nil
// superclass
send117963 = (Object)new_AST_Send((Object)Self, (Object)symbol21895, 0);
classreference3109 = (Object)new_Organization_ClassReference((Type_Class)class2726);

// Nil>>isNil
//isNil
// 	^ true
method15766 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure15764 = (Object)new_Runtime_MethodClosure(method15766);
store_method((Type_Class)class2726, (Type_Symbol)SMB_isNil, (Runtime_MethodClosure)methodclosure15764);


// Nil>>ifNil:
//ifNil: aBlock
// 	^ aBlock value
localvariable16609 = (Object)new_AST_Variable_named(L"aBlock");
array13158 = (Object)new_Type_Array_with(1, (Object)localvariable16609);
symbol22179 = (Object)new_Type_Symbol_cached(L"value");
// value
send117964 = (Object)new_AST_Send((Object)localvariable16609, (Object)symbol22179, 0);
method15767 = (Object)new_AST_Method_with((Type_Array)array13158, (Type_Array)empty_Type_Array, 1, send117964);
methodclosure15765 = (Object)new_Runtime_MethodClosure(method15767);
store_method((Type_Class)class2726, (Type_Symbol)symbol21802, (Runtime_MethodClosure)methodclosure15765);

symbol22180 = (Object)new_Type_Symbol_cached(L"nil");
// nil
send117965 = (Object)new_AST_Send((Object)classreference3109, (Object)symbol22180, 0);
// ~=
send117966 = (Object)new_AST_Send((Object)send117963, (Object)symbol21804, 1, (Object)send117965);
method15768 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117966);
methodclosure15766 = (Object)new_Runtime_MethodClosure(method15768);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21893, (Runtime_MethodClosure)methodclosure15766);


// Behavior>>methods:
//methods: anObject
// 	methods := anObject
localvariable16610 = (Object)new_AST_Variable_named(L"anObject");
array13159 = (Object)new_Type_Array_with(1, (Object)localvariable16610);
assign14454 = (Object)new_AST_Assign((Object)instancevariable4059, (Object)localvariable16610);
method15769 = (Object)new_AST_Method_with((Type_Array)array13159, (Type_Array)empty_Type_Array, 2, assign14454, Self);
symbol21885 = (Object)new_Type_Symbol_cached(L"methods:");
methodclosure15767 = (Object)new_Runtime_MethodClosure(method15769);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21885, (Runtime_MethodClosure)methodclosure15767);


// Behavior>>layout
//layout
// 	^ layout
instancevariable4061 = (Object)new_AST_InstVariable(0, L"layout");
method15770 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4061);
methodclosure15768 = (Object)new_Runtime_MethodClosure(method15770);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21889, (Runtime_MethodClosure)methodclosure15768);


// Behavior>>new
//new
// 	"Answer a new initialized instance of the receiver (which is a class) with no indexable variables. Fail if the class is indexable."
// 
// 	^ self basicNew initialize
// 
// basicNew
send117967 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize
send117968 = (Object)new_AST_Send((Object)send117967, (Object)symbol21801, 0);
method15771 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send117968);
methodclosure15769 = (Object)new_Runtime_MethodClosure(method15771);
store_method((Type_Class)Behavior, (Type_Symbol)symbol21894, (Runtime_MethodClosure)methodclosure15769);

classreference3110 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Class>>name
//name 
// 	^ name
instancevariable4062 = (Object)new_AST_InstVariable(3, L"name");
method15772 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4062);
methodclosure15770 = (Object)new_Runtime_MethodClosure(method15772);
store_method((Type_Class)Class, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure15770);


// Class>>package
//package
// 	^ package
instancevariable4063 = (Object)new_AST_InstVariable(4, L"package");
method15773 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4063);
symbol21905 = (Object)new_Type_Symbol_cached(L"package");
methodclosure15771 = (Object)new_Runtime_MethodClosure(method15773);
store_method((Type_Class)Class, (Type_Symbol)symbol21905, (Runtime_MethodClosure)methodclosure15771);


// Class>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
localvariable16611 = (Object)new_AST_Variable_named(L"aStream");
array13160 = (Object)new_Type_Array_with(1, (Object)localvariable16611);
super1268 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16611);
string13376 = (Object)new_Type_String(L" ");
constant22833 = (Object)new_AST_Constant((Object)string13376);
// nextPutAll:
send117969 = (Object)new_AST_Send((Object)localvariable16611, (Object)symbol22174, 1, (Object)constant22833);
// name
send117970 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send117971 = (Object)new_AST_Send((Object)send117970, (Object)symbol21904, 1, (Object)localvariable16611);
method15774 = (Object)new_AST_Method_with((Type_Array)array13160, (Type_Array)empty_Type_Array, 4, super1268, send117969, send117971, Self);
methodclosure15772 = (Object)new_Runtime_MethodClosure(method15774);
store_method((Type_Class)Class, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15772);

classreference3111 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Metaclass>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	self pclass name printOn: aStream.
localvariable16612 = (Object)new_AST_Variable_named(L"aStream");
array13161 = (Object)new_Type_Array_with(1, (Object)localvariable16612);
super1269 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16612);
symbol22181 = (Object)new_Type_Symbol_cached(L"pclass");
// pclass
send117972 = (Object)new_AST_Send((Object)Self, (Object)symbol22181, 0);
// name
send117973 = (Object)new_AST_Send((Object)send117972, (Object)SMB_name, 0);
// printOn:
send117974 = (Object)new_AST_Send((Object)send117973, (Object)symbol21904, 1, (Object)localvariable16612);
method15775 = (Object)new_AST_Method_with((Type_Array)array13161, (Type_Array)empty_Type_Array, 3, super1269, send117974, Self);
methodclosure15773 = (Object)new_Runtime_MethodClosure(method15775);
store_method((Type_Class)Metaclass, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15773);

classreference3112 = (Object)new_Organization_ClassReference((Type_Class)class2712);
classreference3113 = (Object)new_Organization_ClassReference((Type_Class)Type_Dictionary_Class);

// Dictionary>>at:ifAbsentPut:
//at: key ifAbsentPut: aBlock 
// 	^ self at: key ifAbsent: [self at: key put: aBlock value]
localvariable16613 = (Object)new_AST_Variable_named(L"key");
localvariable16614 = (Object)new_AST_Variable_named(L"aBlock");
array13162 = (Object)new_Type_Array_with(2, (Object)localvariable16613, (Object)localvariable16614);
symbol22182 = (Object)new_Type_Symbol_cached(L"at:ifAbsent:");
// value
send117975 = (Object)new_AST_Send((Object)localvariable16614, (Object)symbol22179, 0);
// at:put:
send117976 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_put_, 2, (Object)localvariable16613, (Object)send117975);
block7764 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send117976);
// at:ifAbsent:
send117977 = (Object)new_AST_Send((Object)Self, (Object)symbol22182, 2, (Object)localvariable16613, (Object)block7764);
method15776 = (Object)new_AST_Method_with((Type_Array)array13162, (Type_Array)empty_Type_Array, 1, send117977);
symbol22158 = (Object)new_Type_Symbol_cached(L"at:ifAbsentPut:");
methodclosure15774 = (Object)new_Runtime_MethodClosure(method15776);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol22158, (Runtime_MethodClosure)methodclosure15774);


// Dictionary>>includesKey:
//includesKey: key
// 	self at: key ifAbsent: [ ^ false ].
// 	^ true
localvariable16615 = (Object)new_AST_Variable_named(L"key");
array13163 = (Object)new_Type_Array_with(1, (Object)localvariable16615);
variable915 = (Object)new_AST_Variable_named(L"return");
array13164 = (Object)new_Type_Array_with(1, (Object)variable915);
// escape:
send117978 = (Object)new_AST_Send((Object)variable915, (Object)SMB_escape_, 1, (Object)False_Const);
block7765 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117978);
// at:ifAbsent:
send117979 = (Object)new_AST_Send((Object)Self, (Object)symbol22182, 2, (Object)localvariable16615, (Object)block7765);
block7766 = (Object)new_AST_Block_with((Type_Array)array13164, (Type_Array)empty_Type_Array, 1, 2, send117979, True_Const);
// on:
send117980 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7766);
method15777 = (Object)new_AST_Method_with((Type_Array)array13163, (Type_Array)empty_Type_Array, 1, send117980);
methodclosure15775 = (Object)new_Runtime_MethodClosure(method15777);
store_method((Type_Class)Type_Dictionary_Class, (Type_Symbol)symbol22159, (Runtime_MethodClosure)methodclosure15775);

classreference3114 = (Object)new_Organization_ClassReference((Type_Class)class2713);
classreference3115 = (Object)new_Organization_ClassReference((Type_Class)class2714);
classreference3116 = (Object)new_Organization_ClassReference((Type_Class)class2711);
classreference3117 = (Object)new_Organization_ClassReference((Type_Class)class2715);
classreference3118 = (Object)new_Organization_ClassReference((Type_Class)class2719);
classreference3119 = (Object)new_Organization_ClassReference((Type_Class)class2718);
classreference3120 = (Object)new_Organization_ClassReference((Type_Class)class2717);
classreference3121 = (Object)new_Organization_ClassReference((Type_Class)class2722);

// LocalVariable>>key:
//key: anObject
// 	key := anObject
localvariable16616 = (Object)new_AST_Variable_named(L"anObject");
array13165 = (Object)new_Type_Array_with(1, (Object)localvariable16616);
assign14455 = (Object)new_AST_Assign((Object)instancevariable3999, (Object)localvariable16616);
method15778 = (Object)new_AST_Method_with((Type_Array)array13165, (Type_Array)empty_Type_Array, 2, assign14455, Self);
symbol22155 = (Object)new_Type_Symbol_cached(L"key:");
methodclosure15776 = (Object)new_Runtime_MethodClosure(method15778);
store_method((Type_Class)class2722, (Type_Symbol)symbol22155, (Runtime_MethodClosure)methodclosure15776);


// LocalVariable>>key
//key
// 	^ key
method15779 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable3999);
symbol22156 = (Object)new_Type_Symbol_cached(L"key");
methodclosure15777 = (Object)new_Runtime_MethodClosure(method15779);
store_method((Type_Class)class2722, (Type_Symbol)symbol22156, (Runtime_MethodClosure)methodclosure15777);

classreference3122 = (Object)new_Organization_ClassReference((Type_Class)class2721);

// Variable>>asPVariable
//asPVariable
// 	^ self.
method15780 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol21998 = (Object)new_Type_Symbol_cached(L"asPVariable");
methodclosure15778 = (Object)new_Runtime_MethodClosure(method15780);
store_method((Type_Class)class2721, (Type_Symbol)symbol21998, (Runtime_MethodClosure)methodclosure15778);


// Variable>>name
//name
// 	^ name
method15781 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable3996);
methodclosure15779 = (Object)new_Runtime_MethodClosure(method15781);
store_method((Type_Class)class2721, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure15779);


// Variable>>localId:
//localId: anObject
// 	localId := anObject
localvariable16617 = (Object)new_AST_Variable_named(L"anObject");
array13166 = (Object)new_Type_Array_with(1, (Object)localvariable16617);
assign14456 = (Object)new_AST_Assign((Object)instancevariable3998, (Object)localvariable16617);
method15782 = (Object)new_AST_Method_with((Type_Array)array13166, (Type_Array)empty_Type_Array, 2, assign14456, Self);
methodclosure15780 = (Object)new_Runtime_MethodClosure(method15782);
store_method((Type_Class)class2721, (Type_Symbol)symbol22149, (Runtime_MethodClosure)methodclosure15780);


// Variable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self name printOn: aStream.
// 	aStream nextPutAll: ' '.
// 	self scopeId printOn: aStream.
// 	aStream nextPutAll: '@'.
// 	self localId printOn: aStream.
localvariable16618 = (Object)new_AST_Variable_named(L"aStream");
array13167 = (Object)new_Type_Array_with(1, (Object)localvariable16618);
super1270 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16618);
string13377 = (Object)new_Type_String(L" ");
constant22834 = (Object)new_AST_Constant((Object)string13377);
// nextPutAll:
send117981 = (Object)new_AST_Send((Object)localvariable16618, (Object)symbol22174, 1, (Object)constant22834);
// name
send117982 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// printOn:
send117983 = (Object)new_AST_Send((Object)send117982, (Object)symbol21904, 1, (Object)localvariable16618);
string13378 = (Object)new_Type_String(L" ");
constant22835 = (Object)new_AST_Constant((Object)string13378);
// nextPutAll:
send117984 = (Object)new_AST_Send((Object)localvariable16618, (Object)symbol22174, 1, (Object)constant22835);
symbol22148 = (Object)new_Type_Symbol_cached(L"scopeId");
// scopeId
send117985 = (Object)new_AST_Send((Object)Self, (Object)symbol22148, 0);
// printOn:
send117986 = (Object)new_AST_Send((Object)send117985, (Object)symbol21904, 1, (Object)localvariable16618);
string13379 = (Object)new_Type_String(L"@");
constant22836 = (Object)new_AST_Constant((Object)string13379);
// nextPutAll:
send117987 = (Object)new_AST_Send((Object)localvariable16618, (Object)symbol22174, 1, (Object)constant22836);
symbol22146 = (Object)new_Type_Symbol_cached(L"localId");
// localId
send117988 = (Object)new_AST_Send((Object)Self, (Object)symbol22146, 0);
// printOn:
send117989 = (Object)new_AST_Send((Object)send117988, (Object)symbol21904, 1, (Object)localvariable16618);
method15783 = (Object)new_AST_Method_with((Type_Array)array13167, (Type_Array)empty_Type_Array, 8, super1270, send117981, send117983, send117984, send117986, send117987, send117989, Self);
methodclosure15781 = (Object)new_Runtime_MethodClosure(method15783);
store_method((Type_Class)class2721, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15781);


// Variable>>scopeId
//scopeId
// 	^ scopeId
method15784 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable3997);
methodclosure15782 = (Object)new_Runtime_MethodClosure(method15784);
store_method((Type_Class)class2721, (Type_Symbol)symbol22148, (Runtime_MethodClosure)methodclosure15782);


// Variable>>name:
//name: anObject 
// 	name := anObject
localvariable16619 = (Object)new_AST_Variable_named(L"anObject");
array13168 = (Object)new_Type_Array_with(1, (Object)localvariable16619);
assign14457 = (Object)new_AST_Assign((Object)instancevariable3996, (Object)localvariable16619);
method15785 = (Object)new_AST_Method_with((Type_Array)array13168, (Type_Array)empty_Type_Array, 2, assign14457, Self);
symbol21999 = (Object)new_Type_Symbol_cached(L"name:");
methodclosure15783 = (Object)new_Runtime_MethodClosure(method15785);
store_method((Type_Class)class2721, (Type_Symbol)symbol21999, (Runtime_MethodClosure)methodclosure15783);


// Variable>>localId
//localId
// 	^ localId
method15786 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable3998);
methodclosure15784 = (Object)new_Runtime_MethodClosure(method15786);
store_method((Type_Class)class2721, (Type_Symbol)symbol22146, (Runtime_MethodClosure)methodclosure15784);


// Variable>>scopeId:
//scopeId: anObject
// 	scopeId := anObject
localvariable16620 = (Object)new_AST_Variable_named(L"anObject");
array13169 = (Object)new_Type_Array_with(1, (Object)localvariable16620);
assign14458 = (Object)new_AST_Assign((Object)instancevariable3997, (Object)localvariable16620);
method15787 = (Object)new_AST_Method_with((Type_Array)array13169, (Type_Array)empty_Type_Array, 2, assign14458, Self);
symbol22147 = (Object)new_Type_Symbol_cached(L"scopeId:");
methodclosure15785 = (Object)new_Runtime_MethodClosure(method15787);
store_method((Type_Class)class2721, (Type_Symbol)symbol22147, (Runtime_MethodClosure)methodclosure15785);


// a PMetaclass P#Variable>>named:
//named: aSymbol
// 	^ self new
// 		name: aSymbol asSymbol.
localvariable16621 = (Object)new_AST_Variable_named(L"aSymbol");
array13170 = (Object)new_Type_Array_with(1, (Object)localvariable16621);
// new
send117990 = (Object)new_AST_Send((Object)Self, (Object)symbol21894, 0);
// asSymbol
send117991 = (Object)new_AST_Send((Object)localvariable16621, (Object)SMB_asSymbol, 0);
// name:
send117992 = (Object)new_AST_Send((Object)send117990, (Object)symbol21999, 1, (Object)send117991);
method15788 = (Object)new_AST_Method_with((Type_Array)array13170, (Type_Array)empty_Type_Array, 1, send117992);
methodclosure15786 = (Object)new_Runtime_MethodClosure(method15788);
store_method((Type_Class)metaclass2721, (Type_Symbol)symbol22133, (Runtime_MethodClosure)methodclosure15786);

classreference3123 = (Object)new_Organization_ClassReference((Type_Class)class2724);

// RuntimeObject>>code:
//code: aBlock
// 	code := aBlock
localvariable16622 = (Object)new_AST_Variable_named(L"aBlock");
array13171 = (Object)new_Type_Array_with(1, (Object)localvariable16622);
assign14459 = (Object)new_AST_Assign((Object)instancevariable4000, (Object)localvariable16622);
method15789 = (Object)new_AST_Method_with((Type_Array)array13171, (Type_Array)empty_Type_Array, 2, assign14459, Self);
symbol21934 = (Object)new_Type_Symbol_cached(L"code:");
methodclosure15787 = (Object)new_Runtime_MethodClosure(method15789);
store_method((Type_Class)class2724, (Type_Symbol)symbol21934, (Runtime_MethodClosure)methodclosure15787);


// RuntimeObject>>code
//code
// 	^ code
method15790 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4000);
symbol21933 = (Object)new_Type_Symbol_cached(L"code");
methodclosure15788 = (Object)new_Runtime_MethodClosure(method15790);
store_method((Type_Class)class2724, (Type_Symbol)symbol21933, (Runtime_MethodClosure)methodclosure15788);

classreference3124 = (Object)new_Organization_ClassReference((Type_Class)Runtime_Message_Class);

// Message>>selector
//selector 
// 	^ selector
instancevariable4064 = (Object)new_AST_InstVariable(0, L"selector");
method15791 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4064);
symbol21908 = (Object)new_Type_Symbol_cached(L"selector");
methodclosure15789 = (Object)new_Runtime_MethodClosure(method15791);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol21908, (Runtime_MethodClosure)methodclosure15789);


// Message>>arguments
//arguments
// 	^ self
method15792 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol21909 = (Object)new_Type_Symbol_cached(L"arguments");
methodclosure15790 = (Object)new_Runtime_MethodClosure(method15792);
store_method((Type_Class)Runtime_Message_Class, (Type_Symbol)symbol21909, (Runtime_MethodClosure)methodclosure15790);

classreference3125 = (Object)new_Organization_ClassReference((Type_Class)Runtime_BlockClosure_Class);

// BlockClosure>>whileTrue:
//whileTrue: aBlock
// 	self value ifTrue: [
// 		aBlock value.
// 		self whileTrue: aBlock
// 	]
localvariable16623 = (Object)new_AST_Variable_named(L"aBlock");
array13172 = (Object)new_Type_Array_with(1, (Object)localvariable16623);
// value
send117993 = (Object)new_AST_Send((Object)Self, (Object)symbol22179, 0);
// value
send117994 = (Object)new_AST_Send((Object)localvariable16623, (Object)symbol22179, 0);
// whileTrue:
send117995 = (Object)new_AST_Send((Object)Self, (Object)SMB_whileTrue_, 1, (Object)localvariable16623);
block7767 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, send117994, send117995);
// ifTrue:
send117996 = (Object)new_AST_Send((Object)send117993, (Object)SMB_ifTrue_, 1, (Object)block7767);
method15793 = (Object)new_AST_Method_with((Type_Array)array13172, (Type_Array)empty_Type_Array, 2, send117996, Self);
methodclosure15791 = (Object)new_Runtime_MethodClosure(method15793);
store_method((Type_Class)Runtime_BlockClosure_Class, (Type_Symbol)SMB_whileTrue_, (Runtime_MethodClosure)methodclosure15791);

classreference3126 = (Object)new_Organization_ClassReference((Type_Class)Type_SmallInt_Class);

// SmallInt>>max:
//max: aMagnitude 
// 	"Answer the receiver or the argument, whichever has the greater 
// 	magnitude."
// 
// 	self > aMagnitude
// 		ifTrue: [^self]
// 		ifFalse: [^aMagnitude]
localvariable16624 = (Object)new_AST_Variable_named(L"aMagnitude");
array13173 = (Object)new_Type_Array_with(1, (Object)localvariable16624);
variable916 = (Object)new_AST_Variable_named(L"return");
array13174 = (Object)new_Type_Array_with(1, (Object)variable916);
// >
send117997 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable16624);
// escape:
send117998 = (Object)new_AST_Send((Object)variable916, (Object)SMB_escape_, 1, (Object)Self);
block7768 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117998);
// escape:
send117999 = (Object)new_AST_Send((Object)variable916, (Object)SMB_escape_, 1, (Object)localvariable16624);
block7769 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send117999);
// ifTrue:ifFalse:
send118000 = (Object)new_AST_Send((Object)send117997, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7768, (Object)block7769);
block7770 = (Object)new_AST_Block_with((Type_Array)array13174, (Type_Array)empty_Type_Array, 1, 2, send118000, Self);
// on:
send118001 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7770);
method15794 = (Object)new_AST_Method_with((Type_Array)array13173, (Type_Array)empty_Type_Array, 1, send118001);
methodclosure15792 = (Object)new_Runtime_MethodClosure(method15794);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol21928, (Runtime_MethodClosure)methodclosure15792);


// SmallInt>>to:do:
//to: stop do: aBlock 
// 	"Normally compiled in-line, and therefore not overridable.
// 	Evaluate aBlock for each element of the interval (self to: stop by: 1)."
// 	| nextValue |
// 	nextValue := self.
// 	[nextValue <= stop]
// 		whileTrue: 
// 			[aBlock value: nextValue.
// 			nextValue := nextValue + 1]
localvariable16625 = (Object)new_AST_Variable_named(L"stop");
localvariable16626 = (Object)new_AST_Variable_named(L"aBlock");
array13175 = (Object)new_Type_Array_with(2, (Object)localvariable16625, (Object)localvariable16626);
localvariable16627 = (Object)new_AST_Variable_named(L"nextValue");
array13176 = (Object)new_Type_Array_with(1, (Object)localvariable16627);
assign14460 = (Object)new_AST_Assign((Object)localvariable16627, (Object)Self);
// <=
send118002 = (Object)new_AST_Send((Object)localvariable16627, (Object)symbol21930, 1, (Object)localvariable16625);
block7771 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118002);
// value:
send118003 = (Object)new_AST_Send((Object)localvariable16626, (Object)SMB_value_, 1, (Object)localvariable16627);
smallint8262 = (Object)new_Type_SmallInt(1);
constant22837 = (Object)new_AST_Constant((Object)smallint8262);
// +
send118004 = (Object)new_AST_Send((Object)localvariable16627, (Object)SMB__plus, 1, (Object)constant22837);
assign14461 = (Object)new_AST_Assign((Object)localvariable16627, (Object)send118004);
block7772 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, send118003, assign14461);
// whileTrue:
send118005 = (Object)new_AST_Send((Object)block7771, (Object)SMB_whileTrue_, 1, (Object)block7772);
method15795 = (Object)new_AST_Method_with((Type_Array)array13175, (Type_Array)array13176, 3, assign14460, send118005, Self);
methodclosure15793 = (Object)new_Runtime_MethodClosure(method15795);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol21929, (Runtime_MethodClosure)methodclosure15793);


// SmallInt>><=
//<= aSmallInt
// 	^ (self > aSmallInt) not.
localvariable16628 = (Object)new_AST_Variable_named(L"aSmallInt");
array13177 = (Object)new_Type_Array_with(1, (Object)localvariable16628);
// >
send118006 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable16628);
// not
send118007 = (Object)new_AST_Send((Object)send118006, (Object)SMB_not, 0);
method15796 = (Object)new_AST_Method_with((Type_Array)array13177, (Type_Array)empty_Type_Array, 1, send118007);
methodclosure15794 = (Object)new_Runtime_MethodClosure(method15796);
store_method((Type_Class)Type_SmallInt_Class, (Type_Symbol)symbol21930, (Runtime_MethodClosure)methodclosure15794);

classreference3127 = (Object)new_Organization_ClassReference((Type_Class)Type_String_Class);

// String>>asPEG
//asPEG
// 	^ PEGTerminal new: self
classreference3128 = (Object)new_Organization_ClassReference((Type_Class)class2730);

// PEGTerminal>>not
//not
// 	(string size = 1)
// 		ifFalse: [ self error: 'Only allowed on terminals of size 1' ].
// 	^ PEGNotExpression new: self
// size
send118008 = (Object)new_AST_Send((Object)instancevariable4005, (Object)SMB_size, 0);
smallint8263 = (Object)new_Type_SmallInt(1);
constant22838 = (Object)new_AST_Constant((Object)smallint8263);
// =
send118009 = (Object)new_AST_Send((Object)send118008, (Object)SMB__equal, 1, (Object)constant22838);
string13380 = (Object)new_Type_String(L"Only allowed on terminals of size 1");
constant22839 = (Object)new_AST_Constant((Object)string13380);
// error:
send118010 = (Object)new_AST_Send((Object)Self, (Object)symbol22178, 1, (Object)constant22839);
block7773 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118010);
// ifFalse:
send118011 = (Object)new_AST_Send((Object)send118009, (Object)SMB_ifFalse_, 1, (Object)block7773);
classreference3129 = (Object)new_Organization_ClassReference((Type_Class)class2738);

// PEGNotExpression>>consume
//consume
// 	^ omit not
// not
send118012 = (Object)new_AST_Send((Object)instancevariable4004, (Object)SMB_not, 0);
method15797 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118012);
symbol22166 = (Object)new_Type_Symbol_cached(L"consume");
methodclosure15795 = (Object)new_Runtime_MethodClosure(method15797);
store_method((Type_Class)class2738, (Type_Symbol)symbol22166, (Runtime_MethodClosure)methodclosure15795);


// PEGNotExpression>>consume:
//consume: bool
// 	" As 'optimization' we make consume depend on omit. "
// 	omit := bool not.
localvariable16629 = (Object)new_AST_Variable_named(L"bool");
array13178 = (Object)new_Type_Array_with(1, (Object)localvariable16629);
// not
send118013 = (Object)new_AST_Send((Object)localvariable16629, (Object)SMB_not, 0);
assign14462 = (Object)new_AST_Assign((Object)instancevariable4004, (Object)send118013);
method15798 = (Object)new_AST_Method_with((Type_Array)array13178, (Type_Array)empty_Type_Array, 2, assign14462, Self);
symbol22167 = (Object)new_Type_Symbol_cached(L"consume:");
methodclosure15796 = (Object)new_Runtime_MethodClosure(method15798);
store_method((Type_Class)class2738, (Type_Symbol)symbol22167, (Runtime_MethodClosure)methodclosure15796);


// PEGNotExpression>>initialize:
//initialize: theChild
// 	super initialize.
// 	child := theChild
localvariable16630 = (Object)new_AST_Variable_named(L"theChild");
array13179 = (Object)new_Type_Array_with(1, (Object)localvariable16630);
super1271 = (Object)new_AST_Super((Object)symbol21801, 0);
assign14463 = (Object)new_AST_Assign((Object)instancevariable4020, (Object)localvariable16630);
method15799 = (Object)new_AST_Method_with((Type_Array)array13179, (Type_Array)empty_Type_Array, 3, super1271, assign14463, Self);
symbol22154 = (Object)new_Type_Symbol_cached(L"initialize:");
methodclosure15797 = (Object)new_Runtime_MethodClosure(method15799);
store_method((Type_Class)class2738, (Type_Symbol)symbol22154, (Runtime_MethodClosure)methodclosure15797);


// PEGNotExpression>>privateMatch:
//privateMatch: input
// 	| match |
// 	match := child match: input.
// 	match ifNil: [
// 		self consume ifFalse: [ ^ true ]. " If we don't consume, just succeed and continue. '"
// 		^ input next ifNotNil: [ :char | char asString ]. " If we consume, we fail if next is end of string (nil) "
// 		].
// 	^ nil.
localvariable16631 = (Object)new_AST_Variable_named(L"input");
array13180 = (Object)new_Type_Array_with(1, (Object)localvariable16631);
localvariable16632 = (Object)new_AST_Variable_named(L"match");
array13181 = (Object)new_Type_Array_with(1, (Object)localvariable16632);
variable917 = (Object)new_AST_Variable_named(L"return");
array13182 = (Object)new_Type_Array_with(1, (Object)variable917);
symbol22121 = (Object)new_Type_Symbol_cached(L"match:");
// match:
send118014 = (Object)new_AST_Send((Object)instancevariable4020, (Object)symbol22121, 1, (Object)localvariable16631);
assign14464 = (Object)new_AST_Assign((Object)localvariable16632, (Object)send118014);
// consume
send118015 = (Object)new_AST_Send((Object)Self, (Object)symbol22166, 0);
// escape:
send118016 = (Object)new_AST_Send((Object)variable917, (Object)SMB_escape_, 1, (Object)True_Const);
block7774 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118016);
// ifFalse:
send118017 = (Object)new_AST_Send((Object)send118015, (Object)SMB_ifFalse_, 1, (Object)block7774);
symbol22183 = (Object)new_Type_Symbol_cached(L"next");
// next
send118018 = (Object)new_AST_Send((Object)localvariable16631, (Object)symbol22183, 0);
symbol22184 = (Object)new_Type_Symbol_cached(L"ifNotNil:");
localvariable16633 = (Object)new_AST_Variable_named(L"char");
array13183 = (Object)new_Type_Array_with(1, (Object)localvariable16633);
// asString
send118019 = (Object)new_AST_Send((Object)localvariable16633, (Object)SMB_asString, 0);
block7775 = (Object)new_AST_Block_with((Type_Array)array13183, (Type_Array)empty_Type_Array, 3, 1, send118019);
// ifNotNil:
send118020 = (Object)new_AST_Send((Object)send118018, (Object)symbol22184, 1, (Object)block7775);
// escape:
send118021 = (Object)new_AST_Send((Object)variable917, (Object)SMB_escape_, 1, (Object)send118020);
block7776 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send118017, send118021);
// ifNil:
send118022 = (Object)new_AST_Send((Object)localvariable16632, (Object)symbol21802, 1, (Object)block7776);
block7777 = (Object)new_AST_Block_with((Type_Array)array13182, (Type_Array)empty_Type_Array, 1, 3, assign14464, send118022, Nil_Const);
// on:
send118023 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7777);
method15800 = (Object)new_AST_Method_with((Type_Array)array13180, (Type_Array)array13181, 1, send118023);
symbol22128 = (Object)new_Type_Symbol_cached(L"privateMatch:");
methodclosure15798 = (Object)new_Runtime_MethodClosure(method15800);
store_method((Type_Class)class2738, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15798);

// new:
send118024 = (Object)new_AST_Send((Object)classreference3129, (Object)symbol21884, 1, (Object)Self);
method15801 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118011, send118024);
methodclosure15799 = (Object)new_Runtime_MethodClosure(method15801);
store_method((Type_Class)class2730, (Type_Symbol)SMB_not, (Runtime_MethodClosure)methodclosure15799);


// PEGTerminal>>privateMatch:
//privateMatch: input
// 	^ input scan: string
localvariable16634 = (Object)new_AST_Variable_named(L"input");
array13184 = (Object)new_Type_Array_with(1, (Object)localvariable16634);
symbol21945 = (Object)new_Type_Symbol_cached(L"scan:");
// scan:
send118025 = (Object)new_AST_Send((Object)localvariable16634, (Object)symbol21945, 1, (Object)instancevariable4005);
method15802 = (Object)new_AST_Method_with((Type_Array)array13184, (Type_Array)empty_Type_Array, 1, send118025);
methodclosure15800 = (Object)new_Runtime_MethodClosure(method15802);
store_method((Type_Class)class2730, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15800);


// PEGTerminal>>initialize:
//initialize: aString
// 	super initialize.
// 	string := aString.
// 	self name: '''', string, ''''
localvariable16635 = (Object)new_AST_Variable_named(L"aString");
array13185 = (Object)new_Type_Array_with(1, (Object)localvariable16635);
super1272 = (Object)new_AST_Super((Object)symbol21801, 0);
assign14465 = (Object)new_AST_Assign((Object)instancevariable4005, (Object)localvariable16635);
string13381 = (Object)new_Type_String(L"\'");
constant22840 = (Object)new_AST_Constant((Object)string13381);
// ,
send118026 = (Object)new_AST_Send((Object)constant22840, (Object)SMB__concat, 1, (Object)instancevariable4005);
string13382 = (Object)new_Type_String(L"\'");
constant22841 = (Object)new_AST_Constant((Object)string13382);
// ,
send118027 = (Object)new_AST_Send((Object)send118026, (Object)SMB__concat, 1, (Object)constant22841);
// name:
send118028 = (Object)new_AST_Send((Object)Self, (Object)symbol21999, 1, (Object)send118027);
method15803 = (Object)new_AST_Method_with((Type_Array)array13185, (Type_Array)empty_Type_Array, 4, super1272, assign14465, send118028, Self);
methodclosure15801 = (Object)new_Runtime_MethodClosure(method15803);
store_method((Type_Class)class2730, (Type_Symbol)symbol22154, (Runtime_MethodClosure)methodclosure15801);

// new:
send118029 = (Object)new_AST_Send((Object)classreference3128, (Object)symbol21884, 1, (Object)Self);
method15804 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118029);
symbol21921 = (Object)new_Type_Symbol_cached(L"asPEG");
methodclosure15802 = (Object)new_Runtime_MethodClosure(method15804);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21921, (Runtime_MethodClosure)methodclosure15802);


// String>>copy
//copy
// 	^ self asSymbol asString
// asSymbol
send118030 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSymbol, 0);
// asString
send118031 = (Object)new_AST_Send((Object)send118030, (Object)SMB_asString, 0);
method15805 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118031);
symbol21919 = (Object)new_Type_Symbol_cached(L"copy");
methodclosure15803 = (Object)new_Runtime_MethodClosure(method15805);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21919, (Runtime_MethodClosure)methodclosure15803);


// String>>asPEGChoice
//asPEGChoice
// 	| result |
// 	result := PEGOrderedChoiceExpression new.
// 	self do: [ :char | result <= char asPEG ].
// 	^ result
localvariable16636 = (Object)new_AST_Variable_named(L"result");
array13186 = (Object)new_Type_Array_with(1, (Object)localvariable16636);
classreference3130 = (Object)new_Organization_ClassReference((Type_Class)class2739);

// PEGOrderedChoiceExpression>><=
//<= child
// 	children add: child asPEG
localvariable16637 = (Object)new_AST_Variable_named(L"child");
array13187 = (Object)new_Type_Array_with(1, (Object)localvariable16637);
// asPEG
send118032 = (Object)new_AST_Send((Object)localvariable16637, (Object)symbol21921, 0);
// add:
send118033 = (Object)new_AST_Send((Object)instancevariable4021, (Object)symbol21973, 1, (Object)send118032);
method15806 = (Object)new_AST_Method_with((Type_Array)array13187, (Type_Array)empty_Type_Array, 2, send118033, Self);
methodclosure15804 = (Object)new_Runtime_MethodClosure(method15806);
store_method((Type_Class)class2739, (Type_Symbol)symbol21930, (Runtime_MethodClosure)methodclosure15804);


// PEGOrderedChoiceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new.
super1273 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118034 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
// initialize:
send118035 = (Object)new_AST_Send((Object)Self, (Object)symbol22154, 1, (Object)send118034);
method15807 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1273, send118035, Self);
methodclosure15805 = (Object)new_Runtime_MethodClosure(method15807);
store_method((Type_Class)class2739, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15805);


// PEGOrderedChoiceExpression>>initialize:
//initialize: newChildren
// 	super initialize.
// 	children := newChildren
localvariable16638 = (Object)new_AST_Variable_named(L"newChildren");
array13188 = (Object)new_Type_Array_with(1, (Object)localvariable16638);
super1274 = (Object)new_AST_Super((Object)symbol21801, 0);
assign14466 = (Object)new_AST_Assign((Object)instancevariable4021, (Object)localvariable16638);
method15808 = (Object)new_AST_Method_with((Type_Array)array13188, (Type_Array)empty_Type_Array, 3, super1274, assign14466, Self);
methodclosure15806 = (Object)new_Runtime_MethodClosure(method15808);
store_method((Type_Class)class2739, (Type_Symbol)symbol22154, (Runtime_MethodClosure)methodclosure15806);


// PEGOrderedChoiceExpression>>privateMatch:
//privateMatch: input
// 	|match |
// 	children do: [ :child |
// 		match := child match: input.
// 		match ifNotNil: [ ^ match].
// 	].
// 	^ nil
localvariable16639 = (Object)new_AST_Variable_named(L"input");
array13189 = (Object)new_Type_Array_with(1, (Object)localvariable16639);
localvariable16640 = (Object)new_AST_Variable_named(L"match");
array13190 = (Object)new_Type_Array_with(1, (Object)localvariable16640);
variable918 = (Object)new_AST_Variable_named(L"return");
array13191 = (Object)new_Type_Array_with(1, (Object)variable918);
localvariable16641 = (Object)new_AST_Variable_named(L"child");
array13192 = (Object)new_Type_Array_with(1, (Object)localvariable16641);
// match:
send118036 = (Object)new_AST_Send((Object)localvariable16641, (Object)symbol22121, 1, (Object)localvariable16639);
assign14467 = (Object)new_AST_Assign((Object)localvariable16640, (Object)send118036);
// escape:
send118037 = (Object)new_AST_Send((Object)variable918, (Object)SMB_escape_, 1, (Object)localvariable16640);
block7778 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118037);
// ifNotNil:
send118038 = (Object)new_AST_Send((Object)localvariable16640, (Object)symbol22184, 1, (Object)block7778);
block7779 = (Object)new_AST_Block_with((Type_Array)array13192, (Type_Array)empty_Type_Array, 2, 2, assign14467, send118038);
// do:
send118039 = (Object)new_AST_Send((Object)instancevariable4021, (Object)symbol21924, 1, (Object)block7779);
block7780 = (Object)new_AST_Block_with((Type_Array)array13191, (Type_Array)empty_Type_Array, 1, 2, send118039, Nil_Const);
// on:
send118040 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7780);
method15809 = (Object)new_AST_Method_with((Type_Array)array13189, (Type_Array)array13190, 1, send118040);
methodclosure15807 = (Object)new_Runtime_MethodClosure(method15809);
store_method((Type_Class)class2739, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15807);

// new
send118041 = (Object)new_AST_Send((Object)classreference3130, (Object)symbol21894, 0);
assign14468 = (Object)new_AST_Assign((Object)localvariable16636, (Object)send118041);
localvariable16642 = (Object)new_AST_Variable_named(L"char");
array13193 = (Object)new_Type_Array_with(1, (Object)localvariable16642);
// asPEG
send118042 = (Object)new_AST_Send((Object)localvariable16642, (Object)symbol21921, 0);
// <=
send118043 = (Object)new_AST_Send((Object)localvariable16636, (Object)symbol21930, 1, (Object)send118042);
block7781 = (Object)new_AST_Block_with((Type_Array)array13193, (Type_Array)empty_Type_Array, 1, 1, send118043);
// do:
send118044 = (Object)new_AST_Send((Object)Self, (Object)symbol21924, 1, (Object)block7781);
method15810 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13186, 3, assign14468, send118044, localvariable16636);
symbol21923 = (Object)new_Type_Symbol_cached(L"asPEGChoice");
methodclosure15808 = (Object)new_Runtime_MethodClosure(method15810);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21923, (Runtime_MethodClosure)methodclosure15808);


// String>>capitalized
//capitalized
// 	"Return a copy with the first letter capitalized"
// 	| cap |
// 	self isEmpty ifTrue: [ ^self copy ].
// 	cap := self copy.
// 	cap at: 1 put: (cap at: 1) asUppercase.
// 	^ cap
localvariable16643 = (Object)new_AST_Variable_named(L"cap");
array13194 = (Object)new_Type_Array_with(1, (Object)localvariable16643);
variable919 = (Object)new_AST_Variable_named(L"return");
array13195 = (Object)new_Type_Array_with(1, (Object)variable919);
// isEmpty
send118045 = (Object)new_AST_Send((Object)Self, (Object)symbol21916, 0);
// copy
send118046 = (Object)new_AST_Send((Object)Self, (Object)symbol21919, 0);
// escape:
send118047 = (Object)new_AST_Send((Object)variable919, (Object)SMB_escape_, 1, (Object)send118046);
block7782 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118047);
// ifTrue:
send118048 = (Object)new_AST_Send((Object)send118045, (Object)SMB_ifTrue_, 1, (Object)block7782);
// copy
send118049 = (Object)new_AST_Send((Object)Self, (Object)symbol21919, 0);
assign14469 = (Object)new_AST_Assign((Object)localvariable16643, (Object)send118049);
smallint8264 = (Object)new_Type_SmallInt(1);
constant22842 = (Object)new_AST_Constant((Object)smallint8264);
smallint8265 = (Object)new_Type_SmallInt(1);
constant22843 = (Object)new_AST_Constant((Object)smallint8265);
// at:
send118050 = (Object)new_AST_Send((Object)localvariable16643, (Object)SMB_at_, 1, (Object)constant22843);
symbol21936 = (Object)new_Type_Symbol_cached(L"asUppercase");
// asUppercase
send118051 = (Object)new_AST_Send((Object)send118050, (Object)symbol21936, 0);
// at:put:
send118052 = (Object)new_AST_Send((Object)localvariable16643, (Object)SMB_at_put_, 2, (Object)constant22842, (Object)send118051);
block7783 = (Object)new_AST_Block_with((Type_Array)array13195, (Type_Array)empty_Type_Array, 1, 4, send118048, assign14469, send118052, localvariable16643);
// on:
send118053 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7783);
method15811 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13194, 1, send118053);
symbol21925 = (Object)new_Type_Symbol_cached(L"capitalized");
methodclosure15809 = (Object)new_Runtime_MethodClosure(method15811);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21925, (Runtime_MethodClosure)methodclosure15809);


// String>>do:
//do: aBlock 
// 	"Refer to the comment in Collection|do:."
// 	1 to: self size do:
// 		[:index | aBlock value: (self at: index)]
localvariable16644 = (Object)new_AST_Variable_named(L"aBlock");
array13196 = (Object)new_Type_Array_with(1, (Object)localvariable16644);
smallint8266 = (Object)new_Type_SmallInt(1);
constant22844 = (Object)new_AST_Constant((Object)smallint8266);
// size
send118054 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable16645 = (Object)new_AST_Variable_named(L"index");
array13197 = (Object)new_Type_Array_with(1, (Object)localvariable16645);
// at:
send118055 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable16645);
// value:
send118056 = (Object)new_AST_Send((Object)localvariable16644, (Object)SMB_value_, 1, (Object)send118055);
block7784 = (Object)new_AST_Block_with((Type_Array)array13197, (Type_Array)empty_Type_Array, 1, 1, send118056);
// to:do:
send118057 = (Object)new_AST_Send((Object)constant22844, (Object)symbol21929, 2, (Object)send118054, (Object)block7784);
method15812 = (Object)new_AST_Method_with((Type_Array)array13196, (Type_Array)empty_Type_Array, 2, send118057, Self);
methodclosure15810 = (Object)new_Runtime_MethodClosure(method15812);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21924, (Runtime_MethodClosure)methodclosure15810);


// String>>isEmpty
//isEmpty 
// 	^ self size = 0.
// size
send118058 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint8267 = (Object)new_Type_SmallInt(0);
constant22845 = (Object)new_AST_Constant((Object)smallint8267);
// =
send118059 = (Object)new_AST_Send((Object)send118058, (Object)SMB__equal, 1, (Object)constant22845);
method15813 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118059);
methodclosure15811 = (Object)new_Runtime_MethodClosure(method15813);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21916, (Runtime_MethodClosure)methodclosure15811);


// String>>asPEGRange
//asPEGRange
// 	((self size = 3) and: [ (self at: 2) = $- ])
// 		ifFalse: [ self error: 'Cannot convert ', self, ' to PEG range. Expected format: beginchar-endchar' ].
// 	^ PEGRange between: (self at: 1) and: (self at: 3)
// size
send118060 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
smallint8268 = (Object)new_Type_SmallInt(3);
constant22846 = (Object)new_AST_Constant((Object)smallint8268);
// =
send118061 = (Object)new_AST_Send((Object)send118060, (Object)SMB__equal, 1, (Object)constant22846);
symbol21913 = (Object)new_Type_Symbol_cached(L"and:");
smallint8269 = (Object)new_Type_SmallInt(2);
constant22847 = (Object)new_AST_Constant((Object)smallint8269);
// at:
send118062 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant22847);
character59 = (Object)new_Type_Character(L'-');
constant22848 = (Object)new_AST_Constant((Object)character59);
// =
send118063 = (Object)new_AST_Send((Object)send118062, (Object)SMB__equal, 1, (Object)constant22848);
block7785 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118063);
// and:
send118064 = (Object)new_AST_Send((Object)send118061, (Object)symbol21913, 1, (Object)block7785);
string13383 = (Object)new_Type_String(L"Cannot convert ");
constant22849 = (Object)new_AST_Constant((Object)string13383);
// ,
send118065 = (Object)new_AST_Send((Object)constant22849, (Object)SMB__concat, 1, (Object)Self);
string13384 = (Object)new_Type_String(L" to PEG range. Expected format: beginchar-endchar");
constant22850 = (Object)new_AST_Constant((Object)string13384);
// ,
send118066 = (Object)new_AST_Send((Object)send118065, (Object)SMB__concat, 1, (Object)constant22850);
// error:
send118067 = (Object)new_AST_Send((Object)Self, (Object)symbol22178, 1, (Object)send118066);
block7786 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118067);
// ifFalse:
send118068 = (Object)new_AST_Send((Object)send118064, (Object)SMB_ifFalse_, 1, (Object)block7786);
classreference3131 = (Object)new_Organization_ClassReference((Type_Class)class2736);

// PEGRange>>privateMatch:
//privateMatch: input
// 	| char |
// 	char := input next.
// 	char ifNil: [ ^ char ].
// 	(char >= start and: [ char <= stop ])
// 		ifTrue: [ ^ char asString ].
// 	^ nil
localvariable16646 = (Object)new_AST_Variable_named(L"input");
array13198 = (Object)new_Type_Array_with(1, (Object)localvariable16646);
localvariable16647 = (Object)new_AST_Variable_named(L"char");
array13199 = (Object)new_Type_Array_with(1, (Object)localvariable16647);
variable920 = (Object)new_AST_Variable_named(L"return");
array13200 = (Object)new_Type_Array_with(1, (Object)variable920);
// next
send118069 = (Object)new_AST_Send((Object)localvariable16646, (Object)symbol22183, 0);
assign14470 = (Object)new_AST_Assign((Object)localvariable16647, (Object)send118069);
// escape:
send118070 = (Object)new_AST_Send((Object)variable920, (Object)SMB_escape_, 1, (Object)localvariable16647);
block7787 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118070);
// ifNil:
send118071 = (Object)new_AST_Send((Object)localvariable16647, (Object)symbol21802, 1, (Object)block7787);
symbol22185 = (Object)new_Type_Symbol_cached(L">=");
// >=
send118072 = (Object)new_AST_Send((Object)localvariable16647, (Object)symbol22185, 1, (Object)instancevariable4016);
// <=
send118073 = (Object)new_AST_Send((Object)localvariable16647, (Object)symbol21930, 1, (Object)instancevariable4017);
block7788 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118073);
// and:
send118074 = (Object)new_AST_Send((Object)send118072, (Object)symbol21913, 1, (Object)block7788);
// asString
send118075 = (Object)new_AST_Send((Object)localvariable16647, (Object)SMB_asString, 0);
// escape:
send118076 = (Object)new_AST_Send((Object)variable920, (Object)SMB_escape_, 1, (Object)send118075);
block7789 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118076);
// ifTrue:
send118077 = (Object)new_AST_Send((Object)send118074, (Object)SMB_ifTrue_, 1, (Object)block7789);
block7790 = (Object)new_AST_Block_with((Type_Array)array13200, (Type_Array)empty_Type_Array, 1, 4, assign14470, send118071, send118077, Nil_Const);
// on:
send118078 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7790);
method15814 = (Object)new_AST_Method_with((Type_Array)array13198, (Type_Array)array13199, 1, send118078);
methodclosure15812 = (Object)new_Runtime_MethodClosure(method15814);
store_method((Type_Class)class2736, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15812);


// PEGRange>>stop:
//stop: int
// 	stop := int
localvariable16648 = (Object)new_AST_Variable_named(L"int");
array13201 = (Object)new_Type_Array_with(1, (Object)localvariable16648);
assign14471 = (Object)new_AST_Assign((Object)instancevariable4017, (Object)localvariable16648);
method15815 = (Object)new_AST_Method_with((Type_Array)array13201, (Type_Array)empty_Type_Array, 2, assign14471, Self);
symbol22151 = (Object)new_Type_Symbol_cached(L"stop:");
methodclosure15813 = (Object)new_Runtime_MethodClosure(method15815);
store_method((Type_Class)class2736, (Type_Symbol)symbol22151, (Runtime_MethodClosure)methodclosure15813);


// PEGRange>>start:
//start: int
// 	start := int
localvariable16649 = (Object)new_AST_Variable_named(L"int");
array13202 = (Object)new_Type_Array_with(1, (Object)localvariable16649);
assign14472 = (Object)new_AST_Assign((Object)instancevariable4016, (Object)localvariable16649);
method15816 = (Object)new_AST_Method_with((Type_Array)array13202, (Type_Array)empty_Type_Array, 2, assign14472, Self);
symbol22152 = (Object)new_Type_Symbol_cached(L"start:");
methodclosure15814 = (Object)new_Runtime_MethodClosure(method15816);
store_method((Type_Class)class2736, (Type_Symbol)symbol22152, (Runtime_MethodClosure)methodclosure15814);


// a PMetaclass P#PEGRange>>between:and:
//between: start and: stop
// 	^ self new
// 		start: (start min: stop);
// 		stop: (start max: stop)
localvariable16650 = (Object)new_AST_Variable_named(L"start");
localvariable16651 = (Object)new_AST_Variable_named(L"stop");
array13203 = (Object)new_Type_Array_with(2, (Object)localvariable16650, (Object)localvariable16651);
localvariable16652 = (Object)new_AST_Variable_named(L"receiver");
array13204 = (Object)new_Type_Array_with(1, (Object)localvariable16652);
symbol21937 = (Object)new_Type_Symbol_cached(L"min:");
// min:
send118079 = (Object)new_AST_Send((Object)localvariable16650, (Object)symbol21937, 1, (Object)localvariable16651);
// start:
send118080 = (Object)new_AST_Send((Object)localvariable16652, (Object)symbol22152, 1, (Object)send118079);
// max:
send118081 = (Object)new_AST_Send((Object)localvariable16650, (Object)symbol21928, 1, (Object)localvariable16651);
// stop:
send118082 = (Object)new_AST_Send((Object)localvariable16652, (Object)symbol22151, 1, (Object)send118081);
block7791 = (Object)new_AST_Block_with((Type_Array)array13204, (Type_Array)empty_Type_Array, 1, 2, send118080, send118082);
// new
send118083 = (Object)new_AST_Send((Object)Self, (Object)symbol21894, 0);
// value:
send118084 = (Object)new_AST_Send((Object)block7791, (Object)SMB_value_, 1, (Object)send118083);
method15817 = (Object)new_AST_Method_with((Type_Array)array13203, (Type_Array)empty_Type_Array, 1, send118084);
symbol22150 = (Object)new_Type_Symbol_cached(L"between:and:");
methodclosure15815 = (Object)new_Runtime_MethodClosure(method15817);
store_method((Type_Class)metaclass2736, (Type_Symbol)symbol22150, (Runtime_MethodClosure)methodclosure15815);

smallint8270 = (Object)new_Type_SmallInt(1);
constant22851 = (Object)new_AST_Constant((Object)smallint8270);
// at:
send118085 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant22851);
smallint8271 = (Object)new_Type_SmallInt(3);
constant22852 = (Object)new_AST_Constant((Object)smallint8271);
// at:
send118086 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)constant22852);
// between:and:
send118087 = (Object)new_AST_Send((Object)classreference3131, (Object)symbol22150, 2, (Object)send118085, (Object)send118086);
method15818 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118068, send118087);
symbol21918 = (Object)new_Type_Symbol_cached(L"asPEGRange");
methodclosure15816 = (Object)new_Runtime_MethodClosure(method15818);
store_method((Type_Class)Type_String_Class, (Type_Symbol)symbol21918, (Runtime_MethodClosure)methodclosure15816);

classreference3132 = (Object)new_Organization_ClassReference((Type_Class)True_Class);

// True>>and:
//and: aBlock
// 	^ aBlock value.
localvariable16653 = (Object)new_AST_Variable_named(L"aBlock");
array13205 = (Object)new_Type_Array_with(1, (Object)localvariable16653);
// value
send118088 = (Object)new_AST_Send((Object)localvariable16653, (Object)symbol22179, 0);
method15819 = (Object)new_AST_Method_with((Type_Array)array13205, (Type_Array)empty_Type_Array, 1, send118088);
methodclosure15817 = (Object)new_Runtime_MethodClosure(method15819);
store_method((Type_Class)True_Class, (Type_Symbol)symbol21913, (Runtime_MethodClosure)methodclosure15817);


// True>>or:
//or: aBoolean
localvariable16654 = (Object)new_AST_Variable_named(L"aBoolean");
array13206 = (Object)new_Type_Array_with(1, (Object)localvariable16654);
method15820 = (Object)new_AST_Method_with((Type_Array)array13206, (Type_Array)empty_Type_Array, 1, Self);
symbol21912 = (Object)new_Type_Symbol_cached(L"or:");
methodclosure15818 = (Object)new_Runtime_MethodClosure(method15820);
store_method((Type_Class)True_Class, (Type_Symbol)symbol21912, (Runtime_MethodClosure)methodclosure15818);

classreference3133 = (Object)new_Organization_ClassReference((Type_Class)Type_Character_Class);

// Character>><
//< aCharacter 
// 	"Answer true if the receiver's value < aCharacter's value."
// 
// 	^ aCharacter > self asSmallInt
localvariable16655 = (Object)new_AST_Variable_named(L"aCharacter");
array13207 = (Object)new_Type_Array_with(1, (Object)localvariable16655);
// asSmallInt
send118089 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
// >
send118090 = (Object)new_AST_Send((Object)localvariable16655, (Object)SMB__gt, 1, (Object)send118089);
method15821 = (Object)new_AST_Method_with((Type_Array)array13207, (Type_Array)empty_Type_Array, 1, send118090);
methodclosure15819 = (Object)new_Runtime_MethodClosure(method15821);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)SMB__lt, (Runtime_MethodClosure)methodclosure15819);


// Character>>asPEG
//asPEG
// 	^ self asString asPEG
// asString
send118091 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);
// asPEG
send118092 = (Object)new_AST_Send((Object)send118091, (Object)symbol21921, 0);
method15822 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118092);
methodclosure15820 = (Object)new_Runtime_MethodClosure(method15822);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol21921, (Runtime_MethodClosure)methodclosure15820);


// Character>>asUppercase
//asUppercase
// 	"If the receiver is lowercase, answer its matching uppercase Character."
// 	"A tentative implementation.  Eventually this should consult the Unicode table."	
// 
// 	| v |
// 	v := self charCode.
// 	(((97 <= v and: [v <= 122]) or: [224 <= v and: [v <= 246]]) or: [248 <= v and: [v <= 254]])
// 		ifTrue: [^ (0 - 32 + self asSmallInt) asCharacter ]
// 		ifFalse: [^ self]
localvariable16656 = (Object)new_AST_Variable_named(L"v");
array13208 = (Object)new_Type_Array_with(1, (Object)localvariable16656);
variable921 = (Object)new_AST_Variable_named(L"return");
array13209 = (Object)new_Type_Array_with(1, (Object)variable921);
symbol21938 = (Object)new_Type_Symbol_cached(L"charCode");
// charCode
send118093 = (Object)new_AST_Send((Object)Self, (Object)symbol21938, 0);
assign14473 = (Object)new_AST_Assign((Object)localvariable16656, (Object)send118093);
smallint8272 = (Object)new_Type_SmallInt(97);
constant22853 = (Object)new_AST_Constant((Object)smallint8272);
// <=
send118094 = (Object)new_AST_Send((Object)constant22853, (Object)symbol21930, 1, (Object)localvariable16656);
smallint8273 = (Object)new_Type_SmallInt(122);
constant22854 = (Object)new_AST_Constant((Object)smallint8273);
// <=
send118095 = (Object)new_AST_Send((Object)localvariable16656, (Object)symbol21930, 1, (Object)constant22854);
block7792 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118095);
// and:
send118096 = (Object)new_AST_Send((Object)send118094, (Object)symbol21913, 1, (Object)block7792);
smallint8274 = (Object)new_Type_SmallInt(224);
constant22855 = (Object)new_AST_Constant((Object)smallint8274);
// <=
send118097 = (Object)new_AST_Send((Object)constant22855, (Object)symbol21930, 1, (Object)localvariable16656);
smallint8275 = (Object)new_Type_SmallInt(246);
constant22856 = (Object)new_AST_Constant((Object)smallint8275);
// <=
send118098 = (Object)new_AST_Send((Object)localvariable16656, (Object)symbol21930, 1, (Object)constant22856);
block7793 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118098);
// and:
send118099 = (Object)new_AST_Send((Object)send118097, (Object)symbol21913, 1, (Object)block7793);
block7794 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118099);
// or:
send118100 = (Object)new_AST_Send((Object)send118096, (Object)symbol21912, 1, (Object)block7794);
smallint8276 = (Object)new_Type_SmallInt(248);
constant22857 = (Object)new_AST_Constant((Object)smallint8276);
// <=
send118101 = (Object)new_AST_Send((Object)constant22857, (Object)symbol21930, 1, (Object)localvariable16656);
smallint8277 = (Object)new_Type_SmallInt(254);
constant22858 = (Object)new_AST_Constant((Object)smallint8277);
// <=
send118102 = (Object)new_AST_Send((Object)localvariable16656, (Object)symbol21930, 1, (Object)constant22858);
block7795 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118102);
// and:
send118103 = (Object)new_AST_Send((Object)send118101, (Object)symbol21913, 1, (Object)block7795);
block7796 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118103);
// or:
send118104 = (Object)new_AST_Send((Object)send118100, (Object)symbol21912, 1, (Object)block7796);
smallint8278 = (Object)new_Type_SmallInt(0);
constant22859 = (Object)new_AST_Constant((Object)smallint8278);
smallint8279 = (Object)new_Type_SmallInt(32);
constant22860 = (Object)new_AST_Constant((Object)smallint8279);
// -
send118105 = (Object)new_AST_Send((Object)constant22859, (Object)SMB__minus, 1, (Object)constant22860);
// asSmallInt
send118106 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
// +
send118107 = (Object)new_AST_Send((Object)send118105, (Object)SMB__plus, 1, (Object)send118106);
// asCharacter
send118108 = (Object)new_AST_Send((Object)send118107, (Object)SMB_asCharacter, 0);
// escape:
send118109 = (Object)new_AST_Send((Object)variable921, (Object)SMB_escape_, 1, (Object)send118108);
block7797 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118109);
// escape:
send118110 = (Object)new_AST_Send((Object)variable921, (Object)SMB_escape_, 1, (Object)Self);
block7798 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118110);
// ifTrue:ifFalse:
send118111 = (Object)new_AST_Send((Object)send118104, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7797, (Object)block7798);
block7799 = (Object)new_AST_Block_with((Type_Array)array13209, (Type_Array)empty_Type_Array, 1, 3, assign14473, send118111, Self);
// on:
send118112 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7799);
method15823 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13208, 1, send118112);
methodclosure15821 = (Object)new_Runtime_MethodClosure(method15823);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol21936, (Runtime_MethodClosure)methodclosure15821);


// Character>>max:
//max: aMagnitude 
// 	"Answer the receiver or the argument, whichever has the greater 
// 	magnitude."
// 
// 	self > aMagnitude
// 		ifTrue: [^self]
// 		ifFalse: [^aMagnitude]
localvariable16657 = (Object)new_AST_Variable_named(L"aMagnitude");
array13210 = (Object)new_Type_Array_with(1, (Object)localvariable16657);
variable922 = (Object)new_AST_Variable_named(L"return");
array13211 = (Object)new_Type_Array_with(1, (Object)variable922);
// >
send118113 = (Object)new_AST_Send((Object)Self, (Object)SMB__gt, 1, (Object)localvariable16657);
// escape:
send118114 = (Object)new_AST_Send((Object)variable922, (Object)SMB_escape_, 1, (Object)Self);
block7800 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118114);
// escape:
send118115 = (Object)new_AST_Send((Object)variable922, (Object)SMB_escape_, 1, (Object)localvariable16657);
block7801 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118115);
// ifTrue:ifFalse:
send118116 = (Object)new_AST_Send((Object)send118113, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7800, (Object)block7801);
block7802 = (Object)new_AST_Block_with((Type_Array)array13211, (Type_Array)empty_Type_Array, 1, 2, send118116, Self);
// on:
send118117 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7802);
method15824 = (Object)new_AST_Method_with((Type_Array)array13210, (Type_Array)empty_Type_Array, 1, send118117);
methodclosure15822 = (Object)new_Runtime_MethodClosure(method15824);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol21928, (Runtime_MethodClosure)methodclosure15822);


// Character>>>
//> aCharacter 
// 	"Answer true if the receiver's value < aCharacter's value."
// 
// 	^ aCharacter < self asSmallInt
localvariable16658 = (Object)new_AST_Variable_named(L"aCharacter");
array13212 = (Object)new_Type_Array_with(1, (Object)localvariable16658);
// asSmallInt
send118118 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
// <
send118119 = (Object)new_AST_Send((Object)localvariable16658, (Object)SMB__lt, 1, (Object)send118118);
method15825 = (Object)new_AST_Method_with((Type_Array)array13212, (Type_Array)empty_Type_Array, 1, send118119);
methodclosure15823 = (Object)new_Runtime_MethodClosure(method15825);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)SMB__gt, (Runtime_MethodClosure)methodclosure15823);


// Character>>charCode
//charCode
// 	^ self asSmallInt.
// asSmallInt
send118120 = (Object)new_AST_Send((Object)Self, (Object)SMB_asSmallInt, 0);
method15826 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118120);
methodclosure15824 = (Object)new_Runtime_MethodClosure(method15826);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol21938, (Runtime_MethodClosure)methodclosure15824);


// Character>>min:
//min: aMagnitude 
// 	"Answer the receiver or the argument, whichever has the lesser 
// 	magnitude."
// 
// 	self < aMagnitude
// 		ifTrue: [^self]
// 		ifFalse: [^aMagnitude]
localvariable16659 = (Object)new_AST_Variable_named(L"aMagnitude");
array13213 = (Object)new_Type_Array_with(1, (Object)localvariable16659);
variable923 = (Object)new_AST_Variable_named(L"return");
array13214 = (Object)new_Type_Array_with(1, (Object)variable923);
// <
send118121 = (Object)new_AST_Send((Object)Self, (Object)SMB__lt, 1, (Object)localvariable16659);
// escape:
send118122 = (Object)new_AST_Send((Object)variable923, (Object)SMB_escape_, 1, (Object)Self);
block7803 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118122);
// escape:
send118123 = (Object)new_AST_Send((Object)variable923, (Object)SMB_escape_, 1, (Object)localvariable16659);
block7804 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118123);
// ifTrue:ifFalse:
send118124 = (Object)new_AST_Send((Object)send118121, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7803, (Object)block7804);
block7805 = (Object)new_AST_Block_with((Type_Array)array13214, (Type_Array)empty_Type_Array, 1, 2, send118124, Self);
// on:
send118125 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7805);
method15827 = (Object)new_AST_Method_with((Type_Array)array13213, (Type_Array)empty_Type_Array, 1, send118125);
methodclosure15825 = (Object)new_Runtime_MethodClosure(method15827);
store_method((Type_Class)Type_Character_Class, (Type_Symbol)symbol21937, (Runtime_MethodClosure)methodclosure15825);

classreference3134 = (Object)new_Organization_ClassReference((Type_Class)class2725);

// Type>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', self objectName, ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable16660 = (Object)new_AST_Variable_named(L"aMessage");
array13215 = (Object)new_Type_Array_with(1, (Object)localvariable16660);
localvariable16661 = (Object)new_AST_Variable_named(L"selector");
array13216 = (Object)new_Type_Array_with(1, (Object)localvariable16661);
variable924 = (Object)new_AST_Variable_named(L"return");
array13217 = (Object)new_Type_Array_with(1, (Object)variable924);
// selector
send118126 = (Object)new_AST_Send((Object)localvariable16660, (Object)symbol21908, 0);
symbol22186 = (Object)new_Type_Symbol_cached(L"accept:");
constant22861 = (Object)new_AST_Constant((Object)symbol22186);
// =
send118127 = (Object)new_AST_Send((Object)send118126, (Object)SMB__equal, 1, (Object)constant22861);
super1275 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable16660);
// escape:
send118128 = (Object)new_AST_Send((Object)variable924, (Object)SMB_escape_, 1, (Object)super1275);
block7806 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118128);
// ifFalse:
send118129 = (Object)new_AST_Send((Object)send118127, (Object)SMB_ifFalse_, 1, (Object)block7806);
string13385 = (Object)new_Type_String(L"visit");
constant22862 = (Object)new_AST_Constant((Object)string13385);
// objectName
send118130 = (Object)new_AST_Send((Object)Self, (Object)symbol21798, 0);
// ,
send118131 = (Object)new_AST_Send((Object)constant22862, (Object)SMB__concat, 1, (Object)send118130);
string13386 = (Object)new_Type_String(L":");
constant22863 = (Object)new_AST_Constant((Object)string13386);
// ,
send118132 = (Object)new_AST_Send((Object)send118131, (Object)SMB__concat, 1, (Object)constant22863);
// asSymbol
send118133 = (Object)new_AST_Send((Object)send118132, (Object)SMB_asSymbol, 0);
assign14474 = (Object)new_AST_Assign((Object)localvariable16661, (Object)send118133);
symbol22014 = (Object)new_Type_Symbol_cached(L"argument");
// argument
send118134 = (Object)new_AST_Send((Object)localvariable16660, (Object)symbol22014, 0);
symbol22187 = (Object)new_Type_Symbol_cached(L"perform:with:");
// perform:with:
send118135 = (Object)new_AST_Send((Object)send118134, (Object)symbol22187, 2, (Object)localvariable16661, (Object)Self);
block7807 = (Object)new_AST_Block_with((Type_Array)array13217, (Type_Array)empty_Type_Array, 1, 3, send118129, assign14474, send118135);
// on:
send118136 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7807);
method15828 = (Object)new_AST_Method_with((Type_Array)array13215, (Type_Array)array13216, 1, send118136);
methodclosure15826 = (Object)new_Runtime_MethodClosure(method15828);
store_method((Type_Class)class2725, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure15826);

classreference3135 = (Object)new_Organization_ClassReference((Type_Class)Type_Symbol_Class);

// Symbol>>capitalized
//capitalized
// 	^ self asString capitalized asSymbol
// asString
send118137 = (Object)new_AST_Send((Object)Self, (Object)SMB_asString, 0);
// capitalized
send118138 = (Object)new_AST_Send((Object)send118137, (Object)symbol21925, 0);
// asSymbol
send118139 = (Object)new_AST_Send((Object)send118138, (Object)SMB_asSymbol, 0);
method15829 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118139);
methodclosure15827 = (Object)new_Runtime_MethodClosure(method15829);
store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol21925, (Runtime_MethodClosure)methodclosure15827);


// Symbol>>do:
//do: aBlock 
// 	"Refer to the comment in Collection|do:."
// 	1 to: self size do:
// 		[:index | aBlock value: (self at: index)]
localvariable16662 = (Object)new_AST_Variable_named(L"aBlock");
array13218 = (Object)new_Type_Array_with(1, (Object)localvariable16662);
smallint8280 = (Object)new_Type_SmallInt(1);
constant22864 = (Object)new_AST_Constant((Object)smallint8280);
// size
send118140 = (Object)new_AST_Send((Object)Self, (Object)SMB_size, 0);
localvariable16663 = (Object)new_AST_Variable_named(L"index");
array13219 = (Object)new_Type_Array_with(1, (Object)localvariable16663);
// at:
send118141 = (Object)new_AST_Send((Object)Self, (Object)SMB_at_, 1, (Object)localvariable16663);
// value:
send118142 = (Object)new_AST_Send((Object)localvariable16662, (Object)SMB_value_, 1, (Object)send118141);
block7808 = (Object)new_AST_Block_with((Type_Array)array13219, (Type_Array)empty_Type_Array, 1, 1, send118142);
// to:do:
send118143 = (Object)new_AST_Send((Object)constant22864, (Object)symbol21929, 2, (Object)send118140, (Object)block7808);
method15830 = (Object)new_AST_Method_with((Type_Array)array13218, (Type_Array)empty_Type_Array, 2, send118143, Self);
methodclosure15828 = (Object)new_Runtime_MethodClosure(method15830);
store_method((Type_Class)Type_Symbol_Class, (Type_Symbol)symbol21924, (Runtime_MethodClosure)methodclosure15828);

classreference3136 = (Object)new_Organization_ClassReference((Type_Class)False_Class);

// False>>and:
//and: aBoolean
localvariable16664 = (Object)new_AST_Variable_named(L"aBoolean");
array13220 = (Object)new_Type_Array_with(1, (Object)localvariable16664);
method15831 = (Object)new_AST_Method_with((Type_Array)array13220, (Type_Array)empty_Type_Array, 1, Self);
methodclosure15829 = (Object)new_Runtime_MethodClosure(method15831);
store_method((Type_Class)False_Class, (Type_Symbol)symbol21913, (Runtime_MethodClosure)methodclosure15829);


// False>>or:
//or: aBlock
// 	^ aBlock value.
localvariable16665 = (Object)new_AST_Variable_named(L"aBlock");
array13221 = (Object)new_Type_Array_with(1, (Object)localvariable16665);
// value
send118144 = (Object)new_AST_Send((Object)localvariable16665, (Object)symbol22179, 0);
method15832 = (Object)new_AST_Method_with((Type_Array)array13221, (Type_Array)empty_Type_Array, 1, send118144);
methodclosure15830 = (Object)new_Runtime_MethodClosure(method15832);
store_method((Type_Class)False_Class, (Type_Symbol)symbol21912, (Runtime_MethodClosure)methodclosure15830);

classreference3137 = (Object)new_Organization_ClassReference((Type_Class)class2728);

// PEGSucceededOptionalResult>>ifMatched:
//ifMatched: block
// 	block value: result
localvariable16666 = (Object)new_AST_Variable_named(L"block");
array13222 = (Object)new_Type_Array_with(1, (Object)localvariable16666);
// value:
send118145 = (Object)new_AST_Send((Object)localvariable16666, (Object)SMB_value_, 1, (Object)instancevariable4002);
method15833 = (Object)new_AST_Method_with((Type_Array)array13222, (Type_Array)empty_Type_Array, 2, send118145, Self);
symbol22170 = (Object)new_Type_Symbol_cached(L"ifMatched:");
methodclosure15831 = (Object)new_Runtime_MethodClosure(method15833);
store_method((Type_Class)class2728, (Type_Symbol)symbol22170, (Runtime_MethodClosure)methodclosure15831);


// PEGSucceededOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	^ result
localvariable16667 = (Object)new_AST_Variable_named(L"alternative");
array13223 = (Object)new_Type_Array_with(1, (Object)localvariable16667);
method15834 = (Object)new_AST_Method_with((Type_Array)array13223, (Type_Array)empty_Type_Array, 1, instancevariable4002);
symbol22169 = (Object)new_Type_Symbol_cached(L"resultIfFailed:");
methodclosure15832 = (Object)new_Runtime_MethodClosure(method15834);
store_method((Type_Class)class2728, (Type_Symbol)symbol22169, (Runtime_MethodClosure)methodclosure15832);


// PEGSucceededOptionalResult>>result:
//result: newResult
// 	result := newResult
localvariable16668 = (Object)new_AST_Variable_named(L"newResult");
array13224 = (Object)new_Type_Array_with(1, (Object)localvariable16668);
assign14475 = (Object)new_AST_Assign((Object)instancevariable4002, (Object)localvariable16668);
method15835 = (Object)new_AST_Method_with((Type_Array)array13224, (Type_Array)empty_Type_Array, 2, assign14475, Self);
symbol22171 = (Object)new_Type_Symbol_cached(L"result:");
methodclosure15833 = (Object)new_Runtime_MethodClosure(method15835);
store_method((Type_Class)class2728, (Type_Symbol)symbol22171, (Runtime_MethodClosure)methodclosure15833);

classreference3138 = (Object)new_Organization_ClassReference((Type_Class)class2731);
classreference3139 = (Object)new_Organization_ClassReference((Type_Class)class2732);

// PEGParser>>separator:
//separator: aSeparator
// 	separator := aSeparator
localvariable16669 = (Object)new_AST_Variable_named(L"aSeparator");
array13225 = (Object)new_Type_Array_with(1, (Object)localvariable16669);
assign14476 = (Object)new_AST_Assign((Object)instancevariable4011, (Object)localvariable16669);
method15836 = (Object)new_AST_Method_with((Type_Array)array13225, (Type_Array)empty_Type_Array, 2, assign14476, Self);
symbol22138 = (Object)new_Type_Symbol_cached(L"separator:");
methodclosure15834 = (Object)new_Runtime_MethodClosure(method15836);
store_method((Type_Class)class2732, (Type_Symbol)symbol22138, (Runtime_MethodClosure)methodclosure15834);


// PEGParser>>parse:
//parse: input
// 	| memoizingString result |
// 	memoizingString := PEGStringScanner on: input separator: separator.
// 	result := self match: memoizingString.
// 	
// 	^ result
localvariable16670 = (Object)new_AST_Variable_named(L"input");
array13226 = (Object)new_Type_Array_with(1, (Object)localvariable16670);
localvariable16671 = (Object)new_AST_Variable_named(L"memoizingString");
localvariable16672 = (Object)new_AST_Variable_named(L"result");
array13227 = (Object)new_Type_Array_with(2, (Object)localvariable16671, (Object)localvariable16672);
classreference3140 = (Object)new_Organization_ClassReference((Type_Class)class2737);

// PEGStringScanner>>doMatch:
//doMatch: parser
// 	| result |
// 	"First match then store position"
// 	result := parser performMatch: self.
// 	^ position @ result
localvariable16673 = (Object)new_AST_Variable_named(L"parser");
array13228 = (Object)new_Type_Array_with(1, (Object)localvariable16673);
localvariable16674 = (Object)new_AST_Variable_named(L"result");
array13229 = (Object)new_Type_Array_with(1, (Object)localvariable16674);
symbol22141 = (Object)new_Type_Symbol_cached(L"performMatch:");
// performMatch:
send118146 = (Object)new_AST_Send((Object)localvariable16673, (Object)symbol22141, 1, (Object)Self);
assign14477 = (Object)new_AST_Assign((Object)localvariable16674, (Object)send118146);
symbol22188 = (Object)new_Type_Symbol_cached(L"@");
// @
send118147 = (Object)new_AST_Send((Object)instancevariable3990, (Object)symbol22188, 1, (Object)localvariable16674);
method15837 = (Object)new_AST_Method_with((Type_Array)array13228, (Type_Array)array13229, 2, assign14477, send118147);
symbol21951 = (Object)new_Type_Symbol_cached(L"doMatch:");
methodclosure15835 = (Object)new_Runtime_MethodClosure(method15837);
store_method((Type_Class)class2737, (Type_Symbol)symbol21951, (Runtime_MethodClosure)methodclosure15835);


// PEGStringScanner>>bucket
//bucket
// 	| bucket |
// 	bucket := cache at: position + 1.
// 	bucket ifNotNil: [ ^ bucket ].
// 	^ cache at: position + 1 put: (SmallDictionary new).
localvariable16675 = (Object)new_AST_Variable_named(L"bucket");
array13230 = (Object)new_Type_Array_with(1, (Object)localvariable16675);
variable925 = (Object)new_AST_Variable_named(L"return");
array13231 = (Object)new_Type_Array_with(1, (Object)variable925);
smallint8281 = (Object)new_Type_SmallInt(1);
constant22865 = (Object)new_AST_Constant((Object)smallint8281);
// +
send118148 = (Object)new_AST_Send((Object)instancevariable3990, (Object)SMB__plus, 1, (Object)constant22865);
// at:
send118149 = (Object)new_AST_Send((Object)instancevariable4019, (Object)SMB_at_, 1, (Object)send118148);
assign14478 = (Object)new_AST_Assign((Object)localvariable16675, (Object)send118149);
// escape:
send118150 = (Object)new_AST_Send((Object)variable925, (Object)SMB_escape_, 1, (Object)localvariable16675);
block7809 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118150);
// ifNotNil:
send118151 = (Object)new_AST_Send((Object)localvariable16675, (Object)symbol22184, 1, (Object)block7809);
smallint8282 = (Object)new_Type_SmallInt(1);
constant22866 = (Object)new_AST_Constant((Object)smallint8282);
// +
send118152 = (Object)new_AST_Send((Object)instancevariable3990, (Object)SMB__plus, 1, (Object)constant22866);
// new
send118153 = (Object)new_AST_Send((Object)classreference3112, (Object)symbol21894, 0);
// at:put:
send118154 = (Object)new_AST_Send((Object)instancevariable4019, (Object)SMB_at_put_, 2, (Object)send118152, (Object)send118153);
block7810 = (Object)new_AST_Block_with((Type_Array)array13231, (Type_Array)empty_Type_Array, 1, 3, assign14478, send118151, send118154);
// on:
send118155 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7810);
method15838 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13230, 1, send118155);
symbol21949 = (Object)new_Type_Symbol_cached(L"bucket");
methodclosure15836 = (Object)new_Runtime_MethodClosure(method15838);
store_method((Type_Class)class2737, (Type_Symbol)symbol21949, (Runtime_MethodClosure)methodclosure15836);


// PEGStringScanner>>beginsWith:
//beginsWith: subCollection 
// 	| pattern startMatch |
// 	pattern := subCollection readStream.
// 	startMatch := nil.
// 	[ pattern atEnd ] whileFalse: 
// 		[ self atEnd ifTrue: [ ^ false ].
// 		self next ~= pattern next 
// 			ifTrue: [ ^ false ] ].
// 	^ true
localvariable16676 = (Object)new_AST_Variable_named(L"subCollection");
array13232 = (Object)new_Type_Array_with(1, (Object)localvariable16676);
localvariable16677 = (Object)new_AST_Variable_named(L"pattern");
localvariable16678 = (Object)new_AST_Variable_named(L"startMatch");
array13233 = (Object)new_Type_Array_with(2, (Object)localvariable16677, (Object)localvariable16678);
variable926 = (Object)new_AST_Variable_named(L"return");
array13234 = (Object)new_Type_Array_with(1, (Object)variable926);
symbol22189 = (Object)new_Type_Symbol_cached(L"readStream");
// readStream
send118156 = (Object)new_AST_Send((Object)localvariable16676, (Object)symbol22189, 0);
assign14479 = (Object)new_AST_Assign((Object)localvariable16677, (Object)send118156);
assign14480 = (Object)new_AST_Assign((Object)localvariable16678, (Object)Nil_Const);
// atEnd
send118157 = (Object)new_AST_Send((Object)localvariable16677, (Object)SMB_atEnd, 0);
block7811 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118157);
// atEnd
send118158 = (Object)new_AST_Send((Object)Self, (Object)SMB_atEnd, 0);
// escape:
send118159 = (Object)new_AST_Send((Object)variable926, (Object)SMB_escape_, 1, (Object)False_Const);
block7812 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118159);
// ifTrue:
send118160 = (Object)new_AST_Send((Object)send118158, (Object)SMB_ifTrue_, 1, (Object)block7812);
// next
send118161 = (Object)new_AST_Send((Object)Self, (Object)symbol22183, 0);
// next
send118162 = (Object)new_AST_Send((Object)localvariable16677, (Object)symbol22183, 0);
// ~=
send118163 = (Object)new_AST_Send((Object)send118161, (Object)symbol21804, 1, (Object)send118162);
// escape:
send118164 = (Object)new_AST_Send((Object)variable926, (Object)SMB_escape_, 1, (Object)False_Const);
block7813 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118164);
// ifTrue:
send118165 = (Object)new_AST_Send((Object)send118163, (Object)SMB_ifTrue_, 1, (Object)block7813);
block7814 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send118160, send118165);
// whileFalse:
send118166 = (Object)new_AST_Send((Object)block7811, (Object)SMB_whileFalse_, 1, (Object)block7814);
block7815 = (Object)new_AST_Block_with((Type_Array)array13234, (Type_Array)empty_Type_Array, 1, 4, assign14479, assign14480, send118166, True_Const);
// on:
send118167 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7815);
method15839 = (Object)new_AST_Method_with((Type_Array)array13232, (Type_Array)array13233, 1, send118167);
symbol21943 = (Object)new_Type_Symbol_cached(L"beginsWith:");
methodclosure15837 = (Object)new_Runtime_MethodClosure(method15839);
store_method((Type_Class)class2737, (Type_Symbol)symbol21943, (Runtime_MethodClosure)methodclosure15837);


// PEGStringScanner>>scan:
//scan: otherString
// 	" Maybe we should use other objects to mark... "
// 	^ (self beginsWith: otherString)
// 		ifTrue: [ otherString ]
// 		ifFalse: [ nil ]
localvariable16679 = (Object)new_AST_Variable_named(L"otherString");
array13235 = (Object)new_Type_Array_with(1, (Object)localvariable16679);
// beginsWith:
send118168 = (Object)new_AST_Send((Object)Self, (Object)symbol21943, 1, (Object)localvariable16679);
block7816 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, localvariable16679);
block7817 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, Nil_Const);
// ifTrue:ifFalse:
send118169 = (Object)new_AST_Send((Object)send118168, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7816, (Object)block7817);
method15840 = (Object)new_AST_Method_with((Type_Array)array13235, (Type_Array)empty_Type_Array, 1, send118169);
methodclosure15838 = (Object)new_Runtime_MethodClosure(method15840);
store_method((Type_Class)class2737, (Type_Symbol)symbol21945, (Runtime_MethodClosure)methodclosure15838);


// PEGStringScanner>>memoizeMatch:
//memoizeMatch: parser 
// 	| result doCache |
// 	doCache := true.
// 	doCache ifTrue: [
// 		result := self bucket at: parser ifAbsentPut: [ self doMatch: parser ].
// 		position := result x.
// 		^ result y.
// 	]
// 	ifFalse: [ ^ (self doMatch: parser) y]
localvariable16680 = (Object)new_AST_Variable_named(L"parser");
array13236 = (Object)new_Type_Array_with(1, (Object)localvariable16680);
localvariable16681 = (Object)new_AST_Variable_named(L"result");
localvariable16682 = (Object)new_AST_Variable_named(L"doCache");
array13237 = (Object)new_Type_Array_with(2, (Object)localvariable16681, (Object)localvariable16682);
variable927 = (Object)new_AST_Variable_named(L"return");
array13238 = (Object)new_Type_Array_with(1, (Object)variable927);
assign14481 = (Object)new_AST_Assign((Object)localvariable16682, (Object)True_Const);
// bucket
send118170 = (Object)new_AST_Send((Object)Self, (Object)symbol21949, 0);
// doMatch:
send118171 = (Object)new_AST_Send((Object)Self, (Object)symbol21951, 1, (Object)localvariable16680);
block7818 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118171);
// at:ifAbsentPut:
send118172 = (Object)new_AST_Send((Object)send118170, (Object)symbol22158, 2, (Object)localvariable16680, (Object)block7818);
assign14482 = (Object)new_AST_Assign((Object)localvariable16681, (Object)send118172);
symbol22190 = (Object)new_Type_Symbol_cached(L"x");
// x
send118173 = (Object)new_AST_Send((Object)localvariable16681, (Object)symbol22190, 0);
assign14483 = (Object)new_AST_Assign((Object)instancevariable3990, (Object)send118173);
symbol22191 = (Object)new_Type_Symbol_cached(L"y");
// y
send118174 = (Object)new_AST_Send((Object)localvariable16681, (Object)symbol22191, 0);
// escape:
send118175 = (Object)new_AST_Send((Object)variable927, (Object)SMB_escape_, 1, (Object)send118174);
block7819 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 3, assign14482, assign14483, send118175);
// doMatch:
send118176 = (Object)new_AST_Send((Object)Self, (Object)symbol21951, 1, (Object)localvariable16680);
// y
send118177 = (Object)new_AST_Send((Object)send118176, (Object)symbol22191, 0);
// escape:
send118178 = (Object)new_AST_Send((Object)variable927, (Object)SMB_escape_, 1, (Object)send118177);
block7820 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118178);
// ifTrue:ifFalse:
send118179 = (Object)new_AST_Send((Object)localvariable16682, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7819, (Object)block7820);
block7821 = (Object)new_AST_Block_with((Type_Array)array13238, (Type_Array)empty_Type_Array, 1, 3, assign14481, send118179, Self);
// on:
send118180 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7821);
method15841 = (Object)new_AST_Method_with((Type_Array)array13236, (Type_Array)array13237, 1, send118180);
symbol21950 = (Object)new_Type_Symbol_cached(L"memoizeMatch:");
methodclosure15839 = (Object)new_Runtime_MethodClosure(method15841);
store_method((Type_Class)class2737, (Type_Symbol)symbol21950, (Runtime_MethodClosure)methodclosure15839);


// PEGStringScanner>>on:separator:
//on: aString separator: aSeparator
// 	super on: aString.
// 	separator := aSeparator.
// 	cache := Array new: (aString size + 1).
localvariable16683 = (Object)new_AST_Variable_named(L"aString");
localvariable16684 = (Object)new_AST_Variable_named(L"aSeparator");
array13239 = (Object)new_Type_Array_with(2, (Object)localvariable16683, (Object)localvariable16684);
super1276 = (Object)new_AST_Super((Object)SMB_on_, 1, (Object)localvariable16683);
assign14484 = (Object)new_AST_Assign((Object)instancevariable4018, (Object)localvariable16684);
// size
send118181 = (Object)new_AST_Send((Object)localvariable16683, (Object)SMB_size, 0);
smallint8283 = (Object)new_Type_SmallInt(1);
constant22867 = (Object)new_AST_Constant((Object)smallint8283);
// +
send118182 = (Object)new_AST_Send((Object)send118181, (Object)SMB__plus, 1, (Object)constant22867);
// new:
send118183 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)send118182);
assign14485 = (Object)new_AST_Assign((Object)instancevariable4019, (Object)send118183);
method15842 = (Object)new_AST_Method_with((Type_Array)array13239, (Type_Array)empty_Type_Array, 4, super1276, assign14484, assign14485, Self);
symbol21946 = (Object)new_Type_Symbol_cached(L"on:separator:");
methodclosure15840 = (Object)new_Runtime_MethodClosure(method15842);
store_method((Type_Class)class2737, (Type_Symbol)symbol21946, (Runtime_MethodClosure)methodclosure15840);


// PEGStringScanner>>skipWhitespace
//skipWhitespace
// 	^ separator match: self
// match:
send118184 = (Object)new_AST_Send((Object)instancevariable4018, (Object)symbol22121, 1, (Object)Self);
method15843 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118184);
symbol21944 = (Object)new_Type_Symbol_cached(L"skipWhitespace");
methodclosure15841 = (Object)new_Runtime_MethodClosure(method15843);
store_method((Type_Class)class2737, (Type_Symbol)symbol21944, (Runtime_MethodClosure)methodclosure15841);

// on:separator:
send118185 = (Object)new_AST_Send((Object)classreference3140, (Object)symbol21946, 2, (Object)localvariable16670, (Object)instancevariable4011);
assign14486 = (Object)new_AST_Assign((Object)localvariable16671, (Object)send118185);
// match:
send118186 = (Object)new_AST_Send((Object)Self, (Object)symbol22121, 1, (Object)localvariable16671);
assign14487 = (Object)new_AST_Assign((Object)localvariable16672, (Object)send118186);
method15844 = (Object)new_AST_Method_with((Type_Array)array13226, (Type_Array)array13227, 3, assign14486, assign14487, localvariable16672);
symbol22140 = (Object)new_Type_Symbol_cached(L"parse:");
methodclosure15842 = (Object)new_Runtime_MethodClosure(method15844);
store_method((Type_Class)class2732, (Type_Symbol)symbol22140, (Runtime_MethodClosure)methodclosure15842);


// PEGParser>><=
//<= theExpression
// 	expression := theExpression asPEG
localvariable16685 = (Object)new_AST_Variable_named(L"theExpression");
array13240 = (Object)new_Type_Array_with(1, (Object)localvariable16685);
// asPEG
send118187 = (Object)new_AST_Send((Object)localvariable16685, (Object)symbol21921, 0);
assign14488 = (Object)new_AST_Assign((Object)instancevariable4008, (Object)send118187);
method15845 = (Object)new_AST_Method_with((Type_Array)array13240, (Type_Array)empty_Type_Array, 2, assign14488, Self);
methodclosure15843 = (Object)new_Runtime_MethodClosure(method15845);
store_method((Type_Class)class2732, (Type_Symbol)symbol21930, (Runtime_MethodClosure)methodclosure15843);


// PEGParser>>semantics:
//semantics: aBlock
// 	semantics := aBlock
localvariable16686 = (Object)new_AST_Variable_named(L"aBlock");
array13241 = (Object)new_Type_Array_with(1, (Object)localvariable16686);
assign14489 = (Object)new_AST_Assign((Object)instancevariable4009, (Object)localvariable16686);
method15846 = (Object)new_AST_Method_with((Type_Array)array13241, (Type_Array)empty_Type_Array, 2, assign14489, Self);
symbol22139 = (Object)new_Type_Symbol_cached(L"semantics:");
methodclosure15844 = (Object)new_Runtime_MethodClosure(method15846);
store_method((Type_Class)class2732, (Type_Symbol)symbol22139, (Runtime_MethodClosure)methodclosure15844);


// PEGParser>>match:
//match: input
//  	"| result |
// 	self debug: input.
// 	result :="
// 	| result |
// 	result := input memoizeMatch: self.
// 	"self debugEnd: input."
// 	^ result
localvariable16687 = (Object)new_AST_Variable_named(L"input");
array13242 = (Object)new_Type_Array_with(1, (Object)localvariable16687);
localvariable16688 = (Object)new_AST_Variable_named(L"result");
array13243 = (Object)new_Type_Array_with(1, (Object)localvariable16688);
// memoizeMatch:
send118188 = (Object)new_AST_Send((Object)localvariable16687, (Object)symbol21950, 1, (Object)Self);
assign14490 = (Object)new_AST_Assign((Object)localvariable16688, (Object)send118188);
method15847 = (Object)new_AST_Method_with((Type_Array)array13242, (Type_Array)array13243, 2, assign14490, localvariable16688);
methodclosure15845 = (Object)new_Runtime_MethodClosure(method15847);
store_method((Type_Class)class2732, (Type_Symbol)symbol22121, (Runtime_MethodClosure)methodclosure15845);


// PEGParser>>initialize
//initialize
// 	super initialize.
// 	separator := self class separator
super1277 = (Object)new_AST_Super((Object)symbol21801, 0);
// class
send118189 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol22132 = (Object)new_Type_Symbol_cached(L"separator");
// separator
send118190 = (Object)new_AST_Send((Object)send118189, (Object)symbol22132, 0);
assign14491 = (Object)new_AST_Assign((Object)instancevariable4011, (Object)send118190);
method15848 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1277, assign14491, Self);
methodclosure15846 = (Object)new_Runtime_MethodClosure(method15848);
store_method((Type_Class)class2732, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15846);


// PEGParser>>performMatch:
//performMatch: input
// 	| match |
// 	match := expression match: input.
// 	^ match ifNil: [ match ]
// 		ifNotNil: [
// 			semantics ifNil: [ ^ match ].
// 			semantics value: match ]
localvariable16689 = (Object)new_AST_Variable_named(L"input");
array13244 = (Object)new_Type_Array_with(1, (Object)localvariable16689);
localvariable16690 = (Object)new_AST_Variable_named(L"match");
array13245 = (Object)new_Type_Array_with(1, (Object)localvariable16690);
variable928 = (Object)new_AST_Variable_named(L"return");
array13246 = (Object)new_Type_Array_with(1, (Object)variable928);
// match:
send118191 = (Object)new_AST_Send((Object)instancevariable4008, (Object)symbol22121, 1, (Object)localvariable16689);
assign14492 = (Object)new_AST_Assign((Object)localvariable16690, (Object)send118191);
symbol22192 = (Object)new_Type_Symbol_cached(L"ifNil:ifNotNil:");
block7822 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, localvariable16690);
// escape:
send118192 = (Object)new_AST_Send((Object)variable928, (Object)SMB_escape_, 1, (Object)localvariable16690);
block7823 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118192);
// ifNil:
send118193 = (Object)new_AST_Send((Object)instancevariable4009, (Object)symbol21802, 1, (Object)block7823);
// value:
send118194 = (Object)new_AST_Send((Object)instancevariable4009, (Object)SMB_value_, 1, (Object)localvariable16690);
block7824 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 2, send118193, send118194);
// ifNil:ifNotNil:
send118195 = (Object)new_AST_Send((Object)localvariable16690, (Object)symbol22192, 2, (Object)block7822, (Object)block7824);
block7825 = (Object)new_AST_Block_with((Type_Array)array13246, (Type_Array)empty_Type_Array, 1, 2, assign14492, send118195);
// on:
send118196 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7825);
method15849 = (Object)new_AST_Method_with((Type_Array)array13244, (Type_Array)array13245, 1, send118196);
methodclosure15847 = (Object)new_Runtime_MethodClosure(method15849);
store_method((Type_Class)class2732, (Type_Symbol)symbol22141, (Runtime_MethodClosure)methodclosure15847);


// a PMetaclass P#PEGParser>>separator
//separator
// 	^ PEGParser basicSeparator
symbol22137 = (Object)new_Type_Symbol_cached(L"basicSeparator");
// basicSeparator
send118197 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22137, 0);
method15850 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118197);
methodclosure15848 = (Object)new_Runtime_MethodClosure(method15850);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22132, (Runtime_MethodClosure)methodclosure15848);


// a PMetaclass P#PEGParser>>named:parsing:semantics:
//named: theName parsing: expression semantics: semantics
// 	^ (self named: theName parsing: expression) semantics: semantics
localvariable16691 = (Object)new_AST_Variable_named(L"theName");
localvariable16692 = (Object)new_AST_Variable_named(L"expression");
localvariable16693 = (Object)new_AST_Variable_named(L"semantics");
array13247 = (Object)new_Type_Array_with(3, (Object)localvariable16691, (Object)localvariable16692, (Object)localvariable16693);
symbol22136 = (Object)new_Type_Symbol_cached(L"named:parsing:");
// named:parsing:
send118198 = (Object)new_AST_Send((Object)Self, (Object)symbol22136, 2, (Object)localvariable16691, (Object)localvariable16692);
// semantics:
send118199 = (Object)new_AST_Send((Object)send118198, (Object)symbol22139, 1, (Object)localvariable16693);
method15851 = (Object)new_AST_Method_with((Type_Array)array13247, (Type_Array)empty_Type_Array, 1, send118199);
symbol22134 = (Object)new_Type_Symbol_cached(L"named:parsing:semantics:");
methodclosure15849 = (Object)new_Runtime_MethodClosure(method15851);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22134, (Runtime_MethodClosure)methodclosure15849);


// a PMetaclass P#PEGParser>>named:parsing:
//named: theName parsing: expression
// 	^ (self named: theName) <= expression
localvariable16694 = (Object)new_AST_Variable_named(L"theName");
localvariable16695 = (Object)new_AST_Variable_named(L"expression");
array13248 = (Object)new_Type_Array_with(2, (Object)localvariable16694, (Object)localvariable16695);
// named:
send118200 = (Object)new_AST_Send((Object)Self, (Object)symbol22133, 1, (Object)localvariable16694);
// <=
send118201 = (Object)new_AST_Send((Object)send118200, (Object)symbol21930, 1, (Object)localvariable16695);
method15852 = (Object)new_AST_Method_with((Type_Array)array13248, (Type_Array)empty_Type_Array, 1, send118201);
methodclosure15850 = (Object)new_Runtime_MethodClosure(method15852);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22136, (Runtime_MethodClosure)methodclosure15850);


// a PMetaclass P#PEGParser>>basicSeparators
//basicSeparators
// 	separators ifNil: [ separators := (Character space asPEG) | Character tab <= Character cr ].
// 	^ separators  " Separators := nil "
symbol22193 = (Object)new_Type_Symbol_cached(L"space");
// space
send118202 = (Object)new_AST_Send((Object)classreference3133, (Object)symbol22193, 0);
// asPEG
send118203 = (Object)new_AST_Send((Object)send118202, (Object)symbol21921, 0);
symbol22194 = (Object)new_Type_Symbol_cached(L"tab");
// tab
send118204 = (Object)new_AST_Send((Object)classreference3133, (Object)symbol22194, 0);
// |
send118205 = (Object)new_AST_Send((Object)send118203, (Object)SMB__or, 1, (Object)send118204);
symbol22195 = (Object)new_Type_Symbol_cached(L"cr");
// cr
send118206 = (Object)new_AST_Send((Object)classreference3133, (Object)symbol22195, 0);
// <=
send118207 = (Object)new_AST_Send((Object)send118205, (Object)symbol21930, 1, (Object)send118206);
assign14493 = (Object)new_AST_Assign((Object)instancevariable4006, (Object)send118207);
block7826 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign14493);
// ifNil:
send118208 = (Object)new_AST_Send((Object)instancevariable4006, (Object)symbol21802, 1, (Object)block7826);
method15853 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118208, instancevariable4006);
symbol22135 = (Object)new_Type_Symbol_cached(L"basicSeparators");
methodclosure15851 = (Object)new_Runtime_MethodClosure(method15853);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22135, (Runtime_MethodClosure)methodclosure15851);


// a PMetaclass P#PEGParser>>separators
//separators
// 	^ PEGParser basicSeparators
// basicSeparators
send118209 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22135, 0);
method15854 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118209);
symbol22131 = (Object)new_Type_Symbol_cached(L"separators");
methodclosure15852 = (Object)new_Runtime_MethodClosure(method15854);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22131, (Runtime_MethodClosure)methodclosure15852);


// a PMetaclass P#PEGParser>>named:
//named: theName
// 	^ self new name: theName
localvariable16696 = (Object)new_AST_Variable_named(L"theName");
array13249 = (Object)new_Type_Array_with(1, (Object)localvariable16696);
// new
send118210 = (Object)new_AST_Send((Object)Self, (Object)symbol21894, 0);
// name:
send118211 = (Object)new_AST_Send((Object)send118210, (Object)symbol21999, 1, (Object)localvariable16696);
method15855 = (Object)new_AST_Method_with((Type_Array)array13249, (Type_Array)empty_Type_Array, 1, send118211);
methodclosure15853 = (Object)new_Runtime_MethodClosure(method15855);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22133, (Runtime_MethodClosure)methodclosure15853);


// a PMetaclass P#PEGParser>>basicSeparator
//basicSeparator
// 	separator ifNil: [
// 		separator := self basicSeparators strongTimes.
// 	].
// 	^ separator
// basicSeparators
send118212 = (Object)new_AST_Send((Object)Self, (Object)symbol22135, 0);
symbol22117 = (Object)new_Type_Symbol_cached(L"strongTimes");
// strongTimes
send118213 = (Object)new_AST_Send((Object)send118212, (Object)symbol22117, 0);
assign14494 = (Object)new_AST_Assign((Object)instancevariable4007, (Object)send118213);
block7827 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign14494);
// ifNil:
send118214 = (Object)new_AST_Send((Object)instancevariable4007, (Object)symbol21802, 1, (Object)block7827);
method15856 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118214, instancevariable4007);
methodclosure15854 = (Object)new_Runtime_MethodClosure(method15856);
store_method((Type_Class)metaclass2732, (Type_Symbol)symbol22137, (Runtime_MethodClosure)methodclosure15854);

classreference3141 = (Object)new_Organization_ClassReference((Type_Class)class2734);

// PEGOneOrMoreExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	match := child match: input.
// 	match ifNil: [ ^ match ].
// 	result add: match.
// 	^ self privateMatch: input on: result
localvariable16697 = (Object)new_AST_Variable_named(L"input");
array13250 = (Object)new_Type_Array_with(1, (Object)localvariable16697);
localvariable16698 = (Object)new_AST_Variable_named(L"result");
localvariable16699 = (Object)new_AST_Variable_named(L"match");
array13251 = (Object)new_Type_Array_with(2, (Object)localvariable16698, (Object)localvariable16699);
variable929 = (Object)new_AST_Variable_named(L"return");
array13252 = (Object)new_Type_Array_with(1, (Object)variable929);
// new
send118215 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
assign14495 = (Object)new_AST_Assign((Object)localvariable16698, (Object)send118215);
// match:
send118216 = (Object)new_AST_Send((Object)instancevariable4012, (Object)symbol22121, 1, (Object)localvariable16697);
assign14496 = (Object)new_AST_Assign((Object)localvariable16699, (Object)send118216);
// escape:
send118217 = (Object)new_AST_Send((Object)variable929, (Object)SMB_escape_, 1, (Object)localvariable16699);
block7828 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118217);
// ifNil:
send118218 = (Object)new_AST_Send((Object)localvariable16699, (Object)symbol21802, 1, (Object)block7828);
// add:
send118219 = (Object)new_AST_Send((Object)localvariable16698, (Object)symbol21973, 1, (Object)localvariable16699);
symbol22161 = (Object)new_Type_Symbol_cached(L"privateMatch:on:");
// privateMatch:on:
send118220 = (Object)new_AST_Send((Object)Self, (Object)symbol22161, 2, (Object)localvariable16697, (Object)localvariable16698);
block7829 = (Object)new_AST_Block_with((Type_Array)array13252, (Type_Array)empty_Type_Array, 1, 5, assign14495, assign14496, send118218, send118219, send118220);
// on:
send118221 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7829);
method15857 = (Object)new_AST_Method_with((Type_Array)array13250, (Type_Array)array13251, 1, send118221);
methodclosure15855 = (Object)new_Runtime_MethodClosure(method15857);
store_method((Type_Class)class2734, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15855);


// PEGOneOrMoreExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
classreference3142 = (Object)new_Organization_ClassReference((Type_Class)class2735);

// PEGOptionalExpression>>privateMatch:
//privateMatch: input 
// 	^ PEGSucceededOptionalResult new: ((child match: input) ifNil: [ ^ PEGFailedOptionalResult ])
localvariable16700 = (Object)new_AST_Variable_named(L"input");
array13253 = (Object)new_Type_Array_with(1, (Object)localvariable16700);
variable930 = (Object)new_AST_Variable_named(L"return");
array13254 = (Object)new_Type_Array_with(1, (Object)variable930);
// match:
send118222 = (Object)new_AST_Send((Object)instancevariable4014, (Object)symbol22121, 1, (Object)localvariable16700);
// escape:
send118223 = (Object)new_AST_Send((Object)variable930, (Object)SMB_escape_, 1, (Object)classreference3138);
block7830 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118223);
// ifNil:
send118224 = (Object)new_AST_Send((Object)send118222, (Object)symbol21802, 1, (Object)block7830);
// new:
send118225 = (Object)new_AST_Send((Object)classreference3137, (Object)symbol21884, 1, (Object)send118224);
block7831 = (Object)new_AST_Block_with((Type_Array)array13254, (Type_Array)empty_Type_Array, 1, 1, send118225);
// on:
send118226 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7831);
method15858 = (Object)new_AST_Method_with((Type_Array)array13253, (Type_Array)empty_Type_Array, 1, send118226);
methodclosure15856 = (Object)new_Runtime_MethodClosure(method15858);
store_method((Type_Class)class2735, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15856);


// PEGOptionalExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable16701 = (Object)new_AST_Variable_named(L"expression");
array13255 = (Object)new_Type_Array_with(1, (Object)localvariable16701);
super1278 = (Object)new_AST_Super((Object)symbol21801, 0);
assign14497 = (Object)new_AST_Assign((Object)instancevariable4014, (Object)localvariable16701);
assign14498 = (Object)new_AST_Assign((Object)instancevariable4015, (Object)True_Const);
method15859 = (Object)new_AST_Method_with((Type_Array)array13255, (Type_Array)empty_Type_Array, 4, super1278, assign14497, assign14498, Self);
methodclosure15857 = (Object)new_Runtime_MethodClosure(method15859);
store_method((Type_Class)class2735, (Type_Symbol)symbol22154, (Runtime_MethodClosure)methodclosure15857);


// PEGOptionalExpression>>optional
//optional
// 	"^ self"
method15860 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol22119 = (Object)new_Type_Symbol_cached(L"optional");
methodclosure15858 = (Object)new_Runtime_MethodClosure(method15860);
store_method((Type_Class)class2735, (Type_Symbol)symbol22119, (Runtime_MethodClosure)methodclosure15858);

// new:
send118227 = (Object)new_AST_Send((Object)classreference3142, (Object)symbol21884, 1, (Object)Self);
method15861 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118227);
methodclosure15859 = (Object)new_Runtime_MethodClosure(method15861);
store_method((Type_Class)class2734, (Type_Symbol)symbol22119, (Runtime_MethodClosure)methodclosure15859);

classreference3143 = (Object)new_Organization_ClassReference((Type_Class)class2733);

// PEGZeroOrMoreExpression>>privateMatch:on:
//privateMatch: input on: result 
// 	| match |
// 	[skipWhitespace
// 		ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match isNil]
// 			whileFalse: [result add: match].
// 	^ result
localvariable16702 = (Object)new_AST_Variable_named(L"input");
localvariable16703 = (Object)new_AST_Variable_named(L"result");
array13256 = (Object)new_Type_Array_with(2, (Object)localvariable16702, (Object)localvariable16703);
localvariable16704 = (Object)new_AST_Variable_named(L"match");
array13257 = (Object)new_Type_Array_with(1, (Object)localvariable16704);
// skipWhitespace
send118228 = (Object)new_AST_Send((Object)localvariable16702, (Object)symbol21944, 0);
block7832 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118228);
// ifTrue:
send118229 = (Object)new_AST_Send((Object)instancevariable4013, (Object)SMB_ifTrue_, 1, (Object)block7832);
// match:
send118230 = (Object)new_AST_Send((Object)instancevariable4012, (Object)symbol22121, 1, (Object)localvariable16702);
assign14499 = (Object)new_AST_Assign((Object)localvariable16704, (Object)send118230);
// isNil
send118231 = (Object)new_AST_Send((Object)localvariable16704, (Object)SMB_isNil, 0);
block7833 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 3, send118229, assign14499, send118231);
// add:
send118232 = (Object)new_AST_Send((Object)localvariable16703, (Object)symbol21973, 1, (Object)localvariable16704);
block7834 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118232);
// whileFalse:
send118233 = (Object)new_AST_Send((Object)block7833, (Object)SMB_whileFalse_, 1, (Object)block7834);
method15862 = (Object)new_AST_Method_with((Type_Array)array13256, (Type_Array)array13257, 2, send118233, localvariable16703);
methodclosure15860 = (Object)new_Runtime_MethodClosure(method15862);
store_method((Type_Class)class2733, (Type_Symbol)symbol22161, (Runtime_MethodClosure)methodclosure15860);


// PEGZeroOrMoreExpression>>privateMatch:
//privateMatch: input
// 	^ self privateMatch: input on: OrderedCollection new
localvariable16705 = (Object)new_AST_Variable_named(L"input");
array13258 = (Object)new_Type_Array_with(1, (Object)localvariable16705);
// new
send118234 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
// privateMatch:on:
send118235 = (Object)new_AST_Send((Object)Self, (Object)symbol22161, 2, (Object)localvariable16705, (Object)send118234);
method15863 = (Object)new_AST_Method_with((Type_Array)array13258, (Type_Array)empty_Type_Array, 1, send118235);
methodclosure15861 = (Object)new_Runtime_MethodClosure(method15863);
store_method((Type_Class)class2733, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15861);


// PEGZeroOrMoreExpression>>initialize:
//initialize: expression
// 	super initialize.
// 	child := expression.
// 	skipWhitespace := true.
localvariable16706 = (Object)new_AST_Variable_named(L"expression");
array13259 = (Object)new_Type_Array_with(1, (Object)localvariable16706);
super1279 = (Object)new_AST_Super((Object)symbol21801, 0);
assign14500 = (Object)new_AST_Assign((Object)instancevariable4012, (Object)localvariable16706);
assign14501 = (Object)new_AST_Assign((Object)instancevariable4013, (Object)True_Const);
method15864 = (Object)new_AST_Method_with((Type_Array)array13259, (Type_Array)empty_Type_Array, 4, super1279, assign14500, assign14501, Self);
methodclosure15862 = (Object)new_Runtime_MethodClosure(method15864);
store_method((Type_Class)class2733, (Type_Symbol)symbol22154, (Runtime_MethodClosure)methodclosure15862);


// PEGZeroOrMoreExpression>>optional
//optional
// 	" ^ self since we are zero or more, thus already optional."
method15865 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure15863 = (Object)new_Runtime_MethodClosure(method15865);
store_method((Type_Class)class2733, (Type_Symbol)symbol22119, (Runtime_MethodClosure)methodclosure15863);


// PEGZeroOrMoreExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable16707 = (Object)new_AST_Variable_named(L"anObject");
array13260 = (Object)new_Type_Array_with(1, (Object)localvariable16707);
assign14502 = (Object)new_AST_Assign((Object)instancevariable4013, (Object)localvariable16707);
method15866 = (Object)new_AST_Method_with((Type_Array)array13260, (Type_Array)empty_Type_Array, 2, assign14502, Self);
symbol22162 = (Object)new_Type_Symbol_cached(L"skipWhitespace:");
methodclosure15864 = (Object)new_Runtime_MethodClosure(method15866);
store_method((Type_Class)class2733, (Type_Symbol)symbol22162, (Runtime_MethodClosure)methodclosure15864);


// PEGZeroOrMoreExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method15867 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4013);
methodclosure15865 = (Object)new_Runtime_MethodClosure(method15867);
store_method((Type_Class)class2733, (Type_Symbol)symbol21944, (Runtime_MethodClosure)methodclosure15865);

classreference3144 = (Object)new_Organization_ClassReference((Type_Class)class2729);

// PEGExpression>>omit
//omit
// 	^ omit
method15868 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4004);
symbol22120 = (Object)new_Type_Symbol_cached(L"omit");
methodclosure15866 = (Object)new_Runtime_MethodClosure(method15868);
store_method((Type_Class)class2729, (Type_Symbol)symbol22120, (Runtime_MethodClosure)methodclosure15866);


// PEGExpression>>privateMatch:
//privateMatch: input
// 	self subclassResponsibility
localvariable16708 = (Object)new_AST_Variable_named(L"input");
array13261 = (Object)new_Type_Array_with(1, (Object)localvariable16708);
symbol22196 = (Object)new_Type_Symbol_cached(L"subclassResponsibility");
// subclassResponsibility
send118236 = (Object)new_AST_Send((Object)Self, (Object)symbol22196, 0);
method15869 = (Object)new_AST_Method_with((Type_Array)array13261, (Type_Array)empty_Type_Array, 2, send118236, Self);
methodclosure15867 = (Object)new_Runtime_MethodClosure(method15869);
store_method((Type_Class)class2729, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15867);


// PEGExpression>>strongTimes
//strongTimes
// 	^ self times skipWhitespace: false
symbol22115 = (Object)new_Type_Symbol_cached(L"times");
// times
send118237 = (Object)new_AST_Send((Object)Self, (Object)symbol22115, 0);
// skipWhitespace:
send118238 = (Object)new_AST_Send((Object)send118237, (Object)symbol22162, 1, (Object)False_Const);
method15870 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118238);
methodclosure15868 = (Object)new_Runtime_MethodClosure(method15870);
store_method((Type_Class)class2729, (Type_Symbol)symbol22117, (Runtime_MethodClosure)methodclosure15868);


// PEGExpression>>name:
//name: aName
// 	name := aName
localvariable16709 = (Object)new_AST_Variable_named(L"aName");
array13262 = (Object)new_Type_Array_with(1, (Object)localvariable16709);
assign14503 = (Object)new_AST_Assign((Object)instancevariable4003, (Object)localvariable16709);
method15871 = (Object)new_AST_Method_with((Type_Array)array13262, (Type_Array)empty_Type_Array, 2, assign14503, Self);
methodclosure15869 = (Object)new_Runtime_MethodClosure(method15871);
store_method((Type_Class)class2729, (Type_Symbol)symbol21999, (Runtime_MethodClosure)methodclosure15869);


// PEGExpression>>match:
//match: input
// 	| position match |
// 	"self debug: input."
// 	position := input position.
// 	match := self privateMatch: input.
// 	match ifNil: [input position: position].
// 	"self debugEnd: input."
// 	^ match
localvariable16710 = (Object)new_AST_Variable_named(L"input");
array13263 = (Object)new_Type_Array_with(1, (Object)localvariable16710);
localvariable16711 = (Object)new_AST_Variable_named(L"position");
localvariable16712 = (Object)new_AST_Variable_named(L"match");
array13264 = (Object)new_Type_Array_with(2, (Object)localvariable16711, (Object)localvariable16712);
symbol22197 = (Object)new_Type_Symbol_cached(L"position");
// position
send118239 = (Object)new_AST_Send((Object)localvariable16710, (Object)symbol22197, 0);
assign14504 = (Object)new_AST_Assign((Object)localvariable16711, (Object)send118239);
// privateMatch:
send118240 = (Object)new_AST_Send((Object)Self, (Object)symbol22128, 1, (Object)localvariable16710);
assign14505 = (Object)new_AST_Assign((Object)localvariable16712, (Object)send118240);
symbol22198 = (Object)new_Type_Symbol_cached(L"position:");
// position:
send118241 = (Object)new_AST_Send((Object)localvariable16710, (Object)symbol22198, 1, (Object)localvariable16711);
block7835 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118241);
// ifNil:
send118242 = (Object)new_AST_Send((Object)localvariable16712, (Object)symbol21802, 1, (Object)block7835);
method15872 = (Object)new_AST_Method_with((Type_Array)array13263, (Type_Array)array13264, 4, assign14504, assign14505, send118242, localvariable16712);
methodclosure15870 = (Object)new_Runtime_MethodClosure(method15872);
store_method((Type_Class)class2729, (Type_Symbol)symbol22121, (Runtime_MethodClosure)methodclosure15870);


// PEGExpression>>initialize
//initialize
// 	omit := false
assign14506 = (Object)new_AST_Assign((Object)instancevariable4004, (Object)False_Const);
method15873 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign14506, Self);
methodclosure15871 = (Object)new_Runtime_MethodClosure(method15873);
store_method((Type_Class)class2729, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15871);


// PEGExpression>>strongOptional
//strongOptional
// 	^ self optional skipWhitespace: false
// optional
send118243 = (Object)new_AST_Send((Object)Self, (Object)symbol22119, 0);
// skipWhitespace:
send118244 = (Object)new_AST_Send((Object)send118243, (Object)symbol22162, 1, (Object)False_Const);
method15874 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118244);
symbol22129 = (Object)new_Type_Symbol_cached(L"strongOptional");
methodclosure15872 = (Object)new_Runtime_MethodClosure(method15874);
store_method((Type_Class)class2729, (Type_Symbol)symbol22129, (Runtime_MethodClosure)methodclosure15872);


// PEGExpression>>debug:
//debug: input 
// 	self debug ifTrue: 
// 		[ PEGExpression
// 			indent;
// 			increaseIndent.
// 		"Transcript show: 'Trying to match: ' , self asString , ' at: '.
// 		Transcript show: input sample.
// 		Transcript cr" ]
localvariable16713 = (Object)new_AST_Variable_named(L"input");
array13265 = (Object)new_Type_Array_with(1, (Object)localvariable16713);
symbol22111 = (Object)new_Type_Symbol_cached(L"debug");
// debug
send118245 = (Object)new_AST_Send((Object)Self, (Object)symbol22111, 0);
localvariable16714 = (Object)new_AST_Variable_named(L"receiver");
array13266 = (Object)new_Type_Array_with(1, (Object)localvariable16714);
symbol22199 = (Object)new_Type_Symbol_cached(L"indent");
// indent
send118246 = (Object)new_AST_Send((Object)localvariable16714, (Object)symbol22199, 0);
symbol22200 = (Object)new_Type_Symbol_cached(L"increaseIndent");
// increaseIndent
send118247 = (Object)new_AST_Send((Object)localvariable16714, (Object)symbol22200, 0);
block7836 = (Object)new_AST_Block_with((Type_Array)array13266, (Type_Array)empty_Type_Array, 2, 2, send118246, send118247);
// value:
send118248 = (Object)new_AST_Send((Object)block7836, (Object)SMB_value_, 1, (Object)classreference3144);
block7837 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118248);
// ifTrue:
send118249 = (Object)new_AST_Send((Object)send118245, (Object)SMB_ifTrue_, 1, (Object)block7837);
method15875 = (Object)new_AST_Method_with((Type_Array)array13265, (Type_Array)empty_Type_Array, 2, send118249, Self);
symbol22130 = (Object)new_Type_Symbol_cached(L"debug:");
methodclosure15873 = (Object)new_Runtime_MethodClosure(method15875);
store_method((Type_Class)class2729, (Type_Symbol)symbol22130, (Runtime_MethodClosure)methodclosure15873);


// PEGExpression>>strongPlus
//strongPlus
// 	^ self plus skipWhitespace: false
symbol22126 = (Object)new_Type_Symbol_cached(L"plus");
// plus
send118250 = (Object)new_AST_Send((Object)Self, (Object)symbol22126, 0);
// skipWhitespace:
send118251 = (Object)new_AST_Send((Object)send118250, (Object)symbol22162, 1, (Object)False_Const);
method15876 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118251);
symbol22122 = (Object)new_Type_Symbol_cached(L"strongPlus");
methodclosure15874 = (Object)new_Runtime_MethodClosure(method15876);
store_method((Type_Class)class2729, (Type_Symbol)symbol22122, (Runtime_MethodClosure)methodclosure15874);


// PEGExpression>>optional
//optional
// 	^ PEGOptionalExpression new: self
// new:
send118252 = (Object)new_AST_Send((Object)classreference3142, (Object)symbol21884, 1, (Object)Self);
method15877 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118252);
methodclosure15875 = (Object)new_Runtime_MethodClosure(method15877);
store_method((Type_Class)class2729, (Type_Symbol)symbol22119, (Runtime_MethodClosure)methodclosure15875);


// PEGExpression>>&
//& expression
// 	^ PEGSequenceExpression new <& self <& expression
localvariable16715 = (Object)new_AST_Variable_named(L"expression");
array13267 = (Object)new_Type_Array_with(1, (Object)localvariable16715);
classreference3145 = (Object)new_Organization_ClassReference((Type_Class)class2740);

// PEGSequenceExpression>><&
//<& child
// 	children add: child asPEG
localvariable16716 = (Object)new_AST_Variable_named(L"child");
array13268 = (Object)new_Type_Array_with(1, (Object)localvariable16716);
// asPEG
send118253 = (Object)new_AST_Send((Object)localvariable16716, (Object)symbol21921, 0);
// add:
send118254 = (Object)new_AST_Send((Object)instancevariable4022, (Object)symbol21973, 1, (Object)send118253);
method15878 = (Object)new_AST_Method_with((Type_Array)array13268, (Type_Array)empty_Type_Array, 2, send118254, Self);
symbol22165 = (Object)new_Type_Symbol_cached(L"<&");
methodclosure15876 = (Object)new_Runtime_MethodClosure(method15878);
store_method((Type_Class)class2740, (Type_Symbol)symbol22165, (Runtime_MethodClosure)methodclosure15876);


// PEGSequenceExpression>>privateMatch:
//privateMatch: input
// 	| result match |
// 	result := OrderedCollection new.
// 	children do: [:child | 
// 		skipWhitespace ifTrue: [input skipWhitespace].
// 		match := child match: input.
// 		match ifNil: [^ match].
// 		child omit 
// 			ifFalse: [result add: match]].
// 	result size = 1 
// 		ifTrue: [^ result first].
// 	^ result
localvariable16717 = (Object)new_AST_Variable_named(L"input");
array13269 = (Object)new_Type_Array_with(1, (Object)localvariable16717);
localvariable16718 = (Object)new_AST_Variable_named(L"result");
localvariable16719 = (Object)new_AST_Variable_named(L"match");
array13270 = (Object)new_Type_Array_with(2, (Object)localvariable16718, (Object)localvariable16719);
variable931 = (Object)new_AST_Variable_named(L"return");
array13271 = (Object)new_Type_Array_with(1, (Object)variable931);
// new
send118255 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
assign14507 = (Object)new_AST_Assign((Object)localvariable16718, (Object)send118255);
localvariable16720 = (Object)new_AST_Variable_named(L"child");
array13272 = (Object)new_Type_Array_with(1, (Object)localvariable16720);
// skipWhitespace
send118256 = (Object)new_AST_Send((Object)localvariable16717, (Object)symbol21944, 0);
block7838 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118256);
// ifTrue:
send118257 = (Object)new_AST_Send((Object)instancevariable4023, (Object)SMB_ifTrue_, 1, (Object)block7838);
// match:
send118258 = (Object)new_AST_Send((Object)localvariable16720, (Object)symbol22121, 1, (Object)localvariable16717);
assign14508 = (Object)new_AST_Assign((Object)localvariable16719, (Object)send118258);
// escape:
send118259 = (Object)new_AST_Send((Object)variable931, (Object)SMB_escape_, 1, (Object)localvariable16719);
block7839 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118259);
// ifNil:
send118260 = (Object)new_AST_Send((Object)localvariable16719, (Object)symbol21802, 1, (Object)block7839);
// omit
send118261 = (Object)new_AST_Send((Object)localvariable16720, (Object)symbol22120, 0);
// add:
send118262 = (Object)new_AST_Send((Object)localvariable16718, (Object)symbol21973, 1, (Object)localvariable16719);
block7840 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118262);
// ifFalse:
send118263 = (Object)new_AST_Send((Object)send118261, (Object)SMB_ifFalse_, 1, (Object)block7840);
block7841 = (Object)new_AST_Block_with((Type_Array)array13272, (Type_Array)empty_Type_Array, 2, 4, send118257, assign14508, send118260, send118263);
// do:
send118264 = (Object)new_AST_Send((Object)instancevariable4022, (Object)symbol21924, 1, (Object)block7841);
// size
send118265 = (Object)new_AST_Send((Object)localvariable16718, (Object)SMB_size, 0);
smallint8284 = (Object)new_Type_SmallInt(1);
constant22868 = (Object)new_AST_Constant((Object)smallint8284);
// =
send118266 = (Object)new_AST_Send((Object)send118265, (Object)SMB__equal, 1, (Object)constant22868);
// first
send118267 = (Object)new_AST_Send((Object)localvariable16718, (Object)symbol21970, 0);
// escape:
send118268 = (Object)new_AST_Send((Object)variable931, (Object)SMB_escape_, 1, (Object)send118267);
block7842 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118268);
// ifTrue:
send118269 = (Object)new_AST_Send((Object)send118266, (Object)SMB_ifTrue_, 1, (Object)block7842);
block7843 = (Object)new_AST_Block_with((Type_Array)array13271, (Type_Array)empty_Type_Array, 1, 4, assign14507, send118264, send118269, localvariable16718);
// on:
send118270 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7843);
method15879 = (Object)new_AST_Method_with((Type_Array)array13269, (Type_Array)array13270, 1, send118270);
methodclosure15877 = (Object)new_Runtime_MethodClosure(method15879);
store_method((Type_Class)class2740, (Type_Symbol)symbol22128, (Runtime_MethodClosure)methodclosure15877);


// PEGSequenceExpression>>initialize:
//initialize: theChildren
// 	super initialize.
// 	children := theChildren.
// 	skipWhitespace := true.
localvariable16721 = (Object)new_AST_Variable_named(L"theChildren");
array13273 = (Object)new_Type_Array_with(1, (Object)localvariable16721);
super1280 = (Object)new_AST_Super((Object)symbol21801, 0);
assign14509 = (Object)new_AST_Assign((Object)instancevariable4022, (Object)localvariable16721);
assign14510 = (Object)new_AST_Assign((Object)instancevariable4023, (Object)True_Const);
method15880 = (Object)new_AST_Method_with((Type_Array)array13273, (Type_Array)empty_Type_Array, 4, super1280, assign14509, assign14510, Self);
methodclosure15878 = (Object)new_Runtime_MethodClosure(method15880);
store_method((Type_Class)class2740, (Type_Symbol)symbol22154, (Runtime_MethodClosure)methodclosure15878);


// PEGSequenceExpression>>skipWhitespace:
//skipWhitespace: anObject
// 	skipWhitespace := anObject
localvariable16722 = (Object)new_AST_Variable_named(L"anObject");
array13274 = (Object)new_Type_Array_with(1, (Object)localvariable16722);
assign14511 = (Object)new_AST_Assign((Object)instancevariable4023, (Object)localvariable16722);
method15881 = (Object)new_AST_Method_with((Type_Array)array13274, (Type_Array)empty_Type_Array, 2, assign14511, Self);
methodclosure15879 = (Object)new_Runtime_MethodClosure(method15881);
store_method((Type_Class)class2740, (Type_Symbol)symbol22162, (Runtime_MethodClosure)methodclosure15879);


// PEGSequenceExpression>>skipWhitespace
//skipWhitespace
// 	^ skipWhitespace
method15882 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4023);
methodclosure15880 = (Object)new_Runtime_MethodClosure(method15882);
store_method((Type_Class)class2740, (Type_Symbol)symbol21944, (Runtime_MethodClosure)methodclosure15880);


// PEGSequenceExpression>>initialize
//initialize
// 	super initialize.
// 	self initialize: OrderedCollection new
super1281 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118271 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
// initialize:
send118272 = (Object)new_AST_Send((Object)Self, (Object)symbol22154, 1, (Object)send118271);
method15883 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1281, send118272, Self);
methodclosure15881 = (Object)new_Runtime_MethodClosure(method15883);
store_method((Type_Class)class2740, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15881);

// new
send118273 = (Object)new_AST_Send((Object)classreference3145, (Object)symbol21894, 0);
// <&
send118274 = (Object)new_AST_Send((Object)send118273, (Object)symbol22165, 1, (Object)Self);
// <&
send118275 = (Object)new_AST_Send((Object)send118274, (Object)symbol22165, 1, (Object)localvariable16715);
method15884 = (Object)new_AST_Method_with((Type_Array)array13267, (Type_Array)empty_Type_Array, 1, send118275);
methodclosure15882 = (Object)new_Runtime_MethodClosure(method15884);
store_method((Type_Class)class2729, (Type_Symbol)SMB__and, (Runtime_MethodClosure)methodclosure15882);


// PEGExpression>>omit:
//omit: bool
// 	omit := bool
localvariable16723 = (Object)new_AST_Variable_named(L"bool");
array13275 = (Object)new_Type_Array_with(1, (Object)localvariable16723);
assign14512 = (Object)new_AST_Assign((Object)instancevariable4004, (Object)localvariable16723);
method15885 = (Object)new_AST_Method_with((Type_Array)array13275, (Type_Array)empty_Type_Array, 2, assign14512, Self);
symbol22123 = (Object)new_Type_Symbol_cached(L"omit:");
methodclosure15883 = (Object)new_Runtime_MethodClosure(method15885);
store_method((Type_Class)class2729, (Type_Symbol)symbol22123, (Runtime_MethodClosure)methodclosure15883);


// PEGExpression>>hash
//hash
// 	^ name hash
// hash
send118276 = (Object)new_AST_Send((Object)instancevariable4003, (Object)SMB_hash, 0);
method15886 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118276);
methodclosure15884 = (Object)new_Runtime_MethodClosure(method15886);
store_method((Type_Class)class2729, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure15884);


// PEGExpression>>memoIfNil
//memoIfNil
// 	" We never memo non-main-parsers (rules with actions) "
method15887 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol22112 = (Object)new_Type_Symbol_cached(L"memoIfNil");
methodclosure15885 = (Object)new_Runtime_MethodClosure(method15887);
store_method((Type_Class)class2729, (Type_Symbol)symbol22112, (Runtime_MethodClosure)methodclosure15885);


// PEGExpression>>name
//name
// 	^ name
method15888 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4003);
methodclosure15886 = (Object)new_Runtime_MethodClosure(method15888);
store_method((Type_Class)class2729, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure15886);


// PEGExpression>>printString
//printString
// 	name ifNil: [ ^ super printString ].
// 	^ 'parser (', name, ')'
variable932 = (Object)new_AST_Variable_named(L"return");
array13276 = (Object)new_Type_Array_with(1, (Object)variable932);
symbol22124 = (Object)new_Type_Symbol_cached(L"printString");
super1282 = (Object)new_AST_Super((Object)symbol22124, 0);
// escape:
send118277 = (Object)new_AST_Send((Object)variable932, (Object)SMB_escape_, 1, (Object)super1282);
block7844 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118277);
// ifNil:
send118278 = (Object)new_AST_Send((Object)instancevariable4003, (Object)symbol21802, 1, (Object)block7844);
string13387 = (Object)new_Type_String(L"parser (");
constant22869 = (Object)new_AST_Constant((Object)string13387);
// ,
send118279 = (Object)new_AST_Send((Object)constant22869, (Object)SMB__concat, 1, (Object)instancevariable4003);
string13388 = (Object)new_Type_String(L")");
constant22870 = (Object)new_AST_Constant((Object)string13388);
// ,
send118280 = (Object)new_AST_Send((Object)send118279, (Object)SMB__concat, 1, (Object)constant22870);
block7845 = (Object)new_AST_Block_with((Type_Array)array13276, (Type_Array)empty_Type_Array, 1, 2, send118278, send118280);
// on:
send118281 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7845);
method15889 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118281);
methodclosure15887 = (Object)new_Runtime_MethodClosure(method15889);
store_method((Type_Class)class2729, (Type_Symbol)symbol22124, (Runtime_MethodClosure)methodclosure15887);


// PEGExpression>>debugEnd:
//debugEnd: input 
// 	self debug ifTrue: [ PEGExpression descreaseIndent ]
localvariable16724 = (Object)new_AST_Variable_named(L"input");
array13277 = (Object)new_Type_Array_with(1, (Object)localvariable16724);
// debug
send118282 = (Object)new_AST_Send((Object)Self, (Object)symbol22111, 0);
symbol22201 = (Object)new_Type_Symbol_cached(L"descreaseIndent");
// descreaseIndent
send118283 = (Object)new_AST_Send((Object)classreference3144, (Object)symbol22201, 0);
block7846 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118283);
// ifTrue:
send118284 = (Object)new_AST_Send((Object)send118282, (Object)SMB_ifTrue_, 1, (Object)block7846);
method15890 = (Object)new_AST_Method_with((Type_Array)array13277, (Type_Array)empty_Type_Array, 2, send118284, Self);
symbol22113 = (Object)new_Type_Symbol_cached(L"debugEnd:");
methodclosure15888 = (Object)new_Runtime_MethodClosure(method15890);
store_method((Type_Class)class2729, (Type_Symbol)symbol22113, (Runtime_MethodClosure)methodclosure15888);


// PEGExpression>>|
//| expression
// 	^ PEGOrderedChoiceExpression new <= self <= expression
localvariable16725 = (Object)new_AST_Variable_named(L"expression");
array13278 = (Object)new_Type_Array_with(1, (Object)localvariable16725);
// new
send118285 = (Object)new_AST_Send((Object)classreference3130, (Object)symbol21894, 0);
// <=
send118286 = (Object)new_AST_Send((Object)send118285, (Object)symbol21930, 1, (Object)Self);
// <=
send118287 = (Object)new_AST_Send((Object)send118286, (Object)symbol21930, 1, (Object)localvariable16725);
method15891 = (Object)new_AST_Method_with((Type_Array)array13278, (Type_Array)empty_Type_Array, 1, send118287);
methodclosure15889 = (Object)new_Runtime_MethodClosure(method15891);
store_method((Type_Class)class2729, (Type_Symbol)SMB__or, (Runtime_MethodClosure)methodclosure15889);


// PEGExpression>>asPEG
//asPEG
// 	" ^ self "
method15892 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
methodclosure15890 = (Object)new_Runtime_MethodClosure(method15892);
store_method((Type_Class)class2729, (Type_Symbol)symbol21921, (Runtime_MethodClosure)methodclosure15890);


// PEGExpression>>plus
//plus
// 	^ PEGOneOrMoreExpression new: self
// new:
send118288 = (Object)new_AST_Send((Object)classreference3141, (Object)symbol21884, 1, (Object)Self);
method15893 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118288);
methodclosure15891 = (Object)new_Runtime_MethodClosure(method15893);
store_method((Type_Class)class2729, (Type_Symbol)symbol22126, (Runtime_MethodClosure)methodclosure15891);


// PEGExpression>>times
//times
// 	^ PEGZeroOrMoreExpression new: self
// new:
send118289 = (Object)new_AST_Send((Object)classreference3143, (Object)symbol21884, 1, (Object)Self);
method15894 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118289);
methodclosure15892 = (Object)new_Runtime_MethodClosure(method15894);
store_method((Type_Class)class2729, (Type_Symbol)symbol22115, (Runtime_MethodClosure)methodclosure15892);


// PEGExpression>>&&
//&& other
// 	^ (self & other) skipWhitespace: false
localvariable16726 = (Object)new_AST_Variable_named(L"other");
array13279 = (Object)new_Type_Array_with(1, (Object)localvariable16726);
// &
send118290 = (Object)new_AST_Send((Object)Self, (Object)SMB__and, 1, (Object)localvariable16726);
// skipWhitespace:
send118291 = (Object)new_AST_Send((Object)send118290, (Object)symbol22162, 1, (Object)False_Const);
method15895 = (Object)new_AST_Method_with((Type_Array)array13279, (Type_Array)empty_Type_Array, 1, send118291);
symbol22116 = (Object)new_Type_Symbol_cached(L"&&");
methodclosure15893 = (Object)new_Runtime_MethodClosure(method15895);
store_method((Type_Class)class2729, (Type_Symbol)symbol22116, (Runtime_MethodClosure)methodclosure15893);


// a PMetaclass P#PEGExpression>>new:
//new: argument
// 	^ self basicNew initialize: argument
localvariable16727 = (Object)new_AST_Variable_named(L"argument");
array13280 = (Object)new_Type_Array_with(1, (Object)localvariable16727);
// basicNew
send118292 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
// initialize:
send118293 = (Object)new_AST_Send((Object)send118292, (Object)symbol22154, 1, (Object)localvariable16727);
method15896 = (Object)new_AST_Method_with((Type_Array)array13280, (Type_Array)empty_Type_Array, 1, send118293);
methodclosure15894 = (Object)new_Runtime_MethodClosure(method15896);
store_method((Type_Class)metaclass2729, (Type_Symbol)symbol21884, (Runtime_MethodClosure)methodclosure15894);


// a PMetaclass P#PEGExpression>>pMethods
//pMethods 
// 	^ #all.
symbol22202 = (Object)new_Type_Symbol_cached(L"all");
constant22871 = (Object)new_AST_Constant((Object)symbol22202);
method15897 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant22871);
symbol21903 = (Object)new_Type_Symbol_cached(L"pMethods");
methodclosure15895 = (Object)new_Runtime_MethodClosure(method15897);
store_method((Type_Class)metaclass2729, (Type_Symbol)symbol21903, (Runtime_MethodClosure)methodclosure15895);


// a PMetaclass P#PEGExpression>>debug
//debug
// 	^ false
method15898 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure15896 = (Object)new_Runtime_MethodClosure(method15898);
store_method((Type_Class)metaclass2729, (Type_Symbol)symbol22111, (Runtime_MethodClosure)methodclosure15896);

classreference3146 = (Object)new_Organization_ClassReference((Type_Class)class2727);

// PEGOptionalResult>>resultIfFailed:
//resultIfFailed: alternative
// 	self subclassResponsibility
localvariable16728 = (Object)new_AST_Variable_named(L"alternative");
array13281 = (Object)new_Type_Array_with(1, (Object)localvariable16728);
// subclassResponsibility
send118294 = (Object)new_AST_Send((Object)Self, (Object)symbol22196, 0);
method15899 = (Object)new_AST_Method_with((Type_Array)array13281, (Type_Array)empty_Type_Array, 2, send118294, Self);
methodclosure15897 = (Object)new_Runtime_MethodClosure(method15899);
store_method((Type_Class)class2727, (Type_Symbol)symbol22169, (Runtime_MethodClosure)methodclosure15897);

classreference3147 = (Object)new_Organization_ClassReference((Type_Class)class2742);

// ASTArray>>literals
//literals
// 	^ literals
method15900 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4024);
symbol21962 = (Object)new_Type_Symbol_cached(L"literals");
methodclosure15898 = (Object)new_Runtime_MethodClosure(method15900);
store_method((Type_Class)class2742, (Type_Symbol)symbol21962, (Runtime_MethodClosure)methodclosure15898);


// ASTArray>>isEmpty
//isEmpty
// 	^ self literals isEmpty
// literals
send118295 = (Object)new_AST_Send((Object)Self, (Object)symbol21962, 0);
// isEmpty
send118296 = (Object)new_AST_Send((Object)send118295, (Object)symbol21916, 0);
method15901 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118296);
methodclosure15899 = (Object)new_Runtime_MethodClosure(method15901);
store_method((Type_Class)class2742, (Type_Symbol)symbol21916, (Runtime_MethodClosure)methodclosure15899);


// ASTArray>>literals:
//literals: aCollection
// 	literals := aCollection
localvariable16729 = (Object)new_AST_Variable_named(L"aCollection");
array13282 = (Object)new_Type_Array_with(1, (Object)localvariable16729);
assign14513 = (Object)new_AST_Assign((Object)instancevariable4024, (Object)localvariable16729);
method15902 = (Object)new_AST_Method_with((Type_Array)array13282, (Type_Array)empty_Type_Array, 2, assign14513, Self);
symbol21961 = (Object)new_Type_Symbol_cached(L"literals:");
methodclosure15900 = (Object)new_Runtime_MethodClosure(method15902);
store_method((Type_Class)class2742, (Type_Symbol)symbol21961, (Runtime_MethodClosure)methodclosure15900);

classreference3148 = (Object)new_Organization_ClassReference((Type_Class)class2745);

// ASTKeywordMessageDefinition>>parameters:
//parameters: aCollection
// 	self halt.
// 	parameters := aCollection
localvariable16730 = (Object)new_AST_Variable_named(L"aCollection");
array13283 = (Object)new_Type_Array_with(1, (Object)localvariable16730);
symbol22203 = (Object)new_Type_Symbol_cached(L"halt");
// halt
send118297 = (Object)new_AST_Send((Object)Self, (Object)symbol22203, 0);
assign14514 = (Object)new_AST_Assign((Object)instancevariable4027, (Object)localvariable16730);
method15903 = (Object)new_AST_Method_with((Type_Array)array13283, (Type_Array)empty_Type_Array, 3, send118297, assign14514, Self);
symbol22030 = (Object)new_Type_Symbol_cached(L"parameters:");
methodclosure15901 = (Object)new_Runtime_MethodClosure(method15903);
store_method((Type_Class)class2745, (Type_Symbol)symbol22030, (Runtime_MethodClosure)methodclosure15901);


// ASTKeywordMessageDefinition>>parameters
//parameters
// 	^ parameters
method15904 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4027);
symbol22011 = (Object)new_Type_Symbol_cached(L"parameters");
methodclosure15902 = (Object)new_Runtime_MethodClosure(method15904);
store_method((Type_Class)class2745, (Type_Symbol)symbol22011, (Runtime_MethodClosure)methodclosure15902);


// ASTKeywordMessageDefinition>>compatibleArgumentsWith:
//compatibleArgumentsWith: aSelector
// 	 parameters size timesRepeat: [:index | 
// 		(parameters at: index) layout = (aSelector parameters at: index) layout
// 			ifFalse: [^ false]
// 	].
// 	^ true
localvariable16731 = (Object)new_AST_Variable_named(L"aSelector");
array13284 = (Object)new_Type_Array_with(1, (Object)localvariable16731);
variable933 = (Object)new_AST_Variable_named(L"return");
array13285 = (Object)new_Type_Array_with(1, (Object)variable933);
// size
send118298 = (Object)new_AST_Send((Object)instancevariable4027, (Object)SMB_size, 0);
symbol22204 = (Object)new_Type_Symbol_cached(L"timesRepeat:");
localvariable16732 = (Object)new_AST_Variable_named(L"index");
array13286 = (Object)new_Type_Array_with(1, (Object)localvariable16732);
// at:
send118299 = (Object)new_AST_Send((Object)instancevariable4027, (Object)SMB_at_, 1, (Object)localvariable16732);
// layout
send118300 = (Object)new_AST_Send((Object)send118299, (Object)symbol21889, 0);
// parameters
send118301 = (Object)new_AST_Send((Object)localvariable16731, (Object)symbol22011, 0);
// at:
send118302 = (Object)new_AST_Send((Object)send118301, (Object)SMB_at_, 1, (Object)localvariable16732);
// layout
send118303 = (Object)new_AST_Send((Object)send118302, (Object)symbol21889, 0);
// =
send118304 = (Object)new_AST_Send((Object)send118300, (Object)SMB__equal, 1, (Object)send118303);
// escape:
send118305 = (Object)new_AST_Send((Object)variable933, (Object)SMB_escape_, 1, (Object)False_Const);
block7847 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118305);
// ifFalse:
send118306 = (Object)new_AST_Send((Object)send118304, (Object)SMB_ifFalse_, 1, (Object)block7847);
block7848 = (Object)new_AST_Block_with((Type_Array)array13286, (Type_Array)empty_Type_Array, 2, 1, send118306);
// timesRepeat:
send118307 = (Object)new_AST_Send((Object)send118298, (Object)symbol22204, 1, (Object)block7848);
block7849 = (Object)new_AST_Block_with((Type_Array)array13285, (Type_Array)empty_Type_Array, 1, 2, send118307, True_Const);
// on:
send118308 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7849);
method15905 = (Object)new_AST_Method_with((Type_Array)array13284, (Type_Array)empty_Type_Array, 1, send118308);
symbol22031 = (Object)new_Type_Symbol_cached(L"compatibleArgumentsWith:");
methodclosure15903 = (Object)new_Runtime_MethodClosure(method15905);
store_method((Type_Class)class2745, (Type_Symbol)symbol22031, (Runtime_MethodClosure)methodclosure15903);


// ASTKeywordMessageDefinition>>initialize
//initialize
// 	super initialize.
// 	parameters := OrderedCollection new.
super1283 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118309 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
assign14515 = (Object)new_AST_Assign((Object)instancevariable4027, (Object)send118309);
method15906 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1283, assign14515, Self);
methodclosure15904 = (Object)new_Runtime_MethodClosure(method15906);
store_method((Type_Class)class2745, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15904);


// ASTKeywordMessageDefinition>>compatibleWith:
//compatibleWith: aSelector 
// 	(super compatibleWith: aSelector)
// 		ifFalse: [^ false].
// 	"check if each argument has the same layout"
// 	^ self compatibleArgumentsWith: aSelector.
localvariable16733 = (Object)new_AST_Variable_named(L"aSelector");
array13287 = (Object)new_Type_Array_with(1, (Object)localvariable16733);
variable934 = (Object)new_AST_Variable_named(L"return");
array13288 = (Object)new_Type_Array_with(1, (Object)variable934);
symbol22012 = (Object)new_Type_Symbol_cached(L"compatibleWith:");
super1284 = (Object)new_AST_Super((Object)symbol22012, 1, (Object)localvariable16733);
// escape:
send118310 = (Object)new_AST_Send((Object)variable934, (Object)SMB_escape_, 1, (Object)False_Const);
block7850 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118310);
// ifFalse:
send118311 = (Object)new_AST_Send((Object)super1284, (Object)SMB_ifFalse_, 1, (Object)block7850);
// compatibleArgumentsWith:
send118312 = (Object)new_AST_Send((Object)Self, (Object)symbol22031, 1, (Object)localvariable16733);
block7851 = (Object)new_AST_Block_with((Type_Array)array13288, (Type_Array)empty_Type_Array, 1, 2, send118311, send118312);
// on:
send118313 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7851);
method15907 = (Object)new_AST_Method_with((Type_Array)array13287, (Type_Array)empty_Type_Array, 1, send118313);
methodclosure15905 = (Object)new_Runtime_MethodClosure(method15907);
store_method((Type_Class)class2745, (Type_Symbol)symbol22012, (Runtime_MethodClosure)methodclosure15905);

classreference3149 = (Object)new_Organization_ClassReference((Type_Class)class2747);

// ASTMessageCascadeExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable16734 = (Object)new_AST_Variable_named(L"anObject");
array13289 = (Object)new_Type_Array_with(1, (Object)localvariable16734);
assign14516 = (Object)new_AST_Assign((Object)instancevariable4028, (Object)localvariable16734);
method15908 = (Object)new_AST_Method_with((Type_Array)array13289, (Type_Array)empty_Type_Array, 2, assign14516, Self);
symbol22004 = (Object)new_Type_Symbol_cached(L"receiver:");
methodclosure15906 = (Object)new_Runtime_MethodClosure(method15908);
store_method((Type_Class)class2747, (Type_Symbol)symbol22004, (Runtime_MethodClosure)methodclosure15906);


// ASTMessageCascadeExpression>>cascades:
//cascades: anObject
// 	cascades := anObject
localvariable16735 = (Object)new_AST_Variable_named(L"anObject");
array13290 = (Object)new_Type_Array_with(1, (Object)localvariable16735);
assign14517 = (Object)new_AST_Assign((Object)instancevariable4029, (Object)localvariable16735);
method15909 = (Object)new_AST_Method_with((Type_Array)array13290, (Type_Array)empty_Type_Array, 2, assign14517, Self);
symbol22005 = (Object)new_Type_Symbol_cached(L"cascades:");
methodclosure15907 = (Object)new_Runtime_MethodClosure(method15909);
store_method((Type_Class)class2747, (Type_Symbol)symbol22005, (Runtime_MethodClosure)methodclosure15907);


// ASTMessageCascadeExpression>>receiver
//receiver
// 	^ receiver
method15910 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4028);
symbol22006 = (Object)new_Type_Symbol_cached(L"receiver");
methodclosure15908 = (Object)new_Runtime_MethodClosure(method15910);
store_method((Type_Class)class2747, (Type_Symbol)symbol22006, (Runtime_MethodClosure)methodclosure15908);


// ASTMessageCascadeExpression>>cascades
//cascades
// 	^ cascades
method15911 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4029);
symbol22003 = (Object)new_Type_Symbol_cached(L"cascades");
methodclosure15909 = (Object)new_Runtime_MethodClosure(method15911);
store_method((Type_Class)class2747, (Type_Symbol)symbol22003, (Runtime_MethodClosure)methodclosure15909);

classreference3150 = (Object)new_Organization_ClassReference((Type_Class)class2748);

// ASTNumber>>asInteger
//asInteger
// 	^ (self base, 'r', self number) asNumber asInteger
symbol21981 = (Object)new_Type_Symbol_cached(L"base");
// base
send118314 = (Object)new_AST_Send((Object)Self, (Object)symbol21981, 0);
string13389 = (Object)new_Type_String(L"r");
constant22872 = (Object)new_AST_Constant((Object)string13389);
// ,
send118315 = (Object)new_AST_Send((Object)send118314, (Object)SMB__concat, 1, (Object)constant22872);
symbol21978 = (Object)new_Type_Symbol_cached(L"number");
// number
send118316 = (Object)new_AST_Send((Object)Self, (Object)symbol21978, 0);
// ,
send118317 = (Object)new_AST_Send((Object)send118315, (Object)SMB__concat, 1, (Object)send118316);
symbol22205 = (Object)new_Type_Symbol_cached(L"asNumber");
// asNumber
send118318 = (Object)new_AST_Send((Object)send118317, (Object)symbol22205, 0);
symbol21980 = (Object)new_Type_Symbol_cached(L"asInteger");
// asInteger
send118319 = (Object)new_AST_Send((Object)send118318, (Object)symbol21980, 0);
method15912 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118319);
methodclosure15910 = (Object)new_Runtime_MethodClosure(method15912);
store_method((Type_Class)class2748, (Type_Symbol)symbol21980, (Runtime_MethodClosure)methodclosure15910);


// ASTNumber>>base:
//base: anObject
// 	base := anObject
localvariable16736 = (Object)new_AST_Variable_named(L"anObject");
array13291 = (Object)new_Type_Array_with(1, (Object)localvariable16736);
assign14518 = (Object)new_AST_Assign((Object)instancevariable4031, (Object)localvariable16736);
method15913 = (Object)new_AST_Method_with((Type_Array)array13291, (Type_Array)empty_Type_Array, 2, assign14518, Self);
symbol21982 = (Object)new_Type_Symbol_cached(L"base:");
methodclosure15911 = (Object)new_Runtime_MethodClosure(method15913);
store_method((Type_Class)class2748, (Type_Symbol)symbol21982, (Runtime_MethodClosure)methodclosure15911);


// ASTNumber>>asPSmallInt
//asPSmallInt
// 	^PSmallInt new int: self asInteger
// new
send118320 = (Object)new_AST_Send((Object)classreference3126, (Object)symbol21894, 0);
symbol22206 = (Object)new_Type_Symbol_cached(L"int:");
// asInteger
send118321 = (Object)new_AST_Send((Object)Self, (Object)symbol21980, 0);
// int:
send118322 = (Object)new_AST_Send((Object)send118320, (Object)symbol22206, 1, (Object)send118321);
method15914 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118322);
symbol21979 = (Object)new_Type_Symbol_cached(L"asPSmallInt");
methodclosure15912 = (Object)new_Runtime_MethodClosure(method15914);
store_method((Type_Class)class2748, (Type_Symbol)symbol21979, (Runtime_MethodClosure)methodclosure15912);


// ASTNumber>>number:
//number: anObject
// 	number := anObject
localvariable16737 = (Object)new_AST_Variable_named(L"anObject");
array13292 = (Object)new_Type_Array_with(1, (Object)localvariable16737);
assign14519 = (Object)new_AST_Assign((Object)instancevariable4030, (Object)localvariable16737);
method15915 = (Object)new_AST_Method_with((Type_Array)array13292, (Type_Array)empty_Type_Array, 2, assign14519, Self);
symbol21977 = (Object)new_Type_Symbol_cached(L"number:");
methodclosure15913 = (Object)new_Runtime_MethodClosure(method15915);
store_method((Type_Class)class2748, (Type_Symbol)symbol21977, (Runtime_MethodClosure)methodclosure15913);


// ASTNumber>>printOn:
//printOn: aStream
// 	aStream nextPutAll: self number.
localvariable16738 = (Object)new_AST_Variable_named(L"aStream");
array13293 = (Object)new_Type_Array_with(1, (Object)localvariable16738);
// number
send118323 = (Object)new_AST_Send((Object)Self, (Object)symbol21978, 0);
// nextPutAll:
send118324 = (Object)new_AST_Send((Object)localvariable16738, (Object)symbol22174, 1, (Object)send118323);
method15916 = (Object)new_AST_Method_with((Type_Array)array13293, (Type_Array)empty_Type_Array, 2, send118324, Self);
methodclosure15914 = (Object)new_Runtime_MethodClosure(method15916);
store_method((Type_Class)class2748, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15914);


// ASTNumber>>base
//base
// 	^ base
method15917 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4031);
methodclosure15915 = (Object)new_Runtime_MethodClosure(method15917);
store_method((Type_Class)class2748, (Type_Symbol)symbol21981, (Runtime_MethodClosure)methodclosure15915);


// ASTNumber>>number
//number
// 	^ number
method15918 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4030);
methodclosure15916 = (Object)new_Runtime_MethodClosure(method15918);
store_method((Type_Class)class2748, (Type_Symbol)symbol21978, (Runtime_MethodClosure)methodclosure15916);

classreference3151 = (Object)new_Organization_ClassReference((Type_Class)class2749);

// ASTBlock>>parameters:
//parameters: aCollection
// 	parameters := aCollection
localvariable16739 = (Object)new_AST_Variable_named(L"aCollection");
array13294 = (Object)new_Type_Array_with(1, (Object)localvariable16739);
assign14520 = (Object)new_AST_Assign((Object)instancevariable4032, (Object)localvariable16739);
method15919 = (Object)new_AST_Method_with((Type_Array)array13294, (Type_Array)empty_Type_Array, 2, assign14520, Self);
methodclosure15917 = (Object)new_Runtime_MethodClosure(method15919);
store_method((Type_Class)class2749, (Type_Symbol)symbol22030, (Runtime_MethodClosure)methodclosure15917);


// ASTBlock>>hasReturnExpression
//hasReturnExpression
// 	^ self statements anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
symbol22021 = (Object)new_Type_Symbol_cached(L"statements");
// statements
send118325 = (Object)new_AST_Send((Object)Self, (Object)symbol22021, 0);
symbol22207 = (Object)new_Type_Symbol_cached(L"anySatisfy:");
localvariable16740 = (Object)new_AST_Variable_named(L"el");
array13295 = (Object)new_Type_Array_with(1, (Object)localvariable16740);
// isReturnExpression
send118326 = (Object)new_AST_Send((Object)localvariable16740, (Object)symbol21800, 0);
symbol21955 = (Object)new_Type_Symbol_cached(L"hasReturnExpression");
// hasReturnExpression
send118327 = (Object)new_AST_Send((Object)localvariable16740, (Object)symbol21955, 0);
block7852 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118327);
// or:
send118328 = (Object)new_AST_Send((Object)send118326, (Object)symbol21912, 1, (Object)block7852);
block7853 = (Object)new_AST_Block_with((Type_Array)array13295, (Type_Array)empty_Type_Array, 1, 1, send118328);
// anySatisfy:
send118329 = (Object)new_AST_Send((Object)send118325, (Object)symbol22207, 1, (Object)block7853);
method15920 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118329);
methodclosure15918 = (Object)new_Runtime_MethodClosure(method15920);
store_method((Type_Class)class2749, (Type_Symbol)symbol21955, (Runtime_MethodClosure)methodclosure15918);


// ASTBlock>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable16741 = (Object)new_AST_Variable_named(L"anObject");
array13296 = (Object)new_Type_Array_with(1, (Object)localvariable16741);
assign14521 = (Object)new_AST_Assign((Object)instancevariable4033, (Object)localvariable16741);
method15921 = (Object)new_AST_Method_with((Type_Array)array13296, (Type_Array)empty_Type_Array, 2, assign14521, Self);
symbol22026 = (Object)new_Type_Symbol_cached(L"temporaries:");
methodclosure15919 = (Object)new_Runtime_MethodClosure(method15921);
store_method((Type_Class)class2749, (Type_Symbol)symbol22026, (Runtime_MethodClosure)methodclosure15919);


// ASTBlock>>parameters
//parameters
// 	^ parameters
method15922 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4032);
methodclosure15920 = (Object)new_Runtime_MethodClosure(method15922);
store_method((Type_Class)class2749, (Type_Symbol)symbol22011, (Runtime_MethodClosure)methodclosure15920);


// ASTBlock>>statements
//statements
// 	^ statements
method15923 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4034);
methodclosure15921 = (Object)new_Runtime_MethodClosure(method15923);
store_method((Type_Class)class2749, (Type_Symbol)symbol22021, (Runtime_MethodClosure)methodclosure15921);


// ASTBlock>>initialize
//initialize
// 	super initialize.
// 	self parameters: Array new.
// 	self statements: Array new.
// 	self temporaries: Array new.
super1285 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118330 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21894, 0);
// parameters:
send118331 = (Object)new_AST_Send((Object)Self, (Object)symbol22030, 1, (Object)send118330);
symbol22023 = (Object)new_Type_Symbol_cached(L"statements:");
// new
send118332 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21894, 0);
// statements:
send118333 = (Object)new_AST_Send((Object)Self, (Object)symbol22023, 1, (Object)send118332);
// new
send118334 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21894, 0);
// temporaries:
send118335 = (Object)new_AST_Send((Object)Self, (Object)symbol22026, 1, (Object)send118334);
method15924 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1285, send118331, send118333, send118335, Self);
methodclosure15922 = (Object)new_Runtime_MethodClosure(method15924);
store_method((Type_Class)class2749, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15922);


// ASTBlock>>statements:
//statements: anObject
// 	statements := anObject
localvariable16742 = (Object)new_AST_Variable_named(L"anObject");
array13297 = (Object)new_Type_Array_with(1, (Object)localvariable16742);
assign14522 = (Object)new_AST_Assign((Object)instancevariable4034, (Object)localvariable16742);
method15925 = (Object)new_AST_Method_with((Type_Array)array13297, (Type_Array)empty_Type_Array, 2, assign14522, Self);
methodclosure15923 = (Object)new_Runtime_MethodClosure(method15925);
store_method((Type_Class)class2749, (Type_Symbol)symbol22023, (Runtime_MethodClosure)methodclosure15923);


// ASTBlock>>temporaries
//temporaries
// 	^ temporaries
method15926 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4033);
symbol22025 = (Object)new_Type_Symbol_cached(L"temporaries");
methodclosure15924 = (Object)new_Runtime_MethodClosure(method15926);
store_method((Type_Class)class2749, (Type_Symbol)symbol22025, (Runtime_MethodClosure)methodclosure15924);

classreference3152 = (Object)new_Organization_ClassReference((Type_Class)class2741);
classreference3153 = (Object)new_Organization_ClassReference((Type_Class)class2750);

// ASTKeywordAnnotation>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable16743 = (Object)new_AST_Variable_named(L"anObject");
array13298 = (Object)new_Type_Array_with(1, (Object)localvariable16743);
assign14523 = (Object)new_AST_Assign((Object)instancevariable4035, (Object)localvariable16743);
method15927 = (Object)new_AST_Method_with((Type_Array)array13298, (Type_Array)empty_Type_Array, 2, assign14523, Self);
symbol22017 = (Object)new_Type_Symbol_cached(L"arguments:");
methodclosure15925 = (Object)new_Runtime_MethodClosure(method15927);
store_method((Type_Class)class2750, (Type_Symbol)symbol22017, (Runtime_MethodClosure)methodclosure15925);


// ASTKeywordAnnotation>>arguments
//arguments
// 	^ arguments
method15928 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4035);
methodclosure15926 = (Object)new_Runtime_MethodClosure(method15928);
store_method((Type_Class)class2750, (Type_Symbol)symbol21909, (Runtime_MethodClosure)methodclosure15926);

classreference3154 = (Object)new_Organization_ClassReference((Type_Class)class2752);

// ASTBinaryExpression>>receiver:
//receiver: anObject 
// 	receiver := anObject
localvariable16744 = (Object)new_AST_Variable_named(L"anObject");
array13299 = (Object)new_Type_Array_with(1, (Object)localvariable16744);
assign14524 = (Object)new_AST_Assign((Object)instancevariable4036, (Object)localvariable16744);
method15929 = (Object)new_AST_Method_with((Type_Array)array13299, (Type_Array)empty_Type_Array, 2, assign14524, Self);
methodclosure15927 = (Object)new_Runtime_MethodClosure(method15929);
store_method((Type_Class)class2752, (Type_Symbol)symbol22004, (Runtime_MethodClosure)methodclosure15927);


// ASTBinaryExpression>>argument
//argument
// 	^ argument
method15930 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4037);
methodclosure15928 = (Object)new_Runtime_MethodClosure(method15930);
store_method((Type_Class)class2752, (Type_Symbol)symbol22014, (Runtime_MethodClosure)methodclosure15928);


// ASTBinaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
// 	aStream nextPutAll: String space.
// 	self argument printOn: aStream.
localvariable16745 = (Object)new_AST_Variable_named(L"aStream");
array13300 = (Object)new_Type_Array_with(1, (Object)localvariable16745);
// receiver
send118336 = (Object)new_AST_Send((Object)Self, (Object)symbol22006, 0);
// printOn:
send118337 = (Object)new_AST_Send((Object)send118336, (Object)symbol21904, 1, (Object)localvariable16745);
// space
send118338 = (Object)new_AST_Send((Object)classreference3127, (Object)symbol22193, 0);
// nextPutAll:
send118339 = (Object)new_AST_Send((Object)localvariable16745, (Object)symbol22174, 1, (Object)send118338);
super1286 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16745);
// space
send118340 = (Object)new_AST_Send((Object)classreference3127, (Object)symbol22193, 0);
// nextPutAll:
send118341 = (Object)new_AST_Send((Object)localvariable16745, (Object)symbol22174, 1, (Object)send118340);
// argument
send118342 = (Object)new_AST_Send((Object)Self, (Object)symbol22014, 0);
// printOn:
send118343 = (Object)new_AST_Send((Object)send118342, (Object)symbol21904, 1, (Object)localvariable16745);
method15931 = (Object)new_AST_Method_with((Type_Array)array13300, (Type_Array)empty_Type_Array, 6, send118337, send118339, super1286, send118341, send118343, Self);
methodclosure15929 = (Object)new_Runtime_MethodClosure(method15931);
store_method((Type_Class)class2752, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15929);


// ASTBinaryExpression>>argument:
//argument: anObject 
// 	argument := anObject
localvariable16746 = (Object)new_AST_Variable_named(L"anObject");
array13301 = (Object)new_Type_Array_with(1, (Object)localvariable16746);
assign14525 = (Object)new_AST_Assign((Object)instancevariable4037, (Object)localvariable16746);
method15932 = (Object)new_AST_Method_with((Type_Array)array13301, (Type_Array)empty_Type_Array, 2, assign14525, Self);
symbol22013 = (Object)new_Type_Symbol_cached(L"argument:");
methodclosure15930 = (Object)new_Runtime_MethodClosure(method15932);
store_method((Type_Class)class2752, (Type_Symbol)symbol22013, (Runtime_MethodClosure)methodclosure15930);


// ASTBinaryExpression>>argumentOfBinary:
//argumentOfBinary: outer
// 	outer argument: receiver.
// 	receiver := outer
localvariable16747 = (Object)new_AST_Variable_named(L"outer");
array13302 = (Object)new_Type_Array_with(1, (Object)localvariable16747);
// argument:
send118344 = (Object)new_AST_Send((Object)localvariable16747, (Object)symbol22013, 1, (Object)instancevariable4036);
assign14526 = (Object)new_AST_Assign((Object)instancevariable4036, (Object)localvariable16747);
method15933 = (Object)new_AST_Method_with((Type_Array)array13302, (Type_Array)empty_Type_Array, 3, send118344, assign14526, Self);
symbol21958 = (Object)new_Type_Symbol_cached(L"argumentOfBinary:");
methodclosure15931 = (Object)new_Runtime_MethodClosure(method15933);
store_method((Type_Class)class2752, (Type_Symbol)symbol21958, (Runtime_MethodClosure)methodclosure15931);


// ASTBinaryExpression>>initialize
//initialize
// 	super initialize.
super1287 = (Object)new_AST_Super((Object)symbol21801, 0);
method15934 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1287, Self);
methodclosure15932 = (Object)new_Runtime_MethodClosure(method15934);
store_method((Type_Class)class2752, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15932);


// ASTBinaryExpression>>receiver
//receiver
// 	^ receiver
method15935 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4036);
methodclosure15933 = (Object)new_Runtime_MethodClosure(method15935);
store_method((Type_Class)class2752, (Type_Symbol)symbol22006, (Runtime_MethodClosure)methodclosure15933);

classreference3155 = (Object)new_Organization_ClassReference((Type_Class)class2753);

// ASTSymbol>>symbol:
//symbol: aSymbol
// 	symbol := aSymbol
localvariable16748 = (Object)new_AST_Variable_named(L"aSymbol");
array13303 = (Object)new_Type_Array_with(1, (Object)localvariable16748);
assign14527 = (Object)new_AST_Assign((Object)instancevariable4038, (Object)localvariable16748);
method15936 = (Object)new_AST_Method_with((Type_Array)array13303, (Type_Array)empty_Type_Array, 2, assign14527, Self);
symbol21984 = (Object)new_Type_Symbol_cached(L"symbol:");
methodclosure15934 = (Object)new_Runtime_MethodClosure(method15936);
store_method((Type_Class)class2753, (Type_Symbol)symbol21984, (Runtime_MethodClosure)methodclosure15934);


// ASTSymbol>>printOn:
//printOn: aStream
// 	aStream nextPutAll: symbol.
localvariable16749 = (Object)new_AST_Variable_named(L"aStream");
array13304 = (Object)new_Type_Array_with(1, (Object)localvariable16749);
// nextPutAll:
send118345 = (Object)new_AST_Send((Object)localvariable16749, (Object)symbol22174, 1, (Object)instancevariable4038);
method15937 = (Object)new_AST_Method_with((Type_Array)array13304, (Type_Array)empty_Type_Array, 2, send118345, Self);
methodclosure15935 = (Object)new_Runtime_MethodClosure(method15937);
store_method((Type_Class)class2753, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15935);


// ASTSymbol>>asString
//asString
// 	^ self symbol asString
symbol21983 = (Object)new_Type_Symbol_cached(L"symbol");
// symbol
send118346 = (Object)new_AST_Send((Object)Self, (Object)symbol21983, 0);
// asString
send118347 = (Object)new_AST_Send((Object)send118346, (Object)SMB_asString, 0);
method15938 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118347);
methodclosure15936 = (Object)new_Runtime_MethodClosure(method15938);
store_method((Type_Class)class2753, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure15936);


// ASTSymbol>>symbol
//symbol
// 	^ symbol
method15939 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4038);
methodclosure15937 = (Object)new_Runtime_MethodClosure(method15939);
store_method((Type_Class)class2753, (Type_Symbol)symbol21983, (Runtime_MethodClosure)methodclosure15937);


// ASTSymbol>>asPSymbol
//asPSymbol
// 	^PSymbol named: self symbol
// symbol
send118348 = (Object)new_AST_Send((Object)Self, (Object)symbol21983, 0);
// named:
send118349 = (Object)new_AST_Send((Object)classreference3135, (Object)symbol22133, 1, (Object)send118348);
method15940 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118349);
symbol21985 = (Object)new_Type_Symbol_cached(L"asPSymbol");
methodclosure15938 = (Object)new_Runtime_MethodClosure(method15940);
store_method((Type_Class)class2753, (Type_Symbol)symbol21985, (Runtime_MethodClosure)methodclosure15938);


// ASTSymbol>>asSymbol
//asSymbol
// 	^ self symbol asSymbol
// symbol
send118350 = (Object)new_AST_Send((Object)Self, (Object)symbol21983, 0);
// asSymbol
send118351 = (Object)new_AST_Send((Object)send118350, (Object)SMB_asSymbol, 0);
method15941 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118351);
methodclosure15939 = (Object)new_Runtime_MethodClosure(method15941);
store_method((Type_Class)class2753, (Type_Symbol)SMB_asSymbol, (Runtime_MethodClosure)methodclosure15939);

classreference3156 = (Object)new_Organization_ClassReference((Type_Class)class2754);

// ASTBinaryMessageDefinition>>parameter:
//parameter: anObject
// 	parameter := anObject
localvariable16750 = (Object)new_AST_Variable_named(L"anObject");
array13305 = (Object)new_Type_Array_with(1, (Object)localvariable16750);
assign14528 = (Object)new_AST_Assign((Object)instancevariable4039, (Object)localvariable16750);
method15942 = (Object)new_AST_Method_with((Type_Array)array13305, (Type_Array)empty_Type_Array, 2, assign14528, Self);
symbol22028 = (Object)new_Type_Symbol_cached(L"parameter:");
methodclosure15940 = (Object)new_Runtime_MethodClosure(method15942);
store_method((Type_Class)class2754, (Type_Symbol)symbol22028, (Runtime_MethodClosure)methodclosure15940);


// ASTBinaryMessageDefinition>>parameter
//parameter
// 	^ parameter
method15943 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4039);
symbol22029 = (Object)new_Type_Symbol_cached(L"parameter");
methodclosure15941 = (Object)new_Runtime_MethodClosure(method15943);
store_method((Type_Class)class2754, (Type_Symbol)symbol22029, (Runtime_MethodClosure)methodclosure15941);


// ASTBinaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send118352 = (Object)new_AST_Send((Object)Self, (Object)symbol21908, 0);
// symbol
send118353 = (Object)new_AST_Send((Object)send118352, (Object)symbol21983, 0);
method15944 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118353);
symbol22018 = (Object)new_Type_Symbol_cached(L"selectorSymbol");
methodclosure15942 = (Object)new_Runtime_MethodClosure(method15944);
store_method((Type_Class)class2754, (Type_Symbol)symbol22018, (Runtime_MethodClosure)methodclosure15942);


// ASTBinaryMessageDefinition>>parameters
//parameters
// 	^ OrderedCollection with: self parameter.
symbol21967 = (Object)new_Type_Symbol_cached(L"with:");
// parameter
send118354 = (Object)new_AST_Send((Object)Self, (Object)symbol22029, 0);
// with:
send118355 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21967, 1, (Object)send118354);
method15945 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118355);
methodclosure15943 = (Object)new_Runtime_MethodClosure(method15945);
store_method((Type_Class)class2754, (Type_Symbol)symbol22011, (Runtime_MethodClosure)methodclosure15943);

classreference3157 = (Object)new_Organization_ClassReference((Type_Class)class2755);

// ASTUnarySelector>>selectorSymbol
//selectorSymbol
// 	^ self selector symbol
// selector
send118356 = (Object)new_AST_Send((Object)Self, (Object)symbol21908, 0);
// symbol
send118357 = (Object)new_AST_Send((Object)send118356, (Object)symbol21983, 0);
method15946 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118357);
methodclosure15944 = (Object)new_Runtime_MethodClosure(method15946);
store_method((Type_Class)class2755, (Type_Symbol)symbol22018, (Runtime_MethodClosure)methodclosure15944);

classreference3158 = (Object)new_Organization_ClassReference((Type_Class)class2756);

// ASTReturnExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable16751 = (Object)new_AST_Variable_named(L"anObject");
array13306 = (Object)new_Type_Array_with(1, (Object)localvariable16751);
assign14529 = (Object)new_AST_Assign((Object)instancevariable4040, (Object)localvariable16751);
method15947 = (Object)new_AST_Method_with((Type_Array)array13306, (Type_Array)empty_Type_Array, 2, assign14529, Self);
symbol22032 = (Object)new_Type_Symbol_cached(L"expression:");
methodclosure15945 = (Object)new_Runtime_MethodClosure(method15947);
store_method((Type_Class)class2756, (Type_Symbol)symbol22032, (Runtime_MethodClosure)methodclosure15945);


// ASTReturnExpression>>expression
//expression
// 	^ expression
method15948 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4040);
symbol22033 = (Object)new_Type_Symbol_cached(L"expression");
methodclosure15946 = (Object)new_Runtime_MethodClosure(method15948);
store_method((Type_Class)class2756, (Type_Symbol)symbol22033, (Runtime_MethodClosure)methodclosure15946);


// ASTReturnExpression>>isReturnExpression
//isReturnExpression
// 	^ true
method15949 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
methodclosure15947 = (Object)new_Runtime_MethodClosure(method15949);
store_method((Type_Class)class2756, (Type_Symbol)symbol21800, (Runtime_MethodClosure)methodclosure15947);

classreference3159 = (Object)new_Organization_ClassReference((Type_Class)class2757);

// ASTMessageExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable16752 = (Object)new_AST_Variable_named(L"anObject");
array13307 = (Object)new_Type_Array_with(1, (Object)localvariable16752);
assign14530 = (Object)new_AST_Assign((Object)instancevariable4041, (Object)localvariable16752);
method15950 = (Object)new_AST_Method_with((Type_Array)array13307, (Type_Array)empty_Type_Array, 2, assign14530, Self);
methodclosure15948 = (Object)new_Runtime_MethodClosure(method15950);
store_method((Type_Class)class2757, (Type_Symbol)symbol22004, (Runtime_MethodClosure)methodclosure15948);


// ASTMessageExpression>>hasReturnExpression
//hasReturnExpression
// 	^ self arguments anySatisfy: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]].
// arguments
send118358 = (Object)new_AST_Send((Object)Self, (Object)symbol21909, 0);
localvariable16753 = (Object)new_AST_Variable_named(L"el");
array13308 = (Object)new_Type_Array_with(1, (Object)localvariable16753);
// isReturnExpression
send118359 = (Object)new_AST_Send((Object)localvariable16753, (Object)symbol21800, 0);
// hasReturnExpression
send118360 = (Object)new_AST_Send((Object)localvariable16753, (Object)symbol21955, 0);
block7854 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118360);
// or:
send118361 = (Object)new_AST_Send((Object)send118359, (Object)symbol21912, 1, (Object)block7854);
block7855 = (Object)new_AST_Block_with((Type_Array)array13308, (Type_Array)empty_Type_Array, 1, 1, send118361);
// anySatisfy:
send118362 = (Object)new_AST_Send((Object)send118358, (Object)symbol22207, 1, (Object)block7855);
method15951 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118362);
methodclosure15949 = (Object)new_Runtime_MethodClosure(method15951);
store_method((Type_Class)class2757, (Type_Symbol)symbol21955, (Runtime_MethodClosure)methodclosure15949);


// ASTMessageExpression>>arguments
//arguments
// 	^ arguments
method15952 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4042);
methodclosure15950 = (Object)new_Runtime_MethodClosure(method15952);
store_method((Type_Class)class2757, (Type_Symbol)symbol21909, (Runtime_MethodClosure)methodclosure15950);


// ASTMessageExpression>>arguments:
//arguments: anObject
// 	arguments := anObject
localvariable16754 = (Object)new_AST_Variable_named(L"anObject");
array13309 = (Object)new_Type_Array_with(1, (Object)localvariable16754);
assign14531 = (Object)new_AST_Assign((Object)instancevariable4042, (Object)localvariable16754);
method15953 = (Object)new_AST_Method_with((Type_Array)array13309, (Type_Array)empty_Type_Array, 2, assign14531, Self);
methodclosure15951 = (Object)new_Runtime_MethodClosure(method15953);
store_method((Type_Class)class2757, (Type_Symbol)symbol22017, (Runtime_MethodClosure)methodclosure15951);


// ASTMessageExpression>>initialize
//initialize
// 	super initialize.
// 	arguments := OrderedCollection new.
super1288 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118363 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
assign14532 = (Object)new_AST_Assign((Object)instancevariable4042, (Object)send118363);
method15954 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1288, assign14532, Self);
methodclosure15952 = (Object)new_Runtime_MethodClosure(method15954);
store_method((Type_Class)class2757, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15952);


// ASTMessageExpression>>receiver
//receiver
// 	^ receiver
method15955 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4041);
methodclosure15953 = (Object)new_Runtime_MethodClosure(method15955);
store_method((Type_Class)class2757, (Type_Symbol)symbol22006, (Runtime_MethodClosure)methodclosure15953);

classreference3160 = (Object)new_Organization_ClassReference((Type_Class)class2758);

// ASTString>>string:
//string: aString
// 	string := aString
localvariable16755 = (Object)new_AST_Variable_named(L"aString");
array13310 = (Object)new_Type_Array_with(1, (Object)localvariable16755);
assign14533 = (Object)new_AST_Assign((Object)instancevariable4043, (Object)localvariable16755);
method15956 = (Object)new_AST_Method_with((Type_Array)array13310, (Type_Array)empty_Type_Array, 2, assign14533, Self);
symbol21986 = (Object)new_Type_Symbol_cached(L"string:");
methodclosure15954 = (Object)new_Runtime_MethodClosure(method15956);
store_method((Type_Class)class2758, (Type_Symbol)symbol21986, (Runtime_MethodClosure)methodclosure15954);


// ASTString>>string
//string
// 	^ string
method15957 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4043);
symbol21987 = (Object)new_Type_Symbol_cached(L"string");
methodclosure15955 = (Object)new_Runtime_MethodClosure(method15957);
store_method((Type_Class)class2758, (Type_Symbol)symbol21987, (Runtime_MethodClosure)methodclosure15955);


// ASTString>>asPString
//asPString 
// 	^PString new string: self string
// new
send118364 = (Object)new_AST_Send((Object)classreference3127, (Object)symbol21894, 0);
// string
send118365 = (Object)new_AST_Send((Object)Self, (Object)symbol21987, 0);
// string:
send118366 = (Object)new_AST_Send((Object)send118364, (Object)symbol21986, 1, (Object)send118365);
method15958 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118366);
symbol21988 = (Object)new_Type_Symbol_cached(L"asPString");
methodclosure15956 = (Object)new_Runtime_MethodClosure(method15958);
store_method((Type_Class)class2758, (Type_Symbol)symbol21988, (Runtime_MethodClosure)methodclosure15956);

classreference3161 = (Object)new_Organization_ClassReference((Type_Class)class2759);
classreference3162 = (Object)new_Organization_ClassReference((Type_Class)class2744);

// ASTKeywordSelector>>keywords
//keywords
// 	^ keywords
method15959 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4026);
symbol22016 = (Object)new_Type_Symbol_cached(L"keywords");
methodclosure15957 = (Object)new_Runtime_MethodClosure(method15959);
store_method((Type_Class)class2744, (Type_Symbol)symbol22016, (Runtime_MethodClosure)methodclosure15957);


// ASTKeywordSelector>>keywords:
//keywords: anObject
// 	keywords := anObject
localvariable16756 = (Object)new_AST_Variable_named(L"anObject");
array13311 = (Object)new_Type_Array_with(1, (Object)localvariable16756);
assign14534 = (Object)new_AST_Assign((Object)instancevariable4026, (Object)localvariable16756);
method15960 = (Object)new_AST_Method_with((Type_Array)array13311, (Type_Array)empty_Type_Array, 2, assign14534, Self);
symbol22015 = (Object)new_Type_Symbol_cached(L"keywords:");
methodclosure15958 = (Object)new_Runtime_MethodClosure(method15960);
store_method((Type_Class)class2744, (Type_Symbol)symbol22015, (Runtime_MethodClosure)methodclosure15958);


// ASTKeywordSelector>>initialize
//initialize
// 	super initialize.
// 	keywords := OrderedCollection new.
super1289 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118367 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
assign14535 = (Object)new_AST_Assign((Object)instancevariable4026, (Object)send118367);
method15961 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, super1289, assign14535, Self);
methodclosure15959 = (Object)new_Runtime_MethodClosure(method15961);
store_method((Type_Class)class2744, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15959);


// ASTKeywordSelector>>selectorName
//selectorName
// 	^ (keywords joinUsing: ':'), ':'.
symbol22208 = (Object)new_Type_Symbol_cached(L"joinUsing:");
string13390 = (Object)new_Type_String(L":");
constant22873 = (Object)new_AST_Constant((Object)string13390);
// joinUsing:
send118368 = (Object)new_AST_Send((Object)instancevariable4026, (Object)symbol22208, 1, (Object)constant22873);
string13391 = (Object)new_Type_String(L":");
constant22874 = (Object)new_AST_Constant((Object)string13391);
// ,
send118369 = (Object)new_AST_Send((Object)send118368, (Object)SMB__concat, 1, (Object)constant22874);
method15962 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118369);
symbol22009 = (Object)new_Type_Symbol_cached(L"selectorName");
methodclosure15960 = (Object)new_Runtime_MethodClosure(method15962);
store_method((Type_Class)class2744, (Type_Symbol)symbol22009, (Runtime_MethodClosure)methodclosure15960);

classreference3163 = (Object)new_Organization_ClassReference((Type_Class)class2760);

// ASTAssignmentExpression>>expression:
//expression: anObject
// 	expression := anObject
localvariable16757 = (Object)new_AST_Variable_named(L"anObject");
array13312 = (Object)new_Type_Array_with(1, (Object)localvariable16757);
assign14536 = (Object)new_AST_Assign((Object)instancevariable4045, (Object)localvariable16757);
method15963 = (Object)new_AST_Method_with((Type_Array)array13312, (Type_Array)empty_Type_Array, 2, assign14536, Self);
methodclosure15961 = (Object)new_Runtime_MethodClosure(method15963);
store_method((Type_Class)class2760, (Type_Symbol)symbol22032, (Runtime_MethodClosure)methodclosure15961);


// ASTAssignmentExpression>>expression
//expression
// 	^ expression
method15964 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4045);
methodclosure15962 = (Object)new_Runtime_MethodClosure(method15964);
store_method((Type_Class)class2760, (Type_Symbol)symbol22033, (Runtime_MethodClosure)methodclosure15962);


// ASTAssignmentExpression>>variable:
//variable: anObject
// 	variable := anObject
localvariable16758 = (Object)new_AST_Variable_named(L"anObject");
array13313 = (Object)new_Type_Array_with(1, (Object)localvariable16758);
assign14537 = (Object)new_AST_Assign((Object)instancevariable4044, (Object)localvariable16758);
method15965 = (Object)new_AST_Method_with((Type_Array)array13313, (Type_Array)empty_Type_Array, 2, assign14537, Self);
symbol22034 = (Object)new_Type_Symbol_cached(L"variable:");
methodclosure15963 = (Object)new_Runtime_MethodClosure(method15965);
store_method((Type_Class)class2760, (Type_Symbol)symbol22034, (Runtime_MethodClosure)methodclosure15963);


// ASTAssignmentExpression>>variable
//variable
// 	^ variable
method15966 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4044);
symbol22035 = (Object)new_Type_Symbol_cached(L"variable");
methodclosure15964 = (Object)new_Runtime_MethodClosure(method15966);
store_method((Type_Class)class2760, (Type_Symbol)symbol22035, (Runtime_MethodClosure)methodclosure15964);

classreference3164 = (Object)new_Organization_ClassReference((Type_Class)class2761);

// ASTUnaryExpression>>receiver
//receiver
// 	^ receiver
method15967 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4046);
methodclosure15965 = (Object)new_Runtime_MethodClosure(method15967);
store_method((Type_Class)class2761, (Type_Symbol)symbol22006, (Runtime_MethodClosure)methodclosure15965);


// ASTUnaryExpression>>printOn:
//printOn: aStream
// 	self receiver printOn: aStream.
// 	aStream nextPutAll: String space.
// 	super printOn: aStream.
localvariable16759 = (Object)new_AST_Variable_named(L"aStream");
array13314 = (Object)new_Type_Array_with(1, (Object)localvariable16759);
// receiver
send118370 = (Object)new_AST_Send((Object)Self, (Object)symbol22006, 0);
// printOn:
send118371 = (Object)new_AST_Send((Object)send118370, (Object)symbol21904, 1, (Object)localvariable16759);
// space
send118372 = (Object)new_AST_Send((Object)classreference3127, (Object)symbol22193, 0);
// nextPutAll:
send118373 = (Object)new_AST_Send((Object)localvariable16759, (Object)symbol22174, 1, (Object)send118372);
super1290 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16759);
method15968 = (Object)new_AST_Method_with((Type_Array)array13314, (Type_Array)empty_Type_Array, 4, send118371, send118373, super1290, Self);
methodclosure15966 = (Object)new_Runtime_MethodClosure(method15968);
store_method((Type_Class)class2761, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15966);


// ASTUnaryExpression>>receiver:
//receiver: anObject
// 	receiver := anObject
localvariable16760 = (Object)new_AST_Variable_named(L"anObject");
array13315 = (Object)new_Type_Array_with(1, (Object)localvariable16760);
assign14538 = (Object)new_AST_Assign((Object)instancevariable4046, (Object)localvariable16760);
method15969 = (Object)new_AST_Method_with((Type_Array)array13315, (Type_Array)empty_Type_Array, 2, assign14538, Self);
methodclosure15967 = (Object)new_Runtime_MethodClosure(method15969);
store_method((Type_Class)class2761, (Type_Symbol)symbol22004, (Runtime_MethodClosure)methodclosure15967);

classreference3165 = (Object)new_Organization_ClassReference((Type_Class)class2720);

// ASTNode>>hasReturnExpression
//hasReturnExpression
// 	^ false
method15970 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure15968 = (Object)new_Runtime_MethodClosure(method15970);
store_method((Type_Class)class2720, (Type_Symbol)symbol21955, (Runtime_MethodClosure)methodclosure15968);


// ASTNode>>isReturnExpression
//isReturnExpression
// 	^ false
method15971 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
methodclosure15969 = (Object)new_Runtime_MethodClosure(method15971);
store_method((Type_Class)class2720, (Type_Symbol)symbol21800, (Runtime_MethodClosure)methodclosure15969);


// ASTNode>>astType
//astType
// 	^ 'Type'
string13392 = (Object)new_Type_String(L"Type");
constant22875 = (Object)new_AST_Constant((Object)string13392);
method15972 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant22875);
symbol21959 = (Object)new_Type_Symbol_cached(L"astType");
methodclosure15970 = (Object)new_Runtime_MethodClosure(method15972);
store_method((Type_Class)class2720, (Type_Symbol)symbol21959, (Runtime_MethodClosure)methodclosure15970);


// ASTNode>>uid
//uid
// 	uid isNil ifTrue: [ uid := self class uidFor: self].
// 	^ uid
// isNil
send118374 = (Object)new_AST_Send((Object)instancevariable3994, (Object)SMB_isNil, 0);
// class
send118375 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
symbol22209 = (Object)new_Type_Symbol_cached(L"uidFor:");
// uidFor:
send118376 = (Object)new_AST_Send((Object)send118375, (Object)symbol22209, 1, (Object)Self);
assign14539 = (Object)new_AST_Assign((Object)instancevariable3994, (Object)send118376);
block7856 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, assign14539);
// ifTrue:
send118377 = (Object)new_AST_Send((Object)send118374, (Object)SMB_ifTrue_, 1, (Object)block7856);
method15973 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118377, instancevariable3994);
methodclosure15971 = (Object)new_Runtime_MethodClosure(method15973);
store_method((Type_Class)class2720, (Type_Symbol)symbol21956, (Runtime_MethodClosure)methodclosure15971);


// ASTNode>>astName
//astName
// 	^ (self class name 
// 			copyFrom: 4
// 			to: self class name size) capitalized
// class
send118378 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send118379 = (Object)new_AST_Send((Object)send118378, (Object)SMB_name, 0);
symbol22210 = (Object)new_Type_Symbol_cached(L"copyFrom:to:");
smallint8285 = (Object)new_Type_SmallInt(4);
constant22876 = (Object)new_AST_Constant((Object)smallint8285);
// class
send118380 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send118381 = (Object)new_AST_Send((Object)send118380, (Object)SMB_name, 0);
// size
send118382 = (Object)new_AST_Send((Object)send118381, (Object)SMB_size, 0);
// copyFrom:to:
send118383 = (Object)new_AST_Send((Object)send118379, (Object)symbol22210, 2, (Object)constant22876, (Object)send118382);
// capitalized
send118384 = (Object)new_AST_Send((Object)send118383, (Object)symbol21925, 0);
method15974 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118384);
symbol21960 = (Object)new_Type_Symbol_cached(L"astName");
methodclosure15972 = (Object)new_Runtime_MethodClosure(method15974);
store_method((Type_Class)class2720, (Type_Symbol)symbol21960, (Runtime_MethodClosure)methodclosure15972);


// ASTNode>>sourceObject
//sourceObject
// 	^ sourceObject
method15975 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable3993);
symbol21957 = (Object)new_Type_Symbol_cached(L"sourceObject");
methodclosure15973 = (Object)new_Runtime_MethodClosure(method15975);
store_method((Type_Class)class2720, (Type_Symbol)symbol21957, (Runtime_MethodClosure)methodclosure15973);


// ASTNode>>doesNotUnderstand:
//doesNotUnderstand: aMessage
// 	| selector |
// 	(aMessage selector = #accept:) 
// 		ifFalse: [ ^ super doesNotUnderstand: aMessage ].
// 	selector := ('visit', (self class name copyFrom: 4 to: (self class name size)), ':') asSymbol.
// 	^ (aMessage argument) perform: selector with: self. 
localvariable16761 = (Object)new_AST_Variable_named(L"aMessage");
array13316 = (Object)new_Type_Array_with(1, (Object)localvariable16761);
localvariable16762 = (Object)new_AST_Variable_named(L"selector");
array13317 = (Object)new_Type_Array_with(1, (Object)localvariable16762);
variable935 = (Object)new_AST_Variable_named(L"return");
array13318 = (Object)new_Type_Array_with(1, (Object)variable935);
// selector
send118385 = (Object)new_AST_Send((Object)localvariable16761, (Object)symbol21908, 0);
constant22877 = (Object)new_AST_Constant((Object)symbol22186);
// =
send118386 = (Object)new_AST_Send((Object)send118385, (Object)SMB__equal, 1, (Object)constant22877);
super1291 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable16761);
// escape:
send118387 = (Object)new_AST_Send((Object)variable935, (Object)SMB_escape_, 1, (Object)super1291);
block7857 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118387);
// ifFalse:
send118388 = (Object)new_AST_Send((Object)send118386, (Object)SMB_ifFalse_, 1, (Object)block7857);
string13393 = (Object)new_Type_String(L"visit");
constant22878 = (Object)new_AST_Constant((Object)string13393);
// class
send118389 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send118390 = (Object)new_AST_Send((Object)send118389, (Object)SMB_name, 0);
smallint8286 = (Object)new_Type_SmallInt(4);
constant22879 = (Object)new_AST_Constant((Object)smallint8286);
// class
send118391 = (Object)new_AST_Send((Object)Self, (Object)SMB_class, 0);
// name
send118392 = (Object)new_AST_Send((Object)send118391, (Object)SMB_name, 0);
// size
send118393 = (Object)new_AST_Send((Object)send118392, (Object)SMB_size, 0);
// copyFrom:to:
send118394 = (Object)new_AST_Send((Object)send118390, (Object)symbol22210, 2, (Object)constant22879, (Object)send118393);
// ,
send118395 = (Object)new_AST_Send((Object)constant22878, (Object)SMB__concat, 1, (Object)send118394);
string13394 = (Object)new_Type_String(L":");
constant22880 = (Object)new_AST_Constant((Object)string13394);
// ,
send118396 = (Object)new_AST_Send((Object)send118395, (Object)SMB__concat, 1, (Object)constant22880);
// asSymbol
send118397 = (Object)new_AST_Send((Object)send118396, (Object)SMB_asSymbol, 0);
assign14540 = (Object)new_AST_Assign((Object)localvariable16762, (Object)send118397);
// argument
send118398 = (Object)new_AST_Send((Object)localvariable16761, (Object)symbol22014, 0);
// perform:with:
send118399 = (Object)new_AST_Send((Object)send118398, (Object)symbol22187, 2, (Object)localvariable16762, (Object)Self);
block7858 = (Object)new_AST_Block_with((Type_Array)array13318, (Type_Array)empty_Type_Array, 1, 3, send118388, assign14540, send118399);
// on:
send118400 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7858);
method15976 = (Object)new_AST_Method_with((Type_Array)array13316, (Type_Array)array13317, 1, send118400);
methodclosure15974 = (Object)new_Runtime_MethodClosure(method15976);
store_method((Type_Class)class2720, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure15974);


// ASTNode>>sourceObject:
//sourceObject: anObject
// 	sourceObject := anObject
localvariable16763 = (Object)new_AST_Variable_named(L"anObject");
array13319 = (Object)new_Type_Array_with(1, (Object)localvariable16763);
assign14541 = (Object)new_AST_Assign((Object)instancevariable3993, (Object)localvariable16763);
method15977 = (Object)new_AST_Method_with((Type_Array)array13319, (Type_Array)empty_Type_Array, 2, assign14541, Self);
symbol21954 = (Object)new_Type_Symbol_cached(L"sourceObject:");
methodclosure15975 = (Object)new_Runtime_MethodClosure(method15977);
store_method((Type_Class)class2720, (Type_Symbol)symbol21954, (Runtime_MethodClosure)methodclosure15975);


// ASTNode>>argumentOfBinary:
//argumentOfBinary: binary
// 	^ binary argument: self
localvariable16764 = (Object)new_AST_Variable_named(L"binary");
array13320 = (Object)new_Type_Array_with(1, (Object)localvariable16764);
// argument:
send118401 = (Object)new_AST_Send((Object)localvariable16764, (Object)symbol22013, 1, (Object)Self);
method15978 = (Object)new_AST_Method_with((Type_Array)array13320, (Type_Array)empty_Type_Array, 1, send118401);
methodclosure15976 = (Object)new_Runtime_MethodClosure(method15978);
store_method((Type_Class)class2720, (Type_Symbol)symbol21958, (Runtime_MethodClosure)methodclosure15976);

classreference3166 = (Object)new_Organization_ClassReference((Type_Class)class2751);
classreference3167 = (Object)new_Organization_ClassReference((Type_Class)class2762);

// ASTCharacter>>char
//char
// 	^ char
method15979 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4047);
symbol22143 = (Object)new_Type_Symbol_cached(L"char");
methodclosure15977 = (Object)new_Runtime_MethodClosure(method15979);
store_method((Type_Class)class2762, (Type_Symbol)symbol22143, (Runtime_MethodClosure)methodclosure15977);


// ASTCharacter>>asPCharacter
//asPCharacter
// 	^PCharacter new char: self char
// new
send118402 = (Object)new_AST_Send((Object)classreference3133, (Object)symbol21894, 0);
symbol22142 = (Object)new_Type_Symbol_cached(L"char:");
// char
send118403 = (Object)new_AST_Send((Object)Self, (Object)symbol22143, 0);
// char:
send118404 = (Object)new_AST_Send((Object)send118402, (Object)symbol22142, 1, (Object)send118403);
method15980 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118404);
symbol22144 = (Object)new_Type_Symbol_cached(L"asPCharacter");
methodclosure15978 = (Object)new_Runtime_MethodClosure(method15980);
store_method((Type_Class)class2762, (Type_Symbol)symbol22144, (Runtime_MethodClosure)methodclosure15978);


// ASTCharacter>>char:
//char: aChar
// 	char := aChar
localvariable16765 = (Object)new_AST_Variable_named(L"aChar");
array13321 = (Object)new_Type_Array_with(1, (Object)localvariable16765);
assign14542 = (Object)new_AST_Assign((Object)instancevariable4047, (Object)localvariable16765);
method15981 = (Object)new_AST_Method_with((Type_Array)array13321, (Type_Array)empty_Type_Array, 2, assign14542, Self);
methodclosure15979 = (Object)new_Runtime_MethodClosure(method15981);
store_method((Type_Class)class2762, (Type_Symbol)symbol22142, (Runtime_MethodClosure)methodclosure15979);

classreference3168 = (Object)new_Organization_ClassReference((Type_Class)class2743);

// ASTSelector>>parameters
//parameters
// 	^ Array new.
// new
send118405 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21894, 0);
method15982 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118405);
methodclosure15980 = (Object)new_Runtime_MethodClosure(method15982);
store_method((Type_Class)class2743, (Type_Symbol)symbol22011, (Runtime_MethodClosure)methodclosure15980);


// ASTSelector>>printOn:
//printOn: aStream
// 	self selector printOn: aStream.
localvariable16766 = (Object)new_AST_Variable_named(L"aStream");
array13322 = (Object)new_Type_Array_with(1, (Object)localvariable16766);
// selector
send118406 = (Object)new_AST_Send((Object)Self, (Object)symbol21908, 0);
// printOn:
send118407 = (Object)new_AST_Send((Object)send118406, (Object)symbol21904, 1, (Object)localvariable16766);
method15983 = (Object)new_AST_Method_with((Type_Array)array13322, (Type_Array)empty_Type_Array, 2, send118407, Self);
methodclosure15981 = (Object)new_Runtime_MethodClosure(method15983);
store_method((Type_Class)class2743, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15981);


// ASTSelector>>selector
//selector
// 	^ selector
method15984 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4025);
methodclosure15982 = (Object)new_Runtime_MethodClosure(method15984);
store_method((Type_Class)class2743, (Type_Symbol)symbol21908, (Runtime_MethodClosure)methodclosure15982);


// ASTSelector>>selectorName
//selectorName
// 	self selector printString
// selector
send118408 = (Object)new_AST_Send((Object)Self, (Object)symbol21908, 0);
// printString
send118409 = (Object)new_AST_Send((Object)send118408, (Object)symbol22124, 0);
method15985 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118409, Self);
methodclosure15983 = (Object)new_Runtime_MethodClosure(method15985);
store_method((Type_Class)class2743, (Type_Symbol)symbol22009, (Runtime_MethodClosure)methodclosure15983);


// ASTSelector>>asString
//asString
// 	^ self selector asString.
// selector
send118410 = (Object)new_AST_Send((Object)Self, (Object)symbol21908, 0);
// asString
send118411 = (Object)new_AST_Send((Object)send118410, (Object)SMB_asString, 0);
method15986 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118411);
methodclosure15984 = (Object)new_Runtime_MethodClosure(method15986);
store_method((Type_Class)class2743, (Type_Symbol)SMB_asString, (Runtime_MethodClosure)methodclosure15984);


// ASTSelector>>selector:
//selector: anObject
// 	| string |
// 	selector := anObject.
// 	string := selector asString.
// 	string size > 1 ifTrue: [ (string at: string size - 1) should not = ':' ]
localvariable16767 = (Object)new_AST_Variable_named(L"anObject");
array13323 = (Object)new_Type_Array_with(1, (Object)localvariable16767);
localvariable16768 = (Object)new_AST_Variable_named(L"string");
array13324 = (Object)new_Type_Array_with(1, (Object)localvariable16768);
assign14543 = (Object)new_AST_Assign((Object)instancevariable4025, (Object)localvariable16767);
// asString
send118412 = (Object)new_AST_Send((Object)instancevariable4025, (Object)SMB_asString, 0);
assign14544 = (Object)new_AST_Assign((Object)localvariable16768, (Object)send118412);
// size
send118413 = (Object)new_AST_Send((Object)localvariable16768, (Object)SMB_size, 0);
smallint8287 = (Object)new_Type_SmallInt(1);
constant22881 = (Object)new_AST_Constant((Object)smallint8287);
// >
send118414 = (Object)new_AST_Send((Object)send118413, (Object)SMB__gt, 1, (Object)constant22881);
// size
send118415 = (Object)new_AST_Send((Object)localvariable16768, (Object)SMB_size, 0);
smallint8288 = (Object)new_Type_SmallInt(1);
constant22882 = (Object)new_AST_Constant((Object)smallint8288);
// -
send118416 = (Object)new_AST_Send((Object)send118415, (Object)SMB__minus, 1, (Object)constant22882);
// at:
send118417 = (Object)new_AST_Send((Object)localvariable16768, (Object)SMB_at_, 1, (Object)send118416);
symbol22211 = (Object)new_Type_Symbol_cached(L"should");
// should
send118418 = (Object)new_AST_Send((Object)send118417, (Object)symbol22211, 0);
// not
send118419 = (Object)new_AST_Send((Object)send118418, (Object)SMB_not, 0);
string13395 = (Object)new_Type_String(L":");
constant22883 = (Object)new_AST_Constant((Object)string13395);
// =
send118420 = (Object)new_AST_Send((Object)send118419, (Object)SMB__equal, 1, (Object)constant22883);
block7859 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118420);
// ifTrue:
send118421 = (Object)new_AST_Send((Object)send118414, (Object)SMB_ifTrue_, 1, (Object)block7859);
method15987 = (Object)new_AST_Method_with((Type_Array)array13323, (Type_Array)array13324, 4, assign14543, assign14544, send118421, Self);
symbol22010 = (Object)new_Type_Symbol_cached(L"selector:");
methodclosure15985 = (Object)new_Runtime_MethodClosure(method15987);
store_method((Type_Class)class2743, (Type_Symbol)symbol22010, (Runtime_MethodClosure)methodclosure15985);


// ASTSelector>>compatibleWith:
//compatibleWith: aSelector
// 	^ (self selectorName = aSelector selectorName)
// 	
localvariable16769 = (Object)new_AST_Variable_named(L"aSelector");
array13325 = (Object)new_Type_Array_with(1, (Object)localvariable16769);
// selectorName
send118422 = (Object)new_AST_Send((Object)Self, (Object)symbol22009, 0);
// selectorName
send118423 = (Object)new_AST_Send((Object)localvariable16769, (Object)symbol22009, 0);
// =
send118424 = (Object)new_AST_Send((Object)send118422, (Object)SMB__equal, 1, (Object)send118423);
method15988 = (Object)new_AST_Method_with((Type_Array)array13325, (Type_Array)empty_Type_Array, 1, send118424);
methodclosure15986 = (Object)new_Runtime_MethodClosure(method15988);
store_method((Type_Class)class2743, (Type_Symbol)symbol22012, (Runtime_MethodClosure)methodclosure15986);

classreference3169 = (Object)new_Organization_ClassReference((Type_Class)class2763);

// ASTBraceExpression>>expressions:
//expressions: newExpressions
// 	expressions := newExpressions
localvariable16770 = (Object)new_AST_Variable_named(L"newExpressions");
array13326 = (Object)new_Type_Array_with(1, (Object)localvariable16770);
assign14545 = (Object)new_AST_Assign((Object)instancevariable4048, (Object)localvariable16770);
method15989 = (Object)new_AST_Method_with((Type_Array)array13326, (Type_Array)empty_Type_Array, 2, assign14545, Self);
symbol22160 = (Object)new_Type_Symbol_cached(L"expressions:");
methodclosure15987 = (Object)new_Runtime_MethodClosure(method15989);
store_method((Type_Class)class2763, (Type_Symbol)symbol22160, (Runtime_MethodClosure)methodclosure15987);


// ASTBraceExpression>>hasReturnExpression
//hasReturnExpression
// 	self expressions do: [ :el | 
// 		el isReturnExpression 
// 			or: [ el hasReturnExpression ]
// 			ifTrue: [ ^ true ] ].
// 	^ false
variable936 = (Object)new_AST_Variable_named(L"return");
array13327 = (Object)new_Type_Array_with(1, (Object)variable936);
symbol22212 = (Object)new_Type_Symbol_cached(L"expressions");
// expressions
send118425 = (Object)new_AST_Send((Object)Self, (Object)symbol22212, 0);
localvariable16771 = (Object)new_AST_Variable_named(L"el");
array13328 = (Object)new_Type_Array_with(1, (Object)localvariable16771);
// isReturnExpression
send118426 = (Object)new_AST_Send((Object)localvariable16771, (Object)symbol21800, 0);
symbol22213 = (Object)new_Type_Symbol_cached(L"or:ifTrue:");
// hasReturnExpression
send118427 = (Object)new_AST_Send((Object)localvariable16771, (Object)symbol21955, 0);
block7860 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118427);
// escape:
send118428 = (Object)new_AST_Send((Object)variable936, (Object)SMB_escape_, 1, (Object)True_Const);
block7861 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118428);
// or:ifTrue:
send118429 = (Object)new_AST_Send((Object)send118426, (Object)symbol22213, 2, (Object)block7860, (Object)block7861);
block7862 = (Object)new_AST_Block_with((Type_Array)array13328, (Type_Array)empty_Type_Array, 2, 1, send118429);
// do:
send118430 = (Object)new_AST_Send((Object)send118425, (Object)symbol21924, 1, (Object)block7862);
block7863 = (Object)new_AST_Block_with((Type_Array)array13327, (Type_Array)empty_Type_Array, 1, 2, send118430, False_Const);
// on:
send118431 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7863);
method15990 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118431);
methodclosure15988 = (Object)new_Runtime_MethodClosure(method15990);
store_method((Type_Class)class2763, (Type_Symbol)symbol21955, (Runtime_MethodClosure)methodclosure15988);

classreference3170 = (Object)new_Organization_ClassReference((Type_Class)class2764);

// ASTUnaryMessageDefinition>>selectorSymbol
//selectorSymbol
// 	^ self selector selectorSymbol
// selector
send118432 = (Object)new_AST_Send((Object)Self, (Object)symbol21908, 0);
// selectorSymbol
send118433 = (Object)new_AST_Send((Object)send118432, (Object)symbol22018, 0);
method15991 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118433);
methodclosure15989 = (Object)new_Runtime_MethodClosure(method15991);
store_method((Type_Class)class2764, (Type_Symbol)symbol22018, (Runtime_MethodClosure)methodclosure15989);

classreference3171 = (Object)new_Organization_ClassReference((Type_Class)class2746);
classreference3172 = (Object)new_Organization_ClassReference((Type_Class)class2765);
classreference3173 = (Object)new_Organization_ClassReference((Type_Class)class2766);

// ASTVariable>>asPVariable
//asPVariable 
// 	^PLocalVariable new name: self name
// new
send118434 = (Object)new_AST_Send((Object)classreference3121, (Object)symbol21894, 0);
// name
send118435 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name:
send118436 = (Object)new_AST_Send((Object)send118434, (Object)symbol21999, 1, (Object)send118435);
method15992 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118436);
methodclosure15990 = (Object)new_Runtime_MethodClosure(method15992);
store_method((Type_Class)class2766, (Type_Symbol)symbol21998, (Runtime_MethodClosure)methodclosure15990);


// ASTVariable>>name
//name
// 	^ name
method15993 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4049);
methodclosure15991 = (Object)new_Runtime_MethodClosure(method15993);
store_method((Type_Class)class2766, (Type_Symbol)SMB_name, (Runtime_MethodClosure)methodclosure15991);


// ASTVariable>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '(';
// 		nextPutAll: self name;
// 		nextPutAll: ')'
// 
localvariable16772 = (Object)new_AST_Variable_named(L"aStream");
array13329 = (Object)new_Type_Array_with(1, (Object)localvariable16772);
super1292 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16772);
localvariable16773 = (Object)new_AST_Variable_named(L"receiver");
array13330 = (Object)new_Type_Array_with(1, (Object)localvariable16773);
string13396 = (Object)new_Type_String(L"(");
constant22884 = (Object)new_AST_Constant((Object)string13396);
// nextPutAll:
send118437 = (Object)new_AST_Send((Object)localvariable16773, (Object)symbol22174, 1, (Object)constant22884);
// name
send118438 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// nextPutAll:
send118439 = (Object)new_AST_Send((Object)localvariable16773, (Object)symbol22174, 1, (Object)send118438);
string13397 = (Object)new_Type_String(L")");
constant22885 = (Object)new_AST_Constant((Object)string13397);
// nextPutAll:
send118440 = (Object)new_AST_Send((Object)localvariable16773, (Object)symbol22174, 1, (Object)constant22885);
block7864 = (Object)new_AST_Block_with((Type_Array)array13330, (Type_Array)empty_Type_Array, 1, 3, send118437, send118439, send118440);
// value:
send118441 = (Object)new_AST_Send((Object)block7864, (Object)SMB_value_, 1, (Object)localvariable16772);
method15994 = (Object)new_AST_Method_with((Type_Array)array13329, (Type_Array)empty_Type_Array, 3, super1292, send118441, Self);
methodclosure15992 = (Object)new_Runtime_MethodClosure(method15994);
store_method((Type_Class)class2766, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15992);


// ASTVariable>>hasSameTypeAs:
//hasSameTypeAs: anObject
// 	^ self layout isSameTypeAs: anObject layout 
localvariable16774 = (Object)new_AST_Variable_named(L"anObject");
array13331 = (Object)new_Type_Array_with(1, (Object)localvariable16774);
// layout
send118442 = (Object)new_AST_Send((Object)Self, (Object)symbol21889, 0);
symbol22214 = (Object)new_Type_Symbol_cached(L"isSameTypeAs:");
// layout
send118443 = (Object)new_AST_Send((Object)localvariable16774, (Object)symbol21889, 0);
// isSameTypeAs:
send118444 = (Object)new_AST_Send((Object)send118442, (Object)symbol22214, 1, (Object)send118443);
method15995 = (Object)new_AST_Method_with((Type_Array)array13331, (Type_Array)empty_Type_Array, 1, send118444);
symbol22001 = (Object)new_Type_Symbol_cached(L"hasSameTypeAs:");
methodclosure15993 = (Object)new_Runtime_MethodClosure(method15995);
store_method((Type_Class)class2766, (Type_Symbol)symbol22001, (Runtime_MethodClosure)methodclosure15993);


// ASTVariable>>name:
//name: anObject
// 	name := anObject
localvariable16775 = (Object)new_AST_Variable_named(L"anObject");
array13332 = (Object)new_Type_Array_with(1, (Object)localvariable16775);
assign14546 = (Object)new_AST_Assign((Object)instancevariable4049, (Object)localvariable16775);
method15996 = (Object)new_AST_Method_with((Type_Array)array13332, (Type_Array)empty_Type_Array, 2, assign14546, Self);
methodclosure15994 = (Object)new_Runtime_MethodClosure(method15996);
store_method((Type_Class)class2766, (Type_Symbol)symbol21999, (Runtime_MethodClosure)methodclosure15994);


// ASTVariable>>initialize
//initialize
// 	super initialize.
super1293 = (Object)new_AST_Super((Object)symbol21801, 0);
method15997 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, super1293, Self);
methodclosure15995 = (Object)new_Runtime_MethodClosure(method15997);
store_method((Type_Class)class2766, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure15995);


// ASTVariable>>=
//= other 
// 	^ self name = other name. 
localvariable16776 = (Object)new_AST_Variable_named(L"other");
array13333 = (Object)new_Type_Array_with(1, (Object)localvariable16776);
// name
send118445 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// name
send118446 = (Object)new_AST_Send((Object)localvariable16776, (Object)SMB_name, 0);
// =
send118447 = (Object)new_AST_Send((Object)send118445, (Object)SMB__equal, 1, (Object)send118446);
method15998 = (Object)new_AST_Method_with((Type_Array)array13333, (Type_Array)empty_Type_Array, 1, send118447);
methodclosure15996 = (Object)new_Runtime_MethodClosure(method15998);
store_method((Type_Class)class2766, (Type_Symbol)SMB__equal, (Runtime_MethodClosure)methodclosure15996);


// ASTVariable>>hash
//hash
// 	^ self name hash
// name
send118448 = (Object)new_AST_Send((Object)Self, (Object)SMB_name, 0);
// hash
send118449 = (Object)new_AST_Send((Object)send118448, (Object)SMB_hash, 0);
method15999 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118449);
methodclosure15997 = (Object)new_Runtime_MethodClosure(method15999);
store_method((Type_Class)class2766, (Type_Symbol)SMB_hash, (Runtime_MethodClosure)methodclosure15997);


// ASTVariable>>combineTypeWith:
//combineTypeWith: anObject
// 	self layout combineWith: anObject layout.
localvariable16777 = (Object)new_AST_Variable_named(L"anObject");
array13334 = (Object)new_Type_Array_with(1, (Object)localvariable16777);
// layout
send118450 = (Object)new_AST_Send((Object)Self, (Object)symbol21889, 0);
symbol22215 = (Object)new_Type_Symbol_cached(L"combineWith:");
// layout
send118451 = (Object)new_AST_Send((Object)localvariable16777, (Object)symbol21889, 0);
// combineWith:
send118452 = (Object)new_AST_Send((Object)send118450, (Object)symbol22215, 1, (Object)send118451);
method16000 = (Object)new_AST_Method_with((Type_Array)array13334, (Type_Array)empty_Type_Array, 2, send118452, Self);
symbol22000 = (Object)new_Type_Symbol_cached(L"combineTypeWith:");
methodclosure15998 = (Object)new_Runtime_MethodClosure(method16000);
store_method((Type_Class)class2766, (Type_Symbol)symbol22000, (Runtime_MethodClosure)methodclosure15998);

classreference3174 = (Object)new_Organization_ClassReference((Type_Class)class2767);

// ASTSelf>>printOn:
//printOn: aStream
// 	aStream nextPutAll: 'self'.
localvariable16778 = (Object)new_AST_Variable_named(L"aStream");
array13335 = (Object)new_Type_Array_with(1, (Object)localvariable16778);
string13398 = (Object)new_Type_String(L"self");
constant22886 = (Object)new_AST_Constant((Object)string13398);
// nextPutAll:
send118453 = (Object)new_AST_Send((Object)localvariable16778, (Object)symbol22174, 1, (Object)constant22886);
method16001 = (Object)new_AST_Method_with((Type_Array)array13335, (Type_Array)empty_Type_Array, 2, send118453, Self);
methodclosure15999 = (Object)new_Runtime_MethodClosure(method16001);
store_method((Type_Class)class2767, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure15999);

classreference3175 = (Object)new_Organization_ClassReference((Type_Class)class2768);

// ASTMethod>>hasReturnExpression
//hasReturnExpression
// 	^ self statements hasReturnExpression
// statements
send118454 = (Object)new_AST_Send((Object)Self, (Object)symbol22021, 0);
// hasReturnExpression
send118455 = (Object)new_AST_Send((Object)send118454, (Object)symbol21955, 0);
method16002 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118455);
methodclosure16000 = (Object)new_Runtime_MethodClosure(method16002);
store_method((Type_Class)class2768, (Type_Symbol)symbol21955, (Runtime_MethodClosure)methodclosure16000);


// ASTMethod>>astSelectors
//astSelectors 
// 	^ (Array new: 4)
// 	at: 1 put: #annotations;
// 	at: 2 put: #message;
// 	at: 3 put: #statements;
// 	at: 4 put: #temporaries;
// 	yourself.
localvariable16779 = (Object)new_AST_Variable_named(L"receiver");
array13336 = (Object)new_Type_Array_with(1, (Object)localvariable16779);
smallint8289 = (Object)new_Type_SmallInt(1);
constant22887 = (Object)new_AST_Constant((Object)smallint8289);
symbol22022 = (Object)new_Type_Symbol_cached(L"annotations");
constant22888 = (Object)new_AST_Constant((Object)symbol22022);
// at:put:
send118456 = (Object)new_AST_Send((Object)localvariable16779, (Object)SMB_at_put_, 2, (Object)constant22887, (Object)constant22888);
smallint8290 = (Object)new_Type_SmallInt(2);
constant22889 = (Object)new_AST_Constant((Object)smallint8290);
symbol22024 = (Object)new_Type_Symbol_cached(L"message");
constant22890 = (Object)new_AST_Constant((Object)symbol22024);
// at:put:
send118457 = (Object)new_AST_Send((Object)localvariable16779, (Object)SMB_at_put_, 2, (Object)constant22889, (Object)constant22890);
smallint8291 = (Object)new_Type_SmallInt(3);
constant22891 = (Object)new_AST_Constant((Object)smallint8291);
constant22892 = (Object)new_AST_Constant((Object)symbol22021);
// at:put:
send118458 = (Object)new_AST_Send((Object)localvariable16779, (Object)SMB_at_put_, 2, (Object)constant22891, (Object)constant22892);
smallint8292 = (Object)new_Type_SmallInt(4);
constant22893 = (Object)new_AST_Constant((Object)smallint8292);
constant22894 = (Object)new_AST_Constant((Object)symbol22025);
// at:put:
send118459 = (Object)new_AST_Send((Object)localvariable16779, (Object)SMB_at_put_, 2, (Object)constant22893, (Object)constant22894);
// yourself
send118460 = (Object)new_AST_Send((Object)localvariable16779, (Object)symbol21799, 0);
block7865 = (Object)new_AST_Block_with((Type_Array)array13336, (Type_Array)empty_Type_Array, 1, 5, send118456, send118457, send118458, send118459, send118460);
smallint8293 = (Object)new_Type_SmallInt(4);
constant22895 = (Object)new_AST_Constant((Object)smallint8293);
// new:
send118461 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant22895);
// value:
send118462 = (Object)new_AST_Send((Object)block7865, (Object)SMB_value_, 1, (Object)send118461);
method16003 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118462);
symbol22020 = (Object)new_Type_Symbol_cached(L"astSelectors");
methodclosure16001 = (Object)new_Runtime_MethodClosure(method16003);
store_method((Type_Class)class2768, (Type_Symbol)symbol22020, (Runtime_MethodClosure)methodclosure16001);


// ASTMethod>>printOn:
//printOn: aStream
// 	super printOn: aStream.
// 	aStream nextPutAll: '('.
// 	self message printOn: aStream.
// 	aStream nextPutAll: ')'.
localvariable16780 = (Object)new_AST_Variable_named(L"aStream");
array13337 = (Object)new_Type_Array_with(1, (Object)localvariable16780);
super1294 = (Object)new_AST_Super((Object)symbol21904, 1, (Object)localvariable16780);
string13399 = (Object)new_Type_String(L"(");
constant22896 = (Object)new_AST_Constant((Object)string13399);
// nextPutAll:
send118463 = (Object)new_AST_Send((Object)localvariable16780, (Object)symbol22174, 1, (Object)constant22896);
// message
send118464 = (Object)new_AST_Send((Object)Self, (Object)symbol22024, 0);
// printOn:
send118465 = (Object)new_AST_Send((Object)send118464, (Object)symbol21904, 1, (Object)localvariable16780);
string13400 = (Object)new_Type_String(L")");
constant22897 = (Object)new_AST_Constant((Object)string13400);
// nextPutAll:
send118466 = (Object)new_AST_Send((Object)localvariable16780, (Object)symbol22174, 1, (Object)constant22897);
method16004 = (Object)new_AST_Method_with((Type_Array)array13337, (Type_Array)empty_Type_Array, 5, super1294, send118463, send118465, send118466, Self);
methodclosure16002 = (Object)new_Runtime_MethodClosure(method16004);
store_method((Type_Class)class2768, (Type_Symbol)symbol21904, (Runtime_MethodClosure)methodclosure16002);


// ASTMethod>>message
//message
// 	^ message
method16005 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4051);
methodclosure16003 = (Object)new_Runtime_MethodClosure(method16005);
store_method((Type_Class)class2768, (Type_Symbol)symbol22024, (Runtime_MethodClosure)methodclosure16003);


// ASTMethod>>statements
//statements
// 	^ statements
method16006 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4054);
methodclosure16004 = (Object)new_Runtime_MethodClosure(method16006);
store_method((Type_Class)class2768, (Type_Symbol)symbol22021, (Runtime_MethodClosure)methodclosure16004);


// ASTMethod>>temporaries
//temporaries
// 	^ temporaries
method16007 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4053);
methodclosure16005 = (Object)new_Runtime_MethodClosure(method16007);
store_method((Type_Class)class2768, (Type_Symbol)symbol22025, (Runtime_MethodClosure)methodclosure16005);


// ASTMethod>>annotations
//annotations
// 	^ annotations
method16008 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4052);
methodclosure16006 = (Object)new_Runtime_MethodClosure(method16008);
store_method((Type_Class)class2768, (Type_Symbol)symbol22022, (Runtime_MethodClosure)methodclosure16006);


// ASTMethod>>temporaries:
//temporaries: anObject
// 	temporaries := anObject
localvariable16781 = (Object)new_AST_Variable_named(L"anObject");
array13338 = (Object)new_Type_Array_with(1, (Object)localvariable16781);
assign14547 = (Object)new_AST_Assign((Object)instancevariable4053, (Object)localvariable16781);
method16009 = (Object)new_AST_Method_with((Type_Array)array13338, (Type_Array)empty_Type_Array, 2, assign14547, Self);
methodclosure16007 = (Object)new_Runtime_MethodClosure(method16009);
store_method((Type_Class)class2768, (Type_Symbol)symbol22026, (Runtime_MethodClosure)methodclosure16007);


// ASTMethod>>statements:
//statements: anObject
// 	statements := anObject
localvariable16782 = (Object)new_AST_Variable_named(L"anObject");
array13339 = (Object)new_Type_Array_with(1, (Object)localvariable16782);
assign14548 = (Object)new_AST_Assign((Object)instancevariable4054, (Object)localvariable16782);
method16010 = (Object)new_AST_Method_with((Type_Array)array13339, (Type_Array)empty_Type_Array, 2, assign14548, Self);
methodclosure16008 = (Object)new_Runtime_MethodClosure(method16010);
store_method((Type_Class)class2768, (Type_Symbol)symbol22023, (Runtime_MethodClosure)methodclosure16008);


// ASTMethod>>message:
//message: anObject
// 	message := anObject
localvariable16783 = (Object)new_AST_Variable_named(L"anObject");
array13340 = (Object)new_Type_Array_with(1, (Object)localvariable16783);
assign14549 = (Object)new_AST_Assign((Object)instancevariable4051, (Object)localvariable16783);
method16011 = (Object)new_AST_Method_with((Type_Array)array13340, (Type_Array)empty_Type_Array, 2, assign14549, Self);
symbol22019 = (Object)new_Type_Symbol_cached(L"message:");
methodclosure16009 = (Object)new_Runtime_MethodClosure(method16011);
store_method((Type_Class)class2768, (Type_Symbol)symbol22019, (Runtime_MethodClosure)methodclosure16009);


// ASTMethod>>annotations:
//annotations: anObject
// 	annotations := anObject
localvariable16784 = (Object)new_AST_Variable_named(L"anObject");
array13341 = (Object)new_Type_Array_with(1, (Object)localvariable16784);
assign14550 = (Object)new_AST_Assign((Object)instancevariable4052, (Object)localvariable16784);
method16012 = (Object)new_AST_Method_with((Type_Array)array13341, (Type_Array)empty_Type_Array, 2, assign14550, Self);
symbol22027 = (Object)new_Type_Symbol_cached(L"annotations:");
methodclosure16010 = (Object)new_Runtime_MethodClosure(method16012);
store_method((Type_Class)class2768, (Type_Symbol)symbol22027, (Runtime_MethodClosure)methodclosure16010);

classreference3176 = (Object)new_Organization_ClassReference((Type_Class)class2769);

// SCParser>>preStoreMessageExpression
//preStoreMessageExpression
// 	^ parsers at: #messageExpression ifAbsentPut: [
// 		PEGParser named: 'MESSAGE-EXPRESSION'
// 	]
symbol22216 = (Object)new_Type_Symbol_cached(L"messageExpression");
constant22898 = (Object)new_AST_Constant((Object)symbol22216);
string13401 = (Object)new_Type_String(L"MESSAGE-EXPRESSION");
constant22899 = (Object)new_AST_Constant((Object)string13401);
// named:
send118467 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22133, 1, (Object)constant22899);
block7866 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118467);
// at:ifAbsentPut:
send118468 = (Object)new_AST_Send((Object)instancevariable4055, (Object)symbol22158, 2, (Object)constant22898, (Object)block7866);
method16013 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118468);
symbol22099 = (Object)new_Type_Symbol_cached(L"preStoreMessageExpression");
methodclosure16011 = (Object)new_Runtime_MethodClosure(method16013);
store_method((Type_Class)class2769, (Type_Symbol)symbol22099, (Runtime_MethodClosure)methodclosure16011);


// SCParser>>initializeUnaryMessageExpression
//initializeUnaryMessageExpression
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-EXPRESSION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryExpression new
// 				selector: selector.
// 		]
string13402 = (Object)new_Type_String(L"UNARY-MESSAGE-EXPRESSION");
constant22900 = (Object)new_AST_Constant((Object)string13402);
symbol22217 = (Object)new_Type_Symbol_cached(L"unarySelector");
// unarySelector
send118469 = (Object)new_AST_Send((Object)Self, (Object)symbol22217, 0);
localvariable16785 = (Object)new_AST_Variable_named(L"selector");
array13342 = (Object)new_Type_Array_with(1, (Object)localvariable16785);
// new
send118470 = (Object)new_AST_Send((Object)classreference3164, (Object)symbol21894, 0);
// selector:
send118471 = (Object)new_AST_Send((Object)send118470, (Object)symbol22010, 1, (Object)localvariable16785);
block7867 = (Object)new_AST_Block_with((Type_Array)array13342, (Type_Array)empty_Type_Array, 1, 1, send118471);
// named:parsing:semantics:
send118472 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22900, (Object)send118469, (Object)block7867);
method16014 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118472);
symbol22052 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageExpression");
methodclosure16012 = (Object)new_Runtime_MethodClosure(method16014);
store_method((Type_Class)class2769, (Type_Symbol)symbol22052, (Runtime_MethodClosure)methodclosure16012);


// SCParser>>initializeKeywordsArguments
//initializeKeywordsArguments
// 	| result |
// 	^ PEGParser 
// 		named: 'KEYWORDS-ARGUMENTS'
// 		parsing: (self keyword & self parameterName) plus
// 		semantics: [ :pairs | 
// 			result := ASTKeywordMessageDefinition new.
// 			pairs do: [ :pair | 
// 				result keywords add: pair first.
// 				result parameters add: (self createVariable: (pair at: 2))
// 			].
// 			result selector:  (ASTSymbol named: result selectorName).
// 			result 
// 		]
localvariable16786 = (Object)new_AST_Variable_named(L"result");
array13343 = (Object)new_Type_Array_with(1, (Object)localvariable16786);
string13403 = (Object)new_Type_String(L"KEYWORDS-ARGUMENTS");
constant22901 = (Object)new_AST_Constant((Object)string13403);
symbol22218 = (Object)new_Type_Symbol_cached(L"keyword");
// keyword
send118473 = (Object)new_AST_Send((Object)Self, (Object)symbol22218, 0);
symbol22219 = (Object)new_Type_Symbol_cached(L"parameterName");
// parameterName
send118474 = (Object)new_AST_Send((Object)Self, (Object)symbol22219, 0);
// &
send118475 = (Object)new_AST_Send((Object)send118473, (Object)SMB__and, 1, (Object)send118474);
// plus
send118476 = (Object)new_AST_Send((Object)send118475, (Object)symbol22126, 0);
localvariable16787 = (Object)new_AST_Variable_named(L"pairs");
array13344 = (Object)new_Type_Array_with(1, (Object)localvariable16787);
// new
send118477 = (Object)new_AST_Send((Object)classreference3148, (Object)symbol21894, 0);
assign14551 = (Object)new_AST_Assign((Object)localvariable16786, (Object)send118477);
localvariable16788 = (Object)new_AST_Variable_named(L"pair");
array13345 = (Object)new_Type_Array_with(1, (Object)localvariable16788);
// keywords
send118478 = (Object)new_AST_Send((Object)localvariable16786, (Object)symbol22016, 0);
// first
send118479 = (Object)new_AST_Send((Object)localvariable16788, (Object)symbol21970, 0);
// add:
send118480 = (Object)new_AST_Send((Object)send118478, (Object)symbol21973, 1, (Object)send118479);
// parameters
send118481 = (Object)new_AST_Send((Object)localvariable16786, (Object)symbol22011, 0);
symbol22046 = (Object)new_Type_Symbol_cached(L"createVariable:");
smallint8294 = (Object)new_Type_SmallInt(2);
constant22902 = (Object)new_AST_Constant((Object)smallint8294);
// at:
send118482 = (Object)new_AST_Send((Object)localvariable16788, (Object)SMB_at_, 1, (Object)constant22902);
// createVariable:
send118483 = (Object)new_AST_Send((Object)Self, (Object)symbol22046, 1, (Object)send118482);
// add:
send118484 = (Object)new_AST_Send((Object)send118481, (Object)symbol21973, 1, (Object)send118483);
block7868 = (Object)new_AST_Block_with((Type_Array)array13345, (Type_Array)empty_Type_Array, 2, 2, send118480, send118484);
// do:
send118485 = (Object)new_AST_Send((Object)localvariable16787, (Object)symbol21924, 1, (Object)block7868);
// selectorName
send118486 = (Object)new_AST_Send((Object)localvariable16786, (Object)symbol22009, 0);
// named:
send118487 = (Object)new_AST_Send((Object)classreference3155, (Object)symbol22133, 1, (Object)send118486);
// selector:
send118488 = (Object)new_AST_Send((Object)localvariable16786, (Object)symbol22010, 1, (Object)send118487);
block7869 = (Object)new_AST_Block_with((Type_Array)array13344, (Type_Array)empty_Type_Array, 1, 4, assign14551, send118485, send118488, localvariable16786);
// named:parsing:semantics:
send118489 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22901, (Object)send118476, (Object)block7869);
method16015 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13343, 1, send118489);
symbol22064 = (Object)new_Type_Symbol_cached(L"initializeKeywordsArguments");
methodclosure16013 = (Object)new_Runtime_MethodClosure(method16015);
store_method((Type_Class)class2769, (Type_Symbol)symbol22064, (Runtime_MethodClosure)methodclosure16013);


// SCParser>>initializeLetter
//initializeLetter
// 	^ (self lowercase | self uppercase)
symbol22220 = (Object)new_Type_Symbol_cached(L"lowercase");
// lowercase
send118490 = (Object)new_AST_Send((Object)Self, (Object)symbol22220, 0);
symbol22221 = (Object)new_Type_Symbol_cached(L"uppercase");
// uppercase
send118491 = (Object)new_AST_Send((Object)Self, (Object)symbol22221, 0);
// |
send118492 = (Object)new_AST_Send((Object)send118490, (Object)SMB__or, 1, (Object)send118491);
method16016 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118492);
symbol22092 = (Object)new_Type_Symbol_cached(L"initializeLetter");
methodclosure16014 = (Object)new_Runtime_MethodClosure(method16016);
store_method((Type_Class)class2769, (Type_Symbol)symbol22092, (Runtime_MethodClosure)methodclosure16014);


// SCParser>>initializeNumberConstant
//initializeNumberConstant
// 	" XXX For now. "
// 	^ PEGParser
// 		named: 'NUMBER'
// 		parsing: self decimalDigit plus
// 		semantics: [ :result |
// 			ASTNumber new number: (result inject: '' into: [:c :e | c, e] ); base: '10'
// 		]
string13404 = (Object)new_Type_String(L"NUMBER");
constant22903 = (Object)new_AST_Constant((Object)string13404);
symbol22222 = (Object)new_Type_Symbol_cached(L"decimalDigit");
// decimalDigit
send118493 = (Object)new_AST_Send((Object)Self, (Object)symbol22222, 0);
// plus
send118494 = (Object)new_AST_Send((Object)send118493, (Object)symbol22126, 0);
localvariable16789 = (Object)new_AST_Variable_named(L"result");
array13346 = (Object)new_Type_Array_with(1, (Object)localvariable16789);
localvariable16790 = (Object)new_AST_Variable_named(L"receiver");
array13347 = (Object)new_Type_Array_with(1, (Object)localvariable16790);
string13405 = (Object)new_Type_String(L"");
constant22904 = (Object)new_AST_Constant((Object)string13405);
localvariable16791 = (Object)new_AST_Variable_named(L"c");
localvariable16792 = (Object)new_AST_Variable_named(L"e");
array13348 = (Object)new_Type_Array_with(2, (Object)localvariable16791, (Object)localvariable16792);
// ,
send118495 = (Object)new_AST_Send((Object)localvariable16791, (Object)SMB__concat, 1, (Object)localvariable16792);
block7870 = (Object)new_AST_Block_with((Type_Array)array13348, (Type_Array)empty_Type_Array, 3, 1, send118495);
// inject:into:
send118496 = (Object)new_AST_Send((Object)localvariable16789, (Object)symbol21974, 2, (Object)constant22904, (Object)block7870);
// number:
send118497 = (Object)new_AST_Send((Object)localvariable16790, (Object)symbol21977, 1, (Object)send118496);
string13406 = (Object)new_Type_String(L"10");
constant22905 = (Object)new_AST_Constant((Object)string13406);
// base:
send118498 = (Object)new_AST_Send((Object)localvariable16790, (Object)symbol21982, 1, (Object)constant22905);
block7871 = (Object)new_AST_Block_with((Type_Array)array13347, (Type_Array)empty_Type_Array, 2, 2, send118497, send118498);
// new
send118499 = (Object)new_AST_Send((Object)classreference3150, (Object)symbol21894, 0);
// value:
send118500 = (Object)new_AST_Send((Object)block7871, (Object)SMB_value_, 1, (Object)send118499);
block7872 = (Object)new_AST_Block_with((Type_Array)array13346, (Type_Array)empty_Type_Array, 1, 1, send118500);
// named:parsing:semantics:
send118501 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22903, (Object)send118494, (Object)block7872);
method16017 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118501);
symbol22109 = (Object)new_Type_Symbol_cached(L"initializeNumberConstant");
methodclosure16015 = (Object)new_Runtime_MethodClosure(method16017);
store_method((Type_Class)class2769, (Type_Symbol)symbol22109, (Runtime_MethodClosure)methodclosure16015);


// SCParser>>initializeSymbolKeywords
//initializeSymbolKeywords
// 	^ PEGParser
// 		named: 'SYMBOL-KEYWORDS'
// 		parsing: self keyword strongPlus
// 		semantics: [ :result |
// 			result inject: '' into: [ :c :e | c, e, ':' ]
// 		]
string13407 = (Object)new_Type_String(L"SYMBOL-KEYWORDS");
constant22906 = (Object)new_AST_Constant((Object)string13407);
// keyword
send118502 = (Object)new_AST_Send((Object)Self, (Object)symbol22218, 0);
// strongPlus
send118503 = (Object)new_AST_Send((Object)send118502, (Object)symbol22122, 0);
localvariable16793 = (Object)new_AST_Variable_named(L"result");
array13349 = (Object)new_Type_Array_with(1, (Object)localvariable16793);
string13408 = (Object)new_Type_String(L"");
constant22907 = (Object)new_AST_Constant((Object)string13408);
localvariable16794 = (Object)new_AST_Variable_named(L"c");
localvariable16795 = (Object)new_AST_Variable_named(L"e");
array13350 = (Object)new_Type_Array_with(2, (Object)localvariable16794, (Object)localvariable16795);
// ,
send118504 = (Object)new_AST_Send((Object)localvariable16794, (Object)SMB__concat, 1, (Object)localvariable16795);
string13409 = (Object)new_Type_String(L":");
constant22908 = (Object)new_AST_Constant((Object)string13409);
// ,
send118505 = (Object)new_AST_Send((Object)send118504, (Object)SMB__concat, 1, (Object)constant22908);
block7873 = (Object)new_AST_Block_with((Type_Array)array13350, (Type_Array)empty_Type_Array, 2, 1, send118505);
// inject:into:
send118506 = (Object)new_AST_Send((Object)localvariable16793, (Object)symbol21974, 2, (Object)constant22907, (Object)block7873);
block7874 = (Object)new_AST_Block_with((Type_Array)array13349, (Type_Array)empty_Type_Array, 1, 1, send118506);
// named:parsing:semantics:
send118507 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22906, (Object)send118503, (Object)block7874);
method16018 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118507);
symbol22102 = (Object)new_Type_Symbol_cached(L"initializeSymbolKeywords");
methodclosure16016 = (Object)new_Runtime_MethodClosure(method16018);
store_method((Type_Class)class2769, (Type_Symbol)symbol22102, (Runtime_MethodClosure)methodclosure16016);


// SCParser>>createVariable:
//createVariable: name
// 	name = 'self' ifTrue: [ ^ASTSelf new].
// 	name = 'super' ifTrue: [ ^ASTSuper new].
// 	^ ASTVariable new name: name.
localvariable16796 = (Object)new_AST_Variable_named(L"name");
array13351 = (Object)new_Type_Array_with(1, (Object)localvariable16796);
variable937 = (Object)new_AST_Variable_named(L"return");
array13352 = (Object)new_Type_Array_with(1, (Object)variable937);
string13410 = (Object)new_Type_String(L"self");
constant22909 = (Object)new_AST_Constant((Object)string13410);
// =
send118508 = (Object)new_AST_Send((Object)localvariable16796, (Object)SMB__equal, 1, (Object)constant22909);
// new
send118509 = (Object)new_AST_Send((Object)classreference3174, (Object)symbol21894, 0);
// escape:
send118510 = (Object)new_AST_Send((Object)variable937, (Object)SMB_escape_, 1, (Object)send118509);
block7875 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118510);
// ifTrue:
send118511 = (Object)new_AST_Send((Object)send118508, (Object)SMB_ifTrue_, 1, (Object)block7875);
string13411 = (Object)new_Type_String(L"super");
constant22910 = (Object)new_AST_Constant((Object)string13411);
// =
send118512 = (Object)new_AST_Send((Object)localvariable16796, (Object)SMB__equal, 1, (Object)constant22910);
// new
send118513 = (Object)new_AST_Send((Object)classreference3172, (Object)symbol21894, 0);
// escape:
send118514 = (Object)new_AST_Send((Object)variable937, (Object)SMB_escape_, 1, (Object)send118513);
block7876 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118514);
// ifTrue:
send118515 = (Object)new_AST_Send((Object)send118512, (Object)SMB_ifTrue_, 1, (Object)block7876);
// new
send118516 = (Object)new_AST_Send((Object)classreference3173, (Object)symbol21894, 0);
// name:
send118517 = (Object)new_AST_Send((Object)send118516, (Object)symbol21999, 1, (Object)localvariable16796);
block7877 = (Object)new_AST_Block_with((Type_Array)array13352, (Type_Array)empty_Type_Array, 1, 3, send118511, send118515, send118517);
// on:
send118518 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7877);
method16019 = (Object)new_AST_Method_with((Type_Array)array13351, (Type_Array)empty_Type_Array, 1, send118518);
methodclosure16017 = (Object)new_Runtime_MethodClosure(method16019);
store_method((Type_Class)class2769, (Type_Symbol)symbol22046, (Runtime_MethodClosure)methodclosure16017);


// SCParser>>initializeCharacterConstant
//initializeCharacterConstant
// 	^ PEGParser
// 		named: 'CHARACTER-CONSTANT'
// 		parsing: (('$' asPEG omit: true) && (self character))
// 		semantics: [ :char |
// 			ASTCharacter new char: char first " get char from string containing only the char "
// 		]
string13412 = (Object)new_Type_String(L"CHARACTER-CONSTANT");
constant22911 = (Object)new_AST_Constant((Object)string13412);
string13413 = (Object)new_Type_String(L"$");
constant22912 = (Object)new_AST_Constant((Object)string13413);
// asPEG
send118519 = (Object)new_AST_Send((Object)constant22912, (Object)symbol21921, 0);
// omit:
send118520 = (Object)new_AST_Send((Object)send118519, (Object)symbol22123, 1, (Object)True_Const);
symbol22223 = (Object)new_Type_Symbol_cached(L"character");
// character
send118521 = (Object)new_AST_Send((Object)Self, (Object)symbol22223, 0);
// &&
send118522 = (Object)new_AST_Send((Object)send118520, (Object)symbol22116, 1, (Object)send118521);
localvariable16797 = (Object)new_AST_Variable_named(L"char");
array13353 = (Object)new_Type_Array_with(1, (Object)localvariable16797);
// new
send118523 = (Object)new_AST_Send((Object)classreference3167, (Object)symbol21894, 0);
// first
send118524 = (Object)new_AST_Send((Object)localvariable16797, (Object)symbol21970, 0);
// char:
send118525 = (Object)new_AST_Send((Object)send118523, (Object)symbol22142, 1, (Object)send118524);
block7878 = (Object)new_AST_Block_with((Type_Array)array13353, (Type_Array)empty_Type_Array, 1, 1, send118525);
// named:parsing:semantics:
send118526 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22911, (Object)send118522, (Object)block7878);
method16020 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118526);
symbol22074 = (Object)new_Type_Symbol_cached(L"initializeCharacterConstant");
methodclosure16018 = (Object)new_Runtime_MethodClosure(method16020);
store_method((Type_Class)class2769, (Type_Symbol)symbol22074, (Runtime_MethodClosure)methodclosure16018);


// SCParser>>injectCascadedMessageExpression
//injectCascadedMessageExpression
// 	^ self cascadedMessageExpression
// 		<= (self messageExpression &
// 			((';' asPEG omit: true) & 
// 				((self keywordMessageExpression
// 					| self binaryMessageExpression)
// 					<= self unaryMessageExpression)) plus);
// 					
// 		semantics: [:parts |
// 			(parts at: 2) addFirst: parts first.
// 			ASTMessageCascadeExpression new
// 				receiver: (parts first) receiver;
// 				cascades: (parts at: 2)
// 		]
localvariable16798 = (Object)new_AST_Variable_named(L"receiver");
array13354 = (Object)new_Type_Array_with(1, (Object)localvariable16798);
string13414 = (Object)new_Type_String(L";");
constant22913 = (Object)new_AST_Constant((Object)string13414);
// asPEG
send118527 = (Object)new_AST_Send((Object)constant22913, (Object)symbol21921, 0);
// omit:
send118528 = (Object)new_AST_Send((Object)send118527, (Object)symbol22123, 1, (Object)True_Const);
symbol22224 = (Object)new_Type_Symbol_cached(L"keywordMessageExpression");
// keywordMessageExpression
send118529 = (Object)new_AST_Send((Object)Self, (Object)symbol22224, 0);
symbol22225 = (Object)new_Type_Symbol_cached(L"binaryMessageExpression");
// binaryMessageExpression
send118530 = (Object)new_AST_Send((Object)Self, (Object)symbol22225, 0);
// |
send118531 = (Object)new_AST_Send((Object)send118529, (Object)SMB__or, 1, (Object)send118530);
// &
send118532 = (Object)new_AST_Send((Object)send118528, (Object)SMB__and, 1, (Object)send118531);
symbol22226 = (Object)new_Type_Symbol_cached(L"unaryMessageExpression");
// unaryMessageExpression
send118533 = (Object)new_AST_Send((Object)Self, (Object)symbol22226, 0);
// <=
send118534 = (Object)new_AST_Send((Object)send118532, (Object)symbol21930, 1, (Object)send118533);
// plus
send118535 = (Object)new_AST_Send((Object)send118534, (Object)symbol22126, 0);
// &
send118536 = (Object)new_AST_Send((Object)localvariable16798, (Object)SMB__and, 1, (Object)send118535);
localvariable16799 = (Object)new_AST_Variable_named(L"parts");
array13355 = (Object)new_Type_Array_with(1, (Object)localvariable16799);
smallint8295 = (Object)new_Type_SmallInt(2);
constant22914 = (Object)new_AST_Constant((Object)smallint8295);
// at:
send118537 = (Object)new_AST_Send((Object)localvariable16799, (Object)SMB_at_, 1, (Object)constant22914);
symbol22227 = (Object)new_Type_Symbol_cached(L"addFirst:");
// first
send118538 = (Object)new_AST_Send((Object)localvariable16799, (Object)symbol21970, 0);
// addFirst:
send118539 = (Object)new_AST_Send((Object)send118537, (Object)symbol22227, 1, (Object)send118538);
localvariable16800 = (Object)new_AST_Variable_named(L"receiver");
array13356 = (Object)new_Type_Array_with(1, (Object)localvariable16800);
// first
send118540 = (Object)new_AST_Send((Object)localvariable16799, (Object)symbol21970, 0);
// receiver
send118541 = (Object)new_AST_Send((Object)send118540, (Object)symbol22006, 0);
// receiver:
send118542 = (Object)new_AST_Send((Object)localvariable16800, (Object)symbol22004, 1, (Object)send118541);
smallint8296 = (Object)new_Type_SmallInt(2);
constant22915 = (Object)new_AST_Constant((Object)smallint8296);
// at:
send118543 = (Object)new_AST_Send((Object)localvariable16799, (Object)SMB_at_, 1, (Object)constant22915);
// cascades:
send118544 = (Object)new_AST_Send((Object)localvariable16800, (Object)symbol22005, 1, (Object)send118543);
block7879 = (Object)new_AST_Block_with((Type_Array)array13356, (Type_Array)empty_Type_Array, 3, 2, send118542, send118544);
// new
send118545 = (Object)new_AST_Send((Object)classreference3149, (Object)symbol21894, 0);
// value:
send118546 = (Object)new_AST_Send((Object)block7879, (Object)SMB_value_, 1, (Object)send118545);
block7880 = (Object)new_AST_Block_with((Type_Array)array13355, (Type_Array)empty_Type_Array, 2, 2, send118539, send118546);
// semantics:
send118547 = (Object)new_AST_Send((Object)localvariable16798, (Object)symbol22139, 1, (Object)block7880);
block7881 = (Object)new_AST_Block_with((Type_Array)array13354, (Type_Array)empty_Type_Array, 1, 2, send118536, send118547);
symbol22228 = (Object)new_Type_Symbol_cached(L"cascadedMessageExpression");
// cascadedMessageExpression
send118548 = (Object)new_AST_Send((Object)Self, (Object)symbol22228, 0);
// messageExpression
send118549 = (Object)new_AST_Send((Object)Self, (Object)symbol22216, 0);
// <=
send118550 = (Object)new_AST_Send((Object)send118548, (Object)symbol21930, 1, (Object)send118549);
// value:
send118551 = (Object)new_AST_Send((Object)block7881, (Object)SMB_value_, 1, (Object)send118550);
method16021 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118551);
symbol22086 = (Object)new_Type_Symbol_cached(L"injectCascadedMessageExpression");
methodclosure16019 = (Object)new_Runtime_MethodClosure(method16021);
store_method((Type_Class)class2769, (Type_Symbol)symbol22086, (Runtime_MethodClosure)methodclosure16019);


// SCParser>>symbols
//symbols
// 	^ symbols
method16022 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable4057);
symbol22056 = (Object)new_Type_Symbol_cached(L"symbols");
methodclosure16020 = (Object)new_Runtime_MethodClosure(method16022);
store_method((Type_Class)class2769, (Type_Symbol)symbol22056, (Runtime_MethodClosure)methodclosure16020);


// SCParser>>initializeBinaryMessageDefinition
//initializeBinaryMessageDefinition
// 	^ PEGParser
// 		named: 'BINARY-ARGUMENT'
// 		parsing: (self binarySelector & self parameterName)
// 		semantics: [:result |
// 			ASTBinaryMessageDefinition new
// 				selector: (self createSymbol: (result first));
// 				parameter: (self createVariable: (result at: 2))
// 		]
string13415 = (Object)new_Type_String(L"BINARY-ARGUMENT");
constant22916 = (Object)new_AST_Constant((Object)string13415);
symbol22229 = (Object)new_Type_Symbol_cached(L"binarySelector");
// binarySelector
send118552 = (Object)new_AST_Send((Object)Self, (Object)symbol22229, 0);
// parameterName
send118553 = (Object)new_AST_Send((Object)Self, (Object)symbol22219, 0);
// &
send118554 = (Object)new_AST_Send((Object)send118552, (Object)SMB__and, 1, (Object)send118553);
localvariable16801 = (Object)new_AST_Variable_named(L"result");
array13357 = (Object)new_Type_Array_with(1, (Object)localvariable16801);
localvariable16802 = (Object)new_AST_Variable_named(L"receiver");
array13358 = (Object)new_Type_Array_with(1, (Object)localvariable16802);
symbol22041 = (Object)new_Type_Symbol_cached(L"createSymbol:");
// first
send118555 = (Object)new_AST_Send((Object)localvariable16801, (Object)symbol21970, 0);
// createSymbol:
send118556 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)send118555);
// selector:
send118557 = (Object)new_AST_Send((Object)localvariable16802, (Object)symbol22010, 1, (Object)send118556);
smallint8297 = (Object)new_Type_SmallInt(2);
constant22917 = (Object)new_AST_Constant((Object)smallint8297);
// at:
send118558 = (Object)new_AST_Send((Object)localvariable16801, (Object)SMB_at_, 1, (Object)constant22917);
// createVariable:
send118559 = (Object)new_AST_Send((Object)Self, (Object)symbol22046, 1, (Object)send118558);
// parameter:
send118560 = (Object)new_AST_Send((Object)localvariable16802, (Object)symbol22028, 1, (Object)send118559);
block7882 = (Object)new_AST_Block_with((Type_Array)array13358, (Type_Array)empty_Type_Array, 2, 2, send118557, send118560);
// new
send118561 = (Object)new_AST_Send((Object)classreference3156, (Object)symbol21894, 0);
// value:
send118562 = (Object)new_AST_Send((Object)block7882, (Object)SMB_value_, 1, (Object)send118561);
block7883 = (Object)new_AST_Block_with((Type_Array)array13357, (Type_Array)empty_Type_Array, 1, 1, send118562);
// named:parsing:semantics:
send118563 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22916, (Object)send118554, (Object)block7883);
method16023 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118563);
symbol22068 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageDefinition");
methodclosure16021 = (Object)new_Runtime_MethodClosure(method16023);
store_method((Type_Class)class2769, (Type_Symbol)symbol22068, (Runtime_MethodClosure)methodclosure16021);


// SCParser>>initializeCommentFormat
//initializeCommentFormat
// 	| commentBorder |
// 	commentBorder := '"' asPEG.
// 	^ (commentBorder && ((commentBorder not) strongTimes)) <& commentBorder
localvariable16803 = (Object)new_AST_Variable_named(L"commentBorder");
array13359 = (Object)new_Type_Array_with(1, (Object)localvariable16803);
string13416 = (Object)new_Type_String(L"\"");
constant22918 = (Object)new_AST_Constant((Object)string13416);
// asPEG
send118564 = (Object)new_AST_Send((Object)constant22918, (Object)symbol21921, 0);
assign14552 = (Object)new_AST_Assign((Object)localvariable16803, (Object)send118564);
// not
send118565 = (Object)new_AST_Send((Object)localvariable16803, (Object)SMB_not, 0);
// strongTimes
send118566 = (Object)new_AST_Send((Object)send118565, (Object)symbol22117, 0);
// &&
send118567 = (Object)new_AST_Send((Object)localvariable16803, (Object)symbol22116, 1, (Object)send118566);
// <&
send118568 = (Object)new_AST_Send((Object)send118567, (Object)symbol22165, 1, (Object)localvariable16803);
method16024 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13359, 2, assign14552, send118568);
symbol22096 = (Object)new_Type_Symbol_cached(L"initializeCommentFormat");
methodclosure16022 = (Object)new_Runtime_MethodClosure(method16024);
store_method((Type_Class)class2769, (Type_Symbol)symbol22096, (Runtime_MethodClosure)methodclosure16022);


// SCParser>>initializeBinaryExpression
//initializeBinaryExpression
// 	
// 	self preStoreBinaryObjectDescription.
// 	
// 	parsers at: #binaryExpression ifAbsentPut: (
// 	PEGParser
// 		named: 'BINARY-EXPRESSION'
// 		parsing: (self unaryObjectDescription & self binarySelector <& self binaryObjectDescription)
// 		semantics: [:parts |
// 			(parts at: 3)
// 				argumentOfBinary: (ASTBinaryExpression new
// 					receiver: (parts first);
// 					selector: (ASTBinarySelector new
// 						selector: (self createSymbol: (parts at: 2))))
// 		]
// 	).
// 	
// 	self injectBinaryObjectDescription.
// 	
// 	^ self binaryExpression
symbol22040 = (Object)new_Type_Symbol_cached(L"preStoreBinaryObjectDescription");
// preStoreBinaryObjectDescription
send118569 = (Object)new_AST_Send((Object)Self, (Object)symbol22040, 0);
symbol22230 = (Object)new_Type_Symbol_cached(L"binaryExpression");
constant22919 = (Object)new_AST_Constant((Object)symbol22230);
string13417 = (Object)new_Type_String(L"BINARY-EXPRESSION");
constant22920 = (Object)new_AST_Constant((Object)string13417);
symbol22231 = (Object)new_Type_Symbol_cached(L"unaryObjectDescription");
// unaryObjectDescription
send118570 = (Object)new_AST_Send((Object)Self, (Object)symbol22231, 0);
// binarySelector
send118571 = (Object)new_AST_Send((Object)Self, (Object)symbol22229, 0);
// &
send118572 = (Object)new_AST_Send((Object)send118570, (Object)SMB__and, 1, (Object)send118571);
symbol22232 = (Object)new_Type_Symbol_cached(L"binaryObjectDescription");
// binaryObjectDescription
send118573 = (Object)new_AST_Send((Object)Self, (Object)symbol22232, 0);
// <&
send118574 = (Object)new_AST_Send((Object)send118572, (Object)symbol22165, 1, (Object)send118573);
localvariable16804 = (Object)new_AST_Variable_named(L"parts");
array13360 = (Object)new_Type_Array_with(1, (Object)localvariable16804);
smallint8298 = (Object)new_Type_SmallInt(3);
constant22921 = (Object)new_AST_Constant((Object)smallint8298);
// at:
send118575 = (Object)new_AST_Send((Object)localvariable16804, (Object)SMB_at_, 1, (Object)constant22921);
localvariable16805 = (Object)new_AST_Variable_named(L"receiver");
array13361 = (Object)new_Type_Array_with(1, (Object)localvariable16805);
// first
send118576 = (Object)new_AST_Send((Object)localvariable16804, (Object)symbol21970, 0);
// receiver:
send118577 = (Object)new_AST_Send((Object)localvariable16805, (Object)symbol22004, 1, (Object)send118576);
// new
send118578 = (Object)new_AST_Send((Object)classreference3166, (Object)symbol21894, 0);
smallint8299 = (Object)new_Type_SmallInt(2);
constant22922 = (Object)new_AST_Constant((Object)smallint8299);
// at:
send118579 = (Object)new_AST_Send((Object)localvariable16804, (Object)SMB_at_, 1, (Object)constant22922);
// createSymbol:
send118580 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)send118579);
// selector:
send118581 = (Object)new_AST_Send((Object)send118578, (Object)symbol22010, 1, (Object)send118580);
// selector:
send118582 = (Object)new_AST_Send((Object)localvariable16805, (Object)symbol22010, 1, (Object)send118581);
block7884 = (Object)new_AST_Block_with((Type_Array)array13361, (Type_Array)empty_Type_Array, 2, 2, send118577, send118582);
// new
send118583 = (Object)new_AST_Send((Object)classreference3154, (Object)symbol21894, 0);
// value:
send118584 = (Object)new_AST_Send((Object)block7884, (Object)SMB_value_, 1, (Object)send118583);
// argumentOfBinary:
send118585 = (Object)new_AST_Send((Object)send118575, (Object)symbol21958, 1, (Object)send118584);
block7885 = (Object)new_AST_Block_with((Type_Array)array13360, (Type_Array)empty_Type_Array, 1, 1, send118585);
// named:parsing:semantics:
send118586 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22920, (Object)send118574, (Object)block7885);
// at:ifAbsentPut:
send118587 = (Object)new_AST_Send((Object)instancevariable4055, (Object)symbol22158, 2, (Object)constant22919, (Object)send118586);
symbol22039 = (Object)new_Type_Symbol_cached(L"injectBinaryObjectDescription");
// injectBinaryObjectDescription
send118588 = (Object)new_AST_Send((Object)Self, (Object)symbol22039, 0);
// binaryExpression
send118589 = (Object)new_AST_Send((Object)Self, (Object)symbol22230, 0);
method16025 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 4, send118569, send118587, send118588, send118589);
symbol22038 = (Object)new_Type_Symbol_cached(L"initializeBinaryExpression");
methodclosure16023 = (Object)new_Runtime_MethodClosure(method16025);
store_method((Type_Class)class2769, (Type_Symbol)symbol22038, (Runtime_MethodClosure)methodclosure16023);


// SCParser>>initializeStatements
//initializeStatements
// 	^ PEGParser
// 		named: 'STATEMENTS'
// 		
// 		parsing: self subExpression times & (self return | self finalExpression) optional
// 		
// 		semantics: [ :result |
// 			(result at: 2) ifMatched: [ :exp | (result first) add: exp  ].
// 			result first
// 		]
string13418 = (Object)new_Type_String(L"STATEMENTS");
constant22923 = (Object)new_AST_Constant((Object)string13418);
symbol22233 = (Object)new_Type_Symbol_cached(L"subExpression");
// subExpression
send118590 = (Object)new_AST_Send((Object)Self, (Object)symbol22233, 0);
// times
send118591 = (Object)new_AST_Send((Object)send118590, (Object)symbol22115, 0);
symbol22234 = (Object)new_Type_Symbol_cached(L"return");
// return
send118592 = (Object)new_AST_Send((Object)Self, (Object)symbol22234, 0);
symbol22235 = (Object)new_Type_Symbol_cached(L"finalExpression");
// finalExpression
send118593 = (Object)new_AST_Send((Object)Self, (Object)symbol22235, 0);
// |
send118594 = (Object)new_AST_Send((Object)send118592, (Object)SMB__or, 1, (Object)send118593);
// optional
send118595 = (Object)new_AST_Send((Object)send118594, (Object)symbol22119, 0);
// &
send118596 = (Object)new_AST_Send((Object)send118591, (Object)SMB__and, 1, (Object)send118595);
localvariable16806 = (Object)new_AST_Variable_named(L"result");
array13362 = (Object)new_Type_Array_with(1, (Object)localvariable16806);
smallint8300 = (Object)new_Type_SmallInt(2);
constant22924 = (Object)new_AST_Constant((Object)smallint8300);
// at:
send118597 = (Object)new_AST_Send((Object)localvariable16806, (Object)SMB_at_, 1, (Object)constant22924);
localvariable16807 = (Object)new_AST_Variable_named(L"exp");
array13363 = (Object)new_Type_Array_with(1, (Object)localvariable16807);
// first
send118598 = (Object)new_AST_Send((Object)localvariable16806, (Object)symbol21970, 0);
// add:
send118599 = (Object)new_AST_Send((Object)send118598, (Object)symbol21973, 1, (Object)localvariable16807);
block7886 = (Object)new_AST_Block_with((Type_Array)array13363, (Type_Array)empty_Type_Array, 2, 1, send118599);
// ifMatched:
send118600 = (Object)new_AST_Send((Object)send118597, (Object)symbol22170, 1, (Object)block7886);
// first
send118601 = (Object)new_AST_Send((Object)localvariable16806, (Object)symbol21970, 0);
block7887 = (Object)new_AST_Block_with((Type_Array)array13362, (Type_Array)empty_Type_Array, 1, 2, send118600, send118601);
// named:parsing:semantics:
send118602 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22923, (Object)send118596, (Object)block7887);
method16026 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118602);
symbol22061 = (Object)new_Type_Symbol_cached(L"initializeStatements");
methodclosure16024 = (Object)new_Runtime_MethodClosure(method16026);
store_method((Type_Class)class2769, (Type_Symbol)symbol22061, (Runtime_MethodClosure)methodclosure16024);


// SCParser>>initializeIdentifier
//initializeIdentifier
// 	^ PEGParser
// 		named: 'IDENTIFIER'
// 		parsing: (self letter && (self letter | self decimalDigit) strongTimes)
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string13419 = (Object)new_Type_String(L"IDENTIFIER");
constant22925 = (Object)new_AST_Constant((Object)string13419);
symbol22236 = (Object)new_Type_Symbol_cached(L"letter");
// letter
send118603 = (Object)new_AST_Send((Object)Self, (Object)symbol22236, 0);
// letter
send118604 = (Object)new_AST_Send((Object)Self, (Object)symbol22236, 0);
// decimalDigit
send118605 = (Object)new_AST_Send((Object)Self, (Object)symbol22222, 0);
// |
send118606 = (Object)new_AST_Send((Object)send118604, (Object)SMB__or, 1, (Object)send118605);
// strongTimes
send118607 = (Object)new_AST_Send((Object)send118606, (Object)symbol22117, 0);
// &&
send118608 = (Object)new_AST_Send((Object)send118603, (Object)symbol22116, 1, (Object)send118607);
localvariable16808 = (Object)new_AST_Variable_named(L"result");
array13364 = (Object)new_Type_Array_with(1, (Object)localvariable16808);
symbol22237 = (Object)new_Type_Symbol_cached(L"second");
// second
send118609 = (Object)new_AST_Send((Object)localvariable16808, (Object)symbol22237, 0);
// first
send118610 = (Object)new_AST_Send((Object)localvariable16808, (Object)symbol21970, 0);
localvariable16809 = (Object)new_AST_Variable_named(L"c");
localvariable16810 = (Object)new_AST_Variable_named(L"e");
array13365 = (Object)new_Type_Array_with(2, (Object)localvariable16809, (Object)localvariable16810);
// ,
send118611 = (Object)new_AST_Send((Object)localvariable16809, (Object)SMB__concat, 1, (Object)localvariable16810);
block7888 = (Object)new_AST_Block_with((Type_Array)array13365, (Type_Array)empty_Type_Array, 2, 1, send118611);
// inject:into:
send118612 = (Object)new_AST_Send((Object)send118609, (Object)symbol21974, 2, (Object)send118610, (Object)block7888);
block7889 = (Object)new_AST_Block_with((Type_Array)array13364, (Type_Array)empty_Type_Array, 1, 1, send118612);
// named:parsing:semantics:
send118613 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22925, (Object)send118608, (Object)block7889);
method16027 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118613);
symbol22106 = (Object)new_Type_Symbol_cached(L"initializeIdentifier");
methodclosure16025 = (Object)new_Runtime_MethodClosure(method16027);
store_method((Type_Class)class2769, (Type_Symbol)symbol22106, (Runtime_MethodClosure)methodclosure16025);


// SCParser>>injectMessageExpression
//injectMessageExpression
// 	^ self messageExpression
// 		<= (self keywordExpression | self binaryExpression <= self unaryExpression)
// messageExpression
send118614 = (Object)new_AST_Send((Object)Self, (Object)symbol22216, 0);
symbol22238 = (Object)new_Type_Symbol_cached(L"keywordExpression");
// keywordExpression
send118615 = (Object)new_AST_Send((Object)Self, (Object)symbol22238, 0);
// binaryExpression
send118616 = (Object)new_AST_Send((Object)Self, (Object)symbol22230, 0);
// |
send118617 = (Object)new_AST_Send((Object)send118615, (Object)SMB__or, 1, (Object)send118616);
// <=
send118618 = (Object)new_AST_Send((Object)send118614, (Object)symbol21930, 1, (Object)send118617);
symbol22239 = (Object)new_Type_Symbol_cached(L"unaryExpression");
// unaryExpression
send118619 = (Object)new_AST_Send((Object)Self, (Object)symbol22239, 0);
// <=
send118620 = (Object)new_AST_Send((Object)send118618, (Object)symbol21930, 1, (Object)send118619);
method16028 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118620);
symbol22078 = (Object)new_Type_Symbol_cached(L"injectMessageExpression");
methodclosure16026 = (Object)new_Runtime_MethodClosure(method16028);
store_method((Type_Class)class2769, (Type_Symbol)symbol22078, (Runtime_MethodClosure)methodclosure16026);


// SCParser>>initializeLowercase
//initializeLowercase
// 	^ ('a-z' asPEGRange)
string13420 = (Object)new_Type_String(L"a-z");
constant22926 = (Object)new_AST_Constant((Object)string13420);
// asPEGRange
send118621 = (Object)new_AST_Send((Object)constant22926, (Object)symbol21918, 0);
method16029 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118621);
symbol22043 = (Object)new_Type_Symbol_cached(L"initializeLowercase");
methodclosure16027 = (Object)new_Runtime_MethodClosure(method16029);
store_method((Type_Class)class2769, (Type_Symbol)symbol22043, (Runtime_MethodClosure)methodclosure16027);


// SCParser>>initializeTemporaries
//initializeTemporaries
// 	^ PEGParser
// 		named: 'TEMPORARIES'
// 		parsing: (self bar & self variableName times <& self bar)
string13421 = (Object)new_Type_String(L"TEMPORARIES");
constant22927 = (Object)new_AST_Constant((Object)string13421);
symbol22240 = (Object)new_Type_Symbol_cached(L"bar");
// bar
send118622 = (Object)new_AST_Send((Object)Self, (Object)symbol22240, 0);
symbol22241 = (Object)new_Type_Symbol_cached(L"variableName");
// variableName
send118623 = (Object)new_AST_Send((Object)Self, (Object)symbol22241, 0);
// times
send118624 = (Object)new_AST_Send((Object)send118623, (Object)symbol22115, 0);
// &
send118625 = (Object)new_AST_Send((Object)send118622, (Object)SMB__and, 1, (Object)send118624);
// bar
send118626 = (Object)new_AST_Send((Object)Self, (Object)symbol22240, 0);
// <&
send118627 = (Object)new_AST_Send((Object)send118625, (Object)symbol22165, 1, (Object)send118626);
// named:parsing:
send118628 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22136, 2, (Object)constant22927, (Object)send118627);
method16030 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118628);
symbol22071 = (Object)new_Type_Symbol_cached(L"initializeTemporaries");
methodclosure16028 = (Object)new_Runtime_MethodClosure(method16030);
store_method((Type_Class)class2769, (Type_Symbol)symbol22071, (Runtime_MethodClosure)methodclosure16028);


// SCParser>>initializeSubExpression
//initializeSubExpression
// 	^ self expression & ('.' asPEG omit: true)
// expression
send118629 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
string13422 = (Object)new_Type_String(L".");
constant22928 = (Object)new_AST_Constant((Object)string13422);
// asPEG
send118630 = (Object)new_AST_Send((Object)constant22928, (Object)symbol21921, 0);
// omit:
send118631 = (Object)new_AST_Send((Object)send118630, (Object)symbol22123, 1, (Object)True_Const);
// &
send118632 = (Object)new_AST_Send((Object)send118629, (Object)SMB__and, 1, (Object)send118631);
method16031 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118632);
symbol22083 = (Object)new_Type_Symbol_cached(L"initializeSubExpression");
methodclosure16029 = (Object)new_Runtime_MethodClosure(method16031);
store_method((Type_Class)class2769, (Type_Symbol)symbol22083, (Runtime_MethodClosure)methodclosure16029);


// SCParser>>initializeBinaryMessageExpression
//initializeBinaryMessageExpression
// 	^ PEGParser
// 		named: 'BINARY-MESSAGE-EXPRESSION'
// 		parsing: (self binarySelector & (self unaryObjectDescription))
// 		semantics: [ :parts |
// 			ASTBinaryExpression new
// 				selector: (self createSymbol: (parts first));
// 				argument: (parts at: 2)
// 		]
string13423 = (Object)new_Type_String(L"BINARY-MESSAGE-EXPRESSION");
constant22929 = (Object)new_AST_Constant((Object)string13423);
// binarySelector
send118633 = (Object)new_AST_Send((Object)Self, (Object)symbol22229, 0);
// unaryObjectDescription
send118634 = (Object)new_AST_Send((Object)Self, (Object)symbol22231, 0);
// &
send118635 = (Object)new_AST_Send((Object)send118633, (Object)SMB__and, 1, (Object)send118634);
localvariable16811 = (Object)new_AST_Variable_named(L"parts");
array13366 = (Object)new_Type_Array_with(1, (Object)localvariable16811);
localvariable16812 = (Object)new_AST_Variable_named(L"receiver");
array13367 = (Object)new_Type_Array_with(1, (Object)localvariable16812);
// first
send118636 = (Object)new_AST_Send((Object)localvariable16811, (Object)symbol21970, 0);
// createSymbol:
send118637 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)send118636);
// selector:
send118638 = (Object)new_AST_Send((Object)localvariable16812, (Object)symbol22010, 1, (Object)send118637);
smallint8301 = (Object)new_Type_SmallInt(2);
constant22930 = (Object)new_AST_Constant((Object)smallint8301);
// at:
send118639 = (Object)new_AST_Send((Object)localvariable16811, (Object)SMB_at_, 1, (Object)constant22930);
// argument:
send118640 = (Object)new_AST_Send((Object)localvariable16812, (Object)symbol22013, 1, (Object)send118639);
block7890 = (Object)new_AST_Block_with((Type_Array)array13367, (Type_Array)empty_Type_Array, 2, 2, send118638, send118640);
// new
send118641 = (Object)new_AST_Send((Object)classreference3154, (Object)symbol21894, 0);
// value:
send118642 = (Object)new_AST_Send((Object)block7890, (Object)SMB_value_, 1, (Object)send118641);
block7891 = (Object)new_AST_Block_with((Type_Array)array13366, (Type_Array)empty_Type_Array, 1, 1, send118642);
// named:parsing:semantics:
send118643 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22929, (Object)send118635, (Object)block7891);
method16032 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118643);
symbol22053 = (Object)new_Type_Symbol_cached(L"initializeBinaryMessageExpression");
methodclosure16030 = (Object)new_Runtime_MethodClosure(method16032);
store_method((Type_Class)class2769, (Type_Symbol)symbol22053, (Runtime_MethodClosure)methodclosure16030);


// SCParser>>initializeReturn
//initializeReturn
// 	^ PEGParser
// 		named: 'RETURN'
// 		parsing: ('^' asPEG omit: true) & self finalExpression
// 		semantics: [ :expression |
// 			ASTReturnExpression new expression: expression
// 		]
string13424 = (Object)new_Type_String(L"RETURN");
constant22931 = (Object)new_AST_Constant((Object)string13424);
string13425 = (Object)new_Type_String(L"^");
constant22932 = (Object)new_AST_Constant((Object)string13425);
// asPEG
send118644 = (Object)new_AST_Send((Object)constant22932, (Object)symbol21921, 0);
// omit:
send118645 = (Object)new_AST_Send((Object)send118644, (Object)symbol22123, 1, (Object)True_Const);
// finalExpression
send118646 = (Object)new_AST_Send((Object)Self, (Object)symbol22235, 0);
// &
send118647 = (Object)new_AST_Send((Object)send118645, (Object)SMB__and, 1, (Object)send118646);
localvariable16813 = (Object)new_AST_Variable_named(L"expression");
array13368 = (Object)new_Type_Array_with(1, (Object)localvariable16813);
// new
send118648 = (Object)new_AST_Send((Object)classreference3158, (Object)symbol21894, 0);
// expression:
send118649 = (Object)new_AST_Send((Object)send118648, (Object)symbol22032, 1, (Object)localvariable16813);
block7892 = (Object)new_AST_Block_with((Type_Array)array13368, (Type_Array)empty_Type_Array, 1, 1, send118649);
// named:parsing:semantics:
send118650 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22931, (Object)send118647, (Object)block7892);
method16033 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118650);
symbol22065 = (Object)new_Type_Symbol_cached(L"initializeReturn");
methodclosure16031 = (Object)new_Runtime_MethodClosure(method16033);
store_method((Type_Class)class2769, (Type_Symbol)symbol22065, (Runtime_MethodClosure)methodclosure16031);


// SCParser>>initializeVariableName
//initializeVariableName
// 	^ PEGParser
// 		named: 'VARIABLE-NAME'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result]
string13426 = (Object)new_Type_String(L"VARIABLE-NAME");
constant22933 = (Object)new_AST_Constant((Object)string13426);
symbol22242 = (Object)new_Type_Symbol_cached(L"identifier");
// identifier
send118651 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
localvariable16814 = (Object)new_AST_Variable_named(L"result");
array13369 = (Object)new_Type_Array_with(1, (Object)localvariable16814);
// createVariable:
send118652 = (Object)new_AST_Send((Object)Self, (Object)symbol22046, 1, (Object)localvariable16814);
block7893 = (Object)new_AST_Block_with((Type_Array)array13369, (Type_Array)empty_Type_Array, 1, 1, send118652);
// named:parsing:semantics:
send118653 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22933, (Object)send118651, (Object)block7893);
method16034 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118653);
symbol22103 = (Object)new_Type_Symbol_cached(L"initializeVariableName");
methodclosure16032 = (Object)new_Runtime_MethodClosure(method16034);
store_method((Type_Class)class2769, (Type_Symbol)symbol22103, (Runtime_MethodClosure)methodclosure16032);


// SCParser>>initializeFinalExpression
//initializeFinalExpression
// 	^ self expression & ('.' asPEG optional omit: true)
// expression
send118654 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
string13427 = (Object)new_Type_String(L".");
constant22934 = (Object)new_AST_Constant((Object)string13427);
// asPEG
send118655 = (Object)new_AST_Send((Object)constant22934, (Object)symbol21921, 0);
// optional
send118656 = (Object)new_AST_Send((Object)send118655, (Object)symbol22119, 0);
// omit:
send118657 = (Object)new_AST_Send((Object)send118656, (Object)symbol22123, 1, (Object)True_Const);
// &
send118658 = (Object)new_AST_Send((Object)send118654, (Object)SMB__and, 1, (Object)send118657);
method16035 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118658);
symbol22075 = (Object)new_Type_Symbol_cached(L"initializeFinalExpression");
methodclosure16033 = (Object)new_Runtime_MethodClosure(method16035);
store_method((Type_Class)class2769, (Type_Symbol)symbol22075, (Runtime_MethodClosure)methodclosure16033);


// SCParser>>initializeCapitalIdentifier
//initializeCapitalIdentifier
// 	^ PEGParser
// 		named: 'CAPITAL-IDENTIFIER'
// 		
// 		parsing: (self uppercase && (self letter | self decimalDigit) strongTimes)
// 						
// 		semantics: [ :result |
// 			result second inject: result first into: [ :c :e | c, e ]
// 		]
string13428 = (Object)new_Type_String(L"CAPITAL-IDENTIFIER");
constant22935 = (Object)new_AST_Constant((Object)string13428);
// uppercase
send118659 = (Object)new_AST_Send((Object)Self, (Object)symbol22221, 0);
// letter
send118660 = (Object)new_AST_Send((Object)Self, (Object)symbol22236, 0);
// decimalDigit
send118661 = (Object)new_AST_Send((Object)Self, (Object)symbol22222, 0);
// |
send118662 = (Object)new_AST_Send((Object)send118660, (Object)SMB__or, 1, (Object)send118661);
// strongTimes
send118663 = (Object)new_AST_Send((Object)send118662, (Object)symbol22117, 0);
// &&
send118664 = (Object)new_AST_Send((Object)send118659, (Object)symbol22116, 1, (Object)send118663);
localvariable16815 = (Object)new_AST_Variable_named(L"result");
array13370 = (Object)new_Type_Array_with(1, (Object)localvariable16815);
// second
send118665 = (Object)new_AST_Send((Object)localvariable16815, (Object)symbol22237, 0);
// first
send118666 = (Object)new_AST_Send((Object)localvariable16815, (Object)symbol21970, 0);
localvariable16816 = (Object)new_AST_Variable_named(L"c");
localvariable16817 = (Object)new_AST_Variable_named(L"e");
array13371 = (Object)new_Type_Array_with(2, (Object)localvariable16816, (Object)localvariable16817);
// ,
send118667 = (Object)new_AST_Send((Object)localvariable16816, (Object)SMB__concat, 1, (Object)localvariable16817);
block7894 = (Object)new_AST_Block_with((Type_Array)array13371, (Type_Array)empty_Type_Array, 2, 1, send118667);
// inject:into:
send118668 = (Object)new_AST_Send((Object)send118665, (Object)symbol21974, 2, (Object)send118666, (Object)block7894);
block7895 = (Object)new_AST_Block_with((Type_Array)array13370, (Type_Array)empty_Type_Array, 1, 1, send118668);
// named:parsing:semantics:
send118669 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22935, (Object)send118664, (Object)block7895);
method16036 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118669);
symbol22087 = (Object)new_Type_Symbol_cached(L"initializeCapitalIdentifier");
methodclosure16034 = (Object)new_Runtime_MethodClosure(method16036);
store_method((Type_Class)class2769, (Type_Symbol)symbol22087, (Runtime_MethodClosure)methodclosure16034);


// SCParser>>preStoreBinaryObjectDescription
//preStoreBinaryObjectDescription
// 	^ parsers at: #binaryObjectDescription ifAbsentPut: [
// 		PEGParser named: 'BINARY-OBJECT-DESCRIPTION'
// 	]
constant22936 = (Object)new_AST_Constant((Object)symbol22232);
string13429 = (Object)new_Type_String(L"BINARY-OBJECT-DESCRIPTION");
constant22937 = (Object)new_AST_Constant((Object)string13429);
// named:
send118670 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22133, 1, (Object)constant22937);
block7896 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118670);
// at:ifAbsentPut:
send118671 = (Object)new_AST_Send((Object)instancevariable4055, (Object)symbol22158, 2, (Object)constant22936, (Object)block7896);
method16037 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118671);
methodclosure16035 = (Object)new_Runtime_MethodClosure(method16037);
store_method((Type_Class)class2769, (Type_Symbol)symbol22040, (Runtime_MethodClosure)methodclosure16035);


// SCParser>>initializeSymbol
//initializeSymbol
// 	^ PEGParser
// 		named: 'SYMBOL'
// 		parsing: (self symbolKeywords | self identifier <= self binarySelector <= self string)
string13430 = (Object)new_Type_String(L"SYMBOL");
constant22938 = (Object)new_AST_Constant((Object)string13430);
symbol22243 = (Object)new_Type_Symbol_cached(L"symbolKeywords");
// symbolKeywords
send118672 = (Object)new_AST_Send((Object)Self, (Object)symbol22243, 0);
// identifier
send118673 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
// binarySelector
send118674 = (Object)new_AST_Send((Object)Self, (Object)symbol22229, 0);
// <=
send118675 = (Object)new_AST_Send((Object)send118673, (Object)symbol21930, 1, (Object)send118674);
// |
send118676 = (Object)new_AST_Send((Object)send118672, (Object)SMB__or, 1, (Object)send118675);
// string
send118677 = (Object)new_AST_Send((Object)Self, (Object)symbol21987, 0);
// <=
send118678 = (Object)new_AST_Send((Object)send118676, (Object)symbol21930, 1, (Object)send118677);
// named:parsing:
send118679 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22136, 2, (Object)constant22938, (Object)send118678);
method16038 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118679);
symbol22057 = (Object)new_Type_Symbol_cached(L"initializeSymbol");
methodclosure16036 = (Object)new_Runtime_MethodClosure(method16038);
store_method((Type_Class)class2769, (Type_Symbol)symbol22057, (Runtime_MethodClosure)methodclosure16036);


// SCParser>>initializePrimary
//initializePrimary
// 	self expression.
// 	" self expression will initialize primary. "
// 	^ self primary
// expression
send118680 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
symbol22244 = (Object)new_Type_Symbol_cached(L"primary");
// primary
send118681 = (Object)new_AST_Send((Object)Self, (Object)symbol22244, 0);
method16039 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118680, send118681);
symbol22080 = (Object)new_Type_Symbol_cached(L"initializePrimary");
methodclosure16037 = (Object)new_Runtime_MethodClosure(method16039);
store_method((Type_Class)class2769, (Type_Symbol)symbol22080, (Runtime_MethodClosure)methodclosure16037);


// SCParser>>initializeExpression
//initializeExpression
// 	| variables expression |
// 	" Prestoring required parsers to handle circular references. "
// 	self preStorePrimary.
// 	self preStoreMessageExpression.
// 	self preStoreCascadedMessageExpression.
// 	
// 	parsers at: #expression put: (
// 		
// 	PEGParser
// 		named: 'EXPRESSION'
// 		
// 		parsing: self assignmentExpressions
// 					& (self cascadedMessageExpression
// 						| self messageExpression
// 						<= self primary)
// 		
// 		semantics: [ :result |
// 			variables := result first.
// 			expression := result at: 2.
// 			variables reverse do: [ :variable |
// 				expression := ASTAssignmentExpression new
// 								expression: expression;
// 								variable: variable
// 			].
// 			expression
// 		]
// 	).
// 	" After having built the expression parser, we inject the parsers into their stubs. "
// 	self injectPrimary.
// 	self injectMessageExpression.
// 	self injectCascadedMessageExpression.
// 	
// 	^ parsers at: #expression
localvariable16818 = (Object)new_AST_Variable_named(L"variables");
localvariable16819 = (Object)new_AST_Variable_named(L"expression");
array13372 = (Object)new_Type_Array_with(2, (Object)localvariable16818, (Object)localvariable16819);
symbol22082 = (Object)new_Type_Symbol_cached(L"preStorePrimary");
// preStorePrimary
send118682 = (Object)new_AST_Send((Object)Self, (Object)symbol22082, 0);
// preStoreMessageExpression
send118683 = (Object)new_AST_Send((Object)Self, (Object)symbol22099, 0);
symbol22098 = (Object)new_Type_Symbol_cached(L"preStoreCascadedMessageExpression");
// preStoreCascadedMessageExpression
send118684 = (Object)new_AST_Send((Object)Self, (Object)symbol22098, 0);
constant22939 = (Object)new_AST_Constant((Object)symbol22033);
string13431 = (Object)new_Type_String(L"EXPRESSION");
constant22940 = (Object)new_AST_Constant((Object)string13431);
symbol22245 = (Object)new_Type_Symbol_cached(L"assignmentExpressions");
// assignmentExpressions
send118685 = (Object)new_AST_Send((Object)Self, (Object)symbol22245, 0);
// cascadedMessageExpression
send118686 = (Object)new_AST_Send((Object)Self, (Object)symbol22228, 0);
// messageExpression
send118687 = (Object)new_AST_Send((Object)Self, (Object)symbol22216, 0);
// |
send118688 = (Object)new_AST_Send((Object)send118686, (Object)SMB__or, 1, (Object)send118687);
// &
send118689 = (Object)new_AST_Send((Object)send118685, (Object)SMB__and, 1, (Object)send118688);
// primary
send118690 = (Object)new_AST_Send((Object)Self, (Object)symbol22244, 0);
// <=
send118691 = (Object)new_AST_Send((Object)send118689, (Object)symbol21930, 1, (Object)send118690);
localvariable16820 = (Object)new_AST_Variable_named(L"result");
array13373 = (Object)new_Type_Array_with(1, (Object)localvariable16820);
// first
send118692 = (Object)new_AST_Send((Object)localvariable16820, (Object)symbol21970, 0);
assign14553 = (Object)new_AST_Assign((Object)localvariable16818, (Object)send118692);
smallint8302 = (Object)new_Type_SmallInt(2);
constant22941 = (Object)new_AST_Constant((Object)smallint8302);
// at:
send118693 = (Object)new_AST_Send((Object)localvariable16820, (Object)SMB_at_, 1, (Object)constant22941);
assign14554 = (Object)new_AST_Assign((Object)localvariable16819, (Object)send118693);
symbol22246 = (Object)new_Type_Symbol_cached(L"reverse");
// reverse
send118694 = (Object)new_AST_Send((Object)localvariable16818, (Object)symbol22246, 0);
localvariable16821 = (Object)new_AST_Variable_named(L"variable");
array13374 = (Object)new_Type_Array_with(1, (Object)localvariable16821);
localvariable16822 = (Object)new_AST_Variable_named(L"receiver");
array13375 = (Object)new_Type_Array_with(1, (Object)localvariable16822);
// expression:
send118695 = (Object)new_AST_Send((Object)localvariable16822, (Object)symbol22032, 1, (Object)localvariable16819);
// variable:
send118696 = (Object)new_AST_Send((Object)localvariable16822, (Object)symbol22034, 1, (Object)localvariable16821);
block7897 = (Object)new_AST_Block_with((Type_Array)array13375, (Type_Array)empty_Type_Array, 3, 2, send118695, send118696);
// new
send118697 = (Object)new_AST_Send((Object)classreference3163, (Object)symbol21894, 0);
// value:
send118698 = (Object)new_AST_Send((Object)block7897, (Object)SMB_value_, 1, (Object)send118697);
assign14555 = (Object)new_AST_Assign((Object)localvariable16819, (Object)send118698);
block7898 = (Object)new_AST_Block_with((Type_Array)array13374, (Type_Array)empty_Type_Array, 2, 1, assign14555);
// do:
send118699 = (Object)new_AST_Send((Object)send118694, (Object)symbol21924, 1, (Object)block7898);
block7899 = (Object)new_AST_Block_with((Type_Array)array13373, (Type_Array)empty_Type_Array, 1, 4, assign14553, assign14554, send118699, localvariable16819);
// named:parsing:semantics:
send118700 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22940, (Object)send118691, (Object)block7899);
// at:put:
send118701 = (Object)new_AST_Send((Object)instancevariable4055, (Object)SMB_at_put_, 2, (Object)constant22939, (Object)send118700);
symbol22058 = (Object)new_Type_Symbol_cached(L"injectPrimary");
// injectPrimary
send118702 = (Object)new_AST_Send((Object)Self, (Object)symbol22058, 0);
// injectMessageExpression
send118703 = (Object)new_AST_Send((Object)Self, (Object)symbol22078, 0);
// injectCascadedMessageExpression
send118704 = (Object)new_AST_Send((Object)Self, (Object)symbol22086, 0);
constant22942 = (Object)new_AST_Constant((Object)symbol22033);
// at:
send118705 = (Object)new_AST_Send((Object)instancevariable4055, (Object)SMB_at_, 1, (Object)constant22942);
method16040 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13372, 8, send118682, send118683, send118684, send118701, send118702, send118703, send118704, send118705);
symbol22069 = (Object)new_Type_Symbol_cached(L"initializeExpression");
methodclosure16038 = (Object)new_Runtime_MethodClosure(method16040);
store_method((Type_Class)class2769, (Type_Symbol)symbol22069, (Runtime_MethodClosure)methodclosure16038);


// SCParser>>initializeKeyword
//initializeKeyword
// 	^ self identifier && (':' asPEG omit: true)
// identifier
send118706 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
string13432 = (Object)new_Type_String(L":");
constant22943 = (Object)new_AST_Constant((Object)string13432);
// asPEG
send118707 = (Object)new_AST_Send((Object)constant22943, (Object)symbol21921, 0);
// omit:
send118708 = (Object)new_AST_Send((Object)send118707, (Object)symbol22123, 1, (Object)True_Const);
// &&
send118709 = (Object)new_AST_Send((Object)send118706, (Object)symbol22116, 1, (Object)send118708);
method16041 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118709);
symbol22097 = (Object)new_Type_Symbol_cached(L"initializeKeyword");
methodclosure16039 = (Object)new_Runtime_MethodClosure(method16041);
store_method((Type_Class)class2769, (Type_Symbol)symbol22097, (Runtime_MethodClosure)methodclosure16039);


// SCParser>>initializeUnaryMessageDefinition
//initializeUnaryMessageDefinition
// 	^ PEGParser
// 		named: 'UNARY-MESSAGE-DEFINITION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryMessageDefinition new
// 				selector: selector.
// 		]
string13433 = (Object)new_Type_String(L"UNARY-MESSAGE-DEFINITION");
constant22944 = (Object)new_AST_Constant((Object)string13433);
// unarySelector
send118710 = (Object)new_AST_Send((Object)Self, (Object)symbol22217, 0);
localvariable16823 = (Object)new_AST_Variable_named(L"selector");
array13376 = (Object)new_Type_Array_with(1, (Object)localvariable16823);
// new
send118711 = (Object)new_AST_Send((Object)classreference3170, (Object)symbol21894, 0);
// selector:
send118712 = (Object)new_AST_Send((Object)send118711, (Object)symbol22010, 1, (Object)localvariable16823);
block7900 = (Object)new_AST_Block_with((Type_Array)array13376, (Type_Array)empty_Type_Array, 1, 1, send118712);
// named:parsing:semantics:
send118713 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22944, (Object)send118710, (Object)block7900);
method16042 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118713);
symbol22050 = (Object)new_Type_Symbol_cached(L"initializeUnaryMessageDefinition");
methodclosure16040 = (Object)new_Runtime_MethodClosure(method16042);
store_method((Type_Class)class2769, (Type_Symbol)symbol22050, (Runtime_MethodClosure)methodclosure16040);


// SCParser>>doesNotUnderstand:
//doesNotUnderstand: message
//     | selector |
//     ^ parsers at: message selector ifAbsentPut: [
//         selector := ('initialize', message selector capitalized) asSymbol.
//         (self respondsTo: selector)
// 			ifTrue: [ self perform: selector ]
//             ifFalse: [ super doesNotUnderstand: message ]
// 	]
localvariable16824 = (Object)new_AST_Variable_named(L"message");
array13377 = (Object)new_Type_Array_with(1, (Object)localvariable16824);
localvariable16825 = (Object)new_AST_Variable_named(L"selector");
array13378 = (Object)new_Type_Array_with(1, (Object)localvariable16825);
// selector
send118714 = (Object)new_AST_Send((Object)localvariable16824, (Object)symbol21908, 0);
string13434 = (Object)new_Type_String(L"initialize");
constant22945 = (Object)new_AST_Constant((Object)string13434);
// selector
send118715 = (Object)new_AST_Send((Object)localvariable16824, (Object)symbol21908, 0);
// capitalized
send118716 = (Object)new_AST_Send((Object)send118715, (Object)symbol21925, 0);
// ,
send118717 = (Object)new_AST_Send((Object)constant22945, (Object)SMB__concat, 1, (Object)send118716);
// asSymbol
send118718 = (Object)new_AST_Send((Object)send118717, (Object)SMB_asSymbol, 0);
assign14556 = (Object)new_AST_Assign((Object)localvariable16825, (Object)send118718);
// respondsTo:
send118719 = (Object)new_AST_Send((Object)Self, (Object)symbol21803, 1, (Object)localvariable16825);
symbol22247 = (Object)new_Type_Symbol_cached(L"perform:");
// perform:
send118720 = (Object)new_AST_Send((Object)Self, (Object)symbol22247, 1, (Object)localvariable16825);
block7901 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118720);
super1295 = (Object)new_AST_Super((Object)SMB_doesNotUnderstand_, 1, (Object)localvariable16824);
block7902 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, super1295);
// ifTrue:ifFalse:
send118721 = (Object)new_AST_Send((Object)send118719, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7901, (Object)block7902);
block7903 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 2, assign14556, send118721);
// at:ifAbsentPut:
send118722 = (Object)new_AST_Send((Object)instancevariable4055, (Object)symbol22158, 2, (Object)send118714, (Object)block7903);
method16043 = (Object)new_AST_Method_with((Type_Array)array13377, (Type_Array)array13378, 1, send118722);
methodclosure16041 = (Object)new_Runtime_MethodClosure(method16043);
store_method((Type_Class)class2769, (Type_Symbol)SMB_doesNotUnderstand_, (Runtime_MethodClosure)methodclosure16041);


// SCParser>>injectBinaryObjectDescription
//injectBinaryObjectDescription
// 	^ self binaryObjectDescription
// 		<= (self binaryExpression | self unaryObjectDescription)
// binaryObjectDescription
send118723 = (Object)new_AST_Send((Object)Self, (Object)symbol22232, 0);
// binaryExpression
send118724 = (Object)new_AST_Send((Object)Self, (Object)symbol22230, 0);
// <=
send118725 = (Object)new_AST_Send((Object)send118723, (Object)symbol21930, 1, (Object)send118724);
// unaryObjectDescription
send118726 = (Object)new_AST_Send((Object)Self, (Object)symbol22231, 0);
// |
send118727 = (Object)new_AST_Send((Object)send118725, (Object)SMB__or, 1, (Object)send118726);
method16044 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118727);
methodclosure16042 = (Object)new_Runtime_MethodClosure(method16044);
store_method((Type_Class)class2769, (Type_Symbol)symbol22039, (Runtime_MethodClosure)methodclosure16042);


// SCParser>>initializeSymbolInArray
//initializeSymbolInArray
// 	^ PEGParser
// 		named: 'SYMBOL-IN-ARRAY'
// 		parsing: (self symbol)
// 		semantics: [:symbol |
// 			ASTSymbol new symbol: symbol
// 		]
string13435 = (Object)new_Type_String(L"SYMBOL-IN-ARRAY");
constant22946 = (Object)new_AST_Constant((Object)string13435);
// symbol
send118728 = (Object)new_AST_Send((Object)Self, (Object)symbol21983, 0);
localvariable16826 = (Object)new_AST_Variable_named(L"symbol");
array13379 = (Object)new_Type_Array_with(1, (Object)localvariable16826);
// new
send118729 = (Object)new_AST_Send((Object)classreference3155, (Object)symbol21894, 0);
// symbol:
send118730 = (Object)new_AST_Send((Object)send118729, (Object)symbol21984, 1, (Object)localvariable16826);
block7904 = (Object)new_AST_Block_with((Type_Array)array13379, (Type_Array)empty_Type_Array, 1, 1, send118730);
// named:parsing:semantics:
send118731 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22946, (Object)send118728, (Object)block7904);
method16045 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118731);
symbol22090 = (Object)new_Type_Symbol_cached(L"initializeSymbolInArray");
methodclosure16043 = (Object)new_Runtime_MethodClosure(method16045);
store_method((Type_Class)class2769, (Type_Symbol)symbol22090, (Runtime_MethodClosure)methodclosure16043);


// SCParser>>initializeAssignmentExpressions
//initializeAssignmentExpressions
// 	^ (self variableName & self assignmentOp) times
// variableName
send118732 = (Object)new_AST_Send((Object)Self, (Object)symbol22241, 0);
symbol22037 = (Object)new_Type_Symbol_cached(L"assignmentOp");
// assignmentOp
send118733 = (Object)new_AST_Send((Object)Self, (Object)symbol22037, 0);
// &
send118734 = (Object)new_AST_Send((Object)send118732, (Object)SMB__and, 1, (Object)send118733);
// times
send118735 = (Object)new_AST_Send((Object)send118734, (Object)symbol22115, 0);
method16046 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118735);
symbol22062 = (Object)new_Type_Symbol_cached(L"initializeAssignmentExpressions");
methodclosure16044 = (Object)new_Runtime_MethodClosure(method16046);
store_method((Type_Class)class2769, (Type_Symbol)symbol22062, (Runtime_MethodClosure)methodclosure16044);


// SCParser>>initializeArrayConstant
//initializeArrayConstant
// 	^ ('#' asPEG omit: true) & self array
string13436 = (Object)new_Type_String(L"#");
constant22947 = (Object)new_AST_Constant((Object)string13436);
// asPEG
send118736 = (Object)new_AST_Send((Object)constant22947, (Object)symbol21921, 0);
// omit:
send118737 = (Object)new_AST_Send((Object)send118736, (Object)symbol22123, 1, (Object)True_Const);
symbol22248 = (Object)new_Type_Symbol_cached(L"array");
// array
send118738 = (Object)new_AST_Send((Object)Self, (Object)symbol22248, 0);
// &
send118739 = (Object)new_AST_Send((Object)send118737, (Object)SMB__and, 1, (Object)send118738);
method16047 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118739);
symbol22107 = (Object)new_Type_Symbol_cached(L"initializeArrayConstant");
methodclosure16045 = (Object)new_Runtime_MethodClosure(method16047);
store_method((Type_Class)class2769, (Type_Symbol)symbol22107, (Runtime_MethodClosure)methodclosure16045);


// SCParser>>initializePrimaryVariable
//initializePrimaryVariable
// 	^ PEGParser
// 		named: 'PRIMARY-VARIABLE'
// 		parsing: self identifier
// 		semantics: [:result | self createVariable: result ]
string13437 = (Object)new_Type_String(L"PRIMARY-VARIABLE");
constant22948 = (Object)new_AST_Constant((Object)string13437);
// identifier
send118740 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
localvariable16827 = (Object)new_AST_Variable_named(L"result");
array13380 = (Object)new_Type_Array_with(1, (Object)localvariable16827);
// createVariable:
send118741 = (Object)new_AST_Send((Object)Self, (Object)symbol22046, 1, (Object)localvariable16827);
block7905 = (Object)new_AST_Block_with((Type_Array)array13380, (Type_Array)empty_Type_Array, 1, 1, send118741);
// named:parsing:semantics:
send118742 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22948, (Object)send118740, (Object)block7905);
method16048 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118742);
symbol22079 = (Object)new_Type_Symbol_cached(L"initializePrimaryVariable");
methodclosure16046 = (Object)new_Runtime_MethodClosure(method16048);
store_method((Type_Class)class2769, (Type_Symbol)symbol22079, (Runtime_MethodClosure)methodclosure16046);


// SCParser>>initializeUnaryObjectDescription
//initializeUnaryObjectDescription
// 	^ self unaryExpression | self primary
// unaryExpression
send118743 = (Object)new_AST_Send((Object)Self, (Object)symbol22239, 0);
// primary
send118744 = (Object)new_AST_Send((Object)Self, (Object)symbol22244, 0);
// |
send118745 = (Object)new_AST_Send((Object)send118743, (Object)SMB__or, 1, (Object)send118744);
method16049 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118745);
symbol22100 = (Object)new_Type_Symbol_cached(L"initializeUnaryObjectDescription");
methodclosure16047 = (Object)new_Runtime_MethodClosure(method16049);
store_method((Type_Class)class2769, (Type_Symbol)symbol22100, (Runtime_MethodClosure)methodclosure16047);


// SCParser>>initializeLiteral
//initializeLiteral
// 	^ self numberConstant | self symbolConstant <= self characterConstant <= self stringConstant <= self arrayConstant
symbol22249 = (Object)new_Type_Symbol_cached(L"numberConstant");
// numberConstant
send118746 = (Object)new_AST_Send((Object)Self, (Object)symbol22249, 0);
symbol22250 = (Object)new_Type_Symbol_cached(L"symbolConstant");
// symbolConstant
send118747 = (Object)new_AST_Send((Object)Self, (Object)symbol22250, 0);
symbol22251 = (Object)new_Type_Symbol_cached(L"characterConstant");
// characterConstant
send118748 = (Object)new_AST_Send((Object)Self, (Object)symbol22251, 0);
symbol22252 = (Object)new_Type_Symbol_cached(L"stringConstant");
// stringConstant
send118749 = (Object)new_AST_Send((Object)Self, (Object)symbol22252, 0);
// <=
send118750 = (Object)new_AST_Send((Object)send118748, (Object)symbol21930, 1, (Object)send118749);
// <=
send118751 = (Object)new_AST_Send((Object)send118747, (Object)symbol21930, 1, (Object)send118750);
// |
send118752 = (Object)new_AST_Send((Object)send118746, (Object)SMB__or, 1, (Object)send118751);
symbol22253 = (Object)new_Type_Symbol_cached(L"arrayConstant");
// arrayConstant
send118753 = (Object)new_AST_Send((Object)Self, (Object)symbol22253, 0);
// <=
send118754 = (Object)new_AST_Send((Object)send118752, (Object)symbol21930, 1, (Object)send118753);
method16050 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118754);
symbol22044 = (Object)new_Type_Symbol_cached(L"initializeLiteral");
methodclosure16048 = (Object)new_Runtime_MethodClosure(method16050);
store_method((Type_Class)class2769, (Type_Symbol)symbol22044, (Runtime_MethodClosure)methodclosure16048);


// SCParser>>initializeUnaryExpression
//initializeUnaryExpression
// 	| result |
// 	^ PEGParser
// 		named: 'UNARY-EXPRESSION'
// 		parsing: (self primary & (self unarySelector plus))
// 		semantics: [ :parts |
// 			result := parts first.
// 			(parts at: 2) do: [ :selector |
// 				result := ASTUnaryExpression new
// 							receiver: result;
// 							selector: selector.
// 			].
// 			result
// 		]
localvariable16828 = (Object)new_AST_Variable_named(L"result");
array13381 = (Object)new_Type_Array_with(1, (Object)localvariable16828);
string13438 = (Object)new_Type_String(L"UNARY-EXPRESSION");
constant22949 = (Object)new_AST_Constant((Object)string13438);
// primary
send118755 = (Object)new_AST_Send((Object)Self, (Object)symbol22244, 0);
// unarySelector
send118756 = (Object)new_AST_Send((Object)Self, (Object)symbol22217, 0);
// plus
send118757 = (Object)new_AST_Send((Object)send118756, (Object)symbol22126, 0);
// &
send118758 = (Object)new_AST_Send((Object)send118755, (Object)SMB__and, 1, (Object)send118757);
localvariable16829 = (Object)new_AST_Variable_named(L"parts");
array13382 = (Object)new_Type_Array_with(1, (Object)localvariable16829);
// first
send118759 = (Object)new_AST_Send((Object)localvariable16829, (Object)symbol21970, 0);
assign14557 = (Object)new_AST_Assign((Object)localvariable16828, (Object)send118759);
smallint8303 = (Object)new_Type_SmallInt(2);
constant22950 = (Object)new_AST_Constant((Object)smallint8303);
// at:
send118760 = (Object)new_AST_Send((Object)localvariable16829, (Object)SMB_at_, 1, (Object)constant22950);
localvariable16830 = (Object)new_AST_Variable_named(L"selector");
array13383 = (Object)new_Type_Array_with(1, (Object)localvariable16830);
localvariable16831 = (Object)new_AST_Variable_named(L"receiver");
array13384 = (Object)new_Type_Array_with(1, (Object)localvariable16831);
// receiver:
send118761 = (Object)new_AST_Send((Object)localvariable16831, (Object)symbol22004, 1, (Object)localvariable16828);
// selector:
send118762 = (Object)new_AST_Send((Object)localvariable16831, (Object)symbol22010, 1, (Object)localvariable16830);
block7906 = (Object)new_AST_Block_with((Type_Array)array13384, (Type_Array)empty_Type_Array, 3, 2, send118761, send118762);
// new
send118763 = (Object)new_AST_Send((Object)classreference3164, (Object)symbol21894, 0);
// value:
send118764 = (Object)new_AST_Send((Object)block7906, (Object)SMB_value_, 1, (Object)send118763);
assign14558 = (Object)new_AST_Assign((Object)localvariable16828, (Object)send118764);
block7907 = (Object)new_AST_Block_with((Type_Array)array13383, (Type_Array)empty_Type_Array, 2, 1, assign14558);
// do:
send118765 = (Object)new_AST_Send((Object)send118760, (Object)symbol21924, 1, (Object)block7907);
block7908 = (Object)new_AST_Block_with((Type_Array)array13382, (Type_Array)empty_Type_Array, 1, 3, assign14557, send118765, localvariable16828);
// named:parsing:semantics:
send118766 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22949, (Object)send118758, (Object)block7908);
method16051 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13381, 1, send118766);
symbol22072 = (Object)new_Type_Symbol_cached(L"initializeUnaryExpression");
methodclosure16049 = (Object)new_Runtime_MethodClosure(method16051);
store_method((Type_Class)class2769, (Type_Symbol)symbol22072, (Runtime_MethodClosure)methodclosure16049);


// SCParser>>initializeBlockArguments
//initializeBlockArguments
// 	^ PEGParser
// 		named: 'BLOCK-ARGUMENTS'
// 		parsing: ((':' asPEG omit: true) & self identifier) plus
// 		semantics: [ :result |
// 			result collect: [ :variable | self createVariable: variable ]
// 		]
string13439 = (Object)new_Type_String(L"BLOCK-ARGUMENTS");
constant22951 = (Object)new_AST_Constant((Object)string13439);
string13440 = (Object)new_Type_String(L":");
constant22952 = (Object)new_AST_Constant((Object)string13440);
// asPEG
send118767 = (Object)new_AST_Send((Object)constant22952, (Object)symbol21921, 0);
// omit:
send118768 = (Object)new_AST_Send((Object)send118767, (Object)symbol22123, 1, (Object)True_Const);
// identifier
send118769 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
// &
send118770 = (Object)new_AST_Send((Object)send118768, (Object)SMB__and, 1, (Object)send118769);
// plus
send118771 = (Object)new_AST_Send((Object)send118770, (Object)symbol22126, 0);
localvariable16832 = (Object)new_AST_Variable_named(L"result");
array13385 = (Object)new_Type_Array_with(1, (Object)localvariable16832);
symbol22254 = (Object)new_Type_Symbol_cached(L"collect:");
localvariable16833 = (Object)new_AST_Variable_named(L"variable");
array13386 = (Object)new_Type_Array_with(1, (Object)localvariable16833);
// createVariable:
send118772 = (Object)new_AST_Send((Object)Self, (Object)symbol22046, 1, (Object)localvariable16833);
block7909 = (Object)new_AST_Block_with((Type_Array)array13386, (Type_Array)empty_Type_Array, 2, 1, send118772);
// collect:
send118773 = (Object)new_AST_Send((Object)localvariable16832, (Object)symbol22254, 1, (Object)block7909);
block7910 = (Object)new_AST_Block_with((Type_Array)array13385, (Type_Array)empty_Type_Array, 1, 1, send118773);
// named:parsing:semantics:
send118774 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22951, (Object)send118771, (Object)block7910);
method16052 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118774);
symbol22084 = (Object)new_Type_Symbol_cached(L"initializeBlockArguments");
methodclosure16050 = (Object)new_Runtime_MethodClosure(method16052);
store_method((Type_Class)class2769, (Type_Symbol)symbol22084, (Runtime_MethodClosure)methodclosure16050);


// SCParser>>initializeBinarySelector
//initializeBinarySelector
// 	^ PEGParser
// 		named: 'BINARY-SELECTOR'
// 
// 		parsing: ((	(self specialCharacter | '-') && (self specialCharacter) strongTimes)
// 					| '|' )
// 							
// 		semantics: [ :result |
// 			result isString
// 				ifTrue: [ self createSymbol: result ]
// 				ifFalse: [
// 					self createSymbol: 
// 						(result second 
// 							inject: result first 
// 							into: [ :c :e | c, e ]) ]
// 		]
string13441 = (Object)new_Type_String(L"BINARY-SELECTOR");
constant22953 = (Object)new_AST_Constant((Object)string13441);
symbol22255 = (Object)new_Type_Symbol_cached(L"specialCharacter");
// specialCharacter
send118775 = (Object)new_AST_Send((Object)Self, (Object)symbol22255, 0);
string13442 = (Object)new_Type_String(L"-");
constant22954 = (Object)new_AST_Constant((Object)string13442);
// |
send118776 = (Object)new_AST_Send((Object)send118775, (Object)SMB__or, 1, (Object)constant22954);
// specialCharacter
send118777 = (Object)new_AST_Send((Object)Self, (Object)symbol22255, 0);
// strongTimes
send118778 = (Object)new_AST_Send((Object)send118777, (Object)symbol22117, 0);
// &&
send118779 = (Object)new_AST_Send((Object)send118776, (Object)symbol22116, 1, (Object)send118778);
string13443 = (Object)new_Type_String(L"|");
constant22955 = (Object)new_AST_Constant((Object)string13443);
// |
send118780 = (Object)new_AST_Send((Object)send118779, (Object)SMB__or, 1, (Object)constant22955);
localvariable16834 = (Object)new_AST_Variable_named(L"result");
array13387 = (Object)new_Type_Array_with(1, (Object)localvariable16834);
symbol22256 = (Object)new_Type_Symbol_cached(L"isString");
// isString
send118781 = (Object)new_AST_Send((Object)localvariable16834, (Object)symbol22256, 0);
// createSymbol:
send118782 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)localvariable16834);
block7911 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118782);
// second
send118783 = (Object)new_AST_Send((Object)localvariable16834, (Object)symbol22237, 0);
// first
send118784 = (Object)new_AST_Send((Object)localvariable16834, (Object)symbol21970, 0);
localvariable16835 = (Object)new_AST_Variable_named(L"c");
localvariable16836 = (Object)new_AST_Variable_named(L"e");
array13388 = (Object)new_Type_Array_with(2, (Object)localvariable16835, (Object)localvariable16836);
// ,
send118785 = (Object)new_AST_Send((Object)localvariable16835, (Object)SMB__concat, 1, (Object)localvariable16836);
block7912 = (Object)new_AST_Block_with((Type_Array)array13388, (Type_Array)empty_Type_Array, 3, 1, send118785);
// inject:into:
send118786 = (Object)new_AST_Send((Object)send118783, (Object)symbol21974, 2, (Object)send118784, (Object)block7912);
// createSymbol:
send118787 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)send118786);
block7913 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118787);
// ifTrue:ifFalse:
send118788 = (Object)new_AST_Send((Object)send118781, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block7911, (Object)block7913);
block7914 = (Object)new_AST_Block_with((Type_Array)array13387, (Type_Array)empty_Type_Array, 1, 1, send118788);
// named:parsing:semantics:
send118789 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22953, (Object)send118780, (Object)block7914);
method16053 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118789);
symbol22054 = (Object)new_Type_Symbol_cached(L"initializeBinarySelector");
methodclosure16051 = (Object)new_Runtime_MethodClosure(method16053);
store_method((Type_Class)class2769, (Type_Symbol)symbol22054, (Runtime_MethodClosure)methodclosure16051);


// SCParser>>parsers:
//parsers: aDictionary
// 	parsers := aDictionary 
localvariable16837 = (Object)new_AST_Variable_named(L"aDictionary");
array13389 = (Object)new_Type_Array_with(1, (Object)localvariable16837);
assign14559 = (Object)new_AST_Assign((Object)instancevariable4055, (Object)localvariable16837);
method16054 = (Object)new_AST_Method_with((Type_Array)array13389, (Type_Array)empty_Type_Array, 2, assign14559, Self);
symbol22066 = (Object)new_Type_Symbol_cached(L"parsers:");
methodclosure16052 = (Object)new_Runtime_MethodClosure(method16054);
store_method((Type_Class)class2769, (Type_Symbol)symbol22066, (Runtime_MethodClosure)methodclosure16052);


// SCParser>>initializeBraceExpression
//initializeBraceExpression
// 	^ PEGParser
// 		named: 'BRACE-EXPRESSION'
// 		
// 		parsing: ('{' asPEG omit: true) & self subExpression times <& self expression <& ('}' asPEG omit: true)
// 		
// 		semantics: [ :result |
// 			ASTBraceExpression new
// 				expressions: ((result first) add: (result at: 2); yourself)
// 		]
string13444 = (Object)new_Type_String(L"BRACE-EXPRESSION");
constant22956 = (Object)new_AST_Constant((Object)string13444);
string13445 = (Object)new_Type_String(L"{");
constant22957 = (Object)new_AST_Constant((Object)string13445);
// asPEG
send118790 = (Object)new_AST_Send((Object)constant22957, (Object)symbol21921, 0);
// omit:
send118791 = (Object)new_AST_Send((Object)send118790, (Object)symbol22123, 1, (Object)True_Const);
// subExpression
send118792 = (Object)new_AST_Send((Object)Self, (Object)symbol22233, 0);
// times
send118793 = (Object)new_AST_Send((Object)send118792, (Object)symbol22115, 0);
// expression
send118794 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
// <&
send118795 = (Object)new_AST_Send((Object)send118793, (Object)symbol22165, 1, (Object)send118794);
// &
send118796 = (Object)new_AST_Send((Object)send118791, (Object)SMB__and, 1, (Object)send118795);
string13446 = (Object)new_Type_String(L"}");
constant22958 = (Object)new_AST_Constant((Object)string13446);
// asPEG
send118797 = (Object)new_AST_Send((Object)constant22958, (Object)symbol21921, 0);
// omit:
send118798 = (Object)new_AST_Send((Object)send118797, (Object)symbol22123, 1, (Object)True_Const);
// <&
send118799 = (Object)new_AST_Send((Object)send118796, (Object)symbol22165, 1, (Object)send118798);
localvariable16838 = (Object)new_AST_Variable_named(L"result");
array13390 = (Object)new_Type_Array_with(1, (Object)localvariable16838);
// new
send118800 = (Object)new_AST_Send((Object)classreference3169, (Object)symbol21894, 0);
localvariable16839 = (Object)new_AST_Variable_named(L"receiver");
array13391 = (Object)new_Type_Array_with(1, (Object)localvariable16839);
smallint8304 = (Object)new_Type_SmallInt(2);
constant22959 = (Object)new_AST_Constant((Object)smallint8304);
// at:
send118801 = (Object)new_AST_Send((Object)localvariable16838, (Object)SMB_at_, 1, (Object)constant22959);
// add:
send118802 = (Object)new_AST_Send((Object)localvariable16839, (Object)symbol21973, 1, (Object)send118801);
// yourself
send118803 = (Object)new_AST_Send((Object)localvariable16839, (Object)symbol21799, 0);
block7915 = (Object)new_AST_Block_with((Type_Array)array13391, (Type_Array)empty_Type_Array, 2, 2, send118802, send118803);
// first
send118804 = (Object)new_AST_Send((Object)localvariable16838, (Object)symbol21970, 0);
// value:
send118805 = (Object)new_AST_Send((Object)block7915, (Object)SMB_value_, 1, (Object)send118804);
// expressions:
send118806 = (Object)new_AST_Send((Object)send118800, (Object)symbol22160, 1, (Object)send118805);
block7916 = (Object)new_AST_Block_with((Type_Array)array13390, (Type_Array)empty_Type_Array, 1, 1, send118806);
// named:parsing:semantics:
send118807 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22956, (Object)send118799, (Object)block7916);
method16055 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118807);
symbol22094 = (Object)new_Type_Symbol_cached(L"initializeBraceExpression");
methodclosure16053 = (Object)new_Runtime_MethodClosure(method16055);
store_method((Type_Class)class2769, (Type_Symbol)symbol22094, (Runtime_MethodClosure)methodclosure16053);


// SCParser>>initializeCascadedMessageExpression
//initializeCascadedMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self cascadedMessageExpression.
// expression
send118808 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
// cascadedMessageExpression
send118809 = (Object)new_AST_Send((Object)Self, (Object)symbol22228, 0);
method16056 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118808, send118809);
symbol22036 = (Object)new_Type_Symbol_cached(L"initializeCascadedMessageExpression");
methodclosure16054 = (Object)new_Runtime_MethodClosure(method16056);
store_method((Type_Class)class2769, (Type_Symbol)symbol22036, (Runtime_MethodClosure)methodclosure16054);


// SCParser>>initializeSeparator
//initializeSeparator
// 	" has to be strongPlus since plus would match separator in between -> infinite recursion. "
// 	^ PEGParser
// 		named: 'COMMENT'
// 		parsing: (((PEGParser separators | self commentFormat) strongTimes) omit: true)
string13447 = (Object)new_Type_String(L"COMMENT");
constant22960 = (Object)new_AST_Constant((Object)string13447);
// separators
send118810 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22131, 0);
symbol22257 = (Object)new_Type_Symbol_cached(L"commentFormat");
// commentFormat
send118811 = (Object)new_AST_Send((Object)Self, (Object)symbol22257, 0);
// |
send118812 = (Object)new_AST_Send((Object)send118810, (Object)SMB__or, 1, (Object)send118811);
// strongTimes
send118813 = (Object)new_AST_Send((Object)send118812, (Object)symbol22117, 0);
// omit:
send118814 = (Object)new_AST_Send((Object)send118813, (Object)symbol22123, 1, (Object)True_Const);
// named:parsing:
send118815 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22136, 2, (Object)constant22960, (Object)send118814);
method16057 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118815);
symbol22104 = (Object)new_Type_Symbol_cached(L"initializeSeparator");
methodclosure16055 = (Object)new_Runtime_MethodClosure(method16057);
store_method((Type_Class)class2769, (Type_Symbol)symbol22104, (Runtime_MethodClosure)methodclosure16055);


// SCParser>>initializeStringConstant
//initializeStringConstant
// 	^ PEGParser
// 		named: 'STRING-CONSTANT'
// 		parsing: self string
// 		semantics: [:result |
// 			ASTString new string: result
// 		]
string13448 = (Object)new_Type_String(L"STRING-CONSTANT");
constant22961 = (Object)new_AST_Constant((Object)string13448);
// string
send118816 = (Object)new_AST_Send((Object)Self, (Object)symbol21987, 0);
localvariable16840 = (Object)new_AST_Variable_named(L"result");
array13392 = (Object)new_Type_Array_with(1, (Object)localvariable16840);
// new
send118817 = (Object)new_AST_Send((Object)classreference3160, (Object)symbol21894, 0);
// string:
send118818 = (Object)new_AST_Send((Object)send118817, (Object)symbol21986, 1, (Object)localvariable16840);
block7917 = (Object)new_AST_Block_with((Type_Array)array13392, (Type_Array)empty_Type_Array, 1, 1, send118818);
// named:parsing:semantics:
send118819 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22961, (Object)send118816, (Object)block7917);
method16058 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118819);
symbol22048 = (Object)new_Type_Symbol_cached(L"initializeStringConstant");
methodclosure16056 = (Object)new_Runtime_MethodClosure(method16058);
store_method((Type_Class)class2769, (Type_Symbol)symbol22048, (Runtime_MethodClosure)methodclosure16056);


// SCParser>>initializeAnnotation
//initializeAnnotation
// 	^ PEGParser
// 		named: 'ANNOTATION'
// 		parsing: ('<' asPEG omit: true) & (self keywordAnnotation | self unaryAnnotation) <& ('>' asPEG omit: true)
string13449 = (Object)new_Type_String(L"ANNOTATION");
constant22962 = (Object)new_AST_Constant((Object)string13449);
string13450 = (Object)new_Type_String(L"<");
constant22963 = (Object)new_AST_Constant((Object)string13450);
// asPEG
send118820 = (Object)new_AST_Send((Object)constant22963, (Object)symbol21921, 0);
// omit:
send118821 = (Object)new_AST_Send((Object)send118820, (Object)symbol22123, 1, (Object)True_Const);
symbol22258 = (Object)new_Type_Symbol_cached(L"keywordAnnotation");
// keywordAnnotation
send118822 = (Object)new_AST_Send((Object)Self, (Object)symbol22258, 0);
symbol22259 = (Object)new_Type_Symbol_cached(L"unaryAnnotation");
// unaryAnnotation
send118823 = (Object)new_AST_Send((Object)Self, (Object)symbol22259, 0);
// |
send118824 = (Object)new_AST_Send((Object)send118822, (Object)SMB__or, 1, (Object)send118823);
// &
send118825 = (Object)new_AST_Send((Object)send118821, (Object)SMB__and, 1, (Object)send118824);
string13451 = (Object)new_Type_String(L">");
constant22964 = (Object)new_AST_Constant((Object)string13451);
// asPEG
send118826 = (Object)new_AST_Send((Object)constant22964, (Object)symbol21921, 0);
// omit:
send118827 = (Object)new_AST_Send((Object)send118826, (Object)symbol22123, 1, (Object)True_Const);
// <&
send118828 = (Object)new_AST_Send((Object)send118825, (Object)symbol22165, 1, (Object)send118827);
// named:parsing:
send118829 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22136, 2, (Object)constant22962, (Object)send118828);
method16059 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118829);
symbol22076 = (Object)new_Type_Symbol_cached(L"initializeAnnotation");
methodclosure16057 = (Object)new_Runtime_MethodClosure(method16059);
store_method((Type_Class)class2769, (Type_Symbol)symbol22076, (Runtime_MethodClosure)methodclosure16057);


// SCParser>>initializeDecimalDigit
//initializeDecimalDigit
// 	^ '0-9' asPEGRange
string13452 = (Object)new_Type_String(L"0-9");
constant22965 = (Object)new_AST_Constant((Object)string13452);
// asPEGRange
send118830 = (Object)new_AST_Send((Object)constant22965, (Object)symbol21918, 0);
method16060 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118830);
symbol22088 = (Object)new_Type_Symbol_cached(L"initializeDecimalDigit");
methodclosure16058 = (Object)new_Runtime_MethodClosure(method16060);
store_method((Type_Class)class2769, (Type_Symbol)symbol22088, (Runtime_MethodClosure)methodclosure16058);


// SCParser>>createSymbol:
//createSymbol: anObject
// 	anObject isString 
// 		ifFalse: [ ^ anObject ].
// 	^ ASTSymbol named: anObject
localvariable16841 = (Object)new_AST_Variable_named(L"anObject");
array13393 = (Object)new_Type_Array_with(1, (Object)localvariable16841);
variable938 = (Object)new_AST_Variable_named(L"return");
array13394 = (Object)new_Type_Array_with(1, (Object)variable938);
// isString
send118831 = (Object)new_AST_Send((Object)localvariable16841, (Object)symbol22256, 0);
// escape:
send118832 = (Object)new_AST_Send((Object)variable938, (Object)SMB_escape_, 1, (Object)localvariable16841);
block7918 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send118832);
// ifFalse:
send118833 = (Object)new_AST_Send((Object)send118831, (Object)SMB_ifFalse_, 1, (Object)block7918);
// named:
send118834 = (Object)new_AST_Send((Object)classreference3155, (Object)symbol22133, 1, (Object)localvariable16841);
block7919 = (Object)new_AST_Block_with((Type_Array)array13394, (Type_Array)empty_Type_Array, 1, 2, send118833, send118834);
// on:
send118835 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block7919);
method16061 = (Object)new_AST_Method_with((Type_Array)array13393, (Type_Array)empty_Type_Array, 1, send118835);
methodclosure16059 = (Object)new_Runtime_MethodClosure(method16061);
store_method((Type_Class)class2769, (Type_Symbol)symbol22041, (Runtime_MethodClosure)methodclosure16059);


// SCParser>>injectPrimary
//injectPrimary
// 	^ self primary
// 		<= (self primaryVariable | self literal <= self block <= self braceExpression <= self scopedExpression)
// primary
send118836 = (Object)new_AST_Send((Object)Self, (Object)symbol22244, 0);
symbol22260 = (Object)new_Type_Symbol_cached(L"primaryVariable");
// primaryVariable
send118837 = (Object)new_AST_Send((Object)Self, (Object)symbol22260, 0);
symbol22261 = (Object)new_Type_Symbol_cached(L"literal");
// literal
send118838 = (Object)new_AST_Send((Object)Self, (Object)symbol22261, 0);
symbol22262 = (Object)new_Type_Symbol_cached(L"block");
// block
send118839 = (Object)new_AST_Send((Object)Self, (Object)symbol22262, 0);
symbol22263 = (Object)new_Type_Symbol_cached(L"braceExpression");
// braceExpression
send118840 = (Object)new_AST_Send((Object)Self, (Object)symbol22263, 0);
// <=
send118841 = (Object)new_AST_Send((Object)send118839, (Object)symbol21930, 1, (Object)send118840);
// <=
send118842 = (Object)new_AST_Send((Object)send118838, (Object)symbol21930, 1, (Object)send118841);
// |
send118843 = (Object)new_AST_Send((Object)send118837, (Object)SMB__or, 1, (Object)send118842);
// <=
send118844 = (Object)new_AST_Send((Object)send118836, (Object)symbol21930, 1, (Object)send118843);
symbol22264 = (Object)new_Type_Symbol_cached(L"scopedExpression");
// scopedExpression
send118845 = (Object)new_AST_Send((Object)Self, (Object)symbol22264, 0);
// <=
send118846 = (Object)new_AST_Send((Object)send118844, (Object)symbol21930, 1, (Object)send118845);
method16062 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118846);
methodclosure16060 = (Object)new_Runtime_MethodClosure(method16062);
store_method((Type_Class)class2769, (Type_Symbol)symbol22058, (Runtime_MethodClosure)methodclosure16060);


// SCParser>>initializeKeywordAnnotation
//initializeKeywordAnnotation
// 	^ PEGParser
// 		named: 'KEYWORD-ANNOTATION'
// 		parsing: (self keyword & self primary) plus
// 		semantics: [ :result |
// 			ASTKeywordAnnotation new
// 				keywords: (result collect: [ :each| ASTSymbol named: each first ]);
// 				selector: (ASTKeywordSelector new keywords: (result collect: #first));
// 				arguments: (result collect: #second)
// 		]
string13453 = (Object)new_Type_String(L"KEYWORD-ANNOTATION");
constant22966 = (Object)new_AST_Constant((Object)string13453);
// keyword
send118847 = (Object)new_AST_Send((Object)Self, (Object)symbol22218, 0);
// primary
send118848 = (Object)new_AST_Send((Object)Self, (Object)symbol22244, 0);
// &
send118849 = (Object)new_AST_Send((Object)send118847, (Object)SMB__and, 1, (Object)send118848);
// plus
send118850 = (Object)new_AST_Send((Object)send118849, (Object)symbol22126, 0);
localvariable16842 = (Object)new_AST_Variable_named(L"result");
array13395 = (Object)new_Type_Array_with(1, (Object)localvariable16842);
localvariable16843 = (Object)new_AST_Variable_named(L"receiver");
array13396 = (Object)new_Type_Array_with(1, (Object)localvariable16843);
localvariable16844 = (Object)new_AST_Variable_named(L"each");
array13397 = (Object)new_Type_Array_with(1, (Object)localvariable16844);
// first
send118851 = (Object)new_AST_Send((Object)localvariable16844, (Object)symbol21970, 0);
// named:
send118852 = (Object)new_AST_Send((Object)classreference3155, (Object)symbol22133, 1, (Object)send118851);
block7920 = (Object)new_AST_Block_with((Type_Array)array13397, (Type_Array)empty_Type_Array, 3, 1, send118852);
// collect:
send118853 = (Object)new_AST_Send((Object)localvariable16842, (Object)symbol22254, 1, (Object)block7920);
// keywords:
send118854 = (Object)new_AST_Send((Object)localvariable16843, (Object)symbol22015, 1, (Object)send118853);
// new
send118855 = (Object)new_AST_Send((Object)classreference3162, (Object)symbol21894, 0);
constant22967 = (Object)new_AST_Constant((Object)symbol21970);
// collect:
send118856 = (Object)new_AST_Send((Object)localvariable16842, (Object)symbol22254, 1, (Object)constant22967);
// keywords:
send118857 = (Object)new_AST_Send((Object)send118855, (Object)symbol22015, 1, (Object)send118856);
// selector:
send118858 = (Object)new_AST_Send((Object)localvariable16843, (Object)symbol22010, 1, (Object)send118857);
constant22968 = (Object)new_AST_Constant((Object)symbol22237);
// collect:
send118859 = (Object)new_AST_Send((Object)localvariable16842, (Object)symbol22254, 1, (Object)constant22968);
// arguments:
send118860 = (Object)new_AST_Send((Object)localvariable16843, (Object)symbol22017, 1, (Object)send118859);
block7921 = (Object)new_AST_Block_with((Type_Array)array13396, (Type_Array)empty_Type_Array, 2, 3, send118854, send118858, send118860);
// new
send118861 = (Object)new_AST_Send((Object)classreference3153, (Object)symbol21894, 0);
// value:
send118862 = (Object)new_AST_Send((Object)block7921, (Object)SMB_value_, 1, (Object)send118861);
block7922 = (Object)new_AST_Block_with((Type_Array)array13395, (Type_Array)empty_Type_Array, 1, 1, send118862);
// named:parsing:semantics:
send118863 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22966, (Object)send118850, (Object)block7922);
method16063 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118863);
symbol22081 = (Object)new_Type_Symbol_cached(L"initializeKeywordAnnotation");
methodclosure16061 = (Object)new_Runtime_MethodClosure(method16063);
store_method((Type_Class)class2769, (Type_Symbol)symbol22081, (Runtime_MethodClosure)methodclosure16061);


// SCParser>>preStoreCascadedMessageExpression
//preStoreCascadedMessageExpression
// 	^ parsers at: #cascadedMessageExpression ifAbsentPut: [
// 		PEGParser named: 'CASCADED-MESSAGE-EXPRESSION'
// 	]
constant22969 = (Object)new_AST_Constant((Object)symbol22228);
string13454 = (Object)new_Type_String(L"CASCADED-MESSAGE-EXPRESSION");
constant22970 = (Object)new_AST_Constant((Object)string13454);
// named:
send118864 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22133, 1, (Object)constant22970);
block7923 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send118864);
// at:ifAbsentPut:
send118865 = (Object)new_AST_Send((Object)instancevariable4055, (Object)symbol22158, 2, (Object)constant22969, (Object)block7923);
method16064 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118865);
methodclosure16062 = (Object)new_Runtime_MethodClosure(method16064);
store_method((Type_Class)class2769, (Type_Symbol)symbol22098, (Runtime_MethodClosure)methodclosure16062);


// SCParser>>initializeArray
//initializeArray
// 	| array |
// 	array := PEGParser named: 'ARRAY'.
// 	
// 	array <= (('(' asPEG omit: true)
// 				
// 				& ((self numberConstant
// 					| self stringConstant
// 					<= self symbolInArray
// 					<= self symbolConstant
// 					<= self characterConstant
// 					<= array) times)
// 					
// 				<& (')' asPEG omit: true)).
// 	
// 	array semantics: [ :result |
// 		ASTArray new literals: result
// 	].
// 	
// 	 ^ array
localvariable16845 = (Object)new_AST_Variable_named(L"array");
array13398 = (Object)new_Type_Array_with(1, (Object)localvariable16845);
string13455 = (Object)new_Type_String(L"ARRAY");
constant22971 = (Object)new_AST_Constant((Object)string13455);
// named:
send118866 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22133, 1, (Object)constant22971);
assign14560 = (Object)new_AST_Assign((Object)localvariable16845, (Object)send118866);
string13456 = (Object)new_Type_String(L"(");
constant22972 = (Object)new_AST_Constant((Object)string13456);
// asPEG
send118867 = (Object)new_AST_Send((Object)constant22972, (Object)symbol21921, 0);
// omit:
send118868 = (Object)new_AST_Send((Object)send118867, (Object)symbol22123, 1, (Object)True_Const);
// numberConstant
send118869 = (Object)new_AST_Send((Object)Self, (Object)symbol22249, 0);
// stringConstant
send118870 = (Object)new_AST_Send((Object)Self, (Object)symbol22252, 0);
symbol22265 = (Object)new_Type_Symbol_cached(L"symbolInArray");
// symbolInArray
send118871 = (Object)new_AST_Send((Object)Self, (Object)symbol22265, 0);
// symbolConstant
send118872 = (Object)new_AST_Send((Object)Self, (Object)symbol22250, 0);
// characterConstant
send118873 = (Object)new_AST_Send((Object)Self, (Object)symbol22251, 0);
// <=
send118874 = (Object)new_AST_Send((Object)send118872, (Object)symbol21930, 1, (Object)send118873);
// <=
send118875 = (Object)new_AST_Send((Object)send118871, (Object)symbol21930, 1, (Object)send118874);
// <=
send118876 = (Object)new_AST_Send((Object)send118870, (Object)symbol21930, 1, (Object)send118875);
// |
send118877 = (Object)new_AST_Send((Object)send118869, (Object)SMB__or, 1, (Object)send118876);
// <=
send118878 = (Object)new_AST_Send((Object)send118877, (Object)symbol21930, 1, (Object)localvariable16845);
// times
send118879 = (Object)new_AST_Send((Object)send118878, (Object)symbol22115, 0);
// &
send118880 = (Object)new_AST_Send((Object)send118868, (Object)SMB__and, 1, (Object)send118879);
// <=
send118881 = (Object)new_AST_Send((Object)localvariable16845, (Object)symbol21930, 1, (Object)send118880);
string13457 = (Object)new_Type_String(L")");
constant22973 = (Object)new_AST_Constant((Object)string13457);
// asPEG
send118882 = (Object)new_AST_Send((Object)constant22973, (Object)symbol21921, 0);
// omit:
send118883 = (Object)new_AST_Send((Object)send118882, (Object)symbol22123, 1, (Object)True_Const);
// <&
send118884 = (Object)new_AST_Send((Object)send118881, (Object)symbol22165, 1, (Object)send118883);
localvariable16846 = (Object)new_AST_Variable_named(L"result");
array13399 = (Object)new_Type_Array_with(1, (Object)localvariable16846);
// new
send118885 = (Object)new_AST_Send((Object)classreference3147, (Object)symbol21894, 0);
// literals:
send118886 = (Object)new_AST_Send((Object)send118885, (Object)symbol21961, 1, (Object)localvariable16846);
block7924 = (Object)new_AST_Block_with((Type_Array)array13399, (Type_Array)empty_Type_Array, 1, 1, send118886);
// semantics:
send118887 = (Object)new_AST_Send((Object)localvariable16845, (Object)symbol22139, 1, (Object)block7924);
method16065 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13398, 4, assign14560, send118884, send118887, localvariable16845);
symbol22051 = (Object)new_Type_Symbol_cached(L"initializeArray");
methodclosure16063 = (Object)new_Runtime_MethodClosure(method16065);
store_method((Type_Class)class2769, (Type_Symbol)symbol22051, (Runtime_MethodClosure)methodclosure16063);


// SCParser>>initializeParameterName
//initializeParameterName
// 	^ self identifier
// identifier
send118888 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
method16066 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118888);
symbol22063 = (Object)new_Type_Symbol_cached(L"initializeParameterName");
methodclosure16064 = (Object)new_Runtime_MethodClosure(method16066);
store_method((Type_Class)class2769, (Type_Symbol)symbol22063, (Runtime_MethodClosure)methodclosure16064);


// SCParser>>initializeString
//initializeString
// 	" XXX Have to optimize and clean..."
// 	| stringBorder first |
// 	stringBorder := '''' asPEG omit: true.
// 
// 	^ PEGParser
// 		named: 'STRING'
// 		parsing: ((stringBorder && ((stringBorder not) strongTimes)) <& stringBorder) strongPlus
// 		semantics: [:result |
// 			first := result removeFirst.
// 			first := first inject: '' into: [:c :e | c, e ].
// 			result inject: first into: [:c :e | c, '''', (e inject: '' into: [:ic :ie | ic, ie ]) ]
// 		]
localvariable16847 = (Object)new_AST_Variable_named(L"stringBorder");
localvariable16848 = (Object)new_AST_Variable_named(L"first");
array13400 = (Object)new_Type_Array_with(2, (Object)localvariable16847, (Object)localvariable16848);
string13458 = (Object)new_Type_String(L"\'");
constant22974 = (Object)new_AST_Constant((Object)string13458);
// asPEG
send118889 = (Object)new_AST_Send((Object)constant22974, (Object)symbol21921, 0);
// omit:
send118890 = (Object)new_AST_Send((Object)send118889, (Object)symbol22123, 1, (Object)True_Const);
assign14561 = (Object)new_AST_Assign((Object)localvariable16847, (Object)send118890);
string13459 = (Object)new_Type_String(L"STRING");
constant22975 = (Object)new_AST_Constant((Object)string13459);
// not
send118891 = (Object)new_AST_Send((Object)localvariable16847, (Object)SMB_not, 0);
// strongTimes
send118892 = (Object)new_AST_Send((Object)send118891, (Object)symbol22117, 0);
// &&
send118893 = (Object)new_AST_Send((Object)localvariable16847, (Object)symbol22116, 1, (Object)send118892);
// <&
send118894 = (Object)new_AST_Send((Object)send118893, (Object)symbol22165, 1, (Object)localvariable16847);
// strongPlus
send118895 = (Object)new_AST_Send((Object)send118894, (Object)symbol22122, 0);
localvariable16849 = (Object)new_AST_Variable_named(L"result");
array13401 = (Object)new_Type_Array_with(1, (Object)localvariable16849);
symbol22266 = (Object)new_Type_Symbol_cached(L"removeFirst");
// removeFirst
send118896 = (Object)new_AST_Send((Object)localvariable16849, (Object)symbol22266, 0);
assign14562 = (Object)new_AST_Assign((Object)localvariable16848, (Object)send118896);
string13460 = (Object)new_Type_String(L"");
constant22976 = (Object)new_AST_Constant((Object)string13460);
localvariable16850 = (Object)new_AST_Variable_named(L"c");
localvariable16851 = (Object)new_AST_Variable_named(L"e");
array13402 = (Object)new_Type_Array_with(2, (Object)localvariable16850, (Object)localvariable16851);
// ,
send118897 = (Object)new_AST_Send((Object)localvariable16850, (Object)SMB__concat, 1, (Object)localvariable16851);
block7925 = (Object)new_AST_Block_with((Type_Array)array13402, (Type_Array)empty_Type_Array, 2, 1, send118897);
// inject:into:
send118898 = (Object)new_AST_Send((Object)localvariable16848, (Object)symbol21974, 2, (Object)constant22976, (Object)block7925);
assign14563 = (Object)new_AST_Assign((Object)localvariable16848, (Object)send118898);
localvariable16852 = (Object)new_AST_Variable_named(L"c");
localvariable16853 = (Object)new_AST_Variable_named(L"e");
array13403 = (Object)new_Type_Array_with(2, (Object)localvariable16852, (Object)localvariable16853);
string13461 = (Object)new_Type_String(L"\'");
constant22977 = (Object)new_AST_Constant((Object)string13461);
// ,
send118899 = (Object)new_AST_Send((Object)localvariable16852, (Object)SMB__concat, 1, (Object)constant22977);
string13462 = (Object)new_Type_String(L"");
constant22978 = (Object)new_AST_Constant((Object)string13462);
localvariable16854 = (Object)new_AST_Variable_named(L"ic");
localvariable16855 = (Object)new_AST_Variable_named(L"ie");
array13404 = (Object)new_Type_Array_with(2, (Object)localvariable16854, (Object)localvariable16855);
// ,
send118900 = (Object)new_AST_Send((Object)localvariable16854, (Object)SMB__concat, 1, (Object)localvariable16855);
block7926 = (Object)new_AST_Block_with((Type_Array)array13404, (Type_Array)empty_Type_Array, 3, 1, send118900);
// inject:into:
send118901 = (Object)new_AST_Send((Object)localvariable16853, (Object)symbol21974, 2, (Object)constant22978, (Object)block7926);
// ,
send118902 = (Object)new_AST_Send((Object)send118899, (Object)SMB__concat, 1, (Object)send118901);
block7927 = (Object)new_AST_Block_with((Type_Array)array13403, (Type_Array)empty_Type_Array, 2, 1, send118902);
// inject:into:
send118903 = (Object)new_AST_Send((Object)localvariable16849, (Object)symbol21974, 2, (Object)localvariable16848, (Object)block7927);
block7928 = (Object)new_AST_Block_with((Type_Array)array13401, (Type_Array)empty_Type_Array, 1, 3, assign14562, assign14563, send118903);
// named:parsing:semantics:
send118904 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22975, (Object)send118895, (Object)block7928);
method16067 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13400, 2, assign14561, send118904);
symbol22091 = (Object)new_Type_Symbol_cached(L"initializeString");
methodclosure16065 = (Object)new_Runtime_MethodClosure(method16067);
store_method((Type_Class)class2769, (Type_Symbol)symbol22091, (Runtime_MethodClosure)methodclosure16065);


// SCParser>>initializeMessagePattern
//initializeMessagePattern
// 	^ PEGParser
// 		named: 'MESSAGE-PATTERN'
// 		parsing: (self keywordsArguments | self binaryMessageDefinition <= self unaryMessageDefinition)
string13463 = (Object)new_Type_String(L"MESSAGE-PATTERN");
constant22979 = (Object)new_AST_Constant((Object)string13463);
symbol22267 = (Object)new_Type_Symbol_cached(L"keywordsArguments");
// keywordsArguments
send118905 = (Object)new_AST_Send((Object)Self, (Object)symbol22267, 0);
symbol22268 = (Object)new_Type_Symbol_cached(L"binaryMessageDefinition");
// binaryMessageDefinition
send118906 = (Object)new_AST_Send((Object)Self, (Object)symbol22268, 0);
// |
send118907 = (Object)new_AST_Send((Object)send118905, (Object)SMB__or, 1, (Object)send118906);
symbol22269 = (Object)new_Type_Symbol_cached(L"unaryMessageDefinition");
// unaryMessageDefinition
send118908 = (Object)new_AST_Send((Object)Self, (Object)symbol22269, 0);
// <=
send118909 = (Object)new_AST_Send((Object)send118907, (Object)symbol21930, 1, (Object)send118908);
// named:parsing:
send118910 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22136, 2, (Object)constant22979, (Object)send118909);
method16068 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118910);
symbol22108 = (Object)new_Type_Symbol_cached(L"initializeMessagePattern");
methodclosure16066 = (Object)new_Runtime_MethodClosure(method16068);
store_method((Type_Class)class2769, (Type_Symbol)symbol22108, (Runtime_MethodClosure)methodclosure16066);


// SCParser>>initializeBinaryObjectDescription
//initializeBinaryObjectDescription
// 	self binaryExpression.
// 	" binaryExpression will build this parser. "
// 	^ self binaryObjectDescription
// binaryExpression
send118911 = (Object)new_AST_Send((Object)Self, (Object)symbol22230, 0);
// binaryObjectDescription
send118912 = (Object)new_AST_Send((Object)Self, (Object)symbol22232, 0);
method16069 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send118911, send118912);
symbol22101 = (Object)new_Type_Symbol_cached(L"initializeBinaryObjectDescription");
methodclosure16067 = (Object)new_Runtime_MethodClosure(method16069);
store_method((Type_Class)class2769, (Type_Symbol)symbol22101, (Runtime_MethodClosure)methodclosure16067);


// SCParser>>initialize
//initialize
// 	super initialize.
// 	parsers := Dictionary new.
// 	symbols := Dictionary new.
// 	id := 0
super1296 = (Object)new_AST_Super((Object)symbol21801, 0);
// new
send118913 = (Object)new_AST_Send((Object)classreference3113, (Object)symbol21894, 0);
assign14564 = (Object)new_AST_Assign((Object)instancevariable4055, (Object)send118913);
// new
send118914 = (Object)new_AST_Send((Object)classreference3113, (Object)symbol21894, 0);
assign14565 = (Object)new_AST_Assign((Object)instancevariable4057, (Object)send118914);
smallint8305 = (Object)new_Type_SmallInt(0);
constant22980 = (Object)new_AST_Constant((Object)smallint8305);
assign14566 = (Object)new_AST_Assign((Object)instancevariable4056, (Object)constant22980);
method16070 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 5, super1296, assign14564, assign14565, assign14566, Self);
methodclosure16068 = (Object)new_Runtime_MethodClosure(method16070);
store_method((Type_Class)class2769, (Type_Symbol)symbol21801, (Runtime_MethodClosure)methodclosure16068);


// SCParser>>initializeSymbolConstant
//initializeSymbolConstant
// 	^ PEGParser
// 		named: 'SYMBOL-CONSTANT'
// 		parsing: (('#' asPEG omit: true) && self symbol)
// 		semantics: [ :result |
// 			ASTSymbol new symbol: result
// 		]
string13464 = (Object)new_Type_String(L"SYMBOL-CONSTANT");
constant22981 = (Object)new_AST_Constant((Object)string13464);
string13465 = (Object)new_Type_String(L"#");
constant22982 = (Object)new_AST_Constant((Object)string13465);
// asPEG
send118915 = (Object)new_AST_Send((Object)constant22982, (Object)symbol21921, 0);
// omit:
send118916 = (Object)new_AST_Send((Object)send118915, (Object)symbol22123, 1, (Object)True_Const);
// symbol
send118917 = (Object)new_AST_Send((Object)Self, (Object)symbol21983, 0);
// &&
send118918 = (Object)new_AST_Send((Object)send118916, (Object)symbol22116, 1, (Object)send118917);
localvariable16856 = (Object)new_AST_Variable_named(L"result");
array13405 = (Object)new_Type_Array_with(1, (Object)localvariable16856);
// new
send118919 = (Object)new_AST_Send((Object)classreference3155, (Object)symbol21894, 0);
// symbol:
send118920 = (Object)new_AST_Send((Object)send118919, (Object)symbol21984, 1, (Object)localvariable16856);
block7929 = (Object)new_AST_Block_with((Type_Array)array13405, (Type_Array)empty_Type_Array, 1, 1, send118920);
// named:parsing:semantics:
send118921 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22981, (Object)send118918, (Object)block7929);
method16071 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118921);
symbol22045 = (Object)new_Type_Symbol_cached(L"initializeSymbolConstant");
methodclosure16069 = (Object)new_Runtime_MethodClosure(method16071);
store_method((Type_Class)class2769, (Type_Symbol)symbol22045, (Runtime_MethodClosure)methodclosure16069);


// SCParser>>initializeBar
//initializeBar
// 	^ '|' asPEG omit: true
string13466 = (Object)new_Type_String(L"|");
constant22983 = (Object)new_AST_Constant((Object)string13466);
// asPEG
send118922 = (Object)new_AST_Send((Object)constant22983, (Object)symbol21921, 0);
// omit:
send118923 = (Object)new_AST_Send((Object)send118922, (Object)symbol22123, 1, (Object)True_Const);
method16072 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118923);
symbol22073 = (Object)new_Type_Symbol_cached(L"initializeBar");
methodclosure16070 = (Object)new_Runtime_MethodClosure(method16072);
store_method((Type_Class)class2769, (Type_Symbol)symbol22073, (Runtime_MethodClosure)methodclosure16070);


// SCParser>>initializeKeywordMessageExpression
//initializeKeywordMessageExpression
// 	^ PEGParser
// 		named: 'KEYWORD-MESSAGE-EXPRESSION'
// 		parsing: (self keyword & (self binaryObjectDescription)) plus
// 		semantics: [ :parts |
// 			ASTMessageExpression new
// 				keywords: (parts collect: #first);
// 				selector: (ASTKeywordSelector new 
// 							keywords: (parts collect: #first);
// 							selector: (self createSymbol: ((parts collect: #first) joinUsing: ':'), ':'));
// 				arguments: (parts collect: #second)
// 		]
string13467 = (Object)new_Type_String(L"KEYWORD-MESSAGE-EXPRESSION");
constant22984 = (Object)new_AST_Constant((Object)string13467);
// keyword
send118924 = (Object)new_AST_Send((Object)Self, (Object)symbol22218, 0);
// binaryObjectDescription
send118925 = (Object)new_AST_Send((Object)Self, (Object)symbol22232, 0);
// &
send118926 = (Object)new_AST_Send((Object)send118924, (Object)SMB__and, 1, (Object)send118925);
// plus
send118927 = (Object)new_AST_Send((Object)send118926, (Object)symbol22126, 0);
localvariable16857 = (Object)new_AST_Variable_named(L"parts");
array13406 = (Object)new_Type_Array_with(1, (Object)localvariable16857);
localvariable16858 = (Object)new_AST_Variable_named(L"receiver");
array13407 = (Object)new_Type_Array_with(1, (Object)localvariable16858);
constant22985 = (Object)new_AST_Constant((Object)symbol21970);
// collect:
send118928 = (Object)new_AST_Send((Object)localvariable16857, (Object)symbol22254, 1, (Object)constant22985);
// keywords:
send118929 = (Object)new_AST_Send((Object)localvariable16858, (Object)symbol22015, 1, (Object)send118928);
localvariable16859 = (Object)new_AST_Variable_named(L"receiver");
array13408 = (Object)new_Type_Array_with(1, (Object)localvariable16859);
constant22986 = (Object)new_AST_Constant((Object)symbol21970);
// collect:
send118930 = (Object)new_AST_Send((Object)localvariable16857, (Object)symbol22254, 1, (Object)constant22986);
// keywords:
send118931 = (Object)new_AST_Send((Object)localvariable16859, (Object)symbol22015, 1, (Object)send118930);
constant22987 = (Object)new_AST_Constant((Object)symbol21970);
// collect:
send118932 = (Object)new_AST_Send((Object)localvariable16857, (Object)symbol22254, 1, (Object)constant22987);
string13468 = (Object)new_Type_String(L":");
constant22988 = (Object)new_AST_Constant((Object)string13468);
// joinUsing:
send118933 = (Object)new_AST_Send((Object)send118932, (Object)symbol22208, 1, (Object)constant22988);
string13469 = (Object)new_Type_String(L":");
constant22989 = (Object)new_AST_Constant((Object)string13469);
// ,
send118934 = (Object)new_AST_Send((Object)send118933, (Object)SMB__concat, 1, (Object)constant22989);
// createSymbol:
send118935 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)send118934);
// selector:
send118936 = (Object)new_AST_Send((Object)localvariable16859, (Object)symbol22010, 1, (Object)send118935);
block7930 = (Object)new_AST_Block_with((Type_Array)array13408, (Type_Array)empty_Type_Array, 3, 2, send118931, send118936);
// new
send118937 = (Object)new_AST_Send((Object)classreference3162, (Object)symbol21894, 0);
// value:
send118938 = (Object)new_AST_Send((Object)block7930, (Object)SMB_value_, 1, (Object)send118937);
// selector:
send118939 = (Object)new_AST_Send((Object)localvariable16858, (Object)symbol22010, 1, (Object)send118938);
constant22990 = (Object)new_AST_Constant((Object)symbol22237);
// collect:
send118940 = (Object)new_AST_Send((Object)localvariable16857, (Object)symbol22254, 1, (Object)constant22990);
// arguments:
send118941 = (Object)new_AST_Send((Object)localvariable16858, (Object)symbol22017, 1, (Object)send118940);
block7931 = (Object)new_AST_Block_with((Type_Array)array13407, (Type_Array)empty_Type_Array, 2, 3, send118929, send118939, send118941);
// new
send118942 = (Object)new_AST_Send((Object)classreference3159, (Object)symbol21894, 0);
// value:
send118943 = (Object)new_AST_Send((Object)block7931, (Object)SMB_value_, 1, (Object)send118942);
block7932 = (Object)new_AST_Block_with((Type_Array)array13406, (Type_Array)empty_Type_Array, 1, 1, send118943);
// named:parsing:semantics:
send118944 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22984, (Object)send118927, (Object)block7932);
method16073 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118944);
symbol22085 = (Object)new_Type_Symbol_cached(L"initializeKeywordMessageExpression");
methodclosure16071 = (Object)new_Runtime_MethodClosure(method16073);
store_method((Type_Class)class2769, (Type_Symbol)symbol22085, (Runtime_MethodClosure)methodclosure16071);


// SCParser>>initializeUppercase
//initializeUppercase
// 	^ ('A-Z' asPEGRange)
string13470 = (Object)new_Type_String(L"A-Z");
constant22991 = (Object)new_AST_Constant((Object)string13470);
// asPEGRange
send118945 = (Object)new_AST_Send((Object)constant22991, (Object)symbol21918, 0);
method16074 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118945);
symbol22055 = (Object)new_Type_Symbol_cached(L"initializeUppercase");
methodclosure16072 = (Object)new_Runtime_MethodClosure(method16074);
store_method((Type_Class)class2769, (Type_Symbol)symbol22055, (Runtime_MethodClosure)methodclosure16072);


// SCParser>>initializeBlock
//initializeBlock
// 	^ PEGParser
// 		named: 'BLOCK'
// 		
// 		parsing: (('[' asPEG omit: true)
// 					& (self blockArguments & self bar) optional
// 					<& self temporaries optional
// 					<& self statements
// 					<& (']' asPEG omit: true))
// 
// 		semantics: [ :result |
// 			ASTBlock new
// 				parameters: ((result first) resultIfFailed: [ OrderedCollection new ]);
// 				temporaries: ((result at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				statements: 	(result at: 3)
// 		]
string13471 = (Object)new_Type_String(L"BLOCK");
constant22992 = (Object)new_AST_Constant((Object)string13471);
string13472 = (Object)new_Type_String(L"[");
constant22993 = (Object)new_AST_Constant((Object)string13472);
// asPEG
send118946 = (Object)new_AST_Send((Object)constant22993, (Object)symbol21921, 0);
// omit:
send118947 = (Object)new_AST_Send((Object)send118946, (Object)symbol22123, 1, (Object)True_Const);
symbol22270 = (Object)new_Type_Symbol_cached(L"blockArguments");
// blockArguments
send118948 = (Object)new_AST_Send((Object)Self, (Object)symbol22270, 0);
// bar
send118949 = (Object)new_AST_Send((Object)Self, (Object)symbol22240, 0);
// &
send118950 = (Object)new_AST_Send((Object)send118948, (Object)SMB__and, 1, (Object)send118949);
// optional
send118951 = (Object)new_AST_Send((Object)send118950, (Object)symbol22119, 0);
// temporaries
send118952 = (Object)new_AST_Send((Object)Self, (Object)symbol22025, 0);
// optional
send118953 = (Object)new_AST_Send((Object)send118952, (Object)symbol22119, 0);
// statements
send118954 = (Object)new_AST_Send((Object)Self, (Object)symbol22021, 0);
// <&
send118955 = (Object)new_AST_Send((Object)send118953, (Object)symbol22165, 1, (Object)send118954);
// <&
send118956 = (Object)new_AST_Send((Object)send118951, (Object)symbol22165, 1, (Object)send118955);
// &
send118957 = (Object)new_AST_Send((Object)send118947, (Object)SMB__and, 1, (Object)send118956);
string13473 = (Object)new_Type_String(L"]");
constant22994 = (Object)new_AST_Constant((Object)string13473);
// asPEG
send118958 = (Object)new_AST_Send((Object)constant22994, (Object)symbol21921, 0);
// omit:
send118959 = (Object)new_AST_Send((Object)send118958, (Object)symbol22123, 1, (Object)True_Const);
// <&
send118960 = (Object)new_AST_Send((Object)send118957, (Object)symbol22165, 1, (Object)send118959);
localvariable16860 = (Object)new_AST_Variable_named(L"result");
array13409 = (Object)new_Type_Array_with(1, (Object)localvariable16860);
localvariable16861 = (Object)new_AST_Variable_named(L"receiver");
array13410 = (Object)new_Type_Array_with(1, (Object)localvariable16861);
// first
send118961 = (Object)new_AST_Send((Object)localvariable16860, (Object)symbol21970, 0);
// new
send118962 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
block7933 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118962);
// resultIfFailed:
send118963 = (Object)new_AST_Send((Object)send118961, (Object)symbol22169, 1, (Object)block7933);
// parameters:
send118964 = (Object)new_AST_Send((Object)localvariable16861, (Object)symbol22030, 1, (Object)send118963);
smallint8306 = (Object)new_Type_SmallInt(2);
constant22995 = (Object)new_AST_Constant((Object)smallint8306);
// at:
send118965 = (Object)new_AST_Send((Object)localvariable16860, (Object)SMB_at_, 1, (Object)constant22995);
// new
send118966 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
block7934 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send118966);
// resultIfFailed:
send118967 = (Object)new_AST_Send((Object)send118965, (Object)symbol22169, 1, (Object)block7934);
// temporaries:
send118968 = (Object)new_AST_Send((Object)localvariable16861, (Object)symbol22026, 1, (Object)send118967);
smallint8307 = (Object)new_Type_SmallInt(3);
constant22996 = (Object)new_AST_Constant((Object)smallint8307);
// at:
send118969 = (Object)new_AST_Send((Object)localvariable16860, (Object)SMB_at_, 1, (Object)constant22996);
// statements:
send118970 = (Object)new_AST_Send((Object)localvariable16861, (Object)symbol22023, 1, (Object)send118969);
block7935 = (Object)new_AST_Block_with((Type_Array)array13410, (Type_Array)empty_Type_Array, 2, 3, send118964, send118968, send118970);
// new
send118971 = (Object)new_AST_Send((Object)classreference3151, (Object)symbol21894, 0);
// value:
send118972 = (Object)new_AST_Send((Object)block7935, (Object)SMB_value_, 1, (Object)send118971);
block7936 = (Object)new_AST_Block_with((Type_Array)array13409, (Type_Array)empty_Type_Array, 1, 1, send118972);
// named:parsing:semantics:
send118973 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22992, (Object)send118960, (Object)block7936);
method16075 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118973);
symbol22067 = (Object)new_Type_Symbol_cached(L"initializeBlock");
methodclosure16073 = (Object)new_Runtime_MethodClosure(method16075);
store_method((Type_Class)class2769, (Type_Symbol)symbol22067, (Runtime_MethodClosure)methodclosure16073);


// SCParser>>initializeKeywordExpression
//initializeKeywordExpression
// 	^ PEGParser
// 		named: 'KEYWORD-EXPRESSION'
// 		parsing: (self binaryObjectDescription & self keywordMessageExpression)
// 		semantics: [ :parts |
// 			(parts at: 2) receiver: (parts first)
// 		]
string13474 = (Object)new_Type_String(L"KEYWORD-EXPRESSION");
constant22997 = (Object)new_AST_Constant((Object)string13474);
// binaryObjectDescription
send118974 = (Object)new_AST_Send((Object)Self, (Object)symbol22232, 0);
// keywordMessageExpression
send118975 = (Object)new_AST_Send((Object)Self, (Object)symbol22224, 0);
// &
send118976 = (Object)new_AST_Send((Object)send118974, (Object)SMB__and, 1, (Object)send118975);
localvariable16862 = (Object)new_AST_Variable_named(L"parts");
array13411 = (Object)new_Type_Array_with(1, (Object)localvariable16862);
smallint8308 = (Object)new_Type_SmallInt(2);
constant22998 = (Object)new_AST_Constant((Object)smallint8308);
// at:
send118977 = (Object)new_AST_Send((Object)localvariable16862, (Object)SMB_at_, 1, (Object)constant22998);
// first
send118978 = (Object)new_AST_Send((Object)localvariable16862, (Object)symbol21970, 0);
// receiver:
send118979 = (Object)new_AST_Send((Object)send118977, (Object)symbol22004, 1, (Object)send118978);
block7937 = (Object)new_AST_Block_with((Type_Array)array13411, (Type_Array)empty_Type_Array, 1, 1, send118979);
// named:parsing:semantics:
send118980 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant22997, (Object)send118976, (Object)block7937);
method16076 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118980);
symbol22095 = (Object)new_Type_Symbol_cached(L"initializeKeywordExpression");
methodclosure16074 = (Object)new_Runtime_MethodClosure(method16076);
store_method((Type_Class)class2769, (Type_Symbol)symbol22095, (Runtime_MethodClosure)methodclosure16074);


// SCParser>>assignmentOp
//assignmentOp
// 	^ (':=' asPEG | '_') omit: true
string13475 = (Object)new_Type_String(L":=");
constant22999 = (Object)new_AST_Constant((Object)string13475);
// asPEG
send118981 = (Object)new_AST_Send((Object)constant22999, (Object)symbol21921, 0);
string13476 = (Object)new_Type_String(L"_");
constant23000 = (Object)new_AST_Constant((Object)string13476);
// |
send118982 = (Object)new_AST_Send((Object)send118981, (Object)SMB__or, 1, (Object)constant23000);
// omit:
send118983 = (Object)new_AST_Send((Object)send118982, (Object)symbol22123, 1, (Object)True_Const);
method16077 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118983);
methodclosure16075 = (Object)new_Runtime_MethodClosure(method16077);
store_method((Type_Class)class2769, (Type_Symbol)symbol22037, (Runtime_MethodClosure)methodclosure16075);


// SCParser>>initializeScopedExpression
//initializeScopedExpression
// 	^  (('(' asPEG omit: true) & self expression <& (')' asPEG omit: true))
string13477 = (Object)new_Type_String(L"(");
constant23001 = (Object)new_AST_Constant((Object)string13477);
// asPEG
send118984 = (Object)new_AST_Send((Object)constant23001, (Object)symbol21921, 0);
// omit:
send118985 = (Object)new_AST_Send((Object)send118984, (Object)symbol22123, 1, (Object)True_Const);
// expression
send118986 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
// &
send118987 = (Object)new_AST_Send((Object)send118985, (Object)SMB__and, 1, (Object)send118986);
string13478 = (Object)new_Type_String(L")");
constant23002 = (Object)new_AST_Constant((Object)string13478);
// asPEG
send118988 = (Object)new_AST_Send((Object)constant23002, (Object)symbol21921, 0);
// omit:
send118989 = (Object)new_AST_Send((Object)send118988, (Object)symbol22123, 1, (Object)True_Const);
// <&
send118990 = (Object)new_AST_Send((Object)send118987, (Object)symbol22165, 1, (Object)send118989);
method16078 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send118990);
symbol22060 = (Object)new_Type_Symbol_cached(L"initializeScopedExpression");
methodclosure16076 = (Object)new_Runtime_MethodClosure(method16078);
store_method((Type_Class)class2769, (Type_Symbol)symbol22060, (Runtime_MethodClosure)methodclosure16076);


// SCParser>>initializeMethod
//initializeMethod
// 	^ (PEGParser
// 		named: 'METHOD'
// 		parsing: self messagePattern
// 					& self temporaries optional
// 					<& self annotation times
// 					<& self statements
// 					<& self separator " Allow comment/whitespace at the end of a method. "
// 		semantics: [ :parts |
// 			ASTMethod new
// 				message:	(parts first);
// 				temporaries:	((parts at: 2) resultIfFailed: [ OrderedCollection new ]);
// 				annotations:	(parts at: 3);
// 				statements:	(parts at: 4);
// 				yourself
// 
// 		]) separator: (self separator)
string13479 = (Object)new_Type_String(L"METHOD");
constant23003 = (Object)new_AST_Constant((Object)string13479);
symbol22271 = (Object)new_Type_Symbol_cached(L"messagePattern");
// messagePattern
send118991 = (Object)new_AST_Send((Object)Self, (Object)symbol22271, 0);
// temporaries
send118992 = (Object)new_AST_Send((Object)Self, (Object)symbol22025, 0);
// optional
send118993 = (Object)new_AST_Send((Object)send118992, (Object)symbol22119, 0);
symbol22272 = (Object)new_Type_Symbol_cached(L"annotation");
// annotation
send118994 = (Object)new_AST_Send((Object)Self, (Object)symbol22272, 0);
// times
send118995 = (Object)new_AST_Send((Object)send118994, (Object)symbol22115, 0);
// statements
send118996 = (Object)new_AST_Send((Object)Self, (Object)symbol22021, 0);
// <&
send118997 = (Object)new_AST_Send((Object)send118995, (Object)symbol22165, 1, (Object)send118996);
// <&
send118998 = (Object)new_AST_Send((Object)send118993, (Object)symbol22165, 1, (Object)send118997);
// &
send118999 = (Object)new_AST_Send((Object)send118991, (Object)SMB__and, 1, (Object)send118998);
// separator
send119000 = (Object)new_AST_Send((Object)Self, (Object)symbol22132, 0);
// <&
send119001 = (Object)new_AST_Send((Object)send118999, (Object)symbol22165, 1, (Object)send119000);
localvariable16863 = (Object)new_AST_Variable_named(L"parts");
array13412 = (Object)new_Type_Array_with(1, (Object)localvariable16863);
localvariable16864 = (Object)new_AST_Variable_named(L"receiver");
array13413 = (Object)new_Type_Array_with(1, (Object)localvariable16864);
// first
send119002 = (Object)new_AST_Send((Object)localvariable16863, (Object)symbol21970, 0);
// message:
send119003 = (Object)new_AST_Send((Object)localvariable16864, (Object)symbol22019, 1, (Object)send119002);
smallint8309 = (Object)new_Type_SmallInt(2);
constant23004 = (Object)new_AST_Constant((Object)smallint8309);
// at:
send119004 = (Object)new_AST_Send((Object)localvariable16863, (Object)SMB_at_, 1, (Object)constant23004);
// new
send119005 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21894, 0);
block7938 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, 1, send119005);
// resultIfFailed:
send119006 = (Object)new_AST_Send((Object)send119004, (Object)symbol22169, 1, (Object)block7938);
// temporaries:
send119007 = (Object)new_AST_Send((Object)localvariable16864, (Object)symbol22026, 1, (Object)send119006);
smallint8310 = (Object)new_Type_SmallInt(3);
constant23005 = (Object)new_AST_Constant((Object)smallint8310);
// at:
send119008 = (Object)new_AST_Send((Object)localvariable16863, (Object)SMB_at_, 1, (Object)constant23005);
// annotations:
send119009 = (Object)new_AST_Send((Object)localvariable16864, (Object)symbol22027, 1, (Object)send119008);
smallint8311 = (Object)new_Type_SmallInt(4);
constant23006 = (Object)new_AST_Constant((Object)smallint8311);
// at:
send119010 = (Object)new_AST_Send((Object)localvariable16863, (Object)SMB_at_, 1, (Object)constant23006);
// statements:
send119011 = (Object)new_AST_Send((Object)localvariable16864, (Object)symbol22023, 1, (Object)send119010);
// yourself
send119012 = (Object)new_AST_Send((Object)localvariable16864, (Object)symbol21799, 0);
block7939 = (Object)new_AST_Block_with((Type_Array)array13413, (Type_Array)empty_Type_Array, 2, 5, send119003, send119007, send119009, send119011, send119012);
// new
send119013 = (Object)new_AST_Send((Object)classreference3175, (Object)symbol21894, 0);
// value:
send119014 = (Object)new_AST_Send((Object)block7939, (Object)SMB_value_, 1, (Object)send119013);
block7940 = (Object)new_AST_Block_with((Type_Array)array13412, (Type_Array)empty_Type_Array, 1, 1, send119014);
// named:parsing:semantics:
send119015 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant23003, (Object)send119001, (Object)block7940);
// separator
send119016 = (Object)new_AST_Send((Object)Self, (Object)symbol22132, 0);
// separator:
send119017 = (Object)new_AST_Send((Object)send119015, (Object)symbol22138, 1, (Object)send119016);
method16079 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send119017);
symbol22105 = (Object)new_Type_Symbol_cached(L"initializeMethod");
methodclosure16077 = (Object)new_Runtime_MethodClosure(method16079);
store_method((Type_Class)class2769, (Type_Symbol)symbol22105, (Runtime_MethodClosure)methodclosure16077);


// SCParser>>initializeUnaryAnnotation
//initializeUnaryAnnotation
// 	^ PEGParser
// 		named: 'UNARY-ANNOTATION'
// 		parsing: self unarySelector
// 		semantics: [ :selector |
// 			ASTUnaryAnnotation new
// 				selector: selector.
// 		]
string13480 = (Object)new_Type_String(L"UNARY-ANNOTATION");
constant23007 = (Object)new_AST_Constant((Object)string13480);
// unarySelector
send119018 = (Object)new_AST_Send((Object)Self, (Object)symbol22217, 0);
localvariable16865 = (Object)new_AST_Variable_named(L"selector");
array13414 = (Object)new_Type_Array_with(1, (Object)localvariable16865);
// new
send119019 = (Object)new_AST_Send((Object)classreference3161, (Object)symbol21894, 0);
// selector:
send119020 = (Object)new_AST_Send((Object)send119019, (Object)symbol22010, 1, (Object)localvariable16865);
block7941 = (Object)new_AST_Block_with((Type_Array)array13414, (Type_Array)empty_Type_Array, 1, 1, send119020);
// named:parsing:semantics:
send119021 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant23007, (Object)send119018, (Object)block7941);
method16080 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send119021);
symbol22077 = (Object)new_Type_Symbol_cached(L"initializeUnaryAnnotation");
methodclosure16078 = (Object)new_Runtime_MethodClosure(method16080);
store_method((Type_Class)class2769, (Type_Symbol)symbol22077, (Runtime_MethodClosure)methodclosure16078);


// SCParser>>initializeCharacter
//initializeCharacter
// 	^ (('[]{}()_^;$#:-|.' asPEGChoice) | PEGParser separators <= self decimalDigit <= self letter <= self specialCharacter)
string13481 = (Object)new_Type_String(L"[]{}()_^;$#:-|.");
constant23008 = (Object)new_AST_Constant((Object)string13481);
// asPEGChoice
send119022 = (Object)new_AST_Send((Object)constant23008, (Object)symbol21923, 0);
// separators
send119023 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22131, 0);
// decimalDigit
send119024 = (Object)new_AST_Send((Object)Self, (Object)symbol22222, 0);
// letter
send119025 = (Object)new_AST_Send((Object)Self, (Object)symbol22236, 0);
// <=
send119026 = (Object)new_AST_Send((Object)send119024, (Object)symbol21930, 1, (Object)send119025);
// <=
send119027 = (Object)new_AST_Send((Object)send119023, (Object)symbol21930, 1, (Object)send119026);
// |
send119028 = (Object)new_AST_Send((Object)send119022, (Object)SMB__or, 1, (Object)send119027);
// specialCharacter
send119029 = (Object)new_AST_Send((Object)Self, (Object)symbol22255, 0);
// <=
send119030 = (Object)new_AST_Send((Object)send119028, (Object)symbol21930, 1, (Object)send119029);
method16081 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send119030);
symbol22089 = (Object)new_Type_Symbol_cached(L"initializeCharacter");
methodclosure16079 = (Object)new_Runtime_MethodClosure(method16081);
store_method((Type_Class)class2769, (Type_Symbol)symbol22089, (Runtime_MethodClosure)methodclosure16079);


// SCParser>>initializeSpecialCharacter
//initializeSpecialCharacter
// 	^ ('+*/\~<>=@%?!&`,' asPEGChoice)
string13482 = (Object)new_Type_String(L"+*/\\~<>=@%?!&`,");
constant23009 = (Object)new_AST_Constant((Object)string13482);
// asPEGChoice
send119031 = (Object)new_AST_Send((Object)constant23009, (Object)symbol21923, 0);
method16082 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send119031);
symbol22042 = (Object)new_Type_Symbol_cached(L"initializeSpecialCharacter");
methodclosure16080 = (Object)new_Runtime_MethodClosure(method16082);
store_method((Type_Class)class2769, (Type_Symbol)symbol22042, (Runtime_MethodClosure)methodclosure16080);


// SCParser>>initializeUnarySelector
//initializeUnarySelector
// 	^ PEGParser
// 		named: 'UNARY-SELECTOR'
// 		parsing: (self identifier && (':' asPEG not consume: false))
// 		semantics: [ :selector |
// 			ASTUnarySelector new 
// 				selector: (self createSymbol: selector).
// 		]
string13483 = (Object)new_Type_String(L"UNARY-SELECTOR");
constant23010 = (Object)new_AST_Constant((Object)string13483);
// identifier
send119032 = (Object)new_AST_Send((Object)Self, (Object)symbol22242, 0);
string13484 = (Object)new_Type_String(L":");
constant23011 = (Object)new_AST_Constant((Object)string13484);
// asPEG
send119033 = (Object)new_AST_Send((Object)constant23011, (Object)symbol21921, 0);
// not
send119034 = (Object)new_AST_Send((Object)send119033, (Object)SMB_not, 0);
// consume:
send119035 = (Object)new_AST_Send((Object)send119034, (Object)symbol22167, 1, (Object)False_Const);
// &&
send119036 = (Object)new_AST_Send((Object)send119032, (Object)symbol22116, 1, (Object)send119035);
localvariable16866 = (Object)new_AST_Variable_named(L"selector");
array13415 = (Object)new_Type_Array_with(1, (Object)localvariable16866);
// new
send119037 = (Object)new_AST_Send((Object)classreference3157, (Object)symbol21894, 0);
// createSymbol:
send119038 = (Object)new_AST_Send((Object)Self, (Object)symbol22041, 1, (Object)localvariable16866);
// selector:
send119039 = (Object)new_AST_Send((Object)send119037, (Object)symbol22010, 1, (Object)send119038);
block7942 = (Object)new_AST_Block_with((Type_Array)array13415, (Type_Array)empty_Type_Array, 1, 1, send119039);
// named:parsing:semantics:
send119040 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22134, 3, (Object)constant23010, (Object)send119036, (Object)block7942);
method16083 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send119040);
symbol22070 = (Object)new_Type_Symbol_cached(L"initializeUnarySelector");
methodclosure16081 = (Object)new_Runtime_MethodClosure(method16083);
store_method((Type_Class)class2769, (Type_Symbol)symbol22070, (Runtime_MethodClosure)methodclosure16081);


// SCParser>>initializeMessageExpression
//initializeMessageExpression
// 	self expression.
// 	" expression will build this parser. "
// 	^ self messageExpression separator: (self separator).
// expression
send119041 = (Object)new_AST_Send((Object)Self, (Object)symbol22033, 0);
// messageExpression
send119042 = (Object)new_AST_Send((Object)Self, (Object)symbol22216, 0);
// separator
send119043 = (Object)new_AST_Send((Object)Self, (Object)symbol22132, 0);
// separator:
send119044 = (Object)new_AST_Send((Object)send119042, (Object)symbol22138, 1, (Object)send119043);
method16084 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send119041, send119044);
symbol22059 = (Object)new_Type_Symbol_cached(L"initializeMessageExpression");
methodclosure16082 = (Object)new_Runtime_MethodClosure(method16084);
store_method((Type_Class)class2769, (Type_Symbol)symbol22059, (Runtime_MethodClosure)methodclosure16082);


// SCParser>>preStorePrimary
//preStorePrimary
// 	^ parsers at: #primary ifAbsentPut: [ PEGParser named: 'PRIMARY' ]
constant23012 = (Object)new_AST_Constant((Object)symbol22244);
string13485 = (Object)new_Type_String(L"PRIMARY");
constant23013 = (Object)new_AST_Constant((Object)string13485);
// named:
send119045 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22133, 1, (Object)constant23013);
block7943 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send119045);
// at:ifAbsentPut:
send119046 = (Object)new_AST_Send((Object)instancevariable4055, (Object)symbol22158, 2, (Object)constant23012, (Object)block7943);
method16085 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send119046);
methodclosure16083 = (Object)new_Runtime_MethodClosure(method16085);
store_method((Type_Class)class2769, (Type_Symbol)symbol22082, (Runtime_MethodClosure)methodclosure16083);

classreference3177 = (Object)new_Organization_ClassReference((Type_Class)class2770);

// SCParserTest>>testBlockArguments
//testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
localvariable16867 = (Object)new_AST_Variable_named(L"string");
localvariable16868 = (Object)new_AST_Variable_named(L"result");
localvariable16869 = (Object)new_AST_Variable_named(L"var");
localvariable16870 = (Object)new_AST_Variable_named(L"parser");
array13416 = (Object)new_Type_Array_with(4, (Object)localvariable16867, (Object)localvariable16868, (Object)localvariable16869, (Object)localvariable16870);
// blockArguments
send119047 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22270, 0);
assign14567 = (Object)new_AST_Assign((Object)localvariable16870, (Object)send119047);
string13486 = (Object)new_Type_String(L":abcd :def");
constant23014 = (Object)new_AST_Constant((Object)string13486);
// on:
send119048 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23014);
assign14568 = (Object)new_AST_Assign((Object)localvariable16867, (Object)send119048);
// match:
send119049 = (Object)new_AST_Send((Object)localvariable16870, (Object)symbol22121, 1, (Object)localvariable16867);
assign14569 = (Object)new_AST_Assign((Object)localvariable16868, (Object)send119049);
// position
send119050 = (Object)new_AST_Send((Object)localvariable16867, (Object)symbol22197, 0);
// should
send119051 = (Object)new_AST_Send((Object)send119050, (Object)symbol22211, 0);
smallint8312 = (Object)new_Type_SmallInt(10);
constant23015 = (Object)new_AST_Constant((Object)smallint8312);
// =
send119052 = (Object)new_AST_Send((Object)send119051, (Object)SMB__equal, 1, (Object)constant23015);
// class
send119053 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_class, 0);
// should
send119054 = (Object)new_AST_Send((Object)send119053, (Object)symbol22211, 0);
// =
send119055 = (Object)new_AST_Send((Object)send119054, (Object)SMB__equal, 1, (Object)classreference3106);
// size
send119056 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_size, 0);
// should
send119057 = (Object)new_AST_Send((Object)send119056, (Object)symbol22211, 0);
smallint8313 = (Object)new_Type_SmallInt(2);
constant23016 = (Object)new_AST_Constant((Object)smallint8313);
// =
send119058 = (Object)new_AST_Send((Object)send119057, (Object)SMB__equal, 1, (Object)constant23016);
smallint8314 = (Object)new_Type_SmallInt(1);
constant23017 = (Object)new_AST_Constant((Object)smallint8314);
// at:
send119059 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_at_, 1, (Object)constant23017);
assign14570 = (Object)new_AST_Assign((Object)localvariable16869, (Object)send119059);
// class
send119060 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_class, 0);
// should
send119061 = (Object)new_AST_Send((Object)send119060, (Object)symbol22211, 0);
// =
send119062 = (Object)new_AST_Send((Object)send119061, (Object)SMB__equal, 1, (Object)classreference3173);
// name
send119063 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_name, 0);
// should
send119064 = (Object)new_AST_Send((Object)send119063, (Object)symbol22211, 0);
string13487 = (Object)new_Type_String(L"abcd");
constant23018 = (Object)new_AST_Constant((Object)string13487);
// =
send119065 = (Object)new_AST_Send((Object)send119064, (Object)SMB__equal, 1, (Object)constant23018);
smallint8315 = (Object)new_Type_SmallInt(2);
constant23019 = (Object)new_AST_Constant((Object)smallint8315);
// at:
send119066 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_at_, 1, (Object)constant23019);
assign14571 = (Object)new_AST_Assign((Object)localvariable16869, (Object)send119066);
// class
send119067 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_class, 0);
// should
send119068 = (Object)new_AST_Send((Object)send119067, (Object)symbol22211, 0);
// =
send119069 = (Object)new_AST_Send((Object)send119068, (Object)SMB__equal, 1, (Object)classreference3173);
// name
send119070 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_name, 0);
// should
send119071 = (Object)new_AST_Send((Object)send119070, (Object)symbol22211, 0);
string13488 = (Object)new_Type_String(L"def");
constant23020 = (Object)new_AST_Constant((Object)string13488);
// =
send119072 = (Object)new_AST_Send((Object)send119071, (Object)SMB__equal, 1, (Object)constant23020);
string13489 = (Object)new_Type_String(L" :  abcd:   def ");
constant23021 = (Object)new_AST_Constant((Object)string13489);
// on:
send119073 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23021);
assign14572 = (Object)new_AST_Assign((Object)localvariable16867, (Object)send119073);
// match:
send119074 = (Object)new_AST_Send((Object)localvariable16870, (Object)symbol22121, 1, (Object)localvariable16867);
assign14573 = (Object)new_AST_Assign((Object)localvariable16868, (Object)send119074);
// position
send119075 = (Object)new_AST_Send((Object)localvariable16867, (Object)symbol22197, 0);
// should
send119076 = (Object)new_AST_Send((Object)send119075, (Object)symbol22211, 0);
smallint8316 = (Object)new_Type_SmallInt(16);
constant23022 = (Object)new_AST_Constant((Object)smallint8316);
// =
send119077 = (Object)new_AST_Send((Object)send119076, (Object)SMB__equal, 1, (Object)constant23022);
// class
send119078 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_class, 0);
// should
send119079 = (Object)new_AST_Send((Object)send119078, (Object)symbol22211, 0);
// =
send119080 = (Object)new_AST_Send((Object)send119079, (Object)SMB__equal, 1, (Object)classreference3106);
// size
send119081 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_size, 0);
// should
send119082 = (Object)new_AST_Send((Object)send119081, (Object)symbol22211, 0);
smallint8317 = (Object)new_Type_SmallInt(2);
constant23023 = (Object)new_AST_Constant((Object)smallint8317);
// =
send119083 = (Object)new_AST_Send((Object)send119082, (Object)SMB__equal, 1, (Object)constant23023);
// first
send119084 = (Object)new_AST_Send((Object)localvariable16868, (Object)symbol21970, 0);
assign14574 = (Object)new_AST_Assign((Object)localvariable16869, (Object)send119084);
// class
send119085 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_class, 0);
// should
send119086 = (Object)new_AST_Send((Object)send119085, (Object)symbol22211, 0);
// =
send119087 = (Object)new_AST_Send((Object)send119086, (Object)SMB__equal, 1, (Object)classreference3173);
// name
send119088 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_name, 0);
// should
send119089 = (Object)new_AST_Send((Object)send119088, (Object)symbol22211, 0);
string13490 = (Object)new_Type_String(L"abcd");
constant23024 = (Object)new_AST_Constant((Object)string13490);
// =
send119090 = (Object)new_AST_Send((Object)send119089, (Object)SMB__equal, 1, (Object)constant23024);
smallint8318 = (Object)new_Type_SmallInt(2);
constant23025 = (Object)new_AST_Constant((Object)smallint8318);
// at:
send119091 = (Object)new_AST_Send((Object)localvariable16868, (Object)SMB_at_, 1, (Object)constant23025);
assign14575 = (Object)new_AST_Assign((Object)localvariable16869, (Object)send119091);
// class
send119092 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_class, 0);
// should
send119093 = (Object)new_AST_Send((Object)send119092, (Object)symbol22211, 0);
// =
send119094 = (Object)new_AST_Send((Object)send119093, (Object)SMB__equal, 1, (Object)classreference3173);
// name
send119095 = (Object)new_AST_Send((Object)localvariable16869, (Object)SMB_name, 0);
// should
send119096 = (Object)new_AST_Send((Object)send119095, (Object)symbol22211, 0);
string13491 = (Object)new_Type_String(L"def");
constant23026 = (Object)new_AST_Constant((Object)string13491);
// =
send119097 = (Object)new_AST_Send((Object)send119096, (Object)SMB__equal, 1, (Object)constant23026);
method16086 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13416, 24, assign14567, assign14568, assign14569, send119052, send119055, send119058, assign14570, send119062, send119065, assign14571, send119069, send119072, assign14572, assign14573, send119077, send119080, send119083, assign14574, send119087, send119090, assign14575, send119094, send119097, Self);
symbol21819 = (Object)new_Type_Symbol_cached(L"testBlockArguments");
methodclosure16084 = (Object)new_Runtime_MethodClosure(method16086);
store_method((Type_Class)class2770, (Type_Symbol)symbol21819, (Runtime_MethodClosure)methodclosure16084);


// SCParserTest>>testSymbolKeywords
//testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable16871 = (Object)new_AST_Variable_named(L"parser");
localvariable16872 = (Object)new_AST_Variable_named(L"string");
array13417 = (Object)new_Type_Array_with(2, (Object)localvariable16871, (Object)localvariable16872);
// symbolKeywords
send119098 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22243, 0);
assign14576 = (Object)new_AST_Assign((Object)localvariable16871, (Object)send119098);
string13492 = (Object)new_Type_String(L"abcd:def: ");
constant23027 = (Object)new_AST_Constant((Object)string13492);
// on:
send119099 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23027);
assign14577 = (Object)new_AST_Assign((Object)localvariable16872, (Object)send119099);
// match:
send119100 = (Object)new_AST_Send((Object)localvariable16871, (Object)symbol22121, 1, (Object)localvariable16872);
// should
send119101 = (Object)new_AST_Send((Object)send119100, (Object)symbol22211, 0);
string13493 = (Object)new_Type_String(L"abcd:def:");
constant23028 = (Object)new_AST_Constant((Object)string13493);
// =
send119102 = (Object)new_AST_Send((Object)send119101, (Object)SMB__equal, 1, (Object)constant23028);
// position
send119103 = (Object)new_AST_Send((Object)localvariable16872, (Object)symbol22197, 0);
// should
send119104 = (Object)new_AST_Send((Object)send119103, (Object)symbol22211, 0);
smallint8319 = (Object)new_Type_SmallInt(9);
constant23029 = (Object)new_AST_Constant((Object)smallint8319);
// =
send119105 = (Object)new_AST_Send((Object)send119104, (Object)SMB__equal, 1, (Object)constant23029);
string13494 = (Object)new_Type_String(L"abcd ");
constant23030 = (Object)new_AST_Constant((Object)string13494);
// on:
send119106 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23030);
assign14578 = (Object)new_AST_Assign((Object)localvariable16872, (Object)send119106);
// match:
send119107 = (Object)new_AST_Send((Object)localvariable16871, (Object)symbol22121, 1, (Object)localvariable16872);
// should
send119108 = (Object)new_AST_Send((Object)send119107, (Object)symbol22211, 0);
symbol22273 = (Object)new_Type_Symbol_cached(L"be");
// be
send119109 = (Object)new_AST_Send((Object)send119108, (Object)symbol22273, 0);
// isNil
send119110 = (Object)new_AST_Send((Object)send119109, (Object)SMB_isNil, 0);
// position
send119111 = (Object)new_AST_Send((Object)localvariable16872, (Object)symbol22197, 0);
// should
send119112 = (Object)new_AST_Send((Object)send119111, (Object)symbol22211, 0);
smallint8320 = (Object)new_Type_SmallInt(0);
constant23031 = (Object)new_AST_Constant((Object)smallint8320);
// =
send119113 = (Object)new_AST_Send((Object)send119112, (Object)SMB__equal, 1, (Object)constant23031);
method16087 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13417, 8, assign14576, assign14577, send119102, send119105, assign14578, send119110, send119113, Self);
symbol21847 = (Object)new_Type_Symbol_cached(L"testSymbolKeywords");
methodclosure16085 = (Object)new_Runtime_MethodClosure(method16087);
store_method((Type_Class)class2770, (Type_Symbol)symbol21847, (Runtime_MethodClosure)methodclosure16085);


// SCParserTest>>testMessageExpression
//testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
localvariable16873 = (Object)new_AST_Variable_named(L"parser");
localvariable16874 = (Object)new_AST_Variable_named(L"string");
localvariable16875 = (Object)new_AST_Variable_named(L"result");
array13418 = (Object)new_Type_Array_with(3, (Object)localvariable16873, (Object)localvariable16874, (Object)localvariable16875);
// messageExpression
send119114 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22216, 0);
assign14579 = (Object)new_AST_Assign((Object)localvariable16873, (Object)send119114);
string13495 = (Object)new_Type_String(L"super+4");
constant23032 = (Object)new_AST_Constant((Object)string13495);
// on:
send119115 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23032);
assign14580 = (Object)new_AST_Assign((Object)localvariable16874, (Object)send119115);
// match:
send119116 = (Object)new_AST_Send((Object)localvariable16873, (Object)symbol22121, 1, (Object)localvariable16874);
assign14581 = (Object)new_AST_Assign((Object)localvariable16875, (Object)send119116);
// class
send119117 = (Object)new_AST_Send((Object)localvariable16875, (Object)SMB_class, 0);
// should
send119118 = (Object)new_AST_Send((Object)send119117, (Object)symbol22211, 0);
// =
send119119 = (Object)new_AST_Send((Object)send119118, (Object)SMB__equal, 1, (Object)classreference3154);
// receiver
send119120 = (Object)new_AST_Send((Object)localvariable16875, (Object)symbol22006, 0);
// class
send119121 = (Object)new_AST_Send((Object)send119120, (Object)SMB_class, 0);
// should
send119122 = (Object)new_AST_Send((Object)send119121, (Object)symbol22211, 0);
// =
send119123 = (Object)new_AST_Send((Object)send119122, (Object)SMB__equal, 1, (Object)classreference3172);
string13496 = (Object)new_Type_String(L"self a: 4 b: 3");
constant23033 = (Object)new_AST_Constant((Object)string13496);
// on:
send119124 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23033);
assign14582 = (Object)new_AST_Assign((Object)localvariable16874, (Object)send119124);
// match:
send119125 = (Object)new_AST_Send((Object)localvariable16873, (Object)symbol22121, 1, (Object)localvariable16874);
assign14583 = (Object)new_AST_Assign((Object)localvariable16875, (Object)send119125);
// class
send119126 = (Object)new_AST_Send((Object)localvariable16875, (Object)SMB_class, 0);
// should
send119127 = (Object)new_AST_Send((Object)send119126, (Object)symbol22211, 0);
// =
send119128 = (Object)new_AST_Send((Object)send119127, (Object)SMB__equal, 1, (Object)classreference3159);
// receiver
send119129 = (Object)new_AST_Send((Object)localvariable16875, (Object)symbol22006, 0);
// class
send119130 = (Object)new_AST_Send((Object)send119129, (Object)SMB_class, 0);
// should
send119131 = (Object)new_AST_Send((Object)send119130, (Object)symbol22211, 0);
// =
send119132 = (Object)new_AST_Send((Object)send119131, (Object)SMB__equal, 1, (Object)classreference3174);
string13497 = (Object)new_Type_String(L"2 d");
constant23034 = (Object)new_AST_Constant((Object)string13497);
// on:
send119133 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23034);
assign14584 = (Object)new_AST_Assign((Object)localvariable16874, (Object)send119133);
// match:
send119134 = (Object)new_AST_Send((Object)localvariable16873, (Object)symbol22121, 1, (Object)localvariable16874);
assign14585 = (Object)new_AST_Assign((Object)localvariable16875, (Object)send119134);
// class
send119135 = (Object)new_AST_Send((Object)localvariable16875, (Object)SMB_class, 0);
// should
send119136 = (Object)new_AST_Send((Object)send119135, (Object)symbol22211, 0);
// =
send119137 = (Object)new_AST_Send((Object)send119136, (Object)SMB__equal, 1, (Object)classreference3164);
// receiver
send119138 = (Object)new_AST_Send((Object)localvariable16875, (Object)symbol22006, 0);
// class
send119139 = (Object)new_AST_Send((Object)send119138, (Object)SMB_class, 0);
// should
send119140 = (Object)new_AST_Send((Object)send119139, (Object)symbol22211, 0);
// =
send119141 = (Object)new_AST_Send((Object)send119140, (Object)SMB__equal, 1, (Object)classreference3150);
// receiver
send119142 = (Object)new_AST_Send((Object)localvariable16875, (Object)symbol22006, 0);
// asInteger
send119143 = (Object)new_AST_Send((Object)send119142, (Object)symbol21980, 0);
// should
send119144 = (Object)new_AST_Send((Object)send119143, (Object)symbol22211, 0);
smallint8321 = (Object)new_Type_SmallInt(2);
constant23035 = (Object)new_AST_Constant((Object)smallint8321);
// =
send119145 = (Object)new_AST_Send((Object)send119144, (Object)SMB__equal, 1, (Object)constant23035);
method16088 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13418, 15, assign14579, assign14580, assign14581, send119119, send119123, assign14582, assign14583, send119128, send119132, assign14584, assign14585, send119137, send119141, send119145, Self);
symbol21855 = (Object)new_Type_Symbol_cached(L"testMessageExpression");
methodclosure16086 = (Object)new_Runtime_MethodClosure(method16088);
store_method((Type_Class)class2770, (Type_Symbol)symbol21855, (Runtime_MethodClosure)methodclosure16086);


// SCParserTest>>setUp
//setUp
// 	scparser := SCParser new
// new
send119146 = (Object)new_AST_Send((Object)classreference3176, (Object)symbol21894, 0);
assign14586 = (Object)new_AST_Assign((Object)instancevariable4058, (Object)send119146);
method16089 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign14586, Self);
symbol21867 = (Object)new_Type_Symbol_cached(L"setUp");
methodclosure16087 = (Object)new_Runtime_MethodClosure(method16089);
store_method((Type_Class)class2770, (Type_Symbol)symbol21867, (Runtime_MethodClosure)methodclosure16087);


// SCParserTest>>testSuper
//testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
localvariable16876 = (Object)new_AST_Variable_named(L"parser");
localvariable16877 = (Object)new_AST_Variable_named(L"string");
localvariable16878 = (Object)new_AST_Variable_named(L"message");
localvariable16879 = (Object)new_AST_Variable_named(L"return");
array13419 = (Object)new_Type_Array_with(4, (Object)localvariable16876, (Object)localvariable16877, (Object)localvariable16878, (Object)localvariable16879);
// messageExpression
send119147 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22216, 0);
assign14587 = (Object)new_AST_Assign((Object)localvariable16876, (Object)send119147);
string13498 = (Object)new_Type_String(L"super do: this and: that");
constant23036 = (Object)new_AST_Constant((Object)string13498);
// on:
send119148 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23036);
assign14588 = (Object)new_AST_Assign((Object)localvariable16877, (Object)send119148);
// match:
send119149 = (Object)new_AST_Send((Object)localvariable16876, (Object)symbol22121, 1, (Object)localvariable16877);
assign14589 = (Object)new_AST_Assign((Object)localvariable16878, (Object)send119149);
// receiver
send119150 = (Object)new_AST_Send((Object)localvariable16878, (Object)symbol22006, 0);
// class
send119151 = (Object)new_AST_Send((Object)send119150, (Object)SMB_class, 0);
// should
send119152 = (Object)new_AST_Send((Object)send119151, (Object)symbol22211, 0);
// =
send119153 = (Object)new_AST_Send((Object)send119152, (Object)SMB__equal, 1, (Object)classreference3172);
// return
send119154 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22234, 0);
assign14590 = (Object)new_AST_Assign((Object)localvariable16876, (Object)send119154);
string13499 = (Object)new_Type_String(L"^ super do: this and: that");
constant23037 = (Object)new_AST_Constant((Object)string13499);
// on:
send119155 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23037);
assign14591 = (Object)new_AST_Assign((Object)localvariable16877, (Object)send119155);
// match:
send119156 = (Object)new_AST_Send((Object)localvariable16876, (Object)symbol22121, 1, (Object)localvariable16877);
assign14592 = (Object)new_AST_Assign((Object)localvariable16879, (Object)send119156);
// class
send119157 = (Object)new_AST_Send((Object)localvariable16879, (Object)SMB_class, 0);
// should
send119158 = (Object)new_AST_Send((Object)send119157, (Object)symbol22211, 0);
// =
send119159 = (Object)new_AST_Send((Object)send119158, (Object)SMB__equal, 1, (Object)classreference3158);
// expression
send119160 = (Object)new_AST_Send((Object)localvariable16879, (Object)symbol22033, 0);
// receiver
send119161 = (Object)new_AST_Send((Object)send119160, (Object)symbol22006, 0);
// class
send119162 = (Object)new_AST_Send((Object)send119161, (Object)SMB_class, 0);
// should
send119163 = (Object)new_AST_Send((Object)send119162, (Object)symbol22211, 0);
// =
send119164 = (Object)new_AST_Send((Object)send119163, (Object)SMB__equal, 1, (Object)classreference3172);
method16090 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13419, 10, assign14587, assign14588, assign14589, send119153, assign14590, assign14591, assign14592, send119159, send119164, Self);
symbol21875 = (Object)new_Type_Symbol_cached(L"testSuper");
methodclosure16088 = (Object)new_Runtime_MethodClosure(method16090);
store_method((Type_Class)class2770, (Type_Symbol)symbol21875, (Runtime_MethodClosure)methodclosure16088);


// SCParserTest>>testFinalExpression
//testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable16880 = (Object)new_AST_Variable_named(L"parser");
localvariable16881 = (Object)new_AST_Variable_named(L"string");
localvariable16882 = (Object)new_AST_Variable_named(L"result");
array13420 = (Object)new_Type_Array_with(3, (Object)localvariable16880, (Object)localvariable16881, (Object)localvariable16882);
// finalExpression
send119165 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22235, 0);
assign14593 = (Object)new_AST_Assign((Object)localvariable16880, (Object)send119165);
string13500 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23038 = (Object)new_AST_Constant((Object)string13500);
// on:
send119166 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23038);
assign14594 = (Object)new_AST_Assign((Object)localvariable16881, (Object)send119166);
// match:
send119167 = (Object)new_AST_Send((Object)localvariable16880, (Object)symbol22121, 1, (Object)localvariable16881);
assign14595 = (Object)new_AST_Assign((Object)localvariable16882, (Object)send119167);
// class
send119168 = (Object)new_AST_Send((Object)localvariable16882, (Object)SMB_class, 0);
// should
send119169 = (Object)new_AST_Send((Object)send119168, (Object)symbol22211, 0);
// =
send119170 = (Object)new_AST_Send((Object)send119169, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119171 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// class
send119172 = (Object)new_AST_Send((Object)send119171, (Object)SMB_class, 0);
// should
send119173 = (Object)new_AST_Send((Object)send119172, (Object)symbol22211, 0);
// =
send119174 = (Object)new_AST_Send((Object)send119173, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119175 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// name
send119176 = (Object)new_AST_Send((Object)send119175, (Object)SMB_name, 0);
// should
send119177 = (Object)new_AST_Send((Object)send119176, (Object)symbol22211, 0);
string13501 = (Object)new_Type_String(L"a");
constant23039 = (Object)new_AST_Constant((Object)string13501);
// =
send119178 = (Object)new_AST_Send((Object)send119177, (Object)SMB__equal, 1, (Object)constant23039);
// expression
send119179 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22033, 0);
assign14596 = (Object)new_AST_Assign((Object)localvariable16882, (Object)send119179);
// class
send119180 = (Object)new_AST_Send((Object)localvariable16882, (Object)SMB_class, 0);
// should
send119181 = (Object)new_AST_Send((Object)send119180, (Object)symbol22211, 0);
// =
send119182 = (Object)new_AST_Send((Object)send119181, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119183 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// class
send119184 = (Object)new_AST_Send((Object)send119183, (Object)SMB_class, 0);
// should
send119185 = (Object)new_AST_Send((Object)send119184, (Object)symbol22211, 0);
// =
send119186 = (Object)new_AST_Send((Object)send119185, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119187 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// name
send119188 = (Object)new_AST_Send((Object)send119187, (Object)SMB_name, 0);
// should
send119189 = (Object)new_AST_Send((Object)send119188, (Object)symbol22211, 0);
string13502 = (Object)new_Type_String(L"b");
constant23040 = (Object)new_AST_Constant((Object)string13502);
// =
send119190 = (Object)new_AST_Send((Object)send119189, (Object)SMB__equal, 1, (Object)constant23040);
// expression
send119191 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22033, 0);
assign14597 = (Object)new_AST_Assign((Object)localvariable16882, (Object)send119191);
// class
send119192 = (Object)new_AST_Send((Object)localvariable16882, (Object)SMB_class, 0);
// should
send119193 = (Object)new_AST_Send((Object)send119192, (Object)symbol22211, 0);
// =
send119194 = (Object)new_AST_Send((Object)send119193, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119195 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// class
send119196 = (Object)new_AST_Send((Object)send119195, (Object)SMB_class, 0);
// should
send119197 = (Object)new_AST_Send((Object)send119196, (Object)symbol22211, 0);
// =
send119198 = (Object)new_AST_Send((Object)send119197, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119199 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// name
send119200 = (Object)new_AST_Send((Object)send119199, (Object)SMB_name, 0);
// should
send119201 = (Object)new_AST_Send((Object)send119200, (Object)symbol22211, 0);
string13503 = (Object)new_Type_String(L"c");
constant23041 = (Object)new_AST_Constant((Object)string13503);
// =
send119202 = (Object)new_AST_Send((Object)send119201, (Object)SMB__equal, 1, (Object)constant23041);
// expression
send119203 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22033, 0);
// class
send119204 = (Object)new_AST_Send((Object)send119203, (Object)SMB_class, 0);
// should
send119205 = (Object)new_AST_Send((Object)send119204, (Object)symbol22211, 0);
// =
send119206 = (Object)new_AST_Send((Object)send119205, (Object)SMB__equal, 1, (Object)classreference3159);
string13504 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant23042 = (Object)new_AST_Constant((Object)string13504);
// on:
send119207 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23042);
assign14598 = (Object)new_AST_Assign((Object)localvariable16881, (Object)send119207);
// match:
send119208 = (Object)new_AST_Send((Object)localvariable16880, (Object)symbol22121, 1, (Object)localvariable16881);
assign14599 = (Object)new_AST_Assign((Object)localvariable16882, (Object)send119208);
// class
send119209 = (Object)new_AST_Send((Object)localvariable16882, (Object)SMB_class, 0);
// should
send119210 = (Object)new_AST_Send((Object)send119209, (Object)symbol22211, 0);
// =
send119211 = (Object)new_AST_Send((Object)send119210, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119212 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// class
send119213 = (Object)new_AST_Send((Object)send119212, (Object)SMB_class, 0);
// should
send119214 = (Object)new_AST_Send((Object)send119213, (Object)symbol22211, 0);
// =
send119215 = (Object)new_AST_Send((Object)send119214, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119216 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// name
send119217 = (Object)new_AST_Send((Object)send119216, (Object)SMB_name, 0);
// should
send119218 = (Object)new_AST_Send((Object)send119217, (Object)symbol22211, 0);
string13505 = (Object)new_Type_String(L"a");
constant23043 = (Object)new_AST_Constant((Object)string13505);
// =
send119219 = (Object)new_AST_Send((Object)send119218, (Object)SMB__equal, 1, (Object)constant23043);
// expression
send119220 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22033, 0);
assign14600 = (Object)new_AST_Assign((Object)localvariable16882, (Object)send119220);
// class
send119221 = (Object)new_AST_Send((Object)localvariable16882, (Object)SMB_class, 0);
// should
send119222 = (Object)new_AST_Send((Object)send119221, (Object)symbol22211, 0);
// =
send119223 = (Object)new_AST_Send((Object)send119222, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119224 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// class
send119225 = (Object)new_AST_Send((Object)send119224, (Object)SMB_class, 0);
// should
send119226 = (Object)new_AST_Send((Object)send119225, (Object)symbol22211, 0);
// =
send119227 = (Object)new_AST_Send((Object)send119226, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119228 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// name
send119229 = (Object)new_AST_Send((Object)send119228, (Object)SMB_name, 0);
// should
send119230 = (Object)new_AST_Send((Object)send119229, (Object)symbol22211, 0);
string13506 = (Object)new_Type_String(L"b");
constant23044 = (Object)new_AST_Constant((Object)string13506);
// =
send119231 = (Object)new_AST_Send((Object)send119230, (Object)SMB__equal, 1, (Object)constant23044);
// expression
send119232 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22033, 0);
assign14601 = (Object)new_AST_Assign((Object)localvariable16882, (Object)send119232);
// class
send119233 = (Object)new_AST_Send((Object)localvariable16882, (Object)SMB_class, 0);
// should
send119234 = (Object)new_AST_Send((Object)send119233, (Object)symbol22211, 0);
// =
send119235 = (Object)new_AST_Send((Object)send119234, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119236 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// class
send119237 = (Object)new_AST_Send((Object)send119236, (Object)SMB_class, 0);
// should
send119238 = (Object)new_AST_Send((Object)send119237, (Object)symbol22211, 0);
// =
send119239 = (Object)new_AST_Send((Object)send119238, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119240 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22035, 0);
// name
send119241 = (Object)new_AST_Send((Object)send119240, (Object)SMB_name, 0);
// should
send119242 = (Object)new_AST_Send((Object)send119241, (Object)symbol22211, 0);
string13507 = (Object)new_Type_String(L"c");
constant23045 = (Object)new_AST_Constant((Object)string13507);
// =
send119243 = (Object)new_AST_Send((Object)send119242, (Object)SMB__equal, 1, (Object)constant23045);
// expression
send119244 = (Object)new_AST_Send((Object)localvariable16882, (Object)symbol22033, 0);
// class
send119245 = (Object)new_AST_Send((Object)send119244, (Object)SMB_class, 0);
// should
send119246 = (Object)new_AST_Send((Object)send119245, (Object)symbol22211, 0);
// =
send119247 = (Object)new_AST_Send((Object)send119246, (Object)SMB__equal, 1, (Object)classreference3159);
method16091 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13420, 30, assign14593, assign14594, assign14595, send119170, send119174, send119178, assign14596, send119182, send119186, send119190, assign14597, send119194, send119198, send119202, send119206, assign14598, assign14599, send119211, send119215, send119219, assign14600, send119223, send119227, send119231, assign14601, send119235, send119239, send119243, send119247, Self);
symbol21840 = (Object)new_Type_Symbol_cached(L"testFinalExpression");
methodclosure16089 = (Object)new_Runtime_MethodClosure(method16091);
store_method((Type_Class)class2770, (Type_Symbol)symbol21840, (Runtime_MethodClosure)methodclosure16089);


// SCParserTest>>testKeywordsArguments
//testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
localvariable16883 = (Object)new_AST_Variable_named(L"parser");
localvariable16884 = (Object)new_AST_Variable_named(L"string");
localvariable16885 = (Object)new_AST_Variable_named(L"result");
array13421 = (Object)new_Type_Array_with(3, (Object)localvariable16883, (Object)localvariable16884, (Object)localvariable16885);
// keywordsArguments
send119248 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22267, 0);
assign14602 = (Object)new_AST_Assign((Object)localvariable16883, (Object)send119248);
string13508 = (Object)new_Type_String(L"test: ab");
constant23046 = (Object)new_AST_Constant((Object)string13508);
// on:
send119249 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23046);
assign14603 = (Object)new_AST_Assign((Object)localvariable16884, (Object)send119249);
// match:
send119250 = (Object)new_AST_Send((Object)localvariable16883, (Object)symbol22121, 1, (Object)localvariable16884);
assign14604 = (Object)new_AST_Assign((Object)localvariable16885, (Object)send119250);
// class
send119251 = (Object)new_AST_Send((Object)localvariable16885, (Object)SMB_class, 0);
// should
send119252 = (Object)new_AST_Send((Object)send119251, (Object)symbol22211, 0);
// =
send119253 = (Object)new_AST_Send((Object)send119252, (Object)SMB__equal, 1, (Object)classreference3148);
// keywords
send119254 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22016, 0);
// should
send119255 = (Object)new_AST_Send((Object)send119254, (Object)symbol22211, 0);
string13509 = (Object)new_Type_String(L"test");
constant23047 = (Object)new_AST_Constant((Object)string13509);
// with:
send119256 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol21967, 1, (Object)constant23047);
// =
send119257 = (Object)new_AST_Send((Object)send119255, (Object)SMB__equal, 1, (Object)send119256);
// parameters
send119258 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22011, 0);
// size
send119259 = (Object)new_AST_Send((Object)send119258, (Object)SMB_size, 0);
// should
send119260 = (Object)new_AST_Send((Object)send119259, (Object)symbol22211, 0);
smallint8322 = (Object)new_Type_SmallInt(1);
constant23048 = (Object)new_AST_Constant((Object)smallint8322);
// =
send119261 = (Object)new_AST_Send((Object)send119260, (Object)SMB__equal, 1, (Object)constant23048);
// parameters
send119262 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22011, 0);
// first
send119263 = (Object)new_AST_Send((Object)send119262, (Object)symbol21970, 0);
// should
send119264 = (Object)new_AST_Send((Object)send119263, (Object)symbol22211, 0);
// new
send119265 = (Object)new_AST_Send((Object)classreference3173, (Object)symbol21894, 0);
string13510 = (Object)new_Type_String(L"ab");
constant23049 = (Object)new_AST_Constant((Object)string13510);
// name:
send119266 = (Object)new_AST_Send((Object)send119265, (Object)symbol21999, 1, (Object)constant23049);
// =
send119267 = (Object)new_AST_Send((Object)send119264, (Object)SMB__equal, 1, (Object)send119266);
// position
send119268 = (Object)new_AST_Send((Object)localvariable16884, (Object)symbol22197, 0);
// should
send119269 = (Object)new_AST_Send((Object)send119268, (Object)symbol22211, 0);
smallint8323 = (Object)new_Type_SmallInt(8);
constant23050 = (Object)new_AST_Constant((Object)smallint8323);
// =
send119270 = (Object)new_AST_Send((Object)send119269, (Object)SMB__equal, 1, (Object)constant23050);
string13511 = (Object)new_Type_String(L"bla a");
constant23051 = (Object)new_AST_Constant((Object)string13511);
// on:
send119271 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23051);
assign14605 = (Object)new_AST_Assign((Object)localvariable16884, (Object)send119271);
// match:
send119272 = (Object)new_AST_Send((Object)localvariable16883, (Object)symbol22121, 1, (Object)localvariable16884);
// should
send119273 = (Object)new_AST_Send((Object)send119272, (Object)symbol22211, 0);
// be
send119274 = (Object)new_AST_Send((Object)send119273, (Object)symbol22273, 0);
// isNil
send119275 = (Object)new_AST_Send((Object)send119274, (Object)SMB_isNil, 0);
// position
send119276 = (Object)new_AST_Send((Object)localvariable16884, (Object)symbol22197, 0);
// should
send119277 = (Object)new_AST_Send((Object)send119276, (Object)symbol22211, 0);
smallint8324 = (Object)new_Type_SmallInt(0);
constant23052 = (Object)new_AST_Constant((Object)smallint8324);
// =
send119278 = (Object)new_AST_Send((Object)send119277, (Object)SMB__equal, 1, (Object)constant23052);
string13512 = (Object)new_Type_String(L"test: d bla: c boe");
constant23053 = (Object)new_AST_Constant((Object)string13512);
// on:
send119279 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23053);
assign14606 = (Object)new_AST_Assign((Object)localvariable16884, (Object)send119279);
// match:
send119280 = (Object)new_AST_Send((Object)localvariable16883, (Object)symbol22121, 1, (Object)localvariable16884);
assign14607 = (Object)new_AST_Assign((Object)localvariable16885, (Object)send119280);
// class
send119281 = (Object)new_AST_Send((Object)localvariable16885, (Object)SMB_class, 0);
// should
send119282 = (Object)new_AST_Send((Object)send119281, (Object)symbol22211, 0);
// =
send119283 = (Object)new_AST_Send((Object)send119282, (Object)SMB__equal, 1, (Object)classreference3148);
// keywords
send119284 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22016, 0);
// should
send119285 = (Object)new_AST_Send((Object)send119284, (Object)symbol22211, 0);
symbol22274 = (Object)new_Type_Symbol_cached(L"with:with:");
string13513 = (Object)new_Type_String(L"test");
constant23054 = (Object)new_AST_Constant((Object)string13513);
string13514 = (Object)new_Type_String(L"bla");
constant23055 = (Object)new_AST_Constant((Object)string13514);
// with:with:
send119286 = (Object)new_AST_Send((Object)classreference3106, (Object)symbol22274, 2, (Object)constant23054, (Object)constant23055);
// =
send119287 = (Object)new_AST_Send((Object)send119285, (Object)SMB__equal, 1, (Object)send119286);
// parameters
send119288 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22011, 0);
// size
send119289 = (Object)new_AST_Send((Object)send119288, (Object)SMB_size, 0);
// should
send119290 = (Object)new_AST_Send((Object)send119289, (Object)symbol22211, 0);
smallint8325 = (Object)new_Type_SmallInt(2);
constant23056 = (Object)new_AST_Constant((Object)smallint8325);
// =
send119291 = (Object)new_AST_Send((Object)send119290, (Object)SMB__equal, 1, (Object)constant23056);
// parameters
send119292 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22011, 0);
// first
send119293 = (Object)new_AST_Send((Object)send119292, (Object)symbol21970, 0);
// should
send119294 = (Object)new_AST_Send((Object)send119293, (Object)symbol22211, 0);
// new
send119295 = (Object)new_AST_Send((Object)classreference3173, (Object)symbol21894, 0);
string13515 = (Object)new_Type_String(L"d");
constant23057 = (Object)new_AST_Constant((Object)string13515);
// name:
send119296 = (Object)new_AST_Send((Object)send119295, (Object)symbol21999, 1, (Object)constant23057);
// =
send119297 = (Object)new_AST_Send((Object)send119294, (Object)SMB__equal, 1, (Object)send119296);
// parameters
send119298 = (Object)new_AST_Send((Object)localvariable16885, (Object)symbol22011, 0);
// second
send119299 = (Object)new_AST_Send((Object)send119298, (Object)symbol22237, 0);
// should
send119300 = (Object)new_AST_Send((Object)send119299, (Object)symbol22211, 0);
// new
send119301 = (Object)new_AST_Send((Object)classreference3173, (Object)symbol21894, 0);
string13516 = (Object)new_Type_String(L"c");
constant23058 = (Object)new_AST_Constant((Object)string13516);
// name:
send119302 = (Object)new_AST_Send((Object)send119301, (Object)symbol21999, 1, (Object)constant23058);
// =
send119303 = (Object)new_AST_Send((Object)send119300, (Object)SMB__equal, 1, (Object)send119302);
// position
send119304 = (Object)new_AST_Send((Object)localvariable16884, (Object)symbol22197, 0);
// should
send119305 = (Object)new_AST_Send((Object)send119304, (Object)symbol22211, 0);
smallint8326 = (Object)new_Type_SmallInt(15);
constant23059 = (Object)new_AST_Constant((Object)smallint8326);
// =
send119306 = (Object)new_AST_Send((Object)send119305, (Object)SMB__equal, 1, (Object)constant23059);
method16092 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13421, 20, assign14602, assign14603, assign14604, send119253, send119257, send119261, send119267, send119270, assign14605, send119275, send119278, assign14606, assign14607, send119283, send119287, send119291, send119297, send119303, send119306, Self);
symbol21837 = (Object)new_Type_Symbol_cached(L"testKeywordsArguments");
methodclosure16090 = (Object)new_Runtime_MethodClosure(method16092);
store_method((Type_Class)class2770, (Type_Symbol)symbol21837, (Runtime_MethodClosure)methodclosure16090);


// SCParserTest>>testBlock
//testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
localvariable16886 = (Object)new_AST_Variable_named(L"parser");
localvariable16887 = (Object)new_AST_Variable_named(L"string");
localvariable16888 = (Object)new_AST_Variable_named(L"result");
array13422 = (Object)new_Type_Array_with(3, (Object)localvariable16886, (Object)localvariable16887, (Object)localvariable16888);
// block
send119307 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22262, 0);
assign14608 = (Object)new_AST_Assign((Object)localvariable16886, (Object)send119307);
string13517 = (Object)new_Type_String(L"[]");
constant23060 = (Object)new_AST_Constant((Object)string13517);
// on:
send119308 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23060);
assign14609 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119308);
// match:
send119309 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14610 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119309);
// class
send119310 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119311 = (Object)new_AST_Send((Object)send119310, (Object)symbol22211, 0);
// =
send119312 = (Object)new_AST_Send((Object)send119311, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119313 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119314 = (Object)new_AST_Send((Object)send119313, (Object)SMB_size, 0);
// should
send119315 = (Object)new_AST_Send((Object)send119314, (Object)symbol22211, 0);
smallint8327 = (Object)new_Type_SmallInt(0);
constant23061 = (Object)new_AST_Constant((Object)smallint8327);
// =
send119316 = (Object)new_AST_Send((Object)send119315, (Object)SMB__equal, 1, (Object)constant23061);
// parameters
send119317 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119318 = (Object)new_AST_Send((Object)send119317, (Object)SMB_size, 0);
// should
send119319 = (Object)new_AST_Send((Object)send119318, (Object)symbol22211, 0);
smallint8328 = (Object)new_Type_SmallInt(0);
constant23062 = (Object)new_AST_Constant((Object)smallint8328);
// =
send119320 = (Object)new_AST_Send((Object)send119319, (Object)SMB__equal, 1, (Object)constant23062);
// statements
send119321 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119322 = (Object)new_AST_Send((Object)send119321, (Object)SMB_size, 0);
// should
send119323 = (Object)new_AST_Send((Object)send119322, (Object)symbol22211, 0);
smallint8329 = (Object)new_Type_SmallInt(0);
constant23063 = (Object)new_AST_Constant((Object)smallint8329);
// =
send119324 = (Object)new_AST_Send((Object)send119323, (Object)SMB__equal, 1, (Object)constant23063);
string13518 = (Object)new_Type_String(L"[||]");
constant23064 = (Object)new_AST_Constant((Object)string13518);
// on:
send119325 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23064);
assign14611 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119325);
// match:
send119326 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14612 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119326);
// class
send119327 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119328 = (Object)new_AST_Send((Object)send119327, (Object)symbol22211, 0);
// =
send119329 = (Object)new_AST_Send((Object)send119328, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119330 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119331 = (Object)new_AST_Send((Object)send119330, (Object)SMB_size, 0);
// should
send119332 = (Object)new_AST_Send((Object)send119331, (Object)symbol22211, 0);
smallint8330 = (Object)new_Type_SmallInt(0);
constant23065 = (Object)new_AST_Constant((Object)smallint8330);
// =
send119333 = (Object)new_AST_Send((Object)send119332, (Object)SMB__equal, 1, (Object)constant23065);
// parameters
send119334 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119335 = (Object)new_AST_Send((Object)send119334, (Object)SMB_size, 0);
// should
send119336 = (Object)new_AST_Send((Object)send119335, (Object)symbol22211, 0);
smallint8331 = (Object)new_Type_SmallInt(0);
constant23066 = (Object)new_AST_Constant((Object)smallint8331);
// =
send119337 = (Object)new_AST_Send((Object)send119336, (Object)SMB__equal, 1, (Object)constant23066);
// statements
send119338 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119339 = (Object)new_AST_Send((Object)send119338, (Object)SMB_size, 0);
// should
send119340 = (Object)new_AST_Send((Object)send119339, (Object)symbol22211, 0);
smallint8332 = (Object)new_Type_SmallInt(0);
constant23067 = (Object)new_AST_Constant((Object)smallint8332);
// =
send119341 = (Object)new_AST_Send((Object)send119340, (Object)SMB__equal, 1, (Object)constant23067);
string13519 = (Object)new_Type_String(L"[:a :bcd :  e  :f | ]");
constant23068 = (Object)new_AST_Constant((Object)string13519);
// on:
send119342 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23068);
assign14613 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119342);
// match:
send119343 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14614 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119343);
// class
send119344 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119345 = (Object)new_AST_Send((Object)send119344, (Object)symbol22211, 0);
// =
send119346 = (Object)new_AST_Send((Object)send119345, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119347 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119348 = (Object)new_AST_Send((Object)send119347, (Object)SMB_size, 0);
// should
send119349 = (Object)new_AST_Send((Object)send119348, (Object)symbol22211, 0);
smallint8333 = (Object)new_Type_SmallInt(0);
constant23069 = (Object)new_AST_Constant((Object)smallint8333);
// =
send119350 = (Object)new_AST_Send((Object)send119349, (Object)SMB__equal, 1, (Object)constant23069);
// parameters
send119351 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119352 = (Object)new_AST_Send((Object)send119351, (Object)SMB_size, 0);
// should
send119353 = (Object)new_AST_Send((Object)send119352, (Object)symbol22211, 0);
smallint8334 = (Object)new_Type_SmallInt(4);
constant23070 = (Object)new_AST_Constant((Object)smallint8334);
// =
send119354 = (Object)new_AST_Send((Object)send119353, (Object)SMB__equal, 1, (Object)constant23070);
// statements
send119355 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119356 = (Object)new_AST_Send((Object)send119355, (Object)SMB_size, 0);
// should
send119357 = (Object)new_AST_Send((Object)send119356, (Object)symbol22211, 0);
smallint8335 = (Object)new_Type_SmallInt(0);
constant23071 = (Object)new_AST_Constant((Object)smallint8335);
// =
send119358 = (Object)new_AST_Send((Object)send119357, (Object)SMB__equal, 1, (Object)constant23071);
string13520 = (Object)new_Type_String(L"[ | a   f d| ]");
constant23072 = (Object)new_AST_Constant((Object)string13520);
// on:
send119359 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23072);
assign14615 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119359);
// match:
send119360 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14616 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119360);
// class
send119361 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119362 = (Object)new_AST_Send((Object)send119361, (Object)symbol22211, 0);
// =
send119363 = (Object)new_AST_Send((Object)send119362, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119364 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119365 = (Object)new_AST_Send((Object)send119364, (Object)SMB_size, 0);
// should
send119366 = (Object)new_AST_Send((Object)send119365, (Object)symbol22211, 0);
smallint8336 = (Object)new_Type_SmallInt(3);
constant23073 = (Object)new_AST_Constant((Object)smallint8336);
// =
send119367 = (Object)new_AST_Send((Object)send119366, (Object)SMB__equal, 1, (Object)constant23073);
// parameters
send119368 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119369 = (Object)new_AST_Send((Object)send119368, (Object)SMB_size, 0);
// should
send119370 = (Object)new_AST_Send((Object)send119369, (Object)symbol22211, 0);
smallint8337 = (Object)new_Type_SmallInt(0);
constant23074 = (Object)new_AST_Constant((Object)smallint8337);
// =
send119371 = (Object)new_AST_Send((Object)send119370, (Object)SMB__equal, 1, (Object)constant23074);
// statements
send119372 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119373 = (Object)new_AST_Send((Object)send119372, (Object)SMB_size, 0);
// should
send119374 = (Object)new_AST_Send((Object)send119373, (Object)symbol22211, 0);
smallint8338 = (Object)new_Type_SmallInt(0);
constant23075 = (Object)new_AST_Constant((Object)smallint8338);
// =
send119375 = (Object)new_AST_Send((Object)send119374, (Object)SMB__equal, 1, (Object)constant23075);
string13521 = (Object)new_Type_String(L"[ || b. d ]");
constant23076 = (Object)new_AST_Constant((Object)string13521);
// on:
send119376 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23076);
assign14617 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119376);
// match:
send119377 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14618 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119377);
// class
send119378 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119379 = (Object)new_AST_Send((Object)send119378, (Object)symbol22211, 0);
// =
send119380 = (Object)new_AST_Send((Object)send119379, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119381 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119382 = (Object)new_AST_Send((Object)send119381, (Object)SMB_size, 0);
// should
send119383 = (Object)new_AST_Send((Object)send119382, (Object)symbol22211, 0);
smallint8339 = (Object)new_Type_SmallInt(0);
constant23077 = (Object)new_AST_Constant((Object)smallint8339);
// =
send119384 = (Object)new_AST_Send((Object)send119383, (Object)SMB__equal, 1, (Object)constant23077);
// parameters
send119385 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119386 = (Object)new_AST_Send((Object)send119385, (Object)SMB_size, 0);
// should
send119387 = (Object)new_AST_Send((Object)send119386, (Object)symbol22211, 0);
smallint8340 = (Object)new_Type_SmallInt(0);
constant23078 = (Object)new_AST_Constant((Object)smallint8340);
// =
send119388 = (Object)new_AST_Send((Object)send119387, (Object)SMB__equal, 1, (Object)constant23078);
// statements
send119389 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119390 = (Object)new_AST_Send((Object)send119389, (Object)SMB_size, 0);
// should
send119391 = (Object)new_AST_Send((Object)send119390, (Object)symbol22211, 0);
smallint8341 = (Object)new_Type_SmallInt(2);
constant23079 = (Object)new_AST_Constant((Object)smallint8341);
// =
send119392 = (Object)new_AST_Send((Object)send119391, (Object)SMB__equal, 1, (Object)constant23079);
string13522 = (Object)new_Type_String(L"[ || b. ^ d ]");
constant23080 = (Object)new_AST_Constant((Object)string13522);
// on:
send119393 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23080);
assign14619 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119393);
// match:
send119394 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14620 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119394);
// class
send119395 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119396 = (Object)new_AST_Send((Object)send119395, (Object)symbol22211, 0);
// =
send119397 = (Object)new_AST_Send((Object)send119396, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119398 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119399 = (Object)new_AST_Send((Object)send119398, (Object)SMB_size, 0);
// should
send119400 = (Object)new_AST_Send((Object)send119399, (Object)symbol22211, 0);
smallint8342 = (Object)new_Type_SmallInt(0);
constant23081 = (Object)new_AST_Constant((Object)smallint8342);
// =
send119401 = (Object)new_AST_Send((Object)send119400, (Object)SMB__equal, 1, (Object)constant23081);
// parameters
send119402 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119403 = (Object)new_AST_Send((Object)send119402, (Object)SMB_size, 0);
// should
send119404 = (Object)new_AST_Send((Object)send119403, (Object)symbol22211, 0);
smallint8343 = (Object)new_Type_SmallInt(0);
constant23082 = (Object)new_AST_Constant((Object)smallint8343);
// =
send119405 = (Object)new_AST_Send((Object)send119404, (Object)SMB__equal, 1, (Object)constant23082);
// statements
send119406 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119407 = (Object)new_AST_Send((Object)send119406, (Object)SMB_size, 0);
// should
send119408 = (Object)new_AST_Send((Object)send119407, (Object)symbol22211, 0);
smallint8344 = (Object)new_Type_SmallInt(2);
constant23083 = (Object)new_AST_Constant((Object)smallint8344);
// =
send119409 = (Object)new_AST_Send((Object)send119408, (Object)SMB__equal, 1, (Object)constant23083);
string13523 = (Object)new_Type_String(L"[ || b. d. ]");
constant23084 = (Object)new_AST_Constant((Object)string13523);
// on:
send119410 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23084);
assign14621 = (Object)new_AST_Assign((Object)localvariable16887, (Object)send119410);
// match:
send119411 = (Object)new_AST_Send((Object)localvariable16886, (Object)symbol22121, 1, (Object)localvariable16887);
assign14622 = (Object)new_AST_Assign((Object)localvariable16888, (Object)send119411);
// class
send119412 = (Object)new_AST_Send((Object)localvariable16888, (Object)SMB_class, 0);
// should
send119413 = (Object)new_AST_Send((Object)send119412, (Object)symbol22211, 0);
// =
send119414 = (Object)new_AST_Send((Object)send119413, (Object)SMB__equal, 1, (Object)classreference3151);
// temporaries
send119415 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22025, 0);
// size
send119416 = (Object)new_AST_Send((Object)send119415, (Object)SMB_size, 0);
// should
send119417 = (Object)new_AST_Send((Object)send119416, (Object)symbol22211, 0);
smallint8345 = (Object)new_Type_SmallInt(0);
constant23085 = (Object)new_AST_Constant((Object)smallint8345);
// =
send119418 = (Object)new_AST_Send((Object)send119417, (Object)SMB__equal, 1, (Object)constant23085);
// parameters
send119419 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22011, 0);
// size
send119420 = (Object)new_AST_Send((Object)send119419, (Object)SMB_size, 0);
// should
send119421 = (Object)new_AST_Send((Object)send119420, (Object)symbol22211, 0);
smallint8346 = (Object)new_Type_SmallInt(0);
constant23086 = (Object)new_AST_Constant((Object)smallint8346);
// =
send119422 = (Object)new_AST_Send((Object)send119421, (Object)SMB__equal, 1, (Object)constant23086);
// statements
send119423 = (Object)new_AST_Send((Object)localvariable16888, (Object)symbol22021, 0);
// size
send119424 = (Object)new_AST_Send((Object)send119423, (Object)SMB_size, 0);
// should
send119425 = (Object)new_AST_Send((Object)send119424, (Object)symbol22211, 0);
smallint8347 = (Object)new_Type_SmallInt(2);
constant23087 = (Object)new_AST_Constant((Object)smallint8347);
// =
send119426 = (Object)new_AST_Send((Object)send119425, (Object)SMB__equal, 1, (Object)constant23087);
method16093 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13422, 44, assign14608, assign14609, assign14610, send119312, send119316, send119320, send119324, assign14611, assign14612, send119329, send119333, send119337, send119341, assign14613, assign14614, send119346, send119350, send119354, send119358, assign14615, assign14616, send119363, send119367, send119371, send119375, assign14617, assign14618, send119380, send119384, send119388, send119392, assign14619, assign14620, send119397, send119401, send119405, send119409, assign14621, assign14622, send119414, send119418, send119422, send119426, Self);
symbol21857 = (Object)new_Type_Symbol_cached(L"testBlock");
methodclosure16091 = (Object)new_Runtime_MethodClosure(method16093);
store_method((Type_Class)class2770, (Type_Symbol)symbol21857, (Runtime_MethodClosure)methodclosure16091);


// SCParserTest>>testCharacterConstant
//testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
localvariable16889 = (Object)new_AST_Variable_named(L"parser");
localvariable16890 = (Object)new_AST_Variable_named(L"string");
localvariable16891 = (Object)new_AST_Variable_named(L"result");
array13423 = (Object)new_Type_Array_with(3, (Object)localvariable16889, (Object)localvariable16890, (Object)localvariable16891);
// characterConstant
send119427 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22251, 0);
assign14623 = (Object)new_AST_Assign((Object)localvariable16889, (Object)send119427);
string13524 = (Object)new_Type_String(L"a");
constant23088 = (Object)new_AST_Constant((Object)string13524);
// on:
send119428 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23088);
assign14624 = (Object)new_AST_Assign((Object)localvariable16890, (Object)send119428);
// match:
send119429 = (Object)new_AST_Send((Object)localvariable16889, (Object)symbol22121, 1, (Object)localvariable16890);
// should
send119430 = (Object)new_AST_Send((Object)send119429, (Object)symbol22211, 0);
// be
send119431 = (Object)new_AST_Send((Object)send119430, (Object)symbol22273, 0);
// isNil
send119432 = (Object)new_AST_Send((Object)send119431, (Object)SMB_isNil, 0);
// position
send119433 = (Object)new_AST_Send((Object)localvariable16890, (Object)symbol22197, 0);
// should
send119434 = (Object)new_AST_Send((Object)send119433, (Object)symbol22211, 0);
smallint8348 = (Object)new_Type_SmallInt(0);
constant23089 = (Object)new_AST_Constant((Object)smallint8348);
// =
send119435 = (Object)new_AST_Send((Object)send119434, (Object)SMB__equal, 1, (Object)constant23089);
string13525 = (Object)new_Type_String(L"$_");
constant23090 = (Object)new_AST_Constant((Object)string13525);
// on:
send119436 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23090);
assign14625 = (Object)new_AST_Assign((Object)localvariable16890, (Object)send119436);
// match:
send119437 = (Object)new_AST_Send((Object)localvariable16889, (Object)symbol22121, 1, (Object)localvariable16890);
assign14626 = (Object)new_AST_Assign((Object)localvariable16891, (Object)send119437);
// class
send119438 = (Object)new_AST_Send((Object)localvariable16891, (Object)SMB_class, 0);
// should
send119439 = (Object)new_AST_Send((Object)send119438, (Object)symbol22211, 0);
// =
send119440 = (Object)new_AST_Send((Object)send119439, (Object)SMB__equal, 1, (Object)classreference3167);
// char
send119441 = (Object)new_AST_Send((Object)localvariable16891, (Object)symbol22143, 0);
// should
send119442 = (Object)new_AST_Send((Object)send119441, (Object)symbol22211, 0);
character60 = (Object)new_Type_Character(L'_');
constant23091 = (Object)new_AST_Constant((Object)character60);
// =
send119443 = (Object)new_AST_Send((Object)send119442, (Object)SMB__equal, 1, (Object)constant23091);
// position
send119444 = (Object)new_AST_Send((Object)localvariable16890, (Object)symbol22197, 0);
// should
send119445 = (Object)new_AST_Send((Object)send119444, (Object)symbol22211, 0);
smallint8349 = (Object)new_Type_SmallInt(2);
constant23092 = (Object)new_AST_Constant((Object)smallint8349);
// =
send119446 = (Object)new_AST_Send((Object)send119445, (Object)SMB__equal, 1, (Object)constant23092);
method16094 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13423, 10, assign14623, assign14624, send119432, send119435, assign14625, assign14626, send119440, send119443, send119446, Self);
symbol21880 = (Object)new_Type_Symbol_cached(L"testCharacterConstant");
methodclosure16092 = (Object)new_Runtime_MethodClosure(method16094);
store_method((Type_Class)class2770, (Type_Symbol)symbol21880, (Runtime_MethodClosure)methodclosure16092);


// SCParserTest>>testSymbolConstant
//testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
localvariable16892 = (Object)new_AST_Variable_named(L"parser");
localvariable16893 = (Object)new_AST_Variable_named(L"string");
localvariable16894 = (Object)new_AST_Variable_named(L"result");
array13424 = (Object)new_Type_Array_with(3, (Object)localvariable16892, (Object)localvariable16893, (Object)localvariable16894);
// symbolConstant
send119447 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22250, 0);
assign14627 = (Object)new_AST_Assign((Object)localvariable16892, (Object)send119447);
string13526 = (Object)new_Type_String(L"#abc");
constant23093 = (Object)new_AST_Constant((Object)string13526);
// on:
send119448 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23093);
assign14628 = (Object)new_AST_Assign((Object)localvariable16893, (Object)send119448);
// match:
send119449 = (Object)new_AST_Send((Object)localvariable16892, (Object)symbol22121, 1, (Object)localvariable16893);
assign14629 = (Object)new_AST_Assign((Object)localvariable16894, (Object)send119449);
// class
send119450 = (Object)new_AST_Send((Object)localvariable16894, (Object)SMB_class, 0);
// should
send119451 = (Object)new_AST_Send((Object)send119450, (Object)symbol22211, 0);
// =
send119452 = (Object)new_AST_Send((Object)send119451, (Object)SMB__equal, 1, (Object)classreference3155);
// symbol
send119453 = (Object)new_AST_Send((Object)localvariable16894, (Object)symbol21983, 0);
// should
send119454 = (Object)new_AST_Send((Object)send119453, (Object)symbol22211, 0);
string13527 = (Object)new_Type_String(L"abc");
constant23094 = (Object)new_AST_Constant((Object)string13527);
// =
send119455 = (Object)new_AST_Send((Object)send119454, (Object)SMB__equal, 1, (Object)constant23094);
// position
send119456 = (Object)new_AST_Send((Object)localvariable16893, (Object)symbol22197, 0);
// should
send119457 = (Object)new_AST_Send((Object)send119456, (Object)symbol22211, 0);
smallint8350 = (Object)new_Type_SmallInt(4);
constant23095 = (Object)new_AST_Constant((Object)smallint8350);
// =
send119458 = (Object)new_AST_Send((Object)send119457, (Object)SMB__equal, 1, (Object)constant23095);
method16095 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13424, 7, assign14627, assign14628, assign14629, send119452, send119455, send119458, Self);
symbol21877 = (Object)new_Type_Symbol_cached(L"testSymbolConstant");
methodclosure16093 = (Object)new_Runtime_MethodClosure(method16095);
store_method((Type_Class)class2770, (Type_Symbol)symbol21877, (Runtime_MethodClosure)methodclosure16093);


// SCParserTest>>testBinaryMessageDefinition
//testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
localvariable16895 = (Object)new_AST_Variable_named(L"parser");
localvariable16896 = (Object)new_AST_Variable_named(L"string");
localvariable16897 = (Object)new_AST_Variable_named(L"result");
array13425 = (Object)new_Type_Array_with(3, (Object)localvariable16895, (Object)localvariable16896, (Object)localvariable16897);
// binaryMessageDefinition
send119459 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22268, 0);
assign14630 = (Object)new_AST_Assign((Object)localvariable16895, (Object)send119459);
string13528 = (Object)new_Type_String(L"+= a");
constant23096 = (Object)new_AST_Constant((Object)string13528);
// on:
send119460 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23096);
assign14631 = (Object)new_AST_Assign((Object)localvariable16896, (Object)send119460);
// match:
send119461 = (Object)new_AST_Send((Object)localvariable16895, (Object)symbol22121, 1, (Object)localvariable16896);
assign14632 = (Object)new_AST_Assign((Object)localvariable16897, (Object)send119461);
// class
send119462 = (Object)new_AST_Send((Object)localvariable16897, (Object)SMB_class, 0);
// should
send119463 = (Object)new_AST_Send((Object)send119462, (Object)symbol22211, 0);
// =
send119464 = (Object)new_AST_Send((Object)send119463, (Object)SMB__equal, 1, (Object)classreference3156);
// selector
send119465 = (Object)new_AST_Send((Object)localvariable16897, (Object)symbol21908, 0);
// printString
send119466 = (Object)new_AST_Send((Object)send119465, (Object)symbol22124, 0);
// should
send119467 = (Object)new_AST_Send((Object)send119466, (Object)symbol22211, 0);
string13529 = (Object)new_Type_String(L"+=");
constant23097 = (Object)new_AST_Constant((Object)string13529);
// =
send119468 = (Object)new_AST_Send((Object)send119467, (Object)SMB__equal, 1, (Object)constant23097);
// parameter
send119469 = (Object)new_AST_Send((Object)localvariable16897, (Object)symbol22029, 0);
// class
send119470 = (Object)new_AST_Send((Object)send119469, (Object)SMB_class, 0);
// should
send119471 = (Object)new_AST_Send((Object)send119470, (Object)symbol22211, 0);
// =
send119472 = (Object)new_AST_Send((Object)send119471, (Object)SMB__equal, 1, (Object)classreference3173);
// parameter
send119473 = (Object)new_AST_Send((Object)localvariable16897, (Object)symbol22029, 0);
// name
send119474 = (Object)new_AST_Send((Object)send119473, (Object)SMB_name, 0);
// asString
send119475 = (Object)new_AST_Send((Object)send119474, (Object)SMB_asString, 0);
// should
send119476 = (Object)new_AST_Send((Object)send119475, (Object)symbol22211, 0);
string13530 = (Object)new_Type_String(L"a");
constant23098 = (Object)new_AST_Constant((Object)string13530);
// =
send119477 = (Object)new_AST_Send((Object)send119476, (Object)SMB__equal, 1, (Object)constant23098);
// position
send119478 = (Object)new_AST_Send((Object)localvariable16896, (Object)symbol22197, 0);
// should
send119479 = (Object)new_AST_Send((Object)send119478, (Object)symbol22211, 0);
smallint8351 = (Object)new_Type_SmallInt(4);
constant23099 = (Object)new_AST_Constant((Object)smallint8351);
// =
send119480 = (Object)new_AST_Send((Object)send119479, (Object)SMB__equal, 1, (Object)constant23099);
string13531 = (Object)new_Type_String(L"|= a");
constant23100 = (Object)new_AST_Constant((Object)string13531);
// on:
send119481 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23100);
assign14633 = (Object)new_AST_Assign((Object)localvariable16896, (Object)send119481);
// match:
send119482 = (Object)new_AST_Send((Object)localvariable16895, (Object)symbol22121, 1, (Object)localvariable16896);
// should
send119483 = (Object)new_AST_Send((Object)send119482, (Object)symbol22211, 0);
// be
send119484 = (Object)new_AST_Send((Object)send119483, (Object)symbol22273, 0);
// isNil
send119485 = (Object)new_AST_Send((Object)send119484, (Object)SMB_isNil, 0);
// position
send119486 = (Object)new_AST_Send((Object)localvariable16896, (Object)symbol22197, 0);
// should
send119487 = (Object)new_AST_Send((Object)send119486, (Object)symbol22211, 0);
smallint8352 = (Object)new_Type_SmallInt(0);
constant23101 = (Object)new_AST_Constant((Object)smallint8352);
// =
send119488 = (Object)new_AST_Send((Object)send119487, (Object)SMB__equal, 1, (Object)constant23101);
string13532 = (Object)new_Type_String(L"-= abc d");
constant23102 = (Object)new_AST_Constant((Object)string13532);
// on:
send119489 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23102);
assign14634 = (Object)new_AST_Assign((Object)localvariable16896, (Object)send119489);
// match:
send119490 = (Object)new_AST_Send((Object)localvariable16895, (Object)symbol22121, 1, (Object)localvariable16896);
assign14635 = (Object)new_AST_Assign((Object)localvariable16897, (Object)send119490);
// class
send119491 = (Object)new_AST_Send((Object)localvariable16897, (Object)SMB_class, 0);
// should
send119492 = (Object)new_AST_Send((Object)send119491, (Object)symbol22211, 0);
// =
send119493 = (Object)new_AST_Send((Object)send119492, (Object)SMB__equal, 1, (Object)classreference3156);
// selector
send119494 = (Object)new_AST_Send((Object)localvariable16897, (Object)symbol21908, 0);
// printString
send119495 = (Object)new_AST_Send((Object)send119494, (Object)symbol22124, 0);
// should
send119496 = (Object)new_AST_Send((Object)send119495, (Object)symbol22211, 0);
string13533 = (Object)new_Type_String(L"-=");
constant23103 = (Object)new_AST_Constant((Object)string13533);
// =
send119497 = (Object)new_AST_Send((Object)send119496, (Object)SMB__equal, 1, (Object)constant23103);
// parameter
send119498 = (Object)new_AST_Send((Object)localvariable16897, (Object)symbol22029, 0);
// name
send119499 = (Object)new_AST_Send((Object)send119498, (Object)SMB_name, 0);
// asString
send119500 = (Object)new_AST_Send((Object)send119499, (Object)SMB_asString, 0);
// should
send119501 = (Object)new_AST_Send((Object)send119500, (Object)symbol22211, 0);
string13534 = (Object)new_Type_String(L"abc");
constant23104 = (Object)new_AST_Constant((Object)string13534);
// =
send119502 = (Object)new_AST_Send((Object)send119501, (Object)SMB__equal, 1, (Object)constant23104);
// parameter
send119503 = (Object)new_AST_Send((Object)localvariable16897, (Object)symbol22029, 0);
// class
send119504 = (Object)new_AST_Send((Object)send119503, (Object)SMB_class, 0);
// should
send119505 = (Object)new_AST_Send((Object)send119504, (Object)symbol22211, 0);
// =
send119506 = (Object)new_AST_Send((Object)send119505, (Object)SMB__equal, 1, (Object)classreference3173);
// position
send119507 = (Object)new_AST_Send((Object)localvariable16896, (Object)symbol22197, 0);
// should
send119508 = (Object)new_AST_Send((Object)send119507, (Object)symbol22211, 0);
smallint8353 = (Object)new_Type_SmallInt(6);
constant23105 = (Object)new_AST_Constant((Object)smallint8353);
// =
send119509 = (Object)new_AST_Send((Object)send119508, (Object)SMB__equal, 1, (Object)constant23105);
method16096 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13425, 19, assign14630, assign14631, assign14632, send119464, send119468, send119472, send119477, send119480, assign14633, send119485, send119488, assign14634, assign14635, send119493, send119497, send119502, send119506, send119509, Self);
symbol21830 = (Object)new_Type_Symbol_cached(L"testBinaryMessageDefinition");
methodclosure16094 = (Object)new_Runtime_MethodClosure(method16096);
store_method((Type_Class)class2770, (Type_Symbol)symbol21830, (Runtime_MethodClosure)methodclosure16094);


// SCParserTest>>testReturn
//testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable16898 = (Object)new_AST_Variable_named(L"parser");
localvariable16899 = (Object)new_AST_Variable_named(L"string");
localvariable16900 = (Object)new_AST_Variable_named(L"result");
array13426 = (Object)new_Type_Array_with(3, (Object)localvariable16898, (Object)localvariable16899, (Object)localvariable16900);
// return
send119510 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22234, 0);
assign14636 = (Object)new_AST_Assign((Object)localvariable16898, (Object)send119510);
string13535 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23106 = (Object)new_AST_Constant((Object)string13535);
// on:
send119511 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23106);
assign14637 = (Object)new_AST_Assign((Object)localvariable16899, (Object)send119511);
// match:
send119512 = (Object)new_AST_Send((Object)localvariable16898, (Object)symbol22121, 1, (Object)localvariable16899);
assign14638 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119512);
// class
send119513 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119514 = (Object)new_AST_Send((Object)send119513, (Object)symbol22211, 0);
// =
send119515 = (Object)new_AST_Send((Object)send119514, (Object)SMB__equal, 1, (Object)classreference3158);
// expression
send119516 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
assign14639 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119516);
// class
send119517 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119518 = (Object)new_AST_Send((Object)send119517, (Object)symbol22211, 0);
// =
send119519 = (Object)new_AST_Send((Object)send119518, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119520 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// class
send119521 = (Object)new_AST_Send((Object)send119520, (Object)SMB_class, 0);
// should
send119522 = (Object)new_AST_Send((Object)send119521, (Object)symbol22211, 0);
// =
send119523 = (Object)new_AST_Send((Object)send119522, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119524 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// name
send119525 = (Object)new_AST_Send((Object)send119524, (Object)SMB_name, 0);
// should
send119526 = (Object)new_AST_Send((Object)send119525, (Object)symbol22211, 0);
string13536 = (Object)new_Type_String(L"a");
constant23107 = (Object)new_AST_Constant((Object)string13536);
// =
send119527 = (Object)new_AST_Send((Object)send119526, (Object)SMB__equal, 1, (Object)constant23107);
// expression
send119528 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
assign14640 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119528);
// class
send119529 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119530 = (Object)new_AST_Send((Object)send119529, (Object)symbol22211, 0);
// =
send119531 = (Object)new_AST_Send((Object)send119530, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119532 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// class
send119533 = (Object)new_AST_Send((Object)send119532, (Object)SMB_class, 0);
// should
send119534 = (Object)new_AST_Send((Object)send119533, (Object)symbol22211, 0);
// =
send119535 = (Object)new_AST_Send((Object)send119534, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119536 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// name
send119537 = (Object)new_AST_Send((Object)send119536, (Object)SMB_name, 0);
// should
send119538 = (Object)new_AST_Send((Object)send119537, (Object)symbol22211, 0);
string13537 = (Object)new_Type_String(L"b");
constant23108 = (Object)new_AST_Constant((Object)string13537);
// =
send119539 = (Object)new_AST_Send((Object)send119538, (Object)SMB__equal, 1, (Object)constant23108);
// expression
send119540 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
assign14641 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119540);
// class
send119541 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119542 = (Object)new_AST_Send((Object)send119541, (Object)symbol22211, 0);
// =
send119543 = (Object)new_AST_Send((Object)send119542, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119544 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// class
send119545 = (Object)new_AST_Send((Object)send119544, (Object)SMB_class, 0);
// should
send119546 = (Object)new_AST_Send((Object)send119545, (Object)symbol22211, 0);
// =
send119547 = (Object)new_AST_Send((Object)send119546, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119548 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// name
send119549 = (Object)new_AST_Send((Object)send119548, (Object)SMB_name, 0);
// should
send119550 = (Object)new_AST_Send((Object)send119549, (Object)symbol22211, 0);
string13538 = (Object)new_Type_String(L"c");
constant23109 = (Object)new_AST_Constant((Object)string13538);
// =
send119551 = (Object)new_AST_Send((Object)send119550, (Object)SMB__equal, 1, (Object)constant23109);
// expression
send119552 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
// class
send119553 = (Object)new_AST_Send((Object)send119552, (Object)SMB_class, 0);
// should
send119554 = (Object)new_AST_Send((Object)send119553, (Object)symbol22211, 0);
// =
send119555 = (Object)new_AST_Send((Object)send119554, (Object)SMB__equal, 1, (Object)classreference3159);
string13539 = (Object)new_Type_String(L"^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant23110 = (Object)new_AST_Constant((Object)string13539);
// on:
send119556 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23110);
assign14642 = (Object)new_AST_Assign((Object)localvariable16899, (Object)send119556);
// match:
send119557 = (Object)new_AST_Send((Object)localvariable16898, (Object)symbol22121, 1, (Object)localvariable16899);
assign14643 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119557);
// class
send119558 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119559 = (Object)new_AST_Send((Object)send119558, (Object)symbol22211, 0);
// =
send119560 = (Object)new_AST_Send((Object)send119559, (Object)SMB__equal, 1, (Object)classreference3158);
// expression
send119561 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
assign14644 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119561);
// class
send119562 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119563 = (Object)new_AST_Send((Object)send119562, (Object)symbol22211, 0);
// =
send119564 = (Object)new_AST_Send((Object)send119563, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119565 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// class
send119566 = (Object)new_AST_Send((Object)send119565, (Object)SMB_class, 0);
// should
send119567 = (Object)new_AST_Send((Object)send119566, (Object)symbol22211, 0);
// =
send119568 = (Object)new_AST_Send((Object)send119567, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119569 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// name
send119570 = (Object)new_AST_Send((Object)send119569, (Object)SMB_name, 0);
// should
send119571 = (Object)new_AST_Send((Object)send119570, (Object)symbol22211, 0);
string13540 = (Object)new_Type_String(L"a");
constant23111 = (Object)new_AST_Constant((Object)string13540);
// =
send119572 = (Object)new_AST_Send((Object)send119571, (Object)SMB__equal, 1, (Object)constant23111);
// expression
send119573 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
assign14645 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119573);
// class
send119574 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119575 = (Object)new_AST_Send((Object)send119574, (Object)symbol22211, 0);
// =
send119576 = (Object)new_AST_Send((Object)send119575, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119577 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// class
send119578 = (Object)new_AST_Send((Object)send119577, (Object)SMB_class, 0);
// should
send119579 = (Object)new_AST_Send((Object)send119578, (Object)symbol22211, 0);
// =
send119580 = (Object)new_AST_Send((Object)send119579, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119581 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// name
send119582 = (Object)new_AST_Send((Object)send119581, (Object)SMB_name, 0);
// should
send119583 = (Object)new_AST_Send((Object)send119582, (Object)symbol22211, 0);
string13541 = (Object)new_Type_String(L"b");
constant23112 = (Object)new_AST_Constant((Object)string13541);
// =
send119584 = (Object)new_AST_Send((Object)send119583, (Object)SMB__equal, 1, (Object)constant23112);
// expression
send119585 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
assign14646 = (Object)new_AST_Assign((Object)localvariable16900, (Object)send119585);
// class
send119586 = (Object)new_AST_Send((Object)localvariable16900, (Object)SMB_class, 0);
// should
send119587 = (Object)new_AST_Send((Object)send119586, (Object)symbol22211, 0);
// =
send119588 = (Object)new_AST_Send((Object)send119587, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119589 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// class
send119590 = (Object)new_AST_Send((Object)send119589, (Object)SMB_class, 0);
// should
send119591 = (Object)new_AST_Send((Object)send119590, (Object)symbol22211, 0);
// =
send119592 = (Object)new_AST_Send((Object)send119591, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119593 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22035, 0);
// name
send119594 = (Object)new_AST_Send((Object)send119593, (Object)SMB_name, 0);
// should
send119595 = (Object)new_AST_Send((Object)send119594, (Object)symbol22211, 0);
string13542 = (Object)new_Type_String(L"c");
constant23113 = (Object)new_AST_Constant((Object)string13542);
// =
send119596 = (Object)new_AST_Send((Object)send119595, (Object)SMB__equal, 1, (Object)constant23113);
// expression
send119597 = (Object)new_AST_Send((Object)localvariable16900, (Object)symbol22033, 0);
// class
send119598 = (Object)new_AST_Send((Object)send119597, (Object)SMB_class, 0);
// should
send119599 = (Object)new_AST_Send((Object)send119598, (Object)symbol22211, 0);
// =
send119600 = (Object)new_AST_Send((Object)send119599, (Object)SMB__equal, 1, (Object)classreference3159);
method16097 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13426, 34, assign14636, assign14637, assign14638, send119515, assign14639, send119519, send119523, send119527, assign14640, send119531, send119535, send119539, assign14641, send119543, send119547, send119551, send119555, assign14642, assign14643, send119560, assign14644, send119564, send119568, send119572, assign14645, send119576, send119580, send119584, assign14646, send119588, send119592, send119596, send119600, Self);
symbol21850 = (Object)new_Type_Symbol_cached(L"testReturn");
methodclosure16095 = (Object)new_Runtime_MethodClosure(method16097);
store_method((Type_Class)class2770, (Type_Symbol)symbol21850, (Runtime_MethodClosure)methodclosure16095);


// SCParserTest>>testUnaryObjectDescription
//testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
localvariable16901 = (Object)new_AST_Variable_named(L"parser");
localvariable16902 = (Object)new_AST_Variable_named(L"string");
localvariable16903 = (Object)new_AST_Variable_named(L"result");
array13427 = (Object)new_Type_Array_with(3, (Object)localvariable16901, (Object)localvariable16902, (Object)localvariable16903);
// unaryObjectDescription
send119601 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22231, 0);
assign14647 = (Object)new_AST_Assign((Object)localvariable16901, (Object)send119601);
string13543 = (Object)new_Type_String(L"abc def ghi ");
constant23114 = (Object)new_AST_Constant((Object)string13543);
// on:
send119602 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23114);
assign14648 = (Object)new_AST_Assign((Object)localvariable16902, (Object)send119602);
// match:
send119603 = (Object)new_AST_Send((Object)localvariable16901, (Object)symbol22121, 1, (Object)localvariable16902);
assign14649 = (Object)new_AST_Assign((Object)localvariable16903, (Object)send119603);
// class
send119604 = (Object)new_AST_Send((Object)localvariable16903, (Object)SMB_class, 0);
// should
send119605 = (Object)new_AST_Send((Object)send119604, (Object)symbol22211, 0);
// =
send119606 = (Object)new_AST_Send((Object)send119605, (Object)SMB__equal, 1, (Object)classreference3164);
// selector
send119607 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol21908, 0);
// class
send119608 = (Object)new_AST_Send((Object)send119607, (Object)SMB_class, 0);
// should
send119609 = (Object)new_AST_Send((Object)send119608, (Object)symbol22211, 0);
// =
send119610 = (Object)new_AST_Send((Object)send119609, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send119611 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol21908, 0);
// selector
send119612 = (Object)new_AST_Send((Object)send119611, (Object)symbol21908, 0);
// printString
send119613 = (Object)new_AST_Send((Object)send119612, (Object)symbol22124, 0);
// should
send119614 = (Object)new_AST_Send((Object)send119613, (Object)symbol22211, 0);
string13544 = (Object)new_Type_String(L"ghi");
constant23115 = (Object)new_AST_Constant((Object)string13544);
// =
send119615 = (Object)new_AST_Send((Object)send119614, (Object)SMB__equal, 1, (Object)constant23115);
// receiver
send119616 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol22006, 0);
assign14650 = (Object)new_AST_Assign((Object)localvariable16903, (Object)send119616);
// class
send119617 = (Object)new_AST_Send((Object)localvariable16903, (Object)SMB_class, 0);
// should
send119618 = (Object)new_AST_Send((Object)send119617, (Object)symbol22211, 0);
// =
send119619 = (Object)new_AST_Send((Object)send119618, (Object)SMB__equal, 1, (Object)classreference3164);
// selector
send119620 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol21908, 0);
// class
send119621 = (Object)new_AST_Send((Object)send119620, (Object)SMB_class, 0);
// should
send119622 = (Object)new_AST_Send((Object)send119621, (Object)symbol22211, 0);
// =
send119623 = (Object)new_AST_Send((Object)send119622, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send119624 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol21908, 0);
// selector
send119625 = (Object)new_AST_Send((Object)send119624, (Object)symbol21908, 0);
// printString
send119626 = (Object)new_AST_Send((Object)send119625, (Object)symbol22124, 0);
// should
send119627 = (Object)new_AST_Send((Object)send119626, (Object)symbol22211, 0);
string13545 = (Object)new_Type_String(L"def");
constant23116 = (Object)new_AST_Constant((Object)string13545);
// =
send119628 = (Object)new_AST_Send((Object)send119627, (Object)SMB__equal, 1, (Object)constant23116);
// receiver
send119629 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol22006, 0);
// class
send119630 = (Object)new_AST_Send((Object)send119629, (Object)SMB_class, 0);
// should
send119631 = (Object)new_AST_Send((Object)send119630, (Object)symbol22211, 0);
// =
send119632 = (Object)new_AST_Send((Object)send119631, (Object)SMB__equal, 1, (Object)classreference3173);
// receiver
send119633 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol22006, 0);
// name
send119634 = (Object)new_AST_Send((Object)send119633, (Object)SMB_name, 0);
// should
send119635 = (Object)new_AST_Send((Object)send119634, (Object)symbol22211, 0);
string13546 = (Object)new_Type_String(L"abc");
constant23117 = (Object)new_AST_Constant((Object)string13546);
// =
send119636 = (Object)new_AST_Send((Object)send119635, (Object)SMB__equal, 1, (Object)constant23117);
// position
send119637 = (Object)new_AST_Send((Object)localvariable16902, (Object)symbol22197, 0);
// should
send119638 = (Object)new_AST_Send((Object)send119637, (Object)symbol22211, 0);
smallint8354 = (Object)new_Type_SmallInt(12);
constant23118 = (Object)new_AST_Constant((Object)smallint8354);
// =
send119639 = (Object)new_AST_Send((Object)send119638, (Object)SMB__equal, 1, (Object)constant23118);
string13547 = (Object)new_Type_String(L"3");
constant23119 = (Object)new_AST_Constant((Object)string13547);
// on:
send119640 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23119);
assign14651 = (Object)new_AST_Assign((Object)localvariable16902, (Object)send119640);
// match:
send119641 = (Object)new_AST_Send((Object)localvariable16901, (Object)symbol22121, 1, (Object)localvariable16902);
assign14652 = (Object)new_AST_Assign((Object)localvariable16903, (Object)send119641);
// class
send119642 = (Object)new_AST_Send((Object)localvariable16903, (Object)SMB_class, 0);
// should
send119643 = (Object)new_AST_Send((Object)send119642, (Object)symbol22211, 0);
// =
send119644 = (Object)new_AST_Send((Object)send119643, (Object)SMB__equal, 1, (Object)classreference3150);
// number
send119645 = (Object)new_AST_Send((Object)localvariable16903, (Object)symbol21978, 0);
// should
send119646 = (Object)new_AST_Send((Object)send119645, (Object)symbol22211, 0);
string13548 = (Object)new_Type_String(L"3");
constant23120 = (Object)new_AST_Constant((Object)string13548);
// =
send119647 = (Object)new_AST_Send((Object)send119646, (Object)SMB__equal, 1, (Object)constant23120);
// position
send119648 = (Object)new_AST_Send((Object)localvariable16902, (Object)symbol22197, 0);
// should
send119649 = (Object)new_AST_Send((Object)send119648, (Object)symbol22211, 0);
smallint8355 = (Object)new_Type_SmallInt(1);
constant23121 = (Object)new_AST_Constant((Object)smallint8355);
// =
send119650 = (Object)new_AST_Send((Object)send119649, (Object)SMB__equal, 1, (Object)constant23121);
method16098 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13427, 19, assign14647, assign14648, assign14649, send119606, send119610, send119615, assign14650, send119619, send119623, send119628, send119632, send119636, send119639, assign14651, assign14652, send119644, send119647, send119650, Self);
symbol21842 = (Object)new_Type_Symbol_cached(L"testUnaryObjectDescription");
methodclosure16096 = (Object)new_Runtime_MethodClosure(method16098);
store_method((Type_Class)class2770, (Type_Symbol)symbol21842, (Runtime_MethodClosure)methodclosure16096);


// SCParserTest>>testKeywordExpression
//testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
localvariable16904 = (Object)new_AST_Variable_named(L"parser");
localvariable16905 = (Object)new_AST_Variable_named(L"string");
localvariable16906 = (Object)new_AST_Variable_named(L"result");
localvariable16907 = (Object)new_AST_Variable_named(L"arg");
array13428 = (Object)new_Type_Array_with(4, (Object)localvariable16904, (Object)localvariable16905, (Object)localvariable16906, (Object)localvariable16907);
// keywordExpression
send119651 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22238, 0);
assign14653 = (Object)new_AST_Assign((Object)localvariable16904, (Object)send119651);
string13549 = (Object)new_Type_String(L"2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23122 = (Object)new_AST_Constant((Object)string13549);
// on:
send119652 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23122);
assign14654 = (Object)new_AST_Assign((Object)localvariable16905, (Object)send119652);
// match:
send119653 = (Object)new_AST_Send((Object)localvariable16904, (Object)symbol22121, 1, (Object)localvariable16905);
assign14655 = (Object)new_AST_Assign((Object)localvariable16906, (Object)send119653);
// class
send119654 = (Object)new_AST_Send((Object)localvariable16906, (Object)SMB_class, 0);
// should
send119655 = (Object)new_AST_Send((Object)send119654, (Object)symbol22211, 0);
// =
send119656 = (Object)new_AST_Send((Object)send119655, (Object)SMB__equal, 1, (Object)classreference3159);
// keywords
send119657 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol22016, 0);
// asArray
send119658 = (Object)new_AST_Send((Object)send119657, (Object)SMB_asArray, 0);
// should
send119659 = (Object)new_AST_Send((Object)send119658, (Object)symbol22211, 0);
localvariable16908 = (Object)new_AST_Variable_named(L"receiver");
array13429 = (Object)new_Type_Array_with(1, (Object)localvariable16908);
smallint8356 = (Object)new_Type_SmallInt(1);
constant23123 = (Object)new_AST_Constant((Object)smallint8356);
string13550 = (Object)new_Type_String(L"abc");
constant23124 = (Object)new_AST_Constant((Object)string13550);
// at:put:
send119660 = (Object)new_AST_Send((Object)localvariable16908, (Object)SMB_at_put_, 2, (Object)constant23123, (Object)constant23124);
smallint8357 = (Object)new_Type_SmallInt(2);
constant23125 = (Object)new_AST_Constant((Object)smallint8357);
string13551 = (Object)new_Type_String(L"def");
constant23126 = (Object)new_AST_Constant((Object)string13551);
// at:put:
send119661 = (Object)new_AST_Send((Object)localvariable16908, (Object)SMB_at_put_, 2, (Object)constant23125, (Object)constant23126);
smallint8358 = (Object)new_Type_SmallInt(3);
constant23127 = (Object)new_AST_Constant((Object)smallint8358);
string13552 = (Object)new_Type_String(L"ghi");
constant23128 = (Object)new_AST_Constant((Object)string13552);
// at:put:
send119662 = (Object)new_AST_Send((Object)localvariable16908, (Object)SMB_at_put_, 2, (Object)constant23127, (Object)constant23128);
// yourself
send119663 = (Object)new_AST_Send((Object)localvariable16908, (Object)symbol21799, 0);
block7944 = (Object)new_AST_Block_with((Type_Array)array13429, (Type_Array)empty_Type_Array, 1, 4, send119660, send119661, send119662, send119663);
smallint8359 = (Object)new_Type_SmallInt(3);
constant23129 = (Object)new_AST_Constant((Object)smallint8359);
// new:
send119664 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23129);
// value:
send119665 = (Object)new_AST_Send((Object)block7944, (Object)SMB_value_, 1, (Object)send119664);
// =
send119666 = (Object)new_AST_Send((Object)send119659, (Object)SMB__equal, 1, (Object)send119665);
// selector
send119667 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol21908, 0);
// class
send119668 = (Object)new_AST_Send((Object)send119667, (Object)SMB_class, 0);
// should
send119669 = (Object)new_AST_Send((Object)send119668, (Object)symbol22211, 0);
// =
send119670 = (Object)new_AST_Send((Object)send119669, (Object)SMB__equal, 1, (Object)classreference3162);
// selector
send119671 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol21908, 0);
// printString
send119672 = (Object)new_AST_Send((Object)send119671, (Object)symbol22124, 0);
// should
send119673 = (Object)new_AST_Send((Object)send119672, (Object)symbol22211, 0);
string13553 = (Object)new_Type_String(L"abc:def:ghi:");
constant23130 = (Object)new_AST_Constant((Object)string13553);
// =
send119674 = (Object)new_AST_Send((Object)send119673, (Object)SMB__equal, 1, (Object)constant23130);
// arguments
send119675 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol21909, 0);
// first
send119676 = (Object)new_AST_Send((Object)send119675, (Object)symbol21970, 0);
assign14656 = (Object)new_AST_Assign((Object)localvariable16907, (Object)send119676);
// class
send119677 = (Object)new_AST_Send((Object)localvariable16907, (Object)SMB_class, 0);
// should
send119678 = (Object)new_AST_Send((Object)send119677, (Object)symbol22211, 0);
// =
send119679 = (Object)new_AST_Send((Object)send119678, (Object)SMB__equal, 1, (Object)classreference3150);
// arguments
send119680 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol21909, 0);
smallint8360 = (Object)new_Type_SmallInt(2);
constant23131 = (Object)new_AST_Constant((Object)smallint8360);
// at:
send119681 = (Object)new_AST_Send((Object)send119680, (Object)SMB_at_, 1, (Object)constant23131);
assign14657 = (Object)new_AST_Assign((Object)localvariable16907, (Object)send119681);
// class
send119682 = (Object)new_AST_Send((Object)localvariable16907, (Object)SMB_class, 0);
// should
send119683 = (Object)new_AST_Send((Object)send119682, (Object)symbol22211, 0);
// =
send119684 = (Object)new_AST_Send((Object)send119683, (Object)SMB__equal, 1, (Object)classreference3154);
// arguments
send119685 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol21909, 0);
smallint8361 = (Object)new_Type_SmallInt(3);
constant23132 = (Object)new_AST_Constant((Object)smallint8361);
// at:
send119686 = (Object)new_AST_Send((Object)send119685, (Object)SMB_at_, 1, (Object)constant23132);
assign14658 = (Object)new_AST_Assign((Object)localvariable16907, (Object)send119686);
// class
send119687 = (Object)new_AST_Send((Object)localvariable16907, (Object)SMB_class, 0);
// should
send119688 = (Object)new_AST_Send((Object)send119687, (Object)symbol22211, 0);
// =
send119689 = (Object)new_AST_Send((Object)send119688, (Object)SMB__equal, 1, (Object)classreference3164);
// receiver
send119690 = (Object)new_AST_Send((Object)localvariable16906, (Object)symbol22006, 0);
// class
send119691 = (Object)new_AST_Send((Object)send119690, (Object)SMB_class, 0);
// should
send119692 = (Object)new_AST_Send((Object)send119691, (Object)symbol22211, 0);
// =
send119693 = (Object)new_AST_Send((Object)send119692, (Object)SMB__equal, 1, (Object)classreference3154);
// position
send119694 = (Object)new_AST_Send((Object)localvariable16905, (Object)symbol22197, 0);
// should
send119695 = (Object)new_AST_Send((Object)send119694, (Object)symbol22211, 0);
smallint8362 = (Object)new_Type_SmallInt(29);
constant23133 = (Object)new_AST_Constant((Object)smallint8362);
// =
send119696 = (Object)new_AST_Send((Object)send119695, (Object)SMB__equal, 1, (Object)constant23133);
method16099 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13428, 16, assign14653, assign14654, assign14655, send119656, send119666, send119670, send119674, assign14656, send119679, assign14657, send119684, assign14658, send119689, send119693, send119696, Self);
symbol21870 = (Object)new_Type_Symbol_cached(L"testKeywordExpression");
methodclosure16097 = (Object)new_Runtime_MethodClosure(method16099);
store_method((Type_Class)class2770, (Type_Symbol)symbol21870, (Runtime_MethodClosure)methodclosure16097);


// SCParserTest>>testAnnotation
//testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
localvariable16909 = (Object)new_AST_Variable_named(L"parser");
localvariable16910 = (Object)new_AST_Variable_named(L"string");
localvariable16911 = (Object)new_AST_Variable_named(L"result");
localvariable16912 = (Object)new_AST_Variable_named(L"arg");
array13430 = (Object)new_Type_Array_with(4, (Object)localvariable16909, (Object)localvariable16910, (Object)localvariable16911, (Object)localvariable16912);
// annotation
send119697 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22272, 0);
assign14659 = (Object)new_AST_Assign((Object)localvariable16909, (Object)send119697);
string13554 = (Object)new_Type_String(L"<abc: 1 def: (2 + 3) ghi: (3 b)>");
constant23134 = (Object)new_AST_Constant((Object)string13554);
// on:
send119698 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23134);
assign14660 = (Object)new_AST_Assign((Object)localvariable16910, (Object)send119698);
// match:
send119699 = (Object)new_AST_Send((Object)localvariable16909, (Object)symbol22121, 1, (Object)localvariable16910);
assign14661 = (Object)new_AST_Assign((Object)localvariable16911, (Object)send119699);
// class
send119700 = (Object)new_AST_Send((Object)localvariable16911, (Object)SMB_class, 0);
// should
send119701 = (Object)new_AST_Send((Object)send119700, (Object)symbol22211, 0);
// =
send119702 = (Object)new_AST_Send((Object)send119701, (Object)SMB__equal, 1, (Object)classreference3153);
// keywords
send119703 = (Object)new_AST_Send((Object)localvariable16911, (Object)symbol22016, 0);
// asArray
send119704 = (Object)new_AST_Send((Object)send119703, (Object)SMB_asArray, 0);
constant23135 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send119705 = (Object)new_AST_Send((Object)send119704, (Object)symbol22254, 1, (Object)constant23135);
// should
send119706 = (Object)new_AST_Send((Object)send119705, (Object)symbol22211, 0);
localvariable16913 = (Object)new_AST_Variable_named(L"receiver");
array13431 = (Object)new_Type_Array_with(1, (Object)localvariable16913);
smallint8363 = (Object)new_Type_SmallInt(1);
constant23136 = (Object)new_AST_Constant((Object)smallint8363);
symbol22275 = (Object)new_Type_Symbol_cached(L"abc");
constant23137 = (Object)new_AST_Constant((Object)symbol22275);
// at:put:
send119707 = (Object)new_AST_Send((Object)localvariable16913, (Object)SMB_at_put_, 2, (Object)constant23136, (Object)constant23137);
smallint8364 = (Object)new_Type_SmallInt(2);
constant23138 = (Object)new_AST_Constant((Object)smallint8364);
symbol22276 = (Object)new_Type_Symbol_cached(L"def");
constant23139 = (Object)new_AST_Constant((Object)symbol22276);
// at:put:
send119708 = (Object)new_AST_Send((Object)localvariable16913, (Object)SMB_at_put_, 2, (Object)constant23138, (Object)constant23139);
smallint8365 = (Object)new_Type_SmallInt(3);
constant23140 = (Object)new_AST_Constant((Object)smallint8365);
symbol22277 = (Object)new_Type_Symbol_cached(L"ghi");
constant23141 = (Object)new_AST_Constant((Object)symbol22277);
// at:put:
send119709 = (Object)new_AST_Send((Object)localvariable16913, (Object)SMB_at_put_, 2, (Object)constant23140, (Object)constant23141);
// yourself
send119710 = (Object)new_AST_Send((Object)localvariable16913, (Object)symbol21799, 0);
block7945 = (Object)new_AST_Block_with((Type_Array)array13431, (Type_Array)empty_Type_Array, 1, 4, send119707, send119708, send119709, send119710);
smallint8366 = (Object)new_Type_SmallInt(3);
constant23142 = (Object)new_AST_Constant((Object)smallint8366);
// new:
send119711 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23142);
// value:
send119712 = (Object)new_AST_Send((Object)block7945, (Object)SMB_value_, 1, (Object)send119711);
// =
send119713 = (Object)new_AST_Send((Object)send119706, (Object)SMB__equal, 1, (Object)send119712);
// arguments
send119714 = (Object)new_AST_Send((Object)localvariable16911, (Object)symbol21909, 0);
// first
send119715 = (Object)new_AST_Send((Object)send119714, (Object)symbol21970, 0);
assign14662 = (Object)new_AST_Assign((Object)localvariable16912, (Object)send119715);
// class
send119716 = (Object)new_AST_Send((Object)localvariable16912, (Object)SMB_class, 0);
// should
send119717 = (Object)new_AST_Send((Object)send119716, (Object)symbol22211, 0);
// =
send119718 = (Object)new_AST_Send((Object)send119717, (Object)SMB__equal, 1, (Object)classreference3150);
// arguments
send119719 = (Object)new_AST_Send((Object)localvariable16911, (Object)symbol21909, 0);
smallint8367 = (Object)new_Type_SmallInt(2);
constant23143 = (Object)new_AST_Constant((Object)smallint8367);
// at:
send119720 = (Object)new_AST_Send((Object)send119719, (Object)SMB_at_, 1, (Object)constant23143);
assign14663 = (Object)new_AST_Assign((Object)localvariable16912, (Object)send119720);
// class
send119721 = (Object)new_AST_Send((Object)localvariable16912, (Object)SMB_class, 0);
// should
send119722 = (Object)new_AST_Send((Object)send119721, (Object)symbol22211, 0);
// =
send119723 = (Object)new_AST_Send((Object)send119722, (Object)SMB__equal, 1, (Object)classreference3154);
// arguments
send119724 = (Object)new_AST_Send((Object)localvariable16911, (Object)symbol21909, 0);
smallint8368 = (Object)new_Type_SmallInt(3);
constant23144 = (Object)new_AST_Constant((Object)smallint8368);
// at:
send119725 = (Object)new_AST_Send((Object)send119724, (Object)SMB_at_, 1, (Object)constant23144);
assign14664 = (Object)new_AST_Assign((Object)localvariable16912, (Object)send119725);
// class
send119726 = (Object)new_AST_Send((Object)localvariable16912, (Object)SMB_class, 0);
// should
send119727 = (Object)new_AST_Send((Object)send119726, (Object)symbol22211, 0);
// =
send119728 = (Object)new_AST_Send((Object)send119727, (Object)SMB__equal, 1, (Object)classreference3164);
// atEnd
send119729 = (Object)new_AST_Send((Object)localvariable16910, (Object)SMB_atEnd, 0);
// should
send119730 = (Object)new_AST_Send((Object)send119729, (Object)symbol22211, 0);
// be
send119731 = (Object)new_AST_Send((Object)send119730, (Object)symbol22273, 0);
symbol22278 = (Object)new_Type_Symbol_cached(L"true");
// true
send119732 = (Object)new_AST_Send((Object)send119731, (Object)symbol22278, 0);
string13555 = (Object)new_Type_String(L"<abc> ");
constant23145 = (Object)new_AST_Constant((Object)string13555);
// on:
send119733 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23145);
assign14665 = (Object)new_AST_Assign((Object)localvariable16910, (Object)send119733);
// match:
send119734 = (Object)new_AST_Send((Object)localvariable16909, (Object)symbol22121, 1, (Object)localvariable16910);
assign14666 = (Object)new_AST_Assign((Object)localvariable16911, (Object)send119734);
// class
send119735 = (Object)new_AST_Send((Object)localvariable16911, (Object)SMB_class, 0);
// should
send119736 = (Object)new_AST_Send((Object)send119735, (Object)symbol22211, 0);
// =
send119737 = (Object)new_AST_Send((Object)send119736, (Object)SMB__equal, 1, (Object)classreference3161);
// selector
send119738 = (Object)new_AST_Send((Object)localvariable16911, (Object)symbol21908, 0);
// asString
send119739 = (Object)new_AST_Send((Object)send119738, (Object)SMB_asString, 0);
// should
send119740 = (Object)new_AST_Send((Object)send119739, (Object)symbol22211, 0);
string13556 = (Object)new_Type_String(L"abc");
constant23146 = (Object)new_AST_Constant((Object)string13556);
// =
send119741 = (Object)new_AST_Send((Object)send119740, (Object)SMB__equal, 1, (Object)constant23146);
// position
send119742 = (Object)new_AST_Send((Object)localvariable16910, (Object)symbol22197, 0);
// should
send119743 = (Object)new_AST_Send((Object)send119742, (Object)symbol22211, 0);
smallint8369 = (Object)new_Type_SmallInt(5);
constant23147 = (Object)new_AST_Constant((Object)smallint8369);
// =
send119744 = (Object)new_AST_Send((Object)send119743, (Object)SMB__equal, 1, (Object)constant23147);
string13557 = (Object)new_Type_String(L"<temps: 4 annotations: 1 statements: 2>");
constant23148 = (Object)new_AST_Constant((Object)string13557);
// on:
send119745 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23148);
assign14667 = (Object)new_AST_Assign((Object)localvariable16910, (Object)send119745);
// match:
send119746 = (Object)new_AST_Send((Object)localvariable16909, (Object)symbol22121, 1, (Object)localvariable16910);
assign14668 = (Object)new_AST_Assign((Object)localvariable16911, (Object)send119746);
// class
send119747 = (Object)new_AST_Send((Object)localvariable16911, (Object)SMB_class, 0);
// should
send119748 = (Object)new_AST_Send((Object)send119747, (Object)symbol22211, 0);
// =
send119749 = (Object)new_AST_Send((Object)send119748, (Object)SMB__equal, 1, (Object)classreference3153);
// keywords
send119750 = (Object)new_AST_Send((Object)localvariable16911, (Object)symbol22016, 0);
// asArray
send119751 = (Object)new_AST_Send((Object)send119750, (Object)SMB_asArray, 0);
constant23149 = (Object)new_AST_Constant((Object)SMB_asSymbol);
// collect:
send119752 = (Object)new_AST_Send((Object)send119751, (Object)symbol22254, 1, (Object)constant23149);
// should
send119753 = (Object)new_AST_Send((Object)send119752, (Object)symbol22211, 0);
localvariable16914 = (Object)new_AST_Variable_named(L"receiver");
array13432 = (Object)new_Type_Array_with(1, (Object)localvariable16914);
smallint8370 = (Object)new_Type_SmallInt(1);
constant23150 = (Object)new_AST_Constant((Object)smallint8370);
string13558 = (Object)new_Type_String(L"temps");
constant23151 = (Object)new_AST_Constant((Object)string13558);
// at:put:
send119754 = (Object)new_AST_Send((Object)localvariable16914, (Object)SMB_at_put_, 2, (Object)constant23150, (Object)constant23151);
smallint8371 = (Object)new_Type_SmallInt(2);
constant23152 = (Object)new_AST_Constant((Object)smallint8371);
string13559 = (Object)new_Type_String(L"annotations");
constant23153 = (Object)new_AST_Constant((Object)string13559);
// at:put:
send119755 = (Object)new_AST_Send((Object)localvariable16914, (Object)SMB_at_put_, 2, (Object)constant23152, (Object)constant23153);
smallint8372 = (Object)new_Type_SmallInt(3);
constant23154 = (Object)new_AST_Constant((Object)smallint8372);
string13560 = (Object)new_Type_String(L"statements");
constant23155 = (Object)new_AST_Constant((Object)string13560);
// at:put:
send119756 = (Object)new_AST_Send((Object)localvariable16914, (Object)SMB_at_put_, 2, (Object)constant23154, (Object)constant23155);
// yourself
send119757 = (Object)new_AST_Send((Object)localvariable16914, (Object)symbol21799, 0);
block7946 = (Object)new_AST_Block_with((Type_Array)array13432, (Type_Array)empty_Type_Array, 1, 4, send119754, send119755, send119756, send119757);
smallint8373 = (Object)new_Type_SmallInt(3);
constant23156 = (Object)new_AST_Constant((Object)smallint8373);
// new:
send119758 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23156);
// value:
send119759 = (Object)new_AST_Send((Object)block7946, (Object)SMB_value_, 1, (Object)send119758);
// =
send119760 = (Object)new_AST_Send((Object)send119753, (Object)SMB__equal, 1, (Object)send119759);
// atEnd
send119761 = (Object)new_AST_Send((Object)localvariable16910, (Object)SMB_atEnd, 0);
// should
send119762 = (Object)new_AST_Send((Object)send119761, (Object)symbol22211, 0);
// be
send119763 = (Object)new_AST_Send((Object)send119762, (Object)symbol22273, 0);
// true
send119764 = (Object)new_AST_Send((Object)send119763, (Object)symbol22278, 0);
method16100 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13430, 23, assign14659, assign14660, assign14661, send119702, send119713, assign14662, send119718, assign14663, send119723, assign14664, send119728, send119732, assign14665, assign14666, send119737, send119741, send119744, assign14667, assign14668, send119749, send119760, send119764, Self);
symbol21862 = (Object)new_Type_Symbol_cached(L"testAnnotation");
methodclosure16098 = (Object)new_Runtime_MethodClosure(method16100);
store_method((Type_Class)class2770, (Type_Symbol)symbol21862, (Runtime_MethodClosure)methodclosure16098);


// SCParserTest>>testScopedExpression
//testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable16915 = (Object)new_AST_Variable_named(L"parser");
localvariable16916 = (Object)new_AST_Variable_named(L"string");
localvariable16917 = (Object)new_AST_Variable_named(L"result");
array13433 = (Object)new_Type_Array_with(3, (Object)localvariable16915, (Object)localvariable16916, (Object)localvariable16917);
// expression
send119765 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22033, 0);
assign14669 = (Object)new_AST_Assign((Object)localvariable16915, (Object)send119765);
string13561 = (Object)new_Type_String(L"(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) ");
constant23157 = (Object)new_AST_Constant((Object)string13561);
// on:
send119766 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23157);
assign14670 = (Object)new_AST_Assign((Object)localvariable16916, (Object)send119766);
// match:
send119767 = (Object)new_AST_Send((Object)localvariable16915, (Object)symbol22121, 1, (Object)localvariable16916);
assign14671 = (Object)new_AST_Assign((Object)localvariable16917, (Object)send119767);
// class
send119768 = (Object)new_AST_Send((Object)localvariable16917, (Object)SMB_class, 0);
// should
send119769 = (Object)new_AST_Send((Object)send119768, (Object)symbol22211, 0);
// =
send119770 = (Object)new_AST_Send((Object)send119769, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119771 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22035, 0);
// class
send119772 = (Object)new_AST_Send((Object)send119771, (Object)SMB_class, 0);
// should
send119773 = (Object)new_AST_Send((Object)send119772, (Object)symbol22211, 0);
// =
send119774 = (Object)new_AST_Send((Object)send119773, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119775 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22035, 0);
// name
send119776 = (Object)new_AST_Send((Object)send119775, (Object)SMB_name, 0);
// should
send119777 = (Object)new_AST_Send((Object)send119776, (Object)symbol22211, 0);
string13562 = (Object)new_Type_String(L"a");
constant23158 = (Object)new_AST_Constant((Object)string13562);
// =
send119778 = (Object)new_AST_Send((Object)send119777, (Object)SMB__equal, 1, (Object)constant23158);
// expression
send119779 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22033, 0);
assign14672 = (Object)new_AST_Assign((Object)localvariable16917, (Object)send119779);
// class
send119780 = (Object)new_AST_Send((Object)localvariable16917, (Object)SMB_class, 0);
// should
send119781 = (Object)new_AST_Send((Object)send119780, (Object)symbol22211, 0);
// =
send119782 = (Object)new_AST_Send((Object)send119781, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119783 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22035, 0);
// class
send119784 = (Object)new_AST_Send((Object)send119783, (Object)SMB_class, 0);
// should
send119785 = (Object)new_AST_Send((Object)send119784, (Object)symbol22211, 0);
// =
send119786 = (Object)new_AST_Send((Object)send119785, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119787 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22035, 0);
// name
send119788 = (Object)new_AST_Send((Object)send119787, (Object)SMB_name, 0);
// should
send119789 = (Object)new_AST_Send((Object)send119788, (Object)symbol22211, 0);
string13563 = (Object)new_Type_String(L"b");
constant23159 = (Object)new_AST_Constant((Object)string13563);
// =
send119790 = (Object)new_AST_Send((Object)send119789, (Object)SMB__equal, 1, (Object)constant23159);
// expression
send119791 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22033, 0);
assign14673 = (Object)new_AST_Assign((Object)localvariable16917, (Object)send119791);
// class
send119792 = (Object)new_AST_Send((Object)localvariable16917, (Object)SMB_class, 0);
// should
send119793 = (Object)new_AST_Send((Object)send119792, (Object)symbol22211, 0);
// =
send119794 = (Object)new_AST_Send((Object)send119793, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send119795 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22035, 0);
// class
send119796 = (Object)new_AST_Send((Object)send119795, (Object)SMB_class, 0);
// should
send119797 = (Object)new_AST_Send((Object)send119796, (Object)symbol22211, 0);
// =
send119798 = (Object)new_AST_Send((Object)send119797, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send119799 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22035, 0);
// name
send119800 = (Object)new_AST_Send((Object)send119799, (Object)SMB_name, 0);
// should
send119801 = (Object)new_AST_Send((Object)send119800, (Object)symbol22211, 0);
string13564 = (Object)new_Type_String(L"c");
constant23160 = (Object)new_AST_Constant((Object)string13564);
// =
send119802 = (Object)new_AST_Send((Object)send119801, (Object)SMB__equal, 1, (Object)constant23160);
// expression
send119803 = (Object)new_AST_Send((Object)localvariable16917, (Object)symbol22033, 0);
// class
send119804 = (Object)new_AST_Send((Object)send119803, (Object)SMB_class, 0);
// should
send119805 = (Object)new_AST_Send((Object)send119804, (Object)symbol22211, 0);
// =
send119806 = (Object)new_AST_Send((Object)send119805, (Object)SMB__equal, 1, (Object)classreference3159);
method16101 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13433, 16, assign14669, assign14670, assign14671, send119770, send119774, send119778, assign14672, send119782, send119786, send119790, assign14673, send119794, send119798, send119802, send119806, Self);
symbol21859 = (Object)new_Type_Symbol_cached(L"testScopedExpression");
methodclosure16099 = (Object)new_Runtime_MethodClosure(method16101);
store_method((Type_Class)class2770, (Type_Symbol)symbol21859, (Runtime_MethodClosure)methodclosure16099);


// SCParserTest>>testIdentifier
//testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable16918 = (Object)new_AST_Variable_named(L"parser");
localvariable16919 = (Object)new_AST_Variable_named(L"string");
array13434 = (Object)new_Type_Array_with(2, (Object)localvariable16918, (Object)localvariable16919);
// identifier
send119807 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22242, 0);
assign14674 = (Object)new_AST_Assign((Object)localvariable16918, (Object)send119807);
string13565 = (Object)new_Type_String(L"abcd ");
constant23161 = (Object)new_AST_Constant((Object)string13565);
// on:
send119808 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23161);
assign14675 = (Object)new_AST_Assign((Object)localvariable16919, (Object)send119808);
// match:
send119809 = (Object)new_AST_Send((Object)localvariable16918, (Object)symbol22121, 1, (Object)localvariable16919);
// should
send119810 = (Object)new_AST_Send((Object)send119809, (Object)symbol22211, 0);
string13566 = (Object)new_Type_String(L"abcd");
constant23162 = (Object)new_AST_Constant((Object)string13566);
// =
send119811 = (Object)new_AST_Send((Object)send119810, (Object)SMB__equal, 1, (Object)constant23162);
// position
send119812 = (Object)new_AST_Send((Object)localvariable16919, (Object)symbol22197, 0);
// should
send119813 = (Object)new_AST_Send((Object)send119812, (Object)symbol22211, 0);
smallint8374 = (Object)new_Type_SmallInt(4);
constant23163 = (Object)new_AST_Constant((Object)smallint8374);
// =
send119814 = (Object)new_AST_Send((Object)send119813, (Object)SMB__equal, 1, (Object)constant23163);
string13567 = (Object)new_Type_String(L"AbCd145 ");
constant23164 = (Object)new_AST_Constant((Object)string13567);
// on:
send119815 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23164);
assign14676 = (Object)new_AST_Assign((Object)localvariable16919, (Object)send119815);
// match:
send119816 = (Object)new_AST_Send((Object)localvariable16918, (Object)symbol22121, 1, (Object)localvariable16919);
// should
send119817 = (Object)new_AST_Send((Object)send119816, (Object)symbol22211, 0);
string13568 = (Object)new_Type_String(L"AbCd145");
constant23165 = (Object)new_AST_Constant((Object)string13568);
// =
send119818 = (Object)new_AST_Send((Object)send119817, (Object)SMB__equal, 1, (Object)constant23165);
// position
send119819 = (Object)new_AST_Send((Object)localvariable16919, (Object)symbol22197, 0);
// should
send119820 = (Object)new_AST_Send((Object)send119819, (Object)symbol22211, 0);
smallint8375 = (Object)new_Type_SmallInt(7);
constant23166 = (Object)new_AST_Constant((Object)smallint8375);
// =
send119821 = (Object)new_AST_Send((Object)send119820, (Object)SMB__equal, 1, (Object)constant23166);
string13569 = (Object)new_Type_String(L"1a");
constant23167 = (Object)new_AST_Constant((Object)string13569);
// on:
send119822 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23167);
assign14677 = (Object)new_AST_Assign((Object)localvariable16919, (Object)send119822);
// match:
send119823 = (Object)new_AST_Send((Object)localvariable16918, (Object)symbol22121, 1, (Object)localvariable16919);
// should
send119824 = (Object)new_AST_Send((Object)send119823, (Object)symbol22211, 0);
// be
send119825 = (Object)new_AST_Send((Object)send119824, (Object)symbol22273, 0);
// isNil
send119826 = (Object)new_AST_Send((Object)send119825, (Object)SMB_isNil, 0);
// position
send119827 = (Object)new_AST_Send((Object)localvariable16919, (Object)symbol22197, 0);
// should
send119828 = (Object)new_AST_Send((Object)send119827, (Object)symbol22211, 0);
smallint8376 = (Object)new_Type_SmallInt(0);
constant23168 = (Object)new_AST_Constant((Object)smallint8376);
// =
send119829 = (Object)new_AST_Send((Object)send119828, (Object)SMB__equal, 1, (Object)constant23168);
method16102 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13434, 11, assign14674, assign14675, send119811, send119814, assign14676, send119818, send119821, assign14677, send119826, send119829, Self);
symbol21832 = (Object)new_Type_Symbol_cached(L"testIdentifier");
methodclosure16100 = (Object)new_Runtime_MethodClosure(method16102);
store_method((Type_Class)class2770, (Type_Symbol)symbol21832, (Runtime_MethodClosure)methodclosure16100);


// SCParserTest>>testCascadedMessageExpression
//testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
localvariable16920 = (Object)new_AST_Variable_named(L"parser");
localvariable16921 = (Object)new_AST_Variable_named(L"string");
localvariable16922 = (Object)new_AST_Variable_named(L"result");
localvariable16923 = (Object)new_AST_Variable_named(L"expression");
array13435 = (Object)new_Type_Array_with(4, (Object)localvariable16920, (Object)localvariable16921, (Object)localvariable16922, (Object)localvariable16923);
// cascadedMessageExpression
send119830 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22228, 0);
assign14678 = (Object)new_AST_Assign((Object)localvariable16920, (Object)send119830);
string13570 = (Object)new_Type_String(L"2+4; x: 3 b; d: 3 c: 4; x ");
constant23169 = (Object)new_AST_Constant((Object)string13570);
// on:
send119831 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23169);
assign14679 = (Object)new_AST_Assign((Object)localvariable16921, (Object)send119831);
// match:
send119832 = (Object)new_AST_Send((Object)localvariable16920, (Object)symbol22121, 1, (Object)localvariable16921);
assign14680 = (Object)new_AST_Assign((Object)localvariable16922, (Object)send119832);
// class
send119833 = (Object)new_AST_Send((Object)localvariable16922, (Object)SMB_class, 0);
// should
send119834 = (Object)new_AST_Send((Object)send119833, (Object)symbol22211, 0);
// =
send119835 = (Object)new_AST_Send((Object)send119834, (Object)SMB__equal, 1, (Object)classreference3149);
// receiver
send119836 = (Object)new_AST_Send((Object)localvariable16922, (Object)symbol22006, 0);
// class
send119837 = (Object)new_AST_Send((Object)send119836, (Object)SMB_class, 0);
// should
send119838 = (Object)new_AST_Send((Object)send119837, (Object)symbol22211, 0);
// =
send119839 = (Object)new_AST_Send((Object)send119838, (Object)SMB__equal, 1, (Object)classreference3150);
// cascades
send119840 = (Object)new_AST_Send((Object)localvariable16922, (Object)symbol22003, 0);
// size
send119841 = (Object)new_AST_Send((Object)send119840, (Object)SMB_size, 0);
// should
send119842 = (Object)new_AST_Send((Object)send119841, (Object)symbol22211, 0);
smallint8377 = (Object)new_Type_SmallInt(4);
constant23170 = (Object)new_AST_Constant((Object)smallint8377);
// =
send119843 = (Object)new_AST_Send((Object)send119842, (Object)SMB__equal, 1, (Object)constant23170);
// cascades
send119844 = (Object)new_AST_Send((Object)localvariable16922, (Object)symbol22003, 0);
smallint8378 = (Object)new_Type_SmallInt(1);
constant23171 = (Object)new_AST_Constant((Object)smallint8378);
// at:
send119845 = (Object)new_AST_Send((Object)send119844, (Object)SMB_at_, 1, (Object)constant23171);
assign14681 = (Object)new_AST_Assign((Object)localvariable16923, (Object)send119845);
// class
send119846 = (Object)new_AST_Send((Object)localvariable16923, (Object)SMB_class, 0);
// should
send119847 = (Object)new_AST_Send((Object)send119846, (Object)symbol22211, 0);
// =
send119848 = (Object)new_AST_Send((Object)send119847, (Object)SMB__equal, 1, (Object)classreference3154);
// cascades
send119849 = (Object)new_AST_Send((Object)localvariable16922, (Object)symbol22003, 0);
smallint8379 = (Object)new_Type_SmallInt(2);
constant23172 = (Object)new_AST_Constant((Object)smallint8379);
// at:
send119850 = (Object)new_AST_Send((Object)send119849, (Object)SMB_at_, 1, (Object)constant23172);
assign14682 = (Object)new_AST_Assign((Object)localvariable16923, (Object)send119850);
// class
send119851 = (Object)new_AST_Send((Object)localvariable16923, (Object)SMB_class, 0);
// should
send119852 = (Object)new_AST_Send((Object)send119851, (Object)symbol22211, 0);
// =
send119853 = (Object)new_AST_Send((Object)send119852, (Object)SMB__equal, 1, (Object)classreference3159);
// cascades
send119854 = (Object)new_AST_Send((Object)localvariable16922, (Object)symbol22003, 0);
smallint8380 = (Object)new_Type_SmallInt(3);
constant23173 = (Object)new_AST_Constant((Object)smallint8380);
// at:
send119855 = (Object)new_AST_Send((Object)send119854, (Object)SMB_at_, 1, (Object)constant23173);
assign14683 = (Object)new_AST_Assign((Object)localvariable16923, (Object)send119855);
// class
send119856 = (Object)new_AST_Send((Object)localvariable16923, (Object)SMB_class, 0);
// should
send119857 = (Object)new_AST_Send((Object)send119856, (Object)symbol22211, 0);
// =
send119858 = (Object)new_AST_Send((Object)send119857, (Object)SMB__equal, 1, (Object)classreference3159);
// cascades
send119859 = (Object)new_AST_Send((Object)localvariable16922, (Object)symbol22003, 0);
smallint8381 = (Object)new_Type_SmallInt(4);
constant23174 = (Object)new_AST_Constant((Object)smallint8381);
// at:
send119860 = (Object)new_AST_Send((Object)send119859, (Object)SMB_at_, 1, (Object)constant23174);
assign14684 = (Object)new_AST_Assign((Object)localvariable16923, (Object)send119860);
// class
send119861 = (Object)new_AST_Send((Object)localvariable16923, (Object)SMB_class, 0);
// should
send119862 = (Object)new_AST_Send((Object)send119861, (Object)symbol22211, 0);
// =
send119863 = (Object)new_AST_Send((Object)send119862, (Object)SMB__equal, 1, (Object)classreference3164);
method16103 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13435, 15, assign14678, assign14679, assign14680, send119835, send119839, send119843, assign14681, send119848, assign14682, send119853, assign14683, send119858, assign14684, send119863, Self);
symbol21824 = (Object)new_Type_Symbol_cached(L"testCascadedMessageExpression");
methodclosure16101 = (Object)new_Runtime_MethodClosure(method16103);
store_method((Type_Class)class2770, (Type_Symbol)symbol21824, (Runtime_MethodClosure)methodclosure16101);


// SCParserTest>>testString
//testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
localvariable16924 = (Object)new_AST_Variable_named(L"parser");
localvariable16925 = (Object)new_AST_Variable_named(L"string");
array13436 = (Object)new_Type_Array_with(2, (Object)localvariable16924, (Object)localvariable16925);
// string
send119864 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol21987, 0);
assign14685 = (Object)new_AST_Assign((Object)localvariable16924, (Object)send119864);
string13571 = (Object)new_Type_String(L"");
constant23175 = (Object)new_AST_Constant((Object)string13571);
// on:
send119865 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23175);
assign14686 = (Object)new_AST_Assign((Object)localvariable16925, (Object)send119865);
// match:
send119866 = (Object)new_AST_Send((Object)localvariable16924, (Object)symbol22121, 1, (Object)localvariable16925);
// should
send119867 = (Object)new_AST_Send((Object)send119866, (Object)symbol22211, 0);
// be
send119868 = (Object)new_AST_Send((Object)send119867, (Object)symbol22273, 0);
// isNil
send119869 = (Object)new_AST_Send((Object)send119868, (Object)SMB_isNil, 0);
// position
send119870 = (Object)new_AST_Send((Object)localvariable16925, (Object)symbol22197, 0);
// should
send119871 = (Object)new_AST_Send((Object)send119870, (Object)symbol22211, 0);
smallint8382 = (Object)new_Type_SmallInt(0);
constant23176 = (Object)new_AST_Constant((Object)smallint8382);
// =
send119872 = (Object)new_AST_Send((Object)send119871, (Object)SMB__equal, 1, (Object)constant23176);
string13572 = (Object)new_Type_String(L"\'abc\'");
constant23177 = (Object)new_AST_Constant((Object)string13572);
// on:
send119873 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23177);
assign14687 = (Object)new_AST_Assign((Object)localvariable16925, (Object)send119873);
// match:
send119874 = (Object)new_AST_Send((Object)localvariable16924, (Object)symbol22121, 1, (Object)localvariable16925);
// should
send119875 = (Object)new_AST_Send((Object)send119874, (Object)symbol22211, 0);
string13573 = (Object)new_Type_String(L"abc");
constant23178 = (Object)new_AST_Constant((Object)string13573);
// =
send119876 = (Object)new_AST_Send((Object)send119875, (Object)SMB__equal, 1, (Object)constant23178);
// position
send119877 = (Object)new_AST_Send((Object)localvariable16925, (Object)symbol22197, 0);
// should
send119878 = (Object)new_AST_Send((Object)send119877, (Object)symbol22211, 0);
smallint8383 = (Object)new_Type_SmallInt(5);
constant23179 = (Object)new_AST_Constant((Object)smallint8383);
// =
send119879 = (Object)new_AST_Send((Object)send119878, (Object)SMB__equal, 1, (Object)constant23179);
string13574 = (Object)new_Type_String(L"\'abc\'\'");
constant23180 = (Object)new_AST_Constant((Object)string13574);
// on:
send119880 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23180);
assign14688 = (Object)new_AST_Assign((Object)localvariable16925, (Object)send119880);
// match:
send119881 = (Object)new_AST_Send((Object)localvariable16924, (Object)symbol22121, 1, (Object)localvariable16925);
// should
send119882 = (Object)new_AST_Send((Object)send119881, (Object)symbol22211, 0);
string13575 = (Object)new_Type_String(L"abc");
constant23181 = (Object)new_AST_Constant((Object)string13575);
// =
send119883 = (Object)new_AST_Send((Object)send119882, (Object)SMB__equal, 1, (Object)constant23181);
// position
send119884 = (Object)new_AST_Send((Object)localvariable16925, (Object)symbol22197, 0);
// should
send119885 = (Object)new_AST_Send((Object)send119884, (Object)symbol22211, 0);
smallint8384 = (Object)new_Type_SmallInt(5);
constant23182 = (Object)new_AST_Constant((Object)smallint8384);
// =
send119886 = (Object)new_AST_Send((Object)send119885, (Object)SMB__equal, 1, (Object)constant23182);
string13576 = (Object)new_Type_String(L"\'abc\'\'d\'");
constant23183 = (Object)new_AST_Constant((Object)string13576);
// on:
send119887 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23183);
assign14689 = (Object)new_AST_Assign((Object)localvariable16925, (Object)send119887);
// match:
send119888 = (Object)new_AST_Send((Object)localvariable16924, (Object)symbol22121, 1, (Object)localvariable16925);
// should
send119889 = (Object)new_AST_Send((Object)send119888, (Object)symbol22211, 0);
string13577 = (Object)new_Type_String(L"abc\'d");
constant23184 = (Object)new_AST_Constant((Object)string13577);
// =
send119890 = (Object)new_AST_Send((Object)send119889, (Object)SMB__equal, 1, (Object)constant23184);
// position
send119891 = (Object)new_AST_Send((Object)localvariable16925, (Object)symbol22197, 0);
// should
send119892 = (Object)new_AST_Send((Object)send119891, (Object)symbol22211, 0);
smallint8385 = (Object)new_Type_SmallInt(8);
constant23185 = (Object)new_AST_Constant((Object)smallint8385);
// =
send119893 = (Object)new_AST_Send((Object)send119892, (Object)SMB__equal, 1, (Object)constant23185);
method16104 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13436, 14, assign14685, assign14686, send119869, send119872, assign14687, send119876, send119879, assign14688, send119883, send119886, assign14689, send119890, send119893, Self);
symbol21852 = (Object)new_Type_Symbol_cached(L"testString");
methodclosure16102 = (Object)new_Runtime_MethodClosure(method16104);
store_method((Type_Class)class2770, (Type_Symbol)symbol21852, (Runtime_MethodClosure)methodclosure16102);


// SCParserTest>>testBinaryObjectDescription
//testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable16926 = (Object)new_AST_Variable_named(L"parser");
localvariable16927 = (Object)new_AST_Variable_named(L"string");
localvariable16928 = (Object)new_AST_Variable_named(L"result");
array13437 = (Object)new_Type_Array_with(3, (Object)localvariable16926, (Object)localvariable16927, (Object)localvariable16928);
// binaryObjectDescription
send119894 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22232, 0);
assign14690 = (Object)new_AST_Assign((Object)localvariable16926, (Object)send119894);
string13578 = (Object)new_Type_String(L"abc def ghi ");
constant23186 = (Object)new_AST_Constant((Object)string13578);
// on:
send119895 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23186);
assign14691 = (Object)new_AST_Assign((Object)localvariable16927, (Object)send119895);
// match:
send119896 = (Object)new_AST_Send((Object)localvariable16926, (Object)symbol22121, 1, (Object)localvariable16927);
assign14692 = (Object)new_AST_Assign((Object)localvariable16928, (Object)send119896);
// class
send119897 = (Object)new_AST_Send((Object)localvariable16928, (Object)SMB_class, 0);
// should
send119898 = (Object)new_AST_Send((Object)send119897, (Object)symbol22211, 0);
// =
send119899 = (Object)new_AST_Send((Object)send119898, (Object)SMB__equal, 1, (Object)classreference3164);
// selector
send119900 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21908, 0);
// class
send119901 = (Object)new_AST_Send((Object)send119900, (Object)SMB_class, 0);
// should
send119902 = (Object)new_AST_Send((Object)send119901, (Object)symbol22211, 0);
// =
send119903 = (Object)new_AST_Send((Object)send119902, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send119904 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21908, 0);
// selector
send119905 = (Object)new_AST_Send((Object)send119904, (Object)symbol21908, 0);
// asString
send119906 = (Object)new_AST_Send((Object)send119905, (Object)SMB_asString, 0);
// should
send119907 = (Object)new_AST_Send((Object)send119906, (Object)symbol22211, 0);
string13579 = (Object)new_Type_String(L"ghi");
constant23187 = (Object)new_AST_Constant((Object)string13579);
// =
send119908 = (Object)new_AST_Send((Object)send119907, (Object)SMB__equal, 1, (Object)constant23187);
// receiver
send119909 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22006, 0);
assign14693 = (Object)new_AST_Assign((Object)localvariable16928, (Object)send119909);
// class
send119910 = (Object)new_AST_Send((Object)localvariable16928, (Object)SMB_class, 0);
// should
send119911 = (Object)new_AST_Send((Object)send119910, (Object)symbol22211, 0);
// =
send119912 = (Object)new_AST_Send((Object)send119911, (Object)SMB__equal, 1, (Object)classreference3164);
// selector
send119913 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21908, 0);
// class
send119914 = (Object)new_AST_Send((Object)send119913, (Object)SMB_class, 0);
// should
send119915 = (Object)new_AST_Send((Object)send119914, (Object)symbol22211, 0);
// =
send119916 = (Object)new_AST_Send((Object)send119915, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send119917 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21908, 0);
// selector
send119918 = (Object)new_AST_Send((Object)send119917, (Object)symbol21908, 0);
// asString
send119919 = (Object)new_AST_Send((Object)send119918, (Object)SMB_asString, 0);
// should
send119920 = (Object)new_AST_Send((Object)send119919, (Object)symbol22211, 0);
string13580 = (Object)new_Type_String(L"def");
constant23188 = (Object)new_AST_Constant((Object)string13580);
// =
send119921 = (Object)new_AST_Send((Object)send119920, (Object)SMB__equal, 1, (Object)constant23188);
// receiver
send119922 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22006, 0);
// class
send119923 = (Object)new_AST_Send((Object)send119922, (Object)SMB_class, 0);
// should
send119924 = (Object)new_AST_Send((Object)send119923, (Object)symbol22211, 0);
// =
send119925 = (Object)new_AST_Send((Object)send119924, (Object)SMB__equal, 1, (Object)classreference3173);
// receiver
send119926 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22006, 0);
// name
send119927 = (Object)new_AST_Send((Object)send119926, (Object)SMB_name, 0);
// should
send119928 = (Object)new_AST_Send((Object)send119927, (Object)symbol22211, 0);
string13581 = (Object)new_Type_String(L"abc");
constant23189 = (Object)new_AST_Constant((Object)string13581);
// =
send119929 = (Object)new_AST_Send((Object)send119928, (Object)SMB__equal, 1, (Object)constant23189);
// position
send119930 = (Object)new_AST_Send((Object)localvariable16927, (Object)symbol22197, 0);
// should
send119931 = (Object)new_AST_Send((Object)send119930, (Object)symbol22211, 0);
smallint8386 = (Object)new_Type_SmallInt(12);
constant23190 = (Object)new_AST_Constant((Object)smallint8386);
// =
send119932 = (Object)new_AST_Send((Object)send119931, (Object)SMB__equal, 1, (Object)constant23190);
string13582 = (Object)new_Type_String(L"3");
constant23191 = (Object)new_AST_Constant((Object)string13582);
// on:
send119933 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23191);
assign14694 = (Object)new_AST_Assign((Object)localvariable16927, (Object)send119933);
// match:
send119934 = (Object)new_AST_Send((Object)localvariable16926, (Object)symbol22121, 1, (Object)localvariable16927);
assign14695 = (Object)new_AST_Assign((Object)localvariable16928, (Object)send119934);
// class
send119935 = (Object)new_AST_Send((Object)localvariable16928, (Object)SMB_class, 0);
// should
send119936 = (Object)new_AST_Send((Object)send119935, (Object)symbol22211, 0);
// =
send119937 = (Object)new_AST_Send((Object)send119936, (Object)SMB__equal, 1, (Object)classreference3150);
// number
send119938 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21978, 0);
// should
send119939 = (Object)new_AST_Send((Object)send119938, (Object)symbol22211, 0);
string13583 = (Object)new_Type_String(L"3");
constant23192 = (Object)new_AST_Constant((Object)string13583);
// =
send119940 = (Object)new_AST_Send((Object)send119939, (Object)SMB__equal, 1, (Object)constant23192);
// position
send119941 = (Object)new_AST_Send((Object)localvariable16927, (Object)symbol22197, 0);
// should
send119942 = (Object)new_AST_Send((Object)send119941, (Object)symbol22211, 0);
smallint8387 = (Object)new_Type_SmallInt(1);
constant23193 = (Object)new_AST_Constant((Object)smallint8387);
// =
send119943 = (Object)new_AST_Send((Object)send119942, (Object)SMB__equal, 1, (Object)constant23193);
string13584 = (Object)new_Type_String(L"abc + ghi * c ");
constant23194 = (Object)new_AST_Constant((Object)string13584);
// on:
send119944 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23194);
assign14696 = (Object)new_AST_Assign((Object)localvariable16927, (Object)send119944);
// match:
send119945 = (Object)new_AST_Send((Object)localvariable16926, (Object)symbol22121, 1, (Object)localvariable16927);
assign14697 = (Object)new_AST_Assign((Object)localvariable16928, (Object)send119945);
// class
send119946 = (Object)new_AST_Send((Object)localvariable16928, (Object)SMB_class, 0);
// should
send119947 = (Object)new_AST_Send((Object)send119946, (Object)symbol22211, 0);
// =
send119948 = (Object)new_AST_Send((Object)send119947, (Object)SMB__equal, 1, (Object)classreference3154);
// selector
send119949 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21908, 0);
// printString
send119950 = (Object)new_AST_Send((Object)send119949, (Object)symbol22124, 0);
// should
send119951 = (Object)new_AST_Send((Object)send119950, (Object)symbol22211, 0);
string13585 = (Object)new_Type_String(L"*");
constant23195 = (Object)new_AST_Constant((Object)string13585);
// =
send119952 = (Object)new_AST_Send((Object)send119951, (Object)SMB__equal, 1, (Object)constant23195);
// argument
send119953 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22014, 0);
// class
send119954 = (Object)new_AST_Send((Object)send119953, (Object)SMB_class, 0);
// should
send119955 = (Object)new_AST_Send((Object)send119954, (Object)symbol22211, 0);
// =
send119956 = (Object)new_AST_Send((Object)send119955, (Object)SMB__equal, 1, (Object)classreference3173);
// argument
send119957 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22014, 0);
// name
send119958 = (Object)new_AST_Send((Object)send119957, (Object)SMB_name, 0);
// should
send119959 = (Object)new_AST_Send((Object)send119958, (Object)symbol22211, 0);
string13586 = (Object)new_Type_String(L"c");
constant23196 = (Object)new_AST_Constant((Object)string13586);
// =
send119960 = (Object)new_AST_Send((Object)send119959, (Object)SMB__equal, 1, (Object)constant23196);
// receiver
send119961 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22006, 0);
assign14698 = (Object)new_AST_Assign((Object)localvariable16928, (Object)send119961);
// class
send119962 = (Object)new_AST_Send((Object)localvariable16928, (Object)SMB_class, 0);
// should
send119963 = (Object)new_AST_Send((Object)send119962, (Object)symbol22211, 0);
// =
send119964 = (Object)new_AST_Send((Object)send119963, (Object)SMB__equal, 1, (Object)classreference3154);
// selector
send119965 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol21908, 0);
// printString
send119966 = (Object)new_AST_Send((Object)send119965, (Object)symbol22124, 0);
// should
send119967 = (Object)new_AST_Send((Object)send119966, (Object)symbol22211, 0);
string13587 = (Object)new_Type_String(L"+");
constant23197 = (Object)new_AST_Constant((Object)string13587);
// =
send119968 = (Object)new_AST_Send((Object)send119967, (Object)SMB__equal, 1, (Object)constant23197);
// receiver
send119969 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22006, 0);
// class
send119970 = (Object)new_AST_Send((Object)send119969, (Object)SMB_class, 0);
// should
send119971 = (Object)new_AST_Send((Object)send119970, (Object)symbol22211, 0);
// =
send119972 = (Object)new_AST_Send((Object)send119971, (Object)SMB__equal, 1, (Object)classreference3173);
// receiver
send119973 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22006, 0);
// name
send119974 = (Object)new_AST_Send((Object)send119973, (Object)SMB_name, 0);
// should
send119975 = (Object)new_AST_Send((Object)send119974, (Object)symbol22211, 0);
string13588 = (Object)new_Type_String(L"abc");
constant23198 = (Object)new_AST_Constant((Object)string13588);
// =
send119976 = (Object)new_AST_Send((Object)send119975, (Object)SMB__equal, 1, (Object)constant23198);
// argument
send119977 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22014, 0);
// class
send119978 = (Object)new_AST_Send((Object)send119977, (Object)SMB_class, 0);
// should
send119979 = (Object)new_AST_Send((Object)send119978, (Object)symbol22211, 0);
// =
send119980 = (Object)new_AST_Send((Object)send119979, (Object)SMB__equal, 1, (Object)classreference3173);
// argument
send119981 = (Object)new_AST_Send((Object)localvariable16928, (Object)symbol22014, 0);
// name
send119982 = (Object)new_AST_Send((Object)send119981, (Object)SMB_name, 0);
// should
send119983 = (Object)new_AST_Send((Object)send119982, (Object)symbol22211, 0);
string13589 = (Object)new_Type_String(L"ghi");
constant23199 = (Object)new_AST_Constant((Object)string13589);
// =
send119984 = (Object)new_AST_Send((Object)send119983, (Object)SMB__equal, 1, (Object)constant23199);
// position
send119985 = (Object)new_AST_Send((Object)localvariable16927, (Object)symbol22197, 0);
// should
send119986 = (Object)new_AST_Send((Object)send119985, (Object)symbol22211, 0);
smallint8388 = (Object)new_Type_SmallInt(13);
constant23200 = (Object)new_AST_Constant((Object)smallint8388);
// =
send119987 = (Object)new_AST_Send((Object)send119986, (Object)SMB__equal, 1, (Object)constant23200);
method16105 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13437, 33, assign14690, assign14691, assign14692, send119899, send119903, send119908, assign14693, send119912, send119916, send119921, send119925, send119929, send119932, assign14694, assign14695, send119937, send119940, send119943, assign14696, assign14697, send119948, send119952, send119956, send119960, assign14698, send119964, send119968, send119972, send119976, send119980, send119984, send119987, Self);
symbol21844 = (Object)new_Type_Symbol_cached(L"testBinaryObjectDescription");
methodclosure16103 = (Object)new_Runtime_MethodClosure(method16105);
store_method((Type_Class)class2770, (Type_Symbol)symbol21844, (Runtime_MethodClosure)methodclosure16103);


// SCParserTest>>testBinarySelector
//testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
localvariable16929 = (Object)new_AST_Variable_named(L"parser");
localvariable16930 = (Object)new_AST_Variable_named(L"string");
array13438 = (Object)new_Type_Array_with(2, (Object)localvariable16929, (Object)localvariable16930);
// binarySelector
send119988 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22229, 0);
assign14699 = (Object)new_AST_Assign((Object)localvariable16929, (Object)send119988);
string13590 = (Object)new_Type_String(L"+= a");
constant23201 = (Object)new_AST_Constant((Object)string13590);
// on:
send119989 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23201);
assign14700 = (Object)new_AST_Assign((Object)localvariable16930, (Object)send119989);
// match:
send119990 = (Object)new_AST_Send((Object)localvariable16929, (Object)symbol22121, 1, (Object)localvariable16930);
// printString
send119991 = (Object)new_AST_Send((Object)send119990, (Object)symbol22124, 0);
// should
send119992 = (Object)new_AST_Send((Object)send119991, (Object)symbol22211, 0);
string13591 = (Object)new_Type_String(L"+=");
constant23202 = (Object)new_AST_Constant((Object)string13591);
// =
send119993 = (Object)new_AST_Send((Object)send119992, (Object)SMB__equal, 1, (Object)constant23202);
// position
send119994 = (Object)new_AST_Send((Object)localvariable16930, (Object)symbol22197, 0);
// should
send119995 = (Object)new_AST_Send((Object)send119994, (Object)symbol22211, 0);
smallint8389 = (Object)new_Type_SmallInt(2);
constant23203 = (Object)new_AST_Constant((Object)smallint8389);
// =
send119996 = (Object)new_AST_Send((Object)send119995, (Object)SMB__equal, 1, (Object)constant23203);
string13592 = (Object)new_Type_String(L"|= a");
constant23204 = (Object)new_AST_Constant((Object)string13592);
// on:
send119997 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23204);
assign14701 = (Object)new_AST_Assign((Object)localvariable16930, (Object)send119997);
// match:
send119998 = (Object)new_AST_Send((Object)localvariable16929, (Object)symbol22121, 1, (Object)localvariable16930);
// printString
send119999 = (Object)new_AST_Send((Object)send119998, (Object)symbol22124, 0);
// should
send120000 = (Object)new_AST_Send((Object)send119999, (Object)symbol22211, 0);
string13593 = (Object)new_Type_String(L"|");
constant23205 = (Object)new_AST_Constant((Object)string13593);
// =
send120001 = (Object)new_AST_Send((Object)send120000, (Object)SMB__equal, 1, (Object)constant23205);
// position
send120002 = (Object)new_AST_Send((Object)localvariable16930, (Object)symbol22197, 0);
// should
send120003 = (Object)new_AST_Send((Object)send120002, (Object)symbol22211, 0);
smallint8390 = (Object)new_Type_SmallInt(1);
constant23206 = (Object)new_AST_Constant((Object)smallint8390);
// =
send120004 = (Object)new_AST_Send((Object)send120003, (Object)SMB__equal, 1, (Object)constant23206);
string13594 = (Object)new_Type_String(L"-= a");
constant23207 = (Object)new_AST_Constant((Object)string13594);
// on:
send120005 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23207);
assign14702 = (Object)new_AST_Assign((Object)localvariable16930, (Object)send120005);
// match:
send120006 = (Object)new_AST_Send((Object)localvariable16929, (Object)symbol22121, 1, (Object)localvariable16930);
// printString
send120007 = (Object)new_AST_Send((Object)send120006, (Object)symbol22124, 0);
// should
send120008 = (Object)new_AST_Send((Object)send120007, (Object)symbol22211, 0);
string13595 = (Object)new_Type_String(L"-=");
constant23208 = (Object)new_AST_Constant((Object)string13595);
// =
send120009 = (Object)new_AST_Send((Object)send120008, (Object)SMB__equal, 1, (Object)constant23208);
// position
send120010 = (Object)new_AST_Send((Object)localvariable16930, (Object)symbol22197, 0);
// should
send120011 = (Object)new_AST_Send((Object)send120010, (Object)symbol22211, 0);
smallint8391 = (Object)new_Type_SmallInt(2);
constant23209 = (Object)new_AST_Constant((Object)smallint8391);
// =
send120012 = (Object)new_AST_Send((Object)send120011, (Object)SMB__equal, 1, (Object)constant23209);
string13596 = (Object)new_Type_String(L"=- a");
constant23210 = (Object)new_AST_Constant((Object)string13596);
// on:
send120013 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23210);
assign14703 = (Object)new_AST_Assign((Object)localvariable16930, (Object)send120013);
// match:
send120014 = (Object)new_AST_Send((Object)localvariable16929, (Object)symbol22121, 1, (Object)localvariable16930);
// printString
send120015 = (Object)new_AST_Send((Object)send120014, (Object)symbol22124, 0);
// should
send120016 = (Object)new_AST_Send((Object)send120015, (Object)symbol22211, 0);
string13597 = (Object)new_Type_String(L"=");
constant23211 = (Object)new_AST_Constant((Object)string13597);
// =
send120017 = (Object)new_AST_Send((Object)send120016, (Object)SMB__equal, 1, (Object)constant23211);
// position
send120018 = (Object)new_AST_Send((Object)localvariable16930, (Object)symbol22197, 0);
// should
send120019 = (Object)new_AST_Send((Object)send120018, (Object)symbol22211, 0);
smallint8392 = (Object)new_Type_SmallInt(1);
constant23212 = (Object)new_AST_Constant((Object)smallint8392);
// =
send120020 = (Object)new_AST_Send((Object)send120019, (Object)SMB__equal, 1, (Object)constant23212);
method16106 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13438, 14, assign14699, assign14700, send119993, send119996, assign14701, send120001, send120004, assign14702, send120009, send120012, assign14703, send120017, send120020, Self);
symbol21864 = (Object)new_Type_Symbol_cached(L"testBinarySelector");
methodclosure16104 = (Object)new_Runtime_MethodClosure(method16106);
store_method((Type_Class)class2770, (Type_Symbol)symbol21864, (Runtime_MethodClosure)methodclosure16104);


// SCParserTest>>testPrimary
//testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
localvariable16931 = (Object)new_AST_Variable_named(L"parser");
localvariable16932 = (Object)new_AST_Variable_named(L"string");
localvariable16933 = (Object)new_AST_Variable_named(L"result");
array13439 = (Object)new_Type_Array_with(3, (Object)localvariable16931, (Object)localvariable16932, (Object)localvariable16933);
// primary
send120021 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22244, 0);
assign14704 = (Object)new_AST_Assign((Object)localvariable16931, (Object)send120021);
string13598 = (Object)new_Type_String(L"abc ");
constant23213 = (Object)new_AST_Constant((Object)string13598);
// on:
send120022 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23213);
assign14705 = (Object)new_AST_Assign((Object)localvariable16932, (Object)send120022);
// match:
send120023 = (Object)new_AST_Send((Object)localvariable16931, (Object)symbol22121, 1, (Object)localvariable16932);
assign14706 = (Object)new_AST_Assign((Object)localvariable16933, (Object)send120023);
// class
send120024 = (Object)new_AST_Send((Object)localvariable16933, (Object)SMB_class, 0);
// should
send120025 = (Object)new_AST_Send((Object)send120024, (Object)symbol22211, 0);
// =
send120026 = (Object)new_AST_Send((Object)send120025, (Object)SMB__equal, 1, (Object)classreference3173);
// name
send120027 = (Object)new_AST_Send((Object)localvariable16933, (Object)SMB_name, 0);
// should
send120028 = (Object)new_AST_Send((Object)send120027, (Object)symbol22211, 0);
string13599 = (Object)new_Type_String(L"abc");
constant23214 = (Object)new_AST_Constant((Object)string13599);
// =
send120029 = (Object)new_AST_Send((Object)send120028, (Object)SMB__equal, 1, (Object)constant23214);
// position
send120030 = (Object)new_AST_Send((Object)localvariable16932, (Object)symbol22197, 0);
// should
send120031 = (Object)new_AST_Send((Object)send120030, (Object)symbol22211, 0);
smallint8393 = (Object)new_Type_SmallInt(3);
constant23215 = (Object)new_AST_Constant((Object)smallint8393);
// =
send120032 = (Object)new_AST_Send((Object)send120031, (Object)SMB__equal, 1, (Object)constant23215);
string13600 = (Object)new_Type_String(L"3");
constant23216 = (Object)new_AST_Constant((Object)string13600);
// on:
send120033 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23216);
assign14707 = (Object)new_AST_Assign((Object)localvariable16932, (Object)send120033);
// match:
send120034 = (Object)new_AST_Send((Object)localvariable16931, (Object)symbol22121, 1, (Object)localvariable16932);
assign14708 = (Object)new_AST_Assign((Object)localvariable16933, (Object)send120034);
// class
send120035 = (Object)new_AST_Send((Object)localvariable16933, (Object)SMB_class, 0);
// should
send120036 = (Object)new_AST_Send((Object)send120035, (Object)symbol22211, 0);
// =
send120037 = (Object)new_AST_Send((Object)send120036, (Object)SMB__equal, 1, (Object)classreference3150);
// number
send120038 = (Object)new_AST_Send((Object)localvariable16933, (Object)symbol21978, 0);
// should
send120039 = (Object)new_AST_Send((Object)send120038, (Object)symbol22211, 0);
string13601 = (Object)new_Type_String(L"3");
constant23217 = (Object)new_AST_Constant((Object)string13601);
// =
send120040 = (Object)new_AST_Send((Object)send120039, (Object)SMB__equal, 1, (Object)constant23217);
// base
send120041 = (Object)new_AST_Send((Object)localvariable16933, (Object)symbol21981, 0);
// should
send120042 = (Object)new_AST_Send((Object)send120041, (Object)symbol22211, 0);
string13602 = (Object)new_Type_String(L"10");
constant23218 = (Object)new_AST_Constant((Object)string13602);
// =
send120043 = (Object)new_AST_Send((Object)send120042, (Object)SMB__equal, 1, (Object)constant23218);
// position
send120044 = (Object)new_AST_Send((Object)localvariable16932, (Object)symbol22197, 0);
// should
send120045 = (Object)new_AST_Send((Object)send120044, (Object)symbol22211, 0);
smallint8394 = (Object)new_Type_SmallInt(1);
constant23219 = (Object)new_AST_Constant((Object)smallint8394);
// =
send120046 = (Object)new_AST_Send((Object)send120045, (Object)SMB__equal, 1, (Object)constant23219);
method16107 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13439, 13, assign14704, assign14705, assign14706, send120026, send120029, send120032, assign14707, assign14708, send120037, send120040, send120043, send120046, Self);
symbol21834 = (Object)new_Type_Symbol_cached(L"testPrimary");
methodclosure16105 = (Object)new_Runtime_MethodClosure(method16107);
store_method((Type_Class)class2770, (Type_Symbol)symbol21834, (Runtime_MethodClosure)methodclosure16105);


// SCParserTest>>testTemporaries
//testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
localvariable16934 = (Object)new_AST_Variable_named(L"parser");
localvariable16935 = (Object)new_AST_Variable_named(L"string");
array13440 = (Object)new_Type_Array_with(2, (Object)localvariable16934, (Object)localvariable16935);
// temporaries
send120047 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22025, 0);
assign14709 = (Object)new_AST_Assign((Object)localvariable16934, (Object)send120047);
string13603 = (Object)new_Type_String(L"|a b c|");
constant23220 = (Object)new_AST_Constant((Object)string13603);
// on:
send120048 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23220);
assign14710 = (Object)new_AST_Assign((Object)localvariable16935, (Object)send120048);
// match:
send120049 = (Object)new_AST_Send((Object)localvariable16934, (Object)symbol22121, 1, (Object)localvariable16935);
constant23221 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send120050 = (Object)new_AST_Send((Object)send120049, (Object)symbol22254, 1, (Object)constant23221);
// asArray
send120051 = (Object)new_AST_Send((Object)send120050, (Object)SMB_asArray, 0);
// should
send120052 = (Object)new_AST_Send((Object)send120051, (Object)symbol22211, 0);
localvariable16936 = (Object)new_AST_Variable_named(L"receiver");
array13441 = (Object)new_Type_Array_with(1, (Object)localvariable16936);
smallint8395 = (Object)new_Type_SmallInt(1);
constant23222 = (Object)new_AST_Constant((Object)smallint8395);
string13604 = (Object)new_Type_String(L"a");
constant23223 = (Object)new_AST_Constant((Object)string13604);
// at:put:
send120053 = (Object)new_AST_Send((Object)localvariable16936, (Object)SMB_at_put_, 2, (Object)constant23222, (Object)constant23223);
smallint8396 = (Object)new_Type_SmallInt(2);
constant23224 = (Object)new_AST_Constant((Object)smallint8396);
string13605 = (Object)new_Type_String(L"b");
constant23225 = (Object)new_AST_Constant((Object)string13605);
// at:put:
send120054 = (Object)new_AST_Send((Object)localvariable16936, (Object)SMB_at_put_, 2, (Object)constant23224, (Object)constant23225);
smallint8397 = (Object)new_Type_SmallInt(3);
constant23226 = (Object)new_AST_Constant((Object)smallint8397);
string13606 = (Object)new_Type_String(L"c");
constant23227 = (Object)new_AST_Constant((Object)string13606);
// at:put:
send120055 = (Object)new_AST_Send((Object)localvariable16936, (Object)SMB_at_put_, 2, (Object)constant23226, (Object)constant23227);
// yourself
send120056 = (Object)new_AST_Send((Object)localvariable16936, (Object)symbol21799, 0);
block7947 = (Object)new_AST_Block_with((Type_Array)array13441, (Type_Array)empty_Type_Array, 1, 4, send120053, send120054, send120055, send120056);
smallint8398 = (Object)new_Type_SmallInt(3);
constant23228 = (Object)new_AST_Constant((Object)smallint8398);
// new:
send120057 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23228);
// value:
send120058 = (Object)new_AST_Send((Object)block7947, (Object)SMB_value_, 1, (Object)send120057);
// =
send120059 = (Object)new_AST_Send((Object)send120052, (Object)SMB__equal, 1, (Object)send120058);
// position
send120060 = (Object)new_AST_Send((Object)localvariable16935, (Object)symbol22197, 0);
// should
send120061 = (Object)new_AST_Send((Object)send120060, (Object)symbol22211, 0);
smallint8399 = (Object)new_Type_SmallInt(7);
constant23229 = (Object)new_AST_Constant((Object)smallint8399);
// =
send120062 = (Object)new_AST_Send((Object)send120061, (Object)SMB__equal, 1, (Object)constant23229);
string13607 = (Object)new_Type_String(L"|  a b c  |");
constant23230 = (Object)new_AST_Constant((Object)string13607);
// on:
send120063 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23230);
assign14711 = (Object)new_AST_Assign((Object)localvariable16935, (Object)send120063);
// match:
send120064 = (Object)new_AST_Send((Object)localvariable16934, (Object)symbol22121, 1, (Object)localvariable16935);
constant23231 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send120065 = (Object)new_AST_Send((Object)send120064, (Object)symbol22254, 1, (Object)constant23231);
// asArray
send120066 = (Object)new_AST_Send((Object)send120065, (Object)SMB_asArray, 0);
// should
send120067 = (Object)new_AST_Send((Object)send120066, (Object)symbol22211, 0);
localvariable16937 = (Object)new_AST_Variable_named(L"receiver");
array13442 = (Object)new_Type_Array_with(1, (Object)localvariable16937);
smallint8400 = (Object)new_Type_SmallInt(1);
constant23232 = (Object)new_AST_Constant((Object)smallint8400);
string13608 = (Object)new_Type_String(L"a");
constant23233 = (Object)new_AST_Constant((Object)string13608);
// at:put:
send120068 = (Object)new_AST_Send((Object)localvariable16937, (Object)SMB_at_put_, 2, (Object)constant23232, (Object)constant23233);
smallint8401 = (Object)new_Type_SmallInt(2);
constant23234 = (Object)new_AST_Constant((Object)smallint8401);
string13609 = (Object)new_Type_String(L"b");
constant23235 = (Object)new_AST_Constant((Object)string13609);
// at:put:
send120069 = (Object)new_AST_Send((Object)localvariable16937, (Object)SMB_at_put_, 2, (Object)constant23234, (Object)constant23235);
smallint8402 = (Object)new_Type_SmallInt(3);
constant23236 = (Object)new_AST_Constant((Object)smallint8402);
string13610 = (Object)new_Type_String(L"c");
constant23237 = (Object)new_AST_Constant((Object)string13610);
// at:put:
send120070 = (Object)new_AST_Send((Object)localvariable16937, (Object)SMB_at_put_, 2, (Object)constant23236, (Object)constant23237);
// yourself
send120071 = (Object)new_AST_Send((Object)localvariable16937, (Object)symbol21799, 0);
block7948 = (Object)new_AST_Block_with((Type_Array)array13442, (Type_Array)empty_Type_Array, 1, 4, send120068, send120069, send120070, send120071);
smallint8403 = (Object)new_Type_SmallInt(3);
constant23238 = (Object)new_AST_Constant((Object)smallint8403);
// new:
send120072 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23238);
// value:
send120073 = (Object)new_AST_Send((Object)block7948, (Object)SMB_value_, 1, (Object)send120072);
// =
send120074 = (Object)new_AST_Send((Object)send120067, (Object)SMB__equal, 1, (Object)send120073);
// position
send120075 = (Object)new_AST_Send((Object)localvariable16935, (Object)symbol22197, 0);
// should
send120076 = (Object)new_AST_Send((Object)send120075, (Object)symbol22211, 0);
smallint8404 = (Object)new_Type_SmallInt(11);
constant23239 = (Object)new_AST_Constant((Object)smallint8404);
// =
send120077 = (Object)new_AST_Send((Object)send120076, (Object)SMB__equal, 1, (Object)constant23239);
method16108 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13440, 8, assign14709, assign14710, send120059, send120062, assign14711, send120074, send120077, Self);
symbol21826 = (Object)new_Type_Symbol_cached(L"testTemporaries");
methodclosure16106 = (Object)new_Runtime_MethodClosure(method16108);
store_method((Type_Class)class2770, (Type_Symbol)symbol21826, (Runtime_MethodClosure)methodclosure16106);


// SCParserTest>>testMethod3
//testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
localvariable16938 = (Object)new_AST_Variable_named(L"parser");
localvariable16939 = (Object)new_AST_Variable_named(L"string");
localvariable16940 = (Object)new_AST_Variable_named(L"result");
array13443 = (Object)new_Type_Array_with(3, (Object)localvariable16938, (Object)localvariable16939, (Object)localvariable16940);
symbol22279 = (Object)new_Type_Symbol_cached(L"method");
// method
send120078 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22279, 0);
assign14712 = (Object)new_AST_Assign((Object)localvariable16938, (Object)send120078);
string13611 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\t^ 1\n\t");
constant23240 = (Object)new_AST_Constant((Object)string13611);
assign14713 = (Object)new_AST_Assign((Object)localvariable16939, (Object)constant23240);
// parse:
send120079 = (Object)new_AST_Send((Object)localvariable16938, (Object)symbol22140, 1, (Object)localvariable16939);
assign14714 = (Object)new_AST_Assign((Object)localvariable16940, (Object)send120079);
// hasReturnExpression
send120080 = (Object)new_AST_Send((Object)localvariable16940, (Object)symbol21955, 0);
// should
send120081 = (Object)new_AST_Send((Object)send120080, (Object)symbol22211, 0);
// be
send120082 = (Object)new_AST_Send((Object)send120081, (Object)symbol22273, 0);
// true
send120083 = (Object)new_AST_Send((Object)send120082, (Object)symbol22278, 0);
// class
send120084 = (Object)new_AST_Send((Object)localvariable16940, (Object)SMB_class, 0);
// should
send120085 = (Object)new_AST_Send((Object)send120084, (Object)symbol22211, 0);
// =
send120086 = (Object)new_AST_Send((Object)send120085, (Object)SMB__equal, 1, (Object)classreference3175);
// message
send120087 = (Object)new_AST_Send((Object)localvariable16940, (Object)symbol22024, 0);
// asString
send120088 = (Object)new_AST_Send((Object)send120087, (Object)SMB_asString, 0);
// should
send120089 = (Object)new_AST_Send((Object)send120088, (Object)symbol22211, 0);
string13612 = (Object)new_Type_String(L"withA:withB:withC:");
constant23241 = (Object)new_AST_Constant((Object)string13612);
// =
send120090 = (Object)new_AST_Send((Object)send120089, (Object)SMB__equal, 1, (Object)constant23241);
method16109 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13443, 7, assign14712, assign14713, assign14714, send120083, send120086, send120090, Self);
symbol21846 = (Object)new_Type_Symbol_cached(L"testMethod3");
methodclosure16107 = (Object)new_Runtime_MethodClosure(method16109);
store_method((Type_Class)class2770, (Type_Symbol)symbol21846, (Runtime_MethodClosure)methodclosure16107);


// SCParserTest>>testMethod
//testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable16941 = (Object)new_AST_Variable_named(L"parser");
localvariable16942 = (Object)new_AST_Variable_named(L"string");
localvariable16943 = (Object)new_AST_Variable_named(L"result");
array13444 = (Object)new_Type_Array_with(3, (Object)localvariable16941, (Object)localvariable16942, (Object)localvariable16943);
// method
send120091 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22279, 0);
assign14715 = (Object)new_AST_Assign((Object)localvariable16941, (Object)send120091);
string13613 = (Object)new_Type_String(L"a: b c: d\n\t\t\t|x y z|\n\t\t\t<abc: 1 def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4>\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: 3.\n\t\t\t^ 7 ");
constant23242 = (Object)new_AST_Constant((Object)string13613);
assign14716 = (Object)new_AST_Assign((Object)localvariable16942, (Object)constant23242);
// parse:
send120092 = (Object)new_AST_Send((Object)localvariable16941, (Object)symbol22140, 1, (Object)localvariable16942);
assign14717 = (Object)new_AST_Assign((Object)localvariable16943, (Object)send120092);
// hasReturnExpression
send120093 = (Object)new_AST_Send((Object)localvariable16943, (Object)symbol21955, 0);
// should
send120094 = (Object)new_AST_Send((Object)send120093, (Object)symbol22211, 0);
// be
send120095 = (Object)new_AST_Send((Object)send120094, (Object)symbol22273, 0);
// true
send120096 = (Object)new_AST_Send((Object)send120095, (Object)symbol22278, 0);
// class
send120097 = (Object)new_AST_Send((Object)localvariable16943, (Object)SMB_class, 0);
// should
send120098 = (Object)new_AST_Send((Object)send120097, (Object)symbol22211, 0);
// =
send120099 = (Object)new_AST_Send((Object)send120098, (Object)SMB__equal, 1, (Object)classreference3175);
// message
send120100 = (Object)new_AST_Send((Object)localvariable16943, (Object)symbol22024, 0);
// class
send120101 = (Object)new_AST_Send((Object)send120100, (Object)SMB_class, 0);
// should
send120102 = (Object)new_AST_Send((Object)send120101, (Object)symbol22211, 0);
// =
send120103 = (Object)new_AST_Send((Object)send120102, (Object)SMB__equal, 1, (Object)classreference3148);
// temporaries
send120104 = (Object)new_AST_Send((Object)localvariable16943, (Object)symbol22025, 0);
// size
send120105 = (Object)new_AST_Send((Object)send120104, (Object)SMB_size, 0);
// should
send120106 = (Object)new_AST_Send((Object)send120105, (Object)symbol22211, 0);
smallint8405 = (Object)new_Type_SmallInt(3);
constant23243 = (Object)new_AST_Constant((Object)smallint8405);
// =
send120107 = (Object)new_AST_Send((Object)send120106, (Object)SMB__equal, 1, (Object)constant23243);
// annotations
send120108 = (Object)new_AST_Send((Object)localvariable16943, (Object)symbol22022, 0);
// size
send120109 = (Object)new_AST_Send((Object)send120108, (Object)SMB_size, 0);
// should
send120110 = (Object)new_AST_Send((Object)send120109, (Object)symbol22211, 0);
smallint8406 = (Object)new_Type_SmallInt(3);
constant23244 = (Object)new_AST_Constant((Object)smallint8406);
// =
send120111 = (Object)new_AST_Send((Object)send120110, (Object)SMB__equal, 1, (Object)constant23244);
// statements
send120112 = (Object)new_AST_Send((Object)localvariable16943, (Object)symbol22021, 0);
// size
send120113 = (Object)new_AST_Send((Object)send120112, (Object)SMB_size, 0);
// should
send120114 = (Object)new_AST_Send((Object)send120113, (Object)symbol22211, 0);
smallint8407 = (Object)new_Type_SmallInt(2);
constant23245 = (Object)new_AST_Constant((Object)smallint8407);
// =
send120115 = (Object)new_AST_Send((Object)send120114, (Object)SMB__equal, 1, (Object)constant23245);
method16110 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13444, 10, assign14715, assign14716, assign14717, send120096, send120099, send120103, send120107, send120111, send120115, Self);
symbol21874 = (Object)new_Type_Symbol_cached(L"testMethod");
methodclosure16108 = (Object)new_Runtime_MethodClosure(method16110);
store_method((Type_Class)class2770, (Type_Symbol)symbol21874, (Runtime_MethodClosure)methodclosure16108);


// SCParserTest>>testMethod4
//testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
localvariable16944 = (Object)new_AST_Variable_named(L"parser");
localvariable16945 = (Object)new_AST_Variable_named(L"string");
localvariable16946 = (Object)new_AST_Variable_named(L"result");
array13445 = (Object)new_Type_Array_with(3, (Object)localvariable16944, (Object)localvariable16945, (Object)localvariable16946);
// method
send120116 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22279, 0);
assign14718 = (Object)new_AST_Assign((Object)localvariable16944, (Object)send120116);
string13614 = (Object)new_Type_String(L"withA: a withB: b withC: c\n\t\ta := b > c.\n\t\ta ifTrue: [^ b]\n\t\t  ifFalse: [^ c]\n\t");
constant23246 = (Object)new_AST_Constant((Object)string13614);
assign14719 = (Object)new_AST_Assign((Object)localvariable16945, (Object)constant23246);
// parse:
send120117 = (Object)new_AST_Send((Object)localvariable16944, (Object)symbol22140, 1, (Object)localvariable16945);
assign14720 = (Object)new_AST_Assign((Object)localvariable16946, (Object)send120117);
// hasReturnExpression
send120118 = (Object)new_AST_Send((Object)localvariable16946, (Object)symbol21955, 0);
// should
send120119 = (Object)new_AST_Send((Object)send120118, (Object)symbol22211, 0);
// be
send120120 = (Object)new_AST_Send((Object)send120119, (Object)symbol22273, 0);
// true
send120121 = (Object)new_AST_Send((Object)send120120, (Object)symbol22278, 0);
// class
send120122 = (Object)new_AST_Send((Object)localvariable16946, (Object)SMB_class, 0);
// should
send120123 = (Object)new_AST_Send((Object)send120122, (Object)symbol22211, 0);
// =
send120124 = (Object)new_AST_Send((Object)send120123, (Object)SMB__equal, 1, (Object)classreference3175);
// message
send120125 = (Object)new_AST_Send((Object)localvariable16946, (Object)symbol22024, 0);
// asString
send120126 = (Object)new_AST_Send((Object)send120125, (Object)SMB_asString, 0);
// should
send120127 = (Object)new_AST_Send((Object)send120126, (Object)symbol22211, 0);
string13615 = (Object)new_Type_String(L"withA:withB:withC:");
constant23247 = (Object)new_AST_Constant((Object)string13615);
// =
send120128 = (Object)new_AST_Send((Object)send120127, (Object)SMB__equal, 1, (Object)constant23247);
// statements
send120129 = (Object)new_AST_Send((Object)localvariable16946, (Object)symbol22021, 0);
// last
send120130 = (Object)new_AST_Send((Object)send120129, (Object)symbol21969, 0);
// hasReturnExpression
send120131 = (Object)new_AST_Send((Object)send120130, (Object)symbol21955, 0);
// should
send120132 = (Object)new_AST_Send((Object)send120131, (Object)symbol22211, 0);
// be
send120133 = (Object)new_AST_Send((Object)send120132, (Object)symbol22273, 0);
// true
send120134 = (Object)new_AST_Send((Object)send120133, (Object)symbol22278, 0);
method16111 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13445, 8, assign14718, assign14719, assign14720, send120121, send120124, send120128, send120134, Self);
symbol21828 = (Object)new_Type_Symbol_cached(L"testMethod4");
methodclosure16109 = (Object)new_Runtime_MethodClosure(method16111);
store_method((Type_Class)class2770, (Type_Symbol)symbol21828, (Runtime_MethodClosure)methodclosure16109);


// SCParserTest>>testKeyword
//testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable16947 = (Object)new_AST_Variable_named(L"parser");
localvariable16948 = (Object)new_AST_Variable_named(L"string");
array13446 = (Object)new_Type_Array_with(2, (Object)localvariable16947, (Object)localvariable16948);
// keyword
send120135 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22218, 0);
assign14721 = (Object)new_AST_Assign((Object)localvariable16947, (Object)send120135);
string13616 = (Object)new_Type_String(L"abcd: ");
constant23248 = (Object)new_AST_Constant((Object)string13616);
// on:
send120136 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23248);
assign14722 = (Object)new_AST_Assign((Object)localvariable16948, (Object)send120136);
// match:
send120137 = (Object)new_AST_Send((Object)localvariable16947, (Object)symbol22121, 1, (Object)localvariable16948);
// should
send120138 = (Object)new_AST_Send((Object)send120137, (Object)symbol22211, 0);
string13617 = (Object)new_Type_String(L"abcd");
constant23249 = (Object)new_AST_Constant((Object)string13617);
// =
send120139 = (Object)new_AST_Send((Object)send120138, (Object)SMB__equal, 1, (Object)constant23249);
// position
send120140 = (Object)new_AST_Send((Object)localvariable16948, (Object)symbol22197, 0);
// should
send120141 = (Object)new_AST_Send((Object)send120140, (Object)symbol22211, 0);
smallint8408 = (Object)new_Type_SmallInt(5);
constant23250 = (Object)new_AST_Constant((Object)smallint8408);
// =
send120142 = (Object)new_AST_Send((Object)send120141, (Object)SMB__equal, 1, (Object)constant23250);
string13618 = (Object)new_Type_String(L"abcd ");
constant23251 = (Object)new_AST_Constant((Object)string13618);
// on:
send120143 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23251);
assign14723 = (Object)new_AST_Assign((Object)localvariable16948, (Object)send120143);
// match:
send120144 = (Object)new_AST_Send((Object)localvariable16947, (Object)symbol22121, 1, (Object)localvariable16948);
// should
send120145 = (Object)new_AST_Send((Object)send120144, (Object)symbol22211, 0);
// be
send120146 = (Object)new_AST_Send((Object)send120145, (Object)symbol22273, 0);
// isNil
send120147 = (Object)new_AST_Send((Object)send120146, (Object)SMB_isNil, 0);
// position
send120148 = (Object)new_AST_Send((Object)localvariable16948, (Object)symbol22197, 0);
// should
send120149 = (Object)new_AST_Send((Object)send120148, (Object)symbol22211, 0);
smallint8409 = (Object)new_Type_SmallInt(0);
constant23252 = (Object)new_AST_Constant((Object)smallint8409);
// =
send120150 = (Object)new_AST_Send((Object)send120149, (Object)SMB__equal, 1, (Object)constant23252);
method16112 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13446, 8, assign14721, assign14722, send120139, send120142, assign14723, send120147, send120150, Self);
symbol21848 = (Object)new_Type_Symbol_cached(L"testKeyword");
methodclosure16110 = (Object)new_Runtime_MethodClosure(method16112);
store_method((Type_Class)class2770, (Type_Symbol)symbol21848, (Runtime_MethodClosure)methodclosure16110);


// SCParserTest>>testExpression
//testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable16949 = (Object)new_AST_Variable_named(L"parser");
localvariable16950 = (Object)new_AST_Variable_named(L"string");
localvariable16951 = (Object)new_AST_Variable_named(L"result");
array13447 = (Object)new_Type_Array_with(3, (Object)localvariable16949, (Object)localvariable16950, (Object)localvariable16951);
// expression
send120151 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22033, 0);
assign14724 = (Object)new_AST_Assign((Object)localvariable16949, (Object)send120151);
string13619 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23253 = (Object)new_AST_Constant((Object)string13619);
// on:
send120152 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23253);
assign14725 = (Object)new_AST_Assign((Object)localvariable16950, (Object)send120152);
// match:
send120153 = (Object)new_AST_Send((Object)localvariable16949, (Object)symbol22121, 1, (Object)localvariable16950);
assign14726 = (Object)new_AST_Assign((Object)localvariable16951, (Object)send120153);
// class
send120154 = (Object)new_AST_Send((Object)localvariable16951, (Object)SMB_class, 0);
// should
send120155 = (Object)new_AST_Send((Object)send120154, (Object)symbol22211, 0);
// =
send120156 = (Object)new_AST_Send((Object)send120155, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send120157 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22035, 0);
// class
send120158 = (Object)new_AST_Send((Object)send120157, (Object)SMB_class, 0);
// should
send120159 = (Object)new_AST_Send((Object)send120158, (Object)symbol22211, 0);
// =
send120160 = (Object)new_AST_Send((Object)send120159, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send120161 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22035, 0);
// name
send120162 = (Object)new_AST_Send((Object)send120161, (Object)SMB_name, 0);
// should
send120163 = (Object)new_AST_Send((Object)send120162, (Object)symbol22211, 0);
string13620 = (Object)new_Type_String(L"a");
constant23254 = (Object)new_AST_Constant((Object)string13620);
// =
send120164 = (Object)new_AST_Send((Object)send120163, (Object)SMB__equal, 1, (Object)constant23254);
// expression
send120165 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22033, 0);
assign14727 = (Object)new_AST_Assign((Object)localvariable16951, (Object)send120165);
// class
send120166 = (Object)new_AST_Send((Object)localvariable16951, (Object)SMB_class, 0);
// should
send120167 = (Object)new_AST_Send((Object)send120166, (Object)symbol22211, 0);
// =
send120168 = (Object)new_AST_Send((Object)send120167, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send120169 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22035, 0);
// class
send120170 = (Object)new_AST_Send((Object)send120169, (Object)SMB_class, 0);
// should
send120171 = (Object)new_AST_Send((Object)send120170, (Object)symbol22211, 0);
// =
send120172 = (Object)new_AST_Send((Object)send120171, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send120173 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22035, 0);
// name
send120174 = (Object)new_AST_Send((Object)send120173, (Object)SMB_name, 0);
// should
send120175 = (Object)new_AST_Send((Object)send120174, (Object)symbol22211, 0);
string13621 = (Object)new_Type_String(L"b");
constant23255 = (Object)new_AST_Constant((Object)string13621);
// =
send120176 = (Object)new_AST_Send((Object)send120175, (Object)SMB__equal, 1, (Object)constant23255);
// expression
send120177 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22033, 0);
assign14728 = (Object)new_AST_Assign((Object)localvariable16951, (Object)send120177);
// class
send120178 = (Object)new_AST_Send((Object)localvariable16951, (Object)SMB_class, 0);
// should
send120179 = (Object)new_AST_Send((Object)send120178, (Object)symbol22211, 0);
// =
send120180 = (Object)new_AST_Send((Object)send120179, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send120181 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22035, 0);
// class
send120182 = (Object)new_AST_Send((Object)send120181, (Object)SMB_class, 0);
// should
send120183 = (Object)new_AST_Send((Object)send120182, (Object)symbol22211, 0);
// =
send120184 = (Object)new_AST_Send((Object)send120183, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send120185 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22035, 0);
// name
send120186 = (Object)new_AST_Send((Object)send120185, (Object)SMB_name, 0);
// should
send120187 = (Object)new_AST_Send((Object)send120186, (Object)symbol22211, 0);
string13622 = (Object)new_Type_String(L"c");
constant23256 = (Object)new_AST_Constant((Object)string13622);
// =
send120188 = (Object)new_AST_Send((Object)send120187, (Object)SMB__equal, 1, (Object)constant23256);
// expression
send120189 = (Object)new_AST_Send((Object)localvariable16951, (Object)symbol22033, 0);
// class
send120190 = (Object)new_AST_Send((Object)send120189, (Object)SMB_class, 0);
// should
send120191 = (Object)new_AST_Send((Object)send120190, (Object)symbol22211, 0);
// =
send120192 = (Object)new_AST_Send((Object)send120191, (Object)SMB__equal, 1, (Object)classreference3159);
method16113 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13447, 16, assign14724, assign14725, assign14726, send120156, send120160, send120164, assign14727, send120168, send120172, send120176, assign14728, send120180, send120184, send120188, send120192, Self);
symbol21876 = (Object)new_Type_Symbol_cached(L"testExpression");
methodclosure16111 = (Object)new_Runtime_MethodClosure(method16113);
store_method((Type_Class)class2770, (Type_Symbol)symbol21876, (Runtime_MethodClosure)methodclosure16111);


// SCParserTest>>testAssignmentExpressions
//testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
localvariable16952 = (Object)new_AST_Variable_named(L"parser");
localvariable16953 = (Object)new_AST_Variable_named(L"string");
array13448 = (Object)new_Type_Array_with(2, (Object)localvariable16952, (Object)localvariable16953);
// assignmentExpressions
send120193 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22245, 0);
assign14729 = (Object)new_AST_Assign((Object)localvariable16952, (Object)send120193);
string13623 = (Object)new_Type_String(L"a :=  b:= c := d");
constant23257 = (Object)new_AST_Constant((Object)string13623);
// on:
send120194 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23257);
assign14730 = (Object)new_AST_Assign((Object)localvariable16953, (Object)send120194);
// match:
send120195 = (Object)new_AST_Send((Object)localvariable16952, (Object)symbol22121, 1, (Object)localvariable16953);
constant23258 = (Object)new_AST_Constant((Object)SMB_name);
// collect:
send120196 = (Object)new_AST_Send((Object)send120195, (Object)symbol22254, 1, (Object)constant23258);
// asArray
send120197 = (Object)new_AST_Send((Object)send120196, (Object)SMB_asArray, 0);
// should
send120198 = (Object)new_AST_Send((Object)send120197, (Object)symbol22211, 0);
localvariable16954 = (Object)new_AST_Variable_named(L"receiver");
array13449 = (Object)new_Type_Array_with(1, (Object)localvariable16954);
smallint8410 = (Object)new_Type_SmallInt(1);
constant23259 = (Object)new_AST_Constant((Object)smallint8410);
string13624 = (Object)new_Type_String(L"a");
constant23260 = (Object)new_AST_Constant((Object)string13624);
// at:put:
send120199 = (Object)new_AST_Send((Object)localvariable16954, (Object)SMB_at_put_, 2, (Object)constant23259, (Object)constant23260);
smallint8411 = (Object)new_Type_SmallInt(2);
constant23261 = (Object)new_AST_Constant((Object)smallint8411);
string13625 = (Object)new_Type_String(L"b");
constant23262 = (Object)new_AST_Constant((Object)string13625);
// at:put:
send120200 = (Object)new_AST_Send((Object)localvariable16954, (Object)SMB_at_put_, 2, (Object)constant23261, (Object)constant23262);
smallint8412 = (Object)new_Type_SmallInt(3);
constant23263 = (Object)new_AST_Constant((Object)smallint8412);
string13626 = (Object)new_Type_String(L"c");
constant23264 = (Object)new_AST_Constant((Object)string13626);
// at:put:
send120201 = (Object)new_AST_Send((Object)localvariable16954, (Object)SMB_at_put_, 2, (Object)constant23263, (Object)constant23264);
// yourself
send120202 = (Object)new_AST_Send((Object)localvariable16954, (Object)symbol21799, 0);
block7949 = (Object)new_AST_Block_with((Type_Array)array13449, (Type_Array)empty_Type_Array, 1, 4, send120199, send120200, send120201, send120202);
smallint8413 = (Object)new_Type_SmallInt(3);
constant23265 = (Object)new_AST_Constant((Object)smallint8413);
// new:
send120203 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23265);
// value:
send120204 = (Object)new_AST_Send((Object)block7949, (Object)SMB_value_, 1, (Object)send120203);
// =
send120205 = (Object)new_AST_Send((Object)send120198, (Object)SMB__equal, 1, (Object)send120204);
// position
send120206 = (Object)new_AST_Send((Object)localvariable16953, (Object)symbol22197, 0);
// should
send120207 = (Object)new_AST_Send((Object)send120206, (Object)symbol22211, 0);
smallint8414 = (Object)new_Type_SmallInt(15);
constant23266 = (Object)new_AST_Constant((Object)smallint8414);
// =
send120208 = (Object)new_AST_Send((Object)send120207, (Object)SMB__equal, 1, (Object)constant23266);
string13627 = (Object)new_Type_String(L"");
constant23267 = (Object)new_AST_Constant((Object)string13627);
// on:
send120209 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23267);
assign14731 = (Object)new_AST_Assign((Object)localvariable16953, (Object)send120209);
// match:
send120210 = (Object)new_AST_Send((Object)localvariable16952, (Object)symbol22121, 1, (Object)localvariable16953);
// should
send120211 = (Object)new_AST_Send((Object)send120210, (Object)symbol22211, 0);
// not
send120212 = (Object)new_AST_Send((Object)send120211, (Object)SMB_not, 0);
// be
send120213 = (Object)new_AST_Send((Object)send120212, (Object)symbol22273, 0);
// isNil
send120214 = (Object)new_AST_Send((Object)send120213, (Object)SMB_isNil, 0);
method16114 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13448, 7, assign14729, assign14730, send120205, send120208, assign14731, send120214, Self);
symbol21868 = (Object)new_Type_Symbol_cached(L"testAssignmentExpressions");
methodclosure16112 = (Object)new_Runtime_MethodClosure(method16114);
store_method((Type_Class)class2770, (Type_Symbol)symbol21868, (Runtime_MethodClosure)methodclosure16112);


// SCParserTest>>testSeparator
//testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
localvariable16955 = (Object)new_AST_Variable_named(L"parser");
localvariable16956 = (Object)new_AST_Variable_named(L"string");
array13450 = (Object)new_Type_Array_with(2, (Object)localvariable16955, (Object)localvariable16956);
// separator
send120215 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22132, 0);
assign14732 = (Object)new_AST_Assign((Object)localvariable16955, (Object)send120215);
string13628 = (Object)new_Type_String(L"\"Test\"");
constant23268 = (Object)new_AST_Constant((Object)string13628);
// on:
send120216 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23268);
assign14733 = (Object)new_AST_Assign((Object)localvariable16956, (Object)send120216);
// match:
send120217 = (Object)new_AST_Send((Object)localvariable16955, (Object)symbol22121, 1, (Object)localvariable16956);
// should
send120218 = (Object)new_AST_Send((Object)send120217, (Object)symbol22211, 0);
// not
send120219 = (Object)new_AST_Send((Object)send120218, (Object)SMB_not, 0);
// be
send120220 = (Object)new_AST_Send((Object)send120219, (Object)symbol22273, 0);
// isNil
send120221 = (Object)new_AST_Send((Object)send120220, (Object)SMB_isNil, 0);
// position
send120222 = (Object)new_AST_Send((Object)localvariable16956, (Object)symbol22197, 0);
// should
send120223 = (Object)new_AST_Send((Object)send120222, (Object)symbol22211, 0);
smallint8415 = (Object)new_Type_SmallInt(6);
constant23269 = (Object)new_AST_Constant((Object)smallint8415);
// =
send120224 = (Object)new_AST_Send((Object)send120223, (Object)SMB__equal, 1, (Object)constant23269);
string13629 = (Object)new_Type_String(L" \t\"Test\" \"boe\"\t\"\" ab");
constant23270 = (Object)new_AST_Constant((Object)string13629);
// on:
send120225 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23270);
assign14734 = (Object)new_AST_Assign((Object)localvariable16956, (Object)send120225);
// match:
send120226 = (Object)new_AST_Send((Object)localvariable16955, (Object)symbol22121, 1, (Object)localvariable16956);
// should
send120227 = (Object)new_AST_Send((Object)send120226, (Object)symbol22211, 0);
// not
send120228 = (Object)new_AST_Send((Object)send120227, (Object)SMB_not, 0);
// be
send120229 = (Object)new_AST_Send((Object)send120228, (Object)symbol22273, 0);
// isNil
send120230 = (Object)new_AST_Send((Object)send120229, (Object)SMB_isNil, 0);
// position
send120231 = (Object)new_AST_Send((Object)localvariable16956, (Object)symbol22197, 0);
// should
send120232 = (Object)new_AST_Send((Object)send120231, (Object)symbol22211, 0);
smallint8416 = (Object)new_Type_SmallInt(18);
constant23271 = (Object)new_AST_Constant((Object)smallint8416);
// =
send120233 = (Object)new_AST_Send((Object)send120232, (Object)SMB__equal, 1, (Object)constant23271);
string13630 = (Object)new_Type_String(L"");
constant23272 = (Object)new_AST_Constant((Object)string13630);
// on:
send120234 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23272);
assign14735 = (Object)new_AST_Assign((Object)localvariable16956, (Object)send120234);
// match:
send120235 = (Object)new_AST_Send((Object)localvariable16955, (Object)symbol22121, 1, (Object)localvariable16956);
// should
send120236 = (Object)new_AST_Send((Object)send120235, (Object)symbol22211, 0);
// not
send120237 = (Object)new_AST_Send((Object)send120236, (Object)SMB_not, 0);
// be
send120238 = (Object)new_AST_Send((Object)send120237, (Object)symbol22273, 0);
// isNil
send120239 = (Object)new_AST_Send((Object)send120238, (Object)SMB_isNil, 0);
// position
send120240 = (Object)new_AST_Send((Object)localvariable16956, (Object)symbol22197, 0);
// should
send120241 = (Object)new_AST_Send((Object)send120240, (Object)symbol22211, 0);
smallint8417 = (Object)new_Type_SmallInt(0);
constant23273 = (Object)new_AST_Constant((Object)smallint8417);
// =
send120242 = (Object)new_AST_Send((Object)send120241, (Object)SMB__equal, 1, (Object)constant23273);
method16115 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13450, 11, assign14732, assign14733, send120221, send120224, assign14734, send120230, send120233, assign14735, send120239, send120242, Self);
symbol21838 = (Object)new_Type_Symbol_cached(L"testSeparator");
methodclosure16113 = (Object)new_Runtime_MethodClosure(method16115);
store_method((Type_Class)class2770, (Type_Symbol)symbol21838, (Runtime_MethodClosure)methodclosure16113);


// SCParserTest>>testUnarySelector
//testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable16957 = (Object)new_AST_Variable_named(L"parser");
localvariable16958 = (Object)new_AST_Variable_named(L"string");
localvariable16959 = (Object)new_AST_Variable_named(L"result");
array13451 = (Object)new_Type_Array_with(3, (Object)localvariable16957, (Object)localvariable16958, (Object)localvariable16959);
// unarySelector
send120243 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22217, 0);
assign14736 = (Object)new_AST_Assign((Object)localvariable16957, (Object)send120243);
string13631 = (Object)new_Type_String(L"abcd bla");
constant23274 = (Object)new_AST_Constant((Object)string13631);
// on:
send120244 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23274);
assign14737 = (Object)new_AST_Assign((Object)localvariable16958, (Object)send120244);
// match:
send120245 = (Object)new_AST_Send((Object)localvariable16957, (Object)symbol22121, 1, (Object)localvariable16958);
assign14738 = (Object)new_AST_Assign((Object)localvariable16959, (Object)send120245);
// class
send120246 = (Object)new_AST_Send((Object)localvariable16959, (Object)SMB_class, 0);
// should
send120247 = (Object)new_AST_Send((Object)send120246, (Object)symbol22211, 0);
// =
send120248 = (Object)new_AST_Send((Object)send120247, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send120249 = (Object)new_AST_Send((Object)localvariable16959, (Object)symbol21908, 0);
// printString
send120250 = (Object)new_AST_Send((Object)send120249, (Object)symbol22124, 0);
// should
send120251 = (Object)new_AST_Send((Object)send120250, (Object)symbol22211, 0);
string13632 = (Object)new_Type_String(L"abcd");
constant23275 = (Object)new_AST_Constant((Object)string13632);
// =
send120252 = (Object)new_AST_Send((Object)send120251, (Object)SMB__equal, 1, (Object)constant23275);
// position
send120253 = (Object)new_AST_Send((Object)localvariable16958, (Object)symbol22197, 0);
// should
send120254 = (Object)new_AST_Send((Object)send120253, (Object)symbol22211, 0);
smallint8418 = (Object)new_Type_SmallInt(4);
constant23276 = (Object)new_AST_Constant((Object)smallint8418);
// =
send120255 = (Object)new_AST_Send((Object)send120254, (Object)SMB__equal, 1, (Object)constant23276);
string13633 = (Object)new_Type_String(L"abcd: bla");
constant23277 = (Object)new_AST_Constant((Object)string13633);
// on:
send120256 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23277);
assign14739 = (Object)new_AST_Assign((Object)localvariable16958, (Object)send120256);
// match:
send120257 = (Object)new_AST_Send((Object)localvariable16957, (Object)symbol22121, 1, (Object)localvariable16958);
// should
send120258 = (Object)new_AST_Send((Object)send120257, (Object)symbol22211, 0);
// be
send120259 = (Object)new_AST_Send((Object)send120258, (Object)symbol22273, 0);
// isNil
send120260 = (Object)new_AST_Send((Object)send120259, (Object)SMB_isNil, 0);
// position
send120261 = (Object)new_AST_Send((Object)localvariable16958, (Object)symbol22197, 0);
// should
send120262 = (Object)new_AST_Send((Object)send120261, (Object)symbol22211, 0);
smallint8419 = (Object)new_Type_SmallInt(0);
constant23278 = (Object)new_AST_Constant((Object)smallint8419);
// =
send120263 = (Object)new_AST_Send((Object)send120262, (Object)SMB__equal, 1, (Object)constant23278);
method16116 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13451, 10, assign14736, assign14737, assign14738, send120248, send120252, send120255, assign14739, send120260, send120263, Self);
symbol21858 = (Object)new_Type_Symbol_cached(L"testUnarySelector");
methodclosure16114 = (Object)new_Runtime_MethodClosure(method16116);
store_method((Type_Class)class2770, (Type_Symbol)symbol21858, (Runtime_MethodClosure)methodclosure16114);


// SCParserTest>>testSubExpression
//testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
localvariable16960 = (Object)new_AST_Variable_named(L"parser");
localvariable16961 = (Object)new_AST_Variable_named(L"string");
localvariable16962 = (Object)new_AST_Variable_named(L"result");
array13452 = (Object)new_Type_Array_with(3, (Object)localvariable16960, (Object)localvariable16961, (Object)localvariable16962);
// subExpression
send120264 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22233, 0);
assign14740 = (Object)new_AST_Assign((Object)localvariable16960, (Object)send120264);
string13634 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b ");
constant23279 = (Object)new_AST_Constant((Object)string13634);
// on:
send120265 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23279);
assign14741 = (Object)new_AST_Assign((Object)localvariable16961, (Object)send120265);
// match:
send120266 = (Object)new_AST_Send((Object)localvariable16960, (Object)symbol22121, 1, (Object)localvariable16961);
// should
send120267 = (Object)new_AST_Send((Object)send120266, (Object)symbol22211, 0);
// be
send120268 = (Object)new_AST_Send((Object)send120267, (Object)symbol22273, 0);
// isNil
send120269 = (Object)new_AST_Send((Object)send120268, (Object)SMB_isNil, 0);
string13635 = (Object)new_Type_String(L"a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. ");
constant23280 = (Object)new_AST_Constant((Object)string13635);
// on:
send120270 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23280);
assign14742 = (Object)new_AST_Assign((Object)localvariable16961, (Object)send120270);
// match:
send120271 = (Object)new_AST_Send((Object)localvariable16960, (Object)symbol22121, 1, (Object)localvariable16961);
assign14743 = (Object)new_AST_Assign((Object)localvariable16962, (Object)send120271);
// class
send120272 = (Object)new_AST_Send((Object)localvariable16962, (Object)SMB_class, 0);
// should
send120273 = (Object)new_AST_Send((Object)send120272, (Object)symbol22211, 0);
// =
send120274 = (Object)new_AST_Send((Object)send120273, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send120275 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22035, 0);
// class
send120276 = (Object)new_AST_Send((Object)send120275, (Object)SMB_class, 0);
// should
send120277 = (Object)new_AST_Send((Object)send120276, (Object)symbol22211, 0);
// =
send120278 = (Object)new_AST_Send((Object)send120277, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send120279 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22035, 0);
// name
send120280 = (Object)new_AST_Send((Object)send120279, (Object)SMB_name, 0);
// should
send120281 = (Object)new_AST_Send((Object)send120280, (Object)symbol22211, 0);
string13636 = (Object)new_Type_String(L"a");
constant23281 = (Object)new_AST_Constant((Object)string13636);
// =
send120282 = (Object)new_AST_Send((Object)send120281, (Object)SMB__equal, 1, (Object)constant23281);
// expression
send120283 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22033, 0);
assign14744 = (Object)new_AST_Assign((Object)localvariable16962, (Object)send120283);
// class
send120284 = (Object)new_AST_Send((Object)localvariable16962, (Object)SMB_class, 0);
// should
send120285 = (Object)new_AST_Send((Object)send120284, (Object)symbol22211, 0);
// =
send120286 = (Object)new_AST_Send((Object)send120285, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send120287 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22035, 0);
// class
send120288 = (Object)new_AST_Send((Object)send120287, (Object)SMB_class, 0);
// should
send120289 = (Object)new_AST_Send((Object)send120288, (Object)symbol22211, 0);
// =
send120290 = (Object)new_AST_Send((Object)send120289, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send120291 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22035, 0);
// name
send120292 = (Object)new_AST_Send((Object)send120291, (Object)SMB_name, 0);
// should
send120293 = (Object)new_AST_Send((Object)send120292, (Object)symbol22211, 0);
string13637 = (Object)new_Type_String(L"b");
constant23282 = (Object)new_AST_Constant((Object)string13637);
// =
send120294 = (Object)new_AST_Send((Object)send120293, (Object)SMB__equal, 1, (Object)constant23282);
// expression
send120295 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22033, 0);
assign14745 = (Object)new_AST_Assign((Object)localvariable16962, (Object)send120295);
// class
send120296 = (Object)new_AST_Send((Object)localvariable16962, (Object)SMB_class, 0);
// should
send120297 = (Object)new_AST_Send((Object)send120296, (Object)symbol22211, 0);
// =
send120298 = (Object)new_AST_Send((Object)send120297, (Object)SMB__equal, 1, (Object)classreference3163);
// variable
send120299 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22035, 0);
// class
send120300 = (Object)new_AST_Send((Object)send120299, (Object)SMB_class, 0);
// should
send120301 = (Object)new_AST_Send((Object)send120300, (Object)symbol22211, 0);
// =
send120302 = (Object)new_AST_Send((Object)send120301, (Object)SMB__equal, 1, (Object)classreference3173);
// variable
send120303 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22035, 0);
// name
send120304 = (Object)new_AST_Send((Object)send120303, (Object)SMB_name, 0);
// should
send120305 = (Object)new_AST_Send((Object)send120304, (Object)symbol22211, 0);
string13638 = (Object)new_Type_String(L"c");
constant23283 = (Object)new_AST_Constant((Object)string13638);
// =
send120306 = (Object)new_AST_Send((Object)send120305, (Object)SMB__equal, 1, (Object)constant23283);
// expression
send120307 = (Object)new_AST_Send((Object)localvariable16962, (Object)symbol22033, 0);
// class
send120308 = (Object)new_AST_Send((Object)send120307, (Object)SMB_class, 0);
// should
send120309 = (Object)new_AST_Send((Object)send120308, (Object)symbol22211, 0);
// =
send120310 = (Object)new_AST_Send((Object)send120309, (Object)SMB__equal, 1, (Object)classreference3159);
method16117 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13452, 18, assign14740, assign14741, send120269, assign14742, assign14743, send120274, send120278, send120282, assign14744, send120286, send120290, send120294, assign14745, send120298, send120302, send120306, send120310, Self);
symbol21881 = (Object)new_Type_Symbol_cached(L"testSubExpression");
methodclosure16115 = (Object)new_Runtime_MethodClosure(method16117);
store_method((Type_Class)class2770, (Type_Symbol)symbol21881, (Runtime_MethodClosure)methodclosure16115);


// SCParserTest>>testSelf
//testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
localvariable16963 = (Object)new_AST_Variable_named(L"parser");
localvariable16964 = (Object)new_AST_Variable_named(L"string");
localvariable16965 = (Object)new_AST_Variable_named(L"message");
localvariable16966 = (Object)new_AST_Variable_named(L"return");
array13453 = (Object)new_Type_Array_with(4, (Object)localvariable16963, (Object)localvariable16964, (Object)localvariable16965, (Object)localvariable16966);
// messageExpression
send120311 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22216, 0);
assign14746 = (Object)new_AST_Assign((Object)localvariable16963, (Object)send120311);
string13639 = (Object)new_Type_String(L"self do: this and: that");
constant23284 = (Object)new_AST_Constant((Object)string13639);
// on:
send120312 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23284);
assign14747 = (Object)new_AST_Assign((Object)localvariable16964, (Object)send120312);
// match:
send120313 = (Object)new_AST_Send((Object)localvariable16963, (Object)symbol22121, 1, (Object)localvariable16964);
assign14748 = (Object)new_AST_Assign((Object)localvariable16965, (Object)send120313);
// receiver
send120314 = (Object)new_AST_Send((Object)localvariable16965, (Object)symbol22006, 0);
// class
send120315 = (Object)new_AST_Send((Object)send120314, (Object)SMB_class, 0);
// should
send120316 = (Object)new_AST_Send((Object)send120315, (Object)symbol22211, 0);
// =
send120317 = (Object)new_AST_Send((Object)send120316, (Object)SMB__equal, 1, (Object)classreference3174);
// return
send120318 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22234, 0);
assign14749 = (Object)new_AST_Assign((Object)localvariable16963, (Object)send120318);
string13640 = (Object)new_Type_String(L"^ self do: this and: that");
constant23285 = (Object)new_AST_Constant((Object)string13640);
// on:
send120319 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23285);
assign14750 = (Object)new_AST_Assign((Object)localvariable16964, (Object)send120319);
// match:
send120320 = (Object)new_AST_Send((Object)localvariable16963, (Object)symbol22121, 1, (Object)localvariable16964);
assign14751 = (Object)new_AST_Assign((Object)localvariable16966, (Object)send120320);
// class
send120321 = (Object)new_AST_Send((Object)localvariable16966, (Object)SMB_class, 0);
// should
send120322 = (Object)new_AST_Send((Object)send120321, (Object)symbol22211, 0);
// =
send120323 = (Object)new_AST_Send((Object)send120322, (Object)SMB__equal, 1, (Object)classreference3158);
// expression
send120324 = (Object)new_AST_Send((Object)localvariable16966, (Object)symbol22033, 0);
// receiver
send120325 = (Object)new_AST_Send((Object)send120324, (Object)symbol22006, 0);
// class
send120326 = (Object)new_AST_Send((Object)send120325, (Object)SMB_class, 0);
// should
send120327 = (Object)new_AST_Send((Object)send120326, (Object)symbol22211, 0);
// =
send120328 = (Object)new_AST_Send((Object)send120327, (Object)SMB__equal, 1, (Object)classreference3174);
method16118 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13453, 10, assign14746, assign14747, assign14748, send120317, assign14749, assign14750, assign14751, send120323, send120328, Self);
symbol21878 = (Object)new_Type_Symbol_cached(L"testSelf");
methodclosure16116 = (Object)new_Runtime_MethodClosure(method16118);
store_method((Type_Class)class2770, (Type_Symbol)symbol21878, (Runtime_MethodClosure)methodclosure16116);


// SCParserTest>>testParseTestMethods
//testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
method16119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol21831 = (Object)new_Type_Symbol_cached(L"testParseTestMethods");
methodclosure16117 = (Object)new_Runtime_MethodClosure(method16119);
store_method((Type_Class)class2770, (Type_Symbol)symbol21831, (Runtime_MethodClosure)methodclosure16117);


// SCParserTest>>testArray
//testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
localvariable16967 = (Object)new_AST_Variable_named(L"parser");
localvariable16968 = (Object)new_AST_Variable_named(L"string");
localvariable16969 = (Object)new_AST_Variable_named(L"result");
array13454 = (Object)new_Type_Array_with(3, (Object)localvariable16967, (Object)localvariable16968, (Object)localvariable16969);
// array
send120329 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22248, 0);
assign14752 = (Object)new_AST_Assign((Object)localvariable16967, (Object)send120329);
string13641 = (Object)new_Type_String(L"()");
constant23286 = (Object)new_AST_Constant((Object)string13641);
// on:
send120330 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23286);
assign14753 = (Object)new_AST_Assign((Object)localvariable16968, (Object)send120330);
// match:
send120331 = (Object)new_AST_Send((Object)localvariable16967, (Object)symbol22121, 1, (Object)localvariable16968);
assign14754 = (Object)new_AST_Assign((Object)localvariable16969, (Object)send120331);
// class
send120332 = (Object)new_AST_Send((Object)localvariable16969, (Object)SMB_class, 0);
// should
send120333 = (Object)new_AST_Send((Object)send120332, (Object)symbol22211, 0);
// =
send120334 = (Object)new_AST_Send((Object)send120333, (Object)SMB__equal, 1, (Object)classreference3147);
// literals
send120335 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
// asArray
send120336 = (Object)new_AST_Send((Object)send120335, (Object)SMB_asArray, 0);
// should
send120337 = (Object)new_AST_Send((Object)send120336, (Object)symbol22211, 0);
// new
send120338 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21894, 0);
// =
send120339 = (Object)new_AST_Send((Object)send120337, (Object)SMB__equal, 1, (Object)send120338);
string13642 = (Object)new_Type_String(L"(1 a #a \'b\' (4)))");
constant23287 = (Object)new_AST_Constant((Object)string13642);
// on:
send120340 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23287);
assign14755 = (Object)new_AST_Assign((Object)localvariable16968, (Object)send120340);
// match:
send120341 = (Object)new_AST_Send((Object)localvariable16967, (Object)symbol22121, 1, (Object)localvariable16968);
assign14756 = (Object)new_AST_Assign((Object)localvariable16969, (Object)send120341);
// class
send120342 = (Object)new_AST_Send((Object)localvariable16969, (Object)SMB_class, 0);
// should
send120343 = (Object)new_AST_Send((Object)send120342, (Object)symbol22211, 0);
// =
send120344 = (Object)new_AST_Send((Object)send120343, (Object)SMB__equal, 1, (Object)classreference3147);
// literals
send120345 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
// size
send120346 = (Object)new_AST_Send((Object)send120345, (Object)SMB_size, 0);
// should
send120347 = (Object)new_AST_Send((Object)send120346, (Object)symbol22211, 0);
smallint8420 = (Object)new_Type_SmallInt(5);
constant23288 = (Object)new_AST_Constant((Object)smallint8420);
// =
send120348 = (Object)new_AST_Send((Object)send120347, (Object)SMB__equal, 1, (Object)constant23288);
// literals
send120349 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
// first
send120350 = (Object)new_AST_Send((Object)send120349, (Object)symbol21970, 0);
// class
send120351 = (Object)new_AST_Send((Object)send120350, (Object)SMB_class, 0);
// should
send120352 = (Object)new_AST_Send((Object)send120351, (Object)symbol22211, 0);
// =
send120353 = (Object)new_AST_Send((Object)send120352, (Object)SMB__equal, 1, (Object)classreference3150);
// literals
send120354 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
// first
send120355 = (Object)new_AST_Send((Object)send120354, (Object)symbol21970, 0);
// number
send120356 = (Object)new_AST_Send((Object)send120355, (Object)symbol21978, 0);
// should
send120357 = (Object)new_AST_Send((Object)send120356, (Object)symbol22211, 0);
string13643 = (Object)new_Type_String(L"1");
constant23289 = (Object)new_AST_Constant((Object)string13643);
// =
send120358 = (Object)new_AST_Send((Object)send120357, (Object)SMB__equal, 1, (Object)constant23289);
// literals
send120359 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8421 = (Object)new_Type_SmallInt(2);
constant23290 = (Object)new_AST_Constant((Object)smallint8421);
// at:
send120360 = (Object)new_AST_Send((Object)send120359, (Object)SMB_at_, 1, (Object)constant23290);
// class
send120361 = (Object)new_AST_Send((Object)send120360, (Object)SMB_class, 0);
// should
send120362 = (Object)new_AST_Send((Object)send120361, (Object)symbol22211, 0);
// =
send120363 = (Object)new_AST_Send((Object)send120362, (Object)SMB__equal, 1, (Object)classreference3155);
// literals
send120364 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8422 = (Object)new_Type_SmallInt(2);
constant23291 = (Object)new_AST_Constant((Object)smallint8422);
// at:
send120365 = (Object)new_AST_Send((Object)send120364, (Object)SMB_at_, 1, (Object)constant23291);
// symbol
send120366 = (Object)new_AST_Send((Object)send120365, (Object)symbol21983, 0);
// should
send120367 = (Object)new_AST_Send((Object)send120366, (Object)symbol22211, 0);
string13644 = (Object)new_Type_String(L"a");
constant23292 = (Object)new_AST_Constant((Object)string13644);
// =
send120368 = (Object)new_AST_Send((Object)send120367, (Object)SMB__equal, 1, (Object)constant23292);
// literals
send120369 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8423 = (Object)new_Type_SmallInt(3);
constant23293 = (Object)new_AST_Constant((Object)smallint8423);
// at:
send120370 = (Object)new_AST_Send((Object)send120369, (Object)SMB_at_, 1, (Object)constant23293);
// class
send120371 = (Object)new_AST_Send((Object)send120370, (Object)SMB_class, 0);
// should
send120372 = (Object)new_AST_Send((Object)send120371, (Object)symbol22211, 0);
// =
send120373 = (Object)new_AST_Send((Object)send120372, (Object)SMB__equal, 1, (Object)classreference3155);
// literals
send120374 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8424 = (Object)new_Type_SmallInt(3);
constant23294 = (Object)new_AST_Constant((Object)smallint8424);
// at:
send120375 = (Object)new_AST_Send((Object)send120374, (Object)SMB_at_, 1, (Object)constant23294);
// symbol
send120376 = (Object)new_AST_Send((Object)send120375, (Object)symbol21983, 0);
// should
send120377 = (Object)new_AST_Send((Object)send120376, (Object)symbol22211, 0);
string13645 = (Object)new_Type_String(L"a");
constant23295 = (Object)new_AST_Constant((Object)string13645);
// =
send120378 = (Object)new_AST_Send((Object)send120377, (Object)SMB__equal, 1, (Object)constant23295);
// literals
send120379 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8425 = (Object)new_Type_SmallInt(4);
constant23296 = (Object)new_AST_Constant((Object)smallint8425);
// at:
send120380 = (Object)new_AST_Send((Object)send120379, (Object)SMB_at_, 1, (Object)constant23296);
// class
send120381 = (Object)new_AST_Send((Object)send120380, (Object)SMB_class, 0);
// should
send120382 = (Object)new_AST_Send((Object)send120381, (Object)symbol22211, 0);
// =
send120383 = (Object)new_AST_Send((Object)send120382, (Object)SMB__equal, 1, (Object)classreference3160);
// literals
send120384 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8426 = (Object)new_Type_SmallInt(4);
constant23297 = (Object)new_AST_Constant((Object)smallint8426);
// at:
send120385 = (Object)new_AST_Send((Object)send120384, (Object)SMB_at_, 1, (Object)constant23297);
// string
send120386 = (Object)new_AST_Send((Object)send120385, (Object)symbol21987, 0);
// should
send120387 = (Object)new_AST_Send((Object)send120386, (Object)symbol22211, 0);
string13646 = (Object)new_Type_String(L"b");
constant23298 = (Object)new_AST_Constant((Object)string13646);
// =
send120388 = (Object)new_AST_Send((Object)send120387, (Object)SMB__equal, 1, (Object)constant23298);
// literals
send120389 = (Object)new_AST_Send((Object)localvariable16969, (Object)symbol21962, 0);
smallint8427 = (Object)new_Type_SmallInt(5);
constant23299 = (Object)new_AST_Constant((Object)smallint8427);
// at:
send120390 = (Object)new_AST_Send((Object)send120389, (Object)SMB_at_, 1, (Object)constant23299);
// class
send120391 = (Object)new_AST_Send((Object)send120390, (Object)SMB_class, 0);
// should
send120392 = (Object)new_AST_Send((Object)send120391, (Object)symbol22211, 0);
// =
send120393 = (Object)new_AST_Send((Object)send120392, (Object)SMB__equal, 1, (Object)classreference3147);
method16120 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13454, 19, assign14752, assign14753, assign14754, send120334, send120339, assign14755, assign14756, send120344, send120348, send120353, send120358, send120363, send120368, send120373, send120378, send120383, send120388, send120393, Self);
symbol21815 = (Object)new_Type_Symbol_cached(L"testArray");
methodclosure16118 = (Object)new_Runtime_MethodClosure(method16120);
store_method((Type_Class)class2770, (Type_Symbol)symbol21815, (Runtime_MethodClosure)methodclosure16118);


// SCParserTest>>testCapitalIdentifier
//testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable16970 = (Object)new_AST_Variable_named(L"parser");
localvariable16971 = (Object)new_AST_Variable_named(L"string");
array13455 = (Object)new_Type_Array_with(2, (Object)localvariable16970, (Object)localvariable16971);
symbol22280 = (Object)new_Type_Symbol_cached(L"capitalIdentifier");
// capitalIdentifier
send120394 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22280, 0);
assign14757 = (Object)new_AST_Assign((Object)localvariable16970, (Object)send120394);
string13647 = (Object)new_Type_String(L"Abcd ");
constant23300 = (Object)new_AST_Constant((Object)string13647);
// on:
send120395 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23300);
assign14758 = (Object)new_AST_Assign((Object)localvariable16971, (Object)send120395);
// match:
send120396 = (Object)new_AST_Send((Object)localvariable16970, (Object)symbol22121, 1, (Object)localvariable16971);
// should
send120397 = (Object)new_AST_Send((Object)send120396, (Object)symbol22211, 0);
string13648 = (Object)new_Type_String(L"Abcd");
constant23301 = (Object)new_AST_Constant((Object)string13648);
// =
send120398 = (Object)new_AST_Send((Object)send120397, (Object)SMB__equal, 1, (Object)constant23301);
// position
send120399 = (Object)new_AST_Send((Object)localvariable16971, (Object)symbol22197, 0);
// should
send120400 = (Object)new_AST_Send((Object)send120399, (Object)symbol22211, 0);
smallint8428 = (Object)new_Type_SmallInt(4);
constant23302 = (Object)new_AST_Constant((Object)smallint8428);
// =
send120401 = (Object)new_AST_Send((Object)send120400, (Object)SMB__equal, 1, (Object)constant23302);
string13649 = (Object)new_Type_String(L"AbCd145 ");
constant23303 = (Object)new_AST_Constant((Object)string13649);
// on:
send120402 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23303);
assign14759 = (Object)new_AST_Assign((Object)localvariable16971, (Object)send120402);
// match:
send120403 = (Object)new_AST_Send((Object)localvariable16970, (Object)symbol22121, 1, (Object)localvariable16971);
// should
send120404 = (Object)new_AST_Send((Object)send120403, (Object)symbol22211, 0);
string13650 = (Object)new_Type_String(L"AbCd145");
constant23304 = (Object)new_AST_Constant((Object)string13650);
// =
send120405 = (Object)new_AST_Send((Object)send120404, (Object)SMB__equal, 1, (Object)constant23304);
// position
send120406 = (Object)new_AST_Send((Object)localvariable16971, (Object)symbol22197, 0);
// should
send120407 = (Object)new_AST_Send((Object)send120406, (Object)symbol22211, 0);
smallint8429 = (Object)new_Type_SmallInt(7);
constant23305 = (Object)new_AST_Constant((Object)smallint8429);
// =
send120408 = (Object)new_AST_Send((Object)send120407, (Object)SMB__equal, 1, (Object)constant23305);
string13651 = (Object)new_Type_String(L"abcdD");
constant23306 = (Object)new_AST_Constant((Object)string13651);
// on:
send120409 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23306);
assign14760 = (Object)new_AST_Assign((Object)localvariable16971, (Object)send120409);
// match:
send120410 = (Object)new_AST_Send((Object)localvariable16970, (Object)symbol22121, 1, (Object)localvariable16971);
// should
send120411 = (Object)new_AST_Send((Object)send120410, (Object)symbol22211, 0);
// be
send120412 = (Object)new_AST_Send((Object)send120411, (Object)symbol22273, 0);
// isNil
send120413 = (Object)new_AST_Send((Object)send120412, (Object)SMB_isNil, 0);
// position
send120414 = (Object)new_AST_Send((Object)localvariable16971, (Object)symbol22197, 0);
// should
send120415 = (Object)new_AST_Send((Object)send120414, (Object)symbol22211, 0);
smallint8430 = (Object)new_Type_SmallInt(0);
constant23307 = (Object)new_AST_Constant((Object)smallint8430);
// =
send120416 = (Object)new_AST_Send((Object)send120415, (Object)SMB__equal, 1, (Object)constant23307);
method16121 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13455, 11, assign14757, assign14758, send120398, send120401, assign14759, send120405, send120408, assign14760, send120413, send120416, Self);
symbol21843 = (Object)new_Type_Symbol_cached(L"testCapitalIdentifier");
methodclosure16119 = (Object)new_Runtime_MethodClosure(method16121);
store_method((Type_Class)class2770, (Type_Symbol)symbol21843, (Runtime_MethodClosure)methodclosure16119);


// SCParserTest>>testUnaryExpression
//testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
localvariable16972 = (Object)new_AST_Variable_named(L"parser");
localvariable16973 = (Object)new_AST_Variable_named(L"string");
localvariable16974 = (Object)new_AST_Variable_named(L"result");
array13456 = (Object)new_Type_Array_with(3, (Object)localvariable16972, (Object)localvariable16973, (Object)localvariable16974);
// unaryExpression
send120417 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22239, 0);
assign14761 = (Object)new_AST_Assign((Object)localvariable16972, (Object)send120417);
string13652 = (Object)new_Type_String(L"abc def ghi ");
constant23308 = (Object)new_AST_Constant((Object)string13652);
// on:
send120418 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23308);
assign14762 = (Object)new_AST_Assign((Object)localvariable16973, (Object)send120418);
// match:
send120419 = (Object)new_AST_Send((Object)localvariable16972, (Object)symbol22121, 1, (Object)localvariable16973);
assign14763 = (Object)new_AST_Assign((Object)localvariable16974, (Object)send120419);
// class
send120420 = (Object)new_AST_Send((Object)localvariable16974, (Object)SMB_class, 0);
// should
send120421 = (Object)new_AST_Send((Object)send120420, (Object)symbol22211, 0);
// =
send120422 = (Object)new_AST_Send((Object)send120421, (Object)SMB__equal, 1, (Object)classreference3164);
// selector
send120423 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol21908, 0);
// class
send120424 = (Object)new_AST_Send((Object)send120423, (Object)SMB_class, 0);
// should
send120425 = (Object)new_AST_Send((Object)send120424, (Object)symbol22211, 0);
// =
send120426 = (Object)new_AST_Send((Object)send120425, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send120427 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol21908, 0);
// selector
send120428 = (Object)new_AST_Send((Object)send120427, (Object)symbol21908, 0);
// printString
send120429 = (Object)new_AST_Send((Object)send120428, (Object)symbol22124, 0);
// should
send120430 = (Object)new_AST_Send((Object)send120429, (Object)symbol22211, 0);
string13653 = (Object)new_Type_String(L"ghi");
constant23309 = (Object)new_AST_Constant((Object)string13653);
// =
send120431 = (Object)new_AST_Send((Object)send120430, (Object)SMB__equal, 1, (Object)constant23309);
// receiver
send120432 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol22006, 0);
assign14764 = (Object)new_AST_Assign((Object)localvariable16974, (Object)send120432);
// class
send120433 = (Object)new_AST_Send((Object)localvariable16974, (Object)SMB_class, 0);
// should
send120434 = (Object)new_AST_Send((Object)send120433, (Object)symbol22211, 0);
// =
send120435 = (Object)new_AST_Send((Object)send120434, (Object)SMB__equal, 1, (Object)classreference3164);
// selector
send120436 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol21908, 0);
// class
send120437 = (Object)new_AST_Send((Object)send120436, (Object)SMB_class, 0);
// should
send120438 = (Object)new_AST_Send((Object)send120437, (Object)symbol22211, 0);
// =
send120439 = (Object)new_AST_Send((Object)send120438, (Object)SMB__equal, 1, (Object)classreference3157);
// selector
send120440 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol21908, 0);
// selector
send120441 = (Object)new_AST_Send((Object)send120440, (Object)symbol21908, 0);
// printString
send120442 = (Object)new_AST_Send((Object)send120441, (Object)symbol22124, 0);
// should
send120443 = (Object)new_AST_Send((Object)send120442, (Object)symbol22211, 0);
string13654 = (Object)new_Type_String(L"def");
constant23310 = (Object)new_AST_Constant((Object)string13654);
// =
send120444 = (Object)new_AST_Send((Object)send120443, (Object)SMB__equal, 1, (Object)constant23310);
// receiver
send120445 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol22006, 0);
// class
send120446 = (Object)new_AST_Send((Object)send120445, (Object)SMB_class, 0);
// should
send120447 = (Object)new_AST_Send((Object)send120446, (Object)symbol22211, 0);
// =
send120448 = (Object)new_AST_Send((Object)send120447, (Object)SMB__equal, 1, (Object)classreference3173);
// receiver
send120449 = (Object)new_AST_Send((Object)localvariable16974, (Object)symbol22006, 0);
// name
send120450 = (Object)new_AST_Send((Object)send120449, (Object)SMB_name, 0);
// should
send120451 = (Object)new_AST_Send((Object)send120450, (Object)symbol22211, 0);
string13655 = (Object)new_Type_String(L"abc");
constant23311 = (Object)new_AST_Constant((Object)string13655);
// =
send120452 = (Object)new_AST_Send((Object)send120451, (Object)SMB__equal, 1, (Object)constant23311);
// position
send120453 = (Object)new_AST_Send((Object)localvariable16973, (Object)symbol22197, 0);
// should
send120454 = (Object)new_AST_Send((Object)send120453, (Object)symbol22211, 0);
smallint8431 = (Object)new_Type_SmallInt(12);
constant23312 = (Object)new_AST_Constant((Object)smallint8431);
// =
send120455 = (Object)new_AST_Send((Object)send120454, (Object)SMB__equal, 1, (Object)constant23312);
string13656 = (Object)new_Type_String(L"abc");
constant23313 = (Object)new_AST_Constant((Object)string13656);
// on:
send120456 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23313);
assign14765 = (Object)new_AST_Assign((Object)localvariable16973, (Object)send120456);
// match:
send120457 = (Object)new_AST_Send((Object)localvariable16972, (Object)symbol22121, 1, (Object)localvariable16973);
// should
send120458 = (Object)new_AST_Send((Object)send120457, (Object)symbol22211, 0);
// be
send120459 = (Object)new_AST_Send((Object)send120458, (Object)symbol22273, 0);
// isNil
send120460 = (Object)new_AST_Send((Object)send120459, (Object)SMB_isNil, 0);
method16122 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13456, 16, assign14761, assign14762, assign14763, send120422, send120426, send120431, assign14764, send120435, send120439, send120444, send120448, send120452, send120455, assign14765, send120460, Self);
symbol21851 = (Object)new_Type_Symbol_cached(L"testUnaryExpression");
methodclosure16120 = (Object)new_Runtime_MethodClosure(method16122);
store_method((Type_Class)class2770, (Type_Symbol)symbol21851, (Runtime_MethodClosure)methodclosure16120);


// SCParserTest>>testCharacter
//testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
localvariable16975 = (Object)new_AST_Variable_named(L"parser");
localvariable16976 = (Object)new_AST_Variable_named(L"string");
array13457 = (Object)new_Type_Array_with(2, (Object)localvariable16975, (Object)localvariable16976);
// character
send120461 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22223, 0);
assign14766 = (Object)new_AST_Assign((Object)localvariable16975, (Object)send120461);
string13657 = (Object)new_Type_String(L"--");
constant23314 = (Object)new_AST_Constant((Object)string13657);
// on:
send120462 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23314);
assign14767 = (Object)new_AST_Assign((Object)localvariable16976, (Object)send120462);
// match:
send120463 = (Object)new_AST_Send((Object)localvariable16975, (Object)symbol22121, 1, (Object)localvariable16976);
// should
send120464 = (Object)new_AST_Send((Object)send120463, (Object)symbol22211, 0);
string13658 = (Object)new_Type_String(L"-");
constant23315 = (Object)new_AST_Constant((Object)string13658);
// =
send120465 = (Object)new_AST_Send((Object)send120464, (Object)SMB__equal, 1, (Object)constant23315);
// position
send120466 = (Object)new_AST_Send((Object)localvariable16976, (Object)symbol22197, 0);
// should
send120467 = (Object)new_AST_Send((Object)send120466, (Object)symbol22211, 0);
smallint8432 = (Object)new_Type_SmallInt(1);
constant23316 = (Object)new_AST_Constant((Object)smallint8432);
// =
send120468 = (Object)new_AST_Send((Object)send120467, (Object)SMB__equal, 1, (Object)constant23316);
string13659 = (Object)new_Type_String(L"__");
constant23317 = (Object)new_AST_Constant((Object)string13659);
// on:
send120469 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23317);
assign14768 = (Object)new_AST_Assign((Object)localvariable16976, (Object)send120469);
// match:
send120470 = (Object)new_AST_Send((Object)localvariable16975, (Object)symbol22121, 1, (Object)localvariable16976);
// should
send120471 = (Object)new_AST_Send((Object)send120470, (Object)symbol22211, 0);
string13660 = (Object)new_Type_String(L"_");
constant23318 = (Object)new_AST_Constant((Object)string13660);
// =
send120472 = (Object)new_AST_Send((Object)send120471, (Object)SMB__equal, 1, (Object)constant23318);
// position
send120473 = (Object)new_AST_Send((Object)localvariable16976, (Object)symbol22197, 0);
// should
send120474 = (Object)new_AST_Send((Object)send120473, (Object)symbol22211, 0);
smallint8433 = (Object)new_Type_SmallInt(1);
constant23319 = (Object)new_AST_Constant((Object)smallint8433);
// =
send120475 = (Object)new_AST_Send((Object)send120474, (Object)SMB__equal, 1, (Object)constant23319);
string13661 = (Object)new_Type_String(L"4");
constant23320 = (Object)new_AST_Constant((Object)string13661);
// on:
send120476 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23320);
assign14769 = (Object)new_AST_Assign((Object)localvariable16976, (Object)send120476);
// match:
send120477 = (Object)new_AST_Send((Object)localvariable16975, (Object)symbol22121, 1, (Object)localvariable16976);
// should
send120478 = (Object)new_AST_Send((Object)send120477, (Object)symbol22211, 0);
string13662 = (Object)new_Type_String(L"4");
constant23321 = (Object)new_AST_Constant((Object)string13662);
// =
send120479 = (Object)new_AST_Send((Object)send120478, (Object)SMB__equal, 1, (Object)constant23321);
// position
send120480 = (Object)new_AST_Send((Object)localvariable16976, (Object)symbol22197, 0);
// should
send120481 = (Object)new_AST_Send((Object)send120480, (Object)symbol22211, 0);
smallint8434 = (Object)new_Type_SmallInt(1);
constant23322 = (Object)new_AST_Constant((Object)smallint8434);
// =
send120482 = (Object)new_AST_Send((Object)send120481, (Object)SMB__equal, 1, (Object)constant23322);
string13663 = (Object)new_Type_String(L"p");
constant23323 = (Object)new_AST_Constant((Object)string13663);
// on:
send120483 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23323);
assign14770 = (Object)new_AST_Assign((Object)localvariable16976, (Object)send120483);
// match:
send120484 = (Object)new_AST_Send((Object)localvariable16975, (Object)symbol22121, 1, (Object)localvariable16976);
// should
send120485 = (Object)new_AST_Send((Object)send120484, (Object)symbol22211, 0);
string13664 = (Object)new_Type_String(L"p");
constant23324 = (Object)new_AST_Constant((Object)string13664);
// =
send120486 = (Object)new_AST_Send((Object)send120485, (Object)SMB__equal, 1, (Object)constant23324);
// position
send120487 = (Object)new_AST_Send((Object)localvariable16976, (Object)symbol22197, 0);
// should
send120488 = (Object)new_AST_Send((Object)send120487, (Object)symbol22211, 0);
smallint8435 = (Object)new_Type_SmallInt(1);
constant23325 = (Object)new_AST_Constant((Object)smallint8435);
// =
send120489 = (Object)new_AST_Send((Object)send120488, (Object)SMB__equal, 1, (Object)constant23325);
string13665 = (Object)new_Type_String(L"&");
constant23326 = (Object)new_AST_Constant((Object)string13665);
// on:
send120490 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23326);
assign14771 = (Object)new_AST_Assign((Object)localvariable16976, (Object)send120490);
// match:
send120491 = (Object)new_AST_Send((Object)localvariable16975, (Object)symbol22121, 1, (Object)localvariable16976);
// should
send120492 = (Object)new_AST_Send((Object)send120491, (Object)symbol22211, 0);
string13666 = (Object)new_Type_String(L"&");
constant23327 = (Object)new_AST_Constant((Object)string13666);
// =
send120493 = (Object)new_AST_Send((Object)send120492, (Object)SMB__equal, 1, (Object)constant23327);
// position
send120494 = (Object)new_AST_Send((Object)localvariable16976, (Object)symbol22197, 0);
// should
send120495 = (Object)new_AST_Send((Object)send120494, (Object)symbol22211, 0);
smallint8436 = (Object)new_Type_SmallInt(1);
constant23328 = (Object)new_AST_Constant((Object)smallint8436);
// =
send120496 = (Object)new_AST_Send((Object)send120495, (Object)SMB__equal, 1, (Object)constant23328);
string13667 = (Object)new_Type_String(L"\'");
constant23329 = (Object)new_AST_Constant((Object)string13667);
// on:
send120497 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23329);
assign14772 = (Object)new_AST_Assign((Object)localvariable16976, (Object)send120497);
// match:
send120498 = (Object)new_AST_Send((Object)localvariable16975, (Object)symbol22121, 1, (Object)localvariable16976);
// should
send120499 = (Object)new_AST_Send((Object)send120498, (Object)symbol22211, 0);
// be
send120500 = (Object)new_AST_Send((Object)send120499, (Object)symbol22273, 0);
// isNil
send120501 = (Object)new_AST_Send((Object)send120500, (Object)SMB_isNil, 0);
// position
send120502 = (Object)new_AST_Send((Object)localvariable16976, (Object)symbol22197, 0);
// should
send120503 = (Object)new_AST_Send((Object)send120502, (Object)symbol22211, 0);
smallint8437 = (Object)new_Type_SmallInt(0);
constant23330 = (Object)new_AST_Constant((Object)smallint8437);
// =
send120504 = (Object)new_AST_Send((Object)send120503, (Object)SMB__equal, 1, (Object)constant23330);
method16123 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13457, 20, assign14766, assign14767, send120465, send120468, assign14768, send120472, send120475, assign14769, send120479, send120482, assign14770, send120486, send120489, assign14771, send120493, send120496, assign14772, send120501, send120504, Self);
symbol21863 = (Object)new_Type_Symbol_cached(L"testCharacter");
methodclosure16121 = (Object)new_Runtime_MethodClosure(method16123);
store_method((Type_Class)class2770, (Type_Symbol)symbol21863, (Runtime_MethodClosure)methodclosure16121);


// SCParserTest>>testBinaryArgument
//testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
localvariable16977 = (Object)new_AST_Variable_named(L"parser");
localvariable16978 = (Object)new_AST_Variable_named(L"string");
localvariable16979 = (Object)new_AST_Variable_named(L"result");
array13458 = (Object)new_Type_Array_with(3, (Object)localvariable16977, (Object)localvariable16978, (Object)localvariable16979);
// binaryMessageDefinition
send120505 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22268, 0);
assign14773 = (Object)new_AST_Assign((Object)localvariable16977, (Object)send120505);
string13668 = (Object)new_Type_String(L"+= a");
constant23331 = (Object)new_AST_Constant((Object)string13668);
// on:
send120506 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23331);
assign14774 = (Object)new_AST_Assign((Object)localvariable16978, (Object)send120506);
// match:
send120507 = (Object)new_AST_Send((Object)localvariable16977, (Object)symbol22121, 1, (Object)localvariable16978);
assign14775 = (Object)new_AST_Assign((Object)localvariable16979, (Object)send120507);
// class
send120508 = (Object)new_AST_Send((Object)localvariable16979, (Object)SMB_class, 0);
// should
send120509 = (Object)new_AST_Send((Object)send120508, (Object)symbol22211, 0);
// =
send120510 = (Object)new_AST_Send((Object)send120509, (Object)SMB__equal, 1, (Object)classreference3156);
// selector
send120511 = (Object)new_AST_Send((Object)localvariable16979, (Object)symbol21908, 0);
// printString
send120512 = (Object)new_AST_Send((Object)send120511, (Object)symbol22124, 0);
// should
send120513 = (Object)new_AST_Send((Object)send120512, (Object)symbol22211, 0);
string13669 = (Object)new_Type_String(L"+=");
constant23332 = (Object)new_AST_Constant((Object)string13669);
// =
send120514 = (Object)new_AST_Send((Object)send120513, (Object)SMB__equal, 1, (Object)constant23332);
// parameter
send120515 = (Object)new_AST_Send((Object)localvariable16979, (Object)symbol22029, 0);
// class
send120516 = (Object)new_AST_Send((Object)send120515, (Object)SMB_class, 0);
// should
send120517 = (Object)new_AST_Send((Object)send120516, (Object)symbol22211, 0);
// =
send120518 = (Object)new_AST_Send((Object)send120517, (Object)SMB__equal, 1, (Object)classreference3173);
// parameter
send120519 = (Object)new_AST_Send((Object)localvariable16979, (Object)symbol22029, 0);
// name
send120520 = (Object)new_AST_Send((Object)send120519, (Object)SMB_name, 0);
// asString
send120521 = (Object)new_AST_Send((Object)send120520, (Object)SMB_asString, 0);
// should
send120522 = (Object)new_AST_Send((Object)send120521, (Object)symbol22211, 0);
string13670 = (Object)new_Type_String(L"a");
constant23333 = (Object)new_AST_Constant((Object)string13670);
// =
send120523 = (Object)new_AST_Send((Object)send120522, (Object)SMB__equal, 1, (Object)constant23333);
// position
send120524 = (Object)new_AST_Send((Object)localvariable16978, (Object)symbol22197, 0);
// should
send120525 = (Object)new_AST_Send((Object)send120524, (Object)symbol22211, 0);
smallint8438 = (Object)new_Type_SmallInt(4);
constant23334 = (Object)new_AST_Constant((Object)smallint8438);
// =
send120526 = (Object)new_AST_Send((Object)send120525, (Object)SMB__equal, 1, (Object)constant23334);
string13671 = (Object)new_Type_String(L"|= a");
constant23335 = (Object)new_AST_Constant((Object)string13671);
// on:
send120527 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23335);
assign14776 = (Object)new_AST_Assign((Object)localvariable16978, (Object)send120527);
// match:
send120528 = (Object)new_AST_Send((Object)localvariable16977, (Object)symbol22121, 1, (Object)localvariable16978);
// should
send120529 = (Object)new_AST_Send((Object)send120528, (Object)symbol22211, 0);
// be
send120530 = (Object)new_AST_Send((Object)send120529, (Object)symbol22273, 0);
// isNil
send120531 = (Object)new_AST_Send((Object)send120530, (Object)SMB_isNil, 0);
// position
send120532 = (Object)new_AST_Send((Object)localvariable16978, (Object)symbol22197, 0);
// should
send120533 = (Object)new_AST_Send((Object)send120532, (Object)symbol22211, 0);
smallint8439 = (Object)new_Type_SmallInt(0);
constant23336 = (Object)new_AST_Constant((Object)smallint8439);
// =
send120534 = (Object)new_AST_Send((Object)send120533, (Object)SMB__equal, 1, (Object)constant23336);
string13672 = (Object)new_Type_String(L"-= abc d");
constant23337 = (Object)new_AST_Constant((Object)string13672);
// on:
send120535 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23337);
assign14777 = (Object)new_AST_Assign((Object)localvariable16978, (Object)send120535);
// match:
send120536 = (Object)new_AST_Send((Object)localvariable16977, (Object)symbol22121, 1, (Object)localvariable16978);
assign14778 = (Object)new_AST_Assign((Object)localvariable16979, (Object)send120536);
// class
send120537 = (Object)new_AST_Send((Object)localvariable16979, (Object)SMB_class, 0);
// should
send120538 = (Object)new_AST_Send((Object)send120537, (Object)symbol22211, 0);
// =
send120539 = (Object)new_AST_Send((Object)send120538, (Object)SMB__equal, 1, (Object)classreference3156);
// selector
send120540 = (Object)new_AST_Send((Object)localvariable16979, (Object)symbol21908, 0);
// printString
send120541 = (Object)new_AST_Send((Object)send120540, (Object)symbol22124, 0);
// should
send120542 = (Object)new_AST_Send((Object)send120541, (Object)symbol22211, 0);
string13673 = (Object)new_Type_String(L"-=");
constant23338 = (Object)new_AST_Constant((Object)string13673);
// =
send120543 = (Object)new_AST_Send((Object)send120542, (Object)SMB__equal, 1, (Object)constant23338);
// parameter
send120544 = (Object)new_AST_Send((Object)localvariable16979, (Object)symbol22029, 0);
// class
send120545 = (Object)new_AST_Send((Object)send120544, (Object)SMB_class, 0);
// should
send120546 = (Object)new_AST_Send((Object)send120545, (Object)symbol22211, 0);
// =
send120547 = (Object)new_AST_Send((Object)send120546, (Object)SMB__equal, 1, (Object)classreference3173);
// parameter
send120548 = (Object)new_AST_Send((Object)localvariable16979, (Object)symbol22029, 0);
// name
send120549 = (Object)new_AST_Send((Object)send120548, (Object)SMB_name, 0);
// asString
send120550 = (Object)new_AST_Send((Object)send120549, (Object)SMB_asString, 0);
// should
send120551 = (Object)new_AST_Send((Object)send120550, (Object)symbol22211, 0);
string13674 = (Object)new_Type_String(L"abc");
constant23339 = (Object)new_AST_Constant((Object)string13674);
// =
send120552 = (Object)new_AST_Send((Object)send120551, (Object)SMB__equal, 1, (Object)constant23339);
// position
send120553 = (Object)new_AST_Send((Object)localvariable16978, (Object)symbol22197, 0);
// should
send120554 = (Object)new_AST_Send((Object)send120553, (Object)symbol22211, 0);
smallint8440 = (Object)new_Type_SmallInt(6);
constant23340 = (Object)new_AST_Constant((Object)smallint8440);
// =
send120555 = (Object)new_AST_Send((Object)send120554, (Object)SMB__equal, 1, (Object)constant23340);
method16124 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13458, 19, assign14773, assign14774, assign14775, send120510, send120514, send120518, send120523, send120526, assign14776, send120531, send120534, assign14777, assign14778, send120539, send120543, send120547, send120552, send120555, Self);
symbol21871 = (Object)new_Type_Symbol_cached(L"testBinaryArgument");
methodclosure16122 = (Object)new_Runtime_MethodClosure(method16124);
store_method((Type_Class)class2770, (Type_Symbol)symbol21871, (Runtime_MethodClosure)methodclosure16122);


// SCParserTest>>testKeywordMessageExpression
//testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
localvariable16980 = (Object)new_AST_Variable_named(L"parser");
localvariable16981 = (Object)new_AST_Variable_named(L"string");
localvariable16982 = (Object)new_AST_Variable_named(L"result");
localvariable16983 = (Object)new_AST_Variable_named(L"arg");
array13459 = (Object)new_Type_Array_with(4, (Object)localvariable16980, (Object)localvariable16981, (Object)localvariable16982, (Object)localvariable16983);
// keywordMessageExpression
send120556 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22224, 0);
assign14779 = (Object)new_AST_Assign((Object)localvariable16980, (Object)send120556);
string13675 = (Object)new_Type_String(L"abc: 1 def: 2+2 ghi: 3 b ");
constant23341 = (Object)new_AST_Constant((Object)string13675);
// on:
send120557 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23341);
assign14780 = (Object)new_AST_Assign((Object)localvariable16981, (Object)send120557);
// match:
send120558 = (Object)new_AST_Send((Object)localvariable16980, (Object)symbol22121, 1, (Object)localvariable16981);
assign14781 = (Object)new_AST_Assign((Object)localvariable16982, (Object)send120558);
// class
send120559 = (Object)new_AST_Send((Object)localvariable16982, (Object)SMB_class, 0);
// should
send120560 = (Object)new_AST_Send((Object)send120559, (Object)symbol22211, 0);
// =
send120561 = (Object)new_AST_Send((Object)send120560, (Object)SMB__equal, 1, (Object)classreference3159);
// keywords
send120562 = (Object)new_AST_Send((Object)localvariable16982, (Object)symbol22016, 0);
// asArray
send120563 = (Object)new_AST_Send((Object)send120562, (Object)SMB_asArray, 0);
// should
send120564 = (Object)new_AST_Send((Object)send120563, (Object)symbol22211, 0);
localvariable16984 = (Object)new_AST_Variable_named(L"receiver");
array13460 = (Object)new_Type_Array_with(1, (Object)localvariable16984);
smallint8441 = (Object)new_Type_SmallInt(1);
constant23342 = (Object)new_AST_Constant((Object)smallint8441);
string13676 = (Object)new_Type_String(L"abc");
constant23343 = (Object)new_AST_Constant((Object)string13676);
// at:put:
send120565 = (Object)new_AST_Send((Object)localvariable16984, (Object)SMB_at_put_, 2, (Object)constant23342, (Object)constant23343);
smallint8442 = (Object)new_Type_SmallInt(2);
constant23344 = (Object)new_AST_Constant((Object)smallint8442);
string13677 = (Object)new_Type_String(L"def");
constant23345 = (Object)new_AST_Constant((Object)string13677);
// at:put:
send120566 = (Object)new_AST_Send((Object)localvariable16984, (Object)SMB_at_put_, 2, (Object)constant23344, (Object)constant23345);
smallint8443 = (Object)new_Type_SmallInt(3);
constant23346 = (Object)new_AST_Constant((Object)smallint8443);
string13678 = (Object)new_Type_String(L"ghi");
constant23347 = (Object)new_AST_Constant((Object)string13678);
// at:put:
send120567 = (Object)new_AST_Send((Object)localvariable16984, (Object)SMB_at_put_, 2, (Object)constant23346, (Object)constant23347);
// yourself
send120568 = (Object)new_AST_Send((Object)localvariable16984, (Object)symbol21799, 0);
block7950 = (Object)new_AST_Block_with((Type_Array)array13460, (Type_Array)empty_Type_Array, 1, 4, send120565, send120566, send120567, send120568);
smallint8444 = (Object)new_Type_SmallInt(3);
constant23348 = (Object)new_AST_Constant((Object)smallint8444);
// new:
send120569 = (Object)new_AST_Send((Object)classreference3107, (Object)symbol21884, 1, (Object)constant23348);
// value:
send120570 = (Object)new_AST_Send((Object)block7950, (Object)SMB_value_, 1, (Object)send120569);
// =
send120571 = (Object)new_AST_Send((Object)send120564, (Object)SMB__equal, 1, (Object)send120570);
// arguments
send120572 = (Object)new_AST_Send((Object)localvariable16982, (Object)symbol21909, 0);
// first
send120573 = (Object)new_AST_Send((Object)send120572, (Object)symbol21970, 0);
assign14782 = (Object)new_AST_Assign((Object)localvariable16983, (Object)send120573);
// class
send120574 = (Object)new_AST_Send((Object)localvariable16983, (Object)SMB_class, 0);
// should
send120575 = (Object)new_AST_Send((Object)send120574, (Object)symbol22211, 0);
// =
send120576 = (Object)new_AST_Send((Object)send120575, (Object)SMB__equal, 1, (Object)classreference3150);
// arguments
send120577 = (Object)new_AST_Send((Object)localvariable16982, (Object)symbol21909, 0);
smallint8445 = (Object)new_Type_SmallInt(2);
constant23349 = (Object)new_AST_Constant((Object)smallint8445);
// at:
send120578 = (Object)new_AST_Send((Object)send120577, (Object)SMB_at_, 1, (Object)constant23349);
assign14783 = (Object)new_AST_Assign((Object)localvariable16983, (Object)send120578);
// class
send120579 = (Object)new_AST_Send((Object)localvariable16983, (Object)SMB_class, 0);
// should
send120580 = (Object)new_AST_Send((Object)send120579, (Object)symbol22211, 0);
// =
send120581 = (Object)new_AST_Send((Object)send120580, (Object)SMB__equal, 1, (Object)classreference3154);
// arguments
send120582 = (Object)new_AST_Send((Object)localvariable16982, (Object)symbol21909, 0);
smallint8446 = (Object)new_Type_SmallInt(3);
constant23350 = (Object)new_AST_Constant((Object)smallint8446);
// at:
send120583 = (Object)new_AST_Send((Object)send120582, (Object)SMB_at_, 1, (Object)constant23350);
assign14784 = (Object)new_AST_Assign((Object)localvariable16983, (Object)send120583);
// class
send120584 = (Object)new_AST_Send((Object)localvariable16983, (Object)SMB_class, 0);
// should
send120585 = (Object)new_AST_Send((Object)send120584, (Object)symbol22211, 0);
// =
send120586 = (Object)new_AST_Send((Object)send120585, (Object)SMB__equal, 1, (Object)classreference3164);
// position
send120587 = (Object)new_AST_Send((Object)localvariable16981, (Object)symbol22197, 0);
// should
send120588 = (Object)new_AST_Send((Object)send120587, (Object)symbol22211, 0);
smallint8447 = (Object)new_Type_SmallInt(25);
constant23351 = (Object)new_AST_Constant((Object)smallint8447);
// =
send120589 = (Object)new_AST_Send((Object)send120588, (Object)SMB__equal, 1, (Object)constant23351);
method16125 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13459, 13, assign14779, assign14780, assign14781, send120561, send120571, assign14782, send120576, assign14783, send120581, assign14784, send120586, send120589, Self);
symbol21833 = (Object)new_Type_Symbol_cached(L"testKeywordMessageExpression");
methodclosure16123 = (Object)new_Runtime_MethodClosure(method16125);
store_method((Type_Class)class2770, (Type_Symbol)symbol21833, (Runtime_MethodClosure)methodclosure16123);


// SCParserTest>>testStringConstant
//testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
localvariable16985 = (Object)new_AST_Variable_named(L"parser");
localvariable16986 = (Object)new_AST_Variable_named(L"string");
localvariable16987 = (Object)new_AST_Variable_named(L"result");
array13461 = (Object)new_Type_Array_with(3, (Object)localvariable16985, (Object)localvariable16986, (Object)localvariable16987);
// stringConstant
send120590 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22252, 0);
assign14785 = (Object)new_AST_Assign((Object)localvariable16985, (Object)send120590);
string13679 = (Object)new_Type_String(L"\'abc\'");
constant23352 = (Object)new_AST_Constant((Object)string13679);
// on:
send120591 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23352);
assign14786 = (Object)new_AST_Assign((Object)localvariable16986, (Object)send120591);
// match:
send120592 = (Object)new_AST_Send((Object)localvariable16985, (Object)symbol22121, 1, (Object)localvariable16986);
assign14787 = (Object)new_AST_Assign((Object)localvariable16987, (Object)send120592);
// class
send120593 = (Object)new_AST_Send((Object)localvariable16987, (Object)SMB_class, 0);
// should
send120594 = (Object)new_AST_Send((Object)send120593, (Object)symbol22211, 0);
// =
send120595 = (Object)new_AST_Send((Object)send120594, (Object)SMB__equal, 1, (Object)classreference3160);
// string
send120596 = (Object)new_AST_Send((Object)localvariable16987, (Object)symbol21987, 0);
// should
send120597 = (Object)new_AST_Send((Object)send120596, (Object)symbol22211, 0);
string13680 = (Object)new_Type_String(L"abc");
constant23353 = (Object)new_AST_Constant((Object)string13680);
// =
send120598 = (Object)new_AST_Send((Object)send120597, (Object)SMB__equal, 1, (Object)constant23353);
// position
send120599 = (Object)new_AST_Send((Object)localvariable16986, (Object)symbol22197, 0);
// should
send120600 = (Object)new_AST_Send((Object)send120599, (Object)symbol22211, 0);
smallint8448 = (Object)new_Type_SmallInt(5);
constant23354 = (Object)new_AST_Constant((Object)smallint8448);
// =
send120601 = (Object)new_AST_Send((Object)send120600, (Object)SMB__equal, 1, (Object)constant23354);
string13681 = (Object)new_Type_String(L"\'abc\'\'");
constant23355 = (Object)new_AST_Constant((Object)string13681);
// on:
send120602 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23355);
assign14788 = (Object)new_AST_Assign((Object)localvariable16986, (Object)send120602);
// match:
send120603 = (Object)new_AST_Send((Object)localvariable16985, (Object)symbol22121, 1, (Object)localvariable16986);
assign14789 = (Object)new_AST_Assign((Object)localvariable16987, (Object)send120603);
// class
send120604 = (Object)new_AST_Send((Object)localvariable16987, (Object)SMB_class, 0);
// should
send120605 = (Object)new_AST_Send((Object)send120604, (Object)symbol22211, 0);
// =
send120606 = (Object)new_AST_Send((Object)send120605, (Object)SMB__equal, 1, (Object)classreference3160);
// string
send120607 = (Object)new_AST_Send((Object)localvariable16987, (Object)symbol21987, 0);
// should
send120608 = (Object)new_AST_Send((Object)send120607, (Object)symbol22211, 0);
string13682 = (Object)new_Type_String(L"abc");
constant23356 = (Object)new_AST_Constant((Object)string13682);
// =
send120609 = (Object)new_AST_Send((Object)send120608, (Object)SMB__equal, 1, (Object)constant23356);
// position
send120610 = (Object)new_AST_Send((Object)localvariable16986, (Object)symbol22197, 0);
// should
send120611 = (Object)new_AST_Send((Object)send120610, (Object)symbol22211, 0);
smallint8449 = (Object)new_Type_SmallInt(5);
constant23357 = (Object)new_AST_Constant((Object)smallint8449);
// =
send120612 = (Object)new_AST_Send((Object)send120611, (Object)SMB__equal, 1, (Object)constant23357);
string13683 = (Object)new_Type_String(L"\'abc\'\'d\' \'");
constant23358 = (Object)new_AST_Constant((Object)string13683);
// on:
send120613 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23358);
assign14790 = (Object)new_AST_Assign((Object)localvariable16986, (Object)send120613);
// match:
send120614 = (Object)new_AST_Send((Object)localvariable16985, (Object)symbol22121, 1, (Object)localvariable16986);
assign14791 = (Object)new_AST_Assign((Object)localvariable16987, (Object)send120614);
// class
send120615 = (Object)new_AST_Send((Object)localvariable16987, (Object)SMB_class, 0);
// should
send120616 = (Object)new_AST_Send((Object)send120615, (Object)symbol22211, 0);
// =
send120617 = (Object)new_AST_Send((Object)send120616, (Object)SMB__equal, 1, (Object)classreference3160);
// string
send120618 = (Object)new_AST_Send((Object)localvariable16987, (Object)symbol21987, 0);
// should
send120619 = (Object)new_AST_Send((Object)send120618, (Object)symbol22211, 0);
string13684 = (Object)new_Type_String(L"abc\'d");
constant23359 = (Object)new_AST_Constant((Object)string13684);
// =
send120620 = (Object)new_AST_Send((Object)send120619, (Object)SMB__equal, 1, (Object)constant23359);
// position
send120621 = (Object)new_AST_Send((Object)localvariable16986, (Object)symbol22197, 0);
// should
send120622 = (Object)new_AST_Send((Object)send120621, (Object)symbol22211, 0);
smallint8450 = (Object)new_Type_SmallInt(8);
constant23360 = (Object)new_AST_Constant((Object)smallint8450);
// =
send120623 = (Object)new_AST_Send((Object)send120622, (Object)SMB__equal, 1, (Object)constant23360);
method16126 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13461, 17, assign14785, assign14786, assign14787, send120595, send120598, send120601, assign14788, assign14789, send120606, send120609, send120612, assign14790, assign14791, send120617, send120620, send120623, Self);
symbol21825 = (Object)new_Type_Symbol_cached(L"testStringConstant");
methodclosure16124 = (Object)new_Runtime_MethodClosure(method16126);
store_method((Type_Class)class2770, (Type_Symbol)symbol21825, (Runtime_MethodClosure)methodclosure16124);


// SCParserTest>>testMethod2
//testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
localvariable16988 = (Object)new_AST_Variable_named(L"parser");
localvariable16989 = (Object)new_AST_Variable_named(L"string");
localvariable16990 = (Object)new_AST_Variable_named(L"result");
array13462 = (Object)new_Type_Array_with(3, (Object)localvariable16988, (Object)localvariable16989, (Object)localvariable16990);
// method
send120624 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22279, 0);
assign14792 = (Object)new_AST_Assign((Object)localvariable16988, (Object)send120624);
string13685 = (Object)new_Type_String(L"a: b c: d\n\t\t\t\"boe\" |x y z| \"test\"\n\t\t\t<abc: 1 \"bla\"def: (2+2) ghi: (3 b)>\n\t\t\t<a: 4> \"test\"\n\t\t\t<boe>\n\t\t\t1 + [ |a| a ] value: \"mmh\" 3.\n\t\t\t^ 7 \"biep\". \"bla\" ");
constant23361 = (Object)new_AST_Constant((Object)string13685);
assign14793 = (Object)new_AST_Assign((Object)localvariable16989, (Object)constant23361);
// parse:
send120625 = (Object)new_AST_Send((Object)localvariable16988, (Object)symbol22140, 1, (Object)localvariable16989);
assign14794 = (Object)new_AST_Assign((Object)localvariable16990, (Object)send120625);
// hasReturnExpression
send120626 = (Object)new_AST_Send((Object)localvariable16990, (Object)symbol21955, 0);
// should
send120627 = (Object)new_AST_Send((Object)send120626, (Object)symbol22211, 0);
// be
send120628 = (Object)new_AST_Send((Object)send120627, (Object)symbol22273, 0);
// true
send120629 = (Object)new_AST_Send((Object)send120628, (Object)symbol22278, 0);
// class
send120630 = (Object)new_AST_Send((Object)localvariable16990, (Object)SMB_class, 0);
// should
send120631 = (Object)new_AST_Send((Object)send120630, (Object)symbol22211, 0);
// =
send120632 = (Object)new_AST_Send((Object)send120631, (Object)SMB__equal, 1, (Object)classreference3175);
// message
send120633 = (Object)new_AST_Send((Object)localvariable16990, (Object)symbol22024, 0);
// class
send120634 = (Object)new_AST_Send((Object)send120633, (Object)SMB_class, 0);
// should
send120635 = (Object)new_AST_Send((Object)send120634, (Object)symbol22211, 0);
// =
send120636 = (Object)new_AST_Send((Object)send120635, (Object)SMB__equal, 1, (Object)classreference3148);
// temporaries
send120637 = (Object)new_AST_Send((Object)localvariable16990, (Object)symbol22025, 0);
// size
send120638 = (Object)new_AST_Send((Object)send120637, (Object)SMB_size, 0);
// should
send120639 = (Object)new_AST_Send((Object)send120638, (Object)symbol22211, 0);
smallint8451 = (Object)new_Type_SmallInt(3);
constant23362 = (Object)new_AST_Constant((Object)smallint8451);
// =
send120640 = (Object)new_AST_Send((Object)send120639, (Object)SMB__equal, 1, (Object)constant23362);
// annotations
send120641 = (Object)new_AST_Send((Object)localvariable16990, (Object)symbol22022, 0);
// size
send120642 = (Object)new_AST_Send((Object)send120641, (Object)SMB_size, 0);
// should
send120643 = (Object)new_AST_Send((Object)send120642, (Object)symbol22211, 0);
smallint8452 = (Object)new_Type_SmallInt(3);
constant23363 = (Object)new_AST_Constant((Object)smallint8452);
// =
send120644 = (Object)new_AST_Send((Object)send120643, (Object)SMB__equal, 1, (Object)constant23363);
// statements
send120645 = (Object)new_AST_Send((Object)localvariable16990, (Object)symbol22021, 0);
// size
send120646 = (Object)new_AST_Send((Object)send120645, (Object)SMB_size, 0);
// should
send120647 = (Object)new_AST_Send((Object)send120646, (Object)symbol22211, 0);
smallint8453 = (Object)new_Type_SmallInt(2);
constant23364 = (Object)new_AST_Constant((Object)smallint8453);
// =
send120648 = (Object)new_AST_Send((Object)send120647, (Object)SMB__equal, 1, (Object)constant23364);
method16127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13462, 10, assign14792, assign14793, assign14794, send120629, send120632, send120636, send120640, send120644, send120648, Self);
symbol21845 = (Object)new_Type_Symbol_cached(L"testMethod2");
methodclosure16125 = (Object)new_Runtime_MethodClosure(method16127);
store_method((Type_Class)class2770, (Type_Symbol)symbol21845, (Runtime_MethodClosure)methodclosure16125);


// SCParserTest>>testComment
//testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
localvariable16991 = (Object)new_AST_Variable_named(L"parser");
array13463 = (Object)new_Type_Array_with(1, (Object)localvariable16991);
string13686 = (Object)new_Type_String(L"COMMENT");
constant23365 = (Object)new_AST_Constant((Object)string13686);
// commentFormat
send120649 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22257, 0);
// named:parsing:
send120650 = (Object)new_AST_Send((Object)classreference3139, (Object)symbol22136, 2, (Object)constant23365, (Object)send120649);
assign14795 = (Object)new_AST_Assign((Object)localvariable16991, (Object)send120650);
string13687 = (Object)new_Type_String(L"\"Test\"");
constant23366 = (Object)new_AST_Constant((Object)string13687);
// parse:
send120651 = (Object)new_AST_Send((Object)localvariable16991, (Object)symbol22140, 1, (Object)constant23366);
// should
send120652 = (Object)new_AST_Send((Object)send120651, (Object)symbol22211, 0);
// not
send120653 = (Object)new_AST_Send((Object)send120652, (Object)SMB_not, 0);
// be
send120654 = (Object)new_AST_Send((Object)send120653, (Object)symbol22273, 0);
// isNil
send120655 = (Object)new_AST_Send((Object)send120654, (Object)SMB_isNil, 0);
string13688 = (Object)new_Type_String(L"\"Test");
constant23367 = (Object)new_AST_Constant((Object)string13688);
// parse:
send120656 = (Object)new_AST_Send((Object)localvariable16991, (Object)symbol22140, 1, (Object)constant23367);
// should
send120657 = (Object)new_AST_Send((Object)send120656, (Object)symbol22211, 0);
// be
send120658 = (Object)new_AST_Send((Object)send120657, (Object)symbol22273, 0);
// isNil
send120659 = (Object)new_AST_Send((Object)send120658, (Object)SMB_isNil, 0);
method16128 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13463, 4, assign14795, send120655, send120659, Self);
symbol21873 = (Object)new_Type_Symbol_cached(L"testComment");
methodclosure16126 = (Object)new_Runtime_MethodClosure(method16128);
store_method((Type_Class)class2770, (Type_Symbol)symbol21873, (Runtime_MethodClosure)methodclosure16126);


// SCParserTest>>testUnaryAndBinaryPrecedence
//testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
localvariable16992 = (Object)new_AST_Variable_named(L"parser");
localvariable16993 = (Object)new_AST_Variable_named(L"ast");
array13464 = (Object)new_Type_Array_with(2, (Object)localvariable16992, (Object)localvariable16993);
// statements
send120660 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22021, 0);
assign14796 = (Object)new_AST_Assign((Object)localvariable16992, (Object)send120660);
string13689 = (Object)new_Type_String(L"2 fib + 3 ");
constant23368 = (Object)new_AST_Constant((Object)string13689);
// on:
send120661 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23368);
// match:
send120662 = (Object)new_AST_Send((Object)localvariable16992, (Object)symbol22121, 1, (Object)send120661);
// first
send120663 = (Object)new_AST_Send((Object)send120662, (Object)symbol21970, 0);
assign14797 = (Object)new_AST_Assign((Object)localvariable16993, (Object)send120663);
// class
send120664 = (Object)new_AST_Send((Object)localvariable16993, (Object)SMB_class, 0);
// should
send120665 = (Object)new_AST_Send((Object)send120664, (Object)symbol22211, 0);
// =
send120666 = (Object)new_AST_Send((Object)send120665, (Object)SMB__equal, 1, (Object)classreference3154);
// receiver
send120667 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol22006, 0);
// class
send120668 = (Object)new_AST_Send((Object)send120667, (Object)SMB_class, 0);
// should
send120669 = (Object)new_AST_Send((Object)send120668, (Object)symbol22211, 0);
// =
send120670 = (Object)new_AST_Send((Object)send120669, (Object)SMB__equal, 1, (Object)classreference3164);
// receiver
send120671 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol22006, 0);
// receiver
send120672 = (Object)new_AST_Send((Object)send120671, (Object)symbol22006, 0);
// class
send120673 = (Object)new_AST_Send((Object)send120672, (Object)SMB_class, 0);
// should
send120674 = (Object)new_AST_Send((Object)send120673, (Object)symbol22211, 0);
// =
send120675 = (Object)new_AST_Send((Object)send120674, (Object)SMB__equal, 1, (Object)classreference3150);
// receiver
send120676 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol22006, 0);
// receiver
send120677 = (Object)new_AST_Send((Object)send120676, (Object)symbol22006, 0);
// number
send120678 = (Object)new_AST_Send((Object)send120677, (Object)symbol21978, 0);
// should
send120679 = (Object)new_AST_Send((Object)send120678, (Object)symbol22211, 0);
string13690 = (Object)new_Type_String(L"2");
constant23369 = (Object)new_AST_Constant((Object)string13690);
// =
send120680 = (Object)new_AST_Send((Object)send120679, (Object)SMB__equal, 1, (Object)constant23369);
// receiver
send120681 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol22006, 0);
// selector
send120682 = (Object)new_AST_Send((Object)send120681, (Object)symbol21908, 0);
// asString
send120683 = (Object)new_AST_Send((Object)send120682, (Object)SMB_asString, 0);
// should
send120684 = (Object)new_AST_Send((Object)send120683, (Object)symbol22211, 0);
string13691 = (Object)new_Type_String(L"fib");
constant23370 = (Object)new_AST_Constant((Object)string13691);
// =
send120685 = (Object)new_AST_Send((Object)send120684, (Object)SMB__equal, 1, (Object)constant23370);
// selector
send120686 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol21908, 0);
// asString
send120687 = (Object)new_AST_Send((Object)send120686, (Object)SMB_asString, 0);
// should
send120688 = (Object)new_AST_Send((Object)send120687, (Object)symbol22211, 0);
string13692 = (Object)new_Type_String(L"+");
constant23371 = (Object)new_AST_Constant((Object)string13692);
// =
send120689 = (Object)new_AST_Send((Object)send120688, (Object)SMB__equal, 1, (Object)constant23371);
// argument
send120690 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol22014, 0);
// class
send120691 = (Object)new_AST_Send((Object)send120690, (Object)SMB_class, 0);
// should
send120692 = (Object)new_AST_Send((Object)send120691, (Object)symbol22211, 0);
// =
send120693 = (Object)new_AST_Send((Object)send120692, (Object)SMB__equal, 1, (Object)classreference3150);
// argument
send120694 = (Object)new_AST_Send((Object)localvariable16993, (Object)symbol22014, 0);
// number
send120695 = (Object)new_AST_Send((Object)send120694, (Object)symbol21978, 0);
// should
send120696 = (Object)new_AST_Send((Object)send120695, (Object)symbol22211, 0);
string13693 = (Object)new_Type_String(L"3");
constant23372 = (Object)new_AST_Constant((Object)string13693);
// =
send120697 = (Object)new_AST_Send((Object)send120696, (Object)SMB__equal, 1, (Object)constant23372);
method16129 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13464, 11, assign14796, assign14797, send120666, send120670, send120675, send120680, send120685, send120689, send120693, send120697, Self);
symbol21865 = (Object)new_Type_Symbol_cached(L"testUnaryAndBinaryPrecedence");
methodclosure16127 = (Object)new_Runtime_MethodClosure(method16129);
store_method((Type_Class)class2770, (Type_Symbol)symbol21865, (Runtime_MethodClosure)methodclosure16127);


// SCParserTest>>testBinaryExpression
//testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
localvariable16994 = (Object)new_AST_Variable_named(L"parser");
localvariable16995 = (Object)new_AST_Variable_named(L"string");
localvariable16996 = (Object)new_AST_Variable_named(L"result");
array13465 = (Object)new_Type_Array_with(3, (Object)localvariable16994, (Object)localvariable16995, (Object)localvariable16996);
// binaryObjectDescription
send120698 = (Object)new_AST_Send((Object)instancevariable4058, (Object)symbol22232, 0);
assign14798 = (Object)new_AST_Assign((Object)localvariable16994, (Object)send120698);
string13694 = (Object)new_Type_String(L"abc + ghi ");
constant23373 = (Object)new_AST_Constant((Object)string13694);
// on:
send120699 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23373);
assign14799 = (Object)new_AST_Assign((Object)localvariable16995, (Object)send120699);
// match:
send120700 = (Object)new_AST_Send((Object)localvariable16994, (Object)symbol22121, 1, (Object)localvariable16995);
assign14800 = (Object)new_AST_Assign((Object)localvariable16996, (Object)send120700);
// class
send120701 = (Object)new_AST_Send((Object)localvariable16996, (Object)SMB_class, 0);
// should
send120702 = (Object)new_AST_Send((Object)send120701, (Object)symbol22211, 0);
// =
send120703 = (Object)new_AST_Send((Object)send120702, (Object)SMB__equal, 1, (Object)classreference3154);
// selector
send120704 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol21908, 0);
// printString
send120705 = (Object)new_AST_Send((Object)send120704, (Object)symbol22124, 0);
// should
send120706 = (Object)new_AST_Send((Object)send120705, (Object)symbol22211, 0);
string13695 = (Object)new_Type_String(L"+");
constant23374 = (Object)new_AST_Constant((Object)string13695);
// =
send120707 = (Object)new_AST_Send((Object)send120706, (Object)SMB__equal, 1, (Object)constant23374);
// receiver
send120708 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22006, 0);
// class
send120709 = (Object)new_AST_Send((Object)send120708, (Object)SMB_class, 0);
// should
send120710 = (Object)new_AST_Send((Object)send120709, (Object)symbol22211, 0);
// =
send120711 = (Object)new_AST_Send((Object)send120710, (Object)SMB__equal, 1, (Object)classreference3173);
// receiver
send120712 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22006, 0);
// name
send120713 = (Object)new_AST_Send((Object)send120712, (Object)SMB_name, 0);
// should
send120714 = (Object)new_AST_Send((Object)send120713, (Object)symbol22211, 0);
string13696 = (Object)new_Type_String(L"abc");
constant23375 = (Object)new_AST_Constant((Object)string13696);
// =
send120715 = (Object)new_AST_Send((Object)send120714, (Object)SMB__equal, 1, (Object)constant23375);
// argument
send120716 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22014, 0);
// class
send120717 = (Object)new_AST_Send((Object)send120716, (Object)SMB_class, 0);
// should
send120718 = (Object)new_AST_Send((Object)send120717, (Object)symbol22211, 0);
// =
send120719 = (Object)new_AST_Send((Object)send120718, (Object)SMB__equal, 1, (Object)classreference3173);
// argument
send120720 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22014, 0);
// name
send120721 = (Object)new_AST_Send((Object)send120720, (Object)SMB_name, 0);
// should
send120722 = (Object)new_AST_Send((Object)send120721, (Object)symbol22211, 0);
string13697 = (Object)new_Type_String(L"ghi");
constant23376 = (Object)new_AST_Constant((Object)string13697);
// =
send120723 = (Object)new_AST_Send((Object)send120722, (Object)SMB__equal, 1, (Object)constant23376);
// position
send120724 = (Object)new_AST_Send((Object)localvariable16995, (Object)symbol22197, 0);
// should
send120725 = (Object)new_AST_Send((Object)send120724, (Object)symbol22211, 0);
smallint8454 = (Object)new_Type_SmallInt(9);
constant23377 = (Object)new_AST_Constant((Object)smallint8454);
// =
send120726 = (Object)new_AST_Send((Object)send120725, (Object)SMB__equal, 1, (Object)constant23377);
string13698 = (Object)new_Type_String(L"abc + ghi * c ");
constant23378 = (Object)new_AST_Constant((Object)string13698);
// on:
send120727 = (Object)new_AST_Send((Object)classreference3140, (Object)SMB_on_, 1, (Object)constant23378);
assign14801 = (Object)new_AST_Assign((Object)localvariable16995, (Object)send120727);
// match:
send120728 = (Object)new_AST_Send((Object)localvariable16994, (Object)symbol22121, 1, (Object)localvariable16995);
assign14802 = (Object)new_AST_Assign((Object)localvariable16996, (Object)send120728);
// class
send120729 = (Object)new_AST_Send((Object)localvariable16996, (Object)SMB_class, 0);
// should
send120730 = (Object)new_AST_Send((Object)send120729, (Object)symbol22211, 0);
// =
send120731 = (Object)new_AST_Send((Object)send120730, (Object)SMB__equal, 1, (Object)classreference3154);
// selector
send120732 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol21908, 0);
// printString
send120733 = (Object)new_AST_Send((Object)send120732, (Object)symbol22124, 0);
// should
send120734 = (Object)new_AST_Send((Object)send120733, (Object)symbol22211, 0);
string13699 = (Object)new_Type_String(L"*");
constant23379 = (Object)new_AST_Constant((Object)string13699);
// =
send120735 = (Object)new_AST_Send((Object)send120734, (Object)SMB__equal, 1, (Object)constant23379);
// argument
send120736 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22014, 0);
// class
send120737 = (Object)new_AST_Send((Object)send120736, (Object)SMB_class, 0);
// should
send120738 = (Object)new_AST_Send((Object)send120737, (Object)symbol22211, 0);
// =
send120739 = (Object)new_AST_Send((Object)send120738, (Object)SMB__equal, 1, (Object)classreference3173);
// argument
send120740 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22014, 0);
// name
send120741 = (Object)new_AST_Send((Object)send120740, (Object)SMB_name, 0);
// should
send120742 = (Object)new_AST_Send((Object)send120741, (Object)symbol22211, 0);
string13700 = (Object)new_Type_String(L"c");
constant23380 = (Object)new_AST_Constant((Object)string13700);
// =
send120743 = (Object)new_AST_Send((Object)send120742, (Object)SMB__equal, 1, (Object)constant23380);
// receiver
send120744 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22006, 0);
assign14803 = (Object)new_AST_Assign((Object)localvariable16996, (Object)send120744);
// class
send120745 = (Object)new_AST_Send((Object)localvariable16996, (Object)SMB_class, 0);
// should
send120746 = (Object)new_AST_Send((Object)send120745, (Object)symbol22211, 0);
// =
send120747 = (Object)new_AST_Send((Object)send120746, (Object)SMB__equal, 1, (Object)classreference3154);
// selector
send120748 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol21908, 0);
// printString
send120749 = (Object)new_AST_Send((Object)send120748, (Object)symbol22124, 0);
// should
send120750 = (Object)new_AST_Send((Object)send120749, (Object)symbol22211, 0);
string13701 = (Object)new_Type_String(L"+");
constant23381 = (Object)new_AST_Constant((Object)string13701);
// =
send120751 = (Object)new_AST_Send((Object)send120750, (Object)SMB__equal, 1, (Object)constant23381);
// receiver
send120752 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22006, 0);
// class
send120753 = (Object)new_AST_Send((Object)send120752, (Object)SMB_class, 0);
// should
send120754 = (Object)new_AST_Send((Object)send120753, (Object)symbol22211, 0);
// =
send120755 = (Object)new_AST_Send((Object)send120754, (Object)SMB__equal, 1, (Object)classreference3173);
// receiver
send120756 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22006, 0);
// name
send120757 = (Object)new_AST_Send((Object)send120756, (Object)SMB_name, 0);
// should
send120758 = (Object)new_AST_Send((Object)send120757, (Object)symbol22211, 0);
string13702 = (Object)new_Type_String(L"abc");
constant23382 = (Object)new_AST_Constant((Object)string13702);
// =
send120759 = (Object)new_AST_Send((Object)send120758, (Object)SMB__equal, 1, (Object)constant23382);
// argument
send120760 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22014, 0);
// class
send120761 = (Object)new_AST_Send((Object)send120760, (Object)SMB_class, 0);
// should
send120762 = (Object)new_AST_Send((Object)send120761, (Object)symbol22211, 0);
// =
send120763 = (Object)new_AST_Send((Object)send120762, (Object)SMB__equal, 1, (Object)classreference3173);
// argument
send120764 = (Object)new_AST_Send((Object)localvariable16996, (Object)symbol22014, 0);
// name
send120765 = (Object)new_AST_Send((Object)send120764, (Object)SMB_name, 0);
// should
send120766 = (Object)new_AST_Send((Object)send120765, (Object)symbol22211, 0);
string13703 = (Object)new_Type_String(L"ghi");
constant23383 = (Object)new_AST_Constant((Object)string13703);
// =
send120767 = (Object)new_AST_Send((Object)send120766, (Object)SMB__equal, 1, (Object)constant23383);
// position
send120768 = (Object)new_AST_Send((Object)localvariable16995, (Object)symbol22197, 0);
// should
send120769 = (Object)new_AST_Send((Object)send120768, (Object)symbol22211, 0);
smallint8455 = (Object)new_Type_SmallInt(13);
constant23384 = (Object)new_AST_Constant((Object)smallint8455);
// =
send120770 = (Object)new_AST_Send((Object)send120769, (Object)SMB__equal, 1, (Object)constant23384);
method16130 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array13465, 25, assign14798, assign14799, assign14800, send120703, send120707, send120711, send120715, send120719, send120723, send120726, assign14801, assign14802, send120731, send120735, send120739, send120743, assign14803, send120747, send120751, send120755, send120759, send120763, send120767, send120770, Self);
symbol21835 = (Object)new_Type_Symbol_cached(L"testBinaryExpression");
methodclosure16128 = (Object)new_Runtime_MethodClosure(method16130);
store_method((Type_Class)class2770, (Type_Symbol)symbol21835, (Runtime_MethodClosure)methodclosure16128);

}


/* ========================================================================= */

NEW_TEST(SCParserTest_setUp)
/*
setUp
// 	scparser := SCParser new
*/
// setUp
Object send120771 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21867, 0);
Object result = (Object)Eval((Object)send120771);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAnnotation)
/*
testAnnotation
// 	| parser string result arg |
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 	parser := scparser annotation.
// 	string := PEGStringScanner on: '<abc: 1 def: (2 + 3) ghi: (3 b)>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: #abc;
// 	at: 2 put: #def;
// 	at: 3 put: #ghi;
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string atEnd should be true.
// 	string := PEGStringScanner on: '<abc> '.
// 	result := parser match: string.
// 	result class should = ASTUnaryAnnotation.
// 	result selector asString should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '<temps: 4 annotations: 1 statements: 2>'.
// 	result := parser match: string.
// 	result class should = ASTKeywordAnnotation.
// 	(result keywords asArray collect: #asSymbol) should = ((Array new: 3)
// 	at: 1 put: 'temps';
// 	at: 2 put: 'annotations';
// 	at: 3 put: 'statements';
// 	yourself).
// 	string atEnd should be true.
*/
// testAnnotation
Object send120772 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21862, 0);
Object result = (Object)Eval((Object)send120772);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testArray)
/*
testArray
// 	| parser string result |
// 	parser := scparser array.
// 	string := PEGStringScanner on: '()'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals asArray should = Array new.
// 	string := PEGStringScanner on: '(1 a #a ''b'' (4)))'.
// 	result := parser match: string.
// 	result class should = ASTArray.
// 	result literals size should = 5.
// 	result literals first class should = ASTNumber.
// 	result literals first number should = '1'.
// 	(result literals at: 2) class should = ASTSymbol.
// 	(result literals at: 2) symbol should = 'a'.
// 	(result literals at: 3) class should = ASTSymbol.
// 	(result literals at: 3) symbol should = 'a'.
// 	(result literals at: 4) class should = ASTString.
// 	(result literals at: 4) string should = 'b'.
// 	(result literals at: 5) class should = ASTArray
*/
// testArray
Object send120773 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21815, 0);
Object result = (Object)Eval((Object)send120773);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testAssignmentExpressions)
/*
testAssignmentExpressions
// 	| parser string |
// 	parser := scparser assignmentExpressions.
// 	string := PEGStringScanner on: 'a :=  b:= c := d'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 15.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil
*/
// testAssignmentExpressions
Object send120774 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21868, 0);
Object result = (Object)Eval((Object)send120774);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryArgument)
/*
testBinaryArgument
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'abc'.
// 	string position should = 6
*/
// testBinaryArgument
Object send120775 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21871, 0);
Object result = (Object)Eval((Object)send120775);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryExpression)
/*
testBinaryExpression
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.
// 	string := PEGStringScanner on: 'abc + ghi '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 9.	" becomes (abc + ghi) * c "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryExpression
Object send120776 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21835, 0);
Object result = (Object)Eval((Object)send120776);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryMessageDefinition)
/*
testBinaryMessageDefinition
// 	| parser string result |
// 	parser := scparser binaryMessageDefinition.
// 	string := PEGStringScanner on: '+= a'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '+='.
// 	result parameter class should = ASTVariable.
// 	result parameter name asString should = 'a'.
// 	string position should = 4.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '-= abc d'.
// 	result := parser match: string.
// 	result class should = ASTBinaryMessageDefinition.
// 	result selector printString should = '-='.
// 	result parameter name asString should = 'abc'.
// 	result parameter class should = ASTVariable.
// 	string position should = 6
*/
// testBinaryMessageDefinition
Object send120777 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21830, 0);
Object result = (Object)Eval((Object)send120777);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinaryObjectDescription)
/*
testBinaryObjectDescription
// 	| parser string result |
// 	parser := scparser binaryObjectDescription.	" unary object description -> unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector asString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" unary object description -> primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1.	" binary expression "
// 	string := PEGStringScanner on: 'abc + ghi * c '.
// 	result := parser match: string.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '*'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'c'.
// 	result := result receiver.
// 	result class should = ASTBinaryExpression.
// 	result selector printString should = '+'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	result argument class should = ASTVariable.
// 	result argument name should = 'ghi'.
// 	string position should = 13
*/
// testBinaryObjectDescription
Object send120778 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21844, 0);
Object result = (Object)Eval((Object)send120778);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBinarySelector)
/*
testBinarySelector
// 	| parser string |
// 	parser := scparser binarySelector.
// 	string := PEGStringScanner on: '+= a'.
// 	(parser match: string) printString should = '+='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '|= a'.
// 	(parser match: string) printString should = '|'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '-= a'.
// 	(parser match: string) printString should = '-='.
// 	string position should = 2.
// 	string := PEGStringScanner on: '=- a'.
// 	(parser match: string) printString should = '='.
// 	string position should = 1
*/
// testBinarySelector
Object send120779 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21864, 0);
Object result = (Object)Eval((Object)send120779);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlock)
/*
testBlock
// 	| parser string result |
// 	parser := scparser block.
// 	string := PEGStringScanner on: '[]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[||]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[:a :bcd :  e  :f | ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 4.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ | a   f d| ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 3.
// 	result parameters size should = 0.
// 	result statements size should = 0.
// 	string := PEGStringScanner on: '[ || b. d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. ^ d ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2.
// 	string := PEGStringScanner on: '[ || b. d. ]'.
// 	result := parser match: string.
// 	result class should = ASTBlock.
// 	result temporaries size should = 0.
// 	result parameters size should = 0.
// 	result statements size should = 2
*/
// testBlock
Object send120780 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21857, 0);
Object result = (Object)Eval((Object)send120780);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testBlockArguments)
/*
testBlockArguments
// 	| string result var parser |
// 	parser := scparser blockArguments.
// 	string := PEGStringScanner on: ':abcd :def'.
// 	result := parser match: string.
// 	string position should = 10.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result at: 1.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'.
// 	string := PEGStringScanner on: ' :  abcd:   def '.
// 	result := parser match: string.
// 	string position should = 16.
// 	result class should = OrderedCollection.
// 	result size should = 2.
// 	var := result first.
// 	var class should = ASTVariable.
// 	var name should = 'abcd'.
// 	var := result at: 2.
// 	var class should = ASTVariable.
// 	var name should = 'def'
*/
// testBlockArguments
Object send120781 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21819, 0);
Object result = (Object)Eval((Object)send120781);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCapitalIdentifier)
/*
testCapitalIdentifier
// 	| parser string |
// 	parser := scparser capitalIdentifier.
// 	string := PEGStringScanner on: 'Abcd '.
// 	(parser match: string) should = 'Abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: 'abcdD'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCapitalIdentifier
Object send120782 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21843, 0);
Object result = (Object)Eval((Object)send120782);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCascadedMessageExpression)
/*
testCascadedMessageExpression
// 	| parser string result expression |
// 	parser := scparser cascadedMessageExpression.
// 	string := PEGStringScanner on: '2+4; x: 3 b; d: 3 c: 4; x '.
// 	result := parser match: string.
// 	result class should = ASTMessageCascadeExpression.
// 	result receiver class should = ASTNumber.
// 	result cascades size should = 4.
// 	expression := result cascades at: 1.
// 	expression class should = ASTBinaryExpression.
// 	expression := result cascades at: 2.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 3.
// 	expression class should = ASTMessageExpression.
// 	expression := result cascades at: 4.
// 	expression class should = ASTUnaryExpression
*/
// testCascadedMessageExpression
Object send120783 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21824, 0);
Object result = (Object)Eval((Object)send120783);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacter)
/*
testCharacter
// 	| parser string |
// 	parser := scparser character.
// 	string := PEGStringScanner on: '--'.
// 	(parser match: string) should = '-'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '__'.
// 	(parser match: string) should = '_'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '4'.
// 	(parser match: string) should = '4'.
// 	string position should = 1.
// 	string := PEGStringScanner on: 'p'.
// 	(parser match: string) should = 'p'.
// 	string position should = 1.
// 	string := PEGStringScanner on: '&'.
// 	(parser match: string) should = '&'.
// 	string position should = 1.
// 	string := PEGStringScanner on: ''''.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testCharacter
Object send120784 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21863, 0);
Object result = (Object)Eval((Object)send120784);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testCharacterConstant)
/*
testCharacterConstant
// 	| parser string result |
// 	parser := scparser characterConstant.
// 	string := PEGStringScanner on: 'a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '$_'.
// 	result := parser match: string.
// 	result class should = ASTCharacter.
// 	result char should = $_.
// 	string position should = 2
*/
// testCharacterConstant
Object send120785 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21880, 0);
Object result = (Object)Eval((Object)send120785);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testComment)
/*
testComment
// 	| parser |
// 	parser := PEGParser named: 'COMMENT' parsing: scparser commentFormat.
// 	(parser parse: '"Test"') should not be isNil.
// 	(parser parse: '"Test') should be isNil
*/
// testComment
Object send120786 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21873, 0);
Object result = (Object)Eval((Object)send120786);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testExpression)
/*
testExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testExpression
Object send120787 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21876, 0);
Object result = (Object)Eval((Object)send120787);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testFinalExpression)
/*
testFinalExpression
// 	| parser string result |
// 	parser := scparser finalExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testFinalExpression
Object send120788 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21840, 0);
Object result = (Object)Eval((Object)send120788);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testIdentifier)
/*
testIdentifier
// 	| parser string |
// 	parser := scparser identifier.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'AbCd145 '.
// 	(parser match: string) should = 'AbCd145'.
// 	string position should = 7.
// 	string := PEGStringScanner on: '1a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testIdentifier
Object send120789 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21832, 0);
Object result = (Object)Eval((Object)send120789);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeyword)
/*
testKeyword
// 	| parser string |
// 	parser := scparser keyword.
// 	string := PEGStringScanner on: 'abcd: '.
// 	(parser match: string) should = 'abcd'.
// 	string position should = 5.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testKeyword
Object send120790 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21848, 0);
Object result = (Object)Eval((Object)send120790);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordExpression)
/*
testKeywordExpression
// 	| parser string result arg |
// 	parser := scparser keywordExpression.
// 	string := PEGStringScanner on: '2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	result selector class should = ASTKeywordSelector.
// 	result selector printString should = 'abc:def:ghi:'.
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	result receiver class should = ASTBinaryExpression.
// 	string position should = 29
*/
// testKeywordExpression
Object send120791 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21870, 0);
Object result = (Object)Eval((Object)send120791);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordMessageExpression)
/*
testKeywordMessageExpression
// 	| parser string result arg |
// 	parser := scparser keywordMessageExpression.
// 	string := PEGStringScanner on: 'abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTMessageExpression.
// 	result keywords asArray should = ((Array new: 3)
// 	at: 1 put: 'abc';
// 	at: 2 put: 'def';
// 	at: 3 put: 'ghi';
// 	yourself).
// 	arg := result arguments first.
// 	arg class should = ASTNumber.
// 	arg := result arguments at: 2.
// 	arg class should = ASTBinaryExpression.
// 	arg := result arguments at: 3.
// 	arg class should = ASTUnaryExpression.
// 	string position should = 25
*/
// testKeywordMessageExpression
Object send120792 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21833, 0);
Object result = (Object)Eval((Object)send120792);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testKeywordsArguments)
/*
testKeywordsArguments
// 	| parser string result |
// 	parser := scparser keywordsArguments.
// 	string := PEGStringScanner on: 'test: ab'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test').
// 	result parameters size should = 1.
// 	result parameters first should = (ASTVariable new name: 'ab').
// 	string position should = 8.
// 	string := PEGStringScanner on: 'bla a'.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: 'test: d bla: c boe'.
// 	result := parser match: string.
// 	result class should = ASTKeywordMessageDefinition.
// 	result keywords should = (OrderedCollection with: 'test' with: 'bla').
// 	result parameters size should = 2.
// 	result parameters first should = (ASTVariable new name: 'd').
// 	result parameters second should = (ASTVariable new name: 'c').
// 	string position should = 15
*/
// testKeywordsArguments
Object send120793 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21837, 0);
Object result = (Object)Eval((Object)send120793);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMessageExpression)
/*
testMessageExpression
// 	| parser string result |
// 
// 	parser := scparser messageExpression.
// 
// 	string := PEGStringScanner on: 'super+4'.
//  	result := (parser match: string).
// 	result class should = ASTBinaryExpression.
// 	result receiver class should = ASTSuper.
// 
// 	string := PEGStringScanner on: 'self a: 4 b: 3'.
//  	result := (parser match: string).
// 	result class should = ASTMessageExpression.
// 	result receiver class should = ASTSelf.
// 	
// 	string := PEGStringScanner on: '2 d'.
//  	result := (parser match: string).
// 	result class should = ASTUnaryExpression.
// 	result receiver class should = ASTNumber.
// 	result receiver asInteger should = 2.
// 	
*/
// testMessageExpression
Object send120794 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21855, 0);
Object result = (Object)Eval((Object)send120794);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod)
/*
testMethod
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			|x y z|
// 			<abc: 1 def: (2+2) ghi: (3 b)>
// 			<a: 4>
// 			<boe>
// 			1 + [ |a| a ] value: 3.
// 			^ 7 '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod
Object send120795 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21874, 0);
Object result = (Object)Eval((Object)send120795);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod2)
/*
testMethod2
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'a: b c: d
// 			"boe" |x y z| "test"
// 			<abc: 1 "bla"def: (2+2) ghi: (3 b)>
// 			<a: 4> "test"
// 			<boe>
// 			1 + [ |a| a ] value: "mmh" 3.
// 			^ 7 "biep". "bla" '.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message class should = ASTKeywordMessageDefinition.
// 	result temporaries size should = 3.
// 	result annotations size should = 3.
// 	result statements size should = 2
*/
// testMethod2
Object send120796 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21845, 0);
Object result = (Object)Eval((Object)send120796);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod3)
/*
testMethod3
// 	" We just allow fully MessageExpressions in our annotations. Semantic checker will catch this (probably :)) "
// 
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		^ 1
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'
*/
// testMethod3
Object send120797 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21846, 0);
Object result = (Object)Eval((Object)send120797);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testMethod4)
/*
testMethod4
// 	| parser string result |
// 	parser := scparser method.
// 	string := 'withA: a withB: b withC: c
// 		a := b > c.
// 		a ifTrue: [^ b]
// 		  ifFalse: [^ c]
// 	'.
// 	result := parser parse: string.
// 	result hasReturnExpression should be true.
// 	result class should = ASTMethod.
// 	result message asString should = 'withA:withB:withC:'.
// 	result statements last hasReturnExpression should be true.
*/
// testMethod4
Object send120798 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21828, 0);
Object result = (Object)Eval((Object)send120798);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testPrimary)
/*
testPrimary
// 	| parser string result |
// 	parser := scparser primary.	" primary variable"
// 	string := PEGStringScanner on: 'abc '.
// 	result := parser match: string.
// 	result class should = ASTVariable.
// 	result name should = 'abc'.
// 	string position should = 3.	" literal "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	result base should = '10'.
// 	string position should = 1
*/
// testPrimary
Object send120799 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21834, 0);
Object result = (Object)Eval((Object)send120799);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testReturn)
/*
testReturn
// 	| parser string result |
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression.
// 	string := PEGStringScanner on: '^ a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTReturnExpression.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testReturn
Object send120800 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21850, 0);
Object result = (Object)Eval((Object)send120800);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testScopedExpression)
/*
testScopedExpression
// 	| parser string result |
// 	parser := scparser expression.
// 	string := PEGStringScanner on: '(a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b) '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testScopedExpression
Object send120801 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21859, 0);
Object result = (Object)Eval((Object)send120801);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSelf)
/*
testSelf
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'self do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSelf.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ self do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSelf.
*/
// testSelf
Object send120802 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21878, 0);
Object result = (Object)Eval((Object)send120802);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSeparator)
/*
testSeparator
// 	| parser string |
// 	parser := scparser separator.
// 	string := PEGStringScanner on: '"Test"'.
// 	(parser match: string) should not be isNil.
// 	string position should = 6.
// 	string := PEGStringScanner on: ' 	"Test" "boe"	"" ab'.
// 	(parser match: string) should not be isNil.
// 	string position should = 18.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should not be isNil.
// 	string position should = 0
*/
// testSeparator
Object send120803 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21838, 0);
Object result = (Object)Eval((Object)send120803);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testString)
/*
testString
// 	| parser string |
// 	parser := scparser string.
// 	string := PEGStringScanner on: ''.
// 	(parser match: string) should be isNil.
// 	string position should = 0.
// 	string := PEGStringScanner on: '''abc'''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	(parser match: string) should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'''.
// 	(parser match: string) should = 'abc''d'.
// 	string position should = 8
*/
// testString
Object send120804 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21852, 0);
Object result = (Object)Eval((Object)send120804);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testStringConstant)
/*
testStringConstant
// 	| parser string result |
// 	parser := scparser stringConstant.
// 	string := PEGStringScanner on: '''abc'''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc'''''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc'.
// 	string position should = 5.
// 	string := PEGStringScanner on: '''abc''''d'' '''.
// 	result := parser match: string.
// 	result class should = ASTString.
// 	result string should = 'abc''d'.
// 	string position should = 8
*/
// testStringConstant
Object send120805 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21825, 0);
Object result = (Object)Eval((Object)send120805);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSubExpression)
/*
testSubExpression
// 	| parser string result |
// 	parser := scparser subExpression.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b '.
// 	(parser match: string) should be isNil.
// 	string := PEGStringScanner on: 'a:= b :=    c:= 2+4 abc: 1 def: 2+2 ghi: 3 b. '.
// 	result := parser match: string.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'a'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'b'.
// 	result := result expression.
// 	result class should = ASTAssignmentExpression.
// 	result variable class should = ASTVariable.
// 	result variable name should = 'c'.
// 	result expression class should = ASTMessageExpression
*/
// testSubExpression
Object send120806 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21881, 0);
Object result = (Object)Eval((Object)send120806);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSuper)
/*
testSuper
// 	| parser string message return |
// 	parser := scparser messageExpression.
// 	
// 	string := PEGStringScanner on: 'super do: this and: that'.
//  	message := parser match: string.
// 	message receiver class should = ASTSuper.
// 	
// 	parser := scparser return.
// 	string := PEGStringScanner on: '^ super do: this and: that'.
//  	return := parser match: string.
// 	return class should = ASTReturnExpression.
// 	return expression receiver class should = ASTSuper.
*/
// testSuper
Object send120807 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21875, 0);
Object result = (Object)Eval((Object)send120807);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolConstant)
/*
testSymbolConstant
// 	| parser string result |
// 	parser := scparser symbolConstant.
// 	string := PEGStringScanner on: '#abc'.
// 	result := parser match: string.
// 	result class should = ASTSymbol.
// 	result symbol should = 'abc'.
// 	string position should = 4
*/
// testSymbolConstant
Object send120808 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21877, 0);
Object result = (Object)Eval((Object)send120808);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testSymbolKeywords)
/*
testSymbolKeywords
// 	| parser string |
// 	parser := scparser symbolKeywords.
// 	string := PEGStringScanner on: 'abcd:def: '.
// 	(parser match: string) should = 'abcd:def:'.
// 	string position should = 9.
// 	string := PEGStringScanner on: 'abcd '.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testSymbolKeywords
Object send120809 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21847, 0);
Object result = (Object)Eval((Object)send120809);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testTemporaries)
/*
testTemporaries
// 	| parser string |
// 	parser := scparser temporaries.
// 	string := PEGStringScanner on: '|a b c|'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 7.
// 	string := PEGStringScanner on: '|  a b c  |'.
// 	((parser match: string) collect: #name) asArray should = ((Array new: 3)
// 	at: 1 put: 'a';
// 	at: 2 put: 'b';
// 	at: 3 put: 'c';
// 	yourself).
// 	string position should = 11
*/
// testTemporaries
Object send120810 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21826, 0);
Object result = (Object)Eval((Object)send120810);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryAndBinaryPrecedence)
/*
testUnaryAndBinaryPrecedence
// 	| parser ast |
// 	parser := scparser statements.
// 	
// 	ast := (parser match: (PEGStringScanner on: '2 fib + 3 ')) first.
// 	
// 	ast class should = ASTBinaryExpression.
// 	ast receiver class should = ASTUnaryExpression.
// 	ast receiver receiver class should = ASTNumber.
// 	ast receiver receiver number should = '2'.
// 	ast receiver selector asString should = 'fib'.
// 	
// 	ast selector asString should = '+'.
// 	
// 	ast argument class should = ASTNumber.
// 	ast argument number should = '3'.
// 	
// 	
*/
// testUnaryAndBinaryPrecedence
Object send120811 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21865, 0);
Object result = (Object)Eval((Object)send120811);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryExpression)
/*
testUnaryExpression
// 	| parser string result |
// 	parser := scparser unaryExpression.
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.
// 	string := PEGStringScanner on: 'abc'.
// 	(parser match: string) should be isNil
*/
// testUnaryExpression
Object send120812 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21851, 0);
Object result = (Object)Eval((Object)send120812);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnaryObjectDescription)
/*
testUnaryObjectDescription
// 	| parser string result |
// 	parser := scparser unaryObjectDescription.	" unary expression "
// 	string := PEGStringScanner on: 'abc def ghi '.
// 	result := parser match: string.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'ghi'.
// 	result := result receiver.
// 	result class should = ASTUnaryExpression.
// 	result selector class should = ASTUnarySelector.
// 	result selector selector printString should = 'def'.
// 	result receiver class should = ASTVariable.
// 	result receiver name should = 'abc'.
// 	string position should = 12.	" primary "
// 	string := PEGStringScanner on: '3'.
// 	result := parser match: string.
// 	result class should = ASTNumber.
// 	result number should = '3'.
// 	string position should = 1
*/
// testUnaryObjectDescription
Object send120813 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21842, 0);
Object result = (Object)Eval((Object)send120813);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testUnarySelector)
/*
testUnarySelector
// 	| parser string result |
// 	parser := scparser unarySelector.
// 	string := PEGStringScanner on: 'abcd bla'.
// 	result := parser match: string.
// 	result class should = ASTUnarySelector.
// 	result selector printString should = 'abcd'.
// 	string position should = 4.
// 	string := PEGStringScanner on: 'abcd: bla'.
// 	(parser match: string) should be isNil.
// 	string position should = 0
*/
// testUnarySelector
Object send120814 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21858, 0);
Object result = (Object)Eval((Object)send120814);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(SCParserTest_testParseTestMethods)
/*
testParseTestMethods
// 	<temps: 6 annotations: 1 statements: 3>
// 	| parser string result code annotations annotation |
// 	parser := scparser method.
// 	self class methodDict keys do: [ :key | 
// 			Transcript show: key; cr.
// 			code := self class sourceCodeAt: key.
// 			string := PEGStringScanner on: code separator: scparser separator.
// 			result := parser match: string.
// 			result class should = ASTMethod.
// 			annotations := result annotations select:[ :ann | 
// 				ann class = ASTKeywordAnnotation 
// 					and: [ ann keywords asArray = ((Array new: 3)
// 							at: 1 put: #temps;
// 							at: 2 put: #annotations;
// 							at: 3 put: #statements;
// 							yourself) ] ].
// 			annotations size = 1 ifTrue:
// 					[ annotation := annotations first.
// 					result temporaries size = annotation arguments first asInteger.
// 					result annotations size = (annotation arguments at: 2) asInteger.
// 					result statements size = (annotation arguments at: 3) asInteger ].
// 			"string atEnd should be true."
// 			result 
// 	]	"inspect"
*/
// testParseTestMethods
Object send120815 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21831, 0);
Object result = (Object)Eval((Object)send120815);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)SCParserTest_test_Class_Instance)->constant);
}

void SCParserTest_setUp() {
// setUp
Object send120816 = (Object)new_AST_Send((Object)SCParserTest_test_Class_Instance, (Object)symbol21867, 0);
Eval((Object)send120816);
}

/* ========================================================================= */

TEST_SUITE(SCParserTest,
{
    SCParserTest_create_ast();
    SCParserTest_TestCase_Class =(Type_Class)class2770;
    SCParserTest_test_Class_Instance =(Object)new_AST_Constant((Object)instantiate((Type_Class)SCParserTest_TestCase_Class));

    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacterConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testTemporaries);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCharacter);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCascadedMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAssignmentExpressions);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlockArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testFinalExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod3);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordsArguments);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryMessageDefinition);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testScopedExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testArray);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeyword);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testKeywordExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testPrimary);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSubExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testIdentifier);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryArgument);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_setUp);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testStringConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testString);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSeparator);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolKeywords);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod2);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnarySelector);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryObjectDescription);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testComment);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryAndBinaryPrecedence);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMessageExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testMethod4);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSelf);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testUnaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testAnnotation);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testReturn);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSuper);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testSymbolConstant);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testParseTestMethods);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBlock);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testBinaryExpression);
    SCParserTest_setUp();
    RUN_TEST(SCParserTest_testCapitalIdentifier);
})