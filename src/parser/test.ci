// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
<<<<<<< HEAD
Object classreference211;
Object symbol390;
Object objectlayout103;
Object instancevariable257;
Object class206;
Object localvariable744;
Object array703;
Object assign434;
Object method1638;
Object symbol391;
Object methodclosure1629;
Object method1639;
Object symbol392;
Object methodclosure1630;
Object smallint2163;
Object constant2739;
Object method1640;
Object symbol393;
Object methodclosure1631;
Object symbol358;
Object objectlayout104;
Object instancevariable258;
Object class207;
Object localvariable745;
Object array704;
Object assign435;
Object method1641;
Object symbol394;
Object methodclosure1632;
Object method1642;
Object symbol395;
Object methodclosure1633;
Object smallint2164;
Object constant2740;
Object super6;
Object send4814;
Object method1643;
Object methodclosure1634;
Object classreference212;
Object symbol366;
Object arraylayout42;
Object instancevariable259;
Object instancevariable260;
Object instancevariable261;
Object class208;
Object localvariable746;
Object array705;
Object assign436;
Object method1644;
Object methodclosure1635;
Object method1645;
Object methodclosure1636;
Object method1646;
Object symbol397;
Object methodclosure1637;
Object localvariable747;
Object array706;
Object assign437;
Object method1647;
Object symbol396;
Object methodclosure1638;
Object localvariable748;
Object array707;
Object assign438;
Object method1648;
Object methodclosure1639;
Object method1649;
Object methodclosure1640;
Object classreference213;
Object classreference214;
Object symbol351;
Object class209;
Object symbol398;
Object constant2741;
Object character158;
Object constant2742;
Object send4815;
Object method1650;
Object symbol356;
Object methodclosure1641;
Object method1651;
Object symbol384;
Object methodclosure1642;
Object localvariable749;
Object array708;
Object symbol399;
Object send4816;
Object block284;
Object send4817;
Object method1652;
Object symbol376;
Object methodclosure1643;
Object localvariable750;
Object array709;
Object smallint2165;
Object constant2743;
Object assign439;
Object method1653;
Object symbol368;
Object methodclosure1644;
Object smallint2166;
Object constant2744;
Object method1654;
Object symbol386;
Object methodclosure1645;
Object smallint2167;
Object constant2745;
Object smallint2168;
Object constant2746;
Object send4818;
Object method1655;
Object symbol378;
Object methodclosure1646;
Object localvariable751;
Object array710;
Object smallint2169;
Object constant2747;
Object send4819;
Object method1656;
Object symbol371;
Object methodclosure1647;
Object send4820;
Object method1657;
Object symbol388;
Object methodclosure1648;
Object method1658;
Object symbol361;
Object methodclosure1649;
Object localvariable752;
Object array711;
Object smallint2170;
Object constant2748;
Object send4821;
Object assign440;
Object smallint2171;
Object constant2749;
Object smallint2172;
Object constant2750;
Object send4822;
Object smallint2173;
Object constant2751;
Object smallint2174;
Object constant2752;
Object send4823;
Object smallint2175;
Object constant2753;
Object send4824;
Object smallint2176;
Object constant2754;
Object send4825;
Object send4826;
Object method1659;
Object symbol381;
Object methodclosure1650;
Object smallint2177;
Object constant2755;
Object smallint2178;
Object constant2756;
Object send4827;
Object method1660;
Object symbol365;
Object methodclosure1651;
Object character159;
Object constant2757;
Object character160;
Object constant2758;
Object send4828;
Object method1661;
Object symbol363;
Object methodclosure1652;
Object symbol400;
Object constant2759;
Object constant2760;
Object send4829;
Object method1662;
Object symbol355;
Object methodclosure1653;
Object smallint2179;
Object constant2761;
Object smallint2180;
Object constant2762;
Object send4830;
Object method1663;
Object symbol383;
Object methodclosure1654;
Object variable45;
Object array712;
Object smallint2181;
Object constant2763;
Object smallint2182;
Object constant2764;
Object send4831;
Object smallint2183;
Object constant2765;
Object send4832;
Object block285;
Object smallint2184;
Object constant2766;
Object send4833;
Object block286;
Object send4834;
Object block287;
Object send4835;
Object method1664;
Object symbol375;
Object methodclosure1655;
Object localvariable753;
Object array713;
Object send4836;
Object assign441;
Object localvariable754;
Object array714;
Object smallint2185;
Object constant2767;
Object send4837;
Object smallint2186;
Object constant2768;
Object send4838;
Object smallint2187;
Object constant2769;
Object send4839;
Object block288;
Object send4840;
Object send4841;
Object smallint2188;
Object constant2770;
Object send4842;
Object send4843;
Object send4844;
Object smallint2189;
Object constant2771;
Object send4845;
Object send4846;
Object send4847;
Object smallint2190;
Object constant2772;
Object send4848;
Object send4849;
Object send4850;
Object send4851;
Object send4852;
Object send4853;
Object send4854;
Object method1665;
Object symbol367;
Object methodclosure1656;
Object method1666;
Object symbol357;
Object methodclosure1657;
Object localvariable755;
Object localvariable756;
Object localvariable757;
Object array715;
Object send4855;
Object send4856;
Object method1667;
Object symbol385;
Object methodclosure1658;
Object localvariable758;
Object array716;
Object send4857;
Object assign442;
Object send4858;
Object smallint2191;
Object constant2773;
Object send4859;
Object send4860;
Object method1668;
Object symbol377;
Object methodclosure1659;
Object send4861;
Object method1669;
Object symbol369;
Object methodclosure1660;
Object string362;
Object constant2774;
Object string363;
Object constant2775;
Object send4862;
Object method1670;
Object symbol370;
Object methodclosure1661;
Object localvariable759;
Object array717;
Object send4863;
Object assign443;
Object smallint2192;
Object constant2776;
Object send4864;
Object send4865;
Object smallint2193;
Object constant2777;
Object send4866;
Object send4867;
Object send4868;
Object send4869;
Object send4870;
Object smallint2194;
Object constant2778;
Object send4871;
Object send4872;
Object smallint2195;
Object constant2779;
Object send4873;
Object send4874;
Object send4875;
Object smallint2196;
Object constant2780;
Object send4876;
Object send4877;
Object method1671;
Object symbol359;
Object methodclosure1662;
Object constant2781;
Object method1672;
Object symbol387;
Object methodclosure1663;
Object smallint2197;
Object constant2782;
Object smallint2198;
Object constant2783;
Object send4878;
Object method1673;
Object symbol379;
Object methodclosure1664;
Object character161;
Object constant2784;
Object method1674;
Object symbol360;
Object methodclosure1665;
Object symbol401;
Object constant2785;
Object send4879;
Object method1675;
Object symbol380;
Object methodclosure1666;
Object string364;
Object constant2786;
Object method1676;
Object symbol372;
Object methodclosure1667;
Object character162;
Object constant2787;
Object string365;
Object constant2788;
Object send4880;
Object method1677;
Object symbol364;
Object methodclosure1668;
Object smallint2199;
Object constant2789;
Object method1678;
Object symbol389;
Object methodclosure1669;
Object smallint2200;
Object constant2790;
Object smallint2201;
Object constant2791;
Object send4881;
Object smallint2202;
Object constant2792;
Object send4882;
Object smallint2203;
Object constant2793;
Object send4883;
Object method1679;
Object symbol362;
Object methodclosure1670;
Object smallint2204;
Object constant2794;
Object smallint2205;
Object constant2795;
Object send4884;
Object method1680;
Object symbol382;
Object methodclosure1671;
Object localvariable760;
Object array718;
Object symbol373;
Object objectlayout105;
Object instancevariable262;
Object instancevariable263;
Object instancevariable264;
Object class210;
Object localvariable761;
Object array719;
Object assign444;
Object method1681;
Object methodclosure1672;
Object method1682;
Object methodclosure1673;
Object method1683;
Object methodclosure1674;
Object localvariable762;
Object array720;
Object assign445;
Object method1684;
Object methodclosure1675;
Object localvariable763;
Object array721;
Object assign446;
Object method1685;
Object methodclosure1676;
Object method1686;
Object methodclosure1677;
Object classreference215;
Object send4885;
Object assign447;
Object localvariable764;
Object array722;
Object smallint2206;
Object constant2796;
Object send4886;
Object smallint2207;
Object constant2797;
Object send4887;
Object smallint2208;
Object constant2798;
Object send4888;
Object block289;
Object send4889;
Object send4890;
Object smallint2209;
Object constant2799;
Object send4891;
Object send4892;
Object send4893;
Object smallint2210;
Object constant2800;
Object send4894;
Object send4895;
Object send4896;
Object smallint2211;
Object constant2801;
Object send4897;
Object send4898;
Object send4899;
Object send4900;
Object send4901;
Object send4902;
Object send4903;
Object method1687;
Object symbol374;
Object methodclosure1678;
Object classreference216;


void create_ast() {
classreference211 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
symbol390 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout103 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable257 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout103)->values[0] = instancevariable257;
class206 = (Object)new_Class(Type_Object_Class, objectlayout103);
((Type_Class)class206)->name = (Type_Symbol)symbol390;

// SuperClassTestClass>>a:
localvariable744 = (Object)new_AST_Variable_named(L"anObject");
array703 = (Object)new_Type_Array_with(1, localvariable744);
assign434 = (Object)new_AST_Assign((Object)instancevariable257, (Object)localvariable744);
method1638 = (Object)new_AST_Method_with((Type_Array)array703, (Type_Array)empty_Type_Array, 2, assign434, Self);
symbol391 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure1629 = (Object)new_Runtime_MethodClosure(method1638);
store_method((Type_Class)class206, (Type_Symbol)symbol391, (Runtime_MethodClosure)methodclosure1629);

// SuperClassTestClass>>a
method1639 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable257);
symbol392 = (Object)new_Type_Symbol_cached(L"a");
methodclosure1630 = (Object)new_Runtime_MethodClosure(method1639);
store_method((Type_Class)class206, (Type_Symbol)symbol392, (Runtime_MethodClosure)methodclosure1630);

// SuperClassTestClass>>test
smallint2163 = (Object)new_Type_SmallInt(10);
constant2739 = (Object)new_AST_Constant((Object)smallint2163);
method1640 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2739);
symbol393 = (Object)new_Type_Symbol_cached(L"test");
methodclosure1631 = (Object)new_Runtime_MethodClosure(method1640);
store_method((Type_Class)class206, (Type_Symbol)symbol393, (Runtime_MethodClosure)methodclosure1631);
symbol358 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout104 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable258 = (Object)new_AST_InstVariable(0, L"b");
((Type_Array)objectlayout104)->values[0] = instancevariable258;
class207 = (Object)new_Class(class206, objectlayout104);
((Type_Class)class207)->name = (Type_Symbol)symbol358;

// ChildClassTestClass>>b:
localvariable745 = (Object)new_AST_Variable_named(L"anObject");
array704 = (Object)new_Type_Array_with(1, localvariable745);
assign435 = (Object)new_AST_Assign((Object)instancevariable258, (Object)localvariable745);
method1641 = (Object)new_AST_Method_with((Type_Array)array704, (Type_Array)empty_Type_Array, 2, assign435, Self);
symbol394 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure1632 = (Object)new_Runtime_MethodClosure(method1641);
store_method((Type_Class)class207, (Type_Symbol)symbol394, (Runtime_MethodClosure)methodclosure1632);

// ChildClassTestClass>>b
method1642 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable258);
symbol395 = (Object)new_Type_Symbol_cached(L"b");
methodclosure1633 = (Object)new_Runtime_MethodClosure(method1642);
store_method((Type_Class)class207, (Type_Symbol)symbol395, (Runtime_MethodClosure)methodclosure1633);

// ChildClassTestClass>>test
smallint2164 = (Object)new_Type_SmallInt(10);
constant2740 = (Object)new_AST_Constant((Object)smallint2164);
super6 = (Object)new_AST_Super(symbol393, 0);
send4814 = (Object)new_AST_Send((Object)constant2740, (Object)SMB__times, 1, super6);
method1643 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4814);
methodclosure1634 = (Object)new_Runtime_MethodClosure(method1643);
store_method((Type_Class)class207, (Type_Symbol)symbol393, (Runtime_MethodClosure)methodclosure1634);
classreference212 = (Object)new_Organization_ClassReference((Type_Class)class207);
symbol366 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout42 = (Object)create_type_with_vars(Type_ArrayLayout, 3);
instancevariable259 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout42)->values[0] = instancevariable259;instancevariable260 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout42)->values[1] = instancevariable260;instancevariable261 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout42)->values[2] = instancevariable261;class208 = (Object)new_Class(Type_Object_Class, arraylayout42);
((Type_Class)class208)->name = (Type_Symbol)symbol366;

// StandardVariableTestClass>>a:
localvariable746 = (Object)new_AST_Variable_named(L"anObject");
array705 = (Object)new_Type_Array_with(1, localvariable746);
assign436 = (Object)new_AST_Assign((Object)instancevariable259, (Object)localvariable746);
method1644 = (Object)new_AST_Method_with((Type_Array)array705, (Type_Array)empty_Type_Array, 2, assign436, Self);
methodclosure1635 = (Object)new_Runtime_MethodClosure(method1644);
store_method((Type_Class)class208, (Type_Symbol)symbol391, (Runtime_MethodClosure)methodclosure1635);

// StandardVariableTestClass>>b
method1645 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable260);
methodclosure1636 = (Object)new_Runtime_MethodClosure(method1645);
store_method((Type_Class)class208, (Type_Symbol)symbol395, (Runtime_MethodClosure)methodclosure1636);

// StandardVariableTestClass>>c
method1646 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable261);
symbol397 = (Object)new_Type_Symbol_cached(L"c");
methodclosure1637 = (Object)new_Runtime_MethodClosure(method1646);
store_method((Type_Class)class208, (Type_Symbol)symbol397, (Runtime_MethodClosure)methodclosure1637);

// StandardVariableTestClass>>c:
localvariable747 = (Object)new_AST_Variable_named(L"anObject");
array706 = (Object)new_Type_Array_with(1, localvariable747);
assign437 = (Object)new_AST_Assign((Object)instancevariable261, (Object)localvariable747);
method1647 = (Object)new_AST_Method_with((Type_Array)array706, (Type_Array)empty_Type_Array, 2, assign437, Self);
symbol396 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure1638 = (Object)new_Runtime_MethodClosure(method1647);
store_method((Type_Class)class208, (Type_Symbol)symbol396, (Runtime_MethodClosure)methodclosure1638);

// StandardVariableTestClass>>b:
localvariable748 = (Object)new_AST_Variable_named(L"anObject");
array707 = (Object)new_Type_Array_with(1, localvariable748);
assign438 = (Object)new_AST_Assign((Object)instancevariable260, (Object)localvariable748);
method1648 = (Object)new_AST_Method_with((Type_Array)array707, (Type_Array)empty_Type_Array, 2, assign438, Self);
methodclosure1639 = (Object)new_Runtime_MethodClosure(method1648);
store_method((Type_Class)class208, (Type_Symbol)symbol394, (Runtime_MethodClosure)methodclosure1639);

// StandardVariableTestClass>>a
method1649 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable259);
methodclosure1640 = (Object)new_Runtime_MethodClosure(method1649);
store_method((Type_Class)class208, (Type_Symbol)symbol392, (Runtime_MethodClosure)methodclosure1640);
classreference213 = (Object)new_Organization_ClassReference((Type_Class)class208);
classreference214 = (Object)new_Organization_ClassReference((Type_Class)class206);
symbol351 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class209 = (Object)new_Class(Type_Object_Class, empty_object_layout);
((Type_Class)class209)->name = (Type_Symbol)symbol351;

// BridgeTest>>tmSymbolCharacterEquals
symbol398 = (Object)new_Type_Symbol_cached(L"S");
constant2741 = (Object)new_AST_Constant((Object)symbol398);
character158 = (Object)new_Type_Character(L'S');
constant2742 = (Object)new_AST_Constant((Object)character158);
send4815 = (Object)new_AST_Send((Object)constant2741, (Object)SMB__equal, 1, constant2742);
method1650 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4815);
symbol356 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure1641 = (Object)new_Runtime_MethodClosure(method1650);
store_method((Type_Class)class209, (Type_Symbol)symbol356, (Runtime_MethodClosure)methodclosure1641);

// BridgeTest>>tmBooleanTrue
method1651 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol384 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure1642 = (Object)new_Runtime_MethodClosure(method1651);
store_method((Type_Class)class209, (Type_Symbol)symbol384, (Runtime_MethodClosure)methodclosure1642);

// BridgeTest>>assert:
localvariable749 = (Object)new_AST_Variable_named(L"bool");
array708 = (Object)new_Type_Array_with(1, localvariable749);
symbol399 = (Object)new_Type_Symbol_cached(L"fail");
send4816 = (Object)new_AST_Send((Object)Self, (Object)symbol399, 0);
block284 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send4816);
send4817 = (Object)new_AST_Send((Object)localvariable749, (Object)SMB_ifFalse_, 1, block284);
method1652 = (Object)new_AST_Method_with((Type_Array)array708, (Type_Array)empty_Type_Array, 1, send4817);
symbol376 = (Object)new_Type_Symbol_cached(L"assert:");
methodclosure1643 = (Object)new_Runtime_MethodClosure(method1652);
store_method((Type_Class)class209, (Type_Symbol)symbol376, (Runtime_MethodClosure)methodclosure1643);

// BridgeTest>>tmLocalVariable
localvariable750 = (Object)new_AST_Variable_named(L"a");
array709 = (Object)new_Type_Array_with(1, localvariable750);
smallint2165 = (Object)new_Type_SmallInt(1);
constant2743 = (Object)new_AST_Constant((Object)smallint2165);
assign439 = (Object)new_AST_Assign((Object)localvariable750, (Object)constant2743);
method1653 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array709, 2, assign439, localvariable750);
symbol368 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure1644 = (Object)new_Runtime_MethodClosure(method1653);
store_method((Type_Class)class209, (Type_Symbol)symbol368, (Runtime_MethodClosure)methodclosure1644);

// BridgeTest>>tmSimpleReturn
smallint2166 = (Object)new_Type_SmallInt(1);
constant2744 = (Object)new_AST_Constant((Object)smallint2166);
method1654 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2744);
symbol386 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure1645 = (Object)new_Runtime_MethodClosure(method1654);
store_method((Type_Class)class209, (Type_Symbol)symbol386, (Runtime_MethodClosure)methodclosure1645);

// BridgeTest>>tmNumberDiv
smallint2167 = (Object)new_Type_SmallInt(4);
constant2745 = (Object)new_AST_Constant((Object)smallint2167);
smallint2168 = (Object)new_Type_SmallInt(2);
constant2746 = (Object)new_AST_Constant((Object)smallint2168);
send4818 = (Object)new_AST_Send((Object)constant2745, (Object)SMB__divide, 1, constant2746);
method1655 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4818);
symbol378 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure1646 = (Object)new_Runtime_MethodClosure(method1655);
store_method((Type_Class)class209, (Type_Symbol)symbol378, (Runtime_MethodClosure)methodclosure1646);

// BridgeTest>>tmMethodArgument:
localvariable751 = (Object)new_AST_Variable_named(L"arg");
array710 = (Object)new_Type_Array_with(1, localvariable751);
smallint2169 = (Object)new_Type_SmallInt(1);
constant2747 = (Object)new_AST_Constant((Object)smallint2169);
send4819 = (Object)new_AST_Send((Object)localvariable751, (Object)SMB__plus, 1, constant2747);
method1656 = (Object)new_AST_Method_with((Type_Array)array710, (Type_Array)empty_Type_Array, 1, send4819);
symbol371 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure1647 = (Object)new_Runtime_MethodClosure(method1656);
store_method((Type_Class)class209, (Type_Symbol)symbol371, (Runtime_MethodClosure)methodclosure1647);

// BridgeTest>>tmClassReferenceReturn
send4820 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
method1657 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4820);
symbol388 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure1648 = (Object)new_Runtime_MethodClosure(method1657);
store_method((Type_Class)class209, (Type_Symbol)symbol388, (Runtime_MethodClosure)methodclosure1648);

// BridgeTest>>tmFibonacci
method1658 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol361 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure1649 = (Object)new_Runtime_MethodClosure(method1658);
store_method((Type_Class)class209, (Type_Symbol)symbol361, (Runtime_MethodClosure)methodclosure1649);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable752 = (Object)new_AST_Variable_named(L"instance");
array711 = (Object)new_Type_Array_with(1, localvariable752);
smallint2170 = (Object)new_Type_SmallInt(100);
constant2748 = (Object)new_AST_Constant((Object)smallint2170);
send4821 = (Object)new_AST_Send((Object)classreference213, (Object)SMB_basicNew_, 1, constant2748);
assign440 = (Object)new_AST_Assign((Object)localvariable752, (Object)send4821);
smallint2171 = (Object)new_Type_SmallInt(1);
constant2749 = (Object)new_AST_Constant((Object)smallint2171);
smallint2172 = (Object)new_Type_SmallInt(1);
constant2750 = (Object)new_AST_Constant((Object)smallint2172);
send4822 = (Object)new_AST_Send((Object)localvariable752, (Object)SMB_at_put_, 2, constant2749, constant2750);
smallint2173 = (Object)new_Type_SmallInt(99);
constant2751 = (Object)new_AST_Constant((Object)smallint2173);
smallint2174 = (Object)new_Type_SmallInt(100);
constant2752 = (Object)new_AST_Constant((Object)smallint2174);
send4823 = (Object)new_AST_Send((Object)localvariable752, (Object)SMB_at_put_, 2, constant2751, constant2752);
smallint2175 = (Object)new_Type_SmallInt(1);
constant2753 = (Object)new_AST_Constant((Object)smallint2175);
send4824 = (Object)new_AST_Send((Object)localvariable752, (Object)SMB_at_, 1, constant2753);
smallint2176 = (Object)new_Type_SmallInt(1);
constant2754 = (Object)new_AST_Constant((Object)smallint2176);
send4825 = (Object)new_AST_Send((Object)send4824, (Object)SMB__equal, 1, constant2754);
send4826 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4825);
method1659 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array711, 5, assign440, send4822, send4823, send4826, Self);
symbol381 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure1650 = (Object)new_Runtime_MethodClosure(method1659);
store_method((Type_Class)class209, (Type_Symbol)symbol381, (Runtime_MethodClosure)methodclosure1650);

// BridgeTest>>tmNumberEquals
smallint2177 = (Object)new_Type_SmallInt(1);
constant2755 = (Object)new_AST_Constant((Object)smallint2177);
smallint2178 = (Object)new_Type_SmallInt(1);
constant2756 = (Object)new_AST_Constant((Object)smallint2178);
send4827 = (Object)new_AST_Send((Object)constant2755, (Object)SMB__equal, 1, constant2756);
method1660 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4827);
symbol365 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure1651 = (Object)new_Runtime_MethodClosure(method1660);
store_method((Type_Class)class209, (Type_Symbol)symbol365, (Runtime_MethodClosure)methodclosure1651);

// BridgeTest>>tmCharacterEquals
character159 = (Object)new_Type_Character(L'C');
constant2757 = (Object)new_AST_Constant((Object)character159);
character160 = (Object)new_Type_Character(L'C');
constant2758 = (Object)new_AST_Constant((Object)character160);
send4828 = (Object)new_AST_Send((Object)constant2757, (Object)SMB__equal, 1, constant2758);
method1661 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4828);
symbol363 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure1652 = (Object)new_Runtime_MethodClosure(method1661);
store_method((Type_Class)class209, (Type_Symbol)symbol363, (Runtime_MethodClosure)methodclosure1652);

// BridgeTest>>tmSymbolEquals
symbol400 = (Object)new_Type_Symbol_cached(L"Symbol");
constant2759 = (Object)new_AST_Constant((Object)symbol400);
constant2760 = (Object)new_AST_Constant((Object)symbol400);
send4829 = (Object)new_AST_Send((Object)constant2759, (Object)SMB__equal, 1, constant2760);
method1662 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4829);
symbol355 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure1653 = (Object)new_Runtime_MethodClosure(method1662);
store_method((Type_Class)class209, (Type_Symbol)symbol355, (Runtime_MethodClosure)methodclosure1653);

// BridgeTest>>tmNumberSubtract
smallint2179 = (Object)new_Type_SmallInt(2);
constant2761 = (Object)new_AST_Constant((Object)smallint2179);
smallint2180 = (Object)new_Type_SmallInt(1);
constant2762 = (Object)new_AST_Constant((Object)smallint2180);
send4830 = (Object)new_AST_Send((Object)constant2761, (Object)SMB__minus, 1, constant2762);
method1663 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4830);
symbol383 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure1654 = (Object)new_Runtime_MethodClosure(method1663);
store_method((Type_Class)class209, (Type_Symbol)symbol383, (Runtime_MethodClosure)methodclosure1654);

// BridgeTest>>tmExtendedReturn
variable45 = (Object)new_AST_Variable_named(L"return");
array712 = (Object)new_Type_Array_with(1, variable45);
smallint2181 = (Object)new_Type_SmallInt(1);
constant2763 = (Object)new_AST_Constant((Object)smallint2181);
smallint2182 = (Object)new_Type_SmallInt(2);
constant2764 = (Object)new_AST_Constant((Object)smallint2182);
send4831 = (Object)new_AST_Send((Object)constant2763, (Object)SMB__gt, 1, constant2764);
smallint2183 = (Object)new_Type_SmallInt(1);
constant2765 = (Object)new_AST_Constant((Object)smallint2183);
send4832 = (Object)new_AST_Send((Object)variable45, (Object)SMB_escape_, 1, constant2765);
block285 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4832);
smallint2184 = (Object)new_Type_SmallInt(2);
constant2766 = (Object)new_AST_Constant((Object)smallint2184);
send4833 = (Object)new_AST_Send((Object)variable45, (Object)SMB_escape_, 1, constant2766);
block286 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4833);
send4834 = (Object)new_AST_Send((Object)send4831, (Object)SMB_ifTrue_ifFalse_, 2, block285, block286);
block287 = (Object)new_AST_Block_with((Type_Array)array712, (Type_Array)empty_Type_Array, 1, 2, send4834, Self);
send4835 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block287);
method1664 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4835);
symbol375 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure1655 = (Object)new_Runtime_MethodClosure(method1664);
store_method((Type_Class)class209, (Type_Symbol)symbol375, (Runtime_MethodClosure)methodclosure1655);

// BridgeTest>>tmVariableInstanceCreation
localvariable753 = (Object)new_AST_Variable_named(L"instance");
array713 = (Object)new_Type_Array_with(1, localvariable753);
send4836 = (Object)new_AST_Send((Object)classreference213, (Object)SMB_basicNew, 0);
assign441 = (Object)new_AST_Assign((Object)localvariable753, (Object)send4836);
localvariable754 = (Object)new_AST_Variable_named(L"receiver");
array714 = (Object)new_Type_Array_with(1, localvariable754);
smallint2185 = (Object)new_Type_SmallInt(1);
constant2767 = (Object)new_AST_Constant((Object)smallint2185);
send4837 = (Object)new_AST_Send((Object)localvariable754, (Object)symbol391, 1, constant2767);
smallint2186 = (Object)new_Type_SmallInt(2);
constant2768 = (Object)new_AST_Constant((Object)smallint2186);
send4838 = (Object)new_AST_Send((Object)localvariable754, (Object)symbol394, 1, constant2768);
smallint2187 = (Object)new_Type_SmallInt(3);
constant2769 = (Object)new_AST_Constant((Object)smallint2187);
send4839 = (Object)new_AST_Send((Object)localvariable754, (Object)symbol396, 1, constant2769);
block288 = (Object)new_AST_Block_with((Type_Array)array714, (Type_Array)empty_Type_Array, 1, 3, send4837, send4838, send4839);
send4840 = (Object)new_AST_Send((Object)block288, (Object)SMB_value_, 1, localvariable753);
send4841 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol392, 0);
smallint2188 = (Object)new_Type_SmallInt(1);
constant2770 = (Object)new_AST_Constant((Object)smallint2188);
send4842 = (Object)new_AST_Send((Object)send4841, (Object)SMB__equal, 1, constant2770);
send4843 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4842);
send4844 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol395, 0);
smallint2189 = (Object)new_Type_SmallInt(2);
constant2771 = (Object)new_AST_Constant((Object)smallint2189);
send4845 = (Object)new_AST_Send((Object)send4844, (Object)SMB__equal, 1, constant2771);
send4846 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4845);
send4847 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol397, 0);
smallint2190 = (Object)new_Type_SmallInt(3);
constant2772 = (Object)new_AST_Constant((Object)smallint2190);
send4848 = (Object)new_AST_Send((Object)send4847, (Object)SMB__equal, 1, constant2772);
send4849 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4848);
send4850 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol392, 0);
send4851 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol395, 0);
send4852 = (Object)new_AST_Send((Object)send4850, (Object)SMB__plus, 1, send4851);
send4853 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol397, 0);
send4854 = (Object)new_AST_Send((Object)send4852, (Object)SMB__plus, 1, send4853);
method1665 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array713, 6, assign441, send4840, send4843, send4846, send4849, send4854);
symbol367 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure1656 = (Object)new_Runtime_MethodClosure(method1665);
store_method((Type_Class)class209, (Type_Symbol)symbol367, (Runtime_MethodClosure)methodclosure1656);

// BridgeTest>>tmBooleanFalse
method1666 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol357 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure1657 = (Object)new_Runtime_MethodClosure(method1666);
store_method((Type_Class)class209, (Type_Symbol)symbol357, (Runtime_MethodClosure)methodclosure1657);

// BridgeTest>>tmMethodArguments:with:with:
localvariable755 = (Object)new_AST_Variable_named(L"arg1");
localvariable756 = (Object)new_AST_Variable_named(L"arg2");
localvariable757 = (Object)new_AST_Variable_named(L"arg3");
array715 = (Object)new_Type_Array_with(3, localvariable755, localvariable756, localvariable757);
send4855 = (Object)new_AST_Send((Object)localvariable755, (Object)SMB__concat, 1, localvariable756);
send4856 = (Object)new_AST_Send((Object)send4855, (Object)SMB__concat, 1, localvariable757);
method1667 = (Object)new_AST_Method_with((Type_Array)array715, (Type_Array)empty_Type_Array, 1, send4856);
symbol385 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure1658 = (Object)new_Runtime_MethodClosure(method1667);
store_method((Type_Class)class209, (Type_Symbol)symbol385, (Runtime_MethodClosure)methodclosure1658);

// BridgeTest>>tmSuperClassSuperSend
localvariable758 = (Object)new_AST_Variable_named(L"instance");
array716 = (Object)new_Type_Array_with(1, localvariable758);
send4857 = (Object)new_AST_Send((Object)classreference212, (Object)SMB_basicNew, 0);
assign442 = (Object)new_AST_Assign((Object)localvariable758, (Object)send4857);
send4858 = (Object)new_AST_Send((Object)localvariable758, (Object)symbol393, 0);
smallint2191 = (Object)new_Type_SmallInt(100);
constant2773 = (Object)new_AST_Constant((Object)smallint2191);
send4859 = (Object)new_AST_Send((Object)send4858, (Object)SMB__equal, 1, constant2773);
send4860 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4859);
method1668 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array716, 2, assign442, send4860);
symbol377 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure1659 = (Object)new_Runtime_MethodClosure(method1668);
store_method((Type_Class)class209, (Type_Symbol)symbol377, (Runtime_MethodClosure)methodclosure1659);

// BridgeTest>>tmBooleanEquals
send4861 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, True_Const);
method1669 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4861);
symbol369 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure1660 = (Object)new_Runtime_MethodClosure(method1669);
store_method((Type_Class)class209, (Type_Symbol)symbol369, (Runtime_MethodClosure)methodclosure1660);

// BridgeTest>>tmStringEquals
string362 = (Object)new_Type_String(L"String");
constant2774 = (Object)new_AST_Constant((Object)string362);
string363 = (Object)new_Type_String(L"String");
constant2775 = (Object)new_AST_Constant((Object)string363);
send4862 = (Object)new_AST_Send((Object)constant2774, (Object)SMB__equal, 1, constant2775);
method1670 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4862);
symbol370 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure1661 = (Object)new_Runtime_MethodClosure(method1670);
store_method((Type_Class)class209, (Type_Symbol)symbol370, (Runtime_MethodClosure)methodclosure1661);

// BridgeTest>>tmSuperClass
localvariable759 = (Object)new_AST_Variable_named(L"instance");
array717 = (Object)new_Type_Array_with(1, localvariable759);
send4863 = (Object)new_AST_Send((Object)classreference212, (Object)SMB_basicNew, 0);
assign443 = (Object)new_AST_Assign((Object)localvariable759, (Object)send4863);
smallint2192 = (Object)new_Type_SmallInt(1);
constant2776 = (Object)new_AST_Constant((Object)smallint2192);
send4864 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol391, 1, constant2776);
send4865 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol392, 0);
smallint2193 = (Object)new_Type_SmallInt(1);
constant2777 = (Object)new_AST_Constant((Object)smallint2193);
send4866 = (Object)new_AST_Send((Object)send4865, (Object)SMB__equal, 1, constant2777);
send4867 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4866);
send4868 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol395, 0);
send4869 = (Object)new_AST_Send((Object)send4868, (Object)SMB__equal, 1, Nil_Const);
send4870 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4869);
smallint2194 = (Object)new_Type_SmallInt(2);
constant2778 = (Object)new_AST_Constant((Object)smallint2194);
send4871 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol394, 1, constant2778);
send4872 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol392, 0);
smallint2195 = (Object)new_Type_SmallInt(1);
constant2779 = (Object)new_AST_Constant((Object)smallint2195);
send4873 = (Object)new_AST_Send((Object)send4872, (Object)SMB__equal, 1, constant2779);
send4874 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4873);
send4875 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol395, 0);
smallint2196 = (Object)new_Type_SmallInt(2);
constant2780 = (Object)new_AST_Constant((Object)smallint2196);
send4876 = (Object)new_AST_Send((Object)send4875, (Object)SMB__equal, 1, constant2780);
send4877 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4876);
method1671 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array717, 8, assign443, send4864, send4867, send4870, send4871, send4874, send4877, Self);
symbol359 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure1662 = (Object)new_Runtime_MethodClosure(method1671);
store_method((Type_Class)class209, (Type_Symbol)symbol359, (Runtime_MethodClosure)methodclosure1662);

// BridgeTest>>tmSymbol
constant2781 = (Object)new_AST_Constant((Object)symbol400);
method1672 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2781);
symbol387 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure1663 = (Object)new_Runtime_MethodClosure(method1672);
store_method((Type_Class)class209, (Type_Symbol)symbol387, (Runtime_MethodClosure)methodclosure1663);

// BridgeTest>>tmNumberMult
smallint2197 = (Object)new_Type_SmallInt(2);
constant2782 = (Object)new_AST_Constant((Object)smallint2197);
smallint2198 = (Object)new_Type_SmallInt(3);
constant2783 = (Object)new_AST_Constant((Object)smallint2198);
send4878 = (Object)new_AST_Send((Object)constant2782, (Object)SMB__times, 1, constant2783);
method1673 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4878);
symbol379 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure1664 = (Object)new_Runtime_MethodClosure(method1673);
store_method((Type_Class)class209, (Type_Symbol)symbol379, (Runtime_MethodClosure)methodclosure1664);

// BridgeTest>>tmCharacter
character161 = (Object)new_Type_Character(L'C');
constant2784 = (Object)new_AST_Constant((Object)character161);
method1674 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2784);
symbol360 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure1665 = (Object)new_Runtime_MethodClosure(method1674);
store_method((Type_Class)class209, (Type_Symbol)symbol360, (Runtime_MethodClosure)methodclosure1665);

// BridgeTest>>tmBooleanSymbolEquals
symbol401 = (Object)new_Type_Symbol_cached(L"true");
constant2785 = (Object)new_AST_Constant((Object)symbol401);
send4879 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, constant2785);
method1675 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4879);
symbol380 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure1666 = (Object)new_Runtime_MethodClosure(method1675);
store_method((Type_Class)class209, (Type_Symbol)symbol380, (Runtime_MethodClosure)methodclosure1666);

// BridgeTest>>tmString
string364 = (Object)new_Type_String(L"String");
constant2786 = (Object)new_AST_Constant((Object)string364);
method1676 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2786);
symbol372 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure1667 = (Object)new_Runtime_MethodClosure(method1676);
store_method((Type_Class)class209, (Type_Symbol)symbol372, (Runtime_MethodClosure)methodclosure1667);

// BridgeTest>>tmCharacterStringEquals
character162 = (Object)new_Type_Character(L'C');
constant2787 = (Object)new_AST_Constant((Object)character162);
string365 = (Object)new_Type_String(L"C");
constant2788 = (Object)new_AST_Constant((Object)string365);
send4880 = (Object)new_AST_Send((Object)constant2787, (Object)SMB__equal, 1, constant2788);
method1677 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4880);
symbol364 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure1668 = (Object)new_Runtime_MethodClosure(method1677);
store_method((Type_Class)class209, (Type_Symbol)symbol364, (Runtime_MethodClosure)methodclosure1668);

// BridgeTest>>tmNumber
smallint2199 = (Object)new_Type_SmallInt(1);
constant2789 = (Object)new_AST_Constant((Object)smallint2199);
method1678 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2789);
symbol389 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure1669 = (Object)new_Runtime_MethodClosure(method1678);
store_method((Type_Class)class209, (Type_Symbol)symbol389, (Runtime_MethodClosure)methodclosure1669);

// BridgeTest>>tmSimpleBasicArithmetik
smallint2200 = (Object)new_Type_SmallInt(1);
constant2790 = (Object)new_AST_Constant((Object)smallint2200);
smallint2201 = (Object)new_Type_SmallInt(2);
constant2791 = (Object)new_AST_Constant((Object)smallint2201);
send4881 = (Object)new_AST_Send((Object)constant2790, (Object)SMB__plus, 1, constant2791);
smallint2202 = (Object)new_Type_SmallInt(2);
constant2792 = (Object)new_AST_Constant((Object)smallint2202);
send4882 = (Object)new_AST_Send((Object)send4881, (Object)SMB__plus, 1, constant2792);
smallint2203 = (Object)new_Type_SmallInt(5);
constant2793 = (Object)new_AST_Constant((Object)smallint2203);
send4883 = (Object)new_AST_Send((Object)send4882, (Object)SMB__times, 1, constant2793);
method1679 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4883);
symbol362 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure1670 = (Object)new_Runtime_MethodClosure(method1679);
store_method((Type_Class)class209, (Type_Symbol)symbol362, (Runtime_MethodClosure)methodclosure1670);

// BridgeTest>>tmNumberAdd
smallint2204 = (Object)new_Type_SmallInt(1);
constant2794 = (Object)new_AST_Constant((Object)smallint2204);
smallint2205 = (Object)new_Type_SmallInt(1);
constant2795 = (Object)new_AST_Constant((Object)smallint2205);
send4884 = (Object)new_AST_Send((Object)constant2794, (Object)SMB__plus, 1, constant2795);
method1680 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4884);
symbol382 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure1671 = (Object)new_Runtime_MethodClosure(method1680);
store_method((Type_Class)class209, (Type_Symbol)symbol382, (Runtime_MethodClosure)methodclosure1671);

// BridgeTest>>tmSimpleInstanceCreation
localvariable760 = (Object)new_AST_Variable_named(L"instance");
array718 = (Object)new_Type_Array_with(1, localvariable760);
symbol373 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout105 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable262 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout105)->values[0] = instancevariable262;
instancevariable263 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout105)->values[1] = instancevariable263;
instancevariable264 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout105)->values[2] = instancevariable264;
class210 = (Object)new_Class(Type_Object_Class, objectlayout105);
((Type_Class)class210)->name = (Type_Symbol)symbol373;

// StandardTestClass>>a:
localvariable761 = (Object)new_AST_Variable_named(L"anObject");
array719 = (Object)new_Type_Array_with(1, localvariable761);
assign444 = (Object)new_AST_Assign((Object)instancevariable262, (Object)localvariable761);
method1681 = (Object)new_AST_Method_with((Type_Array)array719, (Type_Array)empty_Type_Array, 2, assign444, Self);
methodclosure1672 = (Object)new_Runtime_MethodClosure(method1681);
store_method((Type_Class)class210, (Type_Symbol)symbol391, (Runtime_MethodClosure)methodclosure1672);

// StandardTestClass>>b
method1682 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable263);
methodclosure1673 = (Object)new_Runtime_MethodClosure(method1682);
store_method((Type_Class)class210, (Type_Symbol)symbol395, (Runtime_MethodClosure)methodclosure1673);

// StandardTestClass>>c
method1683 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable264);
methodclosure1674 = (Object)new_Runtime_MethodClosure(method1683);
store_method((Type_Class)class210, (Type_Symbol)symbol397, (Runtime_MethodClosure)methodclosure1674);

// StandardTestClass>>c:
localvariable762 = (Object)new_AST_Variable_named(L"anObject");
array720 = (Object)new_Type_Array_with(1, localvariable762);
assign445 = (Object)new_AST_Assign((Object)instancevariable264, (Object)localvariable762);
method1684 = (Object)new_AST_Method_with((Type_Array)array720, (Type_Array)empty_Type_Array, 2, assign445, Self);
methodclosure1675 = (Object)new_Runtime_MethodClosure(method1684);
store_method((Type_Class)class210, (Type_Symbol)symbol396, (Runtime_MethodClosure)methodclosure1675);

// StandardTestClass>>b:
localvariable763 = (Object)new_AST_Variable_named(L"anObject");
array721 = (Object)new_Type_Array_with(1, localvariable763);
assign446 = (Object)new_AST_Assign((Object)instancevariable263, (Object)localvariable763);
method1685 = (Object)new_AST_Method_with((Type_Array)array721, (Type_Array)empty_Type_Array, 2, assign446, Self);
methodclosure1676 = (Object)new_Runtime_MethodClosure(method1685);
store_method((Type_Class)class210, (Type_Symbol)symbol394, (Runtime_MethodClosure)methodclosure1676);

// StandardTestClass>>a
method1686 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable262);
methodclosure1677 = (Object)new_Runtime_MethodClosure(method1686);
store_method((Type_Class)class210, (Type_Symbol)symbol392, (Runtime_MethodClosure)methodclosure1677);
classreference215 = (Object)new_Organization_ClassReference((Type_Class)class210);
send4885 = (Object)new_AST_Send((Object)classreference215, (Object)SMB_basicNew, 0);
assign447 = (Object)new_AST_Assign((Object)localvariable760, (Object)send4885);
localvariable764 = (Object)new_AST_Variable_named(L"receiver");
array722 = (Object)new_Type_Array_with(1, localvariable764);
smallint2206 = (Object)new_Type_SmallInt(1);
constant2796 = (Object)new_AST_Constant((Object)smallint2206);
send4886 = (Object)new_AST_Send((Object)localvariable764, (Object)symbol391, 1, constant2796);
smallint2207 = (Object)new_Type_SmallInt(2);
constant2797 = (Object)new_AST_Constant((Object)smallint2207);
send4887 = (Object)new_AST_Send((Object)localvariable764, (Object)symbol394, 1, constant2797);
smallint2208 = (Object)new_Type_SmallInt(3);
constant2798 = (Object)new_AST_Constant((Object)smallint2208);
send4888 = (Object)new_AST_Send((Object)localvariable764, (Object)symbol396, 1, constant2798);
block289 = (Object)new_AST_Block_with((Type_Array)array722, (Type_Array)empty_Type_Array, 1, 3, send4886, send4887, send4888);
send4889 = (Object)new_AST_Send((Object)block289, (Object)SMB_value_, 1, localvariable760);
send4890 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol392, 0);
smallint2209 = (Object)new_Type_SmallInt(1);
constant2799 = (Object)new_AST_Constant((Object)smallint2209);
send4891 = (Object)new_AST_Send((Object)send4890, (Object)SMB__equal, 1, constant2799);
send4892 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4891);
send4893 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol395, 0);
smallint2210 = (Object)new_Type_SmallInt(2);
constant2800 = (Object)new_AST_Constant((Object)smallint2210);
send4894 = (Object)new_AST_Send((Object)send4893, (Object)SMB__equal, 1, constant2800);
send4895 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4894);
send4896 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol397, 0);
smallint2211 = (Object)new_Type_SmallInt(3);
constant2801 = (Object)new_AST_Constant((Object)smallint2211);
send4897 = (Object)new_AST_Send((Object)send4896, (Object)SMB__equal, 1, constant2801);
send4898 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4897);
send4899 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol392, 0);
send4900 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol395, 0);
send4901 = (Object)new_AST_Send((Object)send4899, (Object)SMB__plus, 1, send4900);
send4902 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol397, 0);
send4903 = (Object)new_AST_Send((Object)send4901, (Object)SMB__plus, 1, send4902);
method1687 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array718, 6, assign447, send4889, send4892, send4895, send4898, send4903);
symbol374 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure1678 = (Object)new_Runtime_MethodClosure(method1687);
store_method((Type_Class)class209, (Type_Symbol)symbol374, (Runtime_MethodClosure)methodclosure1678);
classreference216 = (Object)new_Organization_ClassReference((Type_Class)class209);
=======
Object classreference174;
Object symbol1768;
Object arraylayout30;
Object instancevariable195;
Object instancevariable196;
Object instancevariable197;
Object class165;
Object method1723;
Object symbol1799;
Object methodclosure1592;
Object method1724;
Object symbol1795;
Object methodclosure1593;
Object localvariable853;
Object array854;
Object assign406;
Object method1725;
Object symbol1798;
Object methodclosure1594;
Object localvariable854;
Object array855;
Object assign407;
Object method1726;
Object symbol1794;
Object methodclosure1595;
Object localvariable855;
Object array856;
Object assign408;
Object method1727;
Object symbol1800;
Object methodclosure1596;
Object method1728;
Object symbol1797;
Object methodclosure1597;
Object classreference175;
Object symbol1754;
Object class166;
Object localvariable856;
Object array857;
Object symbol1773;
Object objectlayout74;
Object instancevariable198;
Object instancevariable199;
Object instancevariable200;
Object class167;
Object method1729;
Object methodclosure1598;
Object method1730;
Object methodclosure1599;
Object localvariable857;
Object array858;
Object assign409;
Object method1731;
Object methodclosure1600;
Object localvariable858;
Object array859;
Object assign410;
Object method1732;
Object methodclosure1601;
Object localvariable859;
Object array860;
Object assign411;
Object method1733;
Object methodclosure1602;
Object method1734;
Object methodclosure1603;
Object classreference176;
Object send4670;
Object assign412;
Object localvariable860;
Object array861;
Object smallint2412;
Object constant3806;
Object send4671;
Object smallint2413;
Object constant3807;
Object send4672;
Object smallint2414;
Object constant3808;
Object send4673;
Object block572;
Object send4674;
Object symbol1771;
Object send4675;
Object smallint2415;
Object constant3809;
Object send4676;
Object send4677;
Object send4678;
Object smallint2416;
Object constant3810;
Object send4679;
Object send4680;
Object send4681;
Object smallint2417;
Object constant3811;
Object send4682;
Object send4683;
Object send4684;
Object send4685;
Object send4686;
Object send4687;
Object send4688;
Object method1735;
Object symbol1774;
Object methodclosure1604;
Object localvariable861;
Object array862;
Object symbol1793;
Object objectlayout75;
Object instancevariable201;
Object class168;
Object method1736;
Object methodclosure1605;
Object smallint2418;
Object constant3812;
Object method1737;
Object symbol1796;
Object methodclosure1606;
Object localvariable862;
Object array863;
Object assign413;
Object method1738;
Object methodclosure1607;
Object symbol1765;
Object objectlayout76;
Object instancevariable202;
Object class169;
Object localvariable863;
Object array864;
Object assign414;
Object method1739;
Object methodclosure1608;
Object smallint2419;
Object constant3813;
Object super12;
Object send4689;
Object method1740;
Object methodclosure1609;
Object method1741;
Object methodclosure1610;
Object classreference177;
Object send4690;
Object assign415;
Object smallint2420;
Object constant3814;
Object send4691;
Object smallint2421;
Object constant3815;
Object send4692;
Object send4693;
Object smallint2422;
Object constant3816;
Object send4694;
Object send4695;
Object send4696;
Object smallint2423;
Object constant3817;
Object send4697;
Object send4698;
Object method1742;
Object symbol1766;
Object methodclosure1611;
Object smallint2424;
Object constant3818;
Object smallint2425;
Object constant3819;
Object send4699;
Object method1743;
Object symbol1758;
Object methodclosure1612;
Object send4700;
Object method1744;
Object symbol1786;
Object methodclosure1613;
Object localvariable864;
Object array865;
Object send4701;
Object assign416;
Object localvariable865;
Object array866;
Object smallint2426;
Object constant3820;
Object send4702;
Object smallint2427;
Object constant3821;
Object send4703;
Object smallint2428;
Object constant3822;
Object send4704;
Object block573;
Object send4705;
Object send4706;
Object smallint2429;
Object constant3823;
Object send4707;
Object send4708;
Object send4709;
Object smallint2430;
Object constant3824;
Object send4710;
Object send4711;
Object send4712;
Object smallint2431;
Object constant3825;
Object send4713;
Object send4714;
Object send4715;
Object send4716;
Object send4717;
Object send4718;
Object send4719;
Object method1745;
Object symbol1776;
Object methodclosure1614;
Object smallint2432;
Object constant3826;
Object smallint2433;
Object constant3827;
Object send4720;
Object method1746;
Object symbol1788;
Object methodclosure1615;
Object smallint2434;
Object constant3828;
Object method1747;
Object symbol1761;
Object methodclosure1616;
Object smallint2435;
Object constant3829;
Object smallint2436;
Object constant3830;
Object send4721;
Object method1748;
Object symbol1781;
Object methodclosure1617;
Object localvariable866;
Object array867;
Object smallint2437;
Object constant3831;
Object assign417;
Object method1749;
Object symbol1778;
Object methodclosure1618;
Object localvariable867;
Object array868;
Object symbol1801;
Object send4722;
Object block574;
Object send4723;
Object method1750;
Object methodclosure1619;
Object smallint2438;
Object constant3832;
Object smallint2439;
Object constant3833;
Object send4724;
Object method1751;
Object symbol1763;
Object methodclosure1620;
Object localvariable868;
Object array869;
Object smallint2440;
Object constant3834;
Object send4725;
Object method1752;
Object symbol1791;
Object methodclosure1621;
Object localvariable869;
Object localvariable870;
Object localvariable871;
Object array870;
Object send4726;
Object send4727;
Object method1753;
Object symbol1783;
Object methodclosure1622;
Object method1754;
Object symbol1785;
Object methodclosure1623;
Object string775;
Object constant3835;
Object string776;
Object constant3836;
Object send4728;
Object method1755;
Object symbol1775;
Object methodclosure1624;
Object character496;
Object constant3837;
Object method1756;
Object symbol1767;
Object methodclosure1625;
Object symbol1802;
Object constant3838;
Object character497;
Object constant3839;
Object send4729;
Object method1757;
Object symbol1759;
Object methodclosure1626;
Object character498;
Object constant3840;
Object string777;
Object constant3841;
Object send4730;
Object method1758;
Object symbol1787;
Object methodclosure1627;
Object method1759;
Object symbol1760;
Object methodclosure1628;
Object string778;
Object constant3842;
Object method1760;
Object symbol1780;
Object methodclosure1629;
Object localvariable872;
Object array871;
Object send4731;
Object assign418;
Object send4732;
Object method1761;
Object symbol1777;
Object methodclosure1630;
Object localvariable873;
Object array872;
Object smallint2441;
Object constant3843;
Object send4733;
Object assign419;
Object smallint2442;
Object constant3844;
Object smallint2443;
Object constant3845;
Object send4734;
Object smallint2444;
Object constant3846;
Object smallint2445;
Object constant3847;
Object send4735;
Object smallint2446;
Object constant3848;
Object send4736;
Object smallint2447;
Object constant3849;
Object send4737;
Object send4738;
Object method1762;
Object symbol1769;
Object methodclosure1631;
Object symbol1803;
Object constant3850;
Object constant3851;
Object send4739;
Object method1763;
Object symbol1789;
Object methodclosure1632;
Object smallint2448;
Object constant3852;
Object smallint2449;
Object constant3853;
Object send4740;
Object smallint2450;
Object constant3854;
Object send4741;
Object smallint2451;
Object constant3855;
Object send4742;
Object method1764;
Object symbol1770;
Object methodclosure1633;
Object symbol1804;
Object constant3856;
Object send4743;
Object method1765;
Object symbol1762;
Object methodclosure1634;
Object send4744;
Object method1766;
Object symbol1790;
Object methodclosure1635;
Object constant3857;
Object method1767;
Object symbol1782;
Object methodclosure1636;
Object method1768;
Object symbol1779;
Object methodclosure1637;
Object character499;
Object constant3858;
Object character500;
Object constant3859;
Object send4745;
Object method1769;
Object symbol1772;
Object methodclosure1638;
Object smallint2452;
Object constant3860;
Object method1770;
Object symbol1764;
Object methodclosure1639;
Object smallint2453;
Object constant3861;
Object smallint2454;
Object constant3862;
Object send4746;
Object method1771;
Object symbol1792;
Object methodclosure1640;
Object variable77;
Object array873;
Object smallint2455;
Object constant3863;
Object smallint2456;
Object constant3864;
Object send4747;
Object smallint2457;
Object constant3865;
Object send4748;
Object block575;
Object smallint2458;
Object constant3866;
Object send4749;
Object block576;
Object send4750;
Object block577;
Object send4751;
Object method1772;
Object symbol1784;
Object methodclosure1641;
Object classreference178;
Object classreference179;


void create_ast() {
classreference174 = (Object)new_Organization_ClassReference((Type_Class)Type_Object);
symbol1768 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout30 = (Object)create_type_with_vars(Type_ArrayLayout, 3);
instancevariable195 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout30)->values[0] = instancevariable195;instancevariable196 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout30)->values[1] = instancevariable196;instancevariable197 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout30)->values[2] = instancevariable197;class165 = (Object)new_Class(Type_Object, arraylayout30);
((Type_Class)class165)->name = (Type_Symbol)symbol1768;

// StandardVariableTestClass>>c
method1723 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable197);
symbol1799 = (Object)new_Type_Symbol_cached(L"c");
methodclosure1592 = (Object)new_Runtime_MethodClosure(method1723);
store_method((Type_Class)class165, (Type_Symbol)symbol1799, (Runtime_MethodClosure)methodclosure1592);

// StandardVariableTestClass>>a
method1724 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable195);
symbol1795 = (Object)new_Type_Symbol_cached(L"a");
methodclosure1593 = (Object)new_Runtime_MethodClosure(method1724);
store_method((Type_Class)class165, (Type_Symbol)symbol1795, (Runtime_MethodClosure)methodclosure1593);

// StandardVariableTestClass>>b:
localvariable853 = (Object)new_AST_Variable_named(L"anObject");
array854 = (Object)new_Type_Array_with(1, localvariable853);
assign406 = (Object)new_AST_Assign((Object)instancevariable196, (Object)localvariable853);
method1725 = (Object)new_AST_Method_with((Type_Array)array854, (Type_Array)empty_Type_Array, 2, assign406, Self);
symbol1798 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure1594 = (Object)new_Runtime_MethodClosure(method1725);
store_method((Type_Class)class165, (Type_Symbol)symbol1798, (Runtime_MethodClosure)methodclosure1594);

// StandardVariableTestClass>>a:
localvariable854 = (Object)new_AST_Variable_named(L"anObject");
array855 = (Object)new_Type_Array_with(1, localvariable854);
assign407 = (Object)new_AST_Assign((Object)instancevariable195, (Object)localvariable854);
method1726 = (Object)new_AST_Method_with((Type_Array)array855, (Type_Array)empty_Type_Array, 2, assign407, Self);
symbol1794 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure1595 = (Object)new_Runtime_MethodClosure(method1726);
store_method((Type_Class)class165, (Type_Symbol)symbol1794, (Runtime_MethodClosure)methodclosure1595);

// StandardVariableTestClass>>c:
localvariable855 = (Object)new_AST_Variable_named(L"anObject");
array856 = (Object)new_Type_Array_with(1, localvariable855);
assign408 = (Object)new_AST_Assign((Object)instancevariable197, (Object)localvariable855);
method1727 = (Object)new_AST_Method_with((Type_Array)array856, (Type_Array)empty_Type_Array, 2, assign408, Self);
symbol1800 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure1596 = (Object)new_Runtime_MethodClosure(method1727);
store_method((Type_Class)class165, (Type_Symbol)symbol1800, (Runtime_MethodClosure)methodclosure1596);

// StandardVariableTestClass>>b
method1728 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable196);
symbol1797 = (Object)new_Type_Symbol_cached(L"b");
methodclosure1597 = (Object)new_Runtime_MethodClosure(method1728);
store_method((Type_Class)class165, (Type_Symbol)symbol1797, (Runtime_MethodClosure)methodclosure1597);
classreference175 = (Object)new_Organization_ClassReference((Type_Class)class165);
symbol1754 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class166 = (Object)new_Class(Type_Object, empty_object_layout);
((Type_Class)class166)->name = (Type_Symbol)symbol1754;

// BridgeTest>>tmSimpleInstanceCreation
localvariable856 = (Object)new_AST_Variable_named(L"instance");
array857 = (Object)new_Type_Array_with(1, localvariable856);
symbol1773 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout74 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable198 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout74)->values[0] = instancevariable198;
instancevariable199 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout74)->values[1] = instancevariable199;
instancevariable200 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout74)->values[2] = instancevariable200;
class167 = (Object)new_Class(Type_Object, objectlayout74);
((Type_Class)class167)->name = (Type_Symbol)symbol1773;

// StandardTestClass>>c
method1729 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable200);
methodclosure1598 = (Object)new_Runtime_MethodClosure(method1729);
store_method((Type_Class)class167, (Type_Symbol)symbol1799, (Runtime_MethodClosure)methodclosure1598);

// StandardTestClass>>a
method1730 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable198);
methodclosure1599 = (Object)new_Runtime_MethodClosure(method1730);
store_method((Type_Class)class167, (Type_Symbol)symbol1795, (Runtime_MethodClosure)methodclosure1599);

// StandardTestClass>>b:
localvariable857 = (Object)new_AST_Variable_named(L"anObject");
array858 = (Object)new_Type_Array_with(1, localvariable857);
assign409 = (Object)new_AST_Assign((Object)instancevariable199, (Object)localvariable857);
method1731 = (Object)new_AST_Method_with((Type_Array)array858, (Type_Array)empty_Type_Array, 2, assign409, Self);
methodclosure1600 = (Object)new_Runtime_MethodClosure(method1731);
store_method((Type_Class)class167, (Type_Symbol)symbol1798, (Runtime_MethodClosure)methodclosure1600);

// StandardTestClass>>a:
localvariable858 = (Object)new_AST_Variable_named(L"anObject");
array859 = (Object)new_Type_Array_with(1, localvariable858);
assign410 = (Object)new_AST_Assign((Object)instancevariable198, (Object)localvariable858);
method1732 = (Object)new_AST_Method_with((Type_Array)array859, (Type_Array)empty_Type_Array, 2, assign410, Self);
methodclosure1601 = (Object)new_Runtime_MethodClosure(method1732);
store_method((Type_Class)class167, (Type_Symbol)symbol1794, (Runtime_MethodClosure)methodclosure1601);

// StandardTestClass>>c:
localvariable859 = (Object)new_AST_Variable_named(L"anObject");
array860 = (Object)new_Type_Array_with(1, localvariable859);
assign411 = (Object)new_AST_Assign((Object)instancevariable200, (Object)localvariable859);
method1733 = (Object)new_AST_Method_with((Type_Array)array860, (Type_Array)empty_Type_Array, 2, assign411, Self);
methodclosure1602 = (Object)new_Runtime_MethodClosure(method1733);
store_method((Type_Class)class167, (Type_Symbol)symbol1800, (Runtime_MethodClosure)methodclosure1602);

// StandardTestClass>>b
method1734 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable199);
methodclosure1603 = (Object)new_Runtime_MethodClosure(method1734);
store_method((Type_Class)class167, (Type_Symbol)symbol1797, (Runtime_MethodClosure)methodclosure1603);
classreference176 = (Object)new_Organization_ClassReference((Type_Class)class167);
send4670 = (Object)new_AST_Send((Object)classreference176, (Object)SMB_basicNew, 0);
assign412 = (Object)new_AST_Assign((Object)localvariable856, (Object)send4670);
localvariable860 = (Object)new_AST_Variable_named(L"receiver");
array861 = (Object)new_Type_Array_with(1, localvariable860);
smallint2412 = (Object)new_Type_SmallInt(1);
constant3806 = (Object)new_AST_Constant((Object)smallint2412);
send4671 = (Object)new_AST_Send((Object)localvariable860, (Object)symbol1794, 1, constant3806);
smallint2413 = (Object)new_Type_SmallInt(2);
constant3807 = (Object)new_AST_Constant((Object)smallint2413);
send4672 = (Object)new_AST_Send((Object)localvariable860, (Object)symbol1798, 1, constant3807);
smallint2414 = (Object)new_Type_SmallInt(3);
constant3808 = (Object)new_AST_Constant((Object)smallint2414);
send4673 = (Object)new_AST_Send((Object)localvariable860, (Object)symbol1800, 1, constant3808);
block572 = (Object)new_AST_Block_with((Type_Array)array861, (Type_Array)empty_Type_Array, 1, 3, send4671, send4672, send4673);
send4674 = (Object)new_AST_Send((Object)block572, (Object)SMB_value_, 1, localvariable856);
symbol1771 = (Object)new_Type_Symbol_cached(L"assert:");
send4675 = (Object)new_AST_Send((Object)localvariable856, (Object)symbol1795, 0);
smallint2415 = (Object)new_Type_SmallInt(1);
constant3809 = (Object)new_AST_Constant((Object)smallint2415);
send4676 = (Object)new_AST_Send((Object)send4675, (Object)SMB__equal, 1, constant3809);
send4677 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4676);
send4678 = (Object)new_AST_Send((Object)localvariable856, (Object)symbol1797, 0);
smallint2416 = (Object)new_Type_SmallInt(2);
constant3810 = (Object)new_AST_Constant((Object)smallint2416);
send4679 = (Object)new_AST_Send((Object)send4678, (Object)SMB__equal, 1, constant3810);
send4680 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4679);
send4681 = (Object)new_AST_Send((Object)localvariable856, (Object)symbol1799, 0);
smallint2417 = (Object)new_Type_SmallInt(3);
constant3811 = (Object)new_AST_Constant((Object)smallint2417);
send4682 = (Object)new_AST_Send((Object)send4681, (Object)SMB__equal, 1, constant3811);
send4683 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4682);
send4684 = (Object)new_AST_Send((Object)localvariable856, (Object)symbol1795, 0);
send4685 = (Object)new_AST_Send((Object)localvariable856, (Object)symbol1797, 0);
send4686 = (Object)new_AST_Send((Object)send4684, (Object)SMB__plus, 1, send4685);
send4687 = (Object)new_AST_Send((Object)localvariable856, (Object)symbol1799, 0);
send4688 = (Object)new_AST_Send((Object)send4686, (Object)SMB__plus, 1, send4687);
method1735 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array857, 6, assign412, send4674, send4677, send4680, send4683, send4688);
symbol1774 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure1604 = (Object)new_Runtime_MethodClosure(method1735);
store_method((Type_Class)class166, (Type_Symbol)symbol1774, (Runtime_MethodClosure)methodclosure1604);

// BridgeTest>>tmSuperClass
localvariable861 = (Object)new_AST_Variable_named(L"instance");
array862 = (Object)new_Type_Array_with(1, localvariable861);
symbol1793 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout75 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable201 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout75)->values[0] = instancevariable201;
class168 = (Object)new_Class(Type_Object, objectlayout75);
((Type_Class)class168)->name = (Type_Symbol)symbol1793;

// SuperClassTestClass>>a
method1736 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable201);
methodclosure1605 = (Object)new_Runtime_MethodClosure(method1736);
store_method((Type_Class)class168, (Type_Symbol)symbol1795, (Runtime_MethodClosure)methodclosure1605);

// SuperClassTestClass>>test
smallint2418 = (Object)new_Type_SmallInt(10);
constant3812 = (Object)new_AST_Constant((Object)smallint2418);
method1737 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3812);
symbol1796 = (Object)new_Type_Symbol_cached(L"test");
methodclosure1606 = (Object)new_Runtime_MethodClosure(method1737);
store_method((Type_Class)class168, (Type_Symbol)symbol1796, (Runtime_MethodClosure)methodclosure1606);

// SuperClassTestClass>>a:
localvariable862 = (Object)new_AST_Variable_named(L"anObject");
array863 = (Object)new_Type_Array_with(1, localvariable862);
assign413 = (Object)new_AST_Assign((Object)instancevariable201, (Object)localvariable862);
method1738 = (Object)new_AST_Method_with((Type_Array)array863, (Type_Array)empty_Type_Array, 2, assign413, Self);
methodclosure1607 = (Object)new_Runtime_MethodClosure(method1738);
store_method((Type_Class)class168, (Type_Symbol)symbol1794, (Runtime_MethodClosure)methodclosure1607);
symbol1765 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout76 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable202 = (Object)new_AST_InstVariable(0, L"b");
((Type_Array)objectlayout76)->values[0] = instancevariable202;
class169 = (Object)new_Class(class168, objectlayout76);
((Type_Class)class169)->name = (Type_Symbol)symbol1765;

// ChildClassTestClass>>b:
localvariable863 = (Object)new_AST_Variable_named(L"anObject");
array864 = (Object)new_Type_Array_with(1, localvariable863);
assign414 = (Object)new_AST_Assign((Object)instancevariable202, (Object)localvariable863);
method1739 = (Object)new_AST_Method_with((Type_Array)array864, (Type_Array)empty_Type_Array, 2, assign414, Self);
methodclosure1608 = (Object)new_Runtime_MethodClosure(method1739);
store_method((Type_Class)class169, (Type_Symbol)symbol1798, (Runtime_MethodClosure)methodclosure1608);

// ChildClassTestClass>>test
smallint2419 = (Object)new_Type_SmallInt(10);
constant3813 = (Object)new_AST_Constant((Object)smallint2419);
super12 = (Object)new_AST_Super(symbol1796, (Type_Array)empty_Type_Array);
send4689 = (Object)new_AST_Send((Object)constant3813, (Object)SMB__times, 1, super12);
method1740 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4689);
methodclosure1609 = (Object)new_Runtime_MethodClosure(method1740);
store_method((Type_Class)class169, (Type_Symbol)symbol1796, (Runtime_MethodClosure)methodclosure1609);

// ChildClassTestClass>>b
method1741 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable202);
methodclosure1610 = (Object)new_Runtime_MethodClosure(method1741);
store_method((Type_Class)class169, (Type_Symbol)symbol1797, (Runtime_MethodClosure)methodclosure1610);
classreference177 = (Object)new_Organization_ClassReference((Type_Class)class169);
send4690 = (Object)new_AST_Send((Object)classreference177, (Object)SMB_basicNew, 0);
assign415 = (Object)new_AST_Assign((Object)localvariable861, (Object)send4690);
smallint2420 = (Object)new_Type_SmallInt(1);
constant3814 = (Object)new_AST_Constant((Object)smallint2420);
send4691 = (Object)new_AST_Send((Object)localvariable861, (Object)symbol1794, 1, constant3814);
smallint2421 = (Object)new_Type_SmallInt(2);
constant3815 = (Object)new_AST_Constant((Object)smallint2421);
send4692 = (Object)new_AST_Send((Object)localvariable861, (Object)symbol1798, 1, constant3815);
send4693 = (Object)new_AST_Send((Object)localvariable861, (Object)symbol1795, 0);
smallint2422 = (Object)new_Type_SmallInt(1);
constant3816 = (Object)new_AST_Constant((Object)smallint2422);
send4694 = (Object)new_AST_Send((Object)send4693, (Object)SMB__equal, 1, constant3816);
send4695 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4694);
send4696 = (Object)new_AST_Send((Object)localvariable861, (Object)symbol1797, 0);
smallint2423 = (Object)new_Type_SmallInt(2);
constant3817 = (Object)new_AST_Constant((Object)smallint2423);
send4697 = (Object)new_AST_Send((Object)send4696, (Object)SMB__equal, 1, constant3817);
send4698 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4697);
method1742 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array862, 6, assign415, send4691, send4692, send4695, send4698, Self);
symbol1766 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure1611 = (Object)new_Runtime_MethodClosure(method1742);
store_method((Type_Class)class166, (Type_Symbol)symbol1766, (Runtime_MethodClosure)methodclosure1611);

// BridgeTest>>tmNumberDiv
smallint2424 = (Object)new_Type_SmallInt(4);
constant3818 = (Object)new_AST_Constant((Object)smallint2424);
smallint2425 = (Object)new_Type_SmallInt(2);
constant3819 = (Object)new_AST_Constant((Object)smallint2425);
send4699 = (Object)new_AST_Send((Object)constant3818, (Object)SMB__divide, 1, constant3819);
method1743 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4699);
symbol1758 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure1612 = (Object)new_Runtime_MethodClosure(method1743);
store_method((Type_Class)class166, (Type_Symbol)symbol1758, (Runtime_MethodClosure)methodclosure1612);

// BridgeTest>>tmClassReferenceReturn
send4700 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
method1744 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4700);
symbol1786 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure1613 = (Object)new_Runtime_MethodClosure(method1744);
store_method((Type_Class)class166, (Type_Symbol)symbol1786, (Runtime_MethodClosure)methodclosure1613);

// BridgeTest>>tmVariableInstanceCreation
localvariable864 = (Object)new_AST_Variable_named(L"instance");
array865 = (Object)new_Type_Array_with(1, localvariable864);
send4701 = (Object)new_AST_Send((Object)classreference175, (Object)SMB_basicNew, 0);
assign416 = (Object)new_AST_Assign((Object)localvariable864, (Object)send4701);
localvariable865 = (Object)new_AST_Variable_named(L"receiver");
array866 = (Object)new_Type_Array_with(1, localvariable865);
smallint2426 = (Object)new_Type_SmallInt(1);
constant3820 = (Object)new_AST_Constant((Object)smallint2426);
send4702 = (Object)new_AST_Send((Object)localvariable865, (Object)symbol1794, 1, constant3820);
smallint2427 = (Object)new_Type_SmallInt(2);
constant3821 = (Object)new_AST_Constant((Object)smallint2427);
send4703 = (Object)new_AST_Send((Object)localvariable865, (Object)symbol1798, 1, constant3821);
smallint2428 = (Object)new_Type_SmallInt(3);
constant3822 = (Object)new_AST_Constant((Object)smallint2428);
send4704 = (Object)new_AST_Send((Object)localvariable865, (Object)symbol1800, 1, constant3822);
block573 = (Object)new_AST_Block_with((Type_Array)array866, (Type_Array)empty_Type_Array, 1, 3, send4702, send4703, send4704);
send4705 = (Object)new_AST_Send((Object)block573, (Object)SMB_value_, 1, localvariable864);
send4706 = (Object)new_AST_Send((Object)localvariable864, (Object)symbol1795, 0);
smallint2429 = (Object)new_Type_SmallInt(1);
constant3823 = (Object)new_AST_Constant((Object)smallint2429);
send4707 = (Object)new_AST_Send((Object)send4706, (Object)SMB__equal, 1, constant3823);
send4708 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4707);
send4709 = (Object)new_AST_Send((Object)localvariable864, (Object)symbol1797, 0);
smallint2430 = (Object)new_Type_SmallInt(2);
constant3824 = (Object)new_AST_Constant((Object)smallint2430);
send4710 = (Object)new_AST_Send((Object)send4709, (Object)SMB__equal, 1, constant3824);
send4711 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4710);
send4712 = (Object)new_AST_Send((Object)localvariable864, (Object)symbol1799, 0);
smallint2431 = (Object)new_Type_SmallInt(3);
constant3825 = (Object)new_AST_Constant((Object)smallint2431);
send4713 = (Object)new_AST_Send((Object)send4712, (Object)SMB__equal, 1, constant3825);
send4714 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4713);
send4715 = (Object)new_AST_Send((Object)localvariable864, (Object)symbol1795, 0);
send4716 = (Object)new_AST_Send((Object)localvariable864, (Object)symbol1797, 0);
send4717 = (Object)new_AST_Send((Object)send4715, (Object)SMB__plus, 1, send4716);
send4718 = (Object)new_AST_Send((Object)localvariable864, (Object)symbol1799, 0);
send4719 = (Object)new_AST_Send((Object)send4717, (Object)SMB__plus, 1, send4718);
method1745 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array865, 6, assign416, send4705, send4708, send4711, send4714, send4719);
symbol1776 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure1614 = (Object)new_Runtime_MethodClosure(method1745);
store_method((Type_Class)class166, (Type_Symbol)symbol1776, (Runtime_MethodClosure)methodclosure1614);

// BridgeTest>>tmNumberEquals
smallint2432 = (Object)new_Type_SmallInt(1);
constant3826 = (Object)new_AST_Constant((Object)smallint2432);
smallint2433 = (Object)new_Type_SmallInt(1);
constant3827 = (Object)new_AST_Constant((Object)smallint2433);
send4720 = (Object)new_AST_Send((Object)constant3826, (Object)SMB__equal, 1, constant3827);
method1746 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4720);
symbol1788 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure1615 = (Object)new_Runtime_MethodClosure(method1746);
store_method((Type_Class)class166, (Type_Symbol)symbol1788, (Runtime_MethodClosure)methodclosure1615);

// BridgeTest>>tmNumber
smallint2434 = (Object)new_Type_SmallInt(1);
constant3828 = (Object)new_AST_Constant((Object)smallint2434);
method1747 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3828);
symbol1761 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure1616 = (Object)new_Runtime_MethodClosure(method1747);
store_method((Type_Class)class166, (Type_Symbol)symbol1761, (Runtime_MethodClosure)methodclosure1616);

// BridgeTest>>tmNumberSubtract
smallint2435 = (Object)new_Type_SmallInt(2);
constant3829 = (Object)new_AST_Constant((Object)smallint2435);
smallint2436 = (Object)new_Type_SmallInt(1);
constant3830 = (Object)new_AST_Constant((Object)smallint2436);
send4721 = (Object)new_AST_Send((Object)constant3829, (Object)SMB__minus, 1, constant3830);
method1748 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4721);
symbol1781 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure1617 = (Object)new_Runtime_MethodClosure(method1748);
store_method((Type_Class)class166, (Type_Symbol)symbol1781, (Runtime_MethodClosure)methodclosure1617);

// BridgeTest>>tmLocalVariable
localvariable866 = (Object)new_AST_Variable_named(L"a");
array867 = (Object)new_Type_Array_with(1, localvariable866);
smallint2437 = (Object)new_Type_SmallInt(1);
constant3831 = (Object)new_AST_Constant((Object)smallint2437);
assign417 = (Object)new_AST_Assign((Object)localvariable866, (Object)constant3831);
method1749 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array867, 2, assign417, localvariable866);
symbol1778 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure1618 = (Object)new_Runtime_MethodClosure(method1749);
store_method((Type_Class)class166, (Type_Symbol)symbol1778, (Runtime_MethodClosure)methodclosure1618);

// BridgeTest>>assert:
localvariable867 = (Object)new_AST_Variable_named(L"bool");
array868 = (Object)new_Type_Array_with(1, localvariable867);
symbol1801 = (Object)new_Type_Symbol_cached(L"fail");
send4722 = (Object)new_AST_Send((Object)Self, (Object)symbol1801, 0);
block574 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send4722);
send4723 = (Object)new_AST_Send((Object)localvariable867, (Object)SMB_ifFalse_, 1, block574);
method1750 = (Object)new_AST_Method_with((Type_Array)array868, (Type_Array)empty_Type_Array, 1, send4723);
methodclosure1619 = (Object)new_Runtime_MethodClosure(method1750);
store_method((Type_Class)class166, (Type_Symbol)symbol1771, (Runtime_MethodClosure)methodclosure1619);

// BridgeTest>>tmNumberMult
smallint2438 = (Object)new_Type_SmallInt(2);
constant3832 = (Object)new_AST_Constant((Object)smallint2438);
smallint2439 = (Object)new_Type_SmallInt(3);
constant3833 = (Object)new_AST_Constant((Object)smallint2439);
send4724 = (Object)new_AST_Send((Object)constant3832, (Object)SMB__times, 1, constant3833);
method1751 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4724);
symbol1763 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure1620 = (Object)new_Runtime_MethodClosure(method1751);
store_method((Type_Class)class166, (Type_Symbol)symbol1763, (Runtime_MethodClosure)methodclosure1620);

// BridgeTest>>tmMethodArgument:
localvariable868 = (Object)new_AST_Variable_named(L"arg");
array869 = (Object)new_Type_Array_with(1, localvariable868);
smallint2440 = (Object)new_Type_SmallInt(1);
constant3834 = (Object)new_AST_Constant((Object)smallint2440);
send4725 = (Object)new_AST_Send((Object)localvariable868, (Object)SMB__plus, 1, constant3834);
method1752 = (Object)new_AST_Method_with((Type_Array)array869, (Type_Array)empty_Type_Array, 1, send4725);
symbol1791 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure1621 = (Object)new_Runtime_MethodClosure(method1752);
store_method((Type_Class)class166, (Type_Symbol)symbol1791, (Runtime_MethodClosure)methodclosure1621);

// BridgeTest>>tmMethodArguments:with:with:
localvariable869 = (Object)new_AST_Variable_named(L"arg1");
localvariable870 = (Object)new_AST_Variable_named(L"arg2");
localvariable871 = (Object)new_AST_Variable_named(L"arg3");
array870 = (Object)new_Type_Array_with(3, localvariable869, localvariable870, localvariable871);
send4726 = (Object)new_AST_Send((Object)localvariable869, (Object)SMB__concat, 1, localvariable870);
send4727 = (Object)new_AST_Send((Object)send4726, (Object)SMB__concat, 1, localvariable871);
method1753 = (Object)new_AST_Method_with((Type_Array)array870, (Type_Array)empty_Type_Array, 1, send4727);
symbol1783 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure1622 = (Object)new_Runtime_MethodClosure(method1753);
store_method((Type_Class)class166, (Type_Symbol)symbol1783, (Runtime_MethodClosure)methodclosure1622);

// BridgeTest>>tmBooleanTrue
method1754 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol1785 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure1623 = (Object)new_Runtime_MethodClosure(method1754);
store_method((Type_Class)class166, (Type_Symbol)symbol1785, (Runtime_MethodClosure)methodclosure1623);

// BridgeTest>>tmStringEquals
string775 = (Object)new_Type_String(L"String");
constant3835 = (Object)new_AST_Constant((Object)string775);
string776 = (Object)new_Type_String(L"String");
constant3836 = (Object)new_AST_Constant((Object)string776);
send4728 = (Object)new_AST_Send((Object)constant3835, (Object)SMB__equal, 1, constant3836);
method1755 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4728);
symbol1775 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure1624 = (Object)new_Runtime_MethodClosure(method1755);
store_method((Type_Class)class166, (Type_Symbol)symbol1775, (Runtime_MethodClosure)methodclosure1624);

// BridgeTest>>tmCharacter
character496 = (Object)new_Type_Character(L'C');
constant3837 = (Object)new_AST_Constant((Object)character496);
method1756 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3837);
symbol1767 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure1625 = (Object)new_Runtime_MethodClosure(method1756);
store_method((Type_Class)class166, (Type_Symbol)symbol1767, (Runtime_MethodClosure)methodclosure1625);

// BridgeTest>>tmSymbolCharacterEquals
symbol1802 = (Object)new_Type_Symbol_cached(L"S");
constant3838 = (Object)new_AST_Constant((Object)symbol1802);
character497 = (Object)new_Type_Character(L'S');
constant3839 = (Object)new_AST_Constant((Object)character497);
send4729 = (Object)new_AST_Send((Object)constant3838, (Object)SMB__equal, 1, constant3839);
method1757 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4729);
symbol1759 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure1626 = (Object)new_Runtime_MethodClosure(method1757);
store_method((Type_Class)class166, (Type_Symbol)symbol1759, (Runtime_MethodClosure)methodclosure1626);

// BridgeTest>>tmCharacterStringEquals
character498 = (Object)new_Type_Character(L'C');
constant3840 = (Object)new_AST_Constant((Object)character498);
string777 = (Object)new_Type_String(L"C");
constant3841 = (Object)new_AST_Constant((Object)string777);
send4730 = (Object)new_AST_Send((Object)constant3840, (Object)SMB__equal, 1, constant3841);
method1758 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4730);
symbol1787 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure1627 = (Object)new_Runtime_MethodClosure(method1758);
store_method((Type_Class)class166, (Type_Symbol)symbol1787, (Runtime_MethodClosure)methodclosure1627);

// BridgeTest>>tmFibonacci
method1759 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol1760 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure1628 = (Object)new_Runtime_MethodClosure(method1759);
store_method((Type_Class)class166, (Type_Symbol)symbol1760, (Runtime_MethodClosure)methodclosure1628);

// BridgeTest>>tmString
string778 = (Object)new_Type_String(L"String");
constant3842 = (Object)new_AST_Constant((Object)string778);
method1760 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3842);
symbol1780 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure1629 = (Object)new_Runtime_MethodClosure(method1760);
store_method((Type_Class)class166, (Type_Symbol)symbol1780, (Runtime_MethodClosure)methodclosure1629);

// BridgeTest>>tmSuperClassSuperSend
localvariable872 = (Object)new_AST_Variable_named(L"instance");
array871 = (Object)new_Type_Array_with(1, localvariable872);
send4731 = (Object)new_AST_Send((Object)classreference177, (Object)SMB_basicNew, 0);
assign418 = (Object)new_AST_Assign((Object)localvariable872, (Object)send4731);
send4732 = (Object)new_AST_Send((Object)localvariable872, (Object)symbol1796, 0);
method1761 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array871, 2, assign418, send4732);
symbol1777 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure1630 = (Object)new_Runtime_MethodClosure(method1761);
store_method((Type_Class)class166, (Type_Symbol)symbol1777, (Runtime_MethodClosure)methodclosure1630);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable873 = (Object)new_AST_Variable_named(L"instance");
array872 = (Object)new_Type_Array_with(1, localvariable873);
smallint2441 = (Object)new_Type_SmallInt(100);
constant3843 = (Object)new_AST_Constant((Object)smallint2441);
send4733 = (Object)new_AST_Send((Object)classreference175, (Object)SMB_basicNew_, 1, constant3843);
assign419 = (Object)new_AST_Assign((Object)localvariable873, (Object)send4733);
smallint2442 = (Object)new_Type_SmallInt(1);
constant3844 = (Object)new_AST_Constant((Object)smallint2442);
smallint2443 = (Object)new_Type_SmallInt(1);
constant3845 = (Object)new_AST_Constant((Object)smallint2443);
send4734 = (Object)new_AST_Send((Object)localvariable873, (Object)SMB_at_put_, 2, constant3844, constant3845);
smallint2444 = (Object)new_Type_SmallInt(99);
constant3846 = (Object)new_AST_Constant((Object)smallint2444);
smallint2445 = (Object)new_Type_SmallInt(100);
constant3847 = (Object)new_AST_Constant((Object)smallint2445);
send4735 = (Object)new_AST_Send((Object)localvariable873, (Object)SMB_at_put_, 2, constant3846, constant3847);
smallint2446 = (Object)new_Type_SmallInt(1);
constant3848 = (Object)new_AST_Constant((Object)smallint2446);
send4736 = (Object)new_AST_Send((Object)localvariable873, (Object)SMB_at_, 1, constant3848);
smallint2447 = (Object)new_Type_SmallInt(1);
constant3849 = (Object)new_AST_Constant((Object)smallint2447);
send4737 = (Object)new_AST_Send((Object)send4736, (Object)SMB__equal, 1, constant3849);
send4738 = (Object)new_AST_Send((Object)Self, (Object)symbol1771, 1, send4737);
method1762 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array872, 5, assign419, send4734, send4735, send4738, Self);
symbol1769 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure1631 = (Object)new_Runtime_MethodClosure(method1762);
store_method((Type_Class)class166, (Type_Symbol)symbol1769, (Runtime_MethodClosure)methodclosure1631);

// BridgeTest>>tmSymbolEquals
symbol1803 = (Object)new_Type_Symbol_cached(L"Symbol");
constant3850 = (Object)new_AST_Constant((Object)symbol1803);
constant3851 = (Object)new_AST_Constant((Object)symbol1803);
send4739 = (Object)new_AST_Send((Object)constant3850, (Object)SMB__equal, 1, constant3851);
method1763 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4739);
symbol1789 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure1632 = (Object)new_Runtime_MethodClosure(method1763);
store_method((Type_Class)class166, (Type_Symbol)symbol1789, (Runtime_MethodClosure)methodclosure1632);

// BridgeTest>>tmSimpleBasicArithmetik
smallint2448 = (Object)new_Type_SmallInt(1);
constant3852 = (Object)new_AST_Constant((Object)smallint2448);
smallint2449 = (Object)new_Type_SmallInt(2);
constant3853 = (Object)new_AST_Constant((Object)smallint2449);
send4740 = (Object)new_AST_Send((Object)constant3852, (Object)SMB__plus, 1, constant3853);
smallint2450 = (Object)new_Type_SmallInt(2);
constant3854 = (Object)new_AST_Constant((Object)smallint2450);
send4741 = (Object)new_AST_Send((Object)send4740, (Object)SMB__plus, 1, constant3854);
smallint2451 = (Object)new_Type_SmallInt(5);
constant3855 = (Object)new_AST_Constant((Object)smallint2451);
send4742 = (Object)new_AST_Send((Object)send4741, (Object)SMB__times, 1, constant3855);
method1764 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4742);
symbol1770 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure1633 = (Object)new_Runtime_MethodClosure(method1764);
store_method((Type_Class)class166, (Type_Symbol)symbol1770, (Runtime_MethodClosure)methodclosure1633);

// BridgeTest>>tmBooleanSymbolEquals
symbol1804 = (Object)new_Type_Symbol_cached(L"true");
constant3856 = (Object)new_AST_Constant((Object)symbol1804);
send4743 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, constant3856);
method1765 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4743);
symbol1762 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure1634 = (Object)new_Runtime_MethodClosure(method1765);
store_method((Type_Class)class166, (Type_Symbol)symbol1762, (Runtime_MethodClosure)methodclosure1634);

// BridgeTest>>tmBooleanEquals
send4744 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, True_Const);
method1766 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4744);
symbol1790 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure1635 = (Object)new_Runtime_MethodClosure(method1766);
store_method((Type_Class)class166, (Type_Symbol)symbol1790, (Runtime_MethodClosure)methodclosure1635);

// BridgeTest>>tmSymbol
constant3857 = (Object)new_AST_Constant((Object)symbol1803);
method1767 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3857);
symbol1782 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure1636 = (Object)new_Runtime_MethodClosure(method1767);
store_method((Type_Class)class166, (Type_Symbol)symbol1782, (Runtime_MethodClosure)methodclosure1636);

// BridgeTest>>tmBooleanFalse
method1768 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol1779 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure1637 = (Object)new_Runtime_MethodClosure(method1768);
store_method((Type_Class)class166, (Type_Symbol)symbol1779, (Runtime_MethodClosure)methodclosure1637);

// BridgeTest>>tmCharacterEquals
character499 = (Object)new_Type_Character(L'C');
constant3858 = (Object)new_AST_Constant((Object)character499);
character500 = (Object)new_Type_Character(L'C');
constant3859 = (Object)new_AST_Constant((Object)character500);
send4745 = (Object)new_AST_Send((Object)constant3858, (Object)SMB__equal, 1, constant3859);
method1769 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4745);
symbol1772 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure1638 = (Object)new_Runtime_MethodClosure(method1769);
store_method((Type_Class)class166, (Type_Symbol)symbol1772, (Runtime_MethodClosure)methodclosure1638);

// BridgeTest>>tmSimpleReturn
smallint2452 = (Object)new_Type_SmallInt(1);
constant3860 = (Object)new_AST_Constant((Object)smallint2452);
method1770 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3860);
symbol1764 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure1639 = (Object)new_Runtime_MethodClosure(method1770);
store_method((Type_Class)class166, (Type_Symbol)symbol1764, (Runtime_MethodClosure)methodclosure1639);

// BridgeTest>>tmNumberAdd
smallint2453 = (Object)new_Type_SmallInt(1);
constant3861 = (Object)new_AST_Constant((Object)smallint2453);
smallint2454 = (Object)new_Type_SmallInt(1);
constant3862 = (Object)new_AST_Constant((Object)smallint2454);
send4746 = (Object)new_AST_Send((Object)constant3861, (Object)SMB__plus, 1, constant3862);
method1771 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4746);
symbol1792 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure1640 = (Object)new_Runtime_MethodClosure(method1771);
store_method((Type_Class)class166, (Type_Symbol)symbol1792, (Runtime_MethodClosure)methodclosure1640);

// BridgeTest>>tmExtendedReturn
variable77 = (Object)new_AST_Variable_named(L"return");
array873 = (Object)new_Type_Array_with(1, variable77);
smallint2455 = (Object)new_Type_SmallInt(1);
constant3863 = (Object)new_AST_Constant((Object)smallint2455);
smallint2456 = (Object)new_Type_SmallInt(2);
constant3864 = (Object)new_AST_Constant((Object)smallint2456);
send4747 = (Object)new_AST_Send((Object)constant3863, (Object)SMB__gt, 1, constant3864);
smallint2457 = (Object)new_Type_SmallInt(1);
constant3865 = (Object)new_AST_Constant((Object)smallint2457);
send4748 = (Object)new_AST_Send((Object)variable77, (Object)SMB_escape_, 1, constant3865);
block575 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4748);
smallint2458 = (Object)new_Type_SmallInt(2);
constant3866 = (Object)new_AST_Constant((Object)smallint2458);
send4749 = (Object)new_AST_Send((Object)variable77, (Object)SMB_escape_, 1, constant3866);
block576 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4749);
send4750 = (Object)new_AST_Send((Object)send4747, (Object)SMB_ifTrue_ifFalse_, 2, block575, block576);
block577 = (Object)new_AST_Block_with((Type_Array)array873, (Type_Array)empty_Type_Array, 1, 2, send4750, Self);
send4751 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block577);
method1772 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4751);
symbol1784 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure1641 = (Object)new_Runtime_MethodClosure(method1772);
store_method((Type_Class)class166, (Type_Symbol)symbol1784, (Runtime_MethodClosure)methodclosure1641);
classreference178 = (Object)new_Organization_ClassReference((Type_Class)class166);
classreference179 = (Object)new_Organization_ClassReference((Type_Class)class168);
>>>>>>> changes in the xcode project
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
<<<<<<< HEAD
Object send4904 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol369, 0);
Object result = (Object)Eval((Object)send4904);
=======
Object send4752 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1790, 0);
Object result = (Object)Eval((Object)send4752);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
<<<<<<< HEAD
Object send4905 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol357, 0);
Object result = (Object)Eval((Object)send4905);
=======
Object send4753 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1779, 0);
Object result = (Object)Eval((Object)send4753);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
<<<<<<< HEAD
Object send4906 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol380, 0);
Object result = (Object)Eval((Object)send4906);
=======
Object send4754 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1762, 0);
Object result = (Object)Eval((Object)send4754);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
<<<<<<< HEAD
Object send4907 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol384, 0);
Object result = (Object)Eval((Object)send4907);
=======
Object send4755 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1785, 0);
Object result = (Object)Eval((Object)send4755);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
<<<<<<< HEAD
Object send4908 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol360, 0);
Object result = (Object)Eval((Object)send4908);
=======
Object send4756 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1767, 0);
Object result = (Object)Eval((Object)send4756);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
<<<<<<< HEAD
Object send4909 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol363, 0);
Object result = (Object)Eval((Object)send4909);
=======
Object send4757 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1772, 0);
Object result = (Object)Eval((Object)send4757);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
<<<<<<< HEAD
Object send4910 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol364, 0);
Object result = (Object)Eval((Object)send4910);
=======
Object send4758 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1787, 0);
Object result = (Object)Eval((Object)send4758);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
<<<<<<< HEAD
Object send4911 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol388, 0);
Object result = (Object)Eval((Object)send4911);
ASSERT_EMPTY_STACK
Object symbol402 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol402);
=======
Object send4759 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1786, 0);
Object result = (Object)Eval((Object)send4759);
ASSERT_EMPTY_STACK
Object symbol1805 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol1805);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
<<<<<<< HEAD
Object send4912 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol375, 0);
Object result = (Object)Eval((Object)send4912);
=======
Object send4760 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1784, 0);
Object result = (Object)Eval((Object)send4760);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
<<<<<<< HEAD
Object send4913 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol368, 0);
Object result = (Object)Eval((Object)send4913);
=======
Object send4761 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1778, 0);
Object result = (Object)Eval((Object)send4761);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
<<<<<<< HEAD
Object smallint2212 = (Object)new_Type_SmallInt(1);
Object constant2802 = (Object)new_AST_Constant((Object)smallint2212);
Object send4914 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol371, 1, constant2802);
Object result = (Object)Eval((Object)send4914);
=======
Object smallint2459 = (Object)new_Type_SmallInt(1);
Object constant3867 = (Object)new_AST_Constant((Object)smallint2459);
Object send4762 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1791, 1, constant3867);
Object result = (Object)Eval((Object)send4762);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
<<<<<<< HEAD
Object string366 = (Object)new_Type_String(L"asdf");
Object constant2803 = (Object)new_AST_Constant((Object)string366);
Object string367 = (Object)new_Type_String(L"asdf");
Object constant2804 = (Object)new_AST_Constant((Object)string367);
Object string368 = (Object)new_Type_String(L"df");
Object constant2805 = (Object)new_AST_Constant((Object)string368);
Object send4915 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol385, 3, constant2803, constant2804, constant2805);
Object result = (Object)Eval((Object)send4915);
ASSERT_EMPTY_STACK
Object string369 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string369);
=======
Object string779 = (Object)new_Type_String(L"asdf");
Object constant3868 = (Object)new_AST_Constant((Object)string779);
Object string780 = (Object)new_Type_String(L"asdf");
Object constant3869 = (Object)new_AST_Constant((Object)string780);
Object string781 = (Object)new_Type_String(L"df");
Object constant3870 = (Object)new_AST_Constant((Object)string781);
Object send4763 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1783, 3, constant3868, constant3869, constant3870);
Object result = (Object)Eval((Object)send4763);
ASSERT_EMPTY_STACK
Object string782 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string782);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
<<<<<<< HEAD
Object send4916 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol389, 0);
Object result = (Object)Eval((Object)send4916);
=======
Object send4764 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1761, 0);
Object result = (Object)Eval((Object)send4764);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
<<<<<<< HEAD
Object send4917 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol382, 0);
Object result = (Object)Eval((Object)send4917);
=======
Object send4765 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1792, 0);
Object result = (Object)Eval((Object)send4765);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
<<<<<<< HEAD
Object send4918 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol378, 0);
Object result = (Object)Eval((Object)send4918);
=======
Object send4766 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1758, 0);
Object result = (Object)Eval((Object)send4766);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
<<<<<<< HEAD
Object send4919 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol365, 0);
Object result = (Object)Eval((Object)send4919);
=======
Object send4767 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1788, 0);
Object result = (Object)Eval((Object)send4767);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
<<<<<<< HEAD
Object send4920 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol379, 0);
Object result = (Object)Eval((Object)send4920);
=======
Object send4768 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1763, 0);
Object result = (Object)Eval((Object)send4768);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
<<<<<<< HEAD
Object send4921 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol383, 0);
Object result = (Object)Eval((Object)send4921);
=======
Object send4769 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1781, 0);
Object result = (Object)Eval((Object)send4769);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
<<<<<<< HEAD
Object send4922 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol362, 0);
Object result = (Object)Eval((Object)send4922);
=======
Object send4770 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1770, 0);
Object result = (Object)Eval((Object)send4770);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
<<<<<<< HEAD
Object send4923 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol386, 0);
Object result = (Object)Eval((Object)send4923);
=======
Object send4771 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1764, 0);
Object result = (Object)Eval((Object)send4771);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
<<<<<<< HEAD
Object send4924 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol372, 0);
Object result = (Object)Eval((Object)send4924);
ASSERT_EMPTY_STACK
Object string370 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string370);
=======
Object send4772 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1780, 0);
Object result = (Object)Eval((Object)send4772);
ASSERT_EMPTY_STACK
Object string783 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string783);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
<<<<<<< HEAD
Object send4925 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol370, 0);
Object result = (Object)Eval((Object)send4925);
=======
Object send4773 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1775, 0);
Object result = (Object)Eval((Object)send4773);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
<<<<<<< HEAD
Object send4926 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol387, 0);
Object result = (Object)Eval((Object)send4926);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol400);
=======
Object send4774 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1782, 0);
Object result = (Object)Eval((Object)send4774);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol1803);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
<<<<<<< HEAD
Object send4927 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol356, 0);
Object result = (Object)Eval((Object)send4927);
=======
Object send4775 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1759, 0);
Object result = (Object)Eval((Object)send4775);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
<<<<<<< HEAD
Object send4928 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol355, 0);
Object result = (Object)Eval((Object)send4928);
=======
Object send4776 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1789, 0);
Object result = (Object)Eval((Object)send4776);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
<<<<<<< HEAD
Object send4929 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol376, 1, True_Const);
Object result = (Object)Eval((Object)send4929);
=======
Object send4777 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1771, 1, True_Const);
Object result = (Object)Eval((Object)send4777);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
<<<<<<< HEAD
Object send4930 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol361, 0);
Object result = (Object)Eval((Object)send4930);
=======
Object send4778 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1760, 0);
Object result = (Object)Eval((Object)send4778);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b  + instance c
	
*/
<<<<<<< HEAD
Object send4931 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol374, 0);
Object result = (Object)Eval((Object)send4931);
=======
Object send4779 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1774, 0);
Object result = (Object)Eval((Object)send4779);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2.
*/
<<<<<<< HEAD
Object send4932 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol359, 0);
Object result = (Object)Eval((Object)send4932);
=======
Object send4780 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1766, 0);
Object result = (Object)Eval((Object)send4780);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
<<<<<<< HEAD
	^ self assert: instance test = 100
*/
Object send4933 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol377, 0);
Object result = (Object)Eval((Object)send4933);
ASSERT_EMPTY_STACK
assert0(result == Nil);
=======
	^ instance test
*/
Object send4781 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1777, 0);
Object result = (Object)Eval((Object)send4781);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
>>>>>>> changes in the xcode project
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b  + instance c
	
*/
<<<<<<< HEAD
Object send4934 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol367, 0);
Object result = (Object)Eval((Object)send4934);
=======
Object send4782 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1776, 0);
Object result = (Object)Eval((Object)send4782);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 99 put: 100.
	self assert: (instance at: 1) = 1.
	"TODO match one based index of Smalltalk with 0 based index of Pinocchio"
	self assert: (instance at: 99) = 100.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 99)
	
*/
<<<<<<< HEAD
Object send4935 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol381, 0);
Object result = (Object)Eval((Object)send4935);
=======
Object send4783 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1769, 0);
Object result = (Object)Eval((Object)send4783);
>>>>>>> changes in the xcode project
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
<<<<<<< HEAD
    Test_Class = (Type_Class)class209;
=======
    Test_Class = (Type_Class)class166;
>>>>>>> changes in the xcode project
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmSymbolCharacterEquals);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmSuperClassSuperSend);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmCharacterStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmSuperClass);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmBooleanSymbolEquals);
})