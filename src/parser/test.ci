// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
Object send7323;
Object symbol3261;
Object send7324;
Object method2478;
Object symbol3202;
Object methodclosure2430;
Object localvariable1049;
Object array1025;
Object send7325;
Object send7326;
Object method2479;
Object symbol3203;
Object methodclosure2431;
Object classreference309;
Object classreference310;
Object objectlayout373;
Object instancevariable1271;
Object instancevariable1272;
Object instancevariable1273;
Object instancevariable1274;
Object instancevariable1275;
Object symbol3198;
Object objectlayout374;
Object instancevariable1276;
Object instancevariable1277;
Object instancevariable1278;
Object class245;
Object classclass193;
Object classreference311;
Object classreference312;
Object objectlayout375;
Object instancevariable1279;
Object instancevariable1280;
Object instancevariable1281;
Object instancevariable1282;
Object instancevariable1283;
Object instancevariable1284;
Object instancevariable1285;
Object symbol3259;
Object objectlayout376;
Object instancevariable1286;
Object instancevariable1287;
Object class246;
Object classclass194;
Object method2480;
Object symbol3257;
Object methodclosure2432;
Object localvariable1050;
Object array1026;
Object assign710;
Object method2481;
Object symbol3255;
Object methodclosure2433;
Object method2482;
Object symbol3254;
Object methodclosure2434;
Object localvariable1051;
Object array1027;
Object assign711;
Object method2483;
Object symbol3258;
Object methodclosure2435;
Object localvariable1052;
Object array1028;
Object assign712;
Object method2484;
Object methodclosure2436;
Object method2485;
Object methodclosure2437;
Object smallint2891;
Object constant3832;
Object method2486;
Object symbol3260;
Object methodclosure2438;
Object classreference313;
Object objectlayout377;
Object instancevariable1288;
Object instancevariable1289;
Object instancevariable1290;
Object instancevariable1291;
Object instancevariable1292;
Object symbol3208;
Object objectlayout378;
Object instancevariable1293;
Object class247;
Object classclass195;
Object send7327;
Object method2487;
Object symbol3210;
Object methodclosure2439;
Object localvariable1053;
Object array1029;
Object symbol3262;
Object send7328;
Object block418;
Object send7329;
Object method2488;
Object symbol3230;
Object methodclosure2440;
Object variable56;
Object array1030;
Object smallint2892;
Object constant3833;
Object smallint2893;
Object constant3834;
Object send7330;
Object smallint2894;
Object constant3835;
Object send7331;
Object block419;
Object smallint2895;
Object constant3836;
Object send7332;
Object block420;
Object send7333;
Object block421;
Object send7334;
Object method2489;
Object symbol3219;
Object methodclosure2441;
Object smallint2896;
Object constant3837;
Object smallint2897;
Object constant3838;
Object send7335;
Object method2490;
Object symbol3239;
Object methodclosure2442;
Object string543;
Object constant3839;
Object string544;
Object constant3840;
Object send7336;
Object method2491;
Object symbol3212;
Object methodclosure2443;
Object localvariable1054;
Object array1031;
Object smallint2898;
Object constant3841;
Object assign713;
Object method2492;
Object symbol3240;
Object methodclosure2444;
Object localvariable1055;
Object array1032;
Object objectlayout379;
Object instancevariable1294;
Object instancevariable1295;
Object instancevariable1296;
Object instancevariable1297;
Object instancevariable1298;
Object instancevariable1299;
Object symbol3222;
Object objectlayout380;
Object instancevariable1300;
Object class248;
Object classclass196;
Object method2493;
Object symbol3256;
Object methodclosure2445;
Object localvariable1056;
Object array1033;
Object assign714;
Object method2494;
Object symbol3253;
Object methodclosure2446;
Object method2495;
Object methodclosure2447;
Object localvariable1057;
Object array1034;
Object assign715;
Object method2496;
Object methodclosure2448;
Object smallint2899;
Object constant3842;
Object super40;
Object send7337;
Object method2497;
Object methodclosure2449;
Object classreference314;
Object send7338;
Object assign716;
Object smallint2900;
Object constant3843;
Object send7339;
Object send7340;
Object smallint2901;
Object constant3844;
Object send7341;
Object send7342;
Object send7343;
Object send7344;
Object send7345;
Object smallint2902;
Object constant3845;
Object send7346;
Object send7347;
Object smallint2903;
Object constant3846;
Object send7348;
Object send7349;
Object send7350;
Object smallint2904;
Object constant3847;
Object send7351;
Object send7352;
Object method2498;
Object symbol3232;
Object methodclosure2450;
Object string545;
Object constant3848;
Object method2499;
Object symbol3224;
Object methodclosure2451;
Object localvariable1058;
Object array1035;
Object objectlayout381;
Object instancevariable1301;
Object instancevariable1302;
Object instancevariable1303;
Object instancevariable1304;
Object instancevariable1305;
Object instancevariable1306;
Object instancevariable1307;
Object symbol3213;
Object objectlayout382;
Object instancevariable1308;
Object instancevariable1309;
Object instancevariable1310;
Object instancevariable1311;
Object class249;
Object classclass197;
Object smallint2905;
Object constant3849;
Object assign717;
Object method2500;
Object symbol3250;
Object methodclosure2452;
Object string546;
Object constant3850;
Object method2501;
Object symbol3249;
Object methodclosure2453;
Object method2502;
Object symbol3251;
Object methodclosure2454;
Object localvariable1059;
Object array1036;
Object assign718;
Object method2503;
Object symbol3252;
Object methodclosure2455;
Object localvariable1060;
Object array1037;
Object assign719;
Object method2504;
Object methodclosure2456;
Object localvariable1061;
Object array1038;
Object assign720;
Object method2505;
Object methodclosure2457;
Object method2506;
Object methodclosure2458;
Object method2507;
Object methodclosure2459;
Object method2508;
Object methodclosure2460;
Object localvariable1062;
Object array1039;
Object assign721;
Object method2509;
Object methodclosure2461;
Object classreference315;
Object send7353;
Object assign722;
Object localvariable1063;
Object array1040;
Object smallint2906;
Object constant3851;
Object send7354;
Object smallint2907;
Object constant3852;
Object send7355;
Object smallint2908;
Object constant3853;
Object send7356;
Object block422;
Object send7357;
Object send7358;
Object smallint2909;
Object constant3854;
Object send7359;
Object send7360;
Object send7361;
Object smallint2910;
Object constant3855;
Object send7362;
Object send7363;
Object send7364;
Object smallint2911;
Object constant3856;
Object send7365;
Object send7366;
Object send7367;
Object send7368;
Object send7369;
Object send7370;
Object send7371;
Object method2510;
Object symbol3214;
Object methodclosure2462;
Object send7372;
Object send7373;
Object send7374;
Object send7375;
Object send7376;
Object method2511;
Object symbol3242;
Object methodclosure2463;
Object localvariable1064;
Object array1041;
Object send7377;
Object assign723;
Object send7378;
Object smallint2912;
Object constant3857;
Object send7379;
Object send7380;
Object method2512;
Object symbol3234;
Object methodclosure2464;
Object method2513;
Object symbol3226;
Object methodclosure2465;
Object smallint2913;
Object constant3858;
Object send7381;
Object send7382;
Object smallint2914;
Object constant3859;
Object send7383;
Object send7384;
Object method2514;
Object symbol3246;
Object methodclosure2466;
Object send7385;
Object method2515;
Object symbol3216;
Object methodclosure2467;
Object smallint2915;
Object constant3860;
Object smallint2916;
Object constant3861;
Object send7386;
Object smallint2917;
Object constant3862;
Object send7387;
Object smallint2918;
Object constant3863;
Object send7388;
Object method2516;
Object symbol3244;
Object methodclosure2468;
Object method2517;
Object symbol3236;
Object methodclosure2469;
Object method2518;
Object symbol3228;
Object methodclosure2470;
Object symbol3263;
Object constant3864;
Object constant3865;
Object send7389;
Object method2519;
Object symbol3248;
Object methodclosure2471;
Object localvariable1065;
Object array1042;
Object objectlayout383;
Object instancevariable1312;
Object instancevariable1313;
Object instancevariable1314;
Object instancevariable1315;
Object instancevariable1316;
Object symbol3220;
Object arraylayout40;
Object instancevariable1317;
Object instancevariable1318;
Object instancevariable1319;
Object instancevariable1320;
Object class250;
Object classclass198;
Object localvariable1066;
Object array1043;
Object assign724;
Object method2520;
Object methodclosure2472;
Object localvariable1067;
Object array1044;
Object assign725;
Object method2521;
Object methodclosure2473;
Object method2522;
Object methodclosure2474;
Object method2523;
Object methodclosure2475;
Object method2524;
Object methodclosure2476;
Object localvariable1068;
Object array1045;
Object assign726;
Object method2525;
Object methodclosure2477;
Object classreference316;
Object send7390;
Object assign727;
Object localvariable1069;
Object array1046;
Object smallint2919;
Object constant3866;
Object send7391;
Object smallint2920;
Object constant3867;
Object send7392;
Object smallint2921;
Object constant3868;
Object send7393;
Object block423;
Object send7394;
Object send7395;
Object smallint2922;
Object constant3869;
Object send7396;
Object send7397;
Object send7398;
Object smallint2923;
Object constant3870;
Object send7399;
Object send7400;
Object send7401;
Object smallint2924;
Object constant3871;
Object send7402;
Object send7403;
Object send7404;
Object send7405;
Object send7406;
Object send7407;
Object send7408;
Object method2526;
Object symbol3221;
Object methodclosure2478;
Object smallint2925;
Object constant3872;
Object smallint2926;
Object constant3873;
Object send7409;
Object method2527;
Object symbol3218;
Object methodclosure2479;
Object smallint2927;
Object constant3874;
Object method2528;
Object symbol3238;
Object methodclosure2480;
Object method2529;
Object symbol3211;
Object methodclosure2481;
Object smallint2928;
Object constant3875;
Object smallint2929;
Object constant3876;
Object send7410;
Object method2530;
Object symbol3231;
Object methodclosure2482;
Object send7411;
Object send7412;
Object send7413;
Object send7414;
Object send7415;
Object send7416;
Object send7417;
Object send7418;
Object send7419;
Object send7420;
Object send7421;
Object send7422;
Object smallint2930;
Object constant3877;
Object send7423;
Object smallint2931;
Object constant3878;
Object send7424;
Object smallint2932;
Object constant3879;
Object send7425;
Object send7426;
Object smallint2933;
Object constant3880;
Object send7427;
Object send7428;
Object send7429;
Object smallint2934;
Object constant3881;
Object send7430;
Object send7431;
Object send7432;
Object smallint2935;
Object constant3882;
Object send7433;
Object send7434;
Object method2531;
Object symbol3223;
Object methodclosure2483;
Object symbol3264;
Object constant3883;
Object character298;
Object constant3884;
Object send7435;
Object method2532;
Object symbol3241;
Object methodclosure2484;
Object localvariable1070;
Object array1047;
Object smallint2936;
Object constant3885;
Object send7436;
Object assign728;
Object smallint2937;
Object constant3886;
Object smallint2938;
Object constant3887;
Object send7437;
Object smallint2939;
Object constant3888;
Object smallint2940;
Object constant3889;
Object send7438;
Object smallint2941;
Object constant3890;
Object send7439;
Object smallint2942;
Object constant3891;
Object send7440;
Object send7441;
Object smallint2943;
Object constant3892;
Object send7442;
Object smallint2944;
Object constant3893;
Object send7443;
Object send7444;
Object localvariable1071;
Object array1048;
Object smallint2945;
Object constant3894;
Object send7445;
Object smallint2946;
Object constant3895;
Object send7446;
Object smallint2947;
Object constant3896;
Object send7447;
Object block424;
Object send7448;
Object send7449;
Object smallint2948;
Object constant3897;
Object send7450;
Object send7451;
Object send7452;
Object smallint2949;
Object constant3898;
Object send7453;
Object send7454;
Object send7455;
Object smallint2950;
Object constant3899;
Object send7456;
Object send7457;
Object send7458;
Object send7459;
Object send7460;
Object smallint2951;
Object constant3900;
Object send7461;
Object send7462;
Object send7463;
Object send7464;
Object smallint2952;
Object constant3901;
Object send7465;
Object send7466;
Object method2533;
Object symbol3233;
Object methodclosure2485;
Object constant3902;
Object method2534;
Object symbol3225;
Object methodclosure2486;
Object character299;
Object constant3903;
Object character300;
Object constant3904;
Object send7467;
Object method2535;
Object symbol3245;
Object methodclosure2487;
Object localvariable1072;
Object array1049;
Object smallint2953;
Object constant3905;
Object send7468;
Object method2536;
Object symbol3215;
Object methodclosure2488;
Object localvariable1073;
Object localvariable1074;
Object localvariable1075;
Object array1050;
Object send7469;
Object send7470;
Object method2537;
Object symbol3243;
Object methodclosure2489;
Object smallint2954;
Object constant3906;
Object method2538;
Object symbol3235;
Object methodclosure2490;
Object symbol3265;
Object constant3907;
Object send7471;
Object method2539;
Object symbol3227;
Object methodclosure2491;
Object smallint2955;
Object constant3908;
Object smallint2956;
Object constant3909;
Object send7472;
Object method2540;
Object symbol3247;
Object methodclosure2492;
Object character301;
Object constant3910;
Object string547;
Object constant3911;
Object send7473;
Object method2541;
Object symbol3217;
Object methodclosure2493;
Object send7474;
Object method2542;
Object symbol3209;
Object methodclosure2494;
Object smallint2957;
Object constant3912;
Object smallint2958;
Object constant3913;
Object send7475;
Object method2543;
Object symbol3237;
Object methodclosure2495;
Object character302;
Object constant3914;
Object method2544;
Object symbol3229;
Object methodclosure2496;
Object classreference317;

void create_ast() {

// Behavior>>new
send7323 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
symbol3261 = (Object)new_Type_Symbol_cached(L"initialize");
send7324 = (Object)new_AST_Send((Object)send7323, (Object)symbol3261, 0);
method2478 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7324);
symbol3202 = (Object)new_Type_Symbol_cached(L"new");
methodclosure2430 = (Object)new_Runtime_MethodClosure(method2478);
store_method((Type_Class)Behaviour, (Type_Symbol)symbol3202, (Runtime_MethodClosure)methodclosure2430);

// Behavior>>new:
localvariable1049 = (Object)new_AST_Variable_named(L"sizeRequested");
array1025 = (Object)new_Type_Array_with(1, (Object)localvariable1049);
send7325 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable1049);
send7326 = (Object)new_AST_Send((Object)send7325, (Object)symbol3261, 0);
method2479 = (Object)new_AST_Method_with((Type_Array)array1025, (Type_Array)empty_Type_Array, 1, send7326);
symbol3203 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure2431 = (Object)new_Runtime_MethodClosure(method2479);
store_method((Type_Class)Behaviour, (Type_Symbol)symbol3203, (Runtime_MethodClosure)methodclosure2431);
classreference309 = (Object)new_Organization_ClassReference((Type_Class)Behaviour);
classreference310 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);
objectlayout373 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable1271 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout373)->values[0] = instancevariable1271;
instancevariable1272 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout373)->values[1] = instancevariable1272;
instancevariable1273 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout373)->values[2] = instancevariable1273;
instancevariable1274 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout373)->values[3] = instancevariable1274;
instancevariable1275 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout373)->values[4] = instancevariable1275;
symbol3198 = (Object)new_Type_Symbol_cached(L"ClassDescription");
objectlayout374 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable1276 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout374)->values[0] = instancevariable1276;
instancevariable1277 = (Object)new_AST_InstVariable(1, L"instanceVariables");
((Type_Array)objectlayout374)->values[1] = instancevariable1277;
instancevariable1278 = (Object)new_AST_InstVariable(2, L"organization");
((Type_Array)objectlayout374)->values[2] = instancevariable1278;
class245 = (Object)new_Class_withMeta((Object)Behaviour, objectlayout374, objectlayout373);
((Type_Class)class245)->name = (Type_Symbol)symbol3198;
classclass193 = (Object)HEADER(class245);
classreference311 = (Object)new_Organization_ClassReference((Type_Class)class245);
classreference312 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
objectlayout375 = (Object)create_type_with_vars(Type_ObjectLayout, 7);
instancevariable1279 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout375)->values[0] = instancevariable1279;
instancevariable1280 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout375)->values[1] = instancevariable1280;
instancevariable1281 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout375)->values[2] = instancevariable1281;
instancevariable1282 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout375)->values[3] = instancevariable1282;
instancevariable1283 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout375)->values[4] = instancevariable1283;
instancevariable1284 = (Object)new_AST_InstVariable(5, L"a");
((Type_Array)objectlayout375)->values[5] = instancevariable1284;
instancevariable1285 = (Object)new_AST_InstVariable(6, L"b");
((Type_Array)objectlayout375)->values[6] = instancevariable1285;
symbol3259 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout376 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
instancevariable1286 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout376)->values[0] = instancevariable1286;
instancevariable1287 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)objectlayout376)->values[1] = instancevariable1287;
class246 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout376, objectlayout375);
((Type_Class)class246)->name = (Type_Symbol)symbol3259;
classclass194 = (Object)HEADER(class246);

// SuperClassTestClass class>>a
method2480 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1284);
symbol3257 = (Object)new_Type_Symbol_cached(L"a");
methodclosure2432 = (Object)new_Runtime_MethodClosure(method2480);
store_method((Type_Class)classclass194, (Type_Symbol)symbol3257, (Runtime_MethodClosure)methodclosure2432);

// SuperClassTestClass class>>a:
localvariable1050 = (Object)new_AST_Variable_named(L"anObject");
array1026 = (Object)new_Type_Array_with(1, (Object)localvariable1050);
assign710 = (Object)new_AST_Assign((Object)instancevariable1284, (Object)localvariable1050);
method2481 = (Object)new_AST_Method_with((Type_Array)array1026, (Type_Array)empty_Type_Array, 2, assign710, Self);
symbol3255 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure2433 = (Object)new_Runtime_MethodClosure(method2481);
store_method((Type_Class)classclass194, (Type_Symbol)symbol3255, (Runtime_MethodClosure)methodclosure2433);

// SuperClassTestClass class>>b
method2482 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1285);
symbol3254 = (Object)new_Type_Symbol_cached(L"b");
methodclosure2434 = (Object)new_Runtime_MethodClosure(method2482);
store_method((Type_Class)classclass194, (Type_Symbol)symbol3254, (Runtime_MethodClosure)methodclosure2434);

// SuperClassTestClass class>>b:
localvariable1051 = (Object)new_AST_Variable_named(L"anObject");
array1027 = (Object)new_Type_Array_with(1, (Object)localvariable1051);
assign711 = (Object)new_AST_Assign((Object)instancevariable1285, (Object)localvariable1051);
method2483 = (Object)new_AST_Method_with((Type_Array)array1027, (Type_Array)empty_Type_Array, 2, assign711, Self);
symbol3258 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure2435 = (Object)new_Runtime_MethodClosure(method2483);
store_method((Type_Class)classclass194, (Type_Symbol)symbol3258, (Runtime_MethodClosure)methodclosure2435);

// SuperClassTestClass>>a:
localvariable1052 = (Object)new_AST_Variable_named(L"anObject");
array1028 = (Object)new_Type_Array_with(1, (Object)localvariable1052);
assign712 = (Object)new_AST_Assign((Object)instancevariable1287, (Object)localvariable1052);
method2484 = (Object)new_AST_Method_with((Type_Array)array1028, (Type_Array)empty_Type_Array, 2, assign712, Self);
methodclosure2436 = (Object)new_Runtime_MethodClosure(method2484);
store_method((Type_Class)class246, (Type_Symbol)symbol3255, (Runtime_MethodClosure)methodclosure2436);

// SuperClassTestClass>>a
method2485 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1287);
methodclosure2437 = (Object)new_Runtime_MethodClosure(method2485);
store_method((Type_Class)class246, (Type_Symbol)symbol3257, (Runtime_MethodClosure)methodclosure2437);

// SuperClassTestClass>>test
smallint2891 = (Object)new_Type_SmallInt(10);
constant3832 = (Object)new_AST_Constant((Object)smallint2891);
method2486 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3832);
symbol3260 = (Object)new_Type_Symbol_cached(L"test");
methodclosure2438 = (Object)new_Runtime_MethodClosure(method2486);
store_method((Type_Class)class246, (Type_Symbol)symbol3260, (Runtime_MethodClosure)methodclosure2438);
classreference313 = (Object)new_Organization_ClassReference((Type_Class)class246);
objectlayout377 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable1288 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout377)->values[0] = instancevariable1288;
instancevariable1289 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout377)->values[1] = instancevariable1289;
instancevariable1290 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout377)->values[2] = instancevariable1290;
instancevariable1291 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout377)->values[3] = instancevariable1291;
instancevariable1292 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout377)->values[4] = instancevariable1292;
symbol3208 = (Object)new_Type_Symbol_cached(L"BridgeTest");
objectlayout378 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable1293 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout378)->values[0] = instancevariable1293;
class247 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout378, objectlayout377);
((Type_Class)class247)->name = (Type_Symbol)symbol3208;
classclass195 = (Object)HEADER(class247);

// BridgeTest>>tmClassReferenceReturn
send7327 = (Object)new_AST_Send((Object)classreference310, (Object)SMB_name, 0);
method2487 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7327);
symbol3210 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure2439 = (Object)new_Runtime_MethodClosure(method2487);
store_method((Type_Class)class247, (Type_Symbol)symbol3210, (Runtime_MethodClosure)methodclosure2439);

// BridgeTest>>assert:
localvariable1053 = (Object)new_AST_Variable_named(L"bool");
array1029 = (Object)new_Type_Array_with(1, (Object)localvariable1053);
symbol3262 = (Object)new_Type_Symbol_cached(L"fail");
send7328 = (Object)new_AST_Send((Object)Self, (Object)symbol3262, 0);
block418 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send7328);
send7329 = (Object)new_AST_Send((Object)localvariable1053, (Object)SMB_ifFalse_, 1, (Object)block418);
method2488 = (Object)new_AST_Method_with((Type_Array)array1029, (Type_Array)empty_Type_Array, 1, send7329);
symbol3230 = (Object)new_Type_Symbol_cached(L"assert:");
methodclosure2440 = (Object)new_Runtime_MethodClosure(method2488);
store_method((Type_Class)class247, (Type_Symbol)symbol3230, (Runtime_MethodClosure)methodclosure2440);

// BridgeTest>>tmExtendedReturn
variable56 = (Object)new_AST_Variable_named(L"return");
array1030 = (Object)new_Type_Array_with(1, (Object)variable56);
smallint2892 = (Object)new_Type_SmallInt(1);
constant3833 = (Object)new_AST_Constant((Object)smallint2892);
smallint2893 = (Object)new_Type_SmallInt(2);
constant3834 = (Object)new_AST_Constant((Object)smallint2893);
send7330 = (Object)new_AST_Send((Object)constant3833, (Object)SMB__gt, 1, (Object)constant3834);
smallint2894 = (Object)new_Type_SmallInt(1);
constant3835 = (Object)new_AST_Constant((Object)smallint2894);
send7331 = (Object)new_AST_Send((Object)variable56, (Object)SMB_escape_, 1, (Object)constant3835);
block419 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send7331);
smallint2895 = (Object)new_Type_SmallInt(2);
constant3836 = (Object)new_AST_Constant((Object)smallint2895);
send7332 = (Object)new_AST_Send((Object)variable56, (Object)SMB_escape_, 1, (Object)constant3836);
block420 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send7332);
send7333 = (Object)new_AST_Send((Object)send7330, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block419, (Object)block420);
block421 = (Object)new_AST_Block_with((Type_Array)array1030, (Type_Array)empty_Type_Array, 1, 2, send7333, Self);
send7334 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block421);
method2489 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7334);
symbol3219 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure2441 = (Object)new_Runtime_MethodClosure(method2489);
store_method((Type_Class)class247, (Type_Symbol)symbol3219, (Runtime_MethodClosure)methodclosure2441);

// BridgeTest>>tmNumberAdd
smallint2896 = (Object)new_Type_SmallInt(1);
constant3837 = (Object)new_AST_Constant((Object)smallint2896);
smallint2897 = (Object)new_Type_SmallInt(1);
constant3838 = (Object)new_AST_Constant((Object)smallint2897);
send7335 = (Object)new_AST_Send((Object)constant3837, (Object)SMB__plus, 1, (Object)constant3838);
method2490 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7335);
symbol3239 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure2442 = (Object)new_Runtime_MethodClosure(method2490);
store_method((Type_Class)class247, (Type_Symbol)symbol3239, (Runtime_MethodClosure)methodclosure2442);

// BridgeTest>>tmStringEquals
string543 = (Object)new_Type_String(L"String");
constant3839 = (Object)new_AST_Constant((Object)string543);
string544 = (Object)new_Type_String(L"String");
constant3840 = (Object)new_AST_Constant((Object)string544);
send7336 = (Object)new_AST_Send((Object)constant3839, (Object)SMB__equal, 1, (Object)constant3840);
method2491 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7336);
symbol3212 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure2443 = (Object)new_Runtime_MethodClosure(method2491);
store_method((Type_Class)class247, (Type_Symbol)symbol3212, (Runtime_MethodClosure)methodclosure2443);

// BridgeTest>>tmLocalVariable
localvariable1054 = (Object)new_AST_Variable_named(L"a");
array1031 = (Object)new_Type_Array_with(1, (Object)localvariable1054);
smallint2898 = (Object)new_Type_SmallInt(1);
constant3841 = (Object)new_AST_Constant((Object)smallint2898);
assign713 = (Object)new_AST_Assign((Object)localvariable1054, (Object)constant3841);
method2492 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1031, 2, assign713, localvariable1054);
symbol3240 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure2444 = (Object)new_Runtime_MethodClosure(method2492);
store_method((Type_Class)class247, (Type_Symbol)symbol3240, (Runtime_MethodClosure)methodclosure2444);

// BridgeTest>>tmSuperClass
localvariable1055 = (Object)new_AST_Variable_named(L"instance");
array1032 = (Object)new_Type_Array_with(1, (Object)localvariable1055);
objectlayout379 = (Object)create_type_with_vars(Type_ObjectLayout, 6);
instancevariable1294 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout379)->values[0] = instancevariable1294;
instancevariable1295 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout379)->values[1] = instancevariable1295;
instancevariable1296 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout379)->values[2] = instancevariable1296;
instancevariable1297 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout379)->values[3] = instancevariable1297;
instancevariable1298 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout379)->values[4] = instancevariable1298;
instancevariable1299 = (Object)new_AST_InstVariable(5, L"c");
((Type_Array)objectlayout379)->values[5] = instancevariable1299;
symbol3222 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout380 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout380)->values[0] = instancevariable1286;
((Type_Array)objectlayout380)->values[1] = instancevariable1287;
instancevariable1300 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)objectlayout380)->values[2] = instancevariable1300;
class248 = (Object)new_Class_withMeta((Object)class246, objectlayout380, objectlayout379);
((Type_Class)class248)->name = (Type_Symbol)symbol3222;
classclass196 = (Object)HEADER(class248);

// ChildClassTestClass class>>c
method2493 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1299);
symbol3256 = (Object)new_Type_Symbol_cached(L"c");
methodclosure2445 = (Object)new_Runtime_MethodClosure(method2493);
store_method((Type_Class)classclass196, (Type_Symbol)symbol3256, (Runtime_MethodClosure)methodclosure2445);

// ChildClassTestClass class>>c:
localvariable1056 = (Object)new_AST_Variable_named(L"anObject");
array1033 = (Object)new_Type_Array_with(1, (Object)localvariable1056);
assign714 = (Object)new_AST_Assign((Object)instancevariable1299, (Object)localvariable1056);
method2494 = (Object)new_AST_Method_with((Type_Array)array1033, (Type_Array)empty_Type_Array, 2, assign714, Self);
symbol3253 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure2446 = (Object)new_Runtime_MethodClosure(method2494);
store_method((Type_Class)classclass196, (Type_Symbol)symbol3253, (Runtime_MethodClosure)methodclosure2446);

// ChildClassTestClass>>b
method2495 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1300);
methodclosure2447 = (Object)new_Runtime_MethodClosure(method2495);
store_method((Type_Class)class248, (Type_Symbol)symbol3254, (Runtime_MethodClosure)methodclosure2447);

// ChildClassTestClass>>b:
localvariable1057 = (Object)new_AST_Variable_named(L"anObject");
array1034 = (Object)new_Type_Array_with(1, (Object)localvariable1057);
assign715 = (Object)new_AST_Assign((Object)instancevariable1300, (Object)localvariable1057);
method2496 = (Object)new_AST_Method_with((Type_Array)array1034, (Type_Array)empty_Type_Array, 2, assign715, Self);
methodclosure2448 = (Object)new_Runtime_MethodClosure(method2496);
store_method((Type_Class)class248, (Type_Symbol)symbol3258, (Runtime_MethodClosure)methodclosure2448);

// ChildClassTestClass>>test
smallint2899 = (Object)new_Type_SmallInt(10);
constant3842 = (Object)new_AST_Constant((Object)smallint2899);
super40 = (Object)new_AST_Super(symbol3260, 0);
send7337 = (Object)new_AST_Send((Object)constant3842, (Object)SMB__times, 1, (Object)super40);
method2497 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7337);
methodclosure2449 = (Object)new_Runtime_MethodClosure(method2497);
store_method((Type_Class)class248, (Type_Symbol)symbol3260, (Runtime_MethodClosure)methodclosure2449);
classreference314 = (Object)new_Organization_ClassReference((Type_Class)class248);
send7338 = (Object)new_AST_Send((Object)classreference314, (Object)SMB_basicNew, 0);
assign716 = (Object)new_AST_Assign((Object)localvariable1055, (Object)send7338);
smallint2900 = (Object)new_Type_SmallInt(1);
constant3843 = (Object)new_AST_Constant((Object)smallint2900);
send7339 = (Object)new_AST_Send((Object)localvariable1055, (Object)symbol3255, 1, (Object)constant3843);
send7340 = (Object)new_AST_Send((Object)localvariable1055, (Object)symbol3257, 0);
smallint2901 = (Object)new_Type_SmallInt(1);
constant3844 = (Object)new_AST_Constant((Object)smallint2901);
send7341 = (Object)new_AST_Send((Object)send7340, (Object)SMB__equal, 1, (Object)constant3844);
send7342 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7341);
send7343 = (Object)new_AST_Send((Object)localvariable1055, (Object)symbol3254, 0);
send7344 = (Object)new_AST_Send((Object)send7343, (Object)SMB__equal, 1, (Object)Nil_Const);
send7345 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7344);
smallint2902 = (Object)new_Type_SmallInt(2);
constant3845 = (Object)new_AST_Constant((Object)smallint2902);
send7346 = (Object)new_AST_Send((Object)localvariable1055, (Object)symbol3258, 1, (Object)constant3845);
send7347 = (Object)new_AST_Send((Object)localvariable1055, (Object)symbol3257, 0);
smallint2903 = (Object)new_Type_SmallInt(1);
constant3846 = (Object)new_AST_Constant((Object)smallint2903);
send7348 = (Object)new_AST_Send((Object)send7347, (Object)SMB__equal, 1, (Object)constant3846);
send7349 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7348);
send7350 = (Object)new_AST_Send((Object)localvariable1055, (Object)symbol3254, 0);
smallint2904 = (Object)new_Type_SmallInt(2);
constant3847 = (Object)new_AST_Constant((Object)smallint2904);
send7351 = (Object)new_AST_Send((Object)send7350, (Object)SMB__equal, 1, (Object)constant3847);
send7352 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7351);
method2498 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1032, 8, assign716, send7339, send7342, send7345, send7346, send7349, send7352, Self);
symbol3232 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure2450 = (Object)new_Runtime_MethodClosure(method2498);
store_method((Type_Class)class247, (Type_Symbol)symbol3232, (Runtime_MethodClosure)methodclosure2450);

// BridgeTest>>tmString
string545 = (Object)new_Type_String(L"String");
constant3848 = (Object)new_AST_Constant((Object)string545);
method2499 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3848);
symbol3224 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure2451 = (Object)new_Runtime_MethodClosure(method2499);
store_method((Type_Class)class247, (Type_Symbol)symbol3224, (Runtime_MethodClosure)methodclosure2451);

// BridgeTest>>tmSimpleInstanceCreation
localvariable1058 = (Object)new_AST_Variable_named(L"instance");
array1035 = (Object)new_Type_Array_with(1, (Object)localvariable1058);
objectlayout381 = (Object)create_type_with_vars(Type_ObjectLayout, 7);
instancevariable1301 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout381)->values[0] = instancevariable1301;
instancevariable1302 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout381)->values[1] = instancevariable1302;
instancevariable1303 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout381)->values[2] = instancevariable1303;
instancevariable1304 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout381)->values[3] = instancevariable1304;
instancevariable1305 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout381)->values[4] = instancevariable1305;
instancevariable1306 = (Object)new_AST_InstVariable(5, L"classInstVar");
((Type_Array)objectlayout381)->values[5] = instancevariable1306;
instancevariable1307 = (Object)new_AST_InstVariable(6, L"instVar");
((Type_Array)objectlayout381)->values[6] = instancevariable1307;
symbol3213 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout382 = (Object)create_type_with_vars(Type_ObjectLayout, 4);
instancevariable1308 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout382)->values[0] = instancevariable1308;
instancevariable1309 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)objectlayout382)->values[1] = instancevariable1309;
instancevariable1310 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)objectlayout382)->values[2] = instancevariable1310;
instancevariable1311 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)objectlayout382)->values[3] = instancevariable1311;
class249 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout382, objectlayout381);
((Type_Class)class249)->name = (Type_Symbol)symbol3213;
classclass197 = (Object)HEADER(class249);

// StandardTestClass class>>aClassSideMethodWithInstanceVariables
smallint2905 = (Object)new_Type_SmallInt(100);
constant3849 = (Object)new_AST_Constant((Object)smallint2905);
assign717 = (Object)new_AST_Assign((Object)instancevariable1306, (Object)constant3849);
method2500 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign717, instancevariable1306);
symbol3250 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure2452 = (Object)new_Runtime_MethodClosure(method2500);
store_method((Type_Class)classclass197, (Type_Symbol)symbol3250, (Runtime_MethodClosure)methodclosure2452);

// StandardTestClass class>>aClassSideMethod
string546 = (Object)new_Type_String(L"a");
constant3850 = (Object)new_AST_Constant((Object)string546);
method2501 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3850);
symbol3249 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure2453 = (Object)new_Runtime_MethodClosure(method2501);
store_method((Type_Class)classclass197, (Type_Symbol)symbol3249, (Runtime_MethodClosure)methodclosure2453);

// StandardTestClass class>>instVar
method2502 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1307);
symbol3251 = (Object)new_Type_Symbol_cached(L"instVar");
methodclosure2454 = (Object)new_Runtime_MethodClosure(method2502);
store_method((Type_Class)classclass197, (Type_Symbol)symbol3251, (Runtime_MethodClosure)methodclosure2454);

// StandardTestClass class>>instVar:
localvariable1059 = (Object)new_AST_Variable_named(L"anObject");
array1036 = (Object)new_Type_Array_with(1, (Object)localvariable1059);
assign718 = (Object)new_AST_Assign((Object)instancevariable1307, (Object)localvariable1059);
method2503 = (Object)new_AST_Method_with((Type_Array)array1036, (Type_Array)empty_Type_Array, 2, assign718, Self);
symbol3252 = (Object)new_Type_Symbol_cached(L"instVar:");
methodclosure2455 = (Object)new_Runtime_MethodClosure(method2503);
store_method((Type_Class)classclass197, (Type_Symbol)symbol3252, (Runtime_MethodClosure)methodclosure2455);

// StandardTestClass>>c:
localvariable1060 = (Object)new_AST_Variable_named(L"anObject");
array1037 = (Object)new_Type_Array_with(1, (Object)localvariable1060);
assign719 = (Object)new_AST_Assign((Object)instancevariable1311, (Object)localvariable1060);
method2504 = (Object)new_AST_Method_with((Type_Array)array1037, (Type_Array)empty_Type_Array, 2, assign719, Self);
methodclosure2456 = (Object)new_Runtime_MethodClosure(method2504);
store_method((Type_Class)class249, (Type_Symbol)symbol3253, (Runtime_MethodClosure)methodclosure2456);

// StandardTestClass>>a:
localvariable1061 = (Object)new_AST_Variable_named(L"anObject");
array1038 = (Object)new_Type_Array_with(1, (Object)localvariable1061);
assign720 = (Object)new_AST_Assign((Object)instancevariable1309, (Object)localvariable1061);
method2505 = (Object)new_AST_Method_with((Type_Array)array1038, (Type_Array)empty_Type_Array, 2, assign720, Self);
methodclosure2457 = (Object)new_Runtime_MethodClosure(method2505);
store_method((Type_Class)class249, (Type_Symbol)symbol3255, (Runtime_MethodClosure)methodclosure2457);

// StandardTestClass>>a
method2506 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1309);
methodclosure2458 = (Object)new_Runtime_MethodClosure(method2506);
store_method((Type_Class)class249, (Type_Symbol)symbol3257, (Runtime_MethodClosure)methodclosure2458);

// StandardTestClass>>b
method2507 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1310);
methodclosure2459 = (Object)new_Runtime_MethodClosure(method2507);
store_method((Type_Class)class249, (Type_Symbol)symbol3254, (Runtime_MethodClosure)methodclosure2459);

// StandardTestClass>>c
method2508 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1311);
methodclosure2460 = (Object)new_Runtime_MethodClosure(method2508);
store_method((Type_Class)class249, (Type_Symbol)symbol3256, (Runtime_MethodClosure)methodclosure2460);

// StandardTestClass>>b:
localvariable1062 = (Object)new_AST_Variable_named(L"anObject");
array1039 = (Object)new_Type_Array_with(1, (Object)localvariable1062);
assign721 = (Object)new_AST_Assign((Object)instancevariable1310, (Object)localvariable1062);
method2509 = (Object)new_AST_Method_with((Type_Array)array1039, (Type_Array)empty_Type_Array, 2, assign721, Self);
methodclosure2461 = (Object)new_Runtime_MethodClosure(method2509);
store_method((Type_Class)class249, (Type_Symbol)symbol3258, (Runtime_MethodClosure)methodclosure2461);
classreference315 = (Object)new_Organization_ClassReference((Type_Class)class249);
send7353 = (Object)new_AST_Send((Object)classreference315, (Object)SMB_basicNew, 0);
assign722 = (Object)new_AST_Assign((Object)localvariable1058, (Object)send7353);
localvariable1063 = (Object)new_AST_Variable_named(L"receiver");
array1040 = (Object)new_Type_Array_with(1, (Object)localvariable1063);
smallint2906 = (Object)new_Type_SmallInt(1);
constant3851 = (Object)new_AST_Constant((Object)smallint2906);
send7354 = (Object)new_AST_Send((Object)localvariable1063, (Object)symbol3255, 1, (Object)constant3851);
smallint2907 = (Object)new_Type_SmallInt(2);
constant3852 = (Object)new_AST_Constant((Object)smallint2907);
send7355 = (Object)new_AST_Send((Object)localvariable1063, (Object)symbol3258, 1, (Object)constant3852);
smallint2908 = (Object)new_Type_SmallInt(3);
constant3853 = (Object)new_AST_Constant((Object)smallint2908);
send7356 = (Object)new_AST_Send((Object)localvariable1063, (Object)symbol3253, 1, (Object)constant3853);
block422 = (Object)new_AST_Block_with((Type_Array)array1040, (Type_Array)empty_Type_Array, 1, 3, send7354, send7355, send7356);
send7357 = (Object)new_AST_Send((Object)block422, (Object)SMB_value_, 1, (Object)localvariable1058);
send7358 = (Object)new_AST_Send((Object)localvariable1058, (Object)symbol3257, 0);
smallint2909 = (Object)new_Type_SmallInt(1);
constant3854 = (Object)new_AST_Constant((Object)smallint2909);
send7359 = (Object)new_AST_Send((Object)send7358, (Object)SMB__equal, 1, (Object)constant3854);
send7360 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7359);
send7361 = (Object)new_AST_Send((Object)localvariable1058, (Object)symbol3254, 0);
smallint2910 = (Object)new_Type_SmallInt(2);
constant3855 = (Object)new_AST_Constant((Object)smallint2910);
send7362 = (Object)new_AST_Send((Object)send7361, (Object)SMB__equal, 1, (Object)constant3855);
send7363 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7362);
send7364 = (Object)new_AST_Send((Object)localvariable1058, (Object)symbol3256, 0);
smallint2911 = (Object)new_Type_SmallInt(3);
constant3856 = (Object)new_AST_Constant((Object)smallint2911);
send7365 = (Object)new_AST_Send((Object)send7364, (Object)SMB__equal, 1, (Object)constant3856);
send7366 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7365);
send7367 = (Object)new_AST_Send((Object)localvariable1058, (Object)symbol3257, 0);
send7368 = (Object)new_AST_Send((Object)localvariable1058, (Object)symbol3254, 0);
send7369 = (Object)new_AST_Send((Object)send7367, (Object)SMB__plus, 1, (Object)send7368);
send7370 = (Object)new_AST_Send((Object)localvariable1058, (Object)symbol3256, 0);
send7371 = (Object)new_AST_Send((Object)send7369, (Object)SMB__plus, 1, (Object)send7370);
method2510 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1035, 6, assign722, send7357, send7360, send7363, send7366, send7371);
symbol3214 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure2462 = (Object)new_Runtime_MethodClosure(method2510);
store_method((Type_Class)class247, (Type_Symbol)symbol3214, (Runtime_MethodClosure)methodclosure2462);

// BridgeTest>>tmClassSide
send7372 = (Object)new_AST_Send((Object)classreference312, (Object)SMB_class, 0);
send7373 = (Object)new_AST_Send((Object)send7372, (Object)SMB_class, 0);
send7374 = (Object)new_AST_Send((Object)send7373, (Object)SMB__equal, 1, (Object)classreference310);
send7375 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7374);
send7376 = (Object)new_AST_Send((Object)classreference315, (Object)symbol3249, 0);
method2511 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send7375, send7376);
symbol3242 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure2463 = (Object)new_Runtime_MethodClosure(method2511);
store_method((Type_Class)class247, (Type_Symbol)symbol3242, (Runtime_MethodClosure)methodclosure2463);

// BridgeTest>>tmSuperClassSuperSend
localvariable1064 = (Object)new_AST_Variable_named(L"instance");
array1041 = (Object)new_Type_Array_with(1, (Object)localvariable1064);
send7377 = (Object)new_AST_Send((Object)classreference314, (Object)SMB_basicNew, 0);
assign723 = (Object)new_AST_Assign((Object)localvariable1064, (Object)send7377);
send7378 = (Object)new_AST_Send((Object)localvariable1064, (Object)symbol3260, 0);
smallint2912 = (Object)new_Type_SmallInt(100);
constant3857 = (Object)new_AST_Constant((Object)smallint2912);
send7379 = (Object)new_AST_Send((Object)send7378, (Object)SMB__equal, 1, (Object)constant3857);
send7380 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7379);
method2512 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1041, 3, assign723, send7380, Self);
symbol3234 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure2464 = (Object)new_Runtime_MethodClosure(method2512);
store_method((Type_Class)class247, (Type_Symbol)symbol3234, (Runtime_MethodClosure)methodclosure2464);

// BridgeTest>>tmBooleanTrue
method2513 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol3226 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure2465 = (Object)new_Runtime_MethodClosure(method2513);
store_method((Type_Class)class247, (Type_Symbol)symbol3226, (Runtime_MethodClosure)methodclosure2465);

// BridgeTest>>tmClassInstVarAssignment
smallint2913 = (Object)new_Type_SmallInt(10);
constant3858 = (Object)new_AST_Constant((Object)smallint2913);
send7381 = (Object)new_AST_Send((Object)classreference315, (Object)symbol3252, 1, (Object)constant3858);
send7382 = (Object)new_AST_Send((Object)classreference315, (Object)symbol3251, 0);
smallint2914 = (Object)new_Type_SmallInt(10);
constant3859 = (Object)new_AST_Constant((Object)smallint2914);
send7383 = (Object)new_AST_Send((Object)send7382, (Object)SMB__equal, 1, (Object)constant3859);
send7384 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7383);
method2514 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send7381, send7384, Self);
symbol3246 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure2466 = (Object)new_Runtime_MethodClosure(method2514);
store_method((Type_Class)class247, (Type_Symbol)symbol3246, (Runtime_MethodClosure)methodclosure2466);

// BridgeTest>>tmClassInstVar
send7385 = (Object)new_AST_Send((Object)classreference315, (Object)symbol3250, 0);
method2515 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7385);
symbol3216 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure2467 = (Object)new_Runtime_MethodClosure(method2515);
store_method((Type_Class)class247, (Type_Symbol)symbol3216, (Runtime_MethodClosure)methodclosure2467);

// BridgeTest>>tmSimpleBasicArithmetik
smallint2915 = (Object)new_Type_SmallInt(1);
constant3860 = (Object)new_AST_Constant((Object)smallint2915);
smallint2916 = (Object)new_Type_SmallInt(2);
constant3861 = (Object)new_AST_Constant((Object)smallint2916);
send7386 = (Object)new_AST_Send((Object)constant3860, (Object)SMB__plus, 1, (Object)constant3861);
smallint2917 = (Object)new_Type_SmallInt(2);
constant3862 = (Object)new_AST_Constant((Object)smallint2917);
send7387 = (Object)new_AST_Send((Object)send7386, (Object)SMB__plus, 1, (Object)constant3862);
smallint2918 = (Object)new_Type_SmallInt(5);
constant3863 = (Object)new_AST_Constant((Object)smallint2918);
send7388 = (Object)new_AST_Send((Object)send7387, (Object)SMB__times, 1, (Object)constant3863);
method2516 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7388);
symbol3244 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure2468 = (Object)new_Runtime_MethodClosure(method2516);
store_method((Type_Class)class247, (Type_Symbol)symbol3244, (Runtime_MethodClosure)methodclosure2468);

// BridgeTest>>tmBooleanFalse
method2517 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol3236 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure2469 = (Object)new_Runtime_MethodClosure(method2517);
store_method((Type_Class)class247, (Type_Symbol)symbol3236, (Runtime_MethodClosure)methodclosure2469);

// BridgeTest>>tmClassSideSuper
method2518 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol3228 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure2470 = (Object)new_Runtime_MethodClosure(method2518);
store_method((Type_Class)class247, (Type_Symbol)symbol3228, (Runtime_MethodClosure)methodclosure2470);

// BridgeTest>>tmSymbolEquals
symbol3263 = (Object)new_Type_Symbol_cached(L"Symbol");
constant3864 = (Object)new_AST_Constant((Object)symbol3263);
constant3865 = (Object)new_AST_Constant((Object)symbol3263);
send7389 = (Object)new_AST_Send((Object)constant3864, (Object)SMB__equal, 1, (Object)constant3865);
method2519 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7389);
symbol3248 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure2471 = (Object)new_Runtime_MethodClosure(method2519);
store_method((Type_Class)class247, (Type_Symbol)symbol3248, (Runtime_MethodClosure)methodclosure2471);

// BridgeTest>>tmVariableInstanceCreation
localvariable1065 = (Object)new_AST_Variable_named(L"instance");
array1042 = (Object)new_Type_Array_with(1, (Object)localvariable1065);
objectlayout383 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable1312 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout383)->values[0] = instancevariable1312;
instancevariable1313 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout383)->values[1] = instancevariable1313;
instancevariable1314 = (Object)new_AST_InstVariable(2, L"methods");
((Type_Array)objectlayout383)->values[2] = instancevariable1314;
instancevariable1315 = (Object)new_AST_InstVariable(3, L"name");
((Type_Array)objectlayout383)->values[3] = instancevariable1315;
instancevariable1316 = (Object)new_AST_InstVariable(4, L"package");
((Type_Array)objectlayout383)->values[4] = instancevariable1316;
symbol3220 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout40 = (Object)create_type_with_vars(Type_ArrayLayout, 4);
instancevariable1317 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)arraylayout40)->values[0] = instancevariable1317;
instancevariable1318 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)arraylayout40)->values[1] = instancevariable1318;
instancevariable1319 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)arraylayout40)->values[2] = instancevariable1319;
instancevariable1320 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)arraylayout40)->values[3] = instancevariable1320;
class250 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout40, objectlayout383);
((Type_Class)class250)->name = (Type_Symbol)symbol3220;
classclass198 = (Object)HEADER(class250);

// StandardVariableTestClass>>c:
localvariable1066 = (Object)new_AST_Variable_named(L"anObject");
array1043 = (Object)new_Type_Array_with(1, (Object)localvariable1066);
assign724 = (Object)new_AST_Assign((Object)instancevariable1320, (Object)localvariable1066);
method2520 = (Object)new_AST_Method_with((Type_Array)array1043, (Type_Array)empty_Type_Array, 2, assign724, Self);
methodclosure2472 = (Object)new_Runtime_MethodClosure(method2520);
store_method((Type_Class)class250, (Type_Symbol)symbol3253, (Runtime_MethodClosure)methodclosure2472);

// StandardVariableTestClass>>a:
localvariable1067 = (Object)new_AST_Variable_named(L"anObject");
array1044 = (Object)new_Type_Array_with(1, (Object)localvariable1067);
assign725 = (Object)new_AST_Assign((Object)instancevariable1318, (Object)localvariable1067);
method2521 = (Object)new_AST_Method_with((Type_Array)array1044, (Type_Array)empty_Type_Array, 2, assign725, Self);
methodclosure2473 = (Object)new_Runtime_MethodClosure(method2521);
store_method((Type_Class)class250, (Type_Symbol)symbol3255, (Runtime_MethodClosure)methodclosure2473);

// StandardVariableTestClass>>a
method2522 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1318);
methodclosure2474 = (Object)new_Runtime_MethodClosure(method2522);
store_method((Type_Class)class250, (Type_Symbol)symbol3257, (Runtime_MethodClosure)methodclosure2474);

// StandardVariableTestClass>>b
method2523 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1319);
methodclosure2475 = (Object)new_Runtime_MethodClosure(method2523);
store_method((Type_Class)class250, (Type_Symbol)symbol3254, (Runtime_MethodClosure)methodclosure2475);

// StandardVariableTestClass>>c
method2524 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable1320);
methodclosure2476 = (Object)new_Runtime_MethodClosure(method2524);
store_method((Type_Class)class250, (Type_Symbol)symbol3256, (Runtime_MethodClosure)methodclosure2476);

// StandardVariableTestClass>>b:
localvariable1068 = (Object)new_AST_Variable_named(L"anObject");
array1045 = (Object)new_Type_Array_with(1, (Object)localvariable1068);
assign726 = (Object)new_AST_Assign((Object)instancevariable1319, (Object)localvariable1068);
method2525 = (Object)new_AST_Method_with((Type_Array)array1045, (Type_Array)empty_Type_Array, 2, assign726, Self);
methodclosure2477 = (Object)new_Runtime_MethodClosure(method2525);
store_method((Type_Class)class250, (Type_Symbol)symbol3258, (Runtime_MethodClosure)methodclosure2477);
classreference316 = (Object)new_Organization_ClassReference((Type_Class)class250);
send7390 = (Object)new_AST_Send((Object)classreference316, (Object)SMB_basicNew, 0);
assign727 = (Object)new_AST_Assign((Object)localvariable1065, (Object)send7390);
localvariable1069 = (Object)new_AST_Variable_named(L"receiver");
array1046 = (Object)new_Type_Array_with(1, (Object)localvariable1069);
smallint2919 = (Object)new_Type_SmallInt(1);
constant3866 = (Object)new_AST_Constant((Object)smallint2919);
send7391 = (Object)new_AST_Send((Object)localvariable1069, (Object)symbol3255, 1, (Object)constant3866);
smallint2920 = (Object)new_Type_SmallInt(2);
constant3867 = (Object)new_AST_Constant((Object)smallint2920);
send7392 = (Object)new_AST_Send((Object)localvariable1069, (Object)symbol3258, 1, (Object)constant3867);
smallint2921 = (Object)new_Type_SmallInt(3);
constant3868 = (Object)new_AST_Constant((Object)smallint2921);
send7393 = (Object)new_AST_Send((Object)localvariable1069, (Object)symbol3253, 1, (Object)constant3868);
block423 = (Object)new_AST_Block_with((Type_Array)array1046, (Type_Array)empty_Type_Array, 1, 3, send7391, send7392, send7393);
send7394 = (Object)new_AST_Send((Object)block423, (Object)SMB_value_, 1, (Object)localvariable1065);
send7395 = (Object)new_AST_Send((Object)localvariable1065, (Object)symbol3257, 0);
smallint2922 = (Object)new_Type_SmallInt(1);
constant3869 = (Object)new_AST_Constant((Object)smallint2922);
send7396 = (Object)new_AST_Send((Object)send7395, (Object)SMB__equal, 1, (Object)constant3869);
send7397 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7396);
send7398 = (Object)new_AST_Send((Object)localvariable1065, (Object)symbol3254, 0);
smallint2923 = (Object)new_Type_SmallInt(2);
constant3870 = (Object)new_AST_Constant((Object)smallint2923);
send7399 = (Object)new_AST_Send((Object)send7398, (Object)SMB__equal, 1, (Object)constant3870);
send7400 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7399);
send7401 = (Object)new_AST_Send((Object)localvariable1065, (Object)symbol3256, 0);
smallint2924 = (Object)new_Type_SmallInt(3);
constant3871 = (Object)new_AST_Constant((Object)smallint2924);
send7402 = (Object)new_AST_Send((Object)send7401, (Object)SMB__equal, 1, (Object)constant3871);
send7403 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7402);
send7404 = (Object)new_AST_Send((Object)localvariable1065, (Object)symbol3257, 0);
send7405 = (Object)new_AST_Send((Object)localvariable1065, (Object)symbol3254, 0);
send7406 = (Object)new_AST_Send((Object)send7404, (Object)SMB__plus, 1, (Object)send7405);
send7407 = (Object)new_AST_Send((Object)localvariable1065, (Object)symbol3256, 0);
send7408 = (Object)new_AST_Send((Object)send7406, (Object)SMB__plus, 1, (Object)send7407);
method2526 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1042, 6, assign727, send7394, send7397, send7400, send7403, send7408);
symbol3221 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure2478 = (Object)new_Runtime_MethodClosure(method2526);
store_method((Type_Class)class247, (Type_Symbol)symbol3221, (Runtime_MethodClosure)methodclosure2478);

// BridgeTest>>tmNumberEquals
smallint2925 = (Object)new_Type_SmallInt(1);
constant3872 = (Object)new_AST_Constant((Object)smallint2925);
smallint2926 = (Object)new_Type_SmallInt(1);
constant3873 = (Object)new_AST_Constant((Object)smallint2926);
send7409 = (Object)new_AST_Send((Object)constant3872, (Object)SMB__equal, 1, (Object)constant3873);
method2527 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7409);
symbol3218 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure2479 = (Object)new_Runtime_MethodClosure(method2527);
store_method((Type_Class)class247, (Type_Symbol)symbol3218, (Runtime_MethodClosure)methodclosure2479);

// BridgeTest>>tmNumber
smallint2927 = (Object)new_Type_SmallInt(1);
constant3874 = (Object)new_AST_Constant((Object)smallint2927);
method2528 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3874);
symbol3238 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure2480 = (Object)new_Runtime_MethodClosure(method2528);
store_method((Type_Class)class247, (Type_Symbol)symbol3238, (Runtime_MethodClosure)methodclosure2480);

// BridgeTest>>tmFibonacci
method2529 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol3211 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure2481 = (Object)new_Runtime_MethodClosure(method2529);
store_method((Type_Class)class247, (Type_Symbol)symbol3211, (Runtime_MethodClosure)methodclosure2481);

// BridgeTest>>tmNumberDiv
smallint2928 = (Object)new_Type_SmallInt(4);
constant3875 = (Object)new_AST_Constant((Object)smallint2928);
smallint2929 = (Object)new_Type_SmallInt(2);
constant3876 = (Object)new_AST_Constant((Object)smallint2929);
send7410 = (Object)new_AST_Send((Object)constant3875, (Object)SMB__divide, 1, (Object)constant3876);
method2530 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7410);
symbol3231 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure2482 = (Object)new_Runtime_MethodClosure(method2530);
store_method((Type_Class)class247, (Type_Symbol)symbol3231, (Runtime_MethodClosure)methodclosure2482);

// BridgeTest>>tmClassSideSuperSend
send7411 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3255, 1, (Object)Nil_Const);
send7412 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3258, 1, (Object)Nil_Const);
send7413 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3253, 1, (Object)Nil_Const);
send7414 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3257, 0);
send7415 = (Object)new_AST_Send((Object)send7414, (Object)SMB__equal, 1, (Object)Nil_Const);
send7416 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7415);
send7417 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3254, 0);
send7418 = (Object)new_AST_Send((Object)send7417, (Object)SMB__equal, 1, (Object)Nil_Const);
send7419 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7418);
send7420 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3256, 0);
send7421 = (Object)new_AST_Send((Object)send7420, (Object)SMB__equal, 1, (Object)Nil_Const);
send7422 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7421);
smallint2930 = (Object)new_Type_SmallInt(1);
constant3877 = (Object)new_AST_Constant((Object)smallint2930);
send7423 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3255, 1, (Object)constant3877);
smallint2931 = (Object)new_Type_SmallInt(2);
constant3878 = (Object)new_AST_Constant((Object)smallint2931);
send7424 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3258, 1, (Object)constant3878);
smallint2932 = (Object)new_Type_SmallInt(3);
constant3879 = (Object)new_AST_Constant((Object)smallint2932);
send7425 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3253, 1, (Object)constant3879);
send7426 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3257, 0);
smallint2933 = (Object)new_Type_SmallInt(1);
constant3880 = (Object)new_AST_Constant((Object)smallint2933);
send7427 = (Object)new_AST_Send((Object)send7426, (Object)SMB__equal, 1, (Object)constant3880);
send7428 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7427);
send7429 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3254, 0);
smallint2934 = (Object)new_Type_SmallInt(2);
constant3881 = (Object)new_AST_Constant((Object)smallint2934);
send7430 = (Object)new_AST_Send((Object)send7429, (Object)SMB__equal, 1, (Object)constant3881);
send7431 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7430);
send7432 = (Object)new_AST_Send((Object)classreference314, (Object)symbol3256, 0);
smallint2935 = (Object)new_Type_SmallInt(3);
constant3882 = (Object)new_AST_Constant((Object)smallint2935);
send7433 = (Object)new_AST_Send((Object)send7432, (Object)SMB__equal, 1, (Object)constant3882);
send7434 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7433);
method2531 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send7411, send7412, send7413, send7416, send7419, send7422, send7423, send7424, send7425, send7428, send7431, send7434, Self);
symbol3223 = (Object)new_Type_Symbol_cached(L"tmClassSideSuperSend");
methodclosure2483 = (Object)new_Runtime_MethodClosure(method2531);
store_method((Type_Class)class247, (Type_Symbol)symbol3223, (Runtime_MethodClosure)methodclosure2483);

// BridgeTest>>tmSymbolCharacterEquals
symbol3264 = (Object)new_Type_Symbol_cached(L"S");
constant3883 = (Object)new_AST_Constant((Object)symbol3264);
character298 = (Object)new_Type_Character(L'S');
constant3884 = (Object)new_AST_Constant((Object)character298);
send7435 = (Object)new_AST_Send((Object)constant3883, (Object)SMB__equal, 1, (Object)constant3884);
method2532 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7435);
symbol3241 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure2484 = (Object)new_Runtime_MethodClosure(method2532);
store_method((Type_Class)class247, (Type_Symbol)symbol3241, (Runtime_MethodClosure)methodclosure2484);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable1070 = (Object)new_AST_Variable_named(L"instance");
array1047 = (Object)new_Type_Array_with(1, (Object)localvariable1070);
smallint2936 = (Object)new_Type_SmallInt(100);
constant3885 = (Object)new_AST_Constant((Object)smallint2936);
send7436 = (Object)new_AST_Send((Object)classreference316, (Object)SMB_basicNew_, 1, (Object)constant3885);
assign728 = (Object)new_AST_Assign((Object)localvariable1070, (Object)send7436);
smallint2937 = (Object)new_Type_SmallInt(1);
constant3886 = (Object)new_AST_Constant((Object)smallint2937);
smallint2938 = (Object)new_Type_SmallInt(1);
constant3887 = (Object)new_AST_Constant((Object)smallint2938);
send7437 = (Object)new_AST_Send((Object)localvariable1070, (Object)SMB_at_put_, 2, (Object)constant3886, (Object)constant3887);
smallint2939 = (Object)new_Type_SmallInt(100);
constant3888 = (Object)new_AST_Constant((Object)smallint2939);
smallint2940 = (Object)new_Type_SmallInt(100);
constant3889 = (Object)new_AST_Constant((Object)smallint2940);
send7438 = (Object)new_AST_Send((Object)localvariable1070, (Object)SMB_at_put_, 2, (Object)constant3888, (Object)constant3889);
smallint2941 = (Object)new_Type_SmallInt(1);
constant3890 = (Object)new_AST_Constant((Object)smallint2941);
send7439 = (Object)new_AST_Send((Object)localvariable1070, (Object)SMB_at_, 1, (Object)constant3890);
smallint2942 = (Object)new_Type_SmallInt(1);
constant3891 = (Object)new_AST_Constant((Object)smallint2942);
send7440 = (Object)new_AST_Send((Object)send7439, (Object)SMB__equal, 1, (Object)constant3891);
send7441 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7440);
smallint2943 = (Object)new_Type_SmallInt(100);
constant3892 = (Object)new_AST_Constant((Object)smallint2943);
send7442 = (Object)new_AST_Send((Object)localvariable1070, (Object)SMB_at_, 1, (Object)constant3892);
smallint2944 = (Object)new_Type_SmallInt(100);
constant3893 = (Object)new_AST_Constant((Object)smallint2944);
send7443 = (Object)new_AST_Send((Object)send7442, (Object)SMB__equal, 1, (Object)constant3893);
send7444 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7443);
localvariable1071 = (Object)new_AST_Variable_named(L"receiver");
array1048 = (Object)new_Type_Array_with(1, (Object)localvariable1071);
smallint2945 = (Object)new_Type_SmallInt(1);
constant3894 = (Object)new_AST_Constant((Object)smallint2945);
send7445 = (Object)new_AST_Send((Object)localvariable1071, (Object)symbol3255, 1, (Object)constant3894);
smallint2946 = (Object)new_Type_SmallInt(2);
constant3895 = (Object)new_AST_Constant((Object)smallint2946);
send7446 = (Object)new_AST_Send((Object)localvariable1071, (Object)symbol3258, 1, (Object)constant3895);
smallint2947 = (Object)new_Type_SmallInt(3);
constant3896 = (Object)new_AST_Constant((Object)smallint2947);
send7447 = (Object)new_AST_Send((Object)localvariable1071, (Object)symbol3253, 1, (Object)constant3896);
block424 = (Object)new_AST_Block_with((Type_Array)array1048, (Type_Array)empty_Type_Array, 1, 3, send7445, send7446, send7447);
send7448 = (Object)new_AST_Send((Object)block424, (Object)SMB_value_, 1, (Object)localvariable1070);
send7449 = (Object)new_AST_Send((Object)localvariable1070, (Object)symbol3257, 0);
smallint2948 = (Object)new_Type_SmallInt(1);
constant3897 = (Object)new_AST_Constant((Object)smallint2948);
send7450 = (Object)new_AST_Send((Object)send7449, (Object)SMB__equal, 1, (Object)constant3897);
send7451 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7450);
send7452 = (Object)new_AST_Send((Object)localvariable1070, (Object)symbol3254, 0);
smallint2949 = (Object)new_Type_SmallInt(2);
constant3898 = (Object)new_AST_Constant((Object)smallint2949);
send7453 = (Object)new_AST_Send((Object)send7452, (Object)SMB__equal, 1, (Object)constant3898);
send7454 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7453);
send7455 = (Object)new_AST_Send((Object)localvariable1070, (Object)symbol3256, 0);
smallint2950 = (Object)new_Type_SmallInt(3);
constant3899 = (Object)new_AST_Constant((Object)smallint2950);
send7456 = (Object)new_AST_Send((Object)send7455, (Object)SMB__equal, 1, (Object)constant3899);
send7457 = (Object)new_AST_Send((Object)Self, (Object)symbol3230, 1, (Object)send7456);
send7458 = (Object)new_AST_Send((Object)localvariable1070, (Object)symbol3257, 0);
send7459 = (Object)new_AST_Send((Object)localvariable1070, (Object)symbol3254, 0);
send7460 = (Object)new_AST_Send((Object)localvariable1070, (Object)symbol3256, 0);
smallint2951 = (Object)new_Type_SmallInt(1);
constant3900 = (Object)new_AST_Constant((Object)smallint2951);
send7461 = (Object)new_AST_Send((Object)localvariable1070, (Object)SMB_at_, 1, (Object)constant3900);
send7462 = (Object)new_AST_Send((Object)send7460, (Object)SMB__plus, 1, (Object)send7461);
send7463 = (Object)new_AST_Send((Object)send7459, (Object)SMB__plus, 1, (Object)send7462);
send7464 = (Object)new_AST_Send((Object)send7458, (Object)SMB__plus, 1, (Object)send7463);
smallint2952 = (Object)new_Type_SmallInt(100);
constant3901 = (Object)new_AST_Constant((Object)smallint2952);
send7465 = (Object)new_AST_Send((Object)localvariable1070, (Object)SMB_at_, 1, (Object)constant3901);
send7466 = (Object)new_AST_Send((Object)send7464, (Object)SMB__plus, 1, (Object)send7465);
method2533 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1047, 10, assign728, send7437, send7438, send7441, send7444, send7448, send7451, send7454, send7457, send7466);
symbol3233 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure2485 = (Object)new_Runtime_MethodClosure(method2533);
store_method((Type_Class)class247, (Type_Symbol)symbol3233, (Runtime_MethodClosure)methodclosure2485);

// BridgeTest>>tmSymbol
constant3902 = (Object)new_AST_Constant((Object)symbol3263);
method2534 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3902);
symbol3225 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure2486 = (Object)new_Runtime_MethodClosure(method2534);
store_method((Type_Class)class247, (Type_Symbol)symbol3225, (Runtime_MethodClosure)methodclosure2486);

// BridgeTest>>tmCharacterEquals
character299 = (Object)new_Type_Character(L'C');
constant3903 = (Object)new_AST_Constant((Object)character299);
character300 = (Object)new_Type_Character(L'C');
constant3904 = (Object)new_AST_Constant((Object)character300);
send7467 = (Object)new_AST_Send((Object)constant3903, (Object)SMB__equal, 1, (Object)constant3904);
method2535 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7467);
symbol3245 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure2487 = (Object)new_Runtime_MethodClosure(method2535);
store_method((Type_Class)class247, (Type_Symbol)symbol3245, (Runtime_MethodClosure)methodclosure2487);

// BridgeTest>>tmMethodArgument:
localvariable1072 = (Object)new_AST_Variable_named(L"arg");
array1049 = (Object)new_Type_Array_with(1, (Object)localvariable1072);
smallint2953 = (Object)new_Type_SmallInt(1);
constant3905 = (Object)new_AST_Constant((Object)smallint2953);
send7468 = (Object)new_AST_Send((Object)localvariable1072, (Object)SMB__plus, 1, (Object)constant3905);
method2536 = (Object)new_AST_Method_with((Type_Array)array1049, (Type_Array)empty_Type_Array, 1, send7468);
symbol3215 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure2488 = (Object)new_Runtime_MethodClosure(method2536);
store_method((Type_Class)class247, (Type_Symbol)symbol3215, (Runtime_MethodClosure)methodclosure2488);

// BridgeTest>>tmMethodArguments:with:with:
localvariable1073 = (Object)new_AST_Variable_named(L"arg1");
localvariable1074 = (Object)new_AST_Variable_named(L"arg2");
localvariable1075 = (Object)new_AST_Variable_named(L"arg3");
array1050 = (Object)new_Type_Array_with(3, (Object)localvariable1073, (Object)localvariable1074, (Object)localvariable1075);
send7469 = (Object)new_AST_Send((Object)localvariable1073, (Object)SMB__concat, 1, (Object)localvariable1074);
send7470 = (Object)new_AST_Send((Object)send7469, (Object)SMB__concat, 1, (Object)localvariable1075);
method2537 = (Object)new_AST_Method_with((Type_Array)array1050, (Type_Array)empty_Type_Array, 1, send7470);
symbol3243 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure2489 = (Object)new_Runtime_MethodClosure(method2537);
store_method((Type_Class)class247, (Type_Symbol)symbol3243, (Runtime_MethodClosure)methodclosure2489);

// BridgeTest>>tmSimpleReturn
smallint2954 = (Object)new_Type_SmallInt(1);
constant3906 = (Object)new_AST_Constant((Object)smallint2954);
method2538 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3906);
symbol3235 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure2490 = (Object)new_Runtime_MethodClosure(method2538);
store_method((Type_Class)class247, (Type_Symbol)symbol3235, (Runtime_MethodClosure)methodclosure2490);

// BridgeTest>>tmBooleanSymbolEquals
symbol3265 = (Object)new_Type_Symbol_cached(L"true");
constant3907 = (Object)new_AST_Constant((Object)symbol3265);
send7471 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant3907);
method2539 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7471);
symbol3227 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure2491 = (Object)new_Runtime_MethodClosure(method2539);
store_method((Type_Class)class247, (Type_Symbol)symbol3227, (Runtime_MethodClosure)methodclosure2491);

// BridgeTest>>tmNumberMult
smallint2955 = (Object)new_Type_SmallInt(2);
constant3908 = (Object)new_AST_Constant((Object)smallint2955);
smallint2956 = (Object)new_Type_SmallInt(3);
constant3909 = (Object)new_AST_Constant((Object)smallint2956);
send7472 = (Object)new_AST_Send((Object)constant3908, (Object)SMB__times, 1, (Object)constant3909);
method2540 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7472);
symbol3247 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure2492 = (Object)new_Runtime_MethodClosure(method2540);
store_method((Type_Class)class247, (Type_Symbol)symbol3247, (Runtime_MethodClosure)methodclosure2492);

// BridgeTest>>tmCharacterStringEquals
character301 = (Object)new_Type_Character(L'C');
constant3910 = (Object)new_AST_Constant((Object)character301);
string547 = (Object)new_Type_String(L"C");
constant3911 = (Object)new_AST_Constant((Object)string547);
send7473 = (Object)new_AST_Send((Object)constant3910, (Object)SMB__equal, 1, (Object)constant3911);
method2541 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7473);
symbol3217 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure2493 = (Object)new_Runtime_MethodClosure(method2541);
store_method((Type_Class)class247, (Type_Symbol)symbol3217, (Runtime_MethodClosure)methodclosure2493);

// BridgeTest>>tmBooleanEquals
send7474 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method2542 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7474);
symbol3209 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure2494 = (Object)new_Runtime_MethodClosure(method2542);
store_method((Type_Class)class247, (Type_Symbol)symbol3209, (Runtime_MethodClosure)methodclosure2494);

// BridgeTest>>tmNumberSubtract
smallint2957 = (Object)new_Type_SmallInt(2);
constant3912 = (Object)new_AST_Constant((Object)smallint2957);
smallint2958 = (Object)new_Type_SmallInt(1);
constant3913 = (Object)new_AST_Constant((Object)smallint2958);
send7475 = (Object)new_AST_Send((Object)constant3912, (Object)SMB__minus, 1, (Object)constant3913);
method2543 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send7475);
symbol3237 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure2495 = (Object)new_Runtime_MethodClosure(method2543);
store_method((Type_Class)class247, (Type_Symbol)symbol3237, (Runtime_MethodClosure)methodclosure2495);

// BridgeTest>>tmCharacter
character302 = (Object)new_Type_Character(L'C');
constant3914 = (Object)new_AST_Constant((Object)character302);
method2544 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant3914);
symbol3229 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure2496 = (Object)new_Runtime_MethodClosure(method2544);
store_method((Type_Class)class247, (Type_Symbol)symbol3229, (Runtime_MethodClosure)methodclosure2496);
classreference317 = (Object)new_Organization_ClassReference((Type_Class)class247);
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object send7476 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3230, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send7476);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object send7477 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3211, 0);
Object result = (Object)Eval((Object)send7477);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object send7478 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3209, 0);
Object result = (Object)Eval((Object)send7478);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object send7479 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3236, 0);
Object result = (Object)Eval((Object)send7479);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
Object send7480 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3227, 0);
Object result = (Object)Eval((Object)send7480);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object send7481 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3226, 0);
Object result = (Object)Eval((Object)send7481);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object send7482 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3229, 0);
Object result = (Object)Eval((Object)send7482);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object send7483 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3245, 0);
Object result = (Object)Eval((Object)send7483);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
Object send7484 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3217, 0);
Object result = (Object)Eval((Object)send7484);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object send7485 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3210, 0);
Object result = (Object)Eval((Object)send7485);
ASSERT_EMPTY_STACK
Object symbol3197 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol3197);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object send7486 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3219, 0);
Object result = (Object)Eval((Object)send7486);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object send7487 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3240, 0);
Object result = (Object)Eval((Object)send7487);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object smallint2959 = (Object)new_Type_SmallInt(1);
Object constant3915 = (Object)new_AST_Constant((Object)smallint2959);
Object send7488 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3215, 1, (Object)constant3915);
Object result = (Object)Eval((Object)send7488);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object string548 = (Object)new_Type_String(L"asdf");
Object constant3916 = (Object)new_AST_Constant((Object)string548);
Object string549 = (Object)new_Type_String(L"asdf");
Object constant3917 = (Object)new_AST_Constant((Object)string549);
Object string550 = (Object)new_Type_String(L"df");
Object constant3918 = (Object)new_AST_Constant((Object)string550);
Object send7489 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3243, 3, (Object)constant3916, (Object)constant3917, (Object)constant3918);
Object result = (Object)Eval((Object)send7489);
ASSERT_EMPTY_STACK
Object string551 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string551);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object send7490 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3238, 0);
Object result = (Object)Eval((Object)send7490);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object send7491 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3239, 0);
Object result = (Object)Eval((Object)send7491);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object send7492 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3231, 0);
Object result = (Object)Eval((Object)send7492);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object send7493 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3218, 0);
Object result = (Object)Eval((Object)send7493);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object send7494 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3247, 0);
Object result = (Object)Eval((Object)send7494);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object send7495 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3237, 0);
Object result = (Object)Eval((Object)send7495);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
Object send7496 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3244, 0);
Object result = (Object)Eval((Object)send7496);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object send7497 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3235, 0);
Object result = (Object)Eval((Object)send7497);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
Object send7498 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3224, 0);
Object result = (Object)Eval((Object)send7498);
ASSERT_EMPTY_STACK
Object string552 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string552);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object send7499 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3212, 0);
Object result = (Object)Eval((Object)send7499);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object send7500 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3225, 0);
Object result = (Object)Eval((Object)send7500);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol3263);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
Object send7501 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3241, 0);
Object result = (Object)Eval((Object)send7501);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object send7502 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3248, 0);
Object result = (Object)Eval((Object)send7502);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVar)
/*
tmClassInstVar
	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
Object send7503 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3216, 0);
Object result = (Object)Eval((Object)send7503);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
	StandardTestClass instVar: 10.
	self assert: StandardTestClass instVar = 10.
*/
Object send7504 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3246, 0);
Object result = (Object)Eval((Object)send7504);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSide)
/*
tmClassSide
	self assert: Object class class = Metaclass.
	^ StandardTestClass aClassSideMethod
*/
Object send7505 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3242, 0);
Object result = (Object)Eval((Object)send7505);
ASSERT_EMPTY_STACK
Object string553 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string553);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSideSuper)
/*
tmClassSideSuper
	"TODO create accerssort in: everywhere"
	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
*/
Object send7506 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3228, 0);
Object result = (Object)Eval((Object)send7506);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSideSuperSend)
/*
tmClassSideSuperSend
	ChildClassTestClass a: nil.
	ChildClassTestClass b: nil.
	ChildClassTestClass c: nil.
	
	self assert: ChildClassTestClass a = nil.
	self assert: ChildClassTestClass b = nil.
	self assert: ChildClassTestClass c = nil.
	
	ChildClassTestClass a: 1.
	ChildClassTestClass b: 2.
	ChildClassTestClass c: 3.
	
	self assert: ChildClassTestClass a = 1.
	self assert: ChildClassTestClass b = 2.
	self assert: ChildClassTestClass c = 3.
*/
Object send7507 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3223, 0);
Object result = (Object)Eval((Object)send7507);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send7508 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3214, 0);
Object result = (Object)Eval((Object)send7508);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2
*/
Object send7509 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3232, 0);
Object result = (Object)Eval((Object)send7509);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
	self assert: instance test = 100
*/
Object send7510 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3234, 0);
Object result = (Object)Eval((Object)send7510);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send7511 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3221, 0);
Object result = (Object)Eval((Object)send7511);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 100 put: 100.
	self assert: (instance at: 1) = 1.	"sample"
	self assert: (instance at: 100) = 100.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
Object send7512 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3233, 0);
Object result = (Object)Eval((Object)send7512);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
    Test_Class = (Type_Class)class247;
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmSymbolCharacterEquals);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_tmClassSide);
    RUN_TEST(AutoGenTest_tmClassSideSuper);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmSuperClassSuperSend);
    RUN_TEST(AutoGenTest_tmClassInstVar);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmClassInstVarAssignment);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmClassSideSuperSend);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmCharacterStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmSuperClass);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmBooleanSymbolEquals);
})