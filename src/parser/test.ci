// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
Object classreference3763;
Object send4723;
Object symbol1237;
Object send4724;
Object method2093;
Object symbol1177;
Object methodclosure2036;
Object localvariable1024;
Object array1036;
Object send4725;
Object send4726;
Object method2094;
Object symbol1178;
Object methodclosure2037;
Object classreference3764;
Object classreference3765;
Object classreference3766;
Object symbol1184;
Object class907;
Object metaclass109;
Object objectlayout112;
Object instancevariable362;
Object instancevariable363;
Object symbol1187;
Object objectlayout113;
Object instancevariable364;
Object instancevariable365;
Object instancevariable366;
Object class908;
Object metaclass110;
Object localvariable1025;
Object array1037;
Object assign209;
Object method2095;
Object symbol1236;
Object methodclosure2038;
Object string233;
Object constant1359;
Object method2096;
Object symbol1233;
Object methodclosure2039;
Object smallint933;
Object constant1360;
Object assign210;
Object method2097;
Object symbol1234;
Object methodclosure2040;
Object method2098;
Object symbol1235;
Object methodclosure2041;
Object localvariable1026;
Object array1038;
Object assign211;
Object method2099;
Object symbol1227;
Object methodclosure2042;
Object method2100;
Object symbol1231;
Object methodclosure2043;
Object method2101;
Object symbol1228;
Object methodclosure2044;
Object method2102;
Object symbol1226;
Object methodclosure2045;
Object localvariable1027;
Object array1039;
Object assign212;
Object method2103;
Object symbol1232;
Object methodclosure2046;
Object localvariable1028;
Object array1040;
Object assign213;
Object method2104;
Object symbol1229;
Object methodclosure2047;
Object classreference3767;
Object send4727;
Object method2105;
Object symbol1215;
Object methodclosure2048;
Object method2106;
Object symbol1207;
Object methodclosure2049;
Object string234;
Object constant1361;
Object method2107;
Object symbol1199;
Object methodclosure2050;
Object string235;
Object constant1362;
Object string236;
Object constant1363;
Object send4728;
Object method2108;
Object symbol1217;
Object methodclosure2051;
Object localvariable1029;
Object array1041;
Object send4729;
Object assign214;
Object localvariable1030;
Object array1042;
Object smallint934;
Object constant1364;
Object send4730;
Object smallint935;
Object constant1365;
Object send4731;
Object smallint936;
Object constant1366;
Object send4732;
Object block235;
Object send4733;
Object symbol1208;
Object send4734;
Object smallint937;
Object constant1367;
Object send4735;
Object send4736;
Object send4737;
Object smallint938;
Object constant1368;
Object send4738;
Object send4739;
Object send4740;
Object smallint939;
Object constant1369;
Object send4741;
Object send4742;
Object send4743;
Object send4744;
Object send4745;
Object send4746;
Object send4747;
Object method2109;
Object symbol1209;
Object methodclosure2052;
Object localvariable1031;
Object localvariable1032;
Object localvariable1033;
Object array1043;
Object send4748;
Object send4749;
Object method2110;
Object symbol1192;
Object methodclosure2053;
Object variable29;
Object array1044;
Object smallint940;
Object constant1370;
Object smallint941;
Object constant1371;
Object send4750;
Object smallint942;
Object constant1372;
Object send4751;
Object block236;
Object smallint943;
Object constant1373;
Object send4752;
Object block237;
Object send4753;
Object block238;
Object send4754;
Object method2111;
Object symbol1189;
Object methodclosure2054;
Object smallint944;
Object constant1374;
Object smallint945;
Object constant1375;
Object send4755;
Object method2112;
Object symbol1210;
Object methodclosure2055;
Object method2113;
Object symbol1219;
Object methodclosure2056;
Object method2114;
Object symbol1194;
Object methodclosure2057;
Object localvariable1034;
Object array1045;
Object smallint946;
Object constant1376;
Object assign215;
Object method2115;
Object symbol1200;
Object methodclosure2058;
Object objectlayout114;
Object instancevariable367;
Object instancevariable368;
Object symbol1225;
Object objectlayout115;
Object instancevariable369;
Object class909;
Object metaclass111;
Object localvariable1035;
Object array1046;
Object assign216;
Object method2116;
Object methodclosure2059;
Object method2117;
Object methodclosure2060;
Object localvariable1036;
Object array1047;
Object assign217;
Object method2118;
Object methodclosure2061;
Object method2119;
Object methodclosure2062;
Object method2120;
Object methodclosure2063;
Object smallint947;
Object constant1377;
Object method2121;
Object symbol1230;
Object methodclosure2064;
Object localvariable1037;
Object array1048;
Object assign218;
Object method2122;
Object methodclosure2065;
Object objectlayout116;
Object instancevariable370;
Object symbol1185;
Object objectlayout117;
Object instancevariable371;
Object class910;
Object metaclass112;
Object method2123;
Object methodclosure2066;
Object localvariable1038;
Object array1049;
Object assign219;
Object method2124;
Object methodclosure2067;
Object localvariable1039;
Object array1050;
Object assign220;
Object method2125;
Object methodclosure2068;
Object smallint948;
Object constant1378;
Object super20;
Object send4756;
Object method2126;
Object methodclosure2069;
Object method2127;
Object methodclosure2070;
Object classreference3768;
Object send4757;
Object send4758;
Object send4759;
Object send4760;
Object send4761;
Object send4762;
Object send4763;
Object send4764;
Object send4765;
Object send4766;
Object send4767;
Object send4768;
Object smallint949;
Object constant1379;
Object send4769;
Object smallint950;
Object constant1380;
Object send4770;
Object smallint951;
Object constant1381;
Object send4771;
Object send4772;
Object smallint952;
Object constant1382;
Object send4773;
Object send4774;
Object send4775;
Object smallint953;
Object constant1383;
Object send4776;
Object send4777;
Object send4778;
Object smallint954;
Object constant1384;
Object send4779;
Object send4780;
Object method2128;
Object symbol1220;
Object methodclosure2071;
Object smallint955;
Object constant1385;
Object smallint956;
Object constant1386;
Object send4781;
Object method2129;
Object symbol1212;
Object methodclosure2072;
Object send4782;
Object method2130;
Object symbol1204;
Object methodclosure2073;
Object symbol1238;
Object constant1387;
Object constant1388;
Object send4783;
Object method2131;
Object symbol1196;
Object methodclosure2074;
Object smallint957;
Object constant1389;
Object smallint958;
Object constant1390;
Object send4784;
Object smallint959;
Object constant1391;
Object send4785;
Object smallint960;
Object constant1392;
Object send4786;
Object method2132;
Object symbol1202;
Object methodclosure2075;
Object localvariable1040;
Object array1051;
Object symbol1190;
Object arraylayout8;
Object instancevariable372;
Object instancevariable373;
Object instancevariable374;
Object class911;
Object metaclass113;
Object localvariable1041;
Object array1052;
Object assign221;
Object method2133;
Object methodclosure2076;
Object method2134;
Object methodclosure2077;
Object method2135;
Object methodclosure2078;
Object method2136;
Object methodclosure2079;
Object localvariable1042;
Object array1053;
Object assign222;
Object method2137;
Object methodclosure2080;
Object localvariable1043;
Object array1054;
Object assign223;
Object method2138;
Object methodclosure2081;
Object classreference3769;
Object send4787;
Object assign224;
Object localvariable1044;
Object array1055;
Object smallint961;
Object constant1393;
Object send4788;
Object smallint962;
Object constant1394;
Object send4789;
Object smallint963;
Object constant1395;
Object send4790;
Object block239;
Object send4791;
Object send4792;
Object smallint964;
Object constant1396;
Object send4793;
Object send4794;
Object send4795;
Object smallint965;
Object constant1397;
Object send4796;
Object send4797;
Object send4798;
Object smallint966;
Object constant1398;
Object send4799;
Object send4800;
Object send4801;
Object send4802;
Object send4803;
Object send4804;
Object send4805;
Object method2139;
Object symbol1222;
Object methodclosure2082;
Object smallint967;
Object constant1399;
Object smallint968;
Object constant1400;
Object send4806;
Object method2140;
Object symbol1214;
Object methodclosure2083;
Object send4807;
Object method2141;
Object symbol1206;
Object methodclosure2084;
Object localvariable1045;
Object array1056;
Object send4808;
Object assign225;
Object send4809;
Object smallint969;
Object constant1401;
Object send4810;
Object send4811;
Object method2142;
Object symbol1186;
Object methodclosure2085;
Object symbol1239;
Object constant1402;
Object character160;
Object constant1403;
Object send4812;
Object method2143;
Object symbol1198;
Object methodclosure2086;
Object smallint970;
Object constant1404;
Object smallint971;
Object constant1405;
Object send4813;
Object method2144;
Object symbol1224;
Object methodclosure2087;
Object character161;
Object constant1406;
Object string237;
Object constant1407;
Object send4814;
Object method2145;
Object symbol1216;
Object methodclosure2088;
Object localvariable1046;
Object array1057;
Object symbol1240;
Object send4815;
Object block240;
Object send4816;
Object method2146;
Object methodclosure2089;
Object localvariable1047;
Object array1058;
Object smallint972;
Object constant1408;
Object send4817;
Object assign226;
Object smallint973;
Object constant1409;
Object smallint974;
Object constant1410;
Object send4818;
Object smallint975;
Object constant1411;
Object smallint976;
Object constant1412;
Object send4819;
Object smallint977;
Object constant1413;
Object send4820;
Object smallint978;
Object constant1414;
Object send4821;
Object send4822;
Object smallint979;
Object constant1415;
Object send4823;
Object smallint980;
Object constant1416;
Object send4824;
Object send4825;
Object localvariable1048;
Object array1059;
Object smallint981;
Object constant1417;
Object send4826;
Object smallint982;
Object constant1418;
Object send4827;
Object smallint983;
Object constant1419;
Object send4828;
Object block241;
Object send4829;
Object send4830;
Object smallint984;
Object constant1420;
Object send4831;
Object send4832;
Object send4833;
Object smallint985;
Object constant1421;
Object send4834;
Object send4835;
Object send4836;
Object smallint986;
Object constant1422;
Object send4837;
Object send4838;
Object send4839;
Object send4840;
Object send4841;
Object smallint987;
Object constant1423;
Object send4842;
Object send4843;
Object send4844;
Object send4845;
Object smallint988;
Object constant1424;
Object send4846;
Object send4847;
Object method2147;
Object symbol1191;
Object methodclosure2090;
Object smallint989;
Object constant1425;
Object send4848;
Object send4849;
Object smallint990;
Object constant1426;
Object send4850;
Object send4851;
Object method2148;
Object symbol1188;
Object methodclosure2091;
Object localvariable1049;
Object array1060;
Object smallint991;
Object constant1427;
Object send4852;
Object method2149;
Object symbol1218;
Object methodclosure2092;
Object localvariable1050;
Object array1061;
Object send4853;
Object assign227;
Object smallint992;
Object constant1428;
Object send4854;
Object send4855;
Object smallint993;
Object constant1429;
Object send4856;
Object send4857;
Object send4858;
Object send4859;
Object send4860;
Object smallint994;
Object constant1430;
Object send4861;
Object send4862;
Object smallint995;
Object constant1431;
Object send4863;
Object send4864;
Object send4865;
Object smallint996;
Object constant1432;
Object send4866;
Object send4867;
Object method2150;
Object symbol1193;
Object methodclosure2093;
Object smallint997;
Object constant1433;
Object smallint998;
Object constant1434;
Object send4868;
Object method2151;
Object symbol1211;
Object methodclosure2094;
Object method2152;
Object symbol1203;
Object methodclosure2095;
Object constant1435;
Object method2153;
Object symbol1195;
Object methodclosure2096;
Object character162;
Object constant1436;
Object method2154;
Object symbol1201;
Object methodclosure2097;
Object smallint999;
Object constant1437;
Object method2155;
Object symbol1221;
Object methodclosure2098;
Object symbol1241;
Object constant1438;
Object send4869;
Object method2156;
Object symbol1213;
Object methodclosure2099;
Object smallint1000;
Object constant1439;
Object method2157;
Object symbol1205;
Object methodclosure2100;
Object character163;
Object constant1440;
Object character164;
Object constant1441;
Object send4870;
Object method2158;
Object symbol1197;
Object methodclosure2101;
Object send4871;
Object send4872;
Object send4873;
Object send4874;
Object send4875;
Object method2159;
Object symbol1223;
Object methodclosure2102;
Object classreference3770;
Object classreference3771;

void create_ast() {
classreference3763 = (Object)new_Organization_ClassReference((Type_Class)Class);

// Behavior>>new
send4723 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
symbol1237 = (Object)new_Type_Symbol_cached(L"initialize");
send4724 = (Object)new_AST_Send((Object)send4723, (Object)symbol1237, 0);
method2093 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4724);
symbol1177 = (Object)new_Type_Symbol_cached(L"new");
methodclosure2036 = (Object)new_Runtime_MethodClosure(method2093);
store_method((Type_Class)Behavior, (Type_Symbol)symbol1177, (Runtime_MethodClosure)methodclosure2036);


// Behavior>>new:
localvariable1024 = (Object)new_AST_Variable_named(L"sizeRequested");
array1036 = (Object)new_Type_Array_with(1, (Object)localvariable1024);
send4725 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable1024);
send4726 = (Object)new_AST_Send((Object)send4725, (Object)symbol1237, 0);
method2094 = (Object)new_AST_Method_with((Type_Array)array1036, (Type_Array)empty_Type_Array, 1, send4726);
symbol1178 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure2037 = (Object)new_Runtime_MethodClosure(method2094);
store_method((Type_Class)Behavior, (Type_Symbol)symbol1178, (Runtime_MethodClosure)methodclosure2037);

classreference3764 = (Object)new_Organization_ClassReference((Type_Class)Behavior);
classreference3765 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);
classreference3766 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
symbol1184 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class907 = (Object)new_Class_withMeta((Object)Type_Object_Class, empty_object_layout, empty_object_layout);
((Type_Class)class907)->name = (Type_Symbol)symbol1184;
metaclass109 = (Object)HEADER(class907);

// BridgeTest>>tmClassInstVar
objectlayout112 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
instancevariable362 = (Object)new_AST_InstVariable(0, L"classInstVar");
((Type_Array)objectlayout112)->values[0] = instancevariable362;
instancevariable363 = (Object)new_AST_InstVariable(1, L"instVar");
((Type_Array)objectlayout112)->values[1] = instancevariable363;
symbol1187 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout113 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable364 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout113)->values[0] = instancevariable364;
instancevariable365 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout113)->values[1] = instancevariable365;
instancevariable366 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout113)->values[2] = instancevariable366;
class908 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout113, objectlayout112);
((Type_Class)class908)->name = (Type_Symbol)symbol1187;
metaclass110 = (Object)HEADER(class908);

// a PMetaclass P#StandardTestClass>>instVar:
localvariable1025 = (Object)new_AST_Variable_named(L"anObject");
array1037 = (Object)new_Type_Array_with(1, (Object)localvariable1025);
assign209 = (Object)new_AST_Assign((Object)instancevariable363, (Object)localvariable1025);
method2095 = (Object)new_AST_Method_with((Type_Array)array1037, (Type_Array)empty_Type_Array, 2, assign209, Self);
symbol1236 = (Object)new_Type_Symbol_cached(L"instVar:");
methodclosure2038 = (Object)new_Runtime_MethodClosure(method2095);
store_method((Type_Class)metaclass110, (Type_Symbol)symbol1236, (Runtime_MethodClosure)methodclosure2038);


// a PMetaclass P#StandardTestClass>>aClassSideMethod
string233 = (Object)new_Type_String(L"a");
constant1359 = (Object)new_AST_Constant((Object)string233);
method2096 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1359);
symbol1233 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure2039 = (Object)new_Runtime_MethodClosure(method2096);
store_method((Type_Class)metaclass110, (Type_Symbol)symbol1233, (Runtime_MethodClosure)methodclosure2039);


// a PMetaclass P#StandardTestClass>>aClassSideMethodWithInstanceVariables
smallint933 = (Object)new_Type_SmallInt(100);
constant1360 = (Object)new_AST_Constant((Object)smallint933);
assign210 = (Object)new_AST_Assign((Object)instancevariable362, (Object)constant1360);
method2097 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign210, instancevariable362);
symbol1234 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure2040 = (Object)new_Runtime_MethodClosure(method2097);
store_method((Type_Class)metaclass110, (Type_Symbol)symbol1234, (Runtime_MethodClosure)methodclosure2040);


// a PMetaclass P#StandardTestClass>>instVar
method2098 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable363);
symbol1235 = (Object)new_Type_Symbol_cached(L"instVar");
methodclosure2041 = (Object)new_Runtime_MethodClosure(method2098);
store_method((Type_Class)metaclass110, (Type_Symbol)symbol1235, (Runtime_MethodClosure)methodclosure2041);


// StandardTestClass>>a:
localvariable1026 = (Object)new_AST_Variable_named(L"anObject");
array1038 = (Object)new_Type_Array_with(1, (Object)localvariable1026);
assign211 = (Object)new_AST_Assign((Object)instancevariable364, (Object)localvariable1026);
method2099 = (Object)new_AST_Method_with((Type_Array)array1038, (Type_Array)empty_Type_Array, 2, assign211, Self);
symbol1227 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure2042 = (Object)new_Runtime_MethodClosure(method2099);
store_method((Type_Class)class908, (Type_Symbol)symbol1227, (Runtime_MethodClosure)methodclosure2042);


// StandardTestClass>>c
method2100 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable366);
symbol1231 = (Object)new_Type_Symbol_cached(L"c");
methodclosure2043 = (Object)new_Runtime_MethodClosure(method2100);
store_method((Type_Class)class908, (Type_Symbol)symbol1231, (Runtime_MethodClosure)methodclosure2043);


// StandardTestClass>>b
method2101 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable365);
symbol1228 = (Object)new_Type_Symbol_cached(L"b");
methodclosure2044 = (Object)new_Runtime_MethodClosure(method2101);
store_method((Type_Class)class908, (Type_Symbol)symbol1228, (Runtime_MethodClosure)methodclosure2044);


// StandardTestClass>>a
method2102 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable364);
symbol1226 = (Object)new_Type_Symbol_cached(L"a");
methodclosure2045 = (Object)new_Runtime_MethodClosure(method2102);
store_method((Type_Class)class908, (Type_Symbol)symbol1226, (Runtime_MethodClosure)methodclosure2045);


// StandardTestClass>>c:
localvariable1027 = (Object)new_AST_Variable_named(L"anObject");
array1039 = (Object)new_Type_Array_with(1, (Object)localvariable1027);
assign212 = (Object)new_AST_Assign((Object)instancevariable366, (Object)localvariable1027);
method2103 = (Object)new_AST_Method_with((Type_Array)array1039, (Type_Array)empty_Type_Array, 2, assign212, Self);
symbol1232 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure2046 = (Object)new_Runtime_MethodClosure(method2103);
store_method((Type_Class)class908, (Type_Symbol)symbol1232, (Runtime_MethodClosure)methodclosure2046);


// StandardTestClass>>b:
localvariable1028 = (Object)new_AST_Variable_named(L"anObject");
array1040 = (Object)new_Type_Array_with(1, (Object)localvariable1028);
assign213 = (Object)new_AST_Assign((Object)instancevariable365, (Object)localvariable1028);
method2104 = (Object)new_AST_Method_with((Type_Array)array1040, (Type_Array)empty_Type_Array, 2, assign213, Self);
symbol1229 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure2047 = (Object)new_Runtime_MethodClosure(method2104);
store_method((Type_Class)class908, (Type_Symbol)symbol1229, (Runtime_MethodClosure)methodclosure2047);

classreference3767 = (Object)new_Organization_ClassReference((Type_Class)class908);
send4727 = (Object)new_AST_Send((Object)classreference3767, (Object)symbol1234, 0);
method2105 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4727);
symbol1215 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure2048 = (Object)new_Runtime_MethodClosure(method2105);
store_method((Type_Class)class907, (Type_Symbol)symbol1215, (Runtime_MethodClosure)methodclosure2048);


// BridgeTest>>tmFibonacci
method2106 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol1207 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure2049 = (Object)new_Runtime_MethodClosure(method2106);
store_method((Type_Class)class907, (Type_Symbol)symbol1207, (Runtime_MethodClosure)methodclosure2049);


// BridgeTest>>tmString
string234 = (Object)new_Type_String(L"String");
constant1361 = (Object)new_AST_Constant((Object)string234);
method2107 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1361);
symbol1199 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure2050 = (Object)new_Runtime_MethodClosure(method2107);
store_method((Type_Class)class907, (Type_Symbol)symbol1199, (Runtime_MethodClosure)methodclosure2050);


// BridgeTest>>tmStringEquals
string235 = (Object)new_Type_String(L"String");
constant1362 = (Object)new_AST_Constant((Object)string235);
string236 = (Object)new_Type_String(L"String");
constant1363 = (Object)new_AST_Constant((Object)string236);
send4728 = (Object)new_AST_Send((Object)constant1362, (Object)SMB__equal, 1, (Object)constant1363);
method2108 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4728);
symbol1217 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure2051 = (Object)new_Runtime_MethodClosure(method2108);
store_method((Type_Class)class907, (Type_Symbol)symbol1217, (Runtime_MethodClosure)methodclosure2051);


// BridgeTest>>tmSimpleInstanceCreation
localvariable1029 = (Object)new_AST_Variable_named(L"instance");
array1041 = (Object)new_Type_Array_with(1, (Object)localvariable1029);
send4729 = (Object)new_AST_Send((Object)classreference3767, (Object)SMB_basicNew, 0);
assign214 = (Object)new_AST_Assign((Object)localvariable1029, (Object)send4729);
localvariable1030 = (Object)new_AST_Variable_named(L"receiver");
array1042 = (Object)new_Type_Array_with(1, (Object)localvariable1030);
smallint934 = (Object)new_Type_SmallInt(1);
constant1364 = (Object)new_AST_Constant((Object)smallint934);
send4730 = (Object)new_AST_Send((Object)localvariable1030, (Object)symbol1227, 1, (Object)constant1364);
smallint935 = (Object)new_Type_SmallInt(2);
constant1365 = (Object)new_AST_Constant((Object)smallint935);
send4731 = (Object)new_AST_Send((Object)localvariable1030, (Object)symbol1229, 1, (Object)constant1365);
smallint936 = (Object)new_Type_SmallInt(3);
constant1366 = (Object)new_AST_Constant((Object)smallint936);
send4732 = (Object)new_AST_Send((Object)localvariable1030, (Object)symbol1232, 1, (Object)constant1366);
block235 = (Object)new_AST_Block_with((Type_Array)array1042, (Type_Array)empty_Type_Array, 1, 3, send4730, send4731, send4732);
send4733 = (Object)new_AST_Send((Object)block235, (Object)SMB_value_, 1, (Object)localvariable1029);
symbol1208 = (Object)new_Type_Symbol_cached(L"assert:");
send4734 = (Object)new_AST_Send((Object)localvariable1029, (Object)symbol1226, 0);
smallint937 = (Object)new_Type_SmallInt(1);
constant1367 = (Object)new_AST_Constant((Object)smallint937);
send4735 = (Object)new_AST_Send((Object)send4734, (Object)SMB__equal, 1, (Object)constant1367);
send4736 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4735);
send4737 = (Object)new_AST_Send((Object)localvariable1029, (Object)symbol1228, 0);
smallint938 = (Object)new_Type_SmallInt(2);
constant1368 = (Object)new_AST_Constant((Object)smallint938);
send4738 = (Object)new_AST_Send((Object)send4737, (Object)SMB__equal, 1, (Object)constant1368);
send4739 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4738);
send4740 = (Object)new_AST_Send((Object)localvariable1029, (Object)symbol1231, 0);
smallint939 = (Object)new_Type_SmallInt(3);
constant1369 = (Object)new_AST_Constant((Object)smallint939);
send4741 = (Object)new_AST_Send((Object)send4740, (Object)SMB__equal, 1, (Object)constant1369);
send4742 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4741);
send4743 = (Object)new_AST_Send((Object)localvariable1029, (Object)symbol1226, 0);
send4744 = (Object)new_AST_Send((Object)localvariable1029, (Object)symbol1228, 0);
send4745 = (Object)new_AST_Send((Object)send4743, (Object)SMB__plus, 1, (Object)send4744);
send4746 = (Object)new_AST_Send((Object)localvariable1029, (Object)symbol1231, 0);
send4747 = (Object)new_AST_Send((Object)send4745, (Object)SMB__plus, 1, (Object)send4746);
method2109 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1041, 6, assign214, send4733, send4736, send4739, send4742, send4747);
symbol1209 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure2052 = (Object)new_Runtime_MethodClosure(method2109);
store_method((Type_Class)class907, (Type_Symbol)symbol1209, (Runtime_MethodClosure)methodclosure2052);


// BridgeTest>>tmMethodArguments:with:with:
localvariable1031 = (Object)new_AST_Variable_named(L"arg1");
localvariable1032 = (Object)new_AST_Variable_named(L"arg2");
localvariable1033 = (Object)new_AST_Variable_named(L"arg3");
array1043 = (Object)new_Type_Array_with(3, (Object)localvariable1031, (Object)localvariable1032, (Object)localvariable1033);
send4748 = (Object)new_AST_Send((Object)localvariable1031, (Object)SMB__concat, 1, (Object)localvariable1032);
send4749 = (Object)new_AST_Send((Object)send4748, (Object)SMB__concat, 1, (Object)localvariable1033);
method2110 = (Object)new_AST_Method_with((Type_Array)array1043, (Type_Array)empty_Type_Array, 1, send4749);
symbol1192 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure2053 = (Object)new_Runtime_MethodClosure(method2110);
store_method((Type_Class)class907, (Type_Symbol)symbol1192, (Runtime_MethodClosure)methodclosure2053);


// BridgeTest>>tmExtendedReturn
variable29 = (Object)new_AST_Variable_named(L"return");
array1044 = (Object)new_Type_Array_with(1, (Object)variable29);
smallint940 = (Object)new_Type_SmallInt(1);
constant1370 = (Object)new_AST_Constant((Object)smallint940);
smallint941 = (Object)new_Type_SmallInt(2);
constant1371 = (Object)new_AST_Constant((Object)smallint941);
send4750 = (Object)new_AST_Send((Object)constant1370, (Object)SMB__gt, 1, (Object)constant1371);
smallint942 = (Object)new_Type_SmallInt(1);
constant1372 = (Object)new_AST_Constant((Object)smallint942);
send4751 = (Object)new_AST_Send((Object)variable29, (Object)SMB_escape_, 1, (Object)constant1372);
block236 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4751);
smallint943 = (Object)new_Type_SmallInt(2);
constant1373 = (Object)new_AST_Constant((Object)smallint943);
send4752 = (Object)new_AST_Send((Object)variable29, (Object)SMB_escape_, 1, (Object)constant1373);
block237 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4752);
send4753 = (Object)new_AST_Send((Object)send4750, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block236, (Object)block237);
block238 = (Object)new_AST_Block_with((Type_Array)array1044, (Type_Array)empty_Type_Array, 1, 2, send4753, Self);
send4754 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block238);
method2111 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4754);
symbol1189 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure2054 = (Object)new_Runtime_MethodClosure(method2111);
store_method((Type_Class)class907, (Type_Symbol)symbol1189, (Runtime_MethodClosure)methodclosure2054);


// BridgeTest>>tmNumberSubtract
smallint944 = (Object)new_Type_SmallInt(2);
constant1374 = (Object)new_AST_Constant((Object)smallint944);
smallint945 = (Object)new_Type_SmallInt(1);
constant1375 = (Object)new_AST_Constant((Object)smallint945);
send4755 = (Object)new_AST_Send((Object)constant1374, (Object)SMB__minus, 1, (Object)constant1375);
method2112 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4755);
symbol1210 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure2055 = (Object)new_Runtime_MethodClosure(method2112);
store_method((Type_Class)class907, (Type_Symbol)symbol1210, (Runtime_MethodClosure)methodclosure2055);


// BridgeTest>>tmClassSideSuper
method2113 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol1219 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure2056 = (Object)new_Runtime_MethodClosure(method2113);
store_method((Type_Class)class907, (Type_Symbol)symbol1219, (Runtime_MethodClosure)methodclosure2056);


// BridgeTest>>tmBooleanTrue
method2114 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol1194 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure2057 = (Object)new_Runtime_MethodClosure(method2114);
store_method((Type_Class)class907, (Type_Symbol)symbol1194, (Runtime_MethodClosure)methodclosure2057);


// BridgeTest>>tmLocalVariable
localvariable1034 = (Object)new_AST_Variable_named(L"a");
array1045 = (Object)new_Type_Array_with(1, (Object)localvariable1034);
smallint946 = (Object)new_Type_SmallInt(1);
constant1376 = (Object)new_AST_Constant((Object)smallint946);
assign215 = (Object)new_AST_Assign((Object)localvariable1034, (Object)constant1376);
method2115 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1045, 2, assign215, localvariable1034);
symbol1200 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure2058 = (Object)new_Runtime_MethodClosure(method2115);
store_method((Type_Class)class907, (Type_Symbol)symbol1200, (Runtime_MethodClosure)methodclosure2058);


// BridgeTest>>tmClassSideSuperSend
objectlayout114 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
instancevariable367 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout114)->values[0] = instancevariable367;
instancevariable368 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout114)->values[1] = instancevariable368;
symbol1225 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout115 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable369 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout115)->values[0] = instancevariable369;
class909 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout115, objectlayout114);
((Type_Class)class909)->name = (Type_Symbol)symbol1225;
metaclass111 = (Object)HEADER(class909);

// a PMetaclass P#SuperClassTestClass>>a:
localvariable1035 = (Object)new_AST_Variable_named(L"anObject");
array1046 = (Object)new_Type_Array_with(1, (Object)localvariable1035);
assign216 = (Object)new_AST_Assign((Object)instancevariable367, (Object)localvariable1035);
method2116 = (Object)new_AST_Method_with((Type_Array)array1046, (Type_Array)empty_Type_Array, 2, assign216, Self);
methodclosure2059 = (Object)new_Runtime_MethodClosure(method2116);
store_method((Type_Class)metaclass111, (Type_Symbol)symbol1227, (Runtime_MethodClosure)methodclosure2059);


// a PMetaclass P#SuperClassTestClass>>b
method2117 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable368);
methodclosure2060 = (Object)new_Runtime_MethodClosure(method2117);
store_method((Type_Class)metaclass111, (Type_Symbol)symbol1228, (Runtime_MethodClosure)methodclosure2060);


// a PMetaclass P#SuperClassTestClass>>b:
localvariable1036 = (Object)new_AST_Variable_named(L"anObject");
array1047 = (Object)new_Type_Array_with(1, (Object)localvariable1036);
assign217 = (Object)new_AST_Assign((Object)instancevariable368, (Object)localvariable1036);
method2118 = (Object)new_AST_Method_with((Type_Array)array1047, (Type_Array)empty_Type_Array, 2, assign217, Self);
methodclosure2061 = (Object)new_Runtime_MethodClosure(method2118);
store_method((Type_Class)metaclass111, (Type_Symbol)symbol1229, (Runtime_MethodClosure)methodclosure2061);


// a PMetaclass P#SuperClassTestClass>>a
method2119 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable367);
methodclosure2062 = (Object)new_Runtime_MethodClosure(method2119);
store_method((Type_Class)metaclass111, (Type_Symbol)symbol1226, (Runtime_MethodClosure)methodclosure2062);


// SuperClassTestClass>>a
method2120 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable369);
methodclosure2063 = (Object)new_Runtime_MethodClosure(method2120);
store_method((Type_Class)class909, (Type_Symbol)symbol1226, (Runtime_MethodClosure)methodclosure2063);


// SuperClassTestClass>>test
smallint947 = (Object)new_Type_SmallInt(10);
constant1377 = (Object)new_AST_Constant((Object)smallint947);
method2121 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1377);
symbol1230 = (Object)new_Type_Symbol_cached(L"test");
methodclosure2064 = (Object)new_Runtime_MethodClosure(method2121);
store_method((Type_Class)class909, (Type_Symbol)symbol1230, (Runtime_MethodClosure)methodclosure2064);


// SuperClassTestClass>>a:
localvariable1037 = (Object)new_AST_Variable_named(L"anObject");
array1048 = (Object)new_Type_Array_with(1, (Object)localvariable1037);
assign218 = (Object)new_AST_Assign((Object)instancevariable369, (Object)localvariable1037);
method2122 = (Object)new_AST_Method_with((Type_Array)array1048, (Type_Array)empty_Type_Array, 2, assign218, Self);
methodclosure2065 = (Object)new_Runtime_MethodClosure(method2122);
store_method((Type_Class)class909, (Type_Symbol)symbol1227, (Runtime_MethodClosure)methodclosure2065);

objectlayout116 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout116)->values[0] = instancevariable367;
((Type_Array)objectlayout116)->values[1] = instancevariable368;
instancevariable370 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout116)->values[2] = instancevariable370;
symbol1185 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout117 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
((Type_Array)objectlayout117)->values[0] = instancevariable369;
instancevariable371 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout117)->values[1] = instancevariable371;
class910 = (Object)new_Class_withMeta((Object)class909, objectlayout117, objectlayout116);
((Type_Class)class910)->name = (Type_Symbol)symbol1185;
metaclass112 = (Object)HEADER(class910);

// a PMetaclass P#ChildClassTestClass>>c
method2123 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable370);
methodclosure2066 = (Object)new_Runtime_MethodClosure(method2123);
store_method((Type_Class)metaclass112, (Type_Symbol)symbol1231, (Runtime_MethodClosure)methodclosure2066);


// a PMetaclass P#ChildClassTestClass>>c:
localvariable1038 = (Object)new_AST_Variable_named(L"anObject");
array1049 = (Object)new_Type_Array_with(1, (Object)localvariable1038);
assign219 = (Object)new_AST_Assign((Object)instancevariable370, (Object)localvariable1038);
method2124 = (Object)new_AST_Method_with((Type_Array)array1049, (Type_Array)empty_Type_Array, 2, assign219, Self);
methodclosure2067 = (Object)new_Runtime_MethodClosure(method2124);
store_method((Type_Class)metaclass112, (Type_Symbol)symbol1232, (Runtime_MethodClosure)methodclosure2067);


// ChildClassTestClass>>b:
localvariable1039 = (Object)new_AST_Variable_named(L"anObject");
array1050 = (Object)new_Type_Array_with(1, (Object)localvariable1039);
assign220 = (Object)new_AST_Assign((Object)instancevariable371, (Object)localvariable1039);
method2125 = (Object)new_AST_Method_with((Type_Array)array1050, (Type_Array)empty_Type_Array, 2, assign220, Self);
methodclosure2068 = (Object)new_Runtime_MethodClosure(method2125);
store_method((Type_Class)class910, (Type_Symbol)symbol1229, (Runtime_MethodClosure)methodclosure2068);


// ChildClassTestClass>>test
smallint948 = (Object)new_Type_SmallInt(10);
constant1378 = (Object)new_AST_Constant((Object)smallint948);
super20 = (Object)new_AST_Super(symbol1230, 0);
send4756 = (Object)new_AST_Send((Object)constant1378, (Object)SMB__times, 1, (Object)super20);
method2126 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4756);
methodclosure2069 = (Object)new_Runtime_MethodClosure(method2126);
store_method((Type_Class)class910, (Type_Symbol)symbol1230, (Runtime_MethodClosure)methodclosure2069);


// ChildClassTestClass>>b
method2127 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable371);
methodclosure2070 = (Object)new_Runtime_MethodClosure(method2127);
store_method((Type_Class)class910, (Type_Symbol)symbol1228, (Runtime_MethodClosure)methodclosure2070);

classreference3768 = (Object)new_Organization_ClassReference((Type_Class)class910);
send4757 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1227, 1, (Object)Nil_Const);
send4758 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1229, 1, (Object)Nil_Const);
send4759 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1232, 1, (Object)Nil_Const);
send4760 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1226, 0);
send4761 = (Object)new_AST_Send((Object)send4760, (Object)SMB__equal, 1, (Object)Nil_Const);
send4762 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4761);
send4763 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1228, 0);
send4764 = (Object)new_AST_Send((Object)send4763, (Object)SMB__equal, 1, (Object)Nil_Const);
send4765 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4764);
send4766 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1231, 0);
send4767 = (Object)new_AST_Send((Object)send4766, (Object)SMB__equal, 1, (Object)Nil_Const);
send4768 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4767);
smallint949 = (Object)new_Type_SmallInt(1);
constant1379 = (Object)new_AST_Constant((Object)smallint949);
send4769 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1227, 1, (Object)constant1379);
smallint950 = (Object)new_Type_SmallInt(2);
constant1380 = (Object)new_AST_Constant((Object)smallint950);
send4770 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1229, 1, (Object)constant1380);
smallint951 = (Object)new_Type_SmallInt(3);
constant1381 = (Object)new_AST_Constant((Object)smallint951);
send4771 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1232, 1, (Object)constant1381);
send4772 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1226, 0);
smallint952 = (Object)new_Type_SmallInt(1);
constant1382 = (Object)new_AST_Constant((Object)smallint952);
send4773 = (Object)new_AST_Send((Object)send4772, (Object)SMB__equal, 1, (Object)constant1382);
send4774 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4773);
send4775 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1228, 0);
smallint953 = (Object)new_Type_SmallInt(2);
constant1383 = (Object)new_AST_Constant((Object)smallint953);
send4776 = (Object)new_AST_Send((Object)send4775, (Object)SMB__equal, 1, (Object)constant1383);
send4777 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4776);
send4778 = (Object)new_AST_Send((Object)classreference3768, (Object)symbol1231, 0);
smallint954 = (Object)new_Type_SmallInt(3);
constant1384 = (Object)new_AST_Constant((Object)smallint954);
send4779 = (Object)new_AST_Send((Object)send4778, (Object)SMB__equal, 1, (Object)constant1384);
send4780 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4779);
method2128 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send4757, send4758, send4759, send4762, send4765, send4768, send4769, send4770, send4771, send4774, send4777, send4780, Self);
symbol1220 = (Object)new_Type_Symbol_cached(L"tmClassSideSuperSend");
methodclosure2071 = (Object)new_Runtime_MethodClosure(method2128);
store_method((Type_Class)class907, (Type_Symbol)symbol1220, (Runtime_MethodClosure)methodclosure2071);


// BridgeTest>>tmNumberDiv
smallint955 = (Object)new_Type_SmallInt(4);
constant1385 = (Object)new_AST_Constant((Object)smallint955);
smallint956 = (Object)new_Type_SmallInt(2);
constant1386 = (Object)new_AST_Constant((Object)smallint956);
send4781 = (Object)new_AST_Send((Object)constant1385, (Object)SMB__divide, 1, (Object)constant1386);
method2129 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4781);
symbol1212 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure2072 = (Object)new_Runtime_MethodClosure(method2129);
store_method((Type_Class)class907, (Type_Symbol)symbol1212, (Runtime_MethodClosure)methodclosure2072);


// BridgeTest>>tmBooleanEquals
send4782 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method2130 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4782);
symbol1204 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure2073 = (Object)new_Runtime_MethodClosure(method2130);
store_method((Type_Class)class907, (Type_Symbol)symbol1204, (Runtime_MethodClosure)methodclosure2073);


// BridgeTest>>tmSymbolEquals
symbol1238 = (Object)new_Type_Symbol_cached(L"Symbol");
constant1387 = (Object)new_AST_Constant((Object)symbol1238);
constant1388 = (Object)new_AST_Constant((Object)symbol1238);
send4783 = (Object)new_AST_Send((Object)constant1387, (Object)SMB__equal, 1, (Object)constant1388);
method2131 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4783);
symbol1196 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure2074 = (Object)new_Runtime_MethodClosure(method2131);
store_method((Type_Class)class907, (Type_Symbol)symbol1196, (Runtime_MethodClosure)methodclosure2074);


// BridgeTest>>tmSimpleBasicArithmetik
smallint957 = (Object)new_Type_SmallInt(1);
constant1389 = (Object)new_AST_Constant((Object)smallint957);
smallint958 = (Object)new_Type_SmallInt(2);
constant1390 = (Object)new_AST_Constant((Object)smallint958);
send4784 = (Object)new_AST_Send((Object)constant1389, (Object)SMB__plus, 1, (Object)constant1390);
smallint959 = (Object)new_Type_SmallInt(2);
constant1391 = (Object)new_AST_Constant((Object)smallint959);
send4785 = (Object)new_AST_Send((Object)send4784, (Object)SMB__plus, 1, (Object)constant1391);
smallint960 = (Object)new_Type_SmallInt(5);
constant1392 = (Object)new_AST_Constant((Object)smallint960);
send4786 = (Object)new_AST_Send((Object)send4785, (Object)SMB__times, 1, (Object)constant1392);
method2132 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4786);
symbol1202 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure2075 = (Object)new_Runtime_MethodClosure(method2132);
store_method((Type_Class)class907, (Type_Symbol)symbol1202, (Runtime_MethodClosure)methodclosure2075);


// BridgeTest>>tmVariableInstanceCreation
localvariable1040 = (Object)new_AST_Variable_named(L"instance");
array1051 = (Object)new_Type_Array_with(1, (Object)localvariable1040);
symbol1190 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout8 = (Object)create_type_with_vars(Type_ArrayLayout, 3);
instancevariable372 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout8)->values[0] = instancevariable372;
instancevariable373 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout8)->values[1] = instancevariable373;
instancevariable374 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout8)->values[2] = instancevariable374;
class911 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout8, empty_array_layout);
((Type_Class)class911)->name = (Type_Symbol)symbol1190;
metaclass113 = (Object)HEADER(class911);

// StandardVariableTestClass>>a:
localvariable1041 = (Object)new_AST_Variable_named(L"anObject");
array1052 = (Object)new_Type_Array_with(1, (Object)localvariable1041);
assign221 = (Object)new_AST_Assign((Object)instancevariable372, (Object)localvariable1041);
method2133 = (Object)new_AST_Method_with((Type_Array)array1052, (Type_Array)empty_Type_Array, 2, assign221, Self);
methodclosure2076 = (Object)new_Runtime_MethodClosure(method2133);
store_method((Type_Class)class911, (Type_Symbol)symbol1227, (Runtime_MethodClosure)methodclosure2076);


// StandardVariableTestClass>>c
method2134 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable374);
methodclosure2077 = (Object)new_Runtime_MethodClosure(method2134);
store_method((Type_Class)class911, (Type_Symbol)symbol1231, (Runtime_MethodClosure)methodclosure2077);


// StandardVariableTestClass>>b
method2135 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable373);
methodclosure2078 = (Object)new_Runtime_MethodClosure(method2135);
store_method((Type_Class)class911, (Type_Symbol)symbol1228, (Runtime_MethodClosure)methodclosure2078);


// StandardVariableTestClass>>a
method2136 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable372);
methodclosure2079 = (Object)new_Runtime_MethodClosure(method2136);
store_method((Type_Class)class911, (Type_Symbol)symbol1226, (Runtime_MethodClosure)methodclosure2079);


// StandardVariableTestClass>>c:
localvariable1042 = (Object)new_AST_Variable_named(L"anObject");
array1053 = (Object)new_Type_Array_with(1, (Object)localvariable1042);
assign222 = (Object)new_AST_Assign((Object)instancevariable374, (Object)localvariable1042);
method2137 = (Object)new_AST_Method_with((Type_Array)array1053, (Type_Array)empty_Type_Array, 2, assign222, Self);
methodclosure2080 = (Object)new_Runtime_MethodClosure(method2137);
store_method((Type_Class)class911, (Type_Symbol)symbol1232, (Runtime_MethodClosure)methodclosure2080);


// StandardVariableTestClass>>b:
localvariable1043 = (Object)new_AST_Variable_named(L"anObject");
array1054 = (Object)new_Type_Array_with(1, (Object)localvariable1043);
assign223 = (Object)new_AST_Assign((Object)instancevariable373, (Object)localvariable1043);
method2138 = (Object)new_AST_Method_with((Type_Array)array1054, (Type_Array)empty_Type_Array, 2, assign223, Self);
methodclosure2081 = (Object)new_Runtime_MethodClosure(method2138);
store_method((Type_Class)class911, (Type_Symbol)symbol1229, (Runtime_MethodClosure)methodclosure2081);

classreference3769 = (Object)new_Organization_ClassReference((Type_Class)class911);
send4787 = (Object)new_AST_Send((Object)classreference3769, (Object)SMB_basicNew, 0);
assign224 = (Object)new_AST_Assign((Object)localvariable1040, (Object)send4787);
localvariable1044 = (Object)new_AST_Variable_named(L"receiver");
array1055 = (Object)new_Type_Array_with(1, (Object)localvariable1044);
smallint961 = (Object)new_Type_SmallInt(1);
constant1393 = (Object)new_AST_Constant((Object)smallint961);
send4788 = (Object)new_AST_Send((Object)localvariable1044, (Object)symbol1227, 1, (Object)constant1393);
smallint962 = (Object)new_Type_SmallInt(2);
constant1394 = (Object)new_AST_Constant((Object)smallint962);
send4789 = (Object)new_AST_Send((Object)localvariable1044, (Object)symbol1229, 1, (Object)constant1394);
smallint963 = (Object)new_Type_SmallInt(3);
constant1395 = (Object)new_AST_Constant((Object)smallint963);
send4790 = (Object)new_AST_Send((Object)localvariable1044, (Object)symbol1232, 1, (Object)constant1395);
block239 = (Object)new_AST_Block_with((Type_Array)array1055, (Type_Array)empty_Type_Array, 1, 3, send4788, send4789, send4790);
send4791 = (Object)new_AST_Send((Object)block239, (Object)SMB_value_, 1, (Object)localvariable1040);
send4792 = (Object)new_AST_Send((Object)localvariable1040, (Object)symbol1226, 0);
smallint964 = (Object)new_Type_SmallInt(1);
constant1396 = (Object)new_AST_Constant((Object)smallint964);
send4793 = (Object)new_AST_Send((Object)send4792, (Object)SMB__equal, 1, (Object)constant1396);
send4794 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4793);
send4795 = (Object)new_AST_Send((Object)localvariable1040, (Object)symbol1228, 0);
smallint965 = (Object)new_Type_SmallInt(2);
constant1397 = (Object)new_AST_Constant((Object)smallint965);
send4796 = (Object)new_AST_Send((Object)send4795, (Object)SMB__equal, 1, (Object)constant1397);
send4797 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4796);
send4798 = (Object)new_AST_Send((Object)localvariable1040, (Object)symbol1231, 0);
smallint966 = (Object)new_Type_SmallInt(3);
constant1398 = (Object)new_AST_Constant((Object)smallint966);
send4799 = (Object)new_AST_Send((Object)send4798, (Object)SMB__equal, 1, (Object)constant1398);
send4800 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4799);
send4801 = (Object)new_AST_Send((Object)localvariable1040, (Object)symbol1226, 0);
send4802 = (Object)new_AST_Send((Object)localvariable1040, (Object)symbol1228, 0);
send4803 = (Object)new_AST_Send((Object)send4801, (Object)SMB__plus, 1, (Object)send4802);
send4804 = (Object)new_AST_Send((Object)localvariable1040, (Object)symbol1231, 0);
send4805 = (Object)new_AST_Send((Object)send4803, (Object)SMB__plus, 1, (Object)send4804);
method2139 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1051, 6, assign224, send4791, send4794, send4797, send4800, send4805);
symbol1222 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure2082 = (Object)new_Runtime_MethodClosure(method2139);
store_method((Type_Class)class907, (Type_Symbol)symbol1222, (Runtime_MethodClosure)methodclosure2082);


// BridgeTest>>tmNumberAdd
smallint967 = (Object)new_Type_SmallInt(1);
constant1399 = (Object)new_AST_Constant((Object)smallint967);
smallint968 = (Object)new_Type_SmallInt(1);
constant1400 = (Object)new_AST_Constant((Object)smallint968);
send4806 = (Object)new_AST_Send((Object)constant1399, (Object)SMB__plus, 1, (Object)constant1400);
method2140 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4806);
symbol1214 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure2083 = (Object)new_Runtime_MethodClosure(method2140);
store_method((Type_Class)class907, (Type_Symbol)symbol1214, (Runtime_MethodClosure)methodclosure2083);


// BridgeTest>>tmClassReferenceReturn
send4807 = (Object)new_AST_Send((Object)classreference3765, (Object)SMB_name, 0);
method2141 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4807);
symbol1206 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure2084 = (Object)new_Runtime_MethodClosure(method2141);
store_method((Type_Class)class907, (Type_Symbol)symbol1206, (Runtime_MethodClosure)methodclosure2084);


// BridgeTest>>tmSuperClassSuperSend
localvariable1045 = (Object)new_AST_Variable_named(L"instance");
array1056 = (Object)new_Type_Array_with(1, (Object)localvariable1045);
send4808 = (Object)new_AST_Send((Object)classreference3768, (Object)SMB_basicNew, 0);
assign225 = (Object)new_AST_Assign((Object)localvariable1045, (Object)send4808);
send4809 = (Object)new_AST_Send((Object)localvariable1045, (Object)symbol1230, 0);
smallint969 = (Object)new_Type_SmallInt(100);
constant1401 = (Object)new_AST_Constant((Object)smallint969);
send4810 = (Object)new_AST_Send((Object)send4809, (Object)SMB__equal, 1, (Object)constant1401);
send4811 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4810);
method2142 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1056, 3, assign225, send4811, Self);
symbol1186 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure2085 = (Object)new_Runtime_MethodClosure(method2142);
store_method((Type_Class)class907, (Type_Symbol)symbol1186, (Runtime_MethodClosure)methodclosure2085);


// BridgeTest>>tmSymbolCharacterEquals
symbol1239 = (Object)new_Type_Symbol_cached(L"S");
constant1402 = (Object)new_AST_Constant((Object)symbol1239);
character160 = (Object)new_Type_Character(L'S');
constant1403 = (Object)new_AST_Constant((Object)character160);
send4812 = (Object)new_AST_Send((Object)constant1402, (Object)SMB__equal, 1, (Object)constant1403);
method2143 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4812);
symbol1198 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure2086 = (Object)new_Runtime_MethodClosure(method2143);
store_method((Type_Class)class907, (Type_Symbol)symbol1198, (Runtime_MethodClosure)methodclosure2086);


// BridgeTest>>tmNumberEquals
smallint970 = (Object)new_Type_SmallInt(1);
constant1404 = (Object)new_AST_Constant((Object)smallint970);
smallint971 = (Object)new_Type_SmallInt(1);
constant1405 = (Object)new_AST_Constant((Object)smallint971);
send4813 = (Object)new_AST_Send((Object)constant1404, (Object)SMB__equal, 1, (Object)constant1405);
method2144 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4813);
symbol1224 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure2087 = (Object)new_Runtime_MethodClosure(method2144);
store_method((Type_Class)class907, (Type_Symbol)symbol1224, (Runtime_MethodClosure)methodclosure2087);


// BridgeTest>>tmCharacterStringEquals
character161 = (Object)new_Type_Character(L'C');
constant1406 = (Object)new_AST_Constant((Object)character161);
string237 = (Object)new_Type_String(L"C");
constant1407 = (Object)new_AST_Constant((Object)string237);
send4814 = (Object)new_AST_Send((Object)constant1406, (Object)SMB__equal, 1, (Object)constant1407);
method2145 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4814);
symbol1216 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure2088 = (Object)new_Runtime_MethodClosure(method2145);
store_method((Type_Class)class907, (Type_Symbol)symbol1216, (Runtime_MethodClosure)methodclosure2088);


// BridgeTest>>assert:
localvariable1046 = (Object)new_AST_Variable_named(L"bool");
array1057 = (Object)new_Type_Array_with(1, (Object)localvariable1046);
symbol1240 = (Object)new_Type_Symbol_cached(L"fail");
send4815 = (Object)new_AST_Send((Object)Self, (Object)symbol1240, 0);
block240 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send4815);
send4816 = (Object)new_AST_Send((Object)localvariable1046, (Object)SMB_ifFalse_, 1, (Object)block240);
method2146 = (Object)new_AST_Method_with((Type_Array)array1057, (Type_Array)empty_Type_Array, 1, send4816);
methodclosure2089 = (Object)new_Runtime_MethodClosure(method2146);
store_method((Type_Class)class907, (Type_Symbol)symbol1208, (Runtime_MethodClosure)methodclosure2089);


// BridgeTest>>tmVariableInstanceCreationSized
localvariable1047 = (Object)new_AST_Variable_named(L"instance");
array1058 = (Object)new_Type_Array_with(1, (Object)localvariable1047);
smallint972 = (Object)new_Type_SmallInt(100);
constant1408 = (Object)new_AST_Constant((Object)smallint972);
send4817 = (Object)new_AST_Send((Object)classreference3769, (Object)SMB_basicNew_, 1, (Object)constant1408);
assign226 = (Object)new_AST_Assign((Object)localvariable1047, (Object)send4817);
smallint973 = (Object)new_Type_SmallInt(1);
constant1409 = (Object)new_AST_Constant((Object)smallint973);
smallint974 = (Object)new_Type_SmallInt(1);
constant1410 = (Object)new_AST_Constant((Object)smallint974);
send4818 = (Object)new_AST_Send((Object)localvariable1047, (Object)SMB_at_put_, 2, (Object)constant1409, (Object)constant1410);
smallint975 = (Object)new_Type_SmallInt(100);
constant1411 = (Object)new_AST_Constant((Object)smallint975);
smallint976 = (Object)new_Type_SmallInt(100);
constant1412 = (Object)new_AST_Constant((Object)smallint976);
send4819 = (Object)new_AST_Send((Object)localvariable1047, (Object)SMB_at_put_, 2, (Object)constant1411, (Object)constant1412);
smallint977 = (Object)new_Type_SmallInt(1);
constant1413 = (Object)new_AST_Constant((Object)smallint977);
send4820 = (Object)new_AST_Send((Object)localvariable1047, (Object)SMB_at_, 1, (Object)constant1413);
smallint978 = (Object)new_Type_SmallInt(1);
constant1414 = (Object)new_AST_Constant((Object)smallint978);
send4821 = (Object)new_AST_Send((Object)send4820, (Object)SMB__equal, 1, (Object)constant1414);
send4822 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4821);
smallint979 = (Object)new_Type_SmallInt(100);
constant1415 = (Object)new_AST_Constant((Object)smallint979);
send4823 = (Object)new_AST_Send((Object)localvariable1047, (Object)SMB_at_, 1, (Object)constant1415);
smallint980 = (Object)new_Type_SmallInt(100);
constant1416 = (Object)new_AST_Constant((Object)smallint980);
send4824 = (Object)new_AST_Send((Object)send4823, (Object)SMB__equal, 1, (Object)constant1416);
send4825 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4824);
localvariable1048 = (Object)new_AST_Variable_named(L"receiver");
array1059 = (Object)new_Type_Array_with(1, (Object)localvariable1048);
smallint981 = (Object)new_Type_SmallInt(1);
constant1417 = (Object)new_AST_Constant((Object)smallint981);
send4826 = (Object)new_AST_Send((Object)localvariable1048, (Object)symbol1227, 1, (Object)constant1417);
smallint982 = (Object)new_Type_SmallInt(2);
constant1418 = (Object)new_AST_Constant((Object)smallint982);
send4827 = (Object)new_AST_Send((Object)localvariable1048, (Object)symbol1229, 1, (Object)constant1418);
smallint983 = (Object)new_Type_SmallInt(3);
constant1419 = (Object)new_AST_Constant((Object)smallint983);
send4828 = (Object)new_AST_Send((Object)localvariable1048, (Object)symbol1232, 1, (Object)constant1419);
block241 = (Object)new_AST_Block_with((Type_Array)array1059, (Type_Array)empty_Type_Array, 1, 3, send4826, send4827, send4828);
send4829 = (Object)new_AST_Send((Object)block241, (Object)SMB_value_, 1, (Object)localvariable1047);
send4830 = (Object)new_AST_Send((Object)localvariable1047, (Object)symbol1226, 0);
smallint984 = (Object)new_Type_SmallInt(1);
constant1420 = (Object)new_AST_Constant((Object)smallint984);
send4831 = (Object)new_AST_Send((Object)send4830, (Object)SMB__equal, 1, (Object)constant1420);
send4832 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4831);
send4833 = (Object)new_AST_Send((Object)localvariable1047, (Object)symbol1228, 0);
smallint985 = (Object)new_Type_SmallInt(2);
constant1421 = (Object)new_AST_Constant((Object)smallint985);
send4834 = (Object)new_AST_Send((Object)send4833, (Object)SMB__equal, 1, (Object)constant1421);
send4835 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4834);
send4836 = (Object)new_AST_Send((Object)localvariable1047, (Object)symbol1231, 0);
smallint986 = (Object)new_Type_SmallInt(3);
constant1422 = (Object)new_AST_Constant((Object)smallint986);
send4837 = (Object)new_AST_Send((Object)send4836, (Object)SMB__equal, 1, (Object)constant1422);
send4838 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4837);
send4839 = (Object)new_AST_Send((Object)localvariable1047, (Object)symbol1226, 0);
send4840 = (Object)new_AST_Send((Object)localvariable1047, (Object)symbol1228, 0);
send4841 = (Object)new_AST_Send((Object)localvariable1047, (Object)symbol1231, 0);
smallint987 = (Object)new_Type_SmallInt(1);
constant1423 = (Object)new_AST_Constant((Object)smallint987);
send4842 = (Object)new_AST_Send((Object)localvariable1047, (Object)SMB_at_, 1, (Object)constant1423);
send4843 = (Object)new_AST_Send((Object)send4841, (Object)SMB__plus, 1, (Object)send4842);
send4844 = (Object)new_AST_Send((Object)send4840, (Object)SMB__plus, 1, (Object)send4843);
send4845 = (Object)new_AST_Send((Object)send4839, (Object)SMB__plus, 1, (Object)send4844);
smallint988 = (Object)new_Type_SmallInt(100);
constant1424 = (Object)new_AST_Constant((Object)smallint988);
send4846 = (Object)new_AST_Send((Object)localvariable1047, (Object)SMB_at_, 1, (Object)constant1424);
send4847 = (Object)new_AST_Send((Object)send4845, (Object)SMB__plus, 1, (Object)send4846);
method2147 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1058, 10, assign226, send4818, send4819, send4822, send4825, send4829, send4832, send4835, send4838, send4847);
symbol1191 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure2090 = (Object)new_Runtime_MethodClosure(method2147);
store_method((Type_Class)class907, (Type_Symbol)symbol1191, (Runtime_MethodClosure)methodclosure2090);


// BridgeTest>>tmClassInstVarAssignment
smallint989 = (Object)new_Type_SmallInt(10);
constant1425 = (Object)new_AST_Constant((Object)smallint989);
send4848 = (Object)new_AST_Send((Object)classreference3767, (Object)symbol1236, 1, (Object)constant1425);
send4849 = (Object)new_AST_Send((Object)classreference3767, (Object)symbol1235, 0);
smallint990 = (Object)new_Type_SmallInt(10);
constant1426 = (Object)new_AST_Constant((Object)smallint990);
send4850 = (Object)new_AST_Send((Object)send4849, (Object)SMB__equal, 1, (Object)constant1426);
send4851 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4850);
method2148 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send4848, send4851, Self);
symbol1188 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure2091 = (Object)new_Runtime_MethodClosure(method2148);
store_method((Type_Class)class907, (Type_Symbol)symbol1188, (Runtime_MethodClosure)methodclosure2091);


// BridgeTest>>tmMethodArgument:
localvariable1049 = (Object)new_AST_Variable_named(L"arg");
array1060 = (Object)new_Type_Array_with(1, (Object)localvariable1049);
smallint991 = (Object)new_Type_SmallInt(1);
constant1427 = (Object)new_AST_Constant((Object)smallint991);
send4852 = (Object)new_AST_Send((Object)localvariable1049, (Object)SMB__plus, 1, (Object)constant1427);
method2149 = (Object)new_AST_Method_with((Type_Array)array1060, (Type_Array)empty_Type_Array, 1, send4852);
symbol1218 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure2092 = (Object)new_Runtime_MethodClosure(method2149);
store_method((Type_Class)class907, (Type_Symbol)symbol1218, (Runtime_MethodClosure)methodclosure2092);


// BridgeTest>>tmSuperClass
localvariable1050 = (Object)new_AST_Variable_named(L"instance");
array1061 = (Object)new_Type_Array_with(1, (Object)localvariable1050);
send4853 = (Object)new_AST_Send((Object)classreference3768, (Object)SMB_basicNew, 0);
assign227 = (Object)new_AST_Assign((Object)localvariable1050, (Object)send4853);
smallint992 = (Object)new_Type_SmallInt(1);
constant1428 = (Object)new_AST_Constant((Object)smallint992);
send4854 = (Object)new_AST_Send((Object)localvariable1050, (Object)symbol1227, 1, (Object)constant1428);
send4855 = (Object)new_AST_Send((Object)localvariable1050, (Object)symbol1226, 0);
smallint993 = (Object)new_Type_SmallInt(1);
constant1429 = (Object)new_AST_Constant((Object)smallint993);
send4856 = (Object)new_AST_Send((Object)send4855, (Object)SMB__equal, 1, (Object)constant1429);
send4857 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4856);
send4858 = (Object)new_AST_Send((Object)localvariable1050, (Object)symbol1228, 0);
send4859 = (Object)new_AST_Send((Object)send4858, (Object)SMB__equal, 1, (Object)Nil_Const);
send4860 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4859);
smallint994 = (Object)new_Type_SmallInt(2);
constant1430 = (Object)new_AST_Constant((Object)smallint994);
send4861 = (Object)new_AST_Send((Object)localvariable1050, (Object)symbol1229, 1, (Object)constant1430);
send4862 = (Object)new_AST_Send((Object)localvariable1050, (Object)symbol1226, 0);
smallint995 = (Object)new_Type_SmallInt(1);
constant1431 = (Object)new_AST_Constant((Object)smallint995);
send4863 = (Object)new_AST_Send((Object)send4862, (Object)SMB__equal, 1, (Object)constant1431);
send4864 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4863);
send4865 = (Object)new_AST_Send((Object)localvariable1050, (Object)symbol1228, 0);
smallint996 = (Object)new_Type_SmallInt(2);
constant1432 = (Object)new_AST_Constant((Object)smallint996);
send4866 = (Object)new_AST_Send((Object)send4865, (Object)SMB__equal, 1, (Object)constant1432);
send4867 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4866);
method2150 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array1061, 8, assign227, send4854, send4857, send4860, send4861, send4864, send4867, Self);
symbol1193 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure2093 = (Object)new_Runtime_MethodClosure(method2150);
store_method((Type_Class)class907, (Type_Symbol)symbol1193, (Runtime_MethodClosure)methodclosure2093);


// BridgeTest>>tmNumberMult
smallint997 = (Object)new_Type_SmallInt(2);
constant1433 = (Object)new_AST_Constant((Object)smallint997);
smallint998 = (Object)new_Type_SmallInt(3);
constant1434 = (Object)new_AST_Constant((Object)smallint998);
send4868 = (Object)new_AST_Send((Object)constant1433, (Object)SMB__times, 1, (Object)constant1434);
method2151 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4868);
symbol1211 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure2094 = (Object)new_Runtime_MethodClosure(method2151);
store_method((Type_Class)class907, (Type_Symbol)symbol1211, (Runtime_MethodClosure)methodclosure2094);


// BridgeTest>>tmBooleanFalse
method2152 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol1203 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure2095 = (Object)new_Runtime_MethodClosure(method2152);
store_method((Type_Class)class907, (Type_Symbol)symbol1203, (Runtime_MethodClosure)methodclosure2095);


// BridgeTest>>tmSymbol
constant1435 = (Object)new_AST_Constant((Object)symbol1238);
method2153 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1435);
symbol1195 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure2096 = (Object)new_Runtime_MethodClosure(method2153);
store_method((Type_Class)class907, (Type_Symbol)symbol1195, (Runtime_MethodClosure)methodclosure2096);


// BridgeTest>>tmCharacter
character162 = (Object)new_Type_Character(L'C');
constant1436 = (Object)new_AST_Constant((Object)character162);
method2154 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1436);
symbol1201 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure2097 = (Object)new_Runtime_MethodClosure(method2154);
store_method((Type_Class)class907, (Type_Symbol)symbol1201, (Runtime_MethodClosure)methodclosure2097);


// BridgeTest>>tmSimpleReturn
smallint999 = (Object)new_Type_SmallInt(1);
constant1437 = (Object)new_AST_Constant((Object)smallint999);
method2155 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1437);
symbol1221 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure2098 = (Object)new_Runtime_MethodClosure(method2155);
store_method((Type_Class)class907, (Type_Symbol)symbol1221, (Runtime_MethodClosure)methodclosure2098);


// BridgeTest>>tmBooleanSymbolEquals
symbol1241 = (Object)new_Type_Symbol_cached(L"true");
constant1438 = (Object)new_AST_Constant((Object)symbol1241);
send4869 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant1438);
method2156 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4869);
symbol1213 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure2099 = (Object)new_Runtime_MethodClosure(method2156);
store_method((Type_Class)class907, (Type_Symbol)symbol1213, (Runtime_MethodClosure)methodclosure2099);


// BridgeTest>>tmNumber
smallint1000 = (Object)new_Type_SmallInt(1);
constant1439 = (Object)new_AST_Constant((Object)smallint1000);
method2157 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant1439);
symbol1205 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure2100 = (Object)new_Runtime_MethodClosure(method2157);
store_method((Type_Class)class907, (Type_Symbol)symbol1205, (Runtime_MethodClosure)methodclosure2100);


// BridgeTest>>tmCharacterEquals
character163 = (Object)new_Type_Character(L'C');
constant1440 = (Object)new_AST_Constant((Object)character163);
character164 = (Object)new_Type_Character(L'C');
constant1441 = (Object)new_AST_Constant((Object)character164);
send4870 = (Object)new_AST_Send((Object)constant1440, (Object)SMB__equal, 1, (Object)constant1441);
method2158 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4870);
symbol1197 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure2101 = (Object)new_Runtime_MethodClosure(method2158);
store_method((Type_Class)class907, (Type_Symbol)symbol1197, (Runtime_MethodClosure)methodclosure2101);


// BridgeTest>>tmClassSide
send4871 = (Object)new_AST_Send((Object)classreference3766, (Object)SMB_class, 0);
send4872 = (Object)new_AST_Send((Object)send4871, (Object)SMB_class, 0);
send4873 = (Object)new_AST_Send((Object)send4872, (Object)SMB__equal, 1, (Object)classreference3765);
send4874 = (Object)new_AST_Send((Object)Self, (Object)symbol1208, 1, (Object)send4873);
send4875 = (Object)new_AST_Send((Object)classreference3767, (Object)symbol1233, 0);
method2159 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send4874, send4875);
symbol1223 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure2102 = (Object)new_Runtime_MethodClosure(method2159);
store_method((Type_Class)class907, (Type_Symbol)symbol1223, (Runtime_MethodClosure)methodclosure2102);

classreference3770 = (Object)new_Organization_ClassReference((Type_Class)class907);
classreference3771 = (Object)new_Organization_ClassReference((Type_Class)class909);
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object send4876 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1208, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send4876);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object send4877 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1207, 0);
Object result = (Object)Eval((Object)send4877);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object send4878 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1204, 0);
Object result = (Object)Eval((Object)send4878);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object send4879 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1203, 0);
Object result = (Object)Eval((Object)send4879);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
Object send4880 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1213, 0);
Object result = (Object)Eval((Object)send4880);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object send4881 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1194, 0);
Object result = (Object)Eval((Object)send4881);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object send4882 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1201, 0);
Object result = (Object)Eval((Object)send4882);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object send4883 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1197, 0);
Object result = (Object)Eval((Object)send4883);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
Object send4884 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1216, 0);
Object result = (Object)Eval((Object)send4884);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object send4885 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1206, 0);
Object result = (Object)Eval((Object)send4885);
ASSERT_EMPTY_STACK
Object symbol1179 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol1179);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object send4886 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1189, 0);
Object result = (Object)Eval((Object)send4886);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object send4887 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1200, 0);
Object result = (Object)Eval((Object)send4887);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object smallint1001 = (Object)new_Type_SmallInt(1);
Object constant1442 = (Object)new_AST_Constant((Object)smallint1001);
Object send4888 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1218, 1, (Object)constant1442);
Object result = (Object)Eval((Object)send4888);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object string238 = (Object)new_Type_String(L"asdf");
Object constant1443 = (Object)new_AST_Constant((Object)string238);
Object string239 = (Object)new_Type_String(L"asdf");
Object constant1444 = (Object)new_AST_Constant((Object)string239);
Object string240 = (Object)new_Type_String(L"df");
Object constant1445 = (Object)new_AST_Constant((Object)string240);
Object send4889 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1192, 3, (Object)constant1443, (Object)constant1444, (Object)constant1445);
Object result = (Object)Eval((Object)send4889);
ASSERT_EMPTY_STACK
Object string241 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string241);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object send4890 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1205, 0);
Object result = (Object)Eval((Object)send4890);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object send4891 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1214, 0);
Object result = (Object)Eval((Object)send4891);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object send4892 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1212, 0);
Object result = (Object)Eval((Object)send4892);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object send4893 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1224, 0);
Object result = (Object)Eval((Object)send4893);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object send4894 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1211, 0);
Object result = (Object)Eval((Object)send4894);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object send4895 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1210, 0);
Object result = (Object)Eval((Object)send4895);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
Object send4896 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1202, 0);
Object result = (Object)Eval((Object)send4896);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object send4897 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1221, 0);
Object result = (Object)Eval((Object)send4897);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
Object send4898 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1199, 0);
Object result = (Object)Eval((Object)send4898);
ASSERT_EMPTY_STACK
Object string242 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string242);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object send4899 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1217, 0);
Object result = (Object)Eval((Object)send4899);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object send4900 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1195, 0);
Object result = (Object)Eval((Object)send4900);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol1238);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
Object send4901 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1198, 0);
Object result = (Object)Eval((Object)send4901);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object send4902 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1196, 0);
Object result = (Object)Eval((Object)send4902);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVar)
/*
tmClassInstVar
	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
Object send4903 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1215, 0);
Object result = (Object)Eval((Object)send4903);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
	StandardTestClass instVar: 10.
	self assert: StandardTestClass instVar = 10.
*/
Object send4904 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1188, 0);
Object result = (Object)Eval((Object)send4904);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSide)
/*
tmClassSide
	self assert: Object class class = Metaclass.
	^ StandardTestClass aClassSideMethod
*/
Object send4905 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1223, 0);
Object result = (Object)Eval((Object)send4905);
ASSERT_EMPTY_STACK
Object string243 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string243);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSideSuper)
/*
tmClassSideSuper
	"TODO create accerssort in: everywhere"
	"self assert: ChildClassTestClass superclass = SuperClassTestClass"
*/
Object send4906 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1219, 0);
Object result = (Object)Eval((Object)send4906);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSideSuperSend)
/*
tmClassSideSuperSend
	ChildClassTestClass a: nil.
	ChildClassTestClass b: nil.
	ChildClassTestClass c: nil.
	
	self assert: ChildClassTestClass a = nil.
	self assert: ChildClassTestClass b = nil.
	self assert: ChildClassTestClass c = nil.
	
	ChildClassTestClass a: 1.
	ChildClassTestClass b: 2.
	ChildClassTestClass c: 3.
	
	self assert: ChildClassTestClass a = 1.
	self assert: ChildClassTestClass b = 2.
	self assert: ChildClassTestClass c = 3.
*/
Object send4907 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1220, 0);
Object result = (Object)Eval((Object)send4907);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send4908 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1209, 0);
Object result = (Object)Eval((Object)send4908);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2
*/
Object send4909 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1193, 0);
Object result = (Object)Eval((Object)send4909);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
	self assert: instance test = 100
*/
Object send4910 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1186, 0);
Object result = (Object)Eval((Object)send4910);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send4911 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1222, 0);
printf("p: %p\n", ((Type_Class)class907)->methods->data);
Object result = (Object)Eval((Object)send4911);
printf("p: %p\n", ((Type_Class)class907)->methods->data);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 100 put: 100.
	self assert: (instance at: 1) = 1.	"sample"
	self assert: (instance at: 100) = 100.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
Object send4912 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1191, 0);
Object result = (Object)Eval((Object)send4912);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
    Test_Class = (Type_Class)class907;
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmSymbolCharacterEquals);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_tmClassSide);
    RUN_TEST(AutoGenTest_tmClassSideSuper);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmSuperClassSuperSend);
    RUN_TEST(AutoGenTest_tmClassInstVar);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmClassInstVarAssignment);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmClassSideSuperSend);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmCharacterStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmSuperClass);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmBooleanSymbolEquals);
})
