// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
Object symbol11;
Object class176;
Object classreference176;
Object symbol9;
Object class177;
Object classreference177;
Object symbol20;
Object arraylayout36;
Object instancevariable211;
Object instancevariable212;
Object instancevariable213;
Object class178;
Object method1349;
Object symbol45;
Object methodclosure1340;
Object localvariable621;
Object array586;
Object assign354;
Object method1350;
Object symbol41;
Object methodclosure1341;
Object localvariable622;
Object array587;
Object assign355;
Object method1351;
Object symbol43;
Object methodclosure1342;
Object method1352;
Object symbol44;
Object methodclosure1343;
Object localvariable623;
Object array588;
Object assign356;
Object method1353;
Object symbol42;
Object methodclosure1344;
Object method1354;
Object symbol46;
Object methodclosure1345;
Object classreference178;
Object symbol27;
Object objectlayout87;
Object instancevariable214;
Object instancevariable215;
Object instancevariable216;
Object class179;
Object method1355;
Object methodclosure1346;
Object localvariable624;
Object array589;
Object assign357;
Object method1356;
Object methodclosure1347;
Object localvariable625;
Object array590;
Object assign358;
Object method1357;
Object methodclosure1348;
Object method1358;
Object methodclosure1349;
Object localvariable626;
Object array591;
Object assign359;
Object method1359;
Object methodclosure1350;
Object method1360;
Object methodclosure1351;
Object classreference179;
Object symbol5;
Object class180;
Object smallint1869;
Object constant2348;
Object smallint1870;
Object constant2349;
Object send4121;
Object method1361;
Object symbol19;
Object methodclosure1352;
Object smallint1871;
Object constant2350;
Object smallint1872;
Object constant2351;
Object send4122;
Object method1362;
Object symbol31;
Object methodclosure1353;
Object send4123;
Object method1363;
Object symbol39;
Object methodclosure1354;
Object localvariable627;
Object array592;
Object send4124;
Object assign360;
Object localvariable628;
Object array593;
Object smallint1873;
Object constant2352;
Object send4125;
Object smallint1874;
Object constant2353;
Object send4126;
Object smallint1875;
Object constant2354;
Object send4127;
Object block247;
Object send4128;
Object symbol49;
Object send4129;
Object smallint1876;
Object constant2355;
Object send4130;
Object send4131;
Object send4132;
Object smallint1877;
Object constant2356;
Object send4133;
Object send4134;
Object send4135;
Object smallint1878;
Object constant2357;
Object send4136;
Object send4137;
Object send4138;
Object send4139;
Object send4140;
Object send4141;
Object send4142;
Object method1364;
Object symbol28;
Object methodclosure1355;
Object smallint1879;
Object constant2358;
Object method1365;
Object symbol40;
Object methodclosure1356;
Object localvariable629;
Object array594;
Object smallint1880;
Object constant2359;
Object send4143;
Object assign361;
Object smallint1881;
Object constant2360;
Object smallint1882;
Object constant2361;
Object send4144;
Object smallint1883;
Object constant2362;
Object smallint1884;
Object constant2363;
Object send4145;
Object smallint1885;
Object constant2364;
Object send4146;
Object smallint1886;
Object constant2365;
Object send4147;
Object send4148;
Object smallint1887;
Object constant2366;
Object send4149;
Object smallint1888;
Object constant2367;
Object send4150;
Object send4151;
Object localvariable630;
Object array595;
Object smallint1889;
Object constant2368;
Object send4152;
Object smallint1890;
Object constant2369;
Object send4153;
Object smallint1891;
Object constant2370;
Object send4154;
Object block248;
Object send4155;
Object send4156;
Object smallint1892;
Object constant2371;
Object send4157;
Object send4158;
Object send4159;
Object smallint1893;
Object constant2372;
Object send4160;
Object send4161;
Object send4162;
Object smallint1894;
Object constant2373;
Object send4163;
Object send4164;
Object send4165;
Object send4166;
Object send4167;
Object smallint1895;
Object constant2374;
Object send4168;
Object send4169;
Object send4170;
Object send4171;
Object smallint1896;
Object constant2375;
Object send4172;
Object send4173;
Object method1366;
Object symbol32;
Object methodclosure1357;
Object localvariable631;
Object array596;
Object send4174;
Object assign362;
Object localvariable632;
Object array597;
Object smallint1897;
Object constant2376;
Object send4175;
Object smallint1898;
Object constant2377;
Object send4176;
Object smallint1899;
Object constant2378;
Object send4177;
Object block249;
Object send4178;
Object send4179;
Object smallint1900;
Object constant2379;
Object send4180;
Object send4181;
Object send4182;
Object smallint1901;
Object constant2380;
Object send4183;
Object send4184;
Object send4185;
Object smallint1902;
Object constant2381;
Object send4186;
Object send4187;
Object send4188;
Object send4189;
Object send4190;
Object send4191;
Object send4192;
Object method1367;
Object symbol21;
Object methodclosure1358;
Object symbol51;
Object constant2382;
Object constant2383;
Object send4193;
Object method1368;
Object symbol13;
Object methodclosure1359;
Object variable39;
Object array598;
Object smallint1903;
Object constant2384;
Object smallint1904;
Object constant2385;
Object send4194;
Object smallint1905;
Object constant2386;
Object send4195;
Object block250;
Object smallint1906;
Object constant2387;
Object send4196;
Object block251;
Object send4197;
Object block252;
Object send4198;
Object method1369;
Object symbol29;
Object methodclosure1360;
Object localvariable633;
Object array599;
Object symbol66;
Object send4199;
Object block253;
Object send4200;
Object method1370;
Object methodclosure1361;
Object smallint1907;
Object constant2388;
Object smallint1908;
Object constant2389;
Object send4201;
Object method1371;
Object symbol33;
Object methodclosure1362;
Object localvariable634;
Object array600;
Object smallint1909;
Object constant2390;
Object assign363;
Object method1372;
Object symbol22;
Object methodclosure1363;
Object method1373;
Object symbol14;
Object methodclosure1364;
Object smallint1910;
Object constant2391;
Object smallint1911;
Object constant2392;
Object send4202;
Object method1374;
Object symbol34;
Object methodclosure1365;
Object send4203;
Object method1375;
Object symbol23;
Object methodclosure1366;
Object character130;
Object constant2393;
Object method1376;
Object symbol15;
Object methodclosure1367;
Object method1377;
Object symbol35;
Object methodclosure1368;
Object string309;
Object constant2394;
Object string310;
Object constant2395;
Object send4204;
Object method1378;
Object symbol24;
Object methodclosure1369;
Object method1379;
Object symbol16;
Object methodclosure1370;
Object localvariable635;
Object localvariable636;
Object localvariable637;
Object array601;
Object send4205;
Object send4206;
Object method1380;
Object symbol36;
Object methodclosure1371;
Object localvariable638;
Object array602;
Object smallint1912;
Object constant2396;
Object send4207;
Object method1381;
Object symbol25;
Object methodclosure1372;
Object smallint1913;
Object constant2397;
Object smallint1914;
Object constant2398;
Object send4208;
Object smallint1915;
Object constant2399;
Object send4209;
Object smallint1916;
Object constant2400;
Object send4210;
Object method1382;
Object symbol17;
Object methodclosure1373;
Object smallint1917;
Object constant2401;
Object method1383;
Object symbol37;
Object methodclosure1374;
Object string311;
Object constant2402;
Object method1384;
Object symbol26;
Object methodclosure1375;
Object character131;
Object constant2403;
Object character132;
Object constant2404;
Object send4211;
Object method1385;
Object symbol18;
Object methodclosure1376;
Object smallint1918;
Object constant2405;
Object smallint1919;
Object constant2406;
Object send4212;
Object method1386;
Object symbol30;
Object methodclosure1377;
Object constant2407;
Object method1387;
Object symbol38;
Object methodclosure1378;
Object classreference180;


void create_ast() {
symbol11 = (Object)new_Type_Symbol_cached(L"ProtoObject");
class176 = (Object)new_Class(Nil, empty_object_layout);
((Type_Class)class176)->name = (Type_Symbol)symbol11;
classreference176 = (Object)new_Organization_ClassReference((Type_Class)class176);
symbol9 = (Object)new_Type_Symbol_cached(L"Object");
class177 = (Object)new_Class(class176, empty_object_layout);
((Type_Class)class177)->name = (Type_Symbol)symbol9;
classreference177 = (Object)new_Organization_ClassReference((Type_Class)class177);
symbol20 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout36 = (Object)create_type_with_vars(Type_ArrayLayout, 3);
instancevariable211 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout36)->values[0] = instancevariable211;instancevariable212 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout36)->values[1] = instancevariable212;instancevariable213 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout36)->values[2] = instancevariable213;class178 =
(Object)new_Class(Type_Object_Class, arraylayout36);
((Type_Class)class178)->name = (Type_Symbol)symbol20;

// StandardVariableTestClass>>c
method1349 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable213);
symbol45 = (Object)new_Type_Symbol_cached(L"c");
methodclosure1340 = (Object)new_Runtime_MethodClosure(method1349);
store_method((Type_Class)class178, (Type_Symbol)symbol45, (Runtime_MethodClosure)methodclosure1340);

// StandardVariableTestClass>>c:
localvariable621 = (Object)new_AST_Variable_named(L"anObject");
array586 = (Object)new_Type_Array_with(1, localvariable621);
assign354 = (Object)new_AST_Assign((Object)instancevariable213, (Object)localvariable621);
method1350 = (Object)new_AST_Method_with((Type_Array)array586, (Type_Array)empty_Type_Array, 2, assign354, Self);
symbol41 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure1341 = (Object)new_Runtime_MethodClosure(method1350);
store_method((Type_Class)class178, (Type_Symbol)symbol41, (Runtime_MethodClosure)methodclosure1341);

// StandardVariableTestClass>>a:
localvariable622 = (Object)new_AST_Variable_named(L"anObject");
array587 = (Object)new_Type_Array_with(1, localvariable622);
assign355 = (Object)new_AST_Assign((Object)instancevariable211, (Object)localvariable622);
method1351 = (Object)new_AST_Method_with((Type_Array)array587, (Type_Array)empty_Type_Array, 2, assign355, Self);
symbol43 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure1342 = (Object)new_Runtime_MethodClosure(method1351);
store_method((Type_Class)class178, (Type_Symbol)symbol43, (Runtime_MethodClosure)methodclosure1342);

// StandardVariableTestClass>>b
method1352 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable212);
symbol44 = (Object)new_Type_Symbol_cached(L"b");
methodclosure1343 = (Object)new_Runtime_MethodClosure(method1352);
store_method((Type_Class)class178, (Type_Symbol)symbol44, (Runtime_MethodClosure)methodclosure1343);

// StandardVariableTestClass>>b:
localvariable623 = (Object)new_AST_Variable_named(L"anObject");
array588 = (Object)new_Type_Array_with(1, localvariable623);
assign356 = (Object)new_AST_Assign((Object)instancevariable212, (Object)localvariable623);
method1353 = (Object)new_AST_Method_with((Type_Array)array588, (Type_Array)empty_Type_Array, 2, assign356, Self);
symbol42 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure1344 = (Object)new_Runtime_MethodClosure(method1353);
store_method((Type_Class)class178, (Type_Symbol)symbol42, (Runtime_MethodClosure)methodclosure1344);

// StandardVariableTestClass>>a
method1354 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable211);
symbol46 = (Object)new_Type_Symbol_cached(L"a");
methodclosure1345 = (Object)new_Runtime_MethodClosure(method1354);
store_method((Type_Class)class178, (Type_Symbol)symbol46, (Runtime_MethodClosure)methodclosure1345);
classreference178 = (Object)new_Organization_ClassReference((Type_Class)class178);
symbol27 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout87 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable214 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout87)->values[0] = instancevariable214;
instancevariable215 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout87)->values[1] = instancevariable215;
instancevariable216 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout87)->values[2] = instancevariable216;
class179 = (Object)new_Class(Type_Object_Class, objectlayout87);
((Type_Class)class179)->name = (Type_Symbol)symbol27;

// StandardTestClass>>c
method1355 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable216);
methodclosure1346 = (Object)new_Runtime_MethodClosure(method1355);
store_method((Type_Class)class179, (Type_Symbol)symbol45, (Runtime_MethodClosure)methodclosure1346);

// StandardTestClass>>c:
localvariable624 = (Object)new_AST_Variable_named(L"anObject");
array589 = (Object)new_Type_Array_with(1, localvariable624);
assign357 = (Object)new_AST_Assign((Object)instancevariable216, (Object)localvariable624);
method1356 = (Object)new_AST_Method_with((Type_Array)array589, (Type_Array)empty_Type_Array, 2, assign357, Self);
methodclosure1347 = (Object)new_Runtime_MethodClosure(method1356);
store_method((Type_Class)class179, (Type_Symbol)symbol41, (Runtime_MethodClosure)methodclosure1347);

// StandardTestClass>>a:
localvariable625 = (Object)new_AST_Variable_named(L"anObject");
array590 = (Object)new_Type_Array_with(1, localvariable625);
assign358 = (Object)new_AST_Assign((Object)instancevariable214, (Object)localvariable625);
method1357 = (Object)new_AST_Method_with((Type_Array)array590, (Type_Array)empty_Type_Array, 2, assign358, Self);
methodclosure1348 = (Object)new_Runtime_MethodClosure(method1357);
store_method((Type_Class)class179, (Type_Symbol)symbol43, (Runtime_MethodClosure)methodclosure1348);

// StandardTestClass>>b
method1358 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable215);
methodclosure1349 = (Object)new_Runtime_MethodClosure(method1358);
store_method((Type_Class)class179, (Type_Symbol)symbol44, (Runtime_MethodClosure)methodclosure1349);

// StandardTestClass>>b:
localvariable626 = (Object)new_AST_Variable_named(L"anObject");
array591 = (Object)new_Type_Array_with(1, localvariable626);
assign359 = (Object)new_AST_Assign((Object)instancevariable215, (Object)localvariable626);
method1359 = (Object)new_AST_Method_with((Type_Array)array591, (Type_Array)empty_Type_Array, 2, assign359, Self);
methodclosure1350 = (Object)new_Runtime_MethodClosure(method1359);
store_method((Type_Class)class179, (Type_Symbol)symbol42, (Runtime_MethodClosure)methodclosure1350);

// StandardTestClass>>a
method1360 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable214);
methodclosure1351 = (Object)new_Runtime_MethodClosure(method1360);
store_method((Type_Class)class179, (Type_Symbol)symbol46, (Runtime_MethodClosure)methodclosure1351);
classreference179 = (Object)new_Organization_ClassReference((Type_Class)class179);
symbol5 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class180 = (Object)new_Class(Type_Object_Class, empty_object_layout);
((Type_Class)class180)->name = (Type_Symbol)symbol5;

// BridgeTest>>tmNumberEquals
smallint1869 = (Object)new_Type_SmallInt(1);
constant2348 = (Object)new_AST_Constant((Object)smallint1869);
smallint1870 = (Object)new_Type_SmallInt(1);
constant2349 = (Object)new_AST_Constant((Object)smallint1870);
send4121 = (Object)new_AST_Send((Object)constant2348, (Object)SMB__equal, 1, constant2349);
method1361 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4121);
symbol19 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure1352 = (Object)new_Runtime_MethodClosure(method1361);
store_method((Type_Class)class180, (Type_Symbol)symbol19, (Runtime_MethodClosure)methodclosure1352);

// BridgeTest>>tmNumberMult
smallint1871 = (Object)new_Type_SmallInt(2);
constant2350 = (Object)new_AST_Constant((Object)smallint1871);
smallint1872 = (Object)new_Type_SmallInt(3);
constant2351 = (Object)new_AST_Constant((Object)smallint1872);
send4122 = (Object)new_AST_Send((Object)constant2350, (Object)SMB__times, 1, constant2351);
method1362 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4122);
symbol31 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure1353 = (Object)new_Runtime_MethodClosure(method1362);
store_method((Type_Class)class180, (Type_Symbol)symbol31, (Runtime_MethodClosure)methodclosure1353);

// BridgeTest>>tmClassReferenceReturn
send4123 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
method1363 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4123);
symbol39 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure1354 = (Object)new_Runtime_MethodClosure(method1363);
store_method((Type_Class)class180, (Type_Symbol)symbol39, (Runtime_MethodClosure)methodclosure1354);

// BridgeTest>>tmSimpleInstanceCreation
localvariable627 = (Object)new_AST_Variable_named(L"instance");
array592 = (Object)new_Type_Array_with(1, localvariable627);
send4124 = (Object)new_AST_Send((Object)classreference179, (Object)SMB_basicNew, 0);
assign360 = (Object)new_AST_Assign((Object)localvariable627, (Object)send4124);
localvariable628 = (Object)new_AST_Variable_named(L"receiver");
array593 = (Object)new_Type_Array_with(1, localvariable628);
smallint1873 = (Object)new_Type_SmallInt(1);
constant2352 = (Object)new_AST_Constant((Object)smallint1873);
send4125 = (Object)new_AST_Send((Object)localvariable628, (Object)symbol43, 1, constant2352);
smallint1874 = (Object)new_Type_SmallInt(2);
constant2353 = (Object)new_AST_Constant((Object)smallint1874);
send4126 = (Object)new_AST_Send((Object)localvariable628, (Object)symbol42, 1, constant2353);
smallint1875 = (Object)new_Type_SmallInt(3);
constant2354 = (Object)new_AST_Constant((Object)smallint1875);
send4127 = (Object)new_AST_Send((Object)localvariable628, (Object)symbol41, 1, constant2354);
block247 = (Object)new_AST_Block_with((Type_Array)array593, (Type_Array)empty_Type_Array, 1, 3, send4125, send4126, send4127);
send4128 = (Object)new_AST_Send((Object)block247, (Object)SMB_value_, 1, localvariable627);
symbol49 = (Object)new_Type_Symbol_cached(L"assert:");
send4129 = (Object)new_AST_Send((Object)localvariable627, (Object)symbol46, 0);
smallint1876 = (Object)new_Type_SmallInt(1);
constant2355 = (Object)new_AST_Constant((Object)smallint1876);
send4130 = (Object)new_AST_Send((Object)send4129, (Object)SMB__equal, 1, constant2355);
send4131 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4130);
send4132 = (Object)new_AST_Send((Object)localvariable627, (Object)symbol44, 0);
smallint1877 = (Object)new_Type_SmallInt(2);
constant2356 = (Object)new_AST_Constant((Object)smallint1877);
send4133 = (Object)new_AST_Send((Object)send4132, (Object)SMB__equal, 1, constant2356);
send4134 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4133);
send4135 = (Object)new_AST_Send((Object)localvariable627, (Object)symbol45, 0);
smallint1878 = (Object)new_Type_SmallInt(3);
constant2357 = (Object)new_AST_Constant((Object)smallint1878);
send4136 = (Object)new_AST_Send((Object)send4135, (Object)SMB__equal, 1, constant2357);
send4137 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4136);
send4138 = (Object)new_AST_Send((Object)localvariable627, (Object)symbol46, 0);
send4139 = (Object)new_AST_Send((Object)localvariable627, (Object)symbol44, 0);
send4140 = (Object)new_AST_Send((Object)send4138, (Object)SMB__plus, 1, send4139);
send4141 = (Object)new_AST_Send((Object)localvariable627, (Object)symbol45, 0);
send4142 = (Object)new_AST_Send((Object)send4140, (Object)SMB__plus, 1, send4141);
method1364 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array592, 6, assign360, send4128, send4131, send4134, send4137, send4142);
symbol28 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure1355 = (Object)new_Runtime_MethodClosure(method1364);
store_method((Type_Class)class180, (Type_Symbol)symbol28, (Runtime_MethodClosure)methodclosure1355);

// BridgeTest>>tmNumber
smallint1879 = (Object)new_Type_SmallInt(1);
constant2358 = (Object)new_AST_Constant((Object)smallint1879);
method1365 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2358);
symbol40 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure1356 = (Object)new_Runtime_MethodClosure(method1365);
store_method((Type_Class)class180, (Type_Symbol)symbol40, (Runtime_MethodClosure)methodclosure1356);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable629 = (Object)new_AST_Variable_named(L"instance");
array594 = (Object)new_Type_Array_with(1, localvariable629);
smallint1880 = (Object)new_Type_SmallInt(100);
constant2359 = (Object)new_AST_Constant((Object)smallint1880);
send4143 = (Object)new_AST_Send((Object)classreference178, (Object)SMB_basicNew_, 1, constant2359);
assign361 = (Object)new_AST_Assign((Object)localvariable629, (Object)send4143);
smallint1881 = (Object)new_Type_SmallInt(1);
constant2360 = (Object)new_AST_Constant((Object)smallint1881);
smallint1882 = (Object)new_Type_SmallInt(1);
constant2361 = (Object)new_AST_Constant((Object)smallint1882);
send4144 = (Object)new_AST_Send((Object)localvariable629, (Object)SMB_at_put_, 2, constant2360, constant2361);
smallint1883 = (Object)new_Type_SmallInt(99);
constant2362 = (Object)new_AST_Constant((Object)smallint1883);
smallint1884 = (Object)new_Type_SmallInt(100);
constant2363 = (Object)new_AST_Constant((Object)smallint1884);
send4145 = (Object)new_AST_Send((Object)localvariable629, (Object)SMB_at_put_, 2, constant2362, constant2363);
smallint1885 = (Object)new_Type_SmallInt(1);
constant2364 = (Object)new_AST_Constant((Object)smallint1885);
send4146 = (Object)new_AST_Send((Object)localvariable629, (Object)SMB_at_, 1, constant2364);
smallint1886 = (Object)new_Type_SmallInt(1);
constant2365 = (Object)new_AST_Constant((Object)smallint1886);
send4147 = (Object)new_AST_Send((Object)send4146, (Object)SMB__equal, 1, constant2365);
send4148 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4147);
smallint1887 = (Object)new_Type_SmallInt(99);
constant2366 = (Object)new_AST_Constant((Object)smallint1887);
send4149 = (Object)new_AST_Send((Object)localvariable629, (Object)SMB_at_, 1, constant2366);
smallint1888 = (Object)new_Type_SmallInt(100);
constant2367 = (Object)new_AST_Constant((Object)smallint1888);
send4150 = (Object)new_AST_Send((Object)send4149, (Object)SMB__equal, 1, constant2367);
send4151 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4150);
localvariable630 = (Object)new_AST_Variable_named(L"receiver");
array595 = (Object)new_Type_Array_with(1, localvariable630);
smallint1889 = (Object)new_Type_SmallInt(1);
constant2368 = (Object)new_AST_Constant((Object)smallint1889);
send4152 = (Object)new_AST_Send((Object)localvariable630, (Object)symbol43, 1, constant2368);
smallint1890 = (Object)new_Type_SmallInt(2);
constant2369 = (Object)new_AST_Constant((Object)smallint1890);
send4153 = (Object)new_AST_Send((Object)localvariable630, (Object)symbol42, 1, constant2369);
smallint1891 = (Object)new_Type_SmallInt(3);
constant2370 = (Object)new_AST_Constant((Object)smallint1891);
send4154 = (Object)new_AST_Send((Object)localvariable630, (Object)symbol41, 1, constant2370);
block248 = (Object)new_AST_Block_with((Type_Array)array595, (Type_Array)empty_Type_Array, 1, 3, send4152, send4153, send4154);
send4155 = (Object)new_AST_Send((Object)block248, (Object)SMB_value_, 1, localvariable629);
send4156 = (Object)new_AST_Send((Object)localvariable629, (Object)symbol46, 0);
smallint1892 = (Object)new_Type_SmallInt(1);
constant2371 = (Object)new_AST_Constant((Object)smallint1892);
send4157 = (Object)new_AST_Send((Object)send4156, (Object)SMB__equal, 1, constant2371);
send4158 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4157);
send4159 = (Object)new_AST_Send((Object)localvariable629, (Object)symbol44, 0);
smallint1893 = (Object)new_Type_SmallInt(2);
constant2372 = (Object)new_AST_Constant((Object)smallint1893);
send4160 = (Object)new_AST_Send((Object)send4159, (Object)SMB__equal, 1, constant2372);
send4161 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4160);
send4162 = (Object)new_AST_Send((Object)localvariable629, (Object)symbol45, 0);
smallint1894 = (Object)new_Type_SmallInt(3);
constant2373 = (Object)new_AST_Constant((Object)smallint1894);
send4163 = (Object)new_AST_Send((Object)send4162, (Object)SMB__equal, 1, constant2373);
send4164 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4163);
send4165 = (Object)new_AST_Send((Object)localvariable629, (Object)symbol46, 0);
send4166 = (Object)new_AST_Send((Object)localvariable629, (Object)symbol44, 0);
send4167 = (Object)new_AST_Send((Object)localvariable629, (Object)symbol45, 0);
smallint1895 = (Object)new_Type_SmallInt(1);
constant2374 = (Object)new_AST_Constant((Object)smallint1895);
send4168 = (Object)new_AST_Send((Object)localvariable629, (Object)SMB_at_, 1, constant2374);
send4169 = (Object)new_AST_Send((Object)send4167, (Object)SMB__plus, 1, send4168);
send4170 = (Object)new_AST_Send((Object)send4166, (Object)SMB__plus, 1, send4169);
send4171 = (Object)new_AST_Send((Object)send4165, (Object)SMB__plus, 1, send4170);
smallint1896 = (Object)new_Type_SmallInt(99);
constant2375 = (Object)new_AST_Constant((Object)smallint1896);
send4172 = (Object)new_AST_Send((Object)localvariable629, (Object)SMB_at_, 1, constant2375);
send4173 = (Object)new_AST_Send((Object)send4171, (Object)SMB__plus, 1, send4172);
method1366 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array594, 10, assign361, send4144, send4145, send4148, send4151, send4155, send4158, send4161, send4164, send4173);
symbol32 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure1357 = (Object)new_Runtime_MethodClosure(method1366);
store_method((Type_Class)class180, (Type_Symbol)symbol32, (Runtime_MethodClosure)methodclosure1357);

// BridgeTest>>tmVariableInstanceCreation
localvariable631 = (Object)new_AST_Variable_named(L"instance");
array596 = (Object)new_Type_Array_with(1, localvariable631);
send4174 = (Object)new_AST_Send((Object)classreference178, (Object)SMB_basicNew, 0);
assign362 = (Object)new_AST_Assign((Object)localvariable631, (Object)send4174);
localvariable632 = (Object)new_AST_Variable_named(L"receiver");
array597 = (Object)new_Type_Array_with(1, localvariable632);
smallint1897 = (Object)new_Type_SmallInt(1);
constant2376 = (Object)new_AST_Constant((Object)smallint1897);
send4175 = (Object)new_AST_Send((Object)localvariable632, (Object)symbol43, 1, constant2376);
smallint1898 = (Object)new_Type_SmallInt(2);
constant2377 = (Object)new_AST_Constant((Object)smallint1898);
send4176 = (Object)new_AST_Send((Object)localvariable632, (Object)symbol42, 1, constant2377);
smallint1899 = (Object)new_Type_SmallInt(3);
constant2378 = (Object)new_AST_Constant((Object)smallint1899);
send4177 = (Object)new_AST_Send((Object)localvariable632, (Object)symbol41, 1, constant2378);
block249 = (Object)new_AST_Block_with((Type_Array)array597, (Type_Array)empty_Type_Array, 1, 3, send4175, send4176, send4177);
send4178 = (Object)new_AST_Send((Object)block249, (Object)SMB_value_, 1, localvariable631);
send4179 = (Object)new_AST_Send((Object)localvariable631, (Object)symbol46, 0);
smallint1900 = (Object)new_Type_SmallInt(1);
constant2379 = (Object)new_AST_Constant((Object)smallint1900);
send4180 = (Object)new_AST_Send((Object)send4179, (Object)SMB__equal, 1, constant2379);
send4181 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4180);
send4182 = (Object)new_AST_Send((Object)localvariable631, (Object)symbol44, 0);
smallint1901 = (Object)new_Type_SmallInt(2);
constant2380 = (Object)new_AST_Constant((Object)smallint1901);
send4183 = (Object)new_AST_Send((Object)send4182, (Object)SMB__equal, 1, constant2380);
send4184 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4183);
send4185 = (Object)new_AST_Send((Object)localvariable631, (Object)symbol45, 0);
smallint1902 = (Object)new_Type_SmallInt(3);
constant2381 = (Object)new_AST_Constant((Object)smallint1902);
send4186 = (Object)new_AST_Send((Object)send4185, (Object)SMB__equal, 1, constant2381);
send4187 = (Object)new_AST_Send((Object)Self, (Object)symbol49, 1, send4186);
send4188 = (Object)new_AST_Send((Object)localvariable631, (Object)symbol46, 0);
send4189 = (Object)new_AST_Send((Object)localvariable631, (Object)symbol44, 0);
send4190 = (Object)new_AST_Send((Object)send4188, (Object)SMB__plus, 1, send4189);
send4191 = (Object)new_AST_Send((Object)localvariable631, (Object)symbol45, 0);
send4192 = (Object)new_AST_Send((Object)send4190, (Object)SMB__plus, 1, send4191);
method1367 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array596, 6, assign362, send4178, send4181, send4184, send4187, send4192);
symbol21 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure1358 = (Object)new_Runtime_MethodClosure(method1367);
store_method((Type_Class)class180, (Type_Symbol)symbol21, (Runtime_MethodClosure)methodclosure1358);

// BridgeTest>>tmSymbolEquals
symbol51 = (Object)new_Type_Symbol_cached(L"Symbol");
constant2382 = (Object)new_AST_Constant((Object)symbol51);
constant2383 = (Object)new_AST_Constant((Object)symbol51);
send4193 = (Object)new_AST_Send((Object)constant2382, (Object)SMB__equal, 1, constant2383);
method1368 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4193);
symbol13 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure1359 = (Object)new_Runtime_MethodClosure(method1368);
store_method((Type_Class)class180, (Type_Symbol)symbol13, (Runtime_MethodClosure)methodclosure1359);

// BridgeTest>>tmExtendedReturn
variable39 = (Object)new_AST_Variable_named(L"return");
array598 = (Object)new_Type_Array_with(1, variable39);
smallint1903 = (Object)new_Type_SmallInt(1);
constant2384 = (Object)new_AST_Constant((Object)smallint1903);
smallint1904 = (Object)new_Type_SmallInt(2);
constant2385 = (Object)new_AST_Constant((Object)smallint1904);
send4194 = (Object)new_AST_Send((Object)constant2384, (Object)SMB__gt, 1, constant2385);
smallint1905 = (Object)new_Type_SmallInt(1);
constant2386 = (Object)new_AST_Constant((Object)smallint1905);
send4195 = (Object)new_AST_Send((Object)variable39, (Object)SMB_escape_, 1, constant2386);
block250 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4195);
smallint1906 = (Object)new_Type_SmallInt(2);
constant2387 = (Object)new_AST_Constant((Object)smallint1906);
send4196 = (Object)new_AST_Send((Object)variable39, (Object)SMB_escape_, 1, constant2387);
block251 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4196);
send4197 = (Object)new_AST_Send((Object)send4194, (Object)SMB_ifTrue_ifFalse_, 2, block250, block251);
block252 = (Object)new_AST_Block_with((Type_Array)array598, (Type_Array)empty_Type_Array, 1, 2, send4197, Self);
send4198 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block252);
method1369 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4198);
symbol29 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure1360 = (Object)new_Runtime_MethodClosure(method1369);
store_method((Type_Class)class180, (Type_Symbol)symbol29, (Runtime_MethodClosure)methodclosure1360);

// BridgeTest>>assert:
localvariable633 = (Object)new_AST_Variable_named(L"bool");
array599 = (Object)new_Type_Array_with(1, localvariable633);
symbol66 = (Object)new_Type_Symbol_cached(L"fail");
send4199 = (Object)new_AST_Send((Object)Self, (Object)symbol66, 0);
block253 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send4199);
send4200 = (Object)new_AST_Send((Object)localvariable633, (Object)SMB_ifFalse_, 1, block253);
method1370 = (Object)new_AST_Method_with((Type_Array)array599, (Type_Array)empty_Type_Array, 1, send4200);
methodclosure1361 = (Object)new_Runtime_MethodClosure(method1370);
store_method((Type_Class)class180, (Type_Symbol)symbol49, (Runtime_MethodClosure)methodclosure1361);

// BridgeTest>>tmNumberAdd
smallint1907 = (Object)new_Type_SmallInt(1);
constant2388 = (Object)new_AST_Constant((Object)smallint1907);
smallint1908 = (Object)new_Type_SmallInt(1);
constant2389 = (Object)new_AST_Constant((Object)smallint1908);
send4201 = (Object)new_AST_Send((Object)constant2388, (Object)SMB__plus, 1, constant2389);
method1371 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4201);
symbol33 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure1362 = (Object)new_Runtime_MethodClosure(method1371);
store_method((Type_Class)class180, (Type_Symbol)symbol33, (Runtime_MethodClosure)methodclosure1362);

// BridgeTest>>tmLocalVariable
localvariable634 = (Object)new_AST_Variable_named(L"a");
array600 = (Object)new_Type_Array_with(1, localvariable634);
smallint1909 = (Object)new_Type_SmallInt(1);
constant2390 = (Object)new_AST_Constant((Object)smallint1909);
assign363 = (Object)new_AST_Assign((Object)localvariable634, (Object)constant2390);
method1372 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array600, 2, assign363, localvariable634);
symbol22 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure1363 = (Object)new_Runtime_MethodClosure(method1372);
store_method((Type_Class)class180, (Type_Symbol)symbol22, (Runtime_MethodClosure)methodclosure1363);

// BridgeTest>>tmBooleanFalse
method1373 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol14 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure1364 = (Object)new_Runtime_MethodClosure(method1373);
store_method((Type_Class)class180, (Type_Symbol)symbol14, (Runtime_MethodClosure)methodclosure1364);

// BridgeTest>>tmNumberSubtract
smallint1910 = (Object)new_Type_SmallInt(2);
constant2391 = (Object)new_AST_Constant((Object)smallint1910);
smallint1911 = (Object)new_Type_SmallInt(1);
constant2392 = (Object)new_AST_Constant((Object)smallint1911);
send4202 = (Object)new_AST_Send((Object)constant2391, (Object)SMB__minus, 1, constant2392);
method1374 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4202);
symbol34 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure1365 = (Object)new_Runtime_MethodClosure(method1374);
store_method((Type_Class)class180, (Type_Symbol)symbol34, (Runtime_MethodClosure)methodclosure1365);

// BridgeTest>>tmBooleanEquals
send4203 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, True_Const);
method1375 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4203);
symbol23 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure1366 = (Object)new_Runtime_MethodClosure(method1375);
store_method((Type_Class)class180, (Type_Symbol)symbol23, (Runtime_MethodClosure)methodclosure1366);

// BridgeTest>>tmCharacter
character130 = (Object)new_Type_Character(L'C');
constant2393 = (Object)new_AST_Constant((Object)character130);
method1376 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2393);
symbol15 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure1367 = (Object)new_Runtime_MethodClosure(method1376);
store_method((Type_Class)class180, (Type_Symbol)symbol15, (Runtime_MethodClosure)methodclosure1367);

// BridgeTest>>tmBooleanTrue
method1377 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol35 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure1368 = (Object)new_Runtime_MethodClosure(method1377);
store_method((Type_Class)class180, (Type_Symbol)symbol35, (Runtime_MethodClosure)methodclosure1368);

// BridgeTest>>tmStringEquals
string309 = (Object)new_Type_String(L"String");
constant2394 = (Object)new_AST_Constant((Object)string309);
string310 = (Object)new_Type_String(L"String");
constant2395 = (Object)new_AST_Constant((Object)string310);
send4204 = (Object)new_AST_Send((Object)constant2394, (Object)SMB__equal, 1, constant2395);
method1378 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4204);
symbol24 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure1369 = (Object)new_Runtime_MethodClosure(method1378);
store_method((Type_Class)class180, (Type_Symbol)symbol24, (Runtime_MethodClosure)methodclosure1369);

// BridgeTest>>tmFibonacci
method1379 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol16 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure1370 = (Object)new_Runtime_MethodClosure(method1379);
store_method((Type_Class)class180, (Type_Symbol)symbol16, (Runtime_MethodClosure)methodclosure1370);

// BridgeTest>>tmMethodArguments:with:with:
localvariable635 = (Object)new_AST_Variable_named(L"arg1");
localvariable636 = (Object)new_AST_Variable_named(L"arg2");
localvariable637 = (Object)new_AST_Variable_named(L"arg3");
array601 = (Object)new_Type_Array_with(3, localvariable635, localvariable636, localvariable637);
send4205 = (Object)new_AST_Send((Object)localvariable635, (Object)SMB__concat, 1, localvariable636);
send4206 = (Object)new_AST_Send((Object)send4205, (Object)SMB__concat, 1, localvariable637);
method1380 = (Object)new_AST_Method_with((Type_Array)array601, (Type_Array)empty_Type_Array, 1, send4206);
symbol36 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure1371 = (Object)new_Runtime_MethodClosure(method1380);
store_method((Type_Class)class180, (Type_Symbol)symbol36, (Runtime_MethodClosure)methodclosure1371);

// BridgeTest>>tmMethodArgument:
localvariable638 = (Object)new_AST_Variable_named(L"arg");
array602 = (Object)new_Type_Array_with(1, localvariable638);
smallint1912 = (Object)new_Type_SmallInt(1);
constant2396 = (Object)new_AST_Constant((Object)smallint1912);
send4207 = (Object)new_AST_Send((Object)localvariable638, (Object)SMB__plus, 1, constant2396);
method1381 = (Object)new_AST_Method_with((Type_Array)array602, (Type_Array)empty_Type_Array, 1, send4207);
symbol25 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure1372 = (Object)new_Runtime_MethodClosure(method1381);
store_method((Type_Class)class180, (Type_Symbol)symbol25, (Runtime_MethodClosure)methodclosure1372);

// BridgeTest>>tmSimpleBasicArithmetik
smallint1913 = (Object)new_Type_SmallInt(1);
constant2397 = (Object)new_AST_Constant((Object)smallint1913);
smallint1914 = (Object)new_Type_SmallInt(2);
constant2398 = (Object)new_AST_Constant((Object)smallint1914);
send4208 = (Object)new_AST_Send((Object)constant2397, (Object)SMB__plus, 1, constant2398);
smallint1915 = (Object)new_Type_SmallInt(2);
constant2399 = (Object)new_AST_Constant((Object)smallint1915);
send4209 = (Object)new_AST_Send((Object)send4208, (Object)SMB__plus, 1, constant2399);
smallint1916 = (Object)new_Type_SmallInt(5);
constant2400 = (Object)new_AST_Constant((Object)smallint1916);
send4210 = (Object)new_AST_Send((Object)send4209, (Object)SMB__times, 1, constant2400);
method1382 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4210);
symbol17 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure1373 = (Object)new_Runtime_MethodClosure(method1382);
store_method((Type_Class)class180, (Type_Symbol)symbol17, (Runtime_MethodClosure)methodclosure1373);

// BridgeTest>>tmSimpleReturn
smallint1917 = (Object)new_Type_SmallInt(1);
constant2401 = (Object)new_AST_Constant((Object)smallint1917);
method1383 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2401);
symbol37 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure1374 = (Object)new_Runtime_MethodClosure(method1383);
store_method((Type_Class)class180, (Type_Symbol)symbol37, (Runtime_MethodClosure)methodclosure1374);

// BridgeTest>>tmString
string311 = (Object)new_Type_String(L"String");
constant2402 = (Object)new_AST_Constant((Object)string311);
method1384 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2402);
symbol26 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure1375 = (Object)new_Runtime_MethodClosure(method1384);
store_method((Type_Class)class180, (Type_Symbol)symbol26, (Runtime_MethodClosure)methodclosure1375);

// BridgeTest>>tmCharacterEquals
character131 = (Object)new_Type_Character(L'C');
constant2403 = (Object)new_AST_Constant((Object)character131);
character132 = (Object)new_Type_Character(L'C');
constant2404 = (Object)new_AST_Constant((Object)character132);
send4211 = (Object)new_AST_Send((Object)constant2403, (Object)SMB__equal, 1, constant2404);
method1385 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4211);
symbol18 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure1376 = (Object)new_Runtime_MethodClosure(method1385);
store_method((Type_Class)class180, (Type_Symbol)symbol18, (Runtime_MethodClosure)methodclosure1376);

// BridgeTest>>tmNumberDiv
smallint1918 = (Object)new_Type_SmallInt(4);
constant2405 = (Object)new_AST_Constant((Object)smallint1918);
smallint1919 = (Object)new_Type_SmallInt(2);
constant2406 = (Object)new_AST_Constant((Object)smallint1919);
send4212 = (Object)new_AST_Send((Object)constant2405, (Object)SMB__divide, 1, constant2406);
method1386 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4212);
symbol30 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure1377 = (Object)new_Runtime_MethodClosure(method1386);
store_method((Type_Class)class180, (Type_Symbol)symbol30, (Runtime_MethodClosure)methodclosure1377);

// BridgeTest>>tmSymbol
constant2407 = (Object)new_AST_Constant((Object)symbol51);
method1387 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2407);
symbol38 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure1378 = (Object)new_Runtime_MethodClosure(method1387);
store_method((Type_Class)class180, (Type_Symbol)symbol38, (Runtime_MethodClosure)methodclosure1378);
classreference180 = (Object)new_Organization_ClassReference((Type_Class)class180);
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object symbol23 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
Object send4213 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol23, 0);
Object result = (Object)Eval((Object)send4213);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object symbol14 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
Object send4214 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol14, 0);
Object result = (Object)Eval((Object)send4214);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object symbol35 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
Object send4215 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol35, 0);
Object result = (Object)Eval((Object)send4215);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object symbol15 = (Object)new_Type_Symbol_cached(L"tmCharacter");
Object send4216 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol15, 0);
Object result = (Object)Eval((Object)send4216);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object symbol18 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
Object send4217 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol18, 0);
Object result = (Object)Eval((Object)send4217);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object symbol39 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
Object send4218 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol39, 0);
Object result = (Object)Eval((Object)send4218);
ASSERT_EMPTY_STACK
Object symbol52 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol52);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object symbol29 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
Object send4219 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol29, 0);
Object result = (Object)Eval((Object)send4219);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object symbol22 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
Object send4220 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol22, 0);
Object result = (Object)Eval((Object)send4220);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object symbol25 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
Object smallint1920 = (Object)new_Type_SmallInt(1);
Object constant2408 = (Object)new_AST_Constant((Object)smallint1920);
Object send4221 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol25, 1, constant2408);
Object result = (Object)Eval((Object)send4221);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object symbol36 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
Object string312 = (Object)new_Type_String(L"asdf");
Object constant2409 = (Object)new_AST_Constant((Object)string312);
Object string313 = (Object)new_Type_String(L"asdf");
Object constant2410 = (Object)new_AST_Constant((Object)string313);
Object string314 = (Object)new_Type_String(L"df");
Object constant2411 = (Object)new_AST_Constant((Object)string314);
Object send4222 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol36, 3, constant2409, constant2410, constant2411);
Object result = (Object)Eval((Object)send4222);
ASSERT_EMPTY_STACK
Object string315 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string315);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object symbol40 = (Object)new_Type_Symbol_cached(L"tmNumber");
Object send4223 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol40, 0);
Object result = (Object)Eval((Object)send4223);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object symbol33 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
Object send4224 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol33, 0);
Object result = (Object)Eval((Object)send4224);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object symbol30 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
Object send4225 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol30, 0);
Object result = (Object)Eval((Object)send4225);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object symbol19 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
Object send4226 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol19, 0);
Object result = (Object)Eval((Object)send4226);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object symbol31 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
Object send4227 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol31, 0);
Object result = (Object)Eval((Object)send4227);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object symbol34 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
Object send4228 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol34, 0);
Object result = (Object)Eval((Object)send4228);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ (1 + 2) + 2 * 5
*/
Object symbol17 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
Object send4229 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol17, 0);
Object result = (Object)Eval((Object)send4229);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object symbol37 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
Object send4230 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol37, 0);
Object result = (Object)Eval((Object)send4230);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
Object symbol26 = (Object)new_Type_Symbol_cached(L"tmString");
Object send4231 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol26, 0);
Object result = (Object)Eval((Object)send4231);
ASSERT_EMPTY_STACK
Object string316 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string316);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object symbol24 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
Object send4232 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol24, 0);
Object result = (Object)Eval((Object)send4232);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object symbol38 = (Object)new_Type_Symbol_cached(L"tmSymbol");
Object send4233 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol38, 0);
Object result = (Object)Eval((Object)send4233);
ASSERT_EMPTY_STACK
Object symbol51 = (Object)new_Type_Symbol_cached(L"Symbol");
result = Eval_Send1(result, SMB__equal, symbol51);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object symbol13 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
Object send4234 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol13, 0);
Object result = (Object)Eval((Object)send4234);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object symbol49 = (Object)new_Type_Symbol_cached(L"assert:");
Object send4235 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol49, 1, True_Const);
Object result = (Object)Eval((Object)send4235);
ASSERT_EMPTY_STACK
assert0(result == Nil);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object symbol16 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
Object send4236 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol16, 0);
Object result = (Object)Eval((Object)send4236);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b  + instance c
	
*/
Object symbol28 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
Object send4237 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol28, 0);
Object result = (Object)Eval((Object)send4237);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b  + instance c
	
*/
Object symbol21 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
Object send4238 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol21, 0);
Object result = (Object)Eval((Object)send4238);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 99 put: 100.
	self assert: (instance at: 1) = 1.
	
	self assert: (instance at: 99) = 100.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 99)
	
*/
Object symbol32 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
Object send4239 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol32, 0);
Object result = (Object)Eval((Object)send4239);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
    Test_Class = (Type_Class)class180;
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
})
