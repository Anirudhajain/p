// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
Object classreference149;
Object objectlayout93;
Object instancevariable192;
Object instancevariable193;
Object instancevariable194;
Object symbol1064;
Object objectlayout94;
Object instancevariable195;
Object instancevariable196;
Object class150;
Object classclass6;
Object method1207;
Object symbol1065;
Object methodclosure1183;
Object smallint1556;
Object constant2062;
Object method1208;
Object symbol1066;
Object methodclosure1184;
Object localvariable540;
Object array515;
Object assign327;
Object method1209;
Object symbol1067;
Object methodclosure1185;
Object objectlayout95;
Object instancevariable197;
Object instancevariable198;
Object instancevariable199;
Object symbol1027;
Object objectlayout96;
Object instancevariable200;
Object class151;
Object classclass7;
Object method1210;
Object symbol1068;
Object methodclosure1186;
Object localvariable541;
Object array516;
Object assign328;
Object method1211;
Object symbol1069;
Object methodclosure1187;
Object smallint1557;
Object constant2063;
Object super11;
Object send3393;
Object method1212;
Object methodclosure1188;
Object classreference150;
Object objectlayout97;
Object instancevariable201;
Object instancevariable202;
Object instancevariable203;
Object symbol1051;
Object arraylayout28;
Object instancevariable204;
Object instancevariable205;
Object instancevariable206;
Object instancevariable207;
Object class152;
Object classclass8;
Object localvariable542;
Object array517;
Object assign329;
Object method1213;
Object methodclosure1189;
Object method1214;
Object methodclosure1190;
Object localvariable543;
Object array518;
Object assign330;
Object method1215;
Object methodclosure1191;
Object method1216;
Object symbol1073;
Object methodclosure1192;
Object method1217;
Object methodclosure1193;
Object localvariable544;
Object array519;
Object assign331;
Object method1218;
Object symbol1072;
Object methodclosure1194;
Object classreference151;
Object objectlayout98;
Object instancevariable208;
Object instancevariable209;
Object instancevariable210;
Object instancevariable211;
Object symbol1032;
Object objectlayout99;
Object instancevariable212;
Object instancevariable213;
Object instancevariable214;
Object instancevariable215;
Object class153;
Object classclass9;
Object smallint1558;
Object constant2064;
Object assign332;
Object method1219;
Object symbol1071;
Object methodclosure1195;
Object string294;
Object constant2065;
Object method1220;
Object symbol1070;
Object methodclosure1196;
Object localvariable545;
Object array520;
Object assign333;
Object method1221;
Object methodclosure1197;
Object method1222;
Object methodclosure1198;
Object localvariable546;
Object array521;
Object assign334;
Object method1223;
Object methodclosure1199;
Object method1224;
Object methodclosure1200;
Object method1225;
Object methodclosure1201;
Object localvariable547;
Object array522;
Object assign335;
Object method1226;
Object methodclosure1202;
Object classreference152;
Object classreference153;
Object objectlayout100;
Object instancevariable216;
Object instancevariable217;
Object instancevariable218;
Object symbol1023;
Object objectlayout101;
Object instancevariable219;
Object class154;
Object classclass10;
Object localvariable548;
Object array523;
Object smallint1559;
Object constant2066;
Object send3394;
Object method1227;
Object symbol1044;
Object methodclosure1203;
Object smallint1560;
Object constant2067;
Object smallint1561;
Object constant2068;
Object send3395;
Object method1228;
Object symbol1036;
Object methodclosure1204;
Object localvariable549;
Object array524;
Object send3396;
Object assign336;
Object symbol1053;
Object send3397;
Object smallint1562;
Object constant2069;
Object send3398;
Object send3399;
Object method1229;
Object symbol1028;
Object methodclosure1205;
Object smallint1563;
Object constant2070;
Object smallint1564;
Object constant2071;
Object send3400;
Object method1230;
Object symbol1056;
Object methodclosure1206;
Object string295;
Object constant2072;
Object method1231;
Object symbol1046;
Object methodclosure1207;
Object smallint1565;
Object constant2073;
Object method1232;
Object symbol1038;
Object methodclosure1208;
Object symbol1074;
Object constant2074;
Object method1233;
Object symbol1058;
Object methodclosure1209;
Object smallint1566;
Object constant2075;
Object method1234;
Object symbol1031;
Object methodclosure1210;
Object variable36;
Object array525;
Object smallint1567;
Object constant2076;
Object smallint1568;
Object constant2077;
Object send3401;
Object smallint1569;
Object constant2078;
Object send3402;
Object block239;
Object smallint1570;
Object constant2079;
Object send3403;
Object block240;
Object send3404;
Object block241;
Object send3405;
Object method1235;
Object symbol1048;
Object methodclosure1211;
Object character156;
Object constant2080;
Object string296;
Object constant2081;
Object send3406;
Object method1236;
Object symbol1041;
Object methodclosure1212;
Object send3407;
Object method1237;
Object symbol1033;
Object methodclosure1213;
Object smallint1571;
Object constant2082;
Object smallint1572;
Object constant2083;
Object send3408;
Object method1238;
Object symbol1061;
Object methodclosure1214;
Object localvariable550;
Object array526;
Object symbol1075;
Object send3409;
Object block242;
Object send3410;
Object method1239;
Object methodclosure1215;
Object method1240;
Object symbol1043;
Object methodclosure1216;
Object send3411;
Object send3412;
Object send3413;
Object send3414;
Object send3415;
Object method1241;
Object symbol1035;
Object methodclosure1217;
Object localvariable551;
Object array527;
Object smallint1573;
Object constant2084;
Object assign337;
Object method1242;
Object symbol1063;
Object methodclosure1218;
Object localvariable552;
Object array528;
Object send3416;
Object assign338;
Object localvariable553;
Object array529;
Object smallint1574;
Object constant2085;
Object send3417;
Object smallint1575;
Object constant2086;
Object send3418;
Object smallint1576;
Object constant2087;
Object send3419;
Object block243;
Object send3420;
Object send3421;
Object smallint1577;
Object constant2088;
Object send3422;
Object send3423;
Object send3424;
Object smallint1578;
Object constant2089;
Object send3425;
Object send3426;
Object send3427;
Object smallint1579;
Object constant2090;
Object send3428;
Object send3429;
Object send3430;
Object send3431;
Object send3432;
Object send3433;
Object send3434;
Object method1243;
Object symbol1055;
Object methodclosure1219;
Object smallint1580;
Object constant2091;
Object smallint1581;
Object constant2092;
Object send3435;
Object method1244;
Object symbol1045;
Object methodclosure1220;
Object send3436;
Object method1245;
Object symbol1037;
Object methodclosure1221;
Object method1246;
Object symbol1029;
Object methodclosure1222;
Object symbol1076;
Object constant2093;
Object character157;
Object constant2094;
Object send3437;
Object method1247;
Object symbol1057;
Object methodclosure1223;
Object localvariable554;
Object localvariable555;
Object localvariable556;
Object array530;
Object send3438;
Object send3439;
Object method1248;
Object symbol1030;
Object methodclosure1224;
Object send3440;
Object method1249;
Object symbol1050;
Object methodclosure1225;
Object smallint1582;
Object constant2095;
Object smallint1583;
Object constant2096;
Object send3441;
Object method1250;
Object symbol1047;
Object methodclosure1226;
Object string297;
Object constant2097;
Object string298;
Object constant2098;
Object send3442;
Object method1251;
Object symbol1039;
Object methodclosure1227;
Object symbol1077;
Object constant2099;
Object send3443;
Object method1252;
Object symbol1059;
Object methodclosure1228;
Object character158;
Object constant2100;
Object method1253;
Object symbol1040;
Object methodclosure1229;
Object localvariable557;
Object array531;
Object send3444;
Object assign339;
Object smallint1584;
Object constant2101;
Object send3445;
Object send3446;
Object smallint1585;
Object constant2102;
Object send3447;
Object send3448;
Object send3449;
Object send3450;
Object send3451;
Object smallint1586;
Object constant2103;
Object send3452;
Object send3453;
Object smallint1587;
Object constant2104;
Object send3454;
Object send3455;
Object send3456;
Object smallint1588;
Object constant2105;
Object send3457;
Object send3458;
Object method1254;
Object symbol1060;
Object methodclosure1230;
Object localvariable558;
Object array532;
Object smallint1589;
Object constant2106;
Object send3459;
Object assign340;
Object smallint1590;
Object constant2107;
Object smallint1591;
Object constant2108;
Object send3460;
Object smallint1592;
Object constant2109;
Object smallint1593;
Object constant2110;
Object send3461;
Object smallint1594;
Object constant2111;
Object send3462;
Object smallint1595;
Object constant2112;
Object send3463;
Object send3464;
Object smallint1596;
Object constant2113;
Object send3465;
Object smallint1597;
Object constant2114;
Object send3466;
Object send3467;
Object localvariable559;
Object array533;
Object smallint1598;
Object constant2115;
Object send3468;
Object smallint1599;
Object constant2116;
Object send3469;
Object smallint1600;
Object constant2117;
Object send3470;
Object block244;
Object send3471;
Object send3472;
Object smallint1601;
Object constant2118;
Object send3473;
Object send3474;
Object send3475;
Object smallint1602;
Object constant2119;
Object send3476;
Object send3477;
Object send3478;
Object smallint1603;
Object constant2120;
Object send3479;
Object send3480;
Object send3481;
Object send3482;
Object send3483;
Object smallint1604;
Object constant2121;
Object send3484;
Object send3485;
Object send3486;
Object send3487;
Object smallint1605;
Object constant2122;
Object send3488;
Object send3489;
Object method1255;
Object symbol1052;
Object methodclosure1231;
Object method1256;
Object symbol1049;
Object methodclosure1232;
Object character159;
Object constant2123;
Object character160;
Object constant2124;
Object send3490;
Object method1257;
Object symbol1042;
Object methodclosure1233;
Object smallint1606;
Object constant2125;
Object smallint1607;
Object constant2126;
Object send3491;
Object smallint1608;
Object constant2127;
Object send3492;
Object smallint1609;
Object constant2128;
Object send3493;
Object method1258;
Object symbol1034;
Object methodclosure1234;
Object constant2129;
Object constant2130;
Object send3494;
Object method1259;
Object symbol1062;
Object methodclosure1235;
Object localvariable560;
Object array534;
Object send3495;
Object assign341;
Object localvariable561;
Object array535;
Object smallint1610;
Object constant2131;
Object send3496;
Object smallint1611;
Object constant2132;
Object send3497;
Object smallint1612;
Object constant2133;
Object send3498;
Object block245;
Object send3499;
Object send3500;
Object smallint1613;
Object constant2134;
Object send3501;
Object send3502;
Object send3503;
Object smallint1614;
Object constant2135;
Object send3504;
Object send3505;
Object send3506;
Object smallint1615;
Object constant2136;
Object send3507;
Object send3508;
Object send3509;
Object send3510;
Object send3511;
Object send3512;
Object send3513;
Object method1260;
Object symbol1054;
Object methodclosure1236;
Object classreference154;


void create_ast() {
classreference149 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
objectlayout93 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable192 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout93)->values[0] = instancevariable192;
instancevariable193 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout93)->values[1] = instancevariable193;
instancevariable194 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout93)->values[2] = instancevariable194;
symbol1064 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout94 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
instancevariable195 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout94)->values[0] = instancevariable195;
instancevariable196 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)objectlayout94)->values[1] = instancevariable196;
class150 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout94, objectlayout93);
((Type_Class)class150)->name = (Type_Symbol)symbol1064;
classclass6 = (Object)HEADER(class150);

// SuperClassTestClass>>a
method1207 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable196);
symbol1065 = (Object)new_Type_Symbol_cached(L"a");
methodclosure1183 = (Object)new_Runtime_MethodClosure(method1207);
store_method((Type_Class)class150, (Type_Symbol)symbol1065, (Runtime_MethodClosure)methodclosure1183);

// SuperClassTestClass>>test
smallint1556 = (Object)new_Type_SmallInt(10);
constant2062 = (Object)new_AST_Constant((Object)smallint1556);
method1208 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2062);
symbol1066 = (Object)new_Type_Symbol_cached(L"test");
methodclosure1184 = (Object)new_Runtime_MethodClosure(method1208);
store_method((Type_Class)class150, (Type_Symbol)symbol1066, (Runtime_MethodClosure)methodclosure1184);

// SuperClassTestClass>>a:
localvariable540 = (Object)new_AST_Variable_named(L"anObject");
array515 = (Object)new_Type_Array_with(1, localvariable540);
assign327 = (Object)new_AST_Assign((Object)instancevariable196, (Object)localvariable540);
method1209 = (Object)new_AST_Method_with((Type_Array)array515, (Type_Array)empty_Type_Array, 2, assign327, Self);
symbol1067 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure1185 = (Object)new_Runtime_MethodClosure(method1209);
store_method((Type_Class)class150, (Type_Symbol)symbol1067, (Runtime_MethodClosure)methodclosure1185);
objectlayout95 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable197 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout95)->values[0] = instancevariable197;
instancevariable198 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout95)->values[1] = instancevariable198;
instancevariable199 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout95)->values[2] = instancevariable199;
symbol1027 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout96 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout96)->values[0] = instancevariable195;
((Type_Array)objectlayout96)->values[1] = instancevariable196;
instancevariable200 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)objectlayout96)->values[2] = instancevariable200;
class151 = (Object)new_Class_withMeta((Object)class150, objectlayout96, objectlayout95);
((Type_Class)class151)->name = (Type_Symbol)symbol1027;
classclass7 = (Object)HEADER(class151);

// ChildClassTestClass>>b
method1210 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable200);
symbol1068 = (Object)new_Type_Symbol_cached(L"b");
methodclosure1186 = (Object)new_Runtime_MethodClosure(method1210);
store_method((Type_Class)class151, (Type_Symbol)symbol1068, (Runtime_MethodClosure)methodclosure1186);

// ChildClassTestClass>>b:
localvariable541 = (Object)new_AST_Variable_named(L"anObject");
array516 = (Object)new_Type_Array_with(1, localvariable541);
assign328 = (Object)new_AST_Assign((Object)instancevariable200, (Object)localvariable541);
method1211 = (Object)new_AST_Method_with((Type_Array)array516, (Type_Array)empty_Type_Array, 2, assign328, Self);
symbol1069 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure1187 = (Object)new_Runtime_MethodClosure(method1211);
store_method((Type_Class)class151, (Type_Symbol)symbol1069, (Runtime_MethodClosure)methodclosure1187);

// ChildClassTestClass>>test
smallint1557 = (Object)new_Type_SmallInt(10);
constant2063 = (Object)new_AST_Constant((Object)smallint1557);
super11 = (Object)new_AST_Super(symbol1066, 0);
send3393 = (Object)new_AST_Send((Object)constant2063, (Object)SMB__times, 1, super11);
method1212 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3393);
methodclosure1188 = (Object)new_Runtime_MethodClosure(method1212);
store_method((Type_Class)class151, (Type_Symbol)symbol1066, (Runtime_MethodClosure)methodclosure1188);
classreference150 = (Object)new_Organization_ClassReference((Type_Class)class151);
objectlayout97 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable201 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout97)->values[0] = instancevariable201;
instancevariable202 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout97)->values[1] = instancevariable202;
instancevariable203 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout97)->values[2] = instancevariable203;
symbol1051 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout28 = (Object)create_type_with_vars(Type_ArrayLayout, 4);
instancevariable204 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)arraylayout28)->values[0] = instancevariable204;
instancevariable205 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)arraylayout28)->values[1] = instancevariable205;
instancevariable206 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)arraylayout28)->values[2] = instancevariable206;
instancevariable207 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)arraylayout28)->values[3] = instancevariable207;
class152 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout28, objectlayout97);
((Type_Class)class152)->name = (Type_Symbol)symbol1051;
classclass8 = (Object)HEADER(class152);

// StandardVariableTestClass>>b:
localvariable542 = (Object)new_AST_Variable_named(L"anObject");
array517 = (Object)new_Type_Array_with(1, localvariable542);
assign329 = (Object)new_AST_Assign((Object)instancevariable206, (Object)localvariable542);
method1213 = (Object)new_AST_Method_with((Type_Array)array517, (Type_Array)empty_Type_Array, 2, assign329, Self);
methodclosure1189 = (Object)new_Runtime_MethodClosure(method1213);
store_method((Type_Class)class152, (Type_Symbol)symbol1069, (Runtime_MethodClosure)methodclosure1189);

// StandardVariableTestClass>>a
method1214 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable205);
methodclosure1190 = (Object)new_Runtime_MethodClosure(method1214);
store_method((Type_Class)class152, (Type_Symbol)symbol1065, (Runtime_MethodClosure)methodclosure1190);

// StandardVariableTestClass>>a:
localvariable543 = (Object)new_AST_Variable_named(L"anObject");
array518 = (Object)new_Type_Array_with(1, localvariable543);
assign330 = (Object)new_AST_Assign((Object)instancevariable205, (Object)localvariable543);
method1215 = (Object)new_AST_Method_with((Type_Array)array518, (Type_Array)empty_Type_Array, 2, assign330, Self);
methodclosure1191 = (Object)new_Runtime_MethodClosure(method1215);
store_method((Type_Class)class152, (Type_Symbol)symbol1067, (Runtime_MethodClosure)methodclosure1191);

// StandardVariableTestClass>>c
method1216 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable207);
symbol1073 = (Object)new_Type_Symbol_cached(L"c");
methodclosure1192 = (Object)new_Runtime_MethodClosure(method1216);
store_method((Type_Class)class152, (Type_Symbol)symbol1073, (Runtime_MethodClosure)methodclosure1192);

// StandardVariableTestClass>>b
method1217 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable206);
methodclosure1193 = (Object)new_Runtime_MethodClosure(method1217);
store_method((Type_Class)class152, (Type_Symbol)symbol1068, (Runtime_MethodClosure)methodclosure1193);

// StandardVariableTestClass>>c:
localvariable544 = (Object)new_AST_Variable_named(L"anObject");
array519 = (Object)new_Type_Array_with(1, localvariable544);
assign331 = (Object)new_AST_Assign((Object)instancevariable207, (Object)localvariable544);
method1218 = (Object)new_AST_Method_with((Type_Array)array519, (Type_Array)empty_Type_Array, 2, assign331, Self);
symbol1072 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure1194 = (Object)new_Runtime_MethodClosure(method1218);
store_method((Type_Class)class152, (Type_Symbol)symbol1072, (Runtime_MethodClosure)methodclosure1194);
classreference151 = (Object)new_Organization_ClassReference((Type_Class)class152);
objectlayout98 = (Object)create_type_with_vars(Type_ObjectLayout, 4);
instancevariable208 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout98)->values[0] = instancevariable208;
instancevariable209 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout98)->values[1] = instancevariable209;
instancevariable210 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout98)->values[2] = instancevariable210;
instancevariable211 = (Object)new_AST_InstVariable(3, L"classInstVar");
((Type_Array)objectlayout98)->values[3] = instancevariable211;
symbol1032 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout99 = (Object)create_type_with_vars(Type_ObjectLayout, 4);
instancevariable212 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout99)->values[0] = instancevariable212;
instancevariable213 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)objectlayout99)->values[1] = instancevariable213;
instancevariable214 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)objectlayout99)->values[2] = instancevariable214;
instancevariable215 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)objectlayout99)->values[3] = instancevariable215;
class153 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout99, objectlayout98);
((Type_Class)class153)->name = (Type_Symbol)symbol1032;
classclass9 = (Object)HEADER(class153);

// StandardTestClass class>>aClassSideMethodWithInstanceVariables
smallint1558 = (Object)new_Type_SmallInt(100);
constant2064 = (Object)new_AST_Constant((Object)smallint1558);
assign332 = (Object)new_AST_Assign((Object)instancevariable211, (Object)constant2064);
method1219 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign332, instancevariable211);
symbol1071 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure1195 = (Object)new_Runtime_MethodClosure(method1219);
store_method((Type_Class)classclass9, (Type_Symbol)symbol1071, (Runtime_MethodClosure)methodclosure1195);

// StandardTestClass class>>aClassSideMethod
string294 = (Object)new_Type_String(L"a");
constant2065 = (Object)new_AST_Constant((Object)string294);
method1220 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2065);
symbol1070 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure1196 = (Object)new_Runtime_MethodClosure(method1220);
store_method((Type_Class)classclass9, (Type_Symbol)symbol1070, (Runtime_MethodClosure)methodclosure1196);

// StandardTestClass>>b:
localvariable545 = (Object)new_AST_Variable_named(L"anObject");
array520 = (Object)new_Type_Array_with(1, localvariable545);
assign333 = (Object)new_AST_Assign((Object)instancevariable214, (Object)localvariable545);
method1221 = (Object)new_AST_Method_with((Type_Array)array520, (Type_Array)empty_Type_Array, 2, assign333, Self);
methodclosure1197 = (Object)new_Runtime_MethodClosure(method1221);
store_method((Type_Class)class153, (Type_Symbol)symbol1069, (Runtime_MethodClosure)methodclosure1197);

// StandardTestClass>>a
method1222 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable213);
methodclosure1198 = (Object)new_Runtime_MethodClosure(method1222);
store_method((Type_Class)class153, (Type_Symbol)symbol1065, (Runtime_MethodClosure)methodclosure1198);

// StandardTestClass>>a:
localvariable546 = (Object)new_AST_Variable_named(L"anObject");
array521 = (Object)new_Type_Array_with(1, localvariable546);
assign334 = (Object)new_AST_Assign((Object)instancevariable213, (Object)localvariable546);
method1223 = (Object)new_AST_Method_with((Type_Array)array521, (Type_Array)empty_Type_Array, 2, assign334, Self);
methodclosure1199 = (Object)new_Runtime_MethodClosure(method1223);
store_method((Type_Class)class153, (Type_Symbol)symbol1067, (Runtime_MethodClosure)methodclosure1199);

// StandardTestClass>>c
method1224 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable215);
methodclosure1200 = (Object)new_Runtime_MethodClosure(method1224);
store_method((Type_Class)class153, (Type_Symbol)symbol1073, (Runtime_MethodClosure)methodclosure1200);

// StandardTestClass>>b
method1225 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable214);
methodclosure1201 = (Object)new_Runtime_MethodClosure(method1225);
store_method((Type_Class)class153, (Type_Symbol)symbol1068, (Runtime_MethodClosure)methodclosure1201);

// StandardTestClass>>c:
localvariable547 = (Object)new_AST_Variable_named(L"anObject");
array522 = (Object)new_Type_Array_with(1, localvariable547);
assign335 = (Object)new_AST_Assign((Object)instancevariable215, (Object)localvariable547);
method1226 = (Object)new_AST_Method_with((Type_Array)array522, (Type_Array)empty_Type_Array, 2, assign335, Self);
methodclosure1202 = (Object)new_Runtime_MethodClosure(method1226);
store_method((Type_Class)class153, (Type_Symbol)symbol1072, (Runtime_MethodClosure)methodclosure1202);
classreference152 = (Object)new_Organization_ClassReference((Type_Class)class153);
classreference153 = (Object)new_Organization_ClassReference((Type_Class)class150);
objectlayout100 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable216 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout100)->values[0] = instancevariable216;
instancevariable217 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout100)->values[1] = instancevariable217;
instancevariable218 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout100)->values[2] = instancevariable218;
symbol1023 = (Object)new_Type_Symbol_cached(L"BridgeTest");
objectlayout101 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable219 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout101)->values[0] = instancevariable219;
class154 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout101, objectlayout100);
((Type_Class)class154)->name = (Type_Symbol)symbol1023;
classclass10 = (Object)HEADER(class154);

// BridgeTest>>tmMethodArgument:
localvariable548 = (Object)new_AST_Variable_named(L"arg");
array523 = (Object)new_Type_Array_with(1, localvariable548);
smallint1559 = (Object)new_Type_SmallInt(1);
constant2066 = (Object)new_AST_Constant((Object)smallint1559);
send3394 = (Object)new_AST_Send((Object)localvariable548, (Object)SMB__plus, 1, constant2066);
method1227 = (Object)new_AST_Method_with((Type_Array)array523, (Type_Array)empty_Type_Array, 1, send3394);
symbol1044 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure1203 = (Object)new_Runtime_MethodClosure(method1227);
store_method((Type_Class)class154, (Type_Symbol)symbol1044, (Runtime_MethodClosure)methodclosure1203);

// BridgeTest>>tmNumberAdd
smallint1560 = (Object)new_Type_SmallInt(1);
constant2067 = (Object)new_AST_Constant((Object)smallint1560);
smallint1561 = (Object)new_Type_SmallInt(1);
constant2068 = (Object)new_AST_Constant((Object)smallint1561);
send3395 = (Object)new_AST_Send((Object)constant2067, (Object)SMB__plus, 1, constant2068);
method1228 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3395);
symbol1036 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure1204 = (Object)new_Runtime_MethodClosure(method1228);
store_method((Type_Class)class154, (Type_Symbol)symbol1036, (Runtime_MethodClosure)methodclosure1204);

// BridgeTest>>tmSuperClassSuperSend
localvariable549 = (Object)new_AST_Variable_named(L"instance");
array524 = (Object)new_Type_Array_with(1, localvariable549);
send3396 = (Object)new_AST_Send((Object)classreference150, (Object)SMB_basicNew, 0);
assign336 = (Object)new_AST_Assign((Object)localvariable549, (Object)send3396);
symbol1053 = (Object)new_Type_Symbol_cached(L"assert:");
send3397 = (Object)new_AST_Send((Object)localvariable549, (Object)symbol1066, 0);
smallint1562 = (Object)new_Type_SmallInt(100);
constant2069 = (Object)new_AST_Constant((Object)smallint1562);
send3398 = (Object)new_AST_Send((Object)send3397, (Object)SMB__equal, 1, constant2069);
send3399 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3398);
method1229 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array524, 3, assign336, send3399, Self);
symbol1028 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure1205 = (Object)new_Runtime_MethodClosure(method1229);
store_method((Type_Class)class154, (Type_Symbol)symbol1028, (Runtime_MethodClosure)methodclosure1205);

// BridgeTest>>tmNumberDiv
smallint1563 = (Object)new_Type_SmallInt(4);
constant2070 = (Object)new_AST_Constant((Object)smallint1563);
smallint1564 = (Object)new_Type_SmallInt(2);
constant2071 = (Object)new_AST_Constant((Object)smallint1564);
send3400 = (Object)new_AST_Send((Object)constant2070, (Object)SMB__divide, 1, constant2071);
method1230 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3400);
symbol1056 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure1206 = (Object)new_Runtime_MethodClosure(method1230);
store_method((Type_Class)class154, (Type_Symbol)symbol1056, (Runtime_MethodClosure)methodclosure1206);

// BridgeTest>>tmString
string295 = (Object)new_Type_String(L"String");
constant2072 = (Object)new_AST_Constant((Object)string295);
method1231 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2072);
symbol1046 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure1207 = (Object)new_Runtime_MethodClosure(method1231);
store_method((Type_Class)class154, (Type_Symbol)symbol1046, (Runtime_MethodClosure)methodclosure1207);

// BridgeTest>>tmNumber
smallint1565 = (Object)new_Type_SmallInt(1);
constant2073 = (Object)new_AST_Constant((Object)smallint1565);
method1232 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2073);
symbol1038 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure1208 = (Object)new_Runtime_MethodClosure(method1232);
store_method((Type_Class)class154, (Type_Symbol)symbol1038, (Runtime_MethodClosure)methodclosure1208);

// BridgeTest>>tmSymbol
symbol1074 = (Object)new_Type_Symbol_cached(L"Symbol");
constant2074 = (Object)new_AST_Constant((Object)symbol1074);
method1233 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2074);
symbol1058 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure1209 = (Object)new_Runtime_MethodClosure(method1233);
store_method((Type_Class)class154, (Type_Symbol)symbol1058, (Runtime_MethodClosure)methodclosure1209);

// BridgeTest>>tmSimpleReturn
smallint1566 = (Object)new_Type_SmallInt(1);
constant2075 = (Object)new_AST_Constant((Object)smallint1566);
method1234 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2075);
symbol1031 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure1210 = (Object)new_Runtime_MethodClosure(method1234);
store_method((Type_Class)class154, (Type_Symbol)symbol1031, (Runtime_MethodClosure)methodclosure1210);

// BridgeTest>>tmExtendedReturn
variable36 = (Object)new_AST_Variable_named(L"return");
array525 = (Object)new_Type_Array_with(1, variable36);
smallint1567 = (Object)new_Type_SmallInt(1);
constant2076 = (Object)new_AST_Constant((Object)smallint1567);
smallint1568 = (Object)new_Type_SmallInt(2);
constant2077 = (Object)new_AST_Constant((Object)smallint1568);
send3401 = (Object)new_AST_Send((Object)constant2076, (Object)SMB__gt, 1, constant2077);
smallint1569 = (Object)new_Type_SmallInt(1);
constant2078 = (Object)new_AST_Constant((Object)smallint1569);
send3402 = (Object)new_AST_Send((Object)variable36, (Object)SMB_escape_, 1, constant2078);
block239 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send3402);
smallint1570 = (Object)new_Type_SmallInt(2);
constant2079 = (Object)new_AST_Constant((Object)smallint1570);
send3403 = (Object)new_AST_Send((Object)variable36, (Object)SMB_escape_, 1, constant2079);
block240 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send3403);
send3404 = (Object)new_AST_Send((Object)send3401, (Object)SMB_ifTrue_ifFalse_, 2, block239, block240);
block241 = (Object)new_AST_Block_with((Type_Array)array525, (Type_Array)empty_Type_Array, 1, 2, send3404, Self);
send3405 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block241);
method1235 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3405);
symbol1048 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure1211 = (Object)new_Runtime_MethodClosure(method1235);
store_method((Type_Class)class154, (Type_Symbol)symbol1048, (Runtime_MethodClosure)methodclosure1211);

// BridgeTest>>tmCharacterStringEquals
character156 = (Object)new_Type_Character(L'C');
constant2080 = (Object)new_AST_Constant((Object)character156);
string296 = (Object)new_Type_String(L"C");
constant2081 = (Object)new_AST_Constant((Object)string296);
send3406 = (Object)new_AST_Send((Object)constant2080, (Object)SMB__equal, 1, constant2081);
method1236 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3406);
symbol1041 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure1212 = (Object)new_Runtime_MethodClosure(method1236);
store_method((Type_Class)class154, (Type_Symbol)symbol1041, (Runtime_MethodClosure)methodclosure1212);

// BridgeTest>>tmClassInstVar
send3407 = (Object)new_AST_Send((Object)classreference152, (Object)symbol1071, 0);
method1237 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3407);
symbol1033 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure1213 = (Object)new_Runtime_MethodClosure(method1237);
store_method((Type_Class)class154, (Type_Symbol)symbol1033, (Runtime_MethodClosure)methodclosure1213);

// BridgeTest>>tmNumberMult
smallint1571 = (Object)new_Type_SmallInt(2);
constant2082 = (Object)new_AST_Constant((Object)smallint1571);
smallint1572 = (Object)new_Type_SmallInt(3);
constant2083 = (Object)new_AST_Constant((Object)smallint1572);
send3408 = (Object)new_AST_Send((Object)constant2082, (Object)SMB__times, 1, constant2083);
method1238 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3408);
symbol1061 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure1214 = (Object)new_Runtime_MethodClosure(method1238);
store_method((Type_Class)class154, (Type_Symbol)symbol1061, (Runtime_MethodClosure)methodclosure1214);

// BridgeTest>>assert:
localvariable550 = (Object)new_AST_Variable_named(L"bool");
array526 = (Object)new_Type_Array_with(1, localvariable550);
symbol1075 = (Object)new_Type_Symbol_cached(L"fail");
send3409 = (Object)new_AST_Send((Object)Self, (Object)symbol1075, 0);
block242 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send3409);
send3410 = (Object)new_AST_Send((Object)localvariable550, (Object)SMB_ifFalse_, 1, block242);
method1239 = (Object)new_AST_Method_with((Type_Array)array526, (Type_Array)empty_Type_Array, 1, send3410);
methodclosure1215 = (Object)new_Runtime_MethodClosure(method1239);
store_method((Type_Class)class154, (Type_Symbol)symbol1053, (Runtime_MethodClosure)methodclosure1215);

// BridgeTest>>tmBooleanTrue
method1240 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol1043 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure1216 = (Object)new_Runtime_MethodClosure(method1240);
store_method((Type_Class)class154, (Type_Symbol)symbol1043, (Runtime_MethodClosure)methodclosure1216);

// BridgeTest>>tmClassSide
send3411 = (Object)new_AST_Send((Object)classreference149, (Object)SMB_class, 0);
send3412 = (Object)new_AST_Send((Object)send3411, (Object)SMB_class, 0);
send3413 = (Object)new_AST_Send((Object)send3412, (Object)SMB__equal, 1, Metaclass_Reference);
send3414 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3413);
send3415 = (Object)new_AST_Send((Object)classreference152, (Object)symbol1070, 0);
method1241 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send3414, send3415);
symbol1035 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure1217 = (Object)new_Runtime_MethodClosure(method1241);
store_method((Type_Class)class154, (Type_Symbol)symbol1035, (Runtime_MethodClosure)methodclosure1217);

// BridgeTest>>tmLocalVariable
localvariable551 = (Object)new_AST_Variable_named(L"a");
array527 = (Object)new_Type_Array_with(1, localvariable551);
smallint1573 = (Object)new_Type_SmallInt(1);
constant2084 = (Object)new_AST_Constant((Object)smallint1573);
assign337 = (Object)new_AST_Assign((Object)localvariable551, (Object)constant2084);
method1242 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array527, 2, assign337, localvariable551);
symbol1063 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure1218 = (Object)new_Runtime_MethodClosure(method1242);
store_method((Type_Class)class154, (Type_Symbol)symbol1063, (Runtime_MethodClosure)methodclosure1218);

// BridgeTest>>tmVariableInstanceCreation
localvariable552 = (Object)new_AST_Variable_named(L"instance");
array528 = (Object)new_Type_Array_with(1, localvariable552);
send3416 = (Object)new_AST_Send((Object)classreference151, (Object)SMB_basicNew, 0);
assign338 = (Object)new_AST_Assign((Object)localvariable552, (Object)send3416);
localvariable553 = (Object)new_AST_Variable_named(L"receiver");
array529 = (Object)new_Type_Array_with(1, localvariable553);
smallint1574 = (Object)new_Type_SmallInt(1);
constant2085 = (Object)new_AST_Constant((Object)smallint1574);
send3417 = (Object)new_AST_Send((Object)localvariable553, (Object)symbol1067, 1, constant2085);
smallint1575 = (Object)new_Type_SmallInt(2);
constant2086 = (Object)new_AST_Constant((Object)smallint1575);
send3418 = (Object)new_AST_Send((Object)localvariable553, (Object)symbol1069, 1, constant2086);
smallint1576 = (Object)new_Type_SmallInt(3);
constant2087 = (Object)new_AST_Constant((Object)smallint1576);
send3419 = (Object)new_AST_Send((Object)localvariable553, (Object)symbol1072, 1, constant2087);
block243 = (Object)new_AST_Block_with((Type_Array)array529, (Type_Array)empty_Type_Array, 1, 3, send3417, send3418, send3419);
send3420 = (Object)new_AST_Send((Object)block243, (Object)SMB_value_, 1, localvariable552);
send3421 = (Object)new_AST_Send((Object)localvariable552, (Object)symbol1065, 0);
smallint1577 = (Object)new_Type_SmallInt(1);
constant2088 = (Object)new_AST_Constant((Object)smallint1577);
send3422 = (Object)new_AST_Send((Object)send3421, (Object)SMB__equal, 1, constant2088);
send3423 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3422);
send3424 = (Object)new_AST_Send((Object)localvariable552, (Object)symbol1068, 0);
smallint1578 = (Object)new_Type_SmallInt(2);
constant2089 = (Object)new_AST_Constant((Object)smallint1578);
send3425 = (Object)new_AST_Send((Object)send3424, (Object)SMB__equal, 1, constant2089);
send3426 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3425);
send3427 = (Object)new_AST_Send((Object)localvariable552, (Object)symbol1073, 0);
smallint1579 = (Object)new_Type_SmallInt(3);
constant2090 = (Object)new_AST_Constant((Object)smallint1579);
send3428 = (Object)new_AST_Send((Object)send3427, (Object)SMB__equal, 1, constant2090);
send3429 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3428);
send3430 = (Object)new_AST_Send((Object)localvariable552, (Object)symbol1065, 0);
send3431 = (Object)new_AST_Send((Object)localvariable552, (Object)symbol1068, 0);
send3432 = (Object)new_AST_Send((Object)send3430, (Object)SMB__plus, 1, send3431);
send3433 = (Object)new_AST_Send((Object)localvariable552, (Object)symbol1073, 0);
send3434 = (Object)new_AST_Send((Object)send3432, (Object)SMB__plus, 1, send3433);
method1243 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array528, 6, assign338, send3420, send3423, send3426, send3429, send3434);
symbol1055 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure1219 = (Object)new_Runtime_MethodClosure(method1243);
store_method((Type_Class)class154, (Type_Symbol)symbol1055, (Runtime_MethodClosure)methodclosure1219);

// BridgeTest>>tmNumberEquals
smallint1580 = (Object)new_Type_SmallInt(1);
constant2091 = (Object)new_AST_Constant((Object)smallint1580);
smallint1581 = (Object)new_Type_SmallInt(1);
constant2092 = (Object)new_AST_Constant((Object)smallint1581);
send3435 = (Object)new_AST_Send((Object)constant2091, (Object)SMB__equal, 1, constant2092);
method1244 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3435);
symbol1045 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure1220 = (Object)new_Runtime_MethodClosure(method1244);
store_method((Type_Class)class154, (Type_Symbol)symbol1045, (Runtime_MethodClosure)methodclosure1220);

// BridgeTest>>tmClassReferenceReturn
send3436 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
method1245 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3436);
symbol1037 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure1221 = (Object)new_Runtime_MethodClosure(method1245);
store_method((Type_Class)class154, (Type_Symbol)symbol1037, (Runtime_MethodClosure)methodclosure1221);

// BridgeTest>>tmBooleanFalse
method1246 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol1029 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure1222 = (Object)new_Runtime_MethodClosure(method1246);
store_method((Type_Class)class154, (Type_Symbol)symbol1029, (Runtime_MethodClosure)methodclosure1222);

// BridgeTest>>tmSymbolCharacterEquals
symbol1076 = (Object)new_Type_Symbol_cached(L"S");
constant2093 = (Object)new_AST_Constant((Object)symbol1076);
character157 = (Object)new_Type_Character(L'S');
constant2094 = (Object)new_AST_Constant((Object)character157);
send3437 = (Object)new_AST_Send((Object)constant2093, (Object)SMB__equal, 1, constant2094);
method1247 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3437);
symbol1057 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure1223 = (Object)new_Runtime_MethodClosure(method1247);
store_method((Type_Class)class154, (Type_Symbol)symbol1057, (Runtime_MethodClosure)methodclosure1223);

// BridgeTest>>tmMethodArguments:with:with:
localvariable554 = (Object)new_AST_Variable_named(L"arg1");
localvariable555 = (Object)new_AST_Variable_named(L"arg2");
localvariable556 = (Object)new_AST_Variable_named(L"arg3");
array530 = (Object)new_Type_Array_with(3, localvariable554, localvariable555, localvariable556);
send3438 = (Object)new_AST_Send((Object)localvariable554, (Object)SMB__concat, 1, localvariable555);
send3439 = (Object)new_AST_Send((Object)send3438, (Object)SMB__concat, 1, localvariable556);
method1248 = (Object)new_AST_Method_with((Type_Array)array530, (Type_Array)empty_Type_Array, 1, send3439);
symbol1030 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure1224 = (Object)new_Runtime_MethodClosure(method1248);
store_method((Type_Class)class154, (Type_Symbol)symbol1030, (Runtime_MethodClosure)methodclosure1224);

// BridgeTest>>tmBooleanEquals
send3440 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, True_Const);
method1249 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3440);
symbol1050 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure1225 = (Object)new_Runtime_MethodClosure(method1249);
store_method((Type_Class)class154, (Type_Symbol)symbol1050, (Runtime_MethodClosure)methodclosure1225);

// BridgeTest>>tmNumberSubtract
smallint1582 = (Object)new_Type_SmallInt(2);
constant2095 = (Object)new_AST_Constant((Object)smallint1582);
smallint1583 = (Object)new_Type_SmallInt(1);
constant2096 = (Object)new_AST_Constant((Object)smallint1583);
send3441 = (Object)new_AST_Send((Object)constant2095, (Object)SMB__minus, 1, constant2096);
method1250 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3441);
symbol1047 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure1226 = (Object)new_Runtime_MethodClosure(method1250);
store_method((Type_Class)class154, (Type_Symbol)symbol1047, (Runtime_MethodClosure)methodclosure1226);

// BridgeTest>>tmStringEquals
string297 = (Object)new_Type_String(L"String");
constant2097 = (Object)new_AST_Constant((Object)string297);
string298 = (Object)new_Type_String(L"String");
constant2098 = (Object)new_AST_Constant((Object)string298);
send3442 = (Object)new_AST_Send((Object)constant2097, (Object)SMB__equal, 1, constant2098);
method1251 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3442);
symbol1039 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure1227 = (Object)new_Runtime_MethodClosure(method1251);
store_method((Type_Class)class154, (Type_Symbol)symbol1039, (Runtime_MethodClosure)methodclosure1227);

// BridgeTest>>tmBooleanSymbolEquals
symbol1077 = (Object)new_Type_Symbol_cached(L"true");
constant2099 = (Object)new_AST_Constant((Object)symbol1077);
send3443 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, constant2099);
method1252 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3443);
symbol1059 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure1228 = (Object)new_Runtime_MethodClosure(method1252);
store_method((Type_Class)class154, (Type_Symbol)symbol1059, (Runtime_MethodClosure)methodclosure1228);

// BridgeTest>>tmCharacter
character158 = (Object)new_Type_Character(L'C');
constant2100 = (Object)new_AST_Constant((Object)character158);
method1253 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2100);
symbol1040 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure1229 = (Object)new_Runtime_MethodClosure(method1253);
store_method((Type_Class)class154, (Type_Symbol)symbol1040, (Runtime_MethodClosure)methodclosure1229);

// BridgeTest>>tmSuperClass
localvariable557 = (Object)new_AST_Variable_named(L"instance");
array531 = (Object)new_Type_Array_with(1, localvariable557);
send3444 = (Object)new_AST_Send((Object)classreference150, (Object)SMB_basicNew, 0);
assign339 = (Object)new_AST_Assign((Object)localvariable557, (Object)send3444);
smallint1584 = (Object)new_Type_SmallInt(1);
constant2101 = (Object)new_AST_Constant((Object)smallint1584);
send3445 = (Object)new_AST_Send((Object)localvariable557, (Object)symbol1067, 1, constant2101);
send3446 = (Object)new_AST_Send((Object)localvariable557, (Object)symbol1065, 0);
smallint1585 = (Object)new_Type_SmallInt(1);
constant2102 = (Object)new_AST_Constant((Object)smallint1585);
send3447 = (Object)new_AST_Send((Object)send3446, (Object)SMB__equal, 1, constant2102);
send3448 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3447);
send3449 = (Object)new_AST_Send((Object)localvariable557, (Object)symbol1068, 0);
send3450 = (Object)new_AST_Send((Object)send3449, (Object)SMB__equal, 1, Nil_Const);
send3451 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3450);
smallint1586 = (Object)new_Type_SmallInt(2);
constant2103 = (Object)new_AST_Constant((Object)smallint1586);
send3452 = (Object)new_AST_Send((Object)localvariable557, (Object)symbol1069, 1, constant2103);
send3453 = (Object)new_AST_Send((Object)localvariable557, (Object)symbol1065, 0);
smallint1587 = (Object)new_Type_SmallInt(1);
constant2104 = (Object)new_AST_Constant((Object)smallint1587);
send3454 = (Object)new_AST_Send((Object)send3453, (Object)SMB__equal, 1, constant2104);
send3455 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3454);
send3456 = (Object)new_AST_Send((Object)localvariable557, (Object)symbol1068, 0);
smallint1588 = (Object)new_Type_SmallInt(2);
constant2105 = (Object)new_AST_Constant((Object)smallint1588);
send3457 = (Object)new_AST_Send((Object)send3456, (Object)SMB__equal, 1, constant2105);
send3458 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3457);
method1254 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array531, 8, assign339, send3445, send3448, send3451, send3452, send3455, send3458, Self);
symbol1060 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure1230 = (Object)new_Runtime_MethodClosure(method1254);
store_method((Type_Class)class154, (Type_Symbol)symbol1060, (Runtime_MethodClosure)methodclosure1230);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable558 = (Object)new_AST_Variable_named(L"instance");
array532 = (Object)new_Type_Array_with(1, localvariable558);
smallint1589 = (Object)new_Type_SmallInt(100);
constant2106 = (Object)new_AST_Constant((Object)smallint1589);
send3459 = (Object)new_AST_Send((Object)classreference151, (Object)SMB_basicNew_, 1, constant2106);
assign340 = (Object)new_AST_Assign((Object)localvariable558, (Object)send3459);
smallint1590 = (Object)new_Type_SmallInt(1);
constant2107 = (Object)new_AST_Constant((Object)smallint1590);
smallint1591 = (Object)new_Type_SmallInt(1);
constant2108 = (Object)new_AST_Constant((Object)smallint1591);
send3460 = (Object)new_AST_Send((Object)localvariable558, (Object)SMB_at_put_, 2, constant2107, constant2108);
smallint1592 = (Object)new_Type_SmallInt(100);
constant2109 = (Object)new_AST_Constant((Object)smallint1592);
smallint1593 = (Object)new_Type_SmallInt(100);
constant2110 = (Object)new_AST_Constant((Object)smallint1593);
send3461 = (Object)new_AST_Send((Object)localvariable558, (Object)SMB_at_put_, 2, constant2109, constant2110);
smallint1594 = (Object)new_Type_SmallInt(1);
constant2111 = (Object)new_AST_Constant((Object)smallint1594);
send3462 = (Object)new_AST_Send((Object)localvariable558, (Object)SMB_at_, 1, constant2111);
smallint1595 = (Object)new_Type_SmallInt(1);
constant2112 = (Object)new_AST_Constant((Object)smallint1595);
send3463 = (Object)new_AST_Send((Object)send3462, (Object)SMB__equal, 1, constant2112);
send3464 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3463);
smallint1596 = (Object)new_Type_SmallInt(100);
constant2113 = (Object)new_AST_Constant((Object)smallint1596);
send3465 = (Object)new_AST_Send((Object)localvariable558, (Object)SMB_at_, 1, constant2113);
smallint1597 = (Object)new_Type_SmallInt(100);
constant2114 = (Object)new_AST_Constant((Object)smallint1597);
send3466 = (Object)new_AST_Send((Object)send3465, (Object)SMB__equal, 1, constant2114);
send3467 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3466);
localvariable559 = (Object)new_AST_Variable_named(L"receiver");
array533 = (Object)new_Type_Array_with(1, localvariable559);
smallint1598 = (Object)new_Type_SmallInt(1);
constant2115 = (Object)new_AST_Constant((Object)smallint1598);
send3468 = (Object)new_AST_Send((Object)localvariable559, (Object)symbol1067, 1, constant2115);
smallint1599 = (Object)new_Type_SmallInt(2);
constant2116 = (Object)new_AST_Constant((Object)smallint1599);
send3469 = (Object)new_AST_Send((Object)localvariable559, (Object)symbol1069, 1, constant2116);
smallint1600 = (Object)new_Type_SmallInt(3);
constant2117 = (Object)new_AST_Constant((Object)smallint1600);
send3470 = (Object)new_AST_Send((Object)localvariable559, (Object)symbol1072, 1, constant2117);
block244 = (Object)new_AST_Block_with((Type_Array)array533, (Type_Array)empty_Type_Array, 1, 3, send3468, send3469, send3470);
send3471 = (Object)new_AST_Send((Object)block244, (Object)SMB_value_, 1, localvariable558);
send3472 = (Object)new_AST_Send((Object)localvariable558, (Object)symbol1065, 0);
smallint1601 = (Object)new_Type_SmallInt(1);
constant2118 = (Object)new_AST_Constant((Object)smallint1601);
send3473 = (Object)new_AST_Send((Object)send3472, (Object)SMB__equal, 1, constant2118);
send3474 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3473);
send3475 = (Object)new_AST_Send((Object)localvariable558, (Object)symbol1068, 0);
smallint1602 = (Object)new_Type_SmallInt(2);
constant2119 = (Object)new_AST_Constant((Object)smallint1602);
send3476 = (Object)new_AST_Send((Object)send3475, (Object)SMB__equal, 1, constant2119);
send3477 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3476);
send3478 = (Object)new_AST_Send((Object)localvariable558, (Object)symbol1073, 0);
smallint1603 = (Object)new_Type_SmallInt(3);
constant2120 = (Object)new_AST_Constant((Object)smallint1603);
send3479 = (Object)new_AST_Send((Object)send3478, (Object)SMB__equal, 1, constant2120);
send3480 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3479);
send3481 = (Object)new_AST_Send((Object)localvariable558, (Object)symbol1065, 0);
send3482 = (Object)new_AST_Send((Object)localvariable558, (Object)symbol1068, 0);
send3483 = (Object)new_AST_Send((Object)localvariable558, (Object)symbol1073, 0);
smallint1604 = (Object)new_Type_SmallInt(1);
constant2121 = (Object)new_AST_Constant((Object)smallint1604);
send3484 = (Object)new_AST_Send((Object)localvariable558, (Object)SMB_at_, 1, constant2121);
send3485 = (Object)new_AST_Send((Object)send3483, (Object)SMB__plus, 1, send3484);
send3486 = (Object)new_AST_Send((Object)send3482, (Object)SMB__plus, 1, send3485);
send3487 = (Object)new_AST_Send((Object)send3481, (Object)SMB__plus, 1, send3486);
smallint1605 = (Object)new_Type_SmallInt(100);
constant2122 = (Object)new_AST_Constant((Object)smallint1605);
send3488 = (Object)new_AST_Send((Object)localvariable558, (Object)SMB_at_, 1, constant2122);
send3489 = (Object)new_AST_Send((Object)send3487, (Object)SMB__plus, 1, send3488);
method1255 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array532, 10, assign340, send3460, send3461, send3464, send3467, send3471, send3474, send3477, send3480, send3489);
symbol1052 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure1231 = (Object)new_Runtime_MethodClosure(method1255);
store_method((Type_Class)class154, (Type_Symbol)symbol1052, (Runtime_MethodClosure)methodclosure1231);

// BridgeTest>>tmFibonacci
method1256 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol1049 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure1232 = (Object)new_Runtime_MethodClosure(method1256);
store_method((Type_Class)class154, (Type_Symbol)symbol1049, (Runtime_MethodClosure)methodclosure1232);

// BridgeTest>>tmCharacterEquals
character159 = (Object)new_Type_Character(L'C');
constant2123 = (Object)new_AST_Constant((Object)character159);
character160 = (Object)new_Type_Character(L'C');
constant2124 = (Object)new_AST_Constant((Object)character160);
send3490 = (Object)new_AST_Send((Object)constant2123, (Object)SMB__equal, 1, constant2124);
method1257 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3490);
symbol1042 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure1233 = (Object)new_Runtime_MethodClosure(method1257);
store_method((Type_Class)class154, (Type_Symbol)symbol1042, (Runtime_MethodClosure)methodclosure1233);

// BridgeTest>>tmSimpleBasicArithmetik
smallint1606 = (Object)new_Type_SmallInt(1);
constant2125 = (Object)new_AST_Constant((Object)smallint1606);
smallint1607 = (Object)new_Type_SmallInt(2);
constant2126 = (Object)new_AST_Constant((Object)smallint1607);
send3491 = (Object)new_AST_Send((Object)constant2125, (Object)SMB__plus, 1, constant2126);
smallint1608 = (Object)new_Type_SmallInt(2);
constant2127 = (Object)new_AST_Constant((Object)smallint1608);
send3492 = (Object)new_AST_Send((Object)send3491, (Object)SMB__plus, 1, constant2127);
smallint1609 = (Object)new_Type_SmallInt(5);
constant2128 = (Object)new_AST_Constant((Object)smallint1609);
send3493 = (Object)new_AST_Send((Object)send3492, (Object)SMB__times, 1, constant2128);
method1258 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3493);
symbol1034 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure1234 = (Object)new_Runtime_MethodClosure(method1258);
store_method((Type_Class)class154, (Type_Symbol)symbol1034, (Runtime_MethodClosure)methodclosure1234);

// BridgeTest>>tmSymbolEquals
constant2129 = (Object)new_AST_Constant((Object)symbol1074);
constant2130 = (Object)new_AST_Constant((Object)symbol1074);
send3494 = (Object)new_AST_Send((Object)constant2129, (Object)SMB__equal, 1, constant2130);
method1259 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send3494);
symbol1062 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure1235 = (Object)new_Runtime_MethodClosure(method1259);
store_method((Type_Class)class154, (Type_Symbol)symbol1062, (Runtime_MethodClosure)methodclosure1235);

// BridgeTest>>tmSimpleInstanceCreation
localvariable560 = (Object)new_AST_Variable_named(L"instance");
array534 = (Object)new_Type_Array_with(1, localvariable560);
send3495 = (Object)new_AST_Send((Object)classreference152, (Object)SMB_basicNew, 0);
assign341 = (Object)new_AST_Assign((Object)localvariable560, (Object)send3495);
localvariable561 = (Object)new_AST_Variable_named(L"receiver");
array535 = (Object)new_Type_Array_with(1, localvariable561);
smallint1610 = (Object)new_Type_SmallInt(1);
constant2131 = (Object)new_AST_Constant((Object)smallint1610);
send3496 = (Object)new_AST_Send((Object)localvariable561, (Object)symbol1067, 1, constant2131);
smallint1611 = (Object)new_Type_SmallInt(2);
constant2132 = (Object)new_AST_Constant((Object)smallint1611);
send3497 = (Object)new_AST_Send((Object)localvariable561, (Object)symbol1069, 1, constant2132);
smallint1612 = (Object)new_Type_SmallInt(3);
constant2133 = (Object)new_AST_Constant((Object)smallint1612);
send3498 = (Object)new_AST_Send((Object)localvariable561, (Object)symbol1072, 1, constant2133);
block245 = (Object)new_AST_Block_with((Type_Array)array535, (Type_Array)empty_Type_Array, 1, 3, send3496, send3497, send3498);
send3499 = (Object)new_AST_Send((Object)block245, (Object)SMB_value_, 1, localvariable560);
send3500 = (Object)new_AST_Send((Object)localvariable560, (Object)symbol1065, 0);
smallint1613 = (Object)new_Type_SmallInt(1);
constant2134 = (Object)new_AST_Constant((Object)smallint1613);
send3501 = (Object)new_AST_Send((Object)send3500, (Object)SMB__equal, 1, constant2134);
send3502 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3501);
send3503 = (Object)new_AST_Send((Object)localvariable560, (Object)symbol1068, 0);
smallint1614 = (Object)new_Type_SmallInt(2);
constant2135 = (Object)new_AST_Constant((Object)smallint1614);
send3504 = (Object)new_AST_Send((Object)send3503, (Object)SMB__equal, 1, constant2135);
send3505 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3504);
send3506 = (Object)new_AST_Send((Object)localvariable560, (Object)symbol1073, 0);
smallint1615 = (Object)new_Type_SmallInt(3);
constant2136 = (Object)new_AST_Constant((Object)smallint1615);
send3507 = (Object)new_AST_Send((Object)send3506, (Object)SMB__equal, 1, constant2136);
send3508 = (Object)new_AST_Send((Object)Self, (Object)symbol1053, 1, send3507);
send3509 = (Object)new_AST_Send((Object)localvariable560, (Object)symbol1065, 0);
send3510 = (Object)new_AST_Send((Object)localvariable560, (Object)symbol1068, 0);
send3511 = (Object)new_AST_Send((Object)send3509, (Object)SMB__plus, 1, send3510);
send3512 = (Object)new_AST_Send((Object)localvariable560, (Object)symbol1073, 0);
send3513 = (Object)new_AST_Send((Object)send3511, (Object)SMB__plus, 1, send3512);
method1260 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array534, 6, assign341, send3499, send3502, send3505, send3508, send3513);
symbol1054 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure1236 = (Object)new_Runtime_MethodClosure(method1260);
store_method((Type_Class)class154, (Type_Symbol)symbol1054, (Runtime_MethodClosure)methodclosure1236);
classreference154 = (Object)new_Organization_ClassReference((Type_Class)class154);
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object send3514 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1050, 0);
Object result = (Object)Eval((Object)send3514);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object send3515 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1029, 0);
Object result = (Object)Eval((Object)send3515);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
Object send3516 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1059, 0);
Object result = (Object)Eval((Object)send3516);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object send3517 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1043, 0);
Object result = (Object)Eval((Object)send3517);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object send3518 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1040, 0);
Object result = (Object)Eval((Object)send3518);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object send3519 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1042, 0);
Object result = (Object)Eval((Object)send3519);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
Object send3520 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1041, 0);
Object result = (Object)Eval((Object)send3520);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object send3521 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1037, 0);
Object result = (Object)Eval((Object)send3521);
ASSERT_EMPTY_STACK
Object symbol1078 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol1078);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object send3522 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1048, 0);
Object result = (Object)Eval((Object)send3522);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object send3523 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1063, 0);
Object result = (Object)Eval((Object)send3523);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object smallint1616 = (Object)new_Type_SmallInt(1);
Object constant2137 = (Object)new_AST_Constant((Object)smallint1616);
Object send3524 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1044, 1, constant2137);
Object result = (Object)Eval((Object)send3524);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object string299 = (Object)new_Type_String(L"asdf");
Object constant2138 = (Object)new_AST_Constant((Object)string299);
Object string300 = (Object)new_Type_String(L"asdf");
Object constant2139 = (Object)new_AST_Constant((Object)string300);
Object string301 = (Object)new_Type_String(L"df");
Object constant2140 = (Object)new_AST_Constant((Object)string301);
Object send3525 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1030, 3, constant2138, constant2139, constant2140);
Object result = (Object)Eval((Object)send3525);
ASSERT_EMPTY_STACK
Object string302 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string302);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object send3526 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1038, 0);
Object result = (Object)Eval((Object)send3526);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object send3527 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1036, 0);
Object result = (Object)Eval((Object)send3527);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object send3528 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1056, 0);
Object result = (Object)Eval((Object)send3528);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object send3529 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1045, 0);
Object result = (Object)Eval((Object)send3529);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object send3530 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1061, 0);
Object result = (Object)Eval((Object)send3530);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object send3531 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1047, 0);
Object result = (Object)Eval((Object)send3531);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
Object send3532 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1034, 0);
Object result = (Object)Eval((Object)send3532);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object send3533 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1031, 0);
Object result = (Object)Eval((Object)send3533);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
Object send3534 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1046, 0);
Object result = (Object)Eval((Object)send3534);
ASSERT_EMPTY_STACK
Object string303 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string303);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object send3535 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1039, 0);
Object result = (Object)Eval((Object)send3535);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object send3536 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1058, 0);
Object result = (Object)Eval((Object)send3536);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol1074);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
Object send3537 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1057, 0);
Object result = (Object)Eval((Object)send3537);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object send3538 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1062, 0);
Object result = (Object)Eval((Object)send3538);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object send3539 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1053, 1, True_Const);
Object result = (Object)Eval((Object)send3539);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object send3540 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1049, 0);
Object result = (Object)Eval((Object)send3540);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVar)
/*
tmClassInstVar
	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
Object send3541 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1033, 0);
Object result = (Object)Eval((Object)send3541);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSide)
/*
tmClassSide
	self assert: Object class class = Metaclass.
	^ StandardTestClass aClassSideMethod
*/
Object send3542 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1035, 0);
Object result = (Object)Eval((Object)send3542);
ASSERT_EMPTY_STACK
Object string304 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string304);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send3543 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1054, 0);
Object result = (Object)Eval((Object)send3543);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2
*/
Object send3544 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1060, 0);
Object result = (Object)Eval((Object)send3544);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
	self assert: instance test = 100
*/
Object send3545 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1028, 0);
Object result = (Object)Eval((Object)send3545);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send3546 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1055, 0);
Object result = (Object)Eval((Object)send3546);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 100 put: 100.
	self assert: (instance at: 1) = 1.	"sample"
	self assert: (instance at: 100) = 100.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
Object send3547 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1052, 0);
Object result = (Object)Eval((Object)send3547);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
    Test_Class = (Type_Class)class154;
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmSymbolCharacterEquals);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmClassSide);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmSuperClassSuperSend);
    RUN_TEST(AutoGenTest_tmClassInstVar);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmCharacterStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmSuperClass);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmBooleanSymbolEquals);
})