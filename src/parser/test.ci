// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
Object classreference201;
Object send5035;
Object symbol2381;
Object send5036;
Object method1683;
Object symbol2325;
Object methodclosure1635;
Object localvariable728;
Object array716;
Object send5037;
Object send5038;
Object method1684;
Object symbol2326;
Object methodclosure1636;
Object objectlayout244;
Object instancevariable833;
Object instancevariable834;
Object instancevariable835;
Object symbol2321;
Object objectlayout245;
Object instancevariable836;
Object instancevariable837;
Object instancevariable838;
Object class167;
Object classclass127;
Object classreference202;
Object classreference203;
Object classreference204;
Object objectlayout246;
Object instancevariable839;
Object instancevariable840;
Object instancevariable841;
Object instancevariable842;
Object instancevariable843;
Object symbol2379;
Object objectlayout247;
Object instancevariable844;
Object instancevariable845;
Object class168;
Object classclass128;
Object method1685;
Object symbol2374;
Object methodclosure1637;
Object localvariable729;
Object array717;
Object assign487;
Object method1686;
Object symbol2378;
Object methodclosure1638;
Object method1687;
Object symbol2377;
Object methodclosure1639;
Object localvariable730;
Object array718;
Object assign488;
Object method1688;
Object symbol2375;
Object methodclosure1640;
Object smallint2063;
Object constant2788;
Object method1689;
Object symbol2380;
Object methodclosure1641;
Object localvariable731;
Object array719;
Object assign489;
Object method1690;
Object methodclosure1642;
Object method1691;
Object methodclosure1643;
Object objectlayout248;
Object instancevariable846;
Object instancevariable847;
Object instancevariable848;
Object instancevariable849;
Object symbol2349;
Object objectlayout249;
Object instancevariable850;
Object class169;
Object classclass129;
Object method1692;
Object symbol2376;
Object methodclosure1644;
Object localvariable732;
Object array720;
Object assign490;
Object method1693;
Object symbol2373;
Object methodclosure1645;
Object smallint2064;
Object constant2789;
Object super28;
Object send5039;
Object method1694;
Object methodclosure1646;
Object method1695;
Object methodclosure1647;
Object localvariable733;
Object array721;
Object assign491;
Object method1696;
Object methodclosure1648;
Object classreference205;
Object objectlayout250;
Object instancevariable851;
Object instancevariable852;
Object instancevariable853;
Object symbol2331;
Object objectlayout251;
Object instancevariable854;
Object class170;
Object classclass130;
Object localvariable734;
Object array722;
Object smallint2065;
Object constant2790;
Object send5040;
Object method1697;
Object symbol2338;
Object methodclosure1649;
Object method1698;
Object symbol2358;
Object methodclosure1650;
Object character238;
Object constant2791;
Object method1699;
Object symbol2351;
Object methodclosure1651;
Object symbol2382;
Object constant2792;
Object character239;
Object constant2793;
Object send5041;
Object method1700;
Object symbol2363;
Object methodclosure1652;
Object send5042;
Object method1701;
Object symbol2333;
Object methodclosure1653;
Object smallint2066;
Object constant2794;
Object smallint2067;
Object constant2795;
Object send5043;
Object method1702;
Object symbol2353;
Object methodclosure1654;
Object string411;
Object constant2796;
Object method1703;
Object symbol2345;
Object methodclosure1655;
Object localvariable735;
Object localvariable736;
Object localvariable737;
Object array723;
Object send5044;
Object send5045;
Object method1704;
Object symbol2365;
Object methodclosure1656;
Object string412;
Object constant2797;
Object string413;
Object constant2798;
Object send5046;
Object method1705;
Object symbol2335;
Object methodclosure1657;
Object localvariable738;
Object array724;
Object objectlayout252;
Object instancevariable855;
Object instancevariable856;
Object instancevariable857;
Object symbol2343;
Object arraylayout28;
Object instancevariable858;
Object instancevariable859;
Object instancevariable860;
Object instancevariable861;
Object class171;
Object classclass131;
Object localvariable739;
Object array725;
Object assign492;
Object method1706;
Object methodclosure1658;
Object method1707;
Object methodclosure1659;
Object method1708;
Object methodclosure1660;
Object localvariable740;
Object array726;
Object assign493;
Object method1709;
Object methodclosure1661;
Object localvariable741;
Object array727;
Object assign494;
Object method1710;
Object methodclosure1662;
Object method1711;
Object methodclosure1663;
Object classreference206;
Object smallint2068;
Object constant2799;
Object send5047;
Object assign495;
Object smallint2069;
Object constant2800;
Object smallint2070;
Object constant2801;
Object send5048;
Object smallint2071;
Object constant2802;
Object smallint2072;
Object constant2803;
Object send5049;
Object symbol2352;
Object smallint2073;
Object constant2804;
Object send5050;
Object smallint2074;
Object constant2805;
Object send5051;
Object send5052;
Object smallint2075;
Object constant2806;
Object send5053;
Object smallint2076;
Object constant2807;
Object send5054;
Object send5055;
Object localvariable742;
Object array728;
Object smallint2077;
Object constant2808;
Object send5056;
Object smallint2078;
Object constant2809;
Object send5057;
Object smallint2079;
Object constant2810;
Object send5058;
Object block334;
Object send5059;
Object send5060;
Object smallint2080;
Object constant2811;
Object send5061;
Object send5062;
Object send5063;
Object smallint2081;
Object constant2812;
Object send5064;
Object send5065;
Object send5066;
Object smallint2082;
Object constant2813;
Object send5067;
Object send5068;
Object send5069;
Object send5070;
Object send5071;
Object smallint2083;
Object constant2814;
Object send5072;
Object send5073;
Object send5074;
Object send5075;
Object smallint2084;
Object constant2815;
Object send5076;
Object send5077;
Object method1712;
Object symbol2355;
Object methodclosure1664;
Object method1713;
Object symbol2347;
Object methodclosure1665;
Object character240;
Object constant2816;
Object character241;
Object constant2817;
Object send5078;
Object method1714;
Object symbol2367;
Object methodclosure1666;
Object character242;
Object constant2818;
Object string414;
Object constant2819;
Object send5079;
Object method1715;
Object symbol2340;
Object methodclosure1667;
Object localvariable743;
Object array729;
Object objectlayout253;
Object instancevariable862;
Object instancevariable863;
Object instancevariable864;
Object instancevariable865;
Object instancevariable866;
Object symbol2336;
Object objectlayout254;
Object instancevariable867;
Object instancevariable868;
Object instancevariable869;
Object instancevariable870;
Object class172;
Object classclass132;
Object string415;
Object constant2820;
Object method1716;
Object symbol2371;
Object methodclosure1668;
Object smallint2085;
Object constant2821;
Object assign496;
Object method1717;
Object symbol2372;
Object methodclosure1669;
Object localvariable744;
Object array730;
Object assign497;
Object method1718;
Object methodclosure1670;
Object method1719;
Object methodclosure1671;
Object method1720;
Object methodclosure1672;
Object localvariable745;
Object array731;
Object assign498;
Object method1721;
Object methodclosure1673;
Object localvariable746;
Object array732;
Object assign499;
Object method1722;
Object methodclosure1674;
Object method1723;
Object methodclosure1675;
Object classreference207;
Object send5080;
Object assign500;
Object localvariable747;
Object array733;
Object smallint2086;
Object constant2822;
Object send5081;
Object smallint2087;
Object constant2823;
Object send5082;
Object smallint2088;
Object constant2824;
Object send5083;
Object block335;
Object send5084;
Object send5085;
Object smallint2089;
Object constant2825;
Object send5086;
Object send5087;
Object send5088;
Object smallint2090;
Object constant2826;
Object send5089;
Object send5090;
Object send5091;
Object smallint2091;
Object constant2827;
Object send5092;
Object send5093;
Object send5094;
Object send5095;
Object send5096;
Object send5097;
Object send5098;
Object method1724;
Object symbol2337;
Object methodclosure1676;
Object smallint2092;
Object constant2828;
Object method1725;
Object symbol2360;
Object methodclosure1677;
Object smallint2093;
Object constant2829;
Object method1726;
Object symbol2357;
Object methodclosure1678;
Object smallint2094;
Object constant2830;
Object smallint2095;
Object constant2831;
Object send5099;
Object method1727;
Object symbol2369;
Object methodclosure1679;
Object send5100;
Object send5101;
Object send5102;
Object send5103;
Object send5104;
Object send5105;
Object send5106;
Object send5107;
Object send5108;
Object send5109;
Object send5110;
Object send5111;
Object smallint2096;
Object constant2832;
Object send5112;
Object smallint2097;
Object constant2833;
Object send5113;
Object smallint2098;
Object constant2834;
Object send5114;
Object send5115;
Object smallint2099;
Object constant2835;
Object send5116;
Object send5117;
Object send5118;
Object smallint2100;
Object constant2836;
Object send5119;
Object send5120;
Object send5121;
Object smallint2101;
Object constant2837;
Object send5122;
Object send5123;
Object method1728;
Object symbol2350;
Object methodclosure1680;
Object variable44;
Object array734;
Object smallint2102;
Object constant2838;
Object smallint2103;
Object constant2839;
Object send5124;
Object smallint2104;
Object constant2840;
Object send5125;
Object block336;
Object smallint2105;
Object constant2841;
Object send5126;
Object block337;
Object send5127;
Object block338;
Object send5128;
Object method1729;
Object symbol2342;
Object methodclosure1681;
Object symbol2383;
Object constant2842;
Object constant2843;
Object send5129;
Object method1730;
Object symbol2370;
Object methodclosure1682;
Object send5130;
Object method1731;
Object symbol2339;
Object methodclosure1683;
Object localvariable748;
Object array735;
Object smallint2106;
Object constant2844;
Object assign501;
Object method1732;
Object symbol2362;
Object methodclosure1684;
Object smallint2107;
Object constant2845;
Object smallint2108;
Object constant2846;
Object send5131;
Object method1733;
Object symbol2359;
Object methodclosure1685;
Object send5132;
Object method1734;
Object symbol2332;
Object methodclosure1686;
Object localvariable749;
Object array736;
Object symbol2384;
Object send5133;
Object block339;
Object send5134;
Object method1735;
Object methodclosure1687;
Object localvariable750;
Object array737;
Object send5135;
Object assign502;
Object localvariable751;
Object array738;
Object smallint2109;
Object constant2847;
Object send5136;
Object smallint2110;
Object constant2848;
Object send5137;
Object smallint2111;
Object constant2849;
Object send5138;
Object block340;
Object send5139;
Object send5140;
Object smallint2112;
Object constant2850;
Object send5141;
Object send5142;
Object send5143;
Object smallint2113;
Object constant2851;
Object send5144;
Object send5145;
Object send5146;
Object smallint2114;
Object constant2852;
Object send5147;
Object send5148;
Object send5149;
Object send5150;
Object send5151;
Object send5152;
Object send5153;
Object method1736;
Object symbol2344;
Object methodclosure1688;
Object send5154;
Object send5155;
Object send5156;
Object send5157;
Object send5158;
Object method1737;
Object symbol2364;
Object methodclosure1689;
Object method1738;
Object symbol2334;
Object methodclosure1690;
Object localvariable752;
Object array739;
Object send5159;
Object assign503;
Object smallint2115;
Object constant2853;
Object send5160;
Object send5161;
Object smallint2116;
Object constant2854;
Object send5162;
Object send5163;
Object send5164;
Object send5165;
Object send5166;
Object smallint2117;
Object constant2855;
Object send5167;
Object send5168;
Object smallint2118;
Object constant2856;
Object send5169;
Object send5170;
Object send5171;
Object smallint2119;
Object constant2857;
Object send5172;
Object send5173;
Object method1739;
Object symbol2354;
Object methodclosure1691;
Object constant2858;
Object method1740;
Object symbol2346;
Object methodclosure1692;
Object smallint2120;
Object constant2859;
Object smallint2121;
Object constant2860;
Object send5174;
Object smallint2122;
Object constant2861;
Object send5175;
Object smallint2123;
Object constant2862;
Object send5176;
Object method1741;
Object symbol2366;
Object methodclosure1693;
Object localvariable753;
Object array740;
Object send5177;
Object assign504;
Object send5178;
Object smallint2124;
Object constant2863;
Object send5179;
Object send5180;
Object method1742;
Object symbol2356;
Object methodclosure1694;
Object symbol2385;
Object constant2864;
Object send5181;
Object method1743;
Object symbol2348;
Object methodclosure1695;
Object symbol2386;
Object smallint2125;
Object constant2865;
Object send5182;
Object symbol2387;
Object send5183;
Object smallint2126;
Object constant2866;
Object send5184;
Object send5185;
Object method1744;
Object symbol2368;
Object methodclosure1696;
Object smallint2127;
Object constant2867;
Object smallint2128;
Object constant2868;
Object send5186;
Object method1745;
Object symbol2341;
Object methodclosure1697;
Object smallint2129;
Object constant2869;
Object smallint2130;
Object constant2870;
Object send5187;
Object method1746;
Object symbol2361;
Object methodclosure1698;
Object classreference208;
Object classreference209;

void create_ast() {
classreference201 = (Object)new_Organization_ClassReference((Type_Class)Metaclass);

// Behavior>>new
send5035 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew, 0);
symbol2381 = (Object)new_Type_Symbol_cached(L"initialize");
send5036 = (Object)new_AST_Send((Object)send5035, (Object)symbol2381, 0);
method1683 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5036);
symbol2325 = (Object)new_Type_Symbol_cached(L"new");
methodclosure1635 = (Object)new_Runtime_MethodClosure(method1683);
store_method((Type_Class)Behaviour, (Type_Symbol)symbol2325, (Runtime_MethodClosure)methodclosure1635);

// Behavior>>new:
localvariable728 = (Object)new_AST_Variable_named(L"sizeRequested");
array716 = (Object)new_Type_Array_with(1, (Object)localvariable728);
send5037 = (Object)new_AST_Send((Object)Self, (Object)SMB_basicNew_, 1, (Object)localvariable728);
send5038 = (Object)new_AST_Send((Object)send5037, (Object)symbol2381, 0);
method1684 = (Object)new_AST_Method_with((Type_Array)array716, (Type_Array)empty_Type_Array, 1, send5038);
symbol2326 = (Object)new_Type_Symbol_cached(L"new:");
methodclosure1636 = (Object)new_Runtime_MethodClosure(method1684);
store_method((Type_Class)Behaviour, (Type_Symbol)symbol2326, (Runtime_MethodClosure)methodclosure1636);
objectlayout244 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable833 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout244)->values[0] = instancevariable833;
instancevariable834 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout244)->values[1] = instancevariable834;
instancevariable835 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout244)->values[2] = instancevariable835;
symbol2321 = (Object)new_Type_Symbol_cached(L"ClassDescription");
objectlayout245 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable836 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout245)->values[0] = instancevariable836;
instancevariable837 = (Object)new_AST_InstVariable(1, L"instanceVariables");
((Type_Array)objectlayout245)->values[1] = instancevariable837;
instancevariable838 = (Object)new_AST_InstVariable(2, L"organization");
((Type_Array)objectlayout245)->values[2] = instancevariable838;
class167 = (Object)new_Class_withMeta((Object)Behaviour, objectlayout245, objectlayout244);
((Type_Class)class167)->name = (Type_Symbol)symbol2321;
classclass127 = (Object)HEADER(class167);
classreference202 = (Object)new_Organization_ClassReference((Type_Class)class167);
classreference203 = (Object)new_Organization_ClassReference((Type_Class)Behaviour);
classreference204 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
objectlayout246 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable839 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout246)->values[0] = instancevariable839;
instancevariable840 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout246)->values[1] = instancevariable840;
instancevariable841 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout246)->values[2] = instancevariable841;
instancevariable842 = (Object)new_AST_InstVariable(3, L"a");
((Type_Array)objectlayout246)->values[3] = instancevariable842;
instancevariable843 = (Object)new_AST_InstVariable(4, L"b");
((Type_Array)objectlayout246)->values[4] = instancevariable843;
symbol2379 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout247 = (Object)create_type_with_vars(Type_ObjectLayout, 2);
instancevariable844 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout247)->values[0] = instancevariable844;
instancevariable845 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)objectlayout247)->values[1] = instancevariable845;
class168 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout247, objectlayout246);
((Type_Class)class168)->name = (Type_Symbol)symbol2379;
classclass128 = (Object)HEADER(class168);

// SuperClassTestClass class>>b
method1685 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable843);
symbol2374 = (Object)new_Type_Symbol_cached(L"b");
methodclosure1637 = (Object)new_Runtime_MethodClosure(method1685);
store_method((Type_Class)classclass128, (Type_Symbol)symbol2374, (Runtime_MethodClosure)methodclosure1637);

// SuperClassTestClass class>>b:
localvariable729 = (Object)new_AST_Variable_named(L"anObject");
array717 = (Object)new_Type_Array_with(1, (Object)localvariable729);
assign487 = (Object)new_AST_Assign((Object)instancevariable843, (Object)localvariable729);
method1686 = (Object)new_AST_Method_with((Type_Array)array717, (Type_Array)empty_Type_Array, 2, assign487, Self);
symbol2378 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure1638 = (Object)new_Runtime_MethodClosure(method1686);
store_method((Type_Class)classclass128, (Type_Symbol)symbol2378, (Runtime_MethodClosure)methodclosure1638);

// SuperClassTestClass class>>a
method1687 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable842);
symbol2377 = (Object)new_Type_Symbol_cached(L"a");
methodclosure1639 = (Object)new_Runtime_MethodClosure(method1687);
store_method((Type_Class)classclass128, (Type_Symbol)symbol2377, (Runtime_MethodClosure)methodclosure1639);

// SuperClassTestClass class>>a:
localvariable730 = (Object)new_AST_Variable_named(L"anObject");
array718 = (Object)new_Type_Array_with(1, (Object)localvariable730);
assign488 = (Object)new_AST_Assign((Object)instancevariable842, (Object)localvariable730);
method1688 = (Object)new_AST_Method_with((Type_Array)array718, (Type_Array)empty_Type_Array, 2, assign488, Self);
symbol2375 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure1640 = (Object)new_Runtime_MethodClosure(method1688);
store_method((Type_Class)classclass128, (Type_Symbol)symbol2375, (Runtime_MethodClosure)methodclosure1640);

// SuperClassTestClass>>test
smallint2063 = (Object)new_Type_SmallInt(10);
constant2788 = (Object)new_AST_Constant((Object)smallint2063);
method1689 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2788);
symbol2380 = (Object)new_Type_Symbol_cached(L"test");
methodclosure1641 = (Object)new_Runtime_MethodClosure(method1689);
store_method((Type_Class)class168, (Type_Symbol)symbol2380, (Runtime_MethodClosure)methodclosure1641);

// SuperClassTestClass>>a:
localvariable731 = (Object)new_AST_Variable_named(L"anObject");
array719 = (Object)new_Type_Array_with(1, (Object)localvariable731);
assign489 = (Object)new_AST_Assign((Object)instancevariable845, (Object)localvariable731);
method1690 = (Object)new_AST_Method_with((Type_Array)array719, (Type_Array)empty_Type_Array, 2, assign489, Self);
methodclosure1642 = (Object)new_Runtime_MethodClosure(method1690);
store_method((Type_Class)class168, (Type_Symbol)symbol2375, (Runtime_MethodClosure)methodclosure1642);

// SuperClassTestClass>>a
method1691 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable845);
methodclosure1643 = (Object)new_Runtime_MethodClosure(method1691);
store_method((Type_Class)class168, (Type_Symbol)symbol2377, (Runtime_MethodClosure)methodclosure1643);
objectlayout248 = (Object)create_type_with_vars(Type_ObjectLayout, 4);
instancevariable846 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout248)->values[0] = instancevariable846;
instancevariable847 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout248)->values[1] = instancevariable847;
instancevariable848 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout248)->values[2] = instancevariable848;
instancevariable849 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)objectlayout248)->values[3] = instancevariable849;
symbol2349 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout249 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
((Type_Array)objectlayout249)->values[0] = instancevariable844;
((Type_Array)objectlayout249)->values[1] = instancevariable845;
instancevariable850 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)objectlayout249)->values[2] = instancevariable850;
class169 = (Object)new_Class_withMeta((Object)class168, objectlayout249, objectlayout248);
((Type_Class)class169)->name = (Type_Symbol)symbol2349;
classclass129 = (Object)HEADER(class169);

// ChildClassTestClass class>>c
method1692 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable849);
symbol2376 = (Object)new_Type_Symbol_cached(L"c");
methodclosure1644 = (Object)new_Runtime_MethodClosure(method1692);
store_method((Type_Class)classclass129, (Type_Symbol)symbol2376, (Runtime_MethodClosure)methodclosure1644);

// ChildClassTestClass class>>c:
localvariable732 = (Object)new_AST_Variable_named(L"anObject");
array720 = (Object)new_Type_Array_with(1, (Object)localvariable732);
assign490 = (Object)new_AST_Assign((Object)instancevariable849, (Object)localvariable732);
method1693 = (Object)new_AST_Method_with((Type_Array)array720, (Type_Array)empty_Type_Array, 2, assign490, Self);
symbol2373 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure1645 = (Object)new_Runtime_MethodClosure(method1693);
store_method((Type_Class)classclass129, (Type_Symbol)symbol2373, (Runtime_MethodClosure)methodclosure1645);

// ChildClassTestClass>>test
smallint2064 = (Object)new_Type_SmallInt(10);
constant2789 = (Object)new_AST_Constant((Object)smallint2064);
super28 = (Object)new_AST_Super(symbol2380, 0);
send5039 = (Object)new_AST_Send((Object)constant2789, (Object)SMB__times, 1, (Object)super28);
method1694 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5039);
methodclosure1646 = (Object)new_Runtime_MethodClosure(method1694);
store_method((Type_Class)class169, (Type_Symbol)symbol2380, (Runtime_MethodClosure)methodclosure1646);

// ChildClassTestClass>>b
method1695 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable850);
methodclosure1647 = (Object)new_Runtime_MethodClosure(method1695);
store_method((Type_Class)class169, (Type_Symbol)symbol2374, (Runtime_MethodClosure)methodclosure1647);

// ChildClassTestClass>>b:
localvariable733 = (Object)new_AST_Variable_named(L"anObject");
array721 = (Object)new_Type_Array_with(1, (Object)localvariable733);
assign491 = (Object)new_AST_Assign((Object)instancevariable850, (Object)localvariable733);
method1696 = (Object)new_AST_Method_with((Type_Array)array721, (Type_Array)empty_Type_Array, 2, assign491, Self);
methodclosure1648 = (Object)new_Runtime_MethodClosure(method1696);
store_method((Type_Class)class169, (Type_Symbol)symbol2378, (Runtime_MethodClosure)methodclosure1648);
classreference205 = (Object)new_Organization_ClassReference((Type_Class)class169);
objectlayout250 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable851 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout250)->values[0] = instancevariable851;
instancevariable852 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout250)->values[1] = instancevariable852;
instancevariable853 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout250)->values[2] = instancevariable853;
symbol2331 = (Object)new_Type_Symbol_cached(L"BridgeTest");
objectlayout251 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable854 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout251)->values[0] = instancevariable854;
class170 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout251, objectlayout250);
((Type_Class)class170)->name = (Type_Symbol)symbol2331;
classclass130 = (Object)HEADER(class170);

// BridgeTest>>tmMethodArgument:
localvariable734 = (Object)new_AST_Variable_named(L"arg");
array722 = (Object)new_Type_Array_with(1, (Object)localvariable734);
smallint2065 = (Object)new_Type_SmallInt(1);
constant2790 = (Object)new_AST_Constant((Object)smallint2065);
send5040 = (Object)new_AST_Send((Object)localvariable734, (Object)SMB__plus, 1, (Object)constant2790);
method1697 = (Object)new_AST_Method_with((Type_Array)array722, (Type_Array)empty_Type_Array, 1, send5040);
symbol2338 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure1649 = (Object)new_Runtime_MethodClosure(method1697);
store_method((Type_Class)class170, (Type_Symbol)symbol2338, (Runtime_MethodClosure)methodclosure1649);

// BridgeTest>>tmBooleanFalse
method1698 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol2358 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure1650 = (Object)new_Runtime_MethodClosure(method1698);
store_method((Type_Class)class170, (Type_Symbol)symbol2358, (Runtime_MethodClosure)methodclosure1650);

// BridgeTest>>tmCharacter
character238 = (Object)new_Type_Character(L'C');
constant2791 = (Object)new_AST_Constant((Object)character238);
method1699 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2791);
symbol2351 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure1651 = (Object)new_Runtime_MethodClosure(method1699);
store_method((Type_Class)class170, (Type_Symbol)symbol2351, (Runtime_MethodClosure)methodclosure1651);

// BridgeTest>>tmSymbolCharacterEquals
symbol2382 = (Object)new_Type_Symbol_cached(L"S");
constant2792 = (Object)new_AST_Constant((Object)symbol2382);
character239 = (Object)new_Type_Character(L'S');
constant2793 = (Object)new_AST_Constant((Object)character239);
send5041 = (Object)new_AST_Send((Object)constant2792, (Object)SMB__equal, 1, (Object)constant2793);
method1700 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5041);
symbol2363 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure1652 = (Object)new_Runtime_MethodClosure(method1700);
store_method((Type_Class)class170, (Type_Symbol)symbol2363, (Runtime_MethodClosure)methodclosure1652);

// BridgeTest>>tmClassReferenceReturn
send5042 = (Object)new_AST_Send((Object)classreference201, (Object)SMB_name, 0);
method1701 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5042);
symbol2333 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure1653 = (Object)new_Runtime_MethodClosure(method1701);
store_method((Type_Class)class170, (Type_Symbol)symbol2333, (Runtime_MethodClosure)methodclosure1653);

// BridgeTest>>tmNumberDiv
smallint2066 = (Object)new_Type_SmallInt(4);
constant2794 = (Object)new_AST_Constant((Object)smallint2066);
smallint2067 = (Object)new_Type_SmallInt(2);
constant2795 = (Object)new_AST_Constant((Object)smallint2067);
send5043 = (Object)new_AST_Send((Object)constant2794, (Object)SMB__divide, 1, (Object)constant2795);
method1702 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5043);
symbol2353 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure1654 = (Object)new_Runtime_MethodClosure(method1702);
store_method((Type_Class)class170, (Type_Symbol)symbol2353, (Runtime_MethodClosure)methodclosure1654);

// BridgeTest>>tmString
string411 = (Object)new_Type_String(L"String");
constant2796 = (Object)new_AST_Constant((Object)string411);
method1703 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2796);
symbol2345 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure1655 = (Object)new_Runtime_MethodClosure(method1703);
store_method((Type_Class)class170, (Type_Symbol)symbol2345, (Runtime_MethodClosure)methodclosure1655);

// BridgeTest>>tmMethodArguments:with:with:
localvariable735 = (Object)new_AST_Variable_named(L"arg1");
localvariable736 = (Object)new_AST_Variable_named(L"arg2");
localvariable737 = (Object)new_AST_Variable_named(L"arg3");
array723 = (Object)new_Type_Array_with(3, (Object)localvariable735, (Object)localvariable736, (Object)localvariable737);
send5044 = (Object)new_AST_Send((Object)localvariable735, (Object)SMB__concat, 1, (Object)localvariable736);
send5045 = (Object)new_AST_Send((Object)send5044, (Object)SMB__concat, 1, (Object)localvariable737);
method1704 = (Object)new_AST_Method_with((Type_Array)array723, (Type_Array)empty_Type_Array, 1, send5045);
symbol2365 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure1656 = (Object)new_Runtime_MethodClosure(method1704);
store_method((Type_Class)class170, (Type_Symbol)symbol2365, (Runtime_MethodClosure)methodclosure1656);

// BridgeTest>>tmStringEquals
string412 = (Object)new_Type_String(L"String");
constant2797 = (Object)new_AST_Constant((Object)string412);
string413 = (Object)new_Type_String(L"String");
constant2798 = (Object)new_AST_Constant((Object)string413);
send5046 = (Object)new_AST_Send((Object)constant2797, (Object)SMB__equal, 1, (Object)constant2798);
method1705 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5046);
symbol2335 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure1657 = (Object)new_Runtime_MethodClosure(method1705);
store_method((Type_Class)class170, (Type_Symbol)symbol2335, (Runtime_MethodClosure)methodclosure1657);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable738 = (Object)new_AST_Variable_named(L"instance");
array724 = (Object)new_Type_Array_with(1, (Object)localvariable738);
objectlayout252 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable855 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout252)->values[0] = instancevariable855;
instancevariable856 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout252)->values[1] = instancevariable856;
instancevariable857 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout252)->values[2] = instancevariable857;
symbol2343 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout28 = (Object)create_type_with_vars(Type_ArrayLayout, 4);
instancevariable858 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)arraylayout28)->values[0] = instancevariable858;
instancevariable859 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)arraylayout28)->values[1] = instancevariable859;
instancevariable860 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)arraylayout28)->values[2] = instancevariable860;
instancevariable861 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)arraylayout28)->values[3] = instancevariable861;
class171 = (Object)new_Class_withMeta((Object)Type_Object_Class, arraylayout28, objectlayout252);
((Type_Class)class171)->name = (Type_Symbol)symbol2343;
classclass131 = (Object)HEADER(class171);

// StandardVariableTestClass>>c:
localvariable739 = (Object)new_AST_Variable_named(L"anObject");
array725 = (Object)new_Type_Array_with(1, (Object)localvariable739);
assign492 = (Object)new_AST_Assign((Object)instancevariable861, (Object)localvariable739);
method1706 = (Object)new_AST_Method_with((Type_Array)array725, (Type_Array)empty_Type_Array, 2, assign492, Self);
methodclosure1658 = (Object)new_Runtime_MethodClosure(method1706);
store_method((Type_Class)class171, (Type_Symbol)symbol2373, (Runtime_MethodClosure)methodclosure1658);

// StandardVariableTestClass>>c
method1707 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable861);
methodclosure1659 = (Object)new_Runtime_MethodClosure(method1707);
store_method((Type_Class)class171, (Type_Symbol)symbol2376, (Runtime_MethodClosure)methodclosure1659);

// StandardVariableTestClass>>b
method1708 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable860);
methodclosure1660 = (Object)new_Runtime_MethodClosure(method1708);
store_method((Type_Class)class171, (Type_Symbol)symbol2374, (Runtime_MethodClosure)methodclosure1660);

// StandardVariableTestClass>>b:
localvariable740 = (Object)new_AST_Variable_named(L"anObject");
array726 = (Object)new_Type_Array_with(1, (Object)localvariable740);
assign493 = (Object)new_AST_Assign((Object)instancevariable860, (Object)localvariable740);
method1709 = (Object)new_AST_Method_with((Type_Array)array726, (Type_Array)empty_Type_Array, 2, assign493, Self);
methodclosure1661 = (Object)new_Runtime_MethodClosure(method1709);
store_method((Type_Class)class171, (Type_Symbol)symbol2378, (Runtime_MethodClosure)methodclosure1661);

// StandardVariableTestClass>>a:
localvariable741 = (Object)new_AST_Variable_named(L"anObject");
array727 = (Object)new_Type_Array_with(1, (Object)localvariable741);
assign494 = (Object)new_AST_Assign((Object)instancevariable859, (Object)localvariable741);
method1710 = (Object)new_AST_Method_with((Type_Array)array727, (Type_Array)empty_Type_Array, 2, assign494, Self);
methodclosure1662 = (Object)new_Runtime_MethodClosure(method1710);
store_method((Type_Class)class171, (Type_Symbol)symbol2375, (Runtime_MethodClosure)methodclosure1662);

// StandardVariableTestClass>>a
method1711 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable859);
methodclosure1663 = (Object)new_Runtime_MethodClosure(method1711);
store_method((Type_Class)class171, (Type_Symbol)symbol2377, (Runtime_MethodClosure)methodclosure1663);
classreference206 = (Object)new_Organization_ClassReference((Type_Class)class171);
smallint2068 = (Object)new_Type_SmallInt(100);
constant2799 = (Object)new_AST_Constant((Object)smallint2068);
send5047 = (Object)new_AST_Send((Object)classreference206, (Object)SMB_basicNew_, 1, (Object)constant2799);
assign495 = (Object)new_AST_Assign((Object)localvariable738, (Object)send5047);
smallint2069 = (Object)new_Type_SmallInt(1);
constant2800 = (Object)new_AST_Constant((Object)smallint2069);
smallint2070 = (Object)new_Type_SmallInt(1);
constant2801 = (Object)new_AST_Constant((Object)smallint2070);
send5048 = (Object)new_AST_Send((Object)localvariable738, (Object)SMB_at_put_, 2, (Object)constant2800, (Object)constant2801);
smallint2071 = (Object)new_Type_SmallInt(100);
constant2802 = (Object)new_AST_Constant((Object)smallint2071);
smallint2072 = (Object)new_Type_SmallInt(100);
constant2803 = (Object)new_AST_Constant((Object)smallint2072);
send5049 = (Object)new_AST_Send((Object)localvariable738, (Object)SMB_at_put_, 2, (Object)constant2802, (Object)constant2803);
symbol2352 = (Object)new_Type_Symbol_cached(L"assert:");
smallint2073 = (Object)new_Type_SmallInt(1);
constant2804 = (Object)new_AST_Constant((Object)smallint2073);
send5050 = (Object)new_AST_Send((Object)localvariable738, (Object)SMB_at_, 1, (Object)constant2804);
smallint2074 = (Object)new_Type_SmallInt(1);
constant2805 = (Object)new_AST_Constant((Object)smallint2074);
send5051 = (Object)new_AST_Send((Object)send5050, (Object)SMB__equal, 1, (Object)constant2805);
send5052 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5051);
smallint2075 = (Object)new_Type_SmallInt(100);
constant2806 = (Object)new_AST_Constant((Object)smallint2075);
send5053 = (Object)new_AST_Send((Object)localvariable738, (Object)SMB_at_, 1, (Object)constant2806);
smallint2076 = (Object)new_Type_SmallInt(100);
constant2807 = (Object)new_AST_Constant((Object)smallint2076);
send5054 = (Object)new_AST_Send((Object)send5053, (Object)SMB__equal, 1, (Object)constant2807);
send5055 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5054);
localvariable742 = (Object)new_AST_Variable_named(L"receiver");
array728 = (Object)new_Type_Array_with(1, (Object)localvariable742);
smallint2077 = (Object)new_Type_SmallInt(1);
constant2808 = (Object)new_AST_Constant((Object)smallint2077);
send5056 = (Object)new_AST_Send((Object)localvariable742, (Object)symbol2375, 1, (Object)constant2808);
smallint2078 = (Object)new_Type_SmallInt(2);
constant2809 = (Object)new_AST_Constant((Object)smallint2078);
send5057 = (Object)new_AST_Send((Object)localvariable742, (Object)symbol2378, 1, (Object)constant2809);
smallint2079 = (Object)new_Type_SmallInt(3);
constant2810 = (Object)new_AST_Constant((Object)smallint2079);
send5058 = (Object)new_AST_Send((Object)localvariable742, (Object)symbol2373, 1, (Object)constant2810);
block334 = (Object)new_AST_Block_with((Type_Array)array728, (Type_Array)empty_Type_Array, 1, 3, send5056, send5057, send5058);
send5059 = (Object)new_AST_Send((Object)block334, (Object)SMB_value_, 1, (Object)localvariable738);
send5060 = (Object)new_AST_Send((Object)localvariable738, (Object)symbol2377, 0);
smallint2080 = (Object)new_Type_SmallInt(1);
constant2811 = (Object)new_AST_Constant((Object)smallint2080);
send5061 = (Object)new_AST_Send((Object)send5060, (Object)SMB__equal, 1, (Object)constant2811);
send5062 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5061);
send5063 = (Object)new_AST_Send((Object)localvariable738, (Object)symbol2374, 0);
smallint2081 = (Object)new_Type_SmallInt(2);
constant2812 = (Object)new_AST_Constant((Object)smallint2081);
send5064 = (Object)new_AST_Send((Object)send5063, (Object)SMB__equal, 1, (Object)constant2812);
send5065 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5064);
send5066 = (Object)new_AST_Send((Object)localvariable738, (Object)symbol2376, 0);
smallint2082 = (Object)new_Type_SmallInt(3);
constant2813 = (Object)new_AST_Constant((Object)smallint2082);
send5067 = (Object)new_AST_Send((Object)send5066, (Object)SMB__equal, 1, (Object)constant2813);
send5068 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5067);
send5069 = (Object)new_AST_Send((Object)localvariable738, (Object)symbol2377, 0);
send5070 = (Object)new_AST_Send((Object)localvariable738, (Object)symbol2374, 0);
send5071 = (Object)new_AST_Send((Object)localvariable738, (Object)symbol2376, 0);
smallint2083 = (Object)new_Type_SmallInt(1);
constant2814 = (Object)new_AST_Constant((Object)smallint2083);
send5072 = (Object)new_AST_Send((Object)localvariable738, (Object)SMB_at_, 1, (Object)constant2814);
send5073 = (Object)new_AST_Send((Object)send5071, (Object)SMB__plus, 1, (Object)send5072);
send5074 = (Object)new_AST_Send((Object)send5070, (Object)SMB__plus, 1, (Object)send5073);
send5075 = (Object)new_AST_Send((Object)send5069, (Object)SMB__plus, 1, (Object)send5074);
smallint2084 = (Object)new_Type_SmallInt(100);
constant2815 = (Object)new_AST_Constant((Object)smallint2084);
send5076 = (Object)new_AST_Send((Object)localvariable738, (Object)SMB_at_, 1, (Object)constant2815);
send5077 = (Object)new_AST_Send((Object)send5075, (Object)SMB__plus, 1, (Object)send5076);
method1712 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array724, 10, assign495, send5048, send5049, send5052, send5055, send5059, send5062, send5065, send5068, send5077);
symbol2355 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure1664 = (Object)new_Runtime_MethodClosure(method1712);
store_method((Type_Class)class170, (Type_Symbol)symbol2355, (Runtime_MethodClosure)methodclosure1664);

// BridgeTest>>tmBooleanTrue
method1713 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol2347 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure1665 = (Object)new_Runtime_MethodClosure(method1713);
store_method((Type_Class)class170, (Type_Symbol)symbol2347, (Runtime_MethodClosure)methodclosure1665);

// BridgeTest>>tmCharacterEquals
character240 = (Object)new_Type_Character(L'C');
constant2816 = (Object)new_AST_Constant((Object)character240);
character241 = (Object)new_Type_Character(L'C');
constant2817 = (Object)new_AST_Constant((Object)character241);
send5078 = (Object)new_AST_Send((Object)constant2816, (Object)SMB__equal, 1, (Object)constant2817);
method1714 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5078);
symbol2367 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure1666 = (Object)new_Runtime_MethodClosure(method1714);
store_method((Type_Class)class170, (Type_Symbol)symbol2367, (Runtime_MethodClosure)methodclosure1666);

// BridgeTest>>tmCharacterStringEquals
character242 = (Object)new_Type_Character(L'C');
constant2818 = (Object)new_AST_Constant((Object)character242);
string414 = (Object)new_Type_String(L"C");
constant2819 = (Object)new_AST_Constant((Object)string414);
send5079 = (Object)new_AST_Send((Object)constant2818, (Object)SMB__equal, 1, (Object)constant2819);
method1715 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5079);
symbol2340 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure1667 = (Object)new_Runtime_MethodClosure(method1715);
store_method((Type_Class)class170, (Type_Symbol)symbol2340, (Runtime_MethodClosure)methodclosure1667);

// BridgeTest>>tmSimpleInstanceCreation
localvariable743 = (Object)new_AST_Variable_named(L"instance");
array729 = (Object)new_Type_Array_with(1, (Object)localvariable743);
objectlayout253 = (Object)create_type_with_vars(Type_ObjectLayout, 5);
instancevariable862 = (Object)new_AST_InstVariable(0, L"type");
((Type_Array)objectlayout253)->values[0] = instancevariable862;
instancevariable863 = (Object)new_AST_InstVariable(1, L"super");
((Type_Array)objectlayout253)->values[1] = instancevariable863;
instancevariable864 = (Object)new_AST_InstVariable(2, L"method");
((Type_Array)objectlayout253)->values[2] = instancevariable864;
instancevariable865 = (Object)new_AST_InstVariable(3, L"classInstVar");
((Type_Array)objectlayout253)->values[3] = instancevariable865;
instancevariable866 = (Object)new_AST_InstVariable(4, L"instVar");
((Type_Array)objectlayout253)->values[4] = instancevariable866;
symbol2336 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout254 = (Object)create_type_with_vars(Type_ObjectLayout, 4);
instancevariable867 = (Object)new_AST_InstVariable(0, L"uid");
((Type_Array)objectlayout254)->values[0] = instancevariable867;
instancevariable868 = (Object)new_AST_InstVariable(1, L"a");
((Type_Array)objectlayout254)->values[1] = instancevariable868;
instancevariable869 = (Object)new_AST_InstVariable(2, L"b");
((Type_Array)objectlayout254)->values[2] = instancevariable869;
instancevariable870 = (Object)new_AST_InstVariable(3, L"c");
((Type_Array)objectlayout254)->values[3] = instancevariable870;
class172 = (Object)new_Class_withMeta((Object)Type_Object_Class, objectlayout254, objectlayout253);
((Type_Class)class172)->name = (Type_Symbol)symbol2336;
classclass132 = (Object)HEADER(class172);

// StandardTestClass class>>aClassSideMethod
string415 = (Object)new_Type_String(L"a");
constant2820 = (Object)new_AST_Constant((Object)string415);
method1716 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2820);
symbol2371 = (Object)new_Type_Symbol_cached(L"aClassSideMethod");
methodclosure1668 = (Object)new_Runtime_MethodClosure(method1716);
store_method((Type_Class)classclass132, (Type_Symbol)symbol2371, (Runtime_MethodClosure)methodclosure1668);

// StandardTestClass class>>aClassSideMethodWithInstanceVariables
smallint2085 = (Object)new_Type_SmallInt(100);
constant2821 = (Object)new_AST_Constant((Object)smallint2085);
assign496 = (Object)new_AST_Assign((Object)instancevariable865, (Object)constant2821);
method1717 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, assign496, instancevariable865);
symbol2372 = (Object)new_Type_Symbol_cached(L"aClassSideMethodWithInstanceVariables");
methodclosure1669 = (Object)new_Runtime_MethodClosure(method1717);
store_method((Type_Class)classclass132, (Type_Symbol)symbol2372, (Runtime_MethodClosure)methodclosure1669);

// StandardTestClass>>c:
localvariable744 = (Object)new_AST_Variable_named(L"anObject");
array730 = (Object)new_Type_Array_with(1, (Object)localvariable744);
assign497 = (Object)new_AST_Assign((Object)instancevariable870, (Object)localvariable744);
method1718 = (Object)new_AST_Method_with((Type_Array)array730, (Type_Array)empty_Type_Array, 2, assign497, Self);
methodclosure1670 = (Object)new_Runtime_MethodClosure(method1718);
store_method((Type_Class)class172, (Type_Symbol)symbol2373, (Runtime_MethodClosure)methodclosure1670);

// StandardTestClass>>c
method1719 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable870);
methodclosure1671 = (Object)new_Runtime_MethodClosure(method1719);
store_method((Type_Class)class172, (Type_Symbol)symbol2376, (Runtime_MethodClosure)methodclosure1671);

// StandardTestClass>>b
method1720 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable869);
methodclosure1672 = (Object)new_Runtime_MethodClosure(method1720);
store_method((Type_Class)class172, (Type_Symbol)symbol2374, (Runtime_MethodClosure)methodclosure1672);

// StandardTestClass>>b:
localvariable745 = (Object)new_AST_Variable_named(L"anObject");
array731 = (Object)new_Type_Array_with(1, (Object)localvariable745);
assign498 = (Object)new_AST_Assign((Object)instancevariable869, (Object)localvariable745);
method1721 = (Object)new_AST_Method_with((Type_Array)array731, (Type_Array)empty_Type_Array, 2, assign498, Self);
methodclosure1673 = (Object)new_Runtime_MethodClosure(method1721);
store_method((Type_Class)class172, (Type_Symbol)symbol2378, (Runtime_MethodClosure)methodclosure1673);

// StandardTestClass>>a:
localvariable746 = (Object)new_AST_Variable_named(L"anObject");
array732 = (Object)new_Type_Array_with(1, (Object)localvariable746);
assign499 = (Object)new_AST_Assign((Object)instancevariable868, (Object)localvariable746);
method1722 = (Object)new_AST_Method_with((Type_Array)array732, (Type_Array)empty_Type_Array, 2, assign499, Self);
methodclosure1674 = (Object)new_Runtime_MethodClosure(method1722);
store_method((Type_Class)class172, (Type_Symbol)symbol2375, (Runtime_MethodClosure)methodclosure1674);

// StandardTestClass>>a
method1723 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable868);
methodclosure1675 = (Object)new_Runtime_MethodClosure(method1723);
store_method((Type_Class)class172, (Type_Symbol)symbol2377, (Runtime_MethodClosure)methodclosure1675);
classreference207 = (Object)new_Organization_ClassReference((Type_Class)class172);
send5080 = (Object)new_AST_Send((Object)classreference207, (Object)SMB_basicNew, 0);
assign500 = (Object)new_AST_Assign((Object)localvariable743, (Object)send5080);
localvariable747 = (Object)new_AST_Variable_named(L"receiver");
array733 = (Object)new_Type_Array_with(1, (Object)localvariable747);
smallint2086 = (Object)new_Type_SmallInt(1);
constant2822 = (Object)new_AST_Constant((Object)smallint2086);
send5081 = (Object)new_AST_Send((Object)localvariable747, (Object)symbol2375, 1, (Object)constant2822);
smallint2087 = (Object)new_Type_SmallInt(2);
constant2823 = (Object)new_AST_Constant((Object)smallint2087);
send5082 = (Object)new_AST_Send((Object)localvariable747, (Object)symbol2378, 1, (Object)constant2823);
smallint2088 = (Object)new_Type_SmallInt(3);
constant2824 = (Object)new_AST_Constant((Object)smallint2088);
send5083 = (Object)new_AST_Send((Object)localvariable747, (Object)symbol2373, 1, (Object)constant2824);
block335 = (Object)new_AST_Block_with((Type_Array)array733, (Type_Array)empty_Type_Array, 1, 3, send5081, send5082, send5083);
send5084 = (Object)new_AST_Send((Object)block335, (Object)SMB_value_, 1, (Object)localvariable743);
send5085 = (Object)new_AST_Send((Object)localvariable743, (Object)symbol2377, 0);
smallint2089 = (Object)new_Type_SmallInt(1);
constant2825 = (Object)new_AST_Constant((Object)smallint2089);
send5086 = (Object)new_AST_Send((Object)send5085, (Object)SMB__equal, 1, (Object)constant2825);
send5087 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5086);
send5088 = (Object)new_AST_Send((Object)localvariable743, (Object)symbol2374, 0);
smallint2090 = (Object)new_Type_SmallInt(2);
constant2826 = (Object)new_AST_Constant((Object)smallint2090);
send5089 = (Object)new_AST_Send((Object)send5088, (Object)SMB__equal, 1, (Object)constant2826);
send5090 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5089);
send5091 = (Object)new_AST_Send((Object)localvariable743, (Object)symbol2376, 0);
smallint2091 = (Object)new_Type_SmallInt(3);
constant2827 = (Object)new_AST_Constant((Object)smallint2091);
send5092 = (Object)new_AST_Send((Object)send5091, (Object)SMB__equal, 1, (Object)constant2827);
send5093 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5092);
send5094 = (Object)new_AST_Send((Object)localvariable743, (Object)symbol2377, 0);
send5095 = (Object)new_AST_Send((Object)localvariable743, (Object)symbol2374, 0);
send5096 = (Object)new_AST_Send((Object)send5094, (Object)SMB__plus, 1, (Object)send5095);
send5097 = (Object)new_AST_Send((Object)localvariable743, (Object)symbol2376, 0);
send5098 = (Object)new_AST_Send((Object)send5096, (Object)SMB__plus, 1, (Object)send5097);
method1724 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array729, 6, assign500, send5084, send5087, send5090, send5093, send5098);
symbol2337 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure1676 = (Object)new_Runtime_MethodClosure(method1724);
store_method((Type_Class)class170, (Type_Symbol)symbol2337, (Runtime_MethodClosure)methodclosure1676);

// BridgeTest>>tmNumber
smallint2092 = (Object)new_Type_SmallInt(1);
constant2828 = (Object)new_AST_Constant((Object)smallint2092);
method1725 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2828);
symbol2360 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure1677 = (Object)new_Runtime_MethodClosure(method1725);
store_method((Type_Class)class170, (Type_Symbol)symbol2360, (Runtime_MethodClosure)methodclosure1677);

// BridgeTest>>tmSimpleReturn
smallint2093 = (Object)new_Type_SmallInt(1);
constant2829 = (Object)new_AST_Constant((Object)smallint2093);
method1726 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2829);
symbol2357 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure1678 = (Object)new_Runtime_MethodClosure(method1726);
store_method((Type_Class)class170, (Type_Symbol)symbol2357, (Runtime_MethodClosure)methodclosure1678);

// BridgeTest>>tmNumberMult
smallint2094 = (Object)new_Type_SmallInt(2);
constant2830 = (Object)new_AST_Constant((Object)smallint2094);
smallint2095 = (Object)new_Type_SmallInt(3);
constant2831 = (Object)new_AST_Constant((Object)smallint2095);
send5099 = (Object)new_AST_Send((Object)constant2830, (Object)SMB__times, 1, (Object)constant2831);
method1727 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5099);
symbol2369 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure1679 = (Object)new_Runtime_MethodClosure(method1727);
store_method((Type_Class)class170, (Type_Symbol)symbol2369, (Runtime_MethodClosure)methodclosure1679);

// BridgeTest>>tmClassSideSuper
send5100 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2375, 1, (Object)Nil_Const);
send5101 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2378, 1, (Object)Nil_Const);
send5102 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2373, 1, (Object)Nil_Const);
send5103 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2377, 0);
send5104 = (Object)new_AST_Send((Object)send5103, (Object)SMB__equal, 1, (Object)Nil_Const);
send5105 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5104);
send5106 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2374, 0);
send5107 = (Object)new_AST_Send((Object)send5106, (Object)SMB__equal, 1, (Object)Nil_Const);
send5108 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5107);
send5109 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2376, 0);
send5110 = (Object)new_AST_Send((Object)send5109, (Object)SMB__equal, 1, (Object)Nil_Const);
send5111 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5110);
smallint2096 = (Object)new_Type_SmallInt(1);
constant2832 = (Object)new_AST_Constant((Object)smallint2096);
send5112 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2375, 1, (Object)constant2832);
smallint2097 = (Object)new_Type_SmallInt(2);
constant2833 = (Object)new_AST_Constant((Object)smallint2097);
send5113 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2378, 1, (Object)constant2833);
smallint2098 = (Object)new_Type_SmallInt(3);
constant2834 = (Object)new_AST_Constant((Object)smallint2098);
send5114 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2373, 1, (Object)constant2834);
send5115 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2377, 0);
smallint2099 = (Object)new_Type_SmallInt(1);
constant2835 = (Object)new_AST_Constant((Object)smallint2099);
send5116 = (Object)new_AST_Send((Object)send5115, (Object)SMB__equal, 1, (Object)constant2835);
send5117 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5116);
send5118 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2374, 0);
smallint2100 = (Object)new_Type_SmallInt(2);
constant2836 = (Object)new_AST_Constant((Object)smallint2100);
send5119 = (Object)new_AST_Send((Object)send5118, (Object)SMB__equal, 1, (Object)constant2836);
send5120 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5119);
send5121 = (Object)new_AST_Send((Object)classreference205, (Object)symbol2376, 0);
smallint2101 = (Object)new_Type_SmallInt(3);
constant2837 = (Object)new_AST_Constant((Object)smallint2101);
send5122 = (Object)new_AST_Send((Object)send5121, (Object)SMB__equal, 1, (Object)constant2837);
send5123 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5122);
method1728 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 13, send5100, send5101, send5102, send5105, send5108, send5111, send5112, send5113, send5114, send5117, send5120, send5123, Self);
symbol2350 = (Object)new_Type_Symbol_cached(L"tmClassSideSuper");
methodclosure1680 = (Object)new_Runtime_MethodClosure(method1728);
store_method((Type_Class)class170, (Type_Symbol)symbol2350, (Runtime_MethodClosure)methodclosure1680);

// BridgeTest>>tmExtendedReturn
variable44 = (Object)new_AST_Variable_named(L"return");
array734 = (Object)new_Type_Array_with(1, (Object)variable44);
smallint2102 = (Object)new_Type_SmallInt(1);
constant2838 = (Object)new_AST_Constant((Object)smallint2102);
smallint2103 = (Object)new_Type_SmallInt(2);
constant2839 = (Object)new_AST_Constant((Object)smallint2103);
send5124 = (Object)new_AST_Send((Object)constant2838, (Object)SMB__gt, 1, (Object)constant2839);
smallint2104 = (Object)new_Type_SmallInt(1);
constant2840 = (Object)new_AST_Constant((Object)smallint2104);
send5125 = (Object)new_AST_Send((Object)variable44, (Object)SMB_escape_, 1, (Object)constant2840);
block336 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send5125);
smallint2105 = (Object)new_Type_SmallInt(2);
constant2841 = (Object)new_AST_Constant((Object)smallint2105);
send5126 = (Object)new_AST_Send((Object)variable44, (Object)SMB_escape_, 1, (Object)constant2841);
block337 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send5126);
send5127 = (Object)new_AST_Send((Object)send5124, (Object)SMB_ifTrue_ifFalse_, 2, (Object)block336, (Object)block337);
block338 = (Object)new_AST_Block_with((Type_Array)array734, (Type_Array)empty_Type_Array, 1, 2, send5127, Self);
send5128 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, (Object)block338);
method1729 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5128);
symbol2342 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure1681 = (Object)new_Runtime_MethodClosure(method1729);
store_method((Type_Class)class170, (Type_Symbol)symbol2342, (Runtime_MethodClosure)methodclosure1681);

// BridgeTest>>tmSymbolEquals
symbol2383 = (Object)new_Type_Symbol_cached(L"Symbol");
constant2842 = (Object)new_AST_Constant((Object)symbol2383);
constant2843 = (Object)new_AST_Constant((Object)symbol2383);
send5129 = (Object)new_AST_Send((Object)constant2842, (Object)SMB__equal, 1, (Object)constant2843);
method1730 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5129);
symbol2370 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure1682 = (Object)new_Runtime_MethodClosure(method1730);
store_method((Type_Class)class170, (Type_Symbol)symbol2370, (Runtime_MethodClosure)methodclosure1682);

// BridgeTest>>tmClassInstVar
send5130 = (Object)new_AST_Send((Object)classreference207, (Object)symbol2372, 0);
method1731 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5130);
symbol2339 = (Object)new_Type_Symbol_cached(L"tmClassInstVar");
methodclosure1683 = (Object)new_Runtime_MethodClosure(method1731);
store_method((Type_Class)class170, (Type_Symbol)symbol2339, (Runtime_MethodClosure)methodclosure1683);

// BridgeTest>>tmLocalVariable
localvariable748 = (Object)new_AST_Variable_named(L"a");
array735 = (Object)new_Type_Array_with(1, (Object)localvariable748);
smallint2106 = (Object)new_Type_SmallInt(1);
constant2844 = (Object)new_AST_Constant((Object)smallint2106);
assign501 = (Object)new_AST_Assign((Object)localvariable748, (Object)constant2844);
method1732 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array735, 2, assign501, localvariable748);
symbol2362 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure1684 = (Object)new_Runtime_MethodClosure(method1732);
store_method((Type_Class)class170, (Type_Symbol)symbol2362, (Runtime_MethodClosure)methodclosure1684);

// BridgeTest>>tmNumberSubtract
smallint2107 = (Object)new_Type_SmallInt(2);
constant2845 = (Object)new_AST_Constant((Object)smallint2107);
smallint2108 = (Object)new_Type_SmallInt(1);
constant2846 = (Object)new_AST_Constant((Object)smallint2108);
send5131 = (Object)new_AST_Send((Object)constant2845, (Object)SMB__minus, 1, (Object)constant2846);
method1733 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5131);
symbol2359 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure1685 = (Object)new_Runtime_MethodClosure(method1733);
store_method((Type_Class)class170, (Type_Symbol)symbol2359, (Runtime_MethodClosure)methodclosure1685);

// BridgeTest>>tmBooleanEquals
send5132 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)True_Const);
method1734 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5132);
symbol2332 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure1686 = (Object)new_Runtime_MethodClosure(method1734);
store_method((Type_Class)class170, (Type_Symbol)symbol2332, (Runtime_MethodClosure)methodclosure1686);

// BridgeTest>>assert:
localvariable749 = (Object)new_AST_Variable_named(L"bool");
array736 = (Object)new_Type_Array_with(1, (Object)localvariable749);
symbol2384 = (Object)new_Type_Symbol_cached(L"fail");
send5133 = (Object)new_AST_Send((Object)Self, (Object)symbol2384, 0);
block339 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send5133);
send5134 = (Object)new_AST_Send((Object)localvariable749, (Object)SMB_ifFalse_, 1, (Object)block339);
method1735 = (Object)new_AST_Method_with((Type_Array)array736, (Type_Array)empty_Type_Array, 1, send5134);
methodclosure1687 = (Object)new_Runtime_MethodClosure(method1735);
store_method((Type_Class)class170, (Type_Symbol)symbol2352, (Runtime_MethodClosure)methodclosure1687);

// BridgeTest>>tmVariableInstanceCreation
localvariable750 = (Object)new_AST_Variable_named(L"instance");
array737 = (Object)new_Type_Array_with(1, (Object)localvariable750);
send5135 = (Object)new_AST_Send((Object)classreference206, (Object)SMB_basicNew, 0);
assign502 = (Object)new_AST_Assign((Object)localvariable750, (Object)send5135);
localvariable751 = (Object)new_AST_Variable_named(L"receiver");
array738 = (Object)new_Type_Array_with(1, (Object)localvariable751);
smallint2109 = (Object)new_Type_SmallInt(1);
constant2847 = (Object)new_AST_Constant((Object)smallint2109);
send5136 = (Object)new_AST_Send((Object)localvariable751, (Object)symbol2375, 1, (Object)constant2847);
smallint2110 = (Object)new_Type_SmallInt(2);
constant2848 = (Object)new_AST_Constant((Object)smallint2110);
send5137 = (Object)new_AST_Send((Object)localvariable751, (Object)symbol2378, 1, (Object)constant2848);
smallint2111 = (Object)new_Type_SmallInt(3);
constant2849 = (Object)new_AST_Constant((Object)smallint2111);
send5138 = (Object)new_AST_Send((Object)localvariable751, (Object)symbol2373, 1, (Object)constant2849);
block340 = (Object)new_AST_Block_with((Type_Array)array738, (Type_Array)empty_Type_Array, 1, 3, send5136, send5137, send5138);
send5139 = (Object)new_AST_Send((Object)block340, (Object)SMB_value_, 1, (Object)localvariable750);
send5140 = (Object)new_AST_Send((Object)localvariable750, (Object)symbol2377, 0);
smallint2112 = (Object)new_Type_SmallInt(1);
constant2850 = (Object)new_AST_Constant((Object)smallint2112);
send5141 = (Object)new_AST_Send((Object)send5140, (Object)SMB__equal, 1, (Object)constant2850);
send5142 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5141);
send5143 = (Object)new_AST_Send((Object)localvariable750, (Object)symbol2374, 0);
smallint2113 = (Object)new_Type_SmallInt(2);
constant2851 = (Object)new_AST_Constant((Object)smallint2113);
send5144 = (Object)new_AST_Send((Object)send5143, (Object)SMB__equal, 1, (Object)constant2851);
send5145 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5144);
send5146 = (Object)new_AST_Send((Object)localvariable750, (Object)symbol2376, 0);
smallint2114 = (Object)new_Type_SmallInt(3);
constant2852 = (Object)new_AST_Constant((Object)smallint2114);
send5147 = (Object)new_AST_Send((Object)send5146, (Object)SMB__equal, 1, (Object)constant2852);
send5148 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5147);
send5149 = (Object)new_AST_Send((Object)localvariable750, (Object)symbol2377, 0);
send5150 = (Object)new_AST_Send((Object)localvariable750, (Object)symbol2374, 0);
send5151 = (Object)new_AST_Send((Object)send5149, (Object)SMB__plus, 1, (Object)send5150);
send5152 = (Object)new_AST_Send((Object)localvariable750, (Object)symbol2376, 0);
send5153 = (Object)new_AST_Send((Object)send5151, (Object)SMB__plus, 1, (Object)send5152);
method1736 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array737, 6, assign502, send5139, send5142, send5145, send5148, send5153);
symbol2344 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure1688 = (Object)new_Runtime_MethodClosure(method1736);
store_method((Type_Class)class170, (Type_Symbol)symbol2344, (Runtime_MethodClosure)methodclosure1688);

// BridgeTest>>tmClassSide
send5154 = (Object)new_AST_Send((Object)classreference204, (Object)SMB_class, 0);
send5155 = (Object)new_AST_Send((Object)send5154, (Object)SMB_class, 0);
send5156 = (Object)new_AST_Send((Object)send5155, (Object)SMB__equal, 1, (Object)classreference201);
send5157 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5156);
send5158 = (Object)new_AST_Send((Object)classreference207, (Object)symbol2371, 0);
method1737 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, send5157, send5158);
symbol2364 = (Object)new_Type_Symbol_cached(L"tmClassSide");
methodclosure1689 = (Object)new_Runtime_MethodClosure(method1737);
store_method((Type_Class)class170, (Type_Symbol)symbol2364, (Runtime_MethodClosure)methodclosure1689);

// BridgeTest>>tmFibonacci
method1738 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol2334 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure1690 = (Object)new_Runtime_MethodClosure(method1738);
store_method((Type_Class)class170, (Type_Symbol)symbol2334, (Runtime_MethodClosure)methodclosure1690);

// BridgeTest>>tmSuperClass
localvariable752 = (Object)new_AST_Variable_named(L"instance");
array739 = (Object)new_Type_Array_with(1, (Object)localvariable752);
send5159 = (Object)new_AST_Send((Object)classreference205, (Object)SMB_basicNew, 0);
assign503 = (Object)new_AST_Assign((Object)localvariable752, (Object)send5159);
smallint2115 = (Object)new_Type_SmallInt(1);
constant2853 = (Object)new_AST_Constant((Object)smallint2115);
send5160 = (Object)new_AST_Send((Object)localvariable752, (Object)symbol2375, 1, (Object)constant2853);
send5161 = (Object)new_AST_Send((Object)localvariable752, (Object)symbol2377, 0);
smallint2116 = (Object)new_Type_SmallInt(1);
constant2854 = (Object)new_AST_Constant((Object)smallint2116);
send5162 = (Object)new_AST_Send((Object)send5161, (Object)SMB__equal, 1, (Object)constant2854);
send5163 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5162);
send5164 = (Object)new_AST_Send((Object)localvariable752, (Object)symbol2374, 0);
send5165 = (Object)new_AST_Send((Object)send5164, (Object)SMB__equal, 1, (Object)Nil_Const);
send5166 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5165);
smallint2117 = (Object)new_Type_SmallInt(2);
constant2855 = (Object)new_AST_Constant((Object)smallint2117);
send5167 = (Object)new_AST_Send((Object)localvariable752, (Object)symbol2378, 1, (Object)constant2855);
send5168 = (Object)new_AST_Send((Object)localvariable752, (Object)symbol2377, 0);
smallint2118 = (Object)new_Type_SmallInt(1);
constant2856 = (Object)new_AST_Constant((Object)smallint2118);
send5169 = (Object)new_AST_Send((Object)send5168, (Object)SMB__equal, 1, (Object)constant2856);
send5170 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5169);
send5171 = (Object)new_AST_Send((Object)localvariable752, (Object)symbol2374, 0);
smallint2119 = (Object)new_Type_SmallInt(2);
constant2857 = (Object)new_AST_Constant((Object)smallint2119);
send5172 = (Object)new_AST_Send((Object)send5171, (Object)SMB__equal, 1, (Object)constant2857);
send5173 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5172);
method1739 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array739, 8, assign503, send5160, send5163, send5166, send5167, send5170, send5173, Self);
symbol2354 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure1691 = (Object)new_Runtime_MethodClosure(method1739);
store_method((Type_Class)class170, (Type_Symbol)symbol2354, (Runtime_MethodClosure)methodclosure1691);

// BridgeTest>>tmSymbol
constant2858 = (Object)new_AST_Constant((Object)symbol2383);
method1740 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2858);
symbol2346 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure1692 = (Object)new_Runtime_MethodClosure(method1740);
store_method((Type_Class)class170, (Type_Symbol)symbol2346, (Runtime_MethodClosure)methodclosure1692);

// BridgeTest>>tmSimpleBasicArithmetik
smallint2120 = (Object)new_Type_SmallInt(1);
constant2859 = (Object)new_AST_Constant((Object)smallint2120);
smallint2121 = (Object)new_Type_SmallInt(2);
constant2860 = (Object)new_AST_Constant((Object)smallint2121);
send5174 = (Object)new_AST_Send((Object)constant2859, (Object)SMB__plus, 1, (Object)constant2860);
smallint2122 = (Object)new_Type_SmallInt(2);
constant2861 = (Object)new_AST_Constant((Object)smallint2122);
send5175 = (Object)new_AST_Send((Object)send5174, (Object)SMB__plus, 1, (Object)constant2861);
smallint2123 = (Object)new_Type_SmallInt(5);
constant2862 = (Object)new_AST_Constant((Object)smallint2123);
send5176 = (Object)new_AST_Send((Object)send5175, (Object)SMB__times, 1, (Object)constant2862);
method1741 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5176);
symbol2366 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure1693 = (Object)new_Runtime_MethodClosure(method1741);
store_method((Type_Class)class170, (Type_Symbol)symbol2366, (Runtime_MethodClosure)methodclosure1693);

// BridgeTest>>tmSuperClassSuperSend
localvariable753 = (Object)new_AST_Variable_named(L"instance");
array740 = (Object)new_Type_Array_with(1, (Object)localvariable753);
send5177 = (Object)new_AST_Send((Object)classreference205, (Object)SMB_basicNew, 0);
assign504 = (Object)new_AST_Assign((Object)localvariable753, (Object)send5177);
send5178 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol2380, 0);
smallint2124 = (Object)new_Type_SmallInt(100);
constant2863 = (Object)new_AST_Constant((Object)smallint2124);
send5179 = (Object)new_AST_Send((Object)send5178, (Object)SMB__equal, 1, (Object)constant2863);
send5180 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5179);
method1742 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array740, 3, assign504, send5180, Self);
symbol2356 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure1694 = (Object)new_Runtime_MethodClosure(method1742);
store_method((Type_Class)class170, (Type_Symbol)symbol2356, (Runtime_MethodClosure)methodclosure1694);

// BridgeTest>>tmBooleanSymbolEquals
symbol2385 = (Object)new_Type_Symbol_cached(L"true");
constant2864 = (Object)new_AST_Constant((Object)symbol2385);
send5181 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, (Object)constant2864);
method1743 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5181);
symbol2348 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure1695 = (Object)new_Runtime_MethodClosure(method1743);
store_method((Type_Class)class170, (Type_Symbol)symbol2348, (Runtime_MethodClosure)methodclosure1695);

// BridgeTest>>tmClassInstVarAssignment
symbol2386 = (Object)new_Type_Symbol_cached(L"instVar:");
smallint2125 = (Object)new_Type_SmallInt(10);
constant2865 = (Object)new_AST_Constant((Object)smallint2125);
send5182 = (Object)new_AST_Send((Object)classreference207, (Object)symbol2386, 1, (Object)constant2865);
symbol2387 = (Object)new_Type_Symbol_cached(L"instVar");
send5183 = (Object)new_AST_Send((Object)classreference207, (Object)symbol2387, 0);
smallint2126 = (Object)new_Type_SmallInt(10);
constant2866 = (Object)new_AST_Constant((Object)smallint2126);
send5184 = (Object)new_AST_Send((Object)send5183, (Object)SMB__equal, 1, (Object)constant2866);
send5185 = (Object)new_AST_Send((Object)Self, (Object)symbol2352, 1, (Object)send5184);
method1744 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, send5182, send5185, Self);
symbol2368 = (Object)new_Type_Symbol_cached(L"tmClassInstVarAssignment");
methodclosure1696 = (Object)new_Runtime_MethodClosure(method1744);
store_method((Type_Class)class170, (Type_Symbol)symbol2368, (Runtime_MethodClosure)methodclosure1696);

// BridgeTest>>tmNumberEquals
smallint2127 = (Object)new_Type_SmallInt(1);
constant2867 = (Object)new_AST_Constant((Object)smallint2127);
smallint2128 = (Object)new_Type_SmallInt(1);
constant2868 = (Object)new_AST_Constant((Object)smallint2128);
send5186 = (Object)new_AST_Send((Object)constant2867, (Object)SMB__equal, 1, (Object)constant2868);
method1745 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5186);
symbol2341 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure1697 = (Object)new_Runtime_MethodClosure(method1745);
store_method((Type_Class)class170, (Type_Symbol)symbol2341, (Runtime_MethodClosure)methodclosure1697);

// BridgeTest>>tmNumberAdd
smallint2129 = (Object)new_Type_SmallInt(1);
constant2869 = (Object)new_AST_Constant((Object)smallint2129);
smallint2130 = (Object)new_Type_SmallInt(1);
constant2870 = (Object)new_AST_Constant((Object)smallint2130);
send5187 = (Object)new_AST_Send((Object)constant2869, (Object)SMB__plus, 1, (Object)constant2870);
method1746 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send5187);
symbol2361 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure1698 = (Object)new_Runtime_MethodClosure(method1746);
store_method((Type_Class)class170, (Type_Symbol)symbol2361, (Runtime_MethodClosure)methodclosure1698);
classreference208 = (Object)new_Organization_ClassReference((Type_Class)class170);
classreference209 = (Object)new_Organization_ClassReference((Type_Class)class168);
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object send5188 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2352, 1, (Object)True_Const);
Object result = (Object)Eval((Object)send5188);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object send5189 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2334, 0);
Object result = (Object)Eval((Object)send5189);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object send5190 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2332, 0);
Object result = (Object)Eval((Object)send5190);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object send5191 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2358, 0);
Object result = (Object)Eval((Object)send5191);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
Object send5192 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2348, 0);
Object result = (Object)Eval((Object)send5192);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object send5193 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2347, 0);
Object result = (Object)Eval((Object)send5193);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object send5194 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2351, 0);
Object result = (Object)Eval((Object)send5194);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object send5195 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2367, 0);
Object result = (Object)Eval((Object)send5195);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
Object send5196 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2340, 0);
Object result = (Object)Eval((Object)send5196);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object send5197 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2333, 0);
Object result = (Object)Eval((Object)send5197);
ASSERT_EMPTY_STACK
Object symbol2320 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol2320);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object send5198 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2342, 0);
Object result = (Object)Eval((Object)send5198);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object send5199 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2362, 0);
Object result = (Object)Eval((Object)send5199);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object smallint2131 = (Object)new_Type_SmallInt(1);
Object constant2871 = (Object)new_AST_Constant((Object)smallint2131);
Object send5200 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2338, 1, (Object)constant2871);
Object result = (Object)Eval((Object)send5200);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object string416 = (Object)new_Type_String(L"asdf");
Object constant2872 = (Object)new_AST_Constant((Object)string416);
Object string417 = (Object)new_Type_String(L"asdf");
Object constant2873 = (Object)new_AST_Constant((Object)string417);
Object string418 = (Object)new_Type_String(L"df");
Object constant2874 = (Object)new_AST_Constant((Object)string418);
Object send5201 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2365, 3, (Object)constant2872, (Object)constant2873, (Object)constant2874);
Object result = (Object)Eval((Object)send5201);
ASSERT_EMPTY_STACK
Object string419 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string419);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object send5202 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2360, 0);
Object result = (Object)Eval((Object)send5202);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object send5203 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2361, 0);
Object result = (Object)Eval((Object)send5203);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object send5204 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2353, 0);
Object result = (Object)Eval((Object)send5204);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object send5205 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2341, 0);
Object result = (Object)Eval((Object)send5205);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object send5206 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2369, 0);
Object result = (Object)Eval((Object)send5206);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object send5207 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2359, 0);
Object result = (Object)Eval((Object)send5207);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
Object send5208 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2366, 0);
Object result = (Object)Eval((Object)send5208);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object send5209 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2357, 0);
Object result = (Object)Eval((Object)send5209);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
Object send5210 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2345, 0);
Object result = (Object)Eval((Object)send5210);
ASSERT_EMPTY_STACK
Object string420 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string420);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object send5211 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2335, 0);
Object result = (Object)Eval((Object)send5211);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object send5212 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2346, 0);
Object result = (Object)Eval((Object)send5212);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol2383);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
Object send5213 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2363, 0);
Object result = (Object)Eval((Object)send5213);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object send5214 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2370, 0);
Object result = (Object)Eval((Object)send5214);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVar)
/*
tmClassInstVar
	^ StandardTestClass aClassSideMethodWithInstanceVariables.
*/
Object send5215 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2339, 0);
Object result = (Object)Eval((Object)send5215);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 100);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassInstVarAssignment)
/*
tmClassInstVarAssignment
	StandardTestClass instVar: 10.
	self assert: StandardTestClass instVar = 10.
*/
Object send5216 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2368, 0);
Object result = (Object)Eval((Object)send5216);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSide)
/*
tmClassSide
	self assert: Object class class = Metaclass.
	^ StandardTestClass aClassSideMethod
*/
Object send5217 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2364, 0);
Object result = (Object)Eval((Object)send5217);
ASSERT_EMPTY_STACK
Object string421 = (Object)new_Type_String(L"a");
result = Eval_Send1(result, SMB__equal, string421);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassSideSuper)
/*
tmClassSideSuper
	ChildClassTestClass a: nil.
	ChildClassTestClass b: nil.
	ChildClassTestClass c: nil.
	
	self assert: ChildClassTestClass a = nil.
	self assert: ChildClassTestClass b = nil.
	self assert: ChildClassTestClass c = nil.
	
	ChildClassTestClass a: 1.
	ChildClassTestClass b: 2.
	ChildClassTestClass c: 3.
	
	self assert: ChildClassTestClass a = 1.
	self assert: ChildClassTestClass b = 2.
	self assert: ChildClassTestClass c = 3.
*/
Object send5218 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2350, 0);
Object result = (Object)Eval((Object)send5218);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send5219 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2337, 0);
Object result = (Object)Eval((Object)send5219);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2
*/
Object send5220 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2354, 0);
Object result = (Object)Eval((Object)send5220);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
	self assert: instance test = 100
*/
Object send5221 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2356, 0);
Object result = (Object)Eval((Object)send5221);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c
*/
Object send5222 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2344, 0);
Object result = (Object)Eval((Object)send5222);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 100 put: 100.
	self assert: (instance at: 1) = 1.	"sample"
	self assert: (instance at: 100) = 100.
	instance
		a: 1;
		b: 2;
		c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 100)
*/
Object send5223 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2355, 0);
Object result = (Object)Eval((Object)send5223);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
    Test_Class = (Type_Class)class170;
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmSymbolCharacterEquals);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_tmClassSide);
    RUN_TEST(AutoGenTest_tmClassSideSuper);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmSuperClassSuperSend);
    RUN_TEST(AutoGenTest_tmClassInstVar);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmClassInstVarAssignment);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmCharacterStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmSuperClass);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmBooleanSymbolEquals);
})