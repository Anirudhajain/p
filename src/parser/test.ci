// Auto generated Tests from BridgeTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;
Object classreference211;
Object symbol390;
Object objectlayout103;
Object instancevariable257;
Object class206;
Object localvariable744;
Object array703;
Object assign434;
Object method1638;
Object symbol391;
Object methodclosure1629;
Object method1639;
Object symbol392;
Object methodclosure1630;
Object smallint2163;
Object constant2739;
Object method1640;
Object symbol393;
Object methodclosure1631;
Object symbol358;
Object objectlayout104;
Object instancevariable258;
Object class207;
Object localvariable745;
Object array704;
Object assign435;
Object method1641;
Object symbol394;
Object methodclosure1632;
Object method1642;
Object symbol395;
Object methodclosure1633;
Object smallint2164;
Object constant2740;
Object super6;
Object send4814;
Object method1643;
Object methodclosure1634;
Object classreference212;
Object symbol366;
Object arraylayout42;
Object instancevariable259;
Object instancevariable260;
Object instancevariable261;
Object class208;
Object localvariable746;
Object array705;
Object assign436;
Object method1644;
Object methodclosure1635;
Object method1645;
Object methodclosure1636;
Object method1646;
Object symbol397;
Object methodclosure1637;
Object localvariable747;
Object array706;
Object assign437;
Object method1647;
Object symbol396;
Object methodclosure1638;
Object localvariable748;
Object array707;
Object assign438;
Object method1648;
Object methodclosure1639;
Object method1649;
Object methodclosure1640;
Object classreference213;
Object classreference214;
Object symbol351;
Object class209;
Object symbol398;
Object constant2741;
Object character158;
Object constant2742;
Object send4815;
Object method1650;
Object symbol356;
Object methodclosure1641;
Object method1651;
Object symbol384;
Object methodclosure1642;
Object localvariable749;
Object array708;
Object symbol399;
Object send4816;
Object block284;
Object send4817;
Object method1652;
Object symbol376;
Object methodclosure1643;
Object localvariable750;
Object array709;
Object smallint2165;
Object constant2743;
Object assign439;
Object method1653;
Object symbol368;
Object methodclosure1644;
Object smallint2166;
Object constant2744;
Object method1654;
Object symbol386;
Object methodclosure1645;
Object smallint2167;
Object constant2745;
Object smallint2168;
Object constant2746;
Object send4818;
Object method1655;
Object symbol378;
Object methodclosure1646;
Object localvariable751;
Object array710;
Object smallint2169;
Object constant2747;
Object send4819;
Object method1656;
Object symbol371;
Object methodclosure1647;
Object send4820;
Object method1657;
Object symbol388;
Object methodclosure1648;
Object method1658;
Object symbol361;
Object methodclosure1649;
Object localvariable752;
Object array711;
Object smallint2170;
Object constant2748;
Object send4821;
Object assign440;
Object smallint2171;
Object constant2749;
Object smallint2172;
Object constant2750;
Object send4822;
Object smallint2173;
Object constant2751;
Object smallint2174;
Object constant2752;
Object send4823;
Object smallint2175;
Object constant2753;
Object send4824;
Object smallint2176;
Object constant2754;
Object send4825;
Object send4826;
Object method1659;
Object symbol381;
Object methodclosure1650;
Object smallint2177;
Object constant2755;
Object smallint2178;
Object constant2756;
Object send4827;
Object method1660;
Object symbol365;
Object methodclosure1651;
Object character159;
Object constant2757;
Object character160;
Object constant2758;
Object send4828;
Object method1661;
Object symbol363;
Object methodclosure1652;
Object symbol400;
Object constant2759;
Object constant2760;
Object send4829;
Object method1662;
Object symbol355;
Object methodclosure1653;
Object smallint2179;
Object constant2761;
Object smallint2180;
Object constant2762;
Object send4830;
Object method1663;
Object symbol383;
Object methodclosure1654;
Object variable45;
Object array712;
Object smallint2181;
Object constant2763;
Object smallint2182;
Object constant2764;
Object send4831;
Object smallint2183;
Object constant2765;
Object send4832;
Object block285;
Object smallint2184;
Object constant2766;
Object send4833;
Object block286;
Object send4834;
Object block287;
Object send4835;
Object method1664;
Object symbol375;
Object methodclosure1655;
Object localvariable753;
Object array713;
Object send4836;
Object assign441;
Object localvariable754;
Object array714;
Object smallint2185;
Object constant2767;
Object send4837;
Object smallint2186;
Object constant2768;
Object send4838;
Object smallint2187;
Object constant2769;
Object send4839;
Object block288;
Object send4840;
Object send4841;
Object smallint2188;
Object constant2770;
Object send4842;
Object send4843;
Object send4844;
Object smallint2189;
Object constant2771;
Object send4845;
Object send4846;
Object send4847;
Object smallint2190;
Object constant2772;
Object send4848;
Object send4849;
Object send4850;
Object send4851;
Object send4852;
Object send4853;
Object send4854;
Object method1665;
Object symbol367;
Object methodclosure1656;
Object method1666;
Object symbol357;
Object methodclosure1657;
Object localvariable755;
Object localvariable756;
Object localvariable757;
Object array715;
Object send4855;
Object send4856;
Object method1667;
Object symbol385;
Object methodclosure1658;
Object localvariable758;
Object array716;
Object send4857;
Object assign442;
Object send4858;
Object smallint2191;
Object constant2773;
Object send4859;
Object send4860;
Object method1668;
Object symbol377;
Object methodclosure1659;
Object send4861;
Object method1669;
Object symbol369;
Object methodclosure1660;
Object string362;
Object constant2774;
Object string363;
Object constant2775;
Object send4862;
Object method1670;
Object symbol370;
Object methodclosure1661;
Object localvariable759;
Object array717;
Object send4863;
Object assign443;
Object smallint2192;
Object constant2776;
Object send4864;
Object send4865;
Object smallint2193;
Object constant2777;
Object send4866;
Object send4867;
Object send4868;
Object send4869;
Object send4870;
Object smallint2194;
Object constant2778;
Object send4871;
Object send4872;
Object smallint2195;
Object constant2779;
Object send4873;
Object send4874;
Object send4875;
Object smallint2196;
Object constant2780;
Object send4876;
Object send4877;
Object method1671;
Object symbol359;
Object methodclosure1662;
Object constant2781;
Object method1672;
Object symbol387;
Object methodclosure1663;
Object smallint2197;
Object constant2782;
Object smallint2198;
Object constant2783;
Object send4878;
Object method1673;
Object symbol379;
Object methodclosure1664;
Object character161;
Object constant2784;
Object method1674;
Object symbol360;
Object methodclosure1665;
Object symbol401;
Object constant2785;
Object send4879;
Object method1675;
Object symbol380;
Object methodclosure1666;
Object string364;
Object constant2786;
Object method1676;
Object symbol372;
Object methodclosure1667;
Object character162;
Object constant2787;
Object string365;
Object constant2788;
Object send4880;
Object method1677;
Object symbol364;
Object methodclosure1668;
Object smallint2199;
Object constant2789;
Object method1678;
Object symbol389;
Object methodclosure1669;
Object smallint2200;
Object constant2790;
Object smallint2201;
Object constant2791;
Object send4881;
Object smallint2202;
Object constant2792;
Object send4882;
Object smallint2203;
Object constant2793;
Object send4883;
Object method1679;
Object symbol362;
Object methodclosure1670;
Object smallint2204;
Object constant2794;
Object smallint2205;
Object constant2795;
Object send4884;
Object method1680;
Object symbol382;
Object methodclosure1671;
Object localvariable760;
Object array718;
Object symbol373;
Object objectlayout105;
Object instancevariable262;
Object instancevariable263;
Object instancevariable264;
Object class210;
Object localvariable761;
Object array719;
Object assign444;
Object method1681;
Object methodclosure1672;
Object method1682;
Object methodclosure1673;
Object method1683;
Object methodclosure1674;
Object localvariable762;
Object array720;
Object assign445;
Object method1684;
Object methodclosure1675;
Object localvariable763;
Object array721;
Object assign446;
Object method1685;
Object methodclosure1676;
Object method1686;
Object methodclosure1677;
Object classreference215;
Object send4885;
Object assign447;
Object localvariable764;
Object array722;
Object smallint2206;
Object constant2796;
Object send4886;
Object smallint2207;
Object constant2797;
Object send4887;
Object smallint2208;
Object constant2798;
Object send4888;
Object block289;
Object send4889;
Object send4890;
Object smallint2209;
Object constant2799;
Object send4891;
Object send4892;
Object send4893;
Object smallint2210;
Object constant2800;
Object send4894;
Object send4895;
Object send4896;
Object smallint2211;
Object constant2801;
Object send4897;
Object send4898;
Object send4899;
Object send4900;
Object send4901;
Object send4902;
Object send4903;
Object method1687;
Object symbol374;
Object methodclosure1678;
Object classreference216;


void create_ast() {
classreference211 = (Object)new_Organization_ClassReference((Type_Class)Type_Object_Class);
symbol390 = (Object)new_Type_Symbol_cached(L"SuperClassTestClass");
objectlayout103 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable257 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout103)->values[0] = instancevariable257;
class206 = (Object)new_Class(Type_Object_Class, objectlayout103);
((Type_Class)class206)->name = (Type_Symbol)symbol390;

// SuperClassTestClass>>a:
localvariable744 = (Object)new_AST_Variable_named(L"anObject");
array703 = (Object)new_Type_Array_with(1, localvariable744);
assign434 = (Object)new_AST_Assign((Object)instancevariable257, (Object)localvariable744);
method1638 = (Object)new_AST_Method_with((Type_Array)array703, (Type_Array)empty_Type_Array, 2, assign434, Self);
symbol391 = (Object)new_Type_Symbol_cached(L"a:");
methodclosure1629 = (Object)new_Runtime_MethodClosure(method1638);
store_method((Type_Class)class206, (Type_Symbol)symbol391, (Runtime_MethodClosure)methodclosure1629);

// SuperClassTestClass>>a
method1639 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable257);
symbol392 = (Object)new_Type_Symbol_cached(L"a");
methodclosure1630 = (Object)new_Runtime_MethodClosure(method1639);
store_method((Type_Class)class206, (Type_Symbol)symbol392, (Runtime_MethodClosure)methodclosure1630);

// SuperClassTestClass>>test
smallint2163 = (Object)new_Type_SmallInt(10);
constant2739 = (Object)new_AST_Constant((Object)smallint2163);
method1640 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2739);
symbol393 = (Object)new_Type_Symbol_cached(L"test");
methodclosure1631 = (Object)new_Runtime_MethodClosure(method1640);
store_method((Type_Class)class206, (Type_Symbol)symbol393, (Runtime_MethodClosure)methodclosure1631);
symbol358 = (Object)new_Type_Symbol_cached(L"ChildClassTestClass");
objectlayout104 = (Object)create_type_with_vars(Type_ObjectLayout, 1);
instancevariable258 = (Object)new_AST_InstVariable(0, L"b");
((Type_Array)objectlayout104)->values[0] = instancevariable258;
class207 = (Object)new_Class(class206, objectlayout104);
((Type_Class)class207)->name = (Type_Symbol)symbol358;

// ChildClassTestClass>>b:
localvariable745 = (Object)new_AST_Variable_named(L"anObject");
array704 = (Object)new_Type_Array_with(1, localvariable745);
assign435 = (Object)new_AST_Assign((Object)instancevariable258, (Object)localvariable745);
method1641 = (Object)new_AST_Method_with((Type_Array)array704, (Type_Array)empty_Type_Array, 2, assign435, Self);
symbol394 = (Object)new_Type_Symbol_cached(L"b:");
methodclosure1632 = (Object)new_Runtime_MethodClosure(method1641);
store_method((Type_Class)class207, (Type_Symbol)symbol394, (Runtime_MethodClosure)methodclosure1632);

// ChildClassTestClass>>b
method1642 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable258);
symbol395 = (Object)new_Type_Symbol_cached(L"b");
methodclosure1633 = (Object)new_Runtime_MethodClosure(method1642);
store_method((Type_Class)class207, (Type_Symbol)symbol395, (Runtime_MethodClosure)methodclosure1633);

// ChildClassTestClass>>test
smallint2164 = (Object)new_Type_SmallInt(10);
constant2740 = (Object)new_AST_Constant((Object)smallint2164);
super6 = (Object)new_AST_Super(symbol393, 0);
send4814 = (Object)new_AST_Send((Object)constant2740, (Object)SMB__times, 1, super6);
method1643 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4814);
methodclosure1634 = (Object)new_Runtime_MethodClosure(method1643);
store_method((Type_Class)class207, (Type_Symbol)symbol393, (Runtime_MethodClosure)methodclosure1634);
classreference212 = (Object)new_Organization_ClassReference((Type_Class)class207);
symbol366 = (Object)new_Type_Symbol_cached(L"StandardVariableTestClass");
arraylayout42 = (Object)create_type_with_vars(Type_ArrayLayout, 3);
instancevariable259 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)arraylayout42)->values[0] = instancevariable259;instancevariable260 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)arraylayout42)->values[1] = instancevariable260;instancevariable261 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)arraylayout42)->values[2] = instancevariable261;class208 = (Object)new_Class(Type_Object_Class, arraylayout42);
((Type_Class)class208)->name = (Type_Symbol)symbol366;

// StandardVariableTestClass>>a:
localvariable746 = (Object)new_AST_Variable_named(L"anObject");
array705 = (Object)new_Type_Array_with(1, localvariable746);
assign436 = (Object)new_AST_Assign((Object)instancevariable259, (Object)localvariable746);
method1644 = (Object)new_AST_Method_with((Type_Array)array705, (Type_Array)empty_Type_Array, 2, assign436, Self);
methodclosure1635 = (Object)new_Runtime_MethodClosure(method1644);
store_method((Type_Class)class208, (Type_Symbol)symbol391, (Runtime_MethodClosure)methodclosure1635);

// StandardVariableTestClass>>b
method1645 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable260);
methodclosure1636 = (Object)new_Runtime_MethodClosure(method1645);
store_method((Type_Class)class208, (Type_Symbol)symbol395, (Runtime_MethodClosure)methodclosure1636);

// StandardVariableTestClass>>c
method1646 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable261);
symbol397 = (Object)new_Type_Symbol_cached(L"c");
methodclosure1637 = (Object)new_Runtime_MethodClosure(method1646);
store_method((Type_Class)class208, (Type_Symbol)symbol397, (Runtime_MethodClosure)methodclosure1637);

// StandardVariableTestClass>>c:
localvariable747 = (Object)new_AST_Variable_named(L"anObject");
array706 = (Object)new_Type_Array_with(1, localvariable747);
assign437 = (Object)new_AST_Assign((Object)instancevariable261, (Object)localvariable747);
method1647 = (Object)new_AST_Method_with((Type_Array)array706, (Type_Array)empty_Type_Array, 2, assign437, Self);
symbol396 = (Object)new_Type_Symbol_cached(L"c:");
methodclosure1638 = (Object)new_Runtime_MethodClosure(method1647);
store_method((Type_Class)class208, (Type_Symbol)symbol396, (Runtime_MethodClosure)methodclosure1638);

// StandardVariableTestClass>>b:
localvariable748 = (Object)new_AST_Variable_named(L"anObject");
array707 = (Object)new_Type_Array_with(1, localvariable748);
assign438 = (Object)new_AST_Assign((Object)instancevariable260, (Object)localvariable748);
method1648 = (Object)new_AST_Method_with((Type_Array)array707, (Type_Array)empty_Type_Array, 2, assign438, Self);
methodclosure1639 = (Object)new_Runtime_MethodClosure(method1648);
store_method((Type_Class)class208, (Type_Symbol)symbol394, (Runtime_MethodClosure)methodclosure1639);

// StandardVariableTestClass>>a
method1649 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable259);
methodclosure1640 = (Object)new_Runtime_MethodClosure(method1649);
store_method((Type_Class)class208, (Type_Symbol)symbol392, (Runtime_MethodClosure)methodclosure1640);
classreference213 = (Object)new_Organization_ClassReference((Type_Class)class208);
classreference214 = (Object)new_Organization_ClassReference((Type_Class)class206);
symbol351 = (Object)new_Type_Symbol_cached(L"BridgeTest");
class209 = (Object)new_Class(Type_Object_Class, empty_object_layout);
((Type_Class)class209)->name = (Type_Symbol)symbol351;

// BridgeTest>>tmSymbolCharacterEquals
symbol398 = (Object)new_Type_Symbol_cached(L"S");
constant2741 = (Object)new_AST_Constant((Object)symbol398);
character158 = (Object)new_Type_Character(L'S');
constant2742 = (Object)new_AST_Constant((Object)character158);
send4815 = (Object)new_AST_Send((Object)constant2741, (Object)SMB__equal, 1, constant2742);
method1650 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4815);
symbol356 = (Object)new_Type_Symbol_cached(L"tmSymbolCharacterEquals");
methodclosure1641 = (Object)new_Runtime_MethodClosure(method1650);
store_method((Type_Class)class209, (Type_Symbol)symbol356, (Runtime_MethodClosure)methodclosure1641);

// BridgeTest>>tmBooleanTrue
method1651 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, True_Const);
symbol384 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");
methodclosure1642 = (Object)new_Runtime_MethodClosure(method1651);
store_method((Type_Class)class209, (Type_Symbol)symbol384, (Runtime_MethodClosure)methodclosure1642);

// BridgeTest>>assert:
localvariable749 = (Object)new_AST_Variable_named(L"bool");
array708 = (Object)new_Type_Array_with(1, localvariable749);
symbol399 = (Object)new_Type_Symbol_cached(L"fail");
send4816 = (Object)new_AST_Send((Object)Self, (Object)symbol399, 0);
block284 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, 1, send4816);
send4817 = (Object)new_AST_Send((Object)localvariable749, (Object)SMB_ifFalse_, 1, block284);
method1652 = (Object)new_AST_Method_with((Type_Array)array708, (Type_Array)empty_Type_Array, 1, send4817);
symbol376 = (Object)new_Type_Symbol_cached(L"assert:");
methodclosure1643 = (Object)new_Runtime_MethodClosure(method1652);
store_method((Type_Class)class209, (Type_Symbol)symbol376, (Runtime_MethodClosure)methodclosure1643);

// BridgeTest>>tmLocalVariable
localvariable750 = (Object)new_AST_Variable_named(L"a");
array709 = (Object)new_Type_Array_with(1, localvariable750);
smallint2165 = (Object)new_Type_SmallInt(1);
constant2743 = (Object)new_AST_Constant((Object)smallint2165);
assign439 = (Object)new_AST_Assign((Object)localvariable750, (Object)constant2743);
method1653 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array709, 2, assign439, localvariable750);
symbol368 = (Object)new_Type_Symbol_cached(L"tmLocalVariable");
methodclosure1644 = (Object)new_Runtime_MethodClosure(method1653);
store_method((Type_Class)class209, (Type_Symbol)symbol368, (Runtime_MethodClosure)methodclosure1644);

// BridgeTest>>tmSimpleReturn
smallint2166 = (Object)new_Type_SmallInt(1);
constant2744 = (Object)new_AST_Constant((Object)smallint2166);
method1654 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2744);
symbol386 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");
methodclosure1645 = (Object)new_Runtime_MethodClosure(method1654);
store_method((Type_Class)class209, (Type_Symbol)symbol386, (Runtime_MethodClosure)methodclosure1645);

// BridgeTest>>tmNumberDiv
smallint2167 = (Object)new_Type_SmallInt(4);
constant2745 = (Object)new_AST_Constant((Object)smallint2167);
smallint2168 = (Object)new_Type_SmallInt(2);
constant2746 = (Object)new_AST_Constant((Object)smallint2168);
send4818 = (Object)new_AST_Send((Object)constant2745, (Object)SMB__divide, 1, constant2746);
method1655 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4818);
symbol378 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");
methodclosure1646 = (Object)new_Runtime_MethodClosure(method1655);
store_method((Type_Class)class209, (Type_Symbol)symbol378, (Runtime_MethodClosure)methodclosure1646);

// BridgeTest>>tmMethodArgument:
localvariable751 = (Object)new_AST_Variable_named(L"arg");
array710 = (Object)new_Type_Array_with(1, localvariable751);
smallint2169 = (Object)new_Type_SmallInt(1);
constant2747 = (Object)new_AST_Constant((Object)smallint2169);
send4819 = (Object)new_AST_Send((Object)localvariable751, (Object)SMB__plus, 1, constant2747);
method1656 = (Object)new_AST_Method_with((Type_Array)array710, (Type_Array)empty_Type_Array, 1, send4819);
symbol371 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");
methodclosure1647 = (Object)new_Runtime_MethodClosure(method1656);
store_method((Type_Class)class209, (Type_Symbol)symbol371, (Runtime_MethodClosure)methodclosure1647);

// BridgeTest>>tmClassReferenceReturn
send4820 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
method1657 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4820);
symbol388 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");
methodclosure1648 = (Object)new_Runtime_MethodClosure(method1657);
store_method((Type_Class)class209, (Type_Symbol)symbol388, (Runtime_MethodClosure)methodclosure1648);

// BridgeTest>>tmFibonacci
method1658 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, Self);
symbol361 = (Object)new_Type_Symbol_cached(L"tmFibonacci");
methodclosure1649 = (Object)new_Runtime_MethodClosure(method1658);
store_method((Type_Class)class209, (Type_Symbol)symbol361, (Runtime_MethodClosure)methodclosure1649);

// BridgeTest>>tmVariableInstanceCreationSized
localvariable752 = (Object)new_AST_Variable_named(L"instance");
array711 = (Object)new_Type_Array_with(1, localvariable752);
smallint2170 = (Object)new_Type_SmallInt(100);
constant2748 = (Object)new_AST_Constant((Object)smallint2170);
send4821 = (Object)new_AST_Send((Object)classreference213, (Object)SMB_basicNew_, 1, constant2748);
assign440 = (Object)new_AST_Assign((Object)localvariable752, (Object)send4821);
smallint2171 = (Object)new_Type_SmallInt(1);
constant2749 = (Object)new_AST_Constant((Object)smallint2171);
smallint2172 = (Object)new_Type_SmallInt(1);
constant2750 = (Object)new_AST_Constant((Object)smallint2172);
send4822 = (Object)new_AST_Send((Object)localvariable752, (Object)SMB_at_put_, 2, constant2749, constant2750);
smallint2173 = (Object)new_Type_SmallInt(99);
constant2751 = (Object)new_AST_Constant((Object)smallint2173);
smallint2174 = (Object)new_Type_SmallInt(100);
constant2752 = (Object)new_AST_Constant((Object)smallint2174);
send4823 = (Object)new_AST_Send((Object)localvariable752, (Object)SMB_at_put_, 2, constant2751, constant2752);
smallint2175 = (Object)new_Type_SmallInt(1);
constant2753 = (Object)new_AST_Constant((Object)smallint2175);
send4824 = (Object)new_AST_Send((Object)localvariable752, (Object)SMB_at_, 1, constant2753);
smallint2176 = (Object)new_Type_SmallInt(1);
constant2754 = (Object)new_AST_Constant((Object)smallint2176);
send4825 = (Object)new_AST_Send((Object)send4824, (Object)SMB__equal, 1, constant2754);
send4826 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4825);
method1659 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array711, 5, assign440, send4822, send4823, send4826, Self);
symbol381 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreationSized");
methodclosure1650 = (Object)new_Runtime_MethodClosure(method1659);
store_method((Type_Class)class209, (Type_Symbol)symbol381, (Runtime_MethodClosure)methodclosure1650);

// BridgeTest>>tmNumberEquals
smallint2177 = (Object)new_Type_SmallInt(1);
constant2755 = (Object)new_AST_Constant((Object)smallint2177);
smallint2178 = (Object)new_Type_SmallInt(1);
constant2756 = (Object)new_AST_Constant((Object)smallint2178);
send4827 = (Object)new_AST_Send((Object)constant2755, (Object)SMB__equal, 1, constant2756);
method1660 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4827);
symbol365 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");
methodclosure1651 = (Object)new_Runtime_MethodClosure(method1660);
store_method((Type_Class)class209, (Type_Symbol)symbol365, (Runtime_MethodClosure)methodclosure1651);

// BridgeTest>>tmCharacterEquals
character159 = (Object)new_Type_Character(L'C');
constant2757 = (Object)new_AST_Constant((Object)character159);
character160 = (Object)new_Type_Character(L'C');
constant2758 = (Object)new_AST_Constant((Object)character160);
send4828 = (Object)new_AST_Send((Object)constant2757, (Object)SMB__equal, 1, constant2758);
method1661 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4828);
symbol363 = (Object)new_Type_Symbol_cached(L"tmCharacterEquals");
methodclosure1652 = (Object)new_Runtime_MethodClosure(method1661);
store_method((Type_Class)class209, (Type_Symbol)symbol363, (Runtime_MethodClosure)methodclosure1652);

// BridgeTest>>tmSymbolEquals
symbol400 = (Object)new_Type_Symbol_cached(L"Symbol");
constant2759 = (Object)new_AST_Constant((Object)symbol400);
constant2760 = (Object)new_AST_Constant((Object)symbol400);
send4829 = (Object)new_AST_Send((Object)constant2759, (Object)SMB__equal, 1, constant2760);
method1662 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4829);
symbol355 = (Object)new_Type_Symbol_cached(L"tmSymbolEquals");
methodclosure1653 = (Object)new_Runtime_MethodClosure(method1662);
store_method((Type_Class)class209, (Type_Symbol)symbol355, (Runtime_MethodClosure)methodclosure1653);

// BridgeTest>>tmNumberSubtract
smallint2179 = (Object)new_Type_SmallInt(2);
constant2761 = (Object)new_AST_Constant((Object)smallint2179);
smallint2180 = (Object)new_Type_SmallInt(1);
constant2762 = (Object)new_AST_Constant((Object)smallint2180);
send4830 = (Object)new_AST_Send((Object)constant2761, (Object)SMB__minus, 1, constant2762);
method1663 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4830);
symbol383 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");
methodclosure1654 = (Object)new_Runtime_MethodClosure(method1663);
store_method((Type_Class)class209, (Type_Symbol)symbol383, (Runtime_MethodClosure)methodclosure1654);

// BridgeTest>>tmExtendedReturn
variable45 = (Object)new_AST_Variable_named(L"return");
array712 = (Object)new_Type_Array_with(1, variable45);
smallint2181 = (Object)new_Type_SmallInt(1);
constant2763 = (Object)new_AST_Constant((Object)smallint2181);
smallint2182 = (Object)new_Type_SmallInt(2);
constant2764 = (Object)new_AST_Constant((Object)smallint2182);
send4831 = (Object)new_AST_Send((Object)constant2763, (Object)SMB__gt, 1, constant2764);
smallint2183 = (Object)new_Type_SmallInt(1);
constant2765 = (Object)new_AST_Constant((Object)smallint2183);
send4832 = (Object)new_AST_Send((Object)variable45, (Object)SMB_escape_, 1, constant2765);
block285 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4832);
smallint2184 = (Object)new_Type_SmallInt(2);
constant2766 = (Object)new_AST_Constant((Object)smallint2184);
send4833 = (Object)new_AST_Send((Object)variable45, (Object)SMB_escape_, 1, constant2766);
block286 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, 1, send4833);
send4834 = (Object)new_AST_Send((Object)send4831, (Object)SMB_ifTrue_ifFalse_, 2, block285, block286);
block287 = (Object)new_AST_Block_with((Type_Array)array712, (Type_Array)empty_Type_Array, 1, 2, send4834, Self);
send4835 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block287);
method1664 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4835);
symbol375 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");
methodclosure1655 = (Object)new_Runtime_MethodClosure(method1664);
store_method((Type_Class)class209, (Type_Symbol)symbol375, (Runtime_MethodClosure)methodclosure1655);

// BridgeTest>>tmVariableInstanceCreation
localvariable753 = (Object)new_AST_Variable_named(L"instance");
array713 = (Object)new_Type_Array_with(1, localvariable753);
send4836 = (Object)new_AST_Send((Object)classreference213, (Object)SMB_basicNew, 0);
assign441 = (Object)new_AST_Assign((Object)localvariable753, (Object)send4836);
localvariable754 = (Object)new_AST_Variable_named(L"receiver");
array714 = (Object)new_Type_Array_with(1, localvariable754);
smallint2185 = (Object)new_Type_SmallInt(1);
constant2767 = (Object)new_AST_Constant((Object)smallint2185);
send4837 = (Object)new_AST_Send((Object)localvariable754, (Object)symbol391, 1, constant2767);
smallint2186 = (Object)new_Type_SmallInt(2);
constant2768 = (Object)new_AST_Constant((Object)smallint2186);
send4838 = (Object)new_AST_Send((Object)localvariable754, (Object)symbol394, 1, constant2768);
smallint2187 = (Object)new_Type_SmallInt(3);
constant2769 = (Object)new_AST_Constant((Object)smallint2187);
send4839 = (Object)new_AST_Send((Object)localvariable754, (Object)symbol396, 1, constant2769);
block288 = (Object)new_AST_Block_with((Type_Array)array714, (Type_Array)empty_Type_Array, 1, 3, send4837, send4838, send4839);
send4840 = (Object)new_AST_Send((Object)block288, (Object)SMB_value_, 1, localvariable753);
send4841 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol392, 0);
smallint2188 = (Object)new_Type_SmallInt(1);
constant2770 = (Object)new_AST_Constant((Object)smallint2188);
send4842 = (Object)new_AST_Send((Object)send4841, (Object)SMB__equal, 1, constant2770);
send4843 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4842);
send4844 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol395, 0);
smallint2189 = (Object)new_Type_SmallInt(2);
constant2771 = (Object)new_AST_Constant((Object)smallint2189);
send4845 = (Object)new_AST_Send((Object)send4844, (Object)SMB__equal, 1, constant2771);
send4846 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4845);
send4847 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol397, 0);
smallint2190 = (Object)new_Type_SmallInt(3);
constant2772 = (Object)new_AST_Constant((Object)smallint2190);
send4848 = (Object)new_AST_Send((Object)send4847, (Object)SMB__equal, 1, constant2772);
send4849 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4848);
send4850 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol392, 0);
send4851 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol395, 0);
send4852 = (Object)new_AST_Send((Object)send4850, (Object)SMB__plus, 1, send4851);
send4853 = (Object)new_AST_Send((Object)localvariable753, (Object)symbol397, 0);
send4854 = (Object)new_AST_Send((Object)send4852, (Object)SMB__plus, 1, send4853);
method1665 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array713, 6, assign441, send4840, send4843, send4846, send4849, send4854);
symbol367 = (Object)new_Type_Symbol_cached(L"tmVariableInstanceCreation");
methodclosure1656 = (Object)new_Runtime_MethodClosure(method1665);
store_method((Type_Class)class209, (Type_Symbol)symbol367, (Runtime_MethodClosure)methodclosure1656);

// BridgeTest>>tmBooleanFalse
method1666 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, False_Const);
symbol357 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");
methodclosure1657 = (Object)new_Runtime_MethodClosure(method1666);
store_method((Type_Class)class209, (Type_Symbol)symbol357, (Runtime_MethodClosure)methodclosure1657);

// BridgeTest>>tmMethodArguments:with:with:
localvariable755 = (Object)new_AST_Variable_named(L"arg1");
localvariable756 = (Object)new_AST_Variable_named(L"arg2");
localvariable757 = (Object)new_AST_Variable_named(L"arg3");
array715 = (Object)new_Type_Array_with(3, localvariable755, localvariable756, localvariable757);
send4855 = (Object)new_AST_Send((Object)localvariable755, (Object)SMB__concat, 1, localvariable756);
send4856 = (Object)new_AST_Send((Object)send4855, (Object)SMB__concat, 1, localvariable757);
method1667 = (Object)new_AST_Method_with((Type_Array)array715, (Type_Array)empty_Type_Array, 1, send4856);
symbol385 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");
methodclosure1658 = (Object)new_Runtime_MethodClosure(method1667);
store_method((Type_Class)class209, (Type_Symbol)symbol385, (Runtime_MethodClosure)methodclosure1658);

// BridgeTest>>tmSuperClassSuperSend
localvariable758 = (Object)new_AST_Variable_named(L"instance");
array716 = (Object)new_Type_Array_with(1, localvariable758);
send4857 = (Object)new_AST_Send((Object)classreference212, (Object)SMB_basicNew, 0);
assign442 = (Object)new_AST_Assign((Object)localvariable758, (Object)send4857);
send4858 = (Object)new_AST_Send((Object)localvariable758, (Object)symbol393, 0);
smallint2191 = (Object)new_Type_SmallInt(100);
constant2773 = (Object)new_AST_Constant((Object)smallint2191);
send4859 = (Object)new_AST_Send((Object)send4858, (Object)SMB__equal, 1, constant2773);
send4860 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4859);
method1668 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array716, 2, assign442, send4860);
symbol377 = (Object)new_Type_Symbol_cached(L"tmSuperClassSuperSend");
methodclosure1659 = (Object)new_Runtime_MethodClosure(method1668);
store_method((Type_Class)class209, (Type_Symbol)symbol377, (Runtime_MethodClosure)methodclosure1659);

// BridgeTest>>tmBooleanEquals
send4861 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, True_Const);
method1669 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4861);
symbol369 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");
methodclosure1660 = (Object)new_Runtime_MethodClosure(method1669);
store_method((Type_Class)class209, (Type_Symbol)symbol369, (Runtime_MethodClosure)methodclosure1660);

// BridgeTest>>tmStringEquals
string362 = (Object)new_Type_String(L"String");
constant2774 = (Object)new_AST_Constant((Object)string362);
string363 = (Object)new_Type_String(L"String");
constant2775 = (Object)new_AST_Constant((Object)string363);
send4862 = (Object)new_AST_Send((Object)constant2774, (Object)SMB__equal, 1, constant2775);
method1670 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4862);
symbol370 = (Object)new_Type_Symbol_cached(L"tmStringEquals");
methodclosure1661 = (Object)new_Runtime_MethodClosure(method1670);
store_method((Type_Class)class209, (Type_Symbol)symbol370, (Runtime_MethodClosure)methodclosure1661);

// BridgeTest>>tmSuperClass
localvariable759 = (Object)new_AST_Variable_named(L"instance");
array717 = (Object)new_Type_Array_with(1, localvariable759);
send4863 = (Object)new_AST_Send((Object)classreference212, (Object)SMB_basicNew, 0);
assign443 = (Object)new_AST_Assign((Object)localvariable759, (Object)send4863);
smallint2192 = (Object)new_Type_SmallInt(1);
constant2776 = (Object)new_AST_Constant((Object)smallint2192);
send4864 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol391, 1, constant2776);
send4865 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol392, 0);
smallint2193 = (Object)new_Type_SmallInt(1);
constant2777 = (Object)new_AST_Constant((Object)smallint2193);
send4866 = (Object)new_AST_Send((Object)send4865, (Object)SMB__equal, 1, constant2777);
send4867 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4866);
send4868 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol395, 0);
send4869 = (Object)new_AST_Send((Object)send4868, (Object)SMB__equal, 1, Nil_Const);
send4870 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4869);
smallint2194 = (Object)new_Type_SmallInt(2);
constant2778 = (Object)new_AST_Constant((Object)smallint2194);
send4871 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol394, 1, constant2778);
send4872 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol392, 0);
smallint2195 = (Object)new_Type_SmallInt(1);
constant2779 = (Object)new_AST_Constant((Object)smallint2195);
send4873 = (Object)new_AST_Send((Object)send4872, (Object)SMB__equal, 1, constant2779);
send4874 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4873);
send4875 = (Object)new_AST_Send((Object)localvariable759, (Object)symbol395, 0);
smallint2196 = (Object)new_Type_SmallInt(2);
constant2780 = (Object)new_AST_Constant((Object)smallint2196);
send4876 = (Object)new_AST_Send((Object)send4875, (Object)SMB__equal, 1, constant2780);
send4877 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4876);
method1671 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array717, 8, assign443, send4864, send4867, send4870, send4871, send4874, send4877, Self);
symbol359 = (Object)new_Type_Symbol_cached(L"tmSuperClass");
methodclosure1662 = (Object)new_Runtime_MethodClosure(method1671);
store_method((Type_Class)class209, (Type_Symbol)symbol359, (Runtime_MethodClosure)methodclosure1662);

// BridgeTest>>tmSymbol
constant2781 = (Object)new_AST_Constant((Object)symbol400);
method1672 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2781);
symbol387 = (Object)new_Type_Symbol_cached(L"tmSymbol");
methodclosure1663 = (Object)new_Runtime_MethodClosure(method1672);
store_method((Type_Class)class209, (Type_Symbol)symbol387, (Runtime_MethodClosure)methodclosure1663);

// BridgeTest>>tmNumberMult
smallint2197 = (Object)new_Type_SmallInt(2);
constant2782 = (Object)new_AST_Constant((Object)smallint2197);
smallint2198 = (Object)new_Type_SmallInt(3);
constant2783 = (Object)new_AST_Constant((Object)smallint2198);
send4878 = (Object)new_AST_Send((Object)constant2782, (Object)SMB__times, 1, constant2783);
method1673 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4878);
symbol379 = (Object)new_Type_Symbol_cached(L"tmNumberMult");
methodclosure1664 = (Object)new_Runtime_MethodClosure(method1673);
store_method((Type_Class)class209, (Type_Symbol)symbol379, (Runtime_MethodClosure)methodclosure1664);

// BridgeTest>>tmCharacter
character161 = (Object)new_Type_Character(L'C');
constant2784 = (Object)new_AST_Constant((Object)character161);
method1674 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2784);
symbol360 = (Object)new_Type_Symbol_cached(L"tmCharacter");
methodclosure1665 = (Object)new_Runtime_MethodClosure(method1674);
store_method((Type_Class)class209, (Type_Symbol)symbol360, (Runtime_MethodClosure)methodclosure1665);

// BridgeTest>>tmBooleanSymbolEquals
symbol401 = (Object)new_Type_Symbol_cached(L"true");
constant2785 = (Object)new_AST_Constant((Object)symbol401);
send4879 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, constant2785);
method1675 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4879);
symbol380 = (Object)new_Type_Symbol_cached(L"tmBooleanSymbolEquals");
methodclosure1666 = (Object)new_Runtime_MethodClosure(method1675);
store_method((Type_Class)class209, (Type_Symbol)symbol380, (Runtime_MethodClosure)methodclosure1666);

// BridgeTest>>tmString
string364 = (Object)new_Type_String(L"String");
constant2786 = (Object)new_AST_Constant((Object)string364);
method1676 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2786);
symbol372 = (Object)new_Type_Symbol_cached(L"tmString");
methodclosure1667 = (Object)new_Runtime_MethodClosure(method1676);
store_method((Type_Class)class209, (Type_Symbol)symbol372, (Runtime_MethodClosure)methodclosure1667);

// BridgeTest>>tmCharacterStringEquals
character162 = (Object)new_Type_Character(L'C');
constant2787 = (Object)new_AST_Constant((Object)character162);
string365 = (Object)new_Type_String(L"C");
constant2788 = (Object)new_AST_Constant((Object)string365);
send4880 = (Object)new_AST_Send((Object)constant2787, (Object)SMB__equal, 1, constant2788);
method1677 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4880);
symbol364 = (Object)new_Type_Symbol_cached(L"tmCharacterStringEquals");
methodclosure1668 = (Object)new_Runtime_MethodClosure(method1677);
store_method((Type_Class)class209, (Type_Symbol)symbol364, (Runtime_MethodClosure)methodclosure1668);

// BridgeTest>>tmNumber
smallint2199 = (Object)new_Type_SmallInt(1);
constant2789 = (Object)new_AST_Constant((Object)smallint2199);
method1678 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, constant2789);
symbol389 = (Object)new_Type_Symbol_cached(L"tmNumber");
methodclosure1669 = (Object)new_Runtime_MethodClosure(method1678);
store_method((Type_Class)class209, (Type_Symbol)symbol389, (Runtime_MethodClosure)methodclosure1669);

// BridgeTest>>tmSimpleBasicArithmetik
smallint2200 = (Object)new_Type_SmallInt(1);
constant2790 = (Object)new_AST_Constant((Object)smallint2200);
smallint2201 = (Object)new_Type_SmallInt(2);
constant2791 = (Object)new_AST_Constant((Object)smallint2201);
send4881 = (Object)new_AST_Send((Object)constant2790, (Object)SMB__plus, 1, constant2791);
smallint2202 = (Object)new_Type_SmallInt(2);
constant2792 = (Object)new_AST_Constant((Object)smallint2202);
send4882 = (Object)new_AST_Send((Object)send4881, (Object)SMB__plus, 1, constant2792);
smallint2203 = (Object)new_Type_SmallInt(5);
constant2793 = (Object)new_AST_Constant((Object)smallint2203);
send4883 = (Object)new_AST_Send((Object)send4882, (Object)SMB__times, 1, constant2793);
method1679 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4883);
symbol362 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");
methodclosure1670 = (Object)new_Runtime_MethodClosure(method1679);
store_method((Type_Class)class209, (Type_Symbol)symbol362, (Runtime_MethodClosure)methodclosure1670);

// BridgeTest>>tmNumberAdd
smallint2204 = (Object)new_Type_SmallInt(1);
constant2794 = (Object)new_AST_Constant((Object)smallint2204);
smallint2205 = (Object)new_Type_SmallInt(1);
constant2795 = (Object)new_AST_Constant((Object)smallint2205);
send4884 = (Object)new_AST_Send((Object)constant2794, (Object)SMB__plus, 1, constant2795);
method1680 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, send4884);
symbol382 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");
methodclosure1671 = (Object)new_Runtime_MethodClosure(method1680);
store_method((Type_Class)class209, (Type_Symbol)symbol382, (Runtime_MethodClosure)methodclosure1671);

// BridgeTest>>tmSimpleInstanceCreation
localvariable760 = (Object)new_AST_Variable_named(L"instance");
array718 = (Object)new_Type_Array_with(1, localvariable760);
symbol373 = (Object)new_Type_Symbol_cached(L"StandardTestClass");
objectlayout105 = (Object)create_type_with_vars(Type_ObjectLayout, 3);
instancevariable262 = (Object)new_AST_InstVariable(0, L"a");
((Type_Array)objectlayout105)->values[0] = instancevariable262;
instancevariable263 = (Object)new_AST_InstVariable(1, L"b");
((Type_Array)objectlayout105)->values[1] = instancevariable263;
instancevariable264 = (Object)new_AST_InstVariable(2, L"c");
((Type_Array)objectlayout105)->values[2] = instancevariable264;
class210 = (Object)new_Class(Type_Object_Class, objectlayout105);
((Type_Class)class210)->name = (Type_Symbol)symbol373;

// StandardTestClass>>a:
localvariable761 = (Object)new_AST_Variable_named(L"anObject");
array719 = (Object)new_Type_Array_with(1, localvariable761);
assign444 = (Object)new_AST_Assign((Object)instancevariable262, (Object)localvariable761);
method1681 = (Object)new_AST_Method_with((Type_Array)array719, (Type_Array)empty_Type_Array, 2, assign444, Self);
methodclosure1672 = (Object)new_Runtime_MethodClosure(method1681);
store_method((Type_Class)class210, (Type_Symbol)symbol391, (Runtime_MethodClosure)methodclosure1672);

// StandardTestClass>>b
method1682 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable263);
methodclosure1673 = (Object)new_Runtime_MethodClosure(method1682);
store_method((Type_Class)class210, (Type_Symbol)symbol395, (Runtime_MethodClosure)methodclosure1673);

// StandardTestClass>>c
method1683 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable264);
methodclosure1674 = (Object)new_Runtime_MethodClosure(method1683);
store_method((Type_Class)class210, (Type_Symbol)symbol397, (Runtime_MethodClosure)methodclosure1674);

// StandardTestClass>>c:
localvariable762 = (Object)new_AST_Variable_named(L"anObject");
array720 = (Object)new_Type_Array_with(1, localvariable762);
assign445 = (Object)new_AST_Assign((Object)instancevariable264, (Object)localvariable762);
method1684 = (Object)new_AST_Method_with((Type_Array)array720, (Type_Array)empty_Type_Array, 2, assign445, Self);
methodclosure1675 = (Object)new_Runtime_MethodClosure(method1684);
store_method((Type_Class)class210, (Type_Symbol)symbol396, (Runtime_MethodClosure)methodclosure1675);

// StandardTestClass>>b:
localvariable763 = (Object)new_AST_Variable_named(L"anObject");
array721 = (Object)new_Type_Array_with(1, localvariable763);
assign446 = (Object)new_AST_Assign((Object)instancevariable263, (Object)localvariable763);
method1685 = (Object)new_AST_Method_with((Type_Array)array721, (Type_Array)empty_Type_Array, 2, assign446, Self);
methodclosure1676 = (Object)new_Runtime_MethodClosure(method1685);
store_method((Type_Class)class210, (Type_Symbol)symbol394, (Runtime_MethodClosure)methodclosure1676);

// StandardTestClass>>a
method1686 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 1, instancevariable262);
methodclosure1677 = (Object)new_Runtime_MethodClosure(method1686);
store_method((Type_Class)class210, (Type_Symbol)symbol392, (Runtime_MethodClosure)methodclosure1677);
classreference215 = (Object)new_Organization_ClassReference((Type_Class)class210);
send4885 = (Object)new_AST_Send((Object)classreference215, (Object)SMB_basicNew, 0);
assign447 = (Object)new_AST_Assign((Object)localvariable760, (Object)send4885);
localvariable764 = (Object)new_AST_Variable_named(L"receiver");
array722 = (Object)new_Type_Array_with(1, localvariable764);
smallint2206 = (Object)new_Type_SmallInt(1);
constant2796 = (Object)new_AST_Constant((Object)smallint2206);
send4886 = (Object)new_AST_Send((Object)localvariable764, (Object)symbol391, 1, constant2796);
smallint2207 = (Object)new_Type_SmallInt(2);
constant2797 = (Object)new_AST_Constant((Object)smallint2207);
send4887 = (Object)new_AST_Send((Object)localvariable764, (Object)symbol394, 1, constant2797);
smallint2208 = (Object)new_Type_SmallInt(3);
constant2798 = (Object)new_AST_Constant((Object)smallint2208);
send4888 = (Object)new_AST_Send((Object)localvariable764, (Object)symbol396, 1, constant2798);
block289 = (Object)new_AST_Block_with((Type_Array)array722, (Type_Array)empty_Type_Array, 1, 3, send4886, send4887, send4888);
send4889 = (Object)new_AST_Send((Object)block289, (Object)SMB_value_, 1, localvariable760);
send4890 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol392, 0);
smallint2209 = (Object)new_Type_SmallInt(1);
constant2799 = (Object)new_AST_Constant((Object)smallint2209);
send4891 = (Object)new_AST_Send((Object)send4890, (Object)SMB__equal, 1, constant2799);
send4892 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4891);
send4893 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol395, 0);
smallint2210 = (Object)new_Type_SmallInt(2);
constant2800 = (Object)new_AST_Constant((Object)smallint2210);
send4894 = (Object)new_AST_Send((Object)send4893, (Object)SMB__equal, 1, constant2800);
send4895 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4894);
send4896 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol397, 0);
smallint2211 = (Object)new_Type_SmallInt(3);
constant2801 = (Object)new_AST_Constant((Object)smallint2211);
send4897 = (Object)new_AST_Send((Object)send4896, (Object)SMB__equal, 1, constant2801);
send4898 = (Object)new_AST_Send((Object)Self, (Object)symbol376, 1, send4897);
send4899 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol392, 0);
send4900 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol395, 0);
send4901 = (Object)new_AST_Send((Object)send4899, (Object)SMB__plus, 1, send4900);
send4902 = (Object)new_AST_Send((Object)localvariable760, (Object)symbol397, 0);
send4903 = (Object)new_AST_Send((Object)send4901, (Object)SMB__plus, 1, send4902);
method1687 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)array718, 6, assign447, send4889, send4892, send4895, send4898, send4903);
symbol374 = (Object)new_Type_Symbol_cached(L"tmSimpleInstanceCreation");
methodclosure1678 = (Object)new_Runtime_MethodClosure(method1687);
store_method((Type_Class)class209, (Type_Symbol)symbol374, (Runtime_MethodClosure)methodclosure1678);
classreference216 = (Object)new_Organization_ClassReference((Type_Class)class209);
}


/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
/*
tmBooleanEquals
	^ true = true
*/
Object send4904 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol369, 0);
Object result = (Object)Eval((Object)send4904);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
/*
tmBooleanFalse
	^ false
*/
Object send4905 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol357, 0);
Object result = (Object)Eval((Object)send4905);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanSymbolEquals)
/*
tmBooleanSymbolEquals
	^ true = #true
*/
Object send4906 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol380, 0);
Object result = (Object)Eval((Object)send4906);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
/*
tmBooleanTrue
	^ true
*/
Object send4907 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol384, 0);
Object result = (Object)Eval((Object)send4907);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacter)
/*
tmCharacter
	^ $C
*/
Object send4908 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol360, 0);
Object result = (Object)Eval((Object)send4908);
ASSERT_EMPTY_STACK
assert0(((Type_Character)result)->value == 'C');
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterEquals)
/*
tmCharacterEquals
	^ $C = $C
*/
Object send4909 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol363, 0);
Object result = (Object)Eval((Object)send4909);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmCharacterStringEquals)
/*
tmCharacterStringEquals
	^ $C = 'C'
*/
Object send4910 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol364, 0);
Object result = (Object)Eval((Object)send4910);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
/*
tmClassReferenceReturn
	^ Metaclass name.
*/
Object send4911 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol388, 0);
Object result = (Object)Eval((Object)send4911);
ASSERT_EMPTY_STACK
Object symbol402 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal, symbol402);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
/*
tmExtendedReturn
	1 > 2 ifTrue: [ ^ 1 ]
		ifFalse: [ ^ 2].
*/
Object send4912 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol375, 0);
Object result = (Object)Eval((Object)send4912);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmLocalVariable)
/*
tmLocalVariable
	|a|
	a := 1.
	^ a
*/
Object send4913 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol368, 0);
Object result = (Object)Eval((Object)send4913);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
/*
tmMethodArgument: arg 
	<arg1: 1>
	^ arg + 1
*/
Object smallint2212 = (Object)new_Type_SmallInt(1);
Object constant2802 = (Object)new_AST_Constant((Object)smallint2212);
Object send4914 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol371, 1, constant2802);
Object result = (Object)Eval((Object)send4914);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
/*
tmMethodArguments: arg1 with: arg2 with: arg3 
	<arg1: 'asdf' arg2: 'asdf' arg3: 'df'>
	^ arg1 , arg2 , arg3
*/
Object string366 = (Object)new_Type_String(L"asdf");
Object constant2803 = (Object)new_AST_Constant((Object)string366);
Object string367 = (Object)new_Type_String(L"asdf");
Object constant2804 = (Object)new_AST_Constant((Object)string367);
Object string368 = (Object)new_Type_String(L"df");
Object constant2805 = (Object)new_AST_Constant((Object)string368);
Object send4915 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol385, 3, constant2803, constant2804, constant2805);
Object result = (Object)Eval((Object)send4915);
ASSERT_EMPTY_STACK
Object string369 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal, string369);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
/*
tmNumber
	^ 1
*/
Object send4916 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol389, 0);
Object result = (Object)Eval((Object)send4916);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
/*
tmNumberAdd
	^ 1 + 1
*/
Object send4917 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol382, 0);
Object result = (Object)Eval((Object)send4917);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
/*
tmNumberDiv
	^ 4 / 2
*/
Object send4918 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol378, 0);
Object result = (Object)Eval((Object)send4918);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
/*
tmNumberEquals
	^ 1 = 1
*/
Object send4919 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol365, 0);
Object result = (Object)Eval((Object)send4919);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
/*
tmNumberMult
	^ 2 * 3
*/
Object send4920 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol379, 0);
Object result = (Object)Eval((Object)send4920);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
/*
tmNumberSubtract
	^ 2 - 1
*/
Object send4921 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol383, 0);
Object result = (Object)Eval((Object)send4921);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
/*
tmSimpleBasicArithmetik
	^ ((1 + 2) + 2) * 5
*/
Object send4922 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol362, 0);
Object result = (Object)Eval((Object)send4922);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
/*
tmSimpleReturn
	^ 1
*/
Object send4923 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol386, 0);
Object result = (Object)Eval((Object)send4923);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
/*
tmString
	^ 'String'
*/
Object send4924 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol372, 0);
Object result = (Object)Eval((Object)send4924);
ASSERT_EMPTY_STACK
Object string370 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal, string370);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
/*
tmStringEquals
	^ 'String' = 'String'
*/
Object send4925 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol370, 0);
Object result = (Object)Eval((Object)send4925);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbol)
/*
tmSymbol
	^ #Symbol
*/
Object send4926 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol387, 0);
Object result = (Object)Eval((Object)send4926);
ASSERT_EMPTY_STACK
result = Eval_Send1(result, SMB__equal, symbol400);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolCharacterEquals)
/*
tmSymbolCharacterEquals
	^ #S = $S
*/
Object send4927 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol356, 0);
Object result = (Object)Eval((Object)send4927);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSymbolEquals)
/*
tmSymbolEquals
	^ #Symbol = #Symbol
*/
Object send4928 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol355, 0);
Object result = (Object)Eval((Object)send4928);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_assert_)
/*
assert: bool
	<arg: true>
	^ bool ifFalse: [ self fail. ]
	
*/
Object send4929 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol376, 1, True_Const);
Object result = (Object)Eval((Object)send4929);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmFibonacci)
/*
tmFibonacci
	
*/
Object send4930 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol361, 0);
Object result = (Object)Eval((Object)send4930);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleInstanceCreation)
/*
tmSimpleInstanceCreation
	| instance |
	instance := StandardTestClass basicNew.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b  + instance c
	
*/
Object send4931 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol374, 0);
Object result = (Object)Eval((Object)send4931);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClass)
/*
tmSuperClass
	| instance |
	instance := ChildClassTestClass basicNew.
	instance a: 1.
	self assert: instance a = 1.
	self assert: instance b = nil.
	instance b: 2.
	self assert: instance a = 1.
	self assert: instance b = 2.
*/
Object send4932 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol359, 0);
Object result = (Object)Eval((Object)send4932);
ASSERT_EMPTY_STACK
assert0(result == ((AST_Constant)test_Class_Instance)->constant);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSuperClassSuperSend)
/*
tmSuperClassSuperSend
	| instance |
	instance := ChildClassTestClass basicNew.
	^ self assert: instance test = 100
*/
Object send4933 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol377, 0);
Object result = (Object)Eval((Object)send4933);
ASSERT_EMPTY_STACK
assert0(result == Nil);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreation)
/*
tmVariableInstanceCreation
	| instance |
	instance := StandardVariableTestClass basicNew.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	^ instance a + instance b  + instance c
	
*/
Object send4934 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol367, 0);
Object result = (Object)Eval((Object)send4934);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmVariableInstanceCreationSized)
/*
tmVariableInstanceCreationSized
	| instance |
	instance := StandardVariableTestClass basicNew: 100.
	instance at: 1 put: 1.
	instance at: 99 put: 100.
	self assert: (instance at: 1) = 1.
	"TODO match one based index of Smalltalk with 0 based index of Pinocchio"
	self assert: (instance at: 99) = 100.
	instance a: 1; b: 2; c: 3.
	self assert: instance a = 1.
	self assert: instance b = 2.
	self assert: instance c = 3.
	
	^ instance a + instance b + instance c + (instance at: 1) + (instance at: 99)
	
*/
Object send4935 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol381, 0);
Object result = (Object)Eval((Object)send4935);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 107);
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    create_ast();
    Test_Class = (Type_Class)class209;
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmSymbolCharacterEquals);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreation);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_tmFibonacci);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_assert_);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmSuperClassSuperSend);
    RUN_TEST(AutoGenTest_tmSymbol);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmSimpleInstanceCreation);
    RUN_TEST(AutoGenTest_tmLocalVariable);
    RUN_TEST(AutoGenTest_tmCharacterEquals);
    RUN_TEST(AutoGenTest_tmCharacter);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmCharacterStringEquals);
    RUN_TEST(AutoGenTest_tmSymbolEquals);
    RUN_TEST(AutoGenTest_tmSuperClass);
    RUN_TEST(AutoGenTest_tmVariableInstanceCreationSized);
    RUN_TEST(AutoGenTest_tmBooleanSymbolEquals);
})