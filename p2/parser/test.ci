// Auto generated Tests from PinocchioCDumperTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanEquals)
Object send661 = (Object)new_AST_Send((Object)True_Const, (Object)SMB__equal, 1, True_Const);
Object symbol1 = (Object)new_Type_Symbol_cached(L"tmBooleanEquals");

// nil>>tmBooleanEquals
Object array844 = (Object)new_Type_Array_with(1, send661);
Object method353 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array844);
Object methodclosure111 = (Object)new_Runtime_MethodClosure(method353);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol1, (Runtime_MethodClosure)methodclosure111);

Object send662 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol1, 0);
Object result = (Object)Eval((Object)send662);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanFalse)
Object symbol2 = (Object)new_Type_Symbol_cached(L"tmBooleanFalse");

// nil>>tmBooleanFalse
Object array845 = (Object)new_Type_Array_with(1, False_Const);
Object method354 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array845);
Object methodclosure112 = (Object)new_Runtime_MethodClosure(method354);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol2, (Runtime_MethodClosure)methodclosure112);

Object send663 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol2, 0);
Object result = (Object)Eval((Object)send663);
ASSERT_EMPTY_STACK
assert0(result == (Object)False);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmBooleanTrue)
Object symbol3 = (Object)new_Type_Symbol_cached(L"tmBooleanTrue");

// nil>>tmBooleanTrue
Object array846 = (Object)new_Type_Array_with(1, True_Const);
Object method355 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array846);
Object methodclosure113 = (Object)new_Runtime_MethodClosure(method355);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol3, (Runtime_MethodClosure)methodclosure113);

Object send664 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol3, 0);
Object result = (Object)Eval((Object)send664);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumber)
Object smallint177 = (Object)new_Type_SmallInt(1);
Object constant285 = (Object)new_AST_Constant(smallint177);
Object symbol4 = (Object)new_Type_Symbol_cached(L"tmNumber");

// nil>>tmNumber
Object array847 = (Object)new_Type_Array_with(1, constant285);
Object method356 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array847);
Object methodclosure114 = (Object)new_Runtime_MethodClosure(method356);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol4, (Runtime_MethodClosure)methodclosure114);

Object send665 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol4, 0);
Object result = (Object)Eval((Object)send665);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberAdd)
Object smallint178 = (Object)new_Type_SmallInt(1);
Object constant286 = (Object)new_AST_Constant(smallint178);
Object smallint179 = (Object)new_Type_SmallInt(1);
Object constant287 = (Object)new_AST_Constant(smallint179);
Object send666 = (Object)new_AST_Send((Object)constant286, (Object)SMB_plus_, 1, constant287);
Object symbol5 = (Object)new_Type_Symbol_cached(L"tmNumberAdd");

// nil>>tmNumberAdd
Object array848 = (Object)new_Type_Array_with(1, send666);
Object method357 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array848);
Object methodclosure115 = (Object)new_Runtime_MethodClosure(method357);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol5, (Runtime_MethodClosure)methodclosure115);

Object send667 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol5, 0);
Object result = (Object)Eval((Object)send667);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberDiv)
Object smallint180 = (Object)new_Type_SmallInt(4);
Object constant288 = (Object)new_AST_Constant(smallint180);
Object smallint181 = (Object)new_Type_SmallInt(2);
Object constant289 = (Object)new_AST_Constant(smallint181);
Object send668 = (Object)new_AST_Send((Object)constant288, (Object)SMB_divide_, 1, constant289);
Object symbol6 = (Object)new_Type_Symbol_cached(L"tmNumberDiv");

// nil>>tmNumberDiv
Object array849 = (Object)new_Type_Array_with(1, send668);
Object method358 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array849);
Object methodclosure116 = (Object)new_Runtime_MethodClosure(method358);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol6, (Runtime_MethodClosure)methodclosure116);

Object send669 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol6, 0);
Object result = (Object)Eval((Object)send669);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberEquals)
Object smallint182 = (Object)new_Type_SmallInt(1);
Object constant290 = (Object)new_AST_Constant(smallint182);
Object smallint183 = (Object)new_Type_SmallInt(1);
Object constant291 = (Object)new_AST_Constant(smallint183);
Object send670 = (Object)new_AST_Send((Object)constant290, (Object)SMB__equal, 1, constant291);
Object symbol7 = (Object)new_Type_Symbol_cached(L"tmNumberEquals");

// nil>>tmNumberEquals
Object array850 = (Object)new_Type_Array_with(1, send670);
Object method359 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array850);
Object methodclosure117 = (Object)new_Runtime_MethodClosure(method359);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol7, (Runtime_MethodClosure)methodclosure117);

Object send671 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol7, 0);
Object result = (Object)Eval((Object)send671);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberMult)
Object smallint184 = (Object)new_Type_SmallInt(2);
Object constant292 = (Object)new_AST_Constant(smallint184);
Object smallint185 = (Object)new_Type_SmallInt(3);
Object constant293 = (Object)new_AST_Constant(smallint185);
Object send672 = (Object)new_AST_Send((Object)constant292, (Object)SMB_times_, 1, constant293);
Object symbol8 = (Object)new_Type_Symbol_cached(L"tmNumberMult");

// nil>>tmNumberMult
Object array851 = (Object)new_Type_Array_with(1, send672);
Object method360 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array851);
Object methodclosure118 = (Object)new_Runtime_MethodClosure(method360);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol8, (Runtime_MethodClosure)methodclosure118);

Object send673 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol8, 0);
Object result = (Object)Eval((Object)send673);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 6);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmNumberSubtract)
Object smallint186 = (Object)new_Type_SmallInt(2);
Object constant294 = (Object)new_AST_Constant(smallint186);
Object smallint187 = (Object)new_Type_SmallInt(1);
Object constant295 = (Object)new_AST_Constant(smallint187);
Object send674 = (Object)new_AST_Send((Object)constant294, (Object)SMB_minus_, 1, constant295);
Object symbol9 = (Object)new_Type_Symbol_cached(L"tmNumberSubtract");

// nil>>tmNumberSubtract
Object array852 = (Object)new_Type_Array_with(1, send674);
Object method361 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array852);
Object methodclosure119 = (Object)new_Runtime_MethodClosure(method361);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol9, (Runtime_MethodClosure)methodclosure119);

Object send675 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol9, 0);
Object result = (Object)Eval((Object)send675);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmString)
Object string94 = (Object)new_Type_String(L"String");
Object constant296 = (Object)new_AST_Constant(string94);
Object symbol10 = (Object)new_Type_Symbol_cached(L"tmString");

// nil>>tmString
Object array853 = (Object)new_Type_Array_with(1, constant296);
Object method362 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array853);
Object methodclosure120 = (Object)new_Runtime_MethodClosure(method362);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol10, (Runtime_MethodClosure)methodclosure120);

Object send676 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol10, 0);
Object result = (Object)Eval((Object)send676);
ASSERT_EMPTY_STACK
Object string95 = (Object)new_Type_String(L"String");
result = Eval_Send1(result, SMB__equal,string95);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmStringEquals)
Object string96 = (Object)new_Type_String(L"String");
Object constant297 = (Object)new_AST_Constant(string96);
Object string97 = (Object)new_Type_String(L"String");
Object constant298 = (Object)new_AST_Constant(string97);
Object send677 = (Object)new_AST_Send((Object)constant297, (Object)SMB__equal, 1, constant298);
Object symbol11 = (Object)new_Type_Symbol_cached(L"tmStringEquals");

// nil>>tmStringEquals
Object array854 = (Object)new_Type_Array_with(1, send677);
Object method363 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array854);
Object methodclosure121 = (Object)new_Runtime_MethodClosure(method363);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol11, (Runtime_MethodClosure)methodclosure121);

Object send678 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol11, 0);
Object result = (Object)Eval((Object)send678);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    Test_Class = new_Class_named((Object)Type_Object_Class, L"Test_Object", Type_Object_Class->type);
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmNumberAdd);
    RUN_TEST(AutoGenTest_tmBooleanEquals);
    RUN_TEST(AutoGenTest_tmNumberMult);
    RUN_TEST(AutoGenTest_tmNumber);
    RUN_TEST(AutoGenTest_tmStringEquals);
    RUN_TEST(AutoGenTest_tmBooleanFalse);
    RUN_TEST(AutoGenTest_tmNumberDiv);
    RUN_TEST(AutoGenTest_tmString);
    RUN_TEST(AutoGenTest_tmNumberEquals);
    RUN_TEST(AutoGenTest_tmBooleanTrue);
    RUN_TEST(AutoGenTest_tmNumberSubtract);
})
