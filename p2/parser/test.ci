// Auto generated Tests from PinocchioCDumperTest

// Test Object to put test methods in
Type_Class Test_Class;
Object test_Class_Instance;
// Test Method symbol
Type_Symbol SMB_runTestCase;


/* ========================================================================= */

NEW_TEST(AutoGenTest_tmClassReferenceReturn)
Object variable570 = (Object)new_AST_Variable_named(L"return");
Object array2865 = (Object)new_Type_Array_with(1, variable570);
Object send3117 = (Object)new_AST_Send((Object)Metaclass_Reference, (Object)SMB_name, 0);
Object array2866 = (Object)new_Type_Array_with(1, send3117);
Object block896 = (Object)new_AST_Block_with((Type_Array)array2865, (Type_Array)empty_Type_Array, 0, (Type_Array)array2866);
Object send3116 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block896);
Object symbol379 = (Object)new_Type_Symbol_cached(L"tmClassReferenceReturn");

// nil>>tmClassReferenceReturn
Object array2867 = (Object)new_Type_Array_with(1, send3116);
Object method850 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array2867);
Object methodclosure850 = (Object)new_Runtime_MethodClosure(method850);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol379, (Runtime_MethodClosure)methodclosure850);

Object send3118 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol379, 0);
Object result = (Object)Eval((Object)send3118);
ASSERT_EMPTY_STACK
Object symbol386 = (Object)new_Type_Symbol_cached(L"Metaclass");
result = Eval_Send1(result, SMB__equal,symbol386);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmExtendedReturn)
Object variable571 = (Object)new_AST_Variable_named(L"return");
Object array2868 = (Object)new_Type_Array_with(1, variable571);
Object smallint167 = (Object)new_Type_SmallInt(1);
Object constant509 = (Object)new_AST_Constant(smallint167);
Object smallint168 = (Object)new_Type_SmallInt(2);
Object constant510 = (Object)new_AST_Constant(smallint168);
Object send3121 = (Object)new_AST_Send((Object)constant509, (Object)SMB_gt_, 1, constant510);
Object smallint169 = (Object)new_Type_SmallInt(1);
Object constant511 = (Object)new_AST_Constant(smallint169);
Object send3122 = (Object)new_AST_Send((Object)variable571, (Object)SMB_escape_, 1, constant511);
Object array2870 = (Object)new_Type_Array_with(1, send3122);
Object block898 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 2, (Type_Array)array2870);
Object smallint170 = (Object)new_Type_SmallInt(2);
Object constant512 = (Object)new_AST_Constant(smallint170);
Object send3123 = (Object)new_AST_Send((Object)variable571, (Object)SMB_escape_, 1, constant512);
Object array2871 = (Object)new_Type_Array_with(1, send3123);
Object block899 = (Object)new_AST_Block_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, 3, (Type_Array)array2871);
Object send3120 = (Object)new_AST_Send((Object)send3121, (Object)SMB_ifTrue_ifFalse_, 2, block898, block899);
Object array2869 = (Object)new_Type_Array_with(2, send3120, Self);
Object block897 = (Object)new_AST_Block_with((Type_Array)array2868, (Type_Array)empty_Type_Array, 1, (Type_Array)array2869);
Object send3119 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block897);
Object symbol380 = (Object)new_Type_Symbol_cached(L"tmExtendedReturn");

// nil>>tmExtendedReturn
Object array2872 = (Object)new_Type_Array_with(1, send3119);
Object method851 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array2872);
Object methodclosure851 = (Object)new_Runtime_MethodClosure(method851);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol380, (Runtime_MethodClosure)methodclosure851);

Object send3124 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol380, 0);
Object result = (Object)Eval((Object)send3124);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArgument_)
Object variable572 = (Object)new_AST_Variable_named(L"return");
Object array2873 = (Object)new_Type_Array_with(1, variable572);
Object localvariable575 = (Object)new_AST_Variable_named(L"arg");
Object smallint171 = (Object)new_Type_SmallInt(1);
Object constant513 = (Object)new_AST_Constant(smallint171);
Object send3126 = (Object)new_AST_Send((Object)localvariable575, (Object)SMB_plus_, 1, constant513);
Object array2874 = (Object)new_Type_Array_with(1, send3126);
Object block900 = (Object)new_AST_Block_with((Type_Array)array2873, (Type_Array)empty_Type_Array, 4, (Type_Array)array2874);
Object send3125 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block900);
Object symbol381 = (Object)new_Type_Symbol_cached(L"tmMethodArgument:");

// nil>>tmMethodArgument:
Object array2875 = (Object)new_Type_Array_with(1, localvariable575);
Object array2876 = (Object)new_Type_Array_with(1, send3125);
Object method852 = (Object)new_AST_Method_with((Type_Array)array2875, (Type_Array)empty_Type_Array, (Type_Array)array2876);
Object methodclosure852 = (Object)new_Runtime_MethodClosure(method852);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol381, (Runtime_MethodClosure)methodclosure852);

Object send3127 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol381, 0);
Object result = (Object)Eval((Object)send3127);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 2);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmMethodArguments_with_with_)
Object variable573 = (Object)new_AST_Variable_named(L"return");
Object array2877 = (Object)new_Type_Array_with(1, variable573);
Object localvariable576 = (Object)new_AST_Variable_named(L"arg1");
Object symbol382 = (Object)new_Type_Symbol_cached(L",");
Object localvariable577 = (Object)new_AST_Variable_named(L"arg2");
Object send3130 = (Object)new_AST_Send((Object)localvariable576, (Object)symbol382, 1, localvariable577);
Object localvariable578 = (Object)new_AST_Variable_named(L"arg3");
Object send3129 = (Object)new_AST_Send((Object)send3130, (Object)symbol382, 1, localvariable578);
Object array2878 = (Object)new_Type_Array_with(1, send3129);
Object block901 = (Object)new_AST_Block_with((Type_Array)array2877, (Type_Array)empty_Type_Array, 5, (Type_Array)array2878);
Object send3128 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block901);
Object symbol383 = (Object)new_Type_Symbol_cached(L"tmMethodArguments:with:with:");

// nil>>tmMethodArguments:with:with:
Object array2879 = (Object)new_Type_Array_with(3, localvariable576, localvariable577, localvariable578);
Object array2880 = (Object)new_Type_Array_with(1, send3128);
Object method853 = (Object)new_AST_Method_with((Type_Array)array2879, (Type_Array)empty_Type_Array, (Type_Array)array2880);
Object methodclosure853 = (Object)new_Runtime_MethodClosure(method853);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol383, (Runtime_MethodClosure)methodclosure853);

Object send3131 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol383, 0);
Object result = (Object)Eval((Object)send3131);
ASSERT_EMPTY_STACK
Object string294 = (Object)new_Type_String(L"asdfasdfdf");
result = Eval_Send1(result, SMB__equal,string294);
ASSERT_EMPTY_STACK
assert0(result == (Object)True);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleBasicArithmetik)
Object variable574 = (Object)new_AST_Variable_named(L"return");
Object array2881 = (Object)new_Type_Array_with(1, variable574);
Object smallint172 = (Object)new_Type_SmallInt(1);
Object constant514 = (Object)new_AST_Constant(smallint172);
Object smallint173 = (Object)new_Type_SmallInt(2);
Object constant515 = (Object)new_AST_Constant(smallint173);
Object send3135 = (Object)new_AST_Send((Object)constant514, (Object)SMB_plus_, 1, constant515);
Object smallint174 = (Object)new_Type_SmallInt(2);
Object constant516 = (Object)new_AST_Constant(smallint174);
Object send3134 = (Object)new_AST_Send((Object)send3135, (Object)SMB_plus_, 1, constant516);
Object smallint175 = (Object)new_Type_SmallInt(5);
Object constant517 = (Object)new_AST_Constant(smallint175);
Object send3133 = (Object)new_AST_Send((Object)send3134, (Object)SMB_times_, 1, constant517);
Object array2882 = (Object)new_Type_Array_with(1, send3133);
Object block902 = (Object)new_AST_Block_with((Type_Array)array2881, (Type_Array)empty_Type_Array, 6, (Type_Array)array2882);
Object send3132 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block902);
Object symbol384 = (Object)new_Type_Symbol_cached(L"tmSimpleBasicArithmetik");

// nil>>tmSimpleBasicArithmetik
Object array2883 = (Object)new_Type_Array_with(1, send3132);
Object method854 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array2883);
Object methodclosure854 = (Object)new_Runtime_MethodClosure(method854);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol384, (Runtime_MethodClosure)methodclosure854);

Object send3136 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol384, 0);
Object result = (Object)Eval((Object)send3136);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 25);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

NEW_TEST(AutoGenTest_tmSimpleReturn)
Object variable575 = (Object)new_AST_Variable_named(L"return");
Object array2884 = (Object)new_Type_Array_with(1, variable575);
Object smallint176 = (Object)new_Type_SmallInt(1);
Object constant518 = (Object)new_AST_Constant(smallint176);
Object array2885 = (Object)new_Type_Array_with(1, constant518);
Object block903 = (Object)new_AST_Block_with((Type_Array)array2884, (Type_Array)empty_Type_Array, 7, (Type_Array)array2885);
Object send3137 = (Object)new_AST_Send((Object)AST_Callec_Reference, (Object)SMB_on_, 1, block903);
Object symbol385 = (Object)new_Type_Symbol_cached(L"tmSimpleReturn");

// nil>>tmSimpleReturn
Object array2886 = (Object)new_Type_Array_with(1, send3137);
Object method855 = (Object)new_AST_Method_with((Type_Array)empty_Type_Array, (Type_Array)empty_Type_Array, (Type_Array)array2886);
Object methodclosure855 = (Object)new_Runtime_MethodClosure(method855);
store_method((Type_Class)Test_Class, (Type_Symbol)symbol385, (Runtime_MethodClosure)methodclosure855);

Object send3138 = (Object)new_AST_Send((Object)test_Class_Instance, (Object)symbol385, 0);
Object result = (Object)Eval((Object)send3138);
ASSERT_EMPTY_STACK
assert0(((Type_SmallInt)result)->value == 1);
ASSERT_EMPTY_STACK
}

/* ========================================================================= */

TEST_SUITE(AutoGenTest,
{
    Test_Class = new_Class_named((Object)Type_Object_Class, L"Test_Object", Type_Object_Class->type);
    test_Class_Instance = (Object)new_AST_Constant((Object)instantiate((Type_Class)Test_Class));

    RUN_TEST(AutoGenTest_tmSimpleBasicArithmetik);
    RUN_TEST(AutoGenTest_tmClassReferenceReturn);
    RUN_TEST(AutoGenTest_tmMethodArguments_with_with_);
    RUN_TEST(AutoGenTest_tmSimpleReturn);
    RUN_TEST(AutoGenTest_tmExtendedReturn);
    RUN_TEST(AutoGenTest_tmMethodArgument_);
})