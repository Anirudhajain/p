//SMB_objectAt_putIfAbsent_ = new_Type_Symbol(L"objectAt:putIfAbsent:");
SMB_and_                  = new_Type_Symbol(L"and:");
SMB_apply                 = new_Type_Symbol(L"apply");
SMB_apply_                = new_Type_Symbol(L"apply:");
SMB_asArray               = new_Type_Symbol(L"asArray");
SMB_asBoolean             = new_Type_Symbol(L"asBoolean");
SMB_asSmallInt            = new_Type_Symbol(L"asSmallInt");
SMB_asString              = new_Type_Symbol(L"asString");
SMB_asSymbol              = new_Type_Symbol(L"asSymbol");
SMB_atEnd                 = new_Type_Symbol(L"atEnd");
SMB_at_                   = new_Type_Symbol(L"at:");
SMB_at_in_                = new_Type_Symbol(L"at:in:");
SMB_at_put_               = new_Type_Symbol(L"at:put:");
SMB_basicNew              = new_Type_Symbol(L"basicNew");
SMB_basicNew_             = new_Type_Symbol(L"basicNew:");
SMB_class                 = new_Type_Symbol(L"class");
SMB_concat_               = new_Type_Symbol(L"concat:");
SMB_delete_               = new_Type_Symbol(L"delete:");
SMB_divide_               = new_Type_Symbol(L"divide:");
SMB_equals_               = new_Type_Symbol(L"equals:");
SMB_eval                  = new_Type_Symbol(L"eval");
SMB_eval_                 = new_Type_Symbol(L"eval:");
SMB_get_                  = new_Type_Symbol(L"get:");
SMB_gt_                   = new_Type_Symbol(L">");
SMB_hash                  = new_Type_Symbol(L"hash");
SMB_ifFalse_              = new_Type_Symbol(L"ifFalse:");
SMB_ifFalse_else_         = new_Type_Symbol(L"ifFalse:else:");
SMB_ifTrue_               = new_Type_Symbol(L"ifTrue:");
SMB_ifTrue_else_          = new_Type_Symbol(L"ifTrue:else:");
SMB_ifTrue_ifFalse_       = new_Type_Symbol(L"ifTrue:ifFalse:");
SMB_instVarAt_            = new_Type_Symbol(L"instVarAt:");
SMB_instVarAt_put_        = new_Type_Symbol(L"instVarAt:put:");
SMB_isNil                 = new_Type_Symbol(L"isNil");
SMB_isNotNil              = new_Type_Symbol(L"isNotNil");
SMB_lookup_               = new_Type_Symbol(L"lookup:");
SMB_lt_                   = new_Type_Symbol(L"<");
SMB_minus_                = new_Type_Symbol(L"minus:");
SMB_not                   = new_Type_Symbol(L"not");
SMB_notEquals_            = new_Type_Symbol(L"notEquals:");
SMB_or_                   = new_Type_Symbol(L"or:");
SMB_plus_                 = new_Type_Symbol(L"plus:");
SMB_read                  = new_Type_Symbol(L"read");
SMB_readAll               = new_Type_Symbol(L"readAll");
SMB_rewind                = new_Type_Symbol(L"rewind");
SMB_set                   = new_Type_Symbol(L"set");
SMB_shiftLeft_            = new_Type_Symbol(L"shiftLeft:");
SMB_shiftRight_           = new_Type_Symbol(L"shiftRight:");
SMB_size                  = new_Type_Symbol(L"size");
SMB_times_                = new_Type_Symbol(L"times:");
SMB_update                = new_Type_Symbol(L"update");
SMB_value_                = new_Type_Symbol(L"value:");
SMB_whileFalse_           = new_Type_Symbol(L"whileFalse:");
SMB_whileNil_             = new_Type_Symbol(L"whileNil:");
SMB_whileTrue_            = new_Type_Symbol(L"whileTrue:");
SMB_writeAll_             = new_Type_Symbol(L"writeAll:");
SMB_write_                = new_Type_Symbol(L"write:");
