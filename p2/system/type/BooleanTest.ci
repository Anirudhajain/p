NEW_TEST(boolean_equals)
    Object result;
    
    result = Eval_Send1((Object)True, SMB_equals_, (Object)True);
    assert0(result == (Object)True);
    
    result = Eval_Send1((Object)True, SMB_equals_, (Object)False);
    assert0(result == (Object)False);
    
    result = Eval_Send1((Object)False, SMB_equals_, (Object)True);
    assert0(result == (Object)False);
    
    result = Eval_Send1((Object)False, SMB_equals_, (Object)False);
    assert0(result == (Object)True);
}

#define TYPE_BOOLEAN_TEST_SETUP \
    Object result; \
    Type_SmallInt integer   = new_Type_SmallInt(120); \
    Object integer_const    = (Object)new_AST_Constant((Object)integer); \
    Type_Array body         = new_Type_Array_With(1, integer_const); \
    Runtime_Closure arg = new_Runtime_Closure(new_AST_Block(0, body), \
                                              (Runtime_BlockContext)Nil);
                                              
#define TYPE_BOOLEAN_IFTRUE_IFFALSE_TEST_SETUP \
    Type_SmallInt integer2   = new_Type_SmallInt(2); \
    Object integer_const2    = (Object)new_AST_Constant((Object)integer2); \
    Type_Array body2         = new_Type_Array_With(1, integer_const2); \
    Runtime_Closure arg2 = new_Runtime_Closure(new_AST_Block(0, body2), \
                                              (Runtime_BlockContext)Nil);

NEW_TEST(Type_Boolean_True_ifTrue)
    TYPE_BOOLEAN_TEST_SETUP;
    result = Eval_Send1((Object)True, SMB_ifTrue_, (Object)arg);
    assert0(result == (Object)integer);
}

NEW_TEST(Type_Boolean_True_ifFalse)
    TYPE_BOOLEAN_TEST_SETUP;
    result = Eval_Send1((Object)True, SMB_ifFalse_, (Object)arg);
    assert0(result == Nil);
}

NEW_TEST(Type_Boolean_True_ifTrue_ifFalse)
    TYPE_BOOLEAN_TEST_SETUP;
    TYPE_BOOLEAN_IFTRUE_IFFALSE_TEST_SETUP;
    result = Eval_Send2((Object)False, SMB_ifTrue_ifFalse_, (Object)arg, (Object)arg2);
    assert0(result == (Object)integer);
}


NEW_TEST(Type_Boolean_False_ifTrue)
    TYPE_BOOLEAN_TEST_SETUP;
    result = Eval_Send1((Object)False, SMB_ifTrue_, (Object)arg);
    assert0(result == Nil);
}

NEW_TEST(Type_Boolean_False_ifFalse)
    TYPE_BOOLEAN_TEST_SETUP;
    result = Eval_Send1((Object)False, SMB_ifFalse_, (Object)arg);
    assert0(result == (Object)integer);
}

NEW_TEST(Type_Boolean_False_ifTrue_ifFalse)
    TYPE_BOOLEAN_TEST_SETUP;
    TYPE_BOOLEAN_IFTRUE_IFFALSE_TEST_SETUP;
    result = Eval_Send2((Object)False, SMB_ifTrue_ifFalse_, (Object)arg, (Object)arg2);
    assert0(result == (Object)integer2);
}

/* ========================================================================= */

TEST_SUITE(Type_Boolean,
{
    RUN_TEST(boolean_equals);
    RUN_TEST(Type_Boolean_True_ifTrue);
    RUN_TEST(Type_Boolean_True_ifFalse);
    RUN_TEST(Type_Boolean_True_ifTrue_ifFalse);
    
    RUN_TEST(Type_Boolean_False_ifTrue);
    RUN_TEST(Type_Boolean_False_ifFalse);
    RUN_TEST(Type_Boolean_False_ifTrue_ifFalse);
})
