
NEW_TEST(test_Type_Array_Type_ObjectAt_)
    Object integer       = (Object)new_Type_SmallInt(10);
    Object integer2      = (Object)new_Type_SmallInt(2);
    Type_Array array   = new_Type_Array_With(10, integer);
    Type_Array args    = new_Raw_Type_Array(1);
    array->values[4]  = integer2;
    int i; 
    for (i=0; i<array->size->value; i++) {
        if (i==4) { continue; }
        args->values[0] = (Object)new_Type_SmallInt(i); 
        assert0(Eval_AST_Send((Object)array, SMB_objectAt_, args) == integer);
        assert0(array->values[i] == integer);
    }
    args->values[0] = (Object)new_Type_SmallInt(4); 
    assert0(Eval_AST_Send((Object)array, SMB_objectAt_, args) == integer2);
}

NEW_TEST(test_Type_Array_size)
    Object integer     = (Object)new_Type_SmallInt(10);
    Type_Array array = new_Type_Array_With(10, integer);
    Object result      = Eval_AST_Send((Object)array, SMB_size, Empty_Type_Array);
    assert0(((Type_SmallInt) result)->value == 10);
    
    result = Eval_AST_Send(integer, SMB_equals_, new_Type_Array_With(1, result));
    assert(result == (Object)True,
		   printf("%ls\n", ((Type_String)((Type_Class)HEADER(result))->name)->value));
}

NEW_TEST(test_Type_Array_Type_ObjectAt_put)
    Object result;
    Object integer     = (Object)new_Type_SmallInt(10);
    Object integer0    = (Object)new_Type_SmallInt(0);
    Object integer1    = (Object)new_Type_SmallInt(1);
    Object integer2    = (Object)new_Type_SmallInt(2);
    Type_Array array = new_Type_Array_With(10, integer);
    Type_Array args  = new_Type_Array_With(2, (Object)integer1);
    args->values[0] = integer0; 
    
    result = Eval_AST_Send((Object)array, SMB_objectAt_put_, args);
    assert0(result == integer1);
    assert0(array->values[0] == integer1);
    
    args->values[0] = integer2; 
    args->values[1] = integer1;
    result = Eval_AST_Send((Object)array, SMB_objectAt_put_, args);
    assert0(result == integer1);
    assert0(array->values[2] == integer1);
}


/* ======================================================================== */

void test_Type_Array() {
    RUN_TEST(Type_Array_Type_ObjectAt_);
    RUN_TEST(Type_Array_size);
    RUN_TEST(Type_Array_Type_ObjectAt_put);
}
