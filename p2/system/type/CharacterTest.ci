
#define CHARACTER_TEST_SETUP \
Type_Character chr = new_Type_Character(L'a'); \
Object result;

/* ========================================================================== */

void test_Type_Character_asType_SmallInt()
{
    CHARACTER_TEST_SETUP;
    result = Eval_AST_Send0((Object)chr, SMB_asType_SmallInt);
    ASSERT_TYPE(result, Type_SmallInt_Class);
}


void test_Type_Character_asSymbol()
{
    CHARACTER_TEST_SETUP;
    result = Eval_AST_Send0((Object)chr, SMB_asSymbol);
    ASSERT_TYPE(result, Type_Symbol_Class);
    assert0(((Type_String)result)->value[0] == chr->value);
}

void test_Type_Character_asString()
{
    CHARACTER_TEST_SETUP;
    result = Eval_AST_Send0((Object)chr, SMB_asString);
    ASSERT_TYPE(result, Type_String_Class);
    assert0(((Type_String)result)->value[0] == chr->value);
}

/* ========================================================================== */

void test_Type_Character()
{
    RUN_TEST(Type_Character_asType_SmallInt);
    RUN_TEST(Type_Character_asSymbol);
    RUN_TEST(Type_Character_asString);
}
