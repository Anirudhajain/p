#!/usr/bin/env ruby

def create_dirname(name)
    if name.size <= 3
        return name.upcase
    end
    return name.capitalize
end

def createCHSourcesAt(path)
    separator = "/* #{'=' * (79-6) } */"
    dir      = File.dirname path
    name     = File.basename path
    dirname  = File.basename dir
    fullName = "#{create_dirname(dirname)}_#{name}"
    guard    = "#{dirname.upcase}_#{name.upcase}_H"

    # create the file only if it doesn't exist yet
    sourceH                = File.open("#{path}.h",
                                       File::WRONLY|File::EXCL|File::CREAT)
    pinocchioTypeHI        = File.open("pinocchioType.hi",
                                       File::WRONLY|File::EXCL|File::APPEND)
    sourceC                = File.open("#{path}.c",
                                       File::WRONLY|File::EXCL|File::CREAT)
    pinocchioTypeIncludeHI = File.open("pinocchioTypeInclude.hi",
                                       File::WRONLY|File::EXCL|File::APPEND)
    
    # ========================================================================
    
    sourceH.puts <<CHEADER
#ifndef #{guard}
#define #{guard}

#include <pinocchio.h>

#{separator}

#define #{fullName.upcase}_SIZE -1 \\CHANGE!
#define #{fullName.upcase}_VARS L"XXX" \\CHANGE!

struct #{fullName}_t {
    #error "TODO fill out struct"
};

CREATE_INITIALIZERS(#{fullName});
extern #{fullName} new_#{fullName}();

#{separator}

#{separator}

#endif // #{guard}
CHEADER
    sourceH.close
    
    # ========================================================================

    sourceC.puts <<-CSOURCE
#include <stdlib.h>
#include <stdio.h>
#include <#{path}.h>

#{separator}

DECLARE_CLASS(#{fullName});

#{separator}

#{fullName} new_#{fullName}()
{
    #error "TODO fill in default C constructor"
}

void pre_init_#{fullName}()
{
    #{fullName}_Class = new_Class_named(Type_Object_Class, L"#{fullName}");
    REFER_TO(#{fullName});
}

#{separator}

// NATIVES GO HERE

#{separator}

void post_init_#{fullName}()
{

}
CSOURCE
    sourceC.close
    
    # ========================================================================
    
    pinocchioTypeHI.puts "TYPE(#{fullName});"
    pinocchioTypeHI.close

    pinocchioTypeIncludeHI.puts "#include <#{path}.h>"
    pinocchioTypeIncludeHI.close

    # ========================================================================
    
    File.open("pinocchioPreInit.ci", File::WRONLY|File::EXCL|File::APPEND) do |file|
        file.puts "pre_init_#{fullName}();"
    end

    File.open("pinocchioPostInit.ci", File::WRONLY|File::EXCL|File::APPEND) do |file|
        file.puts "post_init_#{fullName}();"
    end
    
    puts "Successfully created #{fullName}"
end


if $0 == __FILE__:
    $*.each { |path|
        createCHSourcesAt path  
    }
end
